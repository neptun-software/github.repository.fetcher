{
  "metadata": {
    "timestamp": 1736568689471,
    "page": 774,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pure-fish/pure",
      "stars": 1259,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2080078125,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".markdownlint.yml",
          "type": "blob",
          "size": 0.119140625,
          "content": "---\ndefault: true\nextends: null\nMD007: false\nMD013: false\nMD033:\n  allowed_elements:\n    - br\n    - img\n    - div\n    - a\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.06640625,
          "content": "## Code of Conduct\n\n* Be kind to others ;\n* Critic code not people.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1591796875,
          "content": "## :+1: Work inside a Docker\n\n!!! info\n\n    We use [`docker`](https://docs.docker.com/install/) to isolate from our working environment.\n\nSpecify the [`FISH_VERSION`][fish-releases] you want, and the `CMD` executed by the container:\n\n    make build-pure-on FISH_VERSION=3.3.1\n    make dev-pure-on FISH_VERSION=3.3.1 CMD=\"fishtape tests/*.test.fish\"\n\n## Code Conventions\n\n### Be Fishy\n\nUse the idiomatic [`test` instead of `[`](httpsc://fishshell.com/docs/current/commands.html#test) brackets (as recommended by the documentation).\n\n### Be Explicit\n\nUse **long form options**, _e.g._ `set --local`, as they are more explicit over cryptic 1-letter form.\n\n### Naming Public Item\n\n> Namespace your item with the prefix `pure_`.\n\n* Variable: `pure_my_variable`\n* Function: `pure_my_public_function`\n* Filename: `pure_my_public_file.fish`\n* Test file: `pure_my_public_file.test.fish`\n\n### Naming Private Item\n\n> Namespace your item with the prefix `_pure_` (begin with a single underscore).\n\n* Variable: `_pure_my_variable`\n* Function: `_pure_my_private_function`\n* Filename: `_pure_my_private_file.fish`\n* Test file: `_pure_my_private_file.test.fish`\n\n### Local and Tools\n\n> No need to use namespace when your variable variable is declare locally (`set --local`) or your file/test file is related to tooling (_installer.fish_, testing package managers install).\n\n* Filename: `my_tool.fish`\n* Test file: `my_tool.test.fish`\n\n### Global Variable\n\n* Public settings' default values are placed in [_conf.d/pure.fish_](conf.d/pure.fish)\n* Private settings and anything else `pure` needs to do on init are placed in [_conf.d/__pure_init.fish_](conf.d/_pure_init.fish).\n\n### Color's Variables\n\n> Base colors should follow `$pure_color_<meaning>` pattern (cf. [bootstrap naming](https://getbootstrap.com/docs/4.1/utilities/colors/)).\n\n#### Example\n\n```fish\n$pure_color_info     # cyan\n$pure_color_success  # green\n$pure_color_warning  # yellow\n$pure_color_danger   # red\n$pure_color_light\n$pure_color_dark\n$pure_color_muted    # gray\n```\n\n### Feature's Variables\n\n> Each feature should have a dedicated variables to allow customization.\n> Feature's variables (flag, symbol, color) should use `$pure_<type>_<feature>` naming pattern:\n>\n> | Role   | Name pattern             |\n> | :----- | :----------------------- |\n> | flag   | `$pure_<verb>_<feature>` |\n> | color  | `$pure_color_<feature>`  |\n> | symbol | `$pure_symbol_<feature>` |\n\n#### Example\n\n```fish\n$pure_enable_git_status\n```\n\n```fish\n$pure_symbol_git_unpushed_commits\n```\n\n```fish\n$pure_color_git_unpulled_commits\n```\n\n### Feature Flag's Variable\n\n> Name should follow `$pure_<verb>_<feature>` pattern, where:\n>\n  > * `verb` describe the action triggered by the feature (_i.e._ `separate`, `begin`, `show`, etc.) ;\n  > * `feature` descibre the _what_ of the feature (_i.e._ `prompt_on_error`, `with_current_directory`, `git_status`, etc.).\n> Value should be **a boolean**.\n  \n#### Example\n\n```fish\n$pure_begin_prompt_with_current_directory = true\n```\n\n```fish\n$pure_enable_git_async = false\n```\n\n### Avoid abbreviation\n\n> Use complete word over abbreviation.\n\n#### Example\n\n```fish\n$pure_threshold_command_duration\n```\n\n[fish-releases]: https://github.com/fish-shell/fish-shell/releases\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0830078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) Rafael Rinaldi <rafael@rinaldi.io> (rinaldi.io)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.0322265625,
          "content": "<!-- markdownlint-disable MD041 -->\n<div align=\"center\">\n\n<img src=\"https://user-images.githubusercontent.com/1212392/262604075-db5d0ad2-a7ed-4a62-a1cc-ec677cf76351.png\" width=\"61.8%\" alt=\"Pure.fish logo\"/><br>\n\n[![ci-status]][ci-link] ![fish-3] [![release-version]][release-link] [![sponsors]][sponsor-link] <!-- 0 width spaces on this line -->\n\n</div>\n\n# _Pure_  `❯❮❯`\n\n> Pretty, minimal and fast Fish 🐟 prompt, ported from [`zsh`](https://github.com/sindresorhus/pure).\n\n<div align=center>\n  <a href=\"https://camo.githubusercontent.com/be014be282ef66e5c5cad19458aa61d7df6865ecbe55bcc882e0d53580f81de9/68747470733a2f2f692e696d6775722e636f6d2f424878556f68522e706e67\" target=blank><img width=440 src=https://camo.githubusercontent.com/be014be282ef66e5c5cad19458aa61d7df6865ecbe55bcc882e0d53580f81de9/68747470733a2f2f692e696d6775722e636f6d2f424878556f68522e706e67 alt=\"Pure with dark colorscheme\"></a>\n  <a href=\"https://camo.githubusercontent.com/5934e8c1d3b5f9218d05d5e1741e23963a7803d6098236d36e586336a6c6a5b7/68747470733a2f2f692e696d6775722e636f6d2f714a646f6e716f2e706e67\" target=blank><img width=440 src=https://camo.githubusercontent.com/5934e8c1d3b5f9218d05d5e1741e23963a7803d6098236d36e586336a6c6a5b7/68747470733a2f2f692e696d6775722e636f6d2f714a646f6e716f2e706e67 alt=\"Pure with light colorscheme\"></a>\n</div>\n\n## Documentation\n\n:sparkles: Check-out our [brand-new documentation][doc] for configurations, features and colours as well as contributing guide.\n\n## :rocket: Install\n\n**:warning: requirements**: fish `≥3.x`, [fisher](https://github.com/jorgebucaran/fisher):\n\n```shell\nfisher install pure-fish/pure\n```\n\n## Features\n\nFully **customizable** (colors, symbols and features):\n\n* [Excellent prompt character `❯` 🛠][prompt-symbol]:\n\n    * [Change `❯` to red when previous command has failed 🛠][separate-error-symbol] ;\n    * [Start prompt with _current working directory_ 🏴][current-working-directory] ;\n    * [Compact-mode (single-line prompt) 🏴][single-line-prompt] ;\n  \n* [Check for new release on start 🏴🐌][check-for-new-release] ;\n* [Display _username_ and _hostname_ when in an `SSH` session 🛠][ssh-session] ;\n* [Display command _duration_ when longer than `5` seconds 🛠][time-duration] ;\n* [Display `Python` _virtualenv_ when activated 🏴🛠][python-virtualenv] ;\n* [Display `AWS` profile when set 🏴🛠][aws-profile] ;\n* [Display `VI` mode and custom symbol for non-insert mode 🏴🛠][vi-mode] ;\n* [Display `kubernetes` context and namespace 🏴🛠][kubernetes] ;\n* [Detect when running in a container (e.g. `docker`, `podman`, `LXC`/`LXD`) 🏴🛠][container-detection-docker]\n* [Indicate if a `nix develop` shell is activated 🏴🛠][nix-os].\n* [Show system time 🏴][time-duration] ;\n* [Show number of running jobs 🏴][jobs] ;\n* [Prefix when `root` 🏴🛠][working-as-root] ;\n* [Display `git` branch name 🏴🛠][git] ;\n  \n    * Display `*` when `git` repository is _dirty_ ;\n    * Display `≡` when `git` repository is _stashed_ ;\n    * Display `⇡` when branch is _ahead_ (commits to push) ;\n    * Display `⇣` when branch is _behind_ (commits to pull) ;\n    * [Async update when configured with fish-async-prompt][async] ;\n\n* [Update terminal title with _current folder_ and _command_ 🛠][title] ;\n* [Shorten or truncate _current folder_ component 🏴🛠][current-working-directory] ;\n* and more…\n\n🏴 means it's controlled by a feature flag, 🛠 mean it's configurable.\n\n## Configuration\n\nSee [How to configure pure prompt?][configure]\n\n## Features' Flags\n\nSee [Features and their respective options][features].\n\n## :heart: Contribute\n\nIf you have any ideas or suggestions, we encourage you to submit a pull request. Our team will review and discuss your contribution.\n\nCheckout our [Contribution Guide][contribution] to get familiar with our conventions and requirements.\n\n## :man_technologist: People\n\n* [Édouard Lopez](https://github.com/edouard-lopez) product lead ;\n* [@andreiborisov](https://github.com/andreiborisov) for the [docker images][docker-images] ;\n* [@jorgebucaran](https://github.com/jorgebucaran/) for [fishtape](https://github.com/jorgebucaran/fishtape) ;\n* [@rafaelrinaldi](https://github.com/rafaelrinaldi) for starting the project and publishing the initial releases\n\n## [MIT][MIT]  License\n\n## Ports\n\n* Original [sindresorhus/pure](https://github.com/sindresorhus/pure) Zsh implementation ;\n* :fish: [pure-fish/pure](https://github.com/pure-fish/pure/) Fish implementation (features rich) ;\n* :snake: [edouard-lopez/pure.py](https://github.com/edouard-lopez/pure.py/) Python implementation  (partial features) ;\n* :goat: [edouard-lopez/pure.go](https://github.com/edouard-lopez/pure.go/) Golang implementation  (partial features) ;\n* :gear: [xcambar/purs](https://github.com/xcambar/purs) Rust implementation ;\n* :window: [nickcox/pure-pwsh](https://github.com/nickcox/pure-pwsh/) PowerShell implementation.\n* :shell: [krashikiworks/pure-prompt-bash](https://github.com/krashikiworks/pure-prompt-bash) Bash implementation.\n\n\n[doc]: https://pure-fish.github.io/pure/\n[configure]: https://pure-fish.github.io/pure/#configuration\n[features]: https://pure-fish.github.io/pure/#overview\n[contribution]:https://pure-fish.github.io/pure/contributing/\n\n[ci-link]: <https://github.com/pure-fish/pure/actions> \"Github CI\"\n[ci-status]: https://img.shields.io/github/actions/workflow/status/pure-fish/pure/.github/workflows/ci.yml?style=flat-square\n\n[fish-3]: <https://img.shields.io/badge/fish-v3-007EC7.svg?style=flat-square> \"Support Fish 3\"\n[docker-images]: https://github.com/andreiborisov/docker-fish/\n[MIT]: LICENSE.md\n\n[release-version]: https://img.shields.io/github/v/tag/pure-fish/pure?label=latest%20&style=flat-square\n[release-link]: https://github.com/pure-fish/pure/releases \"GitHub tag (latest SemVer)\"\n[sponsors]: https://img.shields.io/github/sponsors/edouard-lopez?label=💰&style=flat-square \"GitHub Sponsors\"\n[sponsor-link]: https://github.com/sponsors/edouard-lopez/ \"Become a sponsor\"\n\n[async]: https://github.com/pure-fish/pure/wiki/Async-git-Prompt\n[check-for-new-release]: https://pure-fish.github.io/pure/#check-for-new-release\n[container-detection-docker]: https://pure-fish.github.io/pure/#container-detection-docker\n[current-working-directory]: https://pure-fish.github.io/pure/#current-working-directory\n[git]: https://pure-fish.github.io/pure/#git\n[jobs]: https://pure-fish.github.io/pure/#jobs\n[kubernetes]: https://pure-fish.github.io/pure/#kubernetes\n[nix-os]: https://pure-fish.github.io/pure/#nix-os\n[prompt-symbol]: https://pure-fish.github.io/pure/#prompt-symbol\n[python-virtualenv]: https://pure-fish.github.io/pure/#python-virtualenv\n[aws-profile]: https://pure-fish.github.io/pure/#aws-profile\n[separate-error-symbol]: https://pure-fish.github.io/pure/#separate-error-symbol\n[single-line-prompt]: https://pure-fish.github.io/pure/#single-line-prompt\n[ssh-session]: https://pure-fish.github.io/pure/#ssh-session\n[time-duration]: https://pure-fish.github.io/pure/#time-duration\n[title]: https://pure-fish.github.io/pure/#title\n[vi-mode]: https://pure-fish.github.io/pure/#vi-mode\n[working-as-root]: https://pure-fish.github.io/pure/#working-as-root\n"
        },
        {
          "name": "conf.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 2.955078125,
          "content": "#!/usr/bin/make -sf\n\n# force use of Bash\nSHELL := /usr/bin/env bash\nINTERACTIVE=true\n\n\n.PHONY: default\ndefault: usage\nusage:\n\t@printf \"usage:\"\n\t@printf \"\\tmake build-pure-on FISH_VERSION=3.3.1\\t# build container\\n\"\n\t@printf \"\\tmake test-pure-on  FISH_VERSION=3.3.1\\t# run tests\\n\"\n\t@printf \"\\tmake dev-pure-on   FISH_VERSION=3.3.1\\t# dev in container\\n\"\n\n.PHONY: build-pure-on\nbuild-pure-on: STAGE?=only-fish\nbuild-pure-on:\n\tdocker build \\\n\t\t--quiet \\\n\t\t--file ./docker/Dockerfile \\\n\t\t--target ${STAGE} \\\n\t\t--build-arg FISH_VERSION=${FISH_VERSION} \\\n\t\t--tag=pure-${STAGE}-${FISH_VERSION} \\\n\t\t--load \\\n\t\t./\n\n.PHONY: dev-pure-on\ndev-pure-on: CMD?=fish\ndev-pure-on: STAGE?=with-pure-source\ndev-pure-on:\n\tchmod o=rwx tests/fixtures/ # for migration-to-4.0.0.test.fish only\n\tdocker run \\\n\t\t--name dev-pure-on-${FISH_VERSION} \\\n\t\t--rm \\\n\t\t--interactive \\\n\t\t--tty \\\n\t\t--volume=$$(pwd):/home/nemo/.config/fish/pure/ \\\n\t\t--workdir /home/nemo/.config/fish/pure/ \\\n\t\tpure-${STAGE}-${FISH_VERSION} \"${CMD}\"\n\tchmod o=r-x tests/fixtures/ # for migration-to-4.0.0.test.fish only\n\n.PHONY: test-pure-on\ntest-pure-on: CMD?=fishtape tests/*.test.fish\ntest-pure-on: STAGE?=with-pure-source\ntest-pure-on: build-with-pure-source\n\tdocker run \\\n\t\t--name test-pure-on-${FISH_VERSION} \\\n\t\t--rm \\\n\t\t--tty \\\n\t\tpure-${STAGE}-${FISH_VERSION} \"${CMD}\"\n\n.PHONY: build-with-pure-source\nbuild-with-pure-source:\n\t$(MAKE) build-pure-on FISH_VERSION=${FISH_VERSION} STAGE=with-pure-source\n\n.PHONY: dev-with-pure-installed\ndev-with-pure-installed:\n\t$(MAKE) build-pure-on FISH_VERSION=${FISH_VERSION} STAGE=with-pure-installed\n\t$(MAKE) dev-pure-on FISH_VERSION=${FISH_VERSION} STAGE=with-pure-installed\n\n\nbuild-pure-on-nix: STAGE?=nix\nbuild-pure-on-nix:\n\tdocker build \\\n\t\t--file ./docker/${STAGE}.Dockerfile \\\n\t\t--build-arg FISH_VERSION=${FISH_VERSION} \\\n\t\t--tag=pure-${STAGE}-${FISH_VERSION} \\\n\t\t--load \\\n\t\t./\n\ndev-pure-on-nix: STAGE?=nix\ndev-pure-on-nix: CMD?=fish\ndev-pure-on-nix: TTY?=--tty\ndev-pure-on-nix:\n\tchmod o=rwx ./tests/fixtures/ # for migration-to-4.0.0.test.fish only\n\tdocker run \\\n\t\t--name dev-pure-on-${FISH_VERSION} \\\n\t\t--rm \\\n\t\t--interactive \\\n\t\t${TTY} \\\n\t\t--volume=$$(pwd):/tmp/.pure/ \\\n\t\t--workdir /tmp/.pure/ \\\n\t\tpure-${STAGE}-${FISH_VERSION} \"${CMD}\"\n\tchmod o=r-x ./tests/fixtures/ # for migration-to-4.0.0.test.fish only\n\ntest-pure-on-nix: CMD?=fishtape tests/*.test.fish\ntest-pure-on-nix:\n\t$(MAKE) dev-pure-on-nix CMD=\"${CMD}\" TTY=\n\n\nbuild-pure-doc:\n\tdocker build \\\n\t\t--file ./docker/doc.Dockerfile \\\n\t\t--tag=pure-doc \\\n\t\t--load \\\n\t\t./\n\nserve-pure-doc:\n\tdocker run \\\n\t\t--name mkdocs \\\n\t\t--tty \\\n\t\t--interactive \\\n\t\t--rm \\\n\t\t--publish 8000:8000 \\\n\t\t--volume=$$(pwd):/docs \\\n\t\tpure-doc\n\n\n.PHONY: build-pure-screenshot\nbuild-pure-screenshot:\n\t$(MAKE) build-pure-on FISH_VERSION=${FISH_VERSION} STAGE=with-terminal-screenshot-installed\n\n\n.PHONY: run-pure-screenshot\nrun-pure-screenshot: CMD?=fishtape tests/*.test.fish\nrun-pure-screenshot:\n\t$(MAKE) dev-pure-on FISH_VERSION=${FISH_VERSION} STAGE=with-terminal-screenshot-installed CMD=\"${CMD}\"\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 2.3935546875,
          "content": "---\nsite_name: \"Pure.fish Documentation\"\nsite_description: \" Pretty, minimal and fast Fish 🐟 prompt\"\nsite_author: \"Édouard Lopez\"\ndocs_dir: docs/\nrepo_name: \"pure-fish/pure\"\nrepo_url: \"https://github.com/pure-fish/pure\"\n\nnav:\n  - Home: index.md\ntheme:\n  name: \"material\"\n  include_sidebar: true\n  features:\n    - content.action.edit\n    - content.code.copy\n    - navigation.expand\n    - navigation.footer\n    - navigation.indexes\n    - navigation.instant\n    - navigation.instant\n    - navigation.instant.progress\n    - navigation.path\n    - navigation.sections\n    - navigation.tabs\n    - navigation.top\n    - navigation.tracking\n    - search.suggest\n    - search.highlight\n\n  logo: ./assets/favicon.png\n  favicon: ./assets/favicon.png\n\n  icon:\n    repo: fontawesome/brands/github\n    admonition:\n      note: octicons/tag-16\n      abstract: octicons/checklist-16\n      info: octicons/info-16\n      tip: octicons/light-bulb-16\n      success: octicons/check-16\n      question: octicons/question-16\n      warning: octicons/alert-16\n      failure: octicons/x-circle-16\n      danger: octicons/zap-16\n      bug: octicons/bug-16\n      example: octicons/beaker-16\n      quote: octicons/quote-16\n\n  palette:\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: deep purple\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: purple\n      toggle:\n        icon: material/brightness-2\n        name: Switch to light mode\n\n  font:\n    text: Roboto\n    code: Roboto Mono\n\nmarkdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n  - toc:\n      permalink: true\n      toc_depth: 3\n\nextra:\n  social:\n    - icon: fontawesome/brands/mastodon\n      link: https://piaille.fr/@edouard_lopez\n    - icon: fontawesome/brands/twitter\n      link: https://twitter.com/edouard_lopez\n    - icon: fontawesome/brands/github\n      link: https://github.com/pure-fish/pure/\n\nextra_css:\n  - stylesheets/extra.css\n\nplugins:\n  - search\n  - awesome-pages\n  - include-markdown\n  - git-authors\n"
        },
        {
          "name": "notes.md",
          "type": "blob",
          "size": 0.416015625,
          "content": "## Build\n\n```sh\ndocker build \\\n      --file ./nix.Dockerfile \\\n      --tag=pure-on-nix \\\n      ./\n```\n\n## Run\n\n```sh\ndocker run \\\n    --interactive \\\n    --tty \\\n    --rm \\\n    --volume=(pwd):/tmp/.pure/ \\\n    pure-on-nix\n    fish\n```\n\n## Tests\n\nA failing test\n\n```sh\ndocker run \\\n    --interactive \\\n    --tty \\\n    --rm \\\n    --volume=(pwd):/tmp/.pure/ \\\n    pure-on-nix \\\n    \"tests/_pure_prefix_root_prompt.test.fish\"\n```\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}