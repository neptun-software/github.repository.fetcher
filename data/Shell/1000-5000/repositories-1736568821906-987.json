{
  "metadata": {
    "timestamp": 1736568821906,
    "page": 987,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjk5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "julien-duponchelle/docker-osx",
      "stars": 1023,
      "defaultBranch": "master",
      "files": [
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 0.2333984375,
          "content": "docker-osx Hacking\n===================\n\n## Build Vagrant image\n\nThe image is built using this Packer script:\n\nhttps://github.com/mitchellh/packer-ubuntu-12.04-docker\n\nFor example:\n\n    $ packer build -only virtualbox,vmware template.json\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9404296875,
          "content": "docker-osx\n==========\n\n# WARNING THIS PROJECT IS DEPRECATED\n\nThis project was started before official docker support on Mac OS X. You need to use now the offical way from Docker team: https://docs.docker.com/docker-for-mac/. \n\nIt's better, faster, stronger.\n\n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n# DEPRECATED \n\n# What is docker-osx\n\nDocker on OS X in three steps:\n\n1. Install [VirtualBox](https://www.virtualbox.org/wiki/Downloads) and [Vagrant](http://www.vagrantup.com/downloads.html).\n\n2. Put the `docker-osx` script somewhere on your path:\n\n with [bpkg](https://github.com/bpkg/bpkg):\n\n      bpkg install noplay/docker-osx\n\n or curl:\n\n        curl https://raw.githubusercontent.com/noplay/docker-osx/HEAD/docker-osx > /usr/local/bin/docker-osx\n        chmod +x /usr/local/bin/docker-osx\n\n3. Run:\n\n        docker-osx shell\n        docker version\n\n\nThis script acts as both an installer and as Virtual machine manager. On first run, it installs an OS X binary of the Docker client and starts a virtual machine with the Docker daemon running. It then sets up the shell environment so the Docker client knows to talk to the Docker daemon on the virtual machine.\n\nThe virtual machine that Docker runs on is given the hostname `localdocker`. For example, if you run `docker run -p 8000:8000 ...`, then that will be available at `localdocker:8000` from OS X.\n\n## Additional commands\n\n`docker-osx` provide additional commands as shortcuts for controlling the Vagrant VM:\n\n### docker-osx start\n\nStart the local Virtual Machine\n\n### docker-osx ssh\n\nOpen a console on the Vagrant virtual machine.\n\n### docker-osx destroy\n\nDestroy the local Virtual Machine\n\n### docker-osx halt\n\nStop the Vagrant VM. You'll probably want to do this after you've finished working with Docker project to save RAM.\n\n### docker-osx shell\n\nStart the virtual machine and open a shell with DOCKER_HOST environment variable configured.\n\n\n## Override defaults\n\nThe docker-osx script has several options that can be overridden by adding a\nnew file `$HOME/.docker-osx/defaults`. When docker-osx starts the VM, it will\nsource this file.\n\nWhen modifying the defaults for docker-osx, currently, it is best to destroy\nany already-created VM and configure a new one with the changes.\n\nAn example `defaults` file follows:\n\n```bash\n# $HOME/.docker-osx/defaults\nDOCKER_IP=192.168.228.10\n```\n\n### DOCKER_BIN\n\nThe installed location of the docker client.\n\nDefault: `/usr/local/bin/docker`\n\n### DOCKER_IP\n\nThe IP that the docker host will be mapped to on your machine.\n\nDefault: `172.16.42.43`\n\n### DOCKER_DOMAIN\n\nThe domain name added to `/etc/hosts`, pointing at the `DOCKER_IP`.\n\nDefault: `localdocker`\n\n### DOCKER_PORT\n\nThe port that docker will be listening on.\n\nDefault: `4243`\n\n### DOCKER_VERSION\n\nThe version of docker that will be installed when provisioning the vagrant vm.\n\nDefault: `1.2.0`\n\n### DOCKER_CLIENT_URL\n\nThe URL used to download the docker client.\n\nDefault: <http://get.docker.io/builds/Darwin/x86_64/docker-${DOCKER_VERSION}.tgz>\n\n### VAGRANT_BOX_URL\n\nThe URL used to download the vagrant box.\n\nDefault: <https://bfirsh.s3.amazonaws.com/docker/vagrant/vagrant-docker-0.8.0-virtualbox.box>\n\n## Contributors\n\n* [Julien Duponchelle](https://github.com/noplay/) – Original author\n* [Ben Firshman](https://github.com/bfirsh) – Faster and simpler installation with Vagrant image and pre-built binary\n\n\n## Licence\n\nCopyright 2013 Julien Duponchelle\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n"
        },
        {
          "name": "docker-osx",
          "type": "blob",
          "size": 7.2197265625,
          "content": "#!/bin/bash\n#\n# docker-osx\n# ==========\n#\n# Easy installation of Docker on OS X\n# https://github.com/noplay/docker-osx\n#\n# Copyright 2013 Julien Duponchelle\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n# file except in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under\n# the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n# either express or implied. See the License for the specific language governing permissions\n# and limitations under the License.\n\nset -e\n\nexport VAGRANT_CWD=\"$HOME/.docker-osx\"\n\nDOCKER_IP=\"172.16.42.43\"\nDOCKER_DOMAIN=\"localdocker\"\nDOCKER_PORT=\"4243\"\n\nDOCKER_VERSION=\"1.2.0\"\n\nDOCKER_BIN=\"/usr/local/bin/docker\"\n\nDOCKER_DEFAULTS_FILE=\"$VAGRANT_CWD/defaults\"\n\nif [ -f \"$DOCKER_DEFAULTS_FILE\" ]\nthen\n    . \"$DOCKER_DEFAULTS_FILE\"\nfi\n\nif [ -z \"$DOCKER_CLIENT_URL\" ]\nthen\n    DOCKER_CLIENT_URL=\"http://get.docker.io/builds/Darwin/x86_64/docker-${DOCKER_VERSION}.tgz\"\nfi\nif [ -z \"$VAGRANT_BOX_URL\" ]\nthen\n    VAGRANT_BOX_URL=\"https://bfirsh.s3.amazonaws.com/docker/vagrant/vagrant-docker-0.8.0-virtualbox.box\"\nfi\nexport DOCKER_HOST=\"tcp://$DOCKER_IP:$DOCKER_PORT\"\n\n##########\nfunction setup_etc_host {\n  if [ -f \"$VAGRANT_CWD/.localdocker-host\" ] && [ `cat \"$VAGRANT_CWD/.localdocker-host\"` = \"0\" ]\n  then\n    return\n  fi\n  if ! grep -q localdocker /etc/hosts\n  then\n    echo \"Adding localdocker to /etc/hosts (may need your password for sudo)...\"\n\n    echo \"If you want you can add it manually by adding:\"\n    echo \"$DOCKER_IP localdocker add the end of the /etc/hosts\"\n    echo \"\"\n    echo \"Or you can just ignore it and directly use the ip: $DOCKER_IP\"\n\n    read -p \"Add the localdocker host to system configuration? [y/n] \" -n 1 -r\n    echo    # move to a new line\n    if [[ $REPLY =~ ^[Yy]$ ]]\n    then\n      sudo sh -c \"echo '$DOCKER_IP $DOCKER_DOMAIN' >> /etc/hosts\"\n      echo -n 1 > \"$VAGRANT_CWD/.localdocker-host\" # We need to check the /etc/hosts at each launch\n    else\n      echo -n 0 > \"$VAGRANT_CWD/.localdocker-host\" # We never check the /etc/hosts at launch\n    fi\n  fi\n}\n\nfunction help() {\n  echo \"docker-osx commands:\"\n  echo \"  start     Start local docker virtual machine\"\n  echo \"  halt      Halt docker daemon and virtual machine\"\n  echo \"  suspend   Suspend local docker virtual machine\"\n  echo \"  status    Outputs status of the local docker virtual machine\"\n  echo \"  destroy   Destroy local docker virtual machine\"\n  echo \"  clear     Remove all docker images and (running) containers\"\n  echo \"  vagrant   Issue subcommands directly to the vagrant CLI\"\n  echo \"  ssh       Open SSH console on vagrant box\"\n  echo \"  env       Outputs environment variables for Docker to connect remotely\"\n  echo \"  shell     Open a shell with Docker VM started and environment set\"\n  echo \"\"\n}\n\nfunction start_vm() {\n    # Start virtual machine if it isn't running\n    if ! vagrant status | grep -q running\n    then\n      if [[ $1 == \"halt\" ]]\n      then\n        echo \"Docker is not running. Exiting\"\n        exit 0\n      fi\n      echo \"Start Docker Virtual machine\"\n      vagrant up --provision\n      vagrant ssh -c \"sudo stop docker; sudo start docker\"\n    fi\n}\n\n############\n\n# Determine currently installed version of Docker\nINSTALLED_DOCKER_VERSION=\"\"\nif [ -f \"$VAGRANT_CWD/.docker-version\" ]\nthen\n  INSTALLED_DOCKER_VERSION=`cat \"$VAGRANT_CWD/.docker-version\"`\nfi\n\n# Check that dependencies are installed\nif ! hash vagrant 2>/dev/null\nthen\n  echo \"You need VirtualBox and Vagrant to use docker-osx.\"\n  echo\n  echo \"You can download VirtualBox from:\"\n  echo \"https://www.virtualbox.org/wiki/Downloads\"\n  echo\n  echo \"You can download Vagrant from:\"\n  echo \"http://www.vagrantup.com/downloads.html\"\n  exit 1\nfi\n\n# Set up Vagrant directory\nif [ ! -d \"$VAGRANT_CWD\" ]\nthen\n  mkdir \"$VAGRANT_CWD\"\nfi\n\n# --force-confdef to not ask about overwriting /etc/default/docker\nINSTALL_UPDATE_DOCKER=\"apt-get update -qq; apt-get install -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' lxc-docker-$DOCKER_VERSION\"\n\n\ncat > \"$VAGRANT_CWD/Vagrantfile\" <<EOL\n# automatically generated by docker-osx\n# do not edit this file - find the template in docker-osx script instead!\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"docker-0.8.0\"\n  config.vm.box_url = \"$VAGRANT_BOX_URL\"\n\n  config.ssh.forward_agent = true\n  config.vm.network \"private_network\", :ip => \"$DOCKER_IP\"\n  config.vm.provision :shell, :inline => \"$INSTALL_UPDATE_DOCKER\"\n  config.vm.provision :shell, :inline => \"echo 'export DOCKER_OPTS=\\\"-H unix:///var/run/docker.sock -H tcp://0.0.0.0:$DOCKER_PORT\\\"' >> /etc/default/docker\"\n  config.vm.synced_folder \"$(echo ~)\", \"$(echo ~)\", :create => true, mount_options: [\"dmode=777,fmode=776\"]\n\n  config.vm.provider :virtualbox do |vb|\n    vb.customize ['modifyvm', :id, '--memory', ENV['VM_MEMORY'] || 1024]\n    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']\n    vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']\n  end\n\n  vagrantfile_extra = \"#{ENV['VAGRANT_CWD']}/Vagrantfile_extra.rb\"\n  eval File.open(vagrantfile_extra).read if File.exists?(vagrantfile_extra)\nend\nEOL\n\nsetup_etc_host\n\n# Download Docker client if it doesn't exist or needs updating\nif [[ ! -f \"$DOCKER_BIN\" || $INSTALLED_DOCKER_VERSION != $DOCKER_VERSION ]]\nthen\n  echo \"Installing Docker $DOCKER_VERSION client...\"\n  destdir=`dirname \"$DOCKER_BIN\"`\n  destname=`basename \"$DOCKER_BIN\"`\n  mkdir -p \"$destdir\"\n  curl \"$DOCKER_CLIENT_URL\" > /tmp/docker-osx-client.tgz\n  tar -xzf /tmp/docker-osx-client.tgz -C \"$destdir\" -s /docker/\"$destname\"/ --strip-components 3 usr/local/bin/docker\n  chmod +x \"$DOCKER_BIN\"\nfi\n\n\n# Set current installed Docker version\necho $DOCKER_VERSION > $VAGRANT_CWD/.docker-version\n\ncase \"$1\" in\n  up|start)\n    start_vm\n    echo\n    echo \"The virtual machine with the docker daemon is now running.\"\n    echo \"When you are finished and want to shut it down, just run:\"\n    echo\n    echo \"  docker-osx halt\"\n    echo\n    echo \"To use docker, point the DOCKER_HOST environment variable\"\n    echo \"to the docker daemon running on the virtual machine:\"\n    echo\n    echo \"  eval \\`docker-osx env\\`\"\n    echo\n    echo \"Put this in your .profile to make it permanent.\"\n    #echo \"(Alternatively, pass -H=$DOCKER_HOST on the command line.)\"\n    echo\n    echo \"Then, just use the docker command from OS X directly.\"\n    echo\n    exit 0\n    ;;\n  destroy)\n    shift\n    exec vagrant destroy \"$@\"\n    ;;\n  clear)\n    docker kill $(docker ps -q) 2> /dev/null\n    docker rm $(docker ps -a -q) 2> /dev/null\n    docker rmi $(docker images -q) 2> /dev/null\n    ;;\n  ssh)\n    start_vm\n    shift\n    exec vagrant ssh \"$@\"\n    ;;\n  stop|halt)\n    shift\n    exec vagrant halt \"$@\"\n    ;;\n  help)\n    help\n    exit 0\n    ;;\n  \"\")\n    help\n    exit 0\n    ;;\n  shell)\n    echo \"Starting local Docker environment...\"\n    start_vm\n    $SHELL\n    echo \"Stopping local Docker environment...\"\n    exec vagrant halt\n    ;;\n  env)\n    echo \"export DOCKER_HOST=$DOCKER_HOST\"\n    exit 0\n    ;;\n  vagrant)\n    shift\n    exec vagrant $*\n    ;;\n  status)\n    exec vagrant status\n    ;;\n  suspend|pause)\n    exec vagrant suspend\n    ;;\n  *)\n    echo \"Unrecognised command: $1\"\n    echo\n    help\n    exit 1\n    ;;\nesac\n\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.2138671875,
          "content": "{\n  \"name\": \"docker-osx\",\n  \"version\": \"1.2.0\",\n  \"description\": \"Fast and easy installation of Docker on OS X\",\n  \"global\": \"true\",\n  \"install\": \"chmod +x docker-osx && install docker-osx ${PREFIX:-/usr/local}/bin\"\n}\n\n"
        }
      ]
    }
  ]
}