{
  "metadata": {
    "timestamp": 1736568350704,
    "page": 272,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "megastep/makeself",
      "stars": 2339,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "_site\n*.run\n.*-cache/\nrelease/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0859375,
          "content": "[submodule \"test/shunit2\"]\n\tpath = test/shunit2\n\turl = https://github.com/kward/shunit2\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.2880859375,
          "content": ".PHONY: all clean test help\n\nVERSION := $(shell cat VERSION)\nOUTPUT  := makeself-$(VERSION).run\n\nall: $(OUTPUT)\n\n$(OUTPUT): makeself.sh makeself-header.sh VERSION\n\t./make-release.sh\n\nclean:\n\t$(RM) makeself-*.run\n\ntest:\n\t./test/run-tests.sh\n\nhelp:\n\t$(info Targets: all $(OUTPUT) clean test help)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.916015625,
          "content": "[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\n![Build Status](https://github.com/megastep/makeself/workflows/CI/badge.svg)\n\n# makeself - Make self-extractable archives on Unix\n\n[makeself.sh][1] is a small shell script that generates a self-extractable\ncompressed tar archive from a directory. The resulting file appears as a shell script\n(many of those have a **.run** suffix), and can be launched as is. The archive\nwill then uncompress itself to a temporary directory and an optional arbitrary\ncommand will be executed (for example an installation script). This is pretty\nsimilar to archives generated with WinZip Self-Extractor in the Windows world.\nMakeself archives also include checksums for integrity self-validation (CRC\nand/or MD5/SHA256 checksums).\n\nThe makeself.sh script itself is used only to create the archives from a\ndirectory of files. The resultant archive is actually a compressed (using\ngzip, bzip2, or compress) TAR archive, with a small shell script stub at the\nbeginning. This small stub performs all the steps of extracting the files,\nrunning the embedded command, and removing the temporary files when done.\nAll the user has to do to install the software contained in such an\narchive is to \"run\" the archive, i.e **sh nice-software.run**. I recommend\nusing the \".run\" (which was introduced by some Makeself archives released by\nLoki Software) or \".sh\" suffix for such archives not to confuse the users,\nso that they will know they are actually shell scripts (with quite a lot of binary data\nattached to them though!).\n\nI am trying to keep the code of this script as portable as possible, i.e it is\nnot relying on any bash-specific features and only calls commands that are\ninstalled on any functioning UNIX-compatible system. This script as well as\nthe archives it generates should run on any Unix flavor, with any compatible\nBourne shell, provided of course that the compression programs are available.\n\nMakeself has been rewritten and tested on the following platforms :\n\n* Linux (all distributions)\n* Sun Solaris (8 and above)\n* HP-UX (tested on 11.0 and 11i on HPPA RISC)\n* SCO OpenUnix and OpenServer\n* IBM AIX\n* macOS (Darwin)\n* SGI IRIX 6.5\n* FreeBSD\n* OpenBSD\n* NetBSD\n* UnicOS / Cray\n* Windows (Cygwin, WSL)\n\nIf you successfully run Makeself and/or archives created with it on another\nsystem, then please [let me know][2]!\n\nExamples of publicly available archives made using makeself are :\n\n* Game patches and installers for [Id Software][3] games like Quake 3 for Linux or Return To Castle Wolfenstein ;\n* All game patches released by [Loki Software][4] for the Linux version of popular games ;\n* The [nVidia drivers][5] for Linux\n* The installer for the Linux version of [Google Earth][6]\n* The [VirtualBox][7] installers for Linux\n* The [Makeself][1] distribution itself ;-)\n* and countless others...\n\n**Important note for Apache users:** By default, most Web servers will think that Makeself archives are regular text files and thus they may show up as text in a Web browser. The correct way to prevent this is to add a MIME type for this file format, like so (in httpd.conf) :\n\n`AddType application/x-makeself .run`\n\n**Important note for certain GNU/Linux distributions:** Archives created with Makeself prior to v2.1.2 were using an old syntax for the _head_ and _tail_ Unix commands that is being progressively obsoleted in their GNU forms. Therefore you may have problems uncompressing some of these archives. A workaround for this is to set the environment variable $_POSIX2_VERSION to enable the old syntax, i.e. :\n\n`export _POSIX2_VERSION=199209`\n\n## Usage\n\nThe syntax of makeself is the following:\n\n```sh\nmakeself.sh [args] archive_dir file_name label startup_script [script_args]\n```\n\n  * _args_ are optional options for Makeself. The available ones are :\n\n    * **`--version`** : Prints the version number on stdout, then exits immediately\n    * **`--gzip`** : Use gzip for compression (the default on platforms on which gzip is commonly available, like Linux)\n    * **`--bzip2`** : Use bzip2 instead of gzip for better compression. The bzip2 command must be available in the command path. It is recommended that the archive extension be set to something like '.bz2.run', so that potential users know that they'll need bzip2 to extract it.\n    * **`--bzip3`** : Use bzip3 instead of gzip for better compression.\n    * **`--pbzip2`** : Use pbzip2 instead of gzip for better and faster compression on machines having multiple CPUs. The pbzip2 command must be available in the command path. It is recommended that the archive extension be set to something like '.bz2.run', so that potential users know that they'll need bzip2 to extract it.\n    * **`--xz`** : Use xz instead of gzip for better compression. The xz command must be available in the command path. It is recommended that the archive extension be set to something like '.xz.run' for the archive, so that potential users know that they'll need xz to extract it.\n    * **`--lzo`** : Use lzop instead of gzip for better compression. The lzop command must be available in the command path. It is recommended that the archive extension be set to something like `.lzo.run` for the archive, so that potential users know that they'll need lzop to extract it.\n    * **`--lz4`** : Use lz4 instead of gzip for better compression. The lz4 command must be available in the command path. It is recommended that the archive extension be set to something like '.lz4.run' for the archive, so that potential users know that they'll need lz4 to extract it.\n    * **`--zstd`** : Use zstd instead of gzip for better compression. The zstd command must be available in the command path. It is recommended that the archive extension be set to something like '.zstd.run' for the archive, so that potential users know that they'll need zstd to extract it.\n    * **`--pigz`** : Use pigz for compression.\n    * **`--base64`** : Encode the archive to ASCII in Base64 format instead of compressing (base64 command required).\n    * **`--gpg-encrypt`** : Encrypt the archive using `gpg -ac -z $COMPRESS_LEVEL`. This will prompt for a password to encrypt with. Assumes that potential users have `gpg` installed.\n    * **`--ssl-encrypt`** : Encrypt the archive using `openssl aes-256-cbc -a -salt`. This will prompt for a password to encrypt with. Assumes that the potential users have the OpenSSL tools installed.\n    * **`--compress`** : Use the UNIX `compress` command to compress the data. This should be the default on all platforms that don't have gzip available.\n    * **`--nocomp`** : Do not use any compression for the archive, which will then be an uncompressed TAR.\n    * **`--complevel`** : Specify the compression level for gzip, bzip2, pbzip2, zstd, xz, lzo or lz4. (defaults to 9)\n    * **`--threads`** : Specify the number of threads to be used by compressors that support parallelization. Omit to use compressor's default. Most useful (and required) for opting into xz's threading, usually with `--threads=0` for all available cores. pbzip2 and pigz are parallel by default, and setting this value allows limiting the number of threads they use.\n    * **`--notemp`** : The generated archive will not extract the files to a temporary directory, but in a new directory created in the current directory. This is better to distribute software packages that may extract and compile by themselves (i.e. launch the compilation through the embedded script).\n    * **`--current`** : Files will be extracted to the current directory, instead of in a subdirectory. This option implies `--notemp` above.\n    * **`--follow`** : Follow the symbolic links inside of the archive directory, i.e. store the files that are being pointed to instead of the links themselves.\n    * **`--append`** _(new in 2.1.x)_: Append data to an existing archive, instead of creating a new one. In this mode, the settings from the original archive are reused (compression type, label, embedded script), and thus don't need to be specified again on the command line.\n    * **`--header`** : Makeself uses a separate file to store the header stub, called `makeself-header.sh`. By default, it is assumed that it is stored in the same location as makeself.sh. This option can be used to specify its actual location if it is stored someplace else.\n    * **`--preextract`** : Specify a pre-extraction script. The script is executed with the same environment and initial `script_args` as `startup_script`.\n    * **`--cleanup`** : Specify a script that is run when execution is interrupted or finishes successfully. The script is executed with the same environment and initial `script_args` as `startup_script`. \n    * **`--copy`** : Upon extraction, the archive will first extract itself to a temporary directory. The main application of this is to allow self-contained installers stored in a Makeself archive on a CD, when the installer program will later need to unmount the CD and allow a new one to be inserted. This prevents \"Filesystem busy\" errors for installers that span multiple CDs.\n    * **`--nox11`** : Disable the automatic spawning of a new terminal in X11.\n    * **`--nowait`** : When executed from a new X11 terminal, disable the user prompt at the end of the script execution.\n    * **`--nomd5`** and **`--nocrc`** : Disable the creation of a MD5 / CRC checksum for the archive. This speeds up the extraction process if integrity checking is not necessary.\n    * **`--sha256`** : Adds a SHA256 checksum for the archive. This is in addition to the MD5 / CRC checksums unless `--nomd5` is also used.\n    * **`--lsm` _file_** : Provide a Linux Software Map (LSM) file to makeself, that will be embedded in the generated archive. LSM files are describing a software package in a way that is easily parseable. The LSM entry can then be later retrieved using the `--lsm` argument to the archive.\n    * **`--tar-format opt`** : Specify the tar archive format (default is ustar); you may use any value accepted by your tar command (such as posix, v7, etc).\n    * **`--tar-extra opt`** : Append more options to the tar command line.\n\n        For instance, in order to exclude the `.git` directory from the packaged archive directory using the GNU `tar`, one can use `makeself.sh --tar-extra \"--exclude=.git\" ...`\n\n    * **`--target dir`** : Specify the directory where the archive will be extracted.\n    * **`--keep-umask`** : Keep the umask set to shell default, rather than overriding when executing the self-extracting archive.\n    * **`--packaging-date date`** : Use provided string as the packaging date instead of the current date.\n    * **`--license` _file_** : Append a license file.\n    * **`--nooverwrite`** : Do not extract the archive if the specified target directory already exists.\n    * **`--help-header` _file_** : Add a header to the archive's `--help` output.\n  * `archive_dir` is the name of the directory that contains the files to be archived\n  * `file_name` is the name of the archive to be created\n  * `label` is an arbitrary text string describing the package. It will be displayed while extracting the files.\n  * `startup_script` is the command to be executed _from within_ the directory of extracted files. Thus, if you wish to execute a program contained in this directory, you must prefix your command with `./`. For example, `./program` will be fine. The `script_args` are additional arguments for this command.\n  Note that `startup_script` and its arguments are not strictly required for archives that don't extract in a temporary directory (i.e. when using `--notemp`).\n\nHere is an example, assuming the user has a package image stored in a **/home/joe/mysoft**, and he wants to generate a self-extracting package named\n**mysoft.sh**, which will launch the \"setup\" script initially stored in /home/joe/mysoft :\n\n```sh\nmakeself.sh /home/joe/mysoft mysoft.sh \"Joe's Nice Software Package\" ./setup\n```\n\nHere is also how I created the [makeself.run][9] archive which contains the Makeself distribution :\n\n`makeself.sh --notemp makeself makeself.run \"Makeself by Stephane Peter\" echo \"Makeself has extracted itself\"`\n\nArchives generated with Makeself can be passed the following arguments:\n\n* **`--keep`** : Prevent the files to be extracted in a temporary directory that will be removed after the embedded script's execution. The files will then be extracted in the current working directory and will stay here until you remove them.\n* **`--verbose`** : Will prompt the user before executing the embedded command\n* **`--target dir`** : Allows to extract the archive in an arbitrary place.\n* **`--nox11`** : Do not spawn a X11 terminal.\n* **`--confirm`** : Prompt the user for confirmation before running the embedded command.\n* **`--info`** : Print out general information about the archive (does not extract).\n* **`--lsm`** : Print out the LSM entry, if it is present.\n* **`--list`** : List the files in the archive.\n* **`--check`** : Check the archive for integrity using the embedded checksums. Does not extract the archive.\n* **`--nochown`** : By default, a `chown -R` command is run on the target directory after extraction, so that all files belong to the current user. This is mostly needed if you are running as root, as tar will then try to recreate the initial user ownerships. You may disable this behavior with this flag.\n* **`--tar`** : Run the tar command on the contents of the archive, using the following arguments as parameter for the command.\n* **`--noexec`** : Do not run the embedded script after extraction.\n* **`--noexec-cleanup`** : Do not run the embedded cleanup script.\n* **`--nodiskspace`** : Do not check for available disk space before attempting to extract.\n* **`--cleanup-args`** : Specify arguments to be passed to the cleanup script. Wrap value in quotes to specify multiple arguments.\n\nAny subsequent arguments to the archive will be passed as additional arguments to the embedded command. You must explicitly use the `--` special command-line construct before any such options to make sure that Makeself will not try to interpret them.\n\n## Startup Script\n\nThe startup script must be a regular Shell script. \n\nWithin the startup script, you can use the `$USER_PWD` variable to get the path of the folder from which the self-extracting script is executed. This is especially useful to access files that are located in the same folder as the script, as shown in the example below.\n\n```sh\nmy-self-extracting-script.sh --fooBarFileParameter foo.bar\n```\n\n## Building and Testing\n\nClone the git repo and execute `git submodule update --init --recursive` to obtain all submodules.\n\n* To make a release: `make`\n* To run all tests:  `make test`\n\n## Maven Usage\n\nMakeself is now supported by the following maven plugin [makeself-maven-plugin](https://github.com/hazendaz/makeself-maven-plugin).  Please refer to project for usage and report any bugs in regards to maven plugin on that project.\n\n## License\n\nMakeself itself is covered by the [GNU General Public License][8] (GPL) version 2 and above. Archives generated by Makeself don't have to be placed under this license (although I encourage it ;-)), since the archive itself is merely data for Makeself.\n\n## Contributing\n\nI will gladly consider merging your pull requests on the [GitHub][10] repository. However, please keep the following in mind:\n\n* One of the main purposes of Makeself is portability. Do not submit patches that will break supported platforms. The more platform-agnostic, the better.\n* Please explain clearly what the purpose of the patch is, and how you achieved it.\n\n## Download\n\nGet the latest official distribution [here][9] (version 2.5.0).\n\nThe latest development version can be grabbed from [GitHub][10]. Feel free to submit any patches there through the fork and pull request process.\n\n## Version history\n\n* **v1.0:** Initial public release\n* **v1.1:** The archive can be passed parameters that will be passed on to the embedded script, thanks to John C. Quillan\n* **v1.2:** Cosmetic updates, support for bzip2 compression and non-temporary archives. Many ideas thanks to Francois Petitjean.\n* **v1.3:** More patches from Bjarni R. Einarsson and Francois Petitjean: Support for no compression (`--nocomp`), script is no longer mandatory, automatic launch in an xterm, optional verbose output, and -target archive option to indicate where to extract the files.\n* **v1.4:** Many patches from Francois Petitjean: improved UNIX compatibility, automatic integrity checking, support of LSM files to get info on the package at run time..\n* **v1.5.x:** A lot of bugfixes, and many other patches, including automatic verification through the usage of checksums. Version 1.5.5 was the stable release for a long time, even though the Web page didn't get updated ;-). Makeself was also officially made a part of the [Loki Setup installer][11], and its source is being maintained as part of this package.\n* **v2.0:** Complete internal rewrite of Makeself. The command-line parsing was vastly improved, the overall maintenance of the package was greatly improved by separating the stub from makeself.sh. Also Makeself was ported and tested to a variety of Unix platforms.\n* **v2.0.1:** First public release of the new 2.0 branch. Prior versions are officially obsoleted. This release introduced the `--copy` argument that was introduced in response to a need for the [UT2K3][12] Linux installer.\n* **v2.1.0:** Big change : Makeself can now support multiple embedded tarballs, each stored separately with their own checksums. An existing archive can be updated with the `--append` flag. Checksums are also better managed, and the `--nochown` option for archives appeared.\n* **v2.1.1:** Fixes related to the Unix compression (compress command). Some Linux distributions made the insane choice to make it unavailable, even though gzip is capable of uncompressing these files, plus some more bugfixes in the extraction and checksum code.\n* **v2.1.2:** Some bug fixes. Use head -n to avoid problems with POSIX conformance.\n* **v2.1.3:** Bug fixes with the command line when spawning terminals. Added `--tar`, `--noexec` for archives. Added `--nomd5` and `--nocrc` to avoid creating checksums in archives. The embedded script is now run through \"eval\". The `--info` output now includes the command used to create the archive. A man page was contributed by Bartosz Fenski.\n* **v2.1.4:** Fixed `--info` output. Generate random directory name when extracting files to . to avoid problems. Better handling of errors with wrong permissions for the directory containing the files. Avoid some race conditions, Unset the $CDPATH variable to avoid problems if it is set. Better handling of dot files in the archive directory.\n* **v2.1.5:** Made the md5sum detection consistent with the header code. Check for the presence of the archive directory. Added `--encrypt` for symmetric encryption through gpg (Eric Windisch). Added support for the digest command on Solaris 10 for MD5 checksums. Check for available disk space before extracting to the target directory (Andreas Schweitzer). Allow extraction to run asynchronously (patch by Peter Hatch). Use file descriptors internally to avoid error messages (patch by Kay Tiong Khoo).\n* **v2.1.6:** Replaced one dot per file progress with a realtime progress percentage and a spinning cursor. Added `--noprogress` to prevent showing the progress during the decompression. Added `--target` dir to allow extracting directly to a target directory. (Guy Baconniere)\n* **v2.2.0:** First major new release in years! Includes many bugfixes and user contributions. Please look at the [project page on Github][10] for all the details.\n* **v2.3.0:** Support for archive encryption via GPG or OpenSSL. Added LZO and LZ4 compression support. Options to set the packaging date and stop the umask from being overriden. Optionally ignore check for available disk space when extracting. New option to check for root permissions before extracting.\n* **v2.3.1:** Various compatibility updates. Added unit tests for Travis CI in the GitHub repo. New `--tar-extra`, `--untar-extra`, `--gpg-extra`, `--gpg-asymmetric-encrypt-sign` options.\n* **v2.4.0:** Added optional support for SHA256 archive integrity checksums.\n* **v2.4.2:** New --cleanup and --cleanup-args arguments for cleanup scripts. Added threading support for supported compressors. Now supports zstd compression.\n* **v2.4.3:** Make explicit POSIX tar archives for increased compatibility.\n* **v2.4.4:** Fixed various compatibility issues (no longer use POSIX tar archives), Github Actions to check on Solaris and FreeBSD.\n* **v2.4.5:** Added `--tar-format` option to set the tar archive format (default is ustar)\n* **v2.5.0:** Expended support to NetBSD, OpenBSD, Busybox and other minimal distributions such as Alpine Linux. Added bzip3 compression support and expanded GPG arguments.\n\n## Links\n\n* Check out the [\"Loki Setup\"][11] installer, used to install many Linux games and other applications, and of which I am the co-author. Since the demise of Loki, I am now the official maintainer of the project, and it is now being hosted here on GitHub.\n* Bjarni R. Einarsson also wrote the **setup.sh** installer script, inspired by Makeself. [Check it out !][14]\n\n## Contact\n\nThis script was written by [Stéphane Peter][15] (megastep at megastep.org). Any enhancements and suggestions are welcome.\n\nContributions were included from John C. Quillan, Bjarni R. Einarsson,\nFrancois Petitjean, Ryan C. Gordon, and many contributors on GitHub. If you think I forgot\nyour name, don't hesitate to contact me.\n\nThis project is now hosted on GitHub. Feel free to submit patches and bug reports on the [project page][10].\n\n* * *\n\n[Stephane Peter][2]\n\n   [1]: http://makeself.io/\n   [2]: mailto:megastep@megastep.org\n   [3]: http://www.idsoftware.com/\n   [4]: http://www.lokigames.com/products/myth2/updates.php3\n   [5]: http://www.nvidia.com/\n   [6]: http://earth.google.com/\n   [7]: http://www.virtualbox.org/\n   [8]: http://www.gnu.org/copyleft/gpl.html\n   [9]: https://github.com/megastep/makeself/releases/download/release-2.5.0/makeself-2.5.0.run\n   [10]: https://github.com/megastep/makeself\n   [11]: https://github.com/megastep/loki_setup/\n   [12]: http://www.unrealtournament2003.com/\n   [13]: http://www.icculus.org/\n   [14]: http://bre.klaki.net/programs/setup.sh/\n   [15]: https://stephanepeter.com/\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "2.5.0\n"
        },
        {
          "name": "make-release.sh",
          "type": "blob",
          "size": 0.3154296875,
          "content": "#!/bin/sh\n#\n# Create a distributable archive of the current version of Makeself\n\nVER=`cat VERSION`\nmkdir -p /tmp/makeself-$VER release\ncp -pPR makeself* README.md COPYING VERSION /tmp/makeself-$VER/\n./makeself.sh --notemp /tmp/makeself-$VER release/makeself-$VER.run \"Makeself v$VER\" echo \"Makeself has extracted itself\" \n\n"
        },
        {
          "name": "makeself-header.sh",
          "type": "blob",
          "size": 19.87890625,
          "content": "cat << EOF  > \"$archname\"\n#!/bin/sh\n# This script was generated using Makeself $MS_VERSION\n# The license covering this archive and its contents, if any, is wholly independent of the Makeself license (GPL)\n\nORIG_UMASK=\\`umask\\`\nif test \"$KEEP_UMASK\" = n; then\n    umask 077\nfi\n\nCRCsum=\"$CRCsum\"\nMD5=\"$MD5sum\"\nSHA=\"$SHAsum\"\nSIGNATURE=\"$Signature\"\nTMPROOT=\\${TMPDIR:=/tmp}\nUSER_PWD=\"\\$PWD\"\nexport USER_PWD\nARCHIVE_DIR=\\`dirname \"\\$0\"\\`\nexport ARCHIVE_DIR\n\nlabel=\"$LABEL\"\nscript=\"$SCRIPT\"\nscriptargs=\"$SCRIPTARGS\"\ncleanup_script=\"${CLEANUP_SCRIPT}\"\nlicensetxt=\"$LICENSE\"\nhelpheader=\"${HELPHEADER}\"\npreextract=\"${PREEXTRACT_ENCODED}\"\ntargetdir=\"$archdirname\"\nfilesizes=\"$filesizes\"\ntotalsize=\"$totalsize\"\nkeep=\"$KEEP\"\nnooverwrite=\"$NOOVERWRITE\"\nquiet=\"n\"\naccept=\"n\"\nnodiskspace=\"n\"\nexport_conf=\"$EXPORT_CONF\"\ndecrypt_cmd=\"$DECRYPT_CMD\"\nskip=\"$SKIP\"\n\nprint_cmd_arg=\"\"\nif type printf > /dev/null; then\n    print_cmd=\"printf\"\nelif test -x /usr/ucb/echo; then\n    print_cmd=\"/usr/ucb/echo\"\nelse\n    print_cmd=\"echo\"\nfi\n\nif test -d /usr/xpg4/bin; then\n    PATH=/usr/xpg4/bin:\\$PATH\n    export PATH\nfi\n\nif test -d /usr/sfw/bin; then\n    PATH=\\$PATH:/usr/sfw/bin\n    export PATH\nfi\n\nunset CDPATH\n\nMS_Printf()\n{\n    \\$print_cmd \\$print_cmd_arg \"\\$1\"\n}\n\nMS_PrintLicense()\n{\n  PAGER=\\${PAGER:=more}\n  if test x\"\\$licensetxt\" != x; then\n    PAGER_PATH=\\`exec <&- 2>&-; which \\$PAGER || command -v \\$PAGER || type \\$PAGER\\`\n    if test -x \"\\$PAGER_PATH\" && test x\"\\$accept\" != xy; then\n      if ! echo \"\\$licensetxt\" | \\$PAGER -e; then\n        echo \"\\$licensetxt\" | \\$PAGER\n      fi\n    else\n      echo \"\\$licensetxt\"\n    fi\n    if test x\"\\$accept\" != xy; then\n      while true\n      do\n        MS_Printf \"Please type y to accept, n otherwise: \"\n        read yn\n        if test x\"\\$yn\" = xn; then\n          keep=n\n          eval \\$finish; exit 1\n          break;\n        elif test x\"\\$yn\" = xy; then\n          break;\n        fi\n      done\n    fi\n  fi\n}\n\nMS_diskspace()\n{\n\t(\n\tdf -k \"\\$1\" | tail -1 | awk '{ if (\\$4 ~ /%/) {print \\$3} else {print \\$4} }'\n\t)\n}\n\nMS_dd()\n{\n    blocks=\\`expr \\$3 / 1024\\`\n    bytes=\\`expr \\$3 % 1024\\`\n    # Test for ibs, obs and conv feature\n    if dd if=/dev/zero of=/dev/null count=1 ibs=512 obs=512 conv=sync 2> /dev/null; then\n        dd if=\"\\$1\" ibs=\\$2 skip=1 obs=1024 conv=sync 2> /dev/null | \\\\\n        { test \\$blocks -gt 0 && dd ibs=1024 obs=1024 count=\\$blocks ; \\\\\n          test \\$bytes  -gt 0 && dd ibs=1 obs=1024 count=\\$bytes ; } 2> /dev/null\n    else\n        dd if=\"\\$1\" bs=\\$2 skip=1 2> /dev/null\n    fi\n}\n\nMS_dd_Progress()\n{\n    if test x\"\\$noprogress\" = xy; then\n        MS_dd \"\\$@\"\n        return \\$?\n    fi\n    file=\"\\$1\"\n    offset=\\$2\n    length=\\$3\n    pos=0\n    bsize=4194304\n    while test \\$bsize -gt \\$length; do\n        bsize=\\`expr \\$bsize / 4\\`\n    done\n    blocks=\\`expr \\$length / \\$bsize\\`\n    bytes=\\`expr \\$length % \\$bsize\\`\n    (\n        dd ibs=\\$offset skip=1 count=1 2>/dev/null\n        pos=\\`expr \\$pos \\+ \\$bsize\\`\n        MS_Printf \"     0%% \" 1>&2\n        if test \\$blocks -gt 0; then\n            while test \\$pos -le \\$length; do\n                dd bs=\\$bsize count=1 2>/dev/null\n                pcent=\\`expr \\$length / 100\\`\n                pcent=\\`expr \\$pos / \\$pcent\\`\n                if test \\$pcent -lt 100; then\n                    MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n                    if test \\$pcent -lt 10; then\n                        MS_Printf \"    \\$pcent%% \" 1>&2\n                    else\n                        MS_Printf \"   \\$pcent%% \" 1>&2\n                    fi\n                fi\n                pos=\\`expr \\$pos \\+ \\$bsize\\`\n            done\n        fi\n        if test \\$bytes -gt 0; then\n            dd bs=\\$bytes count=1 2>/dev/null\n        fi\n        MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n        MS_Printf \" 100%%  \" 1>&2\n    ) < \"\\$file\"\n}\n\nMS_Help()\n{\n    cat << EOH >&2\nMakeself version $MS_VERSION\n 1) Getting help or info about \\$0 :\n  \\$0 --help   Print this message\n  \\$0 --info   Print embedded info : title, default target directory, embedded script ...\n  \\$0 --lsm    Print embedded lsm entry (or no LSM)\n  \\$0 --list   Print the list of files in the archive\n  \\$0 --check  Checks integrity of the archive\n  \\$0 --verify-sig key Verify signature against a provided key id\n  \\$0 --show-preextract Print pre-extraction script\n\n 2) Running \\$0 :\n  \\$0 [options] [--] [additional arguments to embedded script]\n  with following options (in that order)\n  --confirm             Ask before running embedded script\n  --quiet               Do not print anything except error messages\n  --accept              Accept the license\n  --noexec              Do not run embedded script (implies --noexec-cleanup)\n  --noexec-cleanup      Do not run embedded cleanup script\n  --keep                Do not erase target directory after running\n                        the embedded script\n  --noprogress          Do not show the progress during the decompression\n  --nox11               Do not spawn an xterm\n  --nochown             Do not give the target folder to the current user\n  --chown               Give the target folder to the current user recursively\n  --nodiskspace         Do not check for available disk space\n  --target dir          Extract directly to a target directory (absolute or relative)\n                        This directory may undergo recursive chown (see --nochown).\n  --tar arg1 [arg2 ...] Access the contents of the archive through the tar command\n  --ssl-pass-src src    Use the given src as the source of password to decrypt the data\n                        using OpenSSL. See \"PASS PHRASE ARGUMENTS\" in man openssl.\n                        Default is to prompt the user to enter decryption password\n                        on the current terminal.\n  --cleanup-args args   Arguments to the cleanup script. Wrap in quotes to provide\n                        multiple arguments.\n  --                    Following arguments will be passed to the embedded script\\${helpheader}\n\n  ENVIRONMENT\n      SETUP_NOCHECK\n          If set to 1, then checksum validation will be skipped.\nEOH\n}\n\nMS_Verify_Sig()\n{\n    GPG_PATH=\\`exec <&- 2>&-; which gpg || command -v gpg || type gpg\\`\n    MKTEMP_PATH=\\`exec <&- 2>&-; which mktemp || command -v mktemp || type mktemp\\`\n    test -x \"\\$GPG_PATH\" || GPG_PATH=\\`exec <&- 2>&-; which gpg || command -v gpg || type gpg\\`\n    test -x \"\\$MKTEMP_PATH\" || MKTEMP_PATH=\\`exec <&- 2>&-; which mktemp || command -v mktemp || type mktemp\\`\n\toffset=\\`head -n \"\\$skip\" \"\\$1\" | wc -c | sed \"s/ //g\"\\`\n    temp_sig=\\`mktemp -t XXXXX\\`\n    echo \\$SIGNATURE | base64 --decode > \"\\$temp_sig\"\n    gpg_output=\\`MS_dd \"\\$1\" \\$offset \\$totalsize | LC_ALL=C \"\\$GPG_PATH\" --verify \"\\$temp_sig\" - 2>&1\\`\n    gpg_res=\\$?\n    rm -f \"\\$temp_sig\"\n    if test \\$gpg_res -eq 0 && test \\`echo \\$gpg_output | grep -c Good\\` -eq 1; then\n        if test \\`echo \\$gpg_output | grep -c \\$sig_key\\` -eq 1; then\n            test x\"\\$quiet\" = xn && echo \"GPG signature is good\" >&2\n        else\n            echo \"GPG Signature key does not match\" >&2\n            exit 2\n        fi\n    else\n        test x\"\\$quiet\" = xn && echo \"GPG signature failed to verify\" >&2\n        exit 2\n    fi\n}\n\nMS_Check()\n{\n    OLD_PATH=\"\\$PATH\"\n    PATH=\\${GUESS_MD5_PATH:-\"\\$OLD_PATH:/bin:/usr/bin:/sbin:/usr/local/ssl/bin:/usr/local/bin:/opt/openssl/bin\"}\n\tMD5_ARG=\"\"\n    MD5_PATH=\\`exec <&- 2>&-; which md5sum || command -v md5sum || type md5sum\\`\n    test -x \"\\$MD5_PATH\" || MD5_PATH=\\`exec <&- 2>&-; which md5 || command -v md5 || type md5\\`\n    test -x \"\\$MD5_PATH\" || MD5_PATH=\\`exec <&- 2>&-; which digest || command -v digest || type digest\\`\n    PATH=\"\\$OLD_PATH\"\n\n    SHA_PATH=\\`exec <&- 2>&-; which shasum || command -v shasum || type shasum\\`\n    test -x \"\\$SHA_PATH\" || SHA_PATH=\\`exec <&- 2>&-; which sha256sum || command -v sha256sum || type sha256sum\\`\n\n    if test x\"\\$quiet\" = xn; then\n\t\tMS_Printf \"Verifying archive integrity...\"\n    fi\n    offset=\\`head -n \"\\$skip\" \"\\$1\" | wc -c | sed \"s/ //g\"\\`\n    fsize=\\`cat \"\\$1\" | wc -c | sed \"s/ //g\"\\`\n    if test \\$totalsize -ne \\`expr \\$fsize - \\$offset\\`; then\n        echo \" Unexpected archive size.\" >&2\n        exit 2\n    fi\n    verb=\\$2\n    i=1\n    for s in \\$filesizes\n    do\n\t\tcrc=\\`echo \\$CRCsum | cut -d\" \" -f\\$i\\`\n\t\tif test -x \"\\$SHA_PATH\"; then\n\t\t\tif test x\"\\`basename \\$SHA_PATH\\`\" = xshasum; then\n\t\t\t\tSHA_ARG=\"-a 256\"\n\t\t\tfi\n\t\t\tsha=\\`echo \\$SHA | cut -d\" \" -f\\$i\\`\n\t\t\tif test x\"\\$sha\" = x0000000000000000000000000000000000000000000000000000000000000000; then\n\t\t\t\ttest x\"\\$verb\" = xy && echo \" \\$1 does not contain an embedded SHA256 checksum.\" >&2\n\t\t\telse\n\t\t\t\tshasum=\\`MS_dd_Progress \"\\$1\" \\$offset \\$s | eval \"\\$SHA_PATH \\$SHA_ARG\" | cut -b-64\\`;\n\t\t\t\tif test x\"\\$shasum\" != x\"\\$sha\"; then\n\t\t\t\t\techo \"Error in SHA256 checksums: \\$shasum is different from \\$sha\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"\\$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" SHA256 checksums are OK.\"\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\";\n\t\t\tfi\n\t\tfi\n\t\tif test -x \"\\$MD5_PATH\"; then\n\t\t\tif test x\"\\`basename \\$MD5_PATH\\`\" = xdigest; then\n\t\t\t\tMD5_ARG=\"-a md5\"\n\t\t\tfi\n\t\t\tmd5=\\`echo \\$MD5 | cut -d\" \" -f\\$i\\`\n\t\t\tif test x\"\\$md5\" = x00000000000000000000000000000000; then\n\t\t\t\ttest x\"\\$verb\" = xy && echo \" \\$1 does not contain an embedded MD5 checksum.\" >&2\n\t\t\telse\n\t\t\t\tmd5sum=\\`MS_dd_Progress \"\\$1\" \\$offset \\$s | eval \"\\$MD5_PATH \\$MD5_ARG\" | cut -b-32\\`;\n\t\t\t\tif test x\"\\$md5sum\" != x\"\\$md5\"; then\n\t\t\t\t\techo \"Error in MD5 checksums: \\$md5sum is different from \\$md5\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"\\$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" MD5 checksums are OK.\"\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\"; verb=n\n\t\t\tfi\n\t\tfi\n\t\tif test x\"\\$crc\" = x0000000000; then\n\t\t\ttest x\"\\$verb\" = xy && echo \" \\$1 does not contain a CRC checksum.\" >&2\n\t\telse\n\t\t\tsum1=\\`MS_dd_Progress \"\\$1\" \\$offset \\$s | CMD_ENV=xpg4 cksum | awk '{print \\$1}'\\`\n\t\t\tif test x\"\\$sum1\" != x\"\\$crc\"; then\n\t\t\t\techo \"Error in checksums: \\$sum1 is different from \\$crc\" >&2\n\t\t\t\texit 2\n\t\t\telif test x\"\\$quiet\" = xn; then\n\t\t\t\tMS_Printf \" CRC checksums are OK.\"\n\t\t\tfi\n\t\tfi\n\t\ti=\\`expr \\$i + 1\\`\n\t\toffset=\\`expr \\$offset + \\$s\\`\n    done\n    if test x\"\\$quiet\" = xn; then\n\t\techo \" All good.\"\n    fi\n}\n\nMS_Preextract()\n{\n    if test -z \"\\$preextract\"; then\n        return\n    elif test x\"\\$verbose\" = xy; then\n        MS_Printf \"About to run pre-extraction script ... Proceed ? [Y/n] \"\n        read yn\n        if test x\"\\$yn\" = xn; then\n            eval \\$finish; exit 1\n        fi\n    fi\n\n    prescript=\\`mktemp \"\\$tmpdir/XXXXXX\"\\`\n    echo \"\\$preextract\" | base64 -d > \"\\$prescript\"\n    chmod a+x \"\\$prescript\"\n\n    (cd \"\\$tmpdir\"; eval \"\\\"\\$prescript\\\" \\$scriptargs \\\"\\\\\\$@\\\"\"); res=\\$?\n\n    rm -f \"\\$prescript\"\n    if test \\$res -ne 0; then\n        echo \"Pre-extraction script returned an error code (\\$res)\" >&2\n        eval \\$finish; exit 1\n    fi\n}\n\nMS_Decompress()\n{\n    if test x\"\\$decrypt_cmd\" != x\"\"; then\n        { eval \"\\$decrypt_cmd\" || echo \" ... Decryption failed.\" >&2; } | eval \"$GUNZIP_CMD\"\n    else\n        eval \"$GUNZIP_CMD\"\n    fi\n    \n    if test \\$? -ne 0; then\n        echo \" ... Decompression failed.\" >&2\n    fi\n}\n\nUnTAR()\n{\n    if test x\"\\$quiet\" = xn; then\n\t\ttar \\$1vf - $UNTAR_EXTRA 2>&1 || { echo \" ... Extraction failed.\" >&2; kill -15 \\$$; }\n    else\n\t\ttar \\$1f - $UNTAR_EXTRA 2>&1 || { echo Extraction failed. >&2; kill -15 \\$$; }\n    fi\n}\n\nMS_exec_cleanup() {\n    if test x\"\\$cleanup\" = xy && test x\"\\$cleanup_script\" != x\"\"; then\n        cleanup=n\n        cd \"\\$tmpdir\"\n        eval \"\\\"\\$cleanup_script\\\" \\$scriptargs \\$cleanupargs\"\n    fi\n}\n\nMS_cleanup()\n{\n    echo 'Signal caught, cleaning up' >&2\n    MS_exec_cleanup\n    cd \"\\$TMPROOT\"\n    rm -rf \"\\$tmpdir\"\n    eval \\$finish; exit 15\n}\n\nfinish=true\nxterm_loop=\nnoprogress=$NOPROGRESS\nnox11=$NOX11\ncopy=$COPY\nownership=$OWNERSHIP\nverbose=n\ncleanup=y\ncleanupargs=\nsig_key=\n\ninitargs=\"\\$@\"\n\nwhile true\ndo\n    case \"\\$1\" in\n    -h | --help)\n\tMS_Help\n\texit 0\n\t;;\n    -q | --quiet)\n\tquiet=y\n\tnoprogress=y\n\tshift\n\t;;\n\t--accept)\n\taccept=y\n\tshift\n\t;;\n    --info)\n\techo Identification: \"\\$label\"\n\techo Target directory: \"\\$targetdir\"\n\techo Uncompressed size: $USIZE KB\n\techo Compression: $COMPRESS\n\tif test x\"$ENCRYPT\" != x\"\"; then\n\t    echo Encryption: $ENCRYPT\n\tfi\n\techo Date of packaging: $DATE\n\techo Built with Makeself version $MS_VERSION\n\techo Build command was: \"$MS_COMMAND\"\n\tif test x\"\\$script\" != x; then\n\t    echo Script run after extraction:\n\t    echo \"    \" \\$script \\$scriptargs\n\tfi\n\tif test x\"$copy\" = xcopy; then\n\t\techo \"Archive will copy itself to a temporary location\"\n\tfi\n\tif test x\"$NEED_ROOT\" = xy; then\n\t\techo \"Root permissions required for extraction\"\n\tfi\n\tif test x\"$KEEP\" = xy; then\n\t    echo \"directory \\$targetdir is permanent\"\n\telse\n\t    echo \"\\$targetdir will be removed after extraction\"\n\tfi\n\texit 0\n\t;;\n    --dumpconf)\n\techo LABEL=\\\"\\$label\\\"\n\techo SCRIPT=\\\"\\$script\\\"\n\techo SCRIPTARGS=\\\"\\$scriptargs\\\"\n    echo CLEANUPSCRIPT=\\\"\\$cleanup_script\\\"\n\techo archdirname=\\\"$archdirname\\\"\n\techo KEEP=$KEEP\n\techo NOOVERWRITE=$NOOVERWRITE\n\techo COMPRESS=$COMPRESS\n\techo filesizes=\\\"\\$filesizes\\\"\n    echo totalsize=\\\"\\$totalsize\\\"\n\techo CRCsum=\\\"\\$CRCsum\\\"\n\techo MD5sum=\\\"\\$MD5sum\\\"\n\techo SHAsum=\\\"\\$SHAsum\\\"\n\techo SKIP=\\\"\\$skip\\\"\n\texit 0\n\t;;\n    --lsm)\ncat << EOLSM\nEOF\neval \"$LSM_CMD\"\ncat << EOF  >> \"$archname\"\nEOLSM\n\texit 0\n\t;;\n    --list)\n\techo Target directory: \\$targetdir\n\toffset=\\`head -n \"\\$skip\" \"\\$0\" | wc -c | sed \"s/ //g\"\\`\n\tfor s in \\$filesizes\n\tdo\n\t    MS_dd \"\\$0\" \\$offset \\$s | MS_Decompress | UnTAR t\n\t    offset=\\`expr \\$offset + \\$s\\`\n\tdone\n\texit 0\n\t;;\n\t--tar)\n\toffset=\\`head -n \"\\$skip\" \"\\$0\" | wc -c | sed \"s/ //g\"\\`\n\targ1=\"\\$2\"\n    shift 2 || { MS_Help; exit 1; }\n\tfor s in \\$filesizes\n\tdo\n\t    MS_dd \"\\$0\" \\$offset \\$s | MS_Decompress | tar \"\\$arg1\" - \"\\$@\"\n\t    offset=\\`expr \\$offset + \\$s\\`\n\tdone\n\texit 0\n\t;;\n    --check)\n\tMS_Check \"\\$0\" y\n\texit 0\n\t;;\n    --verify-sig)\n    sig_key=\"\\$2\"\n    shift 2 || { MS_Help; exit 1; }\n    MS_Verify_Sig \"\\$0\"\n    ;;\n    --show-preextract)\n    if test -z \"\\$preextract\"; then\n        echo \"Pre-extraction script is not provided.\" >&2\n        exit 1\n    fi\n    echo \"\\$preextract\" | base64 -d\n    exit 0\n    ;;\n    --confirm)\n\tverbose=y\n\tshift\n\t;;\n\t--noexec)\n\tscript=\"\"\n    cleanup_script=\"\"\n    preextract=\"\"\n\tshift\n\t;;\n    --noexec-cleanup)\n    cleanup_script=\"\"\n    shift\n    ;;\n    --keep)\n\tkeep=y\n\tshift\n\t;;\n    --target)\n\tkeep=y\n\ttargetdir=\"\\${2:-.}\"\n    shift 2 || { MS_Help; exit 1; }\n\t;;\n    --noprogress)\n\tnoprogress=y\n\tshift\n\t;;\n    --nox11)\n\tnox11=y\n\tshift\n\t;;\n    --nochown)\n\townership=n\n\tshift\n\t;;\n    --chown)\n        ownership=y\n        shift\n        ;;\n    --nodiskspace)\n\tnodiskspace=y\n\tshift\n\t;;\n    --xwin)\n\tif test \"$NOWAIT\" = n; then\n\t\tfinish=\"echo Press Return to close this window...; read junk\"\n\tfi\n\txterm_loop=1\n\tshift\n\t;;\n    --phase2)\n\tcopy=phase2\n\tshift\n\t;;\n\t--ssl-pass-src)\n\tif test x\"$ENCRYPT\" != x\"openssl\"; then\n\t    echo \"Invalid option --ssl-pass-src: \\$0 was not encrypted with OpenSSL!\" >&2\n\t    exit 1\n\tfi\n\tdecrypt_cmd=\"\\$decrypt_cmd -pass \\$2\"\n    shift 2 || { MS_Help; exit 1; }\n\t;;\n    --cleanup-args)\n    cleanupargs=\"\\$2\"\n    shift 2 || { MS_Help; exit 1; }\n    ;;\n    --)\n\tshift\n\tbreak ;;\n    -*)\n\techo Unrecognized flag : \"\\$1\" >&2\n\tMS_Help\n\texit 1\n\t;;\n    *)\n\tbreak ;;\n    esac\ndone\n\nif test x\"\\$quiet\" = xy -a x\"\\$verbose\" = xy; then\n\techo Cannot be verbose and quiet at the same time. >&2\n\texit 1\nfi\n\nif test x\"$NEED_ROOT\" = xy -a \\`id -u\\` -ne 0; then\n\techo \"Administrative privileges required for this archive (use su or sudo)\" >&2\n\texit 1\t\nfi\n\nif test x\"\\$copy\" \\!= xphase2; then\n    MS_PrintLicense\nfi\n\ncase \"\\$copy\" in\ncopy)\n    tmpdir=\"\\$TMPROOT\"/makeself.\\$RANDOM.\\`date +\"%y%m%d%H%M%S\"\\`.\\$\\$\n    mkdir \"\\$tmpdir\" || {\n\techo \"Could not create temporary directory \\$tmpdir\" >&2\n\texit 1\n    }\n    SCRIPT_COPY=\"\\$tmpdir/makeself\"\n    echo \"Copying to a temporary location...\" >&2\n    cp \"\\$0\" \"\\$SCRIPT_COPY\"\n    chmod +x \"\\$SCRIPT_COPY\"\n    cd \"\\$TMPROOT\"\n    export USER_PWD=\"\\$tmpdir\"\n    exec \"\\$SCRIPT_COPY\" --phase2 -- \\$initargs\n    ;;\nphase2)\n    finish=\"\\$finish ; rm -rf \\`dirname \\$0\\`\"\n    ;;\nesac\n\nif test x\"\\$nox11\" = xn; then\n    if test -t 1; then  # Do we have a terminal on stdout?\n\t:\n    else\n        if test x\"\\$DISPLAY\" != x -a x\"\\$xterm_loop\" = x; then  # No, but do we have X?\n            if xset q > /dev/null 2>&1; then # Check for valid DISPLAY variable\n                GUESS_XTERMS=\"xterm gnome-terminal rxvt dtterm eterm Eterm xfce4-terminal lxterminal kvt konsole aterm terminology\"\n                for a in \\$GUESS_XTERMS; do\n                    if type \\$a >/dev/null 2>&1; then\n                        XTERM=\\$a\n                        break\n                    fi\n                done\n                chmod a+x \\$0 || echo Please add execution rights on \\$0 >&2\n                if test \\`echo \"\\$0\" | cut -c1\\` = \"/\"; then # Spawn a terminal!\n                    exec \\$XTERM -e \"\\$0 --xwin \\$initargs\"\n                else\n                    exec \\$XTERM -e \"./\\$0 --xwin \\$initargs\"\n                fi\n            fi\n        fi\n    fi\nfi\n\nif test x\"\\$targetdir\" = x.; then\n    tmpdir=\".\"\nelse\n    if test x\"\\$keep\" = xy; then\n\tif test x\"\\$nooverwrite\" = xy && test -d \"\\$targetdir\"; then\n            echo \"Target directory \\$targetdir already exists, aborting.\" >&2\n            exit 1\n\tfi\n\tif test x\"\\$quiet\" = xn; then\n\t    echo \"Creating directory \\$targetdir\" >&2\n\tfi\n\ttmpdir=\"\\$targetdir\"\n\tdashp=\"-p\"\n    else\n\ttmpdir=\"\\$TMPROOT/selfgz\\$\\$\\$RANDOM\"\n\tdashp=\"\"\n    fi\n    mkdir \\$dashp \"\\$tmpdir\" || {\n\techo 'Cannot create target directory' \\$tmpdir >&2\n\techo 'You should try option --target dir' >&2\n\teval \\$finish\n\texit 1\n    }\nfi\n\nlocation=\"\\`pwd\\`\"\nif test x\"\\$SETUP_NOCHECK\" != x1; then\n    MS_Check \"\\$0\"\nfi\noffset=\\`head -n \"\\$skip\" \"\\$0\" | wc -c | sed \"s/ //g\"\\`\n\nMS_Preextract \"\\$@\"\n\nif test x\"\\$verbose\" = xy; then\n\tMS_Printf \"About to extract $USIZE KB in \\$tmpdir ... Proceed ? [Y/n] \"\n\tread yn\n\tif test x\"\\$yn\" = xn; then\n\t\teval \\$finish; exit 1\n\tfi\nfi\n\nif test x\"\\$quiet\" = xn; then\n    # Decrypting with openssl will ask for password,\n    # the prompt needs to start on new line\n\tif test x\"$ENCRYPT\" = x\"openssl\"; then\n\t    echo \"Decrypting and uncompressing \\$label...\"\n\telse\n        MS_Printf \"Uncompressing \\$label\"\n\tfi\nfi\nres=3\nif test x\"\\$keep\" = xn; then\n    trap MS_cleanup 1 2 3 15\nfi\n\nif test x\"\\$nodiskspace\" = xn; then\n    leftspace=\\`MS_diskspace \"\\$tmpdir\"\\`\n    if test -n \"\\$leftspace\"; then\n        if test \"\\$leftspace\" -lt $USIZE; then\n            echo\n            echo \"Not enough space left in \"\\`dirname \\$tmpdir\\`\" (\\$leftspace KB) to decompress \\$0 ($USIZE KB)\" >&2\n            echo \"Use --nodiskspace option to skip this check and proceed anyway\" >&2\n            if test x\"\\$keep\" = xn; then\n                echo \"Consider setting TMPDIR to a directory with more free space.\"\n            fi\n            eval \\$finish; exit 1\n        fi\n    fi\nfi\n\nfor s in \\$filesizes\ndo\n    if MS_dd_Progress \"\\$0\" \\$offset \\$s | MS_Decompress | ( cd \"\\$tmpdir\"; umask \\$ORIG_UMASK ; UnTAR xp ) 1>/dev/null; then\n\t\tif test x\"\\$ownership\" = xy; then\n\t\t\t(cd \"\\$tmpdir\"; chown -R \\`id -u\\` .;  chgrp -R \\`id -g\\` .)\n\t\tfi\n    else\n\t\techo >&2\n\t\techo \"Unable to decompress \\$0\" >&2\n\t\teval \\$finish; exit 1\n    fi\n    offset=\\`expr \\$offset + \\$s\\`\ndone\nif test x\"\\$quiet\" = xn; then\n\techo\nfi\n\ncd \"\\$tmpdir\"\nres=0\nif test x\"\\$script\" != x; then\n    if test x\"\\$export_conf\" = x\"y\"; then\n        MS_BUNDLE=\"\\$0\"\n        MS_LABEL=\"\\$label\"\n        MS_SCRIPT=\"\\$script\"\n        MS_SCRIPTARGS=\"\\$scriptargs\"\n        MS_ARCHDIRNAME=\"\\$archdirname\"\n        MS_KEEP=\"\\$KEEP\"\n        MS_NOOVERWRITE=\"\\$NOOVERWRITE\"\n        MS_COMPRESS=\"\\$COMPRESS\"\n        MS_CLEANUP=\"\\$cleanup\"\n        export MS_BUNDLE MS_LABEL MS_SCRIPT MS_SCRIPTARGS\n        export MS_ARCHDIRNAME MS_KEEP MS_NOOVERWRITE MS_COMPRESS\n    fi\n\n    if test x\"\\$verbose\" = x\"y\"; then\n\t\tMS_Printf \"OK to execute: \\$script \\$scriptargs \\$* ? [Y/n] \"\n\t\tread yn\n\t\tif test x\"\\$yn\" = x -o x\"\\$yn\" = xy -o x\"\\$yn\" = xY; then\n\t\t\teval \"\\\"\\$script\\\" \\$scriptargs \\\"\\\\\\$@\\\"\"; res=\\$?;\n\t\tfi\n    else\n\t\teval \"\\\"\\$script\\\" \\$scriptargs \\\"\\\\\\$@\\\"\"; res=\\$?\n    fi\n    if test \"\\$res\" -ne 0; then\n\t\ttest x\"\\$verbose\" = xy && echo \"The program '\\$script' returned an error code (\\$res)\" >&2\n    fi\nfi\n\nMS_exec_cleanup\n\nif test x\"\\$keep\" = xn; then\n    cd \"\\$TMPROOT\"\n    rm -rf \"\\$tmpdir\"\nfi\neval \\$finish; exit \\$res\nEOF\n"
        },
        {
          "name": "makeself.1",
          "type": "blob",
          "size": 4.6376953125,
          "content": ".TH \"MAKESELF\" \"1\" \"2.5.0\"\n.SH \"NAME\"\nmakeself \\- An utility to generate self-extractable archives.\n.SH \"SYNTAX\"\n.B makeself [\\fIoptions\\fP] archive_dir file_name label\n.B [\\fIstartup_script\\fP] [\\fIargs\\fP]\n.SH \"DESCRIPTION\"\nThis program is a free (GPL) shell utility designed to create self-extractable\ncompressed archives from a directory. The resulting file appears as a shell script, and can be launched as is. The archive\nwill then uncompress itself to a temporary directory and an optional arbitrary\ncommand will be executed (for example an installation script). \n.TP\nMakeself archives also include checksums for integrity self-validation (CRC and/or MD5/SHA256 checksums).\n.SH \"OPTIONS\"\nThe following options are supported:\n.TP 15\n.B -v, --version\nPrints out the makeself version number and exits.\n.TP\n.B -h, --help\nPrint out help information.\n.TP\n.B --tar-quietly\nSuppress verbose output from the tar command\n.TP\n.B --quiet\nDo not print any messages other than errors\n.TP\n.B --gzip\nCompress using gzip (default if detected).\n.TP\n.B --bzip2\nCompress using bzip2.\n.TP\n.B --bzip3\nCompress using bzip3.\n.TP\n.B --pbzip2\nCompress using pbzip2.\n.TP\n.B --xz\nCompress using xz.\n.TP\n.B --lzo\nCompress using lzop.\n.TP\n.B --lz4\nCompress using lz4.\n.TP\n.B --pigz\nCompress using pigz.\n.TP\n.B --zstd\nCompress using zstd.\n.TP\n.B --base64\nEncode the archive to ASCII in Base64 format instead of compressing (base64 command required).\n.TP\n.B --gpg-encrypt\nEncrypt the archive using GPG. This will prompt for a password to encrypt with.\n.TP\n.B --ssl-encrypt\nEncrypt the archive using OpenSSL. This will prompt for a password to encrypt with.\n.TP\n.B --keep-umask\nKeep the umask set to shell default, rather than overriding when executing the self-extracting archive.\n.TP\n.B --compress\nCompress using the UNIX 'compress' command.\n.TP\n.B --nocomp\nDo not compress the data.\n.TP\n.B --complevel lvl\nSpecify the compression level for gzip, bzip2, pbzip2, xz, zstd, lzo or lz4. Defaults to 9.\n.TP\n.B --threads num\nSpecify the number of threads to be used by compressors that support parallelization.\n.TP\n.B --tar-format opt\n Specify the tar archive format (default is ustar); you may use any value accepted by your tar command (such as posix, v7, etc).\n.TP\n.B --tar-extra opt\nAppend more options to the tar command line.\n.TP\n.B --notemp\nThe archive will create archive_dir in the current directory and\nuncompress in ./archive_dir.\n.TP\n.B --copy\nUpon extraction, the archive will first copy itself to a temporary directory.\n.TP\n.B --append\nAppend more files to an existing makeself archive. The label and startup scripts will then be ignored.\n.TP\n.B --current\nFiles will be extracted to the current directory. Both --current and --target dir imply --notemp.\n.TP\n.B --target dir\nExtract directly to a target directory. Directory path can be either absolute or relative.\n.TP\n.B --header file\nSpecify location of the header script.\n.TP\n.B --help-header file\nAdd a header to the archive's help output.\n.TP\n.B --preextract file\nSpecify a pre-extraction script.\n.TP\n.B --cleanup file\nSpecify a cleanup script that executes on interrupt and when finished successfully.\n.TP\n.B --follow\nFollow the symlinks in the archive.\n.TP\n.B --noprogress\nDo not show the progress during the decompression.\n.TP\n.B --nooverwrite\nDo not extract the archive if the target directory already exists.\n.TP\n.B --nox11\nDisable automatic spawn of an xterm if running in X11.\n.TP\n.B --nowait\nDo not wait for user input after executing embedded program from an xterm.\n.TP\n.B --nomd5\nDo not create a MD5 checksum for the archive.\n.TP\n.B --sha256\nAdds a SHA256 checksum for the archive.\n.TP\n.B --nocrc\nDo not create a CRC32 checksum for the archive.\n.TP\n.B --lsm file\nLSM file describing the package.\n.TP\n.B --license file\nAppend a license file.\n.TP\n.B --packaging-date date\nUse provided string as the packaging date instead of the current date.\n.SH \"ENVIRONMENT\"\n.TP\n.B SETUP_NOCHECK\nIf set to 1, then checksum validation will be skipped.\n.SH \"EXAMPLES\"\nHere is an example, assuming the user has a package image stored in a /home/joe/mysoft,\nand he wants to generate a self-extracting package named mysoft.sh, which will launch\nthe \"setup\" script initially stored in /home/joe/mysoft:\n.TP\nmakeself.sh /home/joe/mysoft mysoft.sh \"Joe's Nice Software Package\" ./setup\n.TP\nHere is also how I created the makeself.run archive which contains the Makeself distribution:\n.TP\nmakeself.sh --notemp makeself makeself.run \"Makeself by Stephane Peter\" echo \"Makeself has extracted itself\"\n.SH \"AUTHORS\"\nMakeself has been written by Stephane Peter <megastep@megastep.org>.\n.BR\nThis man page was originally written by Bartosz Fenski <fenio@o2.pl> for the\nDebian GNU/Linux distribution (but it may be used by others).\n"
        },
        {
          "name": "makeself.sh",
          "type": "blob",
          "size": 21.197265625,
          "content": "#!/bin/sh\n#\n# Makeself version 2.5.x\n#  by Stephane Peter <megastep@megastep.org>\n#\n# Utility to create self-extracting tar.gz archives.\n# The resulting archive is a file holding the tar.gz archive with\n# a small Shell script stub that uncompresses the archive to a temporary\n# directory and then executes a given script from withing that directory.\n#\n# Makeself home page: https://makeself.io/ - Version history available on GitHub\n#\n# (C) 1998-2023 by Stephane Peter <megastep@megastep.org>\n#\n# This software is released under the terms of the GNU GPL version 2 and above\n# Please read the license at http://www.gnu.org/copyleft/gpl.html\n# Self-extracting archives created with this script are explictly NOT released under the term of the GPL\n#\n\nMS_VERSION=2.5.0\nMS_COMMAND=\"$0\"\nunset CDPATH\n\nfor f in ${1+\"$@\"}; do\n    MS_COMMAND=\"$MS_COMMAND \\\\\\\\\n    \\\\\\\"$f\\\\\\\"\"\ndone\n\n# For Solaris systems\nif test -d /usr/xpg4/bin; then\n    PATH=/usr/xpg4/bin:$PATH\n    export PATH\nfi\n\n# Procedures\n\nMS_Usage()\n{\n    echo \"Usage: $0 [args] archive_dir file_name label startup_script [script_args]\"\n    echo \"args can be one or more of the following :\"\n    echo \"    --version | -v     : Print out Makeself version number and exit\"\n    echo \"    --help | -h        : Print out this help message\"\n    echo \"    --tar-quietly      : Suppress verbose output from the tar command\"\n    echo \"    --quiet | -q       : Do not print any messages other than errors.\"\n    echo \"    --gzip             : Compress using gzip (default if detected)\"\n    echo \"    --pigz             : Compress with pigz\"\n    echo \"    --zstd             : Compress with zstd\"\n    echo \"    --bzip2            : Compress using bzip2 instead of gzip\"\n    echo \"    --pbzip2           : Compress using pbzip2 instead of gzip\"\n    echo \"    --bzip3            : Compress using bzip3 instead of gzip\"\n    echo \"    --xz               : Compress using xz instead of gzip\"\n    echo \"    --lzo              : Compress using lzop instead of gzip\"\n    echo \"    --lz4              : Compress using lz4 instead of gzip\"\n    echo \"    --compress         : Compress using the UNIX 'compress' command\"\n    echo \"    --complevel lvl    : Compression level for gzip pigz zstd xz lzo lz4 bzip2 pbzip2 and bzip3 (default 9)\"\n    echo \"    --threads thds     : Number of threads to be used by compressors that support parallelization.\"\n    echo \"                         Omit to use compressor's default. Most useful (and required) for opting\"\n    echo \"                         into xz's threading, usually with '--threads=0' for all available cores.\"\n    echo \"                         pbzip2 and pigz are parallel by default, and setting this value allows\"\n    echo \"                         limiting the number of threads they use.\"\n    echo \"    --base64           : Instead of compressing, encode the data using base64\"\n    echo \"    --gpg-encrypt      : Instead of compressing, encrypt the data using GPG\"\n    echo \"    --gpg-asymmetric-encrypt-sign\"\n    echo \"                       : Instead of compressing, asymmetrically encrypt and sign the data using GPG\"\n    echo \"    --gpg-extra opt    : Append more options to the gpg command line\"\n    echo \"    --ssl-encrypt      : Instead of compressing, encrypt the data using OpenSSL\"\n    echo \"    --ssl-passwd pass  : Use the given password to encrypt the data using OpenSSL\"\n    echo \"    --ssl-pass-src src : Use the given src as the source of password to encrypt the data\"\n    echo \"                         using OpenSSL. See \\\"PASS PHRASE ARGUMENTS\\\" in man openssl.\"\n    echo \"                         If this option is not supplied, the user will be asked to enter\"\n    echo \"                         encryption password on the current terminal.\"\n    echo \"    --ssl-no-md        : Do not use \\\"-md\\\" option not supported by older OpenSSL.\"\n    echo \"    --nochown          : Do not give the target folder to the current user (default)\"\n    echo \"    --chown            : Give the target folder to the current user recursively\"\n    echo \"    --nocomp           : Do not compress the data\"\n    echo \"    --notemp           : The archive will create archive_dir in the current directory\"\n    echo \"                         and uncompress in ./archive_dir\"\n    echo \"                         Note: persistent archives do not strictly require a startup_script\"\n    echo \"    --needroot         : Check that the root user is extracting the archive before proceeding\"\n    echo \"    --copy             : Upon extraction, the archive will first copy itself to\"\n    echo \"                         a temporary directory\"\n    echo \"    --append           : Append more files to an existing Makeself archive\"\n    echo \"                         The label and startup scripts will then be ignored\"\n    echo \"    --target dir       : Extract directly to a target directory\"\n    echo \"                         directory path can be either absolute or relative\"\n    echo \"    --current          : Files will be extracted to the current directory\"\n    echo \"                         Both --current and --target imply --notemp, and do not require a startup_script\"\n    echo \"    --nooverwrite      : Do not extract the archive if the specified target directory exists\"\n    echo \"    --tar-format opt   : Specify a tar archive format (default is ustar)\"\n    echo \"    --tar-extra opt    : Append more options to the tar command line\"\n    echo \"    --untar-extra opt  : Append more options to the during the extraction of the tar archive\"\n    echo \"    --nomd5            : Don't calculate an MD5 for archive\"\n    echo \"    --nocrc            : Don't calculate a CRC for archive\"\n    echo \"    --sha256           : Compute a SHA256 checksum for the archive\"\n    echo \"    --header file      : Specify location of the header script\"\n    echo \"    --preextract file  : Specify a pre-extraction script\"\n    echo \"    --cleanup file     : Specify a cleanup script that executes on interrupt and when finished successfully.\"\n    echo \"    --follow           : Follow the symlinks in the archive\"\n    echo \"    --noprogress       : Do not show the progress during the decompression\"\n    echo \"    --nox11            : Disable automatic spawn of a xterm\"\n    echo \"    --nowait           : Do not wait for user input after executing embedded\"\n    echo \"                         program from an xterm\"\n    echo \"    --sign passphrase  : Signature private key to sign the package with\"\n    echo \"    --lsm file         : LSM file describing the package\"\n    echo \"    --license file     : Append a license file\"\n    echo \"    --help-header file : Add a header to the archive's --help output\"\n    echo \"    --packaging-date date\"\n    echo \"                       : Use provided string as the packaging date\"\n    echo \"                         instead of the current date.\"\n    echo\n    echo \"    --keep-umask       : Keep the umask set to shell default, rather than overriding when executing self-extracting archive.\"\n    echo \"    --export-conf      : Export configuration variables to startup_script\"\n    echo\n    echo \"ENVIRONMENT\"\n    echo \"    SETUP_NOCHECK\"\n    echo \"        If set to 1, then checksum validation will be skipped.\"\n    echo\n    echo \"Do not forget to give a fully qualified startup script name\"\n    echo \"(i.e. with a ./ prefix if inside the archive).\"\n    exit 1\n}\n\n# Default settings\nif type gzip >/dev/null 2>&1; then\n    COMPRESS=gzip\nelif type compress >/dev/null 2>&1; then\n    COMPRESS=compress\nelse\n    echo \"ERROR: missing commands: gzip, compress\" >&2\n    MS_Usage\nfi\nENCRYPT=n\nPASSWD=\"\"\nPASSWD_SRC=\"\"\nOPENSSL_NO_MD=n\nCOMPRESS_LEVEL=9\nDEFAULT_THREADS=123456 # Sentinel value\nTHREADS=$DEFAULT_THREADS\nKEEP=n\nCURRENT=n\nNOX11=n\nNOWAIT=n\nAPPEND=n\nTAR_QUIETLY=n\nKEEP_UMASK=n\nQUIET=n\nNOPROGRESS=n\nCOPY=none\nNEED_ROOT=n\nTAR_ARGS=rvf\nTAR_FORMAT=ustar\nTAR_EXTRA=\"\"\nGPG_EXTRA=\"\"\nDU_ARGS=-ks\nHEADER=`dirname \"$0\"`/makeself-header.sh\nSIGNATURE=\"\"\nTARGETDIR=\"\"\nNOOVERWRITE=n\nDATE=`LC_ALL=C date`\nEXPORT_CONF=n\nSHA256=n\nOWNERSHIP=n\nSIGN=n\nGPG_PASSPHRASE=\"\"\n\n# LSM file stuff\nLSM_CMD=\"echo No LSM. >> \\\"\\$archname\\\"\"\n\nwhile true\ndo\n    case \"$1\" in\n    --version | -v)\n\techo Makeself version $MS_VERSION\n\texit 0\n\t;;\n    --pbzip2)\n\tCOMPRESS=pbzip2\n\tshift\n\t;;\n    --bzip3)\n\tCOMPRESS=bzip3\n\tshift\n\t;;\n    --bzip2)\n\tCOMPRESS=bzip2\n\tshift\n\t;;\n    --gzip)\n\tCOMPRESS=gzip\n\tshift\n\t;;\n    --pigz)\n    \tCOMPRESS=pigz\n    \tshift\n    \t;;\n    --zstd)\n    \tCOMPRESS=zstd\n    \tshift\n    \t;;\n    --xz)\n\tCOMPRESS=xz\n\tshift\n\t;;\n    --lzo)\n\tCOMPRESS=lzo\n\tshift\n\t;;\n    --lz4)\n\tCOMPRESS=lz4\n\tshift\n\t;;\n    --compress)\n\tCOMPRESS=compress\n\tshift\n\t;;\n    --base64)\n\tCOMPRESS=base64\n\tshift\n\t;;\n    --gpg-encrypt)\n\tCOMPRESS=gpg\n\tshift\n\t;;\n    --gpg-asymmetric-encrypt-sign)\n\tCOMPRESS=gpg-asymmetric\n\tshift\n\t;;\n    --gpg-extra)\n\tGPG_EXTRA=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --ssl-encrypt)\n\tENCRYPT=openssl\n \tshift\n\t;;\n    --ssl-passwd)\n\tPASSWD=$2\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --ssl-pass-src)\n\tPASSWD_SRC=$2\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --ssl-no-md)\n\tOPENSSL_NO_MD=y\n\tshift\n\t;;\n    --nocomp)\n\tCOMPRESS=none\n\tshift\n\t;;\n    --complevel)\n\tCOMPRESS_LEVEL=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --threads)\n\tTHREADS=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --nochown)\n\tOWNERSHIP=n\n\tshift\n\t;;\n    --chown)\n\tOWNERSHIP=y\n\tshift\n\t;;\n    --notemp)\n\tKEEP=y\n\tshift\n\t;;\n    --copy)\n\tCOPY=copy\n\tshift\n\t;;\n    --current)\n\tCURRENT=y\n\tKEEP=y\n\tshift\n\t;;\n    --tar-format)\n\t    TAR_FORMAT=\"$2\"\n        shift 2 || { MS_Usage; exit 1; }\n    ;;\n    --tar-extra)\n\t    TAR_EXTRA=\"$2\"\n        shift 2 || { MS_Usage; exit 1; }\n    ;;\n    --untar-extra)\n        UNTAR_EXTRA=\"$2\"\n        shift 2 || { MS_Usage; exit 1; }\n        ;;\n    --target)\n\t  TARGETDIR=\"$2\"\n\t  KEEP=y\n    shift 2 || { MS_Usage; exit 1; }\n \t  ;;\n    --sign)\n    SIGN=y\n    GPG_PASSPHRASE=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n    ;;\n    --nooverwrite)\n        NOOVERWRITE=y\n\tshift\n        ;;\n    --needroot)\n\tNEED_ROOT=y\n\tshift\n\t;;\n    --header)\n\tHEADER=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --preextract)\n    preextract_file=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n    test -r \"$preextract_file\" || { echo \"Unable to open pre-extraction script: $preextract_file\" >&2; exit 1; }\n    PREEXTRACT_ENCODED=`base64 < \"$preextract_file\"`\n    ;;\n    --cleanup)\n    CLEANUP_SCRIPT=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n    ;;\n    --license)\n        # We need to escape all characters having a special meaning in double quotes\n        LICENSE=$(sed 's/\\\\/\\\\\\\\/g; s/\"/\\\\\\\"/g; s/`/\\\\\\`/g; s/\\$/\\\\\\$/g' \"$2\")\n        shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --follow)\n\tTAR_ARGS=rvhf\n\tDU_ARGS=-ksL\n\tshift\n\t;;\n    --noprogress)\n\tNOPROGRESS=y\n\tshift\n\t;;\n    --nox11)\n\tNOX11=y\n\tshift\n\t;;\n    --nowait)\n\tNOWAIT=y\n\tshift\n\t;;\n    --nomd5)\n\tNOMD5=y\n\tshift\n\t;;\n    --sha256)\n        SHA256=y\n        shift\n        ;;\n    --nocrc)\n\tNOCRC=y\n\tshift\n\t;;\n    --append)\n\tAPPEND=y\n\tshift\n\t;;\n    --lsm)\n\tLSM_CMD=\"awk 1 \\\"$2\\\" >> \\\"\\$archname\\\"\"\n    shift 2 || { MS_Usage; exit 1; }\n\t;;\n    --packaging-date)\n\tDATE=\"$2\"\n    shift 2 || { MS_Usage; exit 1; }\n        ;;\n    --help-header)\n\tHELPHEADER=`sed -e \"s/'/'\\\\\\\\\\''/g\" $2`\n    shift 2 || { MS_Usage; exit 1; }\n\t[ -n \"$HELPHEADER\" ] && HELPHEADER=\"$HELPHEADER\n\"\n    ;;\n    --tar-quietly)\n\tTAR_QUIETLY=y\n\tshift\n\t;;\n\t--keep-umask)\n\tKEEP_UMASK=y\n\tshift\n\t;;\n    --export-conf)\n    EXPORT_CONF=y\n    shift\n    ;;\n    -q | --quiet)\n\tQUIET=y\n\tshift\n\t;;\n    -h | --help)\n\tMS_Usage\n\t;;\n    -*)\n\techo Unrecognized flag : \"$1\"\n\tMS_Usage\n\t;;\n    *)\n\tbreak\n\t;;\n    esac\ndone\n\nif test $# -lt 1; then\n\tMS_Usage\nelse\n\tif test -d \"$1\"; then\n\t\tarchdir=\"$1\"\n\telse\n\t\techo \"Directory $1 does not exist.\" >&2\n\t\texit 1\n\tfi\nfi\narchname=\"$2\"\n\nif test \"$QUIET\" = \"y\" || test \"$TAR_QUIETLY\" = \"y\"; then\n    if test \"$TAR_ARGS\" = \"rvf\"; then\n\t    TAR_ARGS=\"rf\"\n    elif test \"$TAR_ARGS\" = \"rvhf\"; then\n\t    TAR_ARGS=\"rhf\"\n    fi\nfi\n\nif test \"$APPEND\" = y; then\n    if test $# -lt 2; then\n    \tMS_Usage\n    fi\n\n    # Gather the info from the original archive\n    OLDENV=`sh \"$archname\" --dumpconf`\n    if test $? -ne 0; then\n\t    echo \"Unable to update archive: $archname\" >&2\n\t    exit 1\n    else\n\t    eval \"$OLDENV\"\n\t    OLDSKIP=`expr $SKIP + 1`\n    fi\nelse\n    if test \"$KEEP\" = n -a $# = 3; then\n\t    echo \"ERROR: Making a temporary archive with no embedded command does not make sense!\" >&2\n    \techo >&2\n    \tMS_Usage\n    fi\n    # We don't want to create an absolute directory unless a target directory is defined\n    if test \"$CURRENT\" = y; then\n\t    archdirname=\".\"\n    elif test x\"$TARGETDIR\" != x; then\n\t    archdirname=\"$TARGETDIR\"\n    else\n\t    archdirname=`basename \"$1\"`\n    fi\n\n    if test $# -lt 3; then\n\t    MS_Usage\n    fi\n\n    LABEL=\"$3\"\n    SCRIPT=\"$4\"\n    test \"x$SCRIPT\" = x || shift 1\n    shift 3\n    SCRIPTARGS=\"$*\"\nfi\n\nif test \"$KEEP\" = n -a \"$CURRENT\" = y; then\n    echo \"ERROR: It is A VERY DANGEROUS IDEA to try to combine --notemp and --current.\" >&2\n    exit 1\nfi\n\ncase $COMPRESS in\ngzip)\n    GZIP_CMD=\"gzip -c$COMPRESS_LEVEL\"\n    GUNZIP_CMD=\"gzip -cd\"\n    ;;\npigz) \n    GZIP_CMD=\"pigz -$COMPRESS_LEVEL\"\n    if test $THREADS -ne $DEFAULT_THREADS; then # Leave as the default if threads not indicated\n        GZIP_CMD=\"$GZIP_CMD --processes $THREADS\"\n    fi\n    GUNZIP_CMD=\"gzip -cd\"\n    ;;\nzstd)\n    GZIP_CMD=\"zstd -$COMPRESS_LEVEL\"\n    if test $THREADS -ne $DEFAULT_THREADS; then # Leave as the default if threads not indicated\n        GZIP_CMD=\"$GZIP_CMD --threads=$THREADS\"\n    fi\n    GUNZIP_CMD=\"zstd -cd\"\n    ;;\npbzip2)\n    GZIP_CMD=\"pbzip2 -c$COMPRESS_LEVEL\"\n    if test $THREADS -ne $DEFAULT_THREADS; then # Leave as the default if threads not indicated\n        GZIP_CMD=\"$GZIP_CMD -p$THREADS\"\n    fi\n    GUNZIP_CMD=\"bzip2 -d\"\n    ;;\nbzip3)\n    # Map the compression level to a block size in MiB as 2^(level-1).\n    BZ3_COMPRESS_LEVEL=`echo \"2^($COMPRESS_LEVEL-1)\" | bc`\n    GZIP_CMD=\"bzip3 -b$BZ3_COMPRESS_LEVEL\"\n    if test $THREADS -ne $DEFAULT_THREADS; then # Leave as the default if threads not indicated\n        GZIP_CMD=\"$GZIP_CMD -j$THREADS\"\n    fi\n    JOBS=`echo \"10-$COMPRESS_LEVEL\" | bc`\n    GUNZIP_CMD=\"bzip3 -dj$JOBS\"\n    ;;\nbzip2)\n    GZIP_CMD=\"bzip2 -$COMPRESS_LEVEL\"\n    GUNZIP_CMD=\"bzip2 -d\"\n    ;;\nxz)\n    GZIP_CMD=\"xz -c$COMPRESS_LEVEL\"\n    # Must opt-in by specifying a value since not all versions of xz support threads\n    if test $THREADS -ne $DEFAULT_THREADS; then \n        GZIP_CMD=\"$GZIP_CMD --threads=$THREADS\"\n    fi\n    GUNZIP_CMD=\"xz -d\"\n    ;;\nlzo)\n    GZIP_CMD=\"lzop -c$COMPRESS_LEVEL\"\n    GUNZIP_CMD=\"lzop -d\"\n    ;;\nlz4)\n    GZIP_CMD=\"lz4 -c$COMPRESS_LEVEL\"\n    GUNZIP_CMD=\"lz4 -d\"\n    ;;\nbase64)\n    GZIP_CMD=\"base64\"\n    GUNZIP_CMD=\"base64 --decode -i -\"\n    ;;\ngpg)\n    GZIP_CMD=\"gpg $GPG_EXTRA -ac -z$COMPRESS_LEVEL\"\n    GUNZIP_CMD=\"gpg -d\"\n    ENCRYPT=\"gpg\"\n    ;;\ngpg-asymmetric)\n    GZIP_CMD=\"gpg $GPG_EXTRA -z$COMPRESS_LEVEL -es\"\n    GUNZIP_CMD=\"gpg --yes -d\"\n    ENCRYPT=\"gpg\"\n    ;;\ncompress)\n    GZIP_CMD=\"compress -fc\"\n    GUNZIP_CMD=\"(type compress >/dev/null 2>&1 && compress -fcd || gzip -cd)\"\n    ;;\nnone)\n    GZIP_CMD=\"cat\"\n    GUNZIP_CMD=\"cat\"\n    ;;\nesac\n\nif test x\"$ENCRYPT\" = x\"openssl\"; then\n    if test x\"$APPEND\" = x\"y\"; then\n        echo \"Appending to existing archive is not compatible with OpenSSL encryption.\" >&2\n    fi\n    \n    ENCRYPT_CMD=\"openssl enc -aes-256-cbc -salt -pbkdf2\"\n    DECRYPT_CMD=\"openssl enc -aes-256-cbc -d -salt -pbkdf2\"\n    \n    if test x\"$OPENSSL_NO_MD\" != x\"y\"; then\n        ENCRYPT_CMD=\"$ENCRYPT_CMD -md sha256\"\n        DECRYPT_CMD=\"$DECRYPT_CMD -md sha256\"\n    fi\n\n    if test -n \"$PASSWD_SRC\"; then\n        ENCRYPT_CMD=\"$ENCRYPT_CMD -pass $PASSWD_SRC\"\n    elif test -n \"$PASSWD\"; then \n        ENCRYPT_CMD=\"$ENCRYPT_CMD -pass pass:$PASSWD\"\n    fi\nfi\n\ntmpfile=\"${TMPDIR:-/tmp}/mkself$$\"\n\nif test -f \"$HEADER\"; then\n\toldarchname=\"$archname\"\n\tarchname=\"$tmpfile\"\n\t# Generate a fake header to count its lines\n\tSKIP=0\n\t. \"$HEADER\"\n\tSKIP=`cat \"$tmpfile\" |wc -l`\n\t# Get rid of any spaces\n\tSKIP=`expr $SKIP`\n\trm -f \"$tmpfile\"\n\tif test \"$QUIET\" = \"n\"; then\n\t\techo \"Header is $SKIP lines long\" >&2\n\tfi\n\tarchname=\"$oldarchname\"\nelse\n    echo \"Unable to open header file: $HEADER\" >&2\n    exit 1\nfi\n\nif test \"$QUIET\" = \"n\"; then\n    echo\nfi\n\nif test \"$APPEND\" = n; then\n    if test -f \"$archname\"; then\n\t\techo \"WARNING: Overwriting existing file: $archname\" >&2\n    fi\nfi\n\nUSIZE=`du $DU_ARGS \"$archdir\" | awk '{print $1}'`\n\nif test \".\" = \"$archdirname\"; then\n\tif test \"$KEEP\" = n; then\n\t\tarchdirname=\"makeself-$$-`date +%Y%m%d%H%M%S`\"\n\tfi\nfi\n\ntest -d \"$archdir\" || { echo \"Error: $archdir does not exist.\"; rm -f \"$tmpfile\"; exit 1; }\nif test \"$QUIET\" = \"n\"; then\n   echo \"About to compress $USIZE KB of data...\"\n   echo \"Adding files to archive named \\\"$archname\\\"...\"\nfi\n\n# See if we have GNU tar\nTAR=`exec <&- 2>&-; which gtar || command -v gtar || type gtar`\ntest -x \"$TAR\" || TAR=`exec <&- 2>&-; which bsdtar || command -v bsdtar || type bsdtar`\ntest -x \"$TAR\" || TAR=tar\n\ntmparch=\"${TMPDIR:-/tmp}/mkself$$.tar\"\n(\n    if test \"$APPEND\" = \"y\"; then\n        tail -n \"+$OLDSKIP\" \"$archname\" | eval \"$GUNZIP_CMD\" > \"$tmparch\"\n    fi\n    cd \"$archdir\"\n    # \"Determining if a directory is empty\"\n    # https://www.etalabs.net/sh_tricks.html\n    find . \\\n        \\( \\\n        ! -type d \\\n        -o \\\n        \\( -links 2 -exec sh -c '\n            is_empty () (\n                cd \"$1\"\n                set -- .[!.]* ; test -f \"$1\" && return 1\n                set -- ..?* ; test -f \"$1\" && return 1\n                set -- * ; test -f \"$1\" && return 1\n                return 0\n            )\n            is_empty \"$0\"' {} \\; \\\n        \\) \\\n        \\) -print \\\n        | LC_ALL=C sort \\\n        | sed 's/./\\\\&/g' \\\n        | xargs $TAR $TAR_EXTRA --format $TAR_FORMAT -$TAR_ARGS \"$tmparch\"\n) || {\n    echo \"ERROR: failed to create temporary archive: $tmparch\"\n    rm -f \"$tmparch\" \"$tmpfile\"\n    exit 1\n}\n\nUSIZE=`du $DU_ARGS \"$tmparch\" | awk '{print $1}'`\n\neval \"$GZIP_CMD\" <\"$tmparch\" >\"$tmpfile\" || {\n    echo \"ERROR: failed to create temporary file: $tmpfile\"\n    rm -f \"$tmparch\" \"$tmpfile\"\n    exit 1\n}\nrm -f \"$tmparch\"\n\nif test x\"$ENCRYPT\" = x\"openssl\"; then\n    echo \"About to encrypt archive \\\"$archname\\\"...\"\n    { eval \"$ENCRYPT_CMD -in $tmpfile -out ${tmpfile}.enc\" && mv -f ${tmpfile}.enc $tmpfile; } || \\\n        { echo Aborting: could not encrypt temporary file: \"$tmpfile\".; rm -f \"$tmpfile\"; exit 1; }\nfi\n\nfsize=`cat \"$tmpfile\" | wc -c | tr -d \" \"`\n\n# Compute the checksums\n\nshasum=0000000000000000000000000000000000000000000000000000000000000000\nmd5sum=00000000000000000000000000000000\ncrcsum=0000000000\n\nif test \"$NOCRC\" = y; then\n\tif test \"$QUIET\" = \"n\"; then\n\t\techo \"skipping crc at user request\"\n\tfi\nelse\n\tcrcsum=`CMD_ENV=xpg4 cksum < \"$tmpfile\" | sed -e 's/ /Z/' -e 's/\t/Z/' | cut -dZ -f1`\n\tif test \"$QUIET\" = \"n\"; then\n\t\techo \"CRC: $crcsum\"\n\tfi\nfi\n\nif test \"$SHA256\" = y; then\n\tSHA_PATH=`exec <&- 2>&-; which shasum || command -v shasum || type shasum`\n\tif test -x \"$SHA_PATH\"; then\n\t\tshasum=`eval \"$SHA_PATH -a 256\" < \"$tmpfile\" | cut -b-64`\n\telse\n\t\tSHA_PATH=`exec <&- 2>&-; which sha256sum || command -v sha256sum || type sha256sum`\n\t\tshasum=`eval \"$SHA_PATH\" < \"$tmpfile\" | cut -b-64`\n\tfi\n\tif test \"$QUIET\" = \"n\"; then\n\t\tif test -x \"$SHA_PATH\"; then\n\t\t\techo \"SHA256: $shasum\"\n\t\telse\n\t\t\techo \"SHA256: none, SHA command not found\"\n\t\tfi\n\tfi\nfi\nif test \"$NOMD5\" = y; then\n\tif test \"$QUIET\" = \"n\"; then\n\t\techo \"Skipping md5sum at user request\"\n\tfi\nelse\n\t# Try to locate a MD5 binary\n\tOLD_PATH=$PATH\n\tPATH=${GUESS_MD5_PATH:-\"$OLD_PATH:/bin:/usr/bin:/sbin:/usr/local/ssl/bin:/usr/local/bin:/opt/openssl/bin\"}\n\tMD5_ARG=\"\"\n\tMD5_PATH=`exec <&- 2>&-; which md5sum || command -v md5sum || type md5sum`\n\ttest -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which md5 || command -v md5 || type md5`\n\ttest -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which digest || command -v digest || type digest`\n\tPATH=$OLD_PATH\n\tif test -x \"$MD5_PATH\"; then\n\t\tif test `basename ${MD5_PATH}`x = digestx; then\n\t\t\tMD5_ARG=\"-a md5\"\n\t\tfi\n\t\tmd5sum=`eval \"$MD5_PATH $MD5_ARG\" < \"$tmpfile\" | cut -b-32`\n\t\tif test \"$QUIET\" = \"n\"; then\n\t\t\techo \"MD5: $md5sum\"\n\t\tfi\n\telse\n\t\tif test \"$QUIET\" = \"n\"; then\n\t\t\techo \"MD5: none, MD5 command not found\"\n\t\tfi\n\tfi\nfi\nif test \"$SIGN\" = y; then\n    GPG_PATH=`exec <&- 2>&-; which gpg || command -v gpg || type gpg`\n    if test -x \"$GPG_PATH\"; then\n        SIGNATURE=`$GPG_PATH --pinentry-mode=loopback --batch --yes $GPG_EXTRA --passphrase \"$GPG_PASSPHRASE\" --output - --detach-sig $tmpfile | base64 | tr -d \\\\\\\\n`\n        if test \"$QUIET\" = \"n\"; then\n            echo \"Signature: $SIGNATURE\"\n        fi\n    else\n        echo \"Missing gpg command\" >&2\n    fi\nfi\n\ntotalsize=0\nfor size in $fsize;\ndo\n    totalsize=`expr $totalsize + $size`\ndone\n\nif test \"$APPEND\" = y; then\n    mv \"$archname\" \"$archname\".bak || exit\n\n    # Prepare entry for new archive\n    filesizes=\"$fsize\"\n    CRCsum=\"$crcsum\"\n    MD5sum=\"$md5sum\"\n    SHAsum=\"$shasum\"\n    Signature=\"$SIGNATURE\"\n    # Generate the header\n    . \"$HEADER\"\n    # Append the new data\n    cat \"$tmpfile\" >> \"$archname\"\n\n    chmod +x \"$archname\"\n    rm -f \"$archname\".bak\n    if test \"$QUIET\" = \"n\"; then\n    \techo \"Self-extractable archive \\\"$archname\\\" successfully updated.\"\n    fi\nelse\n    filesizes=\"$fsize\"\n    CRCsum=\"$crcsum\"\n    MD5sum=\"$md5sum\"\n    SHAsum=\"$shasum\"\n    Signature=\"$SIGNATURE\"\n\n    # Generate the header\n    . \"$HEADER\"\n\n    # Append the compressed tar data after the stub\n    if test \"$QUIET\" = \"n\"; then\n    \techo\n    fi\n    cat \"$tmpfile\" >> \"$archname\"\n    chmod +x \"$archname\"\n    if test \"$QUIET\" = \"n\"; then\n    \techo Self-extractable archive \\\"$archname\\\" successfully created.\n    fi\nfi\nrm -f \"$tmpfile\"\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}