{
  "metadata": {
    "timestamp": 1736568500987,
    "page": 489,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aqzt/kjyw",
      "stars": 1735,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.021484375,
          "content": "*.exe\r\n*.user\r\n*.log\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0634765625,
          "content": "MIT License\n\nCopyright (c) 2017 robert@aqzt.com https://aqzt.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.279296875,
          "content": "# kjyw 快捷运维\n\n\n## 项目简介\n- 快捷运维，代号：kjyw，运维脚本工具库，项目基于shell开发，收集各类运维常用工具脚本；\n- 实现快速安装nginx、mysql、php、redis、nagios、运维经常使用的脚本等等... \n- 简单 高效 快捷！\n- Linux下很多操作命令，都可以根据业务需求通用化，脚本化，关键是思路，很多LAMP/LNMP一键安装包，也是这样。\n- 脚本化后，可以结合一些自动化工具，批量部署，比如可以用ansible来批量执行脚本，就可以批量部署服务器业务。\n- 这里面的脚本是运维经常使用的脚本，方便大家使用！\n\n## 快捷运维官方地址\n- 开源中国●码云地址：https://gitee.com/aqztcom/kjyw.git\n- Github地址：https://github.com/aqzt/kjyw.git\n- 相关使用文档：https://aqzt.com/circle\n- 有问题反馈：https://aqzt.com/circle\n\n## 为什么要做快捷运维？\n- 相信大家都知道，运维是一项非常重要且时效性要求很高的工作，项目和程序发布，升级，更新都少不了运维的操作，\n- 因此运维也是个少不了加班的职业。我喜欢运维，但我也不希望经常加班太多，\n- 于是我就思考如何能优化我的运维工作，提高效率，本来要几个小时的工作任务，能否在几分钟之内完成呢？\n\n## 使用快捷运维脚本的好处\n- 工作任务可以快速完成，提高效率，减少加班，这样就有更多的时间陪家人，或做其他事情啦！\n- 可以和自动化工具结合，批量部署业务，如果有3-5台服务器，直接SSH远程编译安装，\n- 如果几十台服务器，上百台服务器，上千台服务器都要安装某个应用呢？\n- 可以用快捷运维脚本结合自动化工具（比如：ansible），批量推送执行脚本即可。\n- 知名CEO说过：“在这个纷繁复杂的世界上，决策比别人快，很可能就赢了”，做正确决策比别人快，你就赢了。\n- 在部署运维需求的时候，部署效果一样的情况下，你比其他人部署快，你就比其他人更优秀。\n\n## 使用场景\n- 【举个例子】\n- 某天，某人，因某业务，有redis部署需求，需要批量部署一组redis服务，端口从8001到8009，\n- 简单，马上开始部署，编译redis，拷贝redis执行文件，配置文件，8001端口，启动，再拷贝redis执行文件，修改配置文件，8002…………\n- 半小时后部署好了，完成！\n- 有没有更好的方法，可以提高效率，快速完成呢？\n- 如果用脚本部署，只需要1分钟搞定，主要是编译redis时间，大大提高效率，快捷，快捷，快捷啊！\n- 第一步 编译redis\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/install.sh | sh\n- 第二步 拷贝redis执行文件，修改配置文件，并启动\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh | sh -s  install 8001 8009\n- 完成！\n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis1.gif)\n- 批量关闭redis端口 8001到8009\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh  | sh -s  stop 8001 8009\n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis2.gif)\n- 批量启动redis端口 8001到8009\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh  | sh -s  start 8001 8009 \n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis3.gif)\n- 快捷运维还有其他运维经常使用的脚本，方便使用，提高效率！\n\n\n## 适合使用快捷运维脚本的职业\n- 运维工程师  （方便运维工程师搭建业务生产环境，最好先测试脚本，在用于生产环境）\n- 开发工程师  （方便开发工程师搭建开发环境）\n- 测试工程师  （方便测试工程师搭建测试环境）\n\n\n## 一起来参与，分享或是交流\n- 一起参与完善快捷运维脚本工具库，很多脚本都可以复用，或者改改就可以适用某业务需求，提高工作效率！\n- 如果想分享或是交流的话，请加 QQ 群： 7652650 （安全运维）\n- Email：ppabc@qq.com\n\n\n## 微信关注\n\n![image](https://gitee.com/aqztcom/kjyw/raw/master/images/aqzt.jpg)\n\n- 运维就是踩坑，踩坑的最高境界就是：踩遍所有的坑，让别人无坑可踩！\n- 做事的宗旨是：一条命令的事，一个脚本的事！\n\n"
        },
        {
          "name": "README_osc.md",
          "type": "blob",
          "size": 4.279296875,
          "content": "# kjyw 快捷运维\n\n\n## 项目简介\n- 快捷运维，代号：kjyw，运维脚本工具库，项目基于shell开发，收集各类运维常用工具脚本；\n- 实现快速安装nginx、mysql、php、redis、nagios、运维经常使用的脚本等等... \n- 简单 高效 快捷！\n- Linux下很多操作命令，都可以根据业务需求通用化，脚本化，关键是思路，很多LAMP/LNMP一键安装包，也是这样。\n- 脚本化后，可以结合一些自动化工具，批量部署，比如可以用ansible来批量执行脚本，就可以批量部署服务器业务。\n- 这里面的脚本是运维经常使用的脚本，方便大家使用！\n\n## 快捷运维官方地址\n- 开源中国●码云地址：https://gitee.com/aqztcom/kjyw.git\n- Github地址：https://github.com/aqzt/kjyw.git\n- 相关使用文档：https://aqzt.com/circle\n- 有问题反馈：https://aqzt.com/circle\n\n## 为什么要做快捷运维？\n- 相信大家都知道，运维是一项非常重要且时效性要求很高的工作，项目和程序发布，升级，更新都少不了运维的操作，\n- 因此运维也是个少不了加班的职业。我喜欢运维，但我也不希望经常加班太多，\n- 于是我就思考如何能优化我的运维工作，提高效率，本来要几个小时的工作任务，能否在几分钟之内完成呢？\n\n## 使用快捷运维脚本的好处\n- 工作任务可以快速完成，提高效率，减少加班，这样就有更多的时间陪家人，或做其他事情啦！\n- 可以和自动化工具结合，批量部署业务，如果有3-5台服务器，直接SSH远程编译安装，\n- 如果几十台服务器，上百台服务器，上千台服务器都要安装某个应用呢？\n- 可以用快捷运维脚本结合自动化工具（比如：ansible），批量推送执行脚本即可。\n- 知名CEO说过：“在这个纷繁复杂的世界上，决策比别人快，很可能就赢了”，做正确决策比别人快，你就赢了。\n- 在部署运维需求的时候，部署效果一样的情况下，你比其他人部署快，你就比其他人更优秀。\n\n## 使用场景\n- 【举个例子】\n- 某天，某人，因某业务，有redis部署需求，需要批量部署一组redis服务，端口从8001到8009，\n- 简单，马上开始部署，编译redis，拷贝redis执行文件，配置文件，8001端口，启动，再拷贝redis执行文件，修改配置文件，8002…………\n- 半小时后部署好了，完成！\n- 有没有更好的方法，可以提高效率，快速完成呢？\n- 如果用脚本部署，只需要1分钟搞定，主要是编译redis时间，大大提高效率，快捷，快捷，快捷啊！\n- 第一步 编译redis\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/install.sh | sh\n- 第二步 拷贝redis执行文件，修改配置文件，并启动\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh | sh -s  install 8001 8009\n- 完成！\n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis1.gif)\n- 批量关闭redis端口 8001到8009\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh  | sh -s  stop 8001 8009\n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis2.gif)\n- 批量启动redis端口 8001到8009\n- curl -s https://gitee.com/aqztcom/kjyw/raw/master/redis/redis_port.sh  | sh -s  start 8001 8009 \n- ![image](https://gitee.com/aqztcom/kjyw/raw/master/images/redis3.gif)\n- 快捷运维还有其他运维经常使用的脚本，方便使用，提高效率！\n\n\n## 适合使用快捷运维脚本的职业\n- 运维工程师  （方便运维工程师搭建业务生产环境，最好先测试脚本，在用于生产环境）\n- 开发工程师  （方便开发工程师搭建开发环境）\n- 测试工程师  （方便测试工程师搭建测试环境）\n\n\n## 一起来参与，分享或是交流\n- 一起参与完善快捷运维脚本工具库，很多脚本都可以复用，或者改改就可以适用某业务需求，提高工作效率！\n- 如果想分享或是交流的话，请加 QQ 群： 7652650 （安全运维）\n- Email：ppabc@qq.com\n\n\n## 微信关注\n\n![image](https://gitee.com/aqztcom/kjyw/raw/master/images/aqzt.jpg)\n\n- 运维就是踩坑，踩坑的最高境界就是：踩遍所有的坑，让别人无坑可踩！\n- 做事的宗旨是：一条命令的事，一个脚本的事！\n\n"
        },
        {
          "name": "ansible",
          "type": "tree",
          "content": null
        },
        {
          "name": "cacti",
          "type": "tree",
          "content": null
        },
        {
          "name": "cobbler",
          "type": "tree",
          "content": null
        },
        {
          "name": "codis",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "elk",
          "type": "tree",
          "content": null
        },
        {
          "name": "epel",
          "type": "tree",
          "content": null
        },
        {
          "name": "expect",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdisk",
          "type": "tree",
          "content": null
        },
        {
          "name": "flume",
          "type": "tree",
          "content": null
        },
        {
          "name": "ganglia",
          "type": "tree",
          "content": null
        },
        {
          "name": "git",
          "type": "tree",
          "content": null
        },
        {
          "name": "glibc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "hadoop",
          "type": "tree",
          "content": null
        },
        {
          "name": "harbor",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "iptables",
          "type": "tree",
          "content": null
        },
        {
          "name": "kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "keepalive",
          "type": "tree",
          "content": null
        },
        {
          "name": "linux-init-script",
          "type": "tree",
          "content": null
        },
        {
          "name": "mail",
          "type": "tree",
          "content": null
        },
        {
          "name": "mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "nagios",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "node.js",
          "type": "tree",
          "content": null
        },
        {
          "name": "openssh",
          "type": "tree",
          "content": null
        },
        {
          "name": "openssl",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "rsync",
          "type": "tree",
          "content": null
        },
        {
          "name": "saltstack",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell",
          "type": "tree",
          "content": null
        },
        {
          "name": "snmp",
          "type": "tree",
          "content": null
        },
        {
          "name": "ss5",
          "type": "tree",
          "content": null
        },
        {
          "name": "storm",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "zabbix",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}