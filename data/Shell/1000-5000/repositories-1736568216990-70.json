{
  "metadata": {
    "timestamp": 1736568216990,
    "page": 70,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "internetwache/GitTools",
      "stars": 3899,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dumper",
          "type": "tree",
          "content": null
        },
        {
          "name": "Extractor",
          "type": "tree",
          "content": null
        },
        {
          "name": "Finder",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright >=2015 Sebastian Neef\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.52734375,
          "content": " [![GitHub stars](https://img.shields.io/github/stars/internetwache/GitTools.svg)](https://github.com/internetwache/GitTools/stargazers)\n [![GitHub license](https://img.shields.io/github/license/internetwache/GitTools.svg)](https://github.com/internetwache/GitTools/blob/master/LICENSE.md)\n \n\n# GitTools\n\nThis repository contains three small python/bash scripts used for the Git research. [Read about it here](https://en.internetwache.org/dont-publicly-expose-git-or-how-we-downloaded-your-websites-sourcecode-an-analysis-of-alexas-1m-28-07-2015/)\n\n## Finder\n\nYou can use this tool to find websites with their .git repository available to the public\n\n### Usage\n\nThis python script identifies websites with publicly accessible ```.git``` repositories.\nIt checks if the ```.git/HEAD``` file contains ```refs/heads```.\n\n```\n$ ./gitfinder.py -h\n\n###########\n# Finder is part of https://github.com/internetwache/GitTools\n#\n# Developed and maintained by @gehaxelt from @internetwache\n#\n# Use at your own risk. Usage might be illegal in certain circumstances.\n# Only for educational purposes!\n###########\n\nusage: gitfinder.py [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-t THREADS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputfile INPUTFILE\n                        input file\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        output file\n  -t THREADS, --threads THREADS\n                        threads\n```\n\nThe input file should contain the targets one per line.\nThe script will output discovered domains in the form of ```[*] Found: DOMAIN``` to stdout.\n\n#### Scanning Alexaâ€™s Top 1M\n\n```\nwget http://s3.amazonaws.com/alexa-static/top-1m.csv.zip\nunzip top-1m.csv.zip\nsed -i.bak 's/.*,//' top-1m.csv\n./gitfinder.py -i top-1m.csv\n```\n\n## Dumper\n\nThis tool can be used to download as much as possible from the found .git repository from webservers which do not have directory listing enabled.\n\n### Usage\n\n```\n$ ./gitdumper.sh -h\n\n[*] USAGE: http://target.tld/.git/ dest-dir [--git-dir=otherdir]\n\t\t--git-dir=otherdir\t\tChange the git folder name. Default: .git\n\n```\n\nNote: This tool has no 100% guaranty to completely recover the .git repository. Especially if the repository has been compressed into ```pack```-files, it may fail.\n\n\n## Extractor\n\nA small bash script to extract commits and their content from a broken repository.\n\nThis script tries to recover incomplete git repositories:\n\n- Iterate through all commit-objects of a repository\n- Try to restore the contents of the commit\n- Commits are *not* sorted by date\n\n### Usage\n\n```\n$ ./extractor.sh /tmp/mygitrepo /tmp/mygitrepodump\n```\nwhere\n- ```/tmp/mygitrepo``` contains a ```.git``` directory\n- ```/tmp/mygitrepodump``` is the destination directory\n\nThis can be used in combination with the ```Git Dumper``` in case the downloaded repository is incomplete.\n\n\n## Demo\n\nHere's a small demo of the **Dumper** tool:\n\n[![asciicast](https://asciinema.org/a/24072.png)](https://asciinema.org/a/24072)\n\n## Proxy support\n\nThe `urllib` and `curl` should support proxy configuration through environment variables:\n\nIn bash, set:\n\n```\nexport HTTP_PROXY=http://proxy_url:proxy_port\nexport HTTPS_PROXY=http://proxy_url:proxy_port\n```\n\nIn Window's CMD, use:\n\n```\nset HTTP_PROXY=http://proxy_url:proxy_port\nset HTTPS_PROXY=http://proxy_url:proxy_port\n```\n\nBasic auth should be supported with:\n\n```\nhttp://username:password@proxy_url:proxy_port\n```\n\n## Requirements\n* git\n* Python 3+\n* curl\n* bash\n* sed\n* binutils (strings)\n\n# License\n\nAll tools are licensed using the MIT license. See [LICENSE.md](LICENSE.md)\n"
        }
      ]
    }
  ]
}