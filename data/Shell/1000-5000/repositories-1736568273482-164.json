{
  "metadata": {
    "timestamp": 1736568273482,
    "page": 164,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "postmodern/chruby",
      "stars": 2880,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.23046875,
          "content": "/doc/\n/pkg/*.tar.gz\n/pkg/*.tar.bz2\n/pkg/*.zip\n/test/unit/fixtures/root/opt/rubies\n/test/unit/fixtures/root/home/.zcompdump\n/test/unit/fixtures/ruby_versions/.ruby-version\n/test/unit/fixtures/ruby_versions/modified_version/.ruby-version\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3876953125,
          "content": "sudo: false\n\nmatrix:\n  include:\n    - os: linux\n      dist: xenial\n    - os: osx\n      osx_image: xcode9.2\n\nlanguage: c\n\naddons:\n  apt:\n    packages:\n      - ruby\n      - shunit2\n      - zsh\n  homebrew:\n    packages:\n      - shunit2\n    update: true\n\nbefore_script:\n  - sudo rm -rf $HOME/.rvm $HOME/.rvmrc\n  - __rvm_unload\n  - export SHUNIT2=\"$(command -v shunit2 2>/dev/null)\"\n\nscript: make test\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7021484375,
          "content": "# Contributing\n\n## Code Style\n\n* Tab indent code.\n* Keep code within 80 columns.\n* Global variables must be UPPERCASE. Temporary variables should be lowercase.\n* Use the `function` keyword for functions.\n* Quote all String variables.\n* Use `(( ))` for arithmetic expressions and `[[ ]]` otherwise.\n* Use `$(...)` instead of back-ticks.\n* Use `${path##*/}` instead of `$(basename $path)`.\n* Use `${path%/*}` instead of `$(dirname $path)`.\n* Prefer single-line expressions where appropriate:\n\n        [[ -n \"$foo\" ]] && other command\n\n        if   [[ \"$foo\" == \"bar\" ]]; then command\n        elif [[ \"$foo\" == \"baz\" ]]; then other_command\n        fi\n\n        case \"$foo\" in\n        \tbar) command ;;\n        \tbaz) other_command ;;\n        esac\n\n## Pull Request Guidelines\n\n* Additional features should go in separate files within `share/chruby/`.\n* All new code must have [shunit2] unit-tests.\n* If a feature is out of scope or does more than switches Rubies,\n  it should become its own project. Simply copy the generic [Makefile]\n  for shell script projects.\n\n### What Will Not Be Accepted\n\n* Completion: tab completion is not necessary for fuzzy matching\n  (ex: `chruby 1.9`).\n* Gemset functionality: there is already [gem_home] and others, which provides\n  gemset like behavior.\n* Sub-commands: this tends to promote bloat. It was first popularized by [RVM]\n  and then copied by [rbenv].\n* [Bash][bash] or [Zsh][zsh] only features: chruby must fully support both\n  [bash] and [zsh].\n* New `.files`: we should strive to prevent dotfile proliferation, and instead\n  support common dotfiles which other Ruby Switchers could support.\n* New environment variables: much like with dotfile proliferation,\n  we should keep environment variable pollution to a minimum.\n* Ruby, RubyGems, or OS specific workarounds: we should not tolerate the\n  existence of bugs in specific Rubies or Operating Systems. Instead we should\n  strive to resolve these bugs, to the benefit of all users.\n* Any [RVM]/[rbenv] specific feature: we should not blindly copy the features of\n  [RVM] or [rbenv] in the hopes of making new users comfortable. Instead,\n  we should question these features and rethink (or unthink) them.\n  * Are some of these features even necessary?\n  * Could they be implemented differently?\n  * Do they over-optimize rarely performed tasks?\n  * Do they make assumptions about workflow?\n  * Do they add additional complexity?\n  * Do they introduce possible Security risks?\n\n[Makefile]: https://gist.github.com/3224049\n[shunit2]: https://github.com/kward/shunit2#readme\n\n[bash]: http://www.gnu.org/software/bash/\n[zsh]: http://www.zsh.org/\n\n[RVM]: https://rvm.io/\n[rbenv]: https://github.com/sstephenson/rbenv#readme\n\n[gem_home]: https://github.com/postmodern/gem_home#readme\n"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 9.830078125,
          "content": "### 0.3.9 / 2014-11-23\n\n#### chruby.sh\n\n* Stop searching `RUBIES` if an exact match is found. (@havenwood)\n\n#### auto.sh\n\n* Fixed a bug where `/.ruby-version` was being ignored. (@havenwood)\n\n#### chruby-exec\n\n* Ensure that all parameters are properly shell-escaped. (@havenwood)\n\n#### scripts/setup.sh\n\n* No longer install [ruby-install](https://github.com/postmodern/ruby-install#readme).\n\n#### scripts/bug_report.sh\n\n* Print `RUBYLIB`, `RUBYOPT`, `RUBYPATH` and `RUBYSHELL` env variables.\n* Include `chruby-exec` in the versions section.\n* Fall back to `-V` if `--version` did not work.\n\n### 0.3.8 / 2013-12-04\n\n#### chruby.sh\n\n* Remove trailing slashes from ruby directories when iterating over `RUBIES`.\n  (@halostatue)\n* Ensure all temporary variables are local or unset.\n\n#### auto.sh\n\n* Ensure that `chruby_auto` can read `.ruby-version` files that do not end with\n  a new-line. (@hosiawak)\n\n#### scripts/setup.sh\n\n* Install ruby-install 0.3.3.\n\n#### scripts/bug_report.sh\n\n* Print `$HOME`, `$RUBY_AUTO_VERSION`.\n* Print `trap -p`, `$preexec_functions` and `$precmd_functions`.\n* Print env variables even when they are empty.\n\n### 0.3.7 / 2013-08-18\n\n* Multiple style changes and optimizations. (@zendeavor)\n* Safely glob the contents of `/opt/rubies` and `~/.rubies`.\n  This prevents nullglob errors under zsh and `.rbx` directories from being\n  added to `RUBIES`.\n* Unset `GEM_PATH` in `chruby_reset` if it has become empty.\n  Allows the RubyGems to use the default `GEM_PATH`.\n* Safely quote `RUBIES[@]` to prevent implicit word-splitting when listing\n `RUBIES`.\n* Map `-V` to `--version` in `chruby`. (@havenwood)\n* Added benchmarks.\n\n#### auto.sh\n\n* Unset `RUBY_AUTO_VERSION` when loaded. Forces sub-shells to re-detect any\n  `.ruby-version` file. (@KevinSjoberg)\n* No longer export `RUBY_AUTO_VERSION`. Allows new windows in tmux to detect\n  the `.ruby-version` file.\n* Set `RUBY_AUTO_VERSION` even if `.ruby-version` contains an unknown Ruby.\n  Prevents `chruby` from printing errors after every command.\n* Fixed a typo where `RUBY_VERSION_FILE` was still being used. (@KevinSjoberg)\n\n#### chruby-exec\n\n* If stdin is a TTY, then spawn an interactive shell.\n\n### 0.3.6 / 2013-06-23\n\n* `chruby_use` no longer echos the selected Ruby.\n\n#### chruby-exec\n\n* Now runs under bash.\n* Load `chruby.sh` for `CHRUBY_VERSION`.\n\n#### auto.sh\n\n* Record and compare the contents of `.ruby-version` files in order to detect\n  modifications, such as when switching between branches.\n\n### 0.3.5 / 2013-05-28\n\n* Added a RPM spec.\n* Respect `PREFIX` when auto-detecting `/opt/rubies/*`.\n* Do not set `GEM_ROOT` if rubygems is not installed (Charlie Somerville).\n* `chruby_use` now echos the select ruby and the version, only if the shell is\n  in interactive mode (Brian D. Burns).\n* `chruby_reset` no longer accidentally removes `/bin` if `GEM_HOME` or\n  `GEM_ROOT` are empty (David Grayson).\n* `chruby` now selects the last lexical match for the given ruby.\n\n#### auto.sh\n\n* Ensure that auto-switching works in non-interactive mode:\n  * zsh: use `preexec_functions` which runs in both interactive and\n    non-interactive sessions.\n  * bash: use `trap DEBUG` which runs before every command, in both interactive\n    and non-interactive mode. `PROMPT_COMMAND` only runs in interactive mode.\n* Fixed a serious design flaw, where `chruby_auto` passed the contents of\n  `.ruby-version` as multiple arguments to the `chruby` function. Originally,\n  this allowed for `.ruby-version` files to specify additional `RUBYOPT` options\n  (ex: `jruby --1.8`). However, an attacker could craft a malicious\n  `.ruby-version` file that would require arbitrary code\n  (ex: `1.9.3 -r./evil.rb`). The `./evil.rb` file would then be required when\n  `ruby` is invoked by `chruby_use` in order to determine `RUBY_ENGINE`,\n  `RUBY_VERSION`, `GEM_ROOT`.\n\n  In order to prevent the abuse of this feature, `chruby_auto` now passes the\n  entire contents of `.ruby-version` as a first and only argument to the\n  `chruby` function.\n\n  If you have `auto.sh` enabled, it is recommended that you upgrade.\n  If you cannot upgrade, consider disabling `auto.sh`.\n  If you want to scan your entire system for malicious `.ruby-version` files:\n\n        find / -name .ruby-version 2>/dev/null | xargs -i{} grep -H \" \" {}\n\n  Thanks to David Grayson for reporting this flaw.\n\n#### scripts/setup.sh\n\n* Do not assume bash is installed at `/bin/bash` (Shannon Skipper).\n\n### 0.3.4 / 2013-02-28\n\n* Prepend the new gem paths to `GEM_PATH` in `chruby_use`, instead of\n  overriding the variable. This allows users to add common gem paths to\n  `GEM_PATH` in `~/.bashrc`.\n* Only remove the gem paths used by the Ruby in `chruby_reset`.\n\n#### auto.sh\n\n* Detect when `PROMPT_COMMAND=\" \"` before checking if `PROMPT_COMMAND` is an\n  empty String. This appears to only happen on OSX Mountain Lion.\n\n#### scripts/bug_report.sh\n\n* Include `CHRUBY_VERSION` in the output.\n\n### 0.3.3 / 2013-02-18\n\n* Added `-v` `--version` options to `chruby` and `chruby-exec`.\n* Added `scripts/bug_report.sh` for collecting environment information\n  for bug reports.\n* Initialize `RUBIES` to `()` to avoid double-loading `chruby.sh`.\n* Invoke `ruby` using the absolute path to avoid shell aliases.\n  This fixes a bug caused by [ohmyzsh] aliases.\n\n#### auto.sh\n\n* Unset `RUBY_VERSION_FILE` on initial load for [tmux].\n* Remove trailing `;` and whitespace from `PROMPT_COMMAND` before\n  appending `; chruby_auto`.\n\n#### scripts/setup.sh\n\n* Bump MRI version to 1.9.3-p385.\n* Use `\\x1b` instead of `\\e` for OSX.\n\n### 0.3.2 / 2013-01-15\n\n* Prevent `auto.sh` from being loaded more than once.\n* Recommend using `~/.bash_profile` and `~/.zprofile`.\n* Use `cp` and `mkdir` instead of `install` in the `Makefile`.\n\n#### chruby-exec\n\n* Run under [bash], to avoid the [dash] shell.\n* Invoke `$SHELL` with the `-i` option, so [zsh] will load shell configuration.\n\n#### scripts/setup.sh\n\n* Install [JRuby] 1.7.2.\n* Use special `./configure` options for [homebrew].\n* Also install openssl and readline via homebrew.\n\n### 0.3.1 / 2012-12-29\n\n* Fixed the auto-detection of `~/.rubies/*`.\n* Check if `bin/ruby` exists and is executable before switching to a Ruby.\n* Prevent `export=\"\"` from accidentally being set under [zsh].\n* Prevent `script/setup.sh` from exiting if a `brew install` fails because all\n  packages are already installed.\n* Updated the example `/etc/profile.d/chruby.sh` to only load under [bash]\n  and [zsh].\n\n### 0.3.0 / 2012-12-20\n\n* Added the `chruby-exec` utility for use in `crontab` or with Continuous\n  Integration (CI).\n* Added support for auto-detecting Rubies installed into `/opt/rubies/` or\n  `~/.rubies/`.\n* Added `share/chruby/auto.sh`, which provides support for auto-switching\n  to Rubies specified in the [.ruby-version](https://gist.github.com/1912050)\n  file.\n* Removed the \"short circuit\" check in `chruby_use`, to allow forcibly\n  switching to the current Ruby, in case `PATH` or `GEM_PATH` become corrupted.\n\n### 0.2.6 / 2012-12-18\n\n* Forcibly switch to system Ruby when loading `share/chruby/chruby.sh`.\n  This fixes switching issues for [tmux] users.\n\n### 0.2.5 / 2012-12-15\n\n* Renamed the `RUBY` environment variable to `RUBY_ROOT` to avoid breaking\n  the `FileUtils#ruby` method in [rake](http://rake.rubyforge.org/).\n* Do not unset `GEM_HOME`, `GEM_PATH`, `GEM_ROOT` if running under root.\n\n### 0.2.4 / 2012-12-13\n\n* Added a `Vagrantfile` for testing chruby in various environments.\n* Changed all code and examples to reference `/opt/rubies/`.\n* Ensure all error messages are printed to stderr.\n* Refactored `scripts/setup.sh` to manually install all Rubies and install any\n  dependencies via the System Package Manager.\n* PGP signatures are now stored in `pkg/`.\n\n#### Makefile\n\n* Updated the `Makefile` to be compatible with BSD automake.\n* Do not override `PREFIX`.\n* Added a `test` task.\n\n#### Homebrew\n\n* Use `HOMEBREW_PREFIX`.\n* Use `sha1` instead of `md5` (deprecated).\n* No longer dynamically generate the example configuration.\n\n### 0.2.3 / 2012-11-19\n\n* Updated the `Makefile` to be compatible with the [dash] shell.\n* Use inline substring substitutions instead of `sed`.\n\n### 0.2.2 / 2012-11-17\n\n* Use `typeset` to declare `RUBIES` as an indexed Array.\n* Use the correct globbed Array syntax for both [zsh] and [bash].\n* Improved the post-installation message in the [homebrew] recipe to auto-detect\n  [RVM], [rbenv] and [rbfu].\n\n### 0.2.1 / 2012-10-23\n\n* Fixed `make install` to work on OS X.\n* Added a [homebrew] recipe.\n\n### 0.2.0 / 2012-10-16\n\n* Install `chruby.sh` into `$PREFIX/share/chruby/`.\n\n### 0.1.2 / 2012-08-29\n\n* Check if `$RUBY` _and_ `$RUBYOPT` are different from the arguments passed to\n  `chruby_use`.\n* Fixed a spelling error in the README (thanks Ian Barnett).\n\n### 0.1.1 / 2012-08-24\n\n* Added unit-tests using [shunit2](http://code.google.com/p/shunit2/)\n* Improved sanitation of `$PATH` in `chruby_reset`. (thanks mpapis)\n* If the desired Ruby is already in use, immediately return from `chruby_use`.\n* Export `$RUBY_ENGINE`, `$RUBY_VERSION`, `$GEM_ROOT` in `chruby_use`.\n\n### 0.1.0 / 2012-08-18\n\n* Added support for [zsh].\n* Renamed the `$RUBY_PATH` variable to `$RUBY`.\n* Set the `$RUBY_ENGINE` variable.\n* Set the `$GEM_ROOT` variable to `Gem.default_dir`.\n  This supports the custom RubyGems directory used by [Rubinius].\n* Only initialize the `$RUBIES` variable if it does not have a value.\n\n### 0.0.2 / 2012-08-14\n\n* Added a `LICENSE.txt`.\n* Added a `ChangeLog.md`.\n* Updated the `Makefile` to generate proper tar archives.\n\n### 0.0.1 / 2012-08-01\n\n* Initial release.\n\n[dash]: http://gondor.apana.org.au/~herbert/dash/\n[bash]: http://www.gnu.org/software/bash/\n[zsh]: http://www.zsh.org/\n[tmux]: http://tmux.sourceforge.net/\n[ohmyzsh]: https://github.com/robbyrussell/oh-my-zsh#readme\n\n[Rubinius]: http://rubini.us/\n[homebrew]: http://mxcl.github.com/homebrew/\n\n[RVM]: https://rvm.io/\n[rbenv]: https://github.com/sstephenson/rbenv#readme\n[rbfu]: https://github.com/hmans/rbfu#readme\n\n[MRI]: http://www.ruby-lang.org/en/\n[JRuby]: http://jruby.org/\n[Rubinius]: http://rubini.us/\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0361328125,
          "content": "Copyright (c) 2012-2013 Hal Brodigan\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.853515625,
          "content": "NAME=chruby\nVERSION=0.3.9\nAUTHOR=postmodern\nURL=https://github.com/$(AUTHOR)/$(NAME)\n\nDIRS=etc lib bin sbin share\nINSTALL_DIRS=`find $(DIRS) -type d 2>/dev/null`\nINSTALL_FILES=`find $(DIRS) -type f 2>/dev/null`\nDOC_FILES=*.md *.txt\n\nPKG_DIR=pkg\nPKG_NAME=$(NAME)-$(VERSION)\nPKG=$(PKG_DIR)/$(PKG_NAME).tar.gz\nSIG=$(PKG).asc\n\nPREFIX?=/usr/local\nSHARE_DIR=share\nDOC_DIR=$(SHARE_DIR)/doc/$(PKG_NAME)\n\nall:\n\npkg:\n\tmkdir $(PKG_DIR)\n\nbuild: pkg\n\tgit archive --output=$(PKG) --prefix=$(PKG_NAME)/ HEAD\n\nsign: $(PKG)\n\tgpg --sign --detach-sign --armor $(PKG)\n\tgit add $(PKG).asc\n\tgit commit $(PKG).asc -m \"Added PGP signature for v$(VERSION)\"\n\tgit push origin master\n\nverify: $(PKG) $(SIG)\n\tgpg --verify $(SIG) $(PKG)\n\nclean:\n\trm -rf test/fixtures/opt/rubies\n\trm -f $(PKG) $(SIG)\n\ncheck:\n\tshellcheck share/$(NAME)/*.sh\n\nconfigure_tests:\n\t./test/unit/configure\n\ntest: configure_tests\n\tSHELL=`command -v bash` ./test/unit/runner --norc\n\tSHELL=`command -v zsh`  ./test/unit/runner --no-rcs\n\nintegration_tests:\n\tSHELL=`command -v bash` ./test/integration/runner\n\tSHELL=`command -v zsh`  ./test/integration/runner\n\ngauntlet: integration_tests\n\ntag:\n\tgit push origin master\n\tgit tag -s -m \"Releasing $(VERSION)\" v$(VERSION)\n\tgit push origin master --tags\n\nrelease: build sign tag\n\nrpm:\n\trpmdev-setuptree\n\tspectool -g -R rpm/chruby.spec\n\trpmbuild -ba rpm/chruby.spec\n\ninstall:\n\tfor dir in $(INSTALL_DIRS); do mkdir -p $(DESTDIR)$(PREFIX)/$$dir; done\n\tfor file in $(INSTALL_FILES); do cp $$file $(DESTDIR)$(PREFIX)/$$file; done\n\tmkdir -p $(DESTDIR)$(PREFIX)/$(DOC_DIR)\n\tcp -r $(DOC_FILES) $(DESTDIR)$(PREFIX)/$(DOC_DIR)/\n\nuninstall:\n\tfor file in $(INSTALL_FILES); do rm -f $(DESTDIR)$(PREFIX)/$$file; done\n\trm -rf $(DESTDIR)$(PREFIX)/$(DOC_DIR)\n\trmdir $(DESTDIR)$(PREFIX)/$(SHARE_DIR)/chruby\n\n.PHONY: build sign verify clean check configure_tests test integration_tests gauntlet tag release rpm install uninstall all\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.2978515625,
          "content": "# chruby\n\n[![CI](https://github.com/postmodern/chruby/actions/workflows/shunit2.yml/badge.svg)](https://github.com/postmodern/chruby/actions/workflows/shunit2.yml)\n\nChanges the current Ruby.\n\n## Features\n\n* Updates `$PATH`.\n  * Also adds RubyGems `bin/` directories to `$PATH`.\n* Correctly sets `$GEM_HOME` and `$GEM_PATH`.\n  * Users: gems are installed into `~/.gem/$ruby/$version`.\n  * Root: gems are installed directly into `/path/to/$ruby/$gemdir`.\n* Additionally sets `$RUBY_ROOT`, `$RUBY_ENGINE`, `$RUBY_VERSION` and\n  `$GEM_ROOT`.\n* Optionally sets `$RUBYOPT` if second argument is given.\n* Calls `hash -r` to clear the command-lookup hash-table.\n* Fuzzy matching of Rubies by name.\n* Defaults to the system Ruby.\n* Optionally supports auto-switching and the `.ruby-version` file.\n* Supports [bash] and [zsh].\n* Small (~100 LOC).\n* Has tests.\n\n## Anti-Features\n\n* Does not hook `cd`.\n* Does not install executable shims or require regenerating them after\n  installing gems.\n* Does not require Rubies be installed into your home directory.\n* Does not automatically switch Rubies by default.\n* Does not require write-access to the Ruby directory in order to install gems.\n\n## Requirements\n\n* [bash] >= 3 or [zsh]\n\n## Install\n\n```shell\nwget https://github.com/postmodern/chruby/releases/download/v0.3.9/chruby-0.3.9.tar.gz\ntar -xzvf chruby-0.3.9.tar.gz\ncd chruby-0.3.9/\nsudo make install\n```\n\n### PGP\n\nAll releases are [PGP] signed for security. Instructions on how to import my\nPGP key can be found on my [blog][1]. To verify that a release was not tampered \nwith:\n\n```shell\nwget https://github.com/postmodern/chruby/releases/download/v0.3.9/chruby-0.3.9.tar.gz.asc\ngpg --verify chruby-0.3.9.tar.gz.asc chruby-0.3.9.tar.gz\n```\n\n### setup.sh\n\nchruby also includes a `setup.sh` script, which installs chruby. Simply run the \nscript as root or via `sudo`:\n\n```shell\nsudo ./scripts/setup.sh\n```\n\n### Homebrew\n\nchruby can also be installed with [homebrew]:\n\n```shell\nbrew install chruby\n```\n\nOr the absolute latest chruby can be installed from source:\n\n```shell\nbrew install chruby --HEAD\n```\n\n### Arch Linux\n\nchruby is already included in the [AUR]:\n\n```shell\nyaourt -S chruby\n```\n\n### Fedora Linux\n\nchruby is available as an rpm on [Fedora Copr](https://copr.fedorainfracloud.org/coprs/postmodern/chruby/).\n    \n### FreeBSD\n\nchruby is included in the official [FreeBSD ports collection]:\n\n```shell\ncd /usr/ports/devel/chruby/ && make install clean\n```\n\n### Rubies\n\n#### Manually\n\nChruby provides detailed instructions for installing additional Rubies:\n\n* [Ruby](https://github.com/postmodern/chruby/wiki/Ruby)\n* [JRuby](https://github.com/postmodern/chruby/wiki/JRuby)\n* [Rubinius](https://github.com/postmodern/chruby/wiki/Rubinius)\n* [MagLev](https://github.com/postmodern/chruby/wiki/MagLev)\n\n#### ruby-install\n\nYou can also use [ruby-install] to install additional Rubies:\n\nInstalling to `/opt/rubies` or `~/.rubies`:\n\n```shell\nruby-install ruby\nruby-install jruby\nruby-install rubinius\nruby-install maglev\n```\n\n#### ruby-build\n\nYou can also use [ruby-build] to install additional Rubies:\n\nInstalling to `/opt/rubies`:\n\n```shell\nruby-build 1.9.3-p392 /opt/rubies/ruby-1.9.3-p392\nruby-build jruby-1.7.3 /opt/rubies/jruby-1.7.3\nruby-build rbx-2.0.0-rc1 /opt/rubies/rubinius-2.0.0-rc1\nruby-build maglev-1.0.0 /opt/rubies/maglev-1.0.0\n```\n\n## Configuration\n\nAdd the following to the `~/.bashrc` or `~/.zshrc` file:\n\n```shell\nsource /usr/local/share/chruby/chruby.sh\n```\n\n#### macOS\n\n```shell\nsource $HOMEBREW_PREFIX/opt/chruby/share/chruby/chruby.sh # Or run `brew info chruby` to find out installed directory\n```\n\n*Note:* macOS does not automatically execute `~/.bashrc`, instead try adding to `/etc/bashrc`.\n\n### System Wide\n\nIf you wish to enable chruby system-wide, add the following to\n`/etc/profile.d/chruby.sh`:\n\n```shell\nif [ -n \"$BASH_VERSION\" ] || [ -n \"$ZSH_VERSION\" ]; then\n  source /usr/local/share/chruby/chruby.sh\n  ...\nfi\n```\n\nThis will prevent chruby from accidentally being loaded by `/bin/sh`, which\nis not always the same as `/bin/bash`.\n\n### Rubies\n\nWhen chruby is first loaded by the shell, it will auto-detect Rubies installed\nin `/opt/rubies/` and `~/.rubies/`. After installing new Rubies, you _must_\nrestart the shell before chruby can recognize them.\n\nFor Rubies installed in non-standard locations, simply append their paths to\nthe `RUBIES` variable:\n\n```shell\nsource /usr/local/share/chruby/chruby.sh\n\nRUBIES+=(\n  /opt/jruby-1.7.0\n  \"$HOME/src/rubinius\"\n)\n```\n\n### Migrating\n\nIf you are migrating from another Ruby manager, set `RUBIES` accordingly:\n\n#### RVM\n\n```shell\nRUBIES+=(~/.rvm/rubies/*)\n```\n\n#### rbenv\n\n```shell\nRUBIES+=(~/.rbenv/versions/*)\n```\n\n#### rbfu\n\n```shell\nRUBIES+=(~/.rbfu/rubies/*)\n```\n\n### Auto-Switching\n\nIf you want chruby to auto-switch the current version of Ruby when you `cd`\nbetween your different projects, simply load `auto.sh` in `~/.bashrc` or\n`~/.zshrc`:\n\n```shell\nsource /usr/local/share/chruby/chruby.sh\nsource /usr/local/share/chruby/auto.sh\n```\n\n> *Note:* macOS does not automatically source `~/.bashrc`. Bash users should\n> create the file `~/.bash_profile` with following content:\n>\n> ```bash\n> if [[ -f ~/.profile ]]; then\n>     source ~/.profile\n> fi\n>\n> if [[ $- == *i* ]] && [[ -f ~/.bashrc ]]; then\n>     source ~/.bashrc\n> fi\n> ```\n>\n> so that the terminal loads `~/.bashrc` and `~/.profile` (the POSIX one). If\n> `~/.bash_profile` exists, Bash users should append the above lines to\n> `~/.bash_profile` as needed.\n\nchruby will check the current and parent directories for a [.ruby-version]\nfile. Other Ruby switchers also understand this file:\nhttps://gist.github.com/1912050\n\nIf you want to automatically run the version of a gem executable specified in \nyour project's Gemfile, try \n[rubygems-bundler](https://github.com/mpapis/rubygems-bundler).\n\n### Default Ruby\n\nOnce you have loaded `chruby.sh` and/or `auto.sh` in your shell configuration,\nyou can also set a default Ruby. Simply call the `chruby` function in\n`~/.bash_profile` or `~/.zprofile`:\n\n```shell\nchruby ruby-1.9\n```\n\nIf you have enabled auto-switching, simply create a `.ruby-version` file:\n\n```shell\necho \"ruby-1.9\" > ~/.ruby-version\n```\n\n### RubyGems\n\nGems installed as a non-root user via `gem install` will be installed into\n`~/.gem/$ruby/X.Y.Z`.  By default, RubyGems will use the absolute path to the\ncurrently selected ruby for the shebang of any binstubs it generates.  In some\ncases, this path may contain extra version information (e.g.\n`ruby-2.0.0-p451`).  To mitigate potential problems when removing rubies, you\ncan force RubyGems to generate binstubs with shebangs that will search for\nruby in your `$PATH` by using `gem install --env-shebang` (or the equivalent\nshort option `-E`).  This parameter can also be added to your gemrc file.\n\n### Integration\n\nFor instructions on using chruby with other tools, please see the [wiki]:\n\n* [Capistrano](https://github.com/capistrano/chruby#readme)\n* [Chef](https://supermarket.getchef.com/cookbooks/chruby_install)\n* [Cron](https://github.com/postmodern/chruby/wiki/Cron)\n* [Emacs](https://github.com/arnebrasseur/chruby.el#readme)\n* [Pow](https://github.com/postmodern/chruby/wiki/Pow)\n* [Puppet](https://github.com/dgoodlad/puppet-chruby#readme)\n* [Sudo](https://github.com/postmodern/chruby/wiki/Sudo)\n* [Vim](https://github.com/postmodern/chruby/wiki/Vim)\n* [Fish](https://github.com/JeanMertz/chruby-fish#readme)\n\n## Examples\n\nList available Rubies:\n\n    $ chruby\n       ruby-1.9.3-p392\n       jruby-1.7.0\n       rubinius-2.0.0-rc1\n\nSelect a Ruby:\n\n    $ chruby 1.9.3\n    $ chruby\n     * ruby-1.9.3-p392\n       jruby-1.7.0\n       rubinius-2.0.0-rc1\n    $ echo $PATH\n    /home/hal/.gem/ruby/1.9.3/bin:/opt/rubies/ruby-1.9.3-p392/lib/ruby/gems/1.9.1/bin:/opt/rubies/ruby-1.9.3-p392/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/home/hal/bin:/home/hal/bin\n    $ gem env\n    RubyGems Environment:\n      - RUBYGEMS VERSION: 1.8.23\n      - RUBY VERSION: 1.9.3 (2013-02-22 patchlevel 392) [x86_64-linux]\n      - INSTALLATION DIRECTORY: /home/hal/.gem/ruby/1.9.3\n      - RUBY EXECUTABLE: /opt/rubies/ruby-1.9.3-p392/bin/ruby\n      - EXECUTABLE DIRECTORY: /home/hal/.gem/ruby/1.9.3/bin\n      - RUBYGEMS PLATFORMS:\n        - ruby\n        - x86_64-linux\n      - GEM PATHS:\n         - /home/hal/.gem/ruby/1.9.3\n         - /opt/rubies/ruby-1.9.3-p392/lib/ruby/gems/1.9.1\n      - GEM CONFIGURATION:\n         - :update_sources => true\n         - :verbose => true\n         - :benchmark => false\n         - :backtrace => false\n         - :bulk_threshold => 1000\n         - \"gem\" => \"--no-rdoc\"\n      - REMOTE SOURCES:\n         - http://rubygems.org/\n\nSwitch to JRuby in 1.9 mode:\n\n    $ chruby jruby --1.9\n    $ ruby -v\n    jruby 1.7.0 (1.9.3p203) 2012-10-22 ff1ebbe on OpenJDK 64-Bit Server VM 1.7.0_09-icedtea-mockbuild_2012_10_17_15_53-b00 [linux-amd64]\n\nSwitch back to system Ruby:\n\n    $ chruby system\n    $ echo $PATH\n    /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/hal/bin\n\nRun a command under a Ruby with `chruby-exec`:\n\n    $ chruby-exec jruby -- gem update\n\nSwitch to an arbitrary Ruby on the fly:\n\n    $ chruby_use /path/to/ruby\n\n## Uninstall\n\n1. Remove or comment out chruby from your shell configuration.\n2. Restart your shell (ex: `exec $SHELL`).\n3. `sudo make uninstall`\n\n## Alternatives\n\n* [RVM]\n* [rbenv]\n* [rbfu]*\n* [ry]\n* [ruby-version]*\n\n\\* *Deprecated in favor of chruby.*\n\n## Endorsements\n\n> yeah `chruby` is nice, does the limited thing of switching really good,\n> the only hope it never grows \n\n-- [Michal Papis](https://twitter.com/mpapis/status/258049391791841280) of [RVM]\n\n> I just looooove [chruby](#readme) For the first time I'm in total control of\n> all aspects of my Ruby installation. \n\n-- [Marius Mathiesen](https://twitter.com/zmalltalker/status/271192206268829696)\n\n> Written by Postmodern, it's basically the simplest possible thing that can\n> work.\n\n-- [Steve Klabnik](http://blog.steveklabnik.com/posts/2012-12-13-getting-started-with-chruby)\n\n> So far, I'm a huge fan. The tool does what it advertises exactly and simply.\n> The small feature-set is also exactly and only the features I need.\n\n-- [Patrick Brisbin](http://pbrisbin.com/posts/chruby)\n\n> I wrote ruby-version; however, chruby is already what ruby-version wanted to\n> be. I've deprecated ruby-version in favor of chruby.\n\n-- [Wil Moore III](https://github.com/wilmoore)\n\n## Credits\n\n* [mpapis](https://github.com/mpapis) for reviewing the code.\n* [havenwood](https://github.com/havenwood) for handling the homebrew formula.\n* [zendeavor](https://github.com/zendeavor) for style fixes.\n* `#bash`, `#zsh`, `#machomebrew` for answering all my questions.\n\n[wiki]: https://github.com/postmodern/chruby/wiki\n\n[bash]: http://www.gnu.org/software/bash/\n[zsh]: http://www.zsh.org/\n[PGP]: http://en.wikipedia.org/wiki/Pretty_Good_Privacy\n[homebrew]: http://brew.sh/\n[AUR]: https://aur.archlinux.org/packages/chruby/\n[FreeBSD ports collection]: https://www.freshports.org/devel/chruby/\n[ruby-install]: https://github.com/postmodern/ruby-install#readme\n[ruby-build]: https://github.com/sstephenson/ruby-build#readme\n[.ruby-version]: https://gist.github.com/1912050\n\n[RVM]: https://rvm.io/\n[rbenv]: https://github.com/sstephenson/rbenv#readme\n[rbfu]: https://github.com/hmans/rbfu#readme\n[ry]: https://github.com/jayferd/ry#readme\n[ruby-version]: https://github.com/wilmoore/ruby-version#readme\n\n[Ruby]: http://www.ruby-lang.org/en/\n[JRuby]: http://jruby.org/\n[Rubinius]: http://rubini.us/\n\n[1]: https://postmodern.github.io/pgp/\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 1.216796875,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant::Config.run do |config|\n  # vagrant box add debian-wheezy-amd64 https://dl.dropboxusercontent.com/u/67225617/lxc-vagrant/lxc-wheezy64-puppet3-2013-07-27.box\n  config.vm.define :debian do |debian|\n    debian.vm.box = 'debian-wheezy-amd64'\n  end\n\n  # vagrant box add ubuntu-12.04-amd64 http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-vagrant-amd64-disk1.box\n  config.vm.define :ubuntu do |ubuntu|\n    ubuntu.vm.box = 'ubuntu-12.04-amd64'\n  end\n\n  # vagrant box add rhel-6-amd64 http://puppetlabs.s3.amazonaws.com/pub/rhel60_64.box\n  config.vm.define :redhat do |redhat|\n    redhat.vm.box = 'rhel-6-amd64'\n  end\n\n  # vagrant box add centos-6-amd64 http://puppetlabs.s3.amazonaws.com/pub/centos4_64.box\n  config.vm.define :centos do |centos|\n    centos.vm.box = 'centos-6-amd64'\n  end\n\n  # vagrant box add freebsd-9.1-amd64 https://github.com/downloads/xironix/freebsd-vagrant/freebsd_amd64_ufs.box\n  config.vm.define :freebsd do |freebsd|\n    freebsd.vm.box = 'freebsd-9.1-amd64'\n  end\n\n  # vagrant box add openbsd-5.2-amd64 https://dl.dropbox.com/s/5ietqc3thdholuh/openbsd-52-64.box\n  config.vm.define :openbsd do |openbsd|\n    openbsd.vm.box = 'openbsd-5.2-amd64'\n  end\nend\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "homebrew",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}