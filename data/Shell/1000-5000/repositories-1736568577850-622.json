{
  "metadata": {
    "timestamp": 1736568577850,
    "page": 622,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pmkol/easymosdns",
      "stars": 1478,
      "defaultBranch": "main",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.193359375,
          "content": "# EasyMosdns v3.0\n\n基于Mosdns的精准DNS分流策略，仅需几分钟即可搭建一台支持ECS的无污染DNS服务器。<br />\n\n## About Mosdns\n\n[Mosdns](https://github.com/IrineSistiana/mosdns) 是一个插件化的DNS转发/分流器。用户可以按需拼接插件，搭建适合自己的DNS服务器。<br />\n\n配置灵活的优点可以满足各种场景下的DNS使用，相对也会有较高的使用门槛，无法开箱即用。<br />\n<br />\n\n## About EasyMosdns\n\n[EasyMosdns](https://apad.pro/easymosdns) 是基于Mosdns制作的EDNS部署方案，内置中国大陆地区优化规则与分流API，满足DNS日常使用场景。<br />\n\n#### 转发规则：\n\n- 本地上游并发请求 DNSPod 与 AliDNS\n- 远程上游优先请求 EasyMosDNS分流API(DoH)\n- 远程上游超时请求 GoogleDNS 与 OpenDNS\n- 支持使用socks5代理连接远程上游\n\n#### 功能说明：\n\n- 支持EDNS解析，根据域名与中国大陆IP列表智能分流，查询结果无污染\n- 污染列表与自定义列表中的域名，请求上游DNS时自动替换附带的用户IP子网信息，保护隐私\n- 强化Hosts功能，域名支持多个IP，支持IPv6\n- 支持指定ECS，强制域名附带指定的ECS解析\n- DNS缓存时间优化，自动更新缓存，支持Redis持久化存储，根据场景自动切换缓存规则\n- 轻度过滤恶意广告，可通过白名单自定义过滤规则\n- 屏蔽TYPE65与非中国大陆地区的IPv6请求，自动保留纯IPv6域名的请求，以获取更好的网络体验\n- 支持规则自动更新，提供直连/CDN两种下载更新规则的方式\n- 支持上游节点故障时自动转移，优化DNS服务的稳定性\n\n#### 打赏项目：\n\n打赏项目的用户可参与测试支持DoT与DoH(http2/3)且更精准的分流API\n[前往发电](https://afdian.net/a/maplecool) <br />\n\n#### 更多信息：\n\n查看搭建教程/测试DNS效果 请前往\nhttps://apad.pro/easymosdns/ <br />\n<br />\n\n## Installation\n\n#### 请先确认：\n\n- Mosdns已安装且可以正常运行\n- Mosdns版本 4.5.3\n- Mosdns工作目录是否为 /etc/mosdns\n- config配置文件已备份\n- config配置文件中'protocol: udp'与'protocol: tcp'字段下方的`addr:`使用的端口号\n\n#### 部署示例：\n>- 案例操作系统为Almalinux，仅供参考，不同Linux发行版本命令可能略有差异 <br />\n>- 脚本工作目录为 /etc/mosdns 不建议更改，如需更改请自行修改源码 <br />\n>- 如 mosdns 二进制文件未在 /usr/local/bin 或 /usr/bin 目录下，应在二进制文件所在目录下执行命令 <br />\n>- 脚本默认启动 UDP/TCP 53端口运行mosdns，如需更改端口，请修改config配置文件结尾处的`protocol:` <br />\n---\n- 卸载Mosdns服务\n```bash\nmosdns service stop\nmosdns service uninstall\n```\n> 如果Mosdns的工作目录为 /etc/mosdns 无需卸载服务 <br />\n> 安装完成后使用 mosdns service restart 命令重启mosdns服务即可\n\n- 下载源码解压缩\n```bash\nwget https://mirror.apad.pro/dns/easymosdns.tar.gz\ntar xzf easymosdns.tar.gz\nmv /etc/mosdns /etc/mosdns.old\nmv easymosdns /etc/mosdns\n```\n\n- 重新安装并启动Mosdns服务\n```bash\nmosdns service install -d /etc/mosdns -c config.yaml\nmosdns service start\n```\n> 看到 service is running 证明部署成功 <br />\n>\n> 启动参数示例：\n> ```bash\n> /usr/local/bin/mosdns start --as-service -d /etc/mosdns -c config.yaml\n> ```\n\n- 开启防火墙端口\n> 部署完成后，请开启防火墙的端口 <br />\n> 默认情况下，应开启 UDP53 TCP53 TCP80 TCP443 TCP853 端口\n<br />\n\n#### 配置自定义规则：\n\n- 自定义hosts\n\n请添加规则至 /etc/mosdns/hosts.txt\n> 格式与常规hosts规则不同，域名在前、IP在后，支持一行多个IP，支持IPv6 <br />\n> hosts规则示例：\n> ```bash\n> dns.google 8.8.8.8 8.8.4.4 2001:4860:4860::8888\n> ```\n\n- 强制域名附带本地ECS解析\n\n请添加域名至 /etc/mosdns/ecs_cn_domain.txt\n> 域名规则有多个匹配方式:  <br />\n> 以 domain: 开头，域匹配。e.g: domain:google.com 会匹配自身 `google.com`，以及其子域名 `www.google.com`, `maps.l.google.com` 等 <br />\n> 以 full: 开头，完整匹配。e.g: full:google.com 只会匹配自身 <br />\n> 以 keyword: 开头，关键字匹配。e.g: keyword:google.com 会匹配包含这个字段的域名，如 `google.com.hk`, `www.google.com.hk` <br />\n> 以 regexp: 开头，正则匹配(Golang 标准)。e.g: regexp:.+\\.google\\.com$\n\n- 强制域名附带指定ECS解析\n\n请添加域名至 /etc/mosdns/ecs_noncn_domain.txt\n> 域名规则匹配方式同上 <br />\n> 部分在中国大陆没有CDN节点的域名，会向中国大陆的访问者分配距离较远的CDN节点 <br />\n> 将域名添加至该名单后，当域名有距离中国较近的CDN节点时会自动分配，优化访问速度，例如 github.com\n<br />\n\n## Using EasyMosdns\n\n- 如果只想快速搭建一台无污染的DNS服务器，仅需阅读后续文档中的自动更新规则部分\n- 内置默认规则，根据中国大陆地区网络环境优化，基本满足DNS日常使用场景\n- 该项目已将常用功能封装成插件形式，只需修改 /etc/mosdns/config.yaml 配置文件中的相应插件参数即可\n\n#### 手动/自动更新规则\n\n- 直连下载更新规则\n```bash\n/etc/mosdns/rules/update\n```\n\n- 通过CDN下载更新规则\n```bash\n/etc/mosdns/rules/update-cdn\n```\n\n- 自动更新规则\n\n使用 crontab -e 命令在最后一行添加对应规则即可\n> 每日5点整通过CDN下载更新规则的示例\n> ```bash\n> 0 5 * * * /etc/mosdns/rules/update-cdn\n> ```\n\n#### 切换本地上游DNS\n\n- 转发至本地服务器的插件\n```bash\n  - tag: forward_local\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"223.5.5.5\"\n        - addr: \"tls://120.53.53.53:853\"\n          enable_pipeline: true\n```\n> 修改 `addr:` 后的DNS地址即可 <br />\n> 如果不确定上游DNS是否支持pipeline，请将 `enable_pipeline:` 设置为false <br />\n> 默认使用AliDNS+DNSPod同时查询的方式解析 <br />\n> 运营商DNS不支持ECS，仅建议网络环境为内网时使用\n\n#### 切换远程上游DNS\n\n- 转发至远程服务器的插件\n```bash\n  - tag: forward_remote\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"tcp://208.67.220.220:5353\"\n          enable_pipeline: true\n          #socks5: \"127.0.0.1:1080\"\n        - addr: \"tls://8.8.4.4\"\n          enable_pipeline: true\n          #socks5: \"127.0.0.1:1080\"\n```\n> 修改 `addr:` 后的DNS地址即可 <br />\n> 如果不确定上游DNS是否支持pipeline，请将 `enable_pipeline:` 设置为false <br />\n> 默认使用GoogleDNS+OpenDNS同时查询的方式解析，如遇到连接问题建议配置socks5代理 <br />\n> OpenDNS不支持指定ECS，如需配置指定ECS，应开启OpenDNS的socks5代理\n\n#### 切换分流API/DNS\n\n- 转发至分流服务器的插件\n```bash\n  - tag: forward_easymosdns\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"https://doh.apad.pro/dns-query\"\n          bootstrap: \"119.29.29.29\"\n          #dial_addr: \"ip:port\"\n          #enable_http3: true\n```\n> 修改 `addr:` 后的DNS地址即可 <br />\n> 可以使用 `dial_addr:` 指定分流服务器的IP与端口，优化访问速度 <br />\n> 如果确定分流服务器支持http3，可开启 `enable_http3:` 优化访问速度 <br />\n> 默认使用EasyMosdns项目官方的分流API，如需切换应确定所选的API或DNS服务支持分流功能\n\n#### 开启Redis持久化缓存\n\n- 缓存的插件\n```bash\n  - tag: cache_lan\n    type: cache\n    args:\n      size: 8192\n      #redis: \"redis://127.0.0.1:6379/0\"\n      lazy_cache_ttl: 86400\n      cache_everything: true\n      lazy_cache_reply_ttl: 1\n  - tag: cache_wan\n    type: cache\n    args:\n      size: 131072\n      compress_resp: true\n      #redis: \"redis://127.0.0.1:6379/0\"\n      lazy_cache_ttl: 86400\n      cache_everything: true\n      lazy_cache_reply_ttl: 5\n```\n> 将两处 `#redis: \"redis://127.0.0.1:6379/0\"` 更改为 `redis: \"redis://127.0.0.1:6379/0\"` <br />\n> 需部署Redis服务，默认连接本机6379端口\n\n#### 配置指定ECS\n\n- 指定ECS的插件\n```bash\n  - tag: ecs_global\n    type: ecs\n    args:\n      auto: false\n      ipv4: \"168.95.1.0\"\n      ipv6: \"2001:b000:168::\"\n      force_overwrite: false\n```\n> 修改 `ipv4:` 与 `ipv6:` 后的IP段即可 <br />\n> 默认ECS参数已针对中国大陆地区优化，根据网络环境自动判断开关 <br />\n> 如果将ECS设置为本地公网IP段，将关闭指定ECS功能 <br />\n> 当代理客户端使用本地DNS解析时，应将ECS指定为距离代理IP出口最近的IP段，以获取最佳的访问速度\n\n#### 关闭广告过滤功能\n\n- 屏蔽广告域名\n```bash\n        - if: query_is_ad_domain\n          exec:\n          - black_hole\n          - ttl_1h\n          - _return\n```\n> 将 `black_hole` 更改为 `forward_local`\n\n#### 关闭非本地IPv6屏蔽功能\n\n- 优先返回ipv4结果\n```bash\n        - _prefer_ipv4\n```\n> 将三处 `- _prefer_ipv4` 更改为 `#- _prefer_ipv4`\n\n#### 开启DoH监听\n\n修改 /etc/mosdns/config.yaml 配置文件 <br />\n去除以下注释\n```bash\n      - protocol: http\n        addr: \"127.0.0.1:9053\"\n        url_path: \"/dns-query\"\n        get_user_ip_from_header: \"X-Forwarded-For\"\n```\n建议使用http模式，前端使用nginx反代 <br />\n> nginx配置示例：\n> ```bash\n>   server {\n>     ...\n>     location /dns-query {\n>\t  set_real_ip_from 0.0.0.0/0;\n>     real_ip_header X-Forwarded-For;\n>     proxy_pass http://127.0.0.1:9053/dns-query;\n>     }\n>   }\n> ```\n\n#### 开启DoT监听\n\n修改 /etc/mosdns/config.yaml 配置文件 <br />\n去除以下注释，指定SSL证书位置\n```bash\n      - protocol: tls             \n        addr: \"0.0.0.0:853\"\n        cert: \"/etc/mosdns/yourdomain.cert\"\n        key: \"/etc/mosdns/yourdomain.key\"\n```\n\n#### 修改UDP/TCP监听端口\n\n示例：\n```bash\n      - protocol: udp\n        addr: \"0.0.0.0:8053\"\n      - protocol: tcp\n        addr: \"0.0.0.0:8053\"\n```\n\n#### 更多帮助和支持\n\n- 项目完整开源，可用于部署DNS服务器、开发软路由插件等多种场景\n- 使用源码仅需标明使用 [EasyMosdns](https://apad.pro/easymosdns) 的源码即可\n- 配置文件相关问题，请查阅 [Mosdns-Wiki](https://irine-sistiana.gitbook.io/mosdns-wiki/mosdns-v4)\n<br />\n\n## Contact Us\n\nFor feedback, questions, and to follow the progress of the project: <br />\n[Telegram Group](https://t.me/+VeV5wt1E6FA5Ue-x)\n"
        },
        {
          "name": "config.yaml",
          "type": "blob",
          "size": 9.0732421875,
          "content": "# EasyMosdns v3.0(Final Release)\n# https://apad.pro/easymosdns\nlog:\n    file: \"./mosdns.log\"\n    level: error\n\ndata_providers:\n  - tag: chinalist\n    file: ./rules/china_domain_list.txt\n    auto_reload: true\n  - tag: gfwlist\n    file: ./rules/gfw_domain_list.txt\n    auto_reload: true\n  - tag: cdncn\n    file: ./rules/cdn_domain_list.txt\n    auto_reload: true\n  - tag: chinaip\n    file: ./rules/china_ip_list.txt\n    auto_reload: true\n  - tag: gfwip\n    file: ./rules/gfw_ip_list.txt\n    auto_reload: true\n  - tag: adlist\n    file: ./rules/ad_domain_list.txt\n    auto_reload: true\n  - tag: ecscn\n    file: ./ecs_cn_domain.txt\n    auto_reload: true\n  - tag: ecsnoncn\n    file: ./ecs_noncn_domain.txt\n    auto_reload: true\n  - tag: hosts\n    file: ./hosts.txt\n    auto_reload: true\n\nplugins:\n  # 缓存的插件\n  # [lan|wan]\n  - tag: cache_lan\n    type: cache\n    args:\n      size: 8192\n      #redis: \"redis://127.0.0.1:6379/0\"\n      lazy_cache_ttl: 86400\n      cache_everything: true\n      lazy_cache_reply_ttl: 1\n  - tag: cache_wan\n    type: cache\n    args:\n      size: 131072\n      compress_resp: true\n      #redis: \"redis://127.0.0.1:6379/0\"\n      lazy_cache_ttl: 86400\n      cache_everything: true\n      lazy_cache_reply_ttl: 5\n\n  # Hosts的插件\n  - tag: hosts\n    type: hosts\n    args:\n      hosts:\n        - \"provider:hosts\"\n\n  # 获取ECS的插件\n  - tag: ecs_auto\n    type: ecs\n    args:\n      auto: true\n      force_overwrite: false\n      \n  # 指定ECS的插件\n  - tag: ecs_global\n    type: ecs\n    args:\n      auto: false\n      ipv4: \"168.95.1.0\"\n      ipv6: \"2001:b000:168::\"\n      force_overwrite: false\n\n  # 匹配ECS的插件\n  - tag: ecs_is_lan\n    type: query_matcher\n    args:\n      ecs: \n        - \"0.0.0.0/8\"\n        - \"10.0.0.0/8\"\n        - \"100.64.0.0/10\"\n        - \"127.0.0.0/8\"\n        - \"169.254.0.0/16\"\n        - \"172.16.0.0/12\"\n        - \"192.0.0.0/24\"\n        - \"192.0.2.0/24\"\n        - \"198.18.0.0/15\"\n        - \"192.88.99.0/24\"\n        - \"192.168.0.0/16\"\n        - \"198.51.100.0/24\"\n        - \"203.0.113.0/24\"\n        - \"224.0.0.0/3\"\n        - \"::1/128\"\n        - \"fc00::/7\"\n        - \"fe80::/10\"\n  - tag: ecs_is_cn\n    type: query_matcher\n    args:\n      ecs: \n        - \"provider:chinaip\"\n\n  # 调整TTL的插件\n  # [1m|5m|1h]\n  - tag: ttl_1m\n    type: ttl\n    args:\n      minimal_ttl: 60\n      maximum_ttl: 3600\n  - tag: ttl_5m\n    type: ttl\n    args:\n      minimal_ttl: 300\n      maximum_ttl: 86400\n  - tag: ttl_1h\n    type: ttl\n    args:\n      minimal_ttl: 3600\n      maximum_ttl: 86400\n\n  # 匹配TYPE12类型请求的插件\n  - tag: qtype12\n    type: query_matcher\n    args:\n      qtype: [12]\n\n  # 匹配TYPE65类型请求的插件\n  - tag: qtype65\n    type: query_matcher\n    args:\n      qtype: [65]\n\n  # 匹配TYPE255类型请求的插件\n  - tag: qtype255\n    type: query_matcher\n    args:\n      qtype: [255]\n\n  # 匹配RCODE2的插件\n  - tag: response_server_failed\n    type: response_matcher\n    args:\n      rcode: [2]\n\n  # 屏蔽请求的插件\n  - tag: black_hole\n    type: blackhole\n    args:\n      rcode: 0\n      ipv4: \"0.0.0.0\"\n      ipv6: \"::\"\n\n  # 匹配无效域名的插件\n  - tag: query_is_non_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"keyword::\"\n\n  # 匹配本地域名的插件\n  - tag: query_is_local_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:chinalist\"\n\n  # 匹配污染域名的插件\n  - tag: query_is_non_local_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:gfwlist\"\n\n  # 匹配CDN域名的插件\n  - tag: query_is_cdn_cn_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:cdncn\"\n\n  # 匹配广告域名的插件\n  - tag: query_is_ad_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:adlist\"\n\n  # 匹配强制本地解析域名的插件\n  - tag: query_is_cn_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:ecscn\"\n\n  # 匹配强制非本地解析域名的插件\n  - tag: query_is_noncn_domain\n    type: query_matcher\n    args:\n      domain:\n        - \"provider:ecsnoncn\"\n\n  # 匹配本地IP的插件\n  - tag: response_has_local_ip\n    type: response_matcher\n    args:\n      ip:\n        - \"provider:chinaip\"\n\n  # 匹配污染IP的插件\n  - tag: response_has_gfw_ip\n    type: response_matcher\n    args:\n      ip:\n        - \"provider:gfwip\"\n\n  # 转发至本地服务器的插件\n  - tag: forward_local\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"223.5.5.5\"\n        - addr: \"119.29.29.29\"\n\n  # 转发至远程服务器的插件\n  - tag: forward_remote\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"tcp://208.67.220.220:5353\"\n          enable_pipeline: true\n          #socks5: \"127.0.0.1:1080\"\n        - addr: \"udpme://8.8.4.4\"\n\n  # 转发至分流服务器的插件\n  - tag: forward_easymosdns\n    type: fast_forward\n    args:\n      upstream:\n        - addr: \"https://doh.apad.pro/dns-query\"\n          bootstrap: \"119.29.29.29\"\n          #dial_addr: \"ip:port\"\n          #enable_http3: true\n\n  # 主要的运行逻辑插件\n  # sequence 插件中调用的插件 tag 必须在 sequence 前定义\n  # 否则 sequence 找不到对应插件\n  - tag: main_sequence\n    type: sequence\n    args:\n      exec:\n        # 域名映射IP\n        - hosts\n\n        # 屏蔽TYPE65与无效类型请求\n        - if: \"[qtype65] || (query_is_non_domain)\"\n          exec:\n            - _new_nxdomain_response\n            - _return\n\n        # 优化PRT与ANY类型请求\n        - if: \"[qtype12] || [qtype255]\"\n          exec:\n            - _no_ecs\n            - forward_local\n            - ttl_1h\n            - _return\n\n        # 缓存ECS\n        - ecs_auto\n        - _edns0_filter_ecs_only\n        - if: ecs_is_lan\n          exec:\n            - cache_lan\n            - _no_ecs\n          else_exec:\n            - cache_wan\n\n        # 强制用本地服务器解析\n        - if: query_is_cn_domain\n          exec:\n            - forward_local\n            - ttl_5m\n            - _return\n\n        # 强制用非本地服务器解析\n        - if: query_is_noncn_domain\n          exec:\n            # 优先返回ipv4结果\n            - _prefer_ipv4\n            - ecs_global\n            - primary:\n                # 默认用分流服务器\n                - forward_easymosdns\n              secondary:\n                # 超时用远程服务器\n                - forward_remote\n              fast_fallback: 2500\n              always_standby: false\n            - ttl_5m\n            - _return\n\n        # 屏蔽广告域名\n        - if: query_is_ad_domain\n          exec:\n          - black_hole\n          - ttl_1h\n          - _return\n\n        # 已知的本地域名或CDN域名用本地服务器解析\n        - if: \"(query_is_local_domain) || (query_is_cdn_cn_domain)\"\n          exec:\n            - primary:\n                # 默认用本地服务器\n                - forward_local\n                - ttl_1m\n              secondary:\n                # 超时用分流服务器\n                - forward_easymosdns\n                - ttl_5m\n              fast_fallback: 25\n              always_standby: false\n            # 预防已知的本地域名临时污染\n            - if: \"(! response_has_gfw_ip)\"\n              exec:\n                - _return\n\n        # 已知的污染域名用分流服务器或远程服务器解析\n        - if: query_is_non_local_domain\n          exec:\n            # 优先返回ipv4结果\n            - _prefer_ipv4\n            - ecs_global\n            - primary:\n                # 默认用分流服务器\n                - forward_easymosdns\n              secondary:\n                # 超时用远程服务器\n                - forward_remote\n              fast_fallback: 2500\n              always_standby: false\n            - ttl_5m\n            - _return\n\n        # 剩下的未知域名用IP分流\n        # 优先返回ipv4结果\n        - _prefer_ipv4\n        - primary:\n            # 默认用分流服务器\n            - forward_easymosdns\n            - if: response_server_failed\n              exec:\n                - forward_local\n                - _return\n            - ecs_global\n            - if: \"(! ecs_is_cn) && (! response_has_local_ip) && [_response_valid_answer]\"\n              exec:\n                - forward_easymosdns\n          secondary:\n            # 超时用本地分流器\n            - forward_remote\n            - if: response_has_local_ip\n              exec:\n                - forward_local\n                - _return\n            - ecs_global\n            - if: \"(! ecs_is_cn) && [_response_valid_answer]\"\n              exec:\n                - forward_remote\n          fast_fallback: 2500\n          always_standby: false\n        - ttl_5m\n\nservers:\n  - exec: main_sequence\n    timeout: 6\n    listeners:\n      - protocol: udp\n        addr: \"0.0.0.0:53\"\n      - protocol: tcp\n        addr: \"0.0.0.0:53\"\n      #- protocol: http\n      #  addr: \"127.0.0.1:9053\"\n      #  url_path: \"/dns-query\"\n      #  get_user_ip_from_header: \"X-Forwarded-For\"\n      #- protocol: tls             \n      #  addr: \"0.0.0.0:853\"\n      #  cert: \"/etc/mosdns/yourdomain.cert\"  # TLS 所需证书文件。\n      #  key: \"/etc/mosdns/yourdomain.key\"    # TLS 所需密钥文件。\n\n#api:\n#    http: \"127.0.0.1:9080\"\n"
        },
        {
          "name": "ecs_cn_domain.txt",
          "type": "blob",
          "size": 0.017578125,
          "content": "full:doh.apad.pro\n"
        },
        {
          "name": "ecs_noncn_domain.txt",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "hosts.txt",
          "type": "blob",
          "size": 0.1328125,
          "content": "﻿#域名在前、IP在后，支持一行多个IP，支持IPv6\r\n#dns.google 8.8.8.8 8.8.4.4 2001:4860:4860::8888\r\nlocalhost 127.0.0.1\r\n"
        },
        {
          "name": "rules",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}