{
  "metadata": {
    "timestamp": 1736568636409,
    "page": 719,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "atomantic/dotfiles",
      "stars": 1330,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2763671875,
          "content": "; EditorConfig is awesome: http://EditorConfig.org\n\n; top-most EditorConfig file\nroot = true\n\n; Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.3515625,
          "content": "{\n  \"env\": {\n    \"node\": true,\n    \"es6\": true\n  },\n  \"globals\": {\n  },\n  \"rules\": {\n    \"camelcase\": 0,\n    \"comma-spacing\": 0,\n    \"quotes\": [0, \"single\"],\n    \"new-cap\": 0,\n    \"no-extend-native\": 0,\n    \"no-multi-spaces\": 0,\n    \"no-undef\": 2,\n    \"no-unused-vars\": [2, { \"vars\": \"local\", \"args\": \"none\" }],\n    \"space-infix-ops\": 0,\n    \"strict\": 0\n  }\n}\n"
        },
        {
          "name": ".git_template",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3837890625,
          "content": ".AppleDouble\n.DS_Store\n.LSOverride\n._*\n.git_template/hooks/disabled-pc\nid_rsa\n# desktop image backups\nimg/*.backup.jpg\nnode_modules\n# personal swap gitconfigs\nhomedir/.gitconfig_*\nhomedir/.vim/backup/*\n!homedir/.vim/backup/.gitignore\nhomedir/.vim/temp/*\n!homedir/.vim/temp/.gitignore\nhomedir/.vim/.netrwhist\nhomedir/.vim/bundle/*\n!homedir/.vim/bundle/.gitignore\n!homedir/.vim/bundle/Vundle.vim"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2939453125,
          "content": "[submodule \"oh-my-zsh\"]\n  path = oh-my-zsh\n  url = https://github.com/ohmyzsh/ohmyzsh.git\n[submodule \"z-zsh\"]\n  path = z-zsh\n  url = https://github.com/sjl/z-zsh.git\n[submodule \"homedir/.vim/bundle/Vundle.vim\"]\n\tpath = homedir/.vim/bundle/Vundle.vim\n\turl = https://github.com/VundleVim/Vundle.vim.git\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.5703125,
          "content": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Contributor Code of Conduct](#contributor-code-of-conduct)\n  - [Version 0.4](#version-04)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Contributor Code of Conduct\n## Version 0.4\n\nAs contributors and maintainers of this project, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nIf any participant in this project has issues or takes exception with a contribution, they are obligated to provide constructive feedback and never resort to personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. Project maintainers who do not follow the Code of Conduct may be removed from the project team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nWe promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, ability or disability, ethnicity, religion, age, or level of experience."
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 6.97265625,
          "content": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n**Table of Contents** _generated with [DocToc](https://github.com/thlorenz/doctoc)_\n\n- [Release History](#release-history)\n  - [v5.12.0](#v5120)\n  - [v5.2.0](#v520)\n  - [v5.1.0](#v510)\n  - [v5.0.0](#v500)\n  - [v4.4.2](#v442)\n  - [v4.4.1](#v441)\n  - [v4.4.0](#v440)\n  - [v4.3.0](#v430)\n  - [v4.2.0](#v420)\n  - [v4.1.1](#v411)\n  - [v4.1.0](#v410)\n  - [v4.0.0](#v400)\n  - [v3.3.2](#v332)\n  - [v3.3.1](#v331)\n  - [v3.3.0](#v330)\n  - [v3.2.1](#v321)\n  - [v3.2.0](#v320)\n  - [v3.1.0](#v310)\n  - [v3.0.0](#v300)\n  - [v2.1.0](#v210)\n  - [v2.0.0](#v200)\n  - [v1.1.0](#v110)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Release History\n\n## v5.12.0\n\n- no more Ruby (`git-up` is now a gitconfig alias: `git up` that equates to `git pull --autostash --rebase`)\n- remove disable automatic termination of unresponsive apps (commented out)\n- remove SSD specific tweaks (commented out)\n- remove \"Restart automatically if the computer freezes\" (commented out)\n- remove \"Never go into sleep mode\" (commented out)\n- remove disable autocorrect (commented out)\n- remove \"Disable continuous spell checking\" in messages (commented out)\n- remove `openconnect` from homebrew packages\n- remove `macbreakz` from brew cask list\n- remove `the-unarchiver` from brew cask\n- git now uses `main` instead of `master`\n- git now defaults to vscode instead of vimdiff for merge conflicts\n\n## v5.1.0\n\n- update passwordless sudo to use method in [issue #35](https://github.com/atomantic/dotfiles/issues/35)\n\n## v5.0.0\n\n- each segment of setup now requires positive user input to change the system\n- replace `NERDtree` in vim with `netrw`\n- add spell check to `vim`\n- fix package installs (run in series to prevent homebrew from stepping on itself in parallel)\n- update /etc/hosts file from someonewhocares.org\n\n## v4.4.2\n\n- add .iterm2_shell_integration.zsh\n\n## v4.4.1\n\n- re-enable notification center\n- fix gitshots optional ability by renaming post-commit -> gitshot-pc\n\n## v4.4.0\n\n- cleanup readme and alphabetize software installation for better fork management and listing\n- disable vim YouCompleteMe Bundle (wasn't using it anyway and was causing installation problems on some machines)\n- remove yo, generator-dockerize, box-sync from software installs\n- install node stable (rather than old 4.x.x version)\n- make gitshots optional (and only install `imagesnap` and `imagemagick` if this is on)\n- fix passwordless sudo for Sierra (optional)\n- prompt to overwrite /etc/hosts with someonewhocares.org hosts file (saved in ./configs/hosts in this project)\n- fix default wallpaper in Sierra (Sierra 2)\n- remove sudden motion disable (already disabled: https://github.com/mathiasbynens/dotfiles/pull/755/files)\n- no longer setting hibernation mode to 0 (leaving default 3): https://github.com/mathiasbynens/dotfiles/commit/a3f91f67e07b6b31760b52320e0e890f93ff4e97#commitcomment-20715991\n\n## v4.3.0\n\n- vim installation fix\n- Enable firewall\n- Enable firewall stealth mode (no response to ICMP / ping requests)\n- Disable remote apple events\n- Disable wake-on modem\n- Disable wake-on LAN\n- Disable file-sharing via AFP or SMB\n- Disable guest account login\n- `pushup` alias (`git-up`, followed by `git push`)\n\n## v4.2.0\n\n- new shell functions: `tre` and `sri`\n- cleanup shell functions (remove unused echo helpers)\n\n## v4.1.1\n\n- fix `solarized dark` again for mocha test output coloring\n\n## v4.1.0\n\n- remove `to.dir` commands (never use them)\n- add aliases: `emptytrash`, `ips`, `iplocal`, `ip`, `ifactive`, `spoton`, `spotoff`, `afk`, `reload`, `path`\n\n## v4.0.0\n\n- OSX references to MacOS (includes Sierra)\n- remove aliases to things that are no longer useful (`usenode`, `useio`)\n- adding `bpc` alias for a `buzzphrase` git commit + push (don't use this on shared code)\n- `update` alias for updating all software\n- comment out GO path in `.shellpaths` (was causing slowness on machines with no go path)\n- comment out all tool shellpaths (enable them at will)\n- adding iTerm2 shell integration source\n- `weather $city` shellfn\n- cask install `little-snitch` and `micro-snitch`\n\n## v3.3.2\n\n- `curltime` shell function\n- Mac Sierra fixes for key repeat\n- Mac Sierra wallpaper\n\n## v3.3.1\n\n- fix restore\n\n## v3.3.0\n\n- include [httpie](https://github.com/jkbrzt/httpie)\n\n## v3.2.1\n\n- improved handling of `.nvmrc` files on dir change\n\n## v3.2.0\n\n- adjust solarized theme to fix issue with rendering `mocha` test output\n- https://github.com/mochajs/mocha/issues/802\n- now `008` color is light grey instead of matching the solarized background color\n\n## v3.1.0\n\n- new vim plugins\n- https://github.com/justinmk/vim-sneak\n- https://github.com/airblade/vim-gitgutter\n- https://github.com/tpope/vim-surround\n- https://github.com/dkprice/vim-easygrep\n- https://github.com/sjl/gundo.vim\n- vim textwidth now `120`\n- fonts now installed via brew cask (where possible)\n- thanks to @michielrensen [9db1d074](https://github.com/michielrensen/dotfiles/commit/9db1d0740eeb6df767be0f13c4706cd45c8d527f)\n- now automatically installing vim plugins\n- thanks to @michielrensen [b668fd56](https://github.com/michielrensen/dotfiles/commit/b668fd56673e12845215706cbb812f749604a3cc)\n- bubblegum theme for vim-airline\n- remove `ssh-agent` from zsh plugins (already launched by OSX)\n- thanks to @porcupie [a888494b](https://github.com/porcupie/dotfiles/commit/a888494b576dcb91fe24009dec0501504f7ffa80)\n- shorten powerline dir length to 2 dirs max\n- thanks to @Tsuki [07d4bbcd6](https://github.com/Tsuki/dotfiles/commit/07d4bbcd67dc9e961fefb318910308f424754f1d#diff-9e1651e3e42b7a9ae3b9b7492376b6cbL4)\n- adding `ag` brew\n- fix vim brew install\n- adding horizontal cursor line highlight in vim\n- killed `CTags` (not using them)\n- upgrade node to `4.4.7`\n- compile YouCompleteMe for code completion in vim:\n\n```\ncd ~/.vim/bundle/YouCompleteMe\n./install.py --all\n```\n\n- no more `bower` (just use npm)\n- fixed OSX clipboard copy (yank in vim now copies to OSX clipboard)\n- adding `npm config set save-exact true` at install time\n- ensures we always pin node modules\n- keeps consistent dev/build environments\n- saves from security and feature problems when people abuse SemVer\n\n## v3.0.0\n\n- BREAKING CHANGES!!!\n- now using node.js to run install list from `config.js`\n- moved dotfile sources into `homedir/*`\n- removed `osx.sh` script (all software/config exists now in `install.sh` and `config.js`)\n- remove Google Chrome install and configuration (chrome no longer likes to be installed via homebrew)\n- remove IOS simulator in launchpad config\n- backups are now created every time you run `./install.sh` and stored in datetime subfolders (in `./dotfiles_backup`)\n\n## v2.1.0\n\n- Now using powerlevel9k theme with awesome-patched fonts\n\n## v2.0.0\n\n- switched to using vim as primary editor/IDE\n- vim plugings now use vundle instead of pathogen\n\n## v1.1.0\n\n- Added dotfiles backup and restore.sh script\n  - you can now restore your previous dotfiles with ./restore.sh\n- prompting the user more (e.g. `brew upgrade` is now optional)\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.7548828125,
          "content": "ISC License (ISC)\n\n**Copyright (c) 2015, Adam Eivy <atomantic@gmail.com>**\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.408203125,
          "content": "# \\\\[._.]/ - Hi, I'm the MacOS bot\n\nI will update your MacOS machine with Better™ system defaults, preferences, software configuration and even auto-install some handy development tools and apps that my developer friends find helpful.\n\nYou don't need to install or configure anything upfront! This works with a brand-new machine from the factory as well as an existing machine that you've been working with for years.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Forget About Manual Configuration!](#forget-about-manual-configuration)\n- [Watch me run!](#watch-me-run)\n- [Installation](#installation)\n  - [Restoring Dotfiles](#restoring-dotfiles)\n- [3.x.x+ Upgrade Instructions!](#3xx-upgrade-instructions)\n- [Additional](#additional)\n  - [VIM as IDE](#vim-as-ide)\n  - [Crontab](#crontab)\n  - [Remap Caps-Lock](#remap-caps-lock)\n- [Settings](#settings)\n  - [Security](#security)\n  - [General System Changes](#general-system-changes)\n  - [Trackpad, mouse, keyboard, Bluetooth accessories, and input](#trackpad-mouse-keyboard-bluetooth-accessories-and-input)\n  - [Configuring the Screen](#configuring-the-screen)\n  - [Finder Configs](#finder-configs)\n  - [Dock & Dashboard](#dock--dashboard)\n  - [Configuring Hot Corners](#configuring-hot-corners)\n  - [Configuring Safari & WebKit](#configuring-safari--webkit)\n  - [Configuring Mail](#configuring-mail)\n  - [Spotlight](#spotlight)\n  - [iTerm2](#iterm2)\n  - [Time Machine](#time-machine)\n  - [Activity Monitor](#activity-monitor)\n  - [Address Book, Dashboard, iCal, TextEdit, and Disk Utility](#address-book-dashboard-ical-textedit-and-disk-utility)\n  - [Mac App Store](#mac-app-store)\n  - [Messages](#messages)\n  - [SizeUp.app](#sizeupapp)\n- [Software Installation](#software-installation)\n  - [Utilities](#utilities)\n  - [Apps](#apps)\n  - [NPM Global Modules](#npm-global-modules)\n- [License](#license)\n- [Contributions](#contributions)\n- [Loathing, Mehs and Praise](#loathing-mehs-and-praise)\n- [¯\\\\_(ツ)_/¯ Warning / Liability](#%C2%AF%5C%5C_%E3%83%84_%C2%AF-warning--liability)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Forget About Manual Configuration!\n\nDon't you hate getting a new laptop or joining a new team and then spending a whole day setting up your system preferences and tools? Me too. That's why we automate; we did it once and we don't want to have to do it again.\n\n\\\\[^_^]/ - This started as [Adam Eivy](http://adameivy.com)'s MacOS shell configuration dotfiles but has grown to a multi-developer platform for machine configuration.\n\nWhen I finish with your machine, you will be able to look at your command-line in full-screen mode like this (running iTerm):\n\n![iTerm Screenshot](img/term.png)\n\nCheck out how your shell prompt includes the full path, node.js version & the working git branch along with a lot of other info!\nWe use powerlevel9k for command prompt, so customization of what you want is easily changable in `./.zshrc`\nThe top terminal is using vim as a full replacement IDE.\nThe bottom left two are git terminals.\nThe bottom right is running `vtop`\n\nTo launch fullscreen, hit `Command + Enter` in iTerm, then use `Command + d` and `Command + D` to create split panes.\n\n\\\\[._.]/ - I'm so excited I just binaried in my pants!\n\n# Watch me run!\n\n![Running](http://media.giphy.com/media/5xtDarwenxEoFeIMEM0/giphy.gif)\n\n# Installation\n\n> Note: I recommend forking this repo in case you don't like anything I do and want to set your own preferences (and pull request them!)\n\n> ☢️ REVIEW WHAT THIS SCRIPT DOES PRIOR TO RUNNING\n> It's always a good idea to review arbitrary code from the internet before running it on your machine with sudo power!\n> You are responsible for everything this script does to your machine (see LICENSE)\n> The creator of this repo has a high tolerance for nuking his machine and starting over. If you have a low tolerance for this, proceed with caution.\n\n```bash\ngit clone --recurse-submodules https://github.com/atomantic/dotfiles ~/.dotfiles\ncd ~/.dotfiles;\n# run this using terminal (not iTerm, lest iTerm settings get discarded on exit)\n./install.sh\n```\n\n- When it finishes, open iTerm and press `Command + ,` to open preferences. Under Profiles > Colors, select \"Load Presets\" and choose the `Solarized Dark Patch` scheme. If it isn't there for some reason, import it from `~/.dotfiles/configs` -- you may also need to select the `Hack` font and check the box for non-ascii font and set to `Roboto Mono For Powerline` (I've had mixed results for automating these settings--love a pull request that improves this)\n- I've also found that you need to reboot before fast key repeat will be enabled\n\n> Note: if you have problems cloning the submodules behind proxy, you can use this command to convert `git://` to `https://`: `git config --global url.https://github.com/.insteadOf git://github.com/`\n\n> Note: running install.sh is idempotent. You can run it again and again as you add new features or software to the scripts! I'll regularly add new configurations so keep an eye on this repo as it grows and optimizes.\n\n## Restoring Dotfiles\n\nIf you have existing dotfiles for configuring git, zsh, vim, etc, these will be backed-up into `~/.dotfiles_backup/$(date +\"%Y.%m.%d.%H.%M.%S\")` and replaced with the files from this project. You can restore your original dotfiles by using `./restore.sh $RESTOREDATE` where `$RESTOREDATE` is the date folder name you want to restore.\n\n> The restore script does not currently restore system settings--only your original dotfiles. To restore system settings, you'll need to manually undo what you don't like (so don't forget to fork, review, tweak)\n\n# 3.x.x+ Upgrade Instructions!\n\n`3.0.0` brings huge changes. If you have made any modifications (and didn't make your own fork), you will want to backup your dotfiles prior to running `git-up` or `git pull` on `~/.dotfiles`.\n\nDo the following to upgrade your ~/.dotfiles safely:\n\n1. backup your dotfiles: `cp -R ~/.dotfiles ~/.dotfiles_old`\n2. `cd ~/.dotfiles`\n3. update dotfiles: `git up` or `git pull`\n4. remove old submodule location: `rm -rf .vim` (now lives in `homedir/.vim`)\n5. inspect `install.sh` and `config.js` to make sure all the software you want is installed\n6. inspect `homedir/*` for any changes you want to port from `./dotfiles_old`\n7. run `install.sh` again\n\n# Additional\n\n## VIM as IDE\n\nI am moving away from using `Atom` and instead using `vim` as my IDE. I use Vundle to manage vim plugins (instead of pathogen). Vundle is better in many ways and is compatible with pathogen plugins. Additionally, vundle will manage and install its own plugins so we don't have to use git submodules for all of them.\n\n## Crontab\n\nYou can `cron ~/.crontab` if you want to add my nightly cron software updates.\n\n> \\\\[0_0]/ - Note that this may wake you in the morning to compatibility issues so use only if you like being on the edge\n\n## Remap Caps-Lock\n\n- I highly recommend remapping your Caps Lock key to Control per [Dr. Bunsen](http://www.drbunsen.org/remapping-caps-lock/):\n  ![Remap Caps Lock](https://raw.githubusercontent.com/atomantic/dotfiles/master/img/remap_capslock.png)\n\n# Settings\n\nThis project changes a number of settings and configures software on MacOS.\nHere is the current list:\n\n## Prompt Driven Configuration\n\nThe following will only happen if you agree on the prompt\n\n- install a gitshots script to take a photo using your camera on every git commit (these go in as a post-commit hook to your .git_template)\n- overwrite your /etc/hosts file with a copy from someonewhocares.org (see ./configs/hosts for the file that will be used)\n- replace the system wallpaper with `img/wallpaper.jpg`\n\n## Security\n\n- Enable firewall\n- Enable firewall stealth mode (no response to ICMP / ping requests)\n- Disable remote apple events\n- Disable wake-on modem\n- Disable wake-on LAN\n- Disable guest account login\n\n## General System Changes\n\n- always boot in verbose mode (not MacOS GUI mode)\n- Disable the sound effects on boot\n- Menu bar: disable transparency\n- Menu bar: hide the Time Machine, Volume, User, and Bluetooth icons\n- Set highlight color to green\n- Set sidebar icon size to medium\n- Always show scrollbars\n- Increase window resize speed for Cocoa applications\n- Expand save panel by default\n- Expand print panel by default\n- allow 'locate' command\n- Set standby delay to 24 hours (default is 1 hour)\n- Save to disk (not to iCloud) by default\n- Automatically quit printer app once the print jobs complete\n- Disable the “Are you sure you want to open this application?” dialog\n- Remove duplicates in the “Open With” menu (also see 'lscleanup' alias)\n- Display ASCII control characters using caret notation in standard text views\n- Disable the crash reporter\n- Set Help Viewer windows to non-floating mode\n- Reveal IP, hostname, OS, etc. when clicking clock in login window\n- Check for software updates daily, not just once per week\n- Disable smart quotes as they’re annoying when typing code\n- Disable smart dashes as they’re annoying when typing code\n\n## Trackpad, mouse, keyboard, Bluetooth accessories, and input\n\n- Trackpad: enable tap to click for this user and for the login screen\n- Trackpad: map bottom right corner to right-click\n- Disable “natural” (Lion-style) scrolling\n- Increase sound quality for Bluetooth headphones/headsets\n- Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)\n- Use scroll gesture with the Ctrl (^) modifier key to zoom\n- Follow the keyboard focus while zoomed in\n- Disable press-and-hold for keys in favor of key repeat\n- Set a blazingly fast keyboard repeat rate:\n- Set language and text formats (english/US)\n\n## Configuring the Screen\n\n- Require password immediately after sleep or screen saver begins\n- Save screenshots to the desktop\n- Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)\n- Disable shadow in screenshots\n- Enable subpixel font rendering on non-Apple LCDs\n- Enable HiDPI display modes (requires restart)\n\n## Finder Configs\n\n- Keep folders on top when sorting by name (Sierra only)\n- Allow quitting via ⌘ + Q; doing so will also hide desktop icons\n- Disable window animations and Get Info animations\n- Set Desktop as the default location for new Finder windows\n- Show hidden files by default\n- Show all filename extensions\n- Show status bar\n- Show path bar\n- Allow text selection in Quick Look\n- Display full POSIX path as Finder window title\n- When performing a search, search the current folder by default\n- Disable the warning when changing a file extension\n- Enable spring loading for directories\n- Remove the spring loading delay for directories\n- Avoid creating .DS_Store files on network volumes\n- Disable disk image verification\n- Automatically open a new Finder window when a volume is mounted\n- Use list view in all Finder windows by default\n- Disable the warning before emptying the Trash\n- Empty Trash securely by default\n- Enable AirDrop over Ethernet and on unsupported Macs running Lion\n- Show the ~/Library folder\n- Expand the following File Info panes: “General”, “Open with”, and “Sharing & Permissions”\n\n## Dock & Dashboard\n\n- Enable highlight hover effect for the grid view of a stack (Dock)\n- Set the icon size of Dock items to 36 pixels\n- Change minimize/maximize window effect to scale\n- Minimize windows into their application’s icon\n- Enable spring loading for all Dock items\n- Show indicator lights for open applications in the Dock\n- Don’t animate opening applications from the Dock\n- Speed up Mission Control animations\n- Don’t group windows by application in Mission Control\n- Disable Dashboard\n- Don’t show Dashboard as a Space\n- Don’t automatically rearrange Spaces based on most recent use\n- Remove the auto-hiding Dock delay\n- Remove the animation when hiding/showing the Dock\n- Automatically hide and show the Dock\n- Make Dock icons of hidden applications translucent\n- Make Dock more transparent\n- Reset Launchpad, but keep the desktop wallpaper intact\n\n## Configuring Hot Corners\n\n- Top left screen corner → Mission Control\n- Top right screen corner → Desktop\n- Bottom right screen corner → Start screen saver\n\n## Configuring Safari & WebKit\n\n- Set Safari’s home page to ‘about:blank’ for faster loading\n- Prevent Safari from opening ‘safe’ files automatically after downloading\n- Allow hitting the Backspace key to go to the previous page in history\n- Hide Safari’s bookmarks bar by default\n- Hide Safari’s sidebar in Top Sites\n- Disable Safari’s thumbnail cache for History and Top Sites\n- Enable Safari’s debug menu\n- Make Safari’s search banners default to Contains instead of Starts With\n- Remove useless icons from Safari’s bookmarks bar\n- Enable the Develop menu and the Web Inspector in Safari\n- Add a context menu item for showing the Web Inspector in web views\n\n## Configuring Mail\n\n- Disable send and reply animations in Mail.app\n- Copy email addresses as 'foo@example.com' instead of 'Foo Bar <foo@example.com>' in Mail.app\n- Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app\n- Display emails in threaded mode, sorted by date (oldest at the top)\n- Disable inline attachments (just show the icons)\n- Disable automatic spell checking\n\n## Spotlight\n\n- Disable Spotlight indexing for any volume that gets mounted and has not yet been indexed\n- Change indexing order and disable some file types from being indexed\n- Load new settings before rebuilding the index\n- Make sure indexing is enabled for the main volume\n\n## iTerm2\n\n- Installing the Solarized Dark theme for iTerm\n- Don’t display the annoying prompt when quitting iTerm\n- Hide tab title bars\n- Set system-wide hotkey to show/hide iterm with ctrl+tick ( `^` + `)\n- Set normal font to Hack 12pt\n- Set non-ascii font to Roboto Mono for Powerline 12pt\n\n## Time Machine\n\n- Prevent Time Machine from prompting to use new hard drives as backup volume\n- Disable local Time Machine backups\n\n## Activity Monitor\n\n- Show the main window when launching Activity Monitor\n- Visualize CPU usage in the Activity Monitor Dock icon\n- Show all processes in Activity Monitor\n- Sort Activity Monitor results by CPU usage\n\n## Address Book, Dashboard, iCal, TextEdit, and Disk Utility\n\n- Enable the debug menu in Address Book\n- Enable Dashboard dev mode (allows keeping widgets on the desktop)\n- Use plain text mode for new TextEdit documents\n- Open and save files as UTF-8 in TextEdit\n- Enable the debug menu in Disk Utility\n\n## Mac App Store\n\n- Enable the WebKit Developer Tools in the Mac App Store\n- Enable Debug Menu in the Mac App Store\n\n## Messages\n\n- Disable automatic emoji substitution (i.e. use plain text smileys)\n- Disable smart quotes as it’s annoying for messages that contain code\n\n## SizeUp.app\n\n- Start SizeUp at login\n- Don’t show the preferences window on next start\n\n# Software Installation\n\nhomebrew, fontconfig, git, nvm (node + npm), and zsh (latest) are all installed inside the `install.sh` as foundational software for running this project.\nAdditional software is configured in `config.js` and can be customized in your own fork/branch (you can change everything in your own fork/brance).\nThe following is the software that I have set as default:\n\n## Utilities\n\n- ack\n- ag\n- coreutils\n- dos2unix\n- findutils\n- fortune\n- gawk\n- gifsicle\n- gnupg\n- gnu-sed\n- homebrew/dupes/grep\n- httpie\n- imagemagick (only if gitshots enabled)\n- imagesnap (only if gitshots enabled)\n- jq\n- mas\n- moreutils\n- nmap\n- openconnect\n- reattach-to-user-namespace\n- homebrew/dupes/screen\n- tmux\n- tree\n- ttyrec\n- vim --override-system-vi\n- watch\n- wget --enable-iri\n\n## Apps\n\n- box-sync\n- gpgtools\n- iterm2\n- sizeup\n- slack\n- the-unarchiver\n- xquartz\n\n## NPM Global Modules\n\n- antic\n- buzzphrase\n- eslint\n- gulp\n- instant-markdown-d\n- npm-check\n- prettyjson\n- trash\n- vtop\n\n# License\n\nThis project is licensed under ISC. Please fork, contribute and share.\n\n# Contributions\n\nContributions are always welcome in the form of pull requests with explanatory comments.\n\nPlease refer to the [Contributor Covenant](CODE_OF_CONDUCT.md)\n\n# Loathing, Mehs and Praise\n\n1. Loathing should be directed into pull requests that make it better. woot.\n2. Bugs with the setup should be put as GitHub issues.\n3. Mehs should be > /dev/null\n4. Praise should be directed to [![@antic](https://img.shields.io/twitter/follow/antic.svg?style=social&label=@antic)](https://twitter.com/antic)\n\n# Author\n\nMore here: https://adameivy.com\n\n# ¯\\\\_(ツ)_/¯ Warning / Liability\n\n> Warning:\n> The creator of this repo is not responsible if your machine ends up in a state you are not happy with. If you are concerned, look at the code to review everything this will do to your machine :)\n"
        },
        {
          "name": "config.js",
          "type": "blob",
          "size": 2.609375,
          "content": "module.exports = {\n  brew: [\n    // http://conqueringthecommandline.com/book/ack_ag\n    'ack',\n    'ag',\n    // https://github.com/wting/autojump\n    'autojump',\n    // alternative to `cat`: https://github.com/sharkdp/bat\n    'bat',\n    // Install GNU core utilities (those that come with macOS are outdated)\n    // Don’t forget to add `$(brew --prefix coreutils)/libexec/gnubin` to `$PATH`.\n    'coreutils',\n    'dos2unix',\n    // Install GNU `find`, `locate`, `updatedb`, and `xargs`, `g`-prefixed\n    'findutils',\n    'fortune',\n    'fzf',\n    'readline', // ensure gawk gets good readline\n    'gawk',\n    // http://www.lcdf.org/gifsicle/ (because I'm a gif junky)\n    'gifsicle',\n    'gnupg',\n    // Install GNU `sed`, overwriting the built-in `sed`\n    // so we can do \"sed -i 's/foo/bar/' file\" instead of \"sed -i '' 's/foo/bar/' file\"\n    'gnu-sed --with-default-names',\n    // upgrade grep so we can get things like inverted match (-v)\n    'grep --with-default-names',\n    // better, more recent grep\n    'homebrew/dupes/grep',\n    // https://github.com/jkbrzt/httpie\n    'httpie',\n    // jq is a sort of JSON grep\n    'jq',\n    // Mac App Store CLI: https://github.com/mas-cli/mas\n    'mas',\n    // Install some other useful utilities like `sponge`\n    'moreutils',\n    'nmap',\n    // 'openconnect',\n    'reattach-to-user-namespace',\n    // better/more recent version of screen\n    'homebrew/dupes/screen',\n    'tmux',\n    'todo-txt',\n    'tree',\n    'ttyrec',\n    // better, more recent vim\n    'vim --with-client-server --with-override-system-vi',\n    'watch',\n    // Install wget with IRI support\n    'wget --enable-iri'\n  ],\n  cask: [\n    //'adium',\n    //'amazon-cloud-drive',\n    //'atom',\n    //'box-sync',\n    //'comicbooklover',\n    //'diffmerge',\n    'docker', // docker for mac\n    //'dropbox',\n    //'evernote',\n    //'flux',\n    'gpg-suite',\n    //'ireadfast',\n    'iterm2',\n    //'little-snitch',\n    // 'macbreakz',\n    //'micro-snitch',\n    // 'signal',\n    //'macvim',\n    'sizeup',\n    //'sketchup',\n    'slack',\n    // 'the-unarchiver',\n    //'torbrowser',\n    //'transmission',\n    'visual-studio-code',\n    //'vlc',\n    'xquartz'\n  ],\n  gem: [\n  ],\n  npm: [\n    'antic',\n    'buzzphrase',\n    'eslint',\n    'instant-markdown-d',\n    //'generator-dockerize',\n    //'gulp',\n    //'npm-check-updates',\n    'prettyjson',\n    'trash',\n    'vtop'\n    // ,'yo'\n  ],\n  mas: [\n    //com.apple.dt.Xcode (10.2.1)\n    '497799835',\n    //com.if.Amphetamine (4.1.6)\n    //'937984704',\n    //net.shinyfrog.bear (1.6.15)\n    //'1091189122',\n    //com.monosnap.monosnap (3.5.8)\n    //'540348655',\n    //com.app77.pwsafemac (4.17)\n    //'520993579',\n  ],\n};\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "homedir",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 2.1845703125,
          "content": "const emoji = require('node-emoji')\nconst fs = require('fs')\nconst inquirer = require('inquirer')\nconst config = require('./config')\nconst command = require('./lib_node/command')\nconst series = require('async.series')\n\ninquirer.prompt([{\n  type: 'confirm',\n  name: 'gitshots',\n  message: 'Do you want to use gitshots?',\n  default: false\n},{\n  type: 'confirm',\n  name: 'packages',\n  message: 'Do you want to install packages from config.js?',\n  default: false\n}]).then(function (answers) {\n  if(answers.gitshots){\n\n    // additional brew packages needed to support gitshots\n    config.brew.push('imagemagick', 'imagesnap')\n    // ensure ~/.gitshots exists\n    command('mkdir -p ~/.gitshots', __dirname, function(err, out) {\n      if(err) throw err\n    })\n    // add post-commit hook\n    command('cp ./.git_template/hooks/gitshot-pc ./.git_template/hooks/post-commit', __dirname, function(err, out) {\n      if(err) throw err\n    })\n  }else{\n    if(fs.existsSync('./.git_template/hooks/post-commit')){\n      // disable post-commit (in case we are undoing the git-shots enable)\n      // TODO: examine and remove/comment out the file content with the git shots bit\n      command('mv ./.git_template/hooks/post-commit ./.git_template/hooks/disabled-pc', __dirname, function(err, out) {\n        if(err) throw err\n      })\n    }\n  }\n\n  if(!answers.packages){\n    return console.log('skipping package installs')\n  }\n\n  const tasks = [];\n\n  ['brew', 'cask', 'npm', 'gem', 'mas'].forEach( type => {\n    if(config[type] && config[type].length){\n      tasks.push((cb)=>{\n        console.info(emoji.get('coffee'), ' installing '+type+' packages')\n        cb()\n      })\n      config[type].forEach((item)=>{\n        tasks.push((cb)=>{\n          console.info(type+':', item)\n          command('. lib_sh/echos.sh && . lib_sh/requirers.sh && require_'+type+' ' + item, __dirname, function(err, stdout, stderr) {\n            if(err) console.error(emoji.get('fire'), err, stderr)\n            cb()\n          })\n        })\n      })\n    }else{\n      tasks.push((cb)=>{\n        console.info(emoji.get('coffee'), type+' has no packages')\n        cb()\n      })\n    }\n  })\n  series(tasks, function(err, results) {\n    console.log('package install complete')\n  })\n})"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 50.361328125,
          "content": "#!/usr/bin/env bash\n\n#TODO: update after macOS Catalina, default mac shell: bash is changing to zsh\n\n###########################\n# This script installs the dotfiles and runs all other system configuration scripts\n# @author Adam Eivy\n###########################\n\n# include my library helpers for colorized echo and require_brew, etc\nsource ./lib_sh/echos.sh\nsource ./lib_sh/requirers.sh\n\nbot \"Hi! I'm going to install tooling and tweak your system settings. Here I go...\"\n\n# Do we need to ask for sudo password or is it already passwordless?\ngrep -q 'NOPASSWD:     ALL' /etc/sudoers.d/$LOGNAME > /dev/null 2>&1\nif [ $? -ne 0 ]; then\n  echo \"no suder file\"\n  sudo -v\n\n  # Keep-alive: update existing sudo time stamp until the script has finished\n  while true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n\n  bot \"Do you want me to setup this machine to allow you to run sudo without a password?\\nPlease read here to see what I am doing:\\nhttp://wiki.summercode.com/sudo_without_a_password_in_mac_os_x \\n\"\n\n  read -r -p \"Make sudo passwordless? [y|N] \" response\n\n  if [[ $response =~ (yes|y|Y) ]];then\n      if ! grep -q \"#includedir /private/etc/sudoers.d\" /etc/sudoers; then\n        echo '#includedir /private/etc/sudoers.d' | sudo tee -a /etc/sudoers > /dev/null\n      fi\n      echo -e \"Defaults:$LOGNAME    !requiretty\\n$LOGNAME ALL=(ALL) NOPASSWD:     ALL\" | sudo tee /etc/sudoers.d/$LOGNAME\n      echo \"You can now run sudo commands without password!\"\n  fi\nfi\n\n# ###########################################################\n# /etc/hosts -- spyware/ad blocking\n# ###########################################################\nread -r -p \"Overwrite /etc/hosts with the ad-blocking hosts file from someonewhocares.org? (from ./configs/hosts file) [y|N] \" response\nif [[ $response =~ (yes|y|Y) ]];then\n    action \"cp /etc/hosts /etc/hosts.backup\"\n    sudo cp /etc/hosts /etc/hosts.backup\n    ok\n    action \"cp ./configs/hosts /etc/hosts\"\n    sudo cp ./configs/hosts /etc/hosts\n    ok\n    bot \"Your /etc/hosts file has been updated. Last version is saved in /etc/hosts.backup\"\nelse\n    ok \"skipped\";\nfi\n\n# ###########################################################\n# Git Config\n# ###########################################################\nbot \"OK, now I am going to update the .gitconfig for your user info:\"\ngrep 'user = GITHUBUSER' ./homedir/.gitconfig > /dev/null 2>&1\nif [[ $? = 0 ]]; then\n    read -r -p \"What is your git username? \" githubuser\n\n  fullname=`osascript -e \"long user name of (system info)\"`\n\n  if [[ -n \"$fullname\" ]];then\n    lastname=$(echo $fullname | awk '{print $2}');\n    firstname=$(echo $fullname | awk '{print $1}');\n  fi\n\n  if [[ -z $lastname ]]; then\n    lastname=`dscl . -read /Users/$(whoami) | grep LastName | sed \"s/LastName: //\"`\n  fi\n  if [[ -z $firstname ]]; then\n    firstname=`dscl . -read /Users/$(whoami) | grep FirstName | sed \"s/FirstName: //\"`\n  fi\n  email=`dscl . -read /Users/$(whoami)  | grep EMailAddress | sed \"s/EMailAddress: //\"`\n\n  if [[ ! \"$firstname\" ]]; then\n    response='n'\n  else\n    echo -e \"I see that your full name is $COL_YELLOW$firstname $lastname$COL_RESET\"\n    read -r -p \"Is this correct? [Y|n] \" response\n  fi\n\n  if [[ $response =~ ^(no|n|N) ]]; then\n    read -r -p \"What is your first name? \" firstname\n    read -r -p \"What is your last name? \" lastname\n  fi\n  fullname=\"$firstname $lastname\"\n\n  bot \"Great $fullname, \"\n\n  if [[ ! $email ]]; then\n    response='n'\n  else\n    echo -e \"The best I can make out, your email address is $COL_YELLOW$email$COL_RESET\"\n    read -r -p \"Is this correct? [Y|n] \" response\n  fi\n\n  if [[ $response =~ ^(no|n|N) ]]; then\n    read -r -p \"What is your email? \" email\n    if [[ ! $email ]];then\n      error \"you must provide an email to configure .gitconfig\"\n      exit 1\n    fi\n  fi\n\n\n  running \"replacing items in .gitconfig with your info ($COL_YELLOW$fullname, $email, $githubuser$COL_RESET)\"\n\n  # test if gnu-sed or MacOS sed\n\n  sed -i \"s/GITHUBFULLNAME/$firstname $lastname/\" ./homedir/.gitconfig > /dev/null 2>&1 || true\n  if [[ ${PIPESTATUS[0]} != 0 ]]; then\n    echo\n    running \"looks like you are using MacOS sed rather than gnu-sed, accommodating\"\n    sed -i '' \"s/GITHUBFULLNAME/$firstname $lastname/\" ./homedir/.gitconfig\n    sed -i '' 's/GITHUBEMAIL/'$email'/' ./homedir/.gitconfig\n    sed -i '' 's/GITHUBUSER/'$githubuser'/' ./homedir/.gitconfig\n    ok\n  else\n    echo\n    bot \"looks like you are already using gnu-sed. woot!\"\n    sed -i 's/GITHUBEMAIL/'$email'/' ./homedir/.gitconfig\n    sed -i 's/GITHUBUSER/'$githubuser'/' ./homedir/.gitconfig\n  fi\nfi\n\n# ###########################################################\n# Wallpaper\n# ###########################################################\nMD5_NEWWP=$(md5 img/wallpaper.jpg | awk '{print $4}')\nMD5_OLDWP=$(md5 /System/Library/CoreServices/DefaultDesktop.jpg | awk '{print $4}')\nif [[ \"$MD5_NEWWP\" != \"$MD5_OLDWP\" ]]; then\n  read -r -p \"Do you want to use the project's custom desktop wallpaper? [y|N] \" response\n  if [[ $response =~ (yes|y|Y) ]]; then\n    running \"Set a custom wallpaper image\"\n    # rm -rf ~/Library/Application Support/Dock/desktoppicture.db\n    bot \"I will backup system wallpapers in ~/.dotfiles/img/\"\n    sudo cp /System/Library/CoreServices/DefaultDesktop.jpg img/DefaultDesktop.jpg > /dev/null 2>&1\n    sudo cp /Library/Desktop\\ Pictures/El\\ Capitan.jpg img/El\\ Capitan.jpg > /dev/null 2>&1\n    sudo cp /Library/Desktop\\ Pictures/Sierra.jpg img/Sierra.jpg > /dev/null 2>&1\n    sudo cp /Library/Desktop\\ Pictures/Sierra\\ 2.jpg img/Sierra\\ 2.jpg > /dev/null 2>&1\n    sudo rm -f /System/Library/CoreServices/DefaultDesktop.jpg > /dev/null 2>&1\n    sudo rm -f /Library/Desktop\\ Pictures/El\\ Capitan.jpg > /dev/null 2>&1\n    sudo rm -f /Library/Desktop\\ Pictures/Sierra.jpg > /dev/null 2>&1\n    sudo rm -f /Library/Desktop\\ Pictures/Sierra\\ 2.jpg > /dev/null 2>&1\n    sudo cp ./img/wallpaper.jpg /System/Library/CoreServices/DefaultDesktop.jpg;\n    sudo cp ./img/wallpaper.jpg /Library/Desktop\\ Pictures/Sierra.jpg;\n    sudo cp ./img/wallpaper.jpg /Library/Desktop\\ Pictures/Sierra\\ 2.jpg;\n    sudo cp ./img/wallpaper.jpg /Library/Desktop\\ Pictures/El\\ Capitan.jpg;ok\n  else\n    ok \"skipped\"\n  fi\nfi\n\n# ###########################################################\n# Install non-brew various tools (PRE-BREW Installs)\n# ###########################################################\n\nbot \"ensuring build/install tools are available\"\nif ! xcode-select --print-path &> /dev/null; then\n\n    # Prompt user to install the XCode Command Line Tools\n    xcode-select --install &> /dev/null\n\n    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    # Wait until the XCode Command Line Tools are installed\n    until xcode-select --print-path &> /dev/null; do\n        sleep 5\n    done\n\n    print_result $? ' XCode Command Line Tools Installed'\n\n    # Prompt user to agree to the terms of the Xcode license\n    # https://github.com/alrra/dotfiles/issues/10\n\n    sudo xcodebuild -license\n    print_result $? 'Agree with the XCode Command Line Tools licence'\n\nfi\n\n# ###########################################################\n# install homebrew (CLI Packages)\n# ###########################################################\nrunning \"checking homebrew...\"\nbrew_bin=$(which brew) 2>&1 > /dev/null\nif [[ $? != 0 ]]; then\n  action \"installing homebrew\"\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n  if [[ $? != 0 ]]; then\n    error \"unable to install homebrew, script $0 abort!\"\n    exit 2\n  fi\n  (echo; echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"') >> /Users/$(whoami)/.zprofile\n    eval \"$(/opt/homebrew/bin/brew shellenv)\"\n  brew analytics off\nelse\n  ok\n  bot \"Homebrew\"\n  read -r -p \"run brew update && upgrade? [y|N] \" response\n  if [[ $response =~ (y|yes|Y) ]]; then\n    action \"updating homebrew...\"\n    brew update\n    ok \"homebrew updated\"\n    action \"upgrading brew packages...\"\n    brew upgrade\n    ok \"brews upgraded\"\n  else\n    ok \"skipped brew package upgrades.\"\n  fi\nfi\n\n# Just to avoid a potential bug\nmkdir -p ~/Library/Caches/Homebrew/Formula\nbrew doctor\n\n# skip those GUI clients, git command-line all the way\n# git is now included with macos terminal\n#require_brew git\n# update zsh to latest\n#require_brew zsh\n# update ruby to latest\n# use versions of packages installed with homebrew\n#RUBY_CONFIGURE_OPTS=\"--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline` --with-libyaml-dir=`brew --prefix libyaml`\"\n#require_brew ruby\n# set zsh as the user login shell\n# CURRENTSHELL=$(dscl . -read /Users/$USER UserShell | awk '{print $2}')\n# if [[ \"$CURRENTSHELL\" != \"/usr/local/bin/zsh\" ]]; then\n#   bot \"setting newer homebrew zsh (/usr/local/bin/zsh) as your shell (password required)\"\n#   # sudo bash -c 'echo \"/usr/local/bin/zsh\" >> /etc/shells'\n#   # chsh -s /usr/local/bin/zsh\n#   sudo dscl . -change /Users/$USER UserShell $SHELL /usr/local/bin/zsh > /dev/null 2>&1\n#   ok\n# fi\n\nif [[ ! -d \"./oh-my-zsh/custom/themes/powerlevel9k\" ]]; then\n  git clone https://github.com/bhilburn/powerlevel9k.git oh-my-zsh/custom/themes/powerlevel9k\nfi\n\nbot \"Dotfiles Setup\"\nread -r -p \"symlink ./homedir/* files in ~/ (these are the dotfiles)? [y|N] \" response\nif [[ $response =~ (y|yes|Y) ]]; then\n  bot \"creating symlinks for project dotfiles...\"\n  pushd homedir > /dev/null 2>&1\n  now=$(date +\"%Y.%m.%d.%H.%M.%S\")\n\n  for file in .*; do\n    if [[ $file == \".\" || $file == \"..\" ]]; then\n      continue\n    fi\n    running \"~/$file\"\n    # if the file exists:\n    if [[ -e ~/$file ]]; then\n        mkdir -p ~/.dotfiles_backup/$now\n        mv ~/$file ~/.dotfiles_backup/$now/$file\n        echo \"backup saved as ~/.dotfiles_backup/$now/$file\"\n    fi\n    # symlink might still exist\n    unlink ~/$file > /dev/null 2>&1\n    # create the link\n    ln -s ~/.dotfiles/homedir/$file ~/$file\n    echo -en '\\tlinked';ok\n  done\n\n  popd > /dev/null 2>&1\nfi\n\nbot \"VIM Setup\"\nread -r -p \"Do you want to install vim plugins now? [y|N] \" response\nif [[ $response =~ (y|yes|Y) ]];then\n  bot \"Installing vim plugins\"\n  # cmake is required to compile vim bundle YouCompleteMe\n  # require_brew cmake\n  vim +PluginInstall +qall > /dev/null 2>&1\n  ok\nelse\n  ok \"skipped. Install by running :PluginInstall within vim\"\nfi\n\n\nread -r -p \"Install fonts? [y|N] \" response\nif [[ $response =~ (y|yes|Y) ]];then\n  bot \"installing fonts\"\n  # need fontconfig to install/build fonts\n  require_brew fontconfig\n  ./fonts/install.sh\n  brew tap homebrew/cask-fonts\n  require_brew svn #required for roboto\n  require_cask font-fontawesome\n  require_cask font-awesome-terminal-fonts\n  require_cask font-hack\n  require_cask font-inconsolata-dz-for-powerline\n  require_cask font-inconsolata-g-for-powerline\n  require_cask font-inconsolata-for-powerline\n  require_cask font-roboto-mono\n  require_cask font-roboto-mono-for-powerline\n  require_cask font-source-code-pro\n  ok\nfi\n\n\n# if [[ -d \"/Library/Ruby/Gems/2.0.0\" ]]; then\n#   running \"Fixing Ruby Gems Directory Permissions\"\n#   sudo chown -R $(whoami) /Library/Ruby/Gems/2.0.0\n#   ok\n# fi\n\n# node version manager\nrequire_brew nvm\n\n# nvm\nrequire_nvm stable\n\n#####################################\n# Now we can switch to node.js mode\n# for better maintainability and\n# easier configuration via\n# JSON files and inquirer prompts\n#####################################\n\nbot \"installing npm tools needed to run this project...\"\nnpm install\nok\n\nbot \"installing packages from config.js...\"\nnode index.js\nok\n\nrunning \"cleanup homebrew\"\nbrew cleanup --force > /dev/null 2>&1\nrm -f -r /Library/Caches/Homebrew/* > /dev/null 2>&1\nok\n\nbot \"OS Configuration\"\nread -r -p \"Do you want to update the system configurations? [y|N] \" response\nif [[ -z $response || $response =~ ^(n|N) ]]; then\n  open /Applications/iTerm.app\n  bot \"All done\"\n  exit\nfi\n\n###############################################################################\nbot \"Configuring General System UI/UX...\"\n###############################################################################\n# Close any open System Preferences panes, to prevent them from overriding\n# settings we’re about to change\nrunning \"closing any system preferences to prevent issues with automated changes\"\nosascript -e 'tell application \"System Preferences\" to quit'\nok\n\n##############################################################################\n# Security                                                                   #\n##############################################################################\n# Based on:\n# https://github.com/drduh/macOS-Security-and-Privacy-Guide\n# https://benchmarks.cisecurity.org/tools2/osx/CIS_Apple_OSX_10.12_Benchmark_v1.0.0.pdf\n\n# Enable firewall. Possible values:\n#   0 = off\n#   1 = on for specific sevices\n#   2 = on for essential services\nsudo defaults write /Library/Preferences/com.apple.alf globalstate -int 1\n\n# Enable firewall stealth mode (no response to ICMP / ping requests)\n# Source: https://support.apple.com/guide/mac-help/use-stealth-mode-to-keep-your-mac-more-secure-mh17133/mac\n#sudo defaults write /Library/Preferences/com.apple.alf stealthenabled -int 1\nsudo defaults write /Library/Preferences/com.apple.alf stealthenabled -int 1\n\n# Enable firewall logging\n#sudo defaults write /Library/Preferences/com.apple.alf loggingenabled -int 1\n\n# Do not automatically allow signed software to receive incoming connections\n#sudo defaults write /Library/Preferences/com.apple.alf allowsignedenabled -bool false\n\n# Log firewall events for 90 days\n#sudo perl -p -i -e 's/rotate=seq compress file_max=5M all_max=50M/rotate=utc compress file_max=5M ttl=90/g' \"/etc/asl.conf\"\n#sudo perl -p -i -e 's/appfirewall.log file_max=5M all_max=50M/appfirewall.log rotate=utc compress file_max=5M ttl=90/g' \"/etc/asl.conf\"\n\n# Reload the firewall\n# (uncomment if above is not commented out)\n#launchctl unload /System/Library/LaunchAgents/com.apple.alf.useragent.plist\n#sudo launchctl unload /System/Library/LaunchDaemons/com.apple.alf.agent.plist\n#sudo launchctl load /System/Library/LaunchDaemons/com.apple.alf.agent.plist\n#launchctl load /System/Library/LaunchAgents/com.apple.alf.useragent.plist\n\n# Disable IR remote control\n#sudo defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool false\n\n# Turn Bluetooth off completely\n#sudo defaults write /Library/Preferences/com.apple.Bluetooth ControllerPowerState -int 0\n#sudo launchctl unload /System/Library/LaunchDaemons/com.apple.blued.plist\n#sudo launchctl load /System/Library/LaunchDaemons/com.apple.blued.plist\n\n# Disable wifi captive portal\n#sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool false\n\n# Disable remote apple events\nsudo systemsetup -setremoteappleevents off\n\n# Disable remote login\nsudo systemsetup -setremotelogin off\n\n# Disable wake-on modem\nsudo systemsetup -setwakeonmodem off\n\n# Disable wake-on LAN\nsudo systemsetup -setwakeonnetworkaccess off\n\n# Disable file-sharing via AFP or SMB\n# sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.AppleFileServer.plist\n# sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.smbd.plist\n\n# Display login window as name and password\n#sudo defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool true\n\n# Do not show password hints\n#sudo defaults write /Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0\n\n# Disable guest account login\nsudo defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false\n\n# Automatically lock the login keychain for inactivity after 6 hours\n#security set-keychain-settings -t 21600 -l ~/Library/Keychains/login.keychain\n\n# Destroy FileVault key when going into standby mode, forcing a re-auth.\n# Source: https://web.archive.org/web/20160114141929/http://training.apple.com/pdf/WP_FileVault2.pdf\n#sudo pmset destroyfvkeyonstandby 1\n\n# Disable Bonjour multicast advertisements\n#sudo defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true\n\n# Disable diagnostic reports\n#sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.SubmitDiagInfo.plist\n\n# Log authentication events for 90 days\n#sudo perl -p -i -e 's/rotate=seq file_max=5M all_max=20M/rotate=utc file_max=5M ttl=90/g' \"/etc/asl/com.apple.authd\"\n\n# Log installation events for a year\n#sudo perl -p -i -e 's/format=bsd/format=bsd mode=0640 rotate=utc compress file_max=5M ttl=365/g' \"/etc/asl/com.apple.install\"\n\n# Increase the retention time for system.log and secure.log\n#sudo perl -p -i -e 's/\\/var\\/log\\/wtmp.*$/\\/var\\/log\\/wtmp   \\t\\t\\t640\\ \\ 31\\    *\\t\\@hh24\\ \\J/g' \"/etc/newsyslog.conf\"\n\n# Keep a log of kernel events for 30 days\n#sudo perl -p -i -e 's|flags:lo,aa|flags:lo,aa,ad,fd,fm,-all,^-fa,^-fc,^-cl|g' /private/etc/security/audit_control\n#sudo perl -p -i -e 's|filesz:2M|filesz:10M|g' /private/etc/security/audit_control\n#sudo perl -p -i -e 's|expire-after:10M|expire-after: 30d |g' /private/etc/security/audit_control\n\n# Disable the “Are you sure you want to open this application?” dialog\n# defaults write com.apple.LaunchServices LSQuarantine -bool false\n\n###############################################################################\n# SSD-specific tweaks                                                         #\n###############################################################################\n\n# disablelocal is no longer used, check man tmutil for more info\n# running \"Disable local Time Machine snapshots\"\n# sudo tmutil disablelocal;ok\n\n# running \"Disable hibernation (speeds up entering sleep mode)\"\n# sudo pmset -a hibernatemode 0;ok\n\n# running \"Remove the sleep image file to save disk space\"\n# sudo rm -rf /Private/var/vm/sleepimage;ok\n# running \"Create a zero-byte file instead\"\n# sudo touch /Private/var/vm/sleepimage;ok\n# running \"…and make sure it can’t be rewritten\"\n# sudo chflags uchg /Private/var/vm/sleepimage;ok\n\n#running \"Disable the sudden motion sensor as it’s not useful for SSDs\"\n# sudo pmset -a sms 0;ok\n\n################################################\n# Optional / Experimental                      #\n################################################\n\n# running \"Set computer name (as done via System Preferences → Sharing)\"\n# sudo scutil --set ComputerName \"antic\"\n# sudo scutil --set HostName \"antic\"\n# sudo scutil --set LocalHostName \"antic\"\n# sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string \"antic\"\n\n#setting up the computer label & name\nread -p \"What is this machine's label (Example: Paul's MacBook Pro ) ? \" mac_os_label\nif [[ -z \"$mac_os_label\" ]]; then\n  echo \"ERROR: Invalid MacOS label.\"\n  exit 1\nfi\n\nread -p \"What is this machine's name (Example: paul-macbook-pro ) ? \" mac_os_name\nif [[ -z \"$mac_os_name\" ]]; then\n  echo \"ERROR: Invalid MacOS name.\"\n  exit 1\nfi\n\necho \"Setting system Label and Name...\"\nsudo scutil --set ComputerName \"$mac_os_label\"\nsudo scutil --set HostName \"$mac_os_name\"\nsudo scutil --set LocalHostName \"$mac_os_name\"\nsudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string \"$mac_os_name\"\n\n# running \"Disable smooth scrolling\"\n# (Uncomment if you’re on an older Mac that messes up the animation)\n# defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false;ok\n\n# running \"Disable Resume system-wide\"\n# defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false;ok\n# TODO: might want to enable this again and set specific apps that this works great for\n# e.g. defaults write com.microsoft.word NSQuitAlwaysKeepsWindows -bool true\n\n# running \"Fix for the ancient UTF-8 bug in QuickLook (http://mths.be/bbo)\"\"\n# # Commented out, as this is known to cause problems in various Adobe apps :(\n# # See https://github.com/mathiasbynens/dotfiles/issues/237\n# echo \"0x08000100:0\" > ~/.CFUserTextEncoding;ok\n\n# running \"Stop iTunes from responding to the keyboard media keys\"\n# launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null;ok\n\n# running \"Show icons for hard drives, servers, and removable media on the desktop\"\n# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true\n# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true\n# defaults write com.apple.finder ShowMountedServersOnDesktop -bool true\n# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true;ok\n\n# running \"Enable the MacBook Air SuperDrive on any Mac\"\n# sudo nvram boot-args=\"mbasd=1\";ok\n\n# running \"Remove Dropbox’s green checkmark icons in Finder\"\n# file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns\n# [ -e \"${file}\" ] && mv -f \"${file}\" \"${file}.bak\";ok\n\n# running \"Wipe all (default) app icons from the Dock\"\n# # This is only really useful when setting up a new Mac, or if you don’t use\n# # the Dock to launch apps.\n# defaults write com.apple.dock persistent-apps -array \"\";ok\n\n#running \"Enable the 2D Dock\"\n#defaults write com.apple.dock no-glass -bool true;ok\n\n#running \"Disable the Launchpad gesture (pinch with thumb and three fingers)\"\n#defaults write com.apple.dock showLaunchpadGestureEnabled -int 0;ok\n\n#running \"Add a spacer to the left side of the Dock (where the applications are)\"\n#defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type=\"spacer-tile\";}';ok\n#running \"Add a spacer to the right side of the Dock (where the Trash is)\"\n#defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type=\"spacer-tile\";}';ok\n\n\n################################################\nbot \"Standard System Changes\"\n################################################\nrunning \"always boot in verbose mode (not MacOS GUI mode)\"\nsudo nvram boot-args=\"-v\";ok\n\nrunning \"allow 'locate' command\"\nsudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist > /dev/null 2>&1;ok\n\nrunning \"Set standby delay to 24 hours (default is 1 hour)\"\nsudo pmset -a standbydelay 86400;ok\n\nrunning \"Disable the sound effects on boot\"\nsudo nvram SystemAudioVolume=\" \";ok\n\nrunning \"Menu bar: disable transparency\"\ndefaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool false;ok\n\nrunning \"Menu bar: hide the Time Machine, Volume, User, and Bluetooth icons\"\nfor domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do\n  defaults write \"${domain}\" dontAutoLoad -array \\\n    \"/System/Library/CoreServices/Menu Extras/TimeMachine.menu\" \\\n    \"/System/Library/CoreServices/Menu Extras/Volume.menu\" \\\n    \"/System/Library/CoreServices/Menu Extras/User.menu\"\ndone;\ndefaults write com.apple.systemuiserver menuExtras -array \\\n  \"/System/Library/CoreServices/Menu Extras/Bluetooth.menu\" \\\n  \"/System/Library/CoreServices/Menu Extras/AirPort.menu\" \\\n  \"/System/Library/CoreServices/Menu Extras/Battery.menu\" \\\n  \"/System/Library/CoreServices/Menu Extras/Clock.menu\"\nok\n\nrunning \"Set highlight color to green\"\ndefaults write NSGlobalDomain AppleHighlightColor -string \"0.764700 0.976500 0.568600\";ok\n\nrunning \"Set sidebar icon size to medium\"\ndefaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2;ok\n\nrunning \"Always show scrollbars\"\ndefaults write NSGlobalDomain AppleShowScrollBars -string \"Always\";ok\n# Possible values: `WhenScrolling`, `Automatic` and `Always`\n\nrunning \"Increase window resize speed for Cocoa applications\"\ndefaults write NSGlobalDomain NSWindowResizeTime -float 0.001;ok\n\nrunning \"Expand save panel by default\"\ndefaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true\ndefaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true;ok\n\nrunning \"Expand print panel by default\"\ndefaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true\ndefaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true;ok\n\nrunning \"Save to disk (not to iCloud) by default\"\ndefaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false;ok\n\nrunning \"Automatically quit printer app once the print jobs complete\"\ndefaults write com.apple.print.PrintingPrefs \"Quit When Finished\" -bool true;ok\n\nrunning \"Disable the “Are you sure you want to open this application?” dialog\"\ndefaults write com.apple.LaunchServices LSQuarantine -bool false;ok\n\n# https://github.com/atomantic/dotfiles/issues/30#issuecomment-514589462\n#running \"Remove duplicates in the “Open With” menu (also see 'lscleanup' alias)\"\n#/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user;ok\n\nrunning \"Display ASCII control characters using caret notation in standard text views\"\n# Try e.g. `cd /tmp; unidecode \"\\x{0000}\" > cc.txt; open -e cc.txt`\ndefaults write NSGlobalDomain NSTextShowsControlCharacters -bool true;ok\n\n# running \"Disable automatic termination of inactive apps\"\n# defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true;ok\n\nrunning \"Disable the crash reporter\"\ndefaults write com.apple.CrashReporter DialogType -string \"none\";ok\n\nrunning \"Set Help Viewer windows to non-floating mode\"\ndefaults write com.apple.helpviewer DevMode -bool true;ok\n\nrunning \"Reveal IP, hostname, OS, etc. when clicking clock in login window\"\nsudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName;ok\n\n# running \"Restart automatically if the computer freezes\"\n# sudo systemsetup -setrestartfreeze on;ok\n\n# running \"Never go into computer sleep mode\"\n# sudo systemsetup -setcomputersleep Off > /dev/null;ok\n\nrunning \"Check for software updates daily, not just once per week\"\ndefaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1;ok\n\n# running \"Disable Notification Center and remove the menu bar icon\"\n# launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist > /dev/null 2>&1;ok\n\nrunning \"Disable smart quotes as they’re annoying when typing code\"\ndefaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false;ok\n\nrunning \"Disable smart dashes as they’re annoying when typing code\"\ndefaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false;ok\n\n\n###############################################################################\nbot \"Trackpad, mouse, keyboard, Bluetooth accessories, and input\"\n###############################################################################\n\nrunning \"Trackpad: enable tap to click for this user and for the login screen\"\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\ndefaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1;ok\n\nrunning \"Trackpad: map bottom right corner to right-click\"\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1\ndefaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true;ok\n\nrunning \"Disable 'natural' (Lion-style) scrolling\"\ndefaults write NSGlobalDomain com.apple.swipescrolldirection -bool false;ok\n\nrunning \"Increase sound quality for Bluetooth headphones/headsets\"\ndefaults write com.apple.BluetoothAudioAgent \"Apple Bitpool Min (editable)\" -int 40;ok\n\nrunning \"Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)\"\ndefaults write NSGlobalDomain AppleKeyboardUIMode -int 3;ok\n\nrunning \"Use scroll gesture with the Ctrl (^) modifier key to zoom\"\ndefaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true\ndefaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144;ok\nrunning \"Follow the keyboard focus while zoomed in\"\ndefaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true;ok\n\nrunning \"Disable press-and-hold for keys in favor of key repeat\"\ndefaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false;ok\n\nrunning \"Set a blazingly fast keyboard repeat rate\"\ndefaults write NSGlobalDomain KeyRepeat -int 2\ndefaults write NSGlobalDomain InitialKeyRepeat -int 10;ok\n\nrunning \"Set language and text formats (english/US)\"\ndefaults write NSGlobalDomain AppleLanguages -array \"en\"\ndefaults write NSGlobalDomain AppleLocale -string \"en_US@currency=USD\"\ndefaults write NSGlobalDomain AppleMeasurementUnits -string \"Centimeters\"\ndefaults write NSGlobalDomain AppleMetricUnits -bool true;ok\n\n# running \"Disable auto-correct\"\n# defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false;ok\n\n###############################################################################\nbot \"Configuring the Screen\"\n###############################################################################\n\nrunning \"Require password immediately after sleep or screen saver begins\"\ndefaults write com.apple.screensaver askForPassword -int 1\ndefaults write com.apple.screensaver askForPasswordDelay -int 0;ok\n\nrunning \"Save screenshots to the desktop\"\ndefaults write com.apple.screencapture location -string \"${HOME}/Desktop\";ok\n\nrunning \"Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)\"\ndefaults write com.apple.screencapture type -string \"png\";ok\n\nrunning \"Disable shadow in screenshots\"\ndefaults write com.apple.screencapture disable-shadow -bool true;ok\n\nrunning \"Enable subpixel font rendering on non-Apple LCDs\"\ndefaults write NSGlobalDomain AppleFontSmoothing -int 2;ok\n\nrunning \"Enable HiDPI display modes (requires restart)\"\nsudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true;ok\n\n###############################################################################\nbot \"Finder Configs\"\n###############################################################################\n\nrunning \"Keep folders on top when sorting by name (version 10.12 and later)\"\ndefaults write com.apple.finder _FXSortFoldersFirst -bool true\n\nrunning \"Allow quitting via ⌘ + Q; doing so will also hide desktop icons\"\ndefaults write com.apple.finder QuitMenuItem -bool true;ok\n\nrunning \"Disable window animations and Get Info animations\"\ndefaults write com.apple.finder DisableAllAnimations -bool true;ok\n\nrunning \"Set Desktop as the default location for new Finder windows\"\n# For other paths, use 'PfLo' and 'file:///full/path/here/'\ndefaults write com.apple.finder NewWindowTarget -string \"PfDe\"\ndefaults write com.apple.finder NewWindowTargetPath -string \"file://${HOME}/Desktop/\";ok\n\nrunning \"Show hidden files by default\"\ndefaults write com.apple.finder AppleShowAllFiles -bool true;ok\n\nrunning \"Show all filename extensions\"\ndefaults write NSGlobalDomain AppleShowAllExtensions -bool true;ok\n\nrunning \"Show status bar\"\ndefaults write com.apple.finder ShowStatusBar -bool true;ok\n\nrunning \"Show path bar\"\ndefaults write com.apple.finder ShowPathbar -bool true;ok\n\nrunning \"Allow text selection in Quick Look\"\ndefaults write com.apple.finder QLEnableTextSelection -bool true;ok\n\nrunning \"Display full POSIX path as Finder window title\"\ndefaults write com.apple.finder _FXShowPosixPathInTitle -bool true;ok\n\nrunning \"When performing a search, search the current folder by default\"\ndefaults write com.apple.finder FXDefaultSearchScope -string \"SCcf\";ok\n\nrunning \"Disable the warning when changing a file extension\"\ndefaults write com.apple.finder FXEnableExtensionChangeWarning -bool false;ok\n\nrunning \"Enable spring loading for directories\"\ndefaults write NSGlobalDomain com.apple.springing.enabled -bool true;ok\n\nrunning \"Remove the spring loading delay for directories\"\ndefaults write NSGlobalDomain com.apple.springing.delay -float 0;ok\n\nrunning \"Avoid creating .DS_Store files on network volumes\"\ndefaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true;ok\n\nrunning \"Disable disk image verification\"\ndefaults write com.apple.frameworks.diskimages skip-verify -bool true\ndefaults write com.apple.frameworks.diskimages skip-verify-locked -bool true\ndefaults write com.apple.frameworks.diskimages skip-verify-remote -bool true;ok\n\nrunning \"Automatically open a new Finder window when a volume is mounted\"\ndefaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true\ndefaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true\ndefaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true;ok\n\nrunning \"Use list view in all Finder windows by default\"\n# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`\ndefaults write com.apple.finder FXPreferredViewStyle -string \"Nlsv\";ok\n\nrunning \"Disable the warning before emptying the Trash\"\ndefaults write com.apple.finder WarnOnEmptyTrash -bool false;ok\n\nrunning \"Empty Trash securely by default\"\ndefaults write com.apple.finder EmptyTrashSecurely -bool true;ok\n\nrunning \"Enable AirDrop over Ethernet and on unsupported Macs running Lion\"\ndefaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true;ok\n\n# Issue on macOS Mojave, for more info\n# check https://github.com/mathiasbynens/dotfiles/issues/865\n# running \"Show the ~/Library folder\"\n# chflags nohidden ~/Library;ok\n\nrunning \"Expand the following File Info panes: “General”, “Open with”, and “Sharing & Permissions”\"\ndefaults write com.apple.finder FXInfoPanesExpanded -dict \\\n  General -bool true \\\n  OpenWith -bool true \\\n  Privileges -bool true;ok\n\n###############################################################################\nbot \"Dock & Dashboard\"\n###############################################################################\n\nrunning \"Enable highlight hover effect for the grid view of a stack (Dock)\"\ndefaults write com.apple.dock mouse-over-hilite-stack -bool true;ok\n\nrunning \"Set the icon size of Dock items to 36 pixels\"\ndefaults write com.apple.dock tilesize -int 36;ok\n\nrunning \"Change minimize/maximize window effect to scale\"\ndefaults write com.apple.dock mineffect -string \"scale\";ok\n\nrunning \"Minimize windows into their application’s icon\"\ndefaults write com.apple.dock minimize-to-application -bool true;ok\n\nrunning \"Enable spring loading for all Dock items\"\ndefaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true;ok\n\nrunning \"Show indicator lights for open applications in the Dock\"\ndefaults write com.apple.dock show-process-indicators -bool true;ok\n\nrunning \"Don’t animate opening applications from the Dock\"\ndefaults write com.apple.dock launchanim -bool false;ok\n\nrunning \"Speed up Mission Control animations\"\ndefaults write com.apple.dock expose-animation-duration -float 0.1;ok\n\nrunning \"Don’t group windows by application in Mission Control\"\n# (i.e. use the old Exposé behavior instead)\ndefaults write com.apple.dock expose-group-by-app -bool false;ok\n\n\n# Dashboard is disabled by default on macOS Mojave,\n# Moreover as of macOS 10.15 Catalina, Dashboard is removed macOS.\n\n# running \"Disable Dashboard\"\n# defaults write com.apple.dashboard mcx-disabled -bool true;ok\n\n# running \"Don’t show Dashboard as a Space\"\n# defaults write com.apple.dock dashboard-in-overlay -bool true;ok\n\nrunning \"Don’t automatically rearrange Spaces based on most recent use\"\ndefaults write com.apple.dock mru-spaces -bool false;ok\n\nrunning \"Remove the auto-hiding Dock delay\"\ndefaults write com.apple.dock autohide-delay -float 0;ok\nrunning \"Remove the animation when hiding/showing the Dock\"\ndefaults write com.apple.dock autohide-time-modifier -float 0;ok\n\nrunning \"Automatically hide and show the Dock\"\ndefaults write com.apple.dock autohide -bool true;ok\n\nrunning \"Make Dock icons of hidden applications translucent\"\ndefaults write com.apple.dock showhidden -bool true;ok\n\nrunning \"Make Dock more transparent\"\ndefaults write com.apple.dock hide-mirror -bool true;ok\n\n# defaults write com.apple.dock ResetLaunchPad -bool TRUE\nrunning \"Reset Launchpad, but keep the desktop wallpaper intact\"\nfind \"${HOME}/Library/Application Support/Dock\" -name \"*-*.db\" -maxdepth 1 -delete;ok\n\n# You can change the layout of your Launchpad\n# Use the following command in Terminal to change the layout of Launchpad.\n# Change ‘X’ into the number of icons to be showed in a single row (e.g 9).\n#defaults write com.apple.dock springboard-columns -int 9\n\n# Change ‘X’ to the number of rows (e.g 3).\n#defaults write com.apple.dock springboard-rows -int 3\n\n# Force a restart of Launchpad with the following command to apply the changes:\n#defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock\n\nbot \"Configuring Hot Corners\"\n# Possible values:\n#  0: no-op\n#  2: Mission Control\n#  3: Show application windows\n#  4: Desktop\n#  5: Start screen saver\n#  6: Disable screen saver\n#  7: Dashboard\n# 10: Put display to sleep\n# 11: Launchpad\n# 12: Notification Center\n\nrunning \"Top left screen corner → Mission Control\"\ndefaults write com.apple.dock wvous-tl-corner -int 2\ndefaults write com.apple.dock wvous-tl-modifier -int 0;ok\nrunning \"Top right screen corner → Desktop\"\ndefaults write com.apple.dock wvous-tr-corner -int 4\ndefaults write com.apple.dock wvous-tr-modifier -int 0;ok\nrunning \"Bottom right screen corner → Start screen saver\"\ndefaults write com.apple.dock wvous-br-corner -int 5\ndefaults write com.apple.dock wvous-br-modifier -int 0;ok\n\n###############################################################################\nbot \"Configuring Safari & WebKit\"\n###############################################################################\n\nrunning \"Set Safari’s home page to ‘about:blank’ for faster loading\"\ndefaults write com.apple.Safari HomePage -string \"about:blank\";ok\n\nrunning \"Prevent Safari from opening ‘safe’ files automatically after downloading\"\ndefaults write com.apple.Safari AutoOpenSafeDownloads -bool false;ok\n\n# TODO : doesn't work on macOS Mojave,\n# check for more info : https://apple.stackexchange.com/questions/338313/how-can-i-enable-backspace-to-go-back-in-safari-on-mojave\nrunning \"Allow hitting the Backspace key to go to the previous page in history\"\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true;ok\n\nrunning \"Hide Safari’s bookmarks bar by default\"\ndefaults write com.apple.Safari ShowFavoritesBar -bool false;ok\n\nrunning \"Hide Safari’s sidebar in Top Sites\"\ndefaults write com.apple.Safari ShowSidebarInTopSites -bool false;ok\n\nrunning \"Disable Safari’s thumbnail cache for History and Top Sites\"\ndefaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2;ok\n\nrunning \"Enable Safari’s debug menu\"\ndefaults write com.apple.Safari IncludeInternalDebugMenu -bool true;ok\n\nrunning \"Make Safari’s search banners default to Contains instead of Starts With\"\ndefaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false;ok\n\nrunning \"Remove useless icons from Safari’s bookmarks bar\"\ndefaults write com.apple.Safari ProxiesInBookmarksBar \"()\";ok\n\nrunning \"Enable the Develop menu and the Web Inspector in Safari\"\ndefaults write com.apple.Safari IncludeDevelopMenu -bool true\ndefaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true;ok\n\nrunning \"Add a context menu item for showing the Web Inspector in web views\"\ndefaults write NSGlobalDomain WebKitDeveloperExtras -bool true;ok\n\n###############################################################################\nbot \"Configuring Mail\"\n###############################################################################\n\n\nrunning \"Disable send and reply animations in Mail.app\"\ndefaults write com.apple.mail DisableReplyAnimations -bool true\ndefaults write com.apple.mail DisableSendAnimations -bool true;ok\n\nrunning \"Copy email addresses as 'foo@example.com' instead of 'Foo Bar <foo@example.com>' in Mail.app\"\ndefaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false;ok\n\nrunning \"Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app\"\ndefaults write com.apple.mail NSUserKeyEquivalents -dict-add \"Send\" -string \"@\\\\U21a9\";ok\n\nrunning \"Display emails in threaded mode, sorted by date (oldest at the top)\"\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"DisplayInThreadedMode\" -string \"yes\"\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"SortedDescending\" -string \"yes\"\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"SortOrder\" -string \"received-date\";ok\n\nrunning \"Disable inline attachments (just show the icons)\"\ndefaults write com.apple.mail DisableInlineAttachmentViewing -bool true;ok\n\nrunning \"Disable automatic spell checking\"\ndefaults write com.apple.mail SpellCheckingBehavior -string \"NoSpellCheckingEnabled\";ok\n\n###############################################################################\nbot \"Spotlight\"\n###############################################################################\n\n# running \"Hide Spotlight tray-icon (and subsequent helper)\"\n# sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search;ok\n\n\n# Issue on macOS Mojave :\n# Rich Trouton covers the move of /Volumes to no longer being world writable as of Sierra (10.12)\n# https://derflounder.wordpress.com/2016/09/21/macos-sierras-volumes-folder-is-no-longer-world-writable\n\n# running \"Disable Spotlight indexing for any volume that gets mounted and has not yet been indexed\"\n# Use `sudo mdutil -i off \"/Volumes/foo\"` to stop indexing any volume.\n# sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array \"/Volumes\";ok\n\nrunning \"Change indexing order and disable some file types from being indexed\"\ndefaults write com.apple.spotlight orderedItems -array \\\n  '{\"enabled\" = 1;\"name\" = \"APPLICATIONS\";}' \\\n  '{\"enabled\" = 1;\"name\" = \"SYSTEM_PREFS\";}' \\\n  '{\"enabled\" = 1;\"name\" = \"DIRECTORIES\";}' \\\n  '{\"enabled\" = 1;\"name\" = \"PDF\";}' \\\n  '{\"enabled\" = 1;\"name\" = \"FONTS\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"DOCUMENTS\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"MESSAGES\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"CONTACT\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"EVENT_TODO\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"IMAGES\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"BOOKMARKS\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"MUSIC\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"MOVIES\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"PRESENTATIONS\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"SPREADSHEETS\";}' \\\n  '{\"enabled\" = 0;\"name\" = \"SOURCE\";}';ok\nrunning \"Load new settings before rebuilding the index\"\nkillall mds > /dev/null 2>&1;ok\nrunning \"Make sure indexing is enabled for the main volume\"\nsudo mdutil -i on / > /dev/null;ok\n#running \"Rebuild the index from scratch\"\n#sudo mdutil -E / > /dev/null;ok\n\n###############################################################################\nbot \"Terminal & iTerm2\"\n###############################################################################\n\n# running \"Only use UTF-8 in Terminal.app\"\n# defaults write com.apple.terminal StringEncodings -array 4;ok\n#\n# running \"Use a modified version of the Solarized Dark theme by default in Terminal.app\"\n# TERM_PROFILE='Solarized Dark xterm-256color';\n# CURRENT_PROFILE=\"$(defaults read com.apple.terminal 'Default Window Settings')\";\n# if [ \"${CURRENT_PROFILE}\" != \"${TERM_PROFILE}\" ]; then\n# \topen \"./configs/${TERM_PROFILE}.terminal\";\n# \tsleep 1; # Wait a bit to make sure the theme is loaded\n# \tdefaults write com.apple.terminal 'Default Window Settings' -string \"${TERM_PROFILE}\";\n# \tdefaults write com.apple.terminal 'Startup Window Settings' -string \"${TERM_PROFILE}\";\n# fi;\n\n#running \"Enable “focus follows mouse” for Terminal.app and all X11 apps\"\n# i.e. hover over a window and start `typing in it without clicking first\ndefaults write com.apple.terminal FocusFollowsMouse -bool true\n#defaults write org.x.X11 wm_ffm -bool true;ok\n\nrunning \"Installing the Solarized Light theme for iTerm (opening file)\"\nopen \"./configs/Solarized Light.itermcolors\";ok\nrunning \"Installing the Patched Solarized Dark theme for iTerm (opening file)\"\nopen \"./configs/Solarized Dark Patch.itermcolors\";ok\n\nrunning \"Don’t display the annoying prompt when quitting iTerm\"\ndefaults write com.googlecode.iterm2 PromptOnQuit -bool false;ok\nrunning \"hide tab title bars\"\ndefaults write com.googlecode.iterm2 HideTab -bool true;ok\nrunning \"set system-wide hotkey to show/hide iterm with ^\\`\"\ndefaults write com.googlecode.iterm2 Hotkey -bool true;ok\nrunning \"hide pane titles in split panes\"\ndefaults write com.googlecode.iterm2 ShowPaneTitles -bool false;ok\nrunning \"animate split-terminal dimming\"\ndefaults write com.googlecode.iterm2 AnimateDimming -bool true;ok\ndefaults write com.googlecode.iterm2 HotkeyChar -int 96;\ndefaults write com.googlecode.iterm2 HotkeyCode -int 50;\ndefaults write com.googlecode.iterm2 FocusFollowsMouse -int 1;\ndefaults write com.googlecode.iterm2 HotkeyModifiers -int 262401;\nrunning \"Make iTerm2 load new tabs in the same directory\"\n/usr/libexec/PlistBuddy -c \"set \\\"New Bookmarks\\\":0:\\\"Custom Directory\\\" Recycle\" ~/Library/Preferences/com.googlecode.iterm2.plist\nrunning \"setting fonts\"\ndefaults write com.googlecode.iterm2 \"Normal Font\" -string \"Hack-Regular 12\";\ndefaults write com.googlecode.iterm2 \"Non Ascii Font\" -string \"RobotoMonoForPowerline-Regular 12\";\nok\nrunning \"reading iterm settings\"\ndefaults read -app iTerm > /dev/null 2>&1;\nok\n\n###############################################################################\nbot \"Time Machine\"\n###############################################################################\n\nrunning \"Prevent Time Machine from prompting to use new hard drives as backup volume\"\ndefaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true;ok\n\n# running \"Disable local Time Machine backups\"\n# hash tmutil &> /dev/null && sudo tmutil disablelocal;ok\n\n###############################################################################\nbot \"Activity Monitor\"\n###############################################################################\n\nrunning \"Show the main window when launching Activity Monitor\"\ndefaults write com.apple.ActivityMonitor OpenMainWindow -bool true;ok\n\nrunning \"Visualize CPU usage in the Activity Monitor Dock icon\"\ndefaults write com.apple.ActivityMonitor IconType -int 5;ok\n\n# Show processes in Activity Monitor\n# 100: All Processes\n# 101: All Processes, Hierarchally\n# 102: My Processes\n# 103: System Processes\n# 104: Other User Processes\n# 105: Active Processes\n# 106: Inactive Processes\n# 106: Inactive Processes\n# 107: Windowed Processes\nrunning \"Show all processes in Activity Monitor\"\ndefaults write com.apple.ActivityMonitor ShowCategory -int 100;ok\n\nrunning \"Sort Activity Monitor results by CPU usage\"\ndefaults write com.apple.ActivityMonitor SortColumn -string \"CPUUsage\"\ndefaults write com.apple.ActivityMonitor SortDirection -int 0;ok\n\nrunning \"Set columns for each tab\"\ndefaults write com.apple.ActivityMonitor \"UserColumnsPerTab v5.0\" -dict \\\n    '0' '( Command, CPUUsage, CPUTime, Threads, PID, UID, Ports )' \\\n    '1' '( Command, ResidentSize, Threads, Ports, PID, UID,  )' \\\n    '2' '( Command, PowerScore, 12HRPower, AppSleep, UID, powerAssertion )' \\\n    '3' '( Command, bytesWritten, bytesRead, Architecture, PID, UID, CPUUsage )' \\\n    '4' '( Command, txBytes, rxBytes, PID, UID, txPackets, rxPackets, CPUUsage )';ok\n\nrunning \"Sort columns in each tab\"\ndefaults write com.apple.ActivityMonitor UserColumnSortPerTab -dict \\\n    '0' '{ direction = 0; sort = CPUUsage; }' \\\n    '1' '{ direction = 0; sort = ResidentSize; }' \\\n    '2' '{ direction = 0; sort = 12HRPower; }' \\\n    '3' '{ direction = 0; sort = bytesWritten; }' \\\n    '4' '{ direction = 0; sort = txBytes; }';ok\n\nrunning \"Update refresh frequency (in seconds)\"\n# 1: Very often (1 sec)\n# 2: Often (2 sec)\n# 5: Normally (5 sec)\ndefaults write com.apple.ActivityMonitor UpdatePeriod -int 2;ok\n\nrunning \"Show Data in the Disk graph (instead of IO)\"\ndefaults write com.apple.ActivityMonitor DiskGraphType -int 1;ok\n\nrunning \"Show Data in the Network graph (instead of packets)\"\ndefaults write com.apple.ActivityMonitor NetworkGraphType -int 1;ok\n\nrunning \"Change Dock Icon\"\n# 0: Application Icon\n# 2: Network Usage\n# 3: Disk Activity\n# 5: CPU Usage\n# 6: CPU History\ndefaults write com.apple.ActivityMonitor IconType -int 3;ok\n\n###############################################################################\nbot \"Address Book, Dashboard, iCal, TextEdit, and Disk Utility\"\n###############################################################################\n\nrunning \"Enable the debug menu in Address Book\"\ndefaults write com.apple.addressbook ABShowDebugMenu -bool true;ok\n\nrunning \"Enable Dashboard dev mode (allows keeping widgets on the desktop)\"\ndefaults write com.apple.dashboard devmode -bool true;ok\n\nrunning \"Use plain text mode for new TextEdit documents\"\ndefaults write com.apple.TextEdit RichText -int 0;ok\n\nrunning \"Open and save files as UTF-8 in TextEdit\"\ndefaults write com.apple.TextEdit PlainTextEncoding -int 4\ndefaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4;ok\n\nrunning \"Enable the debug menu in Disk Utility\"\ndefaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true\ndefaults write com.apple.DiskUtility advanced-image-options -bool true;ok\n\n###############################################################################\nbot \"Mac App Store\"\n###############################################################################\n\nrunning \"Enable the WebKit Developer Tools in the Mac App Store\"\ndefaults write com.apple.appstore WebKitDeveloperExtras -bool true;ok\n\nrunning \"Enable Debug Menu in the Mac App Store\"\ndefaults write com.apple.appstore ShowDebugMenu -bool true;ok\n\n###############################################################################\nbot \"Messages\"\n###############################################################################\n\nrunning \"Disable automatic emoji substitution (i.e. use plain text smileys)\"\ndefaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"automaticEmojiSubstitutionEnablediMessage\" -bool false;ok\n\nrunning \"Disable smart quotes as it’s annoying for messages that contain code\"\ndefaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"automaticQuoteSubstitutionEnabled\" -bool false;ok\n\n# running \"Disable continuous spell checking\"\n# defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"continuousSpellCheckingEnabled\" -bool false;ok\n\n###############################################################################\nbot \"SizeUp.app\"\n###############################################################################\n\nrunning \"Start SizeUp at login\"\ndefaults write com.irradiatedsoftware.SizeUp StartAtLogin -bool true;ok\n\nrunning \"Don’t show the preferences window on next start\"\ndefaults write com.irradiatedsoftware.SizeUp ShowPrefsOnNextStart -bool false;ok\n\nkillall cfprefsd\n\nopen /Applications/iTerm.app\n\n###############################################################################\n# Kill affected applications                                                  #\n###############################################################################\nbot \"OK. Note that some of these changes require a logout/restart to take effect. Killing affected applications (so they can reboot)....\"\nfor app in \"Activity Monitor\" \"Address Book\" \"Calendar\" \"Contacts\" \"cfprefsd\" \\\n  \"Dock\" \"Finder\" \"Mail\" \"Messages\" \"Safari\" \"SizeUp\" \"SystemUIServer\" \\\n  \"iCal\" \"Terminal\"; do\n  killall \"${app}\" > /dev/null 2>&1\ndone\n\nbrew update && brew upgrade && brew cleanup\n\nbot \"Woot! All done\"\n"
        },
        {
          "name": "lib_node",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib_sh",
          "type": "tree",
          "content": null
        },
        {
          "name": "oh-my-zsh",
          "type": "commit",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 15.115234375,
          "content": "{\n  \"name\": \"dotfiles\",\n  \"version\": \"5.2.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"dotfiles\",\n      \"version\": \"5.2.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"async.series\": \"0.5.2\",\n        \"inquirer\": \"6.2.2\",\n        \"node-emoji\": \"1.10.0\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz\",\n      \"integrity\": \"sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz\",\n      \"integrity\": \"sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/async.eachofseries\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.eachofseries/-/async.eachofseries-0.5.2.tgz\",\n      \"integrity\": \"sha1-naNK7/DTmV+UdQv5iv51OhEiAw0=\",\n      \"dependencies\": {\n        \"async.util.keyiterator\": \"0.5.2\",\n        \"async.util.noop\": \"0.5.2\",\n        \"async.util.once\": \"0.5.2\",\n        \"async.util.onlyonce\": \"0.5.2\",\n        \"async.util.setimmediate\": \"0.5.2\"\n      }\n    },\n    \"node_modules/async.series\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.series/-/async.series-0.5.2.tgz\",\n      \"integrity\": \"sha1-KtxJ7FDdBWeGNMNtaR3T/Qrmomk=\",\n      \"dependencies\": {\n        \"async.eachofseries\": \"0.5.2\",\n        \"async.util.parallel\": \"0.5.2\"\n      }\n    },\n    \"node_modules/async.util.isarray\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.isarray/-/async.util.isarray-0.5.2.tgz\",\n      \"integrity\": \"sha1-5i2sjyY29lh13PdSHC0k0N+yu98=\"\n    },\n    \"node_modules/async.util.isarraylike\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.isarraylike/-/async.util.isarraylike-0.5.2.tgz\",\n      \"integrity\": \"sha1-jn+H2pFB8vCZboBAR30NTv4/UPg=\",\n      \"dependencies\": {\n        \"async.util.isarray\": \"0.5.2\"\n      }\n    },\n    \"node_modules/async.util.keyiterator\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.keyiterator/-/async.util.keyiterator-0.5.2.tgz\",\n      \"integrity\": \"sha1-M55s6PidAAQz+3gU4ico8/F1CQ0=\",\n      \"dependencies\": {\n        \"async.util.isarraylike\": \"0.5.2\",\n        \"async.util.keys\": \"0.5.2\"\n      }\n    },\n    \"node_modules/async.util.keys\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.keys/-/async.util.keys-0.5.2.tgz\",\n      \"integrity\": \"sha1-XDTd2KPtt6eIPJtf4hJngbIJivY=\"\n    },\n    \"node_modules/async.util.noop\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.noop/-/async.util.noop-0.5.2.tgz\",\n      \"integrity\": \"sha1-vdYrl8sKo/YLWGrRSEaGmJdeWLk=\"\n    },\n    \"node_modules/async.util.once\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.once/-/async.util.once-0.5.2.tgz\",\n      \"integrity\": \"sha1-FFPLdATK0IImlPq6vEepblyqchY=\"\n    },\n    \"node_modules/async.util.onlyonce\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.onlyonce/-/async.util.onlyonce-0.5.2.tgz\",\n      \"integrity\": \"sha1-uOb8AErckjFk154y8oE+5GXCT/I=\"\n    },\n    \"node_modules/async.util.parallel\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.parallel/-/async.util.parallel-0.5.2.tgz\",\n      \"integrity\": \"sha1-IzUk49b6/9XplddUdrjZJPloCM0=\",\n      \"dependencies\": {\n        \"async.util.isarraylike\": \"0.5.2\",\n        \"async.util.noop\": \"0.5.2\",\n        \"async.util.restparam\": \"0.5.2\"\n      }\n    },\n    \"node_modules/async.util.restparam\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.restparam/-/async.util.restparam-0.5.2.tgz\",\n      \"integrity\": \"sha1-A+/r88Ane5ciDlJaunUPXgT8gM0=\"\n    },\n    \"node_modules/async.util.setimmediate\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/async.util.setimmediate/-/async.util.setimmediate-0.5.2.tgz\",\n      \"integrity\": \"sha1-KBLrq/KlgCd1jUvHeT0cz68QJV8=\"\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chardet\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz\",\n      \"integrity\": \"sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==\"\n    },\n    \"node_modules/cli-cursor\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz\",\n      \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n      \"dependencies\": {\n        \"restore-cursor\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/cli-width\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz\",\n      \"integrity\": \"sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=\"\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\"\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/external-editor\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/external-editor/-/external-editor-3.0.3.tgz\",\n      \"integrity\": \"sha512-bn71H9+qWoOQKyZDo25mOMVpSmXROAsTJVVVYzrrtol3d4y+AsKjf4Iwl2Q+IuT0kFSQ1qo166UuIwqYq7mGnA==\",\n      \"dependencies\": {\n        \"chardet\": \"^0.7.0\",\n        \"iconv-lite\": \"^0.4.24\",\n        \"tmp\": \"^0.0.33\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/figures\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-2.0.0.tgz\",\n      \"integrity\": \"sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/inquirer\": {\n      \"version\": \"6.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-6.2.2.tgz\",\n      \"integrity\": \"sha512-Z2rREiXA6cHRR9KBOarR3WuLlFzlIfAEIiB45ll5SSadMg7WqOh1MKEjjndfuH5ewXdixWCxqnVfGOQzPeiztA==\",\n      \"dependencies\": {\n        \"ansi-escapes\": \"^3.2.0\",\n        \"chalk\": \"^2.4.2\",\n        \"cli-cursor\": \"^2.1.0\",\n        \"cli-width\": \"^2.0.0\",\n        \"external-editor\": \"^3.0.3\",\n        \"figures\": \"^2.0.0\",\n        \"lodash\": \"^4.17.11\",\n        \"mute-stream\": \"0.0.7\",\n        \"run-async\": \"^2.2.0\",\n        \"rxjs\": \"^6.4.0\",\n        \"string-width\": \"^2.1.0\",\n        \"strip-ansi\": \"^5.0.0\",\n        \"through\": \"^2.3.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n      \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/is-promise\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz\",\n      \"integrity\": \"sha1-eaKp7OfwlugPNtKy87wWwf9L8/o=\"\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.11\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz\",\n      \"integrity\": \"sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==\"\n    },\n    \"node_modules/lodash.toarray\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.toarray/-/lodash.toarray-4.4.0.tgz\",\n      \"integrity\": \"sha1-JMS/zWsvuji/0FlNsRedjptlZWE=\"\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz\",\n      \"integrity\": \"sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mute-stream\": {\n      \"version\": \"0.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz\",\n      \"integrity\": \"sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=\"\n    },\n    \"node_modules/node-emoji\": {\n      \"version\": \"1.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-emoji/-/node-emoji-1.10.0.tgz\",\n      \"integrity\": \"sha512-Yt3384If5H6BYGVHiHwTL+99OzJKHhgp82S8/dktEK73T26BazdgZ4JZh92xSVtGNJvz9UbXdNAc5hcrXV42vw==\",\n      \"dependencies\": {\n        \"lodash.toarray\": \"^4.4.0\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz\",\n      \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n      \"dependencies\": {\n        \"mimic-fn\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/restore-cursor\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz\",\n      \"integrity\": \"sha1-n37ih/gv0ybU/RYpI9YhKe7g368=\",\n      \"dependencies\": {\n        \"onetime\": \"^2.0.0\",\n        \"signal-exit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/run-async\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz\",\n      \"integrity\": \"sha1-A3GrSuC91yDUFm19/aZP96RFpsA=\",\n      \"dependencies\": {\n        \"is-promise\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz\",\n      \"integrity\": \"sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==\",\n      \"dependencies\": {\n        \"tslib\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"npm\": \">=2.0.0\"\n      }\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",\n      \"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\"\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz\",\n      \"integrity\": \"sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==\",\n      \"dependencies\": {\n        \"is-fullwidth-code-point\": \"^2.0.0\",\n        \"strip-ansi\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/string-width/node_modules/strip-ansi\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz\",\n      \"integrity\": \"sha1-qEeQIusaw2iocTibY1JixQXuNo8=\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.1.0.tgz\",\n      \"integrity\": \"sha512-TjxrkPONqO2Z8QDCpeE2j6n0M6EwxzyDgzEeGp+FbdvaJAt//ClYi6W5my+3ROlC/hZX2KACUwDfK49Ka5eDvg==\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/strip-ansi/node_modules/ansi-regex\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz\",\n      \"integrity\": \"sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\"\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz\",\n      \"integrity\": \"sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==\",\n      \"dependencies\": {\n        \"os-tmpdir\": \"~1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz\",\n      \"integrity\": \"sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==\"\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7646484375,
          "content": "{\n  \"name\": \"dotfiles\",\n  \"version\": \"5.2.0\",\n  \"description\": \"atomantic dotfiles for macos\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/atomantic/dotfiles.git\"\n  },\n  \"keywords\": [\n    \"dotfiles\",\n    \"osx\",\n    \"macos\",\n    \"automation\",\n    \"setup\",\n    \"developer\",\n    \"iterm\",\n    \"commandline\",\n    \"bootstrap\"\n  ],\n  \"author\": \"Adam Eivy <atomantic@gmail.com>\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/atomantic/dotfiles/issues\"\n  },\n  \"homepage\": \"https://github.com/atomantic/dotfiles#readme\",\n  \"dependencies\": {\n    \"async.series\": \"0.5.2\",\n    \"inquirer\": \"6.2.2\",\n    \"node-emoji\": \"1.10.0\"\n  }\n}\n"
        },
        {
          "name": "restore.sh",
          "type": "blob",
          "size": 1.0712890625,
          "content": "#!/usr/bin/env bash\n\n###########################\n# This script restores backed up dotfiles\n# @author Adam Eivy\n###########################\n\n# include my library helpers for colorized echo and require_brew, etc\nsource ./lib_sh/echos.sh\nsource ./lib_sh/requirers.sh\n\nif [[ -z $1 ]]; then\n  error \"you need to specify a backup folder date. Take a look in ~/.dotfiles_backup/ to see which backup date you wish to restore.\"\n  exit 1\nfi\n\n\nbot \"Do you wish to change your shell back to bash?\"\nread -r -p \"[Y|n] \" response\n\nif [[ $response =~ ^(no|n|N) ]];then\n    bot \"ok, leaving shell as zsh...\"\nelse\n    bot \"ok, changing shell to bash...\"\n    chsh -s $(which bash);ok\nfi\n\nbot \"Restoring dotfiles from backup...\"\n\npushd ~/.dotfiles_backup/$1\n\nfor file in .*; do\n  if [[ $file == \".\" || $file == \"..\" ]]; then\n    continue\n  fi\n\n  running \"~/$file\"\n  if [[ -e ~/$file ]]; then\n      unlink $file;\n      echo -en \"project dotfile $file unlinked\";ok\n  fi\n\n  if [[ -e ./$file ]]; then\n      mv ./$file ./\n      echo -en \"$1 backup restored\";ok\n  fi\n  echo -en '\\done';ok\ndone\n\npopd\n\nbot \"Woot! All done.\"\n"
        },
        {
          "name": "z-zsh",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}