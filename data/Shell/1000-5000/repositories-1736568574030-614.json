{
  "metadata": {
    "timestamp": 1736568574030,
    "page": 614,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aind-containers/aind",
      "stars": 1493,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 4.6220703125,
          "content": "# this dockerfile can be translated to `docker/dockerfile:1-experimental` syntax for enabling cache mounts:\n# $ ./hack/translate-dockerfile-runopt-directive.sh < Dockerfile | DOCKER_BUILDKIT=1 docker build -f -  .\n\nARG BASE=ubuntu:20.04\n\n# Sep 26, 2020\nARG ANBOX_COMMIT=170f1e029e753e782c66bffb05e91dd770d47dc3\n\n# ARG ANDROID_IMAGE=https://build.anbox.io/android-images/2018/07/19/android_amd64.img\n# Mirror\nARG ANDROID_IMAGE=https://github.com/AkihiroSuda/anbox-android-images-mirror/releases/download/snapshot-20180719/android_amd64.img\n# https://build.anbox.io/android-images/2018/07/19/android_amd64.img.sha256sum\nARG ANDROID_IMAGE_SHA256=6b04cd33d157814deaf92dccf8a23da4dc00b05ca6ce982a03830381896a8cca\n\nFROM ${BASE} AS anbox\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  cmake \\\n  cmake-data \\\n  cmake-extras \\\n  debhelper \\\n  dbus \\\n  git \\\n  google-mock \\\n  libboost-dev \\\n  libboost-filesystem-dev \\\n  libboost-log-dev \\\n  libboost-iostreams-dev \\\n  libboost-program-options-dev \\\n  libboost-system-dev \\\n  libboost-test-dev \\\n  libboost-thread-dev \\\n  libcap-dev \\\n  libegl1-mesa-dev \\\n  libexpat1-dev \\\n  libgles2-mesa-dev \\\n  libglm-dev \\\n  libgtest-dev \\\n  liblxc1 \\\n  libproperties-cpp-dev \\\n  libprotobuf-dev \\\n  libsdl2-dev \\\n  libsdl2-image-dev \\\n  libsystemd-dev \\\n  lxc-dev \\\n  pkg-config \\\n  protobuf-compiler \\\n  python2\nRUN git clone --recursive https://github.com/anbox/anbox /anbox\nWORKDIR /anbox\nARG ANBOX_COMMIT\nRUN git pull && git checkout ${ANBOX_COMMIT} && git submodule update --recursive\nCOPY ./src/patches/anbox /patches\n# `git am` requires user info to be set\nRUN git config user.email \"nobody@example.com\" && \\\n  git config user.name \"AinD Build Script\" && \\\n  if [ -f /patches/*.patch ]; then git am /patches/*.patch && git show --summary; fi\n# runopt = --mount=type=cache,id=aind-anbox,target=/build\nRUN ./scripts/build.sh && \\\n  cp -f ./build/src/anbox /anbox-binary\n\nFROM ${BASE} AS android-img\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n  ca-certificates curl\nARG ANDROID_IMAGE\nARG ANDROID_IMAGE_SHA256\nRUN curl --retry 10 -L -o /android.img $ANDROID_IMAGE \\\n    && echo $ANDROID_IMAGE_SHA256 /android.img | sha256sum --check\n\nFROM ${BASE}\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n# base system\n  ca-certificates curl iproute2 jq kmod socat \\\n# lxc\n  iptables lxc \\\n# anbox deps\n  libboost-log1.71.0  libboost-thread1.71.0 libboost-program-options1.71.0 libboost-iostreams1.71.0 libboost-filesystem1.71.0 libegl1-mesa libgles2-mesa libprotobuf-lite17 libsdl2-2.0-0 libsdl2-image-2.0-0 \\\n# squashfuse\n  squashfuse fuse3 \\\n# adb\n  adb \\\n# systemd\n  dbus dbus-user-session systemd systemd-container systemd-sysv \\\n# X11\n  xvfb x11vnc \\\n# noVNC\n  websockify novnc \\\n# WM\n  fvwm xterm \\\n# debug utilities\n  busybox figlet file strace less && \\\n# ...\n  useradd --create-home --home-dir /home/user --uid 1000 -G systemd-journal user  && \\\n  curl -L -o /docker-entrypoint.sh https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/6ced78a9df65c13399ef1ce41c0bedc194d7cff6/docker-entrypoint.sh && \\\n  chmod +x /docker-entrypoint.sh\n# apk-pre.d is for pre-installed apks, /apk.d for the mountpoint for user-specific apks\nRUN mkdir -p /apk-pre.d /apk.d && \\\n  curl -L -o /apk-pre.d/FDroid.apk https://f-droid.org/FDroid.apk && \\\n  curl -L -o /apk-pre.d/firefox.apk https://ftp.mozilla.org/pub/mobile/releases/68.9.0/android-x86_64/en-US/fennec-68.9.0.en-US.android-x86_64.apk && \\\n  chmod 444 /apk-pre.d/*\nCOPY --from=android-img /android.img /aind-android.img\nCOPY --from=anbox /anbox-binary /usr/local/bin/anbox\nCOPY --from=anbox /anbox/scripts/anbox-bridge.sh /usr/local/share/anbox/anbox-bridge.sh\nCOPY --from=anbox /anbox/data/ui /usr/local/share/anbox/ui\nRUN ldconfig\nADD src/anbox-container-manager-pre.sh /usr/local/bin/anbox-container-manager-pre.sh\nADD src/anbox-container-manager.service /lib/systemd/system/anbox-container-manager.service\nRUN systemctl enable anbox-container-manager\nADD src/unsudo /usr/local/bin\nADD src/docker-2ndboot.sh  /home/user\n\nENV WEBMODE 0\n# Usage: docker run --rm --privileged -v /:/host --entrypoint bash ghcr.io/aind-containers/aind -exc \"cp -f /install-kmod.sh /host/aind-install-kmod.sh && cd /host && chroot . /aind-install-kmod.sh\"\nADD hack/install-kmod.sh /\nVOLUME /var/lib/anbox\nENTRYPOINT [\"/docker-entrypoint.sh\", \"unsudo\"]\nEXPOSE 5900\nEXPOSE 8080\nHEALTHCHECK --interval=15s --timeout=10s --start-period=60s --retries=5 \\\n  CMD [\"pgrep\", \"-f\", \"org.anbox.appmgr\"]\nCMD [\"/home/user/docker-2ndboot.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7890625,
          "content": "# :warning: Deprecated in favor of ReDroid\n\nAs of April 2021, AinD is deprecated in favor of [ReDroid](https://github.com/remote-android/redroid-doc).\n\nWhile Anbox/AinD has got stuck in Android 7.1, ReDroid supports very recent Android versions: 8.1, 9, 10, 11, and Android S (12).\n\n- - -\n# AinD: Android (Anbox) in Docker\n\nAinD launches Android apps in Docker, by nesting [Anbox](https://anbox.io/) containers inside Docker.\n\nUnlike VM-based similar projects, AinD can be executed on IaaS instances without support for nested virtualization.\n\nGHCR: `ghcr.io/aind-containers/aind`\n\n:warning: Docker Hub image [`aind/aind`](https://hub.docker.com/r/aind/aind) is no longer updated. Please use `ghcr.io/aind-containers/aind` image on GHCR.\n\n## Purposes\n* Anti-theft (see [FAQ](#faq))\n* Android compatibility (via cloud) for iOS and Windows tablets\n\n### Non-goals\n* Cloud gaming\n\n## Screenshots\n\n```console\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n950e3fa7d320        aind                \"/docker-entrypoint.…\"   7 minutes ago       Up 7 minutes        0.0.0.0:5900->5900/tcp   aind\n$ docker exec aind ps -ef | tail -n 20\n101023       323     138  0 11:18 pts/2    00:00:00 /system/bin/sdcard -u 1023 -g 1023 -m -w /data/media emulated\n110020       347     154  0 11:18 pts/2    00:00:00 com.android.systemui\n101001       397     154  0 11:18 pts/2    00:00:00 com.android.phone\nuser         403     154  0 11:18 pts/2    00:00:00 com.android.settings:CryptKeeper\nuser         448     154  0 11:18 pts/2    00:00:00 com.android.settings\n110009       531     154  0 11:18 pts/2    00:00:00 android.ext.services\n110032       546     154  0 11:18 pts/2    00:00:00 com.android.deskclock\n110015       577     154  0 11:18 pts/2    00:00:00 com.android.provision\n110047       583     154  0 11:18 pts/2    00:00:00 com.android.smspush\n110000       615     154  0 11:18 pts/2    00:00:00 org.anbox.appmgr\n110011       642     154  0 11:18 pts/2    00:00:00 com.android.managedprovisioning\n110008       657     154  0 11:18 pts/2    00:00:00 android.process.media\n110003       675     154  0 11:18 pts/2    00:00:00 com.android.providers.calendar\n110002       694     154  0 11:18 pts/2    00:00:00 android.process.acore\n110027       744     154  0 11:18 pts/2    00:00:00 com.android.calendar\n110028       765     154  0 11:18 pts/2    00:00:00 com.android.camera2\n110034       784     154  0 11:18 pts/2    00:00:00 com.android.email\n110037       807     154  0 11:18 pts/2    00:00:00 com.android.gallery3d\n110013       822     154  0 11:18 pts/2    00:00:00 com.android.onetimeinitializer\nroot        1003       0  0 11:25 ?        00:00:00 ps -ef\n```\n\n![docs/screenshot.png](docs/screenshot-20200410.png)\n\n## Quick start\nTested on Ubuntu 19.10 (Kernel 5.3).\nMay not work on other distros.\nIf `modprobe ashmem_linux` or `modprobe binder_linux` fails, see https://github.com/anbox/anbox-modules .\n\n```bash\nsudo modprobe ashmem_linux\nsudo modprobe binder_linux\n```\n\n### Docker\n#### VNC\n```bash\ndocker run -td --name aind --privileged -p 5900:5900 -v /lib/modules:/lib/modules:ro ghcr.io/aind-containers/aind\ndocker exec aind cat /home/user/.vnc/passwdfile\n```\n\n> **NOTE**: `--privileged` is required for nesting an Anbox (LXC) inside Docker. But you don't need to worry too much because Anbox launches \"unprivileged\" LXC using user namespaces. You can confirm that all Android processes are running as non-root users, by executing `docker exec aind ps -ef`.\n\nWait for 10-20 seconds until Android processes are shown up in `docker exec aind ps -ef`, and then connect to `5900` via `vncviewer`.\nThe VNC password is stored in `/home/user/.vnc/passwdfile`. The password file can be also overridden by `docker run -v /your/own/passwdfile:/home/user/.vnc/passwdfile:ro` .\n\nIf the application manager doesn't shown up on the VNC screen, try `docker run ...` several times (FIXME).  Also make sure to check `docker logs aind`.\n\n#### Web mode (noVNC)\nTo run the container with [noVNC](https://novnc.com/) support, the environment variable `WEBMODE` can be set with the following command:\n\n```bash\ndocker run -td --name aind --privileged -p 8080:8080 -e \"WEBMODE=1\" -v /lib/modules:/lib/modules:ro ghcr.io/aind-containers/aind\ndocker exec aind cat /home/user/.vnc/passwdfile\n```\n\nThe container will be accessible via the browser at http://localhost:8080/vnc.html\n\n### Docker Compose\n\nTo bring the container up simply run\n```\ndocker-compose up -d\n```\nthe vnc password can be gotten with\n```\ndocker-compose exec aind cat /home/user/.vnc/passwdfile\n```\nyou can check how far it is with\n```\ndocker-compose exec aind ps -ef\n```\n\n### Kubernetes\n\n```bash\nkubectl apply -f kube/aind.yaml\nkubectl port-forward service/aind 5900\n```\n\nThe manifest contains the kernel module installer as `initContainers`.\n\nThe manifest is known to work on:\n- Google Kubernetes Engine (GKE) 1.16.8-gke.8 (ubuntu) [Apr 14, 2020]\n  - Kubernetes 1.16.8, Ubuntu 18.04.4, Kernel 5.3.0-1012-gke, Docker 19.03.2\n  - n2-standard-8\n- Google Kubernetes Engine (GKE) 1.16.8-gke.8 (ubuntu\\_containerd) [Apr 14, 2020]\n  - Kubernetes 1.16.8, Ubuntu 18.04.4, Kernel 5.3.0-1012-gke, containerd 1.2.10\n  - n2-standard-8\n- Azure Kubernetes Service (AKS) 1.17.3 [Apr 14, 2020]\n  - Kubernetes 1.17.3, Ubuntu 16.04.6, Kernel 4.15.0-1071-azure, MS-Moby 3.0.10+azure\n  - Standard DS2 v2\n- kind 0.7.0 [Apr 14, 2020]\n  - Kubernetes 1.17.0, Ubuntu 19.10, Kernel 5.3.0-46-generic, containerd 1.3.2\n  - **NOTE**: Requires `docker exec kind-control-plane mount -o remount,rw /sys`\n\n## Tips\n\n### Troubleshooting\n\n* `docker logs aind`\n* `docker exec -it aind systemctl status anbox-container-manager`\n* `docker exec -it aind ps -ef`\n* `docker exec -it aind cat /var/lib/anbox/logs/console.log`\n\n### adb\n\n```bash\ndocker exec -it aind adb shell\n```\n\nTo run adb on the host:\n\n```\nsocat TCP-LISTEN:5037,reuseaddr,fork 'EXEC:docker exec -i aind  \"socat STDIO TCP-CONNECT:localhost:5037\"' &\nadb connect localhost:5037\nadb shell\n```\n\n## Apps\n\n### Pre-installed Apps\n* Firefox\n* F-Droid\n* Misc accessories like Clock and Calculator\n\n### Installing apk packages\n\nAPK files mounted as `/apk.d/*.apk` are automatically installed on start up.\n\nYou can also use [F-Droid](https://f-droid.org/).\nTo use F-Droid, enable \"Settings\" -> \"Security\" -> \"Allow installation of apps from unknown sources\".\n\n## FAQ\n### Isn't encrypting the phone with strong passcode enough for anti-theft? Why do we need aind?\nPeople in the real world are likely to set weak passcode like \"1234\" (or finger pattern), because they want to open email/phone/twitter/maps/payment apps in just a few seconds.\n\naind is expected to be used in conjunction with encryption of the client device, and to be used only for sensitive apps, with a passcode that is stronger than the passcode of the client device itself.\n\n## TODOs\n* Map different UID range per containers\n* Better touch screen experience\n* Redirect camera, notifications, ...\n\n## Similar projects\n* [Anbox](https://anbox.io/): Desktop only and single-user/single-instance only. aind is built using Anbox.\n* [Android container in Chrome OS](https://chromium.googlesource.com/chromiumos/platform2/+/master/arc/container-bundle/): ChromeOS/ChromiumOS-only\n* [Docker-Android](https://github.com/budtmo/docker-android): VM-based\n* [kubedroid](https://github.com/kubedroid/kubedroid): VM-based\n* [Anbox Cloud](https://anbox-cloud.io/): Proprietary\n* [Intel Celadon in Container (CIC)](https://github.com/projectceladon/device-intel-cic): [Proprietary](https://github.com/projectceladon/vendor-intel-cic/blob/9b91758a3fa0a6530910d0ada8e99816aa17195d/README)\n\n## License\n* aind itself (e.g. Dockerfile, Kubernetes manifests, and start-up scripts) is licensed under the terms of [the Apache License, Version 2.0](./LICENSE).\n* The Anbox patches ([`./src/patches/anbox/*.patch`](./src/patches/anbox)) are licensed under the terms of [the GNU General Public License, Version 3](https://github.com/anbox/anbox/blob/master/COPYING.GPL), corresponding to [Anbox](https://github.com/anbox/anbox) itself.\n\n### Binary image\n* The `ghcr.io/aind-containers/aind` image on GitHub Container Registry (built from [`./Dockerfile`](./Dockerfile)) contains the binaries of several free software.\n  * Anbox (`/usr/local/bin/anbox`): [the GNU General Public License, Version 3](https://github.com/anbox/anbox/blob/master/COPYING.GPL)\n  * Firefox (`/apk-pre.d/fennec-*.apk`): [the Mozilla Public License 2](https://www.mozilla.org/en-US/about/legal/eula/)\n  * F-Droid (`/apk-pre.d/FDroid.apk`): [the GNU General Public License, Version 3](https://gitlab.com/fdroid/fdroidclient/-/blob/master/LICENSE)\n  * Android image (`/android.img`, fetched from https://build.anbox.io/): see https://source.android.com/setup/start/licenses . For build instruction, see https://github.com/anbox/anbox/blob/master/docs/build-android.md\n  * For other packages, see `/usr/share/doc/*/copyright` .\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.31640625,
          "content": "version: '3'\nservices:\n    aind:\n      image: 'ghcr.io/aind-containers/aind'\n      privileged: true\n      tty: true\n      environment:\n        - WEBMODE=1\n      ports:\n        - '5900:5900'\n        - '8080:8080'\n      volumes:\n        - '/lib/modules:/lib/modules:ro'\n        - 'dot-vnc:/home/user/.vnc'\nvolumes:\n  dot-vnc:\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "kube",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}