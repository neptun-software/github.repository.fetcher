{
  "metadata": {
    "timestamp": 1736568717710,
    "page": 820,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openservicebrokerapi/servicebroker",
      "stars": 1197,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2060546875,
          "content": "# Not really used right now but if we ever do some auto-generation/verification\n# of things then we can use travis for that.\n\nlanguage: bash\n\nservices:\n  - docker\n\nbefore_install:\n\nscript:\n  tools/verify-all.sh\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.7763671875,
          "content": "# Contributing\n\nAll contributors sending pull requests (PRs) must have a Contributor\nLicense Agreement on file as either an\n[individual](https://www.cloudfoundry.org/pdfs/CFF_Individual_CLA.pdf)\nor via their\n[employer](https://www.cloudfoundry.org/pdfs/CFF_Corporate_CLA.pdf).\n\nAll new Github issues and PRs will be reviewed by the Project Management\nCommittee (PMC) on the\n[Weekly Call](https://github.com/openservicebrokerapi/servicebroker/wiki/Weekly-Call)\nand will have a PMC member assigned to them who is responsible for following up\nwith the author and bringing the issue/PR to a resolution.\n\n## Minor Changes\n\nMinor change proposals to the specification, changes such as editorial bugs\nor enhancements that do not modify the semantics of the specification or\nsyntax of the API, can be suggested via a Github issue or pull request (PR).\n\nIf there is a need for some discussion around how best to address the concern,\nthen opening an issue prior to doing the work to develop a PR would be best.\nThese minor issues do not need to follow the [Major Changes](#major-changes)\nprocess described below, rather the issue should be used to come to a consensus\naround a PR that will eventually be submitted. If the proposed change is\nuncontroversial (e.g. a typo) then a PR can be submitted directly without\nopening an issue. Either way, once a PR is submitted it will be reviewed per the\n[process](#prissue-review-process) described below.\n\n### Major Changes\n\nMajor changes will be tracked through a number of stages before becoming part of\nthe specification. The working group will use a set of pre-defined Github labels\nto highlight the current stage of each proposal. Note that these labels will not be\nused for [minor changes](#minor-changes).\n\nNew design proposals to the API spec should be submitted by opening a\nGithub issue with a link to a Google Doc containing the proposal. Proposals\nshould focus primarily on motivation, problem statement, and use cases before\nsuggesting a solution or change. Collaboration on the design, fleshing out of\nuse cases, etc can occur as comment discussions in the Google Doc, as well\nas on our weekly calls. Once the working group have agreed to focus on a\nproposal, it will move into the first stage, as described below.\n\nThe stages that a proposal will go through are as follows:\n- `1 - reviewing proposal`:\n  The API working group is actively reviewing a proposal that has been submitted\n  as a Github issue with the aim of validating both the problem statements and\n  any proposed solutions. Critical information such as new API endpoints and\n  response codes should be reviewed at this stage. For changes largely impacting\n  the Open Service Broker API actors (Platforms, Service Authors, etc), it is\n  recommended to solicit feedback from these actors and leave enough time (say\n  2 weeks) for feedback to be provided, and for the potentially received\n  objections/suggestions to be handled.\n  Once the design has been finalized in the Google Doc, the proposed set of\n  changes to the specification should be made available for review. This could\n  be done by pointing to a branch in a Github repo with the proposed edits or by\n  creating a PR with the `do not merge` label assigned to it. Reviewers, or\n  potential implementers of the feature, can then easily see the exact changes\n  being proposed so that they can comment on them. If the proposal adds or\n  changes an object model or resource endpoint definition, it is expected that\n  the PR will also include the necessary updates to the\n  [Open API document](openapi.yaml) and [Swagger document](swagger.yaml).\n  Before moving to the next stage, consensus must be agreed on the weekly call\n  that the proposal is ready to be validated.\n- `2 - validating through implementation`:\n  One or more platforms are actively working on the proposal with the aim of\n  providing feedback on the end-to-end implementation of the proposed solution.\n  The related issue and/or PR should be kept updated with any activity or\n  feedback that is collected whilst the change is being implemented. It is\n  expected that during this implementation phase there will be changes made to\n  the design to accurately represent the current status of the proposal.\n  Before moving to the next stage, this feedback must have been presented on the\n  weekly call and any issues found during this stage must have been discussed\n  with the group and the issue and/or PR should have been updated accordingly.\n- `3 - reviewing PR`:\n  Feedback has been received on the implementation of the proposed solution and\n  a pull request has been created containing the validated specification\n  changes. By this point, the API interactions should be well understood and\n  there should be no technical surprises; we expect the only discussion\n  necessary on PRs to be for wordsmithing and formatting. The PR will then be\n  reviewed as described in the [process](#prissue-review-process) below.\n\nNote that not all issues will need to go through the\n`validation through implementation` stage, and proposals can move back to a\nprevious label at any time.\n\n## PR/Issue Review Process\n\nAll proposals (either pull requests or issues) will follow the process\ndescribed below:\n\n- All proposals must be available for review for no less than one week before\n  they are approved. This will provide each dedicated committer enough time\n  to review the proposal without unnecessarily delaying forward progress.\n  Any non-trivial edit to the proposal (e.g. edits larger than typos) will\n  reset the clock.\n- Any dedicated committer can veto (via a \"NOT LGTM\" comment in the proposal).\n  The comment must include the reasoning behind the veto.\n  It is then expected that the dedicated committers will discuss the concerns\n  and determine the next step for proposal - either close/reject the proposal\n  or address the concerns raised such that the \"NOT LGTM\" can be rescinded.\n- A proposal requires at least 3 \"LGTM\" comments from at least 3 different\n  organizations to be approved.\n- Once a \"design change\" issue is approved, it will be tagged with an\n  \"proposal finalized\" label. This indicates that it is ready to be\n  implemented by a platform developer, see the [process](#contributing) above.\n- Once a pull request is approved, it will be merged into the 'master' branch\n  and labels should be removed any related issues and PRs as necessary.\n- If the pull request is significant enough to warrant noting a difference in\n  compatibility between platforms, the feature should be noted in the table for\n  [Platform Compatibility for OSBAPI](compatibility.md).\n\n## Release Process\n\nAny member of the PMC can request a specific SHA on master (the\n**Release RC SHA**) is ready to be released into a new version of the spec. They\nwill do this by creating a new PR with the title of the proposed release. For\nexample, **\"Release Proposal: v$major.$minor\"**.\n\n### Prepare a PR\n\n1. In a fork, create a new branch called \"v$major.$minor-rc\" from the\n  **Release RC SHA**.\n2. Create a new commit titled `prepare release` with the following changes:\n  * Update [release-notes.md](release-notes.md) detailing the changes that are\n  to be released in this version. Include a versioned link to the new branch's\n  version of the spec.\n  * Update [README.md](README.md) with an updated _Latest Release_ subheading\n  and links to the latest version of the documents (`spec.md`, `profile.md`,\n  `openapi.yaml`, etc).\n  * Update [spec.md](spec.md) with an updated _Changes Since v..._ section (and\n  link from table of contents) containing a copy of the relevant release notes,\n  and with any references to the previous version of the specification (i.e. the\n  `X-Broker-API-Version` headers) updated. Do not update the header\n  `Open Service Broker API (master - might contain changes that are not yet released)`\n  (this will be done if and when the release proposal is approved).\n  * Update [diagram.md](diagram.md) to show the new version number in the\n  header and link to the correct version of the Google Drawing from the\n  [OSBAPI Google Drive Folder](https://drive.google.com/drive/u/0/folders/0B427Up4C9IE0VmM0ZlhHTG1Rc0E).\n3. Open a new pull request titled **Release Proposal: v$major.$minor** from the\n  branch of the fork to the master branch of the repository, with the following\n  description:\n  ```\n  Announcing a new release candidate as described in the\n  [Release Process](https://github.com/openservicebrokerapi/servicebroker/blob/master/CONTRIBUTING.md#release-process).\n\n  **Release version**: <v$major.$minor>\n  **Release RC SHA**: <Release RC SHA>\n  **Target release date**: <YYYY-MM-DD> (one week after the next weekly call)\n\n  The one-week\n  [Review Process](https://github.com/openservicebrokerapi/servicebroker/blob/master/CONTRIBUTING.md#review-process)\n  will be triggered on the next weekly call.\n  ```\n4. Announce the release proposal on the next weekly call and notify the mailing\n  list of the proposal, triggering the start of the\n  [Review Process](#review-process) as outlined below.\n\n### Review Process\n\n- All release proposals must be available for review for no less than one\n  week before they are approved. This will provide each dedicated committer\n  enough time to review the release proposal without unnecessarily delaying\n  forward progress.\n- Any dedicated committer can veto (via a \"NOT LGTM\" comment in the proposal).\n  The comment must include the reasoning behind the veto. It is then expected\n  that the dedicated committers will discuss the concerns and determine the next\n  steps for release proposal. The submitter should either close/reject the\n  proposal or address the concerns raised such that the \"NOT LGTM\" can be\n  rescinded.\n- A release proposal requires at least 3 \"LGTM\" comments from at least\n  3 different organizations to be approved.\n\n### Once Approved\n\nOnce the release is approved, the following actions should be taken by\nany PMC member:\n\n1. Merge the release proposal PR into the master branch of the repository. There\n   should not be any conflicts as the text in the files that have changed should\n   only be changed during this release process.\n1. Checkout the **Release RC SHA** (either to a local branch or in 'detached HEAD'\n   state). This is done in order to ensure that changes that were merged into\n   master after the release candidate was created are not included in the\n   release.\n1. Cherry pick the `prepare release` commit.\n1. Update [spec.md](spec.md), [profile](profile.md),\n   [openapi.yaml](openapi.yaml) and [swagger.yaml](swagger.yaml) to include the\n   version of the release `v$major.$minor`.\n1. Create a new commit with these changes called `finalise release`.\n1. Tag the commit with the name `v$major.$minor`.\n1. Push the tag to the repository with `git push origin v$major.$minor`.\n1. Notify the mailing list of the new release.\n1. Update the [Roadmap & Release Planning](https://github.com/openservicebrokerapi/servicebroker/projects/1)\n   project.\n1. The PMC will create a blog post for the new release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.46484375,
          "content": "Copyright (c) 2015-Present CloudFoundry.org Foundation, Inc. All Rights Reserved.\n\nThis project is licensed to you under the Apache License, Version 2.0 (the \"License\").\n\nYou may not use this project except in compliance with the License.\n\nThis project may include a number of subcomponents with separate copyright notices\nand license terms. Your use of these subcomponents is subject to the terms and \nconditions of the subcomponent's license, as noted in the LICENSE file.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.435546875,
          "content": "[![Build Status](https://travis-ci.org/openservicebrokerapi/servicebroker.svg?branch=master)](https://travis-ci.org/openservicebrokerapi/servicebroker \"Travis\")\n\n![Open Service Broker API](https://github.com/openservicebrokerapi/servicebroker/blob/master/logo.png?raw=true)\n\n## Latest Release: v2.17\n[Specification](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md)\n\n[OpenAPI doc](http://petstore.swagger.io/?url=https://raw.githubusercontent.com/openservicebrokerapi/servicebroker/v2.17/openapi.yaml)\n\n[Profile](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/profile.md)\n\n[Workflows](diagram.md)\n\n[Release notes](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/release-notes.md)\n\n## Working Changes (might contain changes that are not yet released)\nChanges in these documents have been accepted by the working group for the next\nversion of the specification, however are still subject to change.\n\n[Specification](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md)\n\n[OpenAPI doc](http://petstore.swagger.io/?url=https://raw.githubusercontent.com/openservicebrokerapi/servicebroker/master/openapi.yaml)\n\n[Profile](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md)\n\n[Roadmap](https://github.com/orgs/cloudfoundry/projects/30/views/7)\n\n[OSBAPI V3: Call for Input](https://docs.google.com/document/d/1zayT_7IECl-8DOtlp0kdfzIfSZMG7Y_N-SRPggs8eHg/edit)\n\n## Communications\n\n- [Slack Channel](https://cloudfoundry.slack.com/archives/C02TXDMPSUS)\n- [Community call](https://github.com/cloudfoundry/community/blob/main/toc/working-groups/WORKING-GROUPS.md#service-management)\n\n## Contributing\n\n- See [CONTRIBUTING](CONTRIBUTING.md)\n\n## Getting Started\n\nThe [Getting Started](gettingStarted.md) document provides a list of sample\nService Brokers, frameworks and libraries that might be useful to developers\nwanting to implement a Platform or Service Broker.\n\nThe [Platform Compatibility](compatibility.md) document is a quick way to track\nthe state of current and pending feature additions, how they align with\nreleases, and which platforms are currently supporting them.\n\n## Testing conformance to the Open Service Broker API\n\nOne of the [goals](https://www.openservicebrokerapi.org/#goals) of the Open\nService Broker API project is to **provide conformance test suites to verify\ncompliance with the specification**.\n\nThe conformance test suites below can be used to verify Service Broker behaviour\nagainst different versions of the specification. If you are a maintainer of a\ntest suite which is not listed below, we would welcome a pull request to add a\nlink to it alongside the relevant information.\n\n* [openservicebrokerapi/osb-checker](https://github.com/openservicebrokerapi/osb-checker) \\\n  Latest supported version: v2.14 \\\n  Language: Golang \\\n  Maintainers:\n  [@leonwanghui](https://github.com/leonwanghui),\n  [@hannibalhuang](https://github.com/hannibalhuang),\n  [@lyd911](https://github.com/lyd911),\n  [@hellowaywewe](https://github.com/hellowaywewe)\n\n* [evoila/osb-checker-kotlin](https://github.com/evoila/osb-checker-kotlin) \\\n  Latest supported version: v2.14 \\\n  Language: Kotlin \\\n  Maintainers:\n  [@joStrauss](https://github.com/joStrauss),\n  [@chbrinker](https://github.com/chbrinker),\n  [@yremmet](https://github.com/yremmet),\n  [@patsys](https://github.com/patsys),\n  [@MarcoDima](https://github.com/MarcoDima),\n  [@mberger](https://github.com/mberger),\n  [@jhiemer](https://github.com/jhiemer)\n"
        },
        {
          "name": "compatibility.md",
          "type": "blob",
          "size": 1.751953125,
          "content": "# Platform Compatibility for OSBAPI\n\n| Release or Feature | Introduced | Cloud Foundry | Kubernetes |\n| --- | --- | --- | --- |\n| `credentials` binding | v2.10 | ✔️ | ✔️ |\n| `syslog_drain` binding | v2.10 | ✔️ | - |\n| `route_forwarding` binding | v2.10 | ✔️ | - |\n| `volume_mounts` binding | v2.10 | ✔️ | - |\n| [*v2.10*](release-notes.md#v210) | Early 2016 | ✔️ | ✔️ |\n| Bindable and non-bindable plans | v2.11 | ✔️ | ✔️ |\n| [*v2.11*](release-notes.md#v211) | Nov 15, 2016 | ✔️ | ✔️ |\n| `context` for creating and updating a Service Instance | v2.12 | ✔️ | ✔️ |\n| [*v2.12*](release-notes.md#v212) | June 13, 2017 | ✔️ | ✔️ |\n| `schemas` in catalog | v2.13 | ✔️ | ✔️ |\n| `context` for creating a Service Binding | v2.13 | ✔️ | ✔️ |\n| `originating identity` header | v2.13 | ✔️ | ✔️ |\n| Opaque Bearer Token Authentication | v2.13 | - | ✔️ |\n| [*v2.13*](release-notes.md#v213) | Sep 27, 2017 | ✔️ | ✔️ |\n| GET endpoint for Service Instances | v2.14 | ✔️ | - |\n| GET endpoint for Service Bindings | v2.14 | ✔️ | ✔️ |\n| Async Bindings | v2.14 | ✔️ | ✔️ |\n| [*v2.14*](release-notes.md#v214) | July 24, 2018 | ✔️ | ✔️ |\n| `request identity header` to uniquely identify a specific request | v2.15 | - | - |\n| `maintenance_info` used for Service Instance upgrades | v2.15 | ✔️ | - |\n| `plan_upgradeable` field in Service Plan object is used to determine if a plan change can be performed | v2.15 | ✔️ | - |\n| `maximum_polling_duration` field in Service Plan object is adhered to | v2.15 | ✔️ | - |\n| `Retry-After` response header from calls to last operation is adhered to | v2.15 | ✔️ | - |\n| [*v2.15*](release-notes.md#v215) | June 25, 2019 | ✔️ | ✔️ |\n"
        },
        {
          "name": "diagram.md",
          "type": "blob",
          "size": 0.2744140625,
          "content": "# Open Service Broker API v2.17 Workflows\n\n![Workflows](https://docs.google.com/drawings/d/1_0Dz6SQPxwgct51X0pcZBd6N655s4XKL65GwhjCawpg/edit?usp=sharing)\n\nPMC members can edit the drawing [here](https://docs.google.com/drawings/d/1CTqMZg_ggOZLEG02jbxzM-ZSznm4mB2bSXdqhvUKvpw/edit)\n"
        },
        {
          "name": "gettingStarted.md",
          "type": "blob",
          "size": 10.091796875,
          "content": "# Table of Contents\n\n- [Introduction](#introduction)\n- [Platform Implementations](#platform-implementations)\n- [Quickstarts](#quickstarts)\n- [Service Broker Libraries](#service-broker-libraries)\n- [Other Libraries](#other-libraries)\n- [Example Service Brokers](#example-and-community-service-brokers)\n- [Related community components](#related-community-components)\n\n# Introduction\n\nThe Open Service Broker API project allows developers, ISVs, and SaaS vendors a\nsingle, simple, and elegant way to deliver services to applications running\nwithin cloud native platforms. To build a Service Broker, you must implement the\nrequired endpoints as defined in the [API specification](spec.md).\n\nThis getting started guide contains some useful links, libraries and example\nimplementations to help you get started as quickly as possible. If you have\nany questions, please feel free to join the\n[Weekly Call](https://github.com/openservicebrokerapi/servicebroker/wiki/Weekly-Call)\nwhere the community will be happy to help.\n\nIf you would like to add additional information, implementations or libraries to\nthis guide, please open a Pull Request.\n\nPlease note that the Open Service Broker API community does not make any\nstatement as to the validity, stability or compliance of any projects or tools\nlinked to in this guide.\n\n# Platform Implementations\n\n## Cloud Foundry\n\nThe [Cloud Controller](https://github.com/cloudfoundry/cloud_controller_ng)\ncomponent in Cloud Foundry is responsible for registering Service Brokers and\ninteracting with them on behalf of users. To deploy Cloud Foundry, please follow\nthe deployment guide for the\n[cf-deployment](https://github.com/cloudfoundry/cf-deployment) project.\n\n## Kubernetes\n\nThe [Service Catalog](https://github.com/kubernetes-incubator/service-catalog)\nproject is responsible for integrating Service Brokers to the Kubernetes\necosystem. The project has its own\n[Special Interest Group (SIG)](https://github.com/kubernetes/community/tree/master/sig-service-catalog)\nand can be deployed by following\n[this walkthrough guide](https://github.com/kubernetes-incubator/service-catalog/blob/master/docs/walkthrough.md).\n\n# Quickstarts\n\n[`osb-starter-pack`](https://github.com/pmorie/osb-starter-pack):\nA go project that lets you easily deploy and iterate on a new service broker.\nUses the [`osb-broker-lib`](https://github.com/pmorie/osb-broker-lib) and\n[`go-open-service-broker-client`](https://github.com/pmorie/go-open-service-broker-client)\nprojects.\n\n# Service Broker Libraries\n\n[`brokerapi`](https://github.com/pivotal-cf/brokerapi):\nA Go package for building Open Service Broker API Service Brokers.\n\n[Spring Cloud Open Service Broker](https://spring.io/projects/spring-cloud-open-service-broker):\nSpring Cloud Open Service Broker provides a framework based on Spring Boot that\nenables you to quickly create a service broker for your own managed service on\nplatform that support the Open Service Broker API.\n\n[`osb-broker-lib`](https://github.com/pmorie/osb-broker-lib):\nA go library that provides the REST API implementation for the OSB API. Users\nimplement an interface that uses the types from the\n[`go-open-service-broker-client`](https://github.com/pmorie/go-open-service-broker-client).\n\n[`Open Service Broker API for .NET`](https://github.com/AXOOM/OpenServiceBroker):\n.NET libraries for client and server implementations of the Open Service Broker API. The client library allows you to call Service Brokers that implement the API using idiomatic C# interfaces and type-safe DTOs. The server library implements the API for you using ASP.NET Core. You simply need to provide implementations for a few interfaces, shielded from the HTTP-related details.\n\n[spring-cloud-app-broker](https://github.com/spring-cloud/spring-cloud-app-broker)\nSpring Cloud App Broker is a framework for building Spring Boot applications that implement the Open Service Broker API to dynamically deploy Cloud Foundry applications.\n\n[Cloud service broker](https://github.com/pivotal/cloud-service-broker/)\nThis service broker uses Terraform to provision and bind services.\n\n# Other Libraries\n\n[`go-open-service-broker-client`](https://github.com/pmorie/go-open-service-broker-client):\nThis library is a golang client for communicating with service brokers,\nuseful for Platform developers.\n\n# Example and Community Service Brokers\n\n## Go\n\n[Asynchronous Service Broker for AWS EC2](https://github.com/cloudfoundry-samples/go_service_broker):\nThis Service Broker implements support for the\n[Asynchronous Service Operations](https://docs.cloudfoundry.org/services/api.html#asynchronous-operations),\nand calls AWS APIs to provision EC2 VMs.\n\n[Storage Service Operations](https://github.com/opensds/nbp/tree/master/service-broker),\nfor OpenSDS to provision storage as a service.\n\n[Open Service Broker for Azure](https://github.com/Azure/open-service-broker-azure):\nThis Service Broker implements support for Azure cloud services.\n\n[GitHub Repository service](https://github.com/cloudfoundry-samples/github-service-broker-ruby):\nThis is designed to be an easy-to-read example of a service broker, with\ncomplete documentation, and comes with a demo app that uses the service.\nThe Service Broker can be deployed as an application to any Cloud Foundry instance\nor hosted elsewhere. The service broker uses GitHub as the service back end.\n\n[MySQL database service](https://github.com/cloudfoundry/cf-mysql-release):\nThis Service Broker and its accompanying MySQL server are designed to be deployed\ntogether as a BOSH release. [BOSH](https://github.com/cloudfoundry/bosh) is\nused to deploy or upgrade the release, monitors the health of running\ncomponents, and restarts or recreates unhealthy VMs. The Service Broker code alone\ncan be found [here](https://github.com/cloudfoundry/cf-mysql-broker).\n\n[On Demand Service Broker](https://github.com/pivotal-cf/on-demand-service-broker):\nThis is a generic service broker for BOSH deployed services. The broker\ndeploys any BOSH release on demand. It is used by the\n[Redis for PCF](https://www.cloudfoundry.org/the-foundry/redis-for-pcf/), \n[MySQL for PCF](https://pivotal.io/platform/services-marketplace/data-management/mysql), \n[RabbitMQ for PCF](https://www.cloudfoundry.org/the-foundry/rabbitmq-for-pcf/)\nand \n[Pivotal Cloud Cache](https://pivotal.io/platform/services-marketplace/data-management/pivotal-cloud-cache) \nservice brokers. The On Demand Broker is open source, and typically deployed via\n[its BOSH release](https://github.com/pivotal-cf/on-demand-service-broker-release).\n\n[Open Service Broker for Huawei Cloud](https://github.com/huaweicloud/huaweicloud-service-broker):\nThis Service Broker implements support for Huawei cloud services.\n\n[World's Simplest Service Broker](https://github.com/cloudfoundry-community/worlds-simplest-service-broker) \nThis service broker shares the same binding credentials with everyone - for Kubernetes and Cloud Foundry \n\n[Logs-service-broker](https://github.com/orange-cloudfoundry/logs-service-broker)\nA logs service broker to forward CloudFoundry [syslog drains](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#log-drain) logs \nto one or more syslog backends (http, tcp, or udp). This supports log parsing and transformation. \n\n[Cf-redis-broker](https://github.com/pivotal-cf/cf-redis-broker/)\nA service broker for a shared redis cluster.\n\n[cf-rabbitmq-multitenant-broker](https://github.com/pivotal-cf/cf-rabbitmq-multitenant-broker-release/)\na multi-tenant RabbitMQ service broker for Cloud Foundry.\n\n[mongodb-open-service-broker](https://github.com/orange-cloudfoundry/mongodb-boshrelease/tree/master/src/mongodb-open-service-broker)\nA service broker for a mongodb cluster\n\n## Java\n\n[MySQL Java Broker](https://github.com/cloudfoundry-community/cf-mysql-java-broker):\nA Java port of the Ruby-based\n[MySQL broker](https://github.com/cloudfoundry/cf-mysql-broker).\n\n[Swisscom Open Service Broker](https://github.com/swisscom/open-service-broker):\nenables platforms such as Cloud Foundry & Kubernetes to provision and manage\nservices. It is built in a modular way and one can host multiple services.\nOpen Service Broker offers extra functionality regarding billing,\nbackup/restore on top of the Open Service Broker API.\n\n[Static credentials Broker](https://github.com/orange-cloudfoundry/static-creds-broker/) \nThis service broker serves statically configured data (catalog and service bindings)\n\n[Cassandra broker](https://github.com/orange-cloudfoundry/cassandra-boshrelease/tree/master/src/cassandra-open-service-broker)\nA service broker creating service instances as cassandra keyspaces and service bindings as cassandra roles.\n\n## Ruby\n\n[cf-mysql-broker](https://github.com/cloudfoundry-attic/cf-mysql-broker)\nA service broker for a shared mariadb cluster\n\n# Related community components\n\n[OSB CMDB](https://github.com/orange-cloudfoundry/osb-cmdb)\nA configuration management database for Service Brokers.  \nThis enables sharing of service brokers among multiple OSB client platforms by providing inventory, events, quotas, analytics, etc...\n\n[OSB Reverse proxy](https://github.com/orange-cloudfoundry/osb-reverse-proxy)\nA reverse proxy for open service broker endpoints, providing recent remote access to logs of recent requests \n\n[Overview broker](https://github.com/cloudfoundry/overview-broker)\nFor the purpose of testing OSB client platforms, a service broker that provides an overview of its \nservice instances and bindings, its dashboard provides the full OSB API calls received.  \n\n[Peripli Service Manager](https://peripli.github.io/)\nThe Service Manager is a component that manages Open Service Broker API compatible service brokers. \nIt can enforce polices on service brokers, instances and binding and enables cross-platform capabilities such as cross-platform service instance sharing.\n\n[Sec-group-broker-filter](https://github.com/orange-cloudfoundry/sec-group-broker-filter)\nA service broker designed to be chained in front-of other service brokers and dynamically open Cloud Foundry security groups \nto let apps bound to service instance emmit outgoing traffic to IP addresses returned in the chained service instances credentials.\n\n[Subway](https://github.com/cloudfoundry-community/cf-subway)\nSubway is a multiplexing service broker that allows you to scale out single node brokers "
        },
        {
          "name": "high_res_log.png",
          "type": "blob",
          "size": 26.609375,
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 15.4755859375,
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 3.7119140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n   width=\"49.331539mm\"\n   height=\"49.331539mm\"\n   viewBox=\"0 0 49.331539 49.331539\"\n   version=\"1.1\"\n   id=\"svg8\">\n  <defs\n     id=\"defs2\" />\n  <metadata\n     id=\"metadata5\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     transform=\"translate(-41.1824,-80.95176)\"\n     id=\"layer1\">\n    <g\n       transform=\"translate(2.5649855,38.688531)\"\n       style=\"stroke:none\"\n       id=\"g7243\">\n      <circle\n         style=\"opacity:1;fill:#8ec642;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.31833404\"\n         id=\"path1855\"\n         cx=\"69.08152\"\n         cy=\"57.202568\"\n         r=\"1.0977037\" />\n      <use\n         style=\"stroke:none\"\n         x=\"0\"\n         y=\"0\"\n         xlink:href=\"#path1855\"\n         transform=\"matrix(1.75,0,0,1.75,-54.761766,-45.814498)\"\n         id=\"use7236\"\n         width=\"100%\"\n         height=\"100%\" />\n      <use\n         style=\"stroke:none\"\n         x=\"0\"\n         y=\"0\"\n         xlink:href=\"#path1855\"\n         transform=\"matrix(2.5,0,0,2.5,-110.77931,-92.998932)\"\n         id=\"use7238\"\n         width=\"100%\"\n         height=\"100%\" />\n    </g>\n    <g\n       transform=\"rotate(45,17.86449,89.369475)\"\n       id=\"use8202\"\n       style=\"fill:#000000;stroke:none\">\n      <circle\n         r=\"1.0977037\"\n         cy=\"57.202568\"\n         cx=\"69.08152\"\n         id=\"circle8216\"\n         style=\"opacity:1;fill:#63863d;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.31833404\" />\n      <use\n         height=\"100%\"\n         width=\"100%\"\n         id=\"use8218\"\n         transform=\"matrix(1.75,0,0,1.75,-54.761766,-45.814498)\"\n         xlink:href=\"#circle8216\"\n         y=\"0\"\n         x=\"0\"\n         style=\"stroke:none\" />\n      <use\n         height=\"100%\"\n         width=\"100%\"\n         id=\"use8220\"\n         transform=\"matrix(2.5,0,0,2.5,-110.77931,-92.998932)\"\n         xlink:href=\"#circle8216\"\n         y=\"0\"\n         x=\"0\"\n         style=\"stroke:none\" />\n    </g>\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8266\"\n       transform=\"rotate(90,65.84817,105.61753)\"\n       xlink:href=\"#g7243\"\n       y=\"0\"\n       x=\"0\" />\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8268\"\n       transform=\"rotate(-90,65.84817,105.61753)\"\n       xlink:href=\"#g7243\"\n       y=\"0\"\n       x=\"0\" />\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8270\"\n       transform=\"rotate(180,65.84817,105.61753)\"\n       xlink:href=\"#g7243\"\n       y=\"0\"\n       x=\"0\" />\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8274\"\n       transform=\"rotate(90,65.922674,105.76929)\"\n       xlink:href=\"#use8202\"\n       y=\"0\"\n       x=\"0\" />\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8276\"\n       transform=\"rotate(-90,65.922674,105.76929)\"\n       xlink:href=\"#use8202\"\n       y=\"0\"\n       x=\"0\" />\n    <use\n       height=\"100%\"\n       width=\"100%\"\n       style=\"fill:#000000;stroke:#000000\"\n       id=\"use8278\"\n       transform=\"rotate(180,65.922674,105.76929)\"\n       xlink:href=\"#use8202\"\n       y=\"0\"\n       x=\"0\" />\n  </g>\n</svg>\n"
        },
        {
          "name": "openapi.yaml",
          "type": "blob",
          "size": 28.3427734375,
          "content": "# This is the Open API interface for Open Service Broker API. Every attempt will\n# be made to make the Open API version of OSB API accurately represent the\n# written specification. If the spec and this document conflict, the spec is\n# the authority.\n\nopenapi: \"3.0.0\"\ntags:\n- name: Open Service Broker API Specification\n\ninfo:\n  title: Open Service Broker API\n  description: The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Open Service Broker API\n    url: https://www.openservicebrokerapi.org/\n    email: open-service-broker-api@googlegroups.com\n  version: master - might contain changes that are not yet released\n\nservers:\n  - url: http://example.com\n    description: Broker Endpoint\n  - url: http://localhost:3000\n    description: OSB Checker - MockOSB\n\npaths:\n  /v2/catalog:\n    get:\n      summary: get the catalog of services that the service broker offers\n      tags:\n        - Catalog\n      operationId: catalog.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n      responses:\n        '200':\n          description: catalog response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n\n  /v2/service_instances/{instance_id}:\n    put:\n      summary: provision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.provision\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to provision\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service instance provision\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceProvisionRequestBody'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      summary: update a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.update\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to update\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service instance update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceUpdateRequestBody'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: deprovision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.deprovision\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: id of instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous deprovision supported\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      summary: get a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to fetch\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceResource'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/last_operation:\n    get:\n      summary: get the last requested operation state for service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.lastOperation.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - name: instance_id\n          in: path\n          description: instance id of instance to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          headers:\n            Retry-After:\n              description: Indicates when to retry the request\n              required: false\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:\n    get:\n      summary: get the last requested operation state for service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.lastOperation.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - name: instance_id\n          in: path\n          description: instance id of instance to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of service binding to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          headers:\n            Retry-After:\n              description: Indicates when to retry the request\n              required: false\n              schema:\n               type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:\n    put:\n      summary: generate a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.binding\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to create a binding on\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of binding to create\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service binding\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceBindingRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: deprovision a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.unbinding\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: id of the instance associated with the binding being deleted\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: id of the binding being deleted\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance for which a binding is being deleted\n          required: true\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance for which a binding is being deleted\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      summary: get a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance associated with the binding\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of binding to fetch\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResource'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  parameters:\n    APIVersion:\n      name: X-Broker-API-Version\n      in: header\n      description: version number of the Service Broker API that the Platform will use\n      required: true\n      schema:\n        type: string\n        default: '2.13'\n\n    OriginatingIdentity:\n      name: X-Broker-API-Originating-Identity\n      in: header\n      description: identity of the user that initiated the request from the Platform\n      schema:\n        type: string\n\n  schemas:\n    Catalog:\n      type: object\n      properties:\n        services:\n          type: array\n          items:\n            $ref: '#/components/schemas/Service'\n\n    Service:\n      type: object\n      required:\n        - name\n        - id\n        - description\n        - bindable\n        - plans\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        description:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        requires:\n          type: array\n          items:\n            type: string\n            enum:\n              - syslog_drain\n              - route_forwarding\n              - volume_mount\n        bindable:\n          type: boolean\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        dashboard_client:\n          $ref: '#/components/schemas/DashboardClient'\n        binding_rotatable:\n          type: boolean\n        plan_updateable:\n          type: boolean\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/Plan'\n\n    DashboardClient:\n      type: object\n      properties:\n        id:\n            type: string\n        secret:\n            type: string\n        redirect_uri:\n            type: string\n\n    Plan:\n      type: object\n      required:\n        - id\n        - name\n        - description\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n        free:\n          type: boolean\n          default: true\n        bindable:\n          type: boolean\n        schemas:\n          $ref: '#/components/schemas/Schemas'\n        maximum_polling_duration:\n          type: integer\n        plan_updateable:\n          type: boolean\n        binding_rotatable:\n          type: boolean\n          default: false\n\n    Schemas:\n      type: object\n      properties:\n        service_instance:\n          $ref: '#/components/schemas/ServiceInstanceSchema'\n        service_binding:\n          $ref: '#/components/schemas/ServiceBindingSchema'\n\n    ServiceInstanceSchema:\n      type: object\n      properties:\n        create:\n          type: object\n          properties:\n            parameters:\n              type: object\n        update:\n          type: object\n          properties:\n            parameters:\n              type: object\n\n    ServiceBindingSchema:\n      type: object\n      properties:\n        create:\n          type: object\n          properties:\n            parameters:\n              type: object\n\n    ServiceInstanceResource:\n      type: object\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        dashboard_url:\n          type: string\n        parameters:\n          $ref: '#/components/schemas/Object'\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceProvisionRequestBody:\n      type: object\n      required:\n        - service_id\n        - plan_id\n        - organization_guid\n        - space_guid\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        context:\n          $ref: '#/components/schemas/Context'\n        organization_guid:\n          type: string\n          deprecated: true\n        space_guid:\n          type: string\n          deprecated: true\n        parameters:\n          $ref: '#/components/schemas/Object'\n\n    ServiceInstanceProvisionResponse:\n      type: object\n      properties:\n        dashboard_url:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceAsyncOperation:\n      type: object\n      properties:\n        dashboard_url:\n          type: string\n        operation:\n          type: string # could be a link object to last operation\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceMetadata:\n      type: object\n      properties:\n        labels:\n          type: object\n        attributes:\n          type: object\n\n    ServiceInstanceUpdateRequestBody:\n      type: object\n      required:\n        - service_id\n      properties:\n        context:\n          $ref: '#/components/schemas/Context'\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        parameters:\n          $ref: '#/components/schemas/Object'\n        previous_values:\n          $ref: '#/components/schemas/ServiceInstancePreviousValues'\n\n    ServiceInstancePreviousValues:\n      type: object\n      properties:\n        service_id:\n          type: string\n          deprecated: true\n        plan_id:\n          type: string\n        organization_id:\n          type: string\n          deprecated: true\n        space_id:\n          type: string\n          deprecated: true\n\n    AsyncOperation:\n      type: object\n      properties:\n        operation:\n          type: string\n\n    LastOperationResource:\n      type: object\n      required:\n        - state\n      properties:\n        state:\n          type: string\n          enum:\n            - \"in progress\"\n            - \"succeeded\"\n            - \"failed\"\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n\n    ServiceBindingResource:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ServiceBindingMetadata'\n        credentials:\n          $ref: '#/components/schemas/Object'\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n        endpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingEndpoint'\n        parameters:\n          $ref: '#/components/schemas/Object'\n\n    ServiceBindingRequest:\n      type: object\n      required:\n        - service_id\n        - plan_id\n      properties:\n        context:\n          $ref: '#/components/schemas/Context'\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        app_guid:\n          type: string\n          deprecated: true\n        bind_resource:\n          $ref: '#/components/schemas/ServiceBindingResouceObject'\n        parameters:\n          $ref: '#/components/schemas/Object'\n        predecessor_binding_id:\n          type: string\n\n    ServiceBindingMetadata:\n      type: object\n      properties:\n        expires_at:\n          type: string\n        renew_before:\n          type: string\n\n    ServiceBindingResouceObject:\n      type: object\n      properties:\n        app_guid:\n          type: string\n        route:\n          type: string\n\n    ServiceBindingResponse:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ServiceBindingMetadata'\n        credentials:\n          $ref: '#/components/schemas/Object'\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n        endpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingEndpoint'\n\n    ServiceBindingEndpoint:\n      type: object\n      required:\n      - host\n      - ports\n      properties:\n        host:\n          type: string\n        ports:\n          type: array\n          items:\n            type: string\n        protocol:\n          type: string\n          enum:\n          - 'tcp'\n          - 'udp'\n          - 'all'\n          default: 'tcp'\n\n    ServiceBindingVolumeMount:\n      type: object\n      required:\n        - driver\n        - container_dir\n        - mode\n        - device_type\n        - device\n      properties:\n        driver:\n          type: string\n        container_dir:\n          type: string\n        mode:\n          type: string\n          enum:\n            - r\n            - rw\n        device_type:\n          type: string\n          enum:\n            - shared\n        device:\n          $ref: '#/components/schemas/ServiceBindingVolumeMountDevice'\n\n    ServiceBindingVolumeMountDevice:\n      type: object\n      required:\n        - volume_id\n      properties:\n        volume_id:\n          type: string\n        mount_config:\n          $ref: '#/components/schemas/Object'\n\n    Context:\n      description: \"See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.\"\n      type: object\n\n    Metadata:\n      description: \"See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.\"\n      type: object\n\n    MaintenanceInfo:\n      type: object\n      required:\n        - version\n      properties:\n        version:\n          type: string\n        description:\n          type: string\n\n    Object:\n      type: object\n\n    Error:\n      description: \"See [Service Broker Errors](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors) for more details.\"\n      type: object\n      properties:\n        error:\n          type: string\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n\nsecurity:\n  - basicAuth: []\n\nexternalDocs:\n  description: The official Open Service Broker API specification\n  url: https://github.com/openservicebrokerapi/servicebroker/\n"
        },
        {
          "name": "profile.md",
          "type": "blob",
          "size": 23.83984375,
          "content": "# Open Service Broker API Profile (master - might contain changes that are not yet released)\n\n## Abstract\n\nThe [Open Service Broker API specification](spec.md) allows for extensions\nand variations based on the environments in which it is being used; this\ndocument contains the suggested usage pattern for some of those variants.\n\nWhile use of this profile is OPTIONAL, an implementation is not compliant\nwith this profile if it fails to satisfy one or more of the MUST, SHALL\nor REQUIRED level requirements defined herein.\n\n## Table of Contents\n\n- [Notations and Terminology](#notations-and-terminology)\n  - [Notational Conventions](#notational-conventions)\n  - [Terminology](#terminology)\n- [Originating Identity Header](#originating-identity-header)\n  - [Cloud Foundry Originating Identity Header](#cloud-foundry-originating-identity-header)\n  - [Kubernetes Originating Identity Header](#kubernetes-originating-identity-header)\n- [Context Object](#context-object)\n  - [Context Object Properties](#context-object-properties)\n  - [Cloud Foundry Context Object](#cloud-foundry-context-object)\n  - [Kubernetes Context Object](#kubernetes-context-object)\n- [Bind Resource Object](#bind-resource-object)\n  - [Cloud Foundry Bind Resource Object](#cloud-foundry-bind-resource-object)\n- [Service Metadata](#service-metadata)\n  - [Cloud Foundry Service Metadata](#cloud-foundry-service-metadata)\n- [Catalog Extensions](#catalog-extensions)\n  - [Cloud Foundry Catalog Extensions](#cloud-foundry-catalog-extensions)\n\n## Notations and Terminology\n\n### Notational Conventions\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\n\"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this document are to\nbe interpreted as described in [RFC 2119]( https://tools.ietf.org/html/rfc2119).\n\n### Terminology\n\nPlease refer to terminology defined by the\n[Open Service Broker API specification](spec.md#terminology).\n\n## Originating Identity Header\n\nIn the [Open Service Broker API specification](spec.md) it defines an\nadditional HTTP Header that can be included in messages from the Platform\nto identify the user that requested the action to be taken.\n\nThe header consists of two parts: a `platform` string and `value` string,\nwhere the `value` is a Base64 encoded serialized JSON object.\nBoth parts will vary based on the Platform which is being used. The\nfollowing sections define the values to be used based on the Platform\nand which properties are expected to appear in the `value` JSON.\n\nNote that when both the originating identity HTTP Header and the Context\nobject appear in the same message the `platform` value MUST be the same\nfor both.\n\n### Cloud Foundry Originating Identity Header\n\n*`platform` Value*: `cloudfoundry`\n\nThe following properties MUST appear within the JSON encoded `value`:\n\n| Property | Type | Description |\n| --- | --- | --- |\n| user_id | string | The `user_id` value from the Cloud Foundry JWT token. |\n\nPlatforms MAY include additional properties.\n\nFor example, a `value` of:\n```json\n{\n  \"user_id\": \"683ea748-3092-4ff4-b656-39cacc4d5360\"\n}\n```\nwould appear in the HTTP Header as:\n```\nX-Broker-API-Originating-Identity: cloudfoundry eyANCiAgInVzZXJfaWQiOiAiNjgzZWE3NDgtMzA5Mi00ZmY0LWI2NTYtMzljYWNjNGQ1MzYwIg0KfQ==\n```\n\n### Kubernetes Originating Identity Header\n\n*`platform` Value*: `kubernetes`\n\nThe following properties MUST appear within the JSON encoded `value`:\n\n| Property | Type | Description |\n| --- | --- | --- |\n| username | string | The `username` property from the Kubenernetes `user.info` object. |\n| uid | string | The `uid` property from the Kubenernetes `user.info` object. |\n| groups | array-of-strings | The `groups` property from the Kubenernetes `user.info` object. |\n| extra | map-of-array-of-strings | The `extra` property from the Kubernetes `user.info` object. |\n\nPlatforms MAY include additional properties.\n\nFor example, a `value` of:\n```json\n{\n  \"username\": \"duke\",\n  \"uid\": \"c2dde242-5ce4-11e7-988c-000c2946f14f\",\n  \"groups\": [ \"admin\", \"dev\" ],\n  \"extra\": {\n    \"mydata\": [ \"data1\", \"data3\" ]\n  }\n}\n```\nwould appear in the HTTP Header as:\n```\nX-Broker-API-Originating-Identity: kubernetes ew0KICAidXNlcm5hbWUiOiAiZHVrZSIsDQogICJ1aWQiOiAiYzJkZGUyNDItNWNlNC0xMWU3LTk4OGMtMDAwYzI5NDZmMTRmIiwNCiAgImdyb3VwcyI6IFsgImFkbWluIiwgImRldiIgXSwNCiAgImV4dHJhIjogew0KICAgICJteWRhdGEiOiBbICJkYXRhMSIsICJkYXRhMyIgXQ0KICB9DQp9\n```\n\n\n## Context Object\n\nIn the [Open Service Broker API specification](spec.md) there are certain\nmessage flows that include a `context` property. This property is defined\nas an opaque JSON object that is meant to contain contextual information\nabout the environment in which the Platform or Application is executing.\n\nWhile the `context` property is defined as an opaque JSON object, in practice,\nit is often useful and necessary for there to be an agreed upon set of\nproperties to ensure a common understanding of this data between the\nPlatform and the Service Brokers.\n\n### Context Object Properties\n\nThe list of properties within the Context Object can vary depending on\nwhich Service Broker API is being invoked and which Platform is being used.\nThis section will define a set of properties for each Platform and specify\nwhen each is meant to be used. Platforms MAY choose to provide additional\nproperties beyond the ones defined in this document.\n\nEach property will include the version of the Open Service Broker\nAPI in which it was introduced. For any API call in which that property\nis mandatory, it is only mandatory for the specified version of the\nspecification or higher.\n\nAside from the Platform specific properties, defined in the following\nsections, there is one common property called `platform` that\nMUST also appear within `context` to indicate which Platform is being used.\n\nThe `platform` property MUST be a `string` and serialized as follows:\n```\n\"platform\": \"platform-string-here\"\n```\n\nEach section below will define the `platform` value that MUST be used based\non the Platform and the set of additional properties that MUST be present.\n\nNote that when both the originating identity HTTP Header and the Context\nobject appear in the same message the `platform` value MUST be the same\nfor both.\n\nTo enable support for Platforms to send an update request for a Service Instance\ncontaining only contextual data, a Service Broker MUST declare support by\nincluding `\"allow_context_updates\": true` in its\n[catalog endpoint](spec.md#catalog-management).\n\n### Cloud Foundry Context Object\n\n*`platform` Property Value*: `cloudfoundry`\n\nThe following properties are defined for usage within a Cloud Foundry\ndeployment:\n\n- `organization_guid`\n\n  Version: 2.11\n\n  The GUID of the organization that a Service Instance is associated with.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"organization_guid\": \"organization-guid-here\"\n  ```\n  For example:\n  ```\n  \"organization_guid\": \"1113aa0-124e-4af2-1526-6bfacf61b111\"\n  ```\n\n- `organization_name`\n\n  Version: 2.15\n\n  The name of the organization that a Service Instance is associated with.\n  Note that the name of an organization in Cloud Foundry MAY be changed.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"organization_name\": \"organization-name-here\"\n  ```\n  For example:\n  ```\n  \"organization_name\": \"system\"\n  ```\n\n- `organization_annotations`\n\n  Version: 2.16\n\n  The [annotations](http://v3-apidocs.cloudfoundry.org/version/3.69.0/index.html#metadata) attached to the organization that a Service Instance is associated with.\n  Note that the annotations of an organization in Cloud Foundry MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"organization_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"organization_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n\n- `space_guid`\n\n  Version: 2.11\n\n  The GUID of the space that a Service Instance is associated with.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"space_guid\": \"space-guid-here\"\n  ```\n  For example:\n  ```\n  \"space_guid\": \"aaaa1234-da91-4f12-8ffa-b51d0336aaaa\"\n  ```\n\n- `space_name`\n\n  Version: 2.15\n\n  The name of the space that a Service Instance is associated with.\n  Note that the name of a space in Cloud Foundry MAY be changed.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"space_name\": \"space-name-here\"\n  ```\n  For example:\n  ```\n  \"space_name\": \"development\"\n  ```\n\n- `space_annotations`\n\n  Version: 2.16\n\n  The [annotations](http://v3-apidocs.cloudfoundry.org/version/3.69.0/index.html#metadata) attached to the space that a Service Instance is associated with.\n  Note that the annotations of a space in Cloud Foundry MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"space_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"space_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n\n- `instance_name`\n\n  Version: 2.15\n\n  The name of the Service Instance.\n  Note that the name of a Service Instance in Cloud Foundry MAY be changed.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"instance_name\": \"instance-name-here\"\n  ```\n  For example:\n  ```\n  \"instance_name\": \"my-db\"\n  ```\n\nThe following table specifies which properties will appear in each API.\nAll properties specified are REQUIRED unless otherwise noted.\n\n| Request API | Properties |\n| --- | --- |\n| `PUT /v2/service_instances/:instance_id` | `organization_guid`, `organization_name`, `space_guid`, `space_name`, `instance_name` |\n| `PATCH /v2/service_instances/:instance_id` | `organization_guid`, `organization_name`, `space_guid`, `space_name`, `instance_name` |\n| `PUT /v2/service_instances/:instance_id/service_bindings/:binding_id` | `organization_guid`, `organization_name`, `space_guid`, `space_name` |\n\nThe following example shows a `context` object that might appear as part of a\nCloud Foundry API call:\n  ```\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"organization_guid\": \"1113aa0-124e-4af2-1526-6bfacf61b111\",\n    \"organization_name\": \"system\",\n    \"space_guid\": \"aaaa1234-da91-4f12-8ffa-b51d0336aaaa\",\n    \"space_name\": \"development\",\n    \"instance_name\": \"my-db\"\n  }\n  ```\n\n- `instance_annotations`\n\n  Version: 2.16\n\n  The [annotations](http://v3-apidocs.cloudfoundry.org/version/3.69.0/index.html#metadata) attached to the Service Instance.\n  Note that the annotations of a Service Instance in Cloud Foundry MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"instance_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"instance_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n\n### Kubernetes Context Object\n\n*`platform` Property Value*: `kubernetes`\n\nThe following properties are defined for usage within a Kubernetes deployment:\n\n- `namespace`\n\n  Version: 2.11\n\n  The name of the Kubernetes namespace in which the Service Instance\n  will be visible. This property MUST be a non-empty string serialized\n  as follows:\n\n  ```\n  \"namespace\": \"namespace-name-here\"\n  ```\n  For example:\n  ```\n  \"namespace\": \"testing\"\n  ```\n\n- `namespace_annotations`\n\n  Version: 2.16\n\n  The [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) attached to the namespace in which the Service Instance will be visible.\n  Note that the annotations of a namespace in Kubernetes MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"namespace_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"namespace_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n- `instance_annotations`\n\n  Version: 2.16\n\n  The [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) attached to the Service Instance.\n  Note that the annotations of a Service Instance in Kubernetes MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"instance_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"instance_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n\n\n- `clusterid`\n\n  Version: 2.14\n\n  The unique identifier for the Kubernetes cluster from which the request\n  was sent. This property can be useful when a Service Broker tries to\n  call back to a Platform that is managing multiple Kubernetes clusters.\n  Typically this value will be static for the lifetime of the cluster,\n  however, that is a Platform implementation choice. Brokers ought to take\n  care that, while atypical, it is possible for the value to change over\n  time.\n\n  This property MUST be a non-empty string serialized as follows:\n\n  ```\n  \"clusterid\": \"id-goes-here\"\n  ```\n  For example:\n  ```\n  \"clusterid\": \"644e1dd7-2a7f-18fb-b8ed-ed78c3f92c2b\"\n  ```\n\n\n- `instance_name`\n\n  Version: 2.15\n\n  The name of the Service Instance.\n  Note that the name of a Service Instance in Kubernetes MAY be changed.\n  This property MUST be a non-empty string serialized as follows:\n  ```\n  \"instance_name\": \"instance-name-here\"\n  ```\n  For example:\n  ```\n  \"instance_name\": \"my-db\"\n  ```\n\n\nThe following table specifies which properties will appear in each API.\nAll properties specified are REQUIRED unless otherwise noted.\n\n| Request API | Properties |\n| --- | --- |\n| `PUT /v2/service_instances/:instance_id` | `namespace`, `clusterid`, `instance_name` |\n| `PATCH /v2/service_instances/:instance_id` | `namespace`, `clusterid`, `instance_name` |\n| `PUT /v2/service_instances/:instance_id/service_bindings/:binding_id` | `namespace`, `clusterid` |\n\nExample:\n\nThe following example shows a `context` property that might appear as\npart of a Kubernetes API call:\n  ```\n  \"context\": {\n    \"platform\": \"kubernetes\",\n    \"namespace\": \"development\",\n    \"clusterid\": \"8263feba-9b8a-23ae-99ed-abcd1234feda\"\n  }\n  ```\n\n## Bind Resource Object\n\nIn the [Open Service Broker API specification](spec.md), requests to\n[create a Service Binding](spec.md#binding) can contain a `bind_resource`\nobject in which Platforms MAY choose to add additional fields.\n\n### Cloud Foundry Bind Resource Object\n\nThe Cloud Foundry Bind Resource Object supports the Cloud Foundry [Service Binding](https://docs.cloudfoundry.org/devguide/services/application-binding.html) and the [Service Key](https://docs.cloudfoundry.org/devguide/services/service-keys.html) developer requests. The credentials returned by the Service Binding endpoints MAY be references to credentials stored in [CredHub](https://docs.cloudfoundry.org/credhub/index.html), the component designed for centralized credential management in Cloud Foundry. Service Brokers are then responsible for writing credentials into CredHub and granting read permissions to a bound application or a specified client. See more details into [Credhub documentation](https://github.com/cloudfoundry-incubator/credhub/blob/master/docs/secure-service-credentials.md#service-brokers). The provisioning of CredHub access for Service Brokers is performed out of band and is out of scope of this specification.\n\nThe following properties are defined for usage within a Cloud Foundry\ndeployment:\n\n- `space_guid`\n  This OPTIONAL property is the GUID of a space that a Service Binding is\n  associated with. If present, this property MUST be a non-empty string\n  serialized as follows:\n  ```\n  \"space_guid\": \"space-guid-here\"\n  ```\n  For example:\n  ```\n  \"space_guid\": \"15823972-c216-4ba5-9f3f-e75b0b891297\"\n  ```\n\n- `app_annotations`\n\n  Version: 2.16\n\n  The [annotations](http://v3-apidocs.cloudfoundry.org/version/3.69.0/index.html#metadata) attached to the application that a Service Binding is associated with.\n  Note that the annotations of an application in Cloud Foundry MAY be changed.\n  This OPTIONAL property holds an object with the annotations key/value pairs. If present, this property MUST be an object, with zero or more properties as follows:\n\n  ```\n  \"app_annotations\": { \"prefix-here.org/name-here\":\"value-here\" }\n  ```\n  For example:\n  ```\n  \"app_annotations\": { \"myprovider.com/send-alerts-to-email\":\"me@mycompany.com\" }\n  ```\n\n- `credential_client_id`\n\n  Version: 2.16\n\n  When the Bind Resource Object is the result of a Cloud Foundry [service key](https://docs.cloudfoundry.org/devguide/services/service-keys.html) developer request, then the Cloud Cloundry CredHub client id is provided. This supports Service Brokers that MAY choose use to securely store Service Binding credentials, and return [credhub references](https://github.com/cloudfoundry-incubator/credhub/blob/master/docs/secure-service-credentials.md#service-brokers) Service Binding responses instead of plain credentials values. In this case, the provided client MUST be granted permission by the Service Broker to read the returned credentials reference.\n  This OPTIONAL property holds a string with the client id that MUST be granted read permissions. If present, this property MUST be a non empty string as follows:\n\n  ```\n    \"credential_client_id\": \"client_id-value-here\"\n  ```\n  For example:\n  ```\n    \"credential_client_id\": \"cc_service_key_client\"\n  ```\n\nThe following example shows a `bind_resource` object that might appear as part\nof a Cloud Foundry API call resulting from a Service Binding developer request:\n  ```\n  \"bind_resource\": {\n    \"app_guid\": \"5e76c9bf-d5e3-46bf-9877-6d8dddfc8a45\",\n    \"space_guid\": \"15823972-c216-4ba5-9f3f-e75b0b891297\"\n  }\n  ```\n\nThe following example shows a `bind_resource` object that might appear as part\nof a Cloud Foundry API call resulting from a Service Key developer request:\n  ```\n  \"bind_resource\": {\n    \"credential_client_id\": \"cc_service_key_client\"\n  }\n  ```\n\n## Service Metadata\n\nWhile the [specification](spec.md) does not mandate the property names used\nin the `metadata` objects, it is RECOMMENDED that the following names\nbe used when possible in an attempt to provide some degree of interoperability\nand consistency.\n\nPlease note that in addition to service metadata returned from [catalog endpoint](spec.md#catalog-management), \nService Brokers MAY also expose service-instance-specific metadata through the\n[ServiceInstanceMetadata](spec.md#service-instance-metadata) structure returned by Service Brokers \nin the [Provisioning](spec.md#provisioning) endpoint with updates potentially published \nin the [Updating](spec.md#updating-a-service-instance) and [Fetching a Service Instance](spec.md#fetching-a-service-instance) endpoints.\n\n#### Service Metadata Fields\n\n| Service Broker API Field | Type | Description |\n| --- | --- | --- |\n| metadata.displayName | string | The name of the service to be displayed in graphical clients. |\n| metadata.imageUrl | string | The URL to an image or a data URL containing an image. |\n| metadata.longDescription | string | Long description. |\n| metadata.providerDisplayName | string | The name of the upstream entity providing the actual service. |\n| metadata.documentationUrl | string | Link to documentation page for the service. |\n| metadata.supportUrl | string | Link to support page for the service. |\n\n#### Plan Metadata Fields\n| Service Broker API Field | Type | Description |\n| --- | --- | --- |\n| metadata.bullets | array-of-strings | Features of this plan, to be displayed in a bulleted-list. |\n| metadata.costs | array-of-objects | An array-of-objects that describes the costs of a service, in what currency, and the unit of measure. If there are multiple costs, all of them could be billed to the user (such as a monthly + usage costs at once). |\n| metadata.displayName | string | Name of the plan to be displayed to clients. |\n\n#### Cost Object\nThis object describes the costs of a service, in what currency, and the unit\nof measure.\n\n| Field | Type | Description |\n| --- | --- | --- |\n| amount* | object | An array of pricing in various currencies for the cost type as key-value pairs where key is currency code and value (as a float) is currency amount. |\n| unit* | string | Display name for type of cost, e.g. Monthly, Hourly, Request, GB. |\n\n\\* Fields with an asterisk are REQUIRED.\n\nFor example:\n```\n\"costs\": [\n  {\n    \"amount\": {\n      \"usd\": 649.0\n    },\n    \"unit\": \"MONTHLY\"\n  }\n]\n```\n\n#### Example Service Broker Response Body\n\nThe example below contains a catalog of one service, having one Service Plan.\nOf course, a Service Broker can offer a catalog of many services, each having\nmany plans.\n\n```json\n{\n  \"services\":[\n    {\n      \"id\":\"766fa866-a950-4b12-adff-c11fa4cf8fdc\",\n      \"name\":\"cloudamqp\",\n      \"description\":\"Managed HA RabbitMQ servers in the cloud.\",\n      \"requires\":[],\n      \"tags\":[\n        \"amqp\",\n        \"rabbitmq\",\n        \"messaging\"\n      ],\n      \"metadata\":{\n        \"displayName\":\"CloudAMQP\",\n        \"imageUrl\":\"https://d33na3ni6eqf5j.cloudfront.net/app_resources/18492/thumbs_112/img9069612145282015279.png\",\n        \"longDescription\":\"Managed, highly available, RabbitMQ clusters in the cloud.\",\n        \"providerDisplayName\":\"84codes AB\",\n        \"documentationUrl\":\"http://docs.cloudfoundry.com/docs/dotcom/marketplace/services/cloudamqp.html\",\n        \"supportUrl\":\"http://www.cloudamqp.com/support.html\"\n      },\n      \"dashboard_client\":{\n        \"id\":\"p-mysql-client\",\n        \"secret\":\"p-mysql-secret\",\n        \"redirect_uri\":\"http://p-mysql.example.com/auth/create\"\n      },\n      \"plans\":[\n        {\n          \"id\":\"024f3452-67f8-40bc-a724-a20c4ea24b1c\",\n          \"name\":\"bunny\",\n          \"description\":\"A mid-sided plan.\",\n          \"metadata\":{\n            \"bullets\":[\n              \"20 GB of messages\",\n              \"20 connections\"\n            ],\n            \"costs\":[\n              {\n                \"amount\":{\n                  \"usd\":99.0\n                },\n                \"unit\":\"MONTHLY\"\n              },\n              {\n                \"amount\":{\n                  \"usd\":0.99\n                },\n                \"unit\":\"1GB of messages over 20GB\"\n              }\n            ],\n            \"displayName\":\"Big Bunny\"\n          }\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Cloud Foundry Service Metadata\n\nIn addition to the metadata described in [Service Metadata](#service-metadata),\nService Brokers MAY also expose the following fields to enable Cloud Foundry\nspecific behaviour.\n\n\n#### Service Metadata Fields\n\n| Broker API Field | Type | Description |\n| --- | --- | --- |\n| metadata.shareable | boolean | Allows Service Instances to be shared across orgs and spaces. |\n\n## Catalog Extensions\n\nIn addition to the fields described in the [Catalog](spec.md#catalog-management),\nService Brokers MAY also expose the following fields to enable Platform specific behaviour.\n\n#### Cloud Foundry Catalog Extensions\n\n| Field | Type | Description |\n| --- | --- | --- |\n| services[n].dashboard_client | [DashboardClient](#dashboard-client-object) | Contains the data necessary to activate the Dashboard SSO feature for this service. |\n\n##### Dashboard Client Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| id* | string | The id of the OAuth client that the dashboard will use. If present, MUST be a non-empty string. |\n| secret* | string | A secret for the dashboard client. If present, MUST be a non-empty string. |\n| redirect_uri | string | A URI for the service dashboard. Validated by the OAuth token server when the dashboard requests a token. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n#### Example Catalog\n\n```\n{\n  \"services\": [{\n    \"name\": \"fake-service\",\n    \"id\": \"acb56d7c-XXXX-XXXX-XXXX-feb140a59a66\",\n    \"description\": \"A fake service.\",\n    \"dashboard_client\": {\n      \"id\": \"398e2f8e-XXXX-XXXX-XXXX-19a71ecbcf64\",\n      \"secret\": \"277cabb0-XXXX-XXXX-XXXX-7822c0a90e5d\",\n      \"redirect_uri\": \"http://localhost:1234\"\n    }\n  }]\n}\n```\n"
        },
        {
          "name": "release-notes.md",
          "type": "blob",
          "size": 16.8076171875,
          "content": "# Service Broker API Release Notes\n\n## [v2.17](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md)\n\n* Add binding rotation fields to the spec and guidance on how to use the expiration fields for [service binding](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md#binding-rotation)\n* Remove ambiguity on [provisioning status code](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md#response-3) and clarify 200 status with consistent language for depraction\n* Add context object to the response of fetching a [service instance](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#fetching-a-service-instance) and turn into a non-requirement for service instances\n* Rename context to attributes and update openapi files and the [spec with an example](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md#body-4)\n* Moved attributes to [metadata](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md#body-4) and returns the metadata on fetch\n* Add guidance for [orphan mitigation](https://github.com/openservicebrokerapi/servicebroker/blob/v2.17/spec.md#orphan-mitigation)\n* Reconcile openapi and swagger files to match and generate identical clients and servers\n\n## [v2.16](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md)\n\n* Add guidance for remembering the state of [service instance](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#body-1) and [service binding](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#body-2) operations\n* Add guidance to handle 500 errors from Service Instance [update](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#response-5)\n* Add guidance to handle requests with invalid data\n* Allow Service Brokers to indicate if a Service Instance is still usable after a [failed](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#body-1) update or deprovisioning and if an update can be repeated\n* Specify that Platforms SHOULD NOT reuse IDs\n* Allow the platform to supply Service ID and Plan ID as hints when retrieving a [service binding](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#fetching-a-service-binding) or a [service instance](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#fetching-a-service-instance)\n* Add [CF](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/profile.md#cloud-foundry-context-object) and [K8s](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/profile.md#kubernetes-context-object) annotations to the profile document\n* Add support for ETag and If-Modified-Since [headers](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#catalog-management)\n* Clarify the response code when Platform does not provide the required [API version header](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#api-version-header)\n* Service Instances can be labelled with [information](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#service-instance-metadata) defined by the Service Broker\n* Add [expiration](https://github.com/openservicebrokerapi/servicebroker/blob/v2.16/spec.md#binding-metadata-object) date and time for bindings\n\n## [v2.15](https://github.com/openservicebrokerapi/servicebroker/blob/v2.15/spec.md)\n2019-06-11\n\n* Added a delay to polling response for [Service Instance](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#polling-last-operation-for-service-instances)\n  and [Service Binding](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#polling-last-operation-for-service-bindings)\n  last operations.\n* Added a Service Offering specific [async polling timeout](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#polling-interval-and-duration).\n* Allow a Service Instance context to be updated and add [org name, space name, and instance names](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#updating-a-service-instance).\n* Added list of endpoints to [create Service Binding response body](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-9).\n* Added mechanism for [orphan mitigation](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#orphan-mitigation).\n* Allow brokers to return 200 for no-op [update Service Instance requests](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#response-5).\n* Allow brokers to not return parameters when returning a [Service Instance](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-5)\n  or [Service Binding](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-5).\n* Add plan_updateable field to the [Service Plan object](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object).\n* [Clarify](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#blocking-operations) what happens when deleting during a provision/bind request.\n* Restrict Operation strings to 10,000 chartacters in the response body for [provisioning](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-4)\n  or [deprovisioning](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-12)\n  a Service Instance, and [binding](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-9)\n  or [unbinding](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-11)\n  a Service Binding.\n* Remove character restrictions on names of [Service Offerings](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-offering-object),\n  and [Service Plans](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object).\n* Allow empty descriptions in the response body for getting the last operations of [Service Instances](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-1),\n  and [Service Bindings](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body-2).\n* Clarify broker behavior expected when [deprovisioning while a provision request is in progress](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#deprovisioning)\n  and [unbinding while an unbind request is in progress](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#unbinding).\n* Clarify broker behavior when a provision request is received [during a provision request for the same instance](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#response-3)\n  or when a binding request is received [during a binding request for the same binding](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#response-6).\n* Added [maintenance info](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object) support to Service Plans.\n* Added [request identity header](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#request-identity).\n\n\n## [v2.14](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md)\n2018-07-24\n\n* Added GET endpoints for fetching a\n  [Service Instance](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#fetching-a-service-instance)\n  and\n  [Service Binding](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#fetching-a-service-binding)\n* Added support for asynchronous Service Bindings\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/334))\n  and a new\n  [last operation endpoint for Service Bindings](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#polling-last-operation-for-service-bindings)\n  endpoint\n* Added clarity around concurrent updates\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/300))\n* Added clarity on how Platform's can clean up after a failed provision or bind\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/353))\n* Added Opaque Bearer Tokens to the\n  [Platform to Service Broker Authentication](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#platform-to-service-broker-authentication)\n  section\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/398))\n* Provided guidance for CLI-friendly names\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/425))\n* Allow for uppercase characters in Service and Service Plan names\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/433))\n* Clarify that extra fields in requests and responses are allowed\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/436))\n* Allow an updated `dashboard_url` to be provided when updating a Service\n  Instance ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/437))\n* Added an [OpenAPI 2.0 implementation](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/openapi.yaml)\n* Allow for periods in name fields\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/452))\n* Removed the need for Platforms to perform orphan mitigation when receiving an\n  `HTTP 408` response code\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/456))\n* Moved the `dashboard_client` field to\n  [Cloud Foundry Catalog Extensions](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/profile.md#cloud-foundry-catalog-extensions)\n* Added a [compatibility matrix](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/compatibility.md)\n  describing which optional features in the specification are supported by\n  different Platforms\n* Added clarity for returning Service Binding information via the GET endpoints\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/517))\n* Added guidance for supported string lengths\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/518))\n* Clarified that the `plan_updateable` field affects modifying the Service Plan,\n  not parameters ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/519))\n* Clarified which Service Plan ID to use for polling the last operation endpoint\n  after an update ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/522))\n* Clarified Platform behaviour when a dashboard URL is not returned\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/527))\n* Fixed an incompatible change introduced in v2.12\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/540))\n* Added clarity around the state of resources after a failure\n  ([PR](https://github.com/openservicebrokerapi/servicebroker/pull/541))\n* Added [Content Type](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#content-type)\n  guidelines\n\n## [v2.13](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md)\n2017-09-19\n\n* Added [`schemas`](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#schema-object)\n  field to services in the catalog that brokers can use to declare the\n  configuration parameters their service accepts for creating a service\n  instance, updating a service instance and creating a service binding.\n* Added [`context`](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#binding)\n  field to request body for creating a service binding.\n* Added [warning text](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#url-properties)\n  about using characters outside of the \"Unreserved Characters\" set in IDs.\n* Added information about\n  [`volume_mounts`](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#volume-mounts-object)\n  objects.\n* `instance_id` and `binding_id` MUST be globally unique non-empty strings.\n* Allow [non-BasicAuth authentication mechanisms](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#authentication).\n* Added a [Getting Started](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/gettingStarted.md)\n  page including sample service brokers.\n* Define what a [CLI-friendly string](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#catalog-management)\n  is.\n* Add [service/plan metadata conventions](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#service-metadata).\n* Add [originating identity HTTP header](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#originating-identity).\n\n## [v2.12](https://github.com/openservicebrokerapi/servicebroker/blob/v2.12/spec.md)\n2017-06-13\n\n* Added `context` field to request body for provisioning a service instance (`PUT /v2/service_instances/:instance_id`) and updating a service instance (`PATCH /v2/service_instances/:instance_id`). Also added the [profile.md](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md) file describing RECOMMENDED usage patterns for environment-specific extensions and variations. `context` will replace the `organization_guid` and `space_guid` request fields in future versions of the specification. In the interim, both SHOULD be used to ensure interoperability with old and new implementations.\n* The specification now uses RFC2119 keywords to make it clearer when things are REQUIRED rather than OPTIONAL or RECOMMENDED.\n* Request and response parameters of type string, if present, MUST be a non-empty string.\n* Cleaned up text around status codes in responses, clarifying when they MUST be returned.\n* Added clarity around the `app_guid` request field.\n* Clarified the semantics of `plan_id` and `parameters` fields in the updating a service instance request body.\n* Clarified the default value of the `plan_updateable` field.\n* Clarified when `route_service_url` is REQUIRED and when brokers can return extra data in bindings.\n\n## [v2.11](https://github.com/openservicebrokerapi/servicebroker/blob/v2.11/spec.md)\n2016-11-15\n\n* Added field `bindable` to plan objects in /v2/catalog response. This allows services to have both bindable and non-bindable plans.\n\n## [v2.10](http://docs.pivotal.io/pivotalcf/1-9/services/api.html)\n2016-08-01\n\n* Service bind responses now include an optional field called `volume_mounts`. Backward incompatible changes to `volume_mounts` field in service bind response from experimental 2.9 format to final format.\n\n\n## [v2.9](http://docs.pivotal.io/pivotalcf/1-8/services/api.html)\n2016-06-14\n\n* `last_operation` endpoint now supports `service_id` and `plan_id` as request parameters.\n\n* A new field `operation` may now be returned by brokers in asynchronous responses for Provision, Update, Deprovision. This field enables brokers to provide an internal identifier for the operation that clients should provide back to the service broker when polling the `last_operation` endpoint.\n\n\n## [v2.8](http://docs.pivotal.io/pivotalcf/1-7/services/api.html)\n2015-11-8\n\n* In support for Route Services, service broker may now return a `route_service_url` in the response for a create binding request.\n\n* A broker must specify `requires: [\"route_forwarding\"]` in its catalog endpoint if it supports Route Services.\n\n* Clients may now send a new field `bind_resource` with the bind request, under which the parameters required for the binding are found. This would include, for example, `app_guid` for an app binding and `route` for a route binding. For backwards compatibility, `app_guid` will remain a top-level key in addition to being included in the `bind_resource`.\n\n\n## [v2.7](http://docs.pivotal.io/pivotalcf/1-6/services/api.html)\n2015-10-08\n\n* Added support for Asynchronous Operations. Brokers may now return a 202 Accepted in response to provision, update, or deprovision requests to indicate the requested operation is in progress.\n\n* The parameter `accepts_incomplete=true` must be passed by the broker client with requests for provision, update, or deprovision to indicate support for an asynchronous response. The broker can then choose to execute the request synchronously or asynchronously.\n\n* Added support for querying `last_operation` status at a new endpoint: `GET /v2/service_instances/:guid/last_operation`\n\n\n## v2.6\n2015-07-23\n\n* `app_guid` field is no longer guaranteed to be included with create service binding requests\n\n* New field `service_id` is required with update service instance requests\n\n## v2.5\n2015-06-23\n\n* Added support for Arbitrary Parameters: service-specific configuration parameters that can be included with provision, update and bind requests\n\n## v2.4\n2014-10-31\n\n* Added support for broker clients to change the service plan for a specified service instance using new Update Service Instance endpoint\n\n## v2.3\n2014-04-23\n\n* Added `dashboard_client` field to /v2/catalog to enable broker client to provision OAuth client for a service dashboard\n\n## v2.2\n2014-03-31\n\n* Added field `free` for service plan in catalog endpoint\n\n## v2.1\n2013-12-27\n\n* New field `app_guid` is required with bind requests\n"
        },
        {
          "name": "spec.md",
          "type": "blob",
          "size": 109.8251953125,
          "content": "# Open Service Broker API (master - might contain changes that are not yet released)\n\n## Table of Contents\n  - [API Overview](#api-overview)\n  - [Notations and Terminology](#notations-and-terminology)\n  - [Changes](#changes)\n    - [Change Policy](#change-policy-for-minor-versions)\n    - [Changes Since v2.16](#changes-since-v216)\n  - [Headers](#headers)\n    - [API Version Header](#api-version-header)\n    - [Originating Identity](#originating-identity)\n    - [Request Identity](#request-identity)\n  - [Platform to Service Broker Authentication](#platform-to-service-broker-authentication)\n  - [URL Properties](#url-properties)\n  - [Service Broker Errors](#service-broker-errors)\n  - [Content Type](#content-type)\n  - [Catalog Management](#catalog-management)\n  - [Synchronous and Asynchronous Operations](#synchronous-and-asynchronous-operations)\n    - [Synchronous Operations](#synchronous-operations)\n    - [Asynchronous Operations](#asynchronous-operations)\n  - [Blocking Operations](#blocking-operations)\n  - [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances)\n  - [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings)\n  - [Polling Interval and Duration](#polling-interval-and-duration)\n  - [Provisioning](#provisioning)\n  - [Fetching a Service Instance](#fetching-a-service-instance)\n  - [Updating a Service Instance](#updating-a-service-instance)\n  - [Binding](#binding)\n    - [Binding Rotation](#binding-rotation)\n    - [Types of Binding](#types-of-binding)\n  - [Fetching a Service Binding](#fetching-a-service-binding)\n  - [Unbinding](#unbinding)\n  - [Deprovisioning](#deprovisioning)\n  - [Orphan Mitigation](#orphan-mitigation)\n\n## API Overview\n\nThe Open Service Broker API defines an HTTP(S) interface between Platforms and\nService Brokers.\n\nThe Service Broker is the component of the service that implements the Service\nBroker API, for which a Platform is a client. Service Brokers are responsible\nfor advertising a catalog of Service Offerings and Service Plans to the\nPlatform, and acting on requests from the Platform for provisioning, binding,\nunbinding, and deprovisioning.\n\nIn general, provisioning reserves a resource on a service; we call this\nreserved resource a Service Instance. What a Service Instance represents can\nvary by service. Examples include a single database on a multi-tenant server,\na dedicated cluster, or an account on a web application.\n\nWhat a Service Binding represents MAY also vary by service. In general, creation\nof a Service Binding either generates credentials necessary for accessing the\nresource or provides the Service Instance with information for a configuration change.\n\nA Platform MAY expose services from one or many Service Brokers, and an\nindividual Service Broker MAY support one or many Platforms using different URL\nprefixes and credentials.\n\n## Notations and Terminology\n\n### Notational Conventions\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\n\"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to\nbe interpreted as described in [RFC 2119](https://tools.ietf.org/html/rfc2119).\n\n### Terminology\n\nThis specification defines the following terms:\n\n- *Application*: Often the entity using a Service Instance will be a piece of\n  software, however, this does not need to be the case. For the purposes of\n  this specification, the term \"Application\" will be used to represent all\n  entities that might make use of, and be bound to, a Service Instance.\n\n- *Platform*: The software that will manage the cloud environment into which\n  Applications are provisioned and Service Brokers are registered. Users will\n  not directly provision Services from Service Brokers, rather they will ask\n  the Platform to manage Services and interact with the Service Brokers for\n  them.\n\n- *Service*: A managed software offering that can be used by an Application.\n  Typically, Services will expose some API that can be invoked to perform\n  some action. However, there can also be non-interactive Services that can\n  perform the desired actions without direct prompting from the Application.\n\n- *Service Broker*: Service Brokers manage the lifecycle of Services. Platforms\n  interact with Service Brokers to provision, and manage, Service Instances\n  and Service Bindings.\n\n- *Service Offering*: The advertisement of a Service that a Service Broker\n  supports.\n\n- *Service Plan*: The representation of the costs and benefits for a given\n  variant of the Service Offering, potentially as a tier.\n\n- *Service Instance*: An instantiation of a Service Offering and Service Plan.\n\n- *Service Binding*: Represents the request to use a Service Instance. As part\n  of this request there might be a reference to the entity, also known as the\n  Application, that will use the Service Instance. Service Bindings will often\n  contain the credentials that can then be used to communicate with the Service\n  Instance.\n\n\n## Changes\n\n### Change Policy for Minor Versions\n\n* Existing endpoints and fields MUST NOT be removed or renamed.\n* New OPTIONAL endpoints, or new HTTP methods for existing endpoints, MAY be\nadded to enable support for new features.\n* New fields MAY be added to existing request/response messages.\nThese fields MUST be OPTIONAL and SHOULD be ignored by clients and servers\nthat do not understand them.\n\n### Changes Since v2.16\n\n* Add binding rotation fields to the spec and guidance on how to use the expiration fields for Service Binding\n* Remove ambiguity on provisioning status code and clarify 200 status with consistent language for depraction\n* Add context object to the response of fetching a Service Instance and turn into a non-requirement for Service Instances\n* Rename context to attributes and update openapi files and the spec with an example\n* Moved attributes to metadata and returns the metadata on fetch operations\n* Add guidance for orphan mitigation\n* Reconcile openapi and swagger files to match and generate identical clients and servers\n\nFor changes in older versions, see the [release notes](https://github.com/openservicebrokerapi/servicebroker/blob/master/release-notes.md).\n\n## Headers\nThe following HTTP Headers are defined for the operations detailed in this spec:\n\n| Header | Type | Description |\n| --- | --- | --- |\n| X-Broker-API-Version* | string | See [API Version Header](#api-version-header). |\n| X-Broker-API-Originating-Identity | string | See [Originating Identity](#originating-identity). |\n| X-Broker-API-Request-Identity | string | See [Request Identity](#request-identity). |\n\n\\* Headers with an asterisk are REQUIRED.\n\n### API Version Header\n\nRequests from the Platform to the Service Broker MUST contain a header that\ndeclares the version number of the Open Service Broker API that the Platform\nis using:\n\n`X-Broker-API-Version: 2.17`\n\nThe version numbers are in the format `MAJOR.MINOR` using semantic versioning.\n\nThis header allows Service Brokers to reject requests from Platforms for\nversions they do not support. While minor API revisions will always be\nadditive, it is possible that Service Brokers depend on a feature from a newer\nversion of the API that is supported by the Platform. In this scenario the\nService Broker MAY reject the request with `412 Precondition Failed` and\nprovide a message that informs the operator of the API version that is to be\nused instead.\n\nIf the request from the Platform to the Service Broker doesn't contain this\nheader, then the Service Broker MAY reject the request with `400 Bad Request`\nand provide a message that the header is required.\n\n### Originating Identity\n\nOften a Service Broker will need to know the identity of the user that\ninitiated the request from the Platform. For example, this might be needed for\nauditing or authorization purposes. In order to facilitate this, the Platform\nwill need to provide this identification information to the Service Broker on\neach request. Platforms MAY support this feature, and if they do, they MUST\nadhere to the following:\n- For any OSBAPI request that is the result of an action taken by a Platform's\n  user, there MUST be an associated `X-Broker-API-Originating-Identity` header on\n  that HTTP request.\n- Any OSBAPI request that is not associated with an action from a Platform's\n  user, such as the Platform refetching the catalog, MAY exclude the header from\n  that HTTP request.\n- If present on a request, the `X-Broker-API-Originating-Identity` header\n  MUST contain the identify information for the Platform's user that took\n  the action to cause the request to be sent.\n\nIf the Platform chooses to group multiple end-user operations into one request\nto the Broker, then the identity information associated with that one request\nMUST accurately reflect the desired identity associated for each individual\nchange.\n\nThe format of the header MUST be:\n\n```\nX-Broker-API-Originating-Identity: Platform value\n```\n\n`Platform` MUST be a non-empty string indicating the Platform from which\nthe request is being sent. The specific value SHOULD match the values\ndefined in the [profile](profile.md) document for the `context.platform`\nproperty. When `context` is sent as part of a message, this value MUST\nbe the same as the `context.platform` value.\n\n`value` MUST be a Base64 encoded string. The string MUST be a serialized\nJSON object. The specific properties will be Platform specific - see\nthe [profile](profile.md) document for more information.\n\nFor example:\n```\nX-Broker-API-Originating-Identity: cloudfoundry eyANCiAgInVzZXJfaWQiOiAiNjgzZWE3NDgtMzA5Mi00ZmY0LWI2NTYtMzljYWNjNGQ1MzYwIg0KfQ==\n```\n\nWhere the `value`, when decoded, is:\n```\n{\n  \"user_id\": \"683ea748-3092-4ff4-b656-39cacc4d5360\"\n}\n```\n\nNote that not all messages sent to a Service Broker are initiated by an\nend-user of the Platform. For example, during\n[Orphan Mitigation](#orphan-mitigation) or during the querying of the Service\nBroker's catalog, the Platform might not have an end-user with which to\nassociate the request, therefore in those cases the originating identity header\nwould not be included in those messages.\n\n### Request Identity\n\nA Platform might wish to uniquely identify a specific request as it flows throughout the system.\nFor example, this might be used for logging for request tracing purposes. In order to facilitate\nthis, Platforms will need to provide identification information to the Service Broker for each\nrequest. Platforms MAY support this feature, and if they do, they MUST adhere to the following:\n- For any OSBAPI request, there MUST be an associated `X-Broker-API-Request-Identity` header on\n  the HTTP request.\n- The Service Broker MAY include this value in log messages generated as a result of the request.\n- The Service Broker SHOULD include this header in the response to the request.\nThe format of the header MUST be:\n\n```\nX-Broker-API-Request-Identity: value\n```\n\n`value` MUST be a non-empty string indicating the identity of the\nrequest being sent. The specific value MAY be unique for each request\nsent to the broker. Using a GUID is RECOMMENDED.\n\n## Vendor Extension Fields\n\nSenders of messages defined by this specification MAY include additional\nfields within the JSON objects. When adding new fields, unique prefixes\nSHOULD be used for the field names to reduce the chances of conflicts with\nfuture specification defined fields or other extensions.\n\nReceivers of messages defined by this specification that contain unknown\nextension fields MUST ignore those fields and MUST NOT halt processing\nof those messages due to the presence of those fields. Receivers are under\nno obligation to understand or process unknown extension fields.\n\n## Platform to Service Broker Authentication\n\nWhile the communication between a Platform and Service Broker MAY be unsecure,\nit is RECOMMENDED that all communications between a Platform and a Service\nBroker are secured via TLS and authenticated. If communications are secured\nvia TLS, the Platform and Service Broker SHOULD agree whether the Service\nBroker will use a root-signed certificate or a self-signed certificate.\n\nUnless there is some out of band communication and agreement between a\nPlatform and a Service Broker, the Platform MUST authenticate with the\nService Broker using HTTP basic authentication (the `Authorization:` header)\non every request. This specification does not specify how Platform and Service\nBrokers agree on other methods of authentication.\n\nPlatforms and Service Brokers MAY agree on an authentication mechanism other\nthan basic authentication, but the specific agreements are not covered by this\nspecification. Please see the\n[Platform Features authentication mechanisms wiki document](https://github.com/openservicebrokerapi/servicebroker/wiki/Platform-Features)\nfor details on these mechanisms.\n\nIf authentication is used, the Service Broker MUST authenticate the request\nusing the predetermined authentication mechanism, and MUST return a `401 Unauthorized`\nresponse if the authentication fails.\n\nNote: Using an authentication mechanism that is agreed to via out of band\ncommunications could lead to interoperability issues with other Platforms.\n\n## URL Properties\n\nThis specification defines the following properties that might appear within\nURLs:\n- `service_id`\n- `plan_id`\n- `instance_id`\n- `binding_id`\n- `operation`\n\nWhile this specification places no restriction on the set of characters used\nwithin these strings, it is RECOMMENDED that these properties only contain\ncharacters from the \"Unreserved Characters\" as defined by\n[RFC3986](https://tools.ietf.org/html/rfc3986#section-2.3). In other words:\nuppercase and lowercase letters, decimal digits, hyphen, period, underscore\nand tilde.\n\nIf a character outside of the \"Unreserved Characters\" set is used, then it\nSHOULD be percent-encoded prior to being used as part of the HTTP request, per\n[RFC3986](https://tools.ietf.org/html/rfc3986#section-2.1).\n\n## Service Broker Errors\n\nWhen a request to a Service Broker fails, the Service Broker MUST return an\nappropriate HTTP response code. Where the specification defines the expected\nresponse code, that response code MUST be used.\n\nFor error responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| error | string | A single word in camel case that uniquely identifies the error condition. If present, MUST be a non-empty string. |\n| description | string | A user-facing error message explaining why the request failed. If present, MUST be a non-empty string. |\n| instance_usable | boolean | If an update or deprovisioning operation failed, this flag indicates whether or not the Service Instance is still usable. If `true`, the Service Instance can still be used, `false` otherwise. This field MUST NOT be present for errors of other operations. Defaults to `true`. |\n| update_repeatable | boolean | If an update operation failed, this flag indicates whether this update can be repeated or not. If `true`, the same update operation MAY be repeated and MAY succeed; if `false`, repeating the same update operation will fail again. This field MUST NOT be present for errors of other operations. Defaults to `true`. |\n\n### Error Codes\n\nThere are failure scenarios described throughout this specification for which\nthe `error` field MUST contain a specific string. Service Broker authors MUST\nuse these error codes for the specified failure scenarios.\n\n| Error | Reason | Expected Action |\n| --- | --- | --- |\n| AsyncRequired | This request requires client support for asynchronous service operations. | The query parameter `accepts_incomplete=true` MUST be included the request. |\n| ConcurrencyError | The Service Broker does not support concurrent requests that mutate the same resource. | Clients MUST wait until pending requests have completed for the specified resources. |\n| RequiresApp | The request body is missing the `app_guid` field. | The `app_guid` MUST be included in the request body. |\n| MaintenanceInfoConflict | The `maintenance_info.version` field provided in the request does not match the `maintenance_info.version` field provided in the Service Broker's [Catalog](#catalog-management). | The Platform SHOULD fetch the latest version of the Service Broker's [Catalog](#catalog-management). |\n\nUnless otherwise specified, an HTTP status code in the 4xx range MUST result in\nthe Service Broker's resources being semantically unchanged as a result of\nthe incoming request message. Additionally, an HTTP status code in the 5xx\nrange SHOULD result in the Service Broker's resources being semantically\nunchanged as a result of the incoming request message. Note, the 5xx error\ncase is a \"SHOULD\" instead of a \"MUST\" because it might not be possible for\na Service Broker to guarantee that it can revert all possible effects of a\nfailed attempt at the requested operation.\n\n## Content Type\n\nAll requests and responses defined in this specification with accompanying\nbodies SHOULD contain a `Content-Type` header set to `application/json`.\nIf the `Content-Type` is not set, Service Brokers and Platforms MAY still\nattempt to process the body. If a Service Broker rejects a request due\nto a mismatched `Content-Type` or the body is unprocessable it SHOULD\nrespond with `400 Bad Request`.\n\n## Catalog Management\n\nThe first endpoint that a Platform will interact with on the Service Broker is\nthe service catalog (`/v2/catalog`). This endpoint returns a list of all\nservices available on the Service Broker. Platforms query this endpoint from\nall Service Brokers in order to present an aggregated user-facing catalog.\n\nPeriodically, a Platform MAY re-query the service catalog endpoint for a\nService Broker to see if there are any changes to the list of services.\nService Brokers MAY add, remove or modify (metadata, Service Plans, etc.) the list of\nservices from previous queries.\n\nWhen determining what, if anything, has changed on a Service Broker, the\nPlatform MUST use the `id` of the resources (Service Offerings or Service Plans) as the only\nimmutable property and MUST use that to locate the same resource as was\nreturned from a previous query. Likewise, a Service Broker MUST NOT change the\n`id` of a resource across queries, otherwise a Platform will treat it as a\ndifferent resource.\n\nWhen a Platform receives different `id` values for the same type of resource,\neven if all of the other metadata in those resources are the exact same, it\nMUST treat them as separate instances of that resource.\n\nService Broker authors are expected to be cautious when removing Service Offerings and\nService Plans from their catalogs, as Platforms might have provisioned Service\nInstances of these Service Plans. For example, Platforms might restrict the actions\nthat users can perform on existing Service Instances if the associated Service Offering\nor Service Plan is deleted. Consider your deprecation strategy.\n\nPlatforms MAY have limits on the length of strings that they can handle or\ndisplay to end users, such as the description of a Service Offering or Service Plan. It\nis RECOMMENDED that strings do not exceed 255 characters to increase the\nlikelihood of having compatibility with any Platform.\n\nService Brokers and Platforms MAY support the\n[`ETag`](https://tools.ietf.org/html/rfc7232#section-2.3) and\n[`If-Modified-Since`](https://tools.ietf.org/html/rfc7232#section-3.3)\nHTTP headers to enable caching of the catalog.\n(See [RFC 7232](https://tools.ietf.org/html/rfc7232) for details.)\n\nThe following sections describe catalog requests and responses in the Service\nBroker API.\n\n### Request\n\n#### Route\n`GET /v2/catalog`\n\n#### cURL\n```\n$ curl http://username:password@service-broker-url/v2/catalog -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned upon successful processing of this request. The expected response body is below. |\n\n#### Body\n\nCLI clients will typically have restrictions on how names, such as Service Offering\nand Service Plan names, will be provided by users. Therefore, this specification\ndefines a \"CLI-friendly\" string as a short string that MUST only use\nalphanumeric characters, periods, and hyphens, with no spaces. This will make it\neasier for users when they have to type it as an argument on the command line.\nFor comparison purposes, Service Offering and Service Plan names MUST be treated as\ncase-sensitive strings.\n\nNote: In previous versions of the specification Service Offering and Service Plan names\nwere not allowed to use uppercase characters. However, this requirement was\nnot enforced and therefore to ensure backwards compatibility with existing\nService Brokers that might use uppercase characters the specification\nhas been changed.\n\nFor backwards compatibility reasons, this specification does not preclude\nthe use of CLI-unfriendly strings that might cause problems for command line\nparsers (or that are not very meaningful to users), such as `-`.\nIt is therefore RECOMMENDED that implementations avoid such strings.\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| services* | array of [Service Offering](#service-offering-object) objects | Schema of service objects defined below. MAY be empty. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Service Offering Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| name* | string | The name of the Service Offering. MUST be unique across all Service Offering objects returned in this response. MUST be a non-empty string. Using a CLI-friendly name is RECOMMENDED. |\n| id* | string | An identifier used to correlate this Service Offering in future requests to the Service Broker. This MUST be globally unique such that Platforms (and their users) MUST be able to assume that seeing the same value (no matter what Service Broker uses it) will always refer to this Service Offering. MUST be a non-empty string. Using a GUID is RECOMMENDED. |\n| description* | string | A short description of the service. MUST be a non-empty string. |\n| tags | array of strings | Tags provide a flexible mechanism to expose a classification, attribute, or base technology of a service, enabling equivalent services to be swapped out without changes to dependent logic in applications, buildpacks, or other services. E.g. mysql, relational, redis, key-value, caching, messaging, amqp. |\n| requires | array of strings | A list of permissions that the user would have to give the service, if they provision it. The only permissions currently supported are `syslog_drain`, `route_forwarding` and `volume_mount`. |\n| bindable* | boolean | Specifies whether Service Instances of the service can be bound to applications. This specifies the default for all Service Plans of this Service Offering. Service Plans can override this field (see [Service Plan Object](#service-plan-object)). |\n| instances_retrievable | boolean | Specifies whether the [Fetching a Service Instance](#fetching-a-service-instance) endpoint is supported for all Service Plans. |\n| bindings_retrievable | boolean | Specifies whether the [Fetching a Service Binding](#fetching-a-service-binding) endpoint is supported for all Service Plans. |\n| allow_context_updates | boolean | Specifies whether a Service Instance supports [Update](#updating-a-service-instance) requests when contextual data for the Service Instance in the Platform changes. |\n| metadata | object | An opaque object of metadata for a Service Offering. It is expected that Platforms will treat this as a blob. Note that there are [conventions](profile.md#service-metadata) in existing Service Brokers and Platforms for fields that aid in the display of catalog data. |\n| dashboard_client | [DashboardClient](profile.md#dashboard-client-object) | A Cloud Foundry extension described in [Catalog Extensions](profile.md#catalog-extensions). Contains the data necessary to activate the Dashboard SSO feature for this service. |\n| plan_updateable | boolean | Whether the Service Offering supports upgrade/downgrade for Service Plans by default. Service Plans can override this field (see [Service Plan](#service-plan-object)). Please note that the misspelling of the attribute `plan_updatable` as `plan_updateable` was done by mistake. We have opted to keep that misspelling instead of fixing it and thus breaking backward compatibility. Defaults to false. |\n| plans* | array of [Service Plan](#service-plan-object) objects | A list of Service Plans for this Service Offering, schema is defined below. MUST contain at least one Service Plan. |\n\n\\* Fields with an asterisk are REQUIRED.\n\nNote: Platforms will typically use the Service Offering name as an input parameter\nfrom their users to indicate which Service Offering they want to instantiate. Therefore,\nit is important that these values be unique for all Service Offerings that have been\nregistered with a Platform. To achieve this goal service providers often will\nprefix their Service Offering names with some unique value (such as the name of their\ncompany). Additionally, some Platforms might modify the Service Offering names before\npresenting them to their users. This specification places no requirements on\nhow Platforms might expose these values to their users.\n\n##### Service Plan Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| id* | string | An identifier used to correlate this Service Plan in future requests to the Service Broker. This MUST be globally unique such that Platforms (and their users) MUST be able to assume that seeing the same value (no matter what Service Broker uses it) will always refer to this Service Plan and for the same Service Offering. MUST be a non-empty string. Using a GUID is RECOMMENDED. |\n| name* | string | The name of the Service Plan. MUST be unique within the Service Offering. MUST be a non-empty string. Using a CLI-friendly name is RECOMMENDED. |\n| description* | string | A short description of the Service Plan. MUST be a non-empty string. |\n| metadata | object | An opaque object of metadata for a Service Plan. It is expected that Platforms will treat this as a blob. Note that there are [conventions](profile.md#service-metadata) in existing Service Brokers and Platforms for fields that aid in the display of catalog data. |\n| free | boolean | When false, Service Instances of this Service Plan have a cost. The default is true. |\n| bindable | boolean | Specifies whether Service Instances of the Service Plan can be bound to applications. This field is OPTIONAL. If specified, this takes precedence over the `bindable` attribute of the Service Offering. If not specified, the default is derived from the Service Offering. |\n| binding_rotatable | boolean | Whether a Service Binding of that Plan supports [Service Binding rotation](#binding-rotation). The default is false. |\n| plan_updateable | boolean | Whether the Plan supports upgrade/downgrade/sidegrade to another version. This field is OPTIONAL. If specificed, this takes precedence over the Service Offering's `plan_updateable` field. If not specified, the default is derived from the Service Offering. Please note that the attribute is intentionally misspelled as `plan_updateable` for legacy reasons. |\n| schemas | [Schemas](#schemas-object) | Schema definitions for Service Instances and Service Bindings for the Service Plan. |\n| maximum_polling_duration | integer | A duration, in seconds, that the Platform SHOULD use as the Service's [maximum polling duration](#polling-interval-and-duration). |\n| maintenance_info | [Maintenance Info](#maintenance-info-object) | Maintenance information for a Service Instance which is provisioned using the Service Plan. If provided, a version string MUST be provided and platforms MAY use this when [Provisioning](#provisioning) or [Updating](#updating-a-service-instance) a Service Instance. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Schemas Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| service_instance | [ServiceInstanceSchema](#service-instance-schema-object) | The schema definitions for creating and updating a Service Instance. |\n| service_binding | [ServiceBindingSchema](#service-binding-schema-object) | The schema definition for creating a Service Binding. Used only if the Service Plan is bindable. |\n\n##### Service Instance Schema Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| create | [InputParametersSchema](#input-parameters-schema-object) | The schema definition for creating a Service Instance. |\n| update | [InputParametersSchema](#input-parameters-schema-object) | The schema definition for updating a Service Instance. |\n\n##### Service Binding Schema Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| create | [InputParametersSchema](#input-parameters-schema-object) | The schema definition for creating a Service Binding. |\n\n##### Input Parameters Schema Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| parameters | JSON schema object | The schema definition for the input parameters. Each input parameter is expressed as a property within a JSON object. |\n\nThe following rules apply if `parameters` is included anywhere in the catalog:\n* Platforms MUST support at least\n[JSON Schema draft v4](http://json-schema.org/).\n* Platforms SHOULD be prepared to support later versions of JSON schema.\n* The `$schema` key MUST be present in the schema declaring the version of JSON\nschema being used.\n* Schemas MUST NOT contain any external references.\n* Schemas MUST NOT be larger than 64kB.\n\n##### Maintenance Info Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| version* | string | This MUST be a string conforming to a [semantic version 2.0](https://semver.org/spec/v2.0.0.html). The Platform MAY use this field to determine whether a maintenance update is available for a Service Instance. |\n| description | string | This SHOULD be a string describing the impact of the maintenance update, for example, important version changes, configuration changes, default value changes, etc. The Platform MAY present this information to the user before they trigger the maintenance update. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"services\": [{\n    \"name\": \"fake-service\",\n    \"id\": \"acb56d7c-XXXX-XXXX-XXXX-feb140a59a66\",\n    \"description\": \"A fake service.\",\n    \"tags\": [\"no-sql\", \"relational\"],\n    \"requires\": [\"route_forwarding\"],\n    \"bindable\": true,\n    \"instances_retrievable\": true,\n    \"bindings_retrievable\": true,\n    \"allow_context_updates\": true,\n    \"metadata\": {\n      \"provider\": {\n        \"name\": \"The name\"\n      },\n      \"listing\": {\n        \"imageUrl\": \"http://example.com/cat.gif\",\n        \"blurb\": \"Add a blurb here\",\n        \"longDescription\": \"A long time ago, in a galaxy far far away...\"\n      },\n      \"displayName\": \"The Fake Service Broker\"\n    },\n    \"plan_updateable\": true,\n    \"plans\": [{\n      \"name\": \"fake-plan-1\",\n      \"id\": \"d3031751-XXXX-XXXX-XXXX-a42377d3320e\",\n      \"description\": \"Shared fake Server, 5tb persistent disk, 40 max concurrent connections.\",\n      \"free\": false,\n      \"metadata\": {\n        \"max_storage_tb\": 5,\n        \"costs\":[\n            {\n               \"amount\":{\n                  \"usd\":99.0\n               },\n               \"unit\":\"MONTHLY\"\n            },\n            {\n               \"amount\":{\n                  \"usd\":0.99\n               },\n               \"unit\":\"1GB of messages over 20GB\"\n            }\n         ],\n        \"bullets\": [\n          \"Shared fake server\",\n          \"5 TB storage\",\n          \"40 concurrent connections\"\n        ]\n      },\n      \"schemas\": {\n        \"service_instance\": {\n          \"create\": {\n            \"parameters\": {\n              \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"billing-account\": {\n                  \"description\": \"Billing account number used to charge use of shared fake server.\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"update\": {\n            \"parameters\": {\n              \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"billing-account\": {\n                  \"description\": \"Billing account number used to charge use of shared fake server.\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"service_binding\": {\n          \"create\": {\n            \"parameters\": {\n              \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"billing-account\": {\n                  \"description\": \"Billing account number used to charge use of shared fake server.\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"maintenance_info\": {\n        \"version\": \"2.1.1+abcdef\",\n        \"description\": \"OS image update.\\nExpect downtime.\"\n      }\n    }, {\n      \"name\": \"fake-plan-2\",\n      \"id\": \"0f4008b5-XXXX-XXXX-XXXX-dace631cd648\",\n      \"description\": \"Shared fake Server, 5tb persistent disk, 40 max concurrent connections. 100 async.\",\n      \"free\": false,\n      \"metadata\": {\n        \"max_storage_tb\": 5,\n        \"costs\":[\n            {\n               \"amount\":{\n                  \"usd\":199.0\n               },\n               \"unit\":\"MONTHLY\"\n            },\n            {\n               \"amount\":{\n                  \"usd\":0.99\n               },\n               \"unit\":\"1GB of messages over 20GB\"\n            }\n         ],\n        \"bullets\": [\n          \"40 concurrent connections\"\n        ]\n      }\n    }]\n  }]\n}\n```\n\n## Synchronous and Asynchronous Operations\n\nPlatforms expect prompt responses to all API requests in order to provide\nusers with fast feedback. Service Broker authors SHOULD implement their\nService Brokers to respond promptly to all requests but will need to decide\nwhether to implement synchronous or asynchronous responses. Service Brokers\nthat can guarantee completion of the requested operation with the response\nSHOULD return the synchronous response. Service Brokers that cannot guarantee\ncompletion of the operation with the response SHOULD implement the\nasynchronous response.\n\nProviding a synchronous response for a provision, update, or bind operation\nbefore actual completion causes confusion for users as their service might not\nbe usable and they have no way to find out when it will be. Asynchronous\nresponses set expectations for users that an operation is in progress and can\nalso provide updates on the status of the operation.\n\nSupport for synchronous or asynchronous responses MAY vary by Service\nOffering, even by Service Plan.\n\n### Synchronous Operations\n\nTo execute a request synchronously, the Service Broker need only return the\nusual status codes: `201 Created` for provision and bind, and `200 OK` for\nupdate, unbind, and deprovision. `200 OK` MAY be returned synchronously by\nService Brokers that accept provisioning requests with unchanged parameters\nand synchronous operations.\n\nPlatforms that rely on eventual consistency are RECOMMENDED to use `409 Conflict`\nas a no-op response and SHOULD use the `last_operation` endpoint to verify the status of\nthe provisioning request instead in asynchronous mode.\n\nService Brokers that support synchronous responses for provision, update, and\ndelete can ignore the `accepts_incomplete=true` query parameter if it is\nprovided by the client.\n\n### Asynchronous Operations\n\nFor a Service Broker to return an asynchronous response, the query parameter\n`accepts_incomplete=true` MUST be included the request. If the parameter is not\nincluded or is set to `false`, and the Service Broker cannot fulfil the request\nsynchronously (guaranteeing that the operation is complete on response), then\nthe Service Broker MUST reject the request with the status code `422\nUnprocessable Entity` and a response body containing error code\n`\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The\nerror response MAY include a helpful error message in the `description` field\nsuch as `\"This Service Plan requires client support for asynchronous service\noperations.\"`.\n\nIf the query parameter described above is present, and the Service Broker\nexecutes the request asynchronously, the Service Broker MUST return the\nasynchronous response `202 Accepted`.\n\nAn asynchronous response triggers the Platform to poll the Service Instance\nor Service Binding's `last_operation` endpoint until the Service Broker\nindicates that the requested operation has succeeded or failed. Service Brokers\nMAY include a status message with each response for the `last_operation`\nendpoint that provides visibility to end users as to the progress of the\noperation.\n\n## Blocking Operations\n\nService Brokers MAY choose the degree to which they support concurrent\nrequests, ranging from not supporting them at all to only supporting them\nin selective situations. If a Service Broker receives a request that it is\nnot able to process due a concurrency issue then the Service Broker MUST\nreject the request with a HTTP `422 Unprocessable Entity` and a response body\ncontaining error code `\"ConcurrencyError\"` (see\n[Service Broker Errors](#service-broker-errors)). The error response MAY include\na helpful error message in the `description` field such as `\"Another operation\nfor this Service Instance is in progress.\"`.\n\nUpon receiving this error response, Platforms MUST NOT perform\n[Orphan Mitigation](#orphan-mitigation).\n\nBrokers MAY choose to treat the creation of a Service Binding as a mutation of\nthe corresponding Service Instance - it is an implementation choice. Doing so\nwould cause Platforms to serialize multiple Service Binding creation requests\nwhen they are directed at the same Service Instance if concurrent updates are\nnot supported.\n\n## Polling Last Operation for Service Instances\n\nWhen a Service Broker returns status code `202 Accepted` for\n[Provision](#provisioning), [Update](#updating-a-service-instance), or\n[Deprovision](#deprovisioning), the Platform will begin polling the\n`/v2/service_instances/:instance_id/last_operation` endpoint to obtain the\nstate of the last requested operation.\n\nReturning `\"state\": \"succeeded\"` or `\"state\": \"failed\"` will cause the Platform\nto cease polling.\n\n### Request\n\n#### Route\n`GET /v2/service_instances/:instance_id/last_operation`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n#### Parameters\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id | string | If present, it MUST be the ID of the Service Offering being used. |\n| plan_id | string | If present, it MUST be the ID of the Service Plan for the Service Instance. If this endpoint is being polled as a result of changing the Service Plan through a [Service Instance Update](#updating-a-service-instance), the ID of the Service Plan prior to the update MUST be used. |\n| operation | string | A Service Broker-provided identifier for the operation. When a value for `operation` is included with asynchronous responses for [Provision](#provisioning), [Update](#updating-a-service-instance), and [Deprovision](#deprovisioning) requests, the Platform MUST provide the same value using this query parameter as a percent-encoded string. If present, MUST be a non-empty string. |\n\nNote: Although the request query parameters `service_id` and `plan_id` are not\nmandatory, the Platform SHOULD include them on all `last_operation` requests\nit makes to Service Brokers.\n\n#### cURL\n```\n$ curl http://username:password@service-broker-url/v2/service_instances/:instance_id/last_operation -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned upon successful processing of this request. The expected response body is below. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 404 Not Found | MUST be returned if the Service Instance being polled does not exist. |\n| 410 Gone | Appropriate only for asynchronous delete operations. The Platform MUST consider this response a success and forget about the resource. Returning this while the Platform is polling for create or update operations SHOULD be interpreted as an invalid response and the Platform SHOULD continue polling. |\n\nResponses with any other status code SHOULD be interpreted as an error or\ninvalid response. The Platform SHOULD continue polling until the Service Broker\nreturns a valid response or the\n[maximum polling duration](#polling-interval-and-duration) is reached.\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| state* | string | Valid values are `in progress`, `succeeded`, and `failed`. While `\"state\": \"in progress\"`, the Platform SHOULD continue polling. A response with `\"state\": \"succeeded\"` or `\"state\": \"failed\"` MUST cause the Platform to cease polling. |\n| description | string | A user-facing message that can be used to tell the user details about the status of the operation. If present, MUST be a non-empty string. |\n| instance_usable | boolean | If an update or deprovisioning operation failed, this flag indicates whether or not the Service Instance is still usable. If `true`, the Service Instance can still be used, `false` otherwise. This field MUST NOT be present for errors of other operations. Defaults to `true`. |\n| update_repeatable | boolean | If an update operation failed, this flag indicates whether this update can be repeated or not. If `true`, the same update operation MAY be repeated and MAY succeed; if `false`, repeating the same update operation will fail again. This field MUST NOT be present for errors of other operations. Defaults to `true`. |\n\nThe response MAY also include the `Retry-After` HTTP header. This header will\nindicate how long the Platform SHOULD wait before polling again and is\nintended to prevent unnecessary, and premature, calls to the `last_operation`\nendpoint. It is RECOMMENDED that the header include a duration rather than a\ntimestamp.\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"state\": \"in progress\",\n  \"description\": \"Creating service (10% complete).\"\n}\n```\n\nFor asynchronous provision operations, if the response contains\n`\"state\": \"failed\"` then the Platform might need to perform\n[Orphan Mitigation](#orphan-mitigation).\n\nService Brokers SHOULD NOT forget the state of an operation immediately after\nreturning a `\"succeeded\"` or `\"failed\"` state in case the Platform needs to ask\nagain.\n\n## Polling Last Operation for Service Bindings\n\nWhen a broker returns status code `202 Accepted` for [Binding](#binding) or\n[Unbinding](#unbinding), the Platform will begin polling the\n`/v2/service_instances/:instance_id/service_bindings/:binding_id/last_operation`\nendpoint to obtain the state of the last requested operation.\n\nReturning `\"state\": \"succeeded\"` or `\"state\": \"failed\"` will cause the Platform\nto cease polling and, in the case of a [Binding](#binding) request, information\nregarding the Service Binding can then immediately be fetched using the\n[Fetching a Service Binding](#fetching-a-service-binding) endpoint.\n\n### Request\n\n#### Route\n`GET /v2/service_instances/:instance_id/service_bindings/:binding_id/last_operation`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n`:binding_id` MUST be the ID of a previously provisioned Service Binding for that\ninstance.\n\n#### Parameters\n\nThe request provides these query string parameters as useful hints for brokers.\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id | string | ID of the Service Offering from the catalog. If present, MUST be a non-empty string. |\n| plan_id | string | ID of the Service Plan from the catalog. If present, MUST be a non-empty string. |\n| operation | string | A broker-provided identifier for the operation. When a value for `operation` is included with asynchronous responses for [Binding](#binding) and [Unbinding](#unbinding) requests, the Platform MUST provide the same value using this query parameter as a URL-encoded string. If brokers do not return this `operation` field, only one asynchronous operation MAY be supported at a time. If present, MUST be a non-empty string. |\n\nNote: Although the request query parameters `service_id` and `plan_id` are not\nmandatory, the Platform SHOULD include them on all `last_operation` requests it\nmakes to Service Brokers.\n\n#### cURL\n```\n$ curl http://username:password@broker-url/v2/service_instances/:instance_id/service_bindings/:binding_id/last_operation\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned upon successful processing of this request. The expected response body is below. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 404 Not Found | MUST be returned if the Service Binding being polled does not exist. |\n| 410 Gone | Appropriate only for asynchronous delete operations. The Platform MUST consider this response a success and remove the resource from its database. Returning this while the Platform is polling for create operations SHOULD be interpreted as an invalid response and the Platform SHOULD continue polling. |\n\nResponses with any other status code SHOULD be interpreted as an error or\ninvalid response. The Platform SHOULD continue polling until the broker returns\na valid response or the\n[maximum polling duration](#polling-interval-and-duration) is reached.\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response field | Type | Description |\n| --- | --- | --- |\n| state* | string | Valid values are `in progress`, `succeeded`, and `failed`. While `\"state\": \"in progress\"`, the Platform SHOULD continue polling. A response with `\"state\": \"succeeded\"` or `\"state\": \"failed\"` MUST cause the Platform to cease polling. |\n| description | string | A user-facing message that can be used to tell the user details about the status of the operation. |\n\nThe response MAY also include the `Retry-After` HTTP header. This header will\nindicate how long the Platform SHOULD wait before polling again and is\nintended to prevent unnecessary, and premature, calls to the `last_operation`\nendpoint. It is RECOMMENDED that the header include a duration rather than a\ntimestamp.\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"state\": \"in progress\",\n  \"description\": \"Creating binding (10% complete).\"\n}\n```\n\nIf the response contains `\"state\": \"failed\"`, then the Platform might need to\nperform [Orphan Mitigation](#orphan-mitigation).\n\nService Brokers SHOULD NOT forget the state of an operation immediately after\nreturning a `\"succeeded\"` or `\"failed\"` state in case the Platform needs to ask\nagain.\n\n## Polling Interval and Duration\n\nThe frequency and maximum duration of polling MAY vary by Platform.\nAdditionally, Service Brokers can specify the maximum time a Platform SHOULD\npoll via the `maximum_polling_duration` field returned by the\n[Service Plan Object](#service-plan-object). If either the Platform or Service\nPlan's maximum polling duration is reached, the Platform SHOULD cease polling\nand the operation state MUST be considered `failed`.\n\n## Provisioning\n\nWhen the Service Broker receives a provision request from the Platform, it\nMUST take whatever action is necessary to create a new resource. What\nprovisioning represents varies by Service Offering and Service Plan, although there are several\ncommon use cases. For a MySQL service, provisioning could result in an empty\ndedicated database server running on its own VM or an empty schema on a shared\ndatabase server. For non-data services, provisioning could just mean an\naccount on an multi-tenant SaaS application.\n\n### Request\n\n#### Route\n`PUT /v2/service_instances/:instance_id`\n\n`:instance_id` MUST be a globally unique non-empty string.\nThis ID will be used for future requests (bind and deprovision), so the\nService Broker will use it to correlate the resource it creates.\n\nPlatforms SHOULD NOT reuse IDs, since Service Brokers MAY NOT support this.\n\n#### Parameters\n| Parameter Name | Type | Description |\n| --- | --- | --- |\n| accepts_incomplete | boolean | A value of true indicates that the Platform and its clients support asynchronous Service Broker operations. If this parameter is not included in the request, and the Service Broker can only provision a Service Instance of the requested Service Plan asynchronously, the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n#### Body\n| Request Field | Type | Description |\n| --- | --- | --- |\n| service_id* | string | MUST be the ID of a Service Offering from the catalog for this Service Broker. |\n| plan_id* | string | MUST be the ID of a Service Plan from the Service Offering that has been requested. |\n| context | object | Contextual data for the Service Instance. `context` will replace `organization_guid` and `space_guid` in future versions of the specification - in the interim both SHOULD be used to ensure interoperability with old and new implementations. |\n| organization_guid* | string | Deprecated in favor of `context`. The Platform GUID for the organization under which the Service Instance is to be provisioned. Although most Service Brokers will not use this field, it might be helpful for executing operations on a user's behalf. MUST be a non-empty string. |\n| space_guid* | string | Deprecated in favor of `context`. The identifier for the project space within the Platform organization. Although most Service Brokers will not use this field, it might be helpful for executing operations on a user's behalf. MUST be a non-empty string. |\n| parameters | object | Configuration parameters for the Service Instance. Service Brokers SHOULD ensure that the client has provided valid configuration parameters and values for the operation. |\n| maintenance_info | [Maintenance Info](#maintenance-info-object) | If a Service Broker provides maintenance information for a Service Plan in its [Catalog](#catalog-management), a Platform MAY provide the same maintenance information when provisioning a Service Instance. Any field except for `maintenance_info.version` will be ignored. This field can be used to ensure that the end-user of a Platform is provisioning what they are expecting since maintenance information can be used to describe important information (such as the version of the operating system the Service Instance will run on). If a Service Broker's catalog has changed and new maintenance information version is available for the Service Plan being provisioned, then the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"organization_guid\": \"org-guid-here\",\n  \"space_guid\": \"space-guid-here\",\n  \"parameters\": {\n    \"parameter1\": 1,\n    \"parameter2\": \"foo\"\n  },\n  \"maintenance_info\": {\n    \"version\": \"2.1.1+abcdef\",\n  }\n}\n```\n\n#### cURL\n```\n$ curl http://username:password@service-broker-url/v2/service_instances/:instance_id?accepts_incomplete=true -d '{\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"organization_guid\": \"org-guid-here\",\n  \"space_guid\": \"space-guid-here\",\n  \"parameters\": {\n    \"parameter1\": 1,\n    \"parameter2\": \"foo\"\n  }\n}' -X PUT -H \"X-Broker-API-Version: 2.17\" -H \"Content-Type: application/json\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | SHOULD be returned if the Service Instance already exists, is fully provisioned, and the requested parameters are identical to the existing Service Instance. The expected response body is below. *This response is only valid in synchronous operations*. |\n| 201 Created | MUST be returned if the Service Instance was provisioned as a result of this request. The expected response body is below. |\n| 202 Accepted | MUST be returned if the Service Instance provisioning is in progress. The `operation` string MUST match that returned for the original request. This triggers the Platform to poll the [Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint for operation status. Note that a re-sent `PUT` request MUST return a `202 Accepted`, not a `200 OK`, if the Service Instance is not yet fully provisioned. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 409 Conflict | MUST be returned if a Service Instance with the same id already exists or is being provisioned but with different attributes. |\n| 422 Unprocessable Entity | MUST be returned if the Service Broker only supports asynchronous provisioning for the requested Service Plan and the request did not include `?accepts_incomplete=true`. The response body MUST contain error code `\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service Plan requires client support for asynchronous service operations.\"`. This MUST also be returned if the `maintenance_info.version` provided in the request does not match the `maintenance_info.version` described for the Service Plan in the Service Broker's [catalog](#catalog-management). In this case, the response body MUST contain error code `\"MaintenanceInfoConflict\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"The maintenance information for the requested Service Plan has changed.\"`. |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform might need to perform [Orphan Mitigation](#orphan-mitigation).\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| dashboard_url | string | The URL of a web-based management user interface for the Service Instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed (`9189kdfsk0vfnku` in the example below). Note: a Service Broker that wishes to return `dashboard_url` for a Service Instance MUST return it with the initial response to the provision request, even if the service is provisioned asynchronously. If present, MUST be a string or null. |\n| operation | string | For asynchronous responses, Service Brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the Platform with requests to the [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint in a percent-encoded query parameter. If present, MAY be null, and MUST NOT contain more than 10,000 characters. |\n| metadata | [ServiceInstanceMetadata](#service-instance-metadata) object | An OPTIONAL object containing metadata for the Service Instance. |\n```\n{\n  \"dashboard_url\": \"http://example-dashboard.example.com/9189kdfsk0vfnku\",\n  \"operation\": \"task_10\",\n  \"metadata\": {\n    \"labels\": {\n      \"key1\" : \"value1\",\n      \"key2\" : \"value2\"\n    },\n    attributes: {\n      \"broker.generated.attr1\": \"value1\",\n      \"broker.generated.attr2\": \"value2\"\n    }\n  }\n}\n```\n\n## Fetching a Service Instance\n\nIf `\"instances_retrievable\" :true` is declared for a Service Offering in the\n[Catalog](#catalog-management) endpoint, Service Brokers MUST support this\nendpoint for all Service Plans of the Service Offering and this endpoint MUST be available\nimmediately after the\n[Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances)\nendpoint returns `\"state\": \"succeeded\"` for a [Provisioning](#provisioning)\noperation. Otherwise, Platforms SHOULD NOT attempt to call this endpoint under\nany circumstances.\n\nBy polling this endpoint, Platforms MAY refresh their view of a successfully provisioned Service Instance, and discover out-of-bands changes that were applied on a Service Instance (such as parameters, dashboard url or maintenance info).\n\n### Request\n\n##### Route\n`GET /v2/service_instances/:instance_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n#### Parameters\n\nThe request provides these query string parameters as useful hints for brokers.\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id | string | ID of the Service Offering from the catalog. If present, MUST be a non-empty string. |\n| plan_id | string | ID of the Service Plan from the catalog. If present, MUST be a non-empty string. |\n\n##### cURL\n```\n$ curl 'http://username:password@broker-url/v2/service_instances/:instance_id' -X GET -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | The expected response body is below. |\n| 404 Not Found | MUST be returned if the Service Instance does not exist or if a provisioning operation is still in progress. |\n| 422 Unprocessable Entity | MUST be returned if the Service Instance is being updated and therefore cannot be fetched at this time. The response body MUST contain error code `\"ConcurrencyError\"` (see [Service Broker Errors](#service-broker-errors)). |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform MUST continue to remember the Service Instance.\n\n##### Body\n\nFor success responses, the following fields are defined:\n\n| Response field | Type | Description |\n| --- | --- | --- |\n| service_id | string | The ID of the Service Offering from the catalog that is associated with the Service Instance. |\n| plan_id | string | The ID of the Service Plan from the catalog that is associated with the Service Instance. |\n| dashboard_url | string | The URL of a web-based management user interface for the Service Instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed (`9189kdfsk0vfnku` in the example below). Note: a Service Broker that wishes to return `dashboard_url` for a Service Instance MUST return it with the initial response to the provision request, even if the service is provisioned asynchronously. |\n| parameters | object | Configuration parameters for the Service Instance. |\n| maintenance_info | [Maintenance Info](#maintenance-info-object) | If a Service Broker provides maintenance information for a Service Plan in its [Catalog](#catalog-management), a Broker MAY return the maintenance information currently associated with the Service Instance. Any field except for `maintenance_info.version` SHOULD be ignored by the Platform. This field MAY be used by the Platform to inform the end-user of unattended maintenances that were triggered out-of-band and applied to the Service Instance. |\n| metadata | [ServiceInstanceMetadata](#service-instance-metadata) object | An OPTIONAL object containing metadata for the Service Instance. |\n\nService Brokers MAY choose to not return some or all parameters when a Service Instance is fetched - for example,\nif it contains sensitive information.\n\n```\n{\n  \"dashboard_url\": \"http://example-dashboard.example.com/9189kdfsk0vfnku\",\n  \"parameters\": {\n    \"billing-account\": \"abcde12345\"\n  },\n  \"metadata\": {\n    \"labels\": {\n      \"key1\" : \"value1\",\n      \"key2\" : \"value2\"\n    },\n    attributes: {\n      \"broker.generated.attr1\": \"value1\",\n      \"broker.generated.attr2\": \"value2\"\n    }\n  }\n}\n```\n\n## Updating a Service Instance\n\nBy implementing this endpoint, Service Broker authors can:\n* Enable users to modify the Service Plan of a Service Instance. By changing the\n  Service Plan, users can upgrade or downgrade their Service Instance to other\n  plans.\n* Enable users to modify the parameters of a Service Instance. By modifying\n  parameters, users can change configuration options that are specific to a\n  Service or Service Plan.\n* Enable Platforms to send an update request for a Service Instance containing\n  only contextual data (no changes to the Service Plan or parameters). This MAY\n  be used by Platforms to let Service Brokers know when contextual information\n  for a Service Instance has changed (i.e. `instance_name` in the\n  [Cloud Foundry Context Object](profile.md#cloud-foundry-context-object). To\n  enable support for Platforms to send an update request for a Service Instance\n  containing only contextual data, a Service Broker MUST declare support by\n  including `\"allow_context_updates\": true` in its\n  [catalog endpoint](#catalog-management).\n* Enable Platforms to update maintenance information (allowing users to perform\n  maintenance on their Service Instance, such as upgrading the underlying operating\n  system the Service Instance is running on).\n\nTo enable support for the update of the Service Plan, a Service Broker MUST declare\nsupport per Service Offering by including `\"plan_updateable\": true` in either the\nService Offering or Service Plan in its [catalog endpoint](#catalog-management).\n\nIf `\"plan_updateable\": true` is declared for a Service Plan in the\n[Catalog](#catalog-management) endpoint, the Platform MAY request a Service Plan\nchange on a Service Instance using the given Service Plan. Otherwise, Platforms\nMUST NOT make any Service Plan change requests to the Service Broker for any\nService Instance using the given Service Plan, but MAY request an update to the\nService Instance parameters or perform maintenance on the Service Instance.\n\nNot all permutations of Service Plan changes are expected to be supported. For\nexample, a service might support upgrading from Service Plan \"shared small\" to\n\"shared large\" but not to Service Plan \"dedicated\". It is up to the Service\nBroker to validate whether a particular permutation of Service Plan change is\nsupported. If a particular Service Plan change is not supported, the Service\nBroker SHOULD return a meaningful error message in response.\n\n### Request\n\n#### Route\n`PATCH /v2/service_instances/:instance_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n#### Parameters\n| Parameter Name | Type | Description |\n| --- | --- | --- |\n| accepts_incomplete | boolean | A value of true indicates that the Platform and its clients support asynchronous Service Broker operations. If this parameter is not included in the request, and the Service Broker can only update a Service Instance of the requested Service Plan asynchronously, the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n#### Body\n\n| Request Field | Type | Description |\n| --- | --- | --- |\n| context | object | Contextual data for the Service Instance. |\n| service_id* | string | MUST be the ID of a Service Offering from the catalog for this Service Broker. |\n| plan_id | string | If present, MUST be the ID of a Service Plan from the Service Offering that has been requested. If this field is not present in the request message, then the Service Broker MUST NOT change the Service Plan of the Service Instance as a result of this request. |\n| parameters | object | Configuration parameters for the Service Instance. Service Brokers SHOULD ensure that the client has provided valid configuration parameters and values for the operation. See \"Note\" below. |\n| previous_values | [PreviousValues](#previous-values-object) | Information about the Service Instance prior to the update. |\n| maintenance_info | [Maintenance Info](#maintenance-info-object) | If a Service Broker provides maintenance information for a Service Plan in its [Catalog](#catalog-management), a Platform MAY provide the same maintenance information when updating a Service Instance. Any field except for `maintenance_info.version` will be ignored. This field can be used to perform maintenance on a Service Instance (for example, to upgrade the underlying operating system the Service Instance is running on). If a Service Broker's catalog has changed and new maintenance information version is available for the Service Plan that the Service Instance being updated is using, then the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Previous Values Object\n\n| Request Field | Type | Description |\n| --- | --- | --- |\n| service_id | string | Deprecated; determined to be unnecessary as the value is immutable. If present, it MUST be the ID of the Service Offering for the Service Instance. |\n| plan_id | string | If present, it MUST be the ID of the Service Plan prior to the update. |\n| organization_id | string | Deprecated as it was redundant information. The organization ID for the Service Instance MUST be provided by Platforms in the top-level field `context`. If present, it MUST be the ID of the organization specified for the Service Instance. |\n| space_id | string | Deprecated as it was redundant information. The space ID for the Service Instance MUST be provided by Platforms in the top-level field `context`. If present, it MUST be the ID of the space specified for the Service Instance. |\n| maintenance_info | [Maintenance Info](#maintenance-info-object) | The maintenance information that was used when the Service Instance was [provisioned](#provisioning) or when it was last [updated](#updating-a-service-instance). |\n\nNote: The `parameters` specified are expected to be the values specified\nby an end-user. Whether the user chooses to include the complete set of\nconfiguration options or just a subset (or even none) is their choice. How a\nService Broker interprets these parameters (including the absence of any\nparticular parameter) is out of scope of this specification - with the\nexception that if this field is not present in the request then the\nService Broker MUST NOT change the parameters of the instance as a result of\nthis request.\n\nSince some Service Instances will provide a `dashboard_url`, it is possible\nthat a user has modified some of these parameters via the dashboard and\ntherefore the Platform might not be aware of these changes. For this reason,\nPlatforms SHOULD NOT include any parameters on the request that\nthe user did not explicitly specify in their request for the update.\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"parameters\": {\n    \"parameter1\": 1,\n    \"parameter2\": \"foo\"\n  },\n  \"previous_values\": {\n    \"plan_id\": \"old-service-plan-id-here\",\n    \"service_id\": \"service-offering-id-here\",\n    \"organization_id\": \"org-guid-here\",\n    \"space_id\": \"space-guid-here\",\n    \"maintenance_info\": {\n      \"version\": \"2.1.1+abcdef\",\n    }\n  },\n  \"maintenance_info\": {\n    \"version\": \"2.1.1+abcdef\",\n  }\n}\n```\n\n#### cURL\n```\n$ curl http://username:password@service-broker-url/v2/service_instances/:instance_id?accepts_incomplete=true -d '{\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"parameters\": {\n    \"parameter1\": 1,\n    \"parameter2\": \"foo\"\n  },\n  \"previous_values\": {\n    \"plan_id\": \"old-service-plan-id-here\",\n    \"service_id\": \"service-offering-id-here\",\n    \"organization_id\": \"org-guid-here\",\n    \"space_id\": \"space-guid-here\"\n  }\n}' -X PATCH -H \"X-Broker-API-Version: 2.17\" -H \"Content-Type: application/json\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned if the request's changes have been applied or MAY be returned if the request's changes have had no effect. The expected response body is `{}`. |\n| 202 Accepted | MUST be returned if the Service Instance update is in progress. The `operation` string MUST match that returned for the original request. This triggers the Platform to poll the [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint for operation status. Note that a re-sent `PATCH` request MUST return a `202 Accepted`, not a `200 OK`, if the requested update has not yet completed. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 422 Unprocessable entity | MUST be returned if the requested change is not supported or if the request cannot currently be fulfilled due to the state of the Service Instance (e.g. Service Instance utilization is over the quota of the requested Service Plan). Additionally, this MUST be returned if the Service Broker only supports asynchronous update for the requested Service Plan and the request did not include `?accepts_incomplete=true`; in this case the response body MUST contain a error code `\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service Plan requires client support for asynchronous service operations.\"`. Additionally, this MUST be returned if the `maintenance_info.version` provided in the request does not match the `maintenance_info.version` described for the Service Plan in the Service Broker's [catalog](#catalog-management). In this case, the response body MUST contain error code `\"MaintenanceInfoConflict\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"The maintenance information for the requested Service Plan has changed.\"`. |\n\nResponses with any other status code MUST be interpreted as a failure.\nWhen the response includes a 4xx or 5xx status code, the Service Broker MUST\nNOT apply any of the requested changes to the Service Instance.\n\nWhen an update fails, the Service Instance can still be usable or unusable\nor its state could be unknown to the Platform. If a Service Instance became\nunusable, another update MAY repair the Service Instance.\nThe Platform SHOULD NOT allow the creation of new bindings of an unusable\nService Instance until the instance has been deleted or repaired by a\nsubsequent update.\nIf the broker does not indicate in the\n[Error response](#service-broker-errors) or\n[Last Operation response](#polling-last-operation-for-service-instances)\nwhether the Service Instance is usable or not, the Platform SHOULD assume\nit is still usable.\n\nA failed update might be repeatable. If the Service Broker\nindicates in the [Error response](#service-broker-errors) or\n[Last Operation response](#polling-last-operation-for-service-instances)\nthat retrying this update does not make sense, the Platform SHOULD NOT\nrepeat this update.\nFor example, if a certain plan change is not supported by the\nService Broker, all subsequent attempts will always fail, and the\nPlatform SHOULD NOT retry this.\nOther updates MAY be possible.\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| dashboard_url | string | The updated URL of a web-based management user interface for the Service Instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed (`0129d920a083838` in the example below). Note: a Service Broker that wishes to return `dashboard_url` for a Service Instance MUST return it with the initial response to the update request, even if the Service Instance is being updated asynchronously. If not present or null, the Platform MUST retain the previous value of the `dashboard_url`. |\n| operation | string | For asynchronous responses, Service Brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the Platform with requests to the [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint in a percent-encoded query parameter. If present, MUST be a non-empty string. |\n| metadata | [ServiceInstanceMetadata](#service-instance-metadata) object | An OPTIONAL object containing metadata for the Service Instance. |\n```\n{\n  \"dashboard_url\": \"http://example-dashboard.example.com/9189kdfsk0vfnku\",\n  \"operation\": \"task_10\",\n  \"metadata\": {\n    \"labels\": {\n      \"key1\" : \"value1\",\n      \"key2\" : \"value2\"\n    },\n    attributes: {\n      \"broker.generated.attr1\": \"value1\",\n      \"broker.generated.attr2\": \"value2\"\n    }\n  }\n}\n```\n\n### Service Instance Metadata\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| labels | object | Labels are broker specified key-value pairs specifying attributes of Service Instances that are meaningful and relevant to Platform users, but do not directly imply behaviour changes by the Platform. Platforms that support metadata labels MAY chose to update those, and if they do, they SHOULD replace all existing metadata labels with the labels received during provision or update. The Platform SHOULD ignore labels that do not adhere to the Platforms syntax. |\n| attributes | object | Attributes are Broker specific key-value pairs generated by the Broker that MAY imply behavior changes by the Platform. Platforms that support attributes MAY chose to update attributes and the new value will be updated in the response body of the FETCH Service Instances. The Platform SHOULD ignore attributes that do not adhere to the Platform supported attribute list. |\n\n\n## Binding\n\nIf `\"bindable\": true` is declared for a Service Offering or Service Plan in the\n[Catalog](#catalog-management) endpoint, the Platform MAY request generation\nof a Service Binding. Otherwise, Platforms MUST NOT make a binding request to\nthe Service Broker for any Service Instance using the given Service Offering\nor Service Plan.\n\nNote: Not all services need to be bindable --- some deliver value just from\nbeing provisioned. Service Brokers that offer services that are bindable MUST\ndeclare them as such using `\"bindable\": true` in the\n[Catalog](#catalog-management). Service Brokers that do not offer any bindable\nservices do not need to implement the endpoint for bind requests.\n\nService Brokers MAY choose to only return the information that represents a\nService Binding once, either when the Service Binding is being created\nsynchronously, or when the Service Binding is first fetched via the [Fetching a\nService Binding](#fetching-a-service-binding) endpoint. However, in order for\nthe Platform to successfully use the Service Binding, the information MUST be\nreturned at least once.\n\nIn some cases, the creation of a Service Binding has to be accompanied by\nadditional network configuration. This could be the configuration of a firewall\nor a load balancer or it could be the setup of a network tunnel or a VPN\nconnection.\nTo enable the Platform to do this in a service agnostic way, the Service Broker\nSHOULD provide the endpoints that the Application uses to connect to the service\nalongside the binding credentials.\n\n### Binding Rotation\n\nSome Service Bindings are not valid forever. Especially credentials expire and\nhave to be replaced at some point in time. The simplest form of exchanging a\nbinding is to create a new Service Binding, make it available to the\nApplication and remove and unbind the old one. In many cases, this requires a\nrestart of the Application.\n\nBut this approach has a few downsides. First of all, from the Service Broker\npoint of view, there is no continuity. The Service Broker doesn't know that\nthe new binding is the successor of the old one. If state is attached to the\nold binding, the Service Broker is not able to transfer this state to the new\nbinding.\nThe second challenge is, that Platforms have to provide the binding parameters\nagain to the successor binding. But Platforms do not necessarily store these\nparameter values. Without the values, a user has to provide them again and\nthat prevents an automated rotation of Service Bindings.\n\nTherefore, this specification defines means to rotate Service Bindings.\nA Service Broker can declare in the catalog per plan if it supports the\ncreation of a successor binding by setting the `binding_rotatable` field to\n`true`. If the field is set to `false` or not present, the Platform MUST NOT\nattempt to rotate a Service Binding of this plan.\n\nTo create a successor binding, the Platform MUST provide a\n`predecessor_binding_id` field in the binding provisioning request. The value\nof this field MUST be the Service Binding ID of a non-expired Service Binding\nof the same Service Instance. The request creates a new Service Binding with a\nnew binding ID. Both Service Bindings, the new and the old one, MUST both be\nvalid in parallel until they expired or are deleted.\n\n### Types of Binding\n\n#### Credentials\n\nCredentials are a set of information used by an Application or a user to\nutilize the Service Instance. Credentials SHOULD be unique whenever possible, so\naccess can be revoked for each Service Binding without affecting consumers of other\nService Bindings for the Service Instance.\n\nService Brokers SHOULD also provide all network hosts and ports that the\nApplication uses to connect to the Service Instance via this Service Binding.\nThis data allows the Platform to adjust network configurations, if necessary.\n\n#### Log Drain\n\nThere are a class of Service Offerings that provide aggregation, indexing, and\nanalysis of log data. To utilize these services an application that generates\nlogs needs information for the location to which it will stream logs. A create\nbinding response from a Service Broker that provides one of these services MUST\ninclude a `syslog_drain_url`. The Platform MUST use the `syslog_drain_url` value\nwhen sending logs to the service.\n\n#### Route Services\nRoute services are a class of Service Offerings that intermediate requests to\napplications, performing functions such as rate limiting or authorization. To\nindicate support for route services, the catalog entry for the Service MUST\ninclude the `\"requires\":[\"route_forwarding\"]` property.\n\nWhen creating a route service type of Service Binding, a Platform MUST send\na routable address, or endpoint, for the application along with the request to\ncreate a Service Binding using `\"bind_resource\":{\"route\":\"some-address.com\"}`.\nService Brokers MAY support configuration specific to an address using\nparameters; exposing this feature to users would require a Platform to support\nbinding multiple routable addresses to the same Service Instance.\n\nIf a service is deployed in a configuration to support this behavior, the\nService Broker MUST return a `route_service_url` in the response for a request\nto create a Service Binding, so that the Platform knows where to proxy the application\nrequest. If the service is deployed such that the network configuration to\nproxy application requests through instances of the service is managed\nout-of-band, the Service Broker MUST NOT return `route_service_url` in the\nresponse.\n\n#### Volume Services\n\nThere are a class of Service Offerings that provide network storage to applications\nvia volume mounts in the application container. A create Service Binding response from\none of these services MUST include `volume_mounts`.\n\n### Request (Creating a Service Binding)\n\n#### Route\n`PUT /v2/service_instances/:instance_id/service_bindings/:binding_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n`:binding_id` MUST be a globally unique non-empty string.\nThis ID will be used for future unbind requests, so the Service Broker will use\nit to correlate the resource it creates.\n\n#### Parameters\n| Parameter name | Type | Description |\n| --- | --- | --- |\n| accepts_incomplete | boolean | A value of true indicates that the Platform and its clients support asynchronous broker operations. If this parameter is not included in the request, and the broker can only perform a binding operation asynchronously, the broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n#### Body\n\n| Request Field | Type | Description |\n| --- | --- | --- |\n| context | object | Contextual data for the Service Binding. |\n| service_id* | string | MUST be the ID of the Service Offering that is being used. |\n| plan_id* | string | MUST be the ID of the Servie Plan from the service that is being used. |\n| app_guid | string | Deprecated in favor of `bind_resource.app_guid`. GUID of an application associated with the Service Binding to be created. If present, MUST be a non-empty string. |\n| bind_resource | [BindResource](#bind-resource-object) | A JSON object that contains data for Platform resources associated with the Service Binding to be created. See [Bind Resource Object](#bind-resource-object) for more information. |\n| parameters | object | Configuration parameters for the Service Binding. Service Brokers SHOULD ensure that the client has provided valid configuration parameters and values for the operation. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Bind Resource Object\n\nThe `bind_resource` object contains Platform specific information related to\nthe context in which the service will be used. In some cases the Platform\nmight not be able to provide this information at the time of the binding\nrequest, therefore the `bind_resource` and its fields are OPTIONAL.\n\nBelow are some common fields that MAY be used. Platforms MAY choose to add\nadditional ones as needed (see\n[Bind Resource Object](profile.md#bind-resource-object) conventions).\n\n| Request Field | Type | Description |\n| --- | --- | --- |\n| app_guid | string | GUID of an application associated with the Service Binding. For [credentials](#types-of-binding) bindings. MUST be unique within the scope of the Platform. |\n| route | string | URL of the application to be intermediated. For [route services](#route-services) Service Bindings. |\n\n`app_guid` represents the scope to which the Service Binding will apply within\nthe Platform. For example, in Cloud Foundry it might map to an \"application\"\nwhile in Kubernetes it might map to a \"namespace\". The scope of what a\nPlatform maps the `app_guid` to is Platform specific and MAY vary across\nbinding requests.\n\n```\n{\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"bind_resource\": {\n    \"app_guid\": \"app-guid-here\"\n  },\n  \"parameters\": {\n    \"parameter1-name-here\": 1,\n    \"parameter2-name-here\": \"parameter2-value-here\"\n  }\n}\n```\n\n\n#### cURL\n```\n$ curl http://username:password@service-broker-url/v2/service_instances/:instance_id/service_bindings/:binding_id?accepts_incomplete=true -d '{\n  \"context\": {\n    \"platform\": \"cloudfoundry\",\n    \"some_field\": \"some-contextual-data\"\n  },\n  \"service_id\": \"service-offering-id-here\",\n  \"plan_id\": \"service-plan-id-here\",\n  \"bind_resource\": {\n    \"app_guid\": \"app-guid-here\"\n  },\n  \"parameters\": {\n    \"parameter1-name-here\": 1,\n    \"parameter2-name-here\": \"parameter2-value-here\"\n  }\n}' -X PUT -H \"X-Broker-API-Version: 2.17\" -H \"Content-Type: application/json\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | SHOULD be returned if the Service Binding already exists and the requested parameters are identical to the existing Service Binding. The expected response body is below. *This response is only valid in synchronous operations*. |\n| 201 Created | MUST be returned if the Service Binding was created as a result of this request. The expected response body is below. |\n| 202 Accepted | MUST be returned if the binding is in progress. The `operation` string MUST match that returned for the original request. This triggers the Platform to poll the [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings) endpoint for operation status. Information regarding the Service Binding (i.e. credentials) MUST NOT be returned in this response. Note that a re-sent `PUT` request MUST return a `202 Accepted`, not a `200 OK`, if the Service Binding is not yet fully created. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 409 Conflict | MUST be returned if a Service Binding with the same id, for the same Service Instance, already exists or is being created but with different parameters. |\n| 422 Unprocessable Entity | MUST be returned if the Service Broker requires that `app_guid` be included in the request body. The response body MUST contain error code `\"RequiresApp\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service supports generation of credentials through binding an application only.\"`. Additionally, if the Service Broker rejects the request due to a concurrent request to create a Service Binding for the same Service Instance, then this error MUST be returned (see [Blocking Operations](#blocking-operations)). This MUST also be returned if the Service Broker only supports asynchronous bindings for the Service Instance and the request did not include `?accepts_incomplete=true`. In this case, the response body MUST contain error code `\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service Instance requires client support for asynchronous binding operations.\"`. |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform might need to perform [Orphan Mitigation](#orphan-mitigation).\n\n#### Body\n\nFor a `202 Accepted` response code, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| operation | string | For asynchronous responses, Service Brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the Platform with requests to the [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings) endpoint in a URL encoded query parameter. If present, MUST be a string containing no more than 10,000 characters. |\n\nFor `200 OK` and `201 Created` response codes, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| metadata | [BindingMetadata](#binding-metadata-object) object | An OPTIONAL object containing metadata about this Service Binding. This metadata is mainly used to manage the Service Binding itself and SHOULD NOT contain any data that is needed to connect to the Service Instance. |\n| credentials | object | A free-form hash of credentials that can be used by applications or users to access the service. MUST be returned if the Service Broker supports generation of credentials. |\n| syslog_drain_url | string | A URL to which logs MUST be streamed. `\"requires\":[\"syslog_drain\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| route_service_url | string | A URL to which the Platform MUST proxy requests for the address sent with `bind_resource.route` in the request body. `\"requires\":[\"route_forwarding\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| volume_mounts | array of [VolumeMount](#volume-mount-object) objects | An array of configuration for remote storage devices to be mounted into an application container filesystem. `\"requires\":[\"volume_mount\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| endpoints | array of [Endpoint](#endpoint-object) objects | The network endpoints that the Application uses to connect to the Service Instance. If present, all Service Instance endpoints that are relevant for the Application MUST be in this list, even if endpoints are not reachable or host names are not resolvable from outside the service network. |\n\n##### Binding Metadata Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| expires_at | string | The date and time when the Service Binding becomes invalid and SHOULD NOT or CANNOT be used anymore. If present, the string MUST follow ISO 8601 and this pattern: `yyyy-mm-ddThh:mm:ss.sZ`. |\n| renew_before | string | The date and time before the Service Binding SHOULD be renewed. Applications or Platforms MAY use this field to initiate a [Service Binding rotation](#binding-rotation) or create a new Service Binding on time. It is RECOMMENDED to trigger the creation of a new Service Binding shortly before this timestamp. If the `expires_at` field is also present, the `renew_before` timestamp MUST be before or equal to the `expires_at` timestamp. Service Brokers SHOULD leave enough time between both timestamps to create a new Service Binding including a buffer to enable continuity. If present, the string MUST follow ISO 8601 and this pattern: `yyyy-mm-ddThh:mm:ss.sZ`. |\n\n##### Volume Mount Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| driver* | string | Name of the volume driver plugin which manages the device. |\n| container_dir* | string | The path in the application container onto which the volume will be mounted. This specification does not mandate what action the Platform is to take if the path specified already exists in the container. |\n| mode* | string | \"r\" to mount the volume read-only or \"rw\" to mount it read-write. |\n| device_type* | string | A string specifying the type of device to mount. Currently the only supported value is \"shared\". |\n| device* | [Device](#device-object) | Device object containing device_type specific details. Currently only shared devices are supported. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Device Object\n\nCurrently only shared devices are supported; a distributed file system which\ncan be mounted on all app instances simultaneously.\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| volume_id* | string | ID of the shared volume to mount on every app instance. |\n| mount_config | object | Configuration object to be passed to the driver when the volume is mounted. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n##### Endpoint Object\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| host* | string | A host name or a single IP address. |\n| ports* | array of strings | A non-empty array. Each element is either a single port (for example \"443\") or a port range (for example \"9000-9010\"). |\n| protocol | string | The protocol. Valid values are `tcp`, `udp`, or `all`. The default value is `tcp`. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"credentials\": {\n    \"uri\": \"mysql://mysqluser:pass@mysqlhost:3306/dbname\",\n    \"username\": \"mysqluser\",\n    \"password\": \"pass\",\n    \"host\": \"mysqlhost\",\n    \"port\": 3306,\n    \"database\": \"dbname\"\n  },\n  \"endpoints\": [\n    {\n      \"host\": \"mysqlhost\",\n      \"ports:\" [\"3306\"]\n    }\n  ]\n}\n```\n\n```\n{\n  \"volume_mounts\": [{\n    \"driver\": \"cephdriver\",\n    \"container_dir\": \"/data/images\",\n    \"mode\": \"r\",\n    \"device_type\": \"shared\",\n    \"device\": {\n      \"volume_id\": \"bc2c1eab-05b9-482d-b0cf-750ee07de311\",\n      \"mount_config\": {\n        \"key\": \"value\"\n      }\n    }\n  }]\n}\n```\n\n### Request (Rotating a Service Binding)\n\n#### Route\n`PUT /v2/service_instances/:instance_id/service_bindings/:binding_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n`:binding_id` MUST be a globally unique non-empty string.\nThis ID will be used for future unbind requests, so the Service Broker will use\nit to correlate the resource it creates.\n\n#### Parameters\n| Parameter name | Type | Description |\n| --- | --- | --- |\n| accepts_incomplete | boolean | A value of true indicates that the Platform and its clients support asynchronous broker operations. If this parameter is not included in the request, and the broker can only perform a binding operation asynchronously, the broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n#### Body\n\n| Request Field | Type | Description |\n| --- | --- | --- |\n| predecessor_binding_id* | string | MUST be the ID of non-expired Service Binding of the same Service Instance. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n### Response\n\nThe same response as in the response section above is expected.\n\n\n## Fetching a Service Binding\n\nIf `\"bindings_retrievable\" :true` is declared for a Service Offering in the\n[Catalog](#catalog-management) endpoint, Service Brokers MUST support this\nendpoint for all Service Offerings and Service Plans that support bindings (`\"bindable\": true`)\nand this endpoint MUST be available immediately after the\n[Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings)\nendpoint returns `\"state\": \"succeeded\"` for a [Binding](#binding) operation.\n\n### Request\n\n##### Route\n`GET /v2/service_instances/:instance_id/service_bindings/:binding_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n`:binding_id` MUST be the ID of a previously provisioned Service Binding for that\ninstance.\n\n#### Parameters\n\nThe request provides these query string parameters as useful hints for brokers.\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id | string | ID of the Service Offering from the catalog. If present, MUST be a non-empty string. |\n| plan_id | string | ID of the Service Plan from the catalog. If present, MUST be a non-empty string. |\n\n##### cURL\n```\n$ curl 'http://username:password@broker-url/v2/service_instances/:instance_id/service_bindings/:binding_id' -X GET -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | The expected response body is below. |\n| 404 Not Found | MUST be returned if the Service Binding does not exist or if a binding operation is still in progress. |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform MUST continue to remember the Service Binding.\n\n##### Body\n\nFor success responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| metadata | [BindingMetadata](#binding-metadata-object) object | An OPTIONAL object containing metadata about this Service Binding. This metadata is mainly used to manage the Service Binding itself and SHOULD NOT contain any data that is needed to connect to the Service Instance. |\n| credentials | object | A free-form hash of credentials that can be used by applications or users to access the service. MUST be returned if the Service Broker supports generation of credentials and the Service Binding was provisioned asynchronously. |\n| syslog_drain_url | string | A URL to which logs MUST be streamed. `\"requires\":[\"syslog_drain\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| route_service_url | string | A URL to which the Platform MUST proxy requests for the address sent with `bind_resource.route` in the request body. `\"requires\":[\"route_forwarding\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| volume_mounts | array of [VolumeMount](#volume-mount-object) objects | An array of configuration for mounting volumes. `\"requires\":[\"volume_mount\"]` MUST be declared in the [Catalog](#catalog-management) endpoint or the Platform can consider the response invalid. |\n| parameters | object | Configuration parameters for the Service Binding. |\n| endpoints | array of [Endpoint](#endpoint-object) objects | The network endpoints that the Application uses to connect to the Service Instance. If present, all Service Instance endpoints that are relevant for the Application MUST be in this list, even if endpoints are not reachable or host names are not resolvable from outside the service network. |\n\nService Brokers MAY choose to not return some or all parameters when a Service Binding is fetched - for example,\nif it contains sensitive information.\n\n```\n{\n  \"metadata\": {\n    \"expires_at\": \"2019-12-31T23:59:59.0Z\"\n  },\n  \"credentials\": {\n    \"uri\": \"mysql://mysqluser:pass@mysqlhost:3306/dbname\",\n    \"username\": \"mysqluser\",\n    \"password\": \"pass\",\n    \"host\": \"mysqlhost\",\n    \"port\": 3306,\n    \"database\": \"dbname\"\n  },\n  \"endpoints\": [\n    {\n      \"host\": \"mysqlhost\",\n      \"ports:\" [\"3306\"]\n    }\n  ],\n  \"parameters\": {\n    \"billing-account\": \"abcde12345\"\n  }\n}\n```\n\n## Unbinding\n\nNote: Service Brokers that do not provide any bindable Service Offerings or Service Plans do\nnot need to implement this endpoint.\n\nWhen a Service Broker receives an unbind request from a Platform, it MUST\ndelete any resources associated with the Service Binding. In the case where\ncredentials were generated, this might result in requests to the Service\nInstance failing to authenticate.\n\nIf a Service Broker accepts the request to delete a Service Binding during\nthe process of it being created, then it MUST have the net effect of halting\nthe current creation process and beginning the deletion of any resources\nassociated with the Service Binding. If the request to delete the Service Binding\nis being performed asynchronously, then the\n[Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings)\nendpoint SHOULD indicate the state of the delete request (unless a different\n`operation` identifier was provided by the Service Broker). If the request to\ndelete the Service Binding is being performed synchronously, then the\n[Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings)\nendpoint SHOULD indicate that the create request has a `state` value of `failed`.\n\n### Request\n\n#### Route\n\n`DELETE /v2/service_instances/:instance_id/service_bindings/:binding_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n`:binding_id` MUST be the the ID of a previously provisioned Service Binding for that\nService Instance.\n\n#### Parameters\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id* | string | MUST be the ID of the Service Offering associated with the Service Binding being deleted. |\n| plan_id* | string | MUST be the ID of the Service Plan associated with the Service Binding being deleted. |\n| accepts_incomplete | boolean | A value of true indicates that the Platform and its clients support asynchronous Service Broker operations. If this parameter is not included in the request, and the Service Broker can only perform an unbinding operation asynchronously, the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n\\* Query parameters with an asterisk are REQUIRED.\n\n#### cURL\n\n```\n$ curl 'http://username:password@service-broker-url/v2/service_instances/:instance_id/\n  service_bindings/:binding_id?service_id=service-offering-id-here&plan_id=service-plan-id-here&accepts_incomplete=true' -X DELETE -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned if the Service Binding was deleted as a result of this request. The expected response body is `{}`. |\n| 202 Accepted | MUST be returned if the unbinding is in progress. The `operation` string MUST match that returned for the original request. This triggers the Platform to poll the [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings) endpoint for operation status. Note that a re-sent `DELETE` request MUST return a `202 Accepted`, not a `200 OK`, if the unbinding request has not completed yet. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 410 Gone | MUST be returned if the Service Binding does not exist. |\n| 422 Unprocessable Entity | MUST also be returned if the Service Broker only supports asynchronous unbinding for the Service Instance and the request did not include `?accepts_incomplete=true`. The response body MUST contain error code `\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service Instance requires client support for asynchronous binding operations.\"`. Additionally, this MUST be returned if the Service Binding is being processed by some other operation and therefore cannot be deleted at this time. The response body MUST contain error code `\"ConcurrencyError\"` (see [Service Broker Errors](#service-broker-errors)). |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform MUST continue to remember the Service Binding.\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response field | Type | Description |\n| --- | --- | --- |\n| operation | string | For asynchronous responses, Service Brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the Platform with requests to the [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings) endpoint in a percent-encoded query parameter. If present, MUST be a string containing no more than 10,000 characters. |\n\n\\* Fields with an asterisk are REQUIRED.\n\n```\n{\n  \"operation\": \"task_10\"\n}\n```\n\n## Deprovisioning\n\nWhen a Service Broker receives a deprovision request from a Platform, it MUST\ndelete any resources it created during the provision. Usually this means that\nall resources are immediately reclaimed for future provisions.\n\nPlatforms MUST delete all Service Bindings for a Service Instance prior to attempting to\ndeprovision the Service Instance. This specification does not specify what a Service\nBroker is to do if it receives a deprovision request while there are still\nService Bindings associated with it.\n\nIf a Service Broker accepts the request to delete a Service Instance during\nthe process of it being provisioned, then it MUST have the net effect of halting\nthe current creation process and beginning the deletion of any resources\nassociated with the Service Instance. If the request to deprovision the Service\nInstance is being performed asynchronously, then the\n[Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances)\nendpoint SHOULD indicate the state of the deprovision request (unless a\ndifferent `operation` identifier was provided by the Service Broker). If the\nrequest to deprovision the Service Instance is being performed synchronously, then the\n[Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances)\nendpoint SHOULD indicate that the provision request has a `state` value of\n`failed`.\n\n### Request\n\n#### Route\n\n`DELETE /v2/service_instances/:instance_id`\n\n`:instance_id` MUST be the ID of a previously provisioned Service Instance.\n\n#### Parameters\n\nThe request provides these query string parameters as useful hints for Service\nBrokers.\n\n\n| Query-String Field | Type | Description |\n| --- | --- | --- |\n| service_id* | string | MUST be the ID of the Service Offering associated with the Service Instance being deleted. |\n| plan_id* | string | MUST be the ID of the Service Plan associated with the Service Instance being deleted. |\n| accepts_incomplete | boolean | A value of true indicates that both the Platform and the requesting client support asynchronous deprovisioning. If this parameter is not included in the request, and the Service Broker can only deprovision a Service Instance of the requested Service Plan asynchronously, the Service Broker MUST reject the request with a `422 Unprocessable Entity` as described below. |\n\n\\* Query parameters with an asterisk are REQUIRED.\n\n#### cURL\n```\n$ curl 'http://username:password@service-broker-url/v2/service_instances/:instance_id?accepts_incomplete=true\n  &service_id=service-offering-id-here&plan_id=service-plan-id-here' -X DELETE -H \"X-Broker-API-Version: 2.17\"\n```\n\n### Response\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | MUST be returned if the Service Instance was deleted as a result of this request. The expected response body is `{}`. |\n| 202 Accepted | MUST be returned if the Service Instance deletion is in progress. The `operation` string MUST match that returned for the original request. This triggers the Platform to poll the [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint for operation status. Note that a re-sent `DELETE` request MUST return a `202 Accepted`, not a `200 OK`, if the delete request has not completed yet. |\n| 400 Bad Request | MUST be returned if the request is malformed or missing mandatory data. MAY be returned if the request contains invalid data, in which case the error response MAY include a helpful error message in the `description` field (see [Service Broker Errors](#service-broker-errors)). |\n| 410 Gone | MUST be returned if the Service Instance does not exist. |\n| 422 Unprocessable Entity | MUST be returned if the Service Broker only supports asynchronous deprovisioning for the requested Service Plan and the request did not include `?accepts_incomplete=true`. The response body MUST contain error code `\"AsyncRequired\"` (see [Service Broker Errors](#service-broker-errors)). The error response MAY include a helpful error message in the `description` field such as `\"This Service Plan requires client support for asynchronous service operations.\"`. Additionally, this MUST be returned if the Service Instance is being processed by some other operation and therefore cannot be deleted at this time. The response body MUST contain error code `\"ConcurrencyError\"` (see [Service Broker Errors](#service-broker-errors)). |\n\nResponses with any other status code MUST be interpreted as a failure and the\nPlatform MUST remember the Service Instance.\n\nWhen a deprovisioning fails, the Service Instance can still be usable or\nunusable or its state could be unknown. If a Service Instance becomes unusable,\nthe Platform SHOULD NOT request new Service Bindings for that Service Instance.\nIf the broker does not indicate in the [Error response](#service-broker-errors)\nor [Last Operation response](#polling-last-operation-for-service-instances)\nwhether the Service Instance is usable or not, the Platform SHOULD assume it is\nstill usable.\n\n#### Body\n\nFor success responses, the following fields are defined:\n\n| Response Field | Type | Description |\n| --- | --- | --- |\n| operation | string | For asynchronous responses, Service Brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the Platform with requests to the [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) endpoint in a percent-encoded query parameter. If present, MUST NOT contain more than 10,000 characters. |\n\n```\n{\n  \"operation\": \"task_10\"\n}\n```\n\n## Orphan Mitigation\n\nThe Platform is the source of truth for Service Instances and Service Bindings.\nService Brokers are expected to have successfully provisioned all of the Service\nInstances and Service Bindings that the Platform knows about, and none that it\ndoesn't.\n\nOrphaned Service Instances and Service Bindings might have been created in one\nof the following scenarios:\n* The Service Broker does not return a response before a request from the\nPlatform times out (typically 60 seconds). The Service Broker might eventually\nsucceed in creating a resource, however the Platform might have already\nconsidered the request a failure.\n* A synchronous [Provisioning](#provisioning) request fails.\n* A call to the\n[Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances)\nendpoint returns `\"state\": \"failed\"` for an asynchronous provisioning or\ndeprovisioning request.\n* A synchronous [Binding](#binding) request fails.\n* A call to the\n[Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings)\nendpoint returns `\"state\": \"failed\"` for an asynchronous binding or unbinding\nrequest.\n* The Platform encounters an internal error when creating a Service Instance or\nService Binding (for example, saving to the database fails).\n\nTo mitigate orphaned Service Instances and Service Bindings, the Platform SHOULD\nattempt to delete resources it cannot be sure were successfully created, and\nSHOULD keep trying to delete them until the Service Broker responds with a\nsuccess. Service Brokers MAY automatically delete any resources they believe to\nbe orphaned on their own. Note that the Platform MAY allow end users to\ndetermine when orphan mitigation occurs, in order to allow them to investigate\nthe cause of any failures.\n\nThe following table aims to describe when Orphan Mitigation is to be initiated\nby the Platform:\n\n| Request | Service Broker Response Status Code | Platform Interpretation Of Response | Orphan Mitigation SHOULD be performed for Service Instances | Orphan Mitigation SHOULD be performed for Service Bindings |\n| --- | --- | --- | --- | --- |\n| _All_ | 200 | Success (only returned in synchronous mode) | No | No |\n| _All_ | 200 with malformed response | Failure | No | No |\n| [Polling Last Operation for Service Instances](#polling-last-operation-for-service-instances) for [Provisioning](#provisioning)/[Deprovisioning](#deprovisioning) | 200 with `\"state\": \"failed\"` | Failure | Yes | No |\n| [Polling Last Operation for Service Bindings](#polling-last-operation-for-service-bindings) for [Binding](#binding)/[Unbinding](#unbinding) | 200 with `\"state\": \"failed\"` | Failure | No | Yes |\n| _All_ | 201 | Success | No | No |\n| [Provisioning](#provisioning) | 201 with malformed response | Failure | Yes | No |\n| [Binding](#binding) | 201 with malformed response | Failure | No | Yes |\n| _All_ | 202 | Success | No | No |\n| [Provisioning](#provisioning) | 202 with malformed response | Failure | Yes | No |\n| [Binding](#binding) | 202 with malformed response | Failure | No | Yes |\n| [Provisioning](#provisioning)/[Deprovisioning](#deprovisioning) | All other 2xx | Failure | Yes | No |\n| [Binding](#binding)/[Unbinding](#unbinding) | All other 2xx | Failure | No | Yes |\n| [Updating a Service Instance](#updating-a-service-instance) | All other 2xx | Failure | No | No |\n| _All_ | 408 | Client timeout failure (request not received at the server) | No | No |\n| _All_ | All other 4xx | Request rejected | No | No |\n| [Provisioning](#provisioning)/[Deprovisioning](#deprovisioning) | 5xx | Service Broker error | Yes | No |\n| [Binding](#binding)/[Unbinding](#unbinding) | 5xx | Service Broker error | No | Yes |\n| [Updating a Service Instance](#updating-a-service-instance) | 5xx | Service Broker error | No | No |\n| [Provisioning](#provisioning) | Timeout | Failure | Yes | No |\n| [Binding](#binding) | Timeout | Failure | No | Yes |\n| _All_ (except [Provisioning](#provisioning) and [Binding](#binding)) | Timeout | Failure | No | No |\n"
        },
        {
          "name": "swagger.yaml",
          "type": "blob",
          "size": 22.681640625,
          "content": "# This is the Open API 2.0 (Swagger) interface for Open Service Broker API.\n# Every attempt will be made to make the Open API 2.0 version of OSB API\n# accurately represent the written specification. If the spec and this document\n# conflict, the spec is the authority.\n\nswagger: '2.0'\n\ninfo:\n  title: Open Service Broker API\n  description: >-\n    The Open Service Broker API defines an HTTP(S) interface between Platforms\n    and Service Brokers.\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  contact:\n    name: Open Service Broker API\n    url: 'https://www.openservicebrokerapi.org/'\n    email: open-service-broker-api@googlegroups.com\n  version: master - might contain changes that are not yet released\n\nhost: localhost:3000\nschemes:\n  - http\n  - https\n\nconsumes:\n  - application/json\nproduces:\n  - application/json\n\npaths:\n  /v2/catalog:\n    parameters:\n      - $ref: '#/parameters/APIVersion'\n      - $ref: '#/parameters/OriginatingIdentity'\n      - $ref: '#/parameters/RequestIdentity'\n    get:\n      summary: get the catalog of services that the service broker offers\n      tags:\n        - Catalog\n      operationId: catalog.get\n      responses:\n        '200':\n          description: catalog response\n          schema:\n            $ref: '#/definitions/Catalog'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n  '/v2/service_instances/{instance_id}':\n    parameters:\n      - $ref: '#/parameters/APIVersion'\n      - $ref: '#/parameters/OriginatingIdentity'\n      - $ref: '#/parameters/RequestIdentity'\n      - name: instance_id\n        in: path\n        description: instance id of instance to provision\n        required: true\n        type: string\n    put:\n      summary: provision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.provision\n      parameters:\n        - name: body\n          in: body\n          description: parameters for the requested service instance provision\n          required: true\n          schema:\n            $ref: '#/definitions/ServiceInstanceProvisionRequest'\n        - $ref: '#/parameters/accepts_incomplete'\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/ServiceInstanceProvisionResponse'\n        '201':\n          description: Created\n          schema:\n            $ref: '#/definitions/ServiceInstanceProvisionResponse'\n        '202':\n          description: Accepted\n          schema:\n            $ref: '#/definitions/ServiceInstanceAsyncOperation'\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '409':\n          $ref: '#/responses/ErrorConflict'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        '422':\n          $ref: '#/responses/ErrorUnprocessableEntity'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n    patch:\n      summary: update a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.update\n      parameters:\n        - name: body\n          in: body\n          description: parameters for the requested service instance update\n          required: true\n          schema:\n            $ref: '#/definitions/ServiceInstanceUpdateRequest'\n        - $ref: '#/parameters/accepts_incomplete'\n      responses:\n        '200':\n          description: OK\n          schema:\n            type: object\n        '202':\n          description: Accepted\n          schema:\n            $ref: '#/definitions/ServiceInstanceAsyncOperation'\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        '422':\n          $ref: '#/responses/ErrorUnprocessableEntity'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n    delete:\n      summary: deprovision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.deprovision\n      parameters:\n        - $ref: '#/parameters/accepts_incomplete'\n        - $ref: '#/parameters/service_id'\n        - $ref: '#/parameters/plan_id'\n      responses:\n        '200':\n          description: OK\n          schema:\n            type: object\n        '202':\n          description: Accepted\n          schema:\n            $ref: '#/definitions/AsyncOperation'\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '410':\n          $ref: '#/responses/ErrorGone'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        '422':\n          $ref: '#/responses/ErrorUnprocessableEntity'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n    get:\n      summary: gets a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.get\n      parameters:\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          type: string\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/ServiceInstanceResource'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '404':\n          $ref: '#/responses/ErrorNotFound'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n  '/v2/service_instances/{instance_id}/last_operation':\n    parameters:\n      - $ref: '#/parameters/APIVersion'\n      - $ref: '#/parameters/OriginatingIdentity'\n      - $ref: '#/parameters/RequestIdentity'\n      - name: instance_id\n        in: path\n        description: instance id of instance to provision\n        required: true\n        type: string\n    get:\n      summary: last requested operation state for service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.lastOperation.get\n      parameters:\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          type: string\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/LastOperationResource'\n          headers:\n            RetryAfter:\n              description: Indicates when to retry the request\n              type: string\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '404':\n          $ref: '#/responses/ErrorNotFound'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '410':\n          $ref: '#/responses/ErrorGone'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n  '/v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation':\n    parameters:\n      - $ref: '#/parameters/APIVersion'\n      - $ref: '#/parameters/OriginatingIdentity'\n      - $ref: '#/parameters/RequestIdentity'\n      - name: instance_id\n        in: path\n        description: instance id of instance to provision\n        required: true\n        type: string\n      - name: binding_id\n        in: path\n        description: binding id of binding to create\n        required: true\n        type: string\n    get:\n      summary: last requested operation state for service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.lastOperation.get\n      parameters:\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          type: string\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/LastOperationResource'\n          headers:\n            RetryAfter:\n              description: Indicates when to retry the request\n              type: string\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '404':\n          $ref: '#/responses/ErrorNotFound'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '410':\n          $ref: '#/responses/ErrorGone'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n  '/v2/service_instances/{instance_id}/service_bindings/{binding_id}':\n    parameters:\n      - $ref: '#/parameters/APIVersion'\n      - $ref: '#/parameters/OriginatingIdentity'\n      - $ref: '#/parameters/RequestIdentity'\n      - name: instance_id\n        in: path\n        description: instance id of instance to provision\n        required: true\n        type: string\n      - name: binding_id\n        in: path\n        description: binding id of binding to create\n        required: true\n        type: string\n    put:\n      summary: generation of a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.binding\n      parameters:\n        - name: body\n          in: body\n          description: parameters for the requested service binding\n          required: true\n          schema:\n            $ref: '#/definitions/ServiceBindingRequest'\n        - $ref: '#/parameters/accepts_incomplete'\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/ServiceBindingResponse'\n        '201':\n          description: Created\n          schema:\n            $ref: '#/definitions/ServiceBindingResponse'\n        '202':\n          description: Accepted\n          schema:\n            $ref: '#/definitions/AsyncOperation'\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '409':\n          $ref: '#/responses/ErrorConflict'\n        '410':\n          $ref: '#/responses/ErrorGone'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        '422':\n          $ref: '#/responses/ErrorUnprocessableEntity'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n    delete:\n      summary: deprovision of a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.unbinding\n      parameters:\n        - $ref: '#/parameters/service_id'\n        - $ref: '#/parameters/plan_id'\n        - $ref: '#/parameters/accepts_incomplete'\n      responses:\n        '200':\n          description: OK\n          schema:\n            type: object\n        '202':\n          description: Accepted\n          schema:\n            $ref: '#/definitions/AsyncOperation'\n        '400':\n          $ref: '#/responses/ErrorBadRequest'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '410':\n          $ref: '#/responses/ErrorGone'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        '422':\n          $ref: '#/responses/ErrorUnprocessableEntity'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n    get:\n      summary: gets a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.get\n      parameters:\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          type: string\n      responses:\n        '200':\n          description: OK\n          schema:\n            $ref: '#/definitions/ServiceBindingResource'\n        '401':\n          $ref: '#/responses/ErrorUnauthorized'\n        '404':\n          $ref: '#/responses/ErrorNotFound'\n        '412':\n          $ref: '#/responses/ErrorPreconditionFailed'\n        default:\n          $ref: '#/responses/ErrorUnexpected'\n\nparameters:\n  APIVersion:\n    name: X-Broker-API-Version\n    in: header\n    description: version number of the Service Broker API that the Platform will use\n    required: true\n    type: string\n  OriginatingIdentity:\n    name: X-Broker-API-Originating-Identity\n    in: header\n    description: identity of the user that initiated the request from the Platform\n    type: string\n  RequestIdentity:\n    name: X-Broker-API-Request-Identity\n    in: header\n    description: idenity of the request from the Platform\n    type: string\n  accepts_incomplete:\n    name: accepts_incomplete\n    in: query\n    description: asynchronous operations supported\n    type: boolean\n  service_id:\n    name: service_id\n    in: query\n    description: id of the service associated with the instance being deleted\n    required: true\n    type: string\n  plan_id:\n    name: plan_id\n    in: query\n    description: id of the plan associated with the instance being deleted\n    required: true\n    type: string\n\nresponses:\n  ErrorBadRequest:\n    description: Bad Request\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorUnauthorized:\n    description: Unauthorized\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorNotFound:\n    description: Not Found\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorConflict:\n    description: Conflict\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorGone:\n    description: Gone\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorPreconditionFailed:\n    description: Precondition Failed\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorUnprocessableEntity:\n    description: Unprocessable Entity\n    schema:\n      $ref: '#/definitions/Error'\n  ErrorUnexpected:\n    description: Unexpected\n    schema:\n      $ref: '#/definitions/Error'\n\ndefinitions:\n  Catalog:\n    type: object\n    properties:\n      services:\n        type: array\n        items:\n          $ref: '#/definitions/Service'\n  Service:\n    type: object\n    required:\n      - name\n      - id\n      - description\n      - bindable\n      - plans\n    properties:\n      name:\n        type: string\n      id:\n        type: string\n      description:\n        type: string\n      tags:\n        type: array\n        items:\n          type: string\n      requires:\n        type: array\n        items:\n          type: string\n          enum:\n            - syslog_drain\n            - route_forwarding\n            - volume_mount\n      bindable:\n        type: boolean\n      instances_retrievable:\n        type: boolean\n      bindings_retrievable:\n        type: boolean\n      allow_context_updates:\n        type: boolean\n      metadata:\n        $ref: '#/definitions/Metadata'\n      dashboard_client:\n        $ref: '#/definitions/DashboardClient'\n      binding_rotatable:\n        type: boolean\n      plan_updateable:\n        type: boolean\n      plans:\n        type: array\n        items:\n          $ref: '#/definitions/Plan'\n  DashboardClient:\n    type: object\n    required:\n      - id\n      - secret\n    properties:\n      id:\n        type: string\n      secret:\n        type: string\n      redirect_uri:\n        type: string\n  Plan:\n    type: object\n    required:\n      - id\n      - name\n      - description\n    properties:\n      id:\n        type: string\n      name:\n        type: string\n      description:\n        type: string\n      metadata:\n        $ref: '#/definitions/Metadata'\n      free:\n        type: boolean\n        default: true\n      bindable:\n        type: boolean\n      plan_updateable:\n        type: boolean\n      schemas:\n        $ref: '#/definitions/SchemasObject'\n      maximum_polling_duration:\n        type: integer\n      maintenance_info:\n        $ref: '#/definitions/MaintenanceInfo'\n      binding_rotatable:\n        type: boolean\n        default: false\n  SchemasObject:\n    type: object\n    properties:\n      service_instance:\n        $ref: '#/definitions/ServiceInstanceSchemaObject'\n      service_binding:\n        $ref: '#/definitions/ServiceBindingSchemaObject'\n  ServiceInstanceSchemaObject:\n    type: object\n    properties:\n      create:\n        $ref: '#/definitions/SchemaParameters'\n      update:\n        $ref: '#/definitions/SchemaParameters'\n  ServiceBindingSchemaObject:\n    type: object\n    properties:\n      create:\n        $ref: '#/definitions/SchemaParameters'\n  SchemaParameters:\n    type: object\n    properties:\n      parameters:\n        $ref: '#/definitions/JSONSchemaObject'\n  JSONSchemaObject:\n    type: object\n  ServiceInstanceResource:\n    type: object\n    properties:\n      service_id:\n        type: string\n      plan_id:\n        type: string\n      dashboard_url:\n        type: string\n      parameters:\n        type: object\n      maintenance_info:\n        $ref: '#/definitions/MaintenanceInfo'\n      metadata:\n        $ref: '#/definitions/ServiceInstanceMetadata'\n  ServiceInstanceProvisionRequest:\n    type: object\n    required:\n      - service_id\n      - plan_id\n      - organization_guid\n      - space_guid\n    properties:\n      service_id:\n        type: string\n      plan_id:\n        type: string\n      context:\n        $ref: '#/definitions/Context'\n      organization_guid:\n        type: string\n        x-deprecated: true\n      space_guid:\n        type: string\n        x-deprecated: true\n      parameters:\n        type: object\n      maintenance_info:\n        $ref: '#/definitions/MaintenanceInfo'\n  ServiceInstanceProvisionResponse:\n    type: object\n    properties:\n      dashboard_url:\n        type: string\n      metadata:\n        $ref: '#/definitions/ServiceInstanceMetadata'\n  ServiceInstanceAsyncOperation:\n    type: object\n    properties:\n      dashboard_url:\n        type: string\n      operation:\n        type: string\n      metadata:\n        $ref: '#/definitions/ServiceInstanceMetadata'\n  ServiceInstanceUpdateRequest:\n    type: object\n    required:\n      - service_id\n    properties:\n      context:\n        $ref: '#/definitions/Context'\n      service_id:\n        type: string\n      plan_id:\n        type: string\n      parameters:\n        type: object\n      previous_values:\n        $ref: '#/definitions/ServiceInstancePreviousValues'\n      maintenance_info:\n        $ref: '#/definitions/MaintenanceInfo'\n  ServiceInstancePreviousValues:\n    type: object\n    properties:\n      service_id:\n        type: string\n        x-deprecated: true\n      plan_id:\n        type: string\n      organization_id:\n        type: string\n        x-deprecated: true\n      space_id:\n        type: string\n        x-deprecated: true\n      maintenance_info:\n        $ref: '#/definitions/MaintenanceInfo'\n  AsyncOperation:\n    type: object\n    properties:\n      operation:\n        type: string\n  LastOperationResource:\n    type: object\n    required:\n      - state\n    properties:\n      state:\n        type: string\n        enum:\n          - in progress\n          - succeeded\n          - failed\n      description:\n        type: string\n      instance_usable:\n        type: boolean\n      update_repeatable:\n        type: boolean\n  ServiceBindingResource:\n    type: object\n    properties:\n      metadata:\n        $ref: '#/definitions/ServiceBindingMetadata'\n      credentials:\n        type: object\n      syslog_drain_url:\n        type: string\n      route_service_url:\n        type: string\n      volume_mounts:\n        type: array\n        items:\n          $ref: '#/definitions/ServiceBindingVolumeMount'\n      endpoints:\n        type: array\n        items:\n          $ref: '#/definitions/ServiceBindingEndpoint'\n      parameters:\n        type: object\n  ServiceBindingRequest:\n    type: object\n    required:\n      - service_id\n      - plan_id\n    properties:\n      context:\n        $ref: '#/definitions/Context'\n      service_id:\n        type: string\n      plan_id:\n        type: string\n      app_guid:\n        type: string\n        x-deprecated: true\n      bind_resource:\n        $ref: '#/definitions/ServiceBindingResourceObject'\n      parameters:\n        type: object\n      predecessor_binding_id:\n        type: string\n  ServiceBindingResourceObject:\n    type: object\n    properties:\n      app_guid:\n        type: string\n      route:\n        type: string\n  ServiceBindingResponse:\n    type: object\n    properties:\n      metadata:\n        $ref: '#/definitions/ServiceBindingMetadata'\n      credentials:\n        type: object\n      syslog_drain_url:\n        type: string\n      route_service_url:\n        type: string\n      volume_mounts:\n        type: array\n        items:\n          $ref: '#/definitions/ServiceBindingVolumeMount'\n      endpoints:\n        type: array\n        items:\n          $ref: '#/definitions/ServiceBindingEndpoint'\n  ServiceBindingMetadata:\n    type: object\n    properties:\n      expires_at:\n        type: string\n      renew_before:\n        type: string\n  ServiceBindingEndpoint:\n    type: object\n    required:\n      - host\n      - ports\n    properties:\n      host:\n        type: string\n      ports:\n        type: array\n        items:\n          type: string\n      protocol:\n        type: string\n        enum:\n          - tcp\n          - udp\n          - all\n        default: tcp\n  ServiceBindingVolumeMount:\n    type: object\n    required:\n      - driver\n      - container_dir\n      - mode\n      - device_type\n      - device\n    properties:\n      driver:\n        type: string\n      container_dir:\n        type: string\n      mode:\n        type: string\n        enum:\n          - r\n          - rw\n      device_type:\n        type: string\n        enum:\n          - shared\n      device:\n        $ref: '#/definitions/ServiceBindingVolumeMountDevice'\n  ServiceBindingVolumeMountDevice:\n    type: object\n    required:\n      - volume_id\n    properties:\n      volume_id:\n        type: string\n      mount_config:\n        type: object\n  ServiceInstanceMetadata:\n    type: object\n    properties:\n      labels:\n        type: object\n      attributes:\n        type: object\n  MaintenanceInfo:\n    type: object\n    properties:\n      version:\n        type: string\n      description:\n        type: string\n  Context:\n    description: >-\n      See [Context\n      Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)\n      for more details.\n    type: object\n  Metadata:\n    description: >-\n      See [Service Metadata\n      Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)\n      for more details.\n    type: object\n  Object:\n    type: object\n  Error:\n    type: object\n    properties:\n      error:\n        type: string\n      description:\n        type: string\n      instance_usable:\n        type: boolean\n      update_repeatable:\n        type: boolean\nsecurityDefinitions:\n  basicAuth:\n    type: basic\nsecurity:\n  - basicAuth: []\n\nexternalDocs:\n  description: The official Open Service Broker API specification\n  url: 'https://github.com/openservicebrokerapi/servicebroker/'\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}