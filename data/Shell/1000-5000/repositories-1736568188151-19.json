{
  "metadata": {
    "timestamp": 1736568188151,
    "page": 19,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Varying-Vagrant-Vagrants/VVV",
      "stars": 4540,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.341796875,
          "content": "root = true\n\n\n[*]\ncharset = utf-8\nend_of_line = lf\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\n\n[*.{diff,md}]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n\n[*.{conf,conf-sample}]\nindent_size = 4\n\n# Use WordPress-style tabs for PHP files\n[*.php]\nindent_style = tab\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1875,
          "content": "# Force provisioning script to use LF, even on Windows\n* text eol=lf\n\n# Avoid binary files to be corrupted by CRLF conversion\n*.png binary\n*.gif binary\n*.jpg binary\n*.jpeg binary\n*.gpg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.93359375,
          "content": "# Stuff that pops up locally for me - @jeremyfelt\n*.sublime*\n.DS_Store\n.idea\nIcon?\nIcon\\r\nIcon\\r\\r\n\n# Because this really is a working directory, ignore vagrant's files\n/.vagrant\nvagrant.log\n\n# This is a file intended for hooking in a custom Vagrant configuration on up\n/Customfile\n/vvv-custom.yml\n/config/config.yml\n\n# Allow for custom provisioning scripts that are not included with the repo\n/provision/provision-custom.sh\n/provision/provision-pre.sh\n/provision/provision-post.sh\n/provision/github.token\n/provision/resources/\n/provision/utilities/\n/provision/extensions/\n/provision/phpcs/\n\n# Ignore custom trigger scripts in config/homebin.\n/config/homebin/vagrant_up_custom\n/config/homebin/vagrant_halt_custom\n/config/homebin/vagrant_suspend_custom\n/config/homebin/vagrant_destroy_custom\n\n# No need to share individual site configs with each other\n/config/nginx-config/sites/*.conf\n\n# Ignore anything in the 'custom' directory in config\n/config/custom/*\n\n# Ignore the nvm git clone in the 'nvm' directory in config\n/config/nvm/\n\n# Ignore a custom bash_prompt if it exists\n/config/bash_prompt\n\n# Ignore downloaded wp-cli bash completions\n/config/wp-cli/wp-completion.bash\n\n# ignore the tideways custom config\n/config/tideways.json\n\n# No need to share our mysql data with each other\n/database/data/*\n\n# Log files should be ignored.\n/log/*\n!/log/README.md\n\n# No need to share our individual sites with each other\n/www/*\n\n# And no need to share individual SQL files with each other\n*.sql\n*.sql.gz\n\n# BUT....\n\n# We do have some default nginx configs that should be included\n!/config/nginx-config/sites/default.conf\n!/config/nginx-config/sites/deprecated.conf\n\n# And we do have a default SQL file that should be included\n!/database/init.sql\n\n# And we provide our default host names in a dat file.\n!/www/vvv-hosts\n\n# not the phpinfo\n!/www/phpinfo\n\n# But not the custom phpMyAdmin config in the database-admin directory.\n/www/default/database-admin/config.inc.custom.php\n/certificates\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 52.8916015625,
          "content": "---\nlayout: page\ntitle: Changelog\npermalink: /docs/en-US/changelog/\n---\n\n# Changelog\n\n## 3.14 ( 2024 ETA )\n\n### Enhancements\n\n* Upgraded MariaDB from 10.5 to 10.11 ( #2728 )\n* Provisioner/Hook timings now show milliseconds ( #2735 )\n* Added a `skip_site_provisioner_update` option to prevent site provisioners being overwritten by updates ( #2733 )\n* Only start services that aren't running in post-up scripts ( #2732 )\n\n### Bug Fixes\n\n* VVV will check if Parallels is installed before defaulting to docker on Arm64/Apple Silicon due to issues with Docker detection ( #2722 )\n* Switched from Rackspace to Starburst services for MariaDB mirrors ( #2728 )\n* Switched from Starburst to OVH for MariaDB mirrors ( #2741 )\n* Fixes for service starts under some situations in Docker ( #2732 )\n* Fixed an issue with trailing slashes and site provisioners introduced in an earlier version (#2731)\n\n### Maintenance\n\n* Removed commented out subversion config lines that were flagged as a false positive security issue ( #2725 )\n* Adjusted the domains used in the network check to remove unused domains and add some that are used ( #2734 )\n\n## 3.13.2 ( 2024 July 19th )\n\n### Enhancements\n\n* VVV now shows a missing dashboard page with help when `www/default/index.php` is accidentally deleted instead of a HTTP forbidden error ( #2714 )\n\n### Bug Fixes\n\n* VVV will check if Docker is installed before defaulting to it on Arm64/Apple Silicon ( #2715 )\n* Fixed MySQL issues in GitHub Actions ( #2716 )\n\n## 3.13.1 ( 2024 June 16th )\n\n### Enhancements\n\n* Switched the default PHP from v7.4 to v8.2 and ~default Node from v14 to v16~ ( #2690 )\n* Use Node 20 as the default version to match WP and Gutenberg ( #2696 )\n* WP Coding standards v3 ( #2688 )\n* VIP Coding standards v3 ( #2688 )\n* Better error messages with links to docs when trying to use a PHP version that isn't installed ( #2689 )\n* Opted out of Dotnet package telemetry ( #2689 )\n* Replace references to the Squizlab PHPCS with that from the PHPCS Standards org ( #2692 )\n* Better PHP Debug mod switching outputs and checks ( #2702 )\n* PHP Info and Xdebug info pages now state their versions ( #2702 )\n\n### Maintenance\n\n* Switch the Parallels Arm64 box from `mpasternak/focal64-arm` to `bento/ubuntu-20.04-arm64` to match x86 boxes ( #2695 )\n\n### Bug Fixes\n\n* The host file inside the VM was only adding sites with `127.0.0.1` addresses, now it adds the IPVv6 `::1` too ( #2689 )\n* Fixes for hosts file cleanup ( #2708 )\n* Removed old MacOS PR workflows, no runners available ( #2698 )\n* Replace an outdated Nginx signing key ( #2710 )\n* Don't sync clocks when using the docker provider ( #2711 )\n\n## 3.12.1 ( 2023 August 3rd )\n\n### Enhancements\n\n* Monolithic docker beta support ( #2632 )\n* Added the GMP PHP extension to the default PHP installation ( #2676 )\n\n### Maintenance\n\n* Updated bitbucket SSH fingerprints ( #2679 )\n\n### Bug Fixes\n\n* Fixed a vagrantfile error on Arm when the vagrant-parallels plugin is missing ( #2670 )\n* Miscellanous Shellcheck linter fixes and improvements ( #2675 )\n* Github action fixes for composer and an upgrade to Ubuntu 20 ( #2677 )\n* Fixed an issue with git safe directories ( #2681 )\n* Git safe directory fixes\n* Fixed docker version detection\n* PHPCS install improvements\n\n## 3.11.2 ( 2023 May 8th )\n\n### Enhancements\n\n* Added Gitlab SSH fingerprints for non-RSA keys ( #2665 )\n* Apt sources for Ubuntu 22 LTS\n\n### Bug Fixes\n\n* Updated to the new GitHub RSA fingerprint ( #2665 )\n\n\n## 3.11.0 ( 2023 March 14th )\n\n### Enhancements\n\n* Added a fallback Nginx config for sites that don't specify a site provisioner ( #2279 )\n* Sites that do not have a provisioner set will have a logs folder created for Nginx logs,and a public_html folder with Nginx rules for WordPress or other PHP applications. The user is responsible for creating a database and installing/placing a site.\n* Simplified PHPCS installation bin dir setting ( #2648 )\n* Virtualbox users running `sudo vagrant` commands now get a warning\n* Fixed setting of git rebase config for the vagrant nonroot user ( #2658 )\n* Added composer bin directory to path ( #2588 )\n\n### Bug Fixes\n\n* Fixed faulty Vagrant plugin check.\n* A fix for setting the PHP version parameter ( #2644 )\n\n## 3.10.1 ( 2022 September 10th )\n\n### Enhancements\n\n* Improved provisioning output\n* VVV will now attempt to test Nginx configs on installation and recover ( #2604 )\n* Switched to new launchpad PPA domains with HTTPS ( #2586 )\n* Improved the verboseness of the DB import scripts ( #2621 )\n* PHP version parameter for provisioner and Nginx ( #2583 )\n\n### Bug Fixes\n\n* WP CLI package update failures now fail gracefully instead of stopping a provision ( #2601 )\n* Fixed an edge case updating NVM via git ( #2604 )\n* Disable hardware support for gcrypt to avoid bad VirtualBox implementations ( #2609 )\n* Fix unbound variable in `db_backup` ( #2617 )\n* Ensured npm and nvm are always available in site provisioners\n* Explicitly allow a composer plugin when installing PHPCS to avoid issues in July 2022 ( #2620 )\n\n## 3.9.1 ( 2022 April 13th )\n\n### Enhancements\n\n* VVV now switches to Parallels by default on Arm machines ( #2560 )\n* Adds default Nginx pages for 40x and 50x errors to help on troubleshooting ( #2345 )\n* NVM is now used to manage NodeJS, VVV will auto-switch the node version to that used by `.nvmrc` when inside the guest VM ( #2581 )\n* The PHP Redis extension is now installed with the default PHP version ( #2582 )\n\n### Bug Fixes\n\n* Refactored the certificate check to check for the certificate file, not the TLS-CA utility ( #2563 )\n* Fixed an issue with `composer create-project` not running when specified in `config.yml` ( #2565 )\n* Switched obsolete mirror check for MariaDB to the one already used (#2575)\n* Fixed a broken warning in the network checks\n* Fixed an issue with `/root/.local/share/composer` when provisioning (#2589)\n* Fixed an issue with the new Git release that was crashing the provisioner beucase of wrong user permissions ( #2593 )\n\n## 3.8.1 ( 2021 November 15th )\n\n### Enhancements\n\n* Split tools out into their own provisioner ( #2270 )\n* Parallelised the tools provisioner ( #2520 )\n* Added the `unattended-upgrades` package to auto-upgrade packages with security updates ( #2513 )\n* Add `jq` for CLI based JSON parsing ( #2518 )\n* Improved Debian/Raspbian compatibility in apt package provisioners ( #2522 )\n* Added basic Avahi support for vvv.local ( #2523 )\n* Utiities have been renamed to extensions\n* VVV now warns when `vagrant-disksize` is installed on Arm/Apple Silicon devices\n* Changed Parallels Arm64 box\n* Added db.restore.exclude/include/restore_by_default parameters\n\n### Bug Fixes\n\n* Fixed backwards compatibility for enabling backups in `config.yml` via `backup: true`\n* Fixed the import of databases with spaces in there names\n* Improved root certificate trust chain handling\n* Service restarts now have dedicated functions\n* Several evals removed from the hook functions\n* Disabled nested virtualisation under Hyper-V\n* Clock synchronisation now fails gracefully\n* The private IP requested has been changed to fit the restrictions in VirtualBox 6.1.28\n* If unset, VVV will now set the global git branch merge strategy to avoid provisioner failure\n\n## 3.7.2 ( 2021 August 3rd )\n\n### Enhancements\n\n* Added a new bear to full provision message, and updated message to be more clear\n\n### Bug Fixes\n\n* Switched Ubuntu 20 boxes to Bento on VirtualBox to avoid folder mounting issues\n* Fixed a broken heredoc\n\n## 3.7.1 ( 2021 July 20th )\n\n### Enhancements\n\n* Improved site provisioning messages\n* MariaDB upgraded to v10.5\n* Improved Apt source file handling in core provisioners\n* Upgraded to Composer 2\n* Upgraded to Python 3 setuptools and pip3\n* PHPCS installation improvements\n* Added ARM64 support for Mailhog\n* Improved the splash screen provider version fetching\n* Added improved apt package upgrade routines\n* Provisioners now ask to install only packages that aren't installed\n* General package handling performance improvements\n* New config to exclude databases from backup in `config.yml` ( #2346 )\n* New config to gzip compress database backups in `config.yml` ( #2346 )\n* Experimental Apple silicon support using vagrant + parallels\n* Disable backup and restore of databases by default\n* Updated Mailhog to 1.0.1 for new installs\n* Improved MailHog downloading with retries and error output\n* Improved Composer installation\n* webp support in Imagemagick\n* Switch from Ubuntu 18.04 to 20.04 (current LTS release)\n* Simplified config folder\n* Increased the default PHP memory limit from 128MB to 256MB\n\n### Bug Fixes\n\n* Fixed `vvv_error` not always printing messages\n* When a sites repo has the wrong URL for the origin remote, the user is now told. This avoids certain mistakes being made.\n* Remote changes are now fetched before resetting, not afterwards.\n* Increased the priority of Nodesource and Ondrej packages to avoid issues\n* Fixed Parallels mount permissions\n* Fixes for site names containing spaces causing Nginx and TLS issues\n* Warnings that you're missing vagrant plugins no longer show when running vagrant plugin commands\n* Force the Virtual Machine to 64bit on VirtualBox to avoid infinite loops on 32bit architectures\n* Force the installation and update of grunt and grunt-cli so that old grunt is always overwritten when updated\n* Sync clocks before provisioning if ntpdate is available to avoid Apt mirror time issues\n* Fixed cloning the dashboard git repository with unknown remote branches\n* Skip mounting custom folders for skipped sites\n* Improved WP CLI ownership and permission settings\n* Removed WP CLI doctor subcommand package that was causing issues for some users\n* Fixed dashboard updating\n\n## 3.6.2 ( 2021 March 17th )\n\n### Bug Fixes\n\n* Replaced PHPCS symlinking to avoid issues with Windows\n\n## 3.6.1 ( 2021 March 16th )\n\n### Important Note\n\nLots of provisioners now run in strict mode. Your custom site and utility provisioners may fail if they do not handle bad return codes from commands correctly. For example if you ran `composer create-project` on a folder that was not empty, it will fail. In v3.5 this failure was ignored and the script continued despite the critical error, in v3.6 VVV will halt provisioning so that the error can be seen.\n\nMake sure that commands are only ran at their appropriate times, e.g. only install things if they aren't installed, and if you're checking the return value of a command, do it in an if check, not as a temporary variable. If you're feeling adventurous you can unset the strict flags ( danger! ).\n\nFinally, check that your custom modifications haven't been added in the official site templates.\n\n### Enhancements\n\n* Improve the way that PHPCS gets provisioned to avoid conflicts with composer v2 (#2357)\n* PHP v7.4 is now the default PHP ( other versions are available on CLI if installed via `php73`, `php72`, etc )\n* Beautify the PHP debug switcher script\n* Support for basic formatting tags in `vvv_warn` `vvv_error` `vvv_info` and `vvv_success`\n* A new `vvv_output` and `vvv_format_output` bash functions\n* Minor refactors and colours added to the main provisioner\n* Improved output of backup and import scripts\n* SHDocs added to core provisioners\n* Improved PHP configuration file installation\n* Sites can now define composer create-project/install/update commands to run in their folders section in addition to the git options added in v3.5.1\n* Adds a `vagrant` command inside the virtual machine to tell users they are still inside the VM and need to exit\n* `switch_php_debugmod` now checks if a module is installed and enabled, with improved output to make it clearer which versions of PHP support the module\n* Print provision log if there are errors\n* Adds an Xdebug Info button to the dashboard when Xdebug is enabled\n\n### Bug Fixes\n\n* Fixed the use of `vvv_warn` `vvv_success` `vvv_error` and `vvv_info` outside of provisioners\n* Don't try to install shyaml if it's already installed\n* Global composer packages were only updated when composer itself was updated\n* Skip the WordPress unit tests database when running backups\n* Don't back up databases that have no tables\n* Xdebug deprecated configuration option warnings fixed\n* Use HTTPS instead of SSH for WP CLI Doctor subcommand installation\n* Install missing library for Xdebug support\n\n## 3.5.1 ( 2020 December 11th )\n\n### Enhancements\n\n* Cleaned up leftover `nvm` removal code from main provisioner ( #2185 )\n* Added support for `vagrant-goodhosts`, we recommend using this in the future instead of `vagrant-hostsupdater`\n* Added `box-cleanup.sh` and `box-minimize.sh` scripts. Run these before creating a vagrant box to reduce disk size. These are only intended for box file creation.\n* Prevent use of sudo vagrant up ( #2215 )\n* Major refactor of the main provisioner, and introduction of a hook system to be used while provisioning ( #2230, #2238 )\n* Support for cloning git repositories into site folders via `config/config.yml` ( #2247 )\n* Install WP-CLI doctor package ( #2051 )\n* Enhanced database backup terminal output ( #2256 )\n* Sites with no `hosts` defined will now default to `{sitename}.test` ( #2267 )\n* Enhanced pre/post vagrant up and provision messages ( #2306 )\n* More warnings for people who use `sudo vagrant` commands ( do not use sudo ) ( #2306 )\n* If the VM was created by a root user, `/vagrant/provisioned_as_root` is now created ( #2306 )\n* The default version of PHP was upgraded to v7.3 ( #2307 )\n* Only install the specific version of PHP Pcov we need, rather than all versions ( #2310 )\n\n### Deprecations\n\n* SVN repository upgrade searches have been moved to a utility. Previous versions of VVV would search 5 folders deep for svn repositories that needed upgrading. If  you still need this, add the `svn-folder-upgrade` core utility. This change can speed up provisioning by 5-10+ seconds on large installations.\n* In the future the dashboard options will be deprecated. Custom dashboards should instead use site provisioners, allowing them to run provisioners, make custom Nginx configs, and have multiple dashboards if desired.\n* Some people use `sudo` when running vagrant commands with VVV, ***they should stop, do not use `sudo`***, and immediatley back up their data. Future VVV versions will assume that when running with `sudo` that the user is trying to recover databases in preparation for a `vagrant destroy`. This includes skipping the provisioning of sites, limiting the available features, and very annoying and prominent warnings. Users who intend to continue using `sudo` for everyday development should expect a painful experience if they do not try to recover. Feel free to ask for help in github or the VVV slack.\n\n### Bug Fixes\n\n* Fix mysql root password reset ( #2182 )\n* Fix empty string yml value reading on site provisioner ( #2201 )\n* Fixed an issue preventing backups of databases whose names contained reserved words ( #2213 )\n* Remove APT list files and switch compression type defaults for repositories to avoid hash mismatch ( #2208 )\n* In case the previous provisioning had some issues with dpkg on a new provision `dpkg --configure -a` is executed as default ( #2211 )\n* Fixed provision-site.sh syntax errors on fail situations ( #2231 )\n* Dashboard cloning is now more reliable ( #2243 )\n\n## 3.4.1 ( 2020 June 4th )\n\n### Enhancements\n\n* Improved the log folder names from `20200225-182126` to `2020.02.25-18-21-26` ( #2078 )\n* Added a `switch_php_debugmod` to replace the `xdebug_on` `tideways_off` style scripts ( #2084 )\n* Checks the default password for MySQL root user during provision ( #2077, #2085 )\n* Remove NVM support entirely ( #2088 )\n* Improved the provider examples in `default-config.yml` ( #2091 )\n* Run rubocop on Vagrantfile in a move towards more idiomatic ruby ( #2093 )\n* Improved network checks to test more domains ( #2099 )\n* ack-grep is now installed via `apt` rather than `beyondgrep.com` ( #2100 )\n* Refactor site provisioners ( #2102 )\n* Added new bears to the various vagrant trigger scripts ( #2105, #2108 )\n* Removed Ubuntu news MOTD ( #2105 )\n* Improve network checks wording ( #2106 )\n* Support for vagrant-hostmanager ( #2112 )\n* Bumped MariaDB sources from 10.3 to 10.4 ( #2140 )\n* Improve compatibility with globally installed gems on the guest ( #2138 )\n* Add LFTP tool ( #2137 )\n* List relevant log files when provisioners fail ( #2161 )\n\n### Bug Fixes\n\n* Fix check for utility installed that prevented SSL certificates to be generated ( #2073 )\n* Fix SSL issue on the base Ubuntu image ( #2074 )\n* Don't spider and recurse domains when checking for network connections ( #2103 )\n* Always set the database root user password to avoid having the default invalid password on fresh installs ( #2104 )\n* Swap the MariaDB apt mirror used for a more reliable source ( partially #2140 and in a217369 )\n* Fixed an issue with the dpkg lock file not being cleaned up sometimes ( #2151 )\n* Fix issues with the sad bear showing at the end of provisioning despite provisioners being succesful ( #2161 )\n* Fix provisioners printing all output to console (not just errors) ( #2174 )\n\n## 3.3.0 ( 2020 Feb 26th )\n\n### Enhancements\n\n* Improvements to the ruby code in the vagrant file\n\n### Bug Fixes\n\n* Installs the ntp date packages and starts the ntp service to fix time drift on sleep\n* Fixes an issue with the ntpsec package by removing it\n* Fixed the use of dots in site names breaking provisioning\n\n## 3.2.0 ( 2019 Nov 5th )\n\n### Enhancements\n\n* Improved output of `xdebug_on` and `xdebug_off`\n* Updated the default config to reference PHP 7.4 support\n* webgrind is now provisioned using composer\n* Added support for the vagrant-disksize plugin if available\n* Site provisioner output is now piped to the log file to simplify the terminal output. Errors should still be sent to the terminal\n* Utility provisioner is now piped to the log file to simplify terminal output\n\n### Bug Fixes\n\n* Fixed cloning site provisioners into empty directories\n* Enabled MailHog for all PHP versions\n* Removed trailing spaces from all provisioner files and configs\n* `my.cnf` is now readable by the vagrant user\n* Fixes to newline substitution in the splash screen and some rearrangement\n* MySQL binary logging is now disabled\n* Synced folder permission fixes for VMWare\n* Shared DB mounts are now mounted on Parallels and VMWare\n* Fixed `/var/log` being mounted on Parallels, HyperV, and VMWare\n\n## 3.1.1 ( 2019 August 6th )\n\nThis is a quick update that changes a default parameter when undefined. In VVV 2 the database was stored inside the VM, and in VVV 3 we put it in a shared folder. This didn't work for some people, so we added a config option to disable this. If this option wasn't set, VVV would use the shared folder.\n\nIn v3.1.1 if the option isn't set, it will instead store the database inside the VM. This makes it work out of the box for everybody. If you have a working VVV with the shared folder, you can restore this behaviour by setting `db_share_type: true` in `vvv-custom.yml` and reprovisioning, see `vvv-config.yml` for an example of where this setting goes\n\n### Enhancements\n\n* Improved the default `vvv-config.yml` to show new site template parameters\n* VVV installs less out of the box with a simplified `vvv-config.yml`, uncomment utilities to add software back in\n\n### Bug Fixes\n\n* Fixes the grunt installation\n* Fixes to file permissions in the `/vagrant` folder\n* Removed typos in the readme\n* Switched to a new box for VMWare\n* Shared folder warning fixes for VMWare\n* Trailing whitespace removed from the editorconfig file\n* Visiting the dashboard before it's provisioned now no longer gives a PHP error\n\n## 3.1.0 ( 2019 July 4th )\n\nThis is primarily a reliability update. Note that updating to v3.1 requires a `vagrant destroy` and a `vagrant up --provision`. If you've turned off shared database folders, backup beforehand.\n\n### Enhancements\n\n* The vagrant box can now be overridden using the `box` parameter in `vvv-custom.yml` under the `vm_config` section. This requires a `vagrant destroy` followed by a `vagrant up --provision` to recreate the VM using the new box\n* The main provisioner now only fetches the apt keys once rather than on every key check\n* The TTY fix shell provisioner and the `/vagrant` setup shell provisioner were merged for a minor reduction in provisioning time.\n* Allow `db_backup` script to be run manually regardless if automatic DB backups are disabled\n* `vvv`, `vvv.dev`, and `vvv.local` now redirect to `vvv.test`\n* Added a premade Sequel Pro config file under the `database` folder\n* Set GitHub token from `vvv-custom.yml` for Composer\n\n### Bug Fixes\n\n* Changed to the `ubuntu/bionic64` box to avoid issues with kernel page cache corruption until they can be identified, these were causing issues when updating a WP installation\n* Fixes to mysql user and group creation to improve shared folder reliability\n* Fixed an issue with permissions in files copied to the home folder\n* Fixed shared folder and permissions for Microsoft Hyper-V\n* Fixed all mount_options to the correct permissions for Microsoft Hyper-V\n* Set VM Name to exactly the same as VirtualBox, using v.vmname for Hyper-V\n* Fixes to log file paths for XDebug and PHP\n* Fixes files and folders in the home folder being owned by root instead of vagrant\n* Fixes support for database names containing hyphens in the import/restore scripts\n* Fixes the site provisioner attempting to clone site templates into existing sites when a site template is added to a site that didn't have one before, but has already provisioned ( it will note that this happened but won't clone the template )\n* Removed some references to Go\n* Fixed symlink issues with apt source files by copying instead\n* Specify `keep_colors` on vagrant provisioners to prevent composer from outputting valid messages in the red error colours, unnecessarily alarming users\n* `xdebug_on` and `xdebug_off` now toggle Tideways so that XDebug and Tideways are never running at the same time\n* Switched to Node v10 by default to fix compatibility issues with the WP Core build scripts\n* Runs the npm commands in the main provisioner under the vagrant user\n* Node v11 is now auto-downgraded to Node v10\n* Fixed Database SSH access from the host by enabling password authentication in `/etc/ssh/sshd_config`\n* Added code to remove NVM\n* Change Permission folder `/vagrant` from root to vagrant\n\n## 3.0.0 ( 17 May 2019 )\n\nThis version moves to an Ubuntu 18.04 box. It also moves the database data directory to a mounted folder. This means you can destroy and rebuild the VM without loss, but it also means **a `vagrant destroy` is necessary to update**. **Be sure to back up database tables you need beforehand**.\n\nIf you have issues provisioning with the new shared database folder, you can disable it by adding `db_share_type: false` to the `general:` section of `vvv-custom.yml` then reprovisioning. This will return you to the VVV 2 behaviour.\n\nIn the near future, we expect to use a box with PHP/etc preinstalled, this will be VVV 4.0.\n\n### Enhancements\n\n* The box was changed to use Ubuntu 18.04 LTS\n* If cloning a git repo to create a new site fails, VVV will halt provisioning and warn the user\n* Added tbe `git-svn` package, `git-svn` is used for bi-directional operation between subversion and git\n* MongoDB was updated to v4.0\n* New `/srv/provision` and `/srv/certificates` shared folders\n* Provisioners now log their output to a `logs/provisioners` folder, with each provision having its own subfolder\n\n### Bug Fixes\n\n* Added a VVV package mirror PPA\n* Updated apt-get keys for several sources\n* Prevented provisioning from occurring inside Ubuntu 14 VMs\n* Fixed issues with Nginx restarting too fast and too often by reloading instead\n* Fixed the permissions on the `db_restore` script\n* The `/var/log` folder is no longer directly mounted, instead the `/var/log/php`, `/var/log/nginx`, `/var/log/provisioners` and `/var/log/memcached` subfolders are mounted. This improves compatibility\n* The SQL import script for backups will now create the databases if they don't exist before importing\n\n### Removals\n\n* The deprecated domains `vvv.dev`, `vvv.local`, and `vvv.localhost`, were removed, the dashboard lives at `vvv.test`.\n* Removed the `/vagrant` default shared folder\n\n## 2.6.0 ( 2nd April 2019 )\n\n### Enhancements\n\n* Auto download plugin for vagrant, supported vagrant 2.2.0+\n* Autoset the locale inside the virtual machine to avoid errors in the console\n* Added a `vagrant_provision` and `vagrant_provision_custom` script to the homebin folder that run post-provision\n* Improved the messaging to tell the user at the end of a `vagrant up` or `vagrant provision` that it was successful\n* Added friendly splashes at the end of vagrant up and provision to make it obvious to end users when they've finished\n* The VVV install path is now in the splash screen, making it easier to debug GH issues\n* Added a `wordcamp_contributor_day_box` flag to the `vm_config` section of `vvv-config.yml` so that contributor day setup scripts are simpler\n\n### Bug Fixes\n\n* Improved detection of VirtualBox path to avoid `???` version numbers in the VVV splash\n\n## 2.5.1 ( 14th January 2019 )\n\n2.5 Brings a major bug fix, and some performance improvements to provisioning\n\n### Enhancements\n\n* Updated PHPMemcachedadmin from v1.2.2.1 to v1.2.3\n* A new `db_backup` option was added to `vvv-custom.yml`\n* A new `db_restore` option was added to skip the initial import\n* MailHog is now installed from a prebuilt binary instead of being built from source, speeding up initial provision\n* VVV will now explicitly check for vvv-hosts in the .vvv and provision subfolders and skip searching 3 folders down if they're found\n* Additional warnings and messages were added to aid with debugging site provisioners\n* VVV will warn the user if no hosts are defined for a site, or if no folder exists for a site\n* Skipping provisioning on a site will now make the site provisioner abort earlier\n* Site provisioners no longer need to use nginx template config files to add TLS keys, they can use `{vvv_tls_cert}` and `{vvv_tls_key}` in `vvv-nginx.conf`\n* `tideways.vvv.test` is now registered if the experimental tideways xhgui utility is present\n\n### Deprecations\n\n* Loading vvv-hosts is now skipped if hosts are defined in the VVV configuration file\n* GoLang was removed from the provisioner\n\n### Bug Fixes\n\n* Updated the GPG key for packagecloud.io\n* Updated the site provisioning script to fix WordPress Meta Environment failure (WordPress/meta-environment#122)\n* Continue if the vagrant up and reload triggers failed\n* Nginx and MySQL restarting is no longer done via a provisioner, this fixes contributor day issues when using `--no-provision` leading to nginx and mysql being unavailable. This is done via the `config/homebin/vagrant_up` script\n\n## 2.4.0 ( 2018 October 2th )\n\n### Enhancements\n\n* Updated Node v6 to Node v10\n* The default site config has been improved to clear up confusion over the difference between the site template and the develop site template\n* Utilities can now place nginx config files in `/etc/nginx/custom-utilities/` during provisioning\n* The default Nginx config can now be extended with files in `/etc/nginx/dashboard-extensions/` during provisioning\n* The message VVV showed when copying `vvv-config.yml` to `vvv-custom.yml` was a tad confusing, it's been improved\n\n### Bug Fixes\n\n* Sites that set `skip_provision` to true no longer have their hosts added\n* PHP error logging was switched from `/srv/log` to `/var/log`, fixing an issue with PHP logs appearing inside Nginx logs\n\n## 2.3.0 ( 2018 September )\n\n### Enhancements\n\n* Support for git-lfs\n* Replaced MailCatcher with MailHog\n* Network tests now use Launchpad instead of Google.com\n* Improved Splash screen and warning messages\n* Improved the default vvv config to prevent confusion\n* Improved the default prompt when using `vagrant ssh`\n* Improved the welcome message when you SSH in\n* If provisioning fails, VVV now aborts instead of continuing and failing\n* Apt-get keys are now bundled with the VM\n\n### Bug Fixes\n\n* VVV will now warn you when you add a site without a site template\n* Fixed issues wrapping bash prompt colours on some environments\n* Fixed an issue with dpkg failures\n* The logs folder is now owned by the vagrant user not the ubuntu user\n\n### Deprecations\n\n* VVV will now search 3 folders down for vvv-init.sh vvv-hosts and vvv-nginx.conf not 4 folders\n* Ruby was replaced with GoLang, and MailCatcher removed for new users\n\n## 2.2.1 (May, 2018)\n\nNote that to update to 2.2.1, you must remove the Vagrant triggers plugin and install Vagrant 2.1\n\n### Enhancements\n\n* Support for Vagrant 2.1, note that older versions of Vagrant and Vagrant Triggers are now deprecated\n* PHP 7.2 is now the default PHP version\n* Added the TLS CA authority, making HTTPS TLS/SSL connections to VVV sites easier, see [our docs on how to set this up](https://varyingvagrantvagrants.org/docs/en-US/references/https/)\n* The VVV terminal splash is now smaller, with better support for lighter colour schemes.\n* The dashboard is now a separate git repo cloned on provision, that can be overridden in `vvv-custom.yml`\n* PHPCompatibility PHPCS standards are now installed\n* VVV now has a `version` file\n* Private network IP can now be changed via `vvv-custom.yml`, see [#1407](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1407)\n* Default VM RAM bumped up to `2048` from `1024`, [see #1370](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1370)\n* The `src` subdomain of the WP develop site was disabled in line with changes to WP core\n* `php70` added to the core utility\n\n### Bug Fixes\n\n* Fixed the unexpected `-f` error on Windows\n* Fixed the splash not reporting git vs zip and branch on Windows\n* Fixes to PHPCS installation\n* Updated the box used for VMWare [see #1406](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1406)\n* When cloning utilities git ran as the root user [see #1491](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1491)\n* Composer ran under the root users [see #1489](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1489)\n* When cloning sites, git ran as the root user [see #1490](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1490)\n\n### Deprecations\n\n* `vvv-wordpress-develop` has been replaced by `custom-site-template-develop`\n* `vvv-wordpress` has been replaced by `custom-site-template`\n* Legacy TLS certificate generation for vvv.test was removed, it was broken, use the TLS-CA utility instead\n* PHP 7.0 is no longer the default PHP version used, and has been replaced with PHP 7.2, `php70` is available in the core utility [see #1484](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1484)\n* Older versions of Vagrant are no longer supported, Vagrant 2.1+ is now required\n\n## 2.1.0 (November 8, 2017)\n\n### Enhancements\n\n* Add cosmetic improvements to provisioning. This cleans up quite a bit of the junk that displayed on many lines when it should have displayed on one. See [#1247](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1247).\n* Update ack-grep to 2.16. See [#1148](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1148).\n* Dashboard (`http://vvv.test`) links now open in new tabs. See [#1168](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1168).\n* Speed up checking for `vvv-hosts` files in `Vagrantfile`. See [#1182](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1182).\n* Pass more configuration data to the VirtualBox VM on boot. See [#1197](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1197).\n* Link to `varyingvagrantvagrants.org`'s Add New Site in the `http://vvv.test` dashboard. See [#1220](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1220).\n* Build the VirtualBox VM name from the Vagrant directory and path hash. See [#1236](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1236).\n* PHPCS is now installed via Composer. See [#922](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/922).\n* VVV now uses .test instead of .dev for new installs and the dashboard. See [#583](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/583).\n* Added the VIP minimum coding standards to PHPCS. See [#1279](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1279).\n\n### Bugs\n\n* Fix a wrong path for phpcs and phpcbf executables. See [#1200](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1200).\n* Force Composer to use the `scripts` directory instead of `bin`. See [#1202](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1202).\n* Fix bug installing `rvm` (which broke MailCatcher). See [#1235](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1235).\n* Add `phpcodesniffer-standard` to PHPCS's `composer.json`. See [#1239](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1239).\n* Ignore provision generated PHPCS files in Git. See [#1276](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1276).\n\n### Documentation\n\nMany updates to VVV's documentation were made between the release of 2.0.0 and now. As of 2.1.0, the process to contributing to documentation has changed to use the [varyingvagrantvagrants.org](https://github.com/Varying-Vagrant-Vagrants/varyingvagrantvagrants.org) repository. This allows the workflow for shipping documentation changes to proceed separately from shipping VVV releases.\n\n## 2.0.0 (March 13, 2017)\n\nVVV 2.0.0 introduces **breaking changes** in how files are organized and introduces an entirely new method of configuration.\n\nA full `vagrant destroy` and `vagrant up` are recommended for best results. Running `vagrant destroy` will remove your virtual machine entirely and all data stored on the VM will be lost. Please be sure to backup your databases and any files stored in the VM. Files on your local file system will remain, but will still benefit (as always) from a backup.\n\nIt is possible to make the from VVV 1.4.x to 2.0.0 without a `vagrant destroy`, but the process will involve restructuring several things. Primarily, default project directories are now expected to contain a `public_html/` directory. This requires not only file changes, but new Nginx configurations. If you need help troubleshooting, don't hesitate to open a new issue.\n\nPlease see the [migration documentation](https://varyingvagrantvagrants.org/docs/en-US/adding-a-new-site/migrating-from-vvv-1-4-x/) for tips on how to manage this process.\n\nThe decision to include breaking changes in a release is not made lightly. The new ability to configure your installation of VVV with a `vvv-custom.yml` file will make VVV entirely more flexible and maintainable than it has ever been. Please see the [release blog post](https://varyingvagrantvagrants.org/blog/2017/03/13/varying-vagrant-vagrants-2-0-0.html) and [documentation](https://varyingvagrantvagrants.org/docs/en-US/) for more details.\n\n### Features & Enhancements\n\n* Introduce a YAML configuration for VVV. It is now possible to customize your configuration of VVV with a `vvv-custom.yml` file that defines which projects, hosts, and utilities are provisioned. See [#980](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/980).\n* Introduce a new [VVV Utilities repository](https://github.com/Varying-Vagrant-Vagrants/vvv-utilities). This works with the new YAML configuration to provide the ability to customize what utilities are provisioned with VVV. See [#1021](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1021).\n* Introduce a new [VVV Custom Site Template repository](https://github.com/Varying-Vagrant-Vagrants/custom-site-template). This can be used in `vvv-custom.yml` to quickly add new sites to VVV.\n* Introduce a new [VVV WordPress Develop repository](https://github.com/Varying-Vagrant-Vagrants/vvv-wordpress-develop). This is used in the default `vvv-config.yml` and can be used in (or excluded from) custom configurations.\n* Introduce a new [VVV WordPress Default repository](https://github.com/Varying-Vagrant-Vagrants/vvv-wordpress-default). This is used in the default `vvv-config.yml` and can be used in (or excluded from) custom configurations.\n* Introduce a new [VVV WordPress Trunk repository](https://github.com/Varying-Vagrant-Vagrants/vvv-wordpress-trunk). This can be used in custom configurations if you'd like a checkout of WordPress trunk.\n* Add support for custom keys in the YAML configuration. These are available to individual site provisioning scripts. See [#1071](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1071).\n* Add support for PHP 5.6, 7.0, and 7.1 via the VVV YAML configuration. See [#1055](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1055).\n* Introduce a new documentation structure and an entire set of new documentation. See [#1073](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1073) and, more importantly, [#1112](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1112).\n* Introduce documentation explaining the governance of VVV. See [#1118](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1118).\n* Install MariaDB 10.1 instead of MySQL 5.5 as part of default provisioning. See [#1005](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1005) and [#1115](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1115).\n* Install and update WP-CLI with its PHAR file rather than with a git clone. See [#1057](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1057).\n* Add the `php-memcached` package to default provisioning as an alternative to `php-memcache` that works with PHP 7.0. See [#1076](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1076).\n* Set `colordiff` as the default `svn diff` command tool. See [#1077](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1077).\n* Add a VVV logo to provisioning. See [#1110](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1110).\n* Add some style to the default VVV dashboard. See [#1122](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1122).\n\n### Bugs\n\n* Remove old, unused `mu-plugins` directory. See [#1027](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1027).\n* Follow redirects when detecting a network connection. See [#1048](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1048).\n* Include `$is_args` with `try_files` in Nginx configuration. See [#1075](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1075).\n* Remove an attempt to enforce `ipv4` in Postfix as it was not working. See [#1116](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1116).\n\n## 1.4.1 (January 16, 2017)\n\n* Introduce a documentation structure for future releases.\n\n## 1.4.0 (November 2, 2016)\n\n### Bug fixes and Enhancements\n\n* PHP 7.0.x has now replaced PHP 5.5.x. See [#844](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/844).c\n* Update PHPUnit to the latest stable 5.6.x version. See [#1004](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1004)\n* Xdebug 2.4.0 is now built from source to provide PHP 7.0.x support. See [#869](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/869).\n* Disable Xdebug during provisioning so that Composer can operate at normal speed. See [#971](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/971)\n* Improve the package installation check to avoid false positives. See [#840](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/840).\n* Allow `vvv-nginx.conf` to be located in a project's subdirectory. See [#852](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/852).\n* Install the latest version of git via its PPA. See [#872](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/872)\n* Assign names to pre, custom, default, and post provisioners to make `--provision-with` possible. See [#806](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/806)\n* Install `nvm` to provide access to multiple NodeJS versions. See [#863](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/863)\n* Provide the NodeJS 6.x LTS release by default. See [#1007](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/1007)\n* Switch to NodeSource for NodeJS packages. See [#779](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/779)\n* Move `query_cache_*` config for MySQL to its proper place in the `[mysqld]` section. See [#925](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/925)\n* Allow WordPress core unit test database configuration to be supplied with environment variables. See [#846](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/846).\n* Use the correct command `wp core update` when updating WordPress with WP-CLI. See [#958](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/958)\n* Remove the `core.svn.wordpress.org` WordPress trunk checkout from default provisioning. `develop.svn.wordpress.org` remains. See [#921](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/921)\n* Checkout and initialize the `develop.svn.wordpress.org` repository in a temporary (non-shared) directory. This addresses issues with a possible race condition during NPM package installation on a shared drive. See [#969](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/969)\n\n## 1.3.0 (February 21, 2016)\n\n### Features\n* Add support for Parallels as a provider. See [#479](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/479).\n* Add support for Hyper-V as a provider. See [#742](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/742).\n* Add support for VMWare Fusion as a provider. See [#587](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/587).\n* Add support for VMWare Workstation as a provider. See [656](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/656).\n* Add MailCatcher to default provisioning. See [#632](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/632).\n\n### Bug fixes and enhancements\n* Composer: Set a custom GitHub token for Composer if it exists. See [#575](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/575).\n* Docs: Update inline `Vagrantfile` documentation to better explain various network configurations.\n* MySQL: Enable `innodb_file_per_table`. See [#537](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/537).\n* npm: Add `npm-check-updates` during provisioning to help manage `package.json` inside the VM. See [#484](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/484).\n* PHP: Bump max upload size in PHP and Nginx to 1024MB to support developing on the Internet in the year 2016. See [#599](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/599).\n* PHPCS: Set default code standards for PHPCS to WordPress-Core. See [#574](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/574).\n* phpMyAdmin: Allow for a custom phpMyAdmin configuration file. See [#688](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/688).\n* PHPUnit: Update PHPUnit to 4.3.8. A future update of VVV should include PHP 5.6.x or PHP 7 and allow us to update PHPUnit to 5.x. See [#808](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/808).\n* PHPUnit: Allow PHPUnit to run tests from the local machine while using the WordPress unit tests database in the virtual machine. See [#785](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/785).\n* PHPUnit: Set the `WP_CORE_DIR` path so PHPUnit tests are run against WordPress trunk. See [#783](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/783).\n* Provision: Rewrite `provision.sh` to be more modular. This improves readability and may one day aid in testability. See [#659](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/659).\n* Vagrant: Set the default box name to that of the working directory to allow for multiple instances of VVV without conflict. See [#706](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/706).\n* Vagrant: Allow for a custom trigger, `vagrant_up` to fire during `vagrant up` and `vagrant reload`. See g[#778](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/778).\n* Vagrant: Make it easier and more forward-compatible to modify the virtual machine's IP address. See [#781](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/781).\n* Vagrant: Clarify default setting of 1 CPU when creating the virtual machine. See [#625](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/625/).\n* WordPress: Provide better support for testing with xip.io by accounting for these requests in `wp-config.php`. See [#559](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/559).\n* WordPress: SVN repositories configured in VVV provisioning are now set to HTTPS. Existing repositories configured to HTTP will not automatically update during provisioning unless they are first relocated to HTTPS. The `svn relocate` command can be used for this. See [#561](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/561).\n* WP-CLI: Add an external configuration for WP-CLI so that a locally installed copy can be used outside of the VM. See [#564](https://github.com/Varying-Vagrant-Vagrants/VVV/pull/564).\n\n## 1.2.0 (December 14, 2014)\n\n* VVV is now [MIT Licensed](https://github.com/Varying-Vagrant-Vagrants/VVV/blob/master/LICENSE).\n* ***Possible Breaking:*** By default, database files are no longer mapped to a local location.\n* A full `vagrant destroy` and the removal of MySQL data from `{vvv-dir}/database/data/` is recommended.\n* If database files already exist from an earlier version of VVV, data will continue to be mapped locally until removed.\n* Database data will continue to exist on the virtual machine through `vagrant halt` and `vagrant suspend`.\n* Database data will no longer exist on the virtual machine after `vagrant destroy`.\n* A `db_backup` script is provided by default that creates local backups of each database on halt, suspend, and destroy if the vagrant-triggers plugin is installed.\n* ***Possible Breaking:*** Ubuntu has been upgraded from 12.04 LTS to 14.04 LTS. We have also moved from 32bit to 64bit.\n* A full `vagrant destroy` is recommended for best results.\n* A new box will be downloaded for the base virtual machine. If you'd like to free space, remove the old box with `vagrant box remove precise32`. Running `vagrant box list` will show you all base VMs on your local machine.\n* With a new operating system comes a new RSA key. If you are connecting via SSH through an application that relies on your machines `known_hosts` file, you will need to clear the old key for 192.168.56.4. [See #365](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/365)\n* Init scripts are now fired with `source` rather than `bash`. Due to this change, something like `cd \"$(dirname $0)\"` no longer works as expected. See [#373](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/373) and [#370](https://github.com/Varying-Vagrant-Vagrants/VVV/issues/370) for reasoning and discussion.\n* WordPress: Add `develop_git` to convert the default SVN checkout to Git.\n* PHP: Update to PHP 5.5.x\n* PHP: Remove php-apc and apc.ini. Enable built in opcache.\n* PHP: Start tracking custom php5-fpm.conf file.\n* PHP: Start tracking custom opcache.ini file.\n* PHP: Update to PHPUnit 4.0.x\n* PHP: Install XDebug PECL extension directly, rather than via apt.\n* phpMyAdmin: Update to 4.2.13.1\n* WP-Cli: Add support for autocomplete.\n* VVV Dashboard: Add [Opcache Status](https://github.com/rlerdorf/opcache-status) for opcache monitoring.\n* Bash: Allow for a custom `bash_prompt` file in `config/`\n* NodeJS: Use recommended PPAs to install\n* NodeJS: Self update NPM during provisioning\n* Logs: Map a shared directory for logs, start storing `php_errors.log`\n* Nginx: Install using the mainline repository, currently 1.7.x.\n\n## 1.1\n\n* Transition to [Varying Vagrant Vagrants organization](https://github.com/Varying-Vagrant-Vagrants).\n* Add a CONTRIBUTING document.\n* Add `--allow-root` to all `wp-cli` calls in VVV core.\n* Use a new global composer configuration.\n* Add `zip` as a package during provisioning.\n* Introduce a helpful caveats section.\n* Remove `tcp_nodelay` config in Nginx. Reasoning in 0cce79501.\n\n## 1.0\n\n* **Introduce** [Auto Site Setup](https://github.com/varying-vagrant-vagrants/VVV/wiki/Auto-site-Setup) during provisioning to allow for easy new project configuration.\n* **Happy Fix** `vagrant up` after halt meets expectations and no longer requires provisioning to be reapplied.\n* Begin implementing best practices from Google's [shell style guide](http://google-styleguide.googlecode.com/svn/trunk/shell.xml) in our provisioning scripts.\n* Databases can now be dropped in phpMyAdmin. Pro-tip, `drop database wordpress_develop` in phpMyAdmin followed by `vagrant provision` clears your src.wordpress-develop.dev for reinstall.\n* Copy config files instead of linking them. This allows for a nicer `vagrant up` after a `vagrant halt` and treats provisioning more like it should be treated. See [1fbf329](https://github.com/varying-vagrant-vagrants/VVV/commit/1fbf32926e69b852d912047da1bfa7c302693b82) for a more detailed commit message.\n* Allow for `dashboard-custom.php` to override the default dashboard provided by VVV\n* Reduce size of the included `my.cnf` file to exclude unrequired changes. Increase `max_allowed_packet` setting.\n\n## 0.9\n\n* **Possible Annoying:** Use `precise32` for the Vagrant box name for better cross project box caching.\n* **Note:** This will probably cause a new Vagrant box to download. Use `vagrant box remove std-precise32` after a `vagrant destroy` to remove the old one and start with this.\n* **Possible Breaking:** Change VM hostname to `vvv.dev`\n* **Note:** If you had anything setup to rely on the hostname of precise32-dev, this may break.\n* **Possible Breaking:** Change MySQL root password to `root`\n* **Note:** If anything is setup to rely on the previous password of `blank`, this  may break.\n* You can also now access `mysql -u root` without a password.\n* **Introduce** support for the WordPress develop.svn\n* This was added pretty much the day it was available. Such a pleasure to work with!\n* Allowed us to remove the old `wordpress-unit-tests` in favor of the new `wordpress-develop/tests`\n* **Introduce** support for the Vagrant hostsupdater plugin\n* Use `vagrant plugin install vagrant-hostsupdater` to install.\n* Very, very much recommended for an easier and happier life.\n* **Introduce** Postfix with a default config. Mail works! (But check your spam)\n* **Introduce** the WordPress i18n Tools, including `config/homebin/makepot`\n* **Introduce** PHP_CodeSniffer, WordPress-Coding-Standards, and Webgrind\n* **Remove** entire well intended but not so useful flags system\n* Rather than include PHPMemcachedadmin in the VVV repository, download it on initial provision\n* Verify support for Vagrant 1.3.5 (as well as 1.2.x) and VirtualBox 4.3 (as well as 4.2.x)\n* Move `xdebug_on` and `xdebug_off` controls to executable files in `config/homebin`\n* Generate `vagrant_dir` in `Vagrantfile` for accessing relative file locations\n* Add a basic network connectivity check by pinging Google DNS servers\n* Update stable version of WordPress automatically on provision\n* General cleanup to screen output during provisioning\n* Many updates to the default nginx configuration\n* Remove poor, unused implementation of Watchr\n* Provide default certs for SSL in Nginx\n\n## 0.8\n\n* Enable SSH agent forwarding\n* Wrap update/installation procedures with a network status check\n* Enable WP_DEBUG by default\n* Update wp-cli during provisioning\n* Better handling of package status checks\n* Better handling of custom apt sources\n* Add PHPMemcachedAdmin 1.2.2 to repository for memcached stats viewing.\n* Add phpMyAdmin 4.0.3 to repository for database management\n\n## 0.7\n\n**BREAKING CHANGES**: Breaking changes are made in this release due to the reorganization of config files for PHP that will require a full `vagrant destroy` and `vagrant up` to resolve.\n\n* Refactor of package provisioning allows for better (and incremental) `vagrant provision` uses by checking individual package installs before attempting to install them again.\n* Remove several flags used to disable portions of provisioning. This favors the scaffold approach provided by VVV.\n* Improved nginx configuration and documentation\n* Use --asume-yes vs --force-yes with apt\n* Update Composer based on a specific revision rather than always checking for an update.\n* Update Mockery based on a specific version rather than using the dev channel.\n* Update [ack-grep](http://beyondgrep.com) to 2.04\n* Add php5-imap package\n* Update to Nginx 1.4 sources\n* Update to PHP 5.4 sources\n* Update to Git 1.8 sources\n* Updated xdebug configuration parameters, fixes 60s timeout issue\n* Better method to enable/disable xdebug configuration\n* Refactor handling of custom PHP, APC, and xdebug configurations\n* Bump default memcached memory allocation to 128M\n* Introduce custom `apc.ini` file, bump `apc.shm_size` to 128M\n* Provide a phpinfo URL at `http://vvv.test/phpinfo/`\n* Set `WP_DEBUG` to true by default for included installations of WordPress\n\n## 0.6\n\n* Add [WordPress Unit Tests](http://unit-tests.svn.wordpress.org/trunk/)\n* Option for custom shell provisioning file\n* Pre/Post provisioning hooks via additional shell scripts\n* Flags system to disable portions of default provisioning\n* Grab stable WordPress from latest.tar.gz vs SVN\n* Append custom apt sources list to default\n* Update to SVN 1.7.9, addresses specific Windows permissions issue\n* Move [wp-cli](https://github.com/wp-cli/wp-cli) to /srv/www/ for easier contributions\n\n## 0.5\n\n* Repository moved under [10up organization](http://github.com/10up/varying-vagrant-vagrants)\n* Wrap provisioning in an initial run flag, speed up subsequent boots\n* Add support for a Customfile to pull in desired local modifications\n\n## 0.4\n\n* Add default .vimrc file with some helpful tricks\n* Clarify sample SQL commands\n* Add WordPress trunk installation to default setup\n* Use composer to install phpunit, mockery and xdebug * faster than PEAR\n* Filename modifications for config files\n* General documentation improvements\n\n## 0.3\n\n* Add Mockery\n* Vagrant version requirement changes\n* Add wp-cli\n* Use wp-cli to setup default WordPress installation\n* Add subversion\n\n## 0.2.1\n\n* Bug fix on importing SQL files\n\n## 0.2\n\n* Add ack-grep\n* Move to Vagrant 1.1 style Vagrantfile\n* Better DB handling all around\n* Link mysql data directories for persistence\n* Add PHPUnit\n* Add XDebug\n\n## 0.1\n\n* Initial version, lots of junk from untracked versions. :)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2666015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at vvv@tomjn.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.083984375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-present the contributors of the VVV project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0751953125,
          "content": "# VVV\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/206b06167aaf48aab24422cd417e8afa)](https://www.codacy.com/gh/Varying-Vagrant-Vagrants/VVV?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Varying-Vagrant-Vagrants/VVV&amp;utm_campaign=Badge_Grade) [![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/varying-vagrant-vagrants/vvv.svg)](http://isitmaintained.com/project/varying-vagrant-vagrants/vvv \"Average time to resolve an issue\") [![Percentage of issues still open](http://isitmaintained.com/badge/open/varying-vagrant-vagrants/vvv.svg)](http://isitmaintained.com/project/varying-vagrant-vagrants/vvv \"Percentage of issues still open\")\n\nVVV is a local developer environment, mainly aimed at [WordPress](https://wordpress.org) developers. It uses [Vagrant](https://www.vagrantup.com) and Docker/VirtualBox/Parallels/HyperV to create a linux server environment for building sites, and contributing to WordPress itself.\n\n_VVV stands for Varying Vagrant Vagrants._\n\n## How To Use\n\nTo use it, download and install [Vagrant](https://www.vagrantup.com) and a provider such as [VirtualBox](https://www.virtualbox.org/), Docker, or Parallels Pro. Then, clone this repository and run:\n\n```shell\nvagrant plugin install --local\nvagrant up --provision\n```\n\nWhen it's done, visit [http://vvv.test](http://vvv.test).\n\nThe online documentation contains more detailed [installation instructions](https://varyingvagrantvagrants.org/docs/en-US/installation/).\n\n* **Web**: [https://varyingvagrantvagrants.org/](https://varyingvagrantvagrants.org/)\n* **Contributing**: Contributions are more than welcome. Please see our current [contributing guidelines](https://varyingvagrantvagrants.org/docs/en-US/contributing/). Thanks!\n\n## Minimum System requirements\n\n[For system requirements, please read the system requirements documentation here](https://varyingvagrantvagrants.org/docs/en-US/installation/software-requirements/)\n\n## Software included\n\nFor a comprehensive list, please see the [list of installed packages](https://varyingvagrantvagrants.org/docs/en-US/installed-packages/).\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 43.6611328125,
          "content": "# frozen_string_literal: true\n\n# -*- mode: ruby -*-\n# vi: set ft=ruby ts=2 sw=2 et:\n\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.require_version '>= 2.2.4'\nrequire 'yaml'\nrequire 'fileutils'\nrequire 'pathname'\nrequire 'socket'\n\ndef sudo_warnings\n  red = \"\\033[38;5;9m\" # 124m\"\n  creset = \"\\033[0m\"\n  puts \"#{red}┌-──────────────────────────────────────────────────────────────────────────────┐#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│  ⚠ DANGER DO NOT USE SUDO ⚠                                                   │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│ ! ▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄ !  You should never use sudo or root with vagrant.          │#{creset}\"\n  puts \"#{red}│  !█▒▒░░░░░░░░░▒▒█    It causes lots of problems :(                            │#{creset}\"\n  puts \"#{red}│    █░░█░▄▄░░█░░█ !                                                            │#{creset}\"\n  puts \"#{red}│     █░░█░░█░▄▄█    ! We're really sorry but you may need to do painful        │#{creset}\"\n  puts \"#{red}│  !  ▀▄░█░░██░░█      cleanup commands to fix this.                            │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│  If vagrant does not work for you without sudo, open a GitHub issue instead   │#{creset}\"\n  puts \"#{red}│  In the future, this warning will halt provisioning to prevent new users      │#{creset}\"\n  puts \"#{red}│  making this mistake.                                                         │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│  ⚠ DANGER SUDO DETECTED!                                                      │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│  In the future the VVV team will be making it harder to use VVV with sudo.    │#{creset}\"\n  puts \"#{red}│  We will require a config option so that users can do data recovery, and      │#{creset}\"\n  puts \"#{red}│  disable sites and the dashboard.                                             │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}│  DO NOT USE SUDO, use ctrl+c/cmd+c and cancel this command ASAP!!!            │#{creset}\"\n  puts \"#{red}│                                                                               │#{creset}\"\n  puts \"#{red}└───────────────────────────────────────────────────────────────────────────────┘#{creset}\"\n  # exit\nend\n\n\ndef vvv_is_docker_present()\n  if `docker version`\n    return true\n  end\n  return false\nend\n\ndef vvv_is_parallels_present()\n  return Vagrant.has_plugin?(\"vagrant-parallels\")\nend\n\nvagrant_dir = __dir__\nshow_logo = false\nbranch_c = \"\\033[38;5;6m\" # 111m\"\nred = \"\\033[38;5;9m\" # 124m\"\ngreen = \"\\033[1;38;5;2m\" # 22m\"\nblue = \"\\033[38;5;4m\" # 33m\"\npurple = \"\\033[38;5;5m\" # 129m\"\ndocs = \"\\033[0m\"\nyellow = \"\\033[38;5;3m\" # 136m\"\nyellow_underlined = \"\\033[4;38;5;3m\" # 136m\"\nurl = yellow_underlined\ncreset = \"\\033[0m\"\n\nversion = '?'\nFile.open(\"#{vagrant_dir}/version\", 'r') do |f|\n  version = f.read\n  version = version.gsub(\"\\n\", '')\nend\n\nunless Vagrant::Util::Platform.windows?\n  if Process.uid == 0\n    sudo_warnings\n  end\nend\n\nunless Vagrant::Util::Platform.windows?\n  if Process.uid == 0\n    puts \" \"\n    puts \"#{red} ⚠ DANGER VAGRANT IS RUNNING AS ROOT/SUDO, DO NOT USE SUDO ⚠#{creset}\"\n    puts \" \"\n  end\nend\n\n# whitelist when we show the logo, else it'll show on global Vagrant commands\nshow_logo = true if %w[up resume status provision reload].include? ARGV[0]\nshow_logo = false if ENV['VVV_SKIP_LOGO']\n\n# Show the initial splash screen\nif show_logo\n  git_or_zip = 'zip-no-vcs'\n  branch = ''\n  commit = ''\n  if File.directory?(\"#{vagrant_dir}/.git\")\n    git_or_zip = 'git::'\n    branch = `git --git-dir=\"#{vagrant_dir}/.git\" --work-tree=\"#{vagrant_dir}\" rev-parse --abbrev-ref HEAD`\n    branch = branch.chomp(\"\\n\"); # remove trailing newline so it doesn't break the ascii art\n    commit = `git --git-dir=\"#{vagrant_dir}/.git\" --work-tree=\"#{vagrant_dir}\" rev-parse --short HEAD`\n    commit = '(' + commit.chomp(\"\\n\") + ')'; # remove trailing newline so it doesn't break the ascii art\n  end\n\n  splashfirst = <<~HEREDOC\n    \\033[1;38;5;196m#{red}__ #{green}__ #{blue}__ __\n    #{red}\\\\ V#{green}\\\\ V#{blue}\\\\ V / #{purple}v#{version} #{purple}Ruby:#{RUBY_VERSION}, Path:\"#{vagrant_dir}\"\n    #{red} \\\\_/#{green}\\\\_/#{blue}\\\\_/  #{creset}#{branch_c}#{git_or_zip}#{branch}#{commit}#{creset}\n\n  HEREDOC\n  puts splashfirst\nend\n\n# Load the config file before the second section of the splash screen\n\n# Perform file migrations from older versions\nvvv_config_file = File.join(vagrant_dir, 'config/config.yml')\nunless File.file?(vvv_config_file)\n  old_vvv_config = File.join(vagrant_dir, 'vvv-custom.yml')\n  if File.file?(old_vvv_config)\n    puts \"#{yellow}Migrating #{red}vvv-custom.yml#{yellow} to #{green}config/config.yml#{yellow}\\nIMPORTANT NOTE: Make all modifications to #{green}config/config.yml#{yellow}.#{creset}\\n\\n\"\n    FileUtils.mv(old_vvv_config, vvv_config_file)\n  else\n    puts \"#{yellow}Copying #{red}config/default-config.yml#{yellow} to #{green}config/config.yml#{yellow}\\nIMPORTANT NOTE: Make all modifications to #{green}config/config.yml#{yellow} in future so that they are not lost when VVV updates.#{creset}\\n\\n\"\n    FileUtils.cp(File.join(vagrant_dir, 'config/default-config.yml'), vvv_config_file)\n  end\nend\n\nold_db_backup_dir = File.join(vagrant_dir, 'database/backups/')\nnew_db_backup_dir = File.join(vagrant_dir, 'database/sql/backups/')\nif (File.directory?(old_db_backup_dir) == true) && (File.directory?(new_db_backup_dir) == false)\n  puts 'Moving db backup directory into database/sql/backups'\n  FileUtils.mv(old_db_backup_dir, new_db_backup_dir)\nend\n\nbegin\n  vvv_config = YAML.load_file(vvv_config_file)\n  unless vvv_config['sites'].is_a? Hash\n    vvv_config['sites'] = {}\n\n    puts \"#{red}config/config.yml is missing a sites section.#{creset}\\n\\n\"\n  end\nrescue StandardError => e\n  puts \"#{red}config/config.yml isn't a valid YAML file.#{creset}\\n\\n\"\n  puts \"#{red}VVV cannot be executed!#{creset}\\n\\n\"\n\n  warn e.message\n  exit\nend\n\nvvv_config['hosts'] = [] unless vvv_config['hosts'].is_a? Hash\n\nvvv_config['hosts'] += ['vvv.test']\n\nvvv_config['sites'].each do |site, args|\n  if args.is_a? String\n    repo = args\n    args = {}\n    args['repo'] = repo\n  end\n\n  args = {} unless args.is_a? Hash\n\n  defaults = {}\n  defaults['repo'] = false\n  defaults['vm_dir'] = \"/srv/www/#{site}\"\n  defaults['local_dir'] = File.join(vagrant_dir, 'www', site)\n  defaults['branch'] = 'master'\n  defaults['skip_provisioning'] = false\n  defaults['allow_customfile'] = false\n  defaults['nginx_upstream'] = 'php'\n  defaults['hosts'] = []\n\n  vvv_config['sites'][site] = defaults.merge(args)\n\n  unless vvv_config['sites'][site]['skip_provisioning']\n    site_host_paths = Dir.glob(Array.new(4) { |i| vvv_config['sites'][site]['local_dir'] + '/*' * (i + 1) + '/vvv-hosts' })\n    vvv_config['sites'][site]['hosts'] += site_host_paths.map do |path|\n      lines = File.readlines(path).map(&:chomp)\n      lines.grep(/\\A[^#]/)\n    end.flatten\n    if vvv_config['sites'][site]['hosts'].is_a? Array\n      vvv_config['hosts'] += vvv_config['sites'][site]['hosts']\n    else\n      vvv_config['hosts'] += [\"#{site}.test\"]\n    end\n  end\n  vvv_config['sites'][site].delete('hosts')\nend\n\nif vvv_config['extension-sources'].is_a? Hash\n  vvv_config['extension-sources'].each do |name, args|\n    next unless args.is_a? String\n\n    repo = args\n    args = {}\n    args['repo'] = repo\n    args['branch'] = 'master'\n\n    vvv_config['extension-sources'][name] = args\n  end\nelse\n  vvv_config['extension-sources'] = {}\nend\n\nvvv_config['dashboard'] = {} unless vvv_config['dashboard']\ndashboard_defaults = {}\ndashboard_defaults['repo'] = 'https://github.com/Varying-Vagrant-Vagrants/dashboard.git'\ndashboard_defaults['branch'] = 'master'\nvvv_config['dashboard'] = dashboard_defaults.merge(vvv_config['dashboard'])\n\nunless vvv_config['extension-sources'].key?('core')\n  vvv_config['extension-sources']['core'] = {}\n  vvv_config['extension-sources']['core']['repo'] = 'https://github.com/Varying-Vagrant-Vagrants/vvv-utilities.git'\n  vvv_config['extension-sources']['core']['branch'] = 'master'\nend\n\nvvv_config['utilities'] = {} unless vvv_config['utilities'].is_a? Hash\nvvv_config['utility-sources'] = {} unless vvv_config['utility-sources'].is_a? Hash\nvvv_config['extension-sources'] = {} unless vvv_config['extension-sources'].is_a? Hash\nvvv_config['extensions'] = {} unless vvv_config['extensions'].is_a? Hash\n\nvvv_config['vm_config'] = {} unless vvv_config['vm_config'].is_a? Hash\n\nvvv_config['general'] = {} unless vvv_config['general'].is_a? Hash\n\ndefaults = {}\ndefaults['memory'] = 2048\ndefaults['cores'] = 2\ndefaults['provider'] = 'virtualbox'\n\n# if Arm default to docker then parallels\nif Etc.uname[:version].include? 'ARM64'\n  if vvv_is_parallels_present()\n    defaults['provider'] = 'parallels'\n  else\n    defaults['provider'] = 'docker'\n  end\nend\n\n# This should rarely be overridden, so it's not included in the config/default-config.yml file.\ndefaults['private_network_ip'] = '192.168.56.4'\n\nvvv_config['vm_config'] = defaults.merge(vvv_config['vm_config'])\nvvv_config['hosts'] = vvv_config['hosts'].uniq\n\nvvv_config['vagrant-plugins'] = {} unless vvv_config['vagrant-plugins']\n\n# Early mapping of the hosts to be added.\nvvv_config['utilities'].each do |name, extensions|\n  extensions = {} unless extensions.is_a? Array\n  extensions.each do |extension|\n    if extension == 'tideways'\n      vvv_config['hosts'] += ['tideways.vvv.test']\n      vvv_config['hosts'] += ['xhgui.vvv.test']\n    end\n  end\nend\nvvv_config['extensions'].each do |name, extensions|\n  extensions = {} unless extensions.is_a? Array\n  extensions.each do |extension|\n    if extension == 'tideways'\n      vvv_config['hosts'] += ['tideways.vvv.test']\n      vvv_config['hosts'] += ['xhgui.vvv.test']\n    end\n  end\nend\n\n# Create a global variable to use in functions and classes\n$vvv_config = vvv_config\n\n# Show the second splash screen section\n\nif show_logo\n  platform = [ Vagrant::Util::Platform.platform]\n  if Vagrant::Util::Platform.windows?\n    platform << 'windows '\n    platform << 'wsl ' if Vagrant::Util::Platform.wsl?\n    platform << 'msys ' if Vagrant::Util::Platform.msys?\n    platform << 'cygwin ' if Vagrant::Util::Platform.cygwin?\n    if Vagrant::Util::Platform.windows_hyperv_enabled?\n      platform << 'HyperV-Enabled '\n    end\n    platform << 'HyperV-Admin ' if Vagrant::Util::Platform.windows_hyperv_admin?\n    if Vagrant::Util::Platform.windows_admin?\n      platform << 'HasWinAdminPriv '\n    else\n      platform << 'missingWinAdminPriv ' unless Vagrant::Util::Platform.windows_admin?\n    end\n  else\n    platform << 'shell:' + ENV['SHELL'] if ENV['SHELL']\n    platform << 'systemd ' if Vagrant::Util::Platform.systemd?\n  end\n\n  platform << 'vagrant-hostmanager' if Vagrant.has_plugin?('vagrant-hostmanager')\n  platform << 'vagrant-hostsupdater' if Vagrant.has_plugin?('vagrant-hostsupdater')\n  platform << 'vagrant-goodhosts' if Vagrant.has_plugin?('vagrant-goodhosts')\n  platform << 'vagrant-vbguest' if Vagrant.has_plugin?('vagrant-vbguest')\n  platform << 'vagrant-disksize' if Vagrant.has_plugin?('vagrant-disksize')\n\n  platform << 'CaseSensitiveFS' if Vagrant::Util::Platform.fs_case_sensitive?\n  unless Vagrant::Util::Platform.terminal_supports_colors?\n    platform << 'monochrome-terminal'\n  end\n\n  if defined? vvv_config['vm_config']['wordcamp_contributor_day_box']\n    if vvv_config['vm_config']['wordcamp_contributor_day_box'] == true\n      platform << 'contributor_day_box'\n    end\n  end\n\n  if defined? vvv_config['vm_config']['box']\n    unless vvv_config['vm_config']['box'].nil?\n      puts \"Custom Box: Box overridden via config/config.yml , this won't take effect until a destroy + reprovision happens\"\n      platform << 'box_override:' + vvv_config['vm_config']['box']\n    end\n  end\n\n  if defined? vvv_config['general']['db_share_type']\n    if vvv_config['general']['db_share_type'] != true\n      platform << 'shared_db_folder_disabled'\n    else\n      platform << 'shared_db_folder_enabled'\n    end\n  else\n    platform << 'shared_db_folder_default'\n  end\n\n  provider_version = '??'\n\n  provider_meta = nil\n\n  case vvv_config['vm_config']['provider']\n  when 'virtualbox'\n    provider_meta = VagrantPlugins::ProviderVirtualBox::Driver::Meta.new()\n    provider_version = provider_meta.version\n  when 'parallels'\n    provider_version = '?'\n    if defined? VagrantPlugins::Parallels\n      provider_meta = VagrantPlugins::Parallels::Driver::Meta.new()\n      provider_version = provider_meta.version\n    end\n  when 'vmware'\n    provider_version = '??'\n  when 'hyperv'\n    provider_version = 'n/a'\n  when 'docker'\n    provider_version = `docker -v`.gsub(\"Docker version \", \"\")\n  else\n    provider_version = '??'\n  end\n\n  splashsecond = <<~HEREDOC\n    #{yellow}Platform: #{yellow}#{platform.join(' ')}\n    #{green}Vagrant: #{green}v#{Vagrant::VERSION}, #{blue}#{vvv_config['vm_config']['provider']}: #{blue}v#{provider_version}\n\n    #{docs}Docs:       #{url}https://varyingvagrantvagrants.org/\n    #{docs}Contribute: #{url}https://github.com/varying-vagrant-vagrants/vvv\n    #{docs}Dashboard:  #{url}http://vvv.test#{creset}\n\n  HEREDOC\n  puts splashsecond\nend\n\nif defined? vvv_config['vm_config']['provider']\n  # Override or set the vagrant provider.\n  ENV['VAGRANT_DEFAULT_PROVIDER'] = vvv_config['vm_config']['provider']\nend\n\nENV['LC_ALL'] = 'en_US.UTF-8'\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  # VirtualBox\n  config.vm.provider :virtualbox do |v|\n    unless Vagrant::Util::Platform.windows?\n      if Process.uid == 0\n        machine_id_file=Pathname.new(\".vagrant/machines/default/virtualbox/id\")\n        unless machine_id_file.exist?()\n          puts \"#{red} ⚠ DANGER VAGRANT IS RUNNING AS ROOT/SUDO, DO NOT USE SUDO ⚠#{creset}\"\n          puts \" ! VVV has detected that the VM has not been created yet, and is running as root/sudo.\"\n          puts \" ! Do not use sudo with VVV, do not run VVV as a root user. Aborting.\"\n          abort( \"Aborting Vagrant command to prevent a critical mistake, do not use sudo/root with VVV.\" )\n        end\n      end\n    end\n\n    v.customize ['modifyvm', :id, '--uartmode1', 'file', File.join(vagrant_dir, 'log/ubuntu-cloudimg-console.log')]\n    v.customize ['modifyvm', :id, '--memory', vvv_config['vm_config']['memory']]\n    v.customize ['modifyvm', :id, '--cpus', vvv_config['vm_config']['cores']]\n    v.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']\n    v.customize ['modifyvm', :id, '--natdnsproxy1', 'on']\n\n    # see https://github.com/hashicorp/vagrant/issues/7648\n    v.customize ['modifyvm', :id, '--cableconnected1', 'on']\n\n    v.customize ['modifyvm', :id, '--rtcuseutc', 'on']\n    v.customize ['modifyvm', :id, '--audio', 'none']\n    v.customize ['modifyvm', :id, '--paravirtprovider', 'kvm']\n\n    # https://github.com/laravel/homestead/pull/63\n    v.customize ['modifyvm', :id, '--ostype', 'Ubuntu_64']\n\n    v.customize ['setextradata', :id, 'VBoxInternal2/SharedFoldersEnableSymlinksCreate//srv/www', '1']\n    v.customize ['setextradata', :id, 'VBoxInternal2/SharedFoldersEnableSymlinksCreate//srv/config', '1']\n\n    # Set the box name in VirtualBox to match the working directory.\n    v.name = File.basename(vagrant_dir) + '_' + (Digest::SHA256.hexdigest vagrant_dir)[0..10]\n  end\n\n  # Configuration options for the Parallels provider.\n  config.vm.provider :parallels do |v|\n    v.customize ['set', :id, '--longer-battery-life', 'off']\n    v.memory = vvv_config['vm_config']['memory']\n    v.cpus = vvv_config['vm_config']['cores']\n  end\n\n  # Configuration options for the VMware Desktop provider.\n  config.vm.provider :vmware_desktop do |v|\n    v.vmx['memsize'] = vvv_config['vm_config']['memory']\n    v.vmx['numvcpus'] = vvv_config['vm_config']['cores']\n  end\n\n  # Configuration options for Hyper-V provider.\n  config.vm.provider :hyperv do |v|\n    v.memory = vvv_config['vm_config']['memory']\n    v.cpus = vvv_config['vm_config']['cores']\n    v.linked_clone = true\n  end\n\n  # Auto Download Vagrant plugins, supported from Vagrant 2.2.0\n  unless Vagrant.has_plugin?('vagrant-hostsupdater') && Vagrant.has_plugin?('vagrant-goodhosts') && Vagrant.has_plugin?('vagrant-hostsmanager')\n    if File.file?(File.join(vagrant_dir, 'vagrant-goodhosts.gem'))\n      system('vagrant plugin install ' + File.join(vagrant_dir, 'vagrant-goodhosts.gem'))\n      File.delete(File.join(vagrant_dir, 'vagrant-goodhosts.gem'))\n      puts \"#{yellow}VVV needed to install the vagrant-goodhosts plugin which is now installed. Please run the requested command again.#{creset}\"\n      exit\n    else\n      config.vagrant.plugins = ['vagrant-goodhosts']\n    end\n  end\n\n  # The vbguest plugin has issues for some users, so we're going to disable it for now\n  config.vbguest.auto_update = false if Vagrant.has_plugin?('vagrant-vbguest')\n\n  # SSH Agent Forwarding\n  #\n  # Enable agent forwarding on vagrant ssh commands. This allows you to use ssh keys\n  # on your host machine inside the guest. See the manual for `ssh-add`.\n  config.ssh.forward_agent = true\n\n  # SSH Key Insertion\n  #\n  # This is disabled, we had several contributors who ran into issues.\n  # See: https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1551\n  config.ssh.insert_key = false\n  config.vm.box_check_update = false\n\n  # The Parallels Provider uses a different naming scheme.\n  config.vm.provider :parallels do |_v, override|\n    override.vm.box = 'bento/ubuntu-20.04'\n\n    # Vagrant currently runs under Rosetta on M1 devices. As a result,\n    # this seems to be the most reliable way to detect whether or not we're\n    # running under ARM64.\n    if Etc.uname[:version].include? 'ARM64'\n      override.vm.box = 'bento/ubuntu-20.04-arm64'\n    end\n  end\n\n  # The VMware Desktop Provider uses a different naming scheme.\n  config.vm.provider :vmware_desktop do |v, override|\n    override.vm.box = 'bento/ubuntu-20.04'\n    v.gui = false\n  end\n\n  # Hyper-V uses a different base box.\n  config.vm.provider :hyperv do |_v, override|\n    override.vm.box = 'bento/ubuntu-20.04'\n  end\n\n  # Docker use image.\n  config.vm.provider :docker do |d, override|\n    d.image = 'pentatonicfunk/vagrant-ubuntu-base-images:20.04'\n    d.has_ssh = true\n    d.ports =  [ \"80:80\" ] # HTTP\n    d.ports += [ \"443:443\" ] # HTTPS\n    d.ports += [ \"3306:3306\" ] # MySQL\n    d.ports += [ \"8025:8025\" ] # Mailhog\n\n    ## Fix goodhosts aliases format for docker\n    override.goodhosts.aliases = { '127.0.0.1' => vvv_config['hosts'], '::1' => vvv_config['hosts'] }\n  end\n\n  # Virtualbox.\n  config.vm.provider :virtualbox do |_v, override|\n    # Default Ubuntu Box\n    #\n    # This box is provided by Bento boxes via vagrantcloud.com and is a nicely sized\n    # box containing the Ubuntu 20.04 Focal 64 bit release. Once this box is downloaded\n    # to your host computer, it is cached for future use under the specified box name.\n    override.vm.box = 'bento/ubuntu-20.04'\n\n    # If we're at a contributor day, switch the base box to the prebuilt one\n    if defined? vvv_config['vm_config']['wordcamp_contributor_day_box']\n      if vvv_config['vm_config']['wordcamp_contributor_day_box'] == true\n        override.vm.box = 'vvv/contribute'\n      end\n    end\n  end\n\n  if defined? vvv_config['vm_config']['box']\n    unless vvv_config['vm_config']['box'].nil?\n      config.vm.box = vvv_config['vm_config']['box']\n    end\n  end\n\n  config.vm.hostname = 'vvv'\n\n  # Specify disk size\n  #\n  # If the Vagrant plugin disksize (https://github.com/sprotheroe/vagrant-disksize) is\n  # installed, the following will automatically configure your local machine's disk size\n  # to be the specified size. This plugin only works on VirtualBox.\n  #\n  # Warning: This plugin only resizes up, not down, so don't set this to less than 10GB,\n  # and if you need to downsize, be sure to destroy and reprovision.\n  #\n  if !vvv_config['vagrant-plugins']['disksize'].nil? && defined?(Vagrant::Disksize)\n    config.vm.provider :virtualbox do |_v, override|\n      override.disksize.size = vvv_config['vagrant-plugins']['disksize']\n    end\n    if Etc.uname[:version].include? 'ARM64'\n      puts \"WARNING: Vagrant disksize requires VirtualBox and is incompatible with Arm devices, uninstall immediatley\"\n    end\n  end\n\n  # Private Network (default)\n  #\n  # A private network is created by default. This is the IP address through which your\n  # host machine will communicate to the guest. In this default configuration, the virtual\n  # machine will have an IP address of 192.168.56.4 and a virtual network adapter will be\n  # created on your host machine with the IP of 192.168.50.1 as a gateway.\n  #\n  # Access to the guest machine is only available to your local host. To provide access to\n  # other devices, a public network should be configured or port forwarding enabled.\n  #\n  # Note: If your existing network is using the 192.168.56.x subnet, this default IP address\n  # should be changed. If more than one VM is running through VirtualBox, including other\n  # Vagrant machines, different subnets should be used for each.\n  #\n  config.vm.network :private_network, id: 'vvv_primary', ip: vvv_config['vm_config']['private_network_ip']\n\n  config.vm.provider :hyperv do |_v, override|\n    override.vm.network :private_network, id: 'vvv_primary', ip: nil\n  end\n\n  # Public Network (disabled)\n  #\n  # Using a public network rather than the default private network configuration will allow\n  # access to the guest machine from other devices on the network. By default, enabling this\n  # line will cause the guest machine to use DHCP to determine its IP address. You will also\n  # be prompted to choose a network interface to bridge with during `vagrant up`.\n  #\n  # Please see VVV and Vagrant documentation for additional details.\n  #\n  # config.vm.network :public_network\n\n  # Port Forwarding (disabled)\n  #\n  # This network configuration works alongside any other network configuration in Vagrantfile\n  # and forwards any requests to port 8080 on the local host machine to port 80 in the guest.\n  #\n  # Port forwarding is a first step to allowing access to outside networks, though additional\n  # configuration will likely be necessary on our host machine or router so that outside\n  # requests will be forwarded from 80 -> 8080 -> 80.\n  #\n  # Please see VVV and Vagrant documentation for additional details.\n  #\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # Drive mapping\n  #\n  # The following config.vm.synced_folder settings will map directories in your Vagrant\n  # virtual machine to directories on your local machine. Once these are mapped, any\n  # changes made to the files in these directories will affect both the local and virtual\n  # machine versions. Think of it as two different ways to access the same file. When the\n  # virtual machine is destroyed with `vagrant destroy`, your files will remain in your local\n  # environment.\n\n  # Disable the default synced folder to avoid overlapping mounts\n  config.vm.synced_folder '.', '/vagrant', disabled: true\n  config.vm.provision 'file', source: \"#{vagrant_dir}/version\", destination: '/home/vagrant/version'\n\n  # /srv/database/\n  #\n  # If a database directory exists in the same directory as your Vagrantfile,\n  # a mapped directory inside the VM will be created that contains these files.\n  # This directory is used to maintain default database scripts as well as backed\n  # up MariaDB/MySQL dumps (SQL files) that are to be imported automatically on vagrant up\n  config.vm.synced_folder 'database/sql/', '/srv/database'\n  use_db_share = false\n\n  if defined? vvv_config['general']['db_share_type']\n    use_db_share = vvv_config['general']['db_share_type'] == true\n  end\n  if use_db_share == true\n    # Map the MySQL Data folders on to mounted folders so it isn't stored inside the VM\n    config.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 9001, group: 9001, mount_options: ['dmode=775', 'fmode=664']\n\n    # The Parallels Provider does not understand \"dmode\"/\"fmode\" in the \"mount_options\" as\n    # those are specific to Virtualbox. The folder is therefore overridden with one that\n    # uses corresponding Parallels mount options.\n    config.vm.provider :parallels do |_v, override|\n      override.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 9001, group: 9001, mount_options: [ 'share' ]\n    end\n    # Neither does the HyperV provider\n    config.vm.provider :hyperv do |_v, override|\n      override.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 9001, group: 9001, mount_options: ['dir_mode=0775', 'file_mode=0664']\n    end\n  end\n\n  # /srv/config/\n  #\n  # If a server-conf directory exists in the same directory as your Vagrantfile,\n  # a mapped directory inside the VM will be created that contains these files.\n  # This directory is currently used to maintain various config files for php and\n  # nginx as well as any pre-existing database files.\n  config.vm.synced_folder 'config/', '/srv/config'\n\n  # /srv/config/\n  #\n  # Map the provision folder so that extensions and provisioners can access helper scripts\n  config.vm.synced_folder 'provision/', '/srv/provision'\n\n  # /srv/certificates\n  #\n  # This is a location for the TLS certificates to be accessible inside the VM\n  config.vm.synced_folder 'certificates/', '/srv/certificates', create: true\n\n  # /var/log/\n  #\n  # If a log directory exists in the same directory as your Vagrantfile, a mapped\n  # directory inside the VM will be created for some generated log files.\n  config.vm.synced_folder 'log/memcached', '/var/log/memcached', owner: 'root', create: true, group: 'root', mount_options: ['dmode=777', 'fmode=666']\n  config.vm.synced_folder 'log/nginx', '/var/log/nginx', owner: 'root', create: true, group: 'root', mount_options: ['dmode=777', 'fmode=666']\n  config.vm.synced_folder 'log/php', '/var/log/php', create: true, owner: 'root', group: 'root', mount_options: ['dmode=777', 'fmode=666']\n  config.vm.synced_folder 'log/provisioners', '/var/log/provisioners', create: true, owner: 'root', group: 'root', mount_options: ['dmode=777', 'fmode=666']\n\n  # /srv/www/\n  #\n  # If a www directory exists in the same directory as your Vagrantfile, a mapped directory\n  # inside the VM will be created that acts as the default location for nginx sites. Put all\n  # of your project files here that you want to access through the web server\n  config.vm.synced_folder 'www/', '/srv/www', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774']\n\n  vvv_config['sites'].each do |site, args|\n    next if args['skip_provisioning']\n    if args['local_dir'] != File.join(vagrant_dir, 'www', site)\n      config.vm.synced_folder args['local_dir'], args['vm_dir'], owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774']\n    end\n  end\n\n  # The Parallels Provider does not understand \"dmode\"/\"fmode\" in the \"mount_options\" as\n  # those are specific to Virtualbox. The folder is therefore overridden with one that\n  # uses corresponding Parallels mount options.\n  config.vm.provider :parallels do |_v, override|\n    override.vm.synced_folder 'www/', '/srv/www', owner: 'vagrant', group: 'www-data', mount_options: [ 'share' ]\n\n    override.vm.synced_folder 'log/memcached', '/var/log/memcached', owner: 'root', create: true, group: 'root', mount_options: [ 'share' ]\n    override.vm.synced_folder 'log/nginx', '/var/log/nginx', owner: 'root', create: true, group: 'root', mount_options: [ 'share' ]\n    override.vm.synced_folder 'log/php', '/var/log/php', create: true, owner: 'root', group: 'root', mount_options: [ 'share' ]\n    override.vm.synced_folder 'log/provisioners', '/var/log/provisioners', create: true, owner: 'root', group: 'root', mount_options: [ 'share' ]\n\n    if use_db_share == true\n      # Map the MySQL Data folders on to mounted folders so it isn't stored inside the VM\n      override.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 112, group: 115, mount_options: [ 'share' ]\n    end\n\n    vvv_config['sites'].each do |site, args|\n      next if args['skip_provisioning']\n      if args['local_dir'] != File.join(vagrant_dir, 'www', site)\n        override.vm.synced_folder args['local_dir'], args['vm_dir'], owner: 'vagrant', group: 'www-data', mount_options: [ 'share' ]\n      end\n    end\n  end\n\n  # The Hyper-V Provider does not understand \"dmode\"/\"fmode\" in the \"mount_options\" as\n  # those are specific to Virtualbox. Furthermore, the normal shared folders need to be\n  # replaced with SMB shares. Here we switch all the shared folders to us SMB and then\n  # override the www folder with options that make it Hyper-V compatible.\n  config.vm.provider :hyperv do |v, override|\n    v.vmname = File.basename(vagrant_dir) + '_' + (Digest::SHA256.hexdigest vagrant_dir)[0..10]\n\n    override.vm.synced_folder 'www/', '/srv/www', owner: 'vagrant', group: 'www-data', mount_options: ['dir_mode=0775', 'file_mode=0774']\n\n    if use_db_share == true\n      # Map the MySQL Data folders on to mounted folders so it isn't stored inside the VM\n      override.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 112, group: 115, mount_options: ['dir_mode=0775', 'file_mode=0664']\n    end\n\n    override.vm.synced_folder 'log/memcached', '/var/log/memcached', owner: 'root', create: true, group: 'root', mount_options: ['dir_mode=0777', 'file_mode=0666']\n    override.vm.synced_folder 'log/nginx', '/var/log/nginx', owner: 'root', create: true, group: 'root', mount_options: ['dir_mode=0777', 'file_mode=0666']\n    override.vm.synced_folder 'log/php', '/var/log/php', create: true, owner: 'root', group: 'root', mount_options: ['dir_mode=0777', 'file_mode=0666']\n    override.vm.synced_folder 'log/provisioners', '/var/log/provisioners', create: true, owner: 'root', group: 'root', mount_options: ['dir_mode=0777', 'file_mode=0666']\n\n    vvv_config['sites'].each do |site, args|\n      next if args['skip_provisioning']\n      if args['local_dir'] != File.join(vagrant_dir, 'www', site)\n        override.vm.synced_folder args['local_dir'], args['vm_dir'], owner: 'vagrant', group: 'www-data', mount_options: ['dir_mode=0775', 'file_mode=0774']\n      end\n    end\n  end\n\n  # The VMware Provider does not understand \"dmode\"/\"fmode\" in the \"mount_options\" as\n  # those are specific to Virtualbox. The folder is therefore overridden with one that\n  # uses corresponding VMware mount options.\n  config.vm.provider :vmware_desktop do |_v, override|\n    override.vm.synced_folder 'www/', '/srv/www', owner: 'vagrant', group: 'www-data', mount_options: ['umask=002']\n\n    override.vm.synced_folder 'log/memcached', '/var/log/memcached', owner: 'root', create: true, group: 'root', mount_options: ['umask=000']\n    override.vm.synced_folder 'log/nginx', '/var/log/nginx', owner: 'root', create: true, group: 'root', mount_options: ['umask=000']\n    override.vm.synced_folder 'log/php', '/var/log/php', create: true, owner: 'root', group: 'root', mount_options: ['umask=000']\n    override.vm.synced_folder 'log/provisioners', '/var/log/provisioners', create: true, owner: 'root', group: 'root', mount_options: ['umask=000']\n\n    if use_db_share == true\n      # Map the MySQL Data folders on to mounted folders so it isn't stored inside the VM\n      override.vm.synced_folder 'database/data/', '/var/lib/mysql', create: true, owner: 112, group: 115, mount_options: ['umask=000']\n    end\n\n    vvv_config['sites'].each do |site, args|\n      next if args['skip_provisioning']\n      if args['local_dir'] != File.join(vagrant_dir, 'www', site)\n        override.vm.synced_folder args['local_dir'], args['vm_dir'], owner: 'vagrant', group: 'www-data', mount_options: ['umask=002']\n      end\n    end\n  end\n\n  # Customfile - POSSIBLY UNSTABLE\n  #\n  # Use this to insert your own additional Vagrant config lines. Helpful\n  # for mapping additional drives. If a file 'Customfile' exists in the same directory\n  # as this Vagrantfile, it will be evaluated as ruby inline as it loads.\n  #\n  # Note that if you find yourself using a Customfile for anything crazy or specifying\n  # different provisioning, then you may want to consider a new Vagrantfile entirely.\n  if File.exist?(File.join(vagrant_dir, 'Customfile'))\n    puts \" ⚠ ! Running additional Vagrant code in Customfile located at #{File.join(vagrant_dir, 'Customfile')}\\n\"\n    puts \" ⚠ ! Official support is not provided for this feature, it is assumed you are proficient with vagrant\\n\\n\"\n    eval(IO.read(File.join(vagrant_dir, 'Customfile')), binding)\n    puts \" ⚠ ! Finished running Customfile, resuming normal vagrantfile execution\\n\\n\"\n  end\n\n  vvv_config['sites'].each do |site, args|\n    next unless args['allow_customfile']\n\n    paths = Dir[File.join(args['local_dir'], '**', 'Customfile')]\n    paths.each do |file|\n      puts \" ⚠ ! Running additional site customfile at #{file}\\n\"\n      puts \" ⚠ ! Official support is not provided for this feature.\\n\\n\"\n      eval(IO.read(file), binding)\n      puts \" ⚠ ! Finished running Customfile, resuming normal vagrantfile execution\\n\\n\"\n    end\n  end\n\n  # Provisioning\n  #\n  # Process one or more provisioning scripts depending on the existence of custom files.\n\n  unless Vagrant::Util::Platform.windows?\n    if Process.uid == 0\n      # the VM should know if vagrant was ran by a root user or using sudo\n      config.vm.provision \"flag-root-vagrant-command\", type: 'shell', keep_color: true, inline: \"mkdir -p /vagrant && touch /vagrant/provisioned_as_root\"\n    end\n  end\n\n  long_provision_bear = <<~HTML\n  #{blue}#{creset}\n  #{blue}    ▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄    ▄   ▄    #{green}A full provision will take a bit.#{creset}\n  #{blue}    █▒▒░░░░░░░░░▒▒█   █   █     #{green}Sit back, relax, and have some tea.#{creset}\n  #{blue}     █░░█░░░░░█░░█   ▀   ▀      #{creset}\n  #{blue}  ▄▄  █░░░▀█▀░░░█   █▀▀▀▀▀▀█    #{green}If you didn't want to provision you can#{creset}\n  #{blue} █░░█ ▀▄░░░░░░░▄▀▄▀▀█      █    #{green}turn VVV on with 'vagrant up'.#{creset}\n  #{blue}───────────────────────────────────────────────────────────────────────#{creset}\n  HTML\n\n  # Changed the message here because it's going to show the first time you do vagrant up, which might be confusing\n  config.vm.provision \"pre-provision-script\", type: 'shell', keep_color: true, inline: \"echo \\\"#{long_provision_bear}\\\"\"\n\n  # provison-pre.sh acts as a pre-hook to our default provisioning script. Anything that\n  # should run before the shell commands laid out in provision.sh (or your provision-custom.sh\n  # file) should go in this script. If it does not exist, no extra provisioning will run.\n  if File.exist?(File.join(vagrant_dir, 'provision', 'provision-pre.sh'))\n    config.vm.provision 'pre', type: 'shell', keep_color: true, path: File.join('provision', 'provision-pre.sh'), env: { \"VVV_LOG\" => \"pre\" }\n  end\n\n  # provision.sh or provision-custom.sh\n  #\n  # By default, Vagrantfile is set to use the provision.sh bash script located in the\n  # provision directory. If it is detected that a provision-custom.sh script has been\n  # created, that is run as a replacement. This is an opportunity to replace the entirety\n  # of the provisioning provided by default.\n  if File.exist?(File.join(vagrant_dir, 'provision', 'provision-custom.sh'))\n    config.vm.provision 'custom', type: 'shell', keep_color: true, path: File.join('provision', 'provision-custom.sh'), env: { \"VVV_LOG\" => \"main-custom\" }\n  else\n    config.vm.provision 'default', type: 'shell', keep_color: true, path: File.join('provision', 'provision.sh'), env: { \"VVV_LOG\" => \"main\" }\n  end\n\n  config.vm.provision 'tools', type: 'shell', keep_color: true, path: File.join('provision', 'provision-tools.sh'), env: { \"VVV_LOG\" => \"tools\" }\n\n  # Provision the dashboard that appears when you visit vvv.test\n  config.vm.provision 'dashboard',\n                      type: 'shell',\n                      keep_color: true,\n                      path: File.join('provision', 'provision-dashboard.sh'),\n                      args: [\n                        vvv_config['dashboard']['repo'],\n                        vvv_config['dashboard']['branch']\n                      ],\n                      env: { \"VVV_LOG\" => \"dashboard\" }\n\n  vvv_config['utility-sources'].each do |name, args|\n    config.vm.provision \"extension-source-#{name}\",\n                        type: 'shell',\n                        keep_color: true,\n                        path: File.join('provision', 'provision-extension-source.sh'),\n                        args: [\n                          name,\n                          args['repo'].to_s,\n                          args['branch']\n                        ],\n                        env: { \"VVV_LOG\" => \"extension-source-#{name}\" }\n  end\n  vvv_config['extension-sources'].each do |name, args|\n    config.vm.provision \"extension-source-#{name}\",\n                        type: 'shell',\n                        keep_color: true,\n                        path: File.join('provision', 'provision-extension-source.sh'),\n                        args: [\n                          name,\n                          args['repo'].to_s,\n                          args['branch']\n                        ],\n                        env: { \"VVV_LOG\" => \"extension-source-#{name}\" }\n  end\n\n  vvv_config['utilities'].each do |name, extensions|\n    extensions = {} unless extensions.is_a? Array\n    extensions.each do |extension|\n      config.vm.provision \"extension-#{name}-#{extension}\",\n                          type: 'shell',\n                          keep_color: true,\n                          path: File.join('provision', 'provision-extension.sh'),\n                          args: [\n                            name,\n                            extension\n                          ],\n                          env: { \"VVV_LOG\" => \"extension-#{name}-#{extension}\" }\n    end\n  end\n  vvv_config['extensions'].each do |name, extensions|\n    extensions = {} unless extensions.is_a? Array\n    extensions.each do |extension|\n      config.vm.provision \"extension-#{name}-#{extension}\",\n                          type: 'shell',\n                          keep_color: true,\n                          path: File.join('provision', 'provision-extension.sh'),\n                          args: [\n                            name,\n                            extension\n                          ],\n                          env: { \"VVV_LOG\" => \"extension-#{name}-#{extension}\" }\n    end\n  end\n\n  vvv_config['sites'].each do |site, args|\n    next if args['skip_provisioning']\n\n    config.vm.provision \"site-#{site}\",\n                        type: 'shell',\n                        keep_color: true,\n                        path: File.join('provision', 'provision-site.sh'),\n                        args: [\n                          site,\n                          args['repo'].to_s,\n                          args['branch'],\n                          args['vm_dir'],\n                          args['skip_provisioning'].to_s,\n                          args['nginx_upstream']\n                        ],\n                        env: { \"VVV_LOG\" => \"site-#{site}\" }\n  end\n\n  # provision-post.sh acts as a post-hook to the default provisioning. Anything that should\n  # run after the shell commands laid out in provision.sh or provision-custom.sh should be\n  # put into this file. This provides a good opportunity to install additional packages\n  # without having to replace the entire default provisioning script.\n  if File.exist?(File.join(vagrant_dir, 'provision', 'provision-post.sh'))\n    config.vm.provision 'post', type: 'shell', keep_color: true, path: File.join('provision', 'provision-post.sh'), env: { \"VVV_LOG\" => \"post\" }\n  end\n\n  config.vm.provision \"post-provision-script\", type: 'shell', keep_color: true, path: File.join( 'config/homebin', 'vagrant_provision' ), env: { \"VVV_LOG\" => \"post-provision-script\" }\n\n  # Local Machine Hosts\n  #\n  # If the Vagrant plugin goodhosts (https://github.com/goodhosts/vagrant/) is\n  # installed, the following will automatically configure your local machine's hosts file to\n  # be aware of the domains specified below. Watch the provisioning script as you may need to\n  # enter a password for Vagrant to access your hosts file.\n  #\n  # By default, we'll include the domains set up by VVV through the vvv-hosts file\n  # located in the www/ directory and in config/config.yml.\n  #\n\n  if config.vagrant.plugins.include? 'vagrant-goodhosts'\n    config.goodhosts.aliases = vvv_config['hosts']\n    config.goodhosts.remove_on_suspend = true\n\n    # goodhosts already disables clean by default, but lets enforce this at both ends\n    config.goodhosts.disable_clean = true\n  elsif config.vagrant.plugins.include? 'vagrant-hostsmanager'\n    config.hostmanager.aliases = vvv_config['hosts']\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_host = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.ignore_private_ip = false\n    config.hostmanager.include_offline = true\n  elsif config.vagrant.plugins.include? 'vagrant-hostsupdater'\n    # Pass the found host names to the hostsupdater plugin so it can perform magic.\n    config.hostsupdater.aliases = vvv_config['hosts']\n    config.hostsupdater.remove_on_suspend = true\n  elsif %w[up halt resume suspend status provision reload].include? ARGV[0]\n    puts \"\"\n    puts \" X ! There is no hosts file vagrant plugin installed!\"\n    puts \" X You need the vagrant-goodhosts plugin (or HostManager/ HostsUpdater ) for domains to work in the browser\"\n    puts \" X Run 'vagrant plugin install --local' to fix this.\"\n    puts \"\"\n  end\n\n  # Vagrant Triggers\n  #\n  # We run various scripts on Vagrant state changes like `vagrant up`, `vagrant halt`,\n  # `vagrant suspend`, and `vagrant destroy`\n  #\n  # These scripts are run on the host machine, so we use `vagrant ssh` to tunnel back\n  # into the VM and execute things. By default, each of these scripts calls db_backup\n  # to create backups of all current databases. This can be overridden with custom\n  # scripting. See the individual files in config/homebin/ for details.\n  unless Vagrant::Util::Platform.windows?\n    if Process.uid == 0\n      config.trigger.after :all do |trigger|\n        trigger.name = 'Do not use sudo'\n        trigger.ruby do |env,machine|\n          sudo_warnings\n        end\n      end\n    end\n  end\n\n  config.trigger.after :up do |trigger|\n    trigger.name = 'VVV Post-Up'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_up' }\n    trigger.on_error = :continue\n  end\n  config.trigger.before :reload do |trigger|\n    trigger.name = 'VVV Pre-Reload'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_halt' }\n    trigger.on_error = :continue\n  end\n  config.trigger.after :reload do |trigger|\n    trigger.name = 'VVV Post-Reload'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_up' }\n    trigger.on_error = :continue\n  end\n  config.trigger.before :halt do |trigger|\n    trigger.name = 'VVV Pre-Halt'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_halt' }\n    trigger.on_error = :continue\n  end\n  config.trigger.before :suspend do |trigger|\n    trigger.name = 'VVV Pre-Suspend'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_suspend' }\n    trigger.on_error = :continue\n  end\n  config.trigger.before :destroy do |trigger|\n    trigger.name = 'VVV Pre-Destroy'\n    trigger.run_remote = { inline: '/srv/config/homebin/vagrant_destroy' }\n    trigger.on_error = :continue\n  end\nend\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "provision",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "blob",
          "size": 0.0048828125,
          "content": "3.14\n"
        },
        {
          "name": "wp-cli.yml",
          "type": "blob",
          "size": 0.0625,
          "content": "require:\n  - config/wp-cli/local.php\n  - config/wp-cli/quiet.php"
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}