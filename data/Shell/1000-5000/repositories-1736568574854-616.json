{
  "metadata": {
    "timestamp": 1736568574854,
    "page": 616,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "turkenh/ansible-interactive-tutorial",
      "stars": 1490,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": ".DS_Store\nworkspace\ntutorials/progress.yaml\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9267578125,
          "content": "dist: trusty\nlanguage: bash\nservices:\n  - docker\n\nenv: \n  - DOCKER_IMAGETAG=\"1.1\"\nbefore_script:\n  - ./tutorial.sh -r\n  - if [ \"${DOCKER_IMAGETAG}\" == \"latest\" ]; then pushd images && make build_all TAG=latest&& popd; fi\n\nscript:\n  - LESSON_NAME=\"0-step-00\" ./tutorial.sh -t\n  - LESSON_NAME=\"1-step-01\" ./tutorial.sh -t\n  - LESSON_NAME=\"2-step-02\" ./tutorial.sh -t\n  - LESSON_NAME=\"3-step-03\" ./tutorial.sh -t\n  - LESSON_NAME=\"4-step-04\" ./tutorial.sh -t\n  - LESSON_NAME=\"5-step-05\" ./tutorial.sh -t\n  - LESSON_NAME=\"6-step-06\" ./tutorial.sh -t\n  - LESSON_NAME=\"7-step-07\" ./tutorial.sh -t\n  - LESSON_NAME=\"8-step-08\" ./tutorial.sh -t\n  - LESSON_NAME=\"9-step-09\" ./tutorial.sh -t\n  - LESSON_NAME=\"10-step-10\" ./tutorial.sh -t\n  - LESSON_NAME=\"11-step-11\" ./tutorial.sh -t\n  - LESSON_NAME=\"12-step-12\" ./tutorial.sh -t\n  - LESSON_NAME=\"13-step-13\" ./tutorial.sh -t\n  - LESSON_NAME=\"14-freeplay\" ./tutorial.sh -t\n  \nafter_script:\n  - ./tutorial.sh -r\n"
        },
        {
          "name": "LICENSE-tutorials.md",
          "type": "blob",
          "size": 3.431640625,
          "content": "Copyright (c) 2014, Michel Blanc Copyright (c) 2014, Aladin Jaermann Copyright (c) 2014, Alexis Gallagher Copyright (c) 2014, Alice Ferrazzi Copyright (c) 2014, Alice Pote Copyright (c) 2014, Amit Jakubowicz Copyright (c) 2014, Arbab Nazar Copyright (c) 2014, Atilla Mas Copyright (c) 2014, Ben Visser Copyright (c) 2014, Benny Wong Copyright (c) 2014, Bernardo Vale Copyright (c) 2014, Chris Schmitz Copyright (c) 2014, dalton Copyright (c) 2014, Daniel Howard Copyright (c) 2014, David Golden Copyright (c) 2014, Eric Corson Copyright (c) 2014, Eugene Kalinin Copyright (c) 2014, Hartmut Goebel Copyright (c) 2014, Jelly Robot Copyright (c) 2014, Justin Garrison Copyright (c) 2014, Levon Copyright (c) 2014, Karlo Copyright (c) 2014, Marchenko Alexandr Copyright (c) 2014, mxxcon Copyright (c) 2014, Patrick Pelletier Copyright (c) 2014, Pierre-Gilles Levallois Copyright (c) 2014, Ruud Kamphuis Copyright (c) 2014, [torenware] (https://github.com/torenware) Copyright (c) 2014, Victor Boivie\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\t\n\nCopyright (c) 2017, Hasan Turken turkenh@gmail.com\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.25390625,
          "content": "Copyright (c) 2017, Hasan Turken turkenh@gmail.com\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.107421875,
          "content": "# ansible-interactive-tutorial\n\n[![Build Status](https://travis-ci.org/turkenh/ansible-interactive-tutorial.svg?branch=master)](https://travis-ci.org/turkenh/ansible-interactive-tutorial)\n\nInteractive tutorials for Ansible\n\n## Prerequisite\n\nOnly prerequisite is **docker**\n\nRequires docker version 1.9+ and tested with 1.12+\n\nIf you don't have docker installed, you can also run on http://play-with-docker.com (just click \"+ ADD NEW INSTANCE\" button and clone this repo there)\n\n## How to Run\n\n```bash\n./tutorial.sh\n```\n\n[![demo](https://asciinema.org/a/CPUhOGGlcLiXVlZKIuiuk5Q7f.png)](https://asciinema.org/a/CPUhOGGlcLiXVlZKIuiuk5Q7f?autoplay=1)\n\n## Clean up\n\n```bash\n./tutorial.sh --remove\n```\n\n## More Details\n\n### Tutorials\n\nAlmost all of the tutorials are adapted from the great [leucos/ansible-tuto](https://github.com/leucos/ansible-tuto) repository:\n\n```\n1. Getting Started\n2. Basic inventory\n3. First modules and facts\n4. Groups and variables\n5. Playbooks\n6. Playbooks, pushing files on nodes\n7. Playbooks and failures\n8. Playbook conditionals\n9. Git module\n10. Extending to several hosts\n11. Templates\n12. Variables again\n13. Migrating to roles!\n14. Using roles from Ansible Galaxy - Install a Jenkins server\n15. Free play\n```\n\nYou can run each lesson individually but it is **highly encouraged to follow the order** as most of them are built on top of the previous one!\n\n\n### Containers\n\n`tutorial.sh` starts 4 docker containers behind the scenes. 1 for running the tutorial itself and 3 as ansible nodes which behave exactly same as (virtual or physical) machines throughout the tutorial. \n\n**ansible.tutorial** is an alpine based tutorial container in which ansible and [nutsh](https://github.com/turkenh/nutsh) (a framework for creating interactive command line tutorials) are available.\n\n**host0.example.org**, **host1.example.org** and **host2.example.org** are the Ubuntu 16.04 based containers that act as ansible nodes. These nodes were already provisioned with the ssh key of **ansible.tutorial** container. So that you don't have to deal with setting up keys.\n\n### Port Mapping\n\nThere are some checkpoints in the tutorials where you can check and verify your deployments. For this purpose some ports of the containers are exposed as host ports as follows:\n\nContainer|Container Port|Host Port   \n:---|:---:|:---:\nhost0.example.org|80|`$HOSTPORT_BASE` Â \nhost1.example.org|80|`$HOSTPORT_BASE+1`\nhost2.example.org|80|`$HOSTPORT_BASE+2`\nhost0.example.org|8080|`$HOSTPORT_BASE+3`\nhost1.example.org|30000|`$HOSTPORT_BASE+4`\nhost2.example.org|443|`$HOSTPORT_BASE+5`\n\n`HOSTPORT_BASE` is set to `42726` by default and can be changed while starting the tutorial (in case any of the consecutive 6 ports is not available) as follows:\n\n```bash\n./tutorial.sh --remove # Make sure you shut down the previous ones\nHOSTPORT_BASE=<some_other_value> ./tutorial.sh\n```\n\n### Workspace Directory\n`ansible-interactive-tutorial/workspace` directory on your local machine is mounted as `/root/workspace` inside the **ansible.tutorial** container. So, you can use your favorite editor on your local machine to edit files. Editing files is not necessary to follow the lessons though.\n\n\n\n\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial.sh",
          "type": "blob",
          "size": 4.798828125,
          "content": "#!/bin/bash\nBASEDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\nNOF_HOSTS=3\nNETWORK_NAME=\"ansible.tutorial\"\nWORKSPACE=\"${BASEDIR}/workspace\"\nTUTORIALS_FOLDER=\"${BASEDIR}/tutorials\"\n\nHOSTPORT_BASE=${HOSTPORT_BASE:-42726}\n# Extra ports per host to expose. Should contain $NOF_HOSTS variables\nEXTRA_PORTS=( \"8080\" \"30000\" \"443\" )\n# Port Mapping\n# +-----------+----------------+-------------------+\n# | Container | Container Port |     Host Port     |\n# +-----------+----------------+-------------------+\n# |   host0   |       80       | $HOSTPORT_BASE    |\n# +-----------+----------------+-------------------+\n# |   host1   |       80       | $HOSTPORT_BASE+1  |\n# +-----------+----------------+-------------------+\n# |   host2   |       80       | $HOSTPORT_BASE+2  |\n# +-----------+----------------+-------------------+\n# |   host0   | EXTRA_PORTS[0] | $HOSTPORT_BASE+3  |\n# +-----------+----------------+-------------------+\n# |   host1   | EXTRA_PORTS[1] | $HOSTPORT_BASE+4  |\n# +-----------+----------------+-------------------+\n# |   host2   | EXTRA_PORTS[2] | $HOSTPORT_BASE+5  |\n# +-----------+----------------+-------------------+\n\nDOCKER_IMAGETAG=${DOCKER_IMAGETAG:-1.1}\nDOCKER_HOST_IMAGE=\"turkenh/ubuntu-1604-ansible-docker-host:${DOCKER_IMAGETAG}\"\nTUTORIAL_IMAGE=\"turkenh/ansible-tutorial:${DOCKER_IMAGETAG}\"\n\nfunction help() {\n    echo -ne \"-h, --help              prints this help message\n-r, --remove            remove created containers and network\n-t, --test              run lesson tests\n\"\n}\nfunction doesNetworkExist() {\n    return $(docker network inspect $1 >/dev/null 2>&1)\n}\n\nfunction removeNetworkIfExists() {\n    doesNetworkExist $1 && echo \"removing network $1\" && docker network rm $1 >/dev/null\n}\n\nfunction doesContainerExist() {\n    return $(docker inspect $1 >/dev/null 2>&1)\n}\n\nfunction isContainerRunning() {\n    [[ \"$(docker inspect -f \"{{.State.Running}}\" $1 2>/dev/null)\" == \"true\" ]]\n}\n\nfunction killContainerIfExists() {\n    doesContainerExist $1 && echo \"killing/removing container $1\" && { docker kill $1 >/dev/null 2>&1; docker rm $1 >/dev/null 2>&1; };\n}\n\nfunction runHostContainer() {\n    local name=$1\n    local image=$2\n    local port1=$(($HOSTPORT_BASE + $3))\n    local port2=$(($HOSTPORT_BASE + $3 + $NOF_HOSTS))\n\n    echo \"starting container ${name}: mapping hostport $port1 -> container port 80 && hostport $port2 -> container port ${EXTRA_PORTS[$3]}\"\n    if doesContainerExist ${name}; then\n        docker start \"${name}\" > /dev/null\n    else\n        docker run -d -p $port1:80 -p $port2:${EXTRA_PORTS[$3]} --net ${NETWORK_NAME} --name=\"${name}\" \"${image}\" >/dev/null\n    fi\n    if [ $? -ne 0 ]; then\n        echo \"Could not start host container. Exiting!\"\n        exit 1\n    fi\n}\n\nfunction runTutorialContainer() {\n    local entrypoint=\"\"\n    local args=\"\"\n    if [ -n \"${TEST}\" ]; then\n        entrypoint=\"--entrypoint nutsh\"\n        args=\"test /tutorials ${LESSON_NAME}\"\n    fi\n    killContainerIfExists ansible.tutorial > /dev/null\n    echo \"starting container ansible.tutorial\"\n    docker run -it -v \"${WORKSPACE}\":/root/workspace:Z -v \"${TUTORIALS_FOLDER}\":/tutorials:Z --net ${NETWORK_NAME} \\\n      --env HOSTPORT_BASE=$HOSTPORT_BASE \\\n      ${entrypoint} --name=\"ansible.tutorial\" \"${TUTORIAL_IMAGE}\" ${args}\n    return $?\n}\n\nfunction remove () {\n    for ((i = 0; i < $NOF_HOSTS; i++)); do\n       killContainerIfExists host$i.example.org\n    done\n    removeNetworkIfExists ${NETWORK_NAME}\n}\n\nfunction setupFiles() {\n    # step-01/02\n    local step_01_hosts_file=\"${BASEDIR}/tutorials/files/step-1-2/hosts\"\n    rm -f \"${step_01_hosts_file}\"\n    for ((i = 0; i < $NOF_HOSTS; i++)); do\n        #ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' host$i.example.org)\n        ip=$(docker network inspect --format=\"{{range \\$id, \\$container := .Containers}}{{if eq \\$container.Name \\\"host$i.example.org\\\"}}{{\\$container.IPv4Address}} {{end}}{{end}}\" ${NETWORK_NAME} | cut -d/ -f1)\n        echo \"host$i.example.org ansible_host=$ip ansible_user=root\" >> \"${step_01_hosts_file}\"\n    done\n}\nfunction init () {\n    mkdir -p \"${WORKSPACE}\"\n    doesNetworkExist \"${NETWORK_NAME}\" || { echo \"creating network ${NETWORK_NAME}\" && docker network create \"${NETWORK_NAME}\" >/dev/null; }\n    for ((i = 0; i < $NOF_HOSTS; i++)); do\n       isContainerRunning host$i.example.org || runHostContainer host$i.example.org ${DOCKER_HOST_IMAGE} $i\n    done\n    setupFiles\n    runTutorialContainer\n    exit $?\n}\n\n###\nMODE=\"init\"\nTEST=\"\"\nfor i in \"$@\"; do\ncase $i in\n    -r|--remove)\n    MODE=\"remove\"\n    shift # past argument=value\n    ;;\n    -t|--test)\n    TEST=\"yes\"\n    shift # past argument=value\n    ;;\n    -h|--help)\n    help\n    exit 0\n    shift # past argument=value\n    ;;\n    *)\n    echo \"Unknown argument ${i#*=}\"\n    exit 1\nesac\ndone\n\nif [ \"${MODE}\" == \"remove\" ]; then\n    remove\nelif [ \"${MODE}\" == \"init\" ]; then\n    init\nfi\nexit 0\n"
        },
        {
          "name": "tutorials",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}