{
  "metadata": {
    "timestamp": 1736568768456,
    "page": 884,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "game-icons/icons",
      "stars": 1116,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": "_out\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.26953125,
          "content": "# Contributing\n\nYou want to help and give some of the great icons you made to the community? Thanks!\n\nThere are two ways to do it, depending of your tech skills:\n\n- You're already a GitHub user ⇒ open a **Pull Request** on this repo.\n- You have no idea of what `git` is all about => send your icons by email to **delapouite@gmail.com**\n\nWhatever options you choose, please consider the following guidelines to facilitate the process.\n\n## Guidelines\n\nTable of content\n\n- Author and License\n- File format / Directories tree\n- Art consideration\n\n### Author and License\n\nGame-Icons.net provides icons for free. Most of them are released under the [Creative Commons BY 3.0](http://creativecommons.org/licenses/by/3.0/), others as [Public Domain](http://creativecommons.org/publicdomain/zero/1.0/) resources.\n\nAll the icons you decide to share with us will also be released under the aforementioned CC-BY license (or CC0 if you explicitly mention it).\n\nIn both cases, we will obviously promote your authorship on each page displaying your creations and in each zip files downloaded.\n\nTo do so, we need a few info minor info about you :\n- Your name or your nickname. This will be public.\n- Your website / artist page address. Optional.\n\n### File format / Directories tree\n\nYour files must be sent as individual [SVG](https://en.wikipedia.org/wiki/Scalable_Vector_Graphics), a popular vector format that can be exported from Inkscape or Illustrator. We will take care of the automatic PNG generation for you.\n\nFilenames must be in **lowercase**, words separated by a **dash** and in English with no weird characters:\n\nBad\n```\nSuper Dragon.SVG\nmagnetic_field.svg\ncéréales.svg\n```\n\nGood\n```\nsuper-dragon.svg\nmagnetic-field.svg\ncereals.svg\n```\n\nThey are already thousands of icons available. Sometimes, different artist want to depict the same thing. To avoid name collisions, icons are organised like this:\n\n/ artist / icon\n\nFor example :\n\n```\n/ lorc / wolf.svg\n/ delapouite / water-gun.svg\n/ delapouite / zat-gun.svg\n```\n\nBy following this hierarchical structure, we assure that each artist is free to name their icons the way they want.\n\n### Design / art rules\n\nTry to keep the original look'n'feel of the collection.\n\nPlease follow Lorc's advices on the topic : http://lorcblog.blogspot.com.au/2009/05/talking-about-icons.html\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.54296875,
          "content": "# Game Icons\n\nAll SVG icons available on https://game-icons.net\n\nAlso, this repository is used to [track](https://github.com/game-icons/icons/issues) requests made on Twitter or by email.\nYou can add your own suggestions.\n\n## Contribution\n\nContributions are welcomed! Have a look at this [document](https://github.com/game-icons/icons/blob/master/CONTRIBUTING.md) for help.\n\n## Scripts\n\nA few shell-scripts are at your disposal for various batch tasks.\n\n### colorize-svgs.sh\n\nBy default, all the provided icons in this repository have a white foreground on a black background.\nYou may need them in other color combinations.\n\nThe `colorize-svgs.sh` script takes two optional arguments, the first one for the foreground color in hexadecimal,\nthe second one for the background color also in hexadecimal or with the special value `transparent`.\n\n```sh\n# red on green\n./colorize-svgs.sh '#f00' '#0f0'\n\n# blue on transparent\n./colorize-svgs.sh '#0011da' 'transparent'\n```\n\nThe generated SVG files are created in the gitignored `_out` directory.\n\n### rasterize-svgs.sh\n\nThis script walks through the whole content of the `_out` directory and generates an optimized PNG file for every SVG file it encounters.\nSo it means, that if you want to rasterize the default collection of white on black icons:\n\n```sh\n# first copy the default SVG file to \"_out\" directory\n./colorize-svgs.sh\n\n# then generate one PNG file for each SVG file\n./rasterize-svgs.sh\n```\n\nDepending on the power of your machine, the execution of the script may take a while. (no parallel executions yet).\n\n## License\n\nCC-BY\n"
        },
        {
          "name": "andymeneely",
          "type": "tree",
          "content": null
        },
        {
          "name": "aussiesim",
          "type": "tree",
          "content": null
        },
        {
          "name": "badges",
          "type": "tree",
          "content": null
        },
        {
          "name": "carl-olsen",
          "type": "tree",
          "content": null
        },
        {
          "name": "caro-asercion",
          "type": "tree",
          "content": null
        },
        {
          "name": "cathelineau",
          "type": "tree",
          "content": null
        },
        {
          "name": "catsu",
          "type": "tree",
          "content": null
        },
        {
          "name": "check-svgs.sh",
          "type": "blob",
          "size": 0.6962890625,
          "content": "#!/bin/sh\n\n# this script acts as a crude linter to check if some SVG files deviate from the intended format\n\n# Dependencies:\n# https://github.com/BurntSushi/ripgrep\n\nSVG_TAIL='z\"/></svg>'\n\nICON_HEAD='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 0h512v512H0z\"/><path fill=\"#fff\" d=\"'\nrg --invert-match --count-matches \"$ICON_HEAD(.*)$SVG_TAIL\" **/*.svg | rg --invert-match 'badges/'\n\nBADGE_HEAD='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\"><circle cx=\"128\" cy=\"128\" r=\"128\"/><circle stroke=\"#fff\" stroke-width=\"18\" cx=\"128\" cy=\"128\" r=\"101\"/><path fill=\"#fff\" d=\"'\nrg --invert-match --count-matches \"$BADGE_HEAD(.*)$SVG_TAIL\" badges/*.svg | rg --invert-match 'blank'\n"
        },
        {
          "name": "colorize-svgs.sh",
          "type": "blob",
          "size": 2.3955078125,
          "content": "#!/bin/sh\n\n# the SVG icons in this repository are white on black by default.\n# this script goal is to generate new icons with custom colors.\n\n# it accepts two optional positional arguments:\n# - the foreground color in hexadecimal (default to #fff, white)\n# - the background color in hexadecimal (default to #000, black) or the special value \"transparent\"\n\n# examples of usage:\n# red on black\n# ./colorize-svgs.sh '#f00'\n# greenish on transparent\n# ./colorize-svgs.sh '#bada55' 'transparent'\n\n# final artifacts are created in this gitignored _out directory\nOUT_ROOT_DIR='_out'\n\nDEFAULT_FOREGROUND='#fff'\nDEFAULT_BACKGROUND='#000'\nFOREGROUND=\"$DEFAULT_FOREGROUND\"\nBACKGROUND=\"$DEFAULT_BACKGROUND\"\n\nDIMENSIONS='1x1'\n\nif test -n \"$1\"; then\n  FOREGROUND=\"$1\"\nfi\nif test -n \"$2\"; then\n  BACKGROUND=\"$2\"\nfi\n\n# helper\nbegins_with() { case $2 in \"$1\"*) true;; *) false;; esac; }\n\ni=0\nfor SVG in $(fd --extension svg); do\n  AUTHOR=\"$(dirname \"$SVG\")\"\n\n  # ignore SVGs previously generated\n  if test \"$AUTHOR\" = \"$OUT_DIR\"; then\n    continue\n  fi\n\n  if test \"$AUTHOR\" = badges; then\n    continue\n  fi\n\n  # remove hexadecimal prefix\n  FOREGROUND_DIR=\"$FOREGROUND\"\n  if begins_with '#' \"$FOREGROUND_DIR\"; then\n    FOREGROUND_DIR=\"$(echo \"$FOREGROUND_DIR\" | cut -c 2-)\"\n  fi\n  BACKGROUND_DIR=\"$BACKGROUND\"\n  if begins_with '#' \"$BACKGROUND_DIR\"; then\n    BACKGROUND_DIR=\"$(echo \"$BACKGROUND_DIR\" | cut -c 2-)\"\n  fi\n\n  # ensure 6 digits format\n  if [ \"${#FOREGROUND_DIR}\" -lt 6 ]; then\n    FOREGROUND_DIR=\"$FOREGROUND_DIR$FOREGROUND_DIR\"\n  fi\n  if [ \"${#BACKGROUND_DIR}\" -lt 6 ]; then\n    BACKGROUND_DIR=\"$BACKGROUND_DIR$BACKGROUND_DIR\"\n  fi\n\n  # this path reflects the one currently on https://game-icons.net\n  # e.g. https://game-icons.net/icons/ffffff/000000/1x1/lorc/glass-heart.svg\n  OUT_DIR=\"$OUT_ROOT_DIR/$FOREGROUND_DIR/$BACKGROUND_DIR/$DIMENSIONS/$AUTHOR\"\n  mkdir -p \"$OUT_DIR\"\n\n  OUT_FILE=\"$OUT_DIR/$(basename \"$SVG\")\"\n  cp \"$SVG\" \"$OUT_FILE\"\n\n  if test \"$FOREGROUND\" != \"$DEFAULT_FOREGROUND\"; then\n    sed -i \"s/fill=\\\"$DEFAULT_FOREGROUND\\\"/fill=\\\"$FOREGROUND\\\"/g\" \"$OUT_FILE\"\n  fi\n\n  if test \"$BACKGROUND\" != \"$DEFAULT_BACKGROUND\"; then\n    # remove the square entirely\n    if test \"$BACKGROUND\" = transparent; then\n      sed -i \"s/<path d=\\\"M0 0h512v512H0z\\\"\\/>//g\" \"$OUT_FILE\"\n    else\n      sed -i \"s/<path d=\\\"M0 0h512v512H0z\\\"\\/>/<path fill=\\\"$BACKGROUND\\\" d=\\\"M0 0h512v512H0z\\\"\\/>/g\" \"$OUT_FILE\"\n    fi\n  fi\n\n  i=$((i+1))\n  echo \"$i $OUT_FILE\"\ndone\n\n"
        },
        {
          "name": "darkzaitzev",
          "type": "tree",
          "content": null
        },
        {
          "name": "delapouite",
          "type": "tree",
          "content": null
        },
        {
          "name": "faithtoken",
          "type": "tree",
          "content": null
        },
        {
          "name": "felbrigg",
          "type": "tree",
          "content": null
        },
        {
          "name": "generalace135",
          "type": "tree",
          "content": null
        },
        {
          "name": "guard13007",
          "type": "tree",
          "content": null
        },
        {
          "name": "heavenly-dog",
          "type": "tree",
          "content": null
        },
        {
          "name": "irongamer",
          "type": "tree",
          "content": null
        },
        {
          "name": "john-colburn",
          "type": "tree",
          "content": null
        },
        {
          "name": "john-redman",
          "type": "tree",
          "content": null
        },
        {
          "name": "kier-heyl",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.373046875,
          "content": "Icons provided under the Creative Commons 3.0 BY or CC0 if mentioned below.\n\nEach sub-folders in this archive correspond to a different contributor :\n\n- Lorc, http://lorcblog.blogspot.com\n- Delapouite, http://delapouite.com\n- John Colburn, http://ninmunanmu.com\n- Felbrigg, http://blackdogofdoom.blogspot.co.uk\n- John Redman, http://www.uniquedicetowers.com\n- Carl Olsen, https://twitter.com/unstoppableCarl\n- Sbed, http://opengameart.org/content/95-game-icons\n- PriorBlue\n- Willdabeast, http://wjbstories.blogspot.com\n- Viscious Speed, http://viscious-speed.deviantart.com - CC0\n- Lord Berandas, http://berandas.deviantart.com\n- Irongamer, http://ecesisllc.wix.com/home\n- HeavenlyDog, http://www.gnomosygoblins.blogspot.com\n- Lucas\n- Faithtoken, http://fungustoken.deviantart.com\n- Skoll\n- Andy Meneely, http://www.se.rit.edu/~andy/\n- Cathelineau\n- Kier Heyl\n- Aussiesim\n- Sparker, http://citizenparker.com\n- Zeromancer - CC0\n- Rihlsul\n- Quoting\n- Guard13007, https://guard13007.com\n- DarkZaitzev, http://darkzaitzev.deviantart.com\n- SpencerDub\n- GeneralAce135\n- Zajkonur\n- Catsu\n- Starseeker\n- Pepijn Poolman\n- Pierre Leducq\n- Caro Asercion\n\nPlease, include a mention \"Icons made by {author}\" in your derivative work.\n\nIf you use them in one of your project, don't hesitate to drop a message to delapouite@gmail.com or ping @GameIcons on twitter.\n\nMore info and icons available at https://game-icons.net\n"
        },
        {
          "name": "lorc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lord-berandas",
          "type": "tree",
          "content": null
        },
        {
          "name": "lucasms",
          "type": "tree",
          "content": null
        },
        {
          "name": "pepijn-poolman",
          "type": "tree",
          "content": null
        },
        {
          "name": "pierre-leducq",
          "type": "tree",
          "content": null
        },
        {
          "name": "priorblue",
          "type": "tree",
          "content": null
        },
        {
          "name": "quoting",
          "type": "tree",
          "content": null
        },
        {
          "name": "rasterize-svgs.sh",
          "type": "blob",
          "size": 0.8857421875,
          "content": "#!/bin/sh\n\n# this script converts each SVG files in $OUT_ROOT_DIR directory to PNG with optimized size\n# it implies that you previously executed ./colorize-svgs.sh at least once before (even for default white on black colors)\n\n# Dependencies:\n# https://github.com/sharkdp/fd\n# https://github.com/RazrFalcon/resvg\n# https://github.com/shssoichiro/oxipng\n\n# final artifacts are created in this gitignored _out directory\nOUT_ROOT_DIR='_out'\n\nif test ! -d \"$OUT_ROOT_DIR\"; then\n  echo \"directory '$OUT_ROOT_DIR' does not exist\"\n  echo \"run ./colorize-svgs.sh to create it and populate its content with colorized (or default) SVG files\"\n  exit 1\nfi\n\ni=0\nfor SVG in $(fd . \"$OUT_ROOT_DIR\" --extension svg); do\n  PNG=\"$(dirname \"$SVG\")/$(basename \"$SVG\" .svg).png\"\n  if test ! -f \"$PNG\"; then\n    i=$((i+1))\n    echo \"$i $PNG\"\n    resvg \"$SVG\" \"$PNG\"\n    oxipng --opt 4 --interlace 1 --strip safe \"$PNG\"\n  fi\ndone\n"
        },
        {
          "name": "rihlsul",
          "type": "tree",
          "content": null
        },
        {
          "name": "sbed",
          "type": "tree",
          "content": null
        },
        {
          "name": "skoll",
          "type": "tree",
          "content": null
        },
        {
          "name": "sparker",
          "type": "tree",
          "content": null
        },
        {
          "name": "spencerdub",
          "type": "tree",
          "content": null
        },
        {
          "name": "starseeker",
          "type": "tree",
          "content": null
        },
        {
          "name": "various-artists",
          "type": "tree",
          "content": null
        },
        {
          "name": "viscious-speed",
          "type": "tree",
          "content": null
        },
        {
          "name": "willdabeast",
          "type": "tree",
          "content": null
        },
        {
          "name": "zajkonur",
          "type": "tree",
          "content": null
        },
        {
          "name": "zeromancer",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}