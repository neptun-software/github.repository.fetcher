{
  "metadata": {
    "timestamp": 1736568258563,
    "page": 140,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mskyaxl/wsl-terminal",
      "stars": 3124,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0654296875,
          "content": "/build\r\n/output\r\n/release\r\n*.exe\r\n*.zip\r\n*.7z\r\n.debug\r\nbuild - Copy"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2666015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at mskyaxl@pm.me. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "MIT License\n\nCopyright (c) 2016 Gore Liu, 2020 Alex Mosky.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.107421875,
          "content": "# wsl-terminal\n\nA terminal emulator for Windows Subsystem for Linux (WSL), based on [mintty](http://mintty.github.io/), [fatty](https://github.com/paolo-sz/fatty) and [wslbridge2](https://github.com/Biswa96/wslbridge2).\n\nAll emojis designed by [OpenMoji](https://openmoji.org/) – the open-source emoji and icon project. License: [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/#)\n\n\n[中文页面](https://mskyaxl.github.io/wsl-terminal/README.zh_CN.html)(The Chinese README is no longer maintained)\n\n## Screenshot\n\n![screenshot](https://raw.githubusercontent.com/wiki/mskyaxl/wsl-terminal/images/wsl-terminal-3.png)\n\nMore screenshots [here](https://github.com/mskyaxl/wsl-terminal/wiki/Screenshots).\n\n## Usage\n\n0. Make sure you have 7z installed. On Ubuntu run: ```sudo apt install p7zip-full```, on Archlinux: run ```pacman -S p7zip```\n\n1. Change the directory to the folder where you want to install wsl-terminal to.\n\nMake sure to install wsl-terminal in a the windows filesystem and not in the wsl filesistem. The installation folder needs to be on a local NTFS volume.\n\n* Option 1: If you're in cmd.exe run:\n\n```\nwsl bash -c \"$(wget https://raw.githubusercontent.com/mskyaxl/wsl-terminal/master/scripts/install.sh -qO -)\"\n```\n\n* Option 2: If you're in wsl already run\n\n```\nbash -c \"$(wget https://raw.githubusercontent.com/mskyaxl/wsl-terminal/master/scripts/install.sh -qO -)\"\n```\n\n\nIf you want to install the tabbed version you have to add a ```-t``` as parameter as shown bellow\n```\nbash -c \"$(wget https://raw.githubusercontent.com/mskyaxl/wsl-terminal/master/scripts/install.sh -qO -)\" '' -t\n```\n\n2. Run `open-wsl.exe` to open a WSL terminal in current directory.\n\n3. Run `tools/1-add-open-wsl-terminal-here-menu.js` ([help](https://github.com/mskyaxl/wsl-terminal#tools)) to add a `Open wsl-terminal Here` context menu to `explorer.exe` (Run `tools/1-remove-open-wsl-terminal-here-menu.js` to remove it). If you are using Total Commander, [Use wsl-terminal with Total Commander](https://github.com/mskyaxl/wsl-terminal/wiki/Use-wsl-terminal-with-Total-Commander) may help you.\n\n4. `run-wsl-file.exe` can run any `.sh` (or any others like `.py` `.pl`) script files in wsl-terminal, support `Open With` context menu in `explorer.exe`.\n\n5. `vim.exe` can open any files with vim (in wsl-terminal), support `Open With` context menu in `explorer.exe`. `vim.exe` can be renamed to `emacs.exe` `nvim.exe` `nano.exe` `...` to open files in `emacs` `nvim` `nano` `...`.\n\n## Keyboard shortcuts\n\n| key                        | function                              |\n| -------------------------- | ------------------------------------- |\n| `Alt` + `Enter`            | Fullscreen                            |\n| `Alt` + `F2`               | New window                            |\n| `Alt` + `F3`               | Search text                           |\n| `Ctrl` + `[Shift]` + `Tab` | Switch window                         |\n| `Ctrl` + `=` `+` `-` `0`   | Zoom                                  |\n| `Ctrl` + `Click`           | Open URL or dir/file under the cursor |\n| `Ctrl` + `Right Click`     | Open context menu                     |\n\n[Bind wsl-terminal to a hotkey](https://github.com/mskyaxl/wsl-terminal/wiki/Bind-wsl-terminal-to-a-hotkey).\n\n## Params\n\n### open-wsl\n\n```\nUsage: open-wsl [OPTION]...\n  -a: activate an existing wsl-terminal window.\n      if use_tmux=1, attach the running tmux session.\n  -l: start a login shell and cd to $HOME (doesn't work with use_tmux=1).\n  -c command: run command (e.g. -c \"echo a b; echo c; cat\").\n  -e commands: run commands (e.g. -e echo a b; echo c; cat).\n  -C dir: change directory to a WSL dir (e.g. /home/username).\n  -W dir: change directory to a Windows dir (e.g. c:\\Users\\username).\n  -d distro: switch distros.\n  -b \"options\": pass additional options to wslbridge.\n  -B \"options\": pass additional options to mintty.\n  -h: show help.\n```\n\nFor `-B` and `-b`, see also [mintty params](https://github.com/mskyaxl/wsl-terminal/wiki/mintty-params) and [wslbridge2 params](https://github.com/Biswa96/wslbridge2#options).\n\n### cmdtool (run it in WSL)\n\n```\nUsage: cmdtool [OPTION]...\n  wcmd: run Windows programs with cmd.exe /c.\n  wstart: run Windows programs with cmd.exe /c start.\n  wstartex file|url: like wstart, but use WSL file path.\n  update: check the latest wsl-terminal version, and upgrade it.\n  killall: kill all WSL processes.\n  install dash: install Cygwin dash (for debugging).\n  install busybox: install Cygwin busybox (for debugging).\n```\n\n## Tools\n\nFiles in `tools` directory:\n\n| filename                                    | function                                                            |\n| ------------------------------------------- | ------------------------------------------------------------------- |\n| 1-add-open-wsl-terminal-here-menu.js        | Add `Open wsl-terminal Here` context menu to `explorer.exe`.        |\n| 1-remove-open-wsl-terminal-here-menu.js     | Remove `Open wsl-terminal Here` context menu.                       |\n| 2-add-wsl-terminal-dir-to-path.js           | Add `wsl-terminal` directory to `Path` environment variable.        |\n| 2-remove-wsl-terminal-dir-from-path.js      | Remove `wsl-terminal` directory from `Path` environment variable.   |\n| 3-write-distro-to-config-file.js            | Write distro guids to `etc/wsl-terminal.conf`.                      |\n| 4-create-start-menu-shortcut.js             | Create a start menu shortcut to `open-wsl -C ~`.                    |\n| 4-create-start-menu-shortcut-login-shell.js | Create a start menu shortcut to `open-wsl -l`.                      |\n| 4-remove-all-start-menu-shortcuts.js        | Remove all wsl-terminal start menu shortcuts.                       |\n| 5-add-open-with-vim-menu.js                 | Add `Open with vim in wsl-terminal` context menu.                   |\n| 5-remove-open-with-vim-menu.js              | Remove `Open with vim in wsl-terminal` context menu.                |\n| 6-set-default-shell.bat                     | Set `shell` in `etc/wsl-terminal.conf` to the default shell in WSL. |\n\nDouble click any `.js` file to run it. If it was open by any editor, open it with `Microsoft (R) Windows Based Script Host`, or open a `cmd.exe` in `tools` directory and run `wscript xxx.js`.\n\n## Configuration files\n\n`etc/wsl-terminal.conf` is wsl-terminal config file.\n```\n[config]\ntitle=\"my title\"\nshell=/bin/bash\nuse_tmux=0\n;icon=\n;distro=\n```\n\n`etc/themes/*` are theme files, [use themes](https://github.com/mskyaxl/wsl-terminal/wiki/Use-themes).\n\n`etc/minttyrc` is mintty config file, [mintty tips](https://github.com/mintty/mintty/wiki/Tips).\n\n## Upgrade\n\nOpen `open-wsl.exe` in `wsl-terminal` directory, run `./cmdtool update` to check the latest wsl-terminal version and upgrade it. If the download speed is too slow, you can download `wsl-terminal-v{version}.7z` from [releases](https://github.com/mskyaxl/wsl-terminal/releases) with other tools, and put it into `wsl-terminal` directory, then run `./cmdtool update`.\n\n`wget` and `7z` commands are needed (Ubuntu: `apt install wget p7zip-full`, Archlinux: `pacman -S wget p7zip`) .\n\nConfig files won't be overridden, `etc/wsl-terminal.conf` and `etc/minttyrc` will be placed to `etc/wsl-terminal.conf.pacnew` and `etc/minttyrc.pacnew`. Some `.bak` files will be left in `bin`, because they are running, those files will be removed after the next upgrading.\n\n## Use tmux\n\n1. Install tmux in WSL.\n2. Set `use_tmux=1` in `etc/wsl-terminal.conf`. And set `attach_tmux_locally=1` if the version number is less than `0.8.1`.\n3. Add these lines to `~/.bashrc` (`shell=/bin/bash` in config) or `~/.zshrc` (`shell=/bin/zsh` in config):\n\n```\n[[ -z \"$TMUX\" && -n \"$USE_TMUX\" ]] && {\n    [[ -n \"$ATTACH_ONLY\" ]] && {\n        tmux a 2>/dev/null || {\n            cd && exec tmux\n        }\n        exit\n    }\n\n    tmux new-window -c \"$PWD\" 2>/dev/null && exec tmux a\n    exec tmux\n}\n```\nIf you're using fish then update your '~/.config/fish/config.fish' (`shell=/bin/fish` in config) with\n\n```\nif [ -z \"$TMUX\" ]; and [ -n \"$USE_TMUX\" ]\n    if [ -n \"$ATTACH_ONLY\" ]\n        if not tmux a 2>/dev/null\n            cd; and exec tmux\n        end\n        exit\n    end\n\n    tmux new-window -c \"$PWD\" 2>/dev/null; and exec tmux a\n    exec tmux\nend\n```\n\nThen `open-wsl` will use tmux.\n\n## Switch distros\n\nUse `open-wsl -d distro` to switch distros:\n\n```\n# list all distros\n> wslconfig /l\nLegacy (Default)\nUbuntu\n\n# use Ubuntu (will run wslconfig /s Ubuntu before mintty)\n> open-wsl -d Ubuntu\n\n# Ubuntu is the default distro now\n> wslconfig /l\nUbuntu (Default)\nkali-linux\n```\n\nOr set `distro` in wsl-terminal.conf (Won't change the default distro).\n\nRun `tools/3-write-distro-to-config-file.js` ([help](https://github.com/mskyaxl/wsl-terminal#tools)), then a msgbox will show the result:\n\n```\nresult has been written to ..\\etc\\wsl-terminal.conf:\n\n;distro=kali-linux\n\n;distro=Ubuntu\n\nremove the ; before distro to use the distro.\n```\n\nIf you want to pass the distro_guid to open-wsl in cmdline:\n\n```\n\n# pass the distro guid to wslbridge\n> open-wsl -b \"-d Ubuntu\"\n```\n\n## Links\n\n[FAQ](https://github.com/mskyaxl/wsl-terminal/wiki/FAQ)\n\n[Issues](https://github.com/mskyaxl/wsl-terminal/issues)\n\n[Releases](https://github.com/mskyaxl/wsl-terminal/releases)\n\n[Wiki](https://github.com/mskyaxl/wsl-terminal/wiki)\n\n## Build\n\n### Prerequisites\n\n* Install WSL and make sure `wget` `tar` `xz` `gzip` `p7zip` are available (Ubuntu: run `apt install wget tar xz-utils gzip p7zip-full`, Archlinux: run `pacman -S wget tar xz gzip p7zip`) are installed in WSL.\n* for the tabbed version: cygwin x64 with the following packages installed `gcc-g++`, `make`, `w32api-headers` (for compiling fatty)\n\n### Build steps\n\n* clone the repo in WSL(to maintain the linux EOL characters) but on windows drive eg (`/mnt/c/Users/<userName>/work/wsl-terminal`)\n\n* use build.sh to build with the appropiate parameters.\n    ```\n    ➜  wsl-terminal git:(master) scripts/build.sh -h\n    Usage:\n        build.sh -h                 Display this help message.\n        build.sh -a                 Builds wsl-terminal and wsl-terminal-tabbed.\n        build.sh -t                 Builds only wsl-terminal-tabbed(cygwin is required).\n        build.sh                    Builds only wsl-terminal.\n    ```\n\n## Roadmap\n\n1. Bug fixing\n2. add x11 support\n\n## License\n\nMIT\n"
        },
        {
          "name": "README.zh_CN.md",
          "type": "blob",
          "size": 9.3369140625,
          "content": "# wsl-terminal\n\n用于 Windows Subsystem for Linux (WSL) 的终端模拟器，基于 [mintty](http://mintty.github.io/)、[fatty](https://github.com/paolo-sz/fatty) 和 [wslbridge2](https://github.com/Biswa96/wslbridge2)。\n\n[英文页面](https://mskyaxl.github.io/wsl-terminal/)\n\n## 截图\n\n![screenshot](https://raw.githubusercontent.com/wiki/mskyaxl/wsl-terminal/images/wsl-terminal-3.png)\n\n查看[更多截图](https://github.com/mskyaxl/wsl-terminal/wiki/Screenshots)。\n\n## 用法\n\n1. 从[这里](https://github.com/mskyaxl/wsl-terminal/releases)下载最新版本并解压，或者在 `cmd.exe` 或 WSL 里运行 `bash -c \"wget https://github.com/mskyaxl/wsl-terminal/releases/download/v0.9.0/wsl-terminal-0.9.0.7z && 7z x wsl-terminal-0.9.0.7z\"`。\n\n2. 运行 `open-wsl.exe` 可以在当前目录打开一个 WSL 终端模拟器（wsl-terminal 需要放置在本地的 NTFS 分区上，[原因](https://github.com/rprichard/wslbridge#building-wslbridge)）。\n\n3. 运行 `tools/1-add-open-wsl-terminal-here-menu.js` ([帮助](https://github.com/mskyaxl/wsl-terminal/blob/master/README.zh_CN.md#工具)) 来添加一个 `Open wsl-terminal Here` 右键菜单到资源管理器上 (运行 `tools/1-remove-open-wsl-terminal-here-menu.js` 可以将其删除）。 如果你使用 Total Commander, 可以参考 [在 Total Commander 中使用 wsl-terminal](https://github.com/mskyaxl/wsl-terminal/wiki/Use-wsl-terminal-with-Total-Commander) 。\n\n4. `run-wsl-file.exe` 可以在 wsl-terminal 里运行任何 `.sh` （以及任何其他的可执行文件，比如 `.py` `.pl` 文件) 脚本文件，你可以在文件打开方式里设置使用它来打开文件。\n\n5. `vim.exe` 可以使用 WSL 中的 vim 打开任何文件 (在 wsl-terminal 中)，支持在打开方式中配置。如果你使用其他编辑器，可以把 `vim.exe` 重命名成  `emacs.exe` `nvim.exe`  `nano.exe` 等等，会调用对应的编辑器打开。\n\n## 快捷键\n\n| 按键                       | 功能                             |\n| -------------------------- | -------------------------------- |\n| `Alt` + `Enter`            | 全屏                             |\n| `Alt` + `F2`               | 新建窗口                         |\n| `Alt` + `F3`               | 搜索文本                         |\n| `Ctrl` + `[Shift]` + `Tab` | 切换窗口                         |\n| `Ctrl` + `=` `+` `-` `0`   | 缩放                             |\n| `Ctrl` + `鼠标左键`        | 打开光标处的文件、目录名或者网址 |\n| `Ctrl` + `鼠标右键`        | 打开右键菜单                     |\n\n[将 wsl-terminal 绑定到快捷键](https://github.com/mskyaxl/wsl-terminal/wiki/Bind-wsl-terminal-to-a-hotkey)。\n\n## 命令行参数\n\n### open-wsl\n\n```\n用法: open-wsl [选项]...\n  -a: 激活在运行的 wsl-terminal 窗口。\n      如果 use_tmux=1，会 attach 到正在运行的 tmux 会话上。\n  -l: 运行一个 login shell 并且切换到家目录（如果 use_tmux=1 则失效）。\n  -c command: 运行命令 (例如 -c \"echo a b; echo c; cat\")。\n  -e commands: 运行后边的所有命令 (例如 -e echo a b; echo c; cat)。\n  -C dir: 进入到 dir 目录中，WSL 目录（例如 /home/username）。\n  -W dir: 进入到 dir 目录中，Windows 目录（例如 c:\\Users\\username)。\n  -d distro: 切换发行版。\n  -b \"options\": 传递额外的选项给 wslbridge。\n  -B \"options\": 传递额外的选项给 mintty。\n  -h: 显示帮助信息。\n```\n\n`-B` 和 `-b` 后可以添加的选项，请参考 [mintty 参数](https://github.com/mskyaxl/wsl-terminal/wiki/mintty-params) 和 [wslbridge2 参数](https://github.com/Biswa96/wslbridge2#options)。\n\n### cmdtool（在 WSL 中运行）\n\n```\n用法: cmdtool [选项]...\n  wcmd: 使用 cmd.exe /c 运行 Windows 程序。\n  wstart: 使用 cmd.exe /c start 运行 Windows 程序。\n  wstartex 文件路径|网址: 和 wstart 类似，但使用 WSL 风格的路径。\n  update: 检查更新，如果有更新可以直接升级。\n  killall: 杀死所有的 WSL 进程。\n  install dash: 安装 Cygwin 中的 dash（用于调试）。\n  install busybox: 安装 Cygwin 中的 busybox（用于调试）。\n```\n\n## 工具\n\n`tools` 目录下的工具：\n\n| 文件名                                      | 功能                                                              |\n| ------------------------------------------- | ----------------------------------------------------------------- |\n| 1-add-open-wsl-terminal-here-menu.js        | 添加 `Open wsl-terminal Here` 右键菜单到资源管理器上。            |\n| 1-remove-open-wsl-terminal-here-menu.js     | 移除 `Open wsl-terminal Here` 右键菜单。                          |\n| 2-add-wsl-terminal-dir-to-path.js           | 将 `wsl-terminal` 目录添加到 `Path` 环境变量里。                  |\n| 2-remove-wsl-terminal-dir-from-path.js      | 从 `Path` 环境变量中移除 `wsl-terminal` 目录。                    |\n| 3-write-distro-to-config-file.js            | 将所有发行版的 guid 写入到配置文件 `etc/wsl-terminal.conf` 中。   |\n| 4-create-start-menu-shortcut.js             | 创建一个开始菜单快捷方式，指向 `open-wsl -C ~`。                  |\n| 4-create-start-menu-shortcut-login-shell.js | 创建一个开始菜单快捷方式，指向 `open-wsl -l`。                    |\n| 4-remove-all-start-menu-shortcuts.js        | 移除所有 wsl-terminal 的开始菜单快捷方式。                        |\n| 5-add-open-with-vim-menu.js                 | 添加 `Open with vim in wsl-terminal` 右键菜单到资源管理器上。     |\n| 5-remove-open-with-vim-menu.js              | 移除 `Open with vim in wsl-terminal` 右键菜单。                   |\n| 6-set-default-shell.bat                     | 设置 `etc/wsl-terminal.conf` 中的 `shell` 为 WSL 中用户的 shell。 |\n\n双击 `.js` 文件即可运行。如果 `.js` 文件被某个编辑器关联上了，可以修改打开方式为 `Microsoft (R) Windows Based Script Host`，或者在 `tools ` 目录运行一个 `cmd.exe`，然后用 `wscript xxx.js` 运行对应文件。\n\n## 配置文件\n\n`etc/wsl-terminal.conf` 是 wsl-terminal 的配置文件：\n\n```\n[config]\ntitle=\"窗口标题\"\nshell=/bin/bash\nuse_tmux=0\n;icon=\n;distro=\n```\n\n`etc/themes/` 目录下的是主题文件，[使用主题](https://github.com/mskyaxl/wsl-terminal/wiki/Use-themes)。\n\n`etc/minttyrc` 是 mintty 的配置文件， [mintty 帮助](https://github.com/mintty/mintty/wiki/Tips)。\n\n## 升级\n\n在 `wsl-terminal` 里打开 `open-wsl.exe`，然后运行 `./cmdtool update`  可以检查 wsl-terminal 的最新版本然后升级。如果下载速度过慢，可以先使用其他方法从[发布页面](https://github.com/mskyaxl/wsl-terminal/releases)下载 `wsl-terminal-v{version}.7z` 文件，然后将其放入到 `wsl-terminal` 目录，然后运行 `./cmdtool update`。\n\n该工具依赖 `wget` 和 `7z` 命令（安装方法。Ubuntu: `apt install wget p7zip-full`, Archlinux: `pacman -S wget p7zip`）。\n\n升级过程不会覆盖配置文件，`etc/wsl-terminal.conf` 和 `etc/minttyrc` 会被放置到 `etc/wsl-terminal.conf.pacnew` 和 `etc/minttyrc.pacnew`。升级后 `bin` 目录会残余一些 `.bak` 文件，因为这些文件还在运行，不能被删除。下一次升级时，会将之前的 `.bak` 文件全部删除，你也可以等那些进程退出后手删除那些文件。\n\n## 使用 tmux\n\n1. 在 WSL 里安装 tmux。\n\n2. 在 `etc/wsl-terminal.conf` 中设置 `use_tmux=1`。如果版本号低于 `0.8.1`，还需要添加 `attach_tmux_locally=1`。\n\n3. 添加如下代码到 `~/.bashrc`（如果配置的是 `shell=/bin/bash`）或者 `~/.zshrc`（如果配置的是 `shell=/bin/zsh`）：\n\n```\n[[ -z \"$TMUX\" && -n \"$USE_TMUX\" ]] && {\n    [[ -n \"$ATTACH_ONLY\" ]] && {\n        tmux a 2>/dev/null || {\n            cd && exec tmux\n        }\n        exit\n    }\n\n    tmux new-window -c \"$PWD\" 2>/dev/null && exec tmux a\n    exec tmux\n}\n```\n\n然后 `open-wsl` 就会使用 tmux 了。\n\n## 切换发行版\n\n使用 `open-wsl -d distro` （在 `cmd.exe` 里运行）来切换发行版：\n\n```\n# 列出所有发行版\n> wslconfig /l\nLegacy (默认)\nUbuntu\n\n# 使用 Ubuntu（会运行 wslconfig /s Ubuntu 然后打开 wsl-terminal）\n> open-wsl -d Ubuntu\n\n# Ubuntu 已经是默认的发行版了\n> wslconfig /l\nUbuntu (默认)\nLegacy\n```\n\n如果你不想修改默认的发行版，可以在 `etc/wsl-terminal.conf` 里设置 `distro_guid`：\n\n运行 `tools/3-write-distro-to-config-file.js`（[帮助](https://github.com/mskyaxl/wsl-terminal/blob/master/README.zh_CN.md#工具)），然后会有窗口弹出结果：\n\n```\nresult has been written to ..\\etc\\wsl-terminal.conf:\n\n;distro=kali-linux\n\n;distro=Ubuntu}\n\nremove the ; before distro_guid to use the distro.\n```\n\n可以去掉 distro_guid 前边的 ; 来使用对应的发行版。\n\n如果你想通过命令行将 distro_guid 传递给 `open-wsl`：\n\n```\n# 将 distro 传递给 wslbridge\n> open-wsl -b \"--distro Ubuntu\"\n```\n\n## 链接\n\n[常见问题](https://github.com/mskyaxl/wsl-terminal/wiki/FAQ)\n\n[反馈建议](https://github.com/mskyaxl/wsl-terminal/issues)\n\n[发布页面](https://github.com/mskyaxl/wsl-terminal/releases)\n\n[文档帮助](https://github.com/mskyaxl/wsl-terminal/wiki)\n\n## 编译\n\n确保已经在 WSL 里安装了这些 `wget` `tar` `xz` `gzip` `p7zip` (安装方法。Ubuntu: `apt install wget tar xz-utils gzip p7zip-full`, Archlinux: `pacman -S wget tar xz gzip p7zip`）。\n\n运行 `build.bat`。\n\n## 许可\n\nMIT\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "0.9.2"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-slate\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}