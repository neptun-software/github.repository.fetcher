{
  "metadata": {
    "timestamp": 1736568817770,
    "page": 978,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "burghardt/easy-wg-quick",
      "stars": 1029,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 1.123046875,
          "content": "# https://cirrus-ci.com/github/burghardt/easy-wg-quick\ntest_task:\n  name: FreeBSD test run\n  freebsd_instance:\n    matrix:\n      image_family: freebsd-15-0-snap\n      image_family: freebsd-14-1\n      image_family: freebsd-13-4\n  env:\n    CIRRUS_CLONE_DEPTH: 10\n  pkginstall_script:\n    - pkg install -y net/wireguard-tools graphics/libqrencode\n    - pkg install -y shells/bash devel/bats-core\n  kldload_if_wg_script:\n    - kldload if_wg || true\n  unittests_script:\n    - cd tests && ./runtests.bash\n  configure_script:\n    - echo none > fwtype.txt\n  first_test_run_script:\n    - ./easy-wg-quick\n  second_test_run_script:\n    - ./easy-wg-quick named_client\n  dump_configuration_script:\n    - head *.txt *.key *.conf\n  dump_hub_configuration_script:\n    - cat wghub.conf\n  check_for_empty_files_script:\n    - ls *.txt *.key *.conf | xargs -tn1 test -s\n  wg-quick_install_script:\n    - ./easy-wg-quick --install-wg-quick\n  setup_wireguard_interface_script:\n    - /usr/local/sbin/wg-quick up ./wghub.conf\n  check_interface_script:\n    - ifconfig wghub\n    - wg show\n  teardown_wireguard_interface_script:\n    - /usr/local/sbin/wg-quick down ./wghub.conf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "*.bak\n*.conf\n*.key\n*.psk\n*.txt\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3759765625,
          "content": "repos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v4.6.0\n  hooks:\n    - id: check-added-large-files\n    - id: check-case-conflict\n    - id: check-executables-have-shebangs\n    - id: check-shebang-scripts-are-executable\n    - id: detect-private-key\n    - id: end-of-file-fixer\n    - id: fix-byte-order-marker\n    - id: mixed-line-ending\n    - id: trailing-whitespace\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.1142578125,
          "content": "brew \"wireguard-tools\"\n\n# optional\nbrew \"qrencode\"\n\n# required only to run tests\nbrew \"bats-core\"\nbrew \"iproute2mac\"\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2353515625,
          "content": "FROM alpine:3.21.0\n\nRUN apk add --no-cache wireguard-tools libqrencode-tools\n\nCOPY easy-wg-quick /usr/bin/easy-wg-quick\nRUN chmod +x /usr/bin/easy-wg-quick && \\\n    mkdir /pwd\n\nVOLUME /pwd\nWORKDIR /pwd\n\nENTRYPOINT [\"/usr/bin/easy-wg-quick\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.669921875,
          "content": "# easy-wg-quick\neasy-wg-quick - Creates WireGuard configuration for hub and peers with ease\n\n * [Getting Started](#getting-started)\n   * [Docker](#docker)\n   * [Terraform](#terraform)\n   * [Prerequisites](#prerequisites)\n   * [Installing](#installing)\n * [Usage](#usage)\n   * [Special usage](#special-usage)\n   * [Sample output](#sample-output)\n   * [Using generated configuration](#using-generated-configuration)\n * [Fine tuning](#fine-tuning)\n   * [Disabling external interface autodetection](#disabling-external-interface-autodetection)\n   * [Disabling external IP address autodetection](#disabling-external-ip-address-autodetection)\n   * [Disabling random port assignment](#disabling-random-port-assignment)\n   * [Disabling randomly generated internal network addresses](#disabling-randomly-generated-internal-network-addresses)\n   * [Setting interface's maximum transmission unit (MTU) size](#setting-interfaces-maximum-transmission-unit-mtu-size)\n   * [Setting custom DNS](#setting-custom-dns)\n   * [Setting custom client's `AllowedIPs`](#setting-custom-clients-allowedips)\n   * [Choosing firewall type](#choosing-firewall-type)\n   * [Choosing if PostUp/PostDown should enable/disable IP forwarding](#choosing-if-postuppostdown-should-enabledisable-ip-forwarding)\n   * [Enabling IPv6](#enabling-ipv6)\n   * [Enabling NDP proxy (instead of default IPv6 masquerading)](#enabling-ndp-proxy-instead-of-default-ipv6-masquerading)\n   * [Redirecting DNS](#redirecting-dns)\n   * [Traffic control](#traffic-control)\n   * [Persisting configuration with systemd](#persisting-configuration-with-systemd)\n * [License](#license)\n * [Acknowledgments](#acknowledgments)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your\nlocal machine. This machine (called hub) will act as VPN concentrator. All\nother peers connects to hub (as in a \"road warrior\" configuration).\n\n### Docker\n\nA Docker container image based on Alpine Linux, [WireGuard] tools\nand [libqrencode] is available from `ghcr.io`.\n\n    curl -4 ifconfig.co/ip > extnetip.txt\n    docker run --rm -it -v \"$PWD:/pwd\" ghcr.io/burghardt/easy-wg-quick\n\nPlease note that `extnetip.txt` must be populated with the server IP via\nthe cURL command above or manually if you use the generated configuration\non the host (instead of the container).\n\n### Terraform\n\nTerraform code for deploying `easy-wg-quick` in the Google Cloud Platform\nis available from the [tf-gcp-easy-wg-quick] repository.\n\n### Prerequisites\n\nInstall [WireGuard] for your operating system on [local machine], [router],\n[VPS] or [container]. This will be your hub.\n\nAs dependences `/bin/sh`, `wg`, `wg-quick`, `awk`, `grep` and `ip` commands\nshould be available on hub. If `ip` is not available user is required to set\n`EXT_NET_IF` and `EXT_NET_IP` variables in script to external network interface\nname and IP address (or edit `wghub.conf`). Optionally `qrencode` can be used\nto generate [QR codes] for mobile applications.\n\n#### Debian, Ubuntu\n\n    sudo apt install wireguard-tools mawk grep iproute2 qrencode\n\n#### Fedora, RHEL, CentOS\n\n    sudo dnf install wireguard-tools gawk grep iproute qrencode\n\n#### FreeBSD\n\n    sudo pkg install net/wireguard-tools graphics/libqrencode\n\n#### macOS\n\n    brew install wireguard-tools qrencode\n\n#### Installing WireGuard tools (and modules)\n\nThis script requires only tools installed, but to use WireGuard module\n(or user-space implementation) is also required. Detailed install guide\nfor various operating systems is available at [wireguard.com/install].\n\nPeers also requires WireGuard installed. [Android] and [iOS] are supported.\n[OpenWRT clients] are supported with [UCI] configuration fragments.\n\n### Installing\n\nJust download the script and make it executable with `chmod`.\n\n    wget https://raw.githubusercontent.com/burghardt/easy-wg-quick/master/easy-wg-quick\n    chmod +x easy-wg-quick\n\nNote that you can use a short URL as well.\n\n    wget https://git.io/fjb5R -O easy-wg-quick\n    chmod +x easy-wg-quick\n\nOr clone repository.\n\n    git clone https://github.com/burghardt/easy-wg-quick.git\n\n## Usage\n\nScript do not require any arguments. Just run it and it will create usable\nWireGuard configuration for hub and one peer. Any sequential invocation creates\nanother peer configuration within same hub.\n\n    ./easy-wg-quick # 1st run creates hub configuration and one client\n    ./easy-wg-quick # any other runs creates additional clients\n\nPassing an argument to script creates configuration file with name instead of\nsequence number to help remembering which config was for which device.\nFollowing command will create `wgclient_client_name.conf` file.\n\n    ./easy-wg-quick client_name\n\n### Special usage\n\n#### -h / --help\n\nDisplays help for all supported arguments.\n\n#### -i / --init\n\nWrites the initial configuration to text files without creating a client or\nhub configuration. This option is useful if you want to change auto-detected\nor default configuration values. Repeat the script with the client name to\ncreate the final configuration.\n\n#### -c / --clear\n\nTo start over, manually remove all `*.bak`, `*.conf`, `*.key`, and `*.psk`\nfiles. If you need to remove initial configuration options as well, also\ndelete all `*.txt` files. This script does not remove anything.\n\n#### -d / --install-wg-quick\n\nThis option will download and install the wg-quick script from the official\nWireguard GitHub mirror based on the current operating system (Linux, FreeBSD,\nOpenBSD and Darwin are supported).\n\nIf run as `root`, it will install `wg-quick` in `/usr/local/sbin`. If run as\na normal user, it will use `$HOME/.local/bin`.\n\n#### -u / --upgrade\n\nThis will download the latest release of that script and replace the original\nfile with the downloaded version.\n\n### Sample output\n\n```\nNo seqno.txt... creating one!\nNo wghub.key... creating one!\nNo wghub.conf... creating one!\nWireGuard hub address is 10.13.1.140:51820 on wlp9s0.\nNote: customize [Interface] section of wghub.conf if required!\n\nNote: passing argument to script creates client configuration with supplied\n      name to help remembering which config was for which device. If you\n      didn't pass any argument you can still rename created file manually\n      with command:\n  mv -vi wgclient_10.conf wgclient_name.conf\n\nNo wgclient_10.conf... creating one!\n█████████████████████████████████████████████████████████████████████████\n█████████████████████████████████████████████████████████████████████████\n████ ▄▄▄▄▄ █▀██ ▀▄▀▄█▄ ▀▄ █▀▀▄█▄▄▀ ▄▀██▀▀▀▀█▄  █▀▀▄█  ▄▀▀ █▄▀█ ▄▄▄▄▄ ████\n████ █   █ █▀▄▀ ▀█▀▄▄▄ ▄ ▀█ ▄██▄█ ▀▀▄ ███▀▀▄▄  ▀ ▄▄▀███▄▀▀ ▀▄█ █   █ ████\n████ █▄▄▄█ █▀▀▀██▀▄██  ▀▄███▀▀▀▀▄▄ ▄▄▄ ▄  ▀██  ▄█▀▀  █▀██▄▀█▄█ █▄▄▄█ ████\n████▄▄▄▄▄▄▄█▄█▄▀ ▀▄▀▄▀ ▀▄▀▄█ █▄█ █ █▄█ █ █ ▀ ▀▄█ ▀▄▀ ▀▄▀ ▀▄█▄█▄▄▄▄▄▄▄████\n████▄▄   █▄ ▄ ██ ▄▄▄█ ▀█▀▄ ▀▄█▄▄█▄▄   ▄   █ █▀▄▀▄▀█▄▀▄▀▀▄▄ █▄ ▀▄▀ ▀ █████\n█████▀ ▄▀▀▄▀▀▄█▀  █▀ ▀▀▄▀█▄█▄ ▄▀▀▄▄▄█ ▄▀▀█ ▄ ▀▀▄ ▄▄▄ ▀ █▀▀▀██▀▄█ ▄███████\n████ ▄███ ▄▀█▄▀█▄▀ ███▀▀▀▀▀▀▄ ▄   ▀ ██▀  ▄███ ▄ ▀ ▀ ▄▄▀▄█▀▄▀▀ █▀ ▄▄▀ ████\n█████▀  ▀▀▄ ▄▀▄▀▄██▄█  ▀ ▀▄▀█ █ █▀▀▄ ▀█▀▄▀█▀▀▄▄█▀ ██▀█▄▄▀█▄ ▀  ▀██▀▄▀████\n████▀▄▄▀▀ ▄▄▄▄▄█ ▀█  ▀▀ ▀█ █▀█ ▀▀▄ ▀█▀██▀█ ▄▀▀▀▀▄▀   █▀▄▄▄ █ ▀▀▀ ▄▄ █████\n████▀▄▄██ ▄▀▀▀▀█▄▄▄ ▀▄█ ▀▀ ▄▄▄ █▀▄   █▄▄ ▄███▀▄▀██   ▀▀██ ▄ ▀▄  ▄██▀▄████\n████▄  ███▄  ▀▄█   ▄▀▄▀▀▀▀▄▀▀▄▄▀   ▄ ▄▄▄▀▄▄█▄▄ ▀█▄▄▀▀▀▄▄▄▀ ▀▄██▀ ▄▄  ████\n████ █▄▀▀ ▄██▀▄ █▄▀▄ ▀ █▀ ▄ ▄██▀█ ▄ ██▀▄▄▀   █ ▄▄█  ▀▀  ▄▀█ ▄ ██ ▀▀▄▄████\n████   ▄ ▀▄▄▄█▄█▀█▄ ▀▀▀ ▀▀▄▄█  ▀▄▀██ ▀▄█  █ █▄  █▀▀▀  ▀██  ▀▀ ▀▄▀ ██▀████\n█████▄ ▀▄▀▄█▄ ▄▄▀█ ▄█   █▄▄▀ ▄▄▀█  ▄█▄▄▄ ▀▀▀▀ ▄▄  █ ▀▄█▄ ▄▄▀▀ █ ▀▄▀▄▄████\n████ █▀█▀▄▄▀▀▄ ███ ▀█▀▀▄█▄ ▄  ▄███▀▄▄▀▀  ▀▀▀▀ ▄ █▄▀▄▄▄▀▄▀  ██ █▀ █  ▀████\n█████▄▄█ ▄▄▄  █ ▄  ▀█▀ ▄█▀█▄  █▀▄▄ ▄▄▄ ▄  █▄█▄ ██▀▄█▀██▀   ▄ ▄▄▄ ▀▀▄█████\n████▀█▀▄ █▄█ █▄█▄▀▀█ █▄▄  ▀███▀███ █▄█  ▄▄▄▀▀█ ▄██▀▀ ▀▀▄▄▄▄▄ █▄█ ██▄▀████\n████   ▀ ▄▄  ▀█ ▄█  █▀ ▄█▄█▄▄▀████ ▄  ▄ ▄▄▄███▄▀██▄▄▄▄▄▀▄▄██ ▄ ▄▄▄█ ▄████\n████ ▀ ▄▄ ▄ ▄▄ ▄▀▄█▄▀▀  █▄█▀ ▀█▀▀█ █▀██▀▀███▄▀▀▀█▄█▀  ▄█▄  ▄█▄█▀▄   ▀████\n████▄▀▄▄▀▄▄█▀▄▄ █▄▄█▀  ▄▀▀█▄ ▄█▀██  ███ █▄▄█▀█▄▀▀▄ ▀▄▀▄ ▀██ ▀▀    ▀▀▄████\n████  ▄▀▄▀▄▀ ▄▀▄ ▄  ▀█▄█  ▀▀▄█▄▀█▀▀▄██▀  ▄▀▀▄ ▄█▄██▀ ▄█▄▄▄ ▀ ██▄▀██▀▄████\n████▀█ ▄█▄▄▄▄██▄ ▄▄▄█  ▄▀▄▄█▄█▄▀▀▀ █▀ █▀▀▄▀█▀█▀█▀▄█▄ ▀█▄█▀ ▀▄█▄█ ▄▀ ▄████\n████▄▀▀█▄▄▄▀▀█▄ ▀█ ▄▀▄ ▀▀█▄▀▄▄▄ ▄▀ ▀▀▀▄▀█ █▀█  ▄▀ ▀█▄ ▀▀█▀▄▄█ █▄█▄██▀████\n████▀█▀▄ ▀▄▄  █▄ ▀█▄   ▀ ▄▄▀█▀█▀▄██▀▄  ▄█▀█▀██▀ ▀▄█  ▀██▀▄█▄█▀ █ █▀ █████\n█████ █ ▄▄▄ █▀  ▀██ ▀▄ ▄  █████▀█ ▄▀ ▄▄▄█ ▄▄█▄▄ ▄ ▄▄▄█▀▄▄▄▄▄▄▀ ▄█▄▄ █████\n████▄█▄ ▄▀▄  ▄▀█▀██▄▀▄█▄█▀   ▄ █▀██ ▀▄ ▄▄▀▀▀▀█▀█ █▄  ▀▀ █  █▀ ▀ ▄██▀▄████\n████▄▄ █ █▄▄▄▄ █ ▄▄▀█▄▀█ ▀▄▀ ▄▄ ▀ ▄█ █▄▀▀▄█▀▄  ▀███▀▀ ▄██  █▄▄█▀█▄▄▄▀████\n████▀█▄ █▄▄█ █▀ ▄ ▀██ ▀ ▀▄▄▄▄██▄█▄▄▄█▄▄▄▀▀▄▀▄█▀ ▄█  ▄▀▄  ▀█  ▄█ ▄▄▀▄▄████\n█████▄▄█▄█▄█▀▄█ ▀ █▄ ▀▀▀▀▀█▄█▄▄ ▄█ ▄▄▄  ▀▄▀██▄▄▀█▄▀▀  █▄█ ▄█ ▄▄▄ █ █▀████\n████ ▄▄▄▄▄ █▄██▀▀█▀██▀▀▄█ ▄▀ ▄█▄█▀ █▄█    █▀▀▄█▄  █▄█▄▀█▀  █ █▄█ ▀▀▀▄████\n████ █   █ █ █ ▀▄█ ▀███▄██▄▄  ▄ █ ▄▄ ▄▄█ ▄▀▀█▀▄▄▀▀█▄▄▄▀▀▀█ █   ▄▄▄▀ █████\n████ █▄▄▄█ █  ▀▄ █▄▀█▀ ▄███▄  █ ▄ ▀█▄ ▄▀ ▀▄▀▀▄ █▀ ▄ ▀▄█▀▄█▀▄▄███▄▀▀ █████\n████▄▄▄▄▄▄▄█▄▄██▄▄█▄█▄█▄▄▄▄█▄▄▄██▄█████▄▄█▄▄▄█▄▄████████▄▄▄█▄████████████\n█████████████████████████████████████████████████████████████████████████\n█████████████████████████████████████████████████████████████████████████\nScan QR code with your phone or use \"wgclient_10.conf\" file.\nUpdating wghub.conf... done!\n\nImportant: Deploy updated wghub.conf configuration to WireGuard with wg-quick:\n  sudo wg-quick down ./wghub.conf # if already configured\n  sudo wg-quick up ./wghub.conf\n  sudo wg show # to check status\n```\n\n### Using generated configuration\n\nOn hub configure WireGuard.\n\n    sudo wg-quick up ./wghub.conf\n\nOn peer scan QR code or copy `wgclient_10.conf`. To display QR code again use\n\n    qrencode -t ansiutf8 < wgclient_10.conf\n\nOr use saved QR code\n\n    cat wgclient_10.qrcode.txt\n\nTo connect the whole network with a single WireGuard client running on an\n[OpenWRT] router, append generated [UCI] client configuration fragment to\nyour router `/etc/config/network` file.\n\n    cat wgclient_10.uci.txt\n\nFinally on hub check if everything works with `sudo wg show`.\n\n```\ninterface: wghub\n  public key: kbaG3HxSDz3xhqiTNXlo1fZkFa+V6oTl+w0cSAQKxwQ=\n  private key: (hidden)\n  listening port: 51820\n\npeer: th8qYu0R0mgio2wPu1kz6/5OOgi6l8iy7OobK590LHw=\n  preshared key: (hidden)\n  endpoint: 10.60.1.150:37218\n  allowed ips: 10.127.0.10/32\n  latest handshake: 50 minutes, 22 seconds ago\n  transfer: 32.64 MiB received, 95.24 MiB sent\n```\n\n## Fine tuning\n\n### Disabling external interface autodetection\n\nBy default `easy-wg-quick` use interface with default routing done over it as\nexternal network interface of VPN hub. If autodetection fails or generation of\nconfiguration is done outside the hub (i.e. on [air gapped] laptop) user can\nset interface name in `extnetif.txt` file with command:\n\n    echo vtnet0 > extnetif.txt\n\n### Disabling external IP address autodetection\n\nBy default `easy-wg-quick` uses IP address of interface that has default\nrouting done over it as external IP address of VPN hub. This might not be true\nif hub is behind firewall or NAT/PAT/masquarading is done. User can set\npreferred IP address in `extnetip.txt` file with command:\n\n    echo 192.168.1.2 > extnetip.txt\n\nIn case of NAT/PAT/masquarading one can try to use service like [ifconfig.co]\nfor autodetection:\n\n    curl -4 ifconfig.co/ip > extnetip.txt\n\nFor IPv6 addresses, one can use curl's `-6` switch. Brackets around IPv6\naddresses are required:\n\n    sed -i 's/\\(.*\\)/[\\1]/' extnetip.txt\n\n### Disabling random port assignment\n\nBy default `easy-wg-quick` use random port number from range 1025-65535. When\nusing static port number is required for firewall configuration or other\nreasons user can set preferred port number (80 in this example) in `portno.txt`\nfile with command:\n\n    echo 80 > portno.txt\n\n### Disabling randomly generated internal network addresses\n\nBy default `easy-wg-quick` use randomly generated internal network addresses\nfor both IPv4 and IPv6. Custom network addresses can be set with the following\ncommands.\n\n    echo \"10.1.1.\"               > intnetaddress.txt   # for IPv4\n    echo \"fd90:d175:8e43:705d::\" > intnet6address.txt  # for IPv6\n\nDefault masks are /24 for IPv4 and /64 for IPv6.\n\n#### Setting network masks\n\nTo change default masks set new masks in files named `intnetmask.txt` (IPv4)\nand `intnet6mask.txt` (IPv6).\n\n    echo 172.16.0. > intnetaddress.txt\n    echo /16       > intnetmask.txt\n    echo fd9d:9648:0841:0c6e:3d28:94d9:: > intnet6address.txt\n    echo /112                            > intnet6mask.txt\n\n### Setting interface's maximum transmission unit (MTU) size\n\nTo change the default interface's maximum transmission unit (MTU) size of 1280\nbytes, write a new value into the file named `intnetmtu.txt`. WireGuard MTU\nshould be between 1280 and 1420 bytes.\n\n    echo 1380 > intnetmtu.txt\n\n### Setting custom DNS\n\n#### Setting IPv4 resolver address\n\nBy default `easy-wg-quick` uses 1.1.1.1 as it's internal DNS. You can use the\ncommand below to serve a custom IPv4 DNS to clients.\n\n    echo 8.8.8.8 > intnetdns.txt\n\n#### Setting IPv6 resolver address\n\nBy default `easy-wg-quick` uses 2606:4700:4700::1111 as it's internal DNS. You\ncan use the command below to serve a custom IPv6 DNS to clients.\n\n    echo 2001:4860:4860::8888 > intnet6dns.txt\n\n### Setting custom client's `AllowedIPs`\n\nBy default, the client's `AllowedIPs` variable is set to `0.0.0.0/0, ::/0`,\ndirecting the whole client's traffic through the VPN connection. If you want\nto create a VPN [split tunneling] configuration, store required IP addresses\nranges in the `intnetallowedips.txt` file:\n\n    echo '172.16.1.0/24, 172.16.2.0/24' > intnetallowedips.txt\n\n### Choosing firewall type\n\nFirewall type is guessed from operating system. For Linux `iptables` and\n`ip6tables` are used. For FreeBSD and macOS basic `pf` NAT rules are\nimplemented.\n\nThere are other firewall implementations to choose from. The following table\ncompares the features of the alternative implementations.\n\n| Firewall type | IPv4 MASQ | IPv6 MASQ | IPv6 NDP | TCP MSS clamp |\n| --------------|-----------|-----------|----------|---------------|\n| iptables      | &check;   | &check;   | &check;  | &check;       |\n| nft           | &check;   | &check;   | &check;  | &check;       |\n| ufw           | &check;   | &check;   | &check;  | &check;       |\n| firewalld     | &check;   | &check;   | _        | &check;       |\n| pf            | &check;   | -         | _        | _             |\n| custom / none | -         | -         | -        | -             |\n\nFile `fwtype.txt` contains name of firewall type. To override autodetection\nor disable any rules run one of the following commands:\n\n    echo iptables  > fwtype.txt  # to choose Linux netfilter\n    echo nft       > fwtype.txt  # to choose Linux nftables\n    echo firewalld > fwtype.txt  # to choose [firewalld]\n    echo ufw       > fwtype.txt  # to choose Uncomplicated Firewall\n    echo pf        > fwtype.txt  # to choose OpenBSD PF\n    echo custom    > fwtype.txt  # to include predefined commands from file\n    echo none      > fwtype.txt  # to skip any setup during wg-quick up/down\n\nIf `fwtype.txt` contains word `custom` content of `commands.txt` is included\nin the `wghub.conf` file.\n\nFormat of `commands.txt` is:\n\n    PostUp = echo \"command 1\"\n    PostUp = echo \"command 2\"\n    PostUp = ...\n\n    PostDown = echo \"command 1\"\n    PostDown = secho \"command 2\"\n    PostDown = ...\n\n### Choosing if PostUp/PostDown should enable/disable IP forwarding\n\nSysctl command syntax is guessed from operating system. Linux, FreeBSD (and\nmacOS) are supported. As enabling IP forwarding is required for hub to forward\nVPN traffic to the Internet it is managed by PostUp/PostDown settings by\ndefault.\n\nSome application (i.e. [Docker]) might require that IP forwarding is never\ndisabled. In that case setting `none` in `sysctltype.txt` and managing IP\nforwarding settings [elsewhere] might be required.\n\nFile `sysctltype.txt` contains name of sysctl type. To override autodetection\nor disable any commands from being run use one of the following commands:\n\n    echo linux   > sysctltype.txt  # to choose Linux sysctl command\n    echo freebsd > sysctltype.txt  # to choose FreeBSD sysctl command\n    echo none    > sysctltype.txt  # to skip any setup during wg-quick up/down\n\n### Enabling IPv6\n\nIf a global unicast IPv6 address is detected on server tunnels will be created\nwith inner IPv6 addresses allocated. This allows hub's clients to connect over\nhub's IPv6 NAT to IPv6 network.\n\nIf a global unicast IPv6 address is not detected, the existence of a file\nnamed `forceipv6.txt` can forcibly enable IPv6 support.\n\n    touch forceipv6.txt\n\nTo use outer IPv6 addresses (i.e. connect client to hub over IPv6) just set\n`EXT_NET_IF` and `EXT_NET_IP` variables in script to external network interface\nname and IPv6 address (or edit `wghub.conf`).\n\n### Enabling NDP proxy (instead of default IPv6 masquerading)\n\nBy default `easy-wg-quick` uses IPv6 masquerading to provide IPv6 connectivity\nto peers. This is easier to setup and require only single IPv6 global unicast\naddress to work. On the other hand network address translation (NAT) has\n[issues and limitations].\n\n[Neighbor Discovery] [Proxies (ND Proxy, NDP Proxy)] allows [end-to-end\nconnectivity], but requires /64 network to be assigned to hub. From this /64\nnetwork, a subnetwork has to be divided (i.e. /112) and assigned to WireGuard\ninterface.\n\nTo enable proxied NDP create file named `ipv6mode.txt` with `proxy_ndp` string.\n\n    echo proxy_ndp > ipv6mode.txt\n\nWhen hub has 2001:19f0:6c01:1c0d/64 assigned, part of it can be assigned to\nWireGuard interface (i.e. 2001:19f0:6c01:1c0d:40/112).\n\n    echo 2001:19f0:6c01:1c0d:40:: > intnet6address.txt\n    echo /112 > intnet6mask.txt\n\nPlease note that NDP proxy mode in `easy-wg-quick` is supported only on Linux.\n\n### Redirecting DNS\n\nDNS redirection might be required to integrate with services like [Pi-hole] or\n[Cloudflare DNS over TLS]. This could be achieved by using port 53 UDP/TCP\nredirection in `wghub.conf`.\n\n    PostUp = iptables -t nat -A PREROUTING -i %i -p udp -m udp --dport 53 -j DNAT --to-destination 1.1.1.1:53\n    PostUp = iptables -t nat -A PREROUTING -i %i -p tcp -m tcp --dport 53 -j DNAT --to-destination 1.1.1.1:53\n    PostDown = iptables -t nat -D PREROUTING -i %i -p udp -m udp --dport 53 -j DNAT --to-destination 1.1.1.1:53\n    PostDown = iptables -t nat -D PREROUTING -i %i -p tcp -m tcp --dport 53 -j DNAT --to-destination 1.1.1.1:53\n\nWhen using IPv6 similar rules should be set independently with `ip6tables`.\n\n    PostUp = ip6tables -t nat -A PREROUTING -i %i -p udp -m udp --dport 53 -j DNAT --to-destination 2606:4700:4700::1111:53\n    PostUp = ip6tables -t nat -A PREROUTING -i %i -p tcp -m tcp --dport 53 -j DNAT --to-destination 2606:4700:4700::1111:53\n    PostDown = ip6tables -t nat -D PREROUTING -i %i -p udp -m udp --dport 53 -j DNAT --to-destination 2606:4700:4700::1111:53\n    PostDown = ip6tables -t nat -D PREROUTING -i %i -p tcp -m tcp --dport 53 -j DNAT --to-destination 2606:4700:4700::1111:53\n\n### Traffic control\n\nClients can benefit from setting traffic control rules in the  `wghub.conf`.\nFor example, setting an SFQ scheduler on the Linux hub is the simplest way to\nensure the fairness of the download so that each flow can send data in turn,\nthus preventing any single client from drowning out the rest. In addition,\nSFQ will prevent increased latency and latency spikes (aka bufferbloat) during\nhigh bandwidth consumption.\n\n    PostUp = tc qdisc add dev %i root sfq perturb 10\n\nOn Linux clients setting the same should improve the fairness of upload flows.\n\n### Persisting configuration with systemd\n\n[Systemd] may load configuration for both hub and clients using\n`wg-quick.service`. Note that also [native support] for setting up WireGuard\ninterfaces exists (since version 237).\n\n    sudo cp wghub.conf /etc/wireguard/wghub.conf\n    sudo systemctl enable wg-quick@wghub\n    sudo systemctl start wg-quick@wghub\n    systemctl status wg-quick@wghub\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE] file for\ndetails.\n\n## Acknowledgments\n\nOpenVPN's [easy-rsa] was an inspiration for writing this script.\n\n[Android]: https://play.google.com/store/apps/details?id=com.wireguard.android\n[Cloudflare DNS over TLS]: https://github.com/qdm12/cloudflare-dns-server\n[Docker]: https://success.docker.com/article/ipv4-forwarding\n[LICENSE]: LICENSE\n[Neighbor Discovery]: https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol\n[OpenWRT clients]: https://openwrt.org/docs/guide-user/services/vpn/wireguard/client\n[OpenWRT]: https://openwrt.org/\n[Pi-hole]: https://pi-hole.net/\n[Proxies (ND Proxy, NDP Proxy)]: https://tools.ietf.org/html/rfc4389\n[QR codes]: https://en.wikipedia.org/wiki/QR_code\n[Systemd]: https://wiki.debian.org/systemd\n[UCI]: https://openwrt.org/docs/techref/uci\n[VPS]: https://en.wikipedia.org/wiki/Virtual_private_server\n[WireGuard]: https://www.wireguard.com/\n[air gapped]: https://en.wikipedia.org/wiki/Air_gap_%28networking%29\n[container]: https://github.com/activeeos/wireguard-docker\n[easy-rsa]: https://github.com/OpenVPN/easy-rsa\n[elsewhere]: https://en.wikipedia.org/wiki/Sysctl\n[end-to-end connectivity]: https://en.wikipedia.org/wiki/End-to-end_principle\n[firewalld]: https://firewalld.org/\n[iOS]: https://itunes.apple.com/us/app/wireguard/id1441195209?ls=1&mt=8\n[ifconfig.co]: https://ifconfig.co/\n[issues and limitations]: https://en.wikipedia.org/wiki/Network_address_translation#Issues_and_limitations\n[libqrencode]: https://github.com/fukuchi/libqrencode\n[local machine]: https://www.wireguard.com/install/\n[native support]: https://manpages.debian.org/buster/systemd/systemd.netdev.5.en.html#%5BWIREGUARD%5D_SECTION_OPTIONS\n[router]: https://openwrt.org/docs/guide-user/services/vpn/wireguard/start\n[split tunneling]: https://en.wikipedia.org/wiki/Split_tunneling\n[tf-gcp-easy-wg-quick]: https://github.com/burghardt/tf-gcp-easy-wg-quick\n[wireguard.com/install]: https://www.wireguard.com/install/\n"
        },
        {
          "name": "easy-wg-quick",
          "type": "blob",
          "size": 25.3525390625,
          "content": "#!/bin/sh\n# easy-wg-quick - Creates WireGuard configuration for hub and peers with ease\n# Copyright (C) 2019-2024 Krzysztof Burghardt <krzysztof@burghardt.pl>\n#\n#\n# License\n# -------\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License version 2 as\n# published by the Free Software Foundation.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License along\n# with this program; if not, write to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n#\n# You are encouraged to send comments, improvements or suggestions to\n# me at krzysztof@burghardt.pl\n#\n# For updates visit https://github.com/burghardt/easy-wg-quick\n\ncheck_if_wg_is_installed() {\n    wg show interfaces > /dev/null 2>&1 || {\n        echo 'Unable to use \"wg\" command. Are WireGuard tools installed?'\n        printf 'Read https://github.com/burghardt/easy-wg-quick#prerequisites\\n'\n        exit 1\n    }\n}\n\ndetect_ext_net_if() {\n    if test \"$(uname -s)\" = \"FreeBSD\" || test \"$(uname -s)\" = \"Darwin\"; then\n        route get default | awk '$1 == \"interface:\" { print $2 }'\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        ip route sh | awk '$1 == \"default\" && $2 == \"via\" { print $5; exit }'\n    fi\n}\n\ncreate_ext_net_if() {\n    echo \"No extnetif.txt... creating one!\"\n    detect_ext_net_if > extnetif.txt\n    test -s extnetif.txt || {\n        echo 'Unable to detect external interface name.'\n        echo 'Set it manually in extnetif.txt file and start script again.'\n        exit 1\n    }\n}\n\nget_ext_net_if() {\n    cat extnetif.txt\n}\n\ndetect_ext_net_ip() {\n    if test \"$(uname -s)\" = \"FreeBSD\"; then\n        ifconfig \"$1\" | awk '$1 == \"inet\" { print $2 }'\n    elif test \"$(uname -s)\" = \"Darwin\"; then\n        ip addr sh \"$1\" | grep 'inet ' | xargs | awk -F'[ /]' '{ print $2 }'\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        ip addr sh \"$1\" | grep 'inet ' | xargs | awk -F'[ /]' '{ print $2 }'\n    fi\n}\n\ncreate_ext_net_ip() {\n    echo \"No extnetip.txt... creating one!\"\n    detect_ext_net_ip \"$1\" > extnetip.txt\n    test -s extnetip.txt || {\n        echo 'Unable to detect external interface IP address.'\n        echo 'Set it manually in extnetip.txt file and start script again.'\n        exit 1\n    }\n}\n\nget_ext_net_ip() {\n    cat extnetip.txt\n}\n\ncreate_client_allowedips() {\n    echo \"No intnetallowedips.txt... creating one!\"\n    echo \"0.0.0.0/0, ::/0\" > intnetallowedips.txt\n}\n\nget_client_allowedips() {\n    cat intnetallowedips.txt\n}\n\ndetect_fw_type() {\n    if test \"$(uname -s)\" = \"FreeBSD\" || test \"$(uname -s)\" = \"Darwin\"; then\n        echo \"pf\"\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        echo \"iptables\"\n    fi\n}\n\ncreate_fw_type() {\n    echo \"No fwtype.txt... creating one!\"\n    detect_fw_type > fwtype.txt\n    test -s fwtype.txt || {\n        echo 'Unable to detect firewall type.'\n        echo 'Set it manually in fwtype.txt file and start script again.'\n        exit 1\n    }\n}\n\nget_fw_type() {\n    cat fwtype.txt\n}\n\ndetect_sysctl_type() {\n    if test \"$(uname -s)\" = \"FreeBSD\" || test \"$(uname -s)\" = \"Darwin\"; then\n        echo \"freebsd\"\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        echo \"linux\"\n    fi\n}\n\ncreate_sysctl_type() {\n    echo \"No sysctltype.txt... creating one!\"\n    detect_sysctl_type > sysctltype.txt\n    test -s sysctltype.txt || {\n        echo 'Unable to detect sysctl type.'\n        echo 'Set it manually in sysctltype.txt file and start script again.'\n        exit 1\n    }\n}\n\nget_sysctl_type() {\n    cat sysctltype.txt\n}\n\ncheck_if_ipv6_is_available() {\n    if test -f forceipv6.txt; then\n        echo 'File forceipv6.txt exists. Enabling IPv6 in tunnels!'\n        return 0\n    elif test \"$(uname -s)\" = \"FreeBSD\" || test \"$(uname -s)\" = \"Darwin\"; then\n        IPV6ADR=$(ifconfig \"$1\" | awk '$1 == \"inet6\" { print $2 }' | grep -v \"%$1$\")\n        test -n \"$IPV6ADR\" && {\n            echo 'Looks like you have IPv6 available. Enabling IPv6 in tunnels!'\n            return 0\n        }\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        ip -6 addr | grep -i 'scope global' > /dev/null 2>&1 && {\n            echo 'Looks like you have IPv6 available. Enabling IPv6 in tunnels!'\n            return 0\n        }\n    else\n        echo 'Unsupported operating system. Unable to detect IPv6 availability.'\n    fi\n    return 1\n}\n\nupdate_seq_no() {\n    echo \"$1\" > seqno.txt\n}\n\ncreate_seq_no() {\n    echo \"No seqno.txt... creating one!\"\n    update_seq_no 10\n}\n\nget_seq_no() {\n    SEQNO=$(cat seqno.txt)\n    NEXT=$((SEQNO + 1))\n    update_seq_no \"$NEXT\"\n    echo \"$SEQNO\"\n}\n\ncreate_port_no() {\n    echo \"No portno.txt... creating one!\"\n    (shuf -i 1025-65535 -n 1 || jot -r 1 1025 65535) > portno.txt 2> /dev/null\n    test -s portno.txt || {\n        echo 'Unable to assign random port for WireGuard.'\n        echo 'Set it manually in portno.txt file and start script again.'\n        exit 1\n    }\n}\n\nget_port_no() {\n    cat portno.txt\n}\n\ncreate_int_net_dns() {\n    echo \"No intnetdns.txt... creating one!\"\n    echo \"1.1.1.1\" > intnetdns.txt\n}\n\nget_int_net_dns() {\n    cat intnetdns.txt\n}\n\ncreate_int_net_address() {\n    echo \"No intnetaddress.txt... creating one!\"\n    RNDNET1=\"$( (shuf -i 1-250 -n 1 || jot -r 1 1 250) 2> /dev/null)\"\n    RNDNET2=\"$( (shuf -i 1-250 -n 1 || jot -r 1 1 250) 2> /dev/null)\"\n    echo \"10.${RNDNET1:-127}.${RNDNET2:-0}.\" > intnetaddress.txt\n}\n\nget_int_net_address() {\n    cat intnetaddress.txt\n}\n\ncreate_int_net_mtu() {\n    echo \"No intnetmtu.txt... creating one!\"\n    echo \"1280\" > intnetmtu.txt\n}\n\nget_int_net_mtu() {\n    cat intnetmtu.txt\n}\n\ncreate_int_net_mask() {\n    echo \"No intnetmask.txt... creating one!\"\n    echo \"/24\" > intnetmask.txt\n}\n\nget_int_net_mask() {\n    cat intnetmask.txt\n}\n\ncreate_int_net6_dns() {\n    echo \"No intnet6dns.txt... creating one!\"\n    echo \"2606:4700:4700::1111\" > intnet6dns.txt\n}\n\nget_int_net6_dns() {\n    cat intnet6dns.txt\n}\n\ncreate_int_net6_address() {\n    echo \"No intnet6address.txt... creating one!\"\n    RNDGLB1=\"$( (shuf -i 11-99 -n 1 || jot -r 1 11 99) 2> /dev/null)\"\n    RNDGLB2=\"$( (shuf -i 1111-9999 -n 1 || jot -r 1 1111 9999) 2> /dev/null)\"\n    RNDGLB3=\"$( (shuf -i 1111-9999 -n 1 || jot -r 1 1111 9999) 2> /dev/null)\"\n    RNDSUBN=\"$( (shuf -i 1111-9999 -n 1 || jot -r 1 1111 9999) 2> /dev/null)\"\n    echo \"fd${RNDGLB1:-fc}:${RNDGLB2:-2965}:${RNDGLB3:-0503}:${RNDSUBN:-e2ae}::\" > intnet6address.txt\n}\n\nget_int_net6_address() {\n    cat intnet6address.txt\n}\n\ncreate_int_net6_mask() {\n    echo \"No intnet6mask.txt... creating one!\"\n    echo \"/64\" > intnet6mask.txt\n}\n\nget_int_net6_mask() {\n    cat intnet6mask.txt\n}\n\ncreate_ipv6_mode() {\n    echo \"No ipv6mode.txt... creating one!\"\n    echo \"masquerade\" > ipv6mode.txt\n}\n\nget_ipv6_mode() {\n    cat ipv6mode.txt\n}\n\ncreate_hub_key() {\n    echo \"No wghub.key... creating one!\"\n    wg genkey > wghub.key\n}\n\ncreate_iptables_rules() {\n    cat << EOF\nPostUp = iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o $EXT_NET_IF -j TCPMSS --clamp-mss-to-pmtu\n$($NET6 && echo \"PostUp = ip6tables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o $EXT_NET_IF -j TCPMSS --clamp-mss-to-pmtu\")\nPostUp = iptables -t nat -A POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostUp = iptables -I DOCKER-USER -i %i -j ACCEPT || iptables -A FORWARD -i %i -j ACCEPT\n$($NET6 && echo \"PostUp = ip6tables -I DOCKER-USER -i %i -j ACCEPT || ip6tables -A FORWARD -i %i -j ACCEPT\")\nPostUp = iptables -I DOCKER-USER -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT || iptables -A FORWARD -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n$($NET6 && echo \"PostUp = ip6tables -I DOCKER-USER -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT || ip6tables -A FORWARD -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\")\nPostDown = iptables -D DOCKER-USER -i %i -j ACCEPT || iptables -D FORWARD -i %i -j ACCEPT\n$($NET6 && echo \"PostDown = ip6tables -D DOCKER-USER -i %i -j ACCEPT || ip6tables -D FORWARD -i %i -j ACCEPT\")\nPostDown = iptables -D DOCKER-USER -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT || iptables -D FORWARD -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n$($NET6 && echo \"PostDown = ip6tables -D DOCKER-USER -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT || ip6tables -D FORWARD -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\")\nPostDown = iptables -t nat -D POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostDown = iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o $EXT_NET_IF -j TCPMSS --clamp-mss-to-pmtu\n$($NET6 && echo \"PostDown = ip6tables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o $EXT_NET_IF -j TCPMSS --clamp-mss-to-pmtu\")\nEOF\n    if $NET6 && test \"$NET6MODE\" = \"masquerade\"; then\n        cat << EOF\nPostUp = ip6tables -t nat -A POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostDown = ip6tables -t nat -D POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nEOF\n    fi\n}\n\ncreate_nft_rules() {\n    cat << EOF\nPostUp = nft add table inet easy-wg-quick-%i\nPostUp = nft add chain inet easy-wg-quick-%i forward \"{ type filter hook forward priority 0; }\"\nPostUp = nft add rule inet easy-wg-quick-%i forward iifname %i accept\nPostUp = nft add rule inet easy-wg-quick-%i forward oifname %i ct state related,established accept\nPostUp = nft add chain inet easy-wg-quick-%i postrouting \"{ type nat hook postrouting priority 0; }\"\nPostUp = nft add rule inet easy-wg-quick-%i postrouting ip protocol tcp tcp flags \"&(syn|rst)\" == syn oifname $EXT_NET_IF tcp option maxseg size set rt mtu\nPostUp = nft add table ip easy-wg-quick-%i\nPostUp = nft add chain ip easy-wg-quick-%i postrouting \"{ type nat hook postrouting priority 0; }\"\nPostUp = nft add rule ip easy-wg-quick-%i postrouting oifname $EXT_NET_IF masquerade\nPostDown = nft delete table inet easy-wg-quick-%i\nPostDown = nft delete table ip easy-wg-quick-%i\nEOF\n    if $NET6 && test \"$NET6MODE\" = \"masquerade\"; then\n        cat << EOF\nPostUp = nft add table ip6 easy-wg-quick-%i\nPostUp = nft add chain ip6 easy-wg-quick-%i postrouting \"{ type nat hook postrouting priority 0; }\"\nPostUp = nft add rule ip6 easy-wg-quick-%i postrouting oifname $EXT_NET_IF masquerade\nPostDown = nft delete table ip6 easy-wg-quick-%i\nEOF\n    fi\n}\n\ncreate_firewalld_rules() {\n    cat << EOF\nPostUp = firewall-cmd --zone=public --add-port $EXT_NET_PORT/udp\nPostUp = firewall-cmd --zone=public --add-masquerade\nPostUp = firewall-cmd --zone=public --add-rich-rule='rule tcp-mss-clamp value=pmtu'\nPostDown = firewall-cmd --zone=public --remove-port $EXT_NET_PORT/udp\nPostDown = firewall-cmd --zone=public --remove-masquerade\nPostDown = firewall-cmd --zone=public --remove-rich-rule='rule tcp-mss-clamp value=pmtu'\nEOF\n}\n\ncreate_ufw_rules() {\n    cat << EOF\nPostUp = ufw allow $EXT_NET_PORT/udp\nPostUp = ufw route allow in on %i out on $EXT_NET_IF\nPostUp = ufw route allow in on %i out on %i\nPostUp = iptables -t nat -A POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostUp = iptables -t mangle -A POSTROUTING -o $EXT_NET_IF -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\n$($NET6 && echo \"PostUp = ip6tables -t mangle -A POSTROUTING -o $EXT_NET_IF -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\")\nPostDown = ufw delete allow $EXT_NET_PORT/udp\nPostDown = ufw route delete allow in on %i out on $EXT_NET_IF\nPostDown = ufw route delete allow in on %i out on %i\nPostDown = iptables -t nat -D POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostDown = iptables -t mangle -D POSTROUTING -o $EXT_NET_IF -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\n$($NET6 && echo \"PostDown = ip6tables -t mangle -D POSTROUTING -o $EXT_NET_IF -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\")\nEOF\n    if $NET6 && test \"$NET6MODE\" = \"masquerade\"; then\n        cat << EOF\nPostUp = ip6tables -t nat -A POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nPostDown = ip6tables -t nat -D POSTROUTING -o $EXT_NET_IF -j MASQUERADE\nEOF\n    fi\n}\n\ncreate_sysctl_linux_rules() {\n    cat << EOF\nPostUp = sysctl -q -w net.ipv4.ip_forward=1\nPostUp = sysctl -q -w net.ipv6.conf.all.forwarding=1\nPostDown = sysctl -q -w net.ipv4.ip_forward=0\nPostDown = sysctl -q -w net.ipv6.conf.all.forwarding=0\nEOF\n    if $NET6 && test \"$NET6MODE\" = \"proxy_ndp\"; then\n        cat << EOF\nPostUp = sysctl -q -w net.ipv6.conf.all.proxy_ndp=1\nPostDown = sysctl -q -w net.ipv6.conf.all.proxy_ndp=0\nEOF\n    fi\n}\n\ncreate_pf_rules() {\n    cat << EOF\nPostUp = printf 'nat on $EXT_NET_IF from %i:network to any -> ($EXT_NET_IF)\\\\npass all\\\\n' | pfctl -f -\nPostUp = pfctl -e\nPostDown = pfctl -d\nPostDown = printf '' | pfctl -f -\nEOF\n}\n\ncreate_sysctl_freebsd_rules() {\n    cat << EOF\nPostUp = sysctl net.inet.ip.forwarding=1\nPostUp = sysctl net.inet6.ip6.forwarding=1\nPostDown = sysctl net.inet.ip.forwarding=0\nPostDown = sysctl net.inet6.ip6.forwarding=0\nEOF\n}\n\ncreate_hub_conf() {\n    echo \"No wghub.conf... creating one!\"\n    cat > wghub.conf << EOF\n# Hub configuration created on $(hostname) on $(date)\n[Interface]\nAddress = $INT_NET_HUB_IP$INT_NET_MASK$($NET6 && echo \", $INT_NET6_HUB_IP$INT_NET6_MASK\")\nListenPort = $EXT_NET_PORT\nPrivateKey = $(cat wghub.key)\nSaveConfig = false\nMTU = $INT_NET_MTU\nEOF\n\n    if test \"$FW_TYPE\" = \"iptables\"; then\n        create_iptables_rules >> wghub.conf\n    elif test \"$FW_TYPE\" = \"nft\"; then\n        create_nft_rules >> wghub.conf\n    elif test \"$FW_TYPE\" = \"firewalld\"; then\n        create_firewalld_rules >> wghub.conf\n    elif test \"$FW_TYPE\" = \"ufw\"; then\n        create_ufw_rules >> wghub.conf\n    elif test \"$FW_TYPE\" = \"pf\"; then\n        create_pf_rules >> wghub.conf\n    elif test \"$FW_TYPE\" = \"custom\"; then\n        echo '# Custom PostUp / PostDown commands from commands.txt' >> wghub.conf\n        cat commands.txt >> wghub.conf\n    elif test \"$FW_TYPE\" = \"none\"; then\n        echo '# Firewall PostUp / PostDown commands disabled with \"none\" set in fwtype.txt' >> wghub.conf\n    fi\n\n    if test \"$SYSCTL_TYPE\" = \"linux\"; then\n        create_sysctl_linux_rules >> wghub.conf\n    elif test \"$SYSCTL_TYPE\" = \"freebsd\"; then\n        create_sysctl_freebsd_rules >> wghub.conf\n    elif test \"$SYSCTL_TYPE\" = \"none\"; then\n        echo '# Sysctl PostUp / PostDown commands disabled with \"none\" set in sysctltype.txt' >> wghub.conf\n    fi\n\n    echo \"WireGuard hub address is $EXT_NET_IP:$EXT_NET_PORT on $EXT_NET_IF.\"\n    echo \"Note: customize [Interface] section of wghub.conf if required!\"\n}\n\nip2int() {\n    { IFS=. read -r a b c d; } << EOF\n$1\nEOF\n    echo $(((((((a << 8) | b) << 8) | c) << 8) | d))\n}\n\nint2ip() {\n    ui32=$1\n    ip=\"\"\n    # shellcheck disable=SC2034\n    for n in 1 2 3 4; do\n        ip=$((ui32 & 0xff))${ip:+.}$ip\n        ui32=$((ui32 >> 8))\n    done\n    echo \"$ip\"\n}\n\ncreate_new_client_ip() {\n    { IFS=/ read -r ip netmask; } << EOF\n$1\nEOF\n    seqno=$2\n    bitmask=$((0xffffffff << (32 - netmask)))\n    addr=$(($(ip2int \"$ip\") + (seqno & ~bitmask)))\n    echo \"$(int2ip \"$addr\")/$netmask\"\n}\n\ncreate_new_client_conf_wg_quick() {\n    SEQNO=\"$1\"\n    CONF_NAME=\"$2\"\n\n    echo \"No wgclient_$CONF_NAME.conf... creating one!\"\n    cat > \"wgclient_$CONF_NAME.conf\" << EOF\n# $SEQNO: $CONF_NAME > wgclient_$CONF_NAME.conf\n[Interface]\nAddress = $(create_new_client_ip \"${INT_NET_ADDRESS}0$INT_NET_MASK\" \"$SEQNO\")$($NET6 && echo \", $INT_NET6_ADDRESS$SEQNO$INT_NET6_MASK\")\nDNS = $INT_NET_DNS$($NET6 && echo \", $INT_NET6_DNS\")\nPrivateKey = $(wg genkey | tee \"wgclient_$CONF_NAME.key\")\nMTU = $INT_NET_MTU\n\n[Peer]\nPublicKey = $(wg pubkey < wghub.key)\nPresharedKey = $(wg genpsk | tee \"wgclient_$CONF_NAME.psk\")\nAllowedIPs = $INT_NET_CLIENT_ALLOWEDIPS\nEndpoint = $EXT_NET_IP:$EXT_NET_PORT\nPersistentKeepalive = 25\nEOF\n}\n\nallowedips_to_uci_list() {\n    ALLOWEDIPS=\"$1\"\n\n    for IPRANGE in $(echo \"$ALLOWEDIPS\" | tr \",\" \" \"); do\n        echo \"\tlist allowed_ips '$IPRANGE'\"\n    done\n}\n\ncreate_new_client_conf_uci() {\n    SEQNO=\"$1\"\n    CONF_NAME=\"$2\"\n\n    echo \"No wgclient_$CONF_NAME.uci.txt... creating one!\"\n    cat > \"wgclient_$CONF_NAME.uci.txt\" << EOF\n# $SEQNO: $CONF_NAME > wgclient_$CONF_NAME.uci.txt\nconfig interface 'wg0'\n\toption proto 'wireguard'\n\tlist addresses '$(create_new_client_ip \"${INT_NET_ADDRESS}0$INT_NET_MASK\" \"$SEQNO\")'\n$($NET6 && echo \"\tlist addresses '$INT_NET6_ADDRESS$SEQNO$INT_NET6_MASK'\")\n\tlist dns '$INT_NET_DNS'\n$($NET6 && echo \"\tlist dns '$INT_NET6_DNS'\")\n\toption private_key '$(cat \"wgclient_$CONF_NAME.key\")'\n\toption mtu '$INT_NET_MTU'\n\nconfig wireguard_wg0\n$(allowedips_to_uci_list \"$INT_NET_CLIENT_ALLOWEDIPS\")\n\toption route_allowed_ips '1'\n\toption endpoint_host '$EXT_NET_IP'\n\toption endpoint_port '$EXT_NET_PORT'\n\toption persistent_keepalive '25'\n\toption public_key '$(wg pubkey < wghub.key)'\n\toption preshared_key '$(cat \"wgclient_$CONF_NAME.psk\")'\nEOF\n}\n\ncreate_new_client_conf() {\n    create_new_client_conf_wg_quick \"$SEQNO\" \"$CONF_NAME\"\n    create_new_client_conf_uci \"$SEQNO\" \"$CONF_NAME\"\n}\n\nadd_client_to_hub_conf() {\n    SEQNO=\"$1\"\n    CONF_NAME=\"$2\"\n\n    printf \"Updating wghub.conf...\"\n    cat >> wghub.conf << EOF\n\n# $SEQNO: $CONF_NAME > wgclient_$CONF_NAME.conf\n[Peer]\nPublicKey = $(wg pubkey < \"wgclient_$CONF_NAME.key\")\nPresharedKey = $(cat \"wgclient_$CONF_NAME.psk\")\nAllowedIPs = $INT_NET_ADDRESS$SEQNO$INT_NET_ADDRESS_MASK$($NET6 && echo \", $INT_NET6_ADDRESS$1$INT_NET6_ADDRESS_MASK\")\nEOF\n    if $NET6 && test \"$NET6MODE\" = \"proxy_ndp\"; then\n        NEIGHADD=\"PostUp = ip -6 neigh add proxy $INT_NET6_ADDRESS$1 dev $EXT_NET_IF\"\n        NEIGHDEL=\"PostDown = ip -6 neigh del proxy $INT_NET6_ADDRESS$1 dev $EXT_NET_IF\"\n        sed -i.bak \"s/.*net.ipv6.conf.all.proxy_ndp=0.*/&\\n$NEIGHADD\\n$NEIGHDEL/\" wghub.conf\n    fi\n\n    echo \" done!\"\n    cat << EOF\n\nImportant: Deploy updated wghub.conf configuration to WireGuard with wg-quick:\n  sudo wg-quick down ./wghub.conf # if already configured\n  sudo wg-quick up ./wghub.conf\n  sudo wg show # to check status\nEOF\n}\n\nprint_client_conf() {\n    echo \"-----BEGIN CONFIG-----\"\n    cat \"wgclient_$1.conf\"\n    echo \"-----END CONFIG-----\"\n}\n\nprint_client_qrcode() {\n    qrencode -t ansiutf8 < \"wgclient_$1.conf\" | tee \"wgclient_$1.qrcode.txt\"\n    echo \"Scan QR code with your phone or use \\\"wgclient_$1.conf\\\" file.\"\n}\n\nremove_temporary_client_key_file() {\n    rm -f \"wgclient_$1.key\"\n}\n\ncheck_conf_name_is_available() {\n    FILENAME=\"wgclient_$1.conf\"\n    if test -e \"$FILENAME\"; then\n        printf '\\nUnable to store configuration with chosen name: \"%s\" already exists.\\n' \"$FILENAME\"\n        return 1\n    fi\n    return 0\n}\n\nprint_conf_name_help() {\n    cat << EOF\n\nNote: passing argument to script creates client configuration with supplied\n      name to help remembering which config was for which device. If you\n      didn't pass any argument you can still rename created file manually\n      with command:\n  mv -vi wgclient_$1.conf wgclient_name.conf\n\nEOF\n}\n\ncreate_new_client() {\n    SEQNO=\"$1\"\n    CONF_NAME=\"$2\"\n\n    create_new_client_conf \"$SEQNO\" \"$CONF_NAME\"\n    if qrencode -V > /dev/null 2>&1; then\n        print_client_qrcode \"$CONF_NAME\"\n    else\n        print_client_conf \"$CONF_NAME\"\n    fi\n    add_client_to_hub_conf \"$SEQNO\" \"$CONF_NAME\"\n    remove_temporary_client_key_file \"$CONF_NAME\"\n}\n\nwrite_initial_configuration() {\n    test -f extnetif.txt || create_ext_net_if\n    EXT_NET_IF=\"$(get_ext_net_if)\"\n    test -f extnetip.txt || create_ext_net_ip \"$EXT_NET_IF\"\n    EXT_NET_IP=\"$(get_ext_net_ip)\"\n\n    test -f intnetmtu.txt || create_int_net_mtu\n    INT_NET_MTU=\"$(get_int_net_mtu)\"\n    if test \"$INT_NET_MTU\" -lt 1280 || test \"$INT_NET_MTU\" -gt 1420; then\n        echo 'MTU should be set between 1280 and 1420 bytes.'\n        echo 'Set it manually in intnetmtu.txt file and start script again.'\n        exit 1\n    fi\n    test -f intnetmask.txt || create_int_net_mask\n    INT_NET_MASK=\"$(get_int_net_mask)\"\n    test -f intnetdns.txt || create_int_net_dns\n    INT_NET_DNS=\"$(get_int_net_dns)\"\n    test -f intnetaddress.txt || create_int_net_address\n    INT_NET_ADDRESS=\"$(get_int_net_address)\"\n    INT_NET_ADDRESS_MASK=\"/32\"\n    INT_NET_HUB_IP=\"${INT_NET_ADDRESS}1\"\n    test -f intnetallowedips.txt || create_client_allowedips\n    INT_NET_CLIENT_ALLOWEDIPS=\"$(get_client_allowedips)\"\n\n    test -f fwtype.txt || create_fw_type\n    FW_TYPE=\"$(get_fw_type)\"\n    test -f sysctltype.txt || create_sysctl_type\n    SYSCTL_TYPE=\"$(get_sysctl_type)\"\n\n    NET6=false\n    check_if_ipv6_is_available \"$EXT_NET_IF\" && {\n        NET6=true\n        test -f ipv6mode.txt || create_ipv6_mode\n        NET6MODE=\"$(get_ipv6_mode)\"\n        test -f intnet6mask.txt || create_int_net6_mask\n        INT_NET6_MASK=\"$(get_int_net6_mask)\"\n        test -f intnet6dns.txt || create_int_net6_dns\n        INT_NET6_DNS=\"$(get_int_net6_dns)\"\n        test -f intnet6address.txt || create_int_net6_address\n        INT_NET6_ADDRESS=\"$(get_int_net6_address)\"\n        INT_NET6_ADDRESS_MASK=\"/128\"\n        INT_NET6_HUB_IP=\"${INT_NET6_ADDRESS}1\"\n    }\n\n    check_if_wg_is_installed\n    test -f seqno.txt || create_seq_no\n    SEQNO=\"$(get_seq_no)\"\n    test -f portno.txt || create_port_no\n    EXT_NET_PORT=\"$(get_port_no)\"\n    test -f wghub.key || create_hub_key\n}\n\ndownload_and_install_wg_quick() {\n    WGQUICKURL=\"https://raw.githubusercontent.com/WireGuard/wireguard-tools/master/src/wg-quick\"\n    if test \"$(uname -s)\" = \"FreeBSD\"; then\n        WGQUICKURL=\"${WGQUICKURL}/freebsd.bash\"\n    elif test \"$(uname -s)\" = \"OpenBSD\"; then\n        WGQUICKURL=\"${WGQUICKURL}/openbsd.bash\"\n    elif test \"$(uname -s)\" = \"Darwin\"; then\n        WGQUICKURL=\"${WGQUICKURL}/darwin.bash\"\n    elif test \"$(uname -s)\" = \"Linux\"; then\n        WGQUICKURL=\"${WGQUICKURL}/linux.bash\"\n    else\n        echo 'Unsupported operating system.'\n        echo \"Unable to download wg-quick script for $(uname -s).\"\n        exit 1\n    fi\n\n    DLFILE=$(mktemp -qt 'wg-quick.XXXXXXXXXX') || {\n        echo \"Failed to create temporary file.\"\n        exit 1\n    }\n    cleanup() {\n        # until https://github.com/koalaman/shellcheck/issues/2660 resolved\n        # shellcheck disable=SC2317\n        rm -f \"${DLFILE}\"\n    }\n    trap cleanup EXIT\n\n    curl -sL \"${WGQUICKURL}\" -o \"${DLFILE}\" > /dev/null 2>&1 ||\n        wget -qO \"${DLFILE}\" \"${WGQUICKURL}\" > /dev/null 2>&1 ||\n        fetch -qR -o \"${DLFILE}\" \"${WGQUICKURL}\" > /dev/null 2>&1 || {\n        echo \"Download of ${WGQUICKURL} failed.\"\n        exit 1\n    }\n\n    if test \"$(id -u)\" -eq 0; then\n        DESTDIR=\"/usr/local/sbin\"\n    else\n        DESTDIR=\"${HOME}/.local/bin\"\n        mkdir -p \"$DESTDIR\"\n    fi\n\n    echo \"Installing wg-quick to ${DESTDIR}.\"\n    chmod +x \"${DLFILE}\"\n    mv \"${DLFILE}\" \"${DESTDIR}/wg-quick\" || {\n        echo \"Failed to install ${DLFILE} as ${DESTDIR}/wg-quick.\"\n        exit 1\n    }\n}\n\nupgrade_easy_wg_quick() {\n    REPO='burghardt/easy-wg-quick'\n    APIURL=\"https://api.github.com/repos/${REPO}/releases/latest\"\n\n    APIDATA=\"$(curl -sL \"${APIURL}\" ||\n        wget -qO- \"${APIURL}\" ||\n        fetch -qo- \"${APIURL}\")\"\n    TAG=\"$(echo \"${APIDATA}\" | grep -oP '\"tag_name\": \"\\K(.*?)(?=\")')\"\n    DLURL=\"https://raw.githubusercontent.com/${REPO}/${TAG}/easy-wg-quick\"\n\n    DLFILE=$(mktemp -qt 'wg-quick.XXXXXXXXXX') || {\n        echo \"Failed to create temporary file.\"\n        exit 1\n    }\n    cleanup() {\n        # until https://github.com/koalaman/shellcheck/issues/2660 resolved\n        # shellcheck disable=SC2317\n        rm -f \"${DLFILE}\"\n    }\n    trap cleanup EXIT\n\n    curl -sL \"${DLURL}\" -o \"${DLFILE}\" > /dev/null 2>&1 ||\n        wget -qO \"${DLFILE}\" \"${DLURL}\" > /dev/null 2>&1 ||\n        fetch -q -o \"${DLFILE}\" \"${DLURL}\" > /dev/null 2>&1 || {\n        echo \"Download of ${DLURL} failed.\"\n        exit 1\n    }\n\n    echo \"Installing easy-wg-quick ${TAG} to $0.\"\n    chmod +x \"${DLFILE}\"\n    mv \"${DLFILE}\" \"$0\" || {\n        echo \"Failed to install ${DLFILE} as $0.\"\n        exit 1\n    }\n    true\n}\n\nprint_usage() {\n    echo \"Usage: $0 [client_name] - create new client with optional [client_name]\"\n    echo \"       $0 -i / --init   - create initial configuration without any clients\"\n    echo \"       $0 -c / --clear  - clear the configuration and start over\"\n    echo \"       $0 -d / --install-wg-quick - download and install wg-quick script\"\n    echo \"       $0 -u / --upgrade - update $0 from latest GitHub release\"\n    exit 1\n}\n\nmain() {\n    umask 077\n\n    if test \"$#\" -ge 2; then\n        print_usage\n    fi\n\n    case \"$1\" in\n        \"-h\" | \"--help\")\n            print_usage\n            ;;\n        \"-i\" | \"--init\")\n            write_initial_configuration\n            echo \"Check the contents of the *.txt files and adjust them to your needs.\"\n            echo \"Run the script again without --init to continue, or remove these files to start over.\"\n            exit 0\n            ;;\n        \"-c\" | \"--clear\")\n            echo \"To start over, manually remove all *.bak *.conf *.key *.psk *.txt files.\"\n            echo \"This script removes nothing.\"\n            exit 1\n            ;;\n        \"-d\" | \"--install-wg-quick\")\n            download_and_install_wg_quick\n            exit 0\n            ;;\n        \"-u\" | \"--upgrade\")\n            upgrade_easy_wg_quick\n            exit 0\n            ;;\n        *)\n            CONF_NAME=\"$1\"\n            ;;\n    esac\n\n    write_initial_configuration\n    if test ! -f wghub.conf; then\n        # shellcheck disable=SC2154\n        if test -z \"$BATS_VERSION\"; then\n            echo \"The default configuration is written to text files (*.txt).\"\n            echo \"If you want to check or change anything, press Ctrl+C for 10 seconds.\"\n            sleep 10\n        fi\n        create_hub_conf\n    fi\n\n    if test -z \"$CONF_NAME\"; then\n        CONF_NAME=\"$SEQNO\"\n        print_conf_name_help \"$SEQNO\"\n    fi\n\n    if check_conf_name_is_available \"$CONF_NAME\"; then\n        create_new_client \"$SEQNO\" \"$CONF_NAME\"\n    fi\n}\n\nmain \"$@\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}