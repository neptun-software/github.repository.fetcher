{
  "metadata": {
    "timestamp": 1736568367175,
    "page": 299,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JetBrains/projector-docker",
      "stars": 2241,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "!.idea/\n.idea/*\n!.idea/copyright\n/idea*\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.4404296875,
          "content": "#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM debian AS ideDownloader\n\n# prepare tools:\nRUN apt-get update\nRUN apt-get install wget -y\n# download IDE to the /ide dir:\nWORKDIR /download\nARG downloadUrl\nRUN wget -q $downloadUrl -O - | tar -xz\nRUN find . -maxdepth 1 -type d -name * -execdir mv {} /ide \\;\n\nFROM amazoncorretto:11 as projectorGradleBuilder\n\nENV PROJECTOR_DIR /projector\n\n# projector-server:\nADD projector-server $PROJECTOR_DIR/projector-server\nWORKDIR $PROJECTOR_DIR/projector-server\nARG buildGradle\nRUN if [ \"$buildGradle\" = \"true\" ]; then ./gradlew clean; else echo \"Skipping gradle build\"; fi\nRUN if [ \"$buildGradle\" = \"true\" ]; then ./gradlew :projector-server:distZip; else echo \"Skipping gradle build\"; fi\nRUN cd projector-server/build/distributions && find . -maxdepth 1 -type f -name projector-server-*.zip -exec mv {} projector-server.zip \\;\n\nFROM debian AS projectorStaticFiles\n\n# prepare tools:\nRUN apt-get update\nRUN apt-get install unzip -y\n# create the Projector dir:\nENV PROJECTOR_DIR /projector\nRUN mkdir -p $PROJECTOR_DIR\n# copy IDE:\nCOPY --from=ideDownloader /ide $PROJECTOR_DIR/ide\n# copy projector files to the container:\nADD projector-docker/static $PROJECTOR_DIR\n# copy projector:\nCOPY --from=projectorGradleBuilder $PROJECTOR_DIR/projector-server/projector-server/build/distributions/projector-server.zip $PROJECTOR_DIR\n# prepare IDE - apply projector-server:\nRUN unzip $PROJECTOR_DIR/projector-server.zip\nRUN rm $PROJECTOR_DIR/projector-server.zip\nRUN find . -maxdepth 1 -type d -name projector-server-* -exec mv {} projector-server \\;\nRUN mv projector-server $PROJECTOR_DIR/ide/projector-server\nRUN mv $PROJECTOR_DIR/ide-projector-launcher.sh $PROJECTOR_DIR/ide/bin\nRUN chmod 644 $PROJECTOR_DIR/ide/projector-server/lib/*\n\nFROM debian:10\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n   && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n   && set -x \\\n# install packages:\n    && apt-get update \\\n# packages for awt:\n    && apt-get install libxext6 libxrender1 libxtst6 libxi6 libfreetype6 -y \\\n# packages for user convenience:\n    && apt-get install git bash-completion sudo -y \\\n# packages for IDEA (to disable warnings):\n    && apt-get install procps -y \\\n# clean apt to reduce image size:\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt\n\nARG downloadUrl\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n    && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n    && set -x \\\n# install specific packages for IDEs:\n    && apt-get update \\\n    && if [ \"${downloadUrl#*CLion}\" != \"$downloadUrl\" ]; then apt-get install build-essential clang -y; else echo \"Not CLion\"; fi \\\n    && if [ \"${downloadUrl#*pycharm}\" != \"$downloadUrl\" ]; then apt-get install python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo \"Not pycharm\"; fi \\\n    && if [ \"${downloadUrl#*rider}\" != \"$downloadUrl\" ]; then apt install apt-transport-https dirmngr gnupg ca-certificates -y && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && echo \"deb https://download.mono-project.com/repo/debian stable-buster main\" | tee /etc/apt/sources.list.d/mono-official-stable.list && apt update && apt install mono-devel -y && apt install wget -y && wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y apt-transport-https && apt-get update && apt-get install -y dotnet-sdk-3.1 aspnetcore-runtime-3.1; else echo \"Not rider\"; fi \\\n# clean apt to reduce image size:\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt\n\n# copy the Projector dir:\nENV PROJECTOR_DIR /projector\nCOPY --from=projectorStaticFiles $PROJECTOR_DIR $PROJECTOR_DIR\n\nENV PROJECTOR_USER_NAME projector-user\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n    && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n    && set -x \\\n# move run scipt:\n    && mv $PROJECTOR_DIR/run.sh run.sh \\\n# change user to non-root (http://pjdietz.com/2016/08/28/nginx-in-docker-without-root.html):\n    && mv $PROJECTOR_DIR/$PROJECTOR_USER_NAME /home \\\n    && useradd -d /home/$PROJECTOR_USER_NAME -s /bin/bash -G sudo $PROJECTOR_USER_NAME \\\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME /home/$PROJECTOR_USER_NAME \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME $PROJECTOR_DIR/ide/bin \\\n    && chown $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME run.sh\n\nUSER $PROJECTOR_USER_NAME\nENV HOME /home/$PROJECTOR_USER_NAME\n\nEXPOSE 8887\n\nCMD [\"bash\", \"-c\", \"/run.sh\"]\n"
        },
        {
          "name": "Dockerfile.dockerignore",
          "type": "blob",
          "size": 0.11328125,
          "content": "# Ignore everything but specific dirs\n\n**\n\n!/projector-client/**\n!/projector-server/**\n!/projector-docker/static/**\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.0380859375,
          "content": "# projector-docker\n\n[![obsolete JetBrains project](https://jb.gg/badges/obsolete.svg)](https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub)\n\nSome scripts to create and run a Docker container with Projector and JetBrains IDE.\n\n## The state of the Projector\n\nThe development of JetBrains Projector as its own standalone product has been suspended. That said, Projector remains an important part of [JetBrains Gateway](https://www.jetbrains.com/remote-development/gateway/), which is the primary remote development tool for JetBrains IDEs. We will focus our efforts on improving and developing Projector in this limited scenario.\n\nOur goal is to provide a rich, full-featured remote development experience with a look and feel that is equal to or better than what you get when working with IDEs locally. The only way to get everything you’re used to having when working locally (low latency, low network traffic, user-defined and OS-specific shortcuts, themes, settings migrations, ssh-agent/port forwarding, and other things) is by installing a dedicated client-side application. The standalone version of Projector is not capable of meeting these goals.\n\nAs a result, we no longer recommend using the standalone version of JetBrains Projector or merely making tweaks to incorporate it into your existing IDE servers. We won’t provide user support or quick-fixes for issues that arise when these setups are used. If you have the option to switch from Projector to Gateway, we strongly recommend you do so.\n\n[Learn more about JetBrains Gateway](https://www.jetbrains.com/remote-development/gateway/)\n\n[Documentation](https://jetbrains.github.io/projector-client/mkdocs/latest/)\n| [Issue tracker](https://youtrack.jetbrains.com/issues/PRJ)\n\n## Run JetBrains IDE in Docker\n\nHow to run JetBrains IDE in Docker and access it via a web browser?\n\n### Step 1\nFirstly, pull an image with needed IDE. You can do it in two ways: \n\n#### The first one is to pull it from [DockerHub](https://hub.docker.com/orgs/jetbrains/repositories):\n\n```shell\ndocker pull jetbrains/projector-clion\ndocker pull jetbrains/projector-datagrip\ndocker pull jetbrains/projector-goland\ndocker pull jetbrains/projector-idea-c\ndocker pull jetbrains/projector-idea-u\ndocker pull jetbrains/projector-phpstorm\ndocker pull jetbrains/projector-pycharm-c\ndocker pull jetbrains/projector-pycharm-p\ndocker pull jetbrains/projector-rider\ndocker pull jetbrains/projector-rubymine\ndocker pull jetbrains/projector-webstorm\n```\nTags are distributed on DockerHub as follows:\n- `:latest` – this image contains the **latest up-to-date** version of the tested IDE with the latest **stable** version of the Projector;\n- `:develop` – this image contains the **latest up-to-date** version of the tested IDE with the **latest commit** of the Projector repository;\n- `:<IDE_VERSION>-develop` – this image contains the **selected** version of the IDE with the **latest commit** of the Projector repository;\n- `:<IDE_VERSION>-projector-<PROJECTOR_VERSION>` – this image contains the **selected** version of the IDE with the **selected stable** version of Projector.\n\n#### The second way is to pull it from Space:\n_On Space, only the latest tested IDE and the `develop` version of Projector are published._\n\n```shell\ndocker pull registry.jetbrains.team/p/prj/containers/projector-clion\ndocker pull registry.jetbrains.team/p/prj/containers/projector-datagrip\ndocker pull registry.jetbrains.team/p/prj/containers/projector-goland\ndocker pull registry.jetbrains.team/p/prj/containers/projector-idea-c\ndocker pull registry.jetbrains.team/p/prj/containers/projector-idea-u\ndocker pull registry.jetbrains.team/p/prj/containers/projector-phpstorm\ndocker pull registry.jetbrains.team/p/prj/containers/projector-pycharm-c\ndocker pull registry.jetbrains.team/p/prj/containers/projector-pycharm-p\ndocker pull registry.jetbrains.team/p/prj/containers/projector-rider\ndocker pull registry.jetbrains.team/p/prj/containers/projector-rubymine\ndocker pull registry.jetbrains.team/p/prj/containers/projector-webstorm\n```\n\n### Step 2\n\nAfter that, you can run it via the following command (just replace `IMAGE_NAME` with the needed name, for\nexample, `jetbrains/projector-clion`):\n\n```shell\ndocker run --rm -p 8887:8887 -it IMAGE_NAME\n```\n\nThis will run **Projector Server with the selected JetBrains IDE** locally.\n\nTo access Projector Server with IDE, use <http://localhost:8887/>.\n\nIf you want to **save the state of the container between launches**, go further: take a look\nat [`run-container-mounted.sh`](#run-container-mountedsh-containername) script.\n\n## Run IntelliJ IDEA in Docker (building image yourself)\n\nIf you don't want to pull an image, you can build it yourself. Scripts in this repo will help you to do it.\n\nFirstly, please check your **Docker version**: since we\nuse [Docker BuildKit](https://docs.docker.com/develop/develop-images/build_enhancements/) in our scripts, a current\nversion of Docker (18.09 or higher) is required.\n\nClone this `projector-docker` repo and make the following actions:\n\n```shell script\n./clone-projector-core.sh\n./build-container.sh\n./run-container.sh\n```\n\nThis will run **Projector Server with IntelliJ IDEA Community** locally.\n\nTo access Projector Server with IDE, use <http://localhost:8887/>.\n\nThere will be a sample Kotlin + Java project opened, just close some dialogs. If you want to try **your project**, you can clone it via Git.\n\nIf you **don't want to clone the project every time** you start the container, go further: use [`run-container-mounted.sh`](#run-container-mountedsh-containername).\n\n## Accessing IDE run on another machine\n\nIf you want to access IDE run on another host, you need to change page parameters. Here are the default parameters, so you probably need to change `localhost` in both places to needed IP: <http://localhost:8887/?host=localhost&port=8887>.\n\n## Script list\n### `clone-projector-core.sh`\nClones projector projects from Git to proper locations:\n- `../projector-server`.\n\n**Note**: if you already have these projects locally existing, you can place them to proper locations and avoid this script.\n\n### `build-container.sh [containerName [ideDownloadUrl]]`\nCompiles Projector inside Docker and builds a Docker container locally.\n\n### `build-container-dev.sh [containerName [ideDownloadUrl]]`\nCompiles Projector outside Docker and builds a Docker container locally. The script assumes the JAVA_HOME is set to a JDK 11.\n\n### `create-image.sh [containerName [tarGzFileName]]`\nCreates a Docker image from a built container and saves it as a `tar.gz` archive.\n\n### `load-image.sh [tarGzFileName]`\nLoads the Docker image locally.\n\n### `run-container.sh [containerName]`\nRuns the Docker container.\n\nStarts the Projector server and hosts web client files on port 8887.\n\n### `run-container-mounted.sh [containerName]`\nRuns the Docker container. Also, it mounts your `~/projector-docker` dir as the home dir in the container, so settings and projects can be saved between launches.\n\nFeel free to change `~/projector-docker` dir to your desired one. **Please note that the host dir should be created manually** to eliminate permissions problems.\n\n**For Mac and Windows hosts**: to speed up work with mounted dirs, you can try adding the `:cached` suffix. It will look like this: `-v ~/projector-docker:/home/projector-user:cached`.\n\nStarts the Projector server and hosts web client files on port 8887.\n\n## Tested IDEs\nWhen you build a container, there is an optional `ideDownloadUrl` parameter, so you can select different IDEs to use. Most JetBrains IDEs of versions 2019.1-2020.2 will work. Tested with:\n- https://download.jetbrains.com/idea/ideaIC-2019.3.4.tar.gz\n- https://download.jetbrains.com/idea/ideaIC-2020.1.1.tar.gz\n- https://download.jetbrains.com/idea/ideaIC-202.5103.13.tar.gz\n- https://download.jetbrains.com/idea/ideaIU-2019.3.4.tar.gz\n- https://download.jetbrains.com/cpp/CLion-2019.3.5.tar.gz\n- https://download.jetbrains.com/go/goland-2019.3.4.tar.gz\n- https://download.jetbrains.com/datagrip/datagrip-2019.3.4.tar.gz\n- https://download.jetbrains.com/webide/PhpStorm-2019.3.4.tar.gz\n- https://download.jetbrains.com/python/pycharm-community-2019.3.4.tar.gz\n- https://download.jetbrains.com/python/pycharm-professional-2019.3.4.tar.gz\n- https://download.jetbrains.com/webstorm/WebStorm-2020.2.2.tar.gz\n- https://download.jetbrains.com/rider/JetBrains.Rider-2020.2.4.tar.gz\n\nYou can find the up-to-date list of tested IDEs\nhere: [compatible_ide.json](https://github.com/JetBrains/projector-installer/blob/master/projector_installer/compatible_ide.json)\n.\n\nIf you want to try other distribution, click \"Other versions\" on\nan [IDE download page](https://www.jetbrains.com/idea/download/) and copy a link to a `tar.gz` file. Please ensure that\nyou select `tar.gz` **with JBR**, not without.\n\n## FAQ\n\n**Q**: The set of available packages in the container doesn't suit me, what to do?  \n**A**: You can add the required packages to the [Dockerfile](Dockerfile) (for example, where `packages for user convenience` are installed) and build your own image. If you believe the packages are handy for most users and don't take much space, feel free to create a PR to this repo adding a package. Please note that we consider these buildscripts as samples, there is no goal to cover all the possible needs in them, but there is a goal to show how to create an image with Projector inside.\n\n**Q**: Can I somehow **secure** my **connection**?  \n**A**: Yes, it's described in [documentation](https://jetbrains.github.io/projector-client/mkdocs/latest/ij_user_guide/server_customization/#making-the-connection-secure). You can place the file to a mounted dir.\n\n**Q**: Can I assign a **connection password**?  \n**A**: Yes, it's described in [documentation](https://jetbrains.github.io/projector-client/mkdocs/latest/ij_user_guide/server_customization/#assigning-connection-password).\n\n**Q**: I’ve mounted the home dir in **Docker** container and it seems that I **can’t edit files**, there are exceptions about permissions and missing files. What to do?  \n**A**: It can happen when the owner of the directory on the host is root. So you should recreate the directory on the host yourself with normal user permissions.\n\n## License\n[Apache 2.0](LICENSE.txt).\n"
        },
        {
          "name": "build-container-dev.sh",
          "type": "blob",
          "size": 1.1328125,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\n\ncd ../projector-server\n./gradlew :projector-server:distZip\ncd -\n\ncontainerName=${1:-projector-idea-c}\ndownloadUrl=${2:-https://download.jetbrains.com/idea/ideaIC-2019.3.5.tar.gz}\n\n# build container:\nDOCKER_BUILDKIT=1 docker build --progress=plain -t \"$containerName\" --build-arg buildGradle=false --build-arg \"downloadUrl=$downloadUrl\" -f Dockerfile ..\n"
        },
        {
          "name": "build-container.sh",
          "type": "blob",
          "size": 1.0673828125,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ncontainerName=${1:-projector-idea-c}\ndownloadUrl=${2:-https://download.jetbrains.com/idea/ideaIC-2019.3.5.tar.gz}\n\n# build container:\nDOCKER_BUILDKIT=1 docker build --progress=plain -t \"$containerName\" --build-arg buildGradle=true --build-arg \"downloadUrl=$downloadUrl\" -f Dockerfile ..\n"
        },
        {
          "name": "clone-projector-core.sh",
          "type": "blob",
          "size": 0.865234375,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ngit clone https://github.com/JetBrains/projector-server.git ../projector-server\n"
        },
        {
          "name": "create-image.sh",
          "type": "blob",
          "size": 0.9189453125,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ncontainerName=${1:-projector-idea-c}\ntarGzFileName=${2:-$containerName.tar.gz}\n\ndocker save \"$containerName\" | gzip > \"$tarGzFileName\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "load-image.sh",
          "type": "blob",
          "size": 0.8623046875,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ntarGzFileName=${1:-projector-idea-c.tar.gz}\n\ndocker load -i \"$tarGzFileName\"\n"
        },
        {
          "name": "run-container-mounted.sh",
          "type": "blob",
          "size": 0.9150390625,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ncontainerName=${1:-projector-idea-c}\n\ndocker run --rm -p 8887:8887 -v ~/projector-docker:/home/projector-user -it \"$containerName\"\n"
        },
        {
          "name": "run-container.sh",
          "type": "blob",
          "size": 0.873046875,
          "content": "#!/bin/sh\n\n#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e # Any command which returns non-zero exit code will cause this shell script to exit immediately\nset -x # Activate debugging to show execution details: all commands will be printed before execution\n\ncontainerName=${1:-projector-idea-c}\n\ndocker run --rm -p 8887:8887 -it \"$containerName\"\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}