{
  "metadata": {
    "timestamp": 1736568427595,
    "page": 384,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kylef/swiftenv",
      "stars": 1982,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09765625,
          "content": "/shims/\n/versions/\n/version\n/bats/\n\n/docs/_build/\n/docs/_build_html/\n\nshare/swiftenv-install/*.json\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.09375,
          "content": "# Changelog\n\n## 1.5.0\n\n### Enhancements\n\n- Fetching a list of versions that can be installed (`swiftenv install --list`)\n  will now fetch an updated list of versions.\n\n### Bug Fixes\n\n- Prevent `swiftenv install` picking up on unrelated `$URL` environment\n  variables.  \n  [#170](https://github.com/kylef/swiftenv/issues/170)\n\n\n## 1.4.0\n\n### Enhancements\n\n- You can now instruct `swiftenv install` to both locally and globally set the\n  installed swift version. `--set-local` and `--set-global` respectively will\n  set the current Swift version.\n\n  The default behaviour will set the global version by default when `swiftenv\n  install` was provided an explicit version. When installing with the\n  `SWIFT_VERSION` environment value or the `.swift-version` file present, then\n  the default behaviour is to not set the global or local version.\n\n- When installing Swift from binary, swiftenv will now detect Ubuntu-based\n  Linux distributions such as Elementary OS and use the appropriate binary\n  image from swift.org.\n\n- On macOS, `swiftenv install` now accepts `--user` command which allows you to\n  install Swift into your home directory instead of requiring root.\n\n### Bug Fixes\n\n- On macOS, `swiftenv uninstall` would fail to uninstall some installed binary\n  toolchains due to `-RELEASE` being after the version in some paths that was\n  unexpected.\n\n- When using `swiftenv uninstall`, the command would fail if there was no\n  global set version of swift. The command can now handle missing global\n  version.\n\n\n## 1.3.0\n\n### Enhancements\n\n- New `--verify` option to swiftenv install to verify binary snapshots using\n  GPG. This option expects that GPG is setup and configured to accept the Swift\n  master keys. Verify can be forced with the environment variable\n  `SWIFTENV_VERIFY`.\n- Added local cache for Swift binaries for 3.0.2, 3.1, 3.1.1.\n- `swiftenv install` will now resume any failed downloads instead of restarting\n  the download process when restarting an install.\n- `swiftenv install --verbose` will now include verbose build output while\n  compiling swift.\n- Adds build instructions for Swift 3.0, 3.0.1, 3.0.2, 3.1, 3.1.1, 3.0-dev,\n  3.1-dev and 4.0-dev.\n- When building Swift from source, swiftenv will download tarballs instead of\n  git cloning the repository resulting in faster download speed.\n- Adds support for Fish 2.6.\n\n## 1.2.1\n\n### Enhancements\n\n- Adds usage and summaries when using `swiftenv --help` with a subcommand.\n- Adds a manpage for `swiftenv` and `swiftenv-install`.\n\n  ```shell\n  $ man swiftenv\n  $ man swiftenv-install\n  ```\n\n### Bug Fixes\n\n- Fixes detecting Swift release toolchains on macOS.\n- Fixes an issue where `swiftenv install` wouldn't emit an error if it\n  couldn't find instructions to install the given version.\n\n\n## 1.2.0\n\n### Enhancements\n\n- Only create shims for `swift*` and `lldb*` binaries found within Xcode\n  installs. Before we created shims for all executable tools found in Xcode\n  and created shims for tools like ctags, cc, clang, etc.\n- Adds support for installing binary GM releases.\n\n### Bug Fixes\n\n- Expose not found errors when using `swiftenv exec` against unknown commands.\n- Swift preview versions such as `3.0-preview-1` will be detected as binary\n  versions when using `swiftenv install`.\n\n\n## 1.1.0\n\n### Enhancements\n\n- Add a `--skip-existing`/`-s` flag to `swiftenv install` to skip installation\n  if version is already installed.\n- Adds support for Swift toolchains installed into\n  `~/Library/Developer/Toolchains/` on OS X.\n\n\n## 1.0.2\n\n### Bug Fixes\n\n- Adds support for installing preview snapshots such as\n  `3.0-preview-1-SNAPSHOT-2016-05-31-a`.\n- `swiftenv init` will now cause a rehash if the version of swiftenv has\n  changed.\n\n\n## 1.0.1\n\n### Enhancements\n\n- Added `swiftenv install --list-snapshots` which shows you a list of\n  snapshots for your platform.\n\n### Bug Fixes\n\n- Adds support for building Swift 2.2.1 from source, and installing 2.2.1\n  development snapshots.\n- `swiftenv uninstall` will now uninstall Swift toolchains on OS X.\n- `swiftenv uninstall` will now inform you if you're trying to uninstall\n  a version of Swift bundled with Xcode.\n\n\n## 1.0.0\n\n### Enhancements\n\n- Supports installing final Swift releases such as `2.2`.\n\n### Bug Fixes\n\n- Swift toolchains 'latest' version is no longer shown in `swiftenv versions`\n  on OS X.\n- Fixes a problem where `swiftenv install` on Linux will incorrectly\n  determine URL for the Swift binaries.\n- Adds a `--verbose` mode to `swiftenv versions` to show where the version was\n  installed.\n\n\n## 0.5.0\n\n### Enhancements\n\n- The `swift-` prefix for versions is now optional.\n- `swiftenv install` now has a `--list` option:\n\n    ```shell\n    $ swiftenv install --list\n    ```\n\n- `swiftenv install` is capable of building Swift `2.2-dev` from source.\n- `swiftenv install` now takes URLs to a Swift binary package.\n- `swiftenv install` was updated to use the new binary swift.org release URLs.\n\n### Bug Fixes\n\n- Fixes an issue where using shims would suppress error messages when the\n  configured version was not installed.\n- Allows the completion to work when using swiftenv installed from Homebrew.\n\n## 0.4.0\n\n### Enhancements\n\n- Adds support for command and argument completions.\n\n## 0.3.2\n\n### Bug Fixes\n\n- Performance improvement when running on OS X. In previous versions, during\n  initialisation swiftenv with rehash the environment, unfortunately once we\n  added support for Xcode's Swift there was a huge negative performance impact\n  due to Xcode tools taking large amount of time due to the underlying commands\n  being tremendously slow.\n\n## 0.3.1\n\n### Bug Fixes\n\n- Improved error reporting when trying to install a non-existent Swift version.\n- When a shim command isn't found in version, search PATH too. This fixes a\n  problem when using swiftenv on OS X with Xcode installed while your Swift\n  version is configured to a snapshot from swift.org.\n\n## 0.3.0\n\n### Enhancements\n\n- `swiftenv install` can now install Swift on OS X.\n\n## 0.2.1\n\n### Bug Fixes\n\n* Fixes an issue when installing via Homebrew and the `$SWIFTENV_ROOT`\n  directory didn't exist.\n\n## 0.2.0\n\n### Enhancements\n\n* Adds support for versions of Swift included in Xcode.\n* Added `swiftenv --help`.\n\n## 0.1.0\n\nInitial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2705078125,
          "content": "Copyright (c) 2015 - 2016, Kyle Fuller\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.2822265625,
          "content": ".PHONY: test\ntest: bats\n\t@PATH=\"$$PWD/bats/bin:$$PWD/bin:$$PATH\" bats test\n\n.PHONY: test-integration\ntest-integration: bats\n\t@PATH=\"$$PWD/bats/bin:$$PWD/bin:$$PWD/shims:$$PATH\" SWIFTENV_ROOT=\"$$PWD\" bats test/integration\n\nbats:\n\tgit clone --depth 1 https://github.com/sstephenson/bats.git\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.365234375,
          "content": "# Swift Version Manager\n\nswiftenv allows you to easily install, and switch between multiple versions of Swift.\n\nThis project was heavily inspired by [pyenv](https://github.com/yyuu/pyenv).\n\n![swiftenv screenshot](docs/_static/swiftenv.png)\n\nswiftenv allows you to:\n\n- Change the **global Swift version**, per user.\n- Set a **per-project Swift version**.\n- Allows you to **override the Swift version** with an environmental variable.\n\n## The User Guide\n\n- [Installation](https://swiftenv.fuller.li/en/latest/installation.html)\n- [Getting Started](https://swiftenv.fuller.li/en/latest/getting-started.html)\n- [Command Reference](https://swiftenv.fuller.li/en/latest/commands.html)\n    - [`version`](https://swiftenv.fuller.li/en/latest/commands.html#version)\n    - [`versions`](https://swiftenv.fuller.li/en/latest/commands.html#versions)\n    - [`global`](https://swiftenv.fuller.li/en/latest/commands.html#global)\n    - [`local`](https://swiftenv.fuller.li/en/latest/commands.html#local)\n    - [`install`](https://swiftenv.fuller.li/en/latest/commands.html#install)\n    - [`uninstall`](https://swiftenv.fuller.li/en/latest/commands.html#uninstall)\n    - [`which`](https://swiftenv.fuller.li/en/latest/commands.html#which)\n- Integrations\n    - [Heroku](https://swiftenv.fuller.li/en/latest/integrations/heroku.html)\n    - [Travis CI](https://swiftenv.fuller.li/en/latest/integrations/travis-ci.html)\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.255859375,
          "content": "environment:\n  PATH: '%APPVEYOR_BUILD_FOLDER%\\bin;%APPVEYOR_BUILD_FOLDER%\\bats\\bin;C:\\cygwin\\bin;%PATH%'\n\ninstall:\n  - git clone --depth 1 https://github.com/sstephenson/bats.git\n\nbuild: false\n\ntest_script:\n  - bash -lc 'bats /cygdrive/c/projects/swiftenv/test'\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "libexec",
          "type": "tree",
          "content": null
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}