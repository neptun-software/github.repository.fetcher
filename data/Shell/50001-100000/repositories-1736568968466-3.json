{
  "metadata": {
    "timestamp": 1736568968466,
    "page": 3,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjQ=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "base-org/node",
      "stars": 68535,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "geth-data/\nreth-data/\nnethermind-data/\n"
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.0517578125,
          "content": "CLIENT=${CLIENT:-geth}\nHOST_DATA_DIR=./${CLIENT}-data"
        },
        {
          "name": ".env.mainnet",
          "type": "blob",
          "size": 4.4912109375,
          "content": "RETH_CHAIN=base\nRETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\nOP_GETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\nOP_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\n\n# [optional] used to enable geth stats:\n# OP_GETH_ETH_STATS=nodename:secret@host:port\n# OP_NETHERMIND_ETHSTATS_ENABLED=true\n# OP_NETHERMIND_ETHSTATS_NODE_NAME=NethermindNode\n# OP_NETHERMIND_ETHSTATS_ENDPOINT=ethstats_endpoint\n\n# [required] replace with your preferred L1 (Ethereum, not Base) node RPC URL:\nOP_NODE_L1_ETH_RPC=https://1rpc.io/eth\n\n# [required] replace with your preferred L1 CL beacon endpoint:\nOP_NODE_L1_BEACON=https://your.mainnet.beacon.node/endpoint-here\n\n# auth secret used by op-geth engine API:\nOP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a\n\nOP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt\nOP_NODE_L2_ENGINE_RPC=ws://execution:8551\nOP_NODE_LOG_LEVEL=info\nOP_NODE_METRICS_ADDR=0.0.0.0\nOP_NODE_METRICS_ENABLED=true\nOP_NODE_METRICS_PORT=7300\nOP_NODE_NETWORK=base-mainnet\nOP_NODE_P2P_AGENT=base\nOP_NODE_P2P_BOOTNODES=enr:-J24QNz9lbrKbN4iSmmjtnr7SjUMk4zB7f1krHZcTZx-JRKZd0kA2gjufUROD6T3sOWDVDnFJRvqBBo62zuF-hYCohOGAYiOoEyEgmlkgnY0gmlwhAPniryHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQKNVFlCxh_B-716tTs-h1vMzZkSs1FTu_OYTNjgufplG4N0Y3CCJAaDdWRwgiQG,enr:-J24QH-f1wt99sfpHy4c0QJM-NfmsIfmlLAMMcgZCUEgKG_BBYFc6FwYgaMJMQN5dsRBJApIok0jFn-9CS842lGpLmqGAYiOoDRAgmlkgnY0gmlwhLhIgb2Hb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJ9FTIv8B9myn1MWaC_2lJ-sMoeCDkusCsk4BYHjjCq04N0Y3CCJAaDdWRwgiQG,enr:-J24QDXyyxvQYsd0yfsN0cRr1lZ1N11zGTplMNlW4xNEc7LkPXh0NAJ9iSOVdRO95GPYAIc6xmyoCCG6_0JxdL3a0zaGAYiOoAjFgmlkgnY0gmlwhAPckbGHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJwoS7tzwxqXSyFL7g0JM-KWVbgvjfB8JA__T7yY_cYboN0Y3CCJAaDdWRwgiQG,enr:-J24QHmGyBwUZXIcsGYMaUqGGSl4CFdx9Tozu-vQCn5bHIQbR7On7dZbU61vYvfrJr30t0iahSqhc64J46MnUO2JvQaGAYiOoCKKgmlkgnY0gmlwhAPnCzSHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQINc4fSijfbNIiGhcgvwjsjxVFJHUstK9L1T8OTKUjgloN0Y3CCJAaDdWRwgiQG,enr:-J24QG3ypT4xSu0gjb5PABCmVxZqBjVw9ca7pvsI8jl4KATYAnxBmfkaIuEqy9sKvDHKuNCsy57WwK9wTt2aQgcaDDyGAYiOoGAXgmlkgnY0gmlwhDbGmZaHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQIeAK_--tcLEiu7HvoUlbV52MspE0uCocsx1f_rYvRenIN0Y3CCJAaDdWRwgiQG\nOP_NODE_P2P_LISTEN_IP=0.0.0.0\nOP_NODE_P2P_LISTEN_TCP_PORT=9222\nOP_NODE_P2P_LISTEN_UDP_PORT=9222\nOP_NODE_RPC_ADDR=0.0.0.0\nOP_NODE_RPC_PORT=8545\nOP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log\nOP_NODE_VERIFIER_L1_CONFS=4\nOP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true\n\n# OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node\n# is fully trusted. It also allows op-node to work with clients such as Erigon that do not\n# support storage proofs:\n# OP_NODE_L1_TRUST_RPC=true\n\n# SNAP SYNC\n# NOTE: This feature is experimental and may lead to syncing issues, delays or difficulties as a result of inability to find peers. We recommend running a full or archive node for production purposes.\n# To enable snap sync, uncomment and set the env vars below:\n# OP_NODE_SYNCMODE=execution-layer\n# OP_GETH_BOOTNODES=enode://87a32fd13bd596b2ffca97020e31aef4ddcc1bbd4b95bb633d16c1329f654f34049ed240a36b449fda5e5225d70fe40bc667f53c304b71f8e68fc9d448690b51@3.231.138.188:30301,enode://ca21ea8f176adb2e229ce2d700830c844af0ea941a1d8152a9513b966fe525e809c3a6c73a2c18a12b74ed6ec4380edf91662778fe0b79f6a591236e49e176f9@184.72.129.189:30301,enode://acf4507a211ba7c1e52cdf4eef62cdc3c32e7c9c47998954f7ba024026f9a6b2150cd3f0b734d9c78e507ab70d59ba61dfe5c45e1078c7ad0775fb251d7735a2@3.220.145.177:30301,enode://8a5a5006159bf079d06a04e5eceab2a1ce6e0f721875b2a9c96905336219dbe14203d38f70f3754686a6324f786c2f9852d8c0dd3adac2d080f4db35efc678c5@3.231.11.52:30301,enode://cdadbe835308ad3557f9a1de8db411da1a260a98f8421d62da90e71da66e55e98aaa8e90aa7ce01b408a54e4bd2253d701218081ded3dbe5efbbc7b41d7cef79@54.198.153.150:30301\n# OP_NETHERMIND_BOOTNODES=enode://87a32fd13bd596b2ffca97020e31aef4ddcc1bbd4b95bb633d16c1329f654f34049ed240a36b449fda5e5225d70fe40bc667f53c304b71f8e68fc9d448690b51@3.231.138.188:30301,enode://ca21ea8f176adb2e229ce2d700830c844af0ea941a1d8152a9513b966fe525e809c3a6c73a2c18a12b74ed6ec4380edf91662778fe0b79f6a591236e49e176f9@184.72.129.189:30301,enode://acf4507a211ba7c1e52cdf4eef62cdc3c32e7c9c47998954f7ba024026f9a6b2150cd3f0b734d9c78e507ab70d59ba61dfe5c45e1078c7ad0775fb251d7735a2@3.220.145.177:30301,enode://8a5a5006159bf079d06a04e5eceab2a1ce6e0f721875b2a9c96905336219dbe14203d38f70f3754686a6324f786c2f9852d8c0dd3adac2d080f4db35efc678c5@3.231.11.52:30301,enode://cdadbe835308ad3557f9a1de8db411da1a260a98f8421d62da90e71da66e55e98aaa8e90aa7ce01b408a54e4bd2253d701218081ded3dbe5efbbc7b41d7cef79@54.198.153.150:30301\n# OP_GETH_SYNCMODE=snap\n"
        },
        {
          "name": ".env.sepolia",
          "type": "blob",
          "size": 2.935546875,
          "content": "RETH_CHAIN=base-sepolia\nRETH_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\nOP_GETH_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\nOP_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\n\n# [optional] used to enable geth stats:\n# OP_GETH_ETH_STATS=nodename:secret@host:port\n# OP_NETHERMIND_ETHSTATS_ENABLED=true\n# OP_NETHERMIND_ETHSTATS_NODE_NAME=NethermindNode\n# OP_NETHERMIND_ETHSTATS_ENDPOINT=ethstats_endpoint\n\n# [required] replace with your preferred L1 (Ethereum, not Base) node RPC URL:\nOP_NODE_L1_ETH_RPC=https://rpc.sepolia.org\n\n# [required] replace with your preferred L1 CL beacon endpoint:\nOP_NODE_L1_BEACON=https://your.sepolia.beacon.node/endpoint-here\n\n# auth secret used by op-geth engine API:\nOP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a\n\nOP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt\nOP_NODE_L2_ENGINE_RPC=ws://execution:8551\nOP_NODE_LOG_LEVEL=info\nOP_NODE_METRICS_ADDR=0.0.0.0\nOP_NODE_METRICS_ENABLED=true\nOP_NODE_METRICS_PORT=7300\nOP_NODE_NETWORK=base-sepolia\nOP_NODE_P2P_AGENT=base\nOP_NODE_P2P_BOOTNODES=enr:-J64QBwRIWAco7lv6jImSOjPU_W266lHXzpAS5YOh7WmgTyBZkgLgOwo_mxKJq3wz2XRbsoBItbv1dCyjIoNq67mFguGAYrTxM42gmlkgnY0gmlwhBLSsHKHb3BzdGFja4S0lAUAiXNlY3AyNTZrMaEDmoWSi8hcsRpQf2eJsNUx-sqv6fH4btmo2HsAzZFAKnKDdGNwgiQGg3VkcIIkBg,enr:-J64QFa3qMsONLGphfjEkeYyF6Jkil_jCuJmm7_a42ckZeUQGLVzrzstZNb1dgBp1GGx9bzImq5VxJLP-BaptZThGiWGAYrTytOvgmlkgnY0gmlwhGsV-zeHb3BzdGFja4S0lAUAiXNlY3AyNTZrMaEDahfSECTIS_cXyZ8IyNf4leANlZnrsMEWTkEYxf4GMCmDdGNwgiQGg3VkcIIkBg\nOP_NODE_P2P_LISTEN_IP=0.0.0.0\nOP_NODE_P2P_LISTEN_TCP_PORT=9222\nOP_NODE_P2P_LISTEN_UDP_PORT=9222\nOP_NODE_RPC_ADDR=0.0.0.0\nOP_NODE_RPC_PORT=8545\nOP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log\nOP_NODE_VERIFIER_L1_CONFS=4\nOP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true\n\n# OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node\n# is fully trusted. It also allows op-node to work with clients such as Erigon that do not\n# support storage proofs:\n# OP_NODE_L1_TRUST_RPC=true\n\n# SNAP SYNC\n# NOTE: This feature is experimental and may lead to syncing issues, delays or difficulties as a result of inability to find peers. We recommend running a full or archive node for production purposes.\n# To enable snap sync, set env vars below:\n# OP_NODE_SYNCMODE=execution-layer\n# OP_GETH_BOOTNODES=enode://548f715f3fc388a7c917ba644a2f16270f1ede48a5d88a4d14ea287cc916068363f3092e39936f1a3e7885198bef0e5af951f1d7b1041ce8ba4010917777e71f@18.210.176.114:30301,enode://6f10052847a966a725c9f4adf6716f9141155b99a0fb487fea3f51498f4c2a2cb8d534e680ee678f9447db85b93ff7c74562762c3714783a7233ac448603b25f@107.21.251.55:30301\n# OP_NETHERMIND_BOOTNODES=enode://548f715f3fc388a7c917ba644a2f16270f1ede48a5d88a4d14ea287cc916068363f3092e39936f1a3e7885198bef0e5af951f1d7b1041ce8ba4010917777e71f@18.210.176.114:30301,enode://6f10052847a966a725c9f4adf6716f9141155b99a0fb487fea3f51498f4c2a2cb8d534e680ee678f9447db85b93ff7c74562762c3714783a7233ac448603b25f@107.21.251.55:30301\n# OP_GETH_SYNCMODE=snap\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05859375,
          "content": "/.idea/\n/geth-data/\n/reth-data/\n/nethermind-data/\n.DS_Store\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.203125,
          "content": "# Contributing to Base Node\n\n## Code of Conduct\n\nAll interactions with this project follow our [Code of Conduct][code-of-conduct].\nBy participating, you are expected to honor this code. Violators can be banned\nfrom further participation in this project, or potentially all Base and/or\nCoinbase\nprojects.\n\n[code-of-conduct]: https://github.com/coinbase/code-of-conduct\n\n## Bug Reports\n\n* Ensure your issue [has not already been reported][1]. It may already be fixed!\n* Include the steps you carried out to produce the problem.\n* Include the behavior you observed along with the behavior you expected, and\n  why you expected it.\n* Include any relevant stack traces or debugging output.\n\n## Feature Requests\n\nWe welcome feedback with or without pull requests. If you have an idea for how\nto improve the project, great! All we ask is that you take the time to write a\nclear and concise explanation of what need you are trying to solve. If you have\nthoughts on _how_ it can be solved, include those too!\n\nThe best way to see a feature added, however, is to submit a pull request.\n\n## Pull Requests\n\n* Before creating your pull request, it's usually worth asking if the code\n  you're planning on writing will actually be considered for merging. You can\n  do this by [opening an issue][1] and asking. It may also help give the\n  maintainers context for when the time comes to review your code.\n\n* Ensure your [commit messages are well-written][2]. This can double as your\n  pull request message, so it pays to take the time to write a clear message.\n\n* Add tests for your feature. You should be able to look at other tests for\n  examples. If you're unsure, don't hesitate to [open an issue][1] and ask!\n\n* Submit your pull request!\n\n## Support Requests\n\nFor security reasons, any communication referencing support tickets for Coinbase\nproducts will be ignored. The request will have its content redacted and will\nbe locked to prevent further discussion.\n\nAll support requests must be made via [our support team][3].\n\n[1]: https://github.com/base-org/node/issues\n[2]: https://medium.com/brigade-engineering/the-secrets-to-great-commit-messages-106fc0a92a25\n[3]: https://support.coinbase.com/customer/en/portal/articles/2288496-how-can-i-contact-coinbase-support-\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "MIT License\n\nCopyright (c) 2023-2024 base.org contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6328125,
          "content": "![Base](logo.webp)\n\n# Base node\n\nBase is a secure, low-cost, developer-friendly Ethereum L2 built to bring the next billion users onchain. It's built on Optimism’s open-source [OP Stack](https://stack.optimism.io/).\n\nThis repository contains the relevant Docker builds to run your own node on the Base network.\n\n<!-- Badge row 1 - status -->\n\n[![GitHub contributors](https://img.shields.io/github/contributors/base-org/node)](https://github.com/base-org/node/graphs/contributors)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/w/base-org/node)](https://github.com/base-org/node/graphs/commit-activity)\n[![GitHub Stars](https://img.shields.io/github/stars/base-org/node.svg)](https://github.com/base-org/node/stargazers)\n![GitHub repo size](https://img.shields.io/github/repo-size/base-org/node)\n[![GitHub](https://img.shields.io/github/license/base-org/node?color=blue)](https://github.com/base-org/node/blob/main/LICENSE)\n\n<!-- Badge row 2 - links and profiles -->\n\n[![Website base.org](https://img.shields.io/website-up-down-green-red/https/base.org.svg)](https://base.org)\n[![Blog](https://img.shields.io/badge/blog-up-green)](https://base.mirror.xyz/)\n[![Docs](https://img.shields.io/badge/docs-up-green)](https://docs.base.org/)\n[![Discord](https://img.shields.io/discord/1067165013397213286?label=discord)](https://base.org/discord)\n[![Twitter Base](https://img.shields.io/twitter/follow/Base?style=social)](https://x.com/Base)\n\n<!-- Badge row 3 - detailed status -->\n\n[![GitHub pull requests by-label](https://img.shields.io/github/issues-pr-raw/base-org/node)](https://github.com/base-org/node/pulls)\n[![GitHub Issues](https://img.shields.io/github/issues-raw/base-org/node.svg)](https://github.com/base-org/node/issues)\n\n### Hardware requirements\n\nWe recommend you have this hardware configuration to run a node:\n\n- a modern multi-core CPU with good single-core performance\n- at least 16 GB RAM (32 GB recommended)\n- a locally attached NVMe SSD drive\n- adequate storage capacity to accommodate both the snapshot restoration process (if restoring from snapshot) and chain data, ensuring a minimum of (2 \\* current_chain_size) + snapshot_size + 20%\\_buffer\n\n**Note:** If utilizing Amazon Elastic Block Store (EBS), ensure timing buffered disk reads are fast enough in order to avoid latency issues alongside the rate of new blocks added to Base during the initial synchronization process; `io2 block express` is recommended.\n\n### Troubleshooting\n\nIf you encounter problems with your node, please open a [GitHub issue](https://github.com/base-org/node/issues/new/choose) or reach out on our [Discord](https://discord.gg/buildonbase):\n\n- Once you've joined, in the Discord app go to `server menu` > `Linked Roles` > `connect GitHub` and connect your GitHub account so you can gain access to our developer channels\n- Report your issue in `#🛟|developer-support` or `🛠｜node-operators`\n\n### Supported networks\n\n| Base Network      | Status |\n|-------------------| ------ |\n| Testnet (Sepolia) | ✅     |\n| Mainnet           | ✅     |\n\n### Usage\n\n1. Ensure you have an Ethereum L1 full node RPC available (not Base), and set `OP_NODE_L1_ETH_RPC` (in the `.env.*` file if using docker-compose). If running your own L1 node, it needs to be synced before Base will be able to fully sync.\n2. Uncomment the line relevant to your network (`.env.sepolia`, or `.env.mainnet`) under the 2 `env_file` keys in `docker-compose.yml`.\n3. Run:\n\n```\ndocker compose up --build\n```\n\n> [!NOTE]\n> To run the node using a supported client, you can use the following command:\n> `CLIENT=supported_client docker compose up --build`\n> \n> Supported clients:\n> - geth\n> - reth\n> - nethermind\n\n4. You should now be able to `curl` your Base node:\n\n```\ncurl -d '{\"id\":0,\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"latest\",false]}' \\\n  -H \"Content-Type: application/json\" http://localhost:8545\n```\n\nNote: Some L1 nodes (e.g. Erigon) do not support fetching storage proofs. You can work around this by specifying `--l1.trustrpc` when starting op-node (add it in `op-node-entrypoint` and rebuild the docker image with `docker compose build`.) Do not do this unless you fully trust the L1 node provider.\n\n#### Persisting Data\n\nBy default, the data directory is stored in `${PROJECT_ROOT}/geth-data`. You can override this by modifying the value of\n`GETH_HOST_DATA_DIR` variable in the [`.env`](./.env) file.\n\nTo load a [snapshot](#snapshots) you can extract the snapshot into the `$GETH_HOST_DATA_DIR` folder.\n\n#### Running in single container with `supervisord`\n\nIf you'd like to run the node in a single container instead of `docker-compose`, you can use the `supervisord` entrypoint.\nThis is useful for running the node in a Kubernetes cluster, for example.\n\nNote that you'll need to override some of the default configuration that assumes a multi-container environment (`OP_NODE_L2_ENGINE_RPC`) and any port conflicts (`OP_NODE_RPC_PORT`).\nExample:\n\n```\ndocker run --env-file .env.sepolia -e OP_NODE_L2_ENGINE_RPC=ws://localhost:8551 -e OP_NODE_RPC_PORT=7545 ghcr.io/base-org/node:latest\n```\n\n### Snapshots\n\nYou can fetch the latest snapshots via the URLs provided in the [Base docs](https://docs.base.org/guides/run-a-base-node/#snapshots).\n\n### Syncing\n\nSync speed depends on your L1 node, as the majority of the chain is derived from data submitted to the L1. You can check your syncing status using the `optimism_syncStatus` RPC on the `op-node` container. Example:\n\n```\ncommand -v jq  &> /dev/null || { echo \"jq is not installed\" 1>&2 ; }\necho Latest synced block behind by: \\\n$((($( date +%s )-\\\n$( curl -s -d '{\"id\":0,\"jsonrpc\":\"2.0\",\"method\":\"optimism_syncStatus\"}' -H \"Content-Type: application/json\" http://localhost:7545 |\n   jq -r .result.unsafe_l2.timestamp))/60)) minutes\n```\n\n## Disclaimer\n\nWe’re excited for you to build on Base 🔵 — but we want to make sure that you understand the nature of the node software and smart contracts offered here.\n\nTHE NODE SOFTWARE AND SMART CONTRACTS CONTAINED HEREIN ARE FURNISHED AS IS, WHERE IS, WITH ALL FAULTS AND WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NON- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE. IN PARTICULAR, THERE IS NO REPRESENTATION OR WARRANTY THAT THE NODE SOFTWARE AND SMART CONTRACTS WILL PROTECT YOUR ASSETS — OR THE ASSETS OF THE USERS OF YOUR APPLICATION — FROM THEFT, HACKING, CYBER ATTACK, OR OTHER FORM OF LOSS OR DEVALUATION.\n\nYou also understand that using the node software and smart contracts are subject to applicable law, including without limitation, any applicable anti-money laundering laws, anti-terrorism laws, export control laws, end user restrictions, privacy laws, or economic sanctions laws/regulations.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.49609375,
          "content": "# Security\n\n## Bug bounty program\n\nIn line with our strategy of being the safest way for users to access crypto:\n\n+ Coinbase will be extending our [best-in-industry][1] million-dollar [HackerOne bug bounty program][2]\nto cover the Base network, the Base bridge contracts, and Base infrastructure.\n\n+ Coinbase will be working in tandem with OP Labs to harden the security\nguarantees of Bedrock and accelerate the timeline for decentralized\nfault-proofs on the [OP Stack][3].\n\n+ Coinbase's bug bounty program will run alongside Optimism's existing [Immunefi Bedrock bounty program][4]\nto support the open source [Bedrock][5] OP Stack framework.\n\n## Reporting vulnerabilities\n\nAll potential vulnerability reports can be submitted via the [HackerOne][6]\nplatform.\n\nThe HackerOne platform allows us to have a centralized and single reporting\nsource for us to deliver optimized SLA's and results. All reports submitted to\nthe platform are triaged around the clock by our team of Coinbase engineers\nwith domain knowledge, assuring the best quality of review.\n\nFor more information on reporting vulnerabilities and our HackerOne bug bounty\nprogram, view our [security program policies][7].\n\n[1]: https://www.coinbase.com/blog/celebrating-10-years-of-our-bug-bounty-program\n[2]: https://hackerone.com/coinbase?type=team \n[3]: https://stack.optimism.io/\n[4]: https://immunefi.com/bounty/optimism/\n[5]: https://stack.optimism.io/docs/releases/bedrock/\n[6]: https://hackerone.com/coinbase\n[7]: https://hackerone.com/coinbase?view_policy=true\n\n\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.8701171875,
          "content": "services:\n  execution:\n    build:\n      context: .\n      dockerfile: ${CLIENT}/Dockerfile\n    ports:\n      - \"8545:8545\"       # RPC\n      - \"8546:8546\"       # websocket\n      - \"7301:6060\"       # metrics\n      - \"30303:30303\"     # P2P TCP\n      - \"30303:30303/udp\" # P2P UDP\n    command: [ \"bash\", \"./execution-entrypoint\" ]\n    volumes:\n        - ${HOST_DATA_DIR}:/data\n    env_file:\n      # select your network here:\n#      - .env.sepolia\n#      - .env.mainnet\n  node:\n    build:\n      context: .\n      dockerfile: ${CLIENT}/Dockerfile\n    depends_on:\n      - execution\n    ports:\n      - \"7545:8545\"     # RPC\n      - \"9222:9222\"     # P2P TCP\n      - \"9222:9222/udp\" # P2P UDP\n      - \"7300:7300\"     # metrics\n      - \"6060:6060\"     # pprof\n    command: [ \"bash\", \"./op-node-entrypoint\" ]\n    env_file:\n      # select your network here:\n#      - .env.sepolia\n#      - .env.mainnet\n"
        },
        {
          "name": "geth",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.webp",
          "type": "blob",
          "size": 37.57421875,
          "content": null
        },
        {
          "name": "nethermind",
          "type": "tree",
          "content": null
        },
        {
          "name": "op-node-entrypoint",
          "type": "blob",
          "size": 1.2353515625,
          "content": "#!/bin/bash\nset -eu\n\nget_public_ip() {\n  # Define a list of HTTP-based providers\n  local PROVIDERS=(\n    \"http://ifconfig.me\"\n    \"http://api.ipify.org\"\n    \"http://ipecho.net/plain\"\n    \"http://v4.ident.me\"\n  )\n  # Iterate through the providers until an IP is found or the list is exhausted\n  for provider in \"${PROVIDERS[@]}\"; do\n    local IP\n    IP=$(curl -s \"$provider\")\n    # Check if IP contains a valid format (simple regex for an IPv4 address)\n    if [[ $IP =~ ^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      echo \"$IP\"\n      return 0\n    fi\n  done\n  return 1\n}\n\nif [[ -z \"$OP_NODE_NETWORK\" && -z \"$OP_NODE_ROLLUP_CONFIG\" ]]; then\n  echo \"expected OP_NODE_NETWORK to be set\" 1>&2\n  exit 1\nfi\n\n# wait until local execution client comes up (authed so will return 401 without token)\nuntil [ \"$(curl -s -w '%{http_code}' -o /dev/null \"${OP_NODE_L2_ENGINE_RPC/ws/http}\")\" -eq 401 ]; do\n  echo \"waiting for execution client to be ready\"\n  sleep 5\ndone\n\n# public-facing P2P node, advertise public IP address\nif PUBLIC_IP=$(get_public_ip); then\n  echo \"fetched public IP is: $PUBLIC_IP\"\nelse\n  echo \"Could not retrieve public IP.\"\n  exit 8\nfi\nexport OP_NODE_P2P_ADVERTISE_IP=$PUBLIC_IP\n\necho \"$OP_NODE_L2_ENGINE_AUTH_RAW\" > \"$OP_NODE_L2_ENGINE_AUTH\"\n\nexec ./op-node"
        },
        {
          "name": "reth",
          "type": "tree",
          "content": null
        },
        {
          "name": "supervisord.conf",
          "type": "blob",
          "size": 0.34375,
          "content": "[supervisord]\nnodaemon=true\nlogfile=/dev/null\nlogfile_maxbytes=0\n\n[program:op-node]\ncommand=/app/op-node-entrypoint\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nstopwaitsecs=300\n\n[program:op-execution]\ncommand=/app/execution-entrypoint\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nstopwaitsecs=300\n"
        }
      ]
    }
  ]
}