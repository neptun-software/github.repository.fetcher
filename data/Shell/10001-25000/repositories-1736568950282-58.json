{
  "metadata": {
    "timestamp": 1736568950282,
    "page": 58,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oh-my-fish/oh-my-fish",
      "stars": 10575,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1025390625,
          "content": "# Ensure Fish scripts always use LF line endings, otherwise multiline commands break.\n*.fish text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": "pkg/**\n!pkg/omf\n!pkg/omf/**\n!pkg/fish-spec\n!pkg/fish-spec/**\n\nthemes/**\n\n.DS_Store\n**/.DS_Store\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 7.81640625,
          "content": "# This file lists all individuals having contributed content to the repository.\n# This list was auto-generated from Git history.\n\n@thingsdoer <zac.developer@gmail.com>\nAaron DeVore <aaron.devore@gmail.com>\nAaron Hamilton <aaron@rangle.io>\nAdam Edelstein <Adam.Edelstein@tastytrade.com>\nAdam Lavin <adam@lavoaster.co.uk>\nAdriano Bonat <adrianob@gmail.com>\nAlex Farrell <alex.farrell@mac.com>\nAlexander Grigoriev <agrigoriev@alawar.com>\nAmio • 晋晓炜 <amio.cn@gmail.com>\nAndrew Komarnitskyi <ticapac@gmail.com>\nAndrew Rynhard <rynhard.a@icloud.com>\nAndré L. F. Pinto <andreluizferreirapinto@gmail.com>\nAndy Klimczak <andyklimczak@fastmail.com>\nAnton Beloglazov <anton.beloglazov@gmail.com>\nAnton-Latukha <anton.latukha@gmail.com>\nAttila Györffy <attila@attilagyorffy.com>\naznashwan <aznashwan@yahoo.com>\nBachue Zhou <bachue.shu@gmail.com>\nBeau Hastings <beausy@gmail.com>\nbelltoy <belltoy@gmail.com>\nBen Cochez <ben@cochez.info>\nBenedict Lee <benedictleejh@gmail.com>\nBenji <asdf.tgz@gmail.com>\nBodo Tasche <bodo@wannawork.de>\nBrian <iamamthwiz+GitHub@gmail.com>\nBruno <brunoferreirapinto@gmail.com>\nCADBOT <charliec364@gmail.com>\nCelso Miranda <contacto@celsomiranda.net>\nChang Yu-heng <mr.changyuheng@gmail.com>\nCharles B Johnson <mail@cbjohnson.info>\nCharles Thorley <charles@thorley.us>\nChris Chua <chris@thousandeyes.com>\nChris Morrell <github@rchy.net>\nChris Seelus <chris@imeos.com>\nCodeFalling <code.falling@gmail.com>\ncodetriage-readme-bot <schneemanbuys@gmail.com>\ncosta <costa@casa>\ncotne nazarashvili <cotne.nazarashvili@gmail.com>\nCyan <szwathub@gmail.com>\nDalton Duvio <thebigdalt@gmail.com>\nDamon Poole <pyrokinetiq@gmail.com>\nDan Underwood <dan-c-underwood@users.noreply.github.com>\nDaniel Banck <daniel@dbanck.de>\nDaniel Mijares <daniel.j.mijares@gmail.com>\nDaniele Sluijters <daenney@users.noreply.github.com>\nDanny Arnold <despair.blue@gmail.com>\nDave Yarwood <dave.yarwood@gmail.com>\nDeclan Kelly <declan@KnightHawk3.com>\nDenis Kolesnikov <exsdis@gmail.com>\nDenis Koltsov <koltsov.d@gmail.com>\nDennis Evert <dennisevert@gmail.com>\nDenny Trebbin <fibric@users.noreply.github.com>\nDerek Willian Stavis <dekestavis@gmail.com>\nDon <don@ohspite.net>\nDouglas Camata <d.camata@gmail.com>\nDylan Garrett <dylan.garrett@gmail.com>\nÉdouard Lopez <edouard-lopez@users.noreply.github.com>\nEivind Uggedal <eivind@uggedal.com>\nErik Kallen <info@erikkallen.nl>\nEspen Henriksen <esphen@users.noreply.github.com>\neugenesvk <eugenesvk@gmail.com>\nFabian Homborg <FHomborg@gmail.com>\nFelipe Rodrigues <felipe@crafters.com.br>\nFelix Sonntag <sonntag@in.tum.de>\nFission Xuiptz <fissionxuiptz@softwaremojo.com>\nFlorian Fischer <florian.fl.fischer@fau.de>\nFrancis Lavoie <f.lavoie@onf.ca>\nFrederick Henderson <frederickjh@users.noreply.github.com>\nGabriel César <gcal1@live.com>\nGabriel Marquez <gabriel@conube.com.br>\nGerard Ribugent Navarro <ribugent@gmail.com>\nGreg Knaddison <greg@knaddison.com>\nGuilherme Rv Coelho <grvcoelho@users.noreply.github.com>\nGustavo Pantuza <gustavopantuza@gmail.com>\nhaishanh <haishanhan@gmail.com>\nhak8or <hak8or@users.noreply.github.com>\nHarrison Heck <harrison.heck@gmail.com>\nHasan Ozgan <hasanozgan@gmail.com>\nHenrik W Lund <henrik.w.lund@gmail.com>\nhsharrison <henry.schafer.harrison@gmail.com>\nHyeon Kim <simnalamburt@gmail.com>\nicyleaf <icyleaf.cn@gmail.com>\nIdan Gazit <idan@gazit.me>\nilkosta <costantino.giuliodori@gmail.com>\nIsaias Pina <isaias.pina@hpe.com>\nItzik Ephraim <oranja@gmail.com>\niven <ivenvd@gmail.com>\nJade Meskill <jade.meskill@gmail.com>\nJake Schmitz <jake.d.schmitz@gmail.com>\nJames Hillyerd <james@hillyerd.com>\nJan Lindblom <janlindblom@fastmail.fm>\nJan T. Sott <jan@idleberg.com>\nJanusz Dziurzyński <janusz@forserial.org>\nJason Rogers <jason.rogers@samasource.org>\nJean Mertz <jean@mertz.fm>\njeremiejig <me@jeremiejig.fr>\nJianming Qu <sancoder.q@gmail.com>\nJichao Ouyang <oyanglulu@gmail.com>\nJoar Wandborg <joar@wandborg.se>\nJoel Burget <joelburget@gmail.com>\nJohn Barbero Unenge <john.barbero.unenge@gmail.com>\nJohn Rizzo <johnrizzo1@gmail.com>\nJohnny Robeson <johnny@localmomentum.net>\njona <fiftynine@protonmail.com>\nJonathan Knapp <jon@coffeeandcode.com>\nJonathan Pares <jonathanpa@users.noreply.github.com>\nJorge Bucaran <jbucaran@me.com>\nJoseph <sepp.tannhuber@yahoo.de>\nJoshua Warner <joshua.warner@readytalk.com>\nJosiah Sprague <josiah.sprague@gmail.com>\nJP Viljoen <froztbyte@froztbyte.net>\nJustin Hileman <github@0x7f.us>\nJörg Thalheim <joerg@higgsboson.tk>\nKasper Holbek Jensen <khj@autobutler.dk>\nKatya Demidova <demidovakatya@gmail.com>\nKelvin Smith <oneKelvinSmith@gmail.com>\nKevin  F. Konrad <kevinkonrad@ymail.com>\nKevin Menard <kevin@nirvdrum.com>\nKirill Sukhanov <kirach@kirach.net>\nKonrad Borowski <glitchmr@myopera.com>\nKris Leech <kris.leech@gmail.com>\nLeonardo de Oliveira da Silva <los.oliveirasilva@gmail.com>\nLiang Bo Wang <ccwang002@gmail.com>\nLilo <riroo@me.com>\nLin Jen-Shin <godfat@godfat.org>\nLloyd Dewolf <foolswisdom@gmail.com>\nLucas Bordignon <lucaspbordignon99@gmail.com>\nLuis Angel Vicente Sanchez <langel.vicente@gmail.com>\nLuís Fiolhais <luisazenhas.fiolhais@gmail.com>\nMarek Skrobacki <skrobul@skrobul.com>\nMarek Šuppa <mrshu@users.noreply.github.com>\nMarius Melzer <marius@rasumi.net>\nMark Derricutt <mark@talios.com>\nMatej Nemček <ybdaba@gmail.com>\nMathias Djärv <mathias.djarv@gmail.com>\nMathias Rasmussen <mathiasvr@gmail.com>\nMatthew Crenshaw <sgt@squig.gs>\nMax Vasiliev <max@vasiliev.me>\nMichael Ventura <michael@aluminum.local>\nMichel Belleville <michel.belleville@gmail.com>\nMichele Gerarduzzi <michele.gerarduzzi@gmail.com>\nMiguel Molina <hi@mvader.me>\nMuhammad Tauqir Ahmad <mtahmed@uwaterloo.ca>\nNathan Wykes <nwykes@users.noreply.github.com>\nNatrim <maly@kinet.cz>\nNecmettin Karakaya <necmettin.karakaya@gmail.com>\nNelson Chen <crazysim@gmail.com>\nngroup <steven.nien@gmail.com>\nNiam Patel <naz1997@googlemail.com>\nNicholas Maccharoli <nmaccharoli@gmail.com>\nNicolas Leclercq <nicolas.leclercq@cloudwatt.com>\nNils Stål <nisseblink@gmail.com>\nnwykes <nwykes@gmail.com>\nOsamu OKANO <okano.osamu@gmail.com>\nPablo Santiago Blum de Aguiar <scorphus@gmail.com>\nPastLeo <chgu82837@gmail.com>\nPatryk Niedźwiedziński <pniedzwiedzinski19@gmail.com>\nPaul Joannon <paul.joannon@gmail.com>\nPaul Wendelboe <pwendelboe.git@gmail.com>\nPedro Medeiros <pedrosnk@gmail.com>\nPerry Huang <perry.huang@gmail.com>\nPeter Armstrong <peter@xap.ie>\nPierpaolo Frasa <pfrasa@gmail.com>\nPoorPockets McNewHold <13170204+PoorPocketsMcNewHold@users.noreply.github.com>\npxgamer <owzie123@gmail.com>\nPyry-Samuli Lahti <pyppe@iki.fi>\nRahul Trikha <rahul.trikha@gmail.com>\nRemy Goldschmidt <taktoa@gmail.com>\nRob Day <Robert.day@dowjones.com>\nRobDay <dayrobertj@gmail.com>\nRobert Holak <rholak@norcalmutual.com>\nRoman Inflianskas <rominf@users.noreply.github.com>\nS.P <sbstnp@icloud.com>\nScott Perry <github@numist.net>\nSergey Kasmy <37976824+SleeplessSloth@users.noreply.github.com>\nSergey Timanin <timanin@gmail.com>\nSérgio Ramos <mail@sergioramos.me>\nSheldon Els <sels@blizzard.com>\nsn0cr <709679@gmail.com>\nsobolevn <mail@sobolevn.me>\nStephen M. Coakley <me@stephencoakley.com>\nSteve Mckellar <steve@thingmaker.io>\nSteven Knight <steven@knight.cx>\nsyl20bnr <sylvain.benner@gmail.com>\nTad Thorley <phaedryx@gmail.com>\nThales Mello <thalesmello@gmail.com>\nTheBestNinja <TheBestNinja@users.noreply.github.com>\nTobias Johansson <tobias.johansson@appland.se>\nTom Hensel <github@jitter.eu>\nTrenton Broughton <trenton42@users.noreply.github.com>\nTwan Coenraad <twan@coenraad.at>\nUmayr Shahid <umayrr@hotmail.co.uk>\nunbalancedparentheses <federico.carrone@gmail.com>\nVEINHORN <b.korogvich@gmail.com>\nVictorhck <victorhck@mailbox.org>\nVincent <vincent.pretre@smartesting.com>\nVincent Pizzo <vincent.pizzo@singlewire.com>\nVincent Pretre <vincent.pretre@gmail.com>\nVladimir Panteleev <thecybershadow@gmail.com>\nWes Morgan <cap10morgan@gmail.com>\nWild Kat <wk@users.noreply.github.com>\nWilliam Hogman <me@whn.se>\nWolfgang Richter <wolf@cs.cmu.edu>\nZhishen (Jason) Wen <wzhishen@gmail.com>\nZhuang Ya <zhuangya@gmail.com>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 18.3154296875,
          "content": "# Change Log\nImportant changes to Oh My Fish are recorded here for each release.\n\n\n## [7] - 2020-04-11\n\nAnother release that took long but is finally out! v7 supports Fish 3.0 and 3.1 and brings a few improvements and bug fixes.\n\n### Improvements\n\n- Plugin and theme templates improvements. [#596] [#691] [#709]\n- Support newer versions of Fish Shell. [#609] [#618] [#644] [#710] [#711] [#740]\n- Improvements to the require mechanism. [#653] [#666] [#713]\n- Speed up Git interoperability/support. [#706]\n\n### Bugs fixed\n\n- Installation fixes and improvements. [#577] [#603] [#609] [#738] [#742]\n- Documentation fixes and improvements. [#570] [#640] [#662] [#694] [#696] [#699] [#708] [#709] [#724] [#737] [#739]\n\n### Contributors\n\nThanks to the people who contributed to this release.\n\n- [Adam Edelstein](mailto:Adam.Edelstein@tastytrade.com)\n- [Anton-Latukha](mailto:anton.latukha@gmail.com)\n- [Benedict Lee](mailto:benedictleejh@gmail.com)\n- [Derek W. Stavis](mailto:dekestavis@gmail.com)\n- [Édouard Lopez](mailto:edouard-lopez@users.noreply.github.com)\n- [Fabian Homborg](mailto:FHomborg@gmail.com)\n- [Frederick Henderson](mailto:frederickjh@users.noreply.github.com)\n- [Gustavo Pantuza](mailto:gustavopantuza@gmail.com)\n- [Itzik Ephraim](mailto:oranja@gmail.com)\n- [Jan T. Sott](mailto:jan@idleberg.com)\n- [Joel Burget](mailto:joelburget@gmail.com)\n- [Justin Hileman](mailto:github@0x7f.us)\n- [Kevin  F. Konrad](mailto:kevinkonrad@ymail.com)\n- [Leonardo de Oliveira da Silva](mailto:los.oliveirasilva@gmail.com)\n- [Pablo Santiago Blum de Aguiar](mailto:scorphus@gmail.com)\n- [Patryk Niedźwiedziński](mailto:pniedzwiedzinski19@gmail.com)\n- [Paul Wendelboe](mailto:pwendelboe.git@gmail.com)\n- [PoorPockets McNewHold](mailto:13170204PoorPocketsMcNewHold@users.noreply.github.com)\n- [pxgamer](mailto:owzie123@gmail.com)\n- [Sergey Kasmy](mailto:37976824SleeplessSloth@users.noreply.github.com)\n- [Stephen M. Coakley](mailto:me@stephencoakley.com)\n- [Thales Mello](mailto:thalesmello@gmail.com)\n- [Victorhck](mailto:victorhck@mailbox.org)\n\n\n## [6] - 2017-10-05\nThis release took far longer than we targeted for releasing, but we finally made it! Some notable fixes and improvements in this release, with some long-standing bugs eliminated.\n\nA big shiny improvement was made to the command-line help text, with more manpage-like output and descriptions. Check out `omf help -h` to see the brand new `help` command, which now supports shortened command names too! (Try running `omf help u`.) All of the help pages are also viewable online here: https://github.com/oh-my-fish/oh-my-fish/tree/master/docs/cli\n\n### Improvements\n- Revamp internal help text code and improve command-line help documentation. [#502]\n- Use HTTPS in all links to the installer. [#482] [#490]\n- Add a SHA-256 checksum for the installer. [#504]\n- Search results should only match name or description. [#505]\n\n### Bugs fixed\n- Scaffolding a new theme spits out weird error messages. [#401] [#529] [#530]\n- Handle backups and config files more carefully. [#509] [#512]\n- Themes should not require a `theme-` prefix in the URL. [#191] [#503]\n- Gracefully handle no theme being set. [#494] [#495]\n- Documentation fixes and improvements. [#493] [#507] [#508] [#520] [#543] [#546] [#548]\n\n### New plugins and themes\n- Plugins and themes are now tracked separately! Watch the [packages-main] repo for new plugins and themes.\n\n### Contributors\nThanks to the people who contributed to this release.\n\n- [Dalton Duvio](mailto:thebigdalt@gmail.com)\n- [Gabriel César](mailto:gcal1@live.com)\n- [Itzik Ephraim](mailto:oranja@gmail.com)\n- [Justin Hileman](mailto:github@0x7f.us)\n- [Leonardo de Oliveira da Silva](mailto:los.oliveirasilva@gmail.com)\n- [Lucas Bordignon](mailto:lucaspbordignon99@gmail.com)\n- [Necmettin Karakaya](mailto:necmettin.karakaya@gmail.com)\n- [pwendelboe](mailto:pwendelboe.git@gmail.com)\n- [Stephen M. Coakley](mailto:me@stephencoakley.com)\n\n\n## [5] - 2017-02-11\n### Added\n- Replace package database with new, independently installed package repository system. Packages are no longer stored in the framework repository tree. Instead packages are stored in a package repository, a Git repo with a list of available packages. Multiple sources are supported, with the old database contents moved to the [packages-main] repository. [#427]\n\n### Bugs fixed\n- Fix function paths when switching themes during runtime without a reload. Previously if a theme had a `functions` directory, it was only added to the function path at init time and not removed when switching themes. [#479] [#485]\n- Ignore \".git\" suffix on theme URLs in the Themes document generator. [#472]\n- Documentation fixes and improvements. [#481]\n\n### New plugins\n- [blt](https://github.com/devert/plugin-blt)\n- [fish_logo](https://github.com/HenrikWL/plugin-fish_logo)\n\n### New themes\n- [gentoo](https://github.com/ribugent/theme-gentoo)\n- [emoji-powerline](https://github.com/wyqydsyq/emoji-powerline)\n- [one](https://github.com/fivepointseven/omf-theme-one)\n\n### Contributors\nThanks to the people who contributed to this release.\n\n- [Damon Poole](mailto:pyrokinetiq@gmail.com)\n- [Dennis Evert](mailto:dennisevert@gmail.com)\n- [Gerard Ribugent Navarro](mailto:ribugent@gmail.com)\n- [Henrik W Lund](mailto:henrik.w.lund@gmail.com)\n- [Itzik Ephraim](mailto:oranja@gmail.com)\n- [Justin Hileman](mailto:github@0x7f.us)\n- [Pablo Santiago Blum de Aguiar](mailto:scorphus@gmail.com)\n- [Stephen M. Coakley](mailto:me@stephencoakley.com)\n\n\n## [4] - 2017-01-04\n### Added\n- The Doctor (`omf doctor`) now prints some additional info for ease in troubleshooting common problems. [#456]\n- New script for generating the `AUTHORS` file automatically from Git history. [#426]\n- Translate documentation into Ukrainian. [#464]\n\n### Bugs fixed\n- Fix common issues we've had with platform line endings and Git `autocrlf` and other line-ending settings. [#217] [#379] [#444] [#458]\n- Compatibility fixes for Fish 2.4.0. [#459]\n- If there is an existing theme set up, do not replace it when installing Oh My Fish for the first time. [#274] [#435]\n- Do not use Fish color variables for the default theme. This helps ensure the theme looks correct under any version of Fish. [#440] [#446]\n- Documentation fixes. [#418] [#457]\n\n### New plugins\n- [bak](https://github.com/oh-my-fish/plugin-bak)\n- [dpaste](https://github.com/oh-my-fish/plugin-dpaste)\n- [marlin](https://github.com/oh-my-fish/marlin)\n- [pj](https://github.com/oh-my-fish/plugin-pj)\n- [pyenv](https://github.com/oh-my-fish/plugin-pyenv)\n\n### New themes\n- [kawasaki](https://github.com/hastinbe/theme-kawasaki)\n- [slavic-cat](https://github.com/yangwao/omf-theme-slavic-cat)\n\n### Contributors\nThanks to the people who contributed to this release.\n\n- [Andrew Komarnitskyi](mailto:ticapac@gmail.com)\n- [Beau Hastings](mailto:beausy@gmail.com)\n- [Derek Willian Stavis](mailto:dekestavis@gmail.com)\n- [Espen Henriksen](mailto:esphen@users.noreply.github.com)\n- [hak8or](mailto:hak8or@users.noreply.github.com)\n- [Justin Hileman](mailto:github@0x7f.us)\n- [Matej Nemček](mailto:ybdaba@gmail.com)\n- [Roman Inflianskas](mailto:rominf@users.noreply.github.com)\n- [Stephen M. Coakley](mailto:me@stephencoakley.com)\n\n\n## [3] - 2016-10-20\n- Key bindings are now fully supported in user config and in plugins. Bindings should be placed in a `key_bindings.fish` script and will be loaded automatically. [#368] [#355] [#334]\n- Init process completely rewritten to improve performance and correctness. Using `on_{plugin}` events for plugin initialization is now deprecated and will eventually be removed. `init.fish` scripts will be sourced directly and are passed the variables `$path`, `$package`, and `$bundle`. [#343] [#335]\n- Revamped _hooks_ system that allows plugins to register scripts to be executed on certain events. Hooks are now located in `{plugin}/hooks` (except for `init` and `key_bindings`) and are regular Fish scripts named after the target hook event. Adds support for `install` and `update` hooks. See the [package docs](docs/en-US/Packages.md) for details. [#286]\n- Completely new interactive installer written for correctness that no longer overwrites any existing usr config files. Also supports offline installs. [#399] [#385] [#381] [#361] [#330]\n- The core framework updater now respects release versions and by default upgrades between tagged releases only. Run `omf channel dev` to receive updates from `master`. [#293]\n- Fixes for Fish 2.3.* compatibility. [#327] [#325]\n- `omf update` now returns the correct output and exit status. [#394] [#365]\n- Fix errors shown for the default theme when in a Git detached head. [#366]\n- Update templates for new plugins. [#403] [#333]\n- Documentation fixes and improvements. [#380] [#378] [#373] [#371] [#370] [#369] [#354] [#345]\n\n### New plugins\n- [android-sdk](https://github.com/oh-my-fish/plugin-android-sdk)\n- [archlinux](https://github.com/oh-my-fish/plugin-archlinux)\n- [aws](https://github.com/oh-my-fish/plugin-aws)\n- [cd](https://github.com/oh-my-fish/plugin-cd)\n- [docker-machine](https://github.com/oh-my-fish/plugin-docker-machine)\n- [exenv](https://github.com/oh-my-fish/plugin-exenv)\n- [gityaw](https://github.com/oh-my-fish/plugin-gityaw)\n- [license](https://github.com/oh-my-fish/plugin-license)\n- [mou](https://github.com/oh-my-fish/plugin-mou)\n- [node-binpath](https://github.com/oh-my-fish/plugin-node-binpath)\n- [nodenv](https://github.com/oh-my-fish/plugin-nodenv)\n- [proxy](https://github.com/oh-my-fish/plugin-proxy)\n- [spark](https://github.com/oh-my-fish/plugin-spark)\n- [sudope](https://github.com/oh-my-fish/plugin-sudope)\n- [virtualfish](https://github.com/oh-my-fish/plugin-virtualfish)\n- [wifi-password](https://github.com/oh-my-fish/plugin-wifi-password)\n- [wttr](https://github.com/oh-my-fish/plugin-wttr)\n\n### New themes\n- [eden](https://github.com/oh-my-fish/theme-eden)\n- [fishbone](https://github.com/oh-my-fish/theme-fishbone)\n\n### Contributors\n- [Amio • 晋晓炜](mailto:amio.cn@gmail.com)\n- [Denis Koltsov](mailto:koltsov.d@gmail.com)\n- [Derek Willian Stavis](mailto:dekestavis@gmail.com)\n- [Douglas Camata](mailto:d.camata@gmail.com)\n- [Guilherme Rv Coelho](mailto:grvcoelho@users.noreply.github.com)\n- [Gustavo Pantuza Coelho Pinto](mailto:gustavopantuza@gmail.com)\n- [Itzik Ephraim](mailto:oranja@gmail.com)\n- [Jianming Qu](mailto:sancoder.q@gmail.com)\n- [John Rizzo](mailto:johnrizzo1@gmail.com)\n- [Justin Hileman](mailto:github@0x7f.us)\n- [Luís Fiolhais](mailto:luisazenhas.fiolhais@gmail.com)\n- [Mathias Djärv](mailto:mathias.djarv@gmail.com)\n- [Nathan Wykes](mailto:nwykes@users.noreply.github.com)\n- [Pablo Santiago Blum de Aguiar](mailto:scorphus@gmail.com)\n- [Pedro Medeiros](mailto:pedrosnk@gmail.com)\n- [Sergey Timanin](mailto:timanin@gmail.com)\n- [Stephen M. Coakley](mailto:me@stephencoakley.com)\n- [Wild Kat](mailto:wk@users.noreply.github.com)\n\n\n## [2] - 2016-05-11\n- A new package searching command was added for better discoverability. Invoke it with `omf search`. See `omf help search` on how to use this new command. [#314]\n- `omf doctor` now checks for good versions of Fish and Git to be installed. [#280]\n- `omf update` can now update specific packages instead of just everything. [#268]\n- `refresh` has been replaced with `omf reload`, which is much safer. [#266]\n- New packages added to the database: rustup, linuxbrew, await, hash, expand, argu, termux, phpbrew, config\n- New themes: mokou, qing, mars, chain, es, lolfish, lambda, pure\n- Numerous bugfixes to existing features. [#310], [#305], [#287], [#285], [#247], [#242]\n- Documentation fixes and improvements: [#291], [#289], [#250], [#238], [#235]\n\n### Contributors\n- Andrew Rynhard\n- Boris Korogvich\n- Bruno Pinto\n- cotne nazarashvili\n- Cyan\n- Derek Willian Stavis\n- eugenesvk\n- Hasan Ozgan\n- Hyeon Kim\n- Itzik Ephraim\n- jona\n- Justin Hileman\n- Katya Demidova\n- Luís Fiolhais\n- Mathias Rasmussen\n- Miguel Molina\n- Roman Inflianskas\n- Sheldon Els\n- Sobolev Nikita\n- Stephen M. Coakley\n- szwathub\n\n\n[packages-main]: https://github.com/oh-my-fish/packages-main\n[2]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v2\n[3]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v3\n[4]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v4\n[5]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v5\n[6]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v6\n[7]: https://github.com/oh-my-fish/oh-my-fish/releases/tag/v7\n[#191]: https://github.com/oh-my-fish/oh-my-fish/issues/191\n[#217]: https://github.com/oh-my-fish/oh-my-fish/issues/217\n[#235]: https://github.com/oh-my-fish/oh-my-fish/pull/235\n[#238]: https://github.com/oh-my-fish/oh-my-fish/pull/238\n[#242]: https://github.com/oh-my-fish/oh-my-fish/pull/242\n[#247]: https://github.com/oh-my-fish/oh-my-fish/pull/247\n[#250]: https://github.com/oh-my-fish/oh-my-fish/pull/250\n[#266]: https://github.com/oh-my-fish/oh-my-fish/pull/266\n[#268]: https://github.com/oh-my-fish/oh-my-fish/pull/268\n[#274]: https://github.com/oh-my-fish/oh-my-fish/issues/274\n[#280]: https://github.com/oh-my-fish/oh-my-fish/pull/280\n[#285]: https://github.com/oh-my-fish/oh-my-fish/pull/285\n[#286]: https://github.com/oh-my-fish/oh-my-fish/pull/286\n[#287]: https://github.com/oh-my-fish/oh-my-fish/pull/287\n[#289]: https://github.com/oh-my-fish/oh-my-fish/pull/289\n[#291]: https://github.com/oh-my-fish/oh-my-fish/pull/291\n[#293]: https://github.com/oh-my-fish/oh-my-fish/pull/293\n[#305]: https://github.com/oh-my-fish/oh-my-fish/pull/305\n[#310]: https://github.com/oh-my-fish/oh-my-fish/pull/310\n[#314]: https://github.com/oh-my-fish/oh-my-fish/pull/314\n[#325]: https://github.com/oh-my-fish/oh-my-fish/pull/325\n[#327]: https://github.com/oh-my-fish/oh-my-fish/pull/327\n[#330]: https://github.com/oh-my-fish/oh-my-fish/pull/330\n[#333]: https://github.com/oh-my-fish/oh-my-fish/pull/333\n[#334]: https://github.com/oh-my-fish/oh-my-fish/pull/334\n[#335]: https://github.com/oh-my-fish/oh-my-fish/pull/335\n[#343]: https://github.com/oh-my-fish/oh-my-fish/pull/343\n[#345]: https://github.com/oh-my-fish/oh-my-fish/pull/345\n[#354]: https://github.com/oh-my-fish/oh-my-fish/pull/354\n[#355]: https://github.com/oh-my-fish/oh-my-fish/pull/355\n[#361]: https://github.com/oh-my-fish/oh-my-fish/pull/361\n[#365]: https://github.com/oh-my-fish/oh-my-fish/pull/365\n[#366]: https://github.com/oh-my-fish/oh-my-fish/pull/366\n[#368]: https://github.com/oh-my-fish/oh-my-fish/pull/368\n[#369]: https://github.com/oh-my-fish/oh-my-fish/pull/369\n[#370]: https://github.com/oh-my-fish/oh-my-fish/pull/370\n[#371]: https://github.com/oh-my-fish/oh-my-fish/pull/371\n[#373]: https://github.com/oh-my-fish/oh-my-fish/pull/373\n[#378]: https://github.com/oh-my-fish/oh-my-fish/pull/378\n[#379]: https://github.com/oh-my-fish/oh-my-fish/issues/379\n[#380]: https://github.com/oh-my-fish/oh-my-fish/pull/380\n[#381]: https://github.com/oh-my-fish/oh-my-fish/pull/381\n[#385]: https://github.com/oh-my-fish/oh-my-fish/pull/385\n[#394]: https://github.com/oh-my-fish/oh-my-fish/pull/394\n[#399]: https://github.com/oh-my-fish/oh-my-fish/pull/399\n[#401]: https://github.com/oh-my-fish/oh-my-fish/issues/401\n[#403]: https://github.com/oh-my-fish/oh-my-fish/pull/403\n[#418]: https://github.com/oh-my-fish/oh-my-fish/pull/418\n[#426]: https://github.com/oh-my-fish/oh-my-fish/pull/426\n[#427]: https://github.com/oh-my-fish/oh-my-fish/pull/427\n[#435]: https://github.com/oh-my-fish/oh-my-fish/pull/435\n[#440]: https://github.com/oh-my-fish/oh-my-fish/issues/440\n[#444]: https://github.com/oh-my-fish/oh-my-fish/issues/444\n[#446]: https://github.com/oh-my-fish/oh-my-fish/pull/446\n[#456]: https://github.com/oh-my-fish/oh-my-fish/pull/456\n[#457]: https://github.com/oh-my-fish/oh-my-fish/pull/457\n[#458]: https://github.com/oh-my-fish/oh-my-fish/pull/458\n[#459]: https://github.com/oh-my-fish/oh-my-fish/pull/459\n[#464]: https://github.com/oh-my-fish/oh-my-fish/pull/464\n[#472]: https://github.com/oh-my-fish/oh-my-fish/pull/472\n[#479]: https://github.com/oh-my-fish/oh-my-fish/issues/479\n[#481]: https://github.com/oh-my-fish/oh-my-fish/pull/481\n[#482]: https://github.com/oh-my-fish/oh-my-fish/issues/482\n[#485]: https://github.com/oh-my-fish/oh-my-fish/pull/485\n[#490]: https://github.com/oh-my-fish/oh-my-fish/pull/490\n[#493]: https://github.com/oh-my-fish/oh-my-fish/pull/493\n[#494]: https://github.com/oh-my-fish/oh-my-fish/issues/494\n[#495]: https://github.com/oh-my-fish/oh-my-fish/pull/495\n[#502]: https://github.com/oh-my-fish/oh-my-fish/pull/502\n[#503]: https://github.com/oh-my-fish/oh-my-fish/pull/503\n[#504]: https://github.com/oh-my-fish/oh-my-fish/pull/504\n[#505]: https://github.com/oh-my-fish/oh-my-fish/pull/505\n[#507]: https://github.com/oh-my-fish/oh-my-fish/pull/507\n[#508]: https://github.com/oh-my-fish/oh-my-fish/pull/508\n[#509]: https://github.com/oh-my-fish/oh-my-fish/issues/509\n[#512]: https://github.com/oh-my-fish/oh-my-fish/pull/512\n[#520]: https://github.com/oh-my-fish/oh-my-fish/pull/520\n[#529]: https://github.com/oh-my-fish/oh-my-fish/issues/529\n[#530]: https://github.com/oh-my-fish/oh-my-fish/pull/530\n[#543]: https://github.com/oh-my-fish/oh-my-fish/pull/543\n[#546]: https://github.com/oh-my-fish/oh-my-fish/pull/546\n[#548]: https://github.com/oh-my-fish/oh-my-fish/pull/548\n[#570]: https://github.com/oh-my-fish/oh-my-fish/pull/570\n[#577]: https://github.com/oh-my-fish/oh-my-fish/issues/577\n[#596]: https://github.com/oh-my-fish/oh-my-fish/pull/596\n[#603]: https://github.com/oh-my-fish/oh-my-fish/pull/603\n[#609]: https://github.com/oh-my-fish/oh-my-fish/issues/609\n[#618]: https://github.com/oh-my-fish/oh-my-fish/pull/618\n[#640]: https://github.com/oh-my-fish/oh-my-fish/pull/640\n[#644]: https://github.com/oh-my-fish/oh-my-fish/issues/644\n[#653]: https://github.com/oh-my-fish/oh-my-fish/pull/653\n[#662]: https://github.com/oh-my-fish/oh-my-fish/pull/662\n[#666]: https://github.com/oh-my-fish/oh-my-fish/pull/666\n[#691]: https://github.com/oh-my-fish/oh-my-fish/pull/691\n[#694]: https://github.com/oh-my-fish/oh-my-fish/pull/694\n[#696]: https://github.com/oh-my-fish/oh-my-fish/pull/696\n[#699]: https://github.com/oh-my-fish/oh-my-fish/pull/699\n[#706]: https://github.com/oh-my-fish/oh-my-fish/pull/706\n[#708]: https://github.com/oh-my-fish/oh-my-fish/pull/708\n[#709]: https://github.com/oh-my-fish/oh-my-fish/pull/709\n[#710]: https://github.com/oh-my-fish/oh-my-fish/pull/710\n[#711]: https://github.com/oh-my-fish/oh-my-fish/pull/711\n[#713]: https://github.com/oh-my-fish/oh-my-fish/pull/713\n[#724]: https://github.com/oh-my-fish/oh-my-fish/pull/724\n[#737]: https://github.com/oh-my-fish/oh-my-fish/issues/737\n[#738]: https://github.com/oh-my-fish/oh-my-fish/issues/738\n[#739]: https://github.com/oh-my-fish/oh-my-fish/pull/739\n[#740]: https://github.com/oh-my-fish/oh-my-fish/pull/740\n[#742]: https://github.com/oh-my-fish/oh-my-fish/pull/742\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.048828125,
          "content": "*       @oh-my-fish/core\ndocs/*  @oh-my-fish/docs\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.3154296875,
          "content": "<img src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"128px\" height=\"128px\"/>\n<img align=\"left\" width=\"0\" height=\"128px\"/>\n\n# Contributing\n\n> Oh My Fish Documentation\n\n<br>\n\n## Summary\n\n* [Issues](#bugs-and-discussions)\n* [Packages](#package-repositories)\n* [Commit Messages](#commit-messages)\n* [Code Style](#code-style)\n\nThanks for taking the time to read this guide! Oh My Fish is an open initiative and everyone is welcome to contribute!\n\n## Bugs and discussions\n\nFeel free to [open an issue](https://github.com/oh-my-fish/oh-my-fish/issues) for bug reports and discussing ideas.\n\nWhen reporting bugs be sure to always fill the checklist below with data from your environment to help us debug your issue:\n\n* Operating System: Arch Linux\n* Fish Version: 2.3 (get using `fish --version`)\n* Oh My Fish Version: 2  (get using `omf --version`)\n* Git version: 1.9.5 (get using `git --version`)\n\nWhen you have a new feature or large change in mind, please open a new issue with your suggestion to discuss the idea together.\n\n### Issue triage [![Open Source Helpers](https://www.codetriage.com/oh-my-fish/oh-my-fish/badges/users.svg)](https://www.codetriage.com/oh-my-fish/oh-my-fish)\n\nYou can contribute by triaging issues which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to oh-my-fish on CodeTriage](https://www.codetriage.com/oh-my-fish/oh-my-fish).\n\n## Package Repositories\n\nThis is the repository for the core Oh My Fish framework and bootstrap installer.\n\nIf your issue is related to a specific package, we still may be able to help, but consider visiting that package's issue tracker first.\n\n## Commit Messages\n\n+ Use [present tense](https://simple.wikipedia.org/wiki/Present_tense): \"add awesome-package\", not \"added ...\"\n+ Use preceding subsystem when applicable: \"registry: add theme foobar\"\n+ 50 characters or less for the first line of your commit\n+ Use of [emoji](http://www.emoji-cheat-sheet.com/) is free\n\n## Code Style\n\nDifferent from Fish's code style, Oh My Fish uses 2 spaces for indentation. As fish language is very clean it's possible to use 2 spaces without making hard work with the code. Here goes some other styles we are using:\n\n### Control Flow\n\nWhen using `and` / `or` statements be sure to always break and indent.\n\n```fish\nset -q VAR\n  or set -g VAR 42\n```\n\n### Functions\n\nUse named arguments `-a`:\n\n```fish\nfunction greet -a message\n  echo \"$message\"\nend\n```\n\nUse `-d` description fields:\n\n```fish\nfunction greet -a message -d \"Display a greeting message\"\n  echo \"$message\"\nend\n```\n\nIn order to avoid name collisions, use a prefix based on the name of your package. For example, if you are writing a `ninja` package, use `ninja.function_name`.\n\n\n### Private Functions\n\n`fish` does not have private functions, so in order to avoid polluting the global namespace you have a few options:\n\n\n+ Use double underscore before your function name. For example, if you are writing a `ninja` package using `__ninja.function_name`.\n\n+ Delete the function before returning using `functions -e function_name`\n\n  ```fish\n  function public_func\n    function private_func\n      # ...\n      functions -e private_func\n    end\n  end\n  ```\n  \n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1171875,
          "content": "FROM ohmyfish/fish:2.5.0\n\nCOPY . /src/oh-my-fish\n\nRUN fish /src/oh-my-fish/bin/install --offline --noninteractive --yes\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2018 Oh My Fish!\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.4599609375,
          "content": "> ⚠️ Oh My Fish has been unmaintained for years, and certain parts of it may not work for you. A few themes and packages are currently broken, and the code is due a significant overhaul. The current set of maintainers have ran out of steam, so if you are interested in becoming a maintainer send an email to *oh-my-fish [at] googlegroups.com*.\n\n<img src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"192px\" height=\"192px\"/>\n<img align=\"left\" width=\"0\" height=\"192px\" hspace=\"10\"/>\n\n> The <a href=\"http://fishshell.com\">Fishshell</a> Framework\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE) [![Fish Shell Version](https://img.shields.io/badge/fish-≥v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com) [![Build](https://github.com/oh-my-fish/oh-my-fish/workflows/Build/badge.svg)](https://github.com/oh-my-fish/oh-my-fish/actions?query=workflow%3ABuild)\n\n\nOh My Fish provides core infrastructure to allow you to install packages which extend or modify the look of your shell. It's fast, extensible and easy to use.\n\n> Also in&nbsp;\n> <a href=\"docs/es-ES/README.md\">🇪🇸</a>\n> <a href=\"docs/nl-NL/README.md\">🇳🇱</a>\n> <a href=\"docs/pt-BR/README.md\">🇧🇷</a>\n> <a href=\"docs/ru-RU/README.md\">🇷🇺</a>\n> <a href=\"docs/uk-UA/README.md\">🇺🇦</a>\n> <a href=\"docs/zh-CN/README.md\">🇨🇳</a>\n\n<br>\n\n## Table of contents\n* [Installation](#installation)\n* [Getting Started (command descriptions)](#getting-started)\n* [Advanced](#advanced)\n  * [Startup](#startup)\n  * [Dotfiles](#dotfiles)\n* [Creating Packages](#creating-packages)\n\n## Installation\n\nYou can get started right away with the default setup by running this in your terminal:\n\n```fish\ncurl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish\n```\n\nThis will download the installer script and start the installation. Alternatively, you can download the installer and customize your install:\n\n```fish\ncurl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install > install\nfish install --path=~/.local/share/omf --config=~/.config/omf\n```\n\nYou can verify the integrity of the downloaded installer by verifying the script against [this checksum](bin/install.sha256):\n\n```\ncurl -sL https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install.sha256 | shasum -a 256 --check\n```\n\nYou can also install Oh My Fish with Git or with an offline source tarball downloaded from the [releases page][releases]:\n\n```fish\n# with git\n$ git clone https://github.com/oh-my-fish/oh-my-fish\n$ cd oh-my-fish\n$ bin/install --offline\n# with a tarball\n$ curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install > install\n$ fish install --offline=omf.tar.gz\n```\n\nRun `install --help` for a complete list of install options you can customize.\n\n#### Requirements\n\n- **fish** shell, version 2.2 or later\n- **git**, version 1.9.5 or later\n\n#### Known Issues\n\n- Due to a regression bug in fish 2.6 with some terminal emulators, right prompts make the shell unusable.\n  OMF's `default` theme features a right prompt, so it's necessary to use an alternative theme until a fix is released.\n  (see [#541](https://github.com/oh-my-fish/oh-my-fish/issues/541))\n\n\n## Getting Started\n\nOh My Fish includes a small utility `omf` to fetch and install new packages and themes.\n\n#### `omf update` _`[omf]`_ _`[<package>...]`_\n\nUpdate Oh My Fish, all package repositories, and all installed packages.\n\n- When called without arguments, update core and all installed packages.\n- You can choose to update only the core, by running `omf update omf`.\n- For selective package update, list only the names of packages you wish to\n  update. You may still include \"omf\" in the list to update the core as well.\n\n#### `omf install` _`[<name>|<url>|<user/repo>]`_\n\nInstall one _or more_ packages.\n\n- You can install packages directly by URL via `omf install URL`\n- You can install packages from a GitHub repository via `omf install user/repo`\n- When called without arguments, install missing packages from [bundle](#dotfiles).\n\n#### `omf repositories` _`[list|add|remove]`_\n\nManage user-installed package repositories. Package repositories are where packages come from used by commands like `omf install`. By default the [official repository](https://github.com/oh-my-fish/packages-main) is always installed and available.\n\n#### `omf list`\n\nList installed packages.\n\n#### `omf theme` _`<theme>`_\n\nApply a theme. To list available themes, type `omf theme`. You can also [preview available themes](./docs/Themes.md) before installing.\n\n#### `omf remove` _`<name>`_\n\nRemove a theme or package. If a package was installed via `user/repo`, use `repo` for `name`.\n\n> Packages can use uninstall hooks, so custom cleanup of resources can be done when uninstalling it. See [Uninstall](/docs/en-US/Packages.md#uninstall) for more information.\n\n#### `omf reload`\n\nReload Oh My Fish and all plugins by using `exec` to replace current shell process with a brand new.\n\n> This command tries to be as safe as possible, mitigating side-effects caused by `exec` and preventing the reload in case of background processes.\n\n#### `omf new plugin | theme` _`<name>`_\n\nScaffold out a new plugin or theme.\n\n> This creates a new directory under `$OMF_CONFIG/{pkg | themes}/` with a template.\n\n#### `omf search` _`-t|--theme / -p|--package`_ _`<name>`_\n\nSearches Oh My Fish's database for a given package, theme or both. It also supports fuzzy search, so if you are not sure of the name you can simply `omf search simple`.\n\n#### `omf channel`\n\nGets or changes the update channel.\n\nTwo channels are available by default: the `stable` channel provides stable updates with the latest tagged version of Oh My Fish, and `dev` which provides the latest changes under development. The update channel currently set determines what version `omf update` will upgrade to.\n\n#### `omf doctor`\n\nUse to troubleshoot before [opening an issue][omf-issues-new].\n\n#### `omf destroy`\n\nUninstall Oh My Fish.\n\n## Advanced\n\nOh My Fish installer adds a snippet to fish's user config files (`~/.config/fish/conf.d/`) which calls OMF's startup code.\n\nNotice that the scripts in that directory are sourced in the order that the filesystem sees them,\nand so it may be necessary to prefix your script files with ordering numbers.\n\nFor example: `a_script.fish` will take precedence over the `omf.fish` snippet.\nSo if `a_script.fish` depends on plugins managed by OMF, consider renaming the script file to `xx_a_script.fish`.\n\nSimilarly, to make sure that a script runs before `omf.fish`, you may prefix it with `00_`.\nAlternatively, `~/.config/omf/before.init.fish` may be used.\n\n### Startup\n\nEvery time you open a new shell, the startup code initializes Oh My Fish installation path and the _config_ path (`~/.config/omf` by default),\nsourcing the [`init.fish`](init.fish) script afterwards, which autoloads packages, themes and your custom init files.\n\nFor more information check the [FAQ](docs/en-US/FAQ.md#what-does-oh-my-fish-do-exactly).\n\n### Dotfiles\n\nThe `$OMF_CONFIG` directory represents the user state of Oh My Fish. It is the perfect\ncandidate for being added to your dotfiles and/or checked out to version control. There you can find three important files:\n\n- __`theme`__ - The current theme\n- __`bundle`__ - List of currently installed packages/themes\n- __`channel`__ - The channel from which OMF gets updates (stable / dev)\n\nAnd you may create and customize these special files:\n\n- __`init.fish`__ - Custom script sourced after shell start\n- __`before.init.fish`__ - Custom script sourced before shell start\n- __`key_bindings.fish`__ - Custom key bindings where you can use the `bind` command freely\n\n#### Setting variables in `init.fish`\n\nOne of the most common startup commands used in `init.fish` is variables definition. Quite likely, such variables need to be available in any shell session. To achieve this, define them globally. For example:\n\n```fish\n# Golang developers might need this one\nset -xg GOPATH $HOME/gocode\n\n# Python developers otherwise\nset -xg PYTHONDONTWRITEBYTECODE 1\n```\n\n#### About the bundle\n\nEvery time a package/theme is installed or removed, the `bundle` file is updated. You can also edit it manually and run `omf install` afterwards to satisfy the changes. Please note that while packages/themes added to the bundle get automatically installed, a package/theme removed from bundle isn't removed from user installation.\n\n#### Older fish versions\n\nIn fish 2.2, there is no `conf.d` directory, so the startup code has to be placed in the fish config file (`~/.config/fish/config.fish`).\n\nIt's highly recommended that your custom startup commands go into `init.fish` file instead of `~/.config/fish/config.fish`, as this allows you to keep the whole `$OMF_CONFIG` directory under version control.\n\nIf you need startup commands to be run *before* Oh My Fish begins loading plugins, place them in `before.init.fish` instead. If you're unsure, it is usually best to put things in `init.fish`.\n\n## Creating Packages\n\nOh My Fish uses an advanced and well defined plugin architecture to ease plugin development, including init/uninstall hooks, function and completion autoloading. [See the packages documentation](docs/en-US/Packages.md) for more details.\n\n\n[fishshell]: http://fishshell.com\n[contributors]: https://github.com/oh-my-fish/oh-my-fish/graphs/contributors\n[omf-pulls-link]: https://github.com/oh-my-fish/oh-my-fish/pulls\n[omf-issues-new]: https://github.com/oh-my-fish/oh-my-fish/issues/new\n[releases]: https://github.com/oh-my-fish/oh-my-fish/releases\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6904296875,
          "content": "# Security Policy\n\n<!-- ## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 5.1.x   | :white_check_mark: |\n| 5.0.x   | :x:                |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                | -->\n\n## Reporting a Vulnerability\n\nTo report a vulnerability, please contact the current maintainer:\n\nhttps://github.com/scorphus (keybase: https://keybase.io/pablito)\n\n<!-- Tell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.fish",
          "type": "blob",
          "size": 2.2119140625,
          "content": "# Set OMF_CONFIG if not set.\nif not set -q OMF_CONFIG\n  set -q XDG_CONFIG_HOME; or set -l XDG_CONFIG_HOME \"$HOME/.config\"\n  set -gx OMF_CONFIG \"$XDG_CONFIG_HOME/omf\"\nend\n# Source custom before.init.fish file\ntest -f $OMF_CONFIG/before.init.fish\n  and source $OMF_CONFIG/before.init.fish 2> /dev/null\nemit perf:timer:start \"Oh My Fish initialisation\"\n# Read current theme\ntest -f $OMF_CONFIG/theme\n  and read -l theme < $OMF_CONFIG/theme\n  or set -l theme default\n# Prepare Oh My Fish paths\nset -l core_function_path $OMF_PATH/lib{,/git}\nset -l theme_function_path {$OMF_CONFIG,$OMF_PATH}/themes*/$theme{,/functions}\n# Autoload core library\nset fish_function_path $fish_function_path[1] \\\n                       $core_function_path \\\n                       $theme_function_path \\\n                       $fish_function_path[2..-1]\n# Require all packages\nemit perf:timer:start \"Oh My Fish init installed packages\"\nrequire --path {$OMF_PATH,$OMF_CONFIG}/pkg/*\nemit perf:timer:finish \"Oh My Fish init installed packages\"\n# Backup key bindings\nfunctions -q fish_user_key_bindings\n  and not functions -q __original_fish_user_key_bindings\n  and functions -c fish_user_key_bindings __original_fish_user_key_bindings\n# Override key bindings, calling original if existent\nfunction fish_user_key_bindings\n  test -f $OMF_CONFIG/theme\n    and read -l theme < $OMF_CONFIG/theme\n    or set -l theme default\n  test -e $OMF_CONFIG/key_bindings.fish;\n    and source $OMF_CONFIG/key_bindings.fish\n  # Prepare packages key bindings paths\n  set -l key_bindings {$OMF_CONFIG,$OMF_PATH}/pkg/*/key_bindings.fish \\\n                      {$OMF_CONFIG,$OMF_PATH}/themes*/$theme/key_bindings.fish\n  # Source all keybindings collected\n  for file in $key_bindings\n    source $file\n  end\n  # Call original key bindings if existent\n  functions -q __original_fish_user_key_bindings\n    and __original_fish_user_key_bindings\nend\nemit perf:timer:start \"Oh My Fish init user config path\"\nrequire --no-bundle --path $OMF_CONFIG\nemit perf:timer:finish \"Oh My Fish init user config path\"\n# Load conf.d for current theme if exists\nset -l theme_conf_path {$OMF_CONFIG,$OMF_PATH}/themes*/$theme/conf.d\nfor conf in $theme_conf_path/*.fish\n  source $conf\nend\nemit perf:timer:finish \"Oh My Fish initialisation\"\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "repositories",
          "type": "blob",
          "size": 0.0498046875,
          "content": "https://github.com/oh-my-fish/packages-main master\n"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}