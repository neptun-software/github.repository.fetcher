{
  "metadata": {
    "timestamp": 1736568923311,
    "page": 10,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tj/n",
      "stars": 18983,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4228515625,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\ntab_width = 2\ntrim_trailing_whitespace = true\n\n# Tab indentation (no size specified)\n[{Makefile,makefile}]\nindent_style = tab\n\n[*.md]\n# indent 4 for code blocks\nindent_size = 4\n# preserve trailing space for line breaks\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0400390625,
          "content": ".DS_Store\nnode_modules\ntest/proxy~~.dump\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.0576171875,
          "content": "{\n  \"ul-indent\": { \"indent\": 4 },\n  \"line-length\": false\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 17.6455078125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n<!-- markdownlint-disable MD024 -->\n\n## [Unreleased] (date goes here)\n\n## [10.1.0] (2024-11-09)\n\n### Added\n\n- `--cleanup` option to delete cached version after install for a one-shot install ([#818])\n- `download` command to download Node.js version into cache ([#821])\n- document using `--download` with run/exec/which in README\n- support trailing comments in `.nvmrc` file ([#820])\n- mask password in download URL when displayed ([#815])\n\n### Changed\n\n- removed stale code ([#817])\n\n## [10.0.0] (2024-09-06)\n\nThe major version bump is due to using `jq` in preference to `node` for reading `package.json`.\n\n### Changed\n\n- if `jq` is available, use `jq` for reading `engines` from `package.json` instead of using `node` ([#810])\n- avoid a network lookup if auto or engine find a fully specified numeric version. ([#813])\n\n## [9.2.3] (2024-04-21)\n\n### Fixed\n\n- avoid problems with `curl` 8.7.1 and `--compressed` by removing option until fixed\n\n## [9.2.2] (2024-04-21)\n\n(No changes.)\n\n## [9.2.1] (2024-02-25)\n\n### Fixed\n\n- `n doctor` works with custom `N_CACHE_PREFIX`\n\n### Added\n\n- expand tests in `n doctor` for folder existence and permissions\n\n## [9.2.0] (2023-10-15)\n\n### Added\n\n- `--offline` for resolving target version against cached downloads instead of internet lookup ([#785])\n\n## [9.1.0] (2023-04-15)\n\n### Added\n\n- check for possible problem with multiple `npm` locations when running `n doctor` ([#764])\n\n## [9.0.1] (2022-11-04)\n\n### Fixed\n\n- `Makefile` compatible with more flavours of `make` ([#745])\n- quote paths in `Makefile` in case `PREFIX` contains spaces ([#746])\n\n## [9.0.0] (2022-07-16)\n\n### Changed\n\n- `--preserve` preserves `corepack` too ([#736])\n\n### Added\n\n- optional `N_PRESERVE_COREPACK` to change default behaviour for preserving `corepack` ([#736])\n\n## [8.2.0] (2022-04-18)\n\n### Added\n\n- log before copying files during install ([#720])\n\n## [8.1.0] (2022-03-18)\n\n### Added\n\n- optional `N_CACHE_PREFIX` for separate location for downloaded files than install location ([#717])\n\n## [8.0.2] (2022-01-09)\n\n### Fixed\n\n- improved warning message when utility location hash may be holding old location to cover a wider range of shells including dash ([#707])\n\n## [8.0.1] (2021-12-04)\n\n### Fixed\n\n- improve error handling for tar extraction errors ([#701])\n- add tar flag for compatibility with tar builds which do not default to stdin ([#697])\n\n## [8.0.0] (2021-10-23)\n\n### Changed\n\n- display error if version missing in version file for `n auto` and `n engine` (rather than fallback to current) ([#693])\n\n## [7.5.0] (2021-09-26)\n\n### Added\n\n- support for Corepack (which was added to Node.js in v16.9.0)\n\n## [7.4.1] (2021-09-11)\n\n### Fixed\n\n- run commands from correct directory after `--download` causes a download\n\n## [7.4.0] (2021-09-10)\n\n### Added\n\n- support for `--download` option to `run` and `exec` to download the target version when needed ([#685])\n\n## [7.3.1] (2021-07-25)\n\n### Changed\n\n- Improved README for new users missing expected folders in `/usr/local` ([#679])\n\n## [7.3.0] (2021-06-06)\n\n### Added\n\n- ls-remote supports `engine` and `auto` labels ([#675])\n- reduce `engine` and `auto` logging with `--quiet` ([#675])\n- add WSL support to README ([#676])\n- support for Emacs up and down keys (`ctrl-p` and `ctrl-n`) ([#669])\n\n### Changed\n\n- diagnostic logging during processing of engine and auto written to stderr rather than stdout ([#675])\n\n## [7.2.2] (2021-04-25)\n\n### Fixed\n\n- arrow key navigation of version menu when terminal in application mode (e.g. PowerShell on Mac) ([#668])\n\n## [7.2.1] (2021-04-19)\n\n### Added\n\n- install native arm64 Node.js on Macs with Apple silicon for Node.js 16 and higher ([#664])\n\n## [7.2.0] (2021-04-19) [YANKED]\n\nReleased off wrong branch, essentially same as 7.1.0.\n\n## [7.1.0] (2021-03-12)\n\n### Added\n\n- support installs where /usr/local/share/man is a symlink (such as archlinux)\n- remove requirement for rsync for --preserve\n- avoid install pollution if user installs global packages when using n exec\n\n## [7.0.2] (2021-02-27)\n\n### Fixed\n\n- consistently log to STDOUT ([#654])\n\n## [7.0.1] (2021-01-30)\n\n### Changed\n\n- update bats, and use bats-assert for better unit test failure messages\n\n### Fixed\n\n- fail to display error in some cases for missing both `curl` and `wget` ([#649])\n\n## [7.0.0] (2020-12-20)\n\n### Changed\n\n- `auto` label now scans for `package.json` only if it can not find a version control file ([#644])\n\n### Added\n\n- `engine` label to look for `engines.node` in `package.json` (as used by`auto`) ([#644])\n\n### Fixed\n\n- avoid colorized grep output via `GREP_OPTIONS` breaking version lookup ([#643])\n\n## [6.8.0] (2020-12-12)\n\n### Fixed\n\n- suppress unwanted warning during `auto` when using npx with npm 7\n- temporary fix for installing on Mac with Apple M1 chip, look for x64 versions of node as arm64 not available yet\n\n## [6.7.1] (2020-11-25)\n\n### Fixed\n\n- detect and handle a failed download of full archive ([#635])\n\n## [6.7.0] (2020-07-25)\n\n### Added\n\n- `auto` support for:\n    - `.node-version`\n    - `.nvmrc`\n    - `engines` field of `package.json`\n\n## [6.6.0] (2020-07-04)\n\n### Added\n\n- labels for node support aliases, such as `lts_latest`\n\n### Fixed\n\n- Enable `xz` support by default for macOS 11+ ([#624])\n\n## [6.5.1] (2020-04-11)\n\n### Added\n\n- specify `auto` to read the target version from a `.n-node-version` file (i.e. change filename)\n\n## [6.5.0] (2020-04-11) [YANKED]\n\n### Added\n\n- specify `auto` to read the target version from a `.node-version` file ([#616])\n\n## [6.4.0] (2020-03-10)\n\n### Added\n\n- treat `armv8l` as `arm64` ([#614])\n\n## [6.3.1] (2020-02-25)\n\n### Fixed\n\n- remove old version of node before copy to avoid firewall issues on macOS ([#394])\n\n## [6.3.0] (2020-02-24)\n\n### Added\n\n- `--preserve` to preserve npm and npx during install of node ([#587])\n\n## [6.2.0] (2020-01-29)\n\n### Added\n\n- Downloads now default to using tarballs compressed by `xz` over `gzip`, if `xz` support detected. ([#606] [#607])\n\n## [6.1.3] (2019-11-23)\n\n### Added\n\n- added How It Works to README\n\n### Changed\n\n- simplified layout for `n doctor` output\n\n## [6.1.2] (2019-11-16)\n\n### Added\n\n- advice to reset command hash when node location changes ([#170] [#381] [#451] [#588])\n- in README describe raw download of `n` to bootstrap install of node and npm\n\n## [6.1.1] (2019-11-10)\n\n### Fixed\n\n- Specify `--no-same-owner` for tarball extraction so cache files not owned by unexpected user (when run with sudo) ([#593])\n\n## [6.1.0] (2019-10-25)\n\n### Added\n\n- deletion of cached versions from menu using 'd' ([#590])\n\n## [6.0.1] (2019-08-20)\n\n### Fixed\n\n- allow options to come after commands, especially `n lsr --all`\n\n## [6.0.0] (2019-08-16)\n\n### Added\n\n- version specified using release stream codenames, like `argon` ([#423])\n- version specified using nightly et al ([#376])\n- `n exec` for running arbitrary command with node and npm in `PATH` ([#185])\n- `n run` with legacy aliases of `as` and `use`\n- `n lsr` for listing matching remote versions, limited to 20 by default ([#383])\n- `n doctor` for displaying diagnostic information\n- `n install` for people used to other products with this command ([#524])\n- `--insecure` to disable curl/wget certificate checks\n- added npm version to installed message ([#210] [#484] [#574])\n  \n### Changed\n\n- **Breaking** wget now checks certificates (secure by default, same as curl setup). (#475 #509)\n- failure messages go to stderr instead of stdout\n- prefixed `N_NODE_MIRROR` to eventually replace `NODE_MIRROR`\n- **Breaking** `n ls` now lists local download versions (rather than remote versions)\n- lookup available versions using `index.tab` rather than screen-scraping (#560)\n\n### Fixed\n\n- download errors display informative message, instead of just `Invalid version` ([#482] [#492] et al)\n- improve reliability of downloads from custom node mirrors, including removing broken `is_oss_ok` ([#560])\n- restrict downloads to versions with architecture available ([#463])\n\n### Removed\n\n- **Breaking** support for `PROJECT_NAME` and `PROJECT_URL` for custom downloads ([#342])\n\n## [5.0.2] (2019-08-02)\n\n### Added\n\n- instructions to bottom of menu version selection\n\n## [5.0.1] (2019-07-20)\n\n### Changed\n\n- removed reference to prerelease version of v5.0.0 from README\n\n## [5.0.0] (2019-07-20)\n\n### Added\n\n- log message after install from cache (previously silent)\n- extra logging after install if the active and installed node locations are different\n- support for [NO_COLOR](https://no-color.org) and [CLICOLOR=0](https://bixense.com/clicolors)\n- suppress progress and colour if not interactive tty\n- define `N_USE_XZ` to download `.xz` compressed archives instead of `.gz` archives\n  \n### Changed\n\n- reinstalling active node version always does reinstall (previously silently did nothing)\n- log message for installing using menu now same format as `npm install` message\n- updates to GitHub templates and guidelines for contributing et al\n\n## [4.1.0] (2019-05-10)\n\n### Added\n\n- 'n uninstall` to remove node and npm\n- describe `NODE_MIRROR` in `README`\n\n### Removed\n\n- `PROJECT_NAME` and `PROJECT_URL` from `README`. First step to deprecating `n project`. Open an issue if you still need this!\n\n## [4.0.0] (2019-05-05)\n\nOnly minor functional changes, but technically could break scripts relying on specific behaviour.\n\n### Fixed\n\n- remove trailing space from `bin` output [#456]\n\n### Added\n\n- development tests [#545]\n\n### Changed\n\n- internal: improve shell script based on ShellCheck suggestions, quoting variables use etc [#187] [#465]\n- put single quote marks around parameters to clarify error messages [#485]\n- update terminology to be more careful with current/latest [#522]\n\n## [3.0.2] (2019-04-07)\n\n### Added\n\n- instructions to avoid need for `sudo` when installing to `/usr/local`  [#416] [#562]\n\n### Fixed\n\n- permission denied errors when running read-only commands without sudo [#416]\n\n## [3.0.1] (2019-04-05)\n\n### Added\n\n- install instruction using Homebrew (macOS) [#534]\n- Table of Contents to README [#466]\n\n### Fixed\n\n- lts lookup on node mirrors which don't purge old versions (e.g. taobao) [#512]\n- hide cursor while selecting version from menu [#528]\n\n### Removed\n\n- gitter badge from README, as gitter chatroom inactive\n- inactive Core Team from README\n- instructions for scripted install of npm from README, which should no longer be needed and not working on Mac [#536]\n\n## [3.0.0] (2019-03-29)\n\n### Added\n\n- detect arm64 architecture [#448][] [#521][]\n\n### Changed\n\n- allow `n rm` of active version of node [#541][] [#169][] [#327][] [#441][]\n- show more version examples in README, including partial version number [#548][]\n- updated description of interactive version selection [#518][]\n- make (old) stable an alias for lts [#467][] [#335][]\n- replace use of `which` with more standard `command -v` [#532][]\n\n### Fixed\n\n- error messages when selecting from version menu if active node version not listed [#541][] [#292][] [#367][] [#391][] [#400][]\n- removed inappropriate `shift` from prune function [#531][] [#529][]\n\n### Removed\n\n- Remove old io project support [#516][] [#331][]\n\n<!-- reference links for issues and pull requests -->\n\n[#169]: https://github.com/tj/n/issues/169\n[#170]: https://github.com/tj/n/issues/170\n[#185]: https://github.com/tj/n/issues/185\n[#187]: https://github.com/tj/n/issues/187\n[#210]: https://github.com/tj/n/issues/210\n[#292]: https://github.com/tj/n/issues/292\n[#327]: https://github.com/tj/n/issues/327\n[#331]: https://github.com/tj/n/issues/331\n[#335]: https://github.com/tj/n/issues/335\n[#342]: https://github.com/tj/n/issues/342\n[#367]: https://github.com/tj/n/issues/367\n[#376]: https://github.com/tj/n/issues/376\n[#381]: https://github.com/tj/n/issues/381\n[#383]: https://github.com/tj/n/issues/383\n[#391]: https://github.com/tj/n/issues/391\n[#394]: https://github.com/tj/n/issues/394\n[#400]: https://github.com/tj/n/issues/400\n[#416]: https://github.com/tj/n/issues/416\n[#423]: https://github.com/tj/n/issues/423\n[#441]: https://github.com/tj/n/issues/441\n[#448]: https://github.com/tj/n/issues/448\n[#451]: https://github.com/tj/n/issues/451\n[#456]: https://github.com/tj/n/issues/456\n[#463]: https://github.com/tj/n/issues/463\n[#465]: https://github.com/tj/n/issues/465\n[#466]: https://github.com/tj/n/issues/466\n[#467]: https://github.com/tj/n/issues/467\n[#482]: https://github.com/tj/n/issues/482\n[#484]: https://github.com/tj/n/issues/484\n[#485]: https://github.com/tj/n/issues/485\n[#492]: https://github.com/tj/n/issues/492\n[#512]: https://github.com/tj/n/issues/512\n[#516]: https://github.com/tj/n/issues/516\n[#518]: https://github.com/tj/n/issues/518\n[#521]: https://github.com/tj/n/issues/521\n[#522]: https://github.com/tj/n/issues/522\n[#524]: https://github.com/tj/n/issues/524\n[#528]: https://github.com/tj/n/issues/528\n[#529]: https://github.com/tj/n/issues/529\n[#531]: https://github.com/tj/n/issues/531\n[#532]: https://github.com/tj/n/issues/532\n[#534]: https://github.com/tj/n/issues/534\n[#536]: https://github.com/tj/n/issues/536\n[#541]: https://github.com/tj/n/issues/541\n[#545]: https://github.com/tj/n/issues/545\n[#548]: https://github.com/tj/n/issues/548\n[#560]: https://github.com/tj/n/issues/560\n[#562]: https://github.com/tj/n/issues/562\n[#574]: https://github.com/tj/n/issues/574\n[#587]: https://github.com/tj/n/issues/587\n[#588]: https://github.com/tj/n/issues/588\n[#590]: https://github.com/tj/n/issues/590\n[#593]: https://github.com/tj/n/issues/593\n[#606]: https://github.com/tj/n/issues/606\n[#607]: https://github.com/tj/n/issues/607\n[#614]: https://github.com/tj/n/issues/614\n[#616]: https://github.com/tj/n/issues/616\n[#624]: https://github.com/tj/n/issues/624\n[#635]: https://github.com/tj/n/pull/635\n[#643]: https://github.com/tj/n/pull/643\n[#644]: https://github.com/tj/n/pull/644\n[#649]: https://github.com/tj/n/issues/649\n[#654]: https://github.com/tj/n/issues/654\n[#664]: https://github.com/tj/n/pull/664\n[#668]: https://github.com/tj/n/pull/668\n[#669]: https://github.com/tj/n/pull/669\n[#675]: https://github.com/tj/n/pull/675\n[#676]: https://github.com/tj/n/pull/676\n[#679]: https://github.com/tj/n/issues/679\n[#685]: https://github.com/tj/n/issues/685\n[#693]: https://github.com/tj/n/issues/693\n[#697]: https://github.com/tj/n/issues/697\n[#701]: https://github.com/tj/n/issues/701\n[#707]: https://github.com/tj/n/issues/707\n[#717]: https://github.com/tj/n/issues/717\n[#720]: https://github.com/tj/n/issues/720\n[#736]: https://github.com/tj/n/pull/736\n[#745]: https://github.com/tj/n/pull/745\n[#746]: https://github.com/tj/n/pull/746\n[#764]: https://github.com/tj/n/pull/764\n[#785]: https://github.com/tj/n/pull/785\n[#810]: https://github.com/tj/n/pull/810\n[#813]: https://github.com/tj/n/pull/813\n[#815]: https://github.com/tj/n/pull/815\n[#817]: https://github.com/tj/n/pull/817\n[#818]: https://github.com/tj/n/pull/818\n[#820]: https://github.com/tj/n/pull/820\n[#821]: https://github.com/tj/n/pull/821\n\n<!-- reference links for releases -->\n\n[Unreleased]: https://github.com/tj/n/compare/master...develop\n[10.1.0]: https://github.com/tj/n/compare/v10.0.0...v10.1.0\n[10.0.0]: https://github.com/tj/n/compare/v9.2.3...v10.0.0\n[9.2.3]: https://github.com/tj/n/compare/v9.2.2...v9.2.3\n[9.2.2]: https://github.com/tj/n/compare/v9.2.1...v9.2.2\n[9.2.1]: https://github.com/tj/n/compare/v9.2.0...v9.2.1\n[9.2.0]: https://github.com/tj/n/compare/v9.1.0...v9.2.0\n[9.1.0]: https://github.com/tj/n/compare/v9.0.1...v9.1.0\n[9.0.1]: https://github.com/tj/n/compare/v9.0.0...v9.0.1\n[9.0.0]: https://github.com/tj/n/compare/v8.2.0...v9.0.0\n[8.2.0]: https://github.com/tj/n/compare/v8.1.0...v8.2.0\n[8.1.0]: https://github.com/tj/n/compare/v8.0.2...v8.1.0\n[8.0.2]: https://github.com/tj/n/compare/v8.0.1...v8.0.2\n[8.0.1]: https://github.com/tj/n/compare/v8.0.0...v8.0.1\n[8.0.0]: https://github.com/tj/n/compare/v7.5.0...v8.0.0\n[7.5.0]: https://github.com/tj/n/compare/v7.4.1...v7.5.0\n[7.4.1]: https://github.com/tj/n/compare/v7.4.0...v7.4.1\n[7.4.0]: https://github.com/tj/n/compare/v7.3.1...v7.4.0\n[7.3.1]: https://github.com/tj/n/compare/v7.3.0...v7.3.1\n[7.3.0]: https://github.com/tj/n/compare/v7.2.2...v7.3.0\n[7.2.2]: https://github.com/tj/n/compare/v7.2.1...v7.2.2\n[7.2.1]: https://github.com/tj/n/compare/v7.1.0...v7.2.1\n[7.2.0]: https://github.com/tj/n/compare/v7.1.0...v7.2.0\n[7.1.0]: https://github.com/tj/n/compare/v7.0.2...v7.1.0\n[7.0.2]: https://github.com/tj/n/compare/v7.0.1...v7.0.2\n[7.0.1]: https://github.com/tj/n/compare/v7.0.0...v7.0.1\n[7.0.0]: https://github.com/tj/n/compare/v6.8.0...v7.0.0\n[6.8.0]: https://github.com/tj/n/compare/v6.7.1...v6.8.0\n[6.7.1]: https://github.com/tj/n/compare/v6.7.0...v6.7.1\n[6.7.0]: https://github.com/tj/n/compare/v6.6.0...v6.7.0\n[6.6.0]: https://github.com/tj/n/compare/v6.5.1...v6.6.0\n[6.5.1]: https://github.com/tj/n/compare/v6.5.0...v6.5.1\n[6.5.0]: https://github.com/tj/n/compare/v6.4.0...v6.5.0\n[6.4.0]: https://github.com/tj/n/compare/v6.3.1...v6.4.0\n[6.3.1]: https://github.com/tj/n/compare/v6.3.0...v6.3.1\n[6.3.0]: https://github.com/tj/n/compare/v6.2.0...v6.3.0\n[6.2.0]: https://github.com/tj/n/compare/v6.1.3...v6.2.0\n[6.1.3]: https://github.com/tj/n/compare/v6.0.2...v6.1.3\n[6.1.2]: https://github.com/tj/n/compare/v6.0.1...v6.1.2\n[6.1.1]: https://github.com/tj/n/compare/v6.0.0...v6.1.1\n[6.1.0]: https://github.com/tj/n/compare/v6.0.1...v6.1.0\n[6.0.1]: https://github.com/tj/n/compare/v6.0.0...v6.0.1\n[6.0.0]: https://github.com/tj/n/compare/v5.0.2...v6.0.0\n[5.0.2]: https://github.com/tj/n/compare/v5.0.1...v5.0.2\n[5.0.1]: https://github.com/tj/n/compare/v5.0.0...v5.0.1\n[5.0.0]: https://github.com/tj/n/compare/v4.1.0...v5.0.0\n[4.1.0]: https://github.com/tj/n/compare/v4.0.0...v4.1.0\n[4.0.0]: https://github.com/tj/n/compare/v3.0.2...v4.0.0\n[3.0.2]: https://github.com/tj/n/compare/v3.0.1...v3.0.2\n[3.0.1]: https://github.com/tj/n/compare/v3.0.0...v3.0.1\n[3.0.0]: https://github.com/tj/n/compare/v2.1.12...v3.0.0\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7158203125,
          "content": "# Contributing to n\n\n## Issues\n\nBefore opening up an issue, please search for previous reports.\n\nNew issues are welcome, whether questions or suggestions or reporting bugs.\nYou are also welcome to contribute by adding helpful comments on an existing issue.\n\n## Pull Requests\n\nPull Requests will be considered. Please open an issue to discuss your idea before requesting big changes.\n\nPlease submit pull requests against the `develop` branch. The template will prompt you for the details,\nsuch as what problem you are solving, and relevant issue numbers.\n\nDon't change the version number or CHANGELOG, as they are updated by maintainers as the release is being prepared.\n\n## Code of Conduct\n\nHate speech of any kind is not tolerated.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2018 TJ Holowaychuk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1513671875,
          "content": "PREFIX ?= /usr/local\n\ninstall: bin/n\n\tmkdir -p \"$(PREFIX)/bin\"\n\tcp bin/n \"$(PREFIX)/bin/n\"\n\nuninstall:\n\trm -f \"$(PREFIX)/bin/n\"\n\n.PHONY: install uninstall\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.8623046875,
          "content": "# `n` – Interactively Manage Your Node.js Versions\n\n[![npm](https://img.shields.io/npm/dt/n.svg?style=flat-square)](https://www.npmjs.com/package/n)\n[![npm](https://img.shields.io/npm/dm/n.svg?style=flat-square)](https://www.npmjs.com/package/n)\n[![npm](https://img.shields.io/npm/v/n.svg?style=flat-square)](https://www.npmjs.com/package/n)\n[![npm](https://img.shields.io/npm/l/n.svg?style=flat-square)](https://www.npmjs.com/package/n)\n\nNode.js version management: no subshells, no profile setup, no convoluted API, just **simple**.\n\n![usage animation](https://nimit.io/images/n/n.gif)\n\n- [`n` – Interactively Manage Your Node.js Versions](#n--interactively-manage-your-nodejs-versions)\n    - [Supported Platforms](#supported-platforms)\n    - [Installation](#installation)\n        - [Third Party Installers](#third-party-installers)\n        - [Replacing a previous node install](#replacing-a-previous-node-install)\n    - [Installing Node.js Versions](#installing-nodejs-versions)\n    - [Specifying Node.js Versions](#specifying-nodejs-versions)\n    - [Removing Versions](#removing-versions)\n    - [Using Downloaded Node.js Versions Without Reinstalling](#using-downloaded-nodejs-versions-without-reinstalling)\n    - [Preserving npm](#preserving-npm)\n    - [Miscellaneous](#miscellaneous)\n    - [Custom Mirror](#custom-mirror)\n    - [Custom Architecture](#custom-architecture)\n    - [Optional Environment Variables](#optional-environment-variables)\n    - [How It Works](#how-it-works)\n\n## Supported Platforms\n\n`n` is supported on macOS, Linux, including with Windows Subsystem for Linux, and various other unix-like systems.\nIt is written as a BASH script but does not require you to use BASH as your command shell.\n\n`n` does not work in native shells on Microsoft Windows (like PowerShell), or Git for Windows BASH, or with the Cygwin DLL.\n\n## Installation\n\nIf you already have Node.js installed, an easy way to install `n` is using `npm`:\n\n    npm install -g n\n\nThe default root location used when running `n` is `/usr/local` where a normal user does not have write permission. You may strike the same sort of permission error when using npm to install global modules, like the above command. You have three main options:\n\n1) change the ownership of the relevant directories to yourself (see below)\n2) tell `n` to use a custom location where you do have write permissions (see `N_PREFIX`)\n3) put `sudo` in front of the command to run it as super user\n\n`n` caches Node.js versions in subdirectory `n/versions`. The _active_ Node.js version is installed in subdirectories `bin`, `include`, `lib`, and `share`.\n\nTo take ownership of the system directories (option 1):\n\n    # make cache folder (if missing) and take ownership\n    sudo mkdir -p /usr/local/n\n    sudo chown -R $(whoami) /usr/local/n\n    # make sure the required folders exist (safe to execute even if they already exist)\n    sudo mkdir -p /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share\n    # take ownership of Node.js install destination folders\n    sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share\n\n-----\n\nIf `npm` is not yet available, one way to bootstrap an install is to download and run `n` directly. To install the `lts` version of Node.js:\n\n    curl -fsSL https://raw.githubusercontent.com/tj/n/master/bin/n | bash -s install lts\n    # If you want n installed, you can use npm now.\n    npm install -g n\n\nIf you don't need support for updates to `n` itself you can just save the download:\n\n    curl -fsSL -o /usr/local/bin/n https://raw.githubusercontent.com/tj/n/master/bin/n \n    chmod 0755 /usr/local/bin/n\n    n install lts\n\n### Third Party Installers\n\nOn macOS with [Homebrew](https://brew.sh/) you can install the [n formula](https://github.com/Homebrew/homebrew-core/blob/master/Formula/n/n.rb).\n\n    brew install n\n\nOr on macOS with [MacPorts](https://www.macports.org/) you can install the [n port](https://ports.macports.org/port/n/summary):\n\n    port install n\n\nOn Linux and macOS, [n-install](https://github.com/mklement0/n-install) allows installation directly from GitHub; for instance:\n\n    curl -L https://bit.ly/n-install | bash\n\nn-install sets both `PREFIX` and `N_PREFIX` to `$HOME/n`, installs `n` to `$HOME/n/bin`, modifies the initialization files of supported shells to export `N_PREFIX` and add `$HOME/n/bin` to the `PATH`, and installs the latest LTS Node.js version.\n\nAs a result, both `n` itself and all Node.js versions it manages are hosted inside a single, optionally configurable directory, which you can later remove with the included `n-uninstall` script. `n-update` updates `n` itself to the latest version. See the [n-install repo](https://github.com/mklement0/n-install) for more details.\n\n### Replacing a previous node install\n\nChanging from a previous Node.js installed to a different location may involve a few extra steps. See docs for [changing node location](./docs/changing-node-location.md) for a walk-through example of switching from using Homebrew to using `n` to manage Node.js.\n\nYou have a problem with multiple versions if after installing node you see the \"installed\" and \"active\" locations are different:\n\n```console\n% n lts\n     copying : node/20.12.2\n   installed : v20.12.2 to /usr/local/bin/node\n      active : v21.7.3 at /opt/homebrew/bin/node\n```\n\n## Installing Node.js Versions\n\nSimply execute `n <version>` to download and install a version of Node.js. If `<version>` has already been downloaded, `n` will install from its cache.\n\n    n 10.16.0\n    n lts\n\nExecute `n` on its own to view your downloaded versions, and install the selected version.\n\n    $ n\n\n      node/4.9.1\n    ο node/8.11.3\n      node/10.15.0\n\n    Use up/down arrow keys to select a version, return key to install, d to delete, q to quit\n\n(You can also use <kbd>j</kbd> and <kbd>k</kbd> to select next or previous version instead of using arrows, or <kbd>ctrl+n</kbd> and <kbd>ctrl+p</kbd>.)\n\nIf the active node version does not change after install, try opening a new shell in case seeing a stale version.\n\n## Specifying Node.js Versions\n\nThere are a variety of ways of specifying the target Node.js version for `n` commands. Most commands use the latest matching version, and  `n ls-remote` lists multiple matching versions.\n\nNumeric version numbers can be complete or incomplete, with an optional leading `v`.\n\n- `4.9.1`\n- `8`: 8.x.y versions\n- `v6.1`: 6.1.x versions\n\nThere are labels for two especially useful versions:\n\n- `lts`: newest Long Term Support official release\n- `latest`, `current`: newest official release\n  \nThere is an `auto` label to read the target version from a file in the current directory, or any parent directory. `n` looks for in order:\n\n- `.n-node-version`: version on single line. Custom to `n`.\n- `.node-version`: version on single line. Used by multiple tools: [node-version-usage](https://github.com/shadowspawn/node-version-usage)\n- `.nvmrc`: version on single line. Used by `nvm`.\n- if no version file found, look for `engine` as below.\n\nThe `engine` label looks for a `package.json` file and reads the `engines` field to determine compatible Node.js. Requires an installed version of `jq` or `node`, and uses `npx semver` to resolve complex ranges.\n\nThere is support for the named release streams:\n\n- `argon`, `boron`, `carbon`: codenames for LTS release streams\n\nThese Node.js support aliases may be used, although simply resolve to the latest matching version:\n\n- `active`, `lts_active`, `lts_latest`, `lts`, `current`, `supported`\n\nThe last version form is for specifying [other releases](https://nodejs.org/download) available using the name of the remote download folder optionally followed by the complete or incomplete version.\n\n- `nightly`\n- `test/v11.0.0-test20180528`\n- `rc/10`\n\n## Removing Versions\n\nRemove some cached versions:\n\n    n rm 0.9.4 v0.10.0\n\nRemoving all cached versions except the installed version:\n\n    n prune\n\nRemove the installed Node.js (does not affect the cached versions). This can be useful\nto revert to the system version of node (if in a different location), or if you no longer\nwish to use node and npm, or are switching to a different way of managing them.\n\n    n uninstall\n\n## Using Downloaded Node.js Versions Without Reinstalling\n\nThere are three commands for working directly with your downloaded versions of Node.js, without reinstalling.\n\nYou can show the path to the downloaded `node` version:\n\n    $ n which 6.14.3\n    /usr/local/n/versions/6.14.3/bin/node\n\nOr run a downloaded `node` version with the `n run` command:\n\n    n run 8.11.3 --debug some.js\n\nOr execute a command with `PATH` modified so `node` and `npm` will be from the downloaded Node.js version.\n(NB: `npm` run this way will be using global node_modules from the target node version folder.)\n\n    n exec 10 my-script --fast test\n    n exec lts zsh\n\n## Preserving npm\n\nA Node.js install normally also includes `npm`,  `npx`, and `corepack`, but you may wish to preserve your current (especially newer) versions using `--preserve`:\n\n    $ npm install -g npm@latest\n    ...\n    $ npm --version\n    6.13.7\n    # Node.js 8.17.0 includes (older) npm 6.13.4\n    $ n -p 8\n       installed : v8.17.0\n    $ npm --version\n    6.13.7\n\nYou can make this the default by setting the environment variable to a non-empty string. There are separate environment variables for `npm` and `corepack`:\n\n    export N_PRESERVE_NPM=1\n    export N_PRESERVE_COREPACK=1\n\nYou can be explicit to get the desired behaviour whatever the environment variables:\n\n    n --preserve nightly\n    n --no-preserve latest\n\n## Miscellaneous\n\nCommand line help can be obtained from `n --help`.\n\nList matching remote versions available for download:\n\n    n ls-remote lts\n    n ls-remote latest\n    n lsr 10\n    n --all lsr\n\nList downloaded versions in cache:\n\n    n ls\n\nDownload version into cache:\n\n    n download 22\n\nUse `n` to access cached versions (already downloaded) without internet available.\n\n    n --offline 12\n\nRemove the cache version after installing using `--cleanup`. This is particularly useful for a one-shot install, like in a docker container.\n\n    curl -fsSL https://raw.githubusercontent.com/tj/n/master/bin/n | bash -s install --cleanup lts\n\nNormally `n run`, `n exec`, and `n which` will fail if the target version is not already in the cache. You can add `--download` to use the cache if available or download if required:\n\n    n --download run 18.3 my-script.js\n\nDisplay diagnostics to help resolve problems:\n\n    n doctor\n\n## Custom Mirror\n\nIf you would like to use a different Node.js mirror which has the same layout as the default <https://nodejs.org/dist/>, you can define `N_NODE_MIRROR`.\n\nOne example is for users in China who can define:\n\n    export N_NODE_MIRROR=https://npmmirror.com/mirrors/node\n\nAnother example is the Node.js [unofficial-builds project](https://github.com/nodejs/unofficial-builds/) which has downloads for some platforms not made available officially, such as armv6l (Raspberry Pi) and 32-bit x86.\n\n    export N_NODE_MIRROR=https://unofficial-builds.nodejs.org/download/release\n\nYou may need to specify the architecture explicitly if not autodetected by `n`, such as using `musl` `libc` on Alpine:\n\n    export N_NODE_MIRROR=https://unofficial-builds.nodejs.org/download/release\n    apk add bash curl libstdc++\n    n --arch x64-musl install lts\n\nIf the custom mirror requires authentication you can add the [url-encoded](https://urlencode.org) username and password into the URL. e.g.\n\n    export N_NODE_MIRROR=https://encoded-username:encoded-password@host:port/path\n\nThere is also `N_NODE_DOWNLOAD_MIRROR` for a different mirror with same layout as the default <https://nodejs.org/download>.\n\n## Custom Architecture\n\nBy default `n` picks the binaries matching your system architecture. For example, on a 64 bit system `n` will download 64 bit binaries.\n\nOn a Mac with Apple silicon:\n\n- for Node.js 16 and higher, `n` defaults to arm64 binaries which run natively\n- for older versions of Node.js, `n` defaults to x64 binaries which run in Rosetta 2\n\nYou can override the default architecture by using the `-a` or `--arch` option.\n\ne.g. reinstall latest version of Node.js with x64 binaries:\n\n    n rm current\n    n --arch x64 current\n\n## Optional Environment Variables\n\nThe `n` command downloads and installs to `/usr/local` by default, but you may override this location by defining `N_PREFIX`.\nTo change the location to say `$HOME/.n`, add lines like the following to your shell initialization file:\n\n    export N_PREFIX=$HOME/.n\n    export PATH=$N_PREFIX/bin:$PATH\n\nIf you want to store the downloads under a different location, use `N_CACHE_PREFIX`. This does _not_ affect where the active\nnode version is installed.\n\n`n` defaults to using xz compressed Node.js tarballs for the download if it is likely tar on the system supports xz decompression.\nYou can override the automatic choice by setting an environment variable to zero or non-zero:\n\n    export N_USE_XZ=0 # to disable\n    export N_USE_XZ=1 # to enable\n\nYou can be explicit to get the desired behaviour whatever the environment variable:\n\n    n install --use-xz nightly\n    n install --no-use-xz latest\n\nIn brief:\n\n- `N_NODE_MIRROR`: See [Custom source](#custom-source)\n- `N_NODE_DOWNLOAD_MIRROR`: See [Custom source](#custom-source)\n- support for [NO_COLOR](https://no-color.org) and [CLICOLOR=0](https://bixense.com/clicolors) for controlling use of ANSI color codes\n- `N_MAX_REMOTE_MATCHES` to change the default `ls-remote` maximum of 20 matching versions\n- `N_PRESERVE_NPM`: See [Preserving npm](#preserving-npm)\n- `N_PRESERVE_COREPACK`: See [Preserving npm](#preserving-npm)\n\n## How It Works\n\n`n` downloads a prebuilt Node.js package and installs to a single prefix (e.g. `/usr/local`). This overwrites the previous version. The `bin` folder in this location should be in your `PATH` (e.g. `/usr/local/bin`).\n\nThe downloads are kept in a cache folder to be used for reinstalls. The downloads are also available for limited use using `n which` and `n run` and `n exec`.\n\nThe global `npm` packages are not changed by the install, with the\nexception of `npm` itself which is part of the Node.js install.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3505859375,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe latest two major versions get security updates.\n\nPull Requests for security issues will be considered for older versions.\n\n## Reporting a Vulnerability\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.7119140625,
          "content": "{\n  \"name\": \"n\",\n  \"version\": \"10.1.0\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"bats\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/bats/-/bats-1.2.1.tgz\",\n      \"integrity\": \"sha512-2fcPDRQa/Kvh6j1IcCqsHpT5b9ObMzRzw6abC7Bg298PX8Qdh9VRkvO2WJUEhdyfjq2rLBCOAWdcv0tS4+xTUA==\",\n      \"dev\": true\n    },\n    \"bats-assert\": {\n      \"version\": \"github:bats-core/bats-assert#0a8dd57e2cc6d4cc064b1ed6b4e79b9f7fee096f\",\n      \"from\": \"github:bats-core/bats-assert\",\n      \"dev\": true\n    },\n    \"bats-support\": {\n      \"version\": \"github:bats-core/bats-support#d140a65044b2d6810381935ae7f0c94c7023c8c3\",\n      \"from\": \"github:bats-core/bats-support\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.9345703125,
          "content": "{\n  \"name\": \"n\",\n  \"description\": \"Interactively Manage All Your Node Versions\",\n  \"version\": \"10.1.0\",\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\n  \"homepage\": \"https://github.com/tj/n\",\n  \"bugs\": \"https://github.com/tj/n/issues\",\n  \"contributors\": [\n    {\n      \"name\": \"n Contributors\",\n      \"url\": \"https://github.com/tj/n/graphs/contributors\"\n    }\n  ],\n  \"keywords\": [\n    \"nvm\",\n    \"node\",\n    \"version\",\n    \"manager\",\n    \"switcher\",\n    \"node\",\n    \"binary\",\n    \"env\"\n  ],\n  \"bin\": {\n    \"n\": \"bin/n\"\n  },\n  \"files\": [\n    \"bin/n\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/tj/n.git\"\n  },\n  \"scripts\": {\n    \"test\": \"test/bin/run-all-tests\"\n  },\n  \"devDependencies\": {\n    \"bats\": \"^1.2.1\",\n    \"bats-assert\": \"github:bats-core/bats-assert\",\n    \"bats-support\": \"github:bats-core/bats-support\"\n  },\n  \"preferGlobal\": true,\n  \"os\": [\n    \"!win32\"\n  ],\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}