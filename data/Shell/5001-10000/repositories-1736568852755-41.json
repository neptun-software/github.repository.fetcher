{
  "metadata": {
    "timestamp": 1736568852755,
    "page": 41,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zsh-users/antigen",
      "stars": 8120,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.548828125,
          "content": "# Running tests creates this completion dump file.\n.zcompdump*\n\n# Test failure reports\ntests/*.t.err\n\n# If the $ADOTDIR is the same as the antigen's clone directory itself, the\n# following would be shown as untracked.\nrepos/\nbundles/\nrevert-info\n\n# Cache directory for ext/zcache\n.cache/\n\n# Default antigen.log location\n*.log\n\n# Release archives and signatures\n*.tar.gz\n*.tar.gz.sign\n\n# Ignore compiled zsh files\n*.zwc\n\n# Ignore timestamp file for zcache auto-reset config\n*.timestamp\n\n# Cache init\n/init.zsh\n.antigenrc\n.zshrc\n.zcomp*\n\n# Config files\n.resources\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.4775390625,
          "content": "sudo: required\ndist: trusty\nlanguage: generic\nservices:\n  - docker\ncache:\n  pip: true\nenv:\n  global:\n    - USE_CONTAINER=docker\nmatrix:\n  include:\n    - os: linux\n      env: ZSH_VERSION=zsh-5.7\n    - os: linux\n      env: ZSH_VERSION=zsh-5.6\n    - os: linux\n      env: ZSH_VERSION=zsh-5.5\n    - os: linux\n      env: ZSH_VERSION=zsh-5.4.2\n    - os: linux\n      env: ZSH_VERSION=zsh-5.4.1\n    - os: linux\n      env: ZSH_VERSION=zsh-5.4\n    - os: linux\n      env: ZSH_VERSION=zsh-5.3.1\n    - os: linux\n      env: ZSH_VERSION=zsh-5.3\n    - os: linux\n      env: ZSH_VERSION=zsh-5.2\n    - os: linux\n      env: ZSH_VERSION=zsh-5.1.1\n    - os: linux\n      env: ZSH_VERSION=zsh-5.0.0\n    - os: linux\n      env: ZSH_VERSION=zsh-4.3.17\n    - os: linux\n      env: ZSH_VERSION=zsh-4.3.11\nnotifications:\n  webhooks:\n    urls:\n      - \"https://webhooks.gitter.im/e/30fdb3abe241aa03af20\"\n    on_success: always\n    on_failure: always\n    on_start: always\nscript:\n  - if [ $TRAVIS_OS_NAME == 'osx' ]; then brew install zsh; pip install cram; fi\n  - make info tests stats USE_CONTAINER=$USE_CONTAINER\n\n  # Ensure the checked-in build matches the build produced in CI. Since the CI\n  # will run this on both OS X and Linux, the two platforms must also produce\n  # the same build, else one of them will fail.\n  - SHASUM=$(shasum -a 256 ./bin/antigen.zsh)\n  - VERSION=$(cat ./VERSION) make USE_CONTAINER=$USE_CONTAINER\n  - SHACHECK=$(shasum -a 256 ./bin/antigen.zsh)\n\n  - echo -e \"$SHASUM\\n$SHACHECK\"\n  - test \"$SHASUM\" == \"$SHACHECK\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.306640625,
          "content": "# CHANGELOG\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/) [v2.0.0](http://semver.org/spec/v2.0.0.html).\n\n## [2.2.3] - 2017-12-31\n\n## Added\n- [#630] Add zsh version 5.4.x to travis ci\n- [#633, #634] Add configuration `ANTIGEN_COMPINIT_OPTS` for `compinit` command\n\n## Changed\n- [#636] Show built-date to version command\n\n## Fixed\n- [#635] Fix missing common resource file\n- [#628, #629] Handle `GREP_OPTIONS` env variable\n\n\n## [2.2.2] - 2017-11-19\n\n## Added\n- [#605] Create `CODE_OF_CONDUCT.md`\n\n## Changed\n- [#611] Remove \"no extensions loaded\" message\n- [#610, #596, #608] Fix cache generation with `cache-gen` command\n- [#609, #593] Add autoload for is-at-least\n- [#615] Oh-my-zsh themes backward compatibility\n\n## Fixed\n- [#590, #588, #587, #606] Fix multiple issues with caching generation\n- [#613] Defer cache loading to `antigen-apply` command\n- [#618, #617] Unalias built-in `cd`\n\n\n## [2.2.1] - 2017-06-24\n\nWe're adding a new environment variable:\n\n  - `ANTIGEN_MUTEX` - Use to configure whether to check for mutex or ignore it.\n\nThis configuration effectively controls if the `lock` should work. Alternatively you\nmay configure which extension you want to load:\n\n    _ANTIGEN_BUILTIN_EXTENSIONS='lock parallel defer cache'\n\nJust remove `lock` from the `_ANTIGEN_BUILTIN_EXTENSIONS` environment variable. Take\ninto account that this may change in the future.\n\n## Added\n- [#561, #563] Add flag to disable mutex check\n\n## Changed\n- [#559, #562] Update wiki with all installation options (Debian package, OpenSUSE, Homebrew, etc)\n- [#564] Improve README.md installation section and content\n\n## Fixed\n- [#569, #565] Avoid compiled theme artifact showing up on completion\n- [#558] Fix Makefile's glob used to build logging library if required\n- [#555, #557, #556] Fix issue with `ps` command's output being discarded (breaking parallel extension)\n- [#571, #568] Fix issues with `typeset` on zsh 5.0.x and below\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.2.0] - 2017-06-18\n\nWe're deploying an extension system to further extend Antigen's functionality.\nCore functionality such as parallel install and cache are built upon this system,\nsee `src/ext`.\n\nExtensions must adhere to a basic interface:\n\n    - `-antigen-{extension-name}-init`\n    - `-antigen-{extension-name}-execute`\n\nBoth these functions must return 0 or 1 to abort initialization. Example:\n\n    antigen ext custom\n    # -antigen-custom-init\n    # -antigne-custom-execute\n\nInternally an extension must use Antigen's hook system to retrieve arguments and run custom\nfunctionality:\n\n    - `antigen-add-hook`: antigen-add-hook [antigen-function] [hook-function] [\"replace\"|\"pre\"|\"post\"] [\"once\"|\"repeat\"]\n    - `antigen-remove-hook`: antigen-remove-hook [hook-function]\n\n### Added\n- [#529, #506] Parallel bundle install\n- [#542] Reset default library url with antigen-use\n\n### Changed\n- [#547, #552] `antigen-theme` command won't switch between themes\n\n### Fixed\n- [#550, #548] Fix parallel extension running multiple clone instances\n- [#549, #463] Fix compdump missing completions\n- [#553] Catch spurious error message by `ps`\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.1.1] - 2017-05-20\n\n### Changed\n- [#537] Clean up README.mkd\n- [#534] Add new article on zsh and antigen\n\n### Fixed\n- [#540] Don't require confirmation when removing lock\n- [#535, #536] Avoid duplicate paths\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.1.0] - 2017-05-14\n\n### Fixed\n- [#525] Use `GIT_TERMINAL_PROMPT=0` to avoid password prompt on clone\n- [#511] Clean up globally defined variables\n\n### Added\n- [#527] Internal extension system\n- [#526] Use mutex to prevent concurrent installations\n- [#501] Autodetect config files\n\n### Changed\n- [#513] Defer bundle loading to `antigen-apply` command\n- [#512] Show warning message when bundle is already \n- [#520] Remove runtime hack to load themes\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.0.2] - 2017-04-22\n\n### Changed\n- [#521, #515] Update TravisCI Badges' labels\n- [#509] Use \"Roadmap\" for Trello where possible\n\n### Added\n- [#514] FAQ for dynamic `antigen-theme` usage\n\n### Fixed\n- [#510] Remove possibly destructive command on broken tests\n- [#508, #507] Fix status code non-zero when last command is `antigen` wrapper\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.0.1] - 2017-04-15\n\n### Changed\n- [#489] Update `CHANGELOG` link to semver documentation\n- [#497, #498] Improve `antigen-list` command performance\n\n### Fixed\n- [#487] Fix documentation regarding `ANTIGEN_CHECK_FILES`\n- [#486, #485] Missing env vars for Oh-My-Zsh \n- [#492, #490] Fix parsing git/ssh URLS\n- [#495, #494] Fix `antigen-theme` command changing CWD\n- [#493, #491] Fix `no-local-clone` flag being ignored\n\nThanks everyone who reported issues and provided feedback.\n\n## [2.0.0] - 2017-04-08\n\nThere are functions and configurations being either removed or renamed, please\nreview this document before updating your Antigen installation.\n\nRemoved functions:\n\n  - `-antigen-lib`        - Deprecated since v1\n  - `-antigen-prezto-lib` - Deprecated since v1\n\nDeprecated configuration:\n\n  - `_ANTIGEN_FORCE_RESET_COMPDUMP`\n  - `_ANTIGEN_RESET_THEME_HOOKS`\n  - `_ANTIGEN_AUTODETECT_CONFIG_CHANGES`\n  - `_ANTIGEN_CACHE_ENABLED`\n  - `_ANTIGEN_COMP_ENABLED`\n\nRenamed configuration:\n\n  - `_ANTIGEN_LOG_PATH`     ~> `ANTIGEN_LOG`\n  - `_ANTIGEN_CACHE_PATH`   ~> `ANTIGEN_CACHE`\n  - `_ANTIGEN_COMPDUMPFILE` ~> `ANTIGEN_COMPDUMP`\n\nAdded configurations:\n\n  - `ANTIGEN_CHECK_FILES`     - Use to configure which files to check for changes\n  - `ANTIGEN_SUBMODULE_OPTS`  - Use to pass arguments to `git submodule` command\n  - `ANTIGEN_CLONE_OPTS`      - Use to pass arguments to `git clone` command\n  - `ANTIGEN_BUNDLES`         - Use to configure bundle path location\n  - `ANTIGEN_PREZTO_REPO_URL` - Use to configure Prezto default url\n\n### Removed\n- [#197, #298] Removed `-antigen-lib`, `-antigen-prezto-lib`\n\n### Added\n- [#309] Use `git` shallow cloning to speed up bundle install\n- [#299, #261] Handles `$PATH`\n- [#415] Added link to multiple OS install methods\n- [#423, #262] Support semver-like bundling\n- [#461] Use Docker container for tests and stats generation\n- [#462, #466] Add extended help text for `antigen-help` command\n- [#467, #465] Show version hash on `antgen-version` command\n- [#469] Function to migrate old bundle paths to new format\n- [#464] Update wiki pages for new version\n\n### Changed\n- [#326, #259] Support updating a single bundle\n- [#352] Support `antigen-update` tab completion\n- [#351, #379] Update `Makefile` release tasks\n- [#411, #371, #445] `antigen-list` show version information (tag, branch, git hash)\n- [#420] Support reference cache (vs bundle cache)\n- [#450] Refactor `_ANTIGEN_BUNDLE_RECORD`\n- [#454] Simplify change detection\n- [#457, #460] Change bundle path generation function\n\n### Fixed\n- [#353] `antigen-update` properly handles `--no-local-clone`\n- [#419] Don't require confirmation when cleaning up\n- [#439, #442, #438] Fix `antigen-selfupdate` failing with sym-links\n- [#441, #440] `antigen-init` command checks input\n- [#453, #452] Respect `_ANTIGEN_COMPDUMP` configuration\n\nThanks everyone who reported issues and provided feedback.\n\n## [1.4.1] - 2017-02-26\n\n### Changed\n- [#402, #409] `antigen-use` command handle library url\n- [#404, #408] Update README.md with new antigen-related articles\n\n### Fixed\n- [#403, #407] Disable OS X builds on TravisCI\n\nThanks everyone who reported issues and provided feedback.\n\n## [1.4.0] - 2017-02-11\n\n### Changed\n- [#386, #387] Use reference cache rather than source bundle\n\n### Fixed\n- [#400, #391] Cache library handle environment variables for default libraries\n\nThanks @lukechilds, @shoeffner and everyone who reported issues and provided feedback.\n\n## [1.3.5] - 2017-02-03\n\n### Changed\n- [#393, #392] Add hint in readme to alternative install methods \n\n### Fixed\n- [#398, #396] Add argument completion for `antigen-list` command \n- [#394, #395] Fix syntax issue on zsh 4.3.11 \n\nThanks @TBird2001, @einSelbst and everyone who reported issues and provided feedback.\n\n## [1.3.4] - 2017-01-16\n\n### Changed\n- [#389, #385] `antigen-theme` command load themes from path \n\n### Fixed\n- [#384] Fix updating version references \n\nThanks to everyone who reported issues and provided feedback.\n\n## [1.3.3] - 2017-01-07\n\n### Changed\n- [#379, #382] Update makefile release tasks\n- [#378] Add entry in wiki regarding COMPDUMP location configuration\n- [#376] Update README.md with external articles\n- [#375, #374] Add LICENSE file to repository\n\nThanks to everyone who reported issues and provided feedback.\n\n## [1.3.2] - 2016-12-29\n\n### Fixed\n- [#367, #368] Fix interactively changing between themes\n\n### Changed\n- [#369] Enforce coding style\n- [#370, #372] Update README.md with new external articles\n\nThanks to everyone who reported issues and provided feedback.\n\n## [1.3.1] - 2016-12-17\n\n### Fixed\n- [#360, #361] Avoid error when CLOBBER is unset\n- [#355, #356] Bundle short name breaks on OSX (BSD sed)\n\n### Changed\n- [#363] Added zsh 5.3 to the build pipeline\n- [#365, #357] Configure Travis-Ci to build against OS X (10.11, xcode 7.3)\n- [#350] Add makefile task to create signed releases\n- [#364, #362] Add note about variable handling inside `antigen-bundles` heredoc\n\nThanks @rltbennett, @rherrick and everyone who reported issues and provided feedback.\n\n## [1.3.0] - 2016-12-10\n\n### Fixed\n- [#340, #347] Fix bundle short name broken with branched bundles\n- [#341] Improve TravisCI performance\n\n### Changed\n- [#343, #344] Add `--short` option for `antigen-list` command\n\n### Added\n- [#301, #348] Sign git commits & releases (tags)\n- [#337, #345] Theme command tab completion\n- [#335, #342] Purge command for removing bundles from file system\n\nThanks @rugk and everyone who reported issues and provided feedback.\n\n## [1.2.4] - 2016-12-03\n\n### Fixed\n- [#321, #322] Fix `antigen-init` command unable to detect bundles\n- [#328, #331] Display error message if `antigen-theme` fails to load theme\n\n### Changed\n- [#327, #330] Moved `-antigen-echo-record` to `helpers` directory\n\n### Added\n- [#323, #329] Add `antigen-init` command entry in `README.md`\n\nThanks @orf, @VincentBel, @wsargent and everyone who reported issues and\nprovided feedback.\n\n## [1.2.3] - 2016-11-21\n\n### Fixed\n- [#318, #317] Fixed issue with sed regexp format between BSD and GNU\n\nThanks @john-kurkowski and everyone who reported issues and\nprovided feedback.\n\n## [1.2.2] - 2016-11-18\n\n### Changed\n- [#315, #308] Bundle command returns error if repository is not found \n- [#313, #314] Enhanced cache process-source function \n\n### Fixed\n- [#310, #307] Disabling cache-related commands if cache is disabled\n- [#311, #304] Handle bundle's default branch different than master\n\nThanks @DestyNova, @yacoob, @qstrahl and everyone who reported issues and\nprovided feedback.\n\n## [1.2.1] - 2016-10-15\n\nAntigen now resets compdump file on `antigen-apply` or with cache resetting (be\nit with `antigen-reset` or auto-detecting changes in bundling configuration).\nThis is necessary to handle completions correctly.\nActivate this functionality with `_ANTIGEN_FORCE_RESET_COMPDUMP`, defaults to `true`.\n\nAntigen previously didn't created `$ADOTDIR` explicitly, now it does so on start up.\nThis directory defaults to `$HOME/.antigen` and it's used to store logs, repositories\nand cache files.\n    \nTheme switching, with `antigen-theme` command, now removes hooks applied by themes.\nThis is done in order to be able to interactively switch between themes without\nissues, such as prompt broken by hooks left by previous themes.\nThis functionality is actived by default and can be disabled with `_ANTIGEN_RESET_THEME_HOOKS`.\n\nNew environment variables:\n    - `_ANTIGEN_FORCE_RESET_COMPDUMP`: Whether to force compdump to be reset with\n    `antigen-apply` or cache reset.\n\n    - `_ANTIGEN_RESET_THEME_HOOKS`: Whether to remove theme hooks on `antigen-theme`\n    command.\n\n### Added\n- [#289, #286] Check $ADOTDIR exists on start up\n\n### Changed\n- [#291, #281] Reset compdump on apply and cache reset\n- [#282] Fixed a simple typo in a code comment regarding git availability\n\n### Fixed\n- [#290, #283] Remove theme hooks when changing themes\n- [#288, #285] Fix keybindings hook disabled in zcache-done\n- [#284] Fix `local`s in themes\n\nThanks @jordi9, @edqu3, @jmusal, @ming13, @kmikolaj and everyone who reported\nissues and provided feedback.\n\n## [1.2.0] - 2016-10-09\n\nAntigen now auto-detects configuration changes. This is done by detecting\nnew/removed bundles/ordering changes in configuration (bundles, themes, use etc).\nWhen a change is detected next time Antigen is loaded it'll rebuild cache.\n\n`cache-reset` command is now deprecated and should be used `reset` instead.\n\n`-antigen-parse-args` function was removed in favor of a more flexible, lax\nand performant implementation.\n\nThe following errors are not present anymore:\n  - Positional argument count mismatch\n  - Argument repeated\n  - No argument required\n\nPositional argument count mismatch: There is no `spec` argument from now on so there is\nno definition on arguments.\n\nArgument repeated: All arguments are parsed and returned. Last value is used.\n\nNo argument required: The case is `--no-local-clone` and the value passed is ignored.\n\n\nNew environment variables:\n  - `_ANTIGEN_AUTODETECT_CONFIG_CHANGES`: Whether to check for configuration\n  changes (true by default).\n\n### Changed\n- [#257, #271] Remove parse-args function\n- [#255, #265, #275, #253] Refactor/clean up code\n- [#274, #267] Hook antigen-bundles command\n- [#266, #258] Deprecate cache-reset command in favor of reset\n- [#256, #264] Auto detect changes in bundling\n- [#277] Fix for antigen 1.1.4\n\n### Fixed\n- [#273] Missing antigen-apply on zcache-done\n- [#272] Fix bundle-short-name function to handle gist urls\n\nThanks everyone who reported issues and provided feedback.\n\n## [1.1.4] - 2016-09-25\n\nDefault cache and bundles path is now `$ADOTDIR/.cache` and `$ADOTDIR/repos`\n(it was `$_ANTIGEN_INSTALL_DIR/.cache` and `$_ANTIGEN_INSTALL_DIR/repos`).\n\nNew environment variables:\n\n  - `_ANTIGEN_INTERACTIVE_MODE`: Use to force Antigen into running the caching\n  mechanism even in interactive mode (by default it deactivate caching in\n  interactive shells).\n\n### Changed\n- [#248] Enhanced caching performance\n- [#245, #244] Changed default caching and logging paths\n \n### Fixed\n- [#249, #240, #246] Makefile BSD compatibility\n- [#247, #228] Fix apply and antigen-apply command\n- [#251] Fix Makefile publish task\n\nThanks @fladi, @jdkbx, @extink and everyone who reported\nissues and provided feedback.\n\n## [1.1.3] - 2016-09-20\n\n### Changed\n- [#236] Add Makefile release and publish tasks\n \n### Fixed\n- [#239] Issue with BSD sed (MacOS, FreeBSD) \n\nThanks @pawelad, @laurenbenichou, @zawadzkip and everyone who reported\nissues and provided feedback.\n\n## [1.1.2] - 2016-09-16\n\n### Changed\n- [#234] Cache process-source function now handles function-context\n- [#233] Antigen selfupdate command now clears cache automatically\n \n### Fixed\n- [#219] Issue with zsh-navigation-tools plugin and powerlevel9k theme\n- [#230] Issue with stalled cache\n\nThanks @xasx, @ilkka, @NelsonBrandao and everyone who reported\nissues and provided feedback.\n\n## [1.1.1] - 2016-09-13\n\n### Changed\n- [#223] Update tests cases\n \n### Fixed\n- [#220] Fpath was not updated correctly\n- [#221, #217] Fix various typos in CHANGELOG.md\n- [#224] Update README.md\n\nThanks @xasx, @azu and @mikeys\n\n## [1.1.0] - 2016-09-10 \n\nNew environment variables:\n    \n  - `_ANTIGEN_LOG_PATH`: Antigen path for logging (mostly git commands).\n\n  - `_ANTIGEN_COMP_ENABLED`: Flag to enable/disable Antigen own completions\n  `compinit`, which adds `~0.02s` to load time.\n\n  - `_ANTIGEN_CACHE_ENABLED`: Flag to enable/disable cache system.\n\nNew commands:\n\n- `init`: Use this command to load antigen configuration. Example set up:\n    \n    .zshrc:\n        \n        source antigen.zsh\n        antigen init .antigenrc\n        \n    .antigenrc:\n\n        antigen use oh-my-zsh\n        \n        antigen bundle ...\n        antigen theme ...\n        \n        antigen apply\n\n    \nThis setup further improves cache performance (`~0.02s`). It's fully optional.\n        \n- `cache-reset`: Clears current cache. Doesn't removes your bundles. This is done automatically after `antigen update` command.\n    \n- `version`: Show antigen running version.\n\n### Added\n- [#129] Cache system for better performance\n- [#191] Version command\n- [#211] Option to disable antigen's own completions compinit on start up \n\n### Changed\n- [#205] Bundle short syntax on install/update\n- [#156, #213] Improved continuos integration set up \n- [#195] Restructured project directory \n\n### Fixed\n- [#210] Prezto issue with environment variable\n- [#162] Fix issue with antigen update after revert\n\n## [1.0.4] - 2016-08-27\n\n### Added\n- [#188] Add CONTRIBUTING.md to documentation\n- [#183] Update README.md to use rawgit in examples\n- [#182] Add Gitter, Trello and Travis CI badges\n\n### Changed\n- [#171] Continuous integration against multiple Zsh versions\n\n### Fixed\n- [#170] Check git dependency on sourcing\n- [#169] Load Antigen's own completions at load time\n\n## [1.0.3] - 2016-08-20\n\n### Changed\n- [#172] Fix TravisCI configuration \n\n## [1.0.2] - 2016-08-11\n\n### Changed\n- [#168] Update README.md example code thanks to @chadmoore\n\n## [1.0.1] - 2016-07-21\n\n### Added\n- [#141] Performance improvements thanks to @outcoldman\n- Added CHANGELOG.md\n- Following [Semantic Versioning](http://semver.org/)\n\n[2.2.3]: https://github.com/zsh-users/antigen/compare/v2.2.2...v2.2.3\n[2.2.2]: https://github.com/zsh-users/antigen/compare/v2.2.1...v2.2.2\n[2.2.1]: https://github.com/zsh-users/antigen/compare/v2.2.0...v2.2.1\n[2.2.0]: https://github.com/zsh-users/antigen/compare/v2.1.1...v2.2.0\n[2.1.1]: https://github.com/zsh-users/antigen/compare/v2.1.0...v2.1.1\n[2.1.0]: https://github.com/zsh-users/antigen/compare/v2.0.2...v2.1.0\n[2.0.2]: https://github.com/zsh-users/antigen/compare/v2.0.1...v2.0.2\n[2.0.1]: https://github.com/zsh-users/antigen/compare/v2.0.0...v2.0.1\n[2.0.0]: https://github.com/zsh-users/antigen/compare/v1.4.1...v2.0.0\n[1.4.1]: https://github.com/zsh-users/antigen/compare/v1.4.0...v1.4.1\n[1.4.0]: https://github.com/zsh-users/antigen/compare/v1.3.5...v1.4.0\n[1.3.5]: https://github.com/zsh-users/antigen/compare/v1.3.4...v1.3.5\n[1.3.4]: https://github.com/zsh-users/antigen/compare/v1.3.3...v1.3.4\n[1.3.3]: https://github.com/zsh-users/antigen/compare/v1.3.2...v1.3.3\n[1.3.2]: https://github.com/zsh-users/antigen/compare/v1.3.1...v1.3.2\n[1.3.1]: https://github.com/zsh-users/antigen/compare/v1.3.0...v1.3.1\n[1.3.0]: https://github.com/zsh-users/antigen/compare/v1.2.4...v1.3.0\n[1.2.4]: https://github.com/zsh-users/antigen/compare/v1.2.3...v1.2.4\n[1.2.3]: https://github.com/zsh-users/antigen/compare/v1.2.2...v1.2.3\n[1.2.2]: https://github.com/zsh-users/antigen/compare/v1.2.1...v1.2.2\n[1.2.1]: https://github.com/zsh-users/antigen/compare/v1.2.0...v1.2.1\n[1.2.0]: https://github.com/zsh-users/antigen/compare/v1.1.4...v1.2.0\n[1.1.4]: https://github.com/zsh-users/antigen/compare/v1.1.3...v1.1.4\n[1.1.3]: https://github.com/zsh-users/antigen/compare/v1.1.2...v1.1.3\n[1.1.2]: https://github.com/zsh-users/antigen/compare/v1.1.1...v1.1.2\n[1.1.1]: https://github.com/zsh-users/antigen/compare/v1.1.0...v1.1.1\n[1.1.0]: https://github.com/zsh-users/antigen/compare/v1.0.4...v1.1.0\n[1.0.4]: https://github.com/zsh-users/antigen/compare/v1.0.3...v1.0.4\n[1.0.3]: https://github.com/zsh-users/antigen/compare/v1.0.2...v1.0.3\n[1.0.2]: https://github.com/zsh-users/antigen/compare/v1.0.1...v1.0.2\n[1.0.1]: https://github.com/zsh-users/antigen/compare/v1...v1.0.1\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3369140625,
          "content": "# Code of Conduct\n\n## 1. Purpose\n\nA primary goal of Antigen is to be inclusive to the largest number of contributors, with the most varied and diverse backgrounds possible. As such, we are committed to providing a friendly, safe and welcoming environment for all, regardless of gender, sexual orientation, ability, ethnicity, socioeconomic status, and religion (or lack thereof).\n\nThis code of conduct outlines our expectations for all those who participate in our community, as well as the consequences for unacceptable behavior.\n\nWe invite all those who participate in Antigen to help us create safe and positive experiences for everyone.\n\n## 2. Open Source Citizenship\n\nA supplemental goal of this Code of Conduct is to increase open source citizenship by encouraging participants to recognize and strengthen the relationships between our actions and their effects on our community.\n\nCommunities mirror the societies in which they exist and positive action is essential to counteract the many forms of inequality and abuses of power that exist in society.\n\nIf you see someone who is making an extra effort to ensure our community is welcoming, friendly, and encourages all participants to contribute to the fullest extent, we want to know.\n\n## 3. Expected Behavior\n\nThe following behaviors are expected and requested of all community members:\n\n*   Participate in an authentic and active way. In doing so, you contribute to the health and longevity of this community.\n*   Exercise consideration and respect in your speech and actions.\n*   Attempt collaboration before conflict.\n*   Refrain from demeaning, discriminatory, or harassing behavior and speech.\n*   Be mindful of your surroundings and of your fellow participants. Alert community leaders if you notice a dangerous situation, someone in distress, or violations of this Code of Conduct, even if they seem inconsequential.\n*   Remember that community event venues may be shared with members of the public; please be respectful to all patrons of these locations.\n\n## 4. Unacceptable Behavior\n\nThe following behaviors are considered harassment and are unacceptable within our community:\n\n*   Violence, threats of violence or violent language directed against another person.\n*   Sexist, racist, homophobic, transphobic, ableist or otherwise discriminatory jokes and language.\n*   Posting or displaying sexually explicit or violent material.\n*   Posting or threatening to post other people’s personally identifying information (\"doxing\").\n*   Personal insults, particularly those related to gender, sexual orientation, race, religion, or disability.\n*   Inappropriate photography or recording.\n*   Inappropriate physical contact. You should have someone’s consent before touching them.\n*   Unwelcome sexual attention. This includes, sexualized comments or jokes; inappropriate touching, groping, and unwelcomed sexual advances.\n*   Deliberate intimidation, stalking or following (online or in person).\n*   Advocating for, or encouraging, any of the above behavior.\n*   Sustained disruption of community events, including talks and presentations.\n\n## 5. Consequences of Unacceptable Behavior\n\nUnacceptable behavior from any community member, including sponsors and those with decision-making authority, will not be tolerated.\n\nAnyone asked to stop unacceptable behavior is expected to comply immediately.\n\nIf a community member engages in unacceptable behavior, the community organizers may take any action they deem appropriate, up to and including a temporary ban or permanent expulsion from the community without warning (and without refund in the case of a paid event).\n\n## 6. Reporting Guidelines\n\nIf you are subject to or witness unacceptable behavior, or have any other concerns, please notify a community organizer as soon as possible. desyncr@riseup.net.\n\n\n\nAdditionally, community organizers are available to help community members engage with local law enforcement or to otherwise help those experiencing unacceptable behavior feel safe. In the context of in-person events, organizers will also provide escorts as desired by the person experiencing distress.\n\n## 7. Addressing Grievances\n\nIf you feel you have been falsely or unfairly accused of violating this Code of Conduct, you should notify Zsh Users with a concise description of your grievance. Your grievance will be handled in accordance with our existing governing policies.\n\n\n\n## 8. Scope\n\nWe expect all community participants (contributors, paid or otherwise; sponsors; and other guests) to abide by this Code of Conduct in all community venues–online and in-person–as well as in all one-on-one communications pertaining to community business.\n\nThis code of conduct and its related procedures also applies to unacceptable behavior occurring outside the scope of community activities when such behavior has the potential to adversely affect the safety and well-being of community members.\n\n## 9. Contact info\n\ndesyncr@riseup.net\n\n## 10. License and attribution\n\nThis Code of Conduct is distributed under a [Creative Commons Attribution-ShareAlike license](http://creativecommons.org/licenses/by-sa/3.0/).\n\nPortions of text derived from the [Django Code of Conduct](https://www.djangoproject.com/conduct/) and the [Geek Feminism Anti-Harassment Policy](http://geekfeminism.wikia.com/wiki/Conference_anti-harassment/Policy).\n\nRetrieved on November 22, 2016 from [http://citizencodeofconduct.org/](http://citizencodeofconduct.org/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.248046875,
          "content": "# Contributing to this project\n\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\n\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\n\n\n## Using the issue tracker\n\nThe [issue tracker](issues) is the preferred channel for [bug reports](#bug-reports),\n[features requests](#feature-requests) and [submitting pull requests](#pull-requests),\nbut please respect the following restrictions:\n\n* Please **do not** use the issue tracker for personal support requests (use\n  [Stack Overflow](http://stackoverflow.com/search?q=antigen) or [Gitter](https://gitter.im/antigen-zsh/develop)).\n\n* Please **do not** derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.\n\n## Bug reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\n   latest `master` or development branch in the repository.\n\n3. **Isolate the problem** &mdash; create a reduced test\n   case and a live example.\n\nA good bug report shouldn't leave others needing to chase you up for more\ninformation.\n\nPlease try to be as detailed as possible in your report. Be sure to include:\n\n- Antigen, Zsh and OS version\n- Antigen and Zsh configurations (usually `~/.zshrc` and `~/.antigenrc`)\n- What would you expect to be the outcome?\n- What are the steps to reproduce the issue\n\nAll these details will help people to fix any potential bugs.\n\nExample:\n\n> Short and descriptive example bug report title\n>\n> A summary of the issue and the Zsh version/OS environment in which it occurs.\n> If suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` - a link to the zsh configuration\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n\n\n## Feature requests\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to *you* to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n\n## Pull requests\n\nGood pull requests (patches, improvements, new features) are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\n**Please ask first** before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\n\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\n\nFollow this process if you'd like your work considered for inclusion in the\nproject:\n\n1. [Fork](http://help.github.com/fork-a-repo/) the project, clone your fork,\n   and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/<repo-name>\n   # Navigate to the newly cloned directory\n   cd <repo-name>\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/zsh-users/antigen\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout <dev-branch>\n   git pull upstream <dev-branch>\n   ```\n\n3. Create a new topic branch (off the main project development branch `develop`) to\n   contain your feature, change, or fix:\n\n   ```bash\n   git checkout -b <topic-branch-name>\n   ```\n\n   > Please use `documentation/<descriptive-branch-name>`, `feature/<descriptive-branch-name>` or `bugfix/<descriptive-branch-name>` for branch names if you are enhancing documentation, adding a new feature or creating a bugfix.\n\n4. Commit your changes in logical chunks. Please adhere to these [git commit\n   message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your code is unlikely be merged into the main project. Use Git's\n   [interactive rebase](https://help.github.com/articles/interactive-rebase)\n   feature to tidy up your commits before making them public.\n\n5. Locally merge (or rebase) the upstream development branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream <dev-branch>\n   ```\n\n6. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n7. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description.\n\n**IMPORTANT**: By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project.\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.533203125,
          "content": "Description\n-----------\n\nSmall paragraph to describe the issue/bug.\n\n\nSteps to reproduce\n------------------\n\nMinimal steps to reproduce this behavior. Example:\n\n    1 - Open terminal\n    2 - cd<TAB>\n    3 - 'compinit not found...' is displayed\n\nExpected behavior:\n\n    - Tab completion of `cd` command.\n \n\n## Software version\n\n- `antigen version`\n- `zsh --version`\n- `uname -a`\n\n## Configuration\n\n- gist of `.antigenrc`\n- gist of `.zshrc`\n\n## More information\n\nScreenshot or any other information you may find relevant to troubleshoot the issue.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.078125,
          "content": "The MIT License (MIT)\n\nCopyright © Shrikant Sharat Kandula, http://sharats.me.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.828125,
          "content": "######################################################################\n# This file was autogenerated by 'configure'. Do not edit it directly!\n# Invocation was: ./configure \n######################################################################\nWITH_LOCK=yes\nWITH_DEFER=yes\nWITH_CACHE=yes\nWITH_DEBUG=yes\nWITH_PARALLEL=yes\nWITH_EXTENSIONS=yes\nWITH_COMPLETION=yes\n######################################################################\nSHELL     ?= sh\nPREFIX    ?= /usr/local\n\nCRAM_OPTS ?= -v\n\nPROJECT   ?= $(CURDIR)\nBIN       ?= ${PROJECT}/bin\nSRC       ?= ${PROJECT}/src\nTESTS     ?= ${PROJECT}/tests\nTOOLS     ?= ${PROJECT}/tools\nTEST      ?= ${PROJECT}/tests\n\nZSH_VERSION     ?= zsh-5.3\nCONTAINER_ROOT  ?= /antigen\nUSE_CONTAINER   ?= docker\nCONTAINER_IMAGE ?= desyncr/zsh-docker-\n\nTARGET     ?= ${BIN}/antigen.zsh\nSRC        ?= ${SRC}\nEXTENSIONS ?= \nGLOB       ?= \n\nWITH_DEBUG      ?= yes\nWITH_EXTENSIONS ?= yes\nWITH_DEFER      ?= yes\nWITH_LOCK       ?= yes\nWITH_PARALLEL   ?= yes\nWITH_CACHE      ?= yes\nWITH_COMPLETION ?= yes\n\nifeq (${WITH_EXTENSIONS}, yes)\nEXTENSIONS += ${SRC}/ext/ext.zsh\nendif\nifeq (${WITH_DEFER}, yes)\nEXTENSIONS += ${SRC}/ext/defer.zsh\nendif\nifeq (${WITH_LOCK}, yes)\nEXTENSIONS += ${SRC}/ext/lock.zsh\nendif\nifeq (${WITH_PARALLEL}, yes)\nEXTENSIONS += ${SRC}/ext/parallel.zsh\nendif\nifeq (${WITH_CACHE}, yes)\nGLOB       += ${SRC}/boot.zsh\nEXTENSIONS += ${SRC}/ext/cache.zsh\nendif\n\nLIB     = $(filter-out ${SRC}/lib/log.zsh,$(sort $(wildcard ${PWD}/src/lib/*.zsh)))\nHELPERS = $(sort $(wildcard ${PWD}/src/helpers/*.zsh)) \nCOMMANDS= $(sort $(wildcard ${PWD}/src/commands/*.zsh))\nGLOB   += ${SRC}/antigen.zsh ${HELPERS} ${LIB} ${COMMANDS} ${EXTENSIONS}\n\nifeq (${WITH_COMPLETION}, yes)\nGLOB  += ${SRC}/_antigen\nendif\n# If debug is enabled then load debug functions\nifeq (${WITH_DEBUG}, yes)\nGLOB  += ${SRC}/lib/log.zsh\nendif\n\nVERSION      ?= develop\nVERSION_FILE  = ${PROJECT}/VERSION\n\nBANNER_SEP    =$(shell printf '%*s' 70 | tr ' ' '\\#')\nBANNER_TEXT   =This file was autogenerated by \\`make\\`. Do not edit it directly!\nBANNER        =${BANNER_SEP}\\n\\# ${BANNER_TEXT}\\n${BANNER_SEP}\\n\n\nHEADER_TEXT   =\\# Antigen: A simple plugin manager for zsh\\n\\\n\\# Authors: Shrikant Sharat Kandula\\n\\\n\\#          and Contributors <https://github.com/zsh-users/antigen/contributors>\\n\\\n\\# Homepage: http://antigen.sharats.me\\n\\\n\\# License: MIT License <mitl.sharats.me>\\n\n\ndefine ised\n\tsed $(1) $(2) > \"$(2).1\"\n\tmv \"$(2).1\" \"$(2)\"\nendef\n\ndefine isede\n\tsed -E $(1) $(2) > \"$(2).1\"\n\tmv \"$(2).1\" \"$(2)\"\nendef\n\n.PHONY: itests tests install all\n\nbuild:\n\t@echo Building Antigen...\n\t@printf \"${BANNER}\" > ${BIN}/antigen.zsh\n\t@printf \"${HEADER_TEXT}\" >> ${BIN}/antigen.zsh\n\t@for src in ${GLOB}; do echo \"----> $$src\"; cat \"$$src\" >> ${TARGET}; done\n\t@echo \"-antigen-env-setup\" >> ${TARGET}\n\t@echo \"${VERSION}\" > ${VERSION_FILE}\n\t@$(call ised,\"s/{{ANTIGEN_VERSION}}/$$(cat ${VERSION_FILE})/\",${TARGET})\n\t@$(call ised,\"s/{{ANTIGEN_REVISION}}/$$(git log -n1 --format=%h -- src)/\",${TARGET})\n\t@$(call ised,\"s/{{ANTIGEN_REVISION_DATE}}/$$(git log -n1 --format='%ai' -- src)/\",${TARGET})\nifeq (${WITH_DEBUG}, no)\n\t@$(call isede,\"s/ (WARN|LOG|ERR|TRACE) .*&//\",${TARGET})\n\t@$(call isede,\"/ (WARN|LOG|ERR|TRACE) .*/d\",${TARGET})\nendif\n\t@echo Done.\n\t@ls -sh ${TARGET}\n\nrelease:\n\t# Move to release branch\n\tgit checkout develop\n\tgit checkout -b release/${VERSION}\n\t# Run build and tests\n\t${MAKE} build tests\n\t# Update changelog\n\t${EDITOR} CHANGELOG.md\n\t# Build release commit\n\tgit add CHANGELOG.md README.mkd ${VERSION_FILE}\n\tgit commit -S -m \"Update changelog for ${VERSION}\"\n\t# Update binary artifact\n\tgit add ${TARGET}\n\tgit commit -S -m \"Build release ${VERSION}\"\n\npublish:\n\tgit push origin release/${VERSION}\n\t# Merge release branch into develop before deploying\n\ndeploy:\n\tgit checkout develop\n\tgit tag -m \"Build release ${VERSION}\" -s ${VERSION}\n\tgit archive --output=${VERSION}.tar.gz --prefix=antigen-$$(echo ${VERSION}|sed s/v//)/ ${VERSION}\n\tzcat ${VERSION}.tar.gz | gpg --armor --detach-sign >${VERSION}.tar.gz.sign\n\t# Verify signature\n\tzcat ${VERSION}.tar.gz | gpg --verify ${VERSION}.tar.gz.sign -\n\t# Push upstream\n\tgit push upstream ${VERSION}\n\n.container:\nifeq (${USE_CONTAINER}, docker)\n\t@docker run --rm --privileged=true -it -v ${PROJECT}:/antigen ${CONTAINER_IMAGE}${ZSH_VERSION} $(shell echo \"${COMMAND}\" | sed \"s|${PROJECT}|${CONTAINER_ROOT}|g\")\nelse ifeq (${USE_CONTAINER}, no)\n\t${COMMAND}\nendif\n\ninfo:\n\t@${MAKE} .container COMMAND=\"sh -c 'cat ${PROJECT}/VERSION; zsh --version; git --version; env'\"\n\nitests:\n\t@${MAKE} tests CRAM_OPTS=-i\n\ntests:\n\t@${MAKE} .container COMMAND=\"sh -c 'ZDOTDIR=${TESTS} ANTIGEN=${PROJECT} cram ${CRAM_OPTS} --shell=zsh ${TEST}'\"\n\nstats:\n\t@${MAKE} .container COMMAND=\"${TOOLS}/stats --zsh zsh --antigen ${PROJECT}\"\n\ninstall:\n\tmkdir -p ${PREFIX}/share && cp ${TARGET} ${PREFIX}/share/antigen.zsh\n\nclean:\n\trm -f ${PREFIX}/share/antigen.zsh\n\ninstall-deps:\n\tsudo pip install cram=='0.6.*'\n\nall: clean build install\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 4.40625,
          "content": "SHELL     ?= sh\nPREFIX    ?= /usr/local\n\nCRAM_OPTS ?= -v\n\nPROJECT   ?= $(CURDIR)\nBIN       ?= ${PROJECT}/bin\nSRC       ?= ${PROJECT}/src\nTESTS     ?= ${PROJECT}/tests\nTOOLS     ?= ${PROJECT}/tools\nTEST      ?= ${PROJECT}/tests\n\nZSH_VERSION     ?= zsh-5.3\nCONTAINER_ROOT  ?= /antigen\nUSE_CONTAINER   ?= docker\nCONTAINER_IMAGE ?= desyncr/zsh-docker-\n\nTARGET     ?= ${BIN}/antigen.zsh\nSRC        ?= ${SRC}\nEXTENSIONS ?= \nGLOB       ?= \n\nWITH_DEBUG      ?= yes\nWITH_EXTENSIONS ?= yes\nWITH_DEFER      ?= yes\nWITH_LOCK       ?= yes\nWITH_PARALLEL   ?= yes\nWITH_CACHE      ?= yes\nWITH_COMPLETION ?= yes\n\nifeq (${WITH_EXTENSIONS}, yes)\nEXTENSIONS += ${SRC}/ext/ext.zsh\nendif\nifeq (${WITH_DEFER}, yes)\nEXTENSIONS += ${SRC}/ext/defer.zsh\nendif\nifeq (${WITH_LOCK}, yes)\nEXTENSIONS += ${SRC}/ext/lock.zsh\nendif\nifeq (${WITH_PARALLEL}, yes)\nEXTENSIONS += ${SRC}/ext/parallel.zsh\nendif\nifeq (${WITH_CACHE}, yes)\nGLOB       += ${SRC}/boot.zsh\nEXTENSIONS += ${SRC}/ext/cache.zsh\nendif\n\nLIB     = $(filter-out ${SRC}/lib/log.zsh,$(sort $(wildcard ${PWD}/src/lib/*.zsh)))\nHELPERS = $(sort $(wildcard ${PWD}/src/helpers/*.zsh)) \nCOMMANDS= $(sort $(wildcard ${PWD}/src/commands/*.zsh))\nGLOB   += ${SRC}/antigen.zsh ${HELPERS} ${LIB} ${COMMANDS} ${EXTENSIONS}\n\nifeq (${WITH_COMPLETION}, yes)\nGLOB  += ${SRC}/_antigen\nendif\n# If debug is enabled then load debug functions\nifeq (${WITH_DEBUG}, yes)\nGLOB  += ${SRC}/lib/log.zsh\nendif\n\nVERSION      ?= develop\nVERSION_FILE  = ${PROJECT}/VERSION\n\nBANNER_SEP    =$(shell printf '%*s' 70 | tr ' ' '\\#')\nBANNER_TEXT   =This file was autogenerated by \\`make\\`. Do not edit it directly!\nBANNER        =${BANNER_SEP}\\n\\# ${BANNER_TEXT}\\n${BANNER_SEP}\\n\n\nHEADER_TEXT   =\\# Antigen: A simple plugin manager for zsh\\n\\\n\\# Authors: Shrikant Sharat Kandula\\n\\\n\\#          and Contributors <https://github.com/zsh-users/antigen/contributors>\\n\\\n\\# Homepage: http://antigen.sharats.me\\n\\\n\\# License: MIT License <mitl.sharats.me>\\n\n\ndefine ised\n\tsed $(1) $(2) > \"$(2).1\"\n\tmv \"$(2).1\" \"$(2)\"\nendef\n\ndefine isede\n\tsed -E $(1) $(2) > \"$(2).1\"\n\tmv \"$(2).1\" \"$(2)\"\nendef\n\n.PHONY: itests tests install all\n\nbuild:\n\t@echo Building Antigen...\n\t@printf \"${BANNER}\" > ${BIN}/antigen.zsh\n\t@printf \"${HEADER_TEXT}\" >> ${BIN}/antigen.zsh\n\t@for src in ${GLOB}; do echo \"----> $$src\"; cat \"$$src\" >> ${TARGET}; done\n\t@echo \"-antigen-env-setup\" >> ${TARGET}\n\t@echo \"${VERSION}\" > ${VERSION_FILE}\n\t@$(call ised,\"s/{{ANTIGEN_VERSION}}/$$(cat ${VERSION_FILE})/\",${TARGET})\n\t@$(call ised,\"s/{{ANTIGEN_REVISION}}/$$(git log -n1 --format=%h -- src)/\",${TARGET})\n\t@$(call ised,\"s/{{ANTIGEN_REVISION_DATE}}/$$(git log -n1 --format='%ai' -- src)/\",${TARGET})\nifeq (${WITH_DEBUG}, no)\n\t@$(call isede,\"s/ (WARN|LOG|ERR|TRACE) .*&//\",${TARGET})\n\t@$(call isede,\"/ (WARN|LOG|ERR|TRACE) .*/d\",${TARGET})\nendif\n\t@echo Done.\n\t@ls -sh ${TARGET}\n\nrelease:\n\t# Move to release branch\n\tgit checkout develop\n\tgit checkout -b release/${VERSION}\n\t# Run build and tests\n\t${MAKE} build tests\n\t# Update changelog\n\t${EDITOR} CHANGELOG.md\n\t# Build release commit\n\tgit add CHANGELOG.md README.mkd ${VERSION_FILE}\n\tgit commit -S -m \"Update changelog for ${VERSION}\"\n\t# Update binary artifact\n\tgit add ${TARGET}\n\tgit commit -S -m \"Build release ${VERSION}\"\n\npublish:\n\tgit push origin release/${VERSION}\n\t# Merge release branch into develop before deploying\n\ndeploy:\n\tgit checkout develop\n\tgit tag -m \"Build release ${VERSION}\" -s ${VERSION}\n\tgit archive --output=${VERSION}.tar.gz --prefix=antigen-$$(echo ${VERSION}|sed s/v//)/ ${VERSION}\n\tzcat ${VERSION}.tar.gz | gpg --armor --detach-sign >${VERSION}.tar.gz.sign\n\t# Verify signature\n\tzcat ${VERSION}.tar.gz | gpg --verify ${VERSION}.tar.gz.sign -\n\t# Push upstream\n\tgit push upstream ${VERSION}\n\n.container:\nifeq (${USE_CONTAINER}, docker)\n\t@docker run --rm --privileged=true -it -v ${PROJECT}:/antigen ${CONTAINER_IMAGE}${ZSH_VERSION} $(shell echo \"${COMMAND}\" | sed \"s|${PROJECT}|${CONTAINER_ROOT}|g\")\nelse ifeq (${USE_CONTAINER}, no)\n\t${COMMAND}\nendif\n\ninfo:\n\t@${MAKE} .container COMMAND=\"sh -c 'cat ${PROJECT}/VERSION; zsh --version; git --version; env'\"\n\nitests:\n\t@${MAKE} tests CRAM_OPTS=-i\n\ntests:\n\t@${MAKE} .container COMMAND=\"sh -c 'ZDOTDIR=${TESTS} ANTIGEN=${PROJECT} cram ${CRAM_OPTS} --shell=zsh ${TEST}'\"\n\nstats:\n\t@${MAKE} .container COMMAND=\"${TOOLS}/stats --zsh zsh --antigen ${PROJECT}\"\n\ninstall:\n\tmkdir -p ${PREFIX}/share && cp ${TARGET} ${PREFIX}/share/antigen.zsh\n\nclean:\n\trm -f ${PREFIX}/share/antigen.zsh\n\ninstall-deps:\n\tsudo pip install cram=='0.6.*'\n\nall: clean build install\n"
        },
        {
          "name": "README.mkd",
          "type": "blob",
          "size": 6.365234375,
          "content": "<h1 align=\"center\">\n  <a href=\"https://github.com/zsh-users/antigen\"><img src=\"antigen.png\" alt=\"Antigen\"></a>\n  <br>\n  Antigen <sup>v2</sup>\n</h1>\n<h4 align=\"center\">The plugin manager for zsh.</h2>\n\n<p align=\"center\">\n  <a href=\"https://github.com/zsh-users/antigen/releases/latest\"><img src=\"https://img.shields.io/github/release/zsh-users/antigen.svg?label=latest\" alt=\"Latest\"></a> <a href=\"http://travis-ci.org/zsh-users/antigen\"><img src=\"https://img.shields.io/travis/zsh-users/antigen/develop.svg?label=develop\" alt=\"Build Status\"></a> <a href=\"http://travis-ci.org/zsh-users/antigen\"><img src=\"https://img.shields.io/travis/zsh-users/antigen/next.svg?label=next\" alt=\"Build Status\"></a>\n</p>\n<p align=\"center\">\n  <a href=\"#installation\">Installation</a> | <a href=\"https://github.com/zsh-users/antigen/wiki\">Documentation</a> | <a href=\"https://github.com/zsh-users/antigen/issues\">Bug tracker</a> | <a href=\"https://trello.com/b/P0xrGgfT/antigen\">Roadmap</a> | <a href=\"https://gitter.im/antigen-zsh/develop\">Chat</a> | <a href=\"http://mit.sharats.me/\">License</a>\n</p>\n\nAntigen is a small set of functions that help you easily manage your shell (zsh)\nplugins, called bundles. The concept is pretty much the same as bundles in a\ntypical vim+pathogen setup. Antigen is to zsh, what [Vundle][] is to vim.\n\n\nAntigen has reached a certain level of stability and has been used in the wild\nfor around a couple of years. If you face any problems, please open an issue.\n\nAntigen works with zsh versions `>= 4.3.11`.\n\n## Installation\n\nInstall Antigen from our main repository with the latest stable version available:\n\n    curl -L git.io/antigen > antigen.zsh\n    # or use git.io/antigen-nightly for the latest version\n\nThere are several installation methods using your System Package manager, just look\nat the [Installation][] wiki page.\n\nNow you may head towards the [Commands][] and [Configuration][] wiki pages to further\nunderstand Antigen's functionallity and customization.\n\n## Usage\n\nThe usage should be very familiar to you if you use Vundle. A typical `.zshrc`\nmight look like this:\n\n    source /path-to-antigen/antigen.zsh\n\n    # Load the oh-my-zsh's library.\n    antigen use oh-my-zsh\n\n    # Bundles from the default repo (robbyrussell's oh-my-zsh).\n    antigen bundle git\n    antigen bundle heroku\n    antigen bundle pip\n    antigen bundle lein\n    antigen bundle command-not-found\n\n    # Syntax highlighting bundle.\n    antigen bundle zsh-users/zsh-syntax-highlighting\n\n    # Load the theme.\n    antigen theme robbyrussell\n\n    # Tell Antigen that you're done.\n    antigen apply\n\nOpen your zsh with this `.zshrc` and you should see all the bundles you defined\nhere, getting installed. Once it's done, you are ready to roll. The complete\nsyntax for the `antigen bundle` command is discussed in the [Commands][] page.\n\nFurthermore, [In the wild][wild] wiki section has more configuration examples. You may\nas well take a look at the [Show off][] wiki page\nfor interactive mode usage.\n\n## Meta\n\n### Motivation\n\nIf you use zsh and [oh-my-zsh][], you know that having many different plugins\nthat are developed by many different authors in a single (sub)repo is not very\neasy to maintain. There are some really fantastic plugins and utilities in\noh-my-zsh, but having them all in a single repo doesn't really scale well. And I\nadmire robbyrussell's efforts for reviewing and merging the gigantic number of\npull requests the project gets. We need a better way of plugin management.\n\nThis was discussed on [a][1] [few][2] [issues][3], but it doesn't look like\nthere was any progress made. So, I'm trying to start this off with Antigen,\nhoping to better this situation. Please note that I'm by no means a zsh or any\nshell script expert (far from it).\n\n[1]: https://github.com/robbyrussell/oh-my-zsh/issues/465\n[2]: https://github.com/robbyrussell/oh-my-zsh/issues/377\n[3]: https://github.com/robbyrussell/oh-my-zsh/issues/1014\n\nInspired by vundle, Antigen can pull oh-my-zsh style plugins from various github\nrepositories. You are not limited to use plugins from the oh-my-zsh repository\nonly and you don't need to maintain your own fork and pull from upstream every\nnow and then. I actually encourage you to grab plugins and scripts from various\nsources, straight from the authors, before they even submit it to oh-my-zsh as a\npull request.\n\nAntigen also lets you switch the prompt theme with one command, just like that\n\n    antigen theme candy\n\nand your prompt is changed, just for this session of course (unless you put this\nline in your `.zshrc`).\n\n### Helping out\n\nWe are always looking for new contributors! We have a number of issues marked\nas [\"Help wanted\"][Help wanted] that are good places to jump in and get started. Take a look at\nour [Roadmap][] to see future projects and discuss ideas.\n\nPlease be sure to check out our [Contributing guidelines][] to understand our workflow,\nand our [Coding conventions][].\n\n### Feedback\n\nAny comments/suggestions/feedback is truly welcome. Please say hello to us on [Gitter][]. Or\nopen an issue to discuss something (anything!) about the project ;).\n\n### Articles\n\nThere are many articles written by Antigen users out there. Be sure to check them out\nin the [Articles][Articles] page.\n\n### Plugins and Alternatives\n\nThe [awesome-zsh-plugins][] list is a directory of plugins, themes and alternatives that\nyou may find useful.\n\n[Vundle]: https://github.com/gmarik/vundle\n[awesome-zsh-plugins]: https://github.com/unixorn/awesome-zsh-plugins\n[wild]: https://github.com/zsh-users/antigen/wiki/In-the-wild\n[oh-my-zsh]: https://github.com/robbyrussell/oh-my-zsh\n[issue]: https://github.com/zsh-users/antigen/issues\n[license]: http://mit.sharats.me\n[contributing]: https://github.com/zsh-users/antigen/wiki/Contributing\n[wiki]: https://github.com/zsh-users/antigen/wiki\n[Commands]: https://github.com/zsh-users/antigen/wiki/Commands\n[Installation]: https://github.com/zsh-users/antigen/wiki/Installation\n[Configuration]: https://github.com/zsh-users/antigen/wiki/Configuration\n[Show off]: https://github.com/zsh-users/antigen/wiki/Show-off\n[Help wanted]: https://github.com/zsh-users/antigen/issues?q=is%3Aissue+is%3Aopen+label%3A%22Help+wanted%22\n[Roadmap]: https://trello.com/b/P0xrGgfT/antigen\n[Contributing guidelines]: https://github.com/zsh-users/antigen/wiki/Contributing\n[Coding conventions]: https://github.com/zsh-users/antigen/wiki/Styleguide\n[Gitter]: https://gitter.im/antigen-zsh/develop\n[Articles]: https://github.com/zsh-users/antigen/wiki/Articles \n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0078125,
          "content": "develop\n"
        },
        {
          "name": "antigen.png",
          "type": "blob",
          "size": 6.025390625,
          "content": null
        },
        {
          "name": "antigen.zsh",
          "type": "blob",
          "size": 0.0732421875,
          "content": "_ANTIGEN_INSTALL_DIR=${0:A:h}\nsource $_ANTIGEN_INSTALL_DIR/bin/antigen.zsh\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 2.25,
          "content": "#!/bin/zsh\n# vim: sw=2 ts=2 et!\ntarget=Makefile\narguments=\"$@\"\ntypeset -A opts;\nopts=(\nwith-debug      yes\nwith-extensions yes\nwith-lock \t    yes\nwith-parallel\t  yes\nwith-cache \t    yes\nwith-defer \t    yes\nwith-completion yes\n)\n\nif [[ $1 == \"--help\" || $1 == \"-h\" ]]; then\ncat >&1 <<EOH\nUsage:\n    ./configure --with-option[=[yes|no]] --[enable|disable]-option\n\nAvailable options:\n\n    - debug      - Enable/disable debug library\n    - extensions - Enable/disable lock, parallel, cache and defer options\n    - lock       - Enable/disable lock\n    - parallel   - Enable/disable parallel\n    - cache      - Enable/disable cache\n    - defer      - Enable/disable defer\n    - completion - Enable/disable completion\n\nAll options are enabled by default.\n\nExample:\n\n    # Disable lock, parallel, cache and defer\n    ./configure --disable-extensions\n\n    # Disable completion\n    ./configure --disable-completion\n    \n    # Enable debug\n    ./configure --with-debug\n\nEOH\n  exit 0 \nfi\n\n\nwhile [[ $# -gt 0 ]]; do\n\targkey=\"${1%\\=*}\"\n\tkey=\"${argkey//--/}\"\n  if [[ $key = enable-* || $key = disable-* ]]; then\n    if [[ $1 = *=* ]]; then\n      printf \"No options required for: %s (%s)\\n\" $argkey $1 >&2\n      exit 1\n    fi\n    [[ $key = enable-* ]] && value=yes || value=no\n    key=\"with-${key//enable-/}\"\n    key=\"${key//disable-/}\"\n    if [[ ! $opts[$key] ]]; then\n      printf \"Invalid option argument: %s (%s)\\n\" $argkey $key >&2\n      printf \"Valid options are: %s\\n\" ${(kj:, :)opts} >&2\n      exit 1\n    fi\n    \n    # Disable all extentions\n    if [[ $key == \"with-extensions\" && $value == \"no\" ]]; then\n      opts[with-lock]=no\n      opts[with-parallel]=no\n      opts[with-cache]=no\n      opts[with-defer]=no\n    fi\n  else\n    if [[ $1 = *=* ]]; then\n      value=\"${1#*=}\"\n    else\n      value=$opts[$key]\n    fi\n  fi\n\n  if [[ $opts[$key] != \"\" ]]; then\n    opts[$key]=$value\n  else\n    printf \"Invalid argument: %s (%s)\\n\" $key $1 >&2\n    exit 1\n  fi\n\n  shift\n\ndone\n\nBANNER_SEP=$(printf '%*s' 70 | tr ' ' '\\#')\n\ncat > $target <<EOM\n${BANNER_SEP}\n# This file was autogenerated by 'configure'. Do not edit it directly!\n# Invocation was: $0 $arguments\n${BANNER_SEP}\nEOM\n\n{\n  for config in ${(k)opts}; do\n    echo \"${${config:u}//-/_}=${opts[$config]}\"\n  done\n\n  echo ${BANNER_SEP}\n  cat Makefile.in\n} >> $target\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}