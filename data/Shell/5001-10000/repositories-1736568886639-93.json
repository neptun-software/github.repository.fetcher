{
  "metadata": {
    "timestamp": 1736568886639,
    "page": 93,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ohmybash/oh-my-bash",
      "stars": 6171,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3466796875,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Matches multiple files with brace expansion notation\n[*.{sh,py,yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.10546875,
          "content": "# style: Remove trailing whitespace and add missing final newlines\n5cd1f0eb1668f06bf20378d6d4308fd4a1890581\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.287109375,
          "content": "# custom files\n!/custom/aliases/example.aliases.sh\n!/custom/completions/example.completion.sh\n!/custom/plugins/example/\n!/custom/themes/example/\n!/custom/example.sh\n/custom/\n\n# temp files directories\n/cache/\n/log/\n!/cache/.gitkeep\n!/log/.gitkeep\n\n# disabled files\n*.swp\n*.disabled\n.idea/\n*.tmp\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 0.076171875,
          "content": "disable=SC1087 # Use braces when expanding arrays -- needed for Zsh, not Bash\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1416015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at OhMyBasher@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.95703125,
          "content": "# CONTRIBUTING GUIDELINES\n\nOh-My-Bash is a community-driven project. Contribution is welcome, encouraged and appreciated.\nIt is also essential for the development of the project.\n\nThese guidelines are an attempt at better addressing the huge amount of pending\nissues and pull requests. Please read them closely.\n\nForemost, be so kind as to [search](#use-the-search-luke). This ensures any contribution\nyou would make is not already covered.\n\n* [Issues](#reporting-issues)\n  * [You have a problem](#you-have-a-problem)\n  * [You have a suggestion](#you-have-a-suggestion)\n* [Pull Requests](#pull-requests)\n  * [Getting started](#getting-started)\n  * [You have a solution](#you-have-a-solution)\n  * [New Theme](#new-theme)\n  * [New Plugin](#new-plugin)\n  * [Copyright and responsibility](#copyright-and-responsibility)\n  * [Improving PR](#improving-pr)\n* [Information sources (_aka_ search)](#use-the-search-luke)\n\n**BONUS:** [Volunteering](#you-have-spare-time-to-volunteer)\n\n## Reporting Issues\n\n### You have a problem\n\nPlease be so kind as to [search](#use-the-search-luke) for any open issue already covering\nyour problem.\n\nIf you find one, comment on it so we can know there are more people experiencing it.\n\nIf not, look at the [Troubleshooting](https://github.com/ohmybash/oh-my-bash/wiki/Troubleshooting)\npage for instructions on how to gather data to better debug your problem.\n\nThen, you can go ahead and create an issue with as much detail as you can provide.\nIt should include the data gathered as indicated above, along with:\n\n1. How to reproduce the problem\n2. What the correct behavior should be\n3. What the actual behavior is\n\nPlease copy to anyone relevant (e.g. plugin maintainers) by mentioning their GitHub handle\n(starting with `@`) in your message.\n\nWe will do our very best to help you.\n\n### You have a suggestion\n\nPlease be so kind as to [search](#use-the-search-luke) for any open issue already covering\nyour suggestion.\n\nIf you find one, comment on it so we can know there are more people supporting it.\n\nIf not, you can go ahead and create an issue. Please copy to anyone relevant (_eg_ plugin\nmaintainers) by mentioning their GitHub handle (starting with `@`) in your message.\n\n## Pull Requests\n\nThe code should work with Bash 3.2.  Make all the changes to be\nPOSIX-compatible for external tools unless it is related to a plugin that\nclearly targets specific tools or environment such as \"GNU make\" or \"macOS\".\n\n### Getting started\n\nBefore starting to work on it, please be so kind as to\n[search](#use-the-search-luke) for any open issues, and any\npending/merged/rejected PRs covering or related to what you are going to\nchange.\n\n- If you try to solve a [problem](#you-have-a-problem) and a solution to the\n  problem is already reported, try it out and +1 the pull request if the\n  solution works OK. On the other hand, if you think your solution is better,\n  post it with a reference to the other one so we can have both solutions to\n  compare.\n- If you find an existing PR that is related, try it out and work with the\n  author on a common solution.\n- If not, then go ahead and submit a PR. Please copy to anyone relevant\n  (e.g. plugin maintainers) by mentioning their GitHub handle (starting with\n  `@`) in your message.\n\nYou should be familiar with the basics of\n[contributing on GitHub](https://help.github.com/articles/using-pull-requests) and have a fork\n[properly set up](https://github.com/ohmybash/oh-my-bash/wiki/Contribution-Technical-Practices).\n\nYou MUST always create a PR with _a dedicated branch_ (i.e., a branch that is\nNOT `master`) based on the latest upstream tree.\n\nThe commit message typically has the following form (with the first word in the\nverbal phrase being in the infinitive and capitalized):\n\n```\n<section>: <Verb phrase to describe the change>\n\n<detailed description if any>\n```\n\nThe conventional commits are also accepted:\n\n```\n<type>(<section>): <verb phrase to describe the change>\n\n<detailed description if any>\n```\n\nWhen you open a new PR, please make sure you do it right. Also, reference in\nthe PR description body any issues that would be solved by the PR, [for\ninstance](https://help.github.com/articles/closing-issues-via-commit-messages/)\n_\"Fixes #XXXX\"_ for issue number XXXX.\n\n### You have a solution\n\nIf you try to fix a problem or solve an issue in a specific\nplugin/theme/aliases, please also check the other modules if they have a\nsimilar issue or can be improved in a similar way.\n\n### New Theme\n\nA new theme is often created by modifying an existing theme.  In that case,\nplease clarify from which theme the new theme is derived from.  If possible, it\nis recommended to source the original theme file\n`\"$OSH\"/themes/<original>/<original>.base.sh` or\n`\"$OSH\"/themes/<original>/<original>.theme.sh` in the new theme file\n`\"$OSH\"/themes/<new>/<new>.theme.sh` and include only the new parts in the new\ntheme file.\n\nThe theme needs to have exactly one image file.  The image size needs to be\nheight ~290px and width 600..800px to make the theme gallery aligned and also\nto keep the repository size small. The filename should be `<theme\nname>-dark.png` or `<theme name>-light.png` depending on the dark or light\nbackground of the terminal used to make the image.\n\nWhen you add a new theme, please also update\n[themes/THEMES.md](https://github.com/ohmybash/oh-my-bash/blob/master/themes/THEMES.md).\nAfter your new theme is merged, the list in\n[Themes](https://github.com/ohmybash/oh-my-bash/wiki/Themes) in the wiki also\nneeds to be updated.\n\n### New Plugin\n\nA new plugin is accepted when it is needed to implement features in themes or\nwhen it provides significantly useful tools for interactive uses.  To show that\nit is worth including in Oh My Bash, you will have to find testers to +1 your\nPR.\n\nWhen you add a new plugin, please also update\n[plugins/README.md](https://github.com/ohmybash/oh-my-bash/blob/master/plugins/README.md)\n\n### Copyright and responsibility\n\nIf you submit codes derived from other's work, please confirm that the license\nis compatible with the MIT license.  Please clarify which part is your own work\nand which is not in the code and include **the copyright notice of the original\nauthors**.  You may also include your own copyright notice, but we may omit\nthem because we can track them in the Git history.\n\nYou can provide codes under any licenses which are compatible with the MIT\nlicense.  When you submit and update a PR (*NOT when the PR is merged*), unless\notherwise specified, **we assume that you provide the codes/texts under the MIT\nlicense**.  If you would like to provide the codes/texts with another license,\nplease specify it in the codes/texts.  If you forgot to declare the license\nthat is not MIT, you can later declare it for the part you contributed.\n\nDo not submit AI-generated codes/documentation unless you understand both the\ngenerated codes/documentation and the related **exiting codebase**.  You are\nrequired to be responsible for requests to the changes and reports of the\nissues for the submitted codes/documentation.  Also, please confirm that the\ngenerated codes/texts can be included in Oh My Bash **with your own copyright\nunder the MIT license**.\n\n### Improving PR\n\nAfter opening PRs, you will usually receive requests for changes.  It is rare\nfor a PR to be merged without any modifications.  Please be so kind as to\nrespond to the requests.  If you have any questions, please feel free to ask\nfurther.  If you become busy, please tell us that instead of ignoring our\nmessages.  You are expected to notify when you will be available again, hand\nover the PR to others, or to notify that you would discard the PR.\n\nAfter the final version of the PR is settled, the fix-up commits that fix\nproblems introduced in earlier commits in the same PR will be squashed.  Also,\nthe commits whose purposes heavily overlap will be squashed.\n\nFor this reason, a weight of one commit is not equal for different types of\ncontributions.  For the new theme/plugin/aliases, the PR is likely to be\nsquashed into a single commit unless the changes are properly separated into\ncommits for respective purposes.  On the other hand, PRs including several\nminor fixes to the exiting codebase will not be squashed because each commit\ngives a separate fix to the exiting code.\n\n----\n\n## Use the Search, Luke\n\n_May the Force (of past experiences) be with you_\n\nGitHub offers [many search features](https://help.github.com/articles/searching-github/)\nto help you check whether a similar contribution to yours already exists. Please search\nbefore making any contribution, it avoids duplicates and eases maintenance. Trust me,\nthat works 90% of the time.\n\nYou can also take a look at the [FAQ](https://github.com/ohmybash/oh-my-bash/wiki/FAQ)\nto be sure your contribution has not already come up.\n\nIf all fails, your thing has probably not been reported yet, so you can go ahead\nand [create an issue](#reporting-issues) or [submit a PR](#submitting-pull-requests).\n\n----\n\n### You have spare time to volunteer\n\nVery nice!! :)\n\nPlease have a look at the [Volunteer](https://github.com/ohmybash/oh-my-bash/wiki/Volunteers)\npage for instructions on where to start and more.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.2138671875,
          "content": "Copyright (c) 2009-2017 Robby Russell and contributors (https://github.com/ohmyzsh/ohmyzsh/contributors)\n\nCopyright 2017-present Toan Nguyen and contributors (https://github.com/ohmybash/oh-my-bash/graphs/contributors)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.3125,
          "content": "Oh My Bash is an open source, community-driven framework for managing your [bash](https://www.gnu.org/software/bash/) configuration.\n\nSounds boring. Let's try again.\n\nOh My Bash will not make you a 10x developer...but you might feel like one.\n\nOnce installed, your terminal shell will become the talk of the town or your money back! With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, \"that is amazing! are you some sort of genius?\"\n\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often.\n\n## Getting Started\n\n### Prerequisites\n\n__Disclaimer:__ _Oh My Bash works best on macOS and Linux._\n\n* Unix-like operating system (macOS or Linux)\n* `curl` or `wget` should be installed\n* `git` should be installed\n\n### Basic Installation\n\nOh My Bash is installed by running one of the following commands in your terminal. You can install this via the command-line with either `curl` or `wget`.\n\n#### via curl\n\n```shell\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\"\n```\n\n#### via wget\n\n```shell\nbash -c \"$(wget https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh -O -)\"\n```\n\nThis replaces `~/.bashrc` with the version provided by Oh My Bash. The original `.bashrc` is backed up with the name `~/.bashrc.omb-TIMESTAMP`.\nIf `~/.bash_profile` does not exist, this also creates a new file `~/.bash_profile` with the default contents.\n\n⚠️ If `~/.bash_profile` already existed before Oh My Bash is installed, please make sure that`~/.bash_profile` contains the line `source ~/.bashrc` or `. ~/.bashrc`.\nIf not, please add the following three lines in `~/.bash_profile`:\n```bash\nif [[ -f ~/.bashrc ]]; then\n  source ~/.bashrc\nfi\n```\n\n## Using Oh My Bash\n\n### Plugins\n\nOh My Bash comes with a shit load of plugins to take advantage of. You can take a look in the [plugins](https://github.com/ohmybash/oh-my-bash/tree/master/plugins) directory and/or the [wiki](https://github.com/ohmybash/oh-my-bash/wiki/Plugins) to see what's currently available.\n\n#### Enabling Plugins\n\nOnce you spot a plugin (or several) that you'd like to use with Oh My Bash, you'll need to enable them in the `.bashrc` file. You'll find the bashrc file in your `$HOME` directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\n\nFor example, this line might begin to look like this:\n\n```shell\nplugins=(git bundler osx rake ruby)\n```\n\n##### With Conditionals\n\nYou may want to control when and/or how plugins should be enabled.\n\nFor example, if you want the `tmux-autoattach` plugin to only run on SSH sessions, you could employ a trivial conditional that checks for the `$SSH_TTY` variable. Just make sure to remove the plugin from the larger plugin list.\n\n``` bash\n[ \"$SSH_TTY\" ] && plugins+=(tmux-autoattach)\n```\n\n#### Using Plugins\n\nMost plugins (should! we're working on this) include a __README__, which documents how to use them.\n\n### Themes\n\nWe'll admit it. Early in the Oh My Bash world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have [screenshots](https://github.com/ohmybash/oh-my-bash/wiki/Themes) on our wiki or alternatively [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh/wiki/themes) wiki.\n\n#### Selecting a Theme\n\n_The font theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one for the original maintainer of Oh My Bash._\n\nOnce you find a theme that you want to use, you will need to edit the `~/.bashrc` file. You'll see an environment variable (all caps) in there that looks like:\n\n```shell\nOSH_THEME=\"font\"\n```\n\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\n\n```shell\nOSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# you might need to install a special Powerline font on your console's host for this to work\n# see https://github.com/ohmybash/oh-my-bash/wiki/Themes#agnoster\n```\n\nOpen up a new terminal window and your prompt should look something like this:\n\n![Font theme](themes/font/font-dark.png)\n\nIn case you did not find a suitable theme for your needs, please have a look\nat the wiki for [more of them](https://github.com/ohmybash/oh-my-bash/wiki/Themes).\n\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\n\n```shell\nOSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\n```\n\nIf there are themes you don't like, you can add them to an ignored list:\n\n```shell\nOMB_THEME_RANDOM_IGNORED=(\"powerbash10k\" \"wanelo\")\n```\n\nThe selected theme name can be checked by the following command:\n\n```shell\n$ echo \"$OMB_THEME_RANDOM_SELECTED\"\n```\n\n## Advanced Topics\n\nIf you're the type that likes to get their hands dirty, these sections might resonate.\n\n### Advanced Installation\n\nSome users may want to change the default path, or manually install Oh My Bash.\n\n#### Custom Directory\n\nThe default location is `~/.oh-my-bash` (hidden in your home directory)\n\nIf you'd like to change the install directory with the `OSH` environment variable, either by running `export OSH=/your/path` before installing, or by setting it before the end of the install pipeline like this:\n\n```shell\nexport OSH=\"$HOME/.dotfiles/oh-my-bash\"; bash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\"\n```\n\n#### Unattended install\n\nIf you're running the Oh My Bash install script as part of an automated install, you can pass the\nflag `--unattended` to the `install.sh` script. This will have the effect of not trying to change\nthe default shell, and also won't run `bash` when the installation has finished.\n\n```sh\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\" --unattended\n```\n\n#### System-wide installation\n\nFor example, Oh My Bash can be installed to `/usr/local/share/oh-my-bash` for the system-wide installation by specifying the option `--prefix=PREFIX`.\n\n```sh\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\" --prefix=/usr/local\n```\n\nTo enable Oh My Bash, the Bash startup file `.bashrc` needs to be manually set up by each user.\nThe template of `.bashrc` is available in `PREFIX/share/oh-my-bash/bashrc`.\nThe users can copy the template file to `~/.bashrc` and edit it.\n\n```bash\ncp /usr/local/share/oh-my-bash/bashrc ~/.bashrc\n```\n\n#### Manual Installation\n\n##### 1. Clone the repository:\n\n```shell\ngit clone https://github.com/ohmybash/oh-my-bash.git ~/.oh-my-bash\n```\n\n##### 2. *Optionally*, backup your existing `~/.bashrc` file:\n\n```shell\ncp ~/.bashrc ~/.bashrc.orig\n```\n\n##### 3. Create a new sh configuration file\n\nYou can create a new sh config file by copying the template that we have included for you.\n\n```shell\ncp ~/.oh-my-bash/templates/bashrc.osh-template ~/.bashrc\n```\n\n##### 4. Reload your .bashrc\n\n```shell\nsource ~/.bashrc\n```\n\n##### 5. Initialize your new bash configuration\n\nOnce you open up a new terminal window, it should load sh with Oh My Bash's configuration.\n\n### Installation Problems\n\nIf you have any hiccups installing, here are a few common fixes.\n\n* You _might_ need to modify your `PATH` in `~/.bashrc` if you're not able to find some commands after switching to `oh-my-bash`.\n* If you installed manually or changed the install location, check the `OSH` environment variable in `~/.bashrc`.\n\n### Customization of  Plugins and Themes\n\nIf you want to override any of the default behaviors, just add a new file (ending in `.sh`) in the `custom/` directory.\n\nIf you have many functions that go well together, you can put them as a `XYZ.plugin.sh` file in the `custom/plugins/` directory and then enable this plugin.\n\nIf you would like to modify an existing module (theme/plugin/aliases/completion) bundled with Oh My Bash, first copy the original module to `custom/` directory and modify it.  It will be loaded instead of the original one.\n\n```bash\n$ mkdir -p \"$OSH_CUSTOM/themes\"\n$ cp -r {\"$OSH\",\"$OSH_CUSTOM\"}/themes/agnoster\n$ EDIT \"$OSH_CUSTOM/themes/agnoster/agnoster.theme.sh\"\n```\n\nIf you would like to track the upstream changes for your customized version of modules, you can optionally directly edit the original files and commit them.  In this case, you need to handle possible conflicts with the upstream in upgrading.\n\nIf you would like to replace an existing module (theme/plugin/aliases/complet) bundled with Oh My Bash, create a module of the same name in the `custom/` directory so that it will be loaded instead of the original one.\n\n### Configuration\n\n#### Enable/disable python venv\n\nThe python virtualenv/condaenv information in the prompt may be enabled by the following line in `~/.bashrc`.\n\n```bash\nOMB_PROMPT_SHOW_PYTHON_VENV=true\n```\n\nSome themes turn on it by default.  If you would like to turn it off, you may disable it by the following line in `~/.bashrc`:\n\n```bash\nOMB_PROMPT_SHOW_PYTHON_VENV=false\n```\n\n#### Disable internal uses of `sudo`\n\nSome plugins of oh-my-bash internally use `sudo` when it is necessary.  However, this might clutter with the `sudo` log.  To disable the use of `sudo` by oh-my-bash, `OMB_USE_SUDO` can be set to `false` in `~/.bashrc`.\n\n```bash\nOMB_USE_SUDO=false\n```\n\nEach plugin might provides finer configuration variables to control the use of `sudo` by each plugin.\n\n## Getting Updates\n\nBy default, you will be prompted to check for upgrades every few weeks. If you would like `oh-my-bash` to automatically upgrade itself without prompting you, set the following in your `~/.bashrc`:\n\n```shell\nDISABLE_UPDATE_PROMPT=true\n```\n\nTo disable automatic upgrades, set the following in your `~/.bashrc`:\n\n```shell\nDISABLE_AUTO_UPDATE=true\n```\n\n### Manual Updates\n\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\n\n```shell\nupgrade_oh_my_bash\n```\n\nMagic!\n\n## Uninstalling Oh My Bash\n\nOh My Bash isn't for everyone. We'll miss you, but we want to make this an easy breakup.\n\nIf you want to uninstall `oh-my-bash`, just run `uninstall_oh_my_bash` from the command-line. It will remove itself and revert your previous `bash` configuration.\n\n## Contributing\n\nCheck out [`CONTRIBUTING.md`](CONTRIBUTING.md) and also [Code of\nConduct](CODE_OF_CONDUCT.md).\n\nThis project is initially ported from Oh My Zsh and Bash-it by `@nntoan` and\nhas been developed in a community-driven way.  Most of the contributors are far\nfrom being [Bash](https://www.gnu.org/software/bash/) experts, and there are\nmany ways to improve the codebase.  We are looking for more people with\nexpertise in Bash scripting.  If you have ideas on how to make the\nconfiguration easier to maintain (and faster), don't hesitate to fork and send\npull requests!\n\nWe also need people to test out pull-requests.  Take a look through [the open\nissues](https://github.com/ohmybash/oh-my-bash/issues) and help where you can.\n\n## Contributors\n\nOh My Bash has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\n\nThank you so much!\n\n## License\n\nSee [`LICENSE.md`](License.md).\nOh My Bash is derived from [Oh My Zsh](https://github.com/ohmyzsh/ohmyzsh).\nOh My Bash is released under the [MIT license](LICENSE.md).\n"
        },
        {
          "name": "aliases",
          "type": "tree",
          "content": null
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "oh-my-bash.sh",
          "type": "blob",
          "size": 6.345703125,
          "content": "#!/usr/bin/env bash\n\n# Bail out early if non-interactive\n#\n# Note: We cannot produce any error messages here because, in some systems,\n# /etc/gdm3/Xsession sources ~/.profile and checks stderr.  If there is any\n# stderr ourputs, it refuses to start the session.\ncase $- in\n  *i*) ;;\n    *) return;;\nesac\n\nif [ -z \"${BASH_VERSION-}\" ]; then\n  printf '%s\\n' 'oh-my-bash: This is not a Bash. Use OMB with Bash 3.2 or higher.' >&2\n  return 1\nfi\n_omb_bash_version=$((BASH_VERSINFO[0] * 10000 + BASH_VERSINFO[1] * 100 + BASH_VERSINFO[2]))\nif ((_omb_bash_version < 30200)); then\n  printf '%s\\n' \"oh-my-bash: OMB does not support this version of Bash ($BASH_VERSION)\" >&2\n  printf '%s\\n' \"oh-my-bash: Use OMB with Bash 3.2 or higher\" >&2\n  return 1\nfi\n\nOMB_VERSINFO=(1 0 0 0 master noarch)\nOMB_VERSION=\"${OMB_VERSINFO[0]}.${OMB_VERSINFO[1]}.${OMB_VERSINFO[2]}(${OMB_VERSINFO[3]})-${OMB_VERSINFO[4]} (${OMB_VERSINFO[5]})\"\n_omb_version=$((OMB_VERSINFO[0] * 10000 + OMB_VERSINFO[1] * 100 + OMB_VERSINFO[2]))\n\n# Check for updates on initial load...\nif [[ $DISABLE_AUTO_UPDATE != true ]]; then\n  source \"$OSH\"/tools/check_for_upgrade.sh\nfi\n\n# Initializes Oh My Bash\n\n# Set OSH_CUSTOM to the path where your custom config files\n# and plugins exists, or else we will use the default custom/\nif [[ ! ${OSH_CUSTOM-} ]]; then\n  OSH_CUSTOM=$OSH/custom\n  [[ -d $OSH_CUSTOM && -O $OSH_CUSTOM ]] ||\n    OSH_CUSTOM=${XDG_DATA_HOME:-$HOME/.local/share}/oh-my-bash/custom\nfi\n\n# Set OSH_CACHE_DIR to the path where cache files should be created\n# or else we will use the default cache/\nif [[ ! ${OSH_CACHE_DIR-} ]]; then\n  OSH_CACHE_DIR=$OSH/cache\n  [[ -d $OSH_CACHE_DIR && -O $OSH_CACHE_DIR ]] ||\n    OSH_CACHE_DIR=${XDG_STATE_HOME:-$HOME/.local/state}/oh-my-bash/cache\nfi\n\n_omb_module_loaded=\nfunction _omb_module_require {\n  local status=0\n  local -a files=() modules=()\n  while (($#)); do\n    local type=lib name=$1; shift\n    [[ $name == *:* ]] && type=${name%%:*} name=${name#*:}\n    name=${name%.bash}\n    name=${name%.sh}\n\n    local module=$type:$name\n    [[ ' '$_omb_module_loaded' ' == *\" $module \"* ]] && continue\n\n    local -a locations=()\n    case $type in\n    lib)        locations=({\"$OSH_CUSTOM\",\"$OSH\"}/lib/\"$name\".{bash,sh}) ;;\n    plugin)     locations=({\"$OSH_CUSTOM\",\"$OSH\"}/plugins/\"$name\"/\"$name\".plugin.{bash,sh}) ;;\n    alias)      locations=({\"$OSH_CUSTOM\",\"$OSH\"}/aliases/\"$name\".aliases.{bash,sh}) ;;\n    completion) locations=({\"$OSH_CUSTOM\",\"$OSH\"}/completions/\"$name\".completion.{bash,sh}) ;;\n    theme)      locations=({\"$OSH_CUSTOM\"{,/themes},\"$OSH\"/themes}/\"$name\"/\"$name\".theme.{bash,sh}) ;;\n    *)\n      printf '%s\\n' \"oh-my-bash (module_require): unknown module type '$type'.\" >&2\n      status=2\n      continue ;;\n    esac\n\n    local path\n    for path in \"${locations[@]}\"; do\n      if [[ -f $path ]]; then\n        files+=(\"$path\")\n        modules+=(\"$module\")\n        continue 2\n      fi\n    done\n\n    printf '%s\\n' \"oh-my-bash (module_require): module '$type:$name' not found.\" >&2\n    status=127\n  done\n\n  if ((status == 0)); then\n    local i\n    for i in \"${!files[@]}\"; do\n      local path=${files[i]} module=${modules[i]}\n      [[ ' '$_omb_module_loaded' ' == *\" $module \"* ]] && continue\n      _omb_module_loaded=\"$_omb_module_loaded $module\"\n      source \"$path\" || status=$?\n    done\n  fi\n\n  return \"$status\"\n}\n\nfunction _omb_module_require_lib        { _omb_module_require \"${@/#/lib:}\"; }\nfunction _omb_module_require_plugin     { _omb_module_require \"${@/#/plugin:}\"; }\nfunction _omb_module_require_alias      { _omb_module_require \"${@/#/alias:}\"; }\nfunction _omb_module_require_completion { _omb_module_require \"${@/#/completion:}\"; }\nfunction _omb_module_require_theme      { _omb_module_require \"${@/#/theme:}\"; }\n\n# Load all of the config files in ~/.oh-my-bash/lib that end in .sh\n# TIP: Add files you don't want in git to .gitignore\n_omb_module_require_lib omb-util\n_omb_module_require_lib utils\n_omb_util_glob_expand _omb_init_files '{\"$OSH\",\"$OSH_CUSTOM\"}/lib/*.{bash,sh}'\n_omb_init_files=(\"${_omb_init_files[@]##*/}\")\n_omb_init_files=(\"${_omb_init_files[@]%.bash}\")\n_omb_init_files=(\"${_omb_init_files[@]%.sh}\")\n_omb_module_require_lib \"${_omb_init_files[@]}\"\nunset -v _omb_init_files\n\n# Figure out the SHORT hostname\nif [[ $OSTYPE = darwin* ]]; then\n  # macOS's $HOST changes with dhcp, etc. Use ComputerName if possible.\n  SHORT_HOST=$(scutil --get ComputerName 2>/dev/null) || SHORT_HOST=${HOST/.*}\nelse\n  SHORT_HOST=${HOST/.*}\nfi\n\n# Load all of the plugins that were defined in ~/.bashrc\n_omb_module_require_plugin \"${plugins[@]}\"\n\n# Load all of the aliases that were defined in ~/.bashrc\n_omb_module_require_alias \"${aliases[@]}\"\n\n# Load all of the completions that were defined in ~/.bashrc\n_omb_module_require_completion \"${completions[@]}\"\n\n# Load all of your custom configurations from custom/\n_omb_util_glob_expand _omb_init_files '\"$OSH_CUSTOM\"/*.{sh,bash}'\nfor _omb_init_file in \"${_omb_init_files[@]}\"; do\n  [[ -f $_omb_init_file ]] &&\n    source \"$_omb_init_file\"\ndone\nunset -v _omb_init_files _omb_init_file\n\n# Load the theme\nif [[ $OSH_THEME == random ]]; then\n  _omb_util_glob_expand _omb_init_files '\"$OSH\"/themes/*/*.theme.sh'\n\n  # Remove ignored themes from the list\n  for _omb_init_theme in random \"${OMB_THEME_RANDOM_IGNORED[@]}\"; do\n    for _omb_init_index in \"${!_omb_init_files[@]}\"; do\n      [[ ${_omb_init_files[_omb_init_index]} == */\"$_omb_init_theme\"/* ]] &&\n        unset -v '_omb_init_files[_omb_init_index]'\n    done\n    unset -v _omb_init_index\n  done\n  unset -v _omb_init_theme\n  _omb_init_files=(\"${_omb_init_files[@]}\")\n\n  if ((${#_omb_init_files[@]})); then\n    _omb_init_file=${_omb_init_files[RANDOM%${#_omb_init_files[@]}]}\n    source \"$_omb_init_file\"\n    OMB_THEME_RANDOM_SELECTED=${_omb_init_file##*/}\n    OMB_THEME_RANDOM_SELECTED=${OMB_THEME_RANDOM_SELECTED%.theme.bash}\n    OMB_THEME_RANDOM_SELECTED=${OMB_THEME_RANDOM_SELECTED%.theme.sh}\n    printf '%s\\n' \"[oh-my-bash] Random theme '$OMB_THEME_RANDOM_SELECTED' ($_omb_init_file) loaded...\"\n  fi\n  unset -v _omb_init_files _omb_init_file\nelif [[ $OSH_THEME ]]; then\n  _omb_module_require_theme \"$OSH_THEME\"\nfi\n\nif [[ $PROMPT ]]; then\n  export PS1='\\['$PROMPT'\\]'\nfi\n\nif ! _omb_util_command_exists '__git_ps1'; then\n  source \"$OSH/tools/git-prompt.sh\"\nfi\n\n# Adding Support for other OSes\nif [[ -s /usr/bin/gloobus-preview ]]; then\n  PREVIEW=\"gloobus-preview\"\nelif [[ -s /Applications/Preview.app ]]; then\n  PREVIEW=\"/Applications/Preview.app\"\nelse\n  PREVIEW=\"less\"\nfi\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}