{
  "metadata": {
    "timestamp": 1736568873239,
    "page": 75,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xwmx/nb",
      "stars": 6797,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": ".vagrant\nnb.*\n!nb.go\n!nb.ksh\n!nb.zsh\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 1.513671875,
          "content": "###############################################################################\n# .shellcheckrc\n#\n# https://github.com/koalaman/shellcheck\n# https://github.com/koalaman/shellcheck/wiki/Ignore\n###############################################################################\n\n# Disable SC1090\n#\n# > Shellcheck can't follow non-constant source.\n#\n# Sourced paths are dependent on the environment in this program.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC1090\ndisable=SC1090\n\n# Disable SC2002\n#\n# I like cats 😸. Redirection is also used in this project.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC2002\ndisable=SC2002\n\n# Disable SC2015\n#\n# This is used in some places as intended.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC2015\ndisable=SC2015\n\n# Disable SC2088\n#\n# \"${HOME}\" is preferred in this project, so tildes in quotes are intended as\n# tildes and are not expected to expand.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC2088\ndisable=SC2088\n\n# Disable SC2120\n#\n# This is being triggered on `_ls`, which is passed arguments in `_main()`.\n# This is likely being triggered because `_ls` is called separately explicitly\n# without arguments.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC2120\n# disable=SC2120\n\n# Disable SC2206 and SC2207\n#\n# `IFS` and `noglob` are set.\n#\n# https://github.com/koalaman/shellcheck/wiki/SC2206\n# https://github.com/koalaman/shellcheck/wiki/SC2207\ndisable=SC2206,SC2207\n\n# Disable SC2317\n#\n# Many commands are invoked indirectly.\n#\n# https://www.shellcheck.net/wiki/SC2317\ndisable=SC2317\n"
        },
        {
          "name": "Baskfile",
          "type": "blob",
          "size": 3.626953125,
          "content": "#!/usr/bin/env bash\n###############################################################################\n# Baskfile\n#\n# Run With Bask: https://github.com/xwmx/bask\n###############################################################################\n\nexport LANG=en_us.UTF-8\nexport LC_ALL=en_us.UTF-8\n\n###############################################################################\n# Helpers\n###############################################################################\n\n# _sed_i()\n#\n# `sed -i` takes an extension on macOS, but that extension can cause errors in\n# GNU `sed`.\n#\n# https://stackoverflow.com/q/43171648\n# https://stackoverflow.com/a/16746032\n_sed_i() {\n  if sed --help >/dev/null 2>&1\n  then # GNU\n    sed -i \"${@}\"\n  else # BSD\n    sed -i '' \"${@}\"\n  fi\n}\n\n###############################################################################\n# Tasks\n###############################################################################\n\n# g:web ################################################################# g:web\n\ndesc \"g:web\" <<HEREDOC\nUsage:\n  bask g:web\n\nDescription:\n  Regenerate index.markdown from README.md combined with existing front matter.\nHEREDOC\ng:web() {\n  local _front_matter_lines=()\n  local _in_front_matter=0\n  local _target_file=\"./docs/index.markdown\"\n\n  [[ ! -f \"${_target_file:?}\" ]] &&\n    _exit_1 printf \"./docs/index.markdown not found.\\\\n\"\n\n  while IFS= read -r __line || [[ -n \"${__line}\" ]]\n  do\n    if [[ \"${__line}\" =~ ^---$ ]]\n    then\n      if ((_in_front_matter))\n      then\n        _in_front_matter=0\n      else\n        _in_front_matter=1\n      fi\n    elif ((_in_front_matter))\n    then\n      _front_matter_lines+=(\"${__line}\")\n    elif [[ -n \"${_front_matter_lines[*]:-}\" ]]\n    then\n      break\n    fi\n  done < \"${_target_file:?}\"\n\n  if [[ -z \"${_front_matter_lines[*]:?}\" ]]\n  then\n    _exit_1 printf \"Front matter not found.\\\\n\"\n  fi\n\n  {\n    cat ./README.md\n  } | {\n    # remove last 6 lines\n    sed -n -e ':a' -e \"1,6\"'!{P;N;D;};N;ba'\n  } | {\n    cat << HEREDOC > \"${_target_file:?}\"\n---\n${_front_matter_lines[*]}\n---\n\n$(cat)\nHEREDOC\n  }\n\n  printf \"Rebuilt: %s\\\\n\" \"${_target_file:?}\"\n}\n\n# npm:publish ##################################################### npm:publish\n\ndesc \"npm:publish\" <<HEREDOC\nUsage:\n  bask npm:publish\n\nDescription\"\n  npm mangles HTML h1 elements, so convert to a normal markdown h1, publish\n  to npm, then revert the heading back to the HTML h1.\nHEREDOC\nnpm:publish() {\n  local _h1=\"<h1 align=\\\"center\\\" id=\\\"nb\\\"><code>nb<\\/code><\\/h1>\"\n\n  printf \"Publishing to npm.\\\\n\"\n  while true\n  do\n    read -r -p \"Proceed? [y/N] \" __yn\n    case ${__yn} in\n      [Yy]*)\n        break\n        ;;\n      *)\n        printf \"Exiting...\\\\n\"\n        exit 0\n        ;;\n    esac\n  done\n\n  _sed_i -e \"s/^${_h1}$/# \\`nb\\`/g\" \"README.md\"\n\n  npm publish\n\n  _sed_i -e \"s/^# \\`nb\\`$/${_h1}/g\" \"./README.md\"\n}\n\n# v ######################################################################### v\n\ndesc \"v\" <<HEREDOC\nUsage:\n  bask v\n  bask v down\n  bask v halt\n  bask v ssh\n  bask v up\n\nDescription:\n  Shortcuts for Vagrant that can be called from any subdirectory.\nHEREDOC\nv() {\n  local _baskfile_path=\"${BASH_SOURCE[0]}\"\n  local _root_dir=\"${_baskfile_path%/Baskfile}\"\n  local _vagrant_dir=\"${_root_dir}/etc\"\n\n  case \"${1:-}\" in\n    d*) # destroy / down\n      (cd \"${_vagrant_dir}\" && vagrant destroy)\n      ;;\n    h*) # halt\n      (cd \"${_vagrant_dir}\" && vagrant halt)\n      ;;\n    s*) # ssh\n      (cd \"${_vagrant_dir}\" && vagrant ssh)\n      ;;\n    u*) # up\n      (cd \"${_vagrant_dir}\" && vagrant up)\n      ;;\n    *)\n      (\n        cd \"${_vagrant_dir}\" && {\n          vagrant ssh        || {\n            vagrant up && vagrant ssh\n          }\n        }\n      )\n      ;;\n  esac\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.255859375,
          "content": "BIN ?= nb\nBIN_BOOKMARK ?= bookmark\nPREFIX ?= /usr/local\n\ninstall:\n\tinstall $(BIN) $(PREFIX)/bin\n\tinstall bin/$(BIN_BOOKMARK) $(PREFIX)/bin\n\t./$(BIN) env install\n\nuninstall:\n\trm -f $(PREFIX)/bin/$(BIN)\n\trm -f $(PREFIX)/bin/$(BIN_BOOKMARK)\n\t./$(BIN) env uninstall\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 267.21875,
          "content": "<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <img  src=\"https://raw.githubusercontent.com/xwmx/nb/master/docs/assets/images/nb.png\"\n        alt=\"nb\"\n        width=\"200\">\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"https://github.com/xwmx/nb/actions\" rel=\"nofollow\">\n    <img  src=\"https://img.shields.io/github/actions/workflow/status/xwmx/nb/tests.yml?branch=master\"\n          alt=\"Build Status\"\n          style=\"max-width:100%;\">\n  </a>\n</div>\n\n<div align=\"center\">&nbsp;</div><!-- spacer -->\n<br/>\n\n`nb` is a command line and local web\nnote‑taking, bookmarking, archiving,\nand knowledge base application\nwith:\n\n- plain text data storage,\n- [encryption](#password-protected-encrypted-notes-and-bookmarks),\n- [filtering](#listing--filtering), [pinning](#-pinning), [#tagging](#-tagging), and [search](#-search),\n- [Git](https://git-scm.com/)-backed [versioning](#-revision-history) and [syncing](#-git-sync),\n- [Pandoc](https://pandoc.org/)-backed [conversion](#%EF%B8%8F-import--export),\n- <a href=\"#-linking\">[[wiki-style linking]]</a>,\n- terminal and GUI web [browsing](#-browsing),\n- inline [images](#-images),\n- [todos](#-todos) with [tasks](#%EF%B8%8F-tasks),\n- global and local [notebooks](#-notebooks),\n- organization with [folders](#-folders),\n- customizable [color themes](#-color-themes),\n- extensibility through [plugins](#-plugins),\n\nand more, in a single portable script.\n\n`nb` creates notes in text-based formats like\n[Markdown](https://en.wikipedia.org/wiki/Markdown),\n[Org](https://orgmode.org/),\n[LaTeX](https://www.latex-project.org/),\nand [AsciiDoc](https://asciidoc.org/),\ncan work with files in any format,\ncan import and export notes to many document formats,\nand can create private, password-protected encrypted notes and bookmarks.\nWith `nb`, you can write notes using\nVim,\nEmacs,\nVS Code,\nSublime Text,\nand any other text editor you like,\nas well as terminal and GUI web browsers.\n`nb` works in any standard Linux / Unix environment,\nincluding macOS and Windows via WSL, MSYS, and Cygwin.\n[Optional dependencies](#optional) can be installed to enhance functionality,\nbut `nb` works great without them.\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/nb-theme-nb-home.png\"\n        alt=\"home\"\n        width=\"450\">\n</div>\n\n`nb` is also a powerful [bookmarking](#-bookmarks) system featuring:\n\n- locally-served, text-centric, distraction-free bookmark [browsing](#-browsing)\n  in terminal and GUI web browsers,\n- local full-text search of cached page content with regular expression support,\n- convenient filtering and listing,\n- [Internet Archive Wayback Machine](https://archive.org/web/) snapshot lookup\n  for broken links,\n- tagging, pinning, linking, and full integration with other `nb` features.\n\nPage information is\ndownloaded,\ncleaned up,\nstructured,\nand saved\ninto normal Markdown documents made for humans,\nso bookmarks are easy to view and edit just like any other note.\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/gui-terminal-browse.png\"\n        alt=\"nb browse\"\n        width=\"500\">\n</div>\n\n`nb` uses [Git](https://git-scm.com/) in the background to\nautomatically record changes and sync notebooks with remote repositories.\n`nb` can also be configured to\nsync notebooks using a general purpose syncing utility like Dropbox\nso notes can be edited in other apps on any device.\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/terminal-empty.png\"\n        alt=\"nb list empty\"\n        width=\"450\">\n</div>\n\n`nb` is designed to be portable, future-focused, and vendor independent,\nproviding a full-featured and intuitive experience within\na highly composable multimodal user-centric text interface.\nThe entire program is contained within\na single [well-tested](#tests) shell script\nthat can be\ninstalled, copied, or `curl`ed almost anywhere and just work,\nusing a strategy inspired by\n[progressive enhancement](https://en.wikipedia.org/wiki/Progressive_enhancement)\nfor various experience improvements in more capable environments.\n`nb` works great whether you have one notebook with just a few notes\nor dozens of notebooks containing thousands of notes, bookmarks, and other items.\n`nb` makes it easy to incorporate other tools, writing apps, and workflows.\n`nb` can be used a little, a lot, once in a while, or for just a subset of features.\n`nb` is flexible.\n\n<div align=\"center\">&nbsp;</div><!-- spacer -->\n\n<div align=\"center\">\n  <sub>\n  📝\n  🔖\n  🔍\n  🌍\n  🔒\n  ✅\n  🔄\n  🎨\n  📚\n  📌\n  📂\n  🌄\n  </sub>\n</div>\n\n<p align=\"center\">&nbsp;</p><!-- spacer -->\n\n<div align=\"center\">\n  <h1 align=\"center\" id=\"nb\"><code>nb</code></h1>\n</div>\n\n<div align=\"center\">\n  <a href=\"#installation\">Installation</a>&nbsp;·\n  <a href=\"#overview\">Overview</a>&nbsp;&nbsp;\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#-help\">Help</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#top\">&nbsp;↑&nbsp;</a>\n</div>\n\n### Installation\n\n#### Dependencies\n\n##### Required\n\n- [Bash](https://en.wikipedia.org/wiki/Bash_(Unix_shell))\n  - `nb` works perfectly with Zsh, fish, and any other shell\n    set as your primary login shell,\n    the system just needs to have Bash available on it.\n- [Git](https://git-scm.com/)\n- A text editor with command line support, such as:\n  - [Vim](https://en.wikipedia.org/wiki/Vim_\\(text_editor\\)),\n  - [Emacs](https://en.wikipedia.org/wiki/Emacs),\n  - [Visual Studio Code](https://code.visualstudio.com/),\n  - [Sublime Text](https://www.sublimetext.com/),\n  - [Helix](https://helix-editor.com/),\n  - [micro](https://github.com/zyedidia/micro),\n  - [nano](https://en.wikipedia.org/wiki/GNU_nano),\n  - [Atom](https://atom.io/),\n  - [TextMate](https://macromates.com/),\n  - [MacDown](https://macdown.uranusjr.com/),\n  - [some of these](https://github.com/topics/text-editor),\n  - [and many of these.](https://en.wikipedia.org/wiki/List_of_text_editors)\n\n##### Optional\n\n`nb` leverages standard command line tools\nand works in standard Linux / Unix environments.\n`nb` also checks the environment for some additional optional tools and\nuses them to enhance the experience whenever they are available.\n\nRecommended:\n\n- [`bat`](https://github.com/sharkdp/bat)\n- [`ncat`](https://nmap.org/ncat/) or [`socat`](https://www.kali.org/tools/socat/)\n- [`pandoc`](https://pandoc.org/)\n- [`rg`](https://github.com/BurntSushi/ripgrep)\n- [`tig`](https://github.com/jonas/tig)\n- [`w3m`](https://en.wikipedia.org/wiki/W3m)\n\nAlso supported for various enhancements:\n\n[Ack](https://beyondgrep.com/),\n[`afplay`](https://ss64.com/osx/afplay.html),\n[`asciidoctor`](https://asciidoctor.org/),\n[The Silver Searcher (`ag`)](https://github.com/ggreer/the_silver_searcher),\n[`catimg`](https://github.com/posva/catimg),\n[Chafa](https://github.com/hpjansson/chafa),\n[Chromium](https://www.chromium.org) / [Chrome](https://www.google.com/chrome/),\n[`eza`](https://github.com/eza-community/eza),\n[`ffplay`](https://ffmpeg.org/ffplay.html),\n[ImageMagick](https://imagemagick.org/),\n[`glow`](https://github.com/charmbracelet/glow),\n[GnuPG](https://en.wikipedia.org/wiki/GNU_Privacy_Guard),\n[`highlight`](http://www.andre-simon.de/doku/highlight/en/highlight.php),\n[`imgcat`](https://www.iterm2.com/documentation-images.html),\n[`joshuto`](https://github.com/kamiyaa/joshuto),\n[kitty's `icat` kitten](https://sw.kovidgoyal.net/kitty/kittens/icat.html),\n[`lsd`](https://github.com/lsd-rs/lsd),\n[Links](https://en.wikipedia.org/wiki/Links_(web_browser)),\n[Lynx](https://en.wikipedia.org/wiki/Lynx_(web_browser)),\n[`mdcat`](https://github.com/swsnr/mdcat),\n[`mdless`](https://github.com/ttscoff/mdless),\n[`mdv`](https://github.com/axiros/terminal_markdown_viewer),\n[Midnight Commander (`mc`)](https://en.wikipedia.org/wiki/Midnight_Commander),\n[`mpg123`](https://en.wikipedia.org/wiki/Mpg123),\n[MPlayer](https://en.wikipedia.org/wiki/MPlayer),\n[`ncat`](https://nmap.org/ncat/),\n[`netcat`](https://netcat.sourceforge.net/),\n[note-link-janitor](https://github.com/andymatuschak/note-link-janitor)\n(via [plugin](https://github.com/xwmx/nb/blob/master/plugins/backlink.nb-plugin)),\n[`pdftotext`](https://en.wikipedia.org/wiki/Pdftotext),\n[Pygments](https://pygments.org/),\n[Ranger](https://ranger.github.io/),\n[readability-cli](https://gitlab.com/gardenappl/readability-cli),\n[`rga` / ripgrep-all](https://github.com/phiresky/ripgrep-all),\n[`sc-im`](https://github.com/andmarti1424/sc-im),\n[`socat`](https://www.kali.org/tools/socat/),\n[`termvisage`](https://github.com/AnonymouX47/termvisage),\n[`termpdf.py`](https://github.com/dsanson/termpdf.py),\n[Tidy-Viewer (`tv`)](https://github.com/alexhallam/tv),\n[`timg`](https://github.com/hzeller/timg),\n[vifm](https://vifm.info/),\n[`viu`](https://github.com/atanunq/viu),\n[VisiData](https://www.visidata.org/)\n\n#### macOS / Homebrew\n\n```bash\nbrew install xwmx/taps/nb\n```\n\nInstalling `nb` with Homebrew also installs\nthe recommended dependencies above\nand completion scripts for Bash, Zsh, and Fish.\n\nInstall the latest development version from the repository with:\n\n```bash\nbrew install xwmx/taps/nb --head\n```\n\n`nb` is also available in\n[homebrew-core](https://github.com/Homebrew/homebrew-core).\nInstalling it together with the `bash` formula is recommended:\n\n```bash\nbrew install nb bash\n```\n\n#### Ubuntu, Windows, and others\n\n##### npm\n\n```bash\nnpm install -g nb.sh\n```\n\nAfter `npm` installation completes, run\n`sudo \"$(which nb)\" completions install`\nto install Bash and Zsh completion scripts (recommended).\n\nOn Ubuntu and WSL, you can\nrun [`sudo \"$(which nb)\" env install`](#env)\nto install the optional dependencies.\n\nWhen `nb` is installed on Windows,\n`socat` ([MSYS](https://packages.msys2.org/package/socat),\n[Cygwin](https://cygwin.com/packages/summary/socat.html)) is recommended.\n\n*`nb` is also available under its original package name,\n[notes.sh](https://www.npmjs.com/package/notes.sh),\nwhich comes with an extra `notes` executable wrapping `nb`.*\n\n##### Download and Install\n\nTo install as an administrator,\ncopy and paste one of the following multi-line commands:\n\n```bash\n# install using wget\nsudo wget https://raw.github.com/xwmx/nb/master/nb -O /usr/local/bin/nb &&\n  sudo chmod +x /usr/local/bin/nb &&\n  sudo nb completions install\n\n# install using curl\nsudo curl -L https://raw.github.com/xwmx/nb/master/nb -o /usr/local/bin/nb &&\n  sudo chmod +x /usr/local/bin/nb &&\n  sudo nb completions install\n```\n\nOn Ubuntu and WSL, you can\nrun [`sudo nb env install`](#env) to install the optional dependencies.\n\n###### User-only Installation\n\nTo install with just user permissions, simply\nadd the `nb` script to your `$PATH`.\nIf you already have a `~/bin` directory, for example, you can\nuse one of the following commands:\n\n```bash\n# download with wget\nwget https://raw.github.com/xwmx/nb/master/nb -O ~/bin/nb && chmod +x ~/bin/nb\n\n# download with curl\ncurl -L https://raw.github.com/xwmx/nb/master/nb -o ~/bin/nb && chmod +x ~/bin/nb\n```\n\nInstalling with just user permissions doesn't include\nthe optional dependencies or completions,\nbut `nb` core functionality works without them.\nIf you have `sudo` access and want\nto install the completion scripts and dependencies, run the following command:\n\n```bash\nsudo nb env install\n```\n\n##### Make\n\nTo install with [Make](https://en.wikipedia.org/wiki/Make_(software)),\nclone this repository, navigate to the clone's root directory, and run:\n\n```bash\nsudo make install\n```\n\nThis will also install the completion scripts on all systems and\nthe recommended dependencies on Ubuntu and WSL.\n\n##### bpkg\n\nTo install with [bpkg](https://github.com/bpkg/bpkg):\n\n```bash\nbpkg install xwmx/nb\n```\n\n##### basher\n\nTo install with [basher](https://www.basher.it/):\n\n```bash\nbasher install xwmx/nb\n```\n\n#### Tab Completion\n\nBash, Fish, and Zsh tab completion should be enabled\nwhen `nb` is installed using the methods above,\nassuming you have the appropriate system permissions or installed with `sudo`.\nIf completion isn't working after installing `nb`, see the\n[completion installation instructions](https://github.com/xwmx/nb/tree/master/etc).\n\n#### Updating\n\nWhen `nb` is installed using a package manager like npm or Homebrew,\nuse the package manager's upgrade functionality to update `nb` to\nthe latest version.\nWhen installed via other methods,\n`nb` can be updated to the latest version using\nthe [`nb update`](#update) subcommand.\n\n## Overview\n\n<div align=\"center\">\n  <a href=\"#-notes\"><code>📝</code>&nbsp;Notes</a>&nbsp;·\n  <a href=\"#adding\">Adding</a>&nbsp;·\n  <a href=\"#listing--filtering\">Listing</a>&nbsp;·\n  <a href=\"#editing\">Editing</a>&nbsp;·\n  <a href=\"#viewing\">Viewing</a>&nbsp;·\n  <a href=\"#deleting\">Deleting</a>&nbsp;·\n  <a href=\"#-bookmarks\"><code>🔖</code>&nbsp;Bookmarks</a>&nbsp;·\n  <a href=\"#-todos\"><code>✅</code>&nbsp;Todos</a>&nbsp;·\n  <a href=\"#%EF%B8%8F-tasks\"><code>✔️</code>&nbsp;Tasks</a>&nbsp;·\n  <a href=\"#-tagging\"><code>🏷</code>&nbsp;Tagging</a>&nbsp;·\n  <a href=\"#-linking\"><code>🔗</code>&nbsp;Linking</a>&nbsp;·\n  <a href=\"#-browsing\"><code>🌍</code>&nbsp;Browsing</a>&nbsp;·\n  <a href=\"#-images\"><code>🌄</code>&nbsp;Images</a>&nbsp;·\n  <a href=\"#-zettelkasten\"><code>🗂</code>&nbsp;Zettelkasten</a>&nbsp;·\n  <a href=\"#-folders\"><code>📂</code>&nbsp;Folders</a>&nbsp;·\n  <a href=\"#-pinning\"><code>📌</code>&nbsp;Pinning</a>&nbsp;·\n  <a href=\"#-search\"><code>🔍</code>&nbsp;Search</a>&nbsp;·\n  <a href=\"#-moving--renaming\"><code>↔</code>&nbsp;Moving&nbsp;&&nbsp;Renaming</a>&nbsp;·\n  <a href=\"#-revision-history\"><code>🗒</code>&nbsp;History</a>&nbsp;·\n  <a href=\"#-notebooks\"><code>📚</code>&nbsp;Notebooks</a>&nbsp;·\n  <a href=\"#-git-sync\"><code>🔄</code>&nbsp;Git&nbsp;Sync</a>&nbsp;·\n  <a href=\"#%EF%B8%8F-import--export\"><code>↕️</code>&nbsp;Import&nbsp;/&nbsp;Export</a>&nbsp;·\n  <a href=\"#%EF%B8%8F-set--settings\"><code>⚙️</code><code>set</code>&<code>settings</code></a>&nbsp;·\n  <a href=\"#-color-themes\"><code>🎨</code>&nbsp;Color&nbsp;Themes</a>&nbsp;·\n  <a href=\"#-plugins\"><code>🔌</code>&nbsp;Plugins</a>&nbsp;·\n  <a href=\"#-selectors\"><code>:/</code>&nbsp;Selectors</a>&nbsp;·\n  <a href=\"#01-metadata\"><code>01</code>&nbsp;Metadata</a>&nbsp;·\n  <a href=\"#-interactive-shell\"><code>❯</code>&nbsp;Shell</a>&nbsp;·\n  <a href=\"#shortcut-aliases\">Shortcuts</a>&nbsp;·\n  <a href=\"#-help\"><code>?</code>&nbsp;Help</a>&nbsp;·\n  <a href=\"#-variables\"><code>$</code>&nbsp;Variables</a>&nbsp;·\n  <a href=\"#specifications\">Specifications</a>&nbsp;·\n  <a href=\"#tests\">Tests</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#nb\">&nbsp;↑&nbsp;</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\nTo get started, simply run:\n\n```bash\nnb\n```\n\n`nb` sets up your initial `home` notebook the first time it runs.\n\nBy default, notebooks and notes are global (at `~/.nb`),\nso they are always available to `nb`\nregardless of the current working directory.\n`nb` also supports [local notebooks](#global-and-local-notebooks).\n\n### 📝 Notes\n\n#### Adding\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#add\"><code>nb add</code></a>,\n    <a href=\"#browse\"><code>nb browse add</code></a>\n  </sup>\n</p>\n\nUse [`nb add`](#add) (shortcuts: [`nb a`](#add), [`nb +`](#add))\nto create new notes:\n\n```bash\n# create a new note in your text editor\nnb add\n\n# create a new note with the filename \"example.md\"\nnb add example.md\n\n# create a new note containing \"This is a note.\"\nnb add \"This is a note.\"\n\n# create a new note with piped content\necho \"Note content.\" | nb add\n\n# create a new password-protected, encrypted note titled \"Secret Document\"\nnb add --title \"Secret Document\" --encrypt\n\n# create a new note in the notebook named \"example\"\nnb example:add \"This is a note.\"\n\n# create a new note in the folder named \"sample\"\nnb add sample/\n```\n\n[`nb add`](#add) with no arguments or input will open the new, blank note\nin your environment's preferred text editor.\nYou can change your editor using\nthe `$EDITOR` environment variable\nor [`nb set editor`](#editor).\n\n`nb` files are [Markdown](https://daringfireball.net/projects/markdown/)\nfiles by default. The default file type can be changed to\nwhatever you like\nusing [`nb set default_extension`](#default_extension).\n\n[`nb add`](#add) has intelligent argument parsing\nand behaves differently depending on the types of arguments it receives.\nWhen a filename with extension is specified,\na new note with that filename is opened in the editor:\n\n```bash\nnb add example.md\n```\n\nWhen a string is specified, a new note is immediately created\nwith that string as the content and without opening the editor:\n\n```bash\n❯ nb add \"This is a note.\"\nAdded: [1] 20200101000000.md\n```\n\n[`nb add <string>`](#add) is useful for quickly jotting down notes directly\nvia the command line. Quoting content is optional, but recommended.\n\nWhen no filename is specified, [`nb add`](#add) uses the current datetime as\nthe filename.\n\n[`nb add`](#add) can also receive piped content, which behaves the same as\n[`nb add <string>`](#add):\n\n```bash\n# create a new note containing \"Note content.\"\n❯ echo \"Note content.\" | nb add\nAdded: [6] 20200101000100.md\n\n# create a new note containing the clipboard contents on macOS\n❯ pbpaste | nb add\nAdded: [7] 20200101000200.md\n\n# create a new note containing the clipboard contents using xclip\n❯ xclip -o | nb add\nAdded: [8] 20200101000300.md\n```\n\nContent can be passed with the [`--content <content>`](#add) option,\nwhich also creates a new note without opening the editor:\n\n```bash\nnb add --content \"Note content.\"\n```\n\nWhen content is piped,\nspecified with [`--content <content>`](#add),\nor passed as a string argument,\nuse the [`--edit`](#add) flag to open the file in the editor\nbefore the change is committed.\n\nThe title, filename, and content can also be specified with long and\nshort options:\n\n```bash\n❯ nb add --filename \"example.md\" -t \"Example Title\" -c \"Example content.\"\nAdded: [9] example.md \"Example Title\"\n```\n\nThe [`-t <title>`](#add) / [`--title <title>`](#add) option also\nsets the filename to the title,\nlowercased with spaces and non-filename characters replaced with underscores:\n\n```bash\n❯ nb add --title \"Example Title\" \"Example content.\"\nAdded: [10] example_title.md \"Example Title\"\n```\n\nTags can be added with the [`--tags <tag1>,<tag2>...`](#add) option, which\ntakes a comma separated list of tags,\nconverts them to [#hashtags](#-tagging),\nand inserts them between the title and content:\n\n```bash\n❯ nb add \"Example content.\" --title \"Tagged Example\" --tags tag1,tag2\nAdded: [11] tagged_example.md \"Tagged Example\"\n\n❯ nb show 11 --print\n# Tagged Example\n\n#tag1 #tag2\n\nExample content.\n```\n\n[Search](#-search) for tagged items with\n[`nb search`](#search) / [`nb q`](#search):\n\n```bash\n# search for items tagged with \"#tag1\"\nnb search --tag tag1\n\n# search for items tagged with \"#tag1\" AND \"#tag2\", short options\nnb q -t tag1 -t tag2\n\n# search for items tagged with \"#tag1\" OR \"#tag2\", arguments\nnb q \\#tag1 --or \\#tag2\n```\n\nFiles can be created with any file type by specifying the extension either\nin the filename (`example.md`),\nthe extension by itself (`.md`),\nor via the [`--type <type>`](#add) option (`--type md`):\n\n```bash\n# open a new Org file in the editor\nnb add example.org\n\n# open a new reStructuredText file in the editor\nnb add --type rst\n\n# open a new JavaScript file in the editor\nnb add .js\n```\n\nCombining a type argument with piped clipboard content provides\na very convenient way to save code snippets using a clipboard utility such as\n`pbpaste`,\n`xclip`,\nor [`pb`](https://github.com/xwmx/pb):\n\n```bash\n# save the clipboard contents as a JavaScript file in the current notebook\npb | nb add .js\n\n# save the clipboard contents as a Rust file in the \"rust\" notebook\n# using the shortcut alias `nb a`\npb | nb a rust: .rs\n\n# save the clipboard contents as a Haskell file named \"example.hs\" in the\n# \"snippets\" notebook using the shortcut alias `nb +`\npb | nb + snippets: example.hs\n```\n\nUse [`nb show`](#show) and [`nb browse`](#browse) to view code snippets\nwith automatic syntax highlighting and\nuse [`nb edit`](#edit) to open in your editor.\n\nThe [`clip` plugin](#clip) can also be used to\ncreate notes from clipboard content.\n\nPiping,\n[`--title <title>`](#add),\n[`--tags <tag-list>`](#add),\n[`--content <content>`](#add),\nand content passed in an argument\ncan be combined as needed\nto create notes with content from multiple input methods and sources\nusing a single command:\n\n```bash\n❯ pb | nb add \"Argument content.\" \\\n    --title   \"Sample Title\"      \\\n    --tags    tag1,tag2           \\\n    --content \"Option content.\"\nAdded: [12] sample_title.md \"Sample Title\"\n\n❯ nb show 12 --print\n# Sample Title\n\n#tag1 #tag2\n\nArgument content.\n\nOption content.\n\nClipboard content.\n```\n\nFor a full list of options available for [`nb add`](#add), run\n[`nb help add`](#add).\n\n##### Password-Protected Encrypted Notes and Bookmarks\n\nPassword-protected notes and [bookmarks](#-bookmarks) are\ncreated with the [`-e`](#add) / [`--encrypt`](#add) flag and\nencrypted with AES-256 using OpenSSL by default.\nGPG is also supported and can be configured with\n[`nb set encryption_tool`](#encryption_tool).\n\nEach protected note and bookmark is\nencrypted individually with its own password.\nWhen an encrypted item is viewed, edited, or opened,\n`nb` will simply prompt for the item's password before proceeding.\nAfter an item is edited,\n`nb` automatically re-encrypts it and saves the new version.\n\nEncrypted notes can be decrypted\nusing the OpenSSL and GPG command line tools directly, so\nyou aren't dependent on `nb` to decrypt your files.\n\n##### Shortcut Aliases: `nb a`, `nb +`\n\n`nb` includes shortcuts for many commands, including\n[`nb a`](#add) and [`nb +`](#add) for [`nb add`](#add):\n\n```bash\n# create a new note in your text editor\nnb a\n\n# create a new note with the filename \"example.md\"\nnb a example.md\n\n# create a new note containing \"This is a note.\"\nnb + \"This is a note.\"\n\n# create a new note containing the clipboard contents with xclip\nxclip -o | nb +\n\n# create a new note in the notebook named \"example\"\nnb example:a\n```\n\n##### Other Aliases: `nb create`, `nb new`\n\n[`nb add`](#add) can also be invoked with\n[`nb create`](#add) and [`nb new`](#add) for convenience:\n\n```bash\n# create a new note containing \"Example note content.\"\nnb new \"Example note content.\"\n\n# create a new note with the title \"Example Note Title\"\nnb create --title \"Example Note Title\"\n```\n\n##### Adding with `nb browse`\n\nItems can also be added within terminal and GUI web browsers using\n[`nb browse add`](#browse) / [`nb b a`](#browse):\n\n```bash\n❯ nb browse add\n❯nb · home : +\n\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n\n[add]\n```\n\nPass a filename, relative path, and / or notebook name to\ncreate a new note at that location:\n\n```bash\n# open the add form in the browser to create the file \"file.md\" in the folder \"example\"\nnb browse add \"example/file.md\"\n```\n\n[`nb browse add`](#browse) includes options for quickly\npre-populating new notes with content:\n\n```bash\n❯ nb browse add --title \"Example Title\" --content \"Example content.\" --tags tag1,tag2\n❯nb · home : +\n\n[# Example Title                                      ]\n[                                                     ]\n[#tag1 #tag2                                          ]\n[                                                     ]\n[Example content.                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n[                                                     ]\n\n[add]\n```\n\n[`nb browse add`](#browse) can also be opened with\n[`nb add --browse`](#add) / [`nb a -b`](#add).\n\nFor more information, see [Browsing](#-browsing).\n\n#### Listing & Filtering\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#ls\"><code>nb ls</code></a>,\n    <a href=\"#list\"><code>nb list</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>\n  </sup>\n</p>\n\nTo list notes and notebooks, run [`nb ls`](#ls) (shortcut alias: `nb`):\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/nb-theme-utility-home.png\"\n        alt=\"nb ls\"\n        width=\"450\">\n</div>\n\nNotebooks are listed above the line,\nwith the current notebook highlighted and/or underlined,\ndepending on terminal capabilities.\n[`nb ls`](#ls) also includes a footer with example commands for easy reference.\nThe notebook header and command footer can be configured or hidden with\n[`nb set header`](#header) and\n[`nb set footer`](#footer).\n\n```bash\n❯ nb ls\nhome\n----\n[3] example.md · \"Example content.\"\n[2] sample.md · \"Sample content.\"\n[1] demo.md · \"- Demo list item one.\"\n```\n\nNotes from the current notebook are listed in the order they were last modified.\nBy default, each note is listed with its\nid, filename, and an excerpt from the first line of the note.\nWhen a note has a title, the title is displayed\ninstead of the filename and first line.\n\nMarkdown titles can be defined within a note using\n[either Markdown `h1` style](https://daringfireball.net/projects/markdown/syntax#header)\nor [YAML front matter](#front-matter):\n\n```markdown\n# Example Title\n```\n\n```markdown\nSample Title\n============\n```\n\n```markdown\n---\ntitle: Demo Title\n---\n```\n\n[Org](https://orgmode.org/),\n[LaTeX](https://www.latex-project.org/),\nand [AsciiDoc](https://asciidoc.org/)\ntitles are recognized in `.org`,`.latex`, and `.asciidoc` / `.adoc` files:\n\n```text\n#+title: Example Org Title\n```\n\n```latex\n\\title{Example LaTeX Title}\n```\n\n```asciidoc\n= Example AsciiDoc Title\n```\n\nOnce defined, titles are displayed in place of the filename and first line\nin the output of [`nb ls`](#ls):\n\n```bash\n❯ nb ls\nhome\n----\n[3] Example Title\n[2] Sample Title\n[1] Demo Title\n```\n\nPass an id, filename, or title to view the listing for that note:\n\n```bash\n❯ nb ls Sample\\ Title\n[2] Sample Title\n\n❯ nb ls 3\n[3] Example Title\n```\n\nIf there is no exact match, `nb` will list items with\ntitles and filenames that fuzzy match the query:\n\n```bash\n❯ nb ls exa\n[3] Example Title\n\n❯ nb ls ample\n[3] Example Title\n[2] Sample Title\n```\n\nMultiple words act like an `OR` filter, listing any\ntitles or filenames that match any of the words:\n\n```bash\n❯ nb ls example demo\n[3] Example Title\n[1] Demo Title\n```\n\nWhen multiple words are quoted, filter titles and filenames for that phrase:\n\n```bash\n❯ nb ls \"example title\"\n[3] Example Title\n```\n\nFor full text search, see [Search](#-search).\n\nTo view excerpts of notes, use the [`--excerpt`](#ls) or [`-e`](#ls) option,\nwhich optionally accepts a length:\n\n```bash\n❯ nb ls 3 --excerpt\n[3] Example Title\n-----------------\n# Example Title\n\nThis is an example excerpt.\n\n❯ nb ls 3 -e 8\n[3] Example Title\n-----------------\n# Example Title\n\nThis is an example excerpt.\n\nMore example content:\n\n- one\n- two\n```\n\nSeveral classes of file types are represented with emoji\n[indicators](#indicators) to make them easily identifiable in lists.\nFor example, bookmarks and encrypted notes are listed with `🔖` and `🔒`:\n\n```bash\n❯ nb ls\nhome\n----\n[4] Example Note\n[3] 🔒 encrypted-note.md.enc\n[2] 🔖 Example Bookmark (example.com)\n[1] 🔖 🔒 encrypted.bookmark.md.enc\n```\n\nFile types include:\n\n```text\n 🔉  Audio\n 📖  Book\n 🔖  Bookmark\n 🔒  Encrypted\n 📂  Folder\n 🌄  Image\n 📄  PDF, Word, or Open Office document\n 📹  Video\n```\n\nBy default, items are listed starting with the most recently modified.\nTo reverse the order, use the [`-r`](#ls) or [`--reverse`](#ls) flag:\n\n```bash\n❯ nb ls\nhome\n----\n[2] Todos\n[3] Example Title\n[1] Ideas\n\n❯ nb ls --reverse\n[1] Ideas\n[3] Example Title\n[2] Todos\n```\n\nNotes can be sorted with the [`-s`](#ls) / [`--sort`](#ls) flag,\nwhich can be combined with [`-r`](#ls) / [`--reverse`](#ls):\n\n```bash\n❯ nb ls\nhome\n----\n[2] Sample Title\n[3] Example Title\n[1] Demo Title\n\n❯ nb ls --sort\n[1] Demo Title\n[2] Sample Title\n[3] Example Title\n\n❯ nb ls --sort --reverse\n[3] Example Title\n[2] Sample Title\n[1] Demo Title\n```\n\n`nb` with no subcommand behaves like an alias for [`nb ls`](#ls),\nso the examples above can be run without the `ls`:\n\n```bash\n❯ nb\nhome\n----\n[2] Sample Title\n[3] Example Title\n[1] Demo Title\n\n❯ nb example\n[3] Example Title\n\n❯ nb 3 --excerpt\n[3] Example Title\n-----------------\n# Example Title\n\nThis is an example excerpt.\n\n❯ nb 3 -e 8\n[3] Example Title\n-----------------\n# Example Title\n\nThis is an example excerpt.\n\nMore example content:\n\n- one\n- two\n\n❯ nb --sort\n[1] Demo Title\n[2] Sample Title\n[3] Example Title\n\n❯ nb --sort --reverse\n[3] Example Title\n[2] Sample Title\n[1] Demo Title\n```\n\nShort options can be combined for brevity:\n\n```bash\n# equivalent to `nb --sort --reverse --excerpt 2` and `nb -s -r -e 2`:\n❯ nb -sre 2\n[3] Example Title\n-----------------\n# Example Title\n\n[2] Sample Title\n----------------\nSample Title\n============\n[1] Demo Title\n--------------\n---\ntitle: Demo Title\n```\n\n`nb` and [`nb ls`](#ls) display the 15 most recently modified items.\nThe default limit can be changed with [`nb set limit <number>`](#limit).\nTo list a different number of items on a per-command basis, use the\n[`-n <limit>`](#ls),\n[`--limit <limit>`](#ls),\n[`--<limit>`](#ls),\n[`-a`](#ls),\nand [`--all`](#ls)\nflags:\n\n```bash\n❯ nb -n 1\nhome\n----\n[5] Example Five\n4 omitted. 5 total.\n\n❯ nb --limit 2\nhome\n----\n[5] Example Five\n[4] Example Four\n3 omitted. 5 total.\n\n❯ nb --3\nhome\n----\n[5] Example Five\n[4] Example Four\n[3] Example Three\n2 omitted. 5 total.\n\n❯ nb --all\nhome\n----\n[5] Example Five\n[4] Example Four\n[3] Example Three\n[2] Example Two\n[1] Example One\n```\n\nLists can be paginated with\n[`-p <number>`](#ls) / [`--page <number>`](#ls),\nwhich paginates by the value of [`nb set limit`](#limit) by\ndefault, or the value of\n[`-n <limit>`](#ls),\n[`--limit <limit>`](#ls),\nor [`--<limit>`](#ls)\nwhen present:\n\n```bash\n❯ nb\nhome\n----\n[6] Example Six\n[5] Example Five\n[4] Example Four\n[3] Example Three\n[2] Example Two\n[1] Example One\n\n❯ nb set limit 3\nNB_LIMIT set to 3\n\n❯ nb --page 1\n[6] Example Six\n[5] Example Five\n[4] Example Four\n\n❯ nb -p 2\n[3] Example Three\n[2] Example Two\n[1] Example One\n\n❯ nb -p 2 --limit 2\n[4] Example Four\n[3] Example Three\n\n❯ nb -p 3 --2\n[2] Example Two\n[1] Example One\n```\n\nList [#tagged](#tagging) items by passing `\\#escaped` or `\"#quoted\"` hashtags\nor tags specified with the [`--tags`](#ls) option. Multiple tags perform an \n`AND` query:\n\n```bash\n# list items in the current notebook tagged with \"#tag1\", escaped\nnb \\#tag1\n\n# list items in the \"example\" notebook tagged with \"#tag2\", quoted\nnb example: \"#tag2\"\n\n# list items in all notebooks tagged with \"#tag1\", long option\nnb \\#tag1 --all\n\n# list items in the current notebook tagged with \"#tag1\" AND \"#tag2\"\nnb \\#tag1 \"#tag2\"\n\n# list items in all notebooks tagged with \"#tag2\" AND \"#tag3\", short option\nnb --tags tag2,tag3 -a\n```\n\n[`nb ls`](#ls) is a combination of\n[`nb notebooks`](#notebooks) and [`nb list`](#list)\nin one view and accepts the same arguments as [`nb list`](#list),\nwhich lists only notes without the notebook list and with no limit by default:\n\n```bash\n❯ nb list\n[100] Example One Hundred\n[99]  Example Ninety-Nine\n[98]  Example Ninety-Eight\n... lists all notes ...\n[2]   Example Two\n[1]   Example One\n```\n\nFor more information about options for listing notes, run\n[`nb help ls`](#ls)\nand\n[`nb help list`](#list).\n\n##### Listing with `browse`\n\nItems can be listed within terminal and GUI web browsers using\n[`nb browse`](#browse) / [`nb b`](#browse):\n\n```bash\n❯ nb browse example:sample/demo/\n❯nb · example : sample / demo / +\n\nsearch: [                    ]\n\n[example:sample/demo/7] Title Seven\n[example:sample/demo/6] Title Six\n[example:sample/demo/5] Title Five\n[example:sample/demo/4] Title Four\n[example:sample/demo/3] Title Three\n\nnext ❯\n```\n\nFor more information, see [Browsing](#-browsing).\n\n#### Editing\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#edit\"><code>nb edit</code></a>,\n    <a href=\"#browse\"><code>nb browse edit</code></a>\n  </sup>\n</p>\n\nYou can edit an item in your editor with\n[`nb edit`](#edit) (shortcut: [`nb e`](#edit)):\n\n```bash\n# edit note by id\nnb edit 3\n\n# edit note by filename\nnb edit example.md\n\n# edit note by title\nnb edit \"A Document Title\"\n\n# edit note 12 in the notebook named \"example\"\nnb edit example:12\n\n# edit note 12 in the notebook named \"example\", alternative\nnb example:12 edit\n\n# edit note 12 in the notebook named \"example\", alternative\nnb example:edit 12\n```\n\n[`edit`](#edit) and other subcommands that take an identifier\ncan be called with the identifier and subcommand name reversed:\n\n```bash\n# edit note by id\nnb 3 edit\n```\n\n[`nb edit`](#edit) can also receive piped content, which it\nappends to the specified note without opening the editor:\n\n```bash\necho \"Content to append.\" | nb edit 1\n```\n\nContent can be passed with the [`--content <content>`](#edit) option,\nwhich also appends the content without opening the editor:\n\n```bash\nnb edit 1 --content \"Content to append.\"\n```\n\nUse the [`--overwrite`](#edit) option to overwrite existing file content\nand the [`--prepend`](#edit) option to prepend the new content before existing content.\n\nWhen content is piped or specified with [`--content <content>`](#edit),\nuse the [`--edit`](#edit) flag to open the file in the editor\nbefore the change is committed.\n\n##### Editing Encrypted Notes\n\nWhen a note is encrypted,\n[`nb edit`](#edit) prompts you for the note password,\nopens the unencrypted content in your editor,\nand then automatically reencrypts the note when you are done editing.\n\n##### Shortcut Alias: `nb e`\n\n[`nb edit`](#edit) can be called by the shortcut alias, [`nb e`](#edit):\n\n```bash\n# edit note by id\nnb e 3\n\n# edit note by filename\nnb e example.md\n\n# edit note by title\nnb e \"A Document Title\"\n\n# edit note by id, alternative\nnb 3 e\n\n# edit note 12 in the notebook named \"example\"\nnb e example:12\n\n# edit note 12 in the notebook named \"example\", alternative\nnb example:12 e\n\n# edit note 12 in the notebook named \"example\", alternative\nnb example:e 12\n```\n\nFor [`nb edit`](#edit) help information, run [`nb help edit`](#edit).\n\n##### Editing with `browse`\n\nItems can be edited within terminal and GUI web browsers using\n[`nb browse edit`](#browse) / [`nb b e`](#browse):\n\n```bash\n❯ nb browse edit text:formats/markdown/123\n❯nb · text : formats / markdown / 123 · ↓ · editing · - | +\n\n[# Daring Fireball: Markdown (daringfireball.net)         ]\n[                                                         ]\n[<https://daringfireball.net/projects/markdown/>          ]\n[                                                         ]\n[## Related                                               ]\n[                                                         ]\n[- <https://en.wikipedia.org/wiki/Markdown>               ]\n[                                                         ]\n[## Comments                                              ]\n[                                                         ]\n[See also:                                                ]\n[                                                         ]\n[- [[text:formats/org]]                                   ]\n[- [[cli:apps/nb]]                                        ]\n[                                                         ]\n[## Tags                                                  ]\n[                                                         ]\n\n[save] · last: 2021-01-01 01:00:00\n```\n\nFor more information, see\n[`browse edit`](#browse-edit) and [Browsing](#-browsing).\n\n#### Viewing\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#show\"><code>nb show</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>,\n    <a href=\"#open\"><code>nb open</code></a>,\n    <a href=\"#peek\"><code>nb peek</code></a>\n  </sup>\n</p>\n\nNotes and other items can be viewed using\n[`nb show`](#show) (shortcut: [`nb s`](#show)):\n\n```bash\n# show note by id\nnb show 3\n\n# show note by filename\nnb show example.md\n\n# show note by title\nnb show \"A Document Title\"\n\n# show note by id, alternative\nnb 3 show\n\n# show note 12 in the notebook named \"example\"\nnb show example:12\n\n# show note 12 in the notebook named \"example\", alternative\nnb example:12 show\n\n# show note 12 in the notebook named \"example\", alternative\nnb example:show 12\n```\n\nBy default, [`nb show`](#show) opens notes in\n[`less`](https://linux.die.net/man/1/less),\nwith syntax highlighting if\n[`bat`](https://github.com/sharkdp/bat),\n[`highlight`](http://www.andre-simon.de/doku/highlight/en/highlight.php),\nor\n[Pygments](https://pygments.org/)\nis installed.\nYou can navigate in `less` using the following keys:\n\n```text\nKey               Function\n---               --------\nmouse scroll      Scroll up or down\narrow up or down  Scroll one line up or down\nf                 Jump forward one window\nb                 Jump back one window\nd                 Jump down one half window\nu                 Jump up one half window\n/<query>          Search for <query>\nn                 Jump to next <query> match\nq                 Quit\n```\n\n*If `less` scrolling isn't working in [iTerm2](https://www.iterm2.com/),\ngo to*\n\"Settings\"\n-> \"Advanced\"\n-> \"Scroll wheel sends arrow keys when in alternate screen mode\"\n*and change it to* \"Yes\".\n*[More Info](https://stackoverflow.com/a/37610820)*\n\nUse the [`-p`](#show) / [`--print`](#show) option\nto print to standard output with syntax highlighting:\n\n```bash\n❯ nb show 123 --print\n# Example Title\n\nExample content:\n\n- one\n- two\n- three\n```\n\nUse [`nb show --print --no-color`](#show) to print without syntax highlighting.\n\nWhen [Pandoc](https://pandoc.org/) is available,\nuse the [`-r`](#show) / [`--render`](#show) option to\nrender the note to HTML and open it in your terminal browser:\n\n```bash\nnb show example.md --render\n# opens example.md as an HTML page in w3m, links, or lynx\n```\n\n[`nb show`](#show) also supports previewing other file types in the terminal,\ndepending on the tools available in the environment. To prefer specific tools\nfor certain file types, `nb` provides configuration variables that can be\nset in your `~/.nbrc` file,\nwhich can be opened in your editor with [`nb settings edit`](#settings).\n\nSupported file types and tools include:\n\n- Markdown files ([`$NB_MARKDOWN_TOOL`](#nb_markdown_tool)):\n  - [`bat`](https://github.com/sharkdp/bat)\n  - [`glow`](https://github.com/charmbracelet/glow)\n  - [`mdcat`](https://github.com/swsnr/mdcat)\n  - [`mdless`](https://github.com/ttscoff/mdless)\n  - [`mdv`](https://github.com/axiros/terminal_markdown_viewer)\n- PDF files:\n  - [`termpdf.py`](https://github.com/dsanson/termpdf.py)\n    with [kitty](https://sw.kovidgoyal.net/kitty/)\n  - [`pdftotext`](https://en.wikipedia.org/wiki/Pdftotext)\n- Audio files ([`$NB_AUDIO_TOOL`](#nb_audio_tool)):\n  - [`mplayer`](https://en.wikipedia.org/wiki/MPlayer)\n  - [`afplay`](https://ss64.com/osx/afplay.html)\n  - [`mpg123`](https://en.wikipedia.org/wiki/Mpg123)\n  - [`ffplay`](https://ffmpeg.org/ffplay.html)\n- [Images](#-images) ([`$NB_IMAGE_TOOL`](#nb_image_tool)):\n  - [`catimg`](https://github.com/posva/catimg)\n  - [Chafa](https://github.com/hpjansson/chafa)\n  - [ImageMagick](https://imagemagick.org/) with a terminal that\n    supports [sixels](https://en.wikipedia.org/wiki/Sixel)\n  - [`imgcat`](https://www.iterm2.com/documentation-images.html) with\n    [iTerm2](https://www.iterm2.com/)\n  - [kitty's `icat` kitten](https://sw.kovidgoyal.net/kitty/kittens/icat.html)\n  - [`termvisage`](https://github.com/AnonymouX47/termvisage)\n  - [`timg`](https://github.com/hzeller/timg)\n  - [`viu`](https://github.com/atanunq/viu)\n- Folders, Directories, Notebooks ([`$NB_DIRECTORY_TOOL`](#nb_directory_tool)):\n  - [`eza`](https://github.com/eza-community/eza)\n  - [`joshuto`](https://github.com/kamiyaa/joshuto)\n  - [`lsd`](https://github.com/lsd-rs/lsd)\n  - [Midnight Commander (`mc`)](https://en.wikipedia.org/wiki/Midnight_Commander)\n  - [`ranger`](https://ranger.github.io/)\n  - [`vifm`](https://vifm.info/)\n- Word Documents:\n  - [Pandoc](https://pandoc.org/) with\n    [`w3m`](https://en.wikipedia.org/wiki/W3m) or\n    [`links`](https://en.wikipedia.org/wiki/Links_(web_browser))\n- Excel, CSV, TSV, and data files ([`$NB_DATA_TOOL`](#nb_data_tool)):\n  - [VisiData](https://www.visidata.org/)\n  - [`sc-im`](https://github.com/andmarti1424/sc-im)\n  - [Tidy-Viewer (`tv`)](https://github.com/alexhallam/tv)\n- EPUB ebooks:\n  - [Pandoc](https://pandoc.org/) with\n    [`w3m`](https://en.wikipedia.org/wiki/W3m) or\n    [`links`](https://en.wikipedia.org/wiki/Links_(web_browser))\n\nWhen using [`nb show`](#show) with other file types or\nif the above tools are not available,\n[`nb show`](#show) opens files in\nyour system's preferred application for each type.\n\n[`nb show`](#show) also provides [options](#show) for\nquerying information about an item. For example, use the\n[`--added`](#show) / [`-a`](#show) and [`--updated`](#show) / [`-u`](#show)\nflags to print the date and time that an item was added or updated:\n\n```bash\n❯ nb show 2 --added\n2020-01-01 01:01:00 -0700\n\n❯ nb show 2 --updated\n2020-02-02 02:02:00 -0700\n```\n\n[`nb show`](#show) is primarily intended for viewing items within the terminal.\nTo view a file in the system's preferred GUI application, use\n[`nb open`](#open).\nTo [browse](#-browsing) rendered items in terminal and GUI web browsers, use\n[`nb browse`](#browse).\n\nFor full [`nb show`](#show) usage information, run [`nb help show`](#show).\n\n##### Shortcut Alias: `nb s`\n\n[`nb show`](#show) can be called using the shortcut alias [`nb s`](#show):\n\n```bash\n# show note by id\nnb s 3\n\n# show note by filename\nnb s example.md\n\n# show note by title\nnb s \"A Document Title\"\n\n# show note by id, alternative\nnb 3 s\n\n# show note 12 in the notebook named \"example\"\nnb s example:12\n\n# show note 12 in the notebook named \"example\", alternative\nnb example:12 s\n\n# show note 12 in the notebook named \"example\", alternative\nnb example:s 12\n```\n\n##### Alias: `nb view`\n\n[`nb show`](#show) can also be invoked with [`nb view`](#show) for convenience:\n\n```bash\n# show note by id\nnb view 3\n\n# show note by filename\nnb view example.md\n\n# show note by title\nnb view \"A Document Title\"\n\n# show note by id, alternative\nnb 3 view\n```\n\n##### Viewing with `browse`\n\nItems can be viewed within terminal and GUI web browsers using\n[`nb browse`](#browse) / [`nb b`](#browse):\n\n```bash\n❯ nb browse text:formats/markdown/123\n❯nb · text : formats / markdown / 123 · ↓ · edit | +\nDaring Fireball: Markdown (daringfireball.net)\n\nhttps://daringfireball.net/projects/markdown/\n\nRelated\n\n  • https://en.wikipedia.org/wiki/Markdown\n\nComments\n\nSee also:\n\n  • [[text:formats/org]]\n  • [[cli:apps/nb]]\n\nTags\n\n#markup #plain-text\n\nContent\n\nDaring Fireball: Markdown\n\nDownload\n\nMarkdown 1.0.1 (18 KB) — 17 Dec 2004\n\nIntroduction\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown allows\nyou to write using an easy-to-read, easy-to-write plain text format, then\nconvert it to structurally valid XHTML (or HTML).\n```\n\nFor more information, see [Browsing](#-browsing).\n\n#### Deleting\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#delete\"><code>nb delete</code></a>,\n    <a href=\"#browse\"><code>nb browse delete</code></a>\n  </sup>\n</p>\n\nTo delete one or more notes, pass any number of\nids, filenames, titles, and other [selectors](#-selectors)\nto [`nb delete`](#delete) (shortcuts: [`nb d`](#delete), [`nb -`](#delete)):\n\n```bash\n# delete item by id\nnb delete 3\n\n# delete item by filename\nnb delete example.md\n\n# delete item by title\nnb delete \"A Document Title\"\n\n# delete item by id, alternative\nnb 3 delete\n\n# delete item 12 in the notebook named \"example\"\nnb delete example:12\n\n# delete item 12 in the notebook named \"example\", alternative\nnb example:12 delete\n\n# delete item 12 in the notebook named \"example\", alternative\nnb example:delete 12\n\n# delete item 345 in the folder named \"example\"\nnb delete example/345\n\n# delete items with the ids 89, 56, and 21\nnb delete 89 56 21\n```\n\nBy default, [`nb delete`](#delete) will display a confirmation prompt.\nTo skip, use the [`--force`](#delete) / [`-f`](#delete) option:\n\n```bash\nnb delete 3 --force\n```\n\n##### Shortcut Aliases: `nb d`, `nb -`\n\n[`nb delete`](#delete) has the aliases [`nb d`](#delete) and [`nb -`](#delete):\n\n```bash\n# delete note by id\nnb d 3\n\n# delete note by filename\nnb d example.md\n\n# delete note by title\nnb - \"A Document Title\"\n\n# delete note by id, alternative\nnb 3 d\n\n# delete note 12 in the notebook named \"example\"\nnb - example:12\n\n# delete note 12 in the notebook named \"example\", alternative\nnb example:12 d\n\n# delete note 12 in the notebook named \"example\", alternative\nnb example:d 12\n```\n\nFor [`nb delete`](#delete) help information, run [`nb help delete`](#delete).\n\n##### Deleting with `nb browse`\n\nItems can be deleted within terminal and GUI web browsers using\n[`nb browse delete`](#browse) / [`nb b d`](#browse):\n\n```bash\n❯ nb browse delete example:4\n❯nb · example : 4 · ↓ · edit · - | +\n\n              deleting\n\n[4] example_file.md \"Example Title\"\n\n              [delete]\n \n```\n\nFor more information, see [Browsing](#-browsing).\n\n### 🔖 Bookmarks\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#nb-help\"><code>nb&nbsp;&lt;url&gt;</code></a>,\n    <a href=\"#browse\"><code>nb&nbsp;browse</code></a>,\n    <a href=\"#bookmark\"><code>nb&nbsp;bookmark</code></a>,\n    <a href=\"#open\"><code>nb&nbsp;open</code></a>,\n    <a href=\"#peek\"><code>nb&nbsp;peek</code></a>,\n    <a href=\"#show\"><code>nb&nbsp;show</code></a>\n  </sup>\n</p>\n\n`nb` includes a bookmarking system to conveniently\ncreate, annotate, view, search, [browse](#-browsing), and manage\ncollections of bookmarks.\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/nb-bookmarks-gui-gui-terminal.png\"\n        alt=\"nb bookmarks\"\n        width=\"450\">\n</div>\n\nBookmarks in `nb` are stored as\n[simple structured Markdown files](#nb-markdown-bookmark-file-format)\ncontaining information extracted from the bookmarked pages.\n\nTo create a new bookmark, pass a URL as the first argument to `nb`:\n\n```bash\nnb https://example.com\n```\n\n`nb` automatically generates a bookmark using information from the page:\n\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\n`nb` embeds the page content in the bookmark, making it available for\n[full text search](#-search) with [`nb search`](#search) and\nlocally-served, distraction-free [reading and browsing](#-browsing)\nwith [`nb browse`](#browse).\nWhen [Pandoc](https://pandoc.org/) is installed,\nthe HTML page content is converted to Markdown.\nWhen [readability-cli](https://gitlab.com/gardenappl/readability-cli)\nis installed, markup is cleaned up to focus on content. When\n[Chromium](https://www.chromium.org) or\n[Chrome](https://www.google.com/chrome/) is installed,\nJavaScript-dependent pages are rendered and the resulting markup is\nsaved.\n\nMany shells automatically escape special characters in URLs. If a\nURL contains characters that are preventing it from being saved in full,\nURLs can also be enclosed in quotes when passed to `nb`:\n\n```bash\nnb \"https://example.com#sample-anchor\"\n```\n\nIn addition to caching the page content,\nyou can also include a quote from the page in a\n[`## Quote`](#-quote) section\nusing the\n[`-q <quote>`](#bookmark) / [`--quote <quote>`](#bookmark) option:\n\n```bash\nnb https://example.com --quote \"Example quote line one.\n\nExample quote line two.\"\n```\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Quote\n\n> Example quote line one.\n>\n> Example quote line two.\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\nAdd a comment in a [`## Comment`](#-comment) section using the\n[`-c <comment>`](#bookmark) / [`--comment <comment>`](#bookmark) option:\n\n```bash\nnb https://example.com --comment \"Example comment.\"\n```\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Comment\n\nExample comment.\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\nAdd related URLs and [linked](#-linking) [selectors](#-selectors)\nto a [`## Related`](#-related) section using the\n[`-r (<url> | <selector>)`](#bookmark) /\n[`--related (<url> | <selector>)`](#bookmark)\noption:\n\n```bash\nnb https://example.com --related example:123 -r https://example.net\n```\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Related\n\n- [[example:123]]\n- <https://example.net>\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\nBookmarks can be tagged using the\n[`-t <tag1>,<tag2>...`](#bookmark) /\n[`--tags <tag1>,<tag2>...`](#bookmark) option.\nTags are converted into [#hashtags](#-tagging) and\nadded to a [`## Tags`](#-tags) section:\n\n```bash\nnb https://example.com --tags tag1,tag2\n```\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Tags\n\n#tag1 #tag2\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\n[Search](#-search) for tagged bookmarks with\n[`nb search`](#search) / [`nb q`](#search):\n\n```bash\nnb search --tag tag1\n\nnb q -t tag1\n\nnb q \\#tag1\n```\n\n[`nb search`](#search) / [`nb q`](#search)\nautomatically searches archived page content:\n\n```bash\n❯ nb q \"example query\"\n[10] 🔖 example.bookmark.md \"Example Bookmark (example.com)\"\n------------------------------------------------------------\n5:Lorem ipsum example query.\n```\n\nBookmarks can also be encrypted:\n\n```bash\n# create a new password-protected, encrypted bookmark\nnb https://example.com --encrypt\n```\n\nEncrypted bookmarks require a password before they can be viewed or\nopened.\n\nMultiple URLs can be bookmarked with a single command by passing\nmultiple [`<url>`](#bookmark) arguments. Additional arguments will be reused\nfor each bookmark:\n\n```bash\n❯ nb https://example.com https://example.net --tags tag1,tag2 --filename example\nAdded: [1] 🔖 example.bookmark.md \"Example Domain (example.com)\"\nAdded: [2] 🔖 example-1.bookmark.md \"Example Domain (example.net)\"\n```\n\n#### Listing and Filtering Bookmarks\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/nb-bookmarks-gui-terminal-terminal.png\"\n        alt=\"nb bookmark lists\"\n        width=\"500\">\n</div>\n\nBookmarks are included in\n`nb`,\n[`nb ls`](#ls),\n[`nb list`](#list),\nand [`nb browse`](#browse)\nalong with items of other types.\n[`nb bookmark`](#bookmark) and [`nb bookmark list`](#bookmark) can be used to\nlist and filter only bookmarks:\n\n```bash\n❯ nb bookmark\nAdd: nb <url> Help: nb help bookmark\n------------------------------------\n[3] 🔖 🔒 example.bookmark.md.enc\n[2] 🔖 Bookmark Two (example.com)\n[1] 🔖 Bookmark One (example.com)\n\n❯ nb bookmark list two\n[2] 🔖 Bookmark Two (example.com)\n```\n\nBookmarks are also included in `nb`, [`nb ls`](#ls), and [`nb list`](#list):\n\n```bash\n❯ nb\nhome\n----\n[7] 🔖 Bookmark Three (example.com)\n[6] Example Note\n[5] 🔖 Bookmark Two (example.net)\n[4] Sample Note\n[3] 🔖 🔒 example-encrypted.bookmark.md.enc\n[2] Demo Note\n[1] 🔖 Bookmark One (example.com)\n```\n\nUse the [`--type <type>`](#ls) / [`--<type>`](#ls)\noption as a filter to display only bookmarks:\n\n```bash\n❯ nb --type bookmark\n[7] 🔖 Bookmark Three (example.com)\n[5] 🔖 Bookmark Two (example.net)\n[3] 🔖 🔒 example-encrypted.bookmark.md.enc\n[1] 🔖 Bookmark One (example.com)\n\n❯ nb --bookmark\n[7] 🔖 Bookmark Three (example.com)\n[5] 🔖 Bookmark Two (example.net)\n[3] 🔖 🔒 example-encrypted.bookmark.md.enc\n[1] 🔖 Bookmark One (example.com)\n```\n\n`nb` saves the domain in the title, making it easy to filter by domain\nusing any list subcommands:\n\n```bash\n❯ nb example.com\n[7] 🔖 Bookmark Three (example.com)\n[1] 🔖 Bookmark One (example.com)\n```\n\nFor more listing options, see\n[`nb help ls`](#ls),\n[`nb help list`](#list),\nand [`nb help bookmark`](#bookmark).\n\n##### Shortcut Aliases: `nb bk`, `nb bm`\n\n[`nb bookmark`](#bookmark) can also be used with the aliases\n[`nb bk`](#bookmark) and [`nb bm`](#bookmark):\n\n```bash\n❯ nb bk\nAdd: nb <url> Help: nb help bookmark\n------------------------------------\n[7] 🔖 Bookmark Three (example.com)\n[5] 🔖 Bookmark Two (example.net)\n[3] 🔖 🔒 example-encrypted.bookmark.md.enc\n[1] 🔖 Bookmark One (example.com)\n\n❯ nb bm example.net\n[5] 🔖 Bookmark Two (example.net)\n```\n\n#### Viewing Bookmarks\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#browse\"><code>nb&nbsp;browse</code></a>,\n    <a href=\"#open\"><code>nb&nbsp;open</code></a>,\n    <a href=\"#peek\"><code>nb&nbsp;peek</code></a>,\n    <a href=\"#show\"><code>nb&nbsp;show</code></a>\n  </sup>\n</p>\n\n`nb` provides multiple ways to view bookmark files, bookmarked content,\nand bookmarked URLs.\n\nUse [`nb browse`](#browse) (shortcut: [`nb b`](#browse))\nto [browse](#-browsing) bookmarks with cached content,\n<a href=\"#-linking\">[[wiki-style links]]</a>,\nlinked [#tags](#-tagging), and external links:\n\n```bash\n❯ nb browse text:formats/markdown/123\n❯nb · text : formats / markdown / 123 · ↓ · edit | +\nDaring Fireball: Markdown (daringfireball.net)\n\nhttps://daringfireball.net/projects/markdown/\n\nRelated\n\n  • https://en.wikipedia.org/wiki/Markdown\n\nComments\n\nSee also:\n\n  • [[text:formats/org]]\n  • [[cli:apps/nb]]\n\nTags\n\n#markup #plain-text\n\nContent\n\nDaring Fireball: Markdown\n\nDownload\n\nMarkdown 1.0.1 (18 KB) — 17 Dec 2004\n\nIntroduction\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown allows\nyou to write using an easy-to-read, easy-to-write plain text format, then\nconvert it to structurally valid XHTML (or HTML).\n```\n\nFor more information, see [Browsing](#-browsing).\n\n[`nb open`](#open) (shortcut: [`nb o`](#open)) opens the bookmarked URL in\nyour system's primary web browser:\n\n```bash\n# open bookmark by id\nnb open 3\n\n# open bookmark 12 in the notebook named \"example\"\nnb open example:12\n\n# open bookmark 12 in the notebook named \"example\", alternative\nnb example:12 open\n\n# open bookmark 12 in the notebook named \"example\", alternative\nnb example:open 12\n```\n\n*N.B. To use [`nb open`](#open) with\n[WSL](https://docs.microsoft.com/en-us/windows/wsl/install),\ninstall [wslu](https://github.com/wslutilities/wslu).*\n\n[`nb peek`](#peek) (shortcut: [`nb p`](#peek), alias: [`nb preview`](#peek))\nopens the bookmarked URL in your terminal web browser,\nsuch as\n[w3m](https://en.wikipedia.org/wiki/W3m),\n[Links](https://en.wikipedia.org/wiki/Links_(web_browser)), or\n[Lynx](https://en.wikipedia.org/wiki/Lynx_(web_browser)):\n\n```bash\n# peek bookmark by id\nnb peek 3\n\n# peek bookmark 12 in the notebook named \"example\"\nnb peek example:12\n\n# peek bookmark 12 in the notebook named \"example\", alternative\nnb example:12 peek\n\n# peek bookmark 12 in the notebook named \"example\", alternative\nnb example:peek 12\n```\n\n[`nb open`](#open) and [`nb peek`](#peek)\nwork seamlessly with encrypted bookmarks.\n`nb` simply prompts you for the bookmark's password.\n\n[`nb open`](#open) and [`nb peek`](#peek)\nautomatically check whether the URL is still valid.\nIf the page has been removed, `nb` can check\nthe [Internet Archive Wayback Machine](https://archive.org/web/)\nfor an archived copy.\n\nThe preferred terminal web browser can be set using\nthe `$BROWSER` environment variable,\nassigned in `~/.bashrc`, `~/.zshrc`, or similar:\n\n```bash\nexport BROWSER=lynx\n```\n\nWhen `$BROWSER` is not set, `nb` looks for\n[`w3m`](https://en.wikipedia.org/wiki/W3m),\n[`links`](https://en.wikipedia.org/wiki/Links_(web_browser)), and\n[`lynx`](https://en.wikipedia.org/wiki/Lynx_(web_browser))\nand uses the first one it finds.\n\n`$BROWSER` can also be used to easy specify the terminal browser for\nan individual command:\n\n```bash\n❯ BROWSER=links nb 12 peek\n# opens the URL from bookmark 12 in links\n\n❯ BROWSER=w3m nb 12 peek\n# opens the URL from bookmark 12 in w3m\n```\n\n[`nb show`](#show) and [`nb edit`](#edit)\ncan also be used to view and edit bookmark files,\nwhich include the cached page converted to Markdown.\n\n[`nb show <id> --render`](#show) / [`nb show <id> -r`](#show)\ndisplays the bookmark file converted to HTML in the terminal web browser,\nincluding all bookmark fields and the cached page content,\nproviding a cleaned-up, distraction-free, locally-served view of\nthe page content along with all of your notes.\n\n##### Shortcut Aliases: `nb o` and `nb p`\n\n[`nb open`](#open) and [`nb peek`](#peek)\ncan also be used with the shortcut aliases\n[`nb o`](#open) and [`nb p`](#peek):\n\n```bash\n# open bookmark by id\nnb o 3\n\n# open bookmark 12 in the notebook named \"example\"\nnb o example:12\n\n# open bookmark 12 in the notebook named \"example\", alternative\nnb example:12 o\n\n# peek bookmark by id\nnb p 3\n\n# peek bookmark 12 in the notebook named \"example\"\nnb p example:12\n\n# peek bookmark 12 in the notebook named \"example\", alternative\nnb example:12 p\n```\n\n#### Bookmark File Format\n\nBookmarks are identified by a `.bookmark.md` file extension.\nThe bookmark URL is the first URL in the file within `<` and `>` characters.\nTo create a minimally valid bookmark file with [`nb add`](#add):\n\n```bash\nnb add example.bookmark.md --content \"<https://example.com>\"\n```\n\nFor a full overview, see\n[`nb` Markdown Bookmark File Format](#nb-markdown-bookmark-file-format).\n\n#### `bookmark` -- A command line tool for managing bookmarks.\n\n`nb` includes [`bookmark`](#bookmark-help), a full-featured\ncommand line interface for creating, viewing, searching, and editing bookmarks.\n\n[`bookmark`](#bookmark-help) is a shortcut for the\n[`nb bookmark`](#bookmark) subcommand,\naccepting all of the same subcommands and options with identical behavior.\n\nBookmark a page:\n\n```bash\n❯ bookmark https://example.com --tags tag1,tag2\nAdded: [3] 🔖 20200101000000.bookmark.md \"Example Title (example.com)\"\n```\nList and filter bookmarks with\n[`bookmark`](#bookmark) and [`bookmark list`](#bookmark):\n\n```bash\n❯ bookmark\nAdd: bookmark <url> Help: bookmark help\n---------------------------------------\n[3] 🔖 🔒 example.bookmark.md.enc\n[2] 🔖 Example Two (example.com)\n[1] 🔖 Example One (example.com)\n\n❯ bookmark list two\n[2] 🔖 Example Two (example.com)\n```\n\nView a bookmark in your terminal web browser:\n\n```bash\nbookmark peek 2\n```\n\nOpen a bookmark in your system's primary web browser:\n\n```bash\nbookmark open 2\n```\n\nPerform a full text search of bookmarks and archived page content:\n\n```bash\n❯ bookmark search \"example query\"\n[10] 🔖 example.bookmark.md \"Example Bookmark (example.com)\"\n------------------------------------------------------------\n5:Lorem ipsum example query.\n```\n\nSee [`bookmark help`](#bookmark-help) for more information.\n\n### ✅ Todos\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#do\"><code>nb do</code></a>,\n    <a href=\"#tasks\"><code>nb tasks</code></a>,\n    <a href=\"#todo\"><code>nb todo</code></a>,\n    <a href=\"#undo\"><code>nb undo</code></a>\n  </sup>\n</p>\n\nUse [`nb todo`](#todo) (shortcut: [`nb to`](#todo))\nto create, list, and update todos.\n`nb` todos are [structured Markdown documents](#nb-markdown-todo-file-format)\nreferencing a single primary todo,\nwith optional [tasks](#%EF%B8%8F-tasks).\n\nUse [`nb todo add`](#todo) to create a new todo:\n\n```bash\n# create a new todo titled \"Example todo one.\"\n❯ nb todo add \"Example todo one.\"\nAdded: [1] ✔️ [ ] Example todo one.\n\n❯ nb show 1 --print\n# [ ] Example todo one.\n```\n\nUse the [`--due <date>`](#todo) option to add an optional due date in a\n[`## Due`](#-due) section:\n\n```bash\n# create a new todo titled \"Example todo two.\" with a due date of \"2100-01-01\"\n❯ nb todo add \"Example todo two.\" --due \"2100-01-01\"\nAdded: [2] ✔️ [ ] Example todo two.\n\n❯ nb show 2 --print\n# [ ] Example todo two.\n\n## Due\n\n2100-01-01\n```\n\nAdd an optional [description](#-description-1) with the\n[`--description <description>`](#todo)\noption:\n\n```bash\n❯ nb todo add \"Example todo three.\" --description \"Example description.\"\nAdded: [3] ✔️ [ ] Example todo three.\n\n❯ nb show 3 --print\n# [ ] Example todo three.\n\n## Description\n\nExample description.\n```\n\nTodos can have [tasks](#%EF%B8%8F-tasks).\nTasks added with one or more [`--task <task>`](#todo) options\nare represented as a markdown task list and placed in a\n[`## Tasks`](#-tasks) section:\n\n```bash\n❯ nb todo add \"Example todo seven.\" --task \"Task one.\" --task \"Task two.\" --task \"Task three.\"\nAdded: [7] ✔️ [ ] Example todo seven.\n\n❯ nb show 7 --print\n# [ ] Example todo seven.\n\n## Tasks\n\n- [ ] Task one.\n- [ ] Task two.\n- [ ] Task three.\n```\n\nRelated URLs and [linked](#-linking) [selectors](#-selectors)\ncan be added to a [`## Related`](#-related-1) field using the\n[`-r (<url> | <selector>)`](#todo) / [`--related (<url> | <selector>)`](#todo)\noption:\n\n```bash\n❯ nb todo add \"Example todo four.\" --related example:123 -r https://example.com\nAdded: [4] ✔️ [ ] Example todo four.\n\n❯ nb show 4 --print\n# [ ] Example todo four.\n\n## Related\n\n- [[example:123]]\n- <https://example.com>\n```\n\n[Tags](#-tagging) can be added to todos with the\n[`--tags <tag1>,<tag2>...`](#todo) option:\n\n```bash\n❯ nb todo add \"Example todo five.\" --tags tag1,tag2\nAdded: [5] ✔️ [ ] Example todo five.\n\n❯ nb show 5 --print\n# [ ] Example todo five.\n\n## Tags\n\n#tag1 #tag2\n```\n\n[Tags](#-tagging), [links](#-linking), and URLs can be\n[browsed](#-browsing)\nin terminal and GUI web browsers with [`nb browse`](#browse).\n\n#### Listing Todos\n\nList todos in with [`nb todos`](#todo):\n\n```bash\n# list todos in the current notebook\n❯ nb todos\n[6] ✔️ [ ] Example todo six.\n[5] ✅ [x] Example todo five.\n[4] ✔️ [ ] Example todo four.\n[3] ✅ [x] Example todo three.\n[2] ✅ [x] Example todo two.\n[1] ✔️ [ ] Example todo one.\n\n# list todos in the notebook named \"sample\"\n❯ nb todos sample:\n[sample:4] ✅ [x] Sample todo four.\n[sample:3] ✔️ [ ] Sample todo three.\n[sample:2] ✔️ [ ] Sample todo two.\n[sample:1] ✅ [x] Sample todo one.\n\n```\n\nOpen / undone todos can be listed with [`nb todos open`](#todo):\n\n```bash\n# list open todos in the current notebook\n❯ nb todos open\n[6] ✔️ [ ] Example todo six.\n[4] ✔️ [ ] Example todo four.\n[1] ✔️ [ ] Example todo one.\n\n# list open todos in the notebook named \"sample\"\n❯ nb tasks open sample:\n[sample:3] ✔️ [ ] Sample todo three.\n[sample:2] ✔️ [ ] Sample todo two.\n```\n\nClosed / done todos can be listed with [`nb todos closed`](#todo):\n\n```bash\n# list closed todos in the current notebook\n❯ nb todos closed\n[5] ✅ [x] Example todo five.\n[3] ✅ [x] Example todo three.\n[2] ✅ [x] Example todo two.\n\n# list closed todos in the notebook named \"sample\"\n❯ nb tasks closed sample:\n[sample:4] ✅ [x] Sample todo four.\n[sample:1] ✅ [x] Sample todo one.\n```\n\nSee\n[`nb help todo`](#todo)\nfor more information.\n\n#### `do` / `undo`\n\nMark a todo as done or closed with [`nb do`](#do):\n\n```bash\n# add a new todo titled \"Example todo six.\"\n❯ nb todo add \"Example todo six.\"\nAdded: [6] ✔️ [ ] Example todo six.\n\n# mark todo 6 as done / closed\n❯ nb do 6\nDone: [6] ✅ [x] Example todo six.\n```\n\nRe-open a closed todo with [`nb undo`](#undo):\n\n```bash\n# mark todo 6 as undone / open\n❯ nb undo 6\nUndone: [6] ✔️ [ ] Example todo six.\n```\n\nSee\n[`nb help do`](#do)\nand\n[`nb help undo`](#undo)\nfor more information.\n\n### ✔️ Tasks\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#do\"><code>nb do</code></a>,\n    <a href=\"#tasks\"><code>nb tasks</code></a>,\n    <a href=\"#todo\"><code>nb todo</code></a>,\n    <a href=\"#undo\"><code>nb undo</code></a>\n  </sup>\n</p>\n\n`nb` can list and update tasks in [todos](#-todos) and other Markdown documents.\n\nTasks are defined as one or more Markdown list items starting with\n`- [ ]` to indicate an open task or `- [x]` to indicate a done / closed task:\n\n```markdown\n- [ ] Example open task.\n- [x] Example closed task.\n```\n\nList tasks in items, folders, and notebooks with\n[`nb tasks`](#tasks) (shortcut: [`nb t`](#tasks)),\nwhich lists both tasks and todos:\n\n```bash\n# list tasks in item 7\n❯ nb tasks 7\n[7] ✔️ [ ] Example todo seven.\n------------------------------\n[7 1] [x] Task one.\n[7 2] [x] Task two.\n[7 3] [ ] Task three.\n\n# list tasks and todos in the notebook named \"example\"\n❯ nb tasks example:\n[example:9] ✔️ [ ] Example todo nine.\n[example:8] ✅ [x] Example todo eight.\n--------------------------------------\n[example:8 1] [x] Task one.\n[example:8 2] [x] Task two.\n\n[example:6] ✔️ [ ] Example todo six.\n[example:4] Example Note Title\n------------------------------\n[example:4 1] [ ] Task one.\n[example:4 2] [x] Task two.\n[example:4 3] [ ] Task three.\n\n[example:3] ✔️ [ ] Example todo three.\n```\n\nOpen / undone tasks can be listed with [`nb tasks open`](#tasks):\n\n```bash\n# list open tasks in item 7\n❯ nb tasks open 7\n[7] ✔️ [ ] Example todo seven.\n------------------------------\n[7 3] [ ] Task three.\n\n# list open tasks and todos in the notebook named \"example\"\n❯ nb tasks open example:\n[example:9] ✔️ [ ] Example todo nine.\n[example:6] ✔️ [ ] Example todo six.\n[example:4] Example Note Title\n------------------------------\n[example:4 1] [ ] Task one.\n[example:4 3] [ ] Task three.\n\n[example:3] ✔️ [ ] Example todo three.\n```\n\nClosed / done tasks can be listed with [`nb tasks closed`](#tasks):\n\n```bash\n# list closed tasks in item 7\n❯ nb tasks closed 7\n[7] ✔️ [ ] Example todo seven.\n------------------------------\n[7 1] [x] Task one.\n[7 2] [x] Task two.\n\n# list closed tasks and todos in the notebook named \"example\"\n❯ nb tasks closed example:\n[example:8] ✅ [x] Example todo eight.\n--------------------------------------\n[example:8 1] [x] Task one.\n[example:8 2] [x] Task two.\n\n[example:4] Example Note Title\n------------------------------\n[example:4 2] [x] Task two.\n```\n\nTasks are identified by the item [selector](#-selectors), followed by\na space, then followed by the sequential number of the task in the file.\n\nUse [`nb do`](#do) to mark tasks as done / closed:\n\n```bash\n# list tasks in item 9\n❯ nb tasks 9\n[9] ✔️ [ ] Example todo nine.\n-----------------------------\n[9 1] [ ] Task one.\n[9 2] [ ] Task two.\n[9 3] [ ] Task three.\n\n# mark task 2 in item 9 as done / closed\n❯ nb do 9 2\n[9] ✔️ [ ] Example todo nine.\n-----------------------------\nDone: [9 2] [x] Task two.\n\n# list tasks in item 9\n❯ nb tasks 9\n[9] ✔️ [ ] Example todo nine.\n-----------------------------\n[9 1] [ ] Task one.\n[9 2] [x] Task two.\n[9 3] [ ] Task three.\n```\n\nUndo a done / closed task with [`nb undo`](#undo):\n\n```bash\n# mark task 2 in item 9 as undone / open\n❯ nb undo 9 2\n[9] ✔️ [ ] Example todo nine.\n-----------------------------\nUndone: [9 2] [ ] Task two.\n\n# list tasks in item 9\n❯ nb tasks 9\n[9] ✔️ [ ] Example todo nine.\n-----------------------------\n[9 1] [ ] Task one.\n[9 2] [ ] Task two.\n[9 3] [ ] Task three.\n```\n\nSee\n[`nb help tasks`](#tasks)\nfor more information.\n\n### 🏷 #tagging\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#add\"><code>nb add</code></a>,\n    <a href=\"#bookmark\"><code>nb bookmark</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>,\n    <a href=\"#list\"><code>nb list</code></a>,\n    <a href=\"#ls\"><code>nb ls</code></a>,\n    <a href=\"#search\"><code>nb search</code></a>\n  </sup>\n</p>\n\n`nb` recognizes `#hashtags` defined anywhere within a document.\nA hashtag is defined in `nb` as a `#` character followed by any number of\nletters, numbers, underscores, and dashes.\n\nNotes and bookmarks can be tagged when they are created using the\n`--tags <tag1>,<tag2>...` option,\nwhich is available with\n[`nb add`](#add),\n[`nb <url>`](#nb-help),\n[`nb browse add`](#browse),\n[`nb bookmark`](#bookmark),\nand\n[`nb todo`](#todo).\n`--tags` takes a comma-separated list of tags, converts them to\n`#hashtags`,\nand adds them to the document.\n\nTags added to notes with [`nb add --tags`](#add) are placed between the title\nand body text:\n\n```bash\n❯ nb add --title \"Example Title\" \"Example note content.\" --tags tag1,tag2\n```\n\n```markdown\n# Example Title\n\n#tag1 #tag2\n\nExample note content.\n```\n\nTags added to [bookmarks](#bookmarks) with\n[`nb <url> --tags`](#nb-help) and [`nb bookmark <url> --tags`](#bookmark)\nare placed in a [`## Tags`](#-tags) section:\n\n```bash\n❯ nb https://example.com --tags tag1,tag2\n```\n\n```markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Tags\n\n#tag1 #tag2\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n```\n\nTags added to [todos](#-todos) with\n[`nb todo add --tags`](#todo)\nare placed in a [`## Tags`](#-tags-1) section:\n\n```bash\n❯ nb todo add --tags tag1,tag2 \"Example todo.\"\n```\n\n```markdown\n# [ ] Example todo.\n\n## Tags\n\n#tag1 #tag2\n```\n\nUse [`nb --tags`](#nb-help), [`nb ls --tags`](#ls),\nand [`nb list --tags`](#list)\nto list the tags present in a notebook, folder, or item:\n\n```bash\n# list all tags found in items in the current notebook\nnb --tags\n\n# list all tags found in the folder named \"example\"\nnb example/ --tags\n\n# list all tags in the item with id 123 in the notebook named \"sample\"\nnb sample:123 --tags\n```\n\nList tagged items by passing `\\#escaped` or `\"#quoted\"` hashtags or tags\nspecified with the [`--tags`](#ls) option to [`nb`](#ls) / [`nb ls`](#ls):\n\n```bash\n# list items in the current notebook tagged with \"#tag1\", escaped\nnb \\#tag1\n\n# list items in the \"example\" notebook tagged with \"#tag2\", quoted\nnb example: \"#tag2\"\n\n# list items in all notebooks tagged with \"#tag3\", long option\nnb --tags tag3 --all\n\n# list items in all notebooks tagged with \"#tag3\", short option\nnb --tags tag3 -a\n```\n\nCombine multiple tags to search for items containing all specified tags:\n\n```bash\n# list items in the current notebook tagged with \"#tag1\" AND \"#tag2\"\nnb \\#tag1 \"#tag2\"\n\n# list items in the current notebook tagged with \"#tag2\" AND \"#tag3\"\nnb --tags tag2,tag3\n\n# list items in all notebooks tagged with \"#tag1\" AND \"#tag2\" AND \"#tag3\" AND \"#tag4\"\nnb \\#tag1 \"#tag2\" --tags tag3,tag4 --all\n```\n\nTagged items can be [searched](#-search) with\n[`nb search`](#search) / [`nb q`](#search):\n\n```bash\n# search for items tagged with \"#tag1\"\nnb search --tag tag1\n\n# search for items tagged with \"#tag1\", shortcut and short option\nnb q -t tag1\n\n# search for items tagged with \"#tag1\", shortcut and argument\nnb q \\#tag1\n\n# search for items tagged with \"#tag1\", shortcut and argument, alternative\nnb q \"#tag1\"\n\n# search for items tagged with \"#tag1\" AND \"#tag2\"\nnb q --tag tag1 --tag tag2\n\n# search for items tagged with \"#tag1\" AND \"#tag2\", short options\nnb q -t tag1 -t tag2\n\n# search for items tagged with \"#tag1\" AND \"#tag2\", arguments\nnb q \\#tag1 \\#tag2\n\n# search for items tagged with \"#tag1\" AND \"#tag2\", tag list\nnb q --tags tag1,tag2\n\n# search for items tagged with either \"#tag1\" OR \"#tag2\", options\nnb q -t tag1 --or -t tag2\n\n# search for items tagged with either \"#tag1\" OR \"#tag2\", arguments\nnb q \\#tag1 --or \\#tag2\n\n# search for items tagged with either \"#tag1\" OR \"#tag2\", single argument\nnb q \"#tag1|#tag2\"\n\n# search for items tagged with \"#tag1\" AND \"#tag2\" AND \"#tag3\"\nnb q -t tag1 --tags tag2,tag3\n\n# search for items tagged with \"#tag1\" OR \"#tag2\" OR \"#tag3\"\nnb q -t tag1 --or --tags tag2,tag3\n\n# search for items tagged with \"#tag1\" OR \"#tag2\" OR \"#tag3\"\nnb q \\#tag1 --or -t tag2 --or \"#tag3\"\n```\n\nLinked tags can be [browsed](#-browsing) with [`nb browse`](#browse),\nproviding another dimension of browsability in terminal and GUI web browsers,\ncomplimenting <a href=\"#-linking\">[[wiki-style linking]]</a>.\n\nTags in notes,\nbookmarks,\nfiles in text-based formats,\nWord `.docx` documents,\nand [Open Document](https://en.wikipedia.org/wiki/OpenDocument) `.odt` files\nare rendered as links to the list of items in the notebook sharing that tag:\n\n```bash\n❯nb · example : 321\n\nExample Title\n\n#tag1 #tag2\n\nExample content with link to [[Sample Title]].\n\nMore example content:\n\n- one\n- two\n- three\n```\n\nUse the [`-t <tag>`](#browse) / [`--tag <tag>`](#browse) option\nto open [`nb browse`](#browse) to the list of\nall items in the current notebook or a specified notebook or folder that\nshare a tag:\n\n```bash\n# open to a list of items tagged with \"#tag2\" in the \"example\" notebook\n❯ nb browse example: --tag tag2\n❯nb · example\n\nsearch: [#tag2               ]\n\n[example:321] Example Title\n[example:654] Sample Title\n[example:789] Demo Title\n\n# shortcut alias and short option\n❯ nb b example: -t tag2\n❯nb · example\n\nsearch: [#tag2               ]\n\n[example:321] Example Title\n[example:654] Sample Title\n[example:789] Demo Title\n```\n\nFor more information about full-text search, see\n[Search](#-search) and [`nb search`](#search).\nFor more information about browsing, see\n[Browsing](#-browsing) and [`nb browse`](#browse).\n\n### 🔗 Linking\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#browse\"><code>nb browse</code></a>\n  </sup>\n</p>\n\nNotes,\nbookmarks,\nfiles in text-based formats,\nWord `.docx` documents,\nand [Open Document](https://en.wikipedia.org/wiki/OpenDocument) `.odt` files\ncan reference other items using\n<a href=\"#-linking\">[[wiki-style links]]</a>,\nmaking `nb` a powerful terminal-first platform for\n[Zettelkasten](#-zettelkasten),\nwiki-style knowledge mapping,\nand other link-based note-taking methods.\n\nTo add a link from a note or bookmark to another in the same notebook,\ninclude the id, title, or relative path for the target item\nwithin double square brackets anywhere in the linking document:\n\n```bash\n# link to the item with id 123 in the root level of current notebook\n[[123]]\n\n# link to the item titled \"Example Title\" in the root level of the current notebook\n[[Example Title]]\n\n# link to the item with id 456 in the folder named \"Sample Folder\"\n[[Sample Folder/456]]\n\n# link to the item titled \"Demo Title\" in the folder named \"Sample Folder\"\n[[Sample Folder/Demo Title]]\n```\n\nTo link to an item in another notebook,\nadd the notebook name with a colon before the identifier:\n\n```bash\n# link to the item with id 123 in the \"sample\" folder in the \"example\" notebook\n[[example:sample/123]]\n\n# link to the item titled \"Example Title\" in the \"demo\" notebook\n[[demo:Example Title]]\n\n# link to the item with filename \"Example File.md\" in the \"sample\" notebook\n[[sample:Example File.md]]\n```\n\nThe text for a link can be specified after a pipe `|` character:\n\n```bash\n# render link to item 123 in the \"example\" notebook as [[Example Link Text]]\n[[example:123|Example Link Text]]\n```\n\n<a href=\"#-linking\">[[wiki-style links]]</a> cooperate well with\n[Org links](https://orgmode.org/guide/Hyperlinks.html),\nwhich have a similar syntax,\nproviding a convenient option for linking collections of Org files.\n\nLinked items can be [browsed](#-browsing) with [`nb browse`](#browse).\n\nFor more information about identifying items, see [Selectors](#-selectors).\n\n### 🌍 Browsing\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#browse\"><code>nb browse</code></a>\n  </sup>\n</p>\n\nUse [`nb browse`](#browse) (shortcut: [`nb b`](#browse)) to\nbrowse, view, edit, and search linked notes, bookmarks, notebooks, folders,\nand other items using terminal and GUI web browsers.\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/gui-gui-terminal-browse.png\"\n        alt=\"nb browse\"\n        width=\"500\">\n</div>\n\n[`nb browse`](#browse) includes an embedded, terminal-first web application\nthat renders\n<a href=\"#-linking\">[[wiki-style links]]</a>\nand\n[#hashtags](#-tagging)\nas internal links, enabling you to browse your notes and notebooks in web\nbrowsers, including seamlessly browsing to and from the offsite links in\nbookmarks and notes.\n\n```bash\n❯ nb browse\n❯nb · home : +\n\nsearch: [                    ]\n\n[home:6]  📌 Example Markdown Title\n[home:12] 🔒 example-encrypted.md.enc\n[home:11] 🔖 Example Bookmark (example.com)\n[home:10] 🔖 🔒 example-encrypted.bookmark.md.enc\n[home:9]  Example .org Title\n[home:8]  🌄 example-image.png\n[home:7]  📄 example.pdf\n[home:5]  🔉 example-audio.mp3\n[home:4]  Example LaTeX Title\n[home:3]  📹 example-video.mp4\n[home:2]  example.md\n[home:1]  📂 Example Folder\n```\n\nLists are displayed using the same format as `nb` and [`nb ls`](#ls),\nincluding [pinned](#-pinning) items, with each list item linked.\nLists are automatically paginated to fit the height of the terminal window.\n\n```bash\n❯ nb browse example:sample/demo/\n❯nb · example : sample / demo / +\n\nsearch: [                    ]\n\n[example:sample/demo/7] Title Seven\n[example:sample/demo/6] Title Six\n[example:sample/demo/5] Title Five\n[example:sample/demo/4] Title Four\n[example:sample/demo/3] Title Three\n\nnext ❯\n```\n\n[`nb browse`](#browse) is designed to make it easy to navigate within\nterminal web browsers using only keyboard commands,\nwhile also supporting mouse interactions.\nThe [`nb browse`](#browse) interface includes links\nto quickly jump to parent folders,\nthe current notebook,\nand other notebooks.\n\n[`nb browse`](#browse) opens in\n[w3m](https://en.wikipedia.org/wiki/W3m),\n[Links](https://en.wikipedia.org/wiki/Links_\\(web_browser\\)),\nor in the browser set in the `$BROWSER` environment variable.\nUse [`nb browse --gui`](#browse) / [`nb b -g`](#browse) to\nopen in the system's primary [GUI web browser](#browse---gui).\n\nTo open a specific item in [`nb browse`](#browse),\npass the [selector](#-selectors) for the item, folder, or notebook\nto [`nb browse`](#browse):\n\n```bash\n# open the item with id 42 in the folder named \"sample\" in the \"example\" notebook\n❯ nb browse example:sample/42\n❯nb · example : sample / 42 · ↓ · edit | +\n\nExample Title\n\n#tag1 #tag2\n\nExample content with link to [[Demo Title]].\n\nMore example content:\n\n  • one\n  • two\n  • three\n```\n\nItems can also be browsed with\n[`nb show --browse`](#show) / [`nb s -b`](#show),\nwhich behaves identically.\n\n[`nb browse`](#browse) is particularly useful for [bookmarks](#-bookmarks).\nCached content is rendered in the web browser along with comments and notes.\nInternal and external links are easily accessible directly in the terminal,\nproviding a convenient, distraction-free approach for browsing collections\nof bookmarks.\n\n```bash\n❯ nb browse text:formats/markdown/123\n❯nb · text : formats / markdown / 123 · ↓ · edit | +\nDaring Fireball: Markdown (daringfireball.net)\n\nhttps://daringfireball.net/projects/markdown/\n\nRelated\n\n  • https://en.wikipedia.org/wiki/Markdown\n\nComments\n\nSee also:\n\n  • [[text:formats/org]]\n  • [[cli:apps/nb]]\n\nTags\n\n#markup #plain-text\n\nContent\n\nDaring Fireball: Markdown\n\nDownload\n\nMarkdown 1.0.1 (18 KB) — 17 Dec 2004\n\nIntroduction\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown allows\nyou to write using an easy-to-read, easy-to-write plain text format, then\nconvert it to structurally valid XHTML (or HTML).\n```\n\nNotes, bookmarks, files in text-based formats, source code,\nWord `.docx` documents, and\n[Open Document](https://en.wikipedia.org/wiki/OpenDocument) `.odt`\nfiles are converted into HTML and rendered in the browser. Use the down\narrow (`↓`) link to view or download the original file.\n\n#### `browse edit`\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/gui-terminal-browse-edit.png\"\n        alt=\"nb browse edit\"\n        width=\"500\">\n</div>\n\nItems in text formats can be edited within terminal and GUI web browsers using\nthe `edit` link on the item page or by opening the item with\n[`nb browse edit`](#browse) / [`nb b e`](#browse),\nwhich automatically resizes the form to fit the current terminal window:\n\n```bash\n❯ nb browse edit text:formats/markdown/123\n❯nb · text : formats / markdown / 123 · ↓ · editing · - | +\n\n[# Daring Fireball: Markdown (daringfireball.net)         ]\n[                                                         ]\n[<https://daringfireball.net/projects/markdown/>          ]\n[                                                         ]\n[## Related                                               ]\n[                                                         ]\n[- <https://en.wikipedia.org/wiki/Markdown>               ]\n[                                                         ]\n[## Comments                                              ]\n[                                                         ]\n[See also:                                                ]\n[                                                         ]\n[- [[text:formats/org]]                                   ]\n[- [[cli:apps/nb]]                                        ]\n[                                                         ]\n[## Tags                                                  ]\n[                                                         ]\n\n[save] · last: 2021-01-01 01:00:00\n```\n\nTerminal web browsers provide different editing workflows.\n[`w3m`](https://en.wikipedia.org/wiki/W3m) opens items in your `$EDITOR`,\nthen returns you back to the browser to save changes and continue browsing.\nEdits in [`links`](https://en.wikipedia.org/wiki/Links_(web_browser))\nare performed directly in the browser.\n\nSyntax highlighting, block selection, and other\n[advanced editor features](#browse---gui-editing)\nare available with [`nb browse --gui`](#browse).\n\n#### `browse add`\n\nAdd an item within the browser using the `+` link or\n[`nb browse add`](#browse) / [`nb b a`](#browse).\nPass a notebook, folder, and / or filename selector to create a new note\nin that location:\n\n```bash\n❯ nb browse add text:formats/\n❯nb · text : formats / +\n\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n\n[add]\n```\n\n[`nb browse add`](#browse) includes options for quickly pre-populating\nnew notes with content:\n\n```bash\n❯ nb browse add --title \"Example Title\" --content \"Example content.\" --tags tag1,tag2\n❯nb · home : +\n\n[# Example Title                                    ]\n[                                                   ]\n[#tag1 #tag2                                        ]\n[                                                   ]\n[Example content.                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n[                                                   ]\n\n[add]\n```\n\n#### `browse delete`\n\nUse the `-` link on the [`nb browse edit`](#browse) page or\n[`nb browse delete`](#browse) / [`nb b d`](#browse)\nto delete an item:\n\n```bash\n❯ nb browse delete example:4\n❯nb · example : 4 · ↓ · edit · - | +\n\n              deleting\n\n[4] example_file.md \"Example Title\"\n\n              [delete]\n \n```\n\n#### `browse` Search\n\n[`nb browse`](#browse) includes a search field powered by\n[`nb search`](#search)\nthat can be used to search the current notebook or folder.\nSearch queries are treated as command line arguments for\n[`nb search`](#search),\nproviding the ability to perform `AND` and `OR` queries.\nUse the\n[`-q <query>`](#browse) / [`--query <query>`](#browse)\noption to open [`nb browse`](#browse) to\nthe results page for a search:\n\n```bash\n# open to a list of items containing \"example\" in the current notebook\n❯ nb browse --query \"example\"\n❯nb · home\n\nsearch: [example             ]\n\n[home:321] Test Title\n[home:654] Sample Title\n[home:789] Demo Title\n\n# using shortcut alias and short option\n❯ nb b -q \"example\"\n❯nb · home\n\nsearch: [example             ]\n\n[home:321] Test Title\n[home:654] Sample Title\n[home:789] Demo Title\n```\n\nSearch for [#tags](#-tagging) with the\n[`-t`](#browse) / [`--tag`](#browse) / [`--tags`](#browse) options:\n\n```bash\n# open to a list of items tagged with \"#tag2\" in the current notebook\n❯ nb browse --tag tag2\n❯nb · home\n\nsearch: [#tag2               ]\n\n[home:654] Sample Title\n[home:789] Demo Title\n\n# using shortcut alias and short option\n❯ nb b -t tag2\n❯nb · home\n\nsearch: [#tag2               ]\n\n[home:654] Sample Title\n[home:789] Demo Title\n```\n\nFor more information about search options, see [Search](#-search) and\n[`nb search`](#search).\n\n#### `browse --gui`\n\nTo open any [`nb browse`](#browse) view in\nthe system's primary GUI web browser,\nadd the [`nb browse --gui`](#browse) / [`nb b -g`](#browse) option:\n\n```bash\n# open the item with id 123 in the \"sample\" notebook in the system's primary GUI browser\nnb browse sample:123 --gui\n\n# open the folder named \"example\" in the system's primary GUI browser,\n# short option\nnb browse example/ -g\n\n# open the current notebook in the system's primary GUI browser,\n# shortcut alias and short option\nnb b -g\n```\n\n##### `browse --gui` Editing\n\nBy default,\n[`nb browse --gui`](#browse)\nuses the browser's default `<textarea>` for editing items.\n\n[Ace](https://ace.c9.io/) is a text editor for GUI web browsers\nthat provides advanced text editing functionality,\nincluding block selection and\n[syntax highlighting](#gui-web-syntax-highlighting).\n\nTo use Ace as the editor for [`nb browse --gui`](#browse),\nadd the following line to your `~/.nbrc` file:\n\n```bash\nexport NB_ACE_ENABLED=1\n```\n\nThe next time a form is loaded in [`nb browse`](#browse),\n`nb` will automatically download\n(from [GitHub](https://github.com/ajaxorg/ace-builds/)),\ninstall,\nand enable the Ace editor in\n[`nb browse edit --gui`](#browse) and [`nb browse add --gui`](#browse).\n\n#### `browse` Portability\n\n[`nb browse`](#browse) depends on\neither [`socat`](https://www.kali.org/tools/socat/)\nor\n[`ncat`](https://nmap.org/ncat/) (available as part of\nthe `ncat` or `nmap` package in most package managers) and\n[`pandoc`](https://pandoc.org/). When neither `socat` nor `ncat` is\navailable and the Bash version is 5.2 or higher, [`nb browse`](#browse)\nfalls back to a pure Bash implementation that supports all features\nexcept the Ace editor. When only `pandoc` is available,\nthe current note is rendered and\n<a href=\"#-linking\">[[wiki-style links]]</a>\ngo to unrendered, original files.\nWhen `socat`,`ncat`, or Bash 5.2+ is available without `pandoc`,\nfiles in plain text formats are rendered with the original markup unconverted.\nIf neither `ncat`, `socat`, Bash 5.2+, nor `pandoc` is available,\n[`nb browse`](#browse) falls back to the default behavior of [`nb show`](#show).\n\nWhen `nb` is installed on Windows,\n`socat` ([MSYS](https://packages.msys2.org/package/socat),\n[Cygwin](https://cygwin.com/packages/summary/socat.html)) is recommended.\n\n#### `browse` Privacy\n\n[`nb browse`](#browse) is completely local and self-contained within `nb`,\nfrom the CSS and JavaScript\nall the way down through the HTTP request parsing and response building,\nwith no imports, libraries, frameworks, or third-party code\noutside of the few binary dependencies\n(`bash`, `git`, `ncat` / `socat`, `pandoc`),\nthe Linux / Unix environment,\nand the optional [Ace editor](#ace-editor).\n\nTerminal web browsers don't use JavaScript, so visits from them are not\nvisible to some web analytics tools.\n[`nb browse`](#browse) includes a number of additional features\nto enhance privacy and avoid leaking information:\n\n- Page content is cached locally within each bookmark file,\n  making it readable in terminal and GUI web browsers\n  without requesting the page again or needing to be connected to the internet.\n- `<img>` tags in bookmarked content are removed to avoid requests.\n- Outbound links are automatically rewritten to use an\n  [exit page redirect](https://geekthis.net/post/hide-http-referer-headers/#exit-page-redirect)\n  to mitigate leaking information via the\n  [referer header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer).\n- All pages include the `<meta name=\"referrer\" content=\"no-referrer\" />` tag.\n- Links include a `rel=\"noopener noreferrer\"` attribute.\n- `lynx` is opened with the `-noreferer` option.\n\n#### `browse` AsciiDoc\n\nTo [`browse`](#browse) items in [AsciiDoc](https://asciidoc.org/) format,\ninstall [`asciidoctor`](https://asciidoctor.org/).\n\n#### Shortcut Alias: `nb b`\n\n[`nb browse`](#browse) can also be used with the alias [`nb b`](#browse):\n\n```bash\n# open the current notebook in the terminal web browser\nnb b\n\n# open the item with id 123 in the \"example\" notebook using the terminal web browser\nnb b example:123\n\n# open the notebook named \"sample\" in the GUI web browser\nnb b sample: -g\n```\n\nFor more information, see [`nb browse`](#browse).\n\n### 🌄 Images\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#browse\"><code>nb browse</code></a>,\n    <a href=\"#import\"><code>nb import</code></a>,\n    <a href=\"#open\"><code>nb open</code></a>,\n    <a href=\"#show\"><code>nb show</code></a>\n  </sup>\n</p>\n\n`nb` can be used to view, organize, browse, reference, and work with images in\nterminals,\nweb browsers,\nand GUI applications.\n\n#### Image Items\n\n[Import](#%EF%B8%8F-import--export) images with [`nb import`](#import):\n\n```bash\n# import the image file \"example.png\" into the current notebook\nnb import example.png\n\n# import an image file from a URL into the current notebook\nnb import https://raw.githubusercontent.com/xwmx/nb/master/docs/images/nb.png\n\n# nb import \"sample.jpg\" into the \"demo\" folder in the \"example\" notebook\nnb import sample.jpg example:demo/\n```\n\nImported images are displayed with [`🌄` indicators](#indicators) in\n[lists](#listing--filtering):\n\n```bash\n❯ nb\nhome\n----\n[5] Example Five\n[4] 🌄 example-image.png\n[3] Example Three\n[2] Example Two\n[1] Example One\n```\n\nImported image items can be opened in the system GUI application for\nthe item's file type using [`nb open`](#open):\n\n```bash\n# open the image \"example-image.png\" in the system GUI photo viewer\nnb open example-image.png\n\n# open the image with id \"4\" in the system GUI photo viewer\nnb 4 o\n```\n\nImage items can be viewed in web browsers with [`nb browse`](#browse),\nproviding a convenient mechanism for\n[browsing](#-browsing) notebooks and folders containing image collections.\n\n[`nb browse`](#browse) renders image items within in an `<img>` tag\non the item page. Open the item page for an image item by passing a\n[selector](#-selectors) to [`nb browse`](#browse), optionally including the\n[`-g`](#browse) / [`--gui`](#browse) option\nto open the page in the system GUI web browser:\n\n```bash\n# open item with id \"123\" in the terminal web browser\nnb browse 123\n\n# open item with id \"456\" in the \"example\" notebook in the GUI web browser\nnb browse example:456 --gui\n\n# open item \"example:456\" in the GUI web browser, alternative\nnb example:456 b -g\n```\n\nThe original file can be viewed or downloaded from the item page\nby either clicking the image item or using the down arrow (`↓`) link.\n\n[`nb browse --gui`](#browse---gui) displays images in any GUI web browser.\nSome terminal web browsers, such as [`w3m`](http://w3m.sourceforge.net/),\ncan be configured to display images.\n\n[`nb show`](#show) can display images directly in the terminal with\nsupported tools and configurations, including:\n\n- [`catimg`](https://github.com/posva/catimg)\n- [Chafa](https://github.com/hpjansson/chafa)\n- [ImageMagick](https://imagemagick.org/) with a terminal that\n  supports [sixels](https://en.wikipedia.org/wiki/Sixel)\n- [`imgcat`](https://www.iterm2.com/documentation-images.html) with\n  [iTerm2](https://www.iterm2.com/)\n- [kitty's `icat` kitten](https://sw.kovidgoyal.net/kitty/kittens/icat.html)\n- [`termvisage`](https://github.com/AnonymouX47/termvisage)\n- [`timg`](https://github.com/hzeller/timg)\n- [`viu`](https://github.com/atanunq/viu)\n\nA preferred image viewer tool can be set with the\n[`$NB_IMAGE_TOOL`](#nb_image_tool) variable in your `~/.nbrc` file,\nwhich can be opened in your editor with [`nb settings edit`](#settings).\n\n#### Inline Images\n\nImages can be referenced and rendered inline within\nnotes, bookmarks, and other items.\n\nTo reference an image in the same notebook,\nspecify the image's relative path within the notebook:\n\n```markdown\n# reference \"example.jpg\" from markdown\n![](example.jpg)\n\n# reference \"demo.png\" in the \"sample\" folder from markdown\n![](sample/demo.png)\n```\n\nImages in any notebook can be referenced using the `--original` URL,\nobtainable from the image's [`nb browse`](#browse) item page\nby either clicking the image item or using the down arrow (`↓`) link.\n\n```markdown\n# reference \"example.jpg\" in the \"home\" notebook with the --original URL\n![](http://localhost:6789/--original/home/example.jpg)\n```\n\nImage references in content are rendered inline within web browsers with\n[`nb browse`](#browse) and [`nb show --render`](#show).\n\n`<img>` tags are stripped from bookmarked content when rendering to HTML.\nInline images can still be used in other bookmark sections like\n[`## Comment`](#-comment).\n\n### 🗂 Zettelkasten\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a>\n  </sup>\n</p>\n\nZettelkasten (German: \"slip box\") is a method of note-taking and\npersonal knowledge management modeled around a few key features:\n\n- Notes are taken liberally on index cards.\n- Each note is numbered for easy reference.\n- Index cards are organized into boxes.\n- Index cards can reference other index cards.\n- Cards can include tags and other metadata.\n\nSince `nb` works directly on plain text files\norganized in normal system directories in normal git repositories,\n`nb` is a very close digital analogue to physical zettelkasten note-taking.\n\n|    Zettelkasten   |                       `nb`                      |\n|:-----------------:|:-----------------------------------------------:|\n| index cards       | [notes](#-notes) & [bookmarks](#-bookmarks)     |\n| numbering         | ids & [selectors](#-selectors)                  |\n| slip boxes        | [notebooks](#-notebooks)                        |\n| tags              | [#tags](#-tagging)                              |\n| metadata          | [front matter](#front-matter)                   |\n| cross-references  |  <a href=\"#-linking\">[[wiki-style links]]</a>   |\n| fast note-taking  | [`nb add`](#adding)/[`nb <url>`](#-bookmarks)   |\n\nFor more information about Zettelkasten, see\n[Wikipedia](https://en.wikipedia.org/wiki/Zettelkasten).\n\n### 📂 Folders\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#add\"><code>nb add</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>,\n    <a href=\"#folders\"><code>nb folders</code></a>,\n    <a href=\"#list\"><code>nb list</code></a>,\n    <a href=\"#ls\"><code>nb ls</code></a>\n  </sup>\n</p>\n\nItems can be organized in folders.\nTo add a note to a folder,\ncall [`nb add`](#add) with the folder's relative path within the notebook\nfollowed by a slash:\n\n```bash\n# add a new note in the folder named \"example\"\nnb add example/\n\n# add a new note in the folder named \"demo\" in \"example\"\nnb add example/demo/\n```\n\n`nb` automatically creates any intermediate folders as needed.\n\nFolders can be created directly using [`nb add folder`](#add),\n[`nb folders add`](#folders), and [`nb add --type folder`](#add):\n\n```bash\n# create a new folder named \"sample\"\nnb add folder sample\n\n# create a new folder named \"sample\", alternative\nnb folders add sample\n\n# create a new folder named \"demo\"\nnb add demo --type folder\n\n# create a folder named \"example\" containing a folder named \"test\"\nnb add example/test --type folder\n```\n\nTo list the items in a folder, pass the folder relative path to\n`nb`,\n[`nb ls`](#ls),\n[`nb list`](#list),\nor [`nb browse`](#browse)\nwith a trailing slash:\n\n```bash\n❯ nb example/demo/\nhome\n----\n[example/demo/3] Title Three\n[example/demo/2] Title Two\n[example/demo/1] Title One\n```\n\nFolders can also be identified by the folder's id\nand listed with a trailing slash:\n\n```bash\n❯ nb list\n[1] 📂 example\n\n❯ nb list 1/\n[example/2] 📂 demo\n[example/1] document.md\n\n❯ nb list 1/2/\n[example/demo/3] Title Three\n[example/demo/2] Title Two\n[example/demo/1] Title One\n```\n\nItems in folders can be idenitified with\nthe folder's relative path using either folder ids or names,\nfollowed by the id, title, or filename of the item:\n\n```bash\n# list item 1 (\"Title One\", one.md) in the example/demo/ folder\nnb list example/demo/1\n\n# edit item 1 (\"Title One\", one.md) in the example/demo/ folder\nnb edit example/2/one.md\n\n# show item 1 (\"Title One\", one.md) in the example/demo/ folder\nnb show 1/2/Title\\ One\n\n# delete item 1 (\"Title One\", one.md) in the example/demo/ folder\nnb delete 1/demo/1\n```\n\nFor folders and items in other notebooks,\ncombine the relative path with the notebook name, separated by a colon:\n\n```bash\n# list the contents of the \"sample\" folder in the \"example\" notebook\nnb example:sample/\n\n# add an item to the \"sample/demo\" folder in the \"example\" notebook\nnb add example:sample/demo/\n\n# edit item 3 in the \"sample/demo\" folder in the \"example\" notebook\nnb edit example:sample/demo/3\n```\n\n[Browse](#-browsing) starting at any folder with [`nb browse`](#browse):\n\n```bash\n❯ nb browse example:sample/demo/\n❯nb · example : sample / demo /\n\nsearch: [                    ]\n\n[example:sample/demo/5] Title Five\n[example:sample/demo/4] Title Four\n[example:sample/demo/3] Title Three\n[example:sample/demo/2] Title Two\n[example:sample/demo/1] Title One\n```\n\nFor more information about identifying folders, see [Selectors](#-selectors).\n\n### 📌 Pinning\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#pin\"><code>nb pin</code></a>,\n    <a href=\"#unpin\"><code>nb unpin</code></a>,\n    <a href=\"#ls\"><code>nb ls</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>\n  </sup>\n</p>\n\nItems can be pinned so they appear first in\n`nb`, [`nb ls`](#ls), and [`nb browse`](#browse):\n\n```bash\n❯ nb\nhome\n----\n[2] 📌 Title Two\n[5] Title Five\n[4] Title Four\n[3] Title Three\n[1] Title One\n```\n\nUse [`nb pin`](#pin) and [`nb unpin`](#unpin) to pin and unpin items:\n\n```bash\n❯ nb\nhome\n----\n[5] Title Five\n[4] Title Four\n[3] Title Three\n[2] Title Two\n[1] Title One\n\n❯ nb pin 4\nPinned: [4] four.md \"Title Four\"\n\n❯ nb pin 1\nPinned: [1] one.md \"Title One\"\n\n❯ nb\nhome\n----\n[4] 📌 Title Four\n[1] 📌 Title One\n[5] Title Five\n[3] Title Three\n[2] Title Two\n\n❯ nb unpin 4\nUnpinned: [4] four.md \"Title Four\"\n\n❯ nb\nhome\n----\n[1] 📌 Title One\n[5] Title Five\n[4] Title Four\n[3] Title Three\n[2] Title Two\n```\n\n`nb` can also be configured to pin notes that contain\na specified [#hashtag](#-tagging) or other search pattern.\nTo enable tag / search-based pinning,\nset the [`$NB_PINNED_PATTERN`](#nb_pinned_pattern) environment variable to\nthe desired [#tag](#-tagging) or pattern.\n\nFor example, to treat all items tagged with `#pinned` as pinned items,\nadd the following line to your `~/.nbrc` file,\nwhich can be opened in your editor with [`nb settings edit`](#settings):\n\n```bash\nexport NB_PINNED_PATTERN=\"#pinned\"\n```\n\nAll [indicator icons](#indicators) in `nb` can be customized, so\nto use a different character as the pindicator,\nsimply add a line like the following to your `~/.nbrc` file:\n\n```bash\nexport NB_INDICATOR_PINNED=\"💖\"\n```\n\n```bash\n❯ nb\nhome\n----\n[1] 💖 Title One\n[5] Title Five\n[4] Title Four\n[3] Title Three\n[2] Title Two\n```\n\nTo bump an item to the top of the list without pinning, use the\n[`bump` plugin](#bump).\n\n### 🔍 Search\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#search\"><code>nb search</code></a>\n  </sup>\n</p>\n\nUse [`nb search`](#search) (shortcut: [`nb q`](#search)) to\nperform full text searches, with support for regular expressions,\n[#tags](#-tagging), and `AND`, `OR`, and `NOT` queries:\n\n```bash\n# search current notebook for \"example query\"\nnb search \"example query\"\n\n# search the notebook \"example\" for \"example query\"\nnb search example: \"example query\"\n\n# search the folder named \"demo\" for \"example query\"\nnb search demo/ \"example query\"\n\n# search all unarchived notebooks for \"example query\" and list matching items\nnb search \"example query\" --all --list\n\n# search for \"example\" AND \"demo\" with multiple arguments\nnb search \"example\" \"demo\"\n\n# search for \"example\" AND \"demo\" with option\nnb search \"example\" --and \"demo\"\n\n# search for \"example\" OR \"sample\" with argument\nnb search \"example|sample\"\n\n# search for \"example\" OR \"sample\" with option\nnb search \"example\" --or \"sample\"\n\n# search for items matching both \"Example\" AND \"Sample\", and NOT \"Demo\"\nnb search \"Example\" --and \"Sample\" --not \"Demo\"\n\n# search items containing the hashtag \"#example\"\nnb search \"#example\"\n\n# search with a regular expression\nnb search \"\\d\\d\\d-\\d\\d\\d\\d\"\n\n# search bookmarks for \"example\"\nnb search \"example\" --type bookmark\n\n# search bookmarks for \"example\", alternative\nnb bk q \"example\"\n\n# search the current notebook for \"example query\"\nnb q \"example query\"\n\n# search the notebook named \"example\" for \"example query\"\nnb q example: \"example query\"\n\n# search all unarchived notebooks for \"example query\" and list matching items\nnb q -la \"example query\"\n```\n\n[`nb search`](#search) prints the id number, filename,\nand title of each matched file,\nfollowed by each search query match and its line number,\nwith color highlighting:\n\n```bash\n❯ nb search \"example\"\n[314]  🔖 example.bookmark.md \"Example Bookmark (example.com)\"\n--------------------------------------------------------------\n1:# Example Bookmark (example.com)\n\n3:<https://example.com>\n\n[2718] example.md \"Example Note\"\n--------------------------------\n1:# Example Note\n```\n\nTo just print the note information line without the content matches,\nuse the [`-l`](#search) or [`--list`](#search) option:\n\n```bash\n❯ nb search \"example\" --list\n[314]  🔖 example.bookmark.md \"Example Bookmark (example.com)\"\n[2718] example.md \"Example Note\"\n```\n\nMultiple query arguments are treated as `AND` queries,\nreturning items that match all queries.\n`AND` queries can also be specified with the\n[`--and <query>`](#search) option:\n\n```bash\n# search for items tagged with \"#example\" AND \"#demo\" AND \"#sample\" using\n# multiple arguments\nnb q \"#example\" \"#demo\" \"#sample\"\n\n# options\nnb q \"#example\" --and \"#demo\" --and \"#sample\"\n```\n\n`nb` matches `AND` query terms regardless of where they appear in a document,\nan improvement over most approaches for performing `AND` queries\nwith command line tools,\nwhich typically only match terms appearing on the same line.\n\n`OR` queries return items that match at least one of the queries\nand can be created by separating terms in a single argument\nwith a pipe character `|` or with the [`--or <query>`](#search) option:\n\n```bash\n# search for \"example\" OR \"sample\" with argument\nnb q \"example|sample\"\n\n# search for \"example\" OR \"sample\" with option\nnb q \"example\" --or \"sample\"\n```\n\n[`--or`](#search) and [`--and`](#search) queries can be used together:\n\n```bash\nnb q \"example\" --or \"sample\" --and \"demo\"\n# equivalent: example|sample AND demo|sample\n```\n\n`NOT` queries exclude items that match the specified query and are\nspecified with [`--not <query>`](#search), which can be used with\n`--and` and `--or`:\n\n```bash\n# search for items that match \"Example\", excluding items that also match \"Sample\"\nnb search \"Example\" --not \"Sample\"\n\n# search for items matching both \"Example\" AND \"Sample\", and NOT \"Demo\"\nnb search \"Example\" --and \"Sample\" --not \"Demo\"\n```\n\nSearch for [#tags](#-tagging) with flexible\n[`nb search --tags [<tags>]`](#search) / [`nb q -t [<tags>]`](#search) options:\n\n```bash\n# search for tags in the current notebook\nnb search --tags\n\n# search for tags in the \"sample\" notebook, shortcut alias\nnb sample:q --tags\n\n# search for items tagged with \"#tag1\"\nnb search --tag tag1\n\n# search for items tagged with \"#tag1\", shortcut alias and short option\nnb q -t tag1\n\n# search for items tagged with \"#tag1\", shortcut alias and argument\nnb q \\#tag1\n\n# search for items tagged with \"#tag1\", shortcut alias and argument, alternative\nnb q \"#tag1\"\n\n# search for items in the \"sample\" notebook tagged with \"#tag1\" AND \"#tag2\"\nnb sample:search --tag tag1 --tag tag2\n\n# search for items in the \"sample\" notebook tagged with \"#tag1\" AND \"#tag2\"\nnb sample:q --tags tag1,tag2\n\n# search for items in the current notebook tagged with \"#tag1\" AND \"#tag2\"\nnb q --tag tag1 --tag tag2\n\n# search for items in the current notebook tagged with \"#tag1\" OR \"#tag2\"\nnb q -t tag1 --or -t tag2\n\n# search for items tagged with \"#tag1\" AND \"#tag2\" AND \"#tag3\"\nnb q -t tag1 --tags tag2,tag3\n\n# search for items tagged with \"#tag1\" OR \"#tag2\" OR \"#tag3\"\nnb q -t tag1 --or --tags tag2,tag3\n\n# search for items tagged with \"#tag1\" OR \"#tag2\" OR \"#tag3\"\nnb q \\#tag1 --or -t tag2 --or \"#tag3\"\n```\n\n[`nb search`](#search) leverages Git's powerful built-in\n[`git grep`](https://git-scm.com/docs/git-grep).\n`nb` also supports performing searches with alternative search tools\nusing the [`--utility <name>`](#search) option.\n\nSupported alternative search tools:\n- [`rga`](https://github.com/phiresky/ripgrep-all)\n- [`rg`](https://github.com/BurntSushi/ripgrep)\n- [`ag`](https://github.com/ggreer/the_silver_searcher)\n- [`ack`](https://beyondgrep.com/)\n- [`grep`](https://en.wikipedia.org/wiki/Grep)\n\n##### Shortcut Alias: `nb q`\n\n[`nb search`](#search) can also be used with the alias\n[`nb q`](#search) (for \"query\"):\n\n```bash\n# search for \"example\" and print matching excerpts\nnb q \"example\"\n\n# search for \"example\" and list each matching file\nnb q -l \"example\"\n\n# search for \"example\" in all unarchived notebooks\nnb q -a \"example\"\n\n# search for \"example\" in the notbook named \"sample\"\nnb sample:q \"example\"\n```\n\nFor more information about search, see [`nb help search`](#search).\n\n##### Searching with `browse`\n\nSearches can be performed within terminal and GUI web browsers using\n[`nb browse --query`](#browse) / [`nb b -q`](#browse):\n\n```bash\n❯ nb browse --query \"#example\"\n❯nb · home : +\n\nsearch: [#example             ]\n\n[home:7]   Title Seven\n[home:32]  Title Thirty-Two\n[home:56]  Title Fifty-Six\n[home:135] Title One Hundred and Thirty-Five\n```\n\nFor more information, see [Browsing](#-browsing).\n\n### ↔ Moving & Renaming\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#move\"><code>nb move</code></a>,\n    <a href=\"#copy\"><code>nb copy</code></a>\n  </sup>\n</p>\n\nUse [`nb move`](#move) (alias: [`nb rename`](#move), shortcut: [`nb mv`](#move))\nto move and rename items:\n\n```bash\n# move \"example.md\" to \"sample.org\"\nnb move example.md sample.org\n\n# rename note 2 (\"example.md\") to \"New Name.md\"\nnb rename 2 \"New Name\"\n```\n\nItems can be moved between notebooks and folders:\n\n```bash\n# move note 12 from the \"example\" notebook into \"Sample Folder\" in the \"demo\" notebook\nnb move example:12 demo:Sample\\ Folder/\n```\n\nWhen the file extension is omitted, the existing extension is used:\n\n```bash\n# rename \"example.bookmark.md\" to \"New Name.bookmark.md\"\nnb move example.bookmark.md \"New Name\"\n```\n\nWhen only a file extension is specified, only the extension is updated:\n\n```bash\n# change the file extension of note 5 (\"demo file.md\") to .org (\"demo file.org\")\nnb rename 5 .org\n```\n\nUse [`nb rename --to-bookmark`](#move) to change the extension of a note\nto `.bookmark.md`,\n[`nb rename --to-todo`](#move) to change the extension to `.todo.md`,\nand [`nb rename --to-note`](#move) to change the extension\nof a bookmark or todo to either `.md` or the extension set with\n[`nb set default_extension`](#default_extension):\n\n```bash\n# rename note 3 (\"example.md\") to a bookmark named \"example.bookmark.md\"\nnb rename 3 --to-bookmark\n\n# rename bookmark 6 (\"sample.bookmark.md\") to a note named \"sample.md\"\nnb rename 6 --to-note\n\n# rename note 7 (\"demo.md\") to a todo named \"demo.todo.md\"\nnb rename 7 --to-todo\n```\n\nUse [`nb rename --to-title`](#move) to set the filename to the note title,\nlowercased with spaces and disallowed filename characters replaced\nwith underscores:\n\n```bash\n❯ nb rename 12 --to-title\nMoving:   [12] 20210101010000.md \"Example Title\"\nTo:       example_title.md\nProceed?  [y/N]\n```\n\nCopy an item to a destination notebook, folder path, or filename\nwith [`nb copy`](#copy) (alias: [`nb duplicate`](#copy)):\n\n```bash\n# copy item 456 to \"sample.md\"\nnb copy 456 sample.md\n\n# copy item 678 to the \"example\" notebook\nnb copy 678 example:\n\n# copy item 789 to the \"demo\" folder\nnb copy 789 demo/\n\n# copy item 543 to test.md in the \"sample\" folder in the \"example\" notebook\nnb copy 543 example:sample/test.md\n```\n\nOmit a destination to copy the item in place:\n\n```bash\n# copy item 123 (\"example.md\") to example-1.md\n❯ nb copy 123\nAdded: [124] example-1.md\n\n# copy item 123 (\"example.md\") to example-2.md, alias\n❯ nb duplicate 123\nAdded: [125] example-2.md\n```\n\nFor more information about moving, renaming, and copying items, see\n[`nb help move`](#move) and [`nb help copy`](#copy).\n\n### 🗒 Revision History\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#history\"><code>nb history</code></a>,\n    <a href=\"#notebooks\"><code>nb notebooks</code></a>\n  </sup>\n</p>\n\nWhenever a note is added, modified, or deleted,\n`nb` automatically commits the change to git transparently in the background.\n\nUse [`nb history`](#history) to view the revision history of\nany notebook, folder, or item:\n\n```bash\n# show history for current notebook\nnb history\n\n# show history for note number 4\nnb history 4\n\n# show history for note with filename example.md\nnb history example.md\n\n# show history for note titled \"Example\"\nnb history Example\n\n# show history for the notebook named \"example\"\nnb example:history\n\n# show history for the notebook named \"example\", alternative\nnb history example:\n\n# show the history for note 12 in the notebook named \"example\"\nnb history example:12\n```\n\n[`nb history`](#history) uses `git log` by default and prefers\n[`tig`](https://github.com/jonas/tig) when available.\n\n#### Authorship\n\nBy default, git commits are attributed to the email and name configured in your\n[global `git` configuration](https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration).\n\nChange the email and name used for a notebook with\n[`nb notebooks author`](#notebooks):\n\n```bash\n# edit the commit author email and name for the current notebook\n❯ nb notebooks author\nCurrent configuration for: home\n--------------------------\nemail (global): example@example.test\nname  (global): Example Name\n\nUpdate?  [y/N]\n\n# edit the commit author email and name for the notebook named \"example\"\n❯ nb notebooks author example\nCurrent configuration for: example\n--------------------------\nemail (global): example@example.test\nname  (global): Example Name\n\nUpdate?  [y/N]\n```\n\nThe updated author email and name applies to subsequent commits.\n\nTo use a different email and name from the beginning of a notebook's\nhistory, create the new notebook using\n[`nb notebooks add --author`](#notebooks) or\n[`nb notebooks init --author`](#notebooks).\n\n### 📚 Notebooks\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#notebooks\"><code>nb&nbsp;notebooks</code></a>,\n    <a href=\"#archive\"><code>nb&nbsp;archive</code></a>,\n    <a href=\"#unarchive\"><code>nb&nbsp;unarchive</code></a>,\n    <a href=\"#use\"><code>nb&nbsp;use</code></a>\n  </sup>\n</p>\n\nYou can create additional notebooks, each of which has its own version history.\n\nCreate a new notebook with [`nb notebooks add`](#notebooks):\n\n```bash\n# add a notebook named example\nnb notebooks add example\n```\n\n`nb` and [`nb ls`](#ls) list the available notebooks above the list of notes:\n\n```bash\n❯ nb\nexample · home\n--------------\n[3] Title Three\n[2] Title Two\n[1] Title One\n```\n\nCommands in `nb` run within the current notebook, and identifiers\nsuch as ids, filenames, and titles refer to notes within the current notebook.\n`nb edit 3`, for example, tells `nb` to\n[`edit`](#edit) note with id `3` within the current notebook.\n\nTo switch to a different notebook, use [`nb use`](#use):\n\n```bash\n# switch to the notebook named \"example\"\nnb use example\n```\n\nIf you are in one notebook and you want\nto perform a command in a different notebook without switching to it,\nadd the notebook name with a colon before the command name:\n\n```bash\n# add a new note in the notebook \"example\"\nnb example:add\n\n# add a new note in the notebook \"example\", shortcut alias\nnb example:a\n\n# show note 5 in the notebook \"example\"\nnb example:show 5\n\n# show note 5 in the notebook \"example\", shortcut alias\nnb example:s 5\n\n# edit note 12 in the notebook \"example\"\nnb example:edit 12\n\n# edit note 12 in the notebook \"example\", shortcut alias\nnb example:e 12\n\n# search for \"example query\" in the notebook \"example\"\nnb example:search \"example query\"\n\n# search for \"example query\" in the notebook \"example\", shortcut alias\nnb example:q \"example query\"\n\n# show the revision history of the notebook \"example\"\nnb example:history\n```\n\nThe notebook name with colon can also be used as a modifier to\nthe id, filename, or title:\n\n```bash\n# edit note 12 in the notebook \"example\"\nnb edit example:12\n\n# edit note 12 in the notebook \"example\", shortcut alias\nnb e example:12\n\n# edit note 12 in the notebook \"example\", alternative\nnb example:12 edit\n\n# edit note 12 in the notebook \"example\", alternative, shortcut alias\nnb example:12 e\n\n# show note titled \"misc\" in the notebook \"example\"\nnb show example:misc\n\n# show note titled \"misc\" in the notebook \"example\", shortcut alias\nnb s example:misc\n\n# delete note with filename \"todos.md\" in the notebook \"example\", alternative\nnb example:todos.md delete\n\n# delete note with filename \"todos.md\" in the notebook \"example\", alternative,\n# shortcut alias\nnb example:todos.md d\n```\n\nWhen a notebook name with colon is called without a subcommand,\n`nb` runs [`nb ls`](#ls) in the specified notebook:\n\n```bash\n❯ nb example:\nexample · home\n--------------\n[example:3] Title Three\n[example:2] Title Two\n[example:1] Title One\n```\n\nA bookmark can be created in another notebook by specifying\nthe notebook name with colon, then a space, then the URL and bookmark options:\n\n```bash\n# create a new bookmark in a notebook named \"sample\"\n❯ nb sample: https://example.com --tags tag1,tag2\n```\n\nNotes can also be moved between notebooks:\n\n```bash\n# move note 3 from the current notebook to \"example\"\nnb move 3 example:\n\n# move note 5 in the notebook \"example\" to the notebook \"sample\"\nnb move example:5 sample:\n```\n\n##### Example Workflow\n\nThe flexibility of `nb`'s argument handling makes it easy to\nbuild commands step by step as items are listed, filtered, viewed, and edited,\nparticularly in combination with shell history:\n\n```bash\n# list items in the \"example\" notebook\n❯ nb example:\nexample · home\n--------------\n[example:3] Title Three\n[example:2] Title Two\n[example:1] Title One\n\n# filter list\n❯ nb example: three\n[example:3] Title Three\n\n# view item\n❯ nb example:3 show\n# opens item in `less`\n\n# edit item\n❯ nb example:3 edit\n# opens item in $EDITOR\n```\n\n##### Notebooks and Tab Completion\n\n[`nb` tab completion](#tab-completion) is optimized for\nfrequently running commands in various notebooks using the colon syntax,\nso installing the completion scripts is recommended\nand makes working with notebooks easy, fluid, and fun.\n\nFor example, listing the contents of a notebook is usually as simple as typing\nthe first two or three characters of the name,\nthen pressing the `<tab>` key,\nthen pressing `<enter>` / `<return>`:\n\n```bash\n❯ nb exa<tab>\n# completes to \"example:\"\n❯ nb example:\nexample · home\n--------------\n[example:3] Title Three\n[example:2] Title Two\n[example:1] Title One\n```\n\nScoped notebook commands are also available in tab completion:\n\n```bash\n❯ nb exa<tab>\n# completes to \"example:\"\n❯ nb example:hi<tab>\n# completes to \"example:history\"\n```\n\n#### Notebooks, Tags, and Taxonomy\n\n`nb` is optimized to work well with a collection of notebooks, so\nnotebooks are a good way to organize notes and bookmarks by top-level topic.\n\n[#tags](#-tagging) are searchable across notebooks and can be created ad hoc,\nmaking notebooks and tags distinct and complementary organizational systems\nin `nb`.\n\nSearch for a tag in or across notebooks with\n[`nb search`](#search) / [`nb q`](#search):\n\n```bash\n# search for #tag in the current notebook\nnb q --tag tag\n\n# search for #tag in all notebooks, short options\nnb q -t tag -a\n\n# search for #tag in the \"example\" notebook, argument\nnb q example: \"#tag\"\n```\n\n#### Global and Local Notebooks\n\n##### Global Notebooks\n\nBy default, all `nb` notebooks are global, making them\nalways accessible in the terminal regardless of the current working directory.\nGlobal notebooks are stored in the directory configured in\n[`nb set nb_dir`](#nb_dir),\nwhich is `~/.nb` by default.\n\n##### Local Notebooks\n\n`nb` also supports creating and working with local notebooks.\nLocal notebooks are notebooks that are\nanywhere on the system outside of [`$NB_DIR`](#nb_dir-1).\nAny folder can be an `nb` local notebook, which is just a normal folder\nthat has been initialized as a git repository and contains an `nb` .index file.\nInitializing a folder as an `nb` local notebook is a very easy way to\nadd structured git versioning to any folder of documents and other files.\n\nWhen `nb` runs within a local notebook,\nthe local notebook is set as the current notebook:\n\n```bash\n❯ nb\nlocal · example · home\n----------------------\n[3] Title Three\n[2] Title Two\n[1] Title One\n```\n\nA local notebook is always referred to by the name `local`\nand otherwise behaves just like a global notebook\nwhenever a command is run from within it:\n\n```bash\n# add a new note in the local notebook\nnb add\n\n# edit note 15 in the local notebook\nnb edit 15\n\n# move note titled \"Todos\" from the home notebook to the local notebook\nnb move home:Todos local:\n\n# move note 1 from the local notebook to the home notebook\nnb move 1 home:\n\n# search the local notebook for <query string>\nnb search \"query string\"\n\n# search the local notebook and all unarchived global notebooks for <query string>\nnb search \"query string\" --all\n```\n\nLocal notebooks can be created with [`nb notebooks init`](#notebooks):\n\n```bash\n# initialize the current directory as a notebook\nnb notebooks init\n\n# create a new notebook at ~/example\nnb notebooks init ~/example\n\n# clone an existing notebook to ~/example\nnb notebooks init ~/example https://github.com/example/example.git\n```\n\nLocal notebooks can also be created by exporting a global notebook:\n\n```bash\n# export global notebook named \"example\" to \"../path/to/destination\"\nnb notebooks export example ../path/to/destination\n\n# alternative\nnb export example ../path/to/destination\n```\n\nLocal notebooks can also be imported, making them global:\n\n```bash\n# import notebook or folder at \"../path/to/notebook\"\nnb notebooks import ../path/to/notebook\n\n# alternative\nnb import ../path/to/notebook\n```\n\n[`nb notebooks init`](#notebooks) and [`nb notebooks import`](#notebooks)\ncan be used together to easily turn any directory of existing files\ninto a global `nb` notebook:\n\n```bash\n❯ ls\nexample-directory\n\n❯ nb notebooks init example-directory\nInitialized local notebook: /home/username/example-directory\n\n❯ nb notebooks import example-directory\nImported notebook: example-directory\n\n❯ nb notebooks\nexample-directory\nhome\n```\n\n#### Archiving Notebooks\n\n<p>\n  <sup>\n    <a href=\"#-notebooks\">↑</a> ·\n    <a href=\"#archive\"><code>nb&nbsp;archive</code></a>,\n    <a href=\"#status\"><code>nb&nbsp;status</code></a>,\n    <a href=\"#unarchive\"><code>nb&nbsp;unarchive</code></a>\n  </sup>\n</p>\n\nNotebooks can be archived using\n[`nb archive`](#archive) (shortcut: [`nb ar`](#archive)):\n\n```bash\n# archive the current notebook\nnb archive\n\n# archive the notebook named \"example\"\nnb archive example\n\n# archive the current notebook, shortcut alias\nnb ar\n\n# archive the notebook named \"example\", shortcut alias\nnb ar example\n```\n\nWhen a notebook is archived it is not included in\n[`nb`](#ls) / [`nb ls`](#ls) output,\n[`nb search --all`](#search),\nor tab completion,\nnor synced automatically with [`nb sync --all`](#sync).\n\n```bash\n❯ nb\nexample1 · example2 · example3 · [1 archived]\n---------------------------------------------\n[3] Title Three\n[2] Title Two\n[1] Title One\n```\n\nArchived notebooks can still be used individually\nusing normal notebook commands:\n\n```bash\n# switch the current notebook to the archived notebook \"example\"\nnb use example\n\n# run the `list` subcommand in the archived notebook \"example\"\nnb example:list\n```\n\nCheck a notebook's archival status with\n[`nb status`](#status) (shortcut: [`nb st`](#status)) and\n[`nb notebooks status`](#notebooks):\n\n```bash\n# print status information, including archival status, for the current notebook\nnb status\n\n# print status information, including archival status, for the notebook named \"example\"\nnb status example\n\n# print status information, including archival status, for the current notebook,\n# shortcut alias\nnb st\n\n# print status information, including archival status, for the notebook named \"example\",\n# shortcut alias\nnb st example\n\n# print the archival status of the current notebook\nnb notebooks status\n\n# print the archival status of the notebook named \"example\"\nnb notebooks status example\n```\n\nUse [`nb unarchive`](#unarchive) (shortcut: [`nb unar`](#unarchive))\nto unarchive a notebook:\n\n```bash\n# unarchive the current notebook\nnb unarchive\n\n# unarchive the notebook named \"example\"\nnb unarchive example\n```\n\nFor more information about working with notebooks, see\n[`nb help notebooks`](#notebooks),\n[`nb help archive`](#archive),\nand [`nb help unarchive`](#unarchive).\n\nFor technical details about notebooks, see\n[`nb` Notebook Specification](#nb-notebook-specification).\n\n### 🔄 Git Sync\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#remote\"><code>nb remote</code></a>,\n    <a href=\"#sync\"><code>nb sync</code></a>\n  </sup>\n</p>\n\nEach notebook can be synced with a remote git repository by\nsetting the remote URL using [`nb remote`](#remote):\n\n```bash\n# set the current notebook's remote to a private GitHub repository\nnb remote set https://github.com/example/example\n\n# set the remote for the notebook named \"example\"\nnb example:remote set https://github.com/example/example\n```\n\nAny notebook with a remote URL will sync automatically\nevery time a command is run in that notebook.\n\nWhen you use `nb` on multiple systems, you can\nset a notebook on each system to the same remote\nand `nb` will keep everything in sync in the background\nevery time there's a change in that notebook.\n\nSince each notebook has its own git history,\nyou can have some notebooks syncing with remotes\nwhile other notebooks are only available locally on that system.\n\nMany services provide free private git repositories, so\ngit syncing with `nb` is easy, free, and vendor-independent.\nYou can also sync your notes using\nDropbox, Drive, Box, Syncthing, or another syncing tool\nby changing your `nb` directory with\n[`nb set nb_dir <path>`](#nb_dir),\nand git syncing will still work simultaneously.\n\nClone an existing notebook by passing the URL to\n[`nb notebooks add`](#notebooks):\n\n```bash\n# create a new notebook named \"example\" cloned from a private GitLab repository\nnb notebooks add example https://gitlab.com/example/example.git\n```\n\nTurn off syncing for a notebook by removing the remote:\n\n```bash\n# remove the remote from the current notebook\nnb remote remove\n\n# remove the remote from the notebook named \"example\"\nnb example:remote remove\n```\n\nAutomatic git syncing can be turned on or off with\n[`nb set auto_sync`](#auto_sync).\n\nTo sync manually, use [`nb sync`](#sync):\n\n```bash\n# manually sync the current notebook\nnb sync\n\n# manually sync the notebook named \"example\"\nnb example:sync\n```\n\nTo bypass `nb` syncing and run `git` commands directly within a\nnotebook, use [`nb git`](#git):\n\n```bash\n# run `git fetch` in the current notebook\nnb git fetch origin\n\n# run `git status` in the notebook named \"example\"\nnb example:git status\n```\n\n#### Syncing Multiple Notebooks with One Remote\n\nMultiple notebooks can be synced to one remote using orphan branches.\nAn\n[orphan branch](https://git-scm.com/docs/git-checkout#Documentation/git-checkout.txt---orphanltnewbranchgt)\nis a branch with a history that is independent\nfrom the repository's `main`, `master`,\nor equivalent primary branch history.\nTo sync a notebook with a new orphan branch,\nadd the remote using [`nb remote set`](#remote)\nand select the option to create a new orphan branch.\nThe name of orphan branch is derived from notebook name\nand can alternatively be specified as an argument to\n[`nb remote set`](#remote):\n\n```bash\n# set the remote for the current notebook to a remote URL and branch\nnb remote set https://github.com/xwmx/example demo-branch\n```\n\nTo create a notebook using an existing orphan branch on a remote,\npass the branch name to\n[`nb init`](#init),\n[`nb notebooks add`](#notebooks), or\n[`nb notebooks init`](#notebooks) after the URL:\n\n```bash\n# initialize new \"home\" notebook with the branch \"sample-branch\" on the remote\nnb init https://github.com/xwmx/example sample-branch\n\n# add a new \"example\" notebook from the branch \"example-branch\" on the remote\nnb notebooks add example https://github.com/xwmx/example example-branch\n```\n\nTo list all branches on a remote, use [`nb remote branches`](#remote):\n\n```bash\n# list all branches on the current remote\nnb remote branches\n\n# list all branches on a remote repository identified by a URL\nnb remote branches \"https://github.com/xwmx/example\"\n```\n\nFor information about assigning remotes, see [`nb help remote`](#remote).\n\n#### Private Repositories and Git Credentials\n\nSyncing with private repositories requires\nconfiguring git to not prompt for credentials.\nFor repositories cloned over HTTPS,\n[credentials can be cached with git\n](https://docs.github.com/en/free-pro-team@latest/github/using-git/caching-your-github-credentials-in-git).\nFor repositories cloned over SSH,\n[keys can be added to the ssh-agent\n](https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent).\n\nUse [`nb sync`](#sync) within a notebook to determine\nwhether your configuration is working.\nIf `nb sync` displays a password prompt,\nthen follow the instructions above to configure your credentials.\nThe password prompt can be used to authenticate, but\n`nb` does not cache or otherwise handle git credentials in any way,\nso there will likely be multiple password prompts during each sync\nif credentials are not configured.\n\n#### Sync Conflict Resolution\n\n`nb` handles git operations automatically, so\nyou shouldn't ever need to use the `git` command line tool directly.\n`nb` merges changes when syncing\nand handles conflicts using a couple different strategies.\n\nWhen [`nb sync`](#sync) encounters a conflict in a text file\nand can't cleanly merge overlapping local and remote changes,\n`nb` saves both versions within the file separated by git conflict markers\nand prints a message indicating which files contain conflicting text.\nUse [`nb edit`](#edit) to remove the conflict markers\nand delete any unwanted text.\n\nFor example, in the following file, the second list item was changed\non two systems, and git has no way to determine which one we want to keep:\n\n```\n# Example Title\n\n- List Item apple\n<<<<<<< HEAD\n- List Item apricot\n=======\n- List Item pluot\n>>>>>>> 719od01... [nb] Commit\n- List Item plum\n```\n\nThe local change is between the lines starting with\n`<<<<<<<` and `=======`,\nwhile the remote change is between the\n`=======` and `>>>>>>>`\nlines.\n\nTo resolve this conflict by keeping both items, simply\nedit the file with [`nb edit`](#edit) and\nremove the lines starting with `<<<<<<<`, `=======`, and `>>>>>>>`:\n\n```\n# Example Title\n\n- List Item apple\n- List Item apricot\n- List Item pluot\n- List Item plum\n```\n\nWhen `nb` encounters a conflict in a binary file,\nsuch as an encrypted note,\nboth versions of the file are saved in the notebook as individual files,\nwith `--conflicted-copy` appended to the filename\nof the version from the remote.\nTo resolve a conflicted copy of a binary file,\ncompare both versions and merge them manually,\nthen delete the `--conflicted-copy`.\n\nIf you do encounter a conflict that `nb` says it can't merge at all,\n[`nb git`](#git) and [`nb run`](#run) can be used to\nperform git and shell operations within the notebook\nto resolve the conflict manually.\nPlease also\n[open an issue](https://github.com/xwmx/nb/issues/new)\nwith any relevant details\nthat could inform a strategy for handling any such cases automatically.\n\n### ↕️ Import / Export\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#import\"><code>nb import</code></a>,\n    <a href=\"#export\"><code>nb export</code></a>,\n    <a href=\"#browse\"><code>nb browse</code></a>\n  </sup>\n</p>\n\nFiles of any type can be imported into a notebook using\n[`nb import`](#import) (shortcut: [`nb i`](#import)).\n[`nb edit`](#edit) and [`nb open`](#open) open files in\nyour system's default application for that file type.\n\n```bash\n# import an image file\nnb import ~/Pictures/example.png\n\n# open image in your default image viewer\nnb open example.png\n\n# import a .docx file\nnb import ~/Documents/example.docx\n\n# open .docx file in Word or your system's .docx viewer\nnb open example.docx\n```\n\nMultiple filenames and globbing are supported:\n\n```bash\n# import all files and directories in the current directory\nnb import ./*\n\n# import all markdown files in the current directory\nnb import ./*.md\n\n# import example.md and sample.md in the current directory\nnb import example.md sample.md\n```\n\n[`nb import`](#import) can also download and import files directly from the web:\n\n```bash\n# import a PDF file from the web\nnb import https://example.com/example.pdf\n# Imported \"https://example.com/example.pdf\" to \"example.pdf\"\n\n# open example.pdf in your system's PDF viewer\nnb open example.pdf\n```\n\nSome imported file types have [indicators](#indicators) to make them\neasier to identify in lists:\n\n```bash\n❯ nb\nhome\n----\n[6] 📖 example-ebook.epub\n[5] 🌄 example-picture.png\n[4] 📄 example-document.docx\n[3] 📹 example-video.mp4\n[2] 🔉 example-audio.mp3\n[1] 📂 Example Folder\n```\n\nNotes, bookmarks, and other files can be exported using [`nb export`](#export).\nIf [Pandoc](https://pandoc.org/) is installed,\nnotes can be automatically converted to any of the\n[formats supported by Pandoc](https://pandoc.org/MANUAL.html#option--to).\nBy default, the output format is determined by the file extension:\n\n```bash\n# export a Markdown note to a .docx Microsoft Office Word document\nnb export example.md /path/to/example.docx\n\n# export a note titled \"Movies\" to an HTML web page.\nnb export Movies /path/to/example.html\n```\n\nFor more control over the `pandoc` options, use the\n[`nb export pandoc`](#export) subcommand:\n\n```bash\n# export note 42 as an epub with pandoc options\nnb export pandoc 42 --from markdown_strict --to epub -o path/to/example.epub\n```\n\n[`nb export notebook`](#export) and [`nb import notebook`](#import) can be\nused to export and import notebooks:\n\n```bash\n# export global notebook named \"example\" to \"../path/to/destination\"\nnb export notebook example ../path/to/destination\n\n# import notebook or folder at \"../path/to/notebook\"\nnb import notebook ../path/to/notebook\n```\n\n[`nb export notebook`](#export) and [`nb import notebook`](#import)\nbehave like aliases for\n[`nb notebooks export`](#notebooks) and [`nb notebooks import`](#notebooks),\nand the subcommands can be used interchangeably.\n\nFor more information about imported and exported notebooks, see\n[Global and Local Notebooks](#global-and-local-notebooks).\n\nFor [`nb import`](#import) and [`nb export`](#export) help information, see\n[`nb help import`](#import) and [`nb help export`](#export).\n\n#### Exporting with `browse`\n\nItems can be exported using terminal and GUI [web browsers](#-browsing).\nUse the down arrow (`↓`) link\non the [`nb browse`](#browse) item page\nto download the original file:\n\n```bash\n❯ nb browse 123\n❯nb · home : 123 · ↓ | +\n\n    example.pdf\n \n```\n\n### ⚙️ `set` & `settings`\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#-variables\">Variables</a>,\n    <a href=\"#settings\"><code>nb settings</code></a>,\n    <a href=\"#unset\"><code>nb unset</code></a>\n  </sup>\n</p>\n\n[`nb set`](#settings) and [`nb settings`](#settings)\nopen the settings prompt,\nwhich provides an easy way to change your `nb` settings.\n\n```bash\nnb set\n```\n\nTo update a setting in the prompt,\nenter the setting name or number and then enter the new value.\n`nb` will add the setting to your `~/.nbrc` configuration file.\n\n#### Example: editor\n\n`nb` can be configured to use a specific command line editor\nusing the `editor` setting.\n\nThe settings prompt for a setting can be started by passing\nthe setting name or number to [`nb set`](#settings):\n\n```bash\n❯ nb set editor\n[6]  editor\n     ------\n     The command line text editor used by `nb`.\n\n     • Example Values:\n\n         atom\n         code\n         emacs\n         hx\n         macdown\n         mate\n         micro\n         nano\n         pico\n         subl\n         vi\n         vim\n\nEDITOR is currently set to vim\n\nEnter a new value, unset to set to the default value, or q to quit.\nValue:\n```\n\nA setting can also be updated without the prompt by\npassing both the name and value to [`nb set`](#settings):\n\n```bash\n# set editor with setting name\n❯ nb set editor code\nEDITOR set to code\n\n# set editor with setting number (6)\n❯ nb set 6 code\nEDITOR set to code\n\n# set the color theme to blacklight\n❯ nb set color_theme blacklight\nNB_COLOR_THEME set to blacklight\n\n# set the default `ls` limit to 10\n❯ nb set limit 10\nNB_LIMIT set to 10\n```\n\nUse [`nb settings get`](#settings) to print the value of a setting:\n\n```bash\n❯ nb settings get editor\ncode\n\n❯ nb settings get 6\ncode\n```\n\nUse\n[`nb unset`](#unset) or\n[`nb settings unset`](#settings)\nto unset a setting and revert to the default:\n\n```bash\n❯ nb unset editor\nEDITOR restored to the default: vim\n\n❯ nb settings get editor\nvim\n```\n\n[`nb set`](#settings) and [`nb settings`](#settings)\nare aliases that refer to the same subcommand,\nso the two subcommand names can be used interchangeably.\n\nFor more information about [`set`](#settings) and [`settings`](#settings), see\n[`nb help settings`](#settings).\n\n### 🎨 Color Themes\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#color_theme\"><code>nb&nbsp;set&nbsp;color_theme</code></a>,\n    <a href=\"#syntax_theme\"><code>nb&nbsp;set&nbsp;syntax_theme</code></a>,\n    <a href=\"#color_primary\"><code>nb&nbsp;set&nbsp;color_primary</code></a>,\n    <a href=\"#color_secondary\"><code>nb&nbsp;set&nbsp;color_secondary</code></a>\n  </sup>\n</p>\n\n`nb` uses color to highlight various interface elements, including\nids and [selectors](#-selectors),\nthe current notebook name,\nthe shell prompt,\ndivider lines,\n[syntax elements](#terminal-syntax-highlighting-theme),\nand links.\n\n`nb` includes several built-in color themes\nand also supports user-defined themes.\nThe current color theme can be set using [`nb set color_theme`](#color_theme):\n\n```bash\nnb set color_theme\n```\n\n#### Built-in Color Themes\n\n##### `blacklight`\n\n| ![blacklight](https://xwmx.github.io/misc/nb/images/nb-theme-blacklight-home.png) | ![blacklight](https://xwmx.github.io/misc/nb/images/nb-theme-blacklight-web.png)  |\n|:--:|:--:|\n|    |    |\n\n##### `console`\n\n| ![console](https://xwmx.github.io/misc/nb/images/nb-theme-console-home.png)       | ![console](https://xwmx.github.io/misc/nb/images/nb-theme-console-web.png)        |\n|:--:|:--:|\n|    |    |\n\n##### `desert`\n\n| ![desert](https://xwmx.github.io/misc/nb/images/nb-theme-desert-home.png)         | ![desert](https://xwmx.github.io/misc/nb/images/nb-theme-desert-web.png)          |\n|:--:|:--:|\n|    |    |\n\n##### `electro`\n\n| ![electro](https://xwmx.github.io/misc/nb/images/nb-theme-electro-home.png)       | ![electro](https://xwmx.github.io/misc/nb/images/nb-theme-electro-web.png)        |\n|:--:|:--:|\n|    |    |\n\n##### `forest`\n\n| ![forest](https://xwmx.github.io/misc/nb/images/nb-theme-forest-home.png)         | ![forest](https://xwmx.github.io/misc/nb/images/nb-theme-forest-web.png)          |\n|:--:|:--:|\n|    |    |\n\n##### `nb` (default)\n\n| ![nb](https://xwmx.github.io/misc/nb/images/nb-theme-nb-home.png)                 | ![nb](https://xwmx.github.io/misc/nb/images/nb-theme-nb-web.png)                  |\n|:--:|:--:|\n|    |    |\n\n##### `ocean`\n\n| ![ocean](https://xwmx.github.io/misc/nb/images/nb-theme-ocean-home.png)           | ![ocean](https://xwmx.github.io/misc/nb/images/nb-theme-ocean-web.png)            |\n|:--:|:--:|\n|    |    |\n\n##### `raspberry`\n\n| ![raspberry](https://xwmx.github.io/misc/nb/images/nb-theme-raspberry-home.png)   | ![raspberry](https://xwmx.github.io/misc/nb/images/nb-theme-raspberry-web.png)    |\n|:--:|:--:|\n|    |    |\n\n##### `smoke`\n\n| ![smoke](https://xwmx.github.io/misc/nb/images/nb-theme-monochrome-home.png)      | ![smoke](https://xwmx.github.io/misc/nb/images/nb-theme-smoke-web.png)            |\n|:--:|:--:|\n|    |    |\n\n##### `unicorn`\n\n| ![unicorn](https://xwmx.github.io/misc/nb/images/nb-theme-unicorn-home.png)       | ![unicorn](https://xwmx.github.io/misc/nb/images/nb-theme-unicorn-web.png)        |\n|:--:|:--:|\n|    |    |\n\n##### `utility`\n\n| ![utility](https://xwmx.github.io/misc/nb/images/nb-theme-utility-home.png)       | ![utility](https://xwmx.github.io/misc/nb/images/nb-theme-utility-web.png)        |\n|:--:|:--:|\n|    |    |\n\n#### Custom Color Themes\n\nColor themes are\n[`nb` plugins](#-plugins) with a `.nb-theme` file extension.\n`.nb-theme` files are expected to contain one `if` statement\ntesting for the theme name\nand setting the color environment variables to `tput` ANSI color numbers:\n\n```bash\n# turquoise.nb-theme\nif [[ \"${NB_COLOR_THEME}\" == \"turquoise\" ]]\nthen\n  export NB_COLOR_PRIMARY=43\n  export NB_COLOR_SECONDARY=38\nfi\n```\n\nView this theme as a complete file:\n[`plugins/turquoise.nb-theme`](https://github.com/xwmx/nb/blob/master/plugins/turquoise.nb-theme)\n\nThemes can be installed using [`nb plugins`](#plugins):\n\n```bash\n❯ nb plugins install https://github.com/xwmx/nb/blob/master/plugins/turquoise.nb-theme\nPlugin installed:\n/home/example/.nb/.plugins/turquoise.nb-theme\n```\n\nOnce a theme is installed,\nuse [`nb set color_theme`](#color_theme) to set it as the current theme:\n\n```bash\n❯ nb set color_theme turquoise\nNB_COLOR_THEME set to turquoise\n```\n\nThe primary and secondary colors can also be overridden individually,\nmaking color themes easily customizable:\n\n```bash\n# open the settings prompt for the primary color\nnb set color_primary\n\n# open the settings prompt for the secondary color\nnb set color_secondary\n```\n\nTo view a table of available colors and numbers, run:\n\n```bash\nnb set colors\n```\n\n#### Terminal Syntax Highlighting Theme\n\n`nb` displays files with syntax highlighting when\n[`bat`](https://github.com/sharkdp/bat),\n[`highlight`](http://www.andre-simon.de/doku/highlight/en/highlight.php),\nor\n[Pygments](https://pygments.org/)\nis installed.\n\nWhen `bat` is installed, syntax highlighting\ncolor themes are available for both light and dark terminal backgrounds.\nTo view a list of available themes\nand set the syntax highlighting color theme,\nuse [`nb set syntax_theme`](#syntax_theme).\n\n#### GUI Web Syntax Highlighting\n\nSyntax highlighting is also available when\nviewing and editing items in text formats with\n[`nb browse --gui`](#browse---gui),\nwhich incorporates the color theme's primary color into the syntax theme:\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/nb-web-pandoc-ruby-utility.png\"\n        alt=\"nb syntax highlighting\"\n        width=\"500\">\n</div>\n\n#### Indicators\n\n`nb` uses emoji characters to represent information about files in lists.\nThese characters are referred to internally as \"indicators\"\nand can be customized by assigning a different character to\nthe indicator's environment variable in your `~/.nbrc` file,\nwhich can be opened with [`nb settings edit`](#settings).\n\nFor example, to use a different indicator for pinned items,\nadd a line like the following to your `~/.nbrc` file:\n\n```bash\nexport NB_INDICATOR_PINNED=\"✨\"\n```\n\nTo turn off an indicator, assign the variable to an empty string:\n\n```bash\nexport NB_INDICATOR_PINNED=\"\"\n```\n\nAvailable indicator [variables](#-variables) with default values:\n\n```bash\nexport  NB_INDICATOR_AUDIO=\"🔉\"\nexport  NB_INDICATOR_BOOKMARK=\"🔖\"\nexport  NB_INDICATOR_DOCUMENT=\"📄\"\nexport  NB_INDICATOR_EBOOK=\"📖\"\nexport  NB_INDICATOR_ENCRYPTED=\"🔒\"\nexport  NB_INDICATOR_FOLDER=\"📂\"\nexport  NB_INDICATOR_IMAGE=\"🌄\"\nexport  NB_INDICATOR_PINNED=\"📌\"\nexport  NB_INDICATOR_TODO=\"✔️ \"\nexport  NB_INDICATOR_TODO_DONE=\"✅\"\nexport  NB_INDICATOR_VIDEO=\"📹\"\n```\n\n### $ Shell Theme Support\n\n- [`astral` Zsh Theme](https://github.com/xwmx/astral) - Displays the\n    current notebook name in the context line of the prompt.\n\n### 🔌 Plugins\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#plugin-help\">Plugin Help</a>,\n    <a href=\"#plugins\"><code>nb plugins</code></a>\n  </sup>\n</p>\n\n`nb` includes support for plugins, which can be used to create new\nsubcommands, design themes, and otherwise extend the functionality of `nb`.\n\n`nb` supports two types of plugins, identified by their file extensions:\n\n<dl>\n  <dt><code>.nb-theme</code></dt>\n  <dd>Plugins defining <a href=\"#custom-color-themes\">color themes</a>.</dd>\n  <dt><code>.nb-plugin</code></dt>\n  <dd>Plugins defining new subcommands and adding functionality.</dd>\n</dl>\n\nPlugins are managed with the [`nb plugins`](#plugins) subcommand and\nare installed in the `${NB_DIR}/.plugins` directory.\n\nPlugins can be installed from either a URL or a path using the\n[`nb plugins install`](#plugins) subcommand.\n\n```bash\n# install a plugin from a URL\nnb plugins install https://raw.githubusercontent.com/xwmx/nb/master/plugins/clip.nb-plugin\n\n# install a plugin from a standard GitHub URL\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/example.nb-plugin\n\n# install a theme from a standard GitHub URL\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/turquoise.nb-theme\n\n# install a plugin from a path\nnb plugins install plugins/example.nb-plugin\n```\n\nThe `<url>` should be the full URL to the plugin file.\n`nb` also recognizes regular GitHub URLs,\nwhich can be used interchangeably with raw GitHub URLs.\n\nInstalled plugins can be listed with [`nb plugins`](#plugins),\nwhich optionally takes a name and prints full paths:\n\n```bash\n❯ nb plugins\nclip.nb-plugin\nexample.nb-plugin\nturquoise.nb-theme\n\n❯ nb plugins clip.nb-plugin\nclip.nb-plugin\n\n❯ nb plugins --paths\n/home/example/.nb/.plugins/clip.nb-plugin\n/home/example/.nb/.plugins/example.nb-plugin\n/home/example/.nb/.plugins/turquoise.nb-theme\n\n❯ nb plugins turquoise.nb-theme --paths\n/home/example/.nb/.plugins/turquoise.nb-theme\n```\n\nUse [`nb plugins uninstall`](#plugins) to uninstall a plugin:\n\n```bash\n❯ nb plugins uninstall example.nb-plugin\nPlugin successfully uninstalled:\n/home/example/.nb/.plugins/example.nb-plugin\n```\n\n#### Creating Plugins\n\nPlugins are written in a Bash-compatible shell scripting language\nand have an `.nb-plugin` extension.\n\n`nb` includes a few example plugins:\n\n- [`example.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/example.nb-plugin)\n- [`clip.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/clip.nb-plugin)\n- [`ebook.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/ebook.nb-plugin)\n\nCreate a new subcommand in three easy steps:\n\n##### 1. Add the new subcommand name with `_subcommands add <name>`:\n\n```bash\n_subcommands add \"example\"\n```\n\n##### 2. Define help and usage text with `_subcommands describe <subcommand> <usage>`:\n\n```bash\n_subcommands describe \"example\" <<HEREDOC\nUsage:\n  nb example\n\nDescription:\n  Print \"Hello, World!\"\nHEREDOC\n```\n\n##### 3. Define the subcommand as a function, named with a leading underscore:\n\n```bash\n_example() {\n  printf \"Hello, World!\\\\n\"\n}\n```\n\nThat's it! 🎉\n\nView the complete plugin:\n[`plugins/example.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/example.nb-plugin)\n\nWith `example.nb-plugin` installed, `nb` includes an `nb example` subcommand\nthat prints \"Hello, World!\"\n\nFor a full example,\n[`clip.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/clip.nb-plugin)\nadd clipboard functionality to `nb` and demonstrates how to create a\nplugin using `nb` subcommands and simple shell scripting.\n\nYou can install any plugin you create locally with\n[`nb plugins install <path>`](#plugins),\nand you can publish it on GitHub, GitLab,\nor anywhere else online and install it with\n[`nb plugins install <url>`](#plugins).\n\n#### API\n\nThe `nb` API is the [command line interface](#nb-help), which is designed for\ncomposability and provides a variety of powerful options for interacting with\nnotes, bookmarks, notebooks, and `nb` functionality. Within plugins,\nsubcommands can be called using their function names, which are named with\nleading underscores. Options can be used to output information in formats\nsuitable for parsing and processing:\n\n```bash\n# print the content of note 3 to standard output with no color\n_show 3 --print --no-color\n\n# list all unarchived global notebook names\n_notebooks --names --no-color --unarchived --global\n\n# list all filenames in the current notebook\n_list --filenames --no-id --no-indicator\n\n# print the path to the current notebook\n_notebooks current --path\n```\n\n`nb` automatically scans arguments for\n[selectors](#-selectors) with notebook names\nand updates the current notebook if a valid one is found.\n\nIdentifier selectors are passed to subcommands as arguments along with\nany subcommand options. Use [`show <selector>`](#show) to query\ninformation about the file specified in the selector. For example, to\nobtain the filename of a selector-specified file, use\n[`show <selector> --filename`](#show):\n\n```bash\n_example() {\n  local _selector=\"${1:-}\"\n  [[ -z \"${_selector:-}\" ]] && printf \"Usage: example <selector>\\\\n\" && exit 1\n\n  # Get the filename using the selector.\n  local _filename=\n  _filename=\"$(_show \"${_selector}\" --filename)\"\n\n  # Rest of subcommand function...\n}\n```\n\n[`notebooks current --path`](#notebooks) returns the path to the current\nnotebook:\n\n```bash\n# _example() continued:\n\n# get the notebook path\nlocal _notebook_path=\n_notebook_path=\"$(_notebooks current --path)\"\n\n# print the file at \"${_notebook_path}/${_filename}\" to standard output\ncat \"${_notebook_path}/${_filename}\"\n```\n\nSee\n[`clip.nb-plugin`](https://github.com/xwmx/nb/blob/master/plugins/clip.nb-plugin)\nfor a practical example using both [`show <selector>`](#show) and\n[`notebooks current --path`](#notebooks) along with other\nsubcommands called using their underscore-prefixed function names.\n\n### `:/` Selectors\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a>\n  </sup>\n</p>\n\nItems in `nb` are primarily identified using structured arguments called\n\"selectors.\" Selectors are like addresses for notebooks, folders, and items.\nA selector can be as simple as an id like `123` or folder path like `example/`,\nor it can combine multiple elements to identify\nan item in a nested folder within a particular notebook, such as:\n\n```bash\ncli:tools/shellcheck/home-page.bookmark.md\n```\n\nAn item, folder, or notebook selector is constructed by specifying the\nnotebook name, folder path, and / or item identifier\nin the following pattern:\n\n```text\nnotebook:folder/path/item-idenitifer\n```\n\nRepresented in a [docopt](http://docopt.org/)-like format:\n\n```text\n[<notebook>:][<folder-path>/][<id> | <filename> | <title>]\n```\n\nNotebooks are identified by the notebook name followed by a colon.\nFolder and item identifiers without a notebook name refer to\nitems within the current notebook.\nWhen a selector consists of notebook name and colon\nwith no folder path or item identifier,\nthe command runs in the root folder of the notebook:\n\n```bash\n# list items in the \"example\" notebook\nnb example:\n\n# add a new note named \"Example Title\" to the \"example\" notebook\nnb add example: --title \"Example Title\"\n\n# edit item with id \"123\" in the notebook \"example\"\nnb edit example:123\n```\n\nA notebook selector can be combined with a subcommand name to\nrun the command within the notebook:\n\n```bash\n# list all items in the \"example\" notebook and display excerpts\nnb example:list -e\n\n# edit item with id \"123\" in the \"example\" notebook\nnb example:edit 123\n\n# show the git history for the notebook named \"example\"\nnb example:history\n```\n\nFolders are identified by relative path from the notebook root.\nFolders can be referenced by either id or name, and segments\nin nested paths can mix and match names and ids:\n\n```bash\n# list items in the folder named \"sample\" in the folder named demo\"\nnb sample/demo/\n\n# add a new item to the folder named \"demo\" in the folder with id \"3\"\nnb add 3/demo/\n\n# show the history of the folder with id \"4\" in the folder named\n# \"sample\" in the notebook named \"example\"\nnb history example:sample/4/\n```\n\nA trailing slash indicates that the command is expected to operate on\nthe contents of the folder. When a trailing slash is omitted, the\nselector refers to the folder itself:\n\n```bash\n❯ nb list sample\n[1] 📂 sample\n\n❯ nb list sample/\n[sample/3] Title Three\n[sample/2] Title Two\n[sample/1] Title One\n```\n\nFor more information about folders, see [Folders](#-folders).\n\nAn item is identified by id, filename, or title, optionally preceded by\nnotebook name or folder path:\n\n```bash\n# edit item with id \"123\"\nnb edit 123\n\n# open the item titled \"demo title\" in the folder with id \"3\"\nnb open 3/demo\\ title\n\n# show \"file.md\" in the \"sample\" folder in the \"example\" notebook\nnb show example:sample/file.md\n```\n\nItems can also be specified using the full path:\n\n```bash\n# edit \"demo.md\" in the \"sample\" folder in the \"home\" notebook\nnb edit /home/example/.nb/home/sample/demo.md\n```\n\n##### Examples\n\n*Idenitifer Selectors*\n\n```text\n123\nexample.md\ntitle\nrelative/path/to/123\nrelative/path/to/demo.md\nrelative/path/to/title\n/full/path/to/sample.md\nnotebook:123\nnotebook:example.md\nnotebook:title\nnotebook:relative/path/to/123\nnotebook:relative/path/to/demo.md\nnotebook:relative/path/to/title\n```\n\n*Subcommand Selectors*\n\n```text\nnotebook:\nnotebook:show\nnotebook:history\nnotebook:a\nnotebook:q\n```\n\n### `01` Metadata\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#show\"><code>nb show</code></a>\n  </sup>\n</p>\n\nMetadata in `nb` is primarily derived from git, the filesystem, and file\ncontent. For example, displayed timestamps are derived from\n[`git log`](https://git-scm.com/docs/git-log), with [`nb show --added`](#show)\ndisplaying the datetime of the first commit containing the file and\n[`nb show --updated`](#show) displaying the datetime of the last commit in\nwhich the file was modified. Meanwhile, the file system's modified\ntimestamp is used for sorting.\n\n`nb` also uses plain text files to store ids and state information in\ngit, including\n[`.index` files](https://github.com/xwmx/nb#index-files),\n[`.pindex` files](https://github.com/xwmx/nb#pindex-files),\nand [`.archived` files](https://github.com/xwmx/nb#archived-notebooks).\n\n#### Front Matter\n\nUser-defined metadata can be added to notes in `nb` using [front\nmatter](https://jekyllrb.com/docs/front-matter/). Front matter is a\nsimple, human accessible, and future-friendly method for defining metadata\nfields in plain text and is well supported in tools for working with\nMarkdown.\n\nFront matter is defined within a Markdown file with triple-dashed lines\n(`---`) indicating the start and end of the block, with each field represented\nby a key name with a colon followed by the value:\n\n```markdown\n---\ntitle:  Example Title\nauthor: xwmx\nyear:   2021\n---\n\nExample content.\n\nMore example content:\n\n- one\n- two\n- three\n```\n\nAny metadata can be placed in the front matter block. `nb` uses the\n`title:` field for listing, filtering, and selecting items, if one is\npresent, and ignores any other fields.\n\nThe simple `key: value` syntax is suitable for many metadata fields.\nMore complex data can be defined using additional\n[YAML](https://en.wikipedia.org/wiki/YAML)\ncapabilities.\n\n### `❯` Interactive Shell\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#shell\"><code>nb shell</code></a>\n  </sup>\n</p>\n\n`nb` has an interactive shell that can be started with\n[`nb shell`](#shell), [`nb -i`](#nb-help), or [`nb --interactive`](#nb-help):\n\n```bash\n$ nb shell\n__          _\n\\ \\   _ __ | |__\n \\ \\ | '_ \\| '_ \\\n / / | | | | |_) |\n/_/  |_| |_|_.__/\n------------------\nnb shell started. Enter ls to list notes and notebooks.\nEnter help for usage information. Enter exit to exit.\nnb❯ ls\nhome\n----\n[3] Example\n[2] Sample\n[1] Demo\n\nnb❯ edit 3 --content \"New content.\"\nUpdated: [3] Example\n\nnb❯ bookmark https://example.com\nAdded: [4] 🔖 example.bookmark.md \"Example Title (example.com)\"\n\nnb❯ ls\nhome\n----\n[4] 🔖 Example Title (example.com)\n[3] Example\n[2] Sample\n[1] Demo\n\nnb❯ bookmark url 4\nhttps://example.com\n\nnb❯ search \"example\"\n[4] example.bookmark.md \"Example (example.com)\"\n-----------------------------------------------\n1:# Example (example.com)\n\n3:<https://example.com>\n\n[3] example.md \"Example\"\n------------------------\n1:# Example\n\nnb❯ exit\n$\n```\n\nThe `nb` shell recognizes all `nb` subcommands and options,\nproviding a streamlined, distraction-free approach for working with `nb`.\n\n### Shortcut Aliases\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a>\n  </sup>\n</p>\n\nSeveral core `nb` subcommands have shortcut aliases to make\nthem faster to work with:\n\n```bash\n# `a` (add): add a new note named \"example.md\"\nnb a example.md\n\n# `+` (add): add a new note titled \"Example Title\"\nnb + --title \"Example Title\"\n\n# `b` (browse): open the folder named \"sample\" in the web browser\nnb b sample/\n\n# `o` (open): open the URL from bookmark 12 in your web browser\nnb o 12\n\n# `p` (peek): open the URL from bookmark 6 in your terminal browser\nnb p 6\n\n# `e` (edit): edit note 5\nnb e 5\n\n# `d` (delete): delete note 19\nnb d 19\n\n# `d` (delete): delete note 123 in the notebook named \"example:\"\nnb - example:123\n\n# `s` (show): show note 27\nnb s 27\n\n# `q` (search): search notes for \"example query\"\nnb q \"example query\"\n\n# `h` (help): display the help information for the `add` subcommand\nnb h add\n\n# `u` (use): switch to example-notebook\nnb u example-notebook\n```\n\nFor more commands and options, run\n[`nb help`](#nb-help) or\n[`nb help <subcommand>`](#subcommands)\n\n<div align=\"center\">\n  <img  src=\"https://xwmx.github.io/misc/nb/images/gui-browse-themes.png\"\n        alt=\"nb browse themes\"\n        width=\"700\">\n</div>\n\n### `?` Help\n\n<div align=\"center\">\n  <a href=\"#nb-help\">nb</a>&nbsp;·\n  <a href=\"#bookmark-help\">bookmark</a>&nbsp;·\n  <a href=\"#subcommands\">subcommands</a>&nbsp;·\n  <a href=\"#plugin-help\">plugins</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#add\">add</a>&nbsp;·\n  <a href=\"#archive\">archive</a>&nbsp;·\n  <a href=\"#bookmark\">bookmark</a>&nbsp;·\n  <a href=\"#browse\">browse</a>&nbsp;·\n  <a href=\"#completions\">completions</a>&nbsp;·\n  <a href=\"#copy\">copy</a>&nbsp;·\n  <a href=\"#count\">count</a>&nbsp;·\n  <a href=\"#delete\">delete</a>&nbsp;·\n  <a href=\"#do\">do</a>&nbsp;·\n  <a href=\"#edit\">edit</a>&nbsp;·\n  <a href=\"#env\">env</a>&nbsp;·\n  <a href=\"#export\">export</a>&nbsp;·\n  <a href=\"#folders\">folders</a>&nbsp;·\n  <a href=\"#git\">git</a>&nbsp;·\n  <a href=\"#help\">help</a>&nbsp;·\n  <a href=\"#history\">history</a>&nbsp;·\n  <a href=\"#import\">import</a>&nbsp;·\n  <a href=\"#init\">init</a>&nbsp;·\n  <a href=\"#list\">list</a>&nbsp;·\n  <a href=\"#ls\">ls</a>&nbsp;·\n  <a href=\"#move\">move</a>&nbsp;·\n  <a href=\"#notebooks\">notebooks</a>&nbsp;·\n  <a href=\"#open\">open</a>&nbsp;·\n  <a href=\"#peek\">peek</a>&nbsp;·\n  <a href=\"#pin\">pin</a>&nbsp;·\n  <a href=\"#plugins\">plugins</a>&nbsp;·\n  <a href=\"#remote\">remote</a>&nbsp;·\n  <a href=\"#run\">run</a>&nbsp;·\n  <a href=\"#search\">search</a>&nbsp;·\n  <a href=\"#settings\">settings</a>&nbsp;·\n  <a href=\"#shell\">shell</a>&nbsp;·\n  <a href=\"#show\">show</a>&nbsp;·\n  <a href=\"#status\">status</a>&nbsp;·\n  <a href=\"#subcommands-1\">subcommands</a>&nbsp;·\n  <a href=\"#sync\">sync</a>&nbsp;·\n  <a href=\"#tasks\">tasks</a>&nbsp;·\n  <a href=\"#todo\">todo</a>&nbsp;·\n  <a href=\"#unarchive\">unarchive</a>&nbsp;·\n  <a href=\"#undo\">undo</a>&nbsp;·\n  <a href=\"#unpin\">unpin</a>&nbsp;·\n  <a href=\"#unset\">unset</a>&nbsp;·\n  <a href=\"#update\">update</a>&nbsp;·\n  <a href=\"#use\">use</a>&nbsp;·\n  <a href=\"#version\">version</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#overview\">&nbsp;↑&nbsp;</a>\n</div>\n\n#### `nb help`\n\n[↑](#-help) · See also:\n[`help`](#help)\n\n```text\n__          _\n\\ \\   _ __ | |__\n \\ \\ | '_ \\| '_ \\\n / / | | | | |_) |\n/_/  |_| |_|_.__/\n\n[nb] Command line and local web note-taking, bookmarking, and archiving with\nplain text data storage, encryption, filtering and search, pinning, #tagging,\nGit-backed versioning and syncing, Pandoc-backed conversion, global and local\nnotebooks, customizable color themes, [[wiki-style linking]], plugins, and more\nin a single portable, user-friendly script.\n\nHelp:\n  nb help               Display this help information.\n  nb help <subcommand>  View help information for <subcommand>.\n  nb help --colors      View information about color settings.\n  nb help --readme      View the `nb` README file.\n\nUsage:\n  nb\n  nb [<ls-options>...] [<id> | <filename> | <path> | <title> | <notebook>]\n  nb [<url>] [<bookmark options>...]\n  nb add [<notebook>:][<folder-path>/][<filename>] [<content>]\n         [-b | --browse] [-c <content> | --content <content>] [--edit]\n         [-e | --encrypt] [-f <filename> | --filename <filename>]\n         [--folder <folder-path>] [--tags <tag1>,<tag2>...]\n         [-t <title> | --title <title>] [--type <type>]\n  nb add bookmark [<bookmark-options>...]\n  nb add folder [<name>]\n  nb add todo [<todo-options>...]\n  nb archive [<notebook>]\n  nb bookmark [<ls-options>...]\n  nb bookmark [<notebook>:][<folder-path>/] <url>...\n              [-c <comment> | --comment <comment>] [--edit] [-e | --encrypt]\n              [-f <filename> | --filename <filename>] [--no-request]\n              [-q <quote> | --quote <quote>] [--save-source]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]...\n              [-t <tag1>,<tag2>... | --tags <tag1>,<tag2>...] [--title <title>]\n  nb bookmark [list [<list-options>...]]\n  nb bookmark (open | peek | url) (<id> | <filename> | <path> | <title>)\n  nb bookmark (edit | delete) (<id> | <filename> | <path> | <title>)\n  nb bookmark search <query>\n  nb browse [<notebook>:][<folder-path>/][<id> | <filename> | <title>] [--daemon]\n            [-g | --gui] [-n | --notebooks] [-p | --print] [-q | --query <query>]\n            [-s | --serve] [-t <tag> | --tag <tag> | --tags <tag1>,<tag2>...]\n  nb browse add [<notebook>:][<folder-path>/][<filename>]\n            [-c <content> | --content <content>] [--tags <tag1>,<tag2>...]\n            [-t <title> | --title <title>]\n  nb browse delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb browse edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb completions (check | install [-d | --download] | uninstall)\n  nb copy ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[<notebook>:][<folder-path>/]<filename>]\n  nb count [<notebook>:][<folder-path>/]\n  nb delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])...\n            [-f | --force]\n  nb do ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n        [<task-number>]\n  nb edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [-c <content> | --content <content>] [--edit]\n          [-e <editor> | --editor <editor>] [--overwrite] [--prepend]\n  nb export ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <path> [-f | --force] [<pandoc options>...]\n  nb export notebook <name> [<path>]\n  nb export pandoc ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            [<pandoc options>...]\n  nb folders (add | delete) [<notebook>:][<folder-path>/]<folder-name>\n  nb folders <list-options>...\n  nb git [checkpoint [<message>] | dirty]\n  nb git <git-options>...\n  nb help [<subcommand>] [-p | --print]\n  nb help [-c | --colors] | [-r | --readme] | [-s | --short] [-p | --print]\n  nb history [<notebook>:][<folder-path>/][<id> | <filename> | <title>]\n  nb import [copy | download | move] (<path>... | <url>) [--convert]\n            [<notebook>:][<folder-path>/][<filename>]\n  nb import notebook <path> [<name>]\n  nb init [<remote-url> [<branch>]] [--author] [--email <email>]\n          [--name <name>]\n  nb list [-e [<length>] | --excerpt [<length>]] [--filenames]\n          [-f | --folders-first] [-n <limit> | --limit <limit> | --<limit>]\n          [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n          [--paths] [-s | --sort] [-r | --reverse] [--tags]\n          [-t <type> | --type <type> | --<type>]\n          [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n  nb ls [-a | --all] [-b | --browse] [-e [<length>] | --excerpt [<length>]]\n        [--filenames] [-f | --folders-first] [-g | --gui]\n        [-n <limit> | --limit <limit> | --<limit>] [--no-footer] [--no-header]\n        [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n        [--paths] [-s | --sort] [-r | --reverse] [--tags]\n        [-t <type> | --type <type> | --<type>]\n        [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n  nb move ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          ([<notebook>:][<path>] | --reset | --to-bookmark | --to-note |\n          --to-title | --to-todo) [-f | --force]\n  nb notebooks [<name> | <query>] [--ar | --archived] [--global] [--local]\n               [--names] [--paths] [--unar | --unarchived]\n  nb notebooks add ([<name>] [<remote-url> [<branch>... | --all]]) [--author]\n                   [--email <email>] [--name <name>]\n  nb notebooks (archive | open | peek | status | unarchive) [<name>]\n  nb notebooks author [<name> | <path>] [--email <email>] [--name <name>]\n  nb notebooks current [--path | --selected | --filename [<filename>]]\n                       [--global | --local]\n  nb notebooks delete <name> [-f | --force]\n  nb notebooks (export <name> [<path>] | import <path>)\n  nb notebooks init [<path> [<remote-url> [<branch>]]] [--author]\n                    [--email <email>] [--name <name>]\n  nb notebooks rename <old-name> <new-name>\n  nb notebooks select <selector>\n  nb notebooks show (<name> | <path> | <selector>) [--ar | --archived]\n                    [--escaped | --name | --path | --filename [<filename>]]\n  nb notebooks use <name>\n  nb open ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb peek ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb pin  ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb plugins [<name>] [--paths]\n  nb plugins install [<path> | <url>] [--force]\n  nb plugins uninstall <name> [--force]\n  nb remote [branches [<url>] | remove | rename [<branch-name>] <name>]\n  nb remote [delete <branch-name> | reset <branch-name>]\n  nb remote set <url> [<branch-name>]\n  nb run <command> [<arguments>...]\n  nb search ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <query>... [-a | --all] [--and <query>] [--not <query>] [--or <query>]\n            [-l | --list] [--path] [-t <tag1>,<tag2>... | --tag <tag1>,<tag2>...]\n            [-t | --tags] [--type <type> | --<type>] [--utility <name>]\n  nb set [<name> [<value>] | <number> [<value>]]\n  nb settings [colors [<number> | themes] | edit | list [--long]]\n  nb settings (get | show | unset) (<name> | <number>)\n  nb settings set (<name> | <number>) <value>\n  nb shell [<subcommand> [<options>...] | --clear-history]\n  nb show ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[-a | --added] | [--authors] | [-b | --browse] | --filename | --id |\n          --info-line | --path | [-p | --print] | --relative-path | [-r |\n          --render] | --title | --type [<type>] | [-u | --updated]] [--no-color]\n  nb show <notebook>\n  nb status [<notebook>]\n  nb subcommands [add <name>...] [alias <name> <alias>]\n                 [describe <name> <usage>]\n  nb sync [-a | --all]\n  nb tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n           [open | closed]\n  nb todo add [<notebook>:][<folder-path>/][<filename>] <title>\n              [--description <description>] [--due <date>]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]\n              [--tags <tag1>,<tag2>...] [--task <title>...]\n  nb todo do   ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  nb todo undo ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  nb todos [<notebook>:][<folder-path>/] [open | closed] [--tags <tag1>,<tag2>...]\n  nb todos tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n                 [open | closed]\n  nb unarchive [<notebook>]\n  nb undo ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [<task-number>]\n  nb unpin ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb unset (<name> | <number>)\n  nb update\n  nb use <notebook>\n  nb -h | --help | help [<subcommand> | --readme]\n  nb -i | --interactive [<subcommand> [<options>...]]\n  nb --no-color\n  nb --version | version\n\nSubcommands:\n  (default)    List notes and notebooks. This is an alias for `nb ls`.\n               When a <url> is provided, create a new bookmark.\n  add          Add a note, folder, or file.\n  archive      Archive the current or specified notebook.\n  bookmark     Add, open, list, and search bookmarks.\n  browse       Browse and manage linked items in terminal and GUI web browsers.\n  completions  Install and uninstall completion scripts.\n  copy         Copy or duplicate an item.\n  count        Print the number of items in a notebook or folder.\n  delete       Delete a note.\n  do           Mark a todo or task as done.\n  edit         Edit a note.\n  export       Export a note to a variety of different formats.\n  folders      Add, delete, and list folders.\n  git          Run `git` commands within the current notebook.\n  help         View help information for the program or a subcommand.\n  history      View git history for the current notebook or a note.\n  import       Import a file into the current notebook.\n  init         Initialize the first notebook.\n  list         List notes in the current notebook.\n  ls           List notebooks and notes in the current notebook.\n  move         Move or rename a note.\n  notebooks    Manage notebooks.\n  open         Open a bookmarked web page or notebook folder, or edit a note.\n  peek         View a note, bookmarked web page, or notebook in the terminal.\n  pin          Pin an item so it appears first in lists.\n  plugins      Install and uninstall plugins and themes.\n  remote       Configure the remote URL and branch for the notebook.\n  run          Run shell commands within the current notebook.\n  search       Search notes.\n  settings     Edit configuration settings.\n  shell        Start the `nb` interactive shell.\n  show         Show a note or notebook.\n  status       Run `git status` in the current notebook.\n  subcommands  List, add, alias, and describe subcommands.\n  status       Print notebook status information.\n  sync         Sync local notebook with the remote repository.\n  tasks        List tasks in todos, notebooks, folders, and other items.\n  todo         Manage todos and tasks.\n  unarchive    Unarchive the current or specified notebook.\n  undo         Mark a todo or task as not done.\n  unpin        Unpin a pinned item.\n  unset        Return a setting to its default value.\n  update       Update `nb` to the latest version.\n  use          Switch to a notebook.\n  version      Display version information.\n\nNotebook Usage:\n  nb <notebook>:[<subcommand>] [<identifier>] [<options>...]\n  nb <subcommand> <notebook>:<identifier> [<options>...]\n\nProgram Options:\n  -h, --help          Display this help information.\n  -i, --interactive   Start the `nb` interactive shell.\n  --no-color          Print without color highlighting.\n  --version           Display version information.\n\nMore Information:\n  https://github.com/xwmx/nb\n```\n\n#### `bookmark help`\n\n[↑](#-help) · See also:\n[Bookmarks](#-bookmarks),\n[`bookmark`](#bookmark),\n[`browse`](#browse)\n\n```text\n    __                __                        __\n   / /_  ____  ____  / /______ ___  ____ ______/ /__\n  / __ \\/ __ \\/ __ \\/ //_/ __ `__ \\/ __ `/ ___/ //_/\n / /_/ / /_/ / /_/ / ,< / / / / / / /_/ / /  / ,<\n/_.___/\\____/\\____/_/|_/_/ /_/ /_/\\__,_/_/  /_/|_|\n\nbookmark -- Command line bookmarking with tagging, encryption,\nfull-text page content search with regular expression support,\nGUI and terminal browser support, and data stored in plain text\nMarkdown files with Git-backed versioning and syncing.\n\nUsage:\n  bookmark [<ls-options>...]\n  bookmark [<notebook>:][<folder-path>] <url>\n              [-c <comment> | --comment <comment>] [--edit] [-e | --encrypt]\n              [-f <filename> | --filename <filename>] [--no-request]\n              [-q <quote> | --quote <quote>] [--save-source]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]...\n              [-t <tag1>,<tag2>... | --tags <tag1>,<tag2>...] [--title <title>]\n  bookmark (edit | delete | open | peek | url)\n              ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  bookmark search <query>\n\nOptions:\n  -c, --comment <comment>      A comment or description for this bookmark.\n  --edit                       Open the bookmark in your editor before saving.\n  -e, --encrypt                Encrypt the bookmark with a password.\n  -f, --filename <filename>    The filename for the bookmark. It is\n                               recommended to omit the extension so the\n                               default bookmark extension is used.\n  --no-request                 Don't request or download the target page.\n  -q, --quote <quote>          A quote or excerpt from the saved page.\n                               Alias: `--excerpt`\n  -r, --related <selector>     A selector for an item related to the\n                               bookmarked page.\n  -r, --related <url>          A URL for a page related to the bookmarked page.\n                               Multiple `--related` flags can be used in a\n                               command to save multiple related URLs.\n  --save-source                Save the page source as HTML.\n  -t, --tags <tag1>,<tag2>...  A comma-separated list of tags.\n  --title <title>              The bookmark title. When not specified,\n                               `nb` will use the html <title> tag.\n\nSubcommands:\n  (default)  Add a new bookmark for <url>, or list bookmarks.\n             Bookmarks can also be added with `nb <url>`\n  delete     Delete a bookmark.\n  edit       Edit a bookmark.\n  list       List bookmarks in the current notebook.\n             Shortcut Alias: `ls`\n  open       Open the bookmarked page in your system's primary web browser.\n             Shortcut Alias: `o`\n  peek       Open the bookmarked page in your terminal web browser.\n             Alias: `preview`\n             Shortcut Alias: `p`\n  search     Search bookmarks for <query>.\n             Shortcut Alias: `q`\n  url        Print the URL for the specified bookmark.\n\nDescription:\n  Create, view, search, edit, and delete bookmarks.\n\n  By default, the html page content is saved within the bookmark, making the\n  bookmarked page available for full-text search. When Pandoc [1] is\n  installed, the HTML content is converted to Markdown before saving.\n  When readability-cli [2] is install, markup is cleaned up to focus on\n  content.\n\n  `peek` opens the page in `w3m` [3] or `links` [4] when available.\n  To specify a preferred browser, set the `$BROWSER` environment variable\n  in your .bashrc, .zshrc, or equivalent, e.g.: export BROWSER=\"lynx\"\n\n  Bookmarks are identified by the `.bookmark.md` file extension. The\n  bookmark URL is the first URL in the file within \"<\" and \">\" characters:\n\n    <https://www.example.com>\n\n    1. https://pandoc.org/\n    2. https://gitlab.com/gardenappl/readability-cli\n    3. https://en.wikipedia.org/wiki/W3m\n    4. https://en.wikipedia.org/wiki/Links_(web_browser)\n\nRead More:\n  https://github.com/xwmx/nb#-bookmarks\n\nSee Also:\n  nb help browse\n  nb help open\n  nb help peek\n  nb help show\n\nExamples:\n  bookmark https://example.com\n  bookmark https://example.com --encrypt\n  bookmark https://example.com --tags example,sample,demo\n  bookmark https://example.com/about -c \"Example comment.\"\n  bookmark https://example.com/faqs -f example-filename\n  bookmark https://example.com --quote \"Example quote or excerpt.\"\n  bookmark list\n  bookmark search \"example query\"\n  bookmark open 5\n\n------------------------------------------\nPart of `nb` (https://github.com/xwmx/nb).\nFor more information, see: `nb help`.\n```\n\n### Subcommands\n\n<div align=\"center\">\n  <a href=\"#add\">add</a>&nbsp;·\n  <a href=\"#archive\">archive</a>&nbsp;·\n  <a href=\"#bookmark\">bookmark</a>&nbsp;·\n  <a href=\"#browse\">browse</a>&nbsp;·\n  <a href=\"#completions\">completions</a>&nbsp;·\n  <a href=\"#copy\">copy</a>&nbsp;·\n  <a href=\"#count\">count</a>&nbsp;·\n  <a href=\"#delete\">delete</a>&nbsp;·\n  <a href=\"#do\">do</a>&nbsp;·\n  <a href=\"#edit\">edit</a>&nbsp;·\n  <a href=\"#env\">env</a>&nbsp;·\n  <a href=\"#folders\">folders</a>&nbsp;·\n  <a href=\"#export\">export</a>&nbsp;·\n  <a href=\"#git\">git</a>&nbsp;·\n  <a href=\"#help\">help</a>&nbsp;·\n  <a href=\"#history\">history</a>&nbsp;·\n  <a href=\"#import\">import</a>&nbsp;·\n  <a href=\"#init\">init</a>&nbsp;·\n  <a href=\"#list\">list</a>&nbsp;·\n  <a href=\"#ls\">ls</a>&nbsp;·\n  <a href=\"#move\">move</a>&nbsp;·\n  <a href=\"#notebooks\">notebooks</a>&nbsp;·\n  <a href=\"#open\">open</a>&nbsp;·\n  <a href=\"#peek\">peek</a>&nbsp;·\n  <a href=\"#pin\">pin</a>&nbsp;·\n  <a href=\"#plugins\">plugins</a>&nbsp;·\n  <a href=\"#remote\">remote</a>&nbsp;·\n  <a href=\"#run\">run</a>&nbsp;·\n  <a href=\"#search\">search</a>&nbsp;·\n  <a href=\"#settings\">settings</a>&nbsp;·\n  <a href=\"#shell\">shell</a>&nbsp;·\n  <a href=\"#show\">show</a>&nbsp;·\n  <a href=\"#status\">status</a>&nbsp;·\n  <a href=\"#subcommands-1\">subcommands</a>&nbsp;·\n  <a href=\"#sync\">sync</a>&nbsp;·\n  <a href=\"#tasks\">tasks</a>&nbsp;·\n  <a href=\"#todo\">todo</a>&nbsp;·\n  <a href=\"#unarchive\">unarchive</a>&nbsp;·\n  <a href=\"#undo\">undo</a>&nbsp;·\n  <a href=\"#unpin\">unpin</a>&nbsp;·\n  <a href=\"#unset\">unset</a>&nbsp;·\n  <a href=\"#update\">update</a>&nbsp;·\n  <a href=\"#use\">use</a>&nbsp;·\n  <a href=\"#version\">version</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#overview\">&nbsp;↑&nbsp;</a>\n</div>\n\n#### `add`\n\n[↑](#-help) · See also:\n[Adding](#adding),\n[`bookmark`](#bookmark),\n[`browse`](#browse),\n[`delete`](#delete),\n[`edit`](#edit),\n[`folders`](#folders),\n[`import`](#import),\n[`show`](#show),\n[`todo`](#todo)\n\n```text\nUsage:\n  nb add [<notebook>:][<folder-path>/][<filename>] [<content>]\n         [-b | --browse] [-c <content> | --content <content>] [--edit]\n         [-e | --encrypt] [-f <filename> | --filename <filename>]\n         [--folder <folder-path>] [--tags <tag1>,<tag2>...]\n         [-t <title> | --title <title>] [--type <type>]\n  nb add bookmark [<bookmark-options>...]\n  nb add folder [<name>]\n  nb add todo [<todo-options>...]\n\nOptions:\n  -b, --browse                Add using a terminal or GUI web browser.\n  -c, --content <content>     The content for the new note.\n  --edit                      Open the note in the editor before saving when\n                              content is piped or passed as an argument.\n  -e, --encrypt               Encrypt the note with a password.\n  -f, --filename <filename>   The filename for the new note.\n  --folder <folder-path>      Add within the folder located at <folder-path>.\n  --tags <tag1>,<tag2>...     A comma-separated list of tags.\n  -t, --title <title>         The title for a new note. If `--title` is\n                              present, the filename is derived from the\n                              title, unless `--filename` is specified.\n  --type <type>               The file type for the new note, as a file\n                              extension.\n\nDescription:\n  Create a new note or folder.\n\n  If no arguments are passed, a new blank note file is opened with `$EDITOR`,\n  currently set to: example\n\n  If a non-option argument is passed, `nb` will treat it as a <filename≥\n  if a file extension is found. If no file extension is found,  `nb` will\n  treat the string as <content> and will create a new note without opening the\n  editor. `nb add` can also create a new note with piped content.\n\n  `nb` creates Markdown files by default. To create a note with a\n  different file type, use the extension in the filename or use the `--type`\n  option. To change the default file type, use `nb set default_extension`.\n\n  When the `-e` / `--encrypt` option is used, `nb` will encrypt the\n  note with AES-256 using OpenSSL by default, or GPG, if configured in\n  `nb set encryption_tool`.\n\nRead More:\n  https://github.com/xwmx/nb#adding\n\nSee Also:\n  nb help bookmark\n  nb help browse\n  nb help delete\n  nb help edit\n  nb help folders\n  nb help import\n  nb help show\n  nb help todo\n\nExamples:\n  nb add\n  nb add example.md\n  nb add \"Note content.\"\n  nb add example.md --title \"Example Title\" --content \"Example content.\"\n  echo \"Note content.\" | nb add\n  nb add -t \"Secret Document\" --encrypt\n  nb add example/document.md\n  nb add folder sample/demo\n  nb example:add\n  nb example:add -t \"Title\"\n  nb a\n  nb a \"Note content.\"\n  nb example:a\n  nb example:a -t \"Title\"\n\nAliases:\n  nb create\n  nb new\n\nShortcut Aliases:\n  nb a\n  nb +\n```\n\n#### `archive`\n\n[↑](#-help) · See also:\n[Archiving Notebooks](#archiving-notebooks),\n[`notebooks`](#notebooks),\n[`status`](#status),\n[`unarchive`](#unarchive)\n\n```text\nUsage:\n  nb archive [<name>]\n\nDescription:\n  Set the current notebook or notebook <name> to \"archived\" status.\n\n  This is an alias for `nb notebooks archive`.\n\nRead More:\n  https://github.com/xwmx/nb#archiving-notebooks\n\nSee Also:\n  nb help notebooks\n  nb help status\n  nb help unarchive\n\nExamples:\n  nb archive\n  nb archive example\n\nShortcut Alias:\n  nb ar\n```\n\n#### `bookmark`\n\n[↑](#-help) · See also:\n[Bookmarks](#-bookmarks),\n[`browse`](#browse),\n[`open`](#open),\n[`peek`](#peek),\n[`show`](#show)\n\n```text\nUsage:\n  nb bookmark [<ls-options>...]\n  nb bookmark [<notebook>:][<folder-path>/] <url>...\n              [-c <comment> | --comment <comment>] [--edit] [-e | --encrypt]\n              [-f <filename> | --filename <filename>] [--no-request]\n              [-q <quote> | --quote <quote>] [--save-source]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]...\n              [-t <tag1>,<tag2>... | --tags <tag1>,<tag2>...] [--title <title>]\n  nb bookmark list [<list-options>...]\n  nb bookmark (edit | delete | open | peek | url)\n              ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb bookmark search <query>\n\nOptions:\n  -c, --comment <comment>      A comment or description for this bookmark.\n  --edit                       Open the bookmark in your editor before saving.\n  -e, --encrypt                Encrypt the bookmark with a password.\n  -f, --filename <filename>    The filename for the bookmark. It is\n                               recommended to omit the extension so the\n                               default bookmark extension is used.\n  --no-request                 Don't request or download the target page.\n  -q, --quote <quote>          A quote or excerpt from the saved page.\n                               Alias: `--excerpt`\n  -r, --related <selector>     A selector for an item related to the\n                               bookmarked page.\n  -r, --related <url>          A URL for a page related to the bookmarked page.\n                               Multiple `--related` flags can be used in a\n                               command to save multiple related URLs.\n  --save-source                Save the page source as HTML.\n  -t, --tags <tag1>,<tag2>...  A comma-separated list of tags.\n  --title <title>              The bookmark title. When not specified,\n                               `nb` will use the html <title> tag.\n\nSubcommands:\n  (default)  Add a new bookmark for <url>, or list bookmarks.\n             Bookmarks can also be added with `nb <url>`\n  delete     Delete a bookmark.\n  edit       Edit a bookmark.\n  list       List bookmarks in the current notebook.\n             Shortcut Alias: `ls`\n  open       Open the bookmarked page in your system's primary web browser.\n             Shortcut Alias: `o`\n  peek       Open the bookmarked page in your terminal web browser.\n             Alias: `preview`\n             Shortcut Alias: `p`\n  search     Search bookmarks for <query>.\n             Shortcut Alias: `q`\n  url        Print the URL for the specified bookmark.\n\nDescription:\n  Create, view, search, edit, and delete bookmarks.\n\n  By default, the html page content is saved within the bookmark, making the\n  bookmarked page available for full-text search. When Pandoc [1] is\n  installed, the HTML content is converted to Markdown before saving.\n  When readability-cli [2] is install, markup is cleaned up to focus on\n  content.\n\n  `peek` opens the page in `w3m` [3] or `links` [4] when available.\n  To specify a preferred browser, set the `$BROWSER` environment variable\n  in your .bashrc, .zshrc, or equivalent, e.g.: export BROWSER=\"lynx\"\n\n  Bookmarks are identified by the `.bookmark.md` file extension. The\n  bookmark URL is the first URL in the file within \"<\" and \">\" characters:\n\n    <https://www.example.com>\n\n    1. https://pandoc.org/\n    2. https://gitlab.com/gardenappl/readability-cli\n    3. https://en.wikipedia.org/wiki/W3m\n    4. https://en.wikipedia.org/wiki/Links_(web_browser)\n\nRead More:\n  https://github.com/xwmx/nb#-bookmarks\n\nSee Also:\n  nb help browse\n  nb help open\n  nb help peek\n  nb help show\n\nExamples:\n  nb https://example.com\n  nb example: https://example.com\n  nb https://example.com --encrypt\n  nb https://example.com --tags example,sample,demo\n  nb https://example.com/about -c \"Example comment.\"\n  nb https://example.com/faqs -f example-filename\n  nb https://example.com --quote \"Example quote or excerpt.\"\n  nb bookmark list\n  nb bookmark search \"example query\"\n  nb bookmark open 5\n  nb bk\n\nShortcut Aliases:\n  nb bk\n  nb bm\n```\n\n#### `browse`\n\n[↑](#-help) · See also:\n[Browsing](#-browsing),\n[Images](#-images),\n[Linking](#-linking),\n[`add`](#add),\n[`delete`](#delete),\n[`edit`](#edit),\n[`list`](#list),\n[`ls`](#ls),\n[`open`](#open),\n[`peek`](#peek),\n[`pin`](#pin),\n[`search`](#search),\n[`show`](#show)\n\n```text\nUsage:\n  nb browse [<notebook>:][<folder-path>/][<id> | <filename> | <title>] [--daemon]\n            [-g | --gui] [-n | --notebooks] [-p | --print] [-q | --query <query>]\n            [-s | --serve] [-t <tag> | --tag <tag> | --tags <tag1>,<tag2>...]\n  nb browse add [<notebook>:][<folder-path>/][<filename>]\n            [-c <content> | --content <content>] [--tags <tag1>,<tag2>...]\n            [-t <title> | --title <title>]\n  nb browse delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb browse edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\nSubcommands:\n  (default)  Open a notebook, folder, or item in the terminal or GUI web browser.\n  add        Open the add view in the browser.\n             Shortcut Aliases: `a`, `+`\n  delete     Open the delete view in the browser.\n             Shortcut Aliases: `d`, `-`\n  edit       Open the edit view in the browser.\n             Shortcut Alias:   `e`\n\nOptions:\n  -c, --content <content>      Add content to the new note.\n  --daemon                     Start the web server. Close with <CTRL-C>.\n  -g, --gui                    Open in the system's primary GUI web browser.\n  -n, --notebooks              Browse notebooks.\n  -p, --print                  Print to standard output.\n  -q, --query <query>          Open to the search results for <query>.\n  -s, --serve                  Start the web server. Close with any key.\n  -t, --tag <tag>              Search for a tag.\n  --tags <tag1>,<tag2>...      A comma-separated list of tags.\n  -t, --title <title>          Add a title to the new note.\n\nDescription:\n  Browse, view, and edit linked notes, bookmarks, notebooks, folders, and\n  other items using terminal and GUI web browsers.\n\n  `browse` includes an embedded web application designed for terminal\n  and GUI web browsers that renders [[wiki-style links]] and #tags as\n  internal links, providing the ability to browse notes and notebooks,\n  as well as seamlessly browse to and from the offsite links in\n  bookmarks and notes.\n\n  To link to a note or bookmark from another, include the selector for the\n  target item within double square brackets anywhere in the linking document:\n\n    # link to item 123 in the \"sample\" folder in the \"example\" notebook\n    [[example:sample/123]]\n\n    # link to the item titled \"Example Title\" in the \"demo\" notebook\n    [[demo:Example Title]]\n\n  `browse` supports `w3m` [1] and `links` [2], and depends on\n  `ncat` [3] or `socat` [4] and `pandoc` [5]:\n\n    1. https://en.wikipedia.org/wiki/W3m\n    2. https://en.wikipedia.org/wiki/Links_(web_browser)\n    3. https://nmap.org/ncat/\n    4. https://www.kali.org/tools/socat/\n    5. https://pandoc.org/\n\nRead More:\n  https://github.com/xwmx/nb#-browsing\n\nSee Also:\n  nb help add\n  nb help delete\n  nb help edit\n  nb help list\n  nb help ls\n  nb help open\n  nb help peek\n  nb help pin\n  nb help search\n  nb help show\n  nb help unpin\n\nExamples:\n  nb browse\n  nb browse example:\n  nb browse Example\\ Folder/\n  nb browse 123\n  nb browse demo:456\n  nb br\n\nShortcut Alias:\n  nb b\n```\n\n#### `completions`\n\n[↑](#-help) · See also:\n[Tab Completion](https://github.com/xwmx/nb/tree/master/etc),\n[`env`](#env)\n\n```text\nUsage:\n  nb completions (check | install [-d | --download] | uninstall)\n\nOptions:\n  -d, --download  Download the completion scripts and install.\n\nDescription:\n  Manage completion scripts.\n\nRead More:\n  https://github.com/xwmx/nb/blob/master/etc/README.md\n\nSee Also:\n  nb help env\n```\n\n#### `copy`\n\n[↑](#-help) · See also:\n[Moving & Renaming](#-moving--renaming),\n[`move`](#move)\n\n```text\nUsage:\n  nb copy ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[<notebook>:][<folder-path>/]<filename>]\n\nDescription:\n  Copy or duplicate an item.\n\nRead More:\n  https://github.com/xwmx/nb#-moving--renaming\n\nSee Also:\n  nb help move\n\nExamples:\n  nb copy 321\n  nb copy 456 example:\n  nb copy sample/demo.md\n\nAlias:\n  nb duplicate\n```\n\n#### `count`\n\n[↑&nbsp;](#-help)\n\n```text\nUsage:\n  nb count [<notebook>:][<folder-path>/]\n\nDescription:\n  Print the number of items in the first level of the current notebook,\n  <notebook>, or the folder at <folder-path>.\n```\n\n#### `delete`\n\n[↑](#-help) · See also:\n[Deleting](#deleting),\n[`add`](#add),\n[`browse`](#browse),\n[`edit`](#edit),\n[`move`](#move),\n[`show`](#show)\n\n```text\nUsage:\n  nb delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])...\n            [-f | --force]\n\nOptions:\n  -f, --force   Skip the confirmation prompt.\n\nDescription:\n  Delete one or more items.\n\nRead More:\n  https://github.com/xwmx/nb#deleting\n\nSee Also:\n  nb help add\n  nb help browse\n  nb help edit\n  nb help move\n  nb help show\n\nExamples:\n  nb delete 3\n  nb delete example.md\n  nb delete \"A Document Title\"\n  nb 3 delete --force\n  nb example:delete 12\n  nb delete example:12\n  nb example:12 delete\n  nb d 3\n  nb 3 d\n  nb d example:12\n  nb example:12 d\n\nAliases:\n  nb rm\n  nb trash\n\nShortcut Aliases:\n  nb d\n  nb -\n```\n\n#### `do`\n\n[↑](#-help) · See also:\n[Todos](#-todos),\n[Tasks](#%EF%B8%8F-tasks),\n[`tasks`](#tasks),\n[`todo`](#todo),\n[`undo`](#undo)\n\n```text\nUsage:\n  nb do ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n        [<task-number>]\n\nDescription:\n  Mark a todo or task as done.\n\nRead More:\n  https://github.com/xwmx/nb#-todos\n\nSee Also:\n  nb help tasks\n  nb help todo\n  nb help undo\n\nExamples:\n  nb do 123\n  nb do example:sample/321\n  nb do 543 7\n```\n\n#### `edit`\n\n[↑](#-help) · See also:\n[Editing](#editing),\n[`add`](#add),\n[`browse`](#browse),\n[`delete`](#delete),\n[`move`](#move),\n[`show`](#show)\n\n```text\nUsage:\n  nb edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [-c <content> | --content <content>] [--edit]\n          [-e <editor> | --editor <editor>] [--overwrite] [--prepend]\n\nOptions:\n  -c, --content <content>  Content to add to the item.\n  --edit                   Open the note in the editor before saving when\n                           content is piped or passed as an argument.\n  -e, --editor <editor>    Edit the note with <editor>, overriding the editor\n                           specified in the `$EDITOR` environment variable.\n  --overwrite              Overwrite existing content with <content> and\n                           standard input.\n  --prepend                Prepend <content> and standard input before\n                           existing content.\n\nDescription:\n  Open the specified note in `$EDITOR` or <editor> if specified.\n  Content piped to `nb edit` or passed using the `--content` option\n  is appended to the file without opening it in the editor,\n  unless the `--edit` flag is specified.\n\n  Non-text files are opened in your system's preferred app or program for\n  that file type.\n\nRead More:\n  https://github.com/xwmx/nb#editing\n\nSee Also:\n  nb help add\n  nb help browse\n  nb help delete\n  nb help move\n  nb help show\n\nExamples:\n  nb edit 3\n  nb edit example.md\n  nb edit \"A Document Title\"\n  echo \"Content to append.\" | nb edit 1\n  nb 3 edit\n  nb example:edit 12\n  nb edit example:12\n  nb example:12 edit\n  nb e 3\n  nb 3 e\n  nb e example:12\n  nb example:12 e\n\nShortcut Alias:\n  nb e\n```\n\n#### `env`\n\n[↑](#-help) · See also:\n[Installation](#installation),\n[`completions`](#completions),\n[`init`](#init),\n[`update`](#update),\n[`version`](#version)\n\n```text\nUsage:\n  nb env [install]\n\nSubcommands:\n  install  Install dependencies on supported systems.\n\nDescription:\n  Print program environment and configuration information, or install\n  dependencies.\n\nRead More:\n  https://github.com/xwmx/nb#installation\n\nSee Also:\n  nb help completions\n  nb help init\n  nb help update\n  nb help version\n```\n\n#### `export`\n\n[↑](#-help) · See also:\n[Import / Export](#%EF%B8%8F-import--export),\n[`browse`](#browse),\n[`import`](#import)\n\n```text\nUsage:\n  nb export ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <path> [-f | --force] [<pandoc options>...]\n  nb export notebook <name> [<path>]\n  nb export pandoc ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            [<pandoc options>...]\n\nOptions:\n  -f, --force   Skip the confirmation prompt when overwriting an existing file.\n\nSubcommands:\n  (default)     Export a file to <path>. If <path> has a different extension\n                than the source note, convert the note using `pandoc`.\n  notebook      Export the notebook <name> to the current directory or <path>.\n                Alias for `nb notebooks export`.\n  pandoc        Export the file to standard output or a file using `pandoc`.\n                `export pandoc` prints to standard output by default.\n\nDescription:\n  Export a file or notebook.\n\n  If Pandoc [1] is available, convert the note from its current format\n  to the format of the output file as indicated by the file extension\n  in <path>. Any additional arguments are passed directly to Pandoc.\n  See the Pandoc help information for available options.\n\n    1. https://pandoc.org/\n\nRead More:\n  https://github.com/xwmx/nb#%EF%B8%8F-import--export\n\nSee Also:\n  nb help browse\n  nb help import\n\nExamples:\n  # Export an Org note\n  nb export example.org /path/to/example.org\n\n  # Export a Markdown note to HTML and print to standard output\n  nb export pandoc example.md --from=markdown_strict --to=html\n\n  # Export a Markdown note to a .docx Microsoft Office Word document\n  nb export example.md /path/to/example.docx\n\n  # Export note 12 in the \"sample\" notebook to HTML\n  nb export sample:12 /path/to/example.html\n```\n\n#### `folders`\n\n[↑](#-help) · See also:\n[Folders](#-folders),\n[`add`](#add),\n[`delete`](#delete),\n[`list`](#list),\n[`ls`](#ls)\n\n```text\nUsage:\n  nb folders add [<notebook>:][<folder-path>/]<folder-name>\n  nb folders delete [<notebook>:][<folder-path>/]<folder-name>\n  nb folders <list-options>...\n\nSubcommands:\n  (default)  List folders.\n  add        Add a new folder.\n  delete     Delete a folder.\n\nDescription:\n  Add, delete, and list folders.\n\nRead More:\n  https://github.com/xwmx/nb#-folders\n\nSee Also:\n  nb help add\n  nb help delete\n  nb help list\n  nb help ls\n\nExamples:\n  nb folders\n  nb folders add example\n  nb folders delete example:sample\n\nAlias:\n  nb folder\n\nShortcut Alias:\n  nb f\n```\n\n#### `git`\n\n[↑](#-help) · See also:\n[Git Sync](#-git-sync),\n[History](#-revision-history),\n[`history`](#history),\n[`remote`](#remote),\n[`run`](#run),\n[`status`](#status),\n[`sync`](#sync)\n\n```text\nUsage:\n  nb git [checkpoint [<message>] | dirty]\n  nb git <git-options>...\n\nSubcommands:\n  checkpoint    Create a new git commit in the current notebook and sync with\n                the remote if `nb set auto_sync` is enabled.\n  dirty         0 (success, true) if there are uncommitted changes in the\n                current notebook. 1 (error, false) if the notebook is clean.\n\nDescription:\n  Run `git` commands within the current notebook directory.\n\nRead More:\n  https://github.com/xwmx/nb#-git-sync\n  https://github.com/xwmx/nb#-revision-history\n\nSee Also:\n  nb help history\n  nb help remote\n  nb help run\n  nb help status\n  nb help sync\n\nExamples:\n  nb git status\n  nb git diff\n  nb git log\n  nb example:git status\n```\n\n#### `help`\n\n[↑](#-help) · See also:\n[`nb help`](#nb-help)\n\n```text\nUsage:\n  nb help [<subcommand>] [-p | --print]\n  nb help [-c | --colors] | [-r | --readme] | [-s | --short] [-p | --print]\n\nOptions:\n  -c, --colors  View information about color themes and color settings.\n  -p, --print   Print to standard output / terminal.\n  -r, --readme  View the `nb` README file.\n  -s, --short   Print shorter help without subcommand descriptions.\n\nDescription:\n  Print the program help information. When a subcommand name is passed, print\n  the help information for the subcommand.\n\nExamples:\n  nb help\n  nb help add\n  nb help import\n  nb h notebooks\n  nb h e\n\nShortcut Alias:\n  nb h\n```\n\n#### `history`\n\n[↑](#-help) · See also:\n[History](#-revision-history),\n[Git Sync](#-git-sync),\n[`git`](#git),\n[`remote`](#remote),\n[`status`](#status),\n[`sync`](#sync)\n\n```text\nUsage:\n  nb history [<notebook>:][<folder-path>/][<id> | <filename> | <title>]\n\nDescription:\n  Display notebook history using `tig` [1] (if available) or `git log`.\n  When a note is specified, the history for that note is displayed.\n\n    1. https://github.com/jonas/tig\n\nRead More:\n  https://github.com/xwmx/nb#-revision-history\n  https://github.com/xwmx/nb#-git-sync\n\nSee Also:\n  nb help git\n  nb help remote\n  nb help status\n  nb help sync\n\nExamples:\n  nb history\n  nb history example.md\n  nb 3 history\n  nb history example:\n  nb example:history\n  nb example:history 12\n  nb history example:12\n  nb example:12 history\n```\n\n#### `import`\n\n[↑](#-help) · See also:\n[Import / Export](#%EF%B8%8F-import--export),\n[Images](#-images),\n[`add`](#add),\n[`export`](#export)\n\n```text\nUsage:\n  nb import [copy | download | move] (<path>... | <url>) [--convert]\n            [<notebook>:][<folder-path>/][<filename>]\n  nb import notebook <path> [<name>]\n\nOptions:\n  --convert  Convert HTML content to Markdown.\n\nSubcommands:\n  (default) Copy or download the file(s) at <path> or <url>.\n  copy      Copy the file(s) at <path> into the current notebook.\n  download  Download the file at <url> into the current notebook.\n  move      Move the file(s) at <path> into the current notebook.\n  notebook  Import the local notebook at <path> to make it global.\n\nDescription:\n  Copy, move, or download files into the current notebook or import\n  a local notebook to make it global.\n\nRead More:\n  https://github.com/xwmx/nb#%EF%B8%8F-import--export\n\nSee Also:\n  nb help add\n  nb help export\n\nExamples:\n  nb import ~/Pictures/example.png\n  nb import ~/Documents/example.docx\n  nb import https://example.com/example.pdf\n  nb example:import https://example.com/example.jpg\n  nb import ./*\n  nb import ./*.md\n  nb import ~/Pictures/example.png example-notebook:\n  nb import ~/Documents/example.docx example-folder/\n\nShortcut Alias:\n  nb i\n```\n\n#### `init`\n\n[↑](#-help) · See also: [`notebooks`](#notebooks)\n\n```text\nUsage:\n  nb init [<remote-url> [<branch>]] [--author] [--email <email>]\n          [--name <name>]\n\nOptions:\n  --author         Display the local email and name config prompt.\n  --email <email>  Set the local commit author email address to <email>.\n  --name  <name>   Set the local commit author name to <name>.\n\nDescription:\n  Initialize the initial \"home\" notebook and generate a configuration file at:\n\n      ~/.nbrc\n\n  Pass optional <remote-url> and <branch> arguments to create the initial\n  \"home\" notebook using a clone of an existing notebook.\n\nSee Also:\n  nb help notebooks\n\nExamples:\n  nb init\n  nb init https://github.com/example/example.git\n  nb init https://github.com/example/example.git example-branch\n```\n\n#### `list`\n\n[↑](#-help) · See also:\n[Listing & Filtering](#listing--filtering),\n[`browse`](#browse),\n[`ls`](#ls),\n[`pin`](#pin),\n[`search`](#search),\n[`unpin`](#unpin)\n\n```text\nUsage:\n  nb list [-e [<length>] | --excerpt [<length>]] [--filenames]\n          [-f | --folders-first] [-n <limit> | --limit <limit> | --<limit>]\n          [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n          [--paths] [-s | --sort] [-r | --reverse] [--tags]\n          [-t <type> | --type <type> | --<type>]\n          [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n\nOptions:\n  -e, --excerpt [<length>]        Print an excerpt <length> lines long under\n                                  each note's filename [default: 3].\n  --filenames                     Print the filename for each note.\n  -f, --folders-first             Print folders before other items.\n  -n, --limit <limit>, --<limit>  The maximum number of notes to list.\n  --no-id                         Don't include the id in list items.\n  --no-indicator                  Don't include the indicator in list items.\n  -p, --page <number>             The page to view in the list paginated by\n                                  a <limit> option or `nb set limit`.\n  --pager                         Display output in the pager.\n  --paths                         Print the full path to each item.\n  -s, --sort                      Order notes by id.\n  -r, --reverse                   List items in reverse order.\n  --tags                          List tags in the notebook or folder.\n  -t, --type <type>, --<type>     List items of <type>. <type> can be a file\n                                  extension or one of the following types:\n                                  archive, audio, book, bookmark, document,\n                                  folder, image, note, text, video\n\nDescription:\n  List notes in the current notebook.\n\n  When <id>, <filename>, <path>, or <title> are present, the listing for the\n  matching note is displayed. When no match is found, titles and filenames\n  are searched for any that match <query> as a case-insensitive regular\n  expression.\n\nRead More:\n  https://github.com/xwmx/nb#listing--filtering\n\nIndicators:\n  🔉  Audio\n  📖  Book\n  🔖  Bookmark\n  🔒  Encrypted\n  📂  Folder\n  🌄  Image\n  📄  PDF, Word, or Open Office document\n  📹  Video\n\nSee Also:\n  nb help browse\n  nb help ls\n  nb help pin\n  nb help search\n  nb help unpin\n\nExamples:\n  nb list\n  nb list example.md -e 10\n  nb list --excerpt --no-id\n  nb list --filenames --reverse\n  nb list \"^Example.*\"\n  nb list --10\n  nb list --type document\n  nb example:list\n```\n\n#### `ls`\n\n[↑](#-help) · See also:\n[Listing & Filtering](#listing--filtering),\n[`browse`](#browse),\n[`list`](#list),\n[`pin`](#pin),\n[`search`](#search),\n[`unpin`](#unpin)\n\n```text\nUsage:\n  nb ls [-a | --all] [-b | --browse] [-e [<length>] | --excerpt [<length>]]\n        [--filenames] [-f | --folders-first] [-g | --gui]\n        [-n <limit> | --limit <limit> | --<limit>] [--no-footer] [--no-header]\n        [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n        [--paths] [-s | --sort] [-r | --reverse] [--tags]\n        [-t <type> | --type <type> | --<type>]\n        [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n\nOptions:\n  -a, --all                       Print all items in the notebook. Equivalent\n                                  to no limit.\n  -b, --browse                    Open the specified item or current notebook\n                                  with `browse` in a terminal web browser.\n  -e, --excerpt [<length>]        Print an excerpt <length> lines long under\n                                  each note's filename [default: 3].\n  --filenames                     Print the filename for each note.\n  -f, --folders-first             Print folders before other items.\n  -g, --gui                       Open the specified item or current notebook\n                                  with `browse` in a GUI web browser.\n  -n, --limit <limit>, --<limit>  The maximum number of listed items.\n                                  [default: 15]\n  --no-footer                     Print without footer.\n  --no-header                     Print without header.\n  --no-id                         Don't include the id in list items.\n  --no-indicator                  Don't include the indicator in list items.\n  -p, --page <number>             The page to view in the list paginated by\n                                  a <limit> option or `nb set limit`.\n  --pager                         Display output in the pager.\n  --paths                         Print the full path to each item.\n  -s, --sort                      Order notes by id.\n  -r, --reverse                   List items in reverse order.\n  --tags                          List tags in the notebook or folder.\n  -t, --type <type>, --<type>     List items of <type>. <type> can be a file\n                                  extension or one of the following types:\n                                  archive, audio, book, bookmark, document,\n                                  folder, image, note, text, video\n\nDescription:\n  List notebooks and notes in the current notebook, displaying note titles\n  when available. `nb ls` is a combination of `nb notebooks` and\n  `nb list` in one view.\n\n  When <id>, <filename>, <path>, or <title> are present, the listing for the\n  matching note is displayed. When no match is found, titles and filenames\n  are searched for any that match <query> as a case-insensitive regular\n  expression.\n\n  Options are passed through to `list`. For more information, see\n  `nb help list`.\n\nRead More:\n  https://github.com/xwmx/nb#listing--filtering\n\nIndicators:\n  🔉  Audio\n  📖  Book\n  🔖  Bookmark\n  🔒  Encrypted\n  📂  Folder\n  🌄  Image\n  📄  PDF, Word, or Open Office document\n  📹  Video\n\nSee Also:\n  nb help browse\n  nb help list\n  nb help pin\n  nb help search\n  nb help unpin\n\nExamples:\n  nb\n  nb --all\n  nb ls\n  nb ls example.md -e 10\n  nb ls --excerpt --no-id\n  nb ls --reverse\n  nb ls \"^Example.*\"\n  nb ls --10\n  nb ls --type document\n  nb example:\n  nb example: -ae\n  nb example:ls\n\nShortcut Alias:\n  nb\n```\n\n#### `move`\n\n[↑](#-help) · See also:\n[Moving & Renaming](#-moving--renaming),\n[`copy`](#copy),\n[`delete`](#delete),\n[`edit`](#edit)\n\n```text\nUsage:\n  nb move ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          ([<notebook>:][<path>] | --reset | --to-bookmark | --to-note |\n          --to-title | --to-todo) [-f | --force]\n\nOptions:\n  -f, --force     Skip the confirmation prompt.\n  --reset         Reset the filename to the last modified timestamp.\n  --to-bookmark   Preserve the existing filename and replace the extension\n                  with \".bookmark.md\" to convert the note to a bookmark.\n  --to-note       Preserve the existing filename and replace the bookmark's\n                  \".bookmark.md\" extension with \".md\" to convert the bookmark\n                  to a Markdown note.\n  --to-title      Set the filename to the note title, lowercased with spaces\n                  and disallowed filename characters replaced with underscores.\n  --to-todo       Preserve the existing filename and replace the extension\n                  with \".todo.md\" to convert the note to a todo.\n\nDescription:\n  Move or rename a note. Move the note to <path> or change the file type.\n  When the file extension is omitted, the existing extension is used.\n  When only a file extension is specified, only the extension will be updated.\n\n  `nb move` and `nb rename` are aliases and can be used interchangeably.\n\nRead More:\n  https://github.com/xwmx/nb#-moving--renaming\n\nSee Also:\n  nb help copy\n  nb help delete\n  nb help edit\n\nExamples:\n  # move \"example.md\" to \"sample.org\"\n  nb move example.md sample.org\n\n  # rename note 3 (\"example.md\") to \"New Name.md\"\n  nb rename 3 \"New Name\"\n\n  # rename \"example.bookmark.md\" to \"New Name.bookmark.md\"\n  nb move example.bookmark.md \"New Name\"\n\n  # rename note 3 (\"example.md\") to a bookmark named \"example.bookmark.md\"\n  nb rename 3 --to-bookmark\n\n  # move note 12 into \"Sample Folder\" in the \"demo\" notebook\n  nb move example:12 demo:Sample\\ Folder/\n\n  # rename note 12 in the \"example\" notebook to \"sample.md\"\n  nb rename example:12 \"sample.md\"\n\n  # change the file extension of note 5 to .org\n  nb rename 5 .org\n\nAlias:\n  nb rename\n\nShortcut Alias:\n  nb mv\n```\n\n#### `notebooks`\n\n[↑](#-help) · See also:\n[Notebooks](#-notebooks),\n[`archive`](#archive),\n[`history`](#history),\n[`move`](#move),\n[`remote`](#remote),\n[`status`](#status),\n[`sync`](#sync),\n[`unarchive`](#unarchive),\n[`use`](#use)\n\n```text\nUsage:\n  nb notebooks [<name> | <query>] [--ar | --archived] [--global] [--local]\n               [--names] [--paths] [--unar | --unarchived]\n  nb notebooks add ([<name>] [<remote-url> [<branch>... | --all]]) [--author]\n                   [--email <email>] [--name <name>]\n  nb notebooks (archive | open | peek | status | unarchive) [<name>]\n  nb notebooks author [<name> | <path>] [--email <email>] [--name <name>]\n  nb notebooks current [--path | --selected | --filename [<filename>]]\n                       [--global | --local]\n  nb notebooks delete <name> [-f | --force]\n  nb notebooks (export <name> [<path>] | import <path>)\n  nb notebooks init [<path> [<remote-url> [<branch>]]] [--author]\n                    [--email <email>] [--name <name>]\n  nb notebooks rename <old-name> <new-name>\n  nb notebooks select <selector>\n  nb notebooks show (<name> | <path> | <selector>) [--ar | --archived]\n                    [--escaped | --name | --path | --filename [<filename>]]\n  nb notebooks use <name>\n\nOptions:\n  --all                    Add notebooks from all remote branches.\n  --ar, --archived         List archived notebooks, or return archival status\n                           with `show`.\n  --author                 Set the notebook's commit author email and name.\n  --email <email>          Set the notebook's commit author email to <email>.\n  --escaped                Print the notebook name with spaces escaped.\n  --filename [<filename>]  Print an available filename for the notebooks. When\n                           <filename> is provided, check for an existing file\n                           and provide a filename with an appended sequence\n                           number for uniqueness.\n  -f, --force              Skip the confirmation prompt.\n  --global                 List global notebooks or the notebook set globally\n                           with `use`.\n  --local                  Exit with 0 if current within a local notebook,\n                           otherwise exit with 1.\n  --name, --names          Print the notebook name.\n  --name <name>            Set the notebook's commit author name to <name>.\n  --path, --paths          Print the notebook path.\n  --selected               Exit with 0 if the current notebook differs from\n                           the current global notebook, otherwise exit with 1.\n  --unar, --unarchived     Only list unarchived notebooks.\n\nSubcommands:\n  (default)  List notebooks.\n  add        Create a new global notebook. When <remote-url> is specified,\n             create one or more new global notebook by cloning selected\n             or specified <branch>es from <remote-url>.\n             Aliases: `nb notebooks create`, `nb notebooks new`\n  archive    Set the current notebook or notebook <name> to \"archived\" status.\n  author     Configure the commit author email and name for the notebook.\n  current    Print the current notebook name or path.\n  delete     Delete a notebook.\n  export     Export the notebook <name> to the current directory or <path>,\n             making it usable as a local notebook.\n  import     Import the local notebook at <path> to make it global.\n  init       Create a new local notebook. Specify a <path> or omit to\n             initialize the current working directory as a local notebook.\n             Specify <remote-url> to clone an existing notebook.\n  open       Open the current notebook directory or notebook <name> in the\n             file browser, explorer, or finder.\n             Shortcut Alias: `o`\n  peek       Open the current notebook directory or notebook <name> in the\n             first tool found in the following list:\n             `ranger` [1], `mc` [2], `vifm` [3], `joshuto` [4], `lsd` [5],\n             `eza` [6], or `ls`.\n             Shortcut Alias: `p`\n  rename     Rename a notebook. Aliases: `move`, `mv`\n  select     Set the current notebook from a colon-prefixed selector.\n             Not persisted. Selection format: <notebook>:<identifier>\n  status     Print the archival status of the current notebook or\n             notebook <name>.\n  show       Show and return information about a specified notebook.\n  unarchive  Remove \"archived\" status from the current notebook or notebook <name>.\n  use        Switch to a notebook.\n\n    1. https://ranger.github.io/\n    2. https://en.wikipedia.org/wiki/Midnight_Commander\n    3. https://vifm.info/\n    4. https://github.com/kamiyaa/joshuto\n    5. https://github.com/lsd-rs/lsd\n    6. https://github.com/eza-community/eza\n\nDescription:\n  Manage notebooks.\n\nRead More:\n  https://github.com/xwmx/nb#-notebooks\n\nSee Also:\n  nb help archive\n  nb help history\n  nb help move\n  nb help remote\n  nb help status\n  nb help sync\n  nb help unarchive\n  nb help use\n\nExamples:\n  nb notebooks --names\n  nb notebooks add sample\n  nb notebooks add example https://github.com/example/example.git\n  nb nb current --path\n  nb nb archive example\n\nShortcut Aliases:\n  nb n\n  nb nb\n```\n\n#### `open`\n\n[↑](#-help) · See also:\n[Viewing Bookmarks](#viewing-bookmarks),\n[Images](#-images),\n[`bookmark`](#bookmark),\n[`browse`](#browse),\n[`peek`](#peek),\n[`show`](#show)\n\n```text\nUsage:\n  nb open ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\nDescription:\n  Open an item or notebook. When the item is a bookmark, open the bookmarked\n  page in your system's primary web browser. When the item is in a text format\n  or any other file type, `open` is the equivalent of `edit`. `open`\n  with a notebook opens the notebook folder in the system's file browser.\n\nRead More:\n  https://github.com/xwmx/nb#viewing-bookmarks\n\nSee also:\n  nb help bookmark\n  nb help browse\n  nb help peek\n  nb help show\n\nExamples:\n  nb open 3\n  nb open example.bookmark.md\n  nb 3 open\n  nb example:open 12\n  nb open example:12\n  nb example:12 open\n  nb o 3\n  nb 3 o\n  nb o example:12\n  nb example:12 o\n\nShortcut Alias:\n  nb o\n```\n\n#### `peek`\n\n[↑](#-help) · See also:\n[Viewing Bookmarks](#viewing-bookmarks),\n[`bookmark`](#bookmark),\n[`browse`](#browse),\n[`open`](#open),\n[`show`](#show)\n\n```text\nUsage:\n  nb peek ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\nDescription:\n  View an item or notebook in the terminal. When the item is a bookmark, view\n  the bookmarked page in your terminal web browser. When the note is in a text\n  format or any other file type, `peek` is the equivalent of `show`. When\n  used with a notebook, `peek` opens the notebook folder first tool found in\n  the following list: `ranger` [1], `mc` [2], `vifm` [3], `joshuto` [4],\n  `lsd` [5], eza` [6], or `ls`.\n\n    1. https://ranger.github.io/\n    2. https://en.wikipedia.org/wiki/Midnight_Commander\n    3. https://vifm.info/\n    4. https://github.com/kamiyaa/joshuto\n    5. https://github.com/lsd-rs/lsd\n    6. https://github.com/eza-community/eza\n\nRead More:\n  https://github.com/xwmx/nb#viewing-bookmarks\n\nSee also:\n  nb help bookmark\n  nb help browse\n  nb help open\n  nb help show\n\nExamples:\n  nb peek 3\n  nb peek example.bookmark.md\n  nb 3 peek\n  nb example:peek 12\n  nb peek example:12\n  nb example:12 peek\n  nb p 3\n  nb 3 p\n  nb p example:12\n  nb example:12 p\n\nAlias:\n  nb preview\n\nShortcut Alias:\n  nb p\n```\n\n#### `pin`\n\n[↑](#-help) · See also:\n[Pinning](#-pinning),\n[`browse`](#browse),\n[`list`](#list),\n[`ls`](#ls),\n[`unpin`](#unpin)\n\n```text\nUsage:\n  nb pin ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\nDescription:\n  Pin an item so it appears first in lists.\n\nRead More:\n  https://github.com/xwmx/nb#-pinning\n\nSee Also:\n  nb help browse\n  nb help list\n  nb help ls\n  nb help unpin\n\nExamples:\n  nb pin 123\n  nb pin example:sample/321\n```\n\n#### `plugins`\n\n[↑](#-help) · See also:\n[Plugins](#-plugins),\n[Plugin Help](#plugin-help),\n[`subcommands`](#subcommands-1)\n\n```text\nUsage:\n  nb plugins [<name>] [--paths] [--force]\n  nb plugins install [<path> | <url>] [--force]\n  nb plugins uninstall <name>\n\nOptions:\n  --paths  Print the full path to each plugin.\n\nSubcommands:\n  (default)  List plugins.\n  install    Install a plugin from a <path> or <url>.\n  uninstall  Uninstall the specified plugin.\n\nDescription:\n  Manage plugins and themes.\n\nRead More:\n  https://github.com/xwmx/nb#-plugins\n\nPlugin Extensions:\n  .nb-theme   Plugins defining color themes.\n  .nb-plugin  Plugins defining new subcommands and functionality.\n\nSee Also:\n  nb help subcommands\n\nAlias:\n  nb plugin\n```\n\n#### `remote`\n\n[↑](#-help) · See also:\n[Git Sync](#-git-sync),\n[History](#-revision-history),\n[`history`](#history),\n[`notebooks`](#notebooks),\n[`status`](#status),\n[`sync`](#sync)\n\n```text\nUsage:\n  nb remote\n  nb remote branches [<url>]\n  nb remote delete <branch-name>\n  nb remote remove\n  nb remote rename [<branch-name>] <name>\n  nb remote reset <branch-name>\n  nb remote set <url> [<branch-name>]\n\nSubcommands:\n  (default)  Print the remote URL and branch for the notebook.\n  branches   List branches on the current or given remote.\n  delete     Delete <branch-name> from the remote.\n             Caveat: only orphan branches can be deleted.\n  remove     Remove the remote URL from the notebook.\n             Alias: `unset`\n  rename     Rename the current orphan branch or <branch-name> to <name>.\n             Caveat: only orphan branches can be renamed.\n  reset      Reset <branch-name> on the remote to a blank initial state.\n  set        Set the remote URL and branch for the notebook.\n\nDescription:\n  Configure the remote repository URL and branch for the current notebook.\n\nRead More:\n  https://github.com/xwmx/nb#-git-sync\n  https://github.com/xwmx/nb#-revision-history\n\nSee Also:\n  nb help history\n  nb help notebooks\n  nb help status\n  nb help sync\n\nExamples:\n  nb remote set https://github.com/example/example.git\n  nb remote remove\n  nb example-notebook:remote set https://github.com/example/example.git\n```\n\n#### `run`\n\n[↑](#-help) · See also: [`git`](#git), [`shell`](#shell)\n\n```text\nUsage:\n  nb run <command> [<arguments>...]\n\nDescription:\n  Run shell commands within the current notebook directory.\n\nSee Also:\n  nb help git\n  nb help shell\n\nExamples:\n  nb run ls -la\n  nb run find . -name 'example*'\n  nb run rg example\n```\n\n#### `search`\n\n[↑](#-help) · See also:\n[Search](#-search),\n[`browse`](#browse),\n[`list`](#list),\n[`ls`](#ls)\n\n```text\nUsage:\n  nb search ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <query>... [-a | --all] [--and <query>] [--not <query>] [--or <query>]\n            [-l | --list] [--path] [-t <tag1>,<tag2>... | --tag <tag1>,<tag2>...]\n            [-t | --tags] [--type <type> | --<type>] [--utility <name>]\n\nOptions:\n  -a, --all                     Search all unarchived notebooks.\n  --and <query>                 Add a AND query.\n  -l, --list                    Print the id, filename, and title listing for\n                                each matching file, without the excerpt.\n  --not <query>                 Add a NOT query.\n  --or  <query>                 Add an OR query.\n  --path                        Print the full path for each matching file.\n  -t, --tag <tag1>,<tag2>...    A comma-separated list of tags.\n  -t, --tags                    List all tags found in the notebook.\n  --type <type>, --<type>       Search items of <type>. <type> can be a file\n                                extension or one of the following types:\n                                note, bookmark, document, archive, image,\n                                video, audio, folder, text\n  --utility <name>              The name of the search utility to search with.\n\nDescription:\n  Perform a full text search.\n\n  Multiple query arguments are treated as AND queries, returning items that\n  match all queries. AND queries can also be specified with the --and <query>\n  option. The --or <query> option can be used to specify an OR query,\n  returning items that match at least one of the queries. --not <query>\n  excludes items matching <query>.\n\n  `nb search` is powered by Git's built-in `git grep` tool. `nb` also\n  supports performing searches with alternative search tools using the\n  --utility <name> option.\n\n  Supported alternative search tools:\n    1. `rga`   https://github.com/phiresky/ripgrep-all\n    2. `rg`    https://github.com/BurntSushi/ripgrep\n    3. `ag`    https://github.com/ggreer/the_silver_searcher\n    4. `ack`   https://beyondgrep.com/\n    5. `grep`  https://en.wikipedia.org/wiki/Grep\n\nRead More:\n  https://github.com/xwmx/nb#-search\n\nSee Also:\n  nb help browse\n  nb help list\n  nb help ls\n\nExamples:\n  # search current notebook for \"example query\"\n  nb search \"example query\"\n\n  # search the notebook \"example\" for \"example query\"\n  nb search example: \"example query\"\n\n  # search all notebooks for \"example query\" and list matching items\n  nb search \"example query\" --all --list\n\n  # search for items matching \"Example\" AND \"Demo\"\n  nb search \"Example\" \"Demo\"\n  nb search \"Example\" --and \"Demo\"\n\n  # search for items matching \"Example\" OR \"Sample\"\n  nb search \"Example|Sample\"\n  nb search \"Example\" --or \"Sample\"\n\n  # search for items matching both \"Example\" AND \"Sample\", and NOT \"Demo\"\n  nb search \"Example\" --and \"Sample\" --not \"Demo\"\n\n  # search with a regular expression\n  nb search \"\\d\\d\\d-\\d\\d\\d\\d\"\n\n  # search for tags\n  nb search --tag tag1 -t tag2\n\n  # search the current notebook for \"example query\"\n  nb q \"example query\"\n\n  # search all notebooks for \"example query\" and list matching items\n  nb q -la \"example query\"\n\nShortcut Alias:\n  nb q\n```\n\n#### `settings`\n\n[↑](#-help) · See also:\n[`set` & `settings`](#%EF%B8%8F-set--settings),\n[Variables](#-variables),\n[`unset`](#unset)\n\n```text\nUsage:\n  nb set [<name> [<value>] | <number> [<value>]]\n  nb settings colors [<number> | themes]\n  nb settings edit\n  nb settings get   (<name> | <number>)\n  nb settings list  [--long]\n  nb settings set   (<name> | <number>) <value>\n  nb settings show  (<name> | <number>)\n  nb settings unset (<name> | <number>)\n\nSubcommands:\n  (default)  Open the settings prompt, to <name> or <number>, if present.\n             When <value> is also present, assign <value> to the setting.\n  colors     Print a table of available colors and their xterm color numbers.\n             When <number> is provided, print the number in its color.\n             `settings colors themes` prints a list of installed themes.\n  edit       Open the `nb` configuration file in `$EDITOR`.\n  get        Print the value of a setting.\n  list       List information about available settings.\n  set        Assign <value> to a setting.\n  show       Print the help information and current value of a setting.\n  unset      Unset a setting, returning it to the default value.\n\nDescription:\n  Configure `nb`. Use `nb settings set` to customize a setting and\n  `nb settings unset` to restore the default for a setting.\n\n  Use the `nb set` alias to quickly assign values to settings:\n\n    nb set color_theme blacklight\n    nb set limit 40\n\nRead More:\n  https://github.com/xwmx/nb#%EF%B8%8F-set--settings\n\nSee Also:\n  nb help unset\n\nExamples:\n  nb settings\n  nb set 5 \"org\"\n  nb set color_primary 105\n  nb set unset color_primary\n  nb set color_secondary unset\n  nb settings colors\n  nb settings colors 105\n  nb set limit 15\n\nAlias:\n  nb set\n```\n\n##### `auto_sync`\n\n[↑](#-help) · See also: [Git Sync](#-git-sync)\n\n```text\n[1]  auto_sync\n     ---------\n     By default, operations that trigger a git commit like `add`, `edit`,\n     and `delete` will sync notebook changes to the remote repository, if\n     one is set. To disable this behavior, set this to \"0\".\n\n     • Default Value: 1\n```\n\n##### `color_primary`\n\n[↑](#-help) · See also: [Color Themes](#-color-themes), [Custom Color Themes](#custom-color-themes)\n\n```text\n[2]  color_primary\n     -------------\n     The primary color used to highlight identifiers and messages.\n\n     • Supported Values: xterm color numbers 0 through 255.\n     • Default Value:    68 (blue) for 256 color terminals,\n                         4  (blue) for  8  color terminals.\n```\n\n##### `color_secondary`\n\n[↑](#-help) · See also: [Color Themes](#-color-themes), [Custom Color Themes](#custom-color-themes)\n\n```text\n[3]  color_secondary\n     ---------------\n     The color used for lines and footer elements.\n\n     • Supported Values: xterm color numbers 0 through 255.\n     • Default Value:    8\n```\n\n##### `color_theme`\n\n[↑](#-help) · See also: [Color Themes](#-color-themes)\n\n```text\n[4]  color_theme\n     -----------\n     The color theme.\n\n     To view screenshots of the built-in themes, visit:\n\n         https://git.io/nb-docs-color-themes\n\n     `nb` supports custom, user-defined themes. To learn more, run:\n\n         nb help --colors\n\n     To change the syntax highlighting theme, use:\n\n         nb set syntax_theme\n\n     • Available themes:\n\n         blacklight\n         console\n         desert\n         electro\n         forest\n         nb\n         ocean\n         raspberry\n         smoke\n         unicorn\n         utility\n\n     • Default Value: nb\n```\n\n##### `default_extension`\n\n[↑](#-help) · See also: [Adding](#adding)\n\n```text\n[5]  default_extension\n     -----------------\n     The default extension to use for note files. Change to \"org\" for\n     Org files, \"rst\" for reStructuredText, \"txt\" for plain text, or\n     whatever you prefer.\n\n     • Default Value: md\n```\n\n##### `editor`\n\n[↑](#-help) · See also: [Editing](#editing), [Adding](#adding)\n\n```text\n[6]  editor\n     ------\n     The command line text editor used by `nb`.\n\n     • Example Values:\n\n         atom\n         code\n         emacs\n         hx\n         macdown\n         mate\n         micro\n         nano\n         pico\n         subl\n         vi\n         vim\n```\n\n##### `encryption_tool`\n\n[↑](#-help) · See also: [Password-Protected Encrypted Notes and Bookmarks](#password-protected-encrypted-notes-and-bookmarks)\n\n```text\n[7]  encryption_tool\n     ---------------\n     The tool used for encrypting notes.\n\n     • Supported Values: openssl, gpg\n     • Default Value:    openssl\n```\n\n##### `footer`\n\n[↑](#-help) · See also: [Listing & Filtering](#listing--filtering)\n\n```text\n[8]  footer\n     ------\n     By default, `nb` and `nb ls` include a footer with example commands.\n     To hide this footer, set this to \"0\".\n\n     • Default Value: 1\n```\n\n##### `header`\n\n[↑](#-help) · See also: [Listing & Filtering](#listing--filtering)\n\n```text\n[9]  header\n     ------\n     By default, `nb` and `nb ls` include a header listing available notebooks.\n     Set the alignment, or hide the header with \"0\".\n\n     • Supported Values:\n\n         0  Hide Header\n         1  Dynamic Alignment\n              - Left justified when list is shorter than terminal width.\n              - Center aligned when list is longer than terminal width.\n         2  Center Aligned (default)\n         3  Left Justified\n\n     • Default Value: 1\n```\n\n##### `limit`\n\n[↑](#-help) · See also: [Listing & Filtering](#listing--filtering)\n\n```text\n[10] limit\n     -----\n     The maximum number of items included in the `nb` and `nb ls` lists.\n     Set to `auto` to automatically limit output to the current terminal height.\n     Subtract an auto limit offset for multiline prompts with `auto-<number>`.\n\n     • Example Values:\n\n       15\n       auto\n       auto-2\n\n     • Default Value: 15\n```\n\n##### `nb_dir`\n\n[↑&nbsp;](#-help)\n\n```text\n[11] nb_dir\n     ------\n     The location of the directory that contains the notebooks.\n\n     For example, to sync all notebooks with Dropbox, create a folder at\n     `~/Dropbox/Notes` and run: `nb settings set nb_dir ~/Dropbox/Notes`\n\n     • Default Value: ~/.nb\n```\n\n##### `syntax_theme`\n\n[↑](#-help) · See also: [Terminal Syntax Highlighting](#terminal-syntax-highlighting-theme)\n\n```text\n[12] syntax_theme\n     ------------\n     The syntax highlighting theme. View examples with:\n\n         bat --list-themes\n\n     • Available themes:\n\n         1337\n         DarkNeon\n         Dracula\n         GitHub\n         Monokai Extended\n         Monokai Extended Bright\n         Monokai Extended Light\n         Monokai Extended Origin\n         Nord\n         OneHalfDark\n         OneHalfLight\n         Solarized (dark)\n         Solarized (light)\n         Sublime Snazzy\n         TwoDark\n         ansi-dark\n         ansi-light\n         base16\n         base16-256\n         gruvbox\n         gruvbox-light\n         gruvbox-white\n         zenburn\n\n     • Default Value: base16\n```\n\n#### `shell`\n\n[↑](#-help) · See also:\n[Interactive Shell](#-interactive-shell),\n[`run`](#run)\n\n```text\nUsage:\n  nb shell [<subcommand> [<options>...] | --clear-history]\n\nOptions:\n  --clear-history  Clear the `nb` shell history.\n\nDescription:\n  Start the `nb` interactive shell. Type \"exit\" to exit.\n\n  `nb shell` recognizes all `nb` subcommands and options, providing\n  a streamlined, distraction-free approach for working with `nb`.\n\n  When <subcommand> is present, the command will run as the shell is opened.\n\nRead More:\n  https://github.com/xwmx/nb#-interactive-shell\n\nSee Also:\n  nb help run\n\nExample:\n  $ nb shell\n  nb> ls 3\n  [3] Example\n\n  nb> edit 3 --content \"New content.\"\n  Updated: [3] Example\n\n  nb> notebook\n  home\n\n  nb> exit\n  $\n```\n\n#### `show`\n\n[↑](#-help) · See also:\n[Viewing](#viewing),\n[Images](#-images),\n[`browse`](#browse),\n[`open`](#open),\n[`peek`](#peek)\n\n```text\nUsage:\n  nb show ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[-a | --added] | [--authors] | [-b | --browse] | --filename | --id |\n          --info-line | --path | [-p | --print] | --relative-path | [-r |\n          --render] | --title | --type [<type>] | [-u | --updated]] [--no-color]\n  nb show <notebook>\n\nOptions:\n  -a, --added      Print the date and time when the item was added.\n  --authors        List the git commit authors of an item.\n  -b, --browse     Open the item with `nb browse`.\n  --filename       Print the filename of the item.\n  --id             Print the id number of the item.\n  --info-line      Print the id, filename, and title of the item.\n  --no-color       Show without syntax highlighting.\n  --path           Print the full path of the item.\n  -p, --print      Print to standard output / terminal.\n  --relative-path  Print the item's path relative within the notebook.\n  -r, --render     Use `pandoc` [1] to render the file to HTML and display\n                   in the terminal web browser. If either `pandoc` or a\n                   browser are unavailable, `-r` / `--render` is ignored.\n  --title          Print the title of the note.\n  --type [<type>]  Print the file extension or, when <type> is specified,\n                   return true if the item matches <type>. <type> can be a\n                   file extension or one of the following types:\n                   archive, audio, bookmark, document, folder, image,\n                   text, video\n  -u, --updated    Print the date and time of the last recorded change.\n\nDescription:\n  Show an item or notebook. Notes in text file formats can be rendered or\n  printed to standard output. Non-text files are opened in your system's\n  preferred app or program for that file type.\n\n  By default, the item is opened using `less` or the program configured\n  in the `$PAGER` environment variable. Use the following keys to navigate\n  in `less` (see `man less` for more information):\n\n    Key               Function\n    ---               --------\n    mouse scroll      Scroll up or down\n    arrow up or down  Scroll one line up or down\n    f                 Jump forward one window\n    b                 Jump back one window\n    d                 Jump down one half window\n    u                 Jump up one half window\n    /<query>          Search for <query>\n    n                 Jump to next <query> match\n    q                 Quit\n\n  To skip the pager and print to standard output, use the `-p` / `--print`\n  option.\n\n  `-r` / `--render` automatically uses either `w3m` [2] or `links` [3].\n  To specify a preferred browser, set the `$BROWSER` environment variable\n  in your .bashrc, .zshrc, or equivalent, e.g.: export BROWSER=\"links\"\n\n  If `bat` [4], `highlight` [5], or Pygments [6] is installed, notes are\n  printed with syntax highlighting.\n\n    1. https://pandoc.org/\n    2. https://en.wikipedia.org/wiki/W3m\n    3. https://en.wikipedia.org/wiki/Links_(web_browser)\n    4. https://github.com/sharkdp/bat\n    5. http://www.andre-simon.de/doku/highlight/en/highlight.php\n    6. https://pygments.org/\n\nRead More:\n  https://github.com/xwmx/nb#viewing\n\nSee Also:\n  nb help browse\n  nb help open\n  nb help peek\n\nExamples:\n  nb show 1\n  nb show example.md --render\n  nb show \"A Document Title\" --print --no-color\n  nb 1 show\n  nb example:show 12\n  nb show example:12\n  nb example:12 show\n  nb s 1\n  nb 1 s\n  nb s example:12\n  nb example:12 s\n\nAlias:\n  nb view\n\nShortcut Alias:\n  nb s\n```\n\n#### `status`\n\n[↑](#-help) · See also:\n[Git Sync](#-git-sync),\n[History](#-revision-history),\n[`archive`](#archive),\n[`history`](#history),\n[`notebooks`](#notebooks),\n[`remote`](#remote),\n[`sync`](#sync),\n[`unarchive`](#unarchive)\n\n```text\nUsage:\n  nb status [<notebook>]\n\nDescription:\n  Print archival, git, and remote status for the current notebook or <notebook>.\n\nRead More:\n  https://github.com/xwmx/nb#-git-sync\n  https://github.com/xwmx/nb#-revision-history\n\nSee Also:\n  nb help archive\n  nb help history\n  nb help notebooks\n  nb help remote\n  nb help sync\n  nb help unarchive\n\nExamples:\n  nb status\n  nb status example\n\nShortcut Alias:\n  nb st\n```\n\n#### `subcommands`\n\n[↑](#-help) · See also:\n[Plugins](#-plugins),\n[`plugins`](#plugins)\n\n```text\nUsage:\n  nb subcommands [add <name>...] [alias <name> <alias>]\n                 [describe <name> <usage>]\n\nSubcommands:\n  add       Add a new subcommand.\n  alias     Create an <alias> of a given subcommand <name>, with linked help.\n            Note that aliases must also be added with `subcommands add`.\n  describe  Set the usage text displayed with `nb help <subcommand>`.\n            This can be assigned as a heredoc, which is recommended, or\n            as a string argument.\n\nDescription:\n  List, add, alias, and describe subcommands. New subcommands, aliases, and\n  descriptions are not persisted, so `add`, `alias`, `describe` are\n  primarily for plugins.\n\nRead More:\n  https://github.com/xwmx/nb#-plugins\n\nSee Also:\n  nb help plugins\n```\n\n#### `sync`\n\n[↑](#-help) · See also:\n[Git Sync](#-git-sync),\n[History](#-revision-history),\n[`history`](#history),\n[`notebooks`](#notebooks),\n[`remote`](#remote),\n[`status`](#status)\n\n```text\nUsage:\n  nb sync [-a | --all]\n\nOptions:\n  -a, --all   Sync all unarchived notebooks.\n\nDescription:\n  Sync the current notebook with its remote.\n\nPrivate Repositories and Git Credentials:\n  Syncing with private repositories requires configuring git to not prompt\n  for credentials.\n\n  For repositories cloned over HTTPS, credentials can be cached with git.\n  For repositories cloned over SSH, keys can be added to the ssh-agent.\n\n  More Information:\n    https://github.com/xwmx/nb#private-repositories-and-git-credentials\n\nSync Conflict Resolution:\n  When `nb sync` encounters a conflict in a text file and can't merge\n  overlapping local and remote changes, both versions are saved in the\n  file, separated by git conflict markers. Use `nb edit` to remove the\n  conflict markers and delete any unwanted text.\n\n  When `nb sync` encounters a conflict in a binary file, such as an\n  encrypted note or bookmark, both versions of the file are saved in the\n  notebook as individual files, one with `--conflicted-copy` appended to\n  the filename.\n\n  More Information:\n    https://github.com/xwmx/nb#sync-conflict-resolution\n\nRead More:\n  https://github.com/xwmx/nb#-git-sync\n  https://github.com/xwmx/nb#-revision-history\n\nSee Also:\n  nb help history\n  nb help notebooks\n  nb help remote\n  nb help status\n\nExamples:\n  nb sync\n  nb sync --all\n```\n\n#### `tasks`\n\n[↑](#-help) · See also:\n[Tasks](#%EF%B8%8F-tasks),\n[Todos](#-todos),\n[`do`](#do),\n[`todo`](#todo),\n[`undo`](#undo)\n\n```text\nUsage:\n  nb tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n           [open | closed]\n\nDescription:\n  List tasks in todos, notebooks, folders, and other items.\n\nRead More:\n  https://github.com/xwmx/nb#%EF%B8%8F-tasks\n  https://github.com/xwmx/nb#-todos\n\nSee Also:\n  nb help do\n  nb help todo\n  nb help undo\n\nExamples:\n  nb tasks\n  nb tasks open\n  nb tasks closed\n  nb tasks 123\n  nb example:tasks open\n  nb tasks closed sample/\n  nb tasks closed demo:456\n\nShortcut Alias:\n  nb t\n```\n\n#### `todo`\n\n[↑](#-help) · See also:\n[Todos](#-todos),\n[`do`](#do),\n[`tasks`](#tasks),\n[`undo`](#undo)\n\n```text\nUsage:\n  nb todo add [<notebook>:][<folder-path>/][<filename>] <title>\n              [--description <description>] [--due <date>]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]\n              [--tags <tag1>,<tag2>...] [--task <title>...]\n  nb todo delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  nb todo do   ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  nb todo undo ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  nb todos [<notebook>:][<folder-path>/] [open | closed] [--tags <tag1>,<tag2>...]\n  nb todos tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n                 [open | closed]\n\nOptions:\n  --description <description>         Description for the todo.\n  --due <date>                        Due date and / or time for the todo.\n  -r, --related (<url> | <selector>)  Related URL or selector.\n  --tags <tag1>,<tag2>...             Comma-separated list of tags.\n  --task <title>                      Task to add to the tasklist.\n\nSubcommands:\n  (default)   List todos.\n  add         Add a new todo.\n              Shortcut Aliases: `nb todo a`, `nb todo +`\n  delete      Delete a todo.\n              Shortcut Aliases: `nb todo -`\n  do          Mark a todo or task as done.\n  tasks       List tasks in todos, notebooks, folders, and other item.\n  undo        Unmark a todo or task as done.\n\nDescription:\n  Manage todos and tasks.\n\nRead More::\n  https://github.com/xwmx/nb#-todos\n\nSee Also:\n  nb help do\n  nb help tasks\n  nb help undo\n\nExamples:\n  nb todo add \"Example todo title.\"\n  nb todo add Example todo title.\n  nb todo add \"Sample title.\" --tags tag1,tag2 --related demo:567\n  nb todos\n  nb todos open\n  nb todos closed\n  nb example:todos open\n  nb todos closed sample/\n\nAlias:\n  nb todos\n\nShortcut Alias:\n  nb to\n```\n\n#### `unarchive`\n\n[↑](#-help) · See also:\n[Archiving Notebooks](#archiving-notebooks),\n[`archive`](#archive),\n[`notebooks`](#notebooks),\n[`status`](#status)\n\n```text\nUsage:\n  nb unarchive [<name>]\n\nDescription:\n  Remove \"archived\" status from the current notebook or notebook <name>.\n\n  This is an alias for `nb notebooks unarchive`.\n\nRead More:\n  https://github.com/xwmx/nb#archiving-notebooks\n\nSee Also:\n  nb help archive\n  nb help notebooks\n  nb help status\n\nExamples:\n  nb unarchive\n  nb unarchive example\n\nShortcut Alias:\n  nb unar\n```\n\n#### `undo`\n\n[↑](#-help) · See also:\n[Todos](#-todos),\n[Tasks](#%EF%B8%8F-tasks),\n[`do`](#do),\n[`tasks`](#tasks),\n[`todo`](#todo)\n\n```text\nUsage:\n  nb undo ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [<task-number>]\n\nDescription:\n  Mark a todo or task as not done.\n\nRead More:\n  https://github.com/xwmx/nb#-todos\n\nSee Also:\n  nb help do\n  nb help tasks\n  nb help todo\n\nExamples:\n  nb undo 123\n  nb undo example:sample/321\n  nb undo 543 7\n```\n\n#### `unpin`\n\n[↑](#-help) · See also:\n[Pinning](#-pinning),\n[`browse`](#browse),\n[`list`](#list),\n[`ls`](#ls),\n[`pin`](#pin)\n\n```text\nUsage:\n  nb unpin ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\nDescription:\n  Unpin a pinned item.\n\nRead More:\n  https://github.com/xwmx/nb#-pinning\n\nSee Also:\n  nb help browse\n  nb help list\n  nb help ls\n  nb help pin\n\nExamples:\n  nb unpin 123\n  nb unpin example:sample/321\n```\n\n#### `unset`\n\n[↑](#-help) · See also:\n[`set` & `settings`](#%EF%B8%8F-set--settings),\n[`settings`](#settings)\n\n```text\nUsage:\n  nb unset (<name> | <number>)\n\nDescription:\n  Unset a setting, returning it to the default value.\n\n  This is an alias for `nb settings unset`.\n\nRead More:\n  https://github.com/xwmx/nb#%EF%B8%8F-set--settings\n\nSee Also:\n  nb help settings\n\nExamples:\n  nb unset color_primary\n  nb unset 2\n\nAlias:\n  nb reset\n```\n\n#### `update`\n\n[↑](#-help) · See also:\n[Installation](#installation),\n[`env`](#env),\n[`version`](#version)\n\n```text\nUsage:\n  nb update\n\nDescription:\n  Update `nb` to the latest version. You will be prompted for\n  your password if administrator privileges are required.\n\n  If `nb` was installed using a package manager like npm or\n  Homebrew, use the package manager's upgrade functionality instead\n  of this command.\n\nRead More:\n  https://github.com/xwmx/nb#installation\n\nSee Also:\n  nb help env\n  nb help version\n```\n\n#### `use`\n\n[↑](#-help) · See also:\n[Notebooks](#-notebooks),\n[`notebooks`](#notebooks)\n\n```text\nUsage:\n  nb use <notebook>\n\nDescription:\n  Switch to the specified notebook. Shortcut for `nb notebooks use`.\n\nRead More:\n  https://github.com/xwmx/nb#-notebooks\n\nSee Also:\n  nb help notebooks\n\nExample:\n  nb use example\n\nShortcut Alias:\n  nb u\n```\n\n#### `version`\n\n[↑](#-help) · See also:\n[Installation](#installation),\n[`env`](#env),\n[`update`](#update)\n\n```text\nUsage:\n  nb version\n\nDescription:\n  Display version information.\n\nSee Also:\n  nb help env\n  nb help update\n```\n\n### Plugin Help\n\n<p>\n  <sup>\n    <a href=\"#-help\">↑</a> ·\n    <a href=\"#-plugins\">Plugins</a>,\n    <a href=\"#plugins\"><code>nb plugins</code></a>\n  </sup>\n</p>\n\n<div align=\"center\">\n  <a href=\"#backlink\">backlink</a>&nbsp;·\n  <a href=\"#bump\">bump</a>&nbsp;·\n  <a href=\"#clip\">clip</a>&nbsp;·\n  <a href=\"#daily\">daily</a>&nbsp;·\n  <a href=\"#ebook\">ebook</a>&nbsp;·\n  <a href=\"#example\">example</a>&nbsp;·\n  <a href=\"#weather\">weather</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#-help\">&nbsp;↑&nbsp;</a>\n</div>\n\n#### `backlink`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/backlink.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb backlink [--force]\n\nDescription:\n  Add backlinks to notes. Crawl notes in a notebook for [[wiki-style links]]\n  and append a \"Backlinks\" section to each linked file that lists passages\n  referencing the note.\n\n  To link to a note from within another note, surround the title of the\n  target note in double square brackets:\n\n      Example with link to [[Target Note Title]] in content.\n\n  Depends on note-link-janitor:\n    https://github.com/andymatuschak/note-link-janitor\n\n    Requirement: every note in the notebook must have a title.\n```\n\n#### `bump`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/bump.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb bump [<notebook>:][<folder-path>/][<id>][<filename>][<title>]\n\nDescription:\n  Bump an item to the top of the list.\n\n  `bump` updates the item's modification timestamp without editing the item\n  or creating a new commit.\n\nExamples:\n  nb bump 123\n  nb bump example:sample/456\n\nAlias:\n  nb touch\n```\n\n#### `clip`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/clip.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb clip [<notebook>:][<id> | <filename> | <path> | <title> | <extension>]\n\nDescription:\n  Save the clipboard contents and copy contents of text or markdown items to\n  the clipboard.\n\n  When called with no arguments or when no matching file is found, the text\n  content on the clipboard is saved to a new file, pending a prompt.\n\nExamples:\n  # copy the content of item 123 to the clipboard\n  nb clip 123\n\n  # save the clipboard contents to a new file with a `.js` file extension\n  nb clip .js\n\n  # save the clipboard contents as a new `.cr` file in the \"snippets\" notebook\n  nb snippets:clip .cr\n```\n\n#### `daily`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/daily.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb daily [<content>] [--prev [<number>]]\n\nOptions:\n  --prev [<number>]   List previous days and show day by previous <number>.\n\nDescription:\n  Add notes to a daily log. When called without arguments, the current day's\n  log is displayed. When passed `<content>`, a new timestamped entry is added\n  to the current day's log, which is created if it doesn't yet exist.\n\n  Previous day's logs can be listed with the `--prev` option. View a previous\n  day's log by passing its `<number>` in the list.\n\nExamples:\n  nb daily \"Example note content.\"\n  nb daily\n  nb daily --prev\n  nb daily --prev 3\n```\n\n#### `ebook`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/ebook.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb ebook new <name>\n  nb ebook publish\n\nSubcommands:\n  ebook new      Create a new notebook initialized with placeholder files for\n                 authoring an ebook.\n  ebook publish  Generate a .epub file using the current notebook contents.\n\nDescription:\n  Ebook authoring with `nb`.\n\n  `nb ebook new` creates a notebook populated with initial placeholder files\n  for creating an ebook. Edit the title page and chapters using normal `nb`\n  commands, then use `nb ebook publish` to generate an epub file.\n\n  Chapters are expected to be markdown files with sequential numeric\n  filename prefixes for ordering:\n\n    01-example.md\n    02-sample.md\n    03-demo.md\n\n  Create new chapters with `nb add`:\n\n    nb add --filename \"04-chapter4.md\"\n\n  title.txt contains the book metadata in a YAML block. For more information\n  about the fields for this file, visit:\n\n    https://pandoc.org/MANUAL.html#epub-metadata\n\n  stylesheet.css contains base styling for the generated ebook. It can be used\n  as it is and can also be edited using `nb edit`.\n\n  As with all `nb` notebooks, changes are recorded automatically in git,\n  providing automatic version control for all ebook content, source, and\n  metadata files.\n\n  Generated epub files are saved in the notebook and can be previewed in the\n  terminal with `nb show`. Export a generated epub file with `nb export`:\n\n    nb export 12 .\n\nMore info:\n  https://pandoc.org/epub.html\n```\n\n#### `example`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/example.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb example\n\nDescription:\n  Print \"Hello, World!\"\n```\n\n#### `weather`\n\n[↑&nbsp;](#plugin-help)\n\n##### Install\n\n```bash\nnb plugins install https://github.com/xwmx/nb/blob/master/plugins/weather.nb-plugin\n```\n\n##### Help\n\n```text\nUsage:\n  nb weather [<option>...]\n\nDescription:\n  Display weather information from wttr.in.\n\nMore Info:\n  https://github.com/chubin/wttr.in\n  https://wttr.in\n\nExamples:\n  nb weather\n  nb weather Tokyo\n  nb weather lax\n\nShortcut Alias:\n  nb w\n```\n\n### `$` Variables\n\n<p>\n  <sup>\n    <a href=\"#overview\">↑</a> ·\n    <a href=\"#%EF%B8%8F-set--settings\"><code>set</code>&<code>settings</code></a>,\n    <a href=\"#settings\"><code>nb settings</code></a>\n  </sup>\n</p>\n\n<div align=\"center\">\n  <sup>\n    <a href=\"#editor-1\"><code>$EDITOR</code></a>&nbsp;·\n    <a href=\"#nb_ace_enabled\"><code>$NB_ACE_ENABLED</code></a>&nbsp;·\n    <a href=\"#nb_ace_md_gutter\"><code>$NB_ACE_MD_GUTTER</code></a>&nbsp;·\n    <a href=\"#nb_ace_relative_line_numbers\"><code>$NB_ACE_RELATIVE_LINE_NUMBERS</code></a>&nbsp;·\n    <a href=\"#nb_ace_soft_tabs\"><code>$NB_ACE_SOFT_TABS</code></a>&nbsp;·\n    <a href=\"#nb_ace_keyboard\"><code>$NB_ACE_KEYBOARD</code></a>&nbsp;·\n    <a href=\"#nb_audio_tool\"><code>$NB_AUDIO_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_auto_sync\"><code>$NB_AUTO_SYNC</code></a>&nbsp;·\n    <a href=\"#nb_browse_markdown_reader\"><code>$NB_BROWSE_MARKDOWN_READER</code></a>&nbsp;·\n    <a href=\"#nb_browse_server_tool\"><code>$NB_BROWSE_SERVER_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_browse_support_links\"><code>$NB_BROWSE_SUPPORT_LINKS</code></a>&nbsp;·\n    <a href=\"#nb_browser\"><code>$NB_BROWSER</code></a>&nbsp;·\n    <a href=\"#nb_color_primary\"><code>$NB_COLOR_PRIMARY</code></a>&nbsp;·\n    <a href=\"#nb_color_secondary\"><code>$NB_COLOR_SECONDARY</code></a>&nbsp;·\n    <a href=\"#nb_color_theme\"><code>$NB_COLOR_THEME</code></a>&nbsp;·\n    <a href=\"#nb_custom_css\"><code>$NB_CUSTOM_CSS</code></a>&nbsp;·\n    <a href=\"#nb_custom_css_url\"><code>$NB_CUSTOM_CSS_URL</code></a>&nbsp;·\n    <a href=\"#nb_custom_javascript\"><code>$NB_CUSTOM_JAVASCRIPT</code></a>&nbsp;·\n    <a href=\"#nb_custom_javascript_url\"><code>$NB_CUSTOM_JAVASCRIPT_URL</code></a>&nbsp;·\n    <a href=\"#nb_data_tool\"><code>$NB_DATA_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_default_extension\"><code>$NB_DEFAULT_EXTENSION</code></a>&nbsp;·\n    <a href=\"#nb_dir-1\"><code>$NB_DIR</code></a>&nbsp;·\n    <a href=\"#nb_directory_tool\"><code>$NB_DIRECTORY_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_editor\"><code>$NB_EDITOR</code></a>&nbsp;·\n    <a href=\"#nb_encryption_tool\"><code>$NB_ENCRYPTION_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_folders_first\"><code>$NB_FOLDERS_FIRST</code></a>&nbsp;·\n    <a href=\"#nb_footer\"><code>$NB_FOOTER</code></a>&nbsp;·\n    <a href=\"#nb_gui_browser\"><code>$NB_GUI_BROWSER</code></a>&nbsp;·\n    <a href=\"#nb_header\"><code>$NB_HEADER</code></a>&nbsp;·\n    <a href=\"#nb_image_tool\"><code>$NB_IMAGE_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_indicator_audio\"><code>$NB_INDICATOR_AUDIO</code></a>&nbsp;·\n    <a href=\"#nb_indicator_bookmark\"><code>$NB_INDICATOR_BOOKMARK</code></a>&nbsp;·\n    <a href=\"#nb_indicator_document\"><code>$NB_INDICATOR_DOCUMENT</code></a>&nbsp;·\n    <a href=\"#nb_indicator_ebook\"><code>$NB_INDICATOR_EBOOK</code></a>&nbsp;·\n    <a href=\"#nb_indicator_encrypted\"><code>$NB_INDICATOR_ENCRYPTED</code></a>&nbsp;·\n    <a href=\"#nb_indicator_folder\"><code>$NB_INDICATOR_FOLDER</code></a>&nbsp;·\n    <a href=\"#nb_indicator_image\"><code>$NB_INDICATOR_IMAGE</code></a>&nbsp;·\n    <a href=\"#nb_indicator_pinned\"><code>$NB_INDICATOR_PINNED</code></a>&nbsp;·\n    <a href=\"#nb_indicator_todo\"><code>$NB_INDICATOR_TODO</code></a>&nbsp;·\n    <a href=\"#nb_indicator_todo_done\"><code>$NB_INDICATOR_TODO_DONE</code></a>&nbsp;·\n    <a href=\"#nb_indicator_video\"><code>$NB_INDICATOR_VIDEO</code></a>&nbsp;·\n    <a href=\"#nb_limit\"><code>$NB_LIMIT</code></a>&nbsp;·\n    <a href=\"#nb_mathjax_enabled\"><code>$NB_MATHJAX_ENABLED</code></a>&nbsp;·\n    <a href=\"#nb_markdown_tool\"><code>$NB_MARKDOWN_TOOL</code></a>&nbsp;·\n    <a href=\"#nb_pinned_pattern\"><code>$NB_PINNED_PATTERN</code></a>&nbsp;·\n    <a href=\"#nb_server_host\"><code>$NB_SERVER_HOST</code></a>&nbsp;·\n    <a href=\"#nb_server_port\"><code>$NB_SERVER_PORT</code></a>&nbsp;·\n    <a href=\"#nb_syntax_theme\"><code>$NB_SYNTAX_THEME</code></a>&nbsp;·\n    <a href=\"#nb_user_agent\"><code>$NB_USER_AGENT</code></a>&nbsp;·\n    <a href=\"#nbrc_path\"><code>$NBRC_PATH</code></a>\n    </sup>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#overview\">&nbsp;↑&nbsp;</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n[Settings](#%EF%B8%8F-set--settings) are set in the `~/.nbrc` configuration\nfile using environment variables. Settings can be set through `nb`\nusing [`set` & `settings`](#%EF%B8%8F-set--settings) or by\nassigning a value to the variable directly in the `~/.nbrc` file, which\ncan be opened in your `$EDITOR` with [`nb settings edit`](#settings).\n\nExample assignment:\n\n```bash\nexport NB_INDICATOR_PINNED=\"🔮\"\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$EDITOR`\n\n```text\nThe terminal editor command for editing items.\n\nSee also: `$NB_EDITOR`\n\nExample Values: 'code', 'emacs', 'hx', 'vim'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ACE_ENABLED`\n\n```text\nDefault: '0'\n\nExample Values: '0', '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ACE_MD_GUTTER`\n\n```text\nDefault: '1'\n\nExample Values: '0', '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ACE_RELATIVE_LINE_NUMBERS`\n\n```text\nDefault: '0'\n\nExample Values: '0', '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ACE_SOFT_TABS`\n\n```text\nDefault: '0'\n\nExample Values: '0', '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ACE_KEYBOARD`\n\n```text\nDefault: 'ace'\n\nExample Values: 'emacs', 'sublime', 'vim', 'vscode'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_AUDIO_TOOL`\n\n```text\nDefault: '' (first available)\n\nExample Values: `mplayer`, `afplay`\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_AUTO_SYNC`\n\n```text\nDefault: '1'\n\nWhen set to '1', each `_git checkpoint()` call will automativally run\n`$_ME sync`. To disable this behavior, set the value to '0'.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_BROWSE_MARKDOWN_READER`\n\n```text\n$NB_BROWSE_MARKDOWN_READER\n\nDefault: 'markdown+emoji+raw_html+east_asian_line_breaks'\n\nThe Pandoc reader, including extensions, to use for converting Markdown to\nHTML in `nb browse`.\n\nMore information:\n  https://pandoc.org/MANUAL.html#extensions\n  https://pandoc.org/MANUAL.html#general-options-1\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_BROWSE_SERVER_TOOL`\n\n```text\nDefault: first available: 'ncat', 'socat', 'netcat', 'bash' (5.2+ only), ''\n\nThe tool used to listen on the server host and port and respond to\nincoming requests.\n\nSupported Values: 'accept', 'bash', 'nc', 'ncat', netcat', 'socat'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_BROWSE_SUPPORT_LINKS`\n\n```text\nDefault: '1'\n\nSet to '0' to hide the 'Donate' and 'Sponsor' links in `nb browse`.\n\nSupported Values: '0' '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_BROWSER`\n\n```text\nDefault: value of $BROWSER\n\nExample Values: 'links', 'w3m'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_COLOR_PRIMARY`\n\n```text\nDefault: Value depends on terminal capabilities.\n\nSet highlighting color. This should be set to an xterm color number, usually\na value between 1 and 256. For a table of common colors and their numbers\nrun:\n\n  nb settings colors\n\nSupported Values: [0..255+]\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_COLOR_SECONDARY`\n\n```text\nDefault: '8'\n\nColor for lines and other accents. This should be set to an xterm color\nnumber, usually a value between 1 and 256. For a table of common colors and\ntheir numbers, run:\n\n  nb settings colors\n\nSupported Values: [0..255+]\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_COLOR_THEME`\n\n```text\nDefault: 'nb'\n\nThe color theme.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `NB_CUSTOM_CSS`\n\n```text\nDefault: ''\n\nA style sheet to be included inline in a `<style>` element on pages\nrendered by `nb browse`.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `NB_CUSTOM_CSS_URL`\n\n```text\nDefault: ''\n\nA URL to a style sheet to be included in a `<link rel=\"stylesheet\">`\nelement on pages rendered by `nb browse`.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `NB_CUSTOM_JAVASCRIPT`\n\n```text\nDefault: ''\n\nA block of JavaScript code to be included inline in a `<script>` element\non pages rendered by `nb browse`.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `NB_CUSTOM_JAVASCRIPT_URL`\n\n```text\nDefault: ''\n\nA URL to a JavaScript file to be included in a `<script src=//url>`\nelement on pages rendered by `nb browse`.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_DATA_TOOL`\n\n```text\nDefault: '' (first available)\n\nExample Values: 'visidata', 'sc-im'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_DEFAULT_EXTENSION`\n\n```text\nDefault: 'md'\n\nExample Values: 'md' 'org'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_DIR`\n\n```text\nDefault: `$HOME/.nb`\n\nThe location of the directory that contains the notebooks.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_DIRECTORY_TOOL`\n\n```text\nDefault: '' (nb browse)\n\nExample Values: 'ranger', 'mc'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_EDITOR`\n\n```text\nDefault: the value of `$EDITOR`\n\nThe terminal editor command for editing items. Overrides the value of\n`$EDITOR` in the environment.\n\nSee also: `$EDITOR`\n\nExample Values: 'code', 'emacs', 'hx', 'vim'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_ENCRYPTION_TOOL`\n\n```text\nDefault: 'openssl'\n\nSupported Values: 'gpg' 'openssl'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_FOLDERS_FIRST`\n\n```text\nDefault: '0'\n\nWhen set to '1', folders are printed before other items in `nb`, `nb ls`,\nand `nb browse`.\n\nSupported Values: '0' '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_FOOTER`\n\n```text\nDefault: '1'\n\nSupported Values: '0' '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_GUI_BROWSER`\n\n```text\nDefault: ''\n\nExample Value: 'firefox'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_HEADER`\n\n```text\nDefault: '2'\n\nSupported Values: '0' '1' '2' '3'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_IMAGE_TOOL`\n\n```text\nDefault: '' (first available)\n\nExample Values: 'imgcat', 'catimg'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_AUDIO`\n\n```text\nDefault: 🔉\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_BOOKMARK`\n\n```text\nDefault: 🔖\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_DOCUMENT`\n\n```text\nDefault: 📄\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_EBOOK`\n\n```text\nDefault: 📖\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_ENCRYPTED`\n\n```text\nDefault: 🔒\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_FOLDER`\n\n```text\nDefault: 📂\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_IMAGE`\n\n```text\nDefault: 🌄\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_PINNED`\n\n```text\nDefault: 📌\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_TODO`\n\n```text\nDefault: ✔️\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_TODO_DONE`\n\n```text\nDefault: ✅\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_INDICATOR_VIDEO`\n\n```text\nDefault: 📹\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_LIMIT`\n\n```text\nDefault: '15'\n\nSet to a positive number to limit the output of `nb` and `nls` to that value.\nSet to \"auto\" to automatically limit output to the current terminal height.\nSubtract an auto limit offset for multiline prompts with `auto-<number>`.\n\nSupported Values:\n  - <number>\n  - auto-<number>\n  - auto-<number>\n\nExample Values:\n  - 15\n  - auto\n  - auto-2\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_MATHJAX_ENABLED`\n\n```text\nDefault: '0'\n\nExample Values: '0', '1'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_MARKDOWN_TOOL`\n\n```text\nDefault: '' (default pager)\n\nSupported Values: 'bat', 'glow', 'mdcat', 'mdless', 'mdv'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_PINNED_PATTERN`\n\n```text\nExample Value: '#pinned'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_SERVER_HOST`\n\n```text\nDefault: 'localhost'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_SERVER_PORT`\n\n```text\nDefault: '6789'\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_SYNTAX_THEME`\n\n```text\nDefault: 'base16'\n\nSupported Values: Theme names listed with `bat --list-themes`\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NB_USER_AGENT`\n\n```text\nDefault: '' (`curl` or `wget` default user agent)\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n##### `$NBRC_PATH`\n\n```text\nDefault: `$HOME/.nbrc`\n\nThe location of the .nbrc configuration file.\n```\n\n<p>\n  <sup>\n    <a href=\"#-variables\">↑</a>\n  </sup>\n</p>\n\n## Specifications\n\n<div align=\"center\">\n  <a href=\"#nb-markdown-bookmark-file-format\">Bookmark File Format</a>&nbsp;·\n  <a href=\"#nb-markdown-todo-file-format\">Todo File Format</a>&nbsp;·\n  <a href=\"#nb-notebook-specification\">Notebook Specification</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n<div align=\"center\">\n  <a href=\"#-help\">&nbsp;↑&nbsp;</a>\n</div>\n\n<p align=\"center\"></p><!-- spacer -->\n\n### `nb` Markdown Bookmark File Format\n\n<p>\n  <sup>\n    <a href=\"#specifications\">↑</a> ·\n    <a href=\"#-bookmarks\">Bookmarks</a>,\n    <a href=\"#bookmark\"><code>nb bookmark</code></a>\n  </sup>\n</p>\n\n#### Extension\n\n`.bookmark.md`\n\n#### Description\n\n`nb` bookmarks are Markdown documents created using a combination of\nuser input and data from the bookmarked page. The `nb` bookmark format\nis intended to be readable, editable, convertible, renderable, and\nclearly organized for greatest accessibility.\n\nBookmarks are identified by a `.bookmark.md` file extension. The\nbookmark URL is the first URL in the file within `<` and `>` characters.\nTo create a minimally valid bookmark file with [`nb add`](#add):\n\n```bash\nnb add example.bookmark.md --content \"<https://example.com>\"\n```\n\nThis creates a file with the name `example.bookmark.md` containing:\n\n```markdown\n<https://example.com>\n```\n\nIn a full bookmark, information is separated into sections,\nwith each bookmark section indicated by a Markdown `h2` heading.\n\n#### Example\n\n````markdown\n# Example Title (example.com)\n\n<https://example.com>\n\n## Description\n\nExample description.\n\n## Quote\n\n> Example quote line one.\n>\n> Example quote line two.\n\n## Comment\n\nExample comment.\n\n## Related\n\n- <https://example.net>\n- <https://example.org>\n- [[example:123]]\n\n## Tags\n\n#tag1 #tag2\n\n## Content\n\nExample Title\n=============\n\nThis domain is for use in illustrative examples in documents. You may\nuse this domain in literature without prior coordination or asking for\npermission.\n\n[More information\\...](https://www.iana.org/domains/example)\n\n## Source\n\n```html\n<!doctype html>\n<html>\n  <head>\n    <title>Example Title</title>\n    <meta name=\"description\" content=\"Example description.\" />\n  </head>\n\n  <body>\n    <h1>Example Title</h1>\n    <p>\n      This domain is for use in illustrative examples in documents. You may\n      use this domain in literature without prior coordination or asking for\n      permission.\n    </p>\n    <p>\n      <a href=\"https://www.iana.org/domains/example\">More information...</a>\n    </p>\n  </body>\n</html>\n```\n````\n\n#### Elements\n\n##### Title\n\n`Optional`\n\nA [Markdown atx-style `h1` heading\n](https://daringfireball.net/projects/markdown/syntax#header)\ncontaining the content of the bookmarked page's\nHTML `<title>` or [`og:title`](https://ogp.me/) tag, if present, followed by\nthe domain within parentheses.\n\n###### Examples\n\n```markdown\n# Example Title (example.com)\n```\n```markdown\n# (example.com)\n```\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### URL\n\n`Required`\n\nThe URL of the bookmarked resource, with surrounding angle brackets\n(`<`, `>`).\n\nThis is the only required element.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Description`\n\n`Optional`\n\nA text element containing the content of the bookmarked page's meta description\nor [`og:description`](https://ogp.me/) tag, if present.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Quote`\n\n`Optional`\n\nA markdown quote block containing a user-specified excerpt from the bookmarked\nresource.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Comment`\n\n`Optional`\n\nA text element containing a comment written by the user.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Related`\n\n`Optional`\n\nA Markdown list of\nangle bracketed (`<`, `>`) URLs and\n[[[wiki-style links]]](#-linking)\nthat are related to the bookmarked resource.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Tags`\n\n`Optional`\n\nA list of [#tags](#-tagging)\nrepresented as `#hashtags`\nseparated by individual spaces.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Content`\n\n`Optional`\n\nThe full content of the bookmarked page, converted to Markdown.\n\nThe `## Content` section makes the page content available locally for\nfull-text search and viewing of page content. The source HTML is converted\nto inline Markdown to reduce the amount of markup, make it more readable,\nand make page content easily viewable in the terminal as markdown and\nstreamlined HTML in web browsers.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Source`\n\n`Optional`\n\nA fenced code block with `html` language identifier containing the source HTML\nfrom the bookmarked page.\n\n`nb` does not save the page source by default. `nb` uses this section to save\nthe source HTML page content when `pandoc` is not available to convert it to\nMarkdown.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-bookmark-file-format\">↑</a>\n  </sup>\n</p>\n\n### `nb` Markdown Todo File Format\n\n<p>\n  <sup>\n    <a href=\"#specifications\">↑</a> ·\n    <a href=\"#-todos\">Todos</a>,\n    <a href=\"#todo\"><code>nb todo</code></a>\n  </sup>\n</p>\n\n#### Extension\n\n`.todo.md`\n\n#### Description\n\n`nb` todos are Markdown documents identified by a `.todo.md` file extension.\nTodos contain a Markdown `h1` heading\nstarting with a Markdown checkbox (`[ ]` / `[x]`) indicating\nthe todo completion state, followed by the todo title.\n\n#### Example\n\n```markdown\n# [x] Example todo title.\n\n## Due\n\n2100-01-01\n\n## Description\n\nExample description.\n\n## Tasks\n\n- [ ] One\n- [x] Two\n- [ ] Three\n\n## Related\n\n- [[example:123]]\n- <https://example.org>\n\n## Tags\n\n#tag1 #tag2\n```\n\n#### Elements\n\n##### Title\n\n`Required`\n\nA [Markdown atx-style `h1` heading\n](https://daringfireball.net/projects/markdown/syntax#header)\ncontaining a Markdown checkbox followed by the todo title.\nAn `x` within the checkbox (`[ ]`) indicates that the todo is done.\n\n###### Examples\n\n```markdown\n# [ ] Example undone / open todo title.\n```\n```markdown\n# [x] Example done / closed todo title.\n```\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Due`\n\n`Optional`\n\nA text element containing a value referencing\na due date and / or time for the todo.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Description`\n\n`Optional`\n\nA text element containing a description for the todo.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Tasks`\n\n`Optional`\n\nA markdown tasklist containing sub-tasks for the todo.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Related`\n\n`Optional`\n\nA Markdown list of\nangle bracketed (`<`, `>`) URLs and\n[[[wiki-style links]]](#-linking)\nthat are related to the todo.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n##### `## Tags`\n\n`Optional`\n\nA list of [#tags](#-tagging)\nrepresented as `#hashtags`\nseparated by individual spaces.\n\n<p>\n  <sup>\n    <a href=\"#nb-markdown-todo-file-format\">↑</a>\n  </sup>\n</p>\n\n### `nb` Notebook Specification\n\n<p>\n  <sup>\n    <a href=\"#specifications\">↑</a> ·\n    <a href=\"#-notebooks\">Notebooks</a>,\n    <a href=\"#notebooks\"><code>nb notebooks</code></a>\n  </sup>\n</p>\n\nAn `nb` notebook is a directory that contains a valid `.git` directory,\nindicating that it has been initialized as a git repository, and a `.index`\nfile in the root directory.\n\n#### `.index` Files\n\nA notebook folder index is a text file named `.index` in any folder\nwithin the notebook directory. `.index` contains a list of visible\nfilenames within the folder, one per line, and the line number of each\nfilename represents the id. `.index` files are included in the git repository\nso ids are preserved across systems.\n\n##### Operations\n\n<dl>\n  <dt><code>add</code></dt>\n  <dd>Append a new line containing the filename to <code>.index</code>.</dd>\n  <dt><code>update</code></dt>\n  <dd>Overwrite the existing filename in <code>.index</code> with the new filename.</dd>\n  <dt><code>delete</code></dt>\n  <dd>Delete the filename, preserving the newline, leaving the line blank.</dd>\n  <dt><code>reconcile</code></dt>\n  <dd>Remove duplicate lines, preserving existing blank lines, <code>add</code> entries for new files, and <code>delete</code> entries for deleted files.</dd>\n  <dt><code>rebuild</code></dt>\n  <dd>Delete and rebuild <code>.index</code>, listing files by most recently modified, reversed.</dd>\n</dl>\n\n##### `index` Subcommand\n\n`nb` manages the `.index` of each folder within a notebook using an internal\n`index` subcommand.\n\n###### `nb help index`\n\n```text\nUsage:\n  nb index add <filename>\n  nb index delete <filename>\n  nb index edit\n  nb index get_basename <id>\n  nb index get_id <filename>\n  nb index get_max_id\n  nb index rebuild [--ancestors]\n  nb index reconcile [--ancestors] [--commit]\n  nb index show\n  nb index update <existing-filename> <new-filename>\n  nb index verify\n  nb index <subcommand> <options>... [<folder-path>]\n\nOptions:\n  --ancestors   Perform the action on all folders within the notebook that\n                are ancestors of the current folder.\n  --commit      Commit changes to git.\n\nSubcommands:\n  add           Add <filename> to the index.\n  delete        Delete <filename> from the index.\n  edit          Open the index file in `$EDITOR`.\n  get_basename  Print the filename / basename at the specified <id>.\n  get_id        Get the id for <filename>.\n  get_max_id    Get the maximum id for the folder.\n  rebuild       Rebuild the index, listing files by last modified, reversed.\n                Some ids will change. Prefer `nb index reconcile`.\n  reconcile     Remove duplicates and update index for added and deleted files.\n  show          Print the index.\n  update        Overwrite the <existing-filename> entry with <new-filename>.\n  verify        Verify that the index matches the folder contents.\n\nDescription:\n  Manage the index for the current folder or the folder at <folder-path>,\n  which can be passed as the final argument to any `index` subcommand.\n\n  `index` is used internally by `nb` and using it manually will\n  probably corrupt the index. If something goes wrong with an index,\n  fix it with `nb index reconcile`.\n\n  An index is a text file named '.index' in any folder within a notebook.\n  .index contains a list of filenames and the line number of each filename\n  represents the id. .index files are included in the git repository so\n  ids are preserved across systems.\n```\n\n<p>\n  <sup>\n    <a href=\"#nb-notebook-specification\">↑</a>\n  </sup>\n</p>\n\n#### `.pindex` Files\n\nAny folder may contain an optional plain text file named `.pindex`\ncontaining a list of basenames from that folder, one per line, that should\nbe treated as [pinned](#-pinning), meaning they appear first in some\nlist operations, including `nb` and [`nb ls`](#ls). Entries are added to a\n`.pindex` file with [`nb pin`](#pin) and removed with [`nb unpin`](#unpin).\n\n<p>\n  <sup>\n    <a href=\"#nb-notebook-specification\">↑</a>\n  </sup>\n</p>\n\n#### Archived Notebooks\n\nA notebook is considered [archived](#archiving-notebooks)\nwhen it contains a file named `.archived`\nat the root level of the notebook directory.\n\n<p>\n  <sup>\n    <a href=\"#nb-notebook-specification\">↑</a>\n  </sup>\n</p>\n\n## Tests\n\nWith more than 2,200 tests spanning tens of thousands of lines,\n`nb` is really mostly a\n[test suite](https://github.com/xwmx/nb/tree/master/test).\nTests run continuously [via GitHub Actions](https://github.com/xwmx/nb/actions)\non recent versions of both Ubuntu and macOS to account for differences between\nBSD and GNU tools and Bash versions.\nTo run the tests locally, install\n[Bats](https://github.com/bats-core/bats-core)\nand the [recommended dependencies](#optional),\nthen run `bats test` within the project root directory. Run groups of\ntests with globbing, e.g., `bats test/browse*` and `bats test/folders*`.\n\n<div align=\"center\">\n  <span>\n  <a href=\"#overview\">&nbsp;↑&nbsp;</a>\n  </span>\n\n  <br/>\n</div>\n\n---\n\n<div align=\"center\">\n  <span>\n  Copyright (c) 2015-present ·\n  <a href=\"https://www.williammelody.com/\">William Melody</a> ·\n  <a href=\"https://github.com/xwmx/nb/blob/master/LICENSE\">AGPLv3</a>\n  </span>\n\n  <br/>\n  <br/>\n</div>\n\n<div align=\"center\">\n  <span>\n  <a href=\"https://xwmx.github.io/nb\">xwmx.github.io/nb</a>&nbsp;·\n  <a href=\"https://github.com/xwmx/nb\">github.com/xwmx/nb</a>\n  </span>\n\n  <br/>\n  <br/>\n</div>\n\n<div align=\"center\">\n  <span>\n  📝🔖🔒🔍📔\n  </span>\n\n  <br/>\n  <br/>\n</div>\n\n<div align=\"center\">\n  <span>\n  <a href=\"#top\">&nbsp;↑&nbsp;</a>\n  </span>\n</div>\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "nb",
          "type": "blob",
          "size": 706.27734375,
          "content": "#!/usr/bin/env bash\n###############################################################################\n# __          _\n# \\ \\   _ __ | |__\n#  \\ \\ | '_ \\| '_ \\\n#  / / | | | | |_) |\n# /_/  |_| |_|_.__/\n#\n# [nb] Command line and local web note-taking, bookmarking, and archiving with\n# plain text data storage, encryption, filtering and search, pinning, #tagging,\n# Git-backed versioning and syncing, Pandoc-backed conversion, global and local\n# notebooks, customizable color themes, [[wiki-style linking]], plugins, and\n# more in a single portable, user-friendly script.\n#\n# ❯ https://github.com/xwmx/nb\n# ❯ https://xwmx.github.io/nb\n#\n# Based on Bash Boilerplate: https://github.com/xwmx/bash-boilerplate\n#\n# Copyright (c) 2015-present William Melody ┯ hi@williammelody.com\n#                                           ┕ https://www.williammelody.com\n#\n# Overview\n# ========\n#\n# - Configuration and Setup\n# - Helpers: Group 1 (alphabetical order)\n# - Subcommands: Group 1 (alphabetical order)\n# - Plugins\n# - Option Parsing\n# - _main() / Dispatch\n# - Configuration: Group 2\n# - Helpers: Group 2 (alphabetical order)\n# - Subcommands: Group 2 (alphabetical order)\n# - Subcommands: Group 3 (alphabetical order)\n#\n# Target Bash Version:              5   (target,   recommended)\n# Minimum Recommended Bash Version: 4   (fallback, recommended)\n# Minimum Tested Bash Version:      3.2 (fallback, deprecated)\n#\n# AGPLv3\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero General Public License as\n# published by the Free Software Foundation, either version 3 of the\n# License, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n###############################################################################\n\n###############################################################################\n# Shell Options & Strict Mode\n#\n# More Information:\n#   https://github.com/xwmx/bash-boilerplate#bash-strict-mode\n#   https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html\n#   https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html\n#   https://tldp.org/LDP/abs/html/options.html\n###############################################################################\n\nset -o errexit\nset -o noglob\nset -o nounset\nset -o pipefail\n\nset +o noclobber\n\nshopt -s extglob\n\nIFS=$'\\n\\t'\n\n###############################################################################\n# Environment\n###############################################################################\n\n# $_VERSION\n#\n# The most recent program version.\n_VERSION=\"7.15.1\"\n\n# $_ME\n#\n# This program's basename.\n_ME=\"$(basename \"${0}\")\"\n\n# $_MY_DIR\n#\n# The directory containing $_ME.\n_MY_DIR=\"$(cd \"$(dirname \"${0}\")\"; pwd)\"\n\n# $_MY_PATH\n#\n# This program's full path.\n_MY_PATH=\"${_MY_DIR}/${_ME}\"\n\n# $_CURRENT_WORKING_DIR\n#\n# The current working directory in which the program was invoked.\n_CURRENT_WORKING_DIR=\"${PWD}\"\n\n# $_REPO\n#\n# The <user>/<repo> identifier for this project's git repository.\n_REPO=\"xwmx/nb\"\n\n# $_REPO_MAIN_BRANCH\n#\n# The name of the main branch in this project's git repository.\n_REPO_MAIN_BRANCH=\"master\"\n\n# $_REPO_RAW_URL\n#\n# The base URL for raw files.\n_REPO_RAW_URL=\"https://raw.githubusercontent.com/${_REPO}/${_REPO_MAIN_BRANCH}\"\n\n###############################################################################\n# Utilities\n###############################################################################\n\n# _command_exists()\n#\n# Usage:\n#   _command_exists <name>\n#\n# Exit / Error / Return Status:\n#   0 (success, true) If a command <name> is defined in the current environment.\n#   1 (error,  false) If not.\n#\n# More Information:\n#   http://stackoverflow.com/a/677212\n_command_exists() {\n  if [[ \"${1:-}\" == \"w3m\" ]]\n  then # Detect WSL 1 (https://stackoverflow.com/a/38859331), where w3m errors.\n    [[ -f /proc/version ]] && grep -q Micro /proc/version && return 1\n  fi\n\n  hash \"${1}\" 2>/dev/null\n}\n\n# _contains()\n#\n# Usage:\n#   _contains <query> <list-item>...\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If the item is included in the list.\n#   1 (error,  false)  If not.\n#\n# Example:\n#   _contains \"${_query}\" \"${_list[@]}\"\n_contains() {\n  local _query=\"${1:-}\"\n\n  shift\n\n  if [[ -z \"${_query}\"  ]] ||\n     [[ -z \"${*:-}\"     ]]\n  then\n    return 1\n  fi\n\n  local __element=\n  for   __element in \"${@}\"\n  do\n    [[ \"${__element}\" == \"${_query}\" ]] && return 0\n  done\n\n  return 1\n}\n\n# _resolve_symlink()\n#\n# Usage:\n#   _resolve_symlink <path>\n#\n# Description:\n#   Resolve the real path or target for a symbolic link.\n_resolve_symlink() {\n  if hash \"realpath\" 2>/dev/null\n  then\n    realpath \"${@:-}\"\n  else\n    readlink \"${@:-}\"\n  fi\n}\n\n# _sed_i()\n#\n# Usage:\n#   _sed_i <sed-argument>...\n#\n# Description:\n#   `sed -i` takes an extension on macOS, but that extension can cause errors\n#   in GNU `sed`. Detect which `sed` is available and call it with the\n#   appropriate arguments.\n#\n# More Information:\n#   https://stackoverflow.com/q/43171648\n#   https://stackoverflow.com/a/16746032\n_sed_i() {\n  local _usage=\n\n  if _usage=\"$(sed --help 2>&1)\"\n  then # GNU\n    sed -i      \"${@}\"\n  else # BSD\n    if [[ \"${_usage:-}\" =~ unknown\\ option ]]\n    then # OpenBSD\n      sed -i''  \"${@}\"\n    else # FreeBSD, macOS\n      sed -i '' \"${@}\"\n    fi\n  fi\n}\n\n# _tput()\n#\n# Usage:\n#   _tput <tput options>...\n#\n# Description:\n#   Run `tput` commands, with fallbacks to termcap names for FreeBSD and\n#   `stty` and escape sequences when `tput` is not found.\n_tput() {\n  if _command_exists \"tput\"\n  then\n    # More info: https://stackoverflow.com/a/64214019\n    case \"${1:-}\" in\n      cols)\n        if tput cols  &>/dev/null\n        then\n          tput cols\n        elif tput co  &>/dev/null\n        then\n          tput co\n        else\n          printf \"80\\\\n\"\n        fi\n\n        return 0\n        ;;\n      lines)\n        if tput lines &>/dev/null\n        then\n          tput lines\n        elif tput li  &>/dev/null\n        then\n          tput li\n        else\n          printf \"20\\\\n\"\n        fi\n\n        return 0\n        ;;\n      setaf|smul)\n        ((${_COLOR_ENABLED:-1}))  || return 0\n        ;;\n    esac\n\n    tput \"${@:-}\" 2>/dev/null     || {\n      case \"${1:-}\" in\n        sgr0)\n          tput me\n          ;;\n        smul)\n          tput us\n          ;;\n        setaf)\n          tput AF \"${@:2}\"\n          ;;\n      esac\n    } 2>/dev/null || printf \"\"\n  else\n    case \"${1:-}\" in\n      cols|lines)\n        {\n          stty size 2>/dev/null   || printf \"20 80\\\\n\"\n        } | if [[ \"${1:-}\" == \"cols\" ]]\n            then\n              cut -d \" \" -f 2\n            else\n              cut -d \" \" -f 1\n            fi\n        ;;\n      setaf)\n        printf '\\033[38;5;%sm'  \"${2:-}\"\n        ;;\n      sgr0)\n        printf '\\033[m'\n        ;;\n      smul)\n        printf '\\033[4m'\n        ;;\n    esac\n  fi\n}\n\n###############################################################################\n# Debug\n###############################################################################\n\n# _debug()\n#\n# Usage:\n#   _debug <command> <options>...\n#\n# Description:\n#   Execute a command and print to standard error. The command is expected to\n#   print a message and should typically be either `echo`, `printf`, or `cat`.\n#\n# Example:\n#   _debug printf \"Debug info. Variable: %s\\\\n\" \"$0\"\n__DEBUG_COUNTER=0\n__DEBUG_START_TIME=\n_debug() {\n  # Usage: __debug_get_timestamp\n  __debug_get_timestamp() {\n    if hash \"gdate\" 2>/dev/null\n    then\n      gdate +%s%3N\n    elif date --version >/dev/null 2>&1\n    then\n      date +%s%3N\n    else\n      return 1\n    fi\n  }\n\n  if ((${_USE_DEBUG:-0}))\n  then\n    __DEBUG_COUNTER=$((__DEBUG_COUNTER+1))\n    printf \"🐛  %s\" \"${__DEBUG_COUNTER} \"\n\n    \"${@}\"\n\n    if [[ -n \"${__DEBUG_START_TIME:-}\" ]]\n    then\n      printf \"⏱  %s\\\\n\" \"$(($(__debug_get_timestamp)-__DEBUG_START_TIME))\"\n    elif __DEBUG_START_TIME=\"$(__debug_get_timestamp)\"\n    then\n      printf \"⏱  0\\\\n\"\n    fi\n\n    printf \"―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\\\\n\"\n  fi 1>&2\n}\n\n###############################################################################\n# Error Messages\n###############################################################################\n\n# _exit_1()\n#\n# Usage:\n#   _exit_1 <command>\n#\n# Description:\n#   Exit with status 1 after executing the specified command with output\n#   redirected to standard error. The command is expected to print a message\n#   and should typically be either `echo`, `printf`, or `cat`.\n_exit_1() {\n  {\n    [[ \"${1:-}\" == \"_help\" ]] || printf \"%s \" \"$(_tput setaf 1)!$(_tput sgr0)\"\n\n    \"${@}\"\n  } 1>&2\n\n  exit 1\n}\n\n# _warn()\n#\n# Usage:\n#   _warn <command>\n#\n# Description:\n#   Print the specified command with output redirected to standard error.\n#   The command is expected to print a message and should typically be either\n#   `echo`, `printf`, or `cat`.\n_warn() {\n  {\n    printf \"%s \" \"$(_tput setaf 1)!$(_tput sgr0)\"\n\n    \"${@}\"\n  } 1>&2\n}\n\n###############################################################################\n# Option Helpers\n###############################################################################\n\n# _option_get_value()\n#\n# Usage:\n#   _option_get_value <option> <value>\n#\n# Description:\n#   Given a flag (e.g., -e | --example) return the value or exit 1 if value\n#   is blank or appears to be another option.\n_option_get_value() {\n  local _option=\"${1:-}\"\n  local _value=\"${2:-}\"\n\n  if [[ -n \"${_value:-}\" ]] && [[ ! \"${_value:-}\" =~ ^- ]]\n  then\n    printf \"%s\\\\n\" \"${_value}\"\n  else\n    _exit_1 printf                          \\\n      \"%s requires a valid argument.\\\\n\"    \\\n      \"$(_color_primary \"${_option}\")\"\n  fi\n}\n\n# _option_value_is_present()\n#\n# Usage:\n#   _option_value_is_present <value>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  The argument is present and does not match as an option\n#                      flag.\n#   1 (error,  false)  The argument is blank or matches as an option flag.\n_option_value_is_present() {\n  [[ -n \"${1:-}\" ]] && [[ ! \"${1:-}\" =~ ^-  ]]\n}\n\n###############################################################################\n# Configuration\n###############################################################################\n\n# Configuration File ####################################### Configuration File\n\n# $NBRC_PATH\n#\n# Default: `$HOME/.nbrc`\n#\n# The location of the .nbrc configuration file.\nexport NBRC_PATH=\"${NBRC_PATH:-\"${HOME}/.${_ME}rc\"}\"\n\n# Handle symlinked NBRC_PATH.\nif [[ -L \"${NBRC_PATH}\" ]]\nthen\n  NBRC_PATH=\"$(_resolve_symlink \"${NBRC_PATH}\")\"\nfi\n\n# Source rc file.\nif [[ -e \"${NBRC_PATH}\" ]]\nthen\n  source \"${NBRC_PATH}\"\nfi\n\n# Base Configuration ####################################### Base Configuration\n\n# $NB_DIR\n#\n# Default: `$HOME/.nb`\n#\n# The location of the directory that contains the notebooks.\nexport NB_DIR=\"${NB_DIR:-\"${HOME}/.${_ME}\"}\"\n\n# Handle symlinked NB_DIR.\nif [[ -L \"${NB_DIR:-}\"      ]]\nthen\n  NB_DIR=\"$(_resolve_symlink \"${NB_DIR}\")\"\nfi\n\n# Validate that NB_DIR exists and is writable.\nif [[ -z \"${NB_DIR:?}\"      ]] ||\n   [[    \"${NB_DIR}\" == \"/\" ]] ||\n   {\n     [[   -e \"${NB_DIR}\"    ]] &&\n     [[ ! -w \"${NB_DIR}\"    ]]\n   }\nthen\n  _exit_1 cat <<HEREDOC\nNB_DIR is not valid:\n  ${NB_DIR}\n\nRemove any NB_DIR settings in .${_ME}rc to reset to default:\n  ${NBRC_PATH}\n\nNB_DIR settings prompt:\n  ${_ME} settings nb_dir\nHEREDOC\nfi\n\n# $NB_AUDIO_TOOL\n#\n# Default: '' (first available)\n#\n# Example Values: 'mplayer', 'afplay'\nexport NB_AUDIO_TOOL=\"${NB_AUDIO_TOOL:-}\"\n\n# $NB_AUTO_SYNC\n#\n# Default: '1'\n#\n# When set to '1', each `_git checkpoint()` call will automativally run\n# `$_ME sync`. To disable this behavior, set the value to '0'.\nexport NB_AUTO_SYNC=\"${NB_AUTO_SYNC:-1}\"\n\n# $NB_BROWSER\n#\n# Default: value of $BROWSER\n#\n# Example Values: 'links', 'w3m'\nexport NB_BROWSER=\"${NB_BROWSER:-${BROWSER:-}}\"\n\n# $NB_DATA_TOOL\n#\n# Default: '' (first available)\n#\n# Example Values: 'visidata', 'sc-im'\nexport NB_DATA_TOOL=\"${NB_DATA_TOOL:-}\"\n\n# $NB_DEFAULT_EXTENSION\n#\n# Default: 'md'\n#\n# Example Values: 'md' 'org'\nexport NB_DEFAULT_EXTENSION=\"${NB_DEFAULT_EXTENSION:-md}\"\n\n# $NB_DIRECTORY_TOOL\n#\n# Default: '' (nb browse)\n#\n# Example Values: 'ranger', 'mc'\nexport NB_DIRECTORY_TOOL=\"${NB_DIRECTORY_TOOL:-}\"\n\n# $NB_ENCRYPTION_TOOL\n#\n# Default: 'openssl'\n#\n# Supported Values: 'gpg' 'openssl'\nexport NB_ENCRYPTION_TOOL=\"${NB_ENCRYPTION_TOOL:-openssl}\"\n\n# $NB_FOOTER\n#\n# Default: '1'\n#\n# Supported Values: '0' '1'\nexport NB_FOOTER=\"${NB_FOOTER:-1}\"\n\n# $NB_GUI_BROWSER\n#\n# Default: ''\n#\n# Example Value: 'firefox'\nexport NB_GUI_BROWSER=\"${NB_GUI_BROWSER:-}\"\n\n# $NB_HEADER\n#\n# Default: '2'\n#\n# Supported Values: '0' '1' '2' '3'\nexport NB_HEADER=\"${NB_HEADER:-2}\"\n\n# $NB_IMAGE_TOOL\n#\n# Default: '' (first available)\n#\n# Example Values: 'imgcat', 'catimg'\nexport NB_IMAGE_TOOL=\"${NB_IMAGE_TOOL:-}\"\n\n# $NB_SERVER_HOST\n#\n# Default: 'localhost'\nexport NB_SERVER_HOST=\"${NB_SERVER_HOST:-localhost}\"\n\n# $NB_SERVER_PORT\n#\n# Default: '6789'\nexport NB_SERVER_PORT=\"${NB_SERVER_PORT:-6789}\"\n\n# $NB_SYNTAX_THEME\n#\n# Default: 'base16'\n#\n# Supported Values: Theme names listed with `bat --list-themes`\nexport NB_SYNTAX_THEME=\"${NB_SYNTAX_THEME:-base16}\"\n\n# $_GIT_ENABLED\n#\n# Default: '1'\n#\n# Supported Values: '0' '1'\nexport _GIT_ENABLED=\"${_GIT_ENABLED:-1}\"\n\n# limit ################################################################# limit\n\n# $NB_LIMIT\n#\n# Default: '15'\n#\n# Set to a positive number to limit the output of `nb` and `nls` to that value.\n# Set to \"auto\" to automatically limit output to the current terminal height.\n# Subtract an auto limit offset for multiline prompts with `auto-<number>`.\n#\n# Supported Values:\n#   - <number>\n#   - auto-<number>\n#   - auto-<number>\n#\n# Example Values:\n#   - 15\n#   - auto\n#   - auto-2\n\nexport _AUTO_LIMIT=\nexport _AUTO_LIMIT_MAX=\n\ncase \"${NB_LIMIT:-}\" in\n  auto*)\n    _AUTO_LIMIT=\"${NB_LIMIT#auto}\"\n    _AUTO_LIMIT=\"${_AUTO_LIMIT%^*}\"\n    _AUTO_LIMIT=\"${_AUTO_LIMIT:-0}\"\n\n    if [[ \"${NB_LIMIT:-}\" =~ \\^     ]]\n    then\n      _AUTO_LIMIT_MAX=\"${NB_LIMIT#*^}\"\n    fi\n\n    export NB_LIMIT=\"${NB_LIMIT}\"\n    ;;\n  *)\n    export _AUTO_LIMIT=\n    export NB_LIMIT=\"${NB_LIMIT:-15}\"\n  ;;\nesac\n\n# $EDITOR ############################################################# $EDITOR\n\n# $NB_EDITOR\n#\n# Default: value of $EDITOR or $VISUAL\n#\n# Example Values: 'vim', `code`'\nNB_EDITOR=\"${NB_EDITOR:-${EDITOR:-${VISUAL:-}}}\"\n\n__set_editor() {\n  local _editors=(\n    editor\n    code\n    subl\n    hx\n    micro\n    mate\n    macdown\n    nano\n    pico\n    vim\n    vi\n    emacs\n  )\n\n  if [[   -z \"${NB_EDITOR:-}\" ]]\n  then\n    local __editor=\n    for   __editor in \"${_editors[@]}\"\n    do\n      if hash \"${__editor}\" 2>/dev/null\n      then\n        NB_EDITOR=\"${__editor}\"\n\n        break\n      fi\n    done\n\n    if [[ -z \"${NB_EDITOR:-}\" ]]\n    then\n      cat <<HEREDOC\nCommand line text editor not found. Set the \\$EDITOR variable in your\nenvironment or in the \\`${_ME}\\` configuration file located at:\n  ${NBRC_PATH}\n\nMore information about setting \\$EDITOR:\n  https://askubuntu.com/q/432524\n\n\\`${_ME}\\` uses text editors with command line support, such as:\n\n- Visual Studio Code\n    https://code.visualstudio.com\n- Sublime Text\n    https://www.sublimetext.com\n- Atom\n    https://atom.io\n- MacDown\n    https://macdown.uranusjr.com\n- Vim\n    https://en.wikipedia.org/wiki/Vim_(text_editor)\n- Emacs\n    https://en.wikipedia.org/wiki/Emacs\n- TextMate\n    https://macromates.com\n- Helix\n    https://helix-editor.com\n- micro\n    https://github.com/zyedidia/micro\n- nano\n    https://en.wikipedia.org/wiki/GNU_nano\n- or many of these:\n    https://en.wikipedia.org/wiki/List_of_text_editors\nHEREDOC\n      exit 1\n    fi\n  fi\n}; __set_editor\n\n# Indicators ####################################################### Indicators\n\n# $NB_INDICATOR_<type>\n#\n# Description:\n#   Reassign or turn off file type indicator icons.\n#\n# Examples:\n#   # reassign pinned indicator\n#   export NB_INDICATOR_PINNED=\"💖\"\n#\n#   # turn off bookmark indicators\n#   export NB_INDICATOR_BOOKMARK=\"\"\n#\n# Parameter Expansion:\n#   |    | set / not blank | set / blank |    unset    |\n#   ----------------------------------------------------\n#   | -  |    parameter    |    blank    | replacement |\n#   | :+ |   replacement   |    blank    |    blank    |\n\n# $NB_INDICATOR_AUDIO\nexport  NB_INDICATOR_AUDIO=\"${NB_INDICATOR_AUDIO-🔉}\"\nexport _NB_INDICATOR_AUDIO=\"${NB_INDICATOR_AUDIO:+\"${NB_INDICATOR_AUDIO} \"}\"\n\n# $NB_INDICATOR_BOOKMARK\nexport  NB_INDICATOR_BOOKMARK=\"${NB_INDICATOR_BOOKMARK-🔖}\"\nexport _NB_INDICATOR_BOOKMARK=\"${NB_INDICATOR_BOOKMARK:+\"${NB_INDICATOR_BOOKMARK} \"}\"\n\n# $NB_INDICATOR_DOCUMENT\nexport  NB_INDICATOR_DOCUMENT=\"${NB_INDICATOR_DOCUMENT-📄}\"\nexport _NB_INDICATOR_DOCUMENT=\"${NB_INDICATOR_DOCUMENT:+\"${NB_INDICATOR_DOCUMENT} \"}\"\n\n# $NB_INDICATOR_EBOOK\nexport  NB_INDICATOR_EBOOK=\"${NB_INDICATOR_EBOOK-📖}\"\nexport _NB_INDICATOR_EBOOK=\"${NB_INDICATOR_EBOOK:+\"${NB_INDICATOR_EBOOK} \"}\"\n\n# $NB_INDICATOR_ENCRYPTED\nexport  NB_INDICATOR_ENCRYPTED=\"${NB_INDICATOR_ENCRYPTED-🔒}\"\nexport _NB_INDICATOR_ENCRYPTED=\"${NB_INDICATOR_ENCRYPTED:+\"${NB_INDICATOR_ENCRYPTED} \"}\"\n\n# $NB_INDICATOR_FOLDER\nexport  NB_INDICATOR_FOLDER=\"${NB_INDICATOR_FOLDER-📂}\"\nexport _NB_INDICATOR_FOLDER=\"${NB_INDICATOR_FOLDER:+\"${NB_INDICATOR_FOLDER} \"}\"\n\n# $NB_INDICATOR_IMAGE\nexport  NB_INDICATOR_IMAGE=\"${NB_INDICATOR_IMAGE-🌄}\"\nexport _NB_INDICATOR_IMAGE=\"${NB_INDICATOR_IMAGE:+\"${NB_INDICATOR_IMAGE} \"}\"\n\n# $NB_INDICATOR_PINNED\nexport  NB_INDICATOR_PINNED=\"${NB_INDICATOR_PINNED-📌}\"\nexport _NB_INDICATOR_PINNED=\"${NB_INDICATOR_PINNED:+\"${NB_INDICATOR_PINNED} \"}\"\n\n# $NB_INDICATOR_TODO\nexport  NB_INDICATOR_TODO=\"${NB_INDICATOR_TODO-✔️ }\"\nexport _NB_INDICATOR_TODO=\"${NB_INDICATOR_TODO:+\"${NB_INDICATOR_TODO} \"}\"\n\n# $NB_INDICATOR_TODO_DONE\nexport  NB_INDICATOR_TODO_DONE=\"${NB_INDICATOR_TODO_DONE-✅}\"\nexport _NB_INDICATOR_TODO_DONE=\"${NB_INDICATOR_TODO_DONE:+\"${NB_INDICATOR_TODO_DONE} \"}\"\n\n# $NB_INDICATOR_VIDEO\nexport  NB_INDICATOR_VIDEO=\"${NB_INDICATOR_VIDEO-📹}\"\nexport _NB_INDICATOR_VIDEO=\"${NB_INDICATOR_VIDEO:+\"${NB_INDICATOR_VIDEO} \"}\"\n\n# Color ################################################################# Color\n\n# $_COLOR_ENABLED\n#\n# Default: '1'\n#\n# Supported Values: '0' '1'\nexport _COLOR_ENABLED=\"${_COLOR_ENABLED:-1}\"\n\n# $NB_COLOR_THEME\n#\n# Default: 'nb'\n#\n# The color theme.\nexport NB_COLOR_THEME=\"${NB_COLOR_THEME:-nb}\"\n\ncase \"${NB_COLOR_THEME}\" in\n  nb)\n    : # Colors assigned as default values below.\n    ;;\n  blacklight)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-39}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-56}\"\n    ;;\n  console)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-40}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-28}\"\n    ;;\n  desert)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-179}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-95}\"\n    ;;\n  electro)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-200}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-62}\"\n    ;;\n  forest)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-29}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-59}\"\n    ;;\n  lavender)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-183}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-61}\"\n    ;;\n  mage)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-199}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-55}\"\n    ;;\n  mint)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-43}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-60}\"\n    ;;\n  ocean)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-75}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-26}\"\n    ;;\n  raspberry)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-162}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-90}\"\n    ;;\n  smoke|monochrome)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-248}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-241}\"\n    ;;\n  unicorn)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-183}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-153}\"\n    ;;\n  utility)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-227}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-8}\"\n    ;;\n  1)\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-164}\"\n    export NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-60}\"\n    ;;\nesac\n\nexport _NB_COLOR_THEMES=(\n  blacklight\n  console\n  desert\n  electro\n  forest\n  nb\n  ocean\n  raspberry\n  smoke\n  unicorn\n  utility\n)\n\n# User defined themes can be installed in the $NB_DIR/.plugins directory.\n# Themes have an .nb-theme extension and contain a single if statement\n# assigning the color environment variables to tput ANSI color numbers.\n#\n# Example:\n#\n#     # filename: ~/.nb/.plugins/example.nb-theme\n#     if [[ \"${NB_COLOR_THEME}\" == \"example\" ]]\n#     then\n#       export NB_COLOR_PRIMARY=68\n#       export NB_COLOR_SECONDARY=8\n#     fi\n#\n#  To view a list of available color numbers, run `nb settings colors`\n__load_themes() {\n  if [[   -d \"${NB_DIR}/.themes\"  ]] &&\n     [[ ! -e \"${NB_DIR}/.plugins\" ]]\n  then # migrate legacy .themes directory. TODO: Remove.\n    mv \"${NB_DIR}/.themes\" \"${NB_DIR}/.plugins\"\n  fi\n\n  if [[ -d \"${NB_DIR}/.plugins\"   ]]\n  then\n    set +f\n    local __file=\n    for   __file in \"${NB_DIR}/.plugins\"/*.\"${_ME}\"-theme*\n    do\n      if [[ -e \"${__file}\"        ]]\n      then\n        local _basename=\n        _basename=\"$(basename \"${__file}\")\"\n\n        local _name=\"${_basename%%.*}\"\n\n        _NB_COLOR_THEMES+=(\"${_name}\")\n\n        source \"${__file}\"\n      fi\n    done\n    set -f\n  fi\n}; __load_themes\n\n# $NB_COLOR_PRIMARY\n#\n# Default: Value depends on terminal capabilities.\n#\n# Set highlighting color. This should be set to an xterm color number, usually\n# a value between 1 and 256. For a table of common colors and their numbers\n# run:\n#\n#   nb settings colors\n#\n# Supported Values: [0..255+]\n__set_color_primary() {\n  local _colors=\n  _colors=\"$(_tput colors)\"\n\n  if [[ -n \"${_colors}\" ]] && [[ \"${_colors}\" -gt 8 ]]\n  then\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-69}\"\n  else\n    export NB_COLOR_PRIMARY=\"${NB_COLOR_PRIMARY:-4}\"\n  fi\n}; __set_color_primary\n\n# $NB_COLOR_SECONDARY\n#\n# Default: '8'\n#\n# Color for lines and other accents. This should be set to an xterm color\n# number, usually a value between 1 and 256. For a table of common colors and\n# their numbers, run:\n#\n#   nb settings colors\n#\n# Supported Values: [0..255+]\nexport NB_COLOR_SECONDARY=\"${NB_COLOR_SECONDARY:-8}\"\n\n# Color Variables\n#\n# Avoid multiple tput calls by assigning output to variables.\nexport _TPUT_SGR0=\nif [[ -n \"${TMUX:-}\" ]]\nthen\n  # Avoid `tmux` and `less` quirks: https://unix.stackexchange.com/a/446541\n  _TPUT_SGR0=\"$(printf '\\033[m')\"\nelse\n  _TPUT_SGR0=\"$(_tput sgr0)\"\nfi\n\nexport _TPUT_COLOR_PRIMARY=\n       _TPUT_COLOR_PRIMARY=\"$(_tput setaf \"${NB_COLOR_PRIMARY}\")\"\n\nexport _TPUT_COLOR_SECONDARY=\n       _TPUT_COLOR_SECONDARY=\"$(_tput setaf \"${NB_COLOR_SECONDARY}\")\"\n\nexport _TPUT_SETAF_8=\n       _TPUT_SETAF_8=\"$(_tput setaf 8)\"\n\nexport _TPUT_SMUL=\n       _TPUT_SMUL=\"$(_tput smul)\"\n\n# _color_brackets()\n#\n# Usage:\n#   _color_brackets <string>\n#\n# Description:\n#   Print <string> with surrounding color brackets.\n_color_brackets() {\n  if ! ((_COLOR_ENABLED))\n  then\n    printf \"[%s]\" \"${1:-}\"\n\n    return 0\n  fi\n\n  printf \"%s%s[%s%s%s]%s\"     \\\n    \"${_TPUT_SGR0}\"           \\\n    \"${_TPUT_SETAF_8}\"        \\\n    \"${_TPUT_COLOR_PRIMARY}\"  \\\n    \"${1:-}\"                  \\\n    \"${_TPUT_SETAF_8}\"        \\\n    \"${_TPUT_SGR0}\"\n}\n\n# _color_muted()\n#\n# Usage:\n#   _color_muted <string>\n#\n# Print the given string with the muted color.\n_color_muted() {\n  if ! ((_COLOR_ENABLED))\n  then\n    printf \"%s\" \"${1:-}\"\n\n    return 0\n  fi\n\n  printf \"%s%s%s%s\"     \\\n    \"${_TPUT_SGR0}\"     \\\n    \"${_TPUT_SETAF_8}\"  \\\n    \"${1:-}\"            \\\n    \"${_TPUT_SGR0}\"\n}\n\n# _color_primary()\n#\n# Usage:\n#   _color_primary <string> [--underline]\n#\n# Description:\n#   Use `tput` to highlight the given string.\n_color_primary() {\n  if ! ((_COLOR_ENABLED))\n  then\n    printf \"%s\\\\n\" \"${1:-}\"\n\n    return 0\n  fi\n\n  if [[ \"${2:-}\" == \"--underline\" ]]\n  then\n    printf \"%s%s%s%s%s\\\\n\"        \\\n      \"${_TPUT_SGR0}\"             \\\n      \"${_TPUT_SMUL}\"             \\\n      \"${_TPUT_COLOR_PRIMARY}\"    \\\n      \"${1:-}\"                    \\\n      \"${_TPUT_SGR0}\"\n  else\n    printf \"%s%s%s%s\\\\n\"          \\\n      \"${_TPUT_SGR0}\"             \\\n      \"${_TPUT_COLOR_PRIMARY}\"    \\\n      \"${1:-}\"                    \\\n      \"${_TPUT_SGR0}\"\n  fi\n}\n\n# _color_secondary()\n#\n# Usage:\n#   _color_secondary <string>\n#\n# Description:\n#   Highlight the given string using the accent color.\n_color_secondary() {\n  if ! ((_COLOR_ENABLED))\n  then\n    printf \"%s\\\\n\" \"${1:-}\"\n\n    return 0\n  fi\n\n  printf \"%s%s%s\\\\n\" \"${_TPUT_COLOR_SECONDARY}\" \"${1:-}\" \"${_TPUT_SGR0}\"\n}\n\n# Unset CLICOLOR_FORCE to avoid unexpected color output in `ls` et al.\nunset CLICOLOR_FORCE\n\n# Current Notebook ########################################### Current Notebook\n\n# $NB_NOTEBOOK_PATH\n#\n# Default: `$NB_DIR/home`\n#\n# The path to the current notebook.\nexport NB_NOTEBOOK_PATH=\"${NB_NOTEBOOK_PATH:-\"${NB_DIR}/home\"}\"\n\n# $_GLOBAL_NOTEBOOK_PATH\n#\n# The path of the current global notebook.\nexport _GLOBAL_NOTEBOOK_PATH=\n\n# $_LOCAL_NOTEBOOK_PATH\n#\n# The path of the local notebook, if one is found. The current working\n# directory and all parents are searched.\nexport _LOCAL_NOTEBOOK_PATH=\n\n# __set_notebook_paths()\n#\n# Usage:\n#   __set_notebook_paths\n#\n# Description:\n#   Set the notebook path variables to reflect the current environment.\n__set_notebook_paths() {\n  __set_local_notebook_path() {\n    if [[ \"${PWD}\" == \"/\" ]]\n    then\n      cd \"${_CURRENT_WORKING_DIR}\"\n\n      return 0\n    elif [[ -d \"${PWD}/.git\"    ]] &&\n         [[ -f \"${PWD}/.index\"  ]]\n    then\n      _LOCAL_NOTEBOOK_PATH=\"${PWD}\"\n\n      cd \"${_CURRENT_WORKING_DIR}\"\n\n      return 0\n    else\n      cd ..\n      __set_local_notebook_path\n    fi\n  }; __set_local_notebook_path\n\n  __set_global_notebook_path() {\n    if [[   -e \"${NB_DIR}/.current\"                 ]]\n    then\n      local _global_notebook_name=\n      _global_notebook_name=\"$(<\"${NB_DIR}/.current\")\"\n\n      if [[ -d \"${NB_DIR}/${_global_notebook_name}\" ]]\n      then\n        _GLOBAL_NOTEBOOK_PATH=\"${NB_DIR}/${_global_notebook_name}\"\n      fi\n    fi\n  }; __set_global_notebook_path\n\n  if [[     -n \"${_LOCAL_NOTEBOOK_PATH:-}\"          ]]\n  then\n    NB_NOTEBOOK_PATH=\"${_LOCAL_NOTEBOOK_PATH}\"\n  else\n    NB_NOTEBOOK_PATH=\"${_GLOBAL_NOTEBOOK_PATH}\"\n  fi\n}; __set_notebook_paths\n\n# Cache & Temp ################################################### Cache & Temp\n\n# $_NB_CACHE_PATH\n#\n# The full path to the cache directory.\nexport _NB_CACHE_PATH=\"${NB_DIR}/.cache\"\n\nif [[   -d \"${NB_DIR}\"          ]] &&\n   [[ ! -e \"${_NB_CACHE_PATH}\"  ]]\nthen\n  mkdir -p \"${_NB_CACHE_PATH}\"\nfi\n\n# $TMPDIR\n#\n# Reset $TMPDIR if it's set to the current working directory by npm.\nif [[ \"${TMPDIR:-}\" == \"${PWD}\" ]]\nthen\n  export TMPDIR=\"/tmp\"\nfi\n\n# $_NB_TEMP_DIRECTORY\n#\n# The full path to the temp directory.\nexport _NB_TEMP_DIRECTORY\n_NB_TEMP_DIRECTORY=\"$(mktemp -d)\"\n\n# $_NB_TEMP_PIDS\n#\n# A list of PIDS that should be terminated on exit.\n_NB_TEMP_PIDS=()\n\n# _temp()\n#\n# Usage:\n#   _temp cache [clear]\n#   _temp cleanup\n#   _temp directory\n#   _temp file [<basename> | <relative-path> | <extension>] [--touch]\n#   _temp pid <pid>\n#\n# Subcommands:\n#   cache       Print the full path to the cache directory, or optionally clear\n#               the cache.\n#   cleanup     Force delete the temp directory.\n#   directory   Print the full path the the temp directory.\n#   file        Initialize a temporary file path.\n#   pid         Specify a process ID that should be terminated on exit.\n#\n# Description:\n#   Manage temp and cache files and directories.\n_temp() {\n  # Usage: _temp_validate_path <path>\n  _temp_validate_path() {\n    [[ -n \"${1:?}\"              ]] &&\n    [[    \"${1}\" != \"/\"         ]] &&\n    [[    \"${1}\" != \"${HOME}\"   ]] &&\n    [[    \"${1}\" != \"${PWD}\"    ]] &&\n    [[ -e \"${1}\"                ]]\n  }\n\n  local _subcommand=\"${1:-}\"\n\n  case \"${_subcommand}\" in\n    cache)\n      if [[ \"${2:-}\" == \"clear\" ]]\n      then\n        if _temp_validate_path \"${_NB_CACHE_PATH:?}\"\n        then\n          rm -r \"${_NB_CACHE_PATH:?}\"\n          mkdir -p \"${_NB_CACHE_PATH}\"\n        fi\n      else\n        printf \"%s\\\\n\" \"${_NB_CACHE_PATH}\"\n      fi\n      ;;\n    cleanup)\n      if _temp_validate_path \"${_NB_TEMP_DIRECTORY:?}\"\n      then\n        rm -rf \"${_NB_TEMP_DIRECTORY:?}\"\n      fi\n\n      local __pid=\n      for   __pid in \"${_NB_TEMP_PIDS[@]:-}\"\n      do\n        [[ -n \"${__pid:-}\" ]] || continue\n\n        kill \"${__pid}\" 2>/dev/null || :\n      done\n      ;;\n    dir|directory)\n      printf \"%s\\\\n\" \"${_NB_TEMP_DIRECTORY:-}\"\n      ;;\n    file)\n      local _extension=\n      local _relative_path=\n      local _touch=0\n\n      local __arg=\n      for   __arg in \"${2:-}\" \"${3:-}\"\n      do\n        case \"${__arg}\" in\n          \"\")       :                           ;;\n          --touch)  _touch=1                    ;;\n          \\.*)      _extension=\"${__arg:-}\"     ;;\n          *)        _relative_path=\"${__arg:-}\" ;;\n        esac\n      done\n\n      local _temp_file_path=\n\n      if [[ -z  \"${_relative_path:-}\"       ]]\n      then\n        _temp_file_path=\"${_NB_TEMP_DIRECTORY}/${RANDOM}${_extension:-}\"\n      else\n        _temp_file_path=\"${_NB_TEMP_DIRECTORY}/${_relative_path:-}\"\n      fi\n\n      if [[     \"${_relative_path:-}\" =~ /  ]]\n      then\n        mkdir -p \"${_temp_file_path%/*}\"\n      fi\n\n      if ((_touch))\n      then\n        touch \"${_temp_file_path}\"\n      fi\n\n      printf \"%s\\\\n\" \"${_temp_file_path:-}\"\n      ;;\n    pid)\n      _NB_TEMP_PIDS+=(\"${2:?}\")\n      ;;\n  esac\n}\n\ntrap \"_temp cleanup\"                        EXIT\ntrap \"exit\"                                 INT\ntrap 'printf \"\\\\n\"; _temp cleanup; exit 0'  SIGINT\ntrap 'printf \"\\\\n\"; _temp cleanup; exit 0'  SIGTERM\n\n###############################################################################\n# Configuration Validation\n###############################################################################\n\n# _validate_configuration()\n#\n# Usage:\n#   _validate_configuration\n#\n# Description:\n#   Check the runtime environment and display an error message when running in\n#   an unsupported configuration.\n_validate_configuration() {\n  if { ((${NB_BASH_UPDATE_PROMPT_ENABLED:-0}))        ||\n       {\n         [[ \"${BASH_VERSINFO[0]:-999999999}\" -lt 4 ]] &&\n         ((${NB_BASH_UPDATE_PROMPT_ENABLED:-1}))\n       }\n     }                                                &&\n     _command_exists \"brew\"                           &&\n     {\n       # command initiated by user\n       [[ -t 1                          ]]            ||\n       ((${NB_TEST_MOCK_TTY:-0}))\n     }\n  then\n    local _config_file_path=\"${NB_DIR}/.nb-bash-3-enabled\"\n\n    if [[ -e \"${_config_file_path}\"     ]]\n    then\n      local _config_file_version=\n      _config_file_version=\"$(head -n 1 \"${_config_file_path:-}\")\"\n\n      if [[ \"${_config_file_version:-}\" != \"${_VERSION}\" ]] ||\n         ((${NB_BASH_UPDATE_PROMPT_ENABLED:-0}))\n      then\n        rm \"${_config_file_path:?}\"\n      fi\n    fi\n\n    if [[ ! -e \"${_config_file_path:-}\" ]]  &&\n       ((${NB_BASH_UPDATE_PROMPT_ENABLED:-1}))\n    then\n      local _color_me=\n      _color_me=\"$(_color_muted '`')$(_color_primary \"${_ME}\")$(_color_muted '`')\"\n\n      {\n        printf \"Update Bash\\\\n\"\n        printf \"%s\\\\n\" \"$(_color_muted  \"-------------\")\"\n\n        cat <<HEREDOC\n${_color_me} works best with the current version of Bash.\n\n${_color_me} can $(_color_primary \"update\") your system to $(_color_primary \"Bash 5\") via Homebrew\nor you can proceed with Bash 3.2.\n\nAnswering $(_color_primary \"y\") or $(_color_primary \"yes\") will run the following command:\n\n  $(_color_primary \"brew install bash\")\n\nThis command could take a minute to run.\nHEREDOC\n      } | _warn printf \"%s\\\\n\" \"$(cat)\"\n\n      while true\n      do\n        local __yn=\n\n        if _contains \"-y\"     \"${@:-}\" ||\n           _contains \"--yes\"  \"${@:-}\"\n        then\n          __yn=\"y\"\n        else\n          printf \"%s\\\\n\" \"$(_color_muted \"------------------------\")\"\n\n          IFS='' read -r -e -d $'\\n' -p   \\\n\"$(_color_primary \"Update\") to Bash 5?  $(_color_brackets \"y/N\") \" __yn\n        fi\n\n        case \"${__yn}\" in\n          [Yy]*)\n            printf \"\\\\n\"\n\n            _warn printf \"Updating Bash%s\\\\n\\\\n\" \"$(_color_muted \"...\")\"\n\n            if brew install bash\n            then\n              printf \"\\\\n\"\n\n              {\n                printf \"%s\\\\n\"    \"$(_color_muted  \"------------------\")\"\n                printf \"  %s to %s!\\\\n\"         \\\n                  \"$(_color_primary \"Updated\")\" \\\n                  \"$(_color_primary \"Bash 5\")\"\n                printf \"  %s\\\\n\"  \"$(_color_muted  \"------------------\")\"\n              } | _warn printf \"%s\\\\n\" \"$(cat)\"\n\n              printf \"\\\\n\"\n            else\n              printf \"\\\\n\"\n\n              _warn printf \"Unable to update to Bash 5.\\\\n\\\\n\"\n            fi\n\n\n            if [[ -e \"${_config_file_path:?}\" ]]\n            then\n              rm \"${_config_file_path:?}\"\n            fi\n\n            break\n            ;;\n          *)\n            cat <<HEREDOC > \"${_config_file_path:?}\"\n${_VERSION}\n\nThis presence of this file indicates that Bash 3 support is enabled.\nHEREDOC\n\n            printf \"\\\\n\"\n\n            {\n              printf \"%s\\\\n\" \"$(_color_muted    \"-------------------------\")\"\n              printf                          \"  Bash 3.2 support enabled.\\\\n\"\n              printf \"%s\\\\n\" \"$(_color_muted  \"  -------------------------\")\"\n            } | _warn printf \"%s\\\\n\" \"$(cat)\"\n\n            printf \"\\\\n\"\n\n            break\n            ;;\n        esac\n      done\n    fi\n  fi\n}\n\nif [[ -e \"${NB_DIR:-}\" ]]\nthen\n  _validate_configuration \"${@:-}\"\nfi\n\n###############################################################################\n# Helpers: Group 1                                             Helpers: Group 1\n# ----------------                                             ----------------\n###############################################################################\n# --------------------------------------------------------------------------- #\n\n# $_BT\n#\n# Backtick with ANSI-C quoting for string building.\n_BT=$'`'\n\n# $_CHEVRON_LEFT\n#\n# A left-pointing chevron character.\n_CHEVRON_LEFT=\"❮\"\n\n# $_CHEVRON_RIGHT\n#\n# A right-pointing chevron character.\n_CHEVRON_RIGHT=\"❯\"\n\n# $_COLUMNS\n#\n# The terminal width in number of columns (characters).\n_COLUMNS=\"$(_tput cols)\"\n\n# $_FILE_TYPES\n#\n# An array of supported aggregate file types.\n_FILE_TYPES=(archive audio bookmark document folder image text video)\n\n# $_IGNORE_PATTERNS\n#\n# An array of filename patterns to ignore, formatted as `sed -e` arguments.\n_IGNORE_PATTERNS=(\n  -e '/~$/d'\n  -e '/^#.*#$/d'\n  -e '/\\.swa?p$/d'\n  -e '/^\\.#*/d'\n  -e '/.*_ltex\\.json$/d' # ltex-utils.nvim\n)\n\n# $_MD\n#\n# Middle dot character.\n_MD=\"·\"\n\n# $_NBSP\n#\n# No-break space character.\n_NBSP=\" \"\n\n# $_NEWLINE\n#\n# Newline with ANSI-C quoting for string building.\n_NEWLINE=$'\\n'\n\n# $_SLASH\n#\n# Slash with ANSI-C quoting for string building support and macOS Bash\n# string substitution.\n_SLASH=$'/'\n\n# _URL_PATTERNS\n#\n# Patterns for matching URLs.\n#\n# https://en.wikipedia.org/wiki/List_of_URI_schemes\nexport _URL_PATTERNS=(\n  \"([.a-z0-9+-]+)://[^[:space:]]+\"\n  \"(afp|attachment|platform):/[^[:space:]]+\"\n  \"aim:[^[:space:]]+\\?[^[:space:]]+\"\n  \"(dab|fm):[^[:space:]]+\\.[^[:space:]]+\\.[^[:space:]]+\"\n  \"(data|geo):[^[:space:]]+,[^[:space:]]+\"\n  \"doi:10\\.[^[:space:]]+\"\n  \"(msnim|things):[^[:space:]]+\\?[^[:space:]]+\"\n  \"(feed|mvn|paparazzi|view-source):https?://[^[:space:]]+\"\n  \"git@[^[:space:]]+:[^[:space:]]+\"\n  \"gtalk:chat[^[:space:]]+\"\n  \"(im|mailto|reload|sips?|xmpp):[^[:space:]]+@[^[:space:]]+\"\n  \"jar:[^[:space:]]+!/[^[:space:]]+\"\n  \"magnet:\\?xt=urn:[^[:space:]]+\"\n  \"maps:q=[^[:space:]]+\"\n  \"(sms|tel):\\+[0-9]+\"\n  \"(jdbc|spotify|urn):[^[:space:]]+:[^[:space:]]+\"\n  \"tag:[^[:space:]]+,[^[:space:]]+:[^[:space:]]+\"\n  \"ymsgr:sendIM?[^[:space:]]+\"\n  # TODO: develop strategy to avoid matching notebook: selectors\n  # \"(apt|amss|barion|bitcoin|callto|cid|dns|drm|fax|gg):[^[:space:]]+\"\n  # \"(go|iax|javascript|message|mid|mvn|news|openpgp4fpr):[^[:space:]]+\"\n  # \"(palm|pres|proxy|psyc|query|session|shc|skype):[^[:space:]]+\"\n  # \"(stuns?|trueconf|turns?|ws|xfire):[^[:space:]]+\"\n  # \"itms:\"\n)\n\n# Fallbacks for non-unicode environments.\nif [[ ! \"${LANG:-x}\" =~ (utf-|UTF-) ]]\nthen\n  _CHEVRON_LEFT=\"<\"\n  _CHEVRON_RIGHT=\">\"\n  _MD=\"-\"\nfi\n\n# _alias_subcommand()\n#\n# Usage:\n#   _alias_subcommand <subcommand> <alias>\n#\n# Description:\n#   Create an <alias> of <subcommand>. NOTE: aliases also have to be added to\n#   the $_SUBCOMMANDS variable.\n_alias_subcommand() {\n  local _alias=\"${2:-}\"\n  local _subcommand=\"${1:-}\"\n\n  if [[ -z \"${_alias:-}\" ]]\n  then\n    return 1\n  fi\n\n  shopt -u extglob\n\n  eval \"_describe_${_alias}() { _describe_${_subcommand}  \\\"\\${@:-}\\\"; }\"\n  eval \"_${_alias}()          { _${_subcommand}           \\\"\\${@:-}\\\"; }\"\n\n  shopt -s extglob\n}\n\n# _file_is_archive()\n#\n# Usage:\n#   _file_is_archive <path>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is an archive.\n#   1 (error,  false)  if not.\nexport _ARCHIVE_FILE_EXTENSIONS=(\n  7z\n  apk\n  bz2\n  dmg\n  gz\n  lz\n  rar\n  s7z\n  sit\n  sitx\n  sparsebundle\n  tar\n  tgz\n  tbz2\n  tlz\n  txz\n  xz\n  zip\n  zipx\n  Z\n)\n_file_is_archive() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  LC_ALL=C _contains \"${_file_type}\" \"${_ARCHIVE_FILE_EXTENSIONS[@]}\"\n}\n\n# _file_is_audio()\n#\n# Usage:\n#   _file_is_audio (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is an audio file.\n#   1 (error,  false)  if not.\nexport _AUDIO_FILE_EXTENSIONS=(\n  aac\n  aiff\n  flac\n  m4a\n  mp3\n  ogg\n  wav\n)\n_file_is_audio() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  LC_ALL=C _contains \"${_file_type}\" \"${_AUDIO_FILE_EXTENSIONS[@]}\"\n}\n\n# _file_is_bookmark()\n#\n# Usage:\n#   _file_is_bookmark (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true) If file is a bookmark.\n#   1 (error,  false) if not.\nexport _BOOKMARK_FILE_EXTENSIONS=(\n  bookmark.md\n  bookmark.md.enc\n)\n_file_is_bookmark() {\n  # Use explicit matching for legacy bookmark name support.\n  [[ \"${1:-}\" =~ ([(-|.)]bookmark.md|[(-|.)]bookmark.md.enc) ]]\n}\n\n# _file_is_document()\n#\n# Usage:\n#   _file_is_document (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is a Word, Open Office, PDF, or other document.\n#   1 (error,  false)  if not.\nexport _DOCUMENT_FILE_EXTENSIONS=(\n  doc\n  docx\n  odt\n  pdf\n  rtf\n  xls\n  xlsx\n)\n_file_is_document() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  LC_ALL=C _contains \"${_file_type}\" \"${_DOCUMENT_FILE_EXTENSIONS[@]}\"\n}\n\n# _file_is_encrypted()\n#\n# Usage:\n#   _file_is_encrypted <path>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is encrypted.\n#   1 (error,  false)  if not.\nexport _ENCRYPTED_FILE_EXTENSIONS=(\n  enc\n)\n_file_is_encrypted() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  # `file` with 'soft' test is slow, so avoid calling it.\n  LC_ALL=C _contains \"${_file_type}\" \"${_ENCRYPTED_FILE_EXTENSIONS[@]}\" ||\n    {\n      ! LC_ALL=C _contains \"${_file_type}\"  \\\n        \"${_TEXT_FILE_EXTENSIONS[@]}\"       \\\n        \"${_IMAGE_FILE_EXTENSIONS[@]}\"      \\\n        \"${_DOCUMENT_FILE_EXTENSIONS[@]}\"   \\\n        \"${_AUDIO_FILE_EXTENSIONS[@]}\"      \\\n        \"${_VIDEO_FILE_EXTENSIONS[@]}\"      &&\n        if _command_exists \"file\"\n        then\n          [[ \"$(file \"${_file_path:-}\"      \\\n                  --exclude=apptype         \\\n                  --exclude=tokens          \\\n                  --exclude=cdf             \\\n                  --exclude=compress        \\\n                  --exclude=elf             \\\n                  --exclude=tar)\" =~ (encrypted|openssl) ]]\n        else\n          return 1\n        fi\n    }\n}\n\n# _file_is_image()\n#\n# Usage:\n#   _file_is_image (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is an image.\n#   1 (error,  false)  if not.\nexport _IMAGE_FILE_EXTENSIONS=(\n  afphoto\n  ai\n  bmp\n  gif\n  heic\n  ind\n  indd\n  jpg\n  jpeg\n  png\n  psd\n  raw\n  svg\n  svgz\n  tif\n  tiff\n  webp\n)\n_file_is_image() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  LC_ALL=C _contains \"${_file_type}\" \"${_IMAGE_FILE_EXTENSIONS[@]}\"\n}\n\n# _file_is_text()\n#\n# Usage:\n#   _file_is_text <path>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is text.\n#   1 (error,  false)  if not.\n#\n# Resources:\n#   Markdown: https://superuser.com/a/285878\nexport _TEXT_FILE_EXTENSIONS=(\n  adoc\n  asciidoc\n  bash\n  bib\n  coffee\n  css\n  go\n  html\n  js\n  json\n  jsx\n  latex\n  markdown\n  md\n  mdown\n  mdwn\n  mdtxt\n  mdtext\n  mkd\n  mkdn\n  org\n  py\n  rb\n  Rmd\n  rst\n  scss\n  sh\n  sql\n  tex\n  text\n  textile\n  ts\n  tsx\n  txt\n  xml\n)\n_file_is_text() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  # Avoid calling `file` for better performance.\n  LC_ALL=C _contains \"${_file_type}\" \"${_TEXT_FILE_EXTENSIONS[@]}\" ||\n    {\n      ! LC_ALL=C _contains \"${_file_type}\"  \\\n        \"${_IMAGE_FILE_EXTENSIONS[@]}\"      \\\n        \"${_DOCUMENT_FILE_EXTENSIONS[@]}\"   \\\n        \"${_ENCRYPTED_FILE_EXTENSIONS[@]}\"  \\\n        \"${_AUDIO_FILE_EXTENSIONS[@]}\"      \\\n        \"${_VIDEO_FILE_EXTENSIONS[@]}\"      \\\n        \"${_ARCHIVE_FILE_EXTENSIONS[@]}\"        &&\n        [[ !    \"${_file_type}\" =~ \\.epub$  ]]  &&\n        [[ ! -d \"${_file_path:-}\"           ]]  &&\n        if _command_exists \"file\"\n        then\n          [[ \"$(file \"${_file_path:-}\"      \\\n                  --exclude=apptype         \\\n                  --exclude=tokens          \\\n                  --exclude=cdf             \\\n                  --exclude=compress        \\\n                  --exclude=elf             \\\n                  --exclude=tar             \\\n                  -b --mime-type)\" =~ ^text ]]\n        else\n          [[ -f \"${_file_path:-}\"           ]]\n        fi\n    }\n}\n\n# _file_is_todo()\n#\n# Usage:\n#   _file_is_todo (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true) If file is a todo.\n#   1 (error,  false) if not.\nexport _TODO_FILE_EXTENSIONS=(\n  todo.md\n  todo.md.enc\n)\n_file_is_todo() {\n  [[ \"${1:-}\" =~ (todo\\.md|todo\\.md\\.enc) ]]\n}\n\n# _file_is_video()\n#\n# Usage:\n#   _file_is_video (<path> | <filename>)\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If file is a video file.\n#   1 (error,  false)  if not.\nexport _VIDEO_FILE_EXTENSIONS=(\n  avi\n  flv\n  m4p\n  m4v\n  mp2\n  mp4\n  mov\n  mpeg\n  mpg\n  qt\n  webm\n  wmv\n)\n_file_is_video() {\n  local _file_path=\"${1:-}\"\n  local _file_type=\"${_file_path##*.}\"\n\n  LC_ALL=C _contains \"${_file_type}\" \"${_VIDEO_FILE_EXTENSIONS[@]}\"\n}\n\n# _get_content()\n#\n# Usage:\n#   _get_content <path> [--title]\n#\n# Options:\n#   --title  Print the title or nothing if a title is not found.\n#\n# Description:\n#   Print the title or first line of the text document at <path>. When a title\n#   is not found, print the first line, prefixed with '__first_line:'.\n#\n#   Supports both Markdown h1 styles, YAML front matter, Org Mode, LaTeX,\n#   and AsciiDoc.\n#\n#   - Markdown\n#     - Supported:\n#       - # This is a Title\n#       - This is a Title\n#         ===============\n#       - ---\n#         title: This is a Title\n#         ---\n#     - https://daringfireball.net/projects/markdown/syntax#header\n#     - https://jekyllrb.com/docs/front-matter/\n#   - Org Mode\n#     - Supported:\n#       - #+TITLE: This is a Title\n#     - https://orgmode.org/guide/Export-Settings.html\n#   - LaTeX\n#     - Supported:\n#       - \\title{This is a Title}\n#   - AsciiDoc\n#     - Supported:\n#       - = This is a Title\n_get_content() {\n  local _counter=0\n  local _first_line=\n  local _in_code_block=0\n  local _in_front_matter=0\n  local _maybe_title=\n  local _path=\"${1:-}\"\n  local _title=\n\n  if [[ \"${2:-}\" == --title ]]\n  then\n    local _only_title=1\n  else\n    local _only_title=0\n  fi\n\n  # turn on case-insensitive matching\n  shopt -s nocasematch\n\n  if [[   -z \"${_path}\" ]]\n  then\n    return 1\n  elif [[ -d \"${_path}\" ]]\n  then\n    return 0\n  elif [[ -e \"${_path}\" ]]\n  then\n\n    # `awk` `_get_first_line` alternative\n    # -----------------------------------\n    #       awk -f - \"${_path}\" <<'HEREDOC'\n    # (state == 0) && /^---$/ { state=1; next }\n    # (state == 1) && /^---$/ { state=0; next }\n    # (state == 0) && /^```/  { state=1; next }\n    # (state == 1) && /^```/  { state=0; next }\n    #\n    # (state == 0) && /^./    { print; exit   }\n    # HEREDOC\n\n    if [[ \"${_path}\" =~ (\\.md$|\\.markdown$) ]]\n    then\n      local               __line=\n      while IFS= read -r  __line || [[ -n \"${__line:-}\"     ]]\n      do\n        if [[ \"${__line}\" =~ ^([[:space:]]*#[[:space:]]+)   ]] &&\n           ! ((_in_code_block))\n        then # line starts with an atx-style H1\n          _title=\"${__line#\"${BASH_REMATCH[1]:-}\"}\"\n\n          if [[ \"${_title}\" =~ ([[:space:]]+#[[:space:]]*)$ ]]\n          then\n            _title=\"${_title%\"${BASH_REMATCH[1]:-}\"}\"\n          fi\n\n          # `sed` alternative\n          # -----------------\n          # _title=\"$(\n          #   printf \"%s\\\\n\" \"${__line}\"    \\\n          #     | sed                       \\\n          #       -e 's/^[[:space:]]*# //'  \\\n          #       -e 's/ #$//'\n          #   )\"\n\n          break\n        elif [[ \"${__line}\" =~ ^---$    ]]\n        then # start or end of front matter block\n          if ((_in_front_matter))\n          then\n            _in_front_matter=0\n          else\n            _in_front_matter=1\n          fi\n        elif [[ \"${__line}\" =~ ^\\`\\`\\`  ]]\n        then # start or end of code block\n          if ((_in_code_block))\n          then\n            _in_code_block=0\n          else\n            _in_code_block=1\n          fi\n        elif ((_in_front_matter))   &&  [[ \"${__line}\" =~ ^title\\:  ]]\n        then # front matter title\n          _title=\"$(printf \"%s\\\\n\" \"${__line}\" | LC_ALL=C sed 's/^title: //')\"\n\n          break\n        elif ! ((_in_front_matter)) && ! ((_in_code_block))\n        then\n          if [[ -z \"${_maybe_title:-}\"  ]]  &&  [[ -n \"${__line:-}\" ]]\n          then  # potential setext-style H1\n            _maybe_title=\"${__line}\"\n          elif [[ -n \"${_maybe_title:-}\"            ]] &&\n               [[ \"${__line}\" =~ ^[[:space:]]*\\=+$  ]]\n          then # underline for setext-style H1 on previous line\n            _title=\"$(\n              printf \"%s\\\\n\" \"${_maybe_title}\" | LC_ALL=C sed 's/^[[:space:]]*//'\n            )\"\n\n            break\n          elif [[ -n \"${_maybe_title:-}\"        ]]\n          then # in normal content, title not found\n            if ! ((_only_title))\n            then\n              if [[ \"${#_maybe_title}\" -gt 500  ]]\n              then\n                _first_line=\"${_maybe_title:0:500}...\"\n              else\n                _first_line=\"${_maybe_title}\"\n              fi\n            fi\n\n            if [[ ! \"${_maybe_title}\"  =~ ^\\[   ]]\n            then # only break with first non-link line\n              break\n            fi\n          else\n            continue\n          fi\n        fi\n      done < \"${_path}\"\n\n      if [[ -z \"${_title:-\"${_first_line:-}\"}\"  ]] &&\n         [[ -n \"${_maybe_title:-}\"              ]]\n      then\n        _first_line=\"${_maybe_title:-}\"\n      fi\n    elif [[ \"${_path}\"    =~ (\\.latex$|\\.tex$)  ]]\n    then\n      local               __line=\n      while IFS= read -r  __line  ||  [[ -n \"${__line:-}\" ]]\n      do\n        _counter=\"$((_counter+1))\"\n\n        if [[ \"${__line}\" =~  ^\\\\title\\{        ]]\n        then\n          _title=\"$(\n            printf \"%s\\\\n\" \"${__line}\" | LC_ALL=C sed 's/\\\\title{\\(.*\\)}/\\1/'\n          )\"\n\n          break\n        elif [[ -n \"${__line:-}\"      ]]\n        then\n          if [[ -z \"${_first_line:-}\" ]]\n          then\n            _first_line=\"${__line}\"\n          fi\n\n          if [[ ! \"${__line}\" =~ ^\\\\  ]] &&\n             [[ \"${_counter}\" -gt 20  ]]\n          then\n            break\n          fi\n        else\n          continue\n        fi\n      done < \"${_path}\"\n    elif [[   \"${_path}\" =~ \\.org$    ]]\n    then\n      local               __line=\n      while IFS= read -r  __line  ||  [[ -n \"${__line}\"   ]]\n      do\n        _counter=\"$((_counter+1))\"\n\n        # NOTE: Titles can be defined with multiple #+TITLE: lines.\n        if [[ \"${__line}\" =~ ^\\#\\+TITLE\\: ]]\n        then\n          if [[ -n \"${_title:-}\"          ]]\n          then\n            _title=\"${_title} \"\n          fi\n\n          _title+=\"$(\n            printf \"%s\\\\n\" \"${__line}\"    \\\n              | LC_ALL=C sed              \\\n                  -e 's/^#+TITLE: //'     \\\n                  -e 's/^#+title: //'\n          )\"\n        elif [[ -n \"${__line:-}\"      ]]\n        then\n\n          if [[ -z \"${_first_line:-}\" ]]\n          then\n            _first_line=\"${__line}\"\n          fi\n\n          if [[ ! \"${__line}\" =~ ^\\#  ]] &&\n             [[ \"${_counter}\" -gt 10  ]]\n          then\n            break\n          fi\n        else\n          continue\n        fi\n      done < \"${_path}\"\n    elif [[ \"${_path}\"    =~ (\\.adoc$|\\.asciidoc$)  ]]\n    then\n      local               __line=\n      while IFS= read -r  __line  ||  [[ -n \"${__line:-}\" ]]\n      do\n        _counter=\"$((_counter+1))\"\n\n        if [[ \"${__line}\" =~  ^=\\     ]]\n        then\n          _title=\"${__line#= }\"\n\n          break\n        elif [[ -n \"${__line:-}\"      ]]\n        then\n          if [[ -z \"${_first_line:-}\" ]]\n          then\n            _first_line=\"${__line}\"\n          fi\n\n          if [[ ! \"${__line}\" =~ ^=\\  ]] &&\n             [[ \"${_counter}\" -gt 20  ]]\n          then\n            break\n          fi\n        else\n          continue\n        fi\n      done < \"${_path}\"\n    elif ! ((_only_title))        &&\n         LC_ALL=C _contains \"${_path##*.}\" \"${_TEXT_FILE_EXTENSIONS[@]}\"\n    then\n      local               __line=\n      while IFS= read -r  __line  ||  [[ -n \"${__line:-}\" ]]\n      do\n        if [[ -n \"${__line:-}\"        ]]\n        then\n          if [[ \"${#__line}\" -gt 500  ]]\n          then\n            _first_line=\"${__line:0:500}...\"\n          else\n            _first_line=\"${__line}\"\n          fi\n\n          break\n        fi\n      done < \"${_path}\"\n    fi\n\n    if [[ -n \"${_title:-}\"    ]]\n    then\n      printf \"%s\\\\n\" \"${_title/%$'\\r'}\"\n    elif ! ((_only_title)) && [[ -n \"${_first_line:-}\"    ]]\n    then\n      printf \"%s\\\\n\" \"__first_line:${_first_line/%$'\\r'}\"\n    fi\n\n    # turn off case-insensitive matching\n    shopt -u nocasematch\n  fi\n}\n\n# _get_id_selector()\n#\n# Usage:\n#   _get_id_selector <path> | <selector> [--notebook]\n#\n# Options:\n#   --notebook  Always include the notebook name in the output.\n#\n# Description:\n#   Convert a <path> or <selector> to valid selector constructed with ids,\n#   which are resolved first during selector resolution. This function gives\n#   precedence to folder names in input.\n_get_id_selector() {\n  local _folder_path=\n  local _id_selector=\n  local _notebook_name=\n  local _notebook_path=\n  local _relative_path=\n  local _selector=\"${1:-}\"\n  local _selector_relative_path=\n  local _trailing_slash=0\n\n  case \"${2:-}\" in\n    --notebook) local _always_include_notebook=1 ;;\n    *)          local _always_include_notebook=0 ;;\n  esac\n\n  if [[ -z \"${_selector:-}\"     ]]\n  then\n    return 0\n  fi\n\n  if [[ \"${_selector:-}\" =~ /$  ]]\n  then\n    _trailing_slash=1\n  fi\n\n  if [[ \"${_selector:-}\" =~ ^/  ]]\n  then # selector is full path\n    if [[ \"${_selector}\" =~ ^${NB_DIR}      ]]\n    then\n      local _path_with_notebook=\"${_selector#\"${NB_DIR}\"/}\"\n      _notebook_name=\"${_path_with_notebook%%/*}\"\n      _notebook_path=\"${NB_DIR}/${_notebook_name}\"\n\n      if [[ \"${_path_with_notebook:-}\" =~ / ]]\n      then\n        _selector_relative_path=\"${_path_with_notebook#*/}\"\n      fi\n    else\n      _notebook_name=\"local\"\n\n      _notebook_path=\"$(\n        cd \"${_selector%/*}\"    &&\n          __set_notebook_paths  &&\n          _notebooks current --path --no-color\n      )\"\n\n      if [[ \"${_selector:-}\" == \"${_notebook_path:-}\" ]]\n      then\n        _selector_relative_path=\n      else\n        _selector_relative_path=\"${_selector#\"${_notebook_path}\"/}\"\n      fi\n    fi\n  else\n    if [[ \"${_selector:-}\" =~ :   ]]\n    then\n      _notebook_name=\"${_selector%%:*}\"\n      _selector_relative_path=\"${_selector#*:}\"\n    else\n      _selector_relative_path=\"${_selector:-}\"\n    fi\n  fi\n\n  if [[ -z \"${_notebook_path:-}\"  ]]\n  then\n    case \"${_notebook_name:-}\" in\n      local) _notebook_path=\"$(_notebooks --local --path --no-color)\" ;;\n      *)     _notebook_path=\"${NB_DIR}/${_notebook_name}\"             ;;\n    esac\n  fi\n\n  local _parent_folder_path=\n\n  if [[ -n \"${_notebook_name:-}\"  ]]\n  then\n    _id_selector+=\"${_notebook_name}:\"\n    _parent_folder_path=\"${_notebook_path:-}\"\n  else\n    _parent_folder_path=\"$(_notebooks current --path)\"\n\n    if ((_always_include_notebook))\n    then\n      if _notebooks current --local\n      then\n        _id_selector+=\"local:\"\n      else\n        _id_selector+=\"${_parent_folder_path##*/}:\"\n      fi\n    fi\n  fi\n\n  local _id_path=\n\n  if [[ -n \"${_selector_relative_path:-}\" ]]\n  then\n    local _selector_segments=()\n\n    IFS=\"/\" read -ra _selector_segments <<< \"${_selector_relative_path:-}\"\n\n    local i=\n    for ((i=0; i < ${#_selector_segments[@]}; i++))\n    do\n      local _segment_id=\n\n      if [[ \"${i}\" -eq \"$((${#_selector_segments[@]} - 1))\" ]]\n      then # it's the last segment\n        if [[ \"${_selector_segments[i]:-}\" =~ ^[0-9]+$      ]] &&\n           ! ((_trailing_slash))\n        then\n          _segment_id=\"${_selector_segments[i]:-}\"\n        fi\n      fi\n\n      if [[ -z \"${_segment_id:-}\"         ]]\n      then\n        _segment_id=\"$(\n          _index get_id                   \\\n            \"${_selector_segments[i]:-}\"  \\\n            \"${_parent_folder_path}\"      || :\n        )\"\n      fi\n\n      local _segment_basename=\n\n      if [[ -z \"${_segment_id:-}\"                     ]] &&\n         [[ \"${_selector_segments[i]:-}\"  =~ ^[0-9]+$ ]]\n      then\n        _segment_basename=\"$(\n          _index get_basename             \\\n            \"${_selector_segments[i]:-}\"  \\\n            \"${_parent_folder_path}\" 2>/dev/null || :\n        )\"\n\n        if [[ -n \"${_segment_basename:-}\" ]]\n        then\n          _segment_id=\"${_selector_segments[i]:-}\"\n        fi\n      fi\n\n      if [[ -z \"${_segment_id:-}\" ]]\n      then\n        return 1\n      fi\n\n      if [[ -z \"${_id_path:-}\"    ]]\n      then\n        _id_path+=\"${_segment_id}\"\n      else\n        _id_path+=\"/${_segment_id}\"\n      fi\n\n      _parent_folder_path+=\"/${_segment_basename:-${_selector_segments[i]:-}}\"\n    done\n  fi\n\n  if [[ -n \"${_id_path:-}\"        ]] &&\n     [[ !  \"${_id_path}\" == \"/\"   ]]\n  then\n    _id_selector+=\"${_id_path}\"\n  fi\n\n  if ((_trailing_slash))\n  then\n    _id_selector+=\"/\"\n  fi\n\n  printf \"%s\\\\n\" \"${_id_selector:-}\"\n}\n\n# _get_visible_length()\n#\n# Usage:\n#   _get_visible_length <string> [<extra-length>]\n#\n# Describe:\n#   Calculate the apparent length of <string>, with byte and character\n#   calculations for handling unicode characters.\n#\n# More Information:\n#   https://stackoverflow.com/a/31009961\n_get_visible_length() {\n  local _extra_length=\"${2:-0}\"\n  local _string=\"${1:-}\"\n\n  _LANG=\"${LANG:-}\" _LC_ALL=\"${LC_ALL:-}\"\n\n  local _length_chars=\n  _length_chars=\"${#_string}\"\n\n  LANG=C LC_ALL=C\n\n  local _length_bytes=\n  _length_bytes=\"${#_string}\"\n\n  LANG=\"${_LANG:-}\" LC_ALL=\"${_LC_ALL:-}\"\n\n  local _difference=\n  _difference=$(((_length_bytes-_length_chars)/3))\n\n  local _calculated_length=\n  _calculated_length=$((_length_chars+_difference))\n\n  if ((_extra_length))\n  then\n    _calculated_length=$((_calculated_length+_extra_length))\n  fi\n\n  printf \"%s\\\\n\" \"${_calculated_length:-0}\"\n}\n\n# _grep_supports_color()\n#\n# Usage:\n#   _grep_supports_color\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If grep supports the --color option.\n#   1 (error,  false)  if not.\n_grep_supports_color() {\n  printf \"\\\\n\" | grep --color=never \"\" >/dev/null 2>&1\n}\n\n# _highlight_syntax_if_available()\n#\n# Usage:\n#   _highlight_syntax_if_available [<path> | <extension>]\n#\n# Description:\n#   If `bat` or Pygments is available, use it to highlight syntax. When neither\n#   is available, pipe through `cat`.\n#\n# References:\n#   https://github.com/sharkdp/bat\n#   https://pygments.org/\n_highlight_syntax_if_available() {\n  # Usage: _highlight_syntax_with_extension <extension>\n  _highlight_syntax_with_extension() {\n    ! _contains \"${1:-}\" \"db\" # TODO\n  }\n\n  local _extension=\n  local _path=\n\n  if [[ \"${1:-}\" =~ / ]]\n  then\n    _path=\"${1}\"\n  elif [[ -n \"${1:-}\" ]]\n  then\n    _extension=\"${1}\"\n  else\n    _extension=\"md\"\n  fi\n\n  if ! ((_COLOR_ENABLED))\n  then\n    if [[ -n \"${_path:-}\"   ]]\n    then\n      cat \"${_path}\"\n    else\n      cat\n    fi\n\n    return 0\n  fi\n\n  if hash \"bat\" 2>/dev/null\n  then\n    local _arguments=()\n\n    if [[ -n \"${_path:-}\"   ]]\n    then\n      _arguments+=(\"${_path}\")\n    elif _highlight_syntax_with_extension \"${_extension}\"\n    then\n      _arguments+=(\"--language\" \"${_extension}\")\n\n      if ! printf \"\" | bat  --color     always          \\\n                            --language  \"${_extension}\" \\\n                            --paging    never           \\\n                            --plain                     \\\n                            2>/dev/null\n      then\n        cat\n\n        return 0\n      fi\n    fi\n\n    bat \"${_arguments[@]}\"  \\\n      --color   always      \\\n      --paging  never       \\\n      --plain               \\\n      --theme \"${NB_SYNTAX_THEME:-base16}\"\n  elif hash \"highlight\" 2>/dev/null\n  then\n    local _arguments=(\"-O\" \"ansi\")\n\n    if [[ -n \"${_path:-}\"   ]]\n    then\n      _arguments+=(\"${_path}\")\n    elif _highlight_syntax_with_extension \"${_extension}\"\n    then\n      _arguments+=(\"--syntax\" \"${_extension}\")\n    fi\n\n    highlight \"${_arguments[@]}\"\n  elif ((_COLOR_ENABLED)) && hash \"pygmentize\" 2>/dev/null\n  then # pygments is installed.\n    local _arguments=(\"-O\" \"style=default\" \"-f\" \"terminal\")\n\n    if [[ -n \"${_path:-}\"   ]]\n    then\n      _arguments+=(\"${_path}\")\n    elif _highlight_syntax_with_extension \"${_extension}\"\n    then\n      _arguments+=(\"-l\" \"${_extension}\")\n    fi\n\n    pygmentize \"${_arguments[@]}\" 2>/dev/null\n  else\n    if [[ -n \"${_path:-}\"   ]]\n    then\n      cat \"${_path}\"\n    else\n      cat\n    fi\n  fi\n}\n\n# _join()\n#\n# Usage:\n#   _join <delimiter> <list-item>...\n#\n# Description:\n#   Print a string containing all <list-item> arguments separated by\n#   <delimiter>.\n#\n# Example:\n#   _join \"${_delimeter}\" \"${_list[@]}\"\n#\n# More Information:\n#   https://stackoverflow.com/a/17841619\n_join() {\n  local _delimiter=\"${1:-}\"\n\n  shift\n\n  local _joined_string=\"${1:-}\"\n\n  shift\n\n  local __element=\n  for   __element in \"${@:-}\"\n  do\n    [[ -n \"${__element:-}\" ]] || continue\n\n    _joined_string+=\"${_delimiter:-}${__element:-}\"\n  done\n\n  printf \"%s\\\\n\" \"${_joined_string}\"\n}\n\n# _less_prompt()\n#\n# Usage:\n#   _less_prompt\n#\n# Description:\n#   The prompt to display in `less`.\n_less_prompt() {\n  # TODO: remove when less 668 or higher is widely available\n  local _less_version=\n  _less_version=\"$(less --version | head -1)\"\n  _less_version=\"${_less_version#* }\"\n  _less_version=\"${_less_version%% *}\"\n  _less_version=\"${_less_version%%.*}\"\n\n  local _prompt=\"\\\n> scroll for more, h for help, or q to quit\"\n\n  if [[ \"${_COLUMNS}\" -gt 81 ]]\n  then\n    # TODO: remove when less 668 or higher is widely available\n    if [[ \"${_less_version:-}\" -gt \"653\" ]] &&\n       [[ \"${_less_version:-}\" -lt \"668\" ]]\n    then # render prompt without multibyte characters\n      _prompt=\"\\\n> scroll for more, f / b to jump forward / back, h for help, or q to quit\"\n    else\n      _prompt=\"\\\n> scroll for more, f / b to jump ↓ / ↑, h for help, or q to quit\"\n    fi\n  fi\n\n  printf \"%s\\\\n\" \"${_prompt}\"\n}\n\n# _list_files()\n#\n# Usage:\n#   _list_files <path> [--reverse] [--sort] [--standard-input] [--type <type>]\n#\n# Description:\n#   List files in the current notebook or filenames from standard input.\n_list_files() {\n  local _path=\n  local _read_from_standard_input=0\n  local _reverse=0\n  local _sort=0\n  local _type=\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --reverse)\n        _reverse=1\n        ;;\n      --sort)\n        _sort=1\n        ;;\n      --standard-input)\n        _read_from_standard_input=1\n        ;;\n      --type)\n        if _option_value_is_present \"${2:-}\"\n        then\n          _type=\"${2}\"\n\n          shift\n        fi\n        ;;\n      --[A-Za-z]*)\n        _type=\"${1:2}\"\n        ;;\n      [^-]*)\n        if [[ -z \"${_path:-}\" ]] && [[ \"${1:-}\" =~ ^/ ]]\n        then\n          _path=\"${1}\"\n        fi\n    esac\n\n    shift\n  done\n\n  if [[ -z \"${_path:-}\"   ]]\n  then\n    _path=\"$(_notebooks current --path)\"\n  fi\n\n  if ((_read_from_standard_input)) && _piped_input\n  then\n    cat\n  elif ((_sort))\n  then\n    cat \"${_path}/.index\"\n  else\n    ls -t -1 \"${_path}\"\n  fi | {\n    if ((_reverse))\n    then\n      # https://stackoverflow.com/a/744093\n      sed '1!G;h;$!d'\n    else\n      cat\n    fi\n  } | {\n    if [[ -n \"${_type:-}\" ]]\n    then\n      local __extension=\n      local _grep_patterns=()\n\n      case \"${_type}\" in\n        bookmark|bookmarks)\n          grep                  \\\n            -e '\\.bookmark\\.'   \\\n            -e '\\-bookmark\\.'\n          ;;\n        book|books)\n          grep -e 'epub$'\n          ;;\n        note|notes)\n          for __extension in \"${_TEXT_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"${__extension}$\")\n          done\n\n          grep \"${_grep_patterns[@]}\" \\\n            | grep -v                 \\\n                -e '\\.bookmark\\.'     \\\n                -e '\\-bookmark\\.'\n          ;;\n        folder|folders|directory|directories)\n          local         __line=\n          while read -r __line\n          do\n            if [[ -d \"${_path}/${__line}\" ]]\n            then\n              printf \"%s\\\\n\" \"${__line}\"\n            fi\n          done\n          ;;\n        archive)\n          for __extension in \"${_ARCHIVE_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"${__extension}$\" \"-e\" \"${__extension}.enc$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        audio|music)\n          for __extension in \"${_AUDIO_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"${__extension}$\" \"-e\" \"${__extension}.enc$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        document|documents|doc|docs)\n          for __extension in \"${_DOCUMENT_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\" \"-e\" \"\\.${__extension}\\.enc$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        encrypted)\n          for __extension in \"${_ENCRYPTED_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        image|images|picture|pictures)\n          for __extension in \"${_IMAGE_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\" \"-e\" \"\\.${__extension}\\.enc$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        text|txt)\n          for __extension in \"${_TEXT_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        todo|todos)\n          for __extension in \"${_TODO_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        video|videos)\n          for __extension in \"${_VIDEO_FILE_EXTENSIONS[@]}\"\n          do\n            _grep_patterns+=(\"-e\" \"\\.${__extension}$\" \"-e\" \"\\.${__extension}\\.enc$\")\n          done\n\n          grep \"${_grep_patterns[@]}\"\n          ;;\n        *)\n          grep -e \"\\.${_type}$\"\n          ;;\n      esac\n    else\n      cat\n    fi\n  }\n}\n\n# _open_in_gui_app()\n#\n# Usage:\n#   _open_in_gui_app <url> | <path>\n#\n# Description:\n#   Open <url> or <path> in the system GUI web browser or application for the\n#   given file type.\n_open_in_gui_app() {\n  local _target=\"${1:-}\"\n\n  [[ -n \"${_target:-}\" ]] || return 1\n\n  if [[ -n \"${NB_GUI_BROWSER:-}\" ]] &&\n     _string_is_url \"${_target:-}\"\n  then\n    if [[ \"${OSTYPE}\" =~ cygwin|msys|win32    ]]\n    then\n      start \"${NB_GUI_BROWSER:-}\" \"${_target}\"\n    else\n      local _gui_browser_command=(\"${NB_GUI_BROWSER:-}\")\n\n      if _command_exists \"${_gui_browser_command[0]:-}\" ||\n         [[ -f \"${_gui_browser_command[0]:-}\" ]]\n      then\n        \"${_gui_browser_command[@]:-}\" \"${_target:-}\" 2>/dev/null &\n      fi\n    fi\n  elif _command_exists \"xdg-open\"\n  then\n    xdg-open \"${_target}\"\n  elif _command_exists \"open\"\n  then\n    open \"${_target}\"\n  elif _command_exists \"wslview\"\n  then\n    wslview \"${_target}\"\n  elif [[ \"${OSTYPE}\" =~ cygwin|msys|win32    ]]\n  then # https://stackoverflow.com/q/3739327\n    rundll32 url.dll,FileProtocolHandler \"${_target}\"\n  else\n    return 1\n  fi\n}\n\n# _pager()\n#\n# Usage:\n#   _pager\n#\n# Description:\n#   Display standard input in the preferred pager, `less`, `bat`, or `cat`.\n_pager() {\n  local _less_options=()\n  _less_options=(-R --CLEAR-SCREEN --prompt=\"$(_less_prompt)\")\n\n  if [[ -n  \"${PAGER:-}\"          ]]\n  then\n    local _pager_command=()\n    IFS=\" \" read -r -a _pager_command <<< \"${PAGER:-}\"\n\n    if [[   \"${PAGER:-}\" =~ less  ]]\n    then\n      \"${_pager_command[@]:-less}\" \"${_less_options[@]:-}\"\n    else\n      \"${_pager_command[@]:-cat}\"\n    fi\n  elif _command_exists \"less\"\n  then\n    less \"${_less_options[@]:-}\"\n  elif _command_exists \"bat\"\n  then\n    bat --style numbers,grid\n  else\n    cat\n  fi\n}\n\n# _pandoc()\n#\n# Usage:\n#   _pandoc [--standard-input | <path>] [<pandoc-options>]\n#\n# Description:\n#   Interact with pandoc, using iconv when available.\n_pandoc() {\n  if ! _command_exists \"pandoc\"\n  then\n    _warn printf \"%spandoc%s not found.\\\\n\" \"${_BT}\" \"${_BT}\"\n\n    return 1\n  fi\n\n  local _pandoc_arguments=()\n  local _path=\n  local _read_from_standard_input=0\n\n  case \"${1:-}\" in\n    --standard-input)\n      _read_from_standard_input=1\n      ;;\n    -*)\n      _pandoc_arguments+=(\"${1:-}\")\n      ;;\n    *)\n      _path=\"${1:-}\"\n      ;;\n  esac\n\n  shift\n\n  [[ -n \"${1:-}\" ]] && _pandoc_arguments+=(\"${@}\")\n\n  if [[ -n \"${_path:-}\" ]]\n  then\n    cd \"${_path%/*}\"\n  fi\n\n  if _command_exists \"iconv\"          &&  {\n       ((_read_from_standard_input))  ||  _file_is_text \"${_path:-}\"\n     }\n  then\n    {\n      if ((_read_from_standard_input))\n      then\n        iconv -c -t utf-8\n      else\n        iconv -c -t utf-8 \"${_path}\"\n      fi\n    } | {\n      if [[ -n \"${_pandoc_arguments[*]:-}\"  ]]\n      then\n        pandoc \"${_pandoc_arguments[@]:-}\" --wrap=preserve\n      else\n        pandoc --wrap=preserve\n      fi\n    } | {\n      iconv -f utf-8\n    }\n  else\n    if ! ((_read_from_standard_input))\n    then\n      _pandoc_arguments=(\"${_path}\" \"${_pandoc_arguments[@]:-}\")\n    fi\n\n    if [[ -n \"${_pandoc_arguments[*]:-}\"    ]]\n    then\n      pandoc \"${_pandoc_arguments[@]:-}\"\n    else\n      pandoc\n    fi\n  fi\n}\n\n# _piped_input()\n#\n# Usage:\n#   _piped_input\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If piped input is present.\n#   1 (error,  false)  If the current input is interactive (eg, a shell).\n_piped_input() {\n  [[ ! -t 0 ]]\n}\n\n# _print_line()\n#\n# Usage:\n#   _print_line <text> [--muted] [--no-wrap] [--visible-length [<extra-length>]\n#\n# Description:\n#   Print a line of dashes the length of <text>.\n#\n# More Information:\n#   https://wiki.bash-hackers.org/commands/builtin/printf\n_print_line() {\n  local _extra_length=0\n  local _muted=0\n  local _text=\n  local _visible_length=0\n  local _wrap_line=1\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --muted*) _muted=1              ;;\n      --no*w*)  _wrap_line=0          ;;\n      --vis*)   _visible_length=1     ;;\n      *)\n        case \"${_text:-}\" in\n          '') _text=\"${1:-}\"          ;;\n          *)  _extra_length=\"${1:-}\"  ;;\n        esac\n        ;;\n    esac\n\n    shift\n  done\n\n  local _text_length=\n\n  if ((_visible_length))\n  then\n    _text_length=\"$(\n      _get_visible_length \"${_text:-}\" \"${_extra_length:-0}\"\n    )\"\n  else\n    _text_length=\"${#_text}\"\n  fi\n\n  local _full_width_line=0\n\n  if ! ((_wrap_line)) && {\n       [[ -z \"${_text_length:-}\"                    ]] ||\n       [[    \"${_text_length:-}\" -gt \"${_COLUMNS}\"  ]]\n     }\n  then\n    _full_width_line=1\n  fi\n\n  local _line=\n\n  if ((_full_width_line))\n  then\n    printf -v _line \"%*s\" \"${_COLUMNS}\" \"\"\n  else\n    printf -v _line \"%*s\" \"${_text_length}\" \"\"\n  fi\n\n  if ((_muted))\n  then\n    _color_muted \"${_line// /-}\"\n  else\n    _color_secondary \"${_line// /-}\"\n  fi |  if ((_full_width_line))\n        then\n          tr -d '\\n'\n        else\n          cat\n        fi\n}\n\n# _print_padding()\n#\n# Usage:\n#   _print_padding <line> <columns> [<aligned>]\n#\n# Description:\n#   Print a string of spaces that can be used as left padding to\n#   center-align <line>. <aligned> is an optional boolean that can\n#   be used to print no padding, returning an empty string.\n_print_padding() {\n  local _padding_centered=\"${3:-1}\"\n  local _padding_columns=\"${2:-}\"\n  local _padding_line=\"${1:-}\"\n\n  local _padding_line_length=\"${#_padding_line}\"\n\n  local _padding_amount=$(( (_padding_columns-_padding_line_length) / 2 ))\n\n  if ((_padding_centered)) && ((_padding_amount))\n  then\n    printf \"%-${_padding_amount}s\" \" \"\n  fi\n}\n\n# _print_welcome()\n#\n# Usage:\n#   _print_welcome\n#\n# Description:\n#   Print the welcome message.\n_print_welcome() {\n  local _padding=\n  _padding=\"$(_print_padding \" / / | | | | |_) |\" \"${_COLUMNS}\")\"\n\n  _print_line \"$(printf \"%-${_COLUMNS}s\" '.')\"\n\n  cat <<HEREDOC\n${_padding}$(_color_primary \"Welcome\") to\n${_padding}__          _\n${_padding}\\ \\   _ __ | |__\n${_padding} \\ \\ | '_ \\| '_ \\\\\n${_padding} / / | | | | |_) |\n${_padding}/_/  |_| |_|_.__/\nHEREDOC\n\n  _print_line \"$(printf \"%-${_COLUMNS}s\" '.')\"\n}\n\n# _selector_get_identifier()\n#\n# Usage:\n#   _selector_get_identifier <selector>\n#\n# Description:\n#   Print the identifier (non-notebook) portion of a selector.\n_selector_get_identifier() {\n  local _selector=\"${1:-}\"\n\n  if [[   \"${_selector:-}\" =~ :     ]] &&\n     [[ ! \"${_selector:-}\" =~ /.*:  ]]\n  then\n    printf \"%s\\\\n\" \"${_selector#*:}\" # strip notebook name\n  else\n    printf \"%s\\\\n\" \"${_selector:-}\"\n  fi\n}\n\n# _selector_resolve_folders()\n#\n# Usage:\n#   _selector_resolve_folders <selector> [<notebook-path>] [--build]\n#\n# Options:\n#   --build  Build a new path that includes segments that don't exist yet.\n#\n# Description:\n#   Resolve a selector path, which can be a mix of folder names and ids.\n_selector_resolve_folders() {\n  local _build_path=0\n  local _folder_relative_path=\n  local _notebook_path=\n  local _selector=\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      --build)\n        _build_path=1\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\"   ]]\n        then\n          _selector=\"${__arg}\"\n        else\n          _notebook_path=\"${__arg}\"\n        fi\n        ;;\n    esac\n  done\n\n  local _selector_path=\"${_selector#*:}\"\n\n  if [[ \"${_selector}\" =~ :         ]]\n  then\n    local _selector_notebook_path=\n    _selector_notebook_path=\"$(\n      _notebooks show \"${_selector%%:*}\" --path 2>/dev/null || :\n    )\"\n\n    if [[ -n \"${_selector_notebook_path:-}\"     ]]\n    then\n      _notebook_path=\"${_selector_notebook_path}\"\n    fi\n  fi\n\n  if [[ -z \"${_notebook_path:-}\"    ]]\n  then\n    _notebook_path=\"$(_notebooks current --path)\"\n  fi\n\n  if [[ \"${_selector_path}\" =~ ^/   ]]\n  then\n    _selector_path=\"${_selector_path#\"${_notebook_path}\"/}\"\n  fi\n\n  if [[ ! \"${_selector_path}\"  =~ / ]]\n  then\n    if ((_build_path))\n    then\n      _build_path=0\n      _selector_path=\"${_selector_path}/\"\n    else\n      return 0\n    fi\n  fi\n\n  while [[ \"${_selector_path}\" =~ / ]]\n  do\n    local _folder_name=\n    local _parent_folder_path=\n    local _selector_segment=\"${_selector_path%%\\/*}\"\n\n    if [[ -z \"${_folder_relative_path:-}\"       ]]\n    then\n      _parent_folder_path=\"${_notebook_path}\"\n    else\n      _parent_folder_path=\"${_notebook_path}/${_folder_relative_path}\"\n    fi\n\n    if [[ -n \"${_selector_segment:-}\"           ]]\n    then\n      if [[ \"${_selector_segment}\" =~ ^[0-9]+$  ]]\n      then # folder name might be an id\n        _folder_name=\"$(\n          _index get_basename \"${_selector_segment:?}\" \"${_parent_folder_path:?}\" ||\n            printf \"%s\\\\n\" \"${_selector_segment:?}\"\n        )\"\n      fi\n\n      if [[ -z \"${_folder_name:-}\"              ]]\n      then\n        _folder_name=\"${_selector_segment}\"\n      fi\n\n      if [[ -d \"${_parent_folder_path:?}/${_folder_name:?}\" ]] ||\n         ((_build_path))\n      then\n        if [[ -z \"${_folder_relative_path:-}\"   ]]\n        then\n          _folder_relative_path=\"${_folder_name}\"\n        else\n          _folder_relative_path+=\"/${_folder_name}\"\n        fi\n\n        _selector_path=\"${_selector_path#*/}\"\n\n        continue\n      fi\n    fi\n\n    return 1\n  done\n\n  printf \"%s\\\\n\" \"${_folder_relative_path:-}\"\n}\n\n# _selector_resolve_path()\n#\n# Usage:\n#   _selector_resolve_path <selector> [<notebook-path>] [--full | --relative]\n#                          [--skip-titles]\n#\n# Options:\n#   --full  Print the full path.\n#\n# Description:\n#   Determine relative path of the file that is identified by the given <id>,\n#   <filename>, <path>, or <title> and is in the current notebook or a\n#   notebook specified with a colon prefix.\n#\n#   Examples:\n#     1\n#     example.md\n#     title\n#     relative/path/to/example.md\n#     /path/to/example.md\n#     notebook:1\n#     notebook:example.md\n#     notebook:title\n#     notebook:relative/path/to/example.md\n#     notebook:/path/to/example.md\n_selector_resolve_path() {\n  local _identifier=\n  local _notebook_path=\n  local _print_full_path=0\n  local _relative_path=\n  local _selector=\n  local _skip_titles=0\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg:-}\" in\n      --full)\n        _print_full_path=1\n        ;;\n      --skip-titles)\n        _skip_titles=1\n        ;;\n      [^-]*)\n        if [[ -z \"${_selector:-}\"   ]]\n        then\n          _selector=\"${__arg%/}\" # strip trailing /\n        else\n          _notebook_path=\"${__arg:-}\"\n        fi\n        ;;\n    esac\n  done\n\n  if [[ -n \"${_selector}\"           ]]\n  then\n    if [[ -z \"${_notebook_path:-}\"  ]] &&\n       [[ \"${_selector}\" =~ (:|^/)  ]]\n    then\n      _notebook_path=\"$(\n        _notebooks show \"${_selector}\" --path 2>/dev/null || :\n      )\"\n    fi\n\n    if [[ -z \"${_notebook_path:-}\"  ]]\n    then\n      _notebook_path=\"$(\n        _notebooks current --path 2>/dev/null || :\n      )\"\n    fi\n\n    _identifier=\"$(_selector_get_identifier \"${_selector}\")\"\n    _identifier=\"${_identifier%/}\" # strip trailing /\n\n    if [[ -e \"${_identifier}\"                     ]] &&\n       [[ \"${_identifier}\" =~ ^${_notebook_path}  ]]\n    then # <selector> is a full path in the current notebook\n      _relative_path=\"${_identifier/${_notebook_path}}\"\n      _relative_path=\"${_relative_path#\\/}\"\n    elif [[ \"${_identifier}\" =~ ^/  ]] &&\n         [[ -e \"${_identifier:-}\"   ]]\n    then # <selector> is a full path in a different notebook\n      _notebook_path=\"$(\n        _notebooks show \"${_identifier}\" --path 2>/dev/null\n      )\"\n\n      _relative_path=\"${_identifier/\"${_notebook_path}\"\\//}\"\n    elif [[ -e  \"${_notebook_path}/${_identifier}\"  ]] &&\n         [[ !   \"${_identifier}\" =~ ^[0-9]+$        ]]\n    then # <selector> is a relative path with a non-numeric filename\n      _relative_path=\"${_identifier}\"\n    else\n      local _folder_path=\"${_notebook_path}\"\n      local _folder_relative_path=\n      _folder_relative_path=\"$(\n        _selector_resolve_folders \"${_selector}\" \"${_notebook_path}\"\n      )\" || return 0\n\n      if [[ -n \"${_folder_relative_path:-}\"     ]]\n      then\n        _folder_path=\"${_notebook_path}/${_folder_relative_path}\"\n      fi\n\n      _identifier=\"${_identifier##*/}\"\n\n      if [[ -e \"${_folder_path}/${_identifier}\" ]] &&\n         [[ !  \"${_identifier}\" =~ ^[0-9]+$     ]]\n      then # <selector> is relative path with a non-numeric filename\n        _relative_path=\"${_folder_relative_path}/${_identifier}\"\n      elif [[ \"${_identifier}\" =~ ^[0-9]+$      ]]\n      then # <selector> is an id\n        local _basename=\n        _basename=\"$(_index get_basename \"${_identifier}\" \"${_folder_path}\")\"\n\n        if [[ -n \"${_basename:-}\"                     ]]\n        then\n          if [[ -n \"${_folder_relative_path:-}\"       ]]\n          then\n            _relative_path=\"${_folder_relative_path}/${_basename}\"\n          else\n            _relative_path=\"${_basename}\"\n          fi\n        elif [[ -e \"${_notebook_path}/${_identifier}\" ]]\n        then # <selector> is a relative path with numeric filename\n          _relative_path=\"${_identifier}\"\n        fi\n      elif ! ((_skip_titles))\n      then # <selector> might be a title\n        local _maybe_title=\"${_identifier##*\\/}\"\n\n        _relative_path=\"$(\n          {\n            _list_files \"${_folder_path}\"\n          } | {\n            local         __filename=\n            while read -r __filename || [[ -n \"${__filename:-}\" ]]\n            do\n              local _title=\n              _title=\"$(\n                _get_content \"${_folder_path}/${__filename}\" --title\n              )\"\n\n              if [[ -n \"${_title}\"                              ]] &&\n                 {\n                   [[ \"${_title}\" == \"${_maybe_title}\"          ]] ||\n                   {\n                     [[ \"${__filename}\"   =~ todo\\.md$          ]] &&\n                     [[ \"${_maybe_title}\" == \"${_title##*] }\"   ]]\n                   }\n                 }\n              then\n                local _full_path=\"${_folder_path}/${__filename}\"\n\n                printf \"%s\\\\n\" \"${_full_path/\"${_notebook_path}\"\\//}\"\n\n                break\n              fi\n            done\n          }\n        )\"\n      fi\n    fi\n  fi\n\n  if [[ -n \"${_identifier:-}\" ]] && [[ -z \"${_relative_path:-}\" ]]\n  then\n    return 0\n  elif ((_print_full_path))\n  then\n    printf \"%s\\\\n\" \"$(_join \"/\" \"${_notebook_path}\" \"${_relative_path:-}\")\"\n  else\n    printf \"%s\\\\n\" \"${_relative_path:-}\"\n  fi\n}\n\n# _spinner()\n#\n# Usage:\n#   _spinner <pid>\n#\n# Description:\n#   Display an ascii spinner while <pid> is running.\n#\n# Example Usage:\n#   ```\n#   _spinner_example() {\n#     printf \"Working...\"\n#     (sleep 1) &\n#     _spinner $!\n#     printf \"Done!\\\\n\"\n#   }\n#   (_spinner_example)\n#   ```\n#\n# More Information:\n#   http://fitnr.com/showing-a-bash-spinner.html\n_spinner() {\n  local _delay=0.1\n  local _pid=\"${1:-}\"\n  local _spin_string=\"|/-\\\\\"\n\n  if [[ -z \"${_pid:-}\" ]]\n  then\n    _exit_1 printf \"Usage: _spinner <pid>\\\\n\"\n  fi\n\n  while ps a | awk '{print $1}' | grep -q \"${_pid}\"\n  do\n    local _temp=\"${_spin_string#?}\"\n\n    if ((_COLOR_ENABLED))\n    then\n      printf \" %s%s[%s%c%s]%s\"    \\\n        \"${_TPUT_SGR0}\"           \\\n        \"${_TPUT_SETAF_8}\"        \\\n        \"${_TPUT_COLOR_PRIMARY}\"  \\\n        \"${_spin_string}\"         \\\n        \"${_TPUT_SETAF_8}\"        \\\n        \"${_TPUT_SGR0}\"\n\n      printf \"\\b\\b\\b\\b\"\n    fi\n\n    sleep ${_delay}\n\n    _spin_string=\"${_temp}${_spin_string%\"${_temp}\"}\"\n  done\n\n  return 0\n}\n\n# _string_is_email()\n#\n# Usage:\n#   _string_is_email <string>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If the string is recognized as an email address.\n#   1 (error,  false)  if not.\n_string_is_email() {\n  [[ \"${1:-}\" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]+$ ]]\n}\n\n# _string_is_url()\n#\n# Usage:\n#   _string_is_url <string>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If the string is a recognized URL.\n#   1 (error,  false)  if not.\n_string_is_url() {\n  [[ -z \"${1:-}\" ]] && return 1\n\n  local _url_match_patterns=()\n\n  local __url_match_pattern=\n  for   __url_match_pattern in \"${_URL_PATTERNS[@]}\"\n  do\n    _url_match_patterns+=(-e \"^${__url_match_pattern}$\")\n  done\n\n  printf \"%s\\\\n\" \"${1:-}\" | grep -E -q \"${_url_match_patterns[@]:-}\" &>/dev/null\n}\n\n# _wrap()\n#\n# Usage:\n#   _wrap [on | off]\n#\n# Description:\n#   Turn on line wrapping / automatic margins.\n_wrap() {\n  if [[ \"${1:-}\" == \"off\"  ]]\n  then\n    # NOTE: `tput` vs escape sequence:\n    # https://unix.stackexchange.com/a/558771\n    # https://unix.stackexchange.com/a/515938\n    # https://superuser.com/a/189068\n\n    # tput rmam\n    printf '\\033[?7l'\n  elif [[ \"${1:-}\" == \"on\" ]]\n  then\n    # tput smam\n    printf '\\033[?7h'\n  fi\n}\n\n###############################################################################\n# describe\n###############################################################################\n\n# describe()\n#\n# Usage:\n#   describe <name> <description>\n#   describe --get <name>\n#\n# Options:\n#   --get  Print the description for <name> if one has been set.\n#\n# Examples:\n# ```\n#   describe \"list\" <<HEREDOC\n# Usage:\n#   ${_ME} list\n#\n# Description:\n#   List items.\n# HEREDOC\n#\n# describe --get \"list\"\n# ```\n#\n# Set or print a description for a specified command or function <name>. The\n# <description> text can be passed as the second argument or as standard input.\n#\n# To make the <description> text available to other functions, `describe()`\n# assigns the text to a variable with the format `$____DESCRIBE_<name>`.\n#\n# When the `--get` option is used, the description for <name> is printed, if\n# one has been set.\ndescribe() {\n  set +e\n  [[ -z \"${1:-}\"          ]] &&\n    _exit_1 printf \"describe(): <name> required.\\\\n\"\n\n  if [[ \"${1}\" == \"--get\" ]]\n  then # get ------------------------------------------------------------------\n    [[ -z \"${2:-}\"        ]] &&\n      _exit_1 printf \"describe(): <description> required.\\\\n\"\n\n    local _name=\"${2:-}\"\n    local _describe_var=\"____DESCRIBE_${_name//-/_}\"\n\n    if [[ !   \"${_name}\" =~ ^\\-               ]] &&\n       [[     \"${_name}\" =~ ^[A-Za-z0-9_-]+$  ]] &&\n       [[ -n  \"${!_describe_var:-}\"           ]]\n    then\n      printf \"%s\\\\n\" \"${!_describe_var}\"\n    elif _command_exists \"_describe_${_name:-}\"\n    then\n      \"_describe_${_name:-}\"\n    else\n      printf \"No additional information for \\`%s\\`\\\\n\" \"${_name}\"\n    fi\n  else # set ------------------------------------------------------------------\n    if [[ -n \"${2:-}\"     ]]\n    then # argument is present\n      read -r -d '' \"____DESCRIBE_${1//-/_}\" <<HEREDOC\n${2}\nHEREDOC\n\n      eval \"_describe_${1}() { printf \\\"%s\\\\n\\\" \\\"${2:-}\\\"; }\"\n    else # no argument is present, so assume piped input\n      local _describe_var=\"____DESCRIBE_${1//-/_}\"\n\n      read -r -d '' \"${_describe_var}\"\n\n      eval \"_describe_${1}() { printf \\\"%s\\\\n\\\" \\\"${!_describe_var:-}\\\"; }\"\n    fi\n  fi\n  set -e\n}\n\n# Support legacy `desc` name.\ndesc() { describe \"${@}\"; }\n\n###############################################################################\n# Subcommands: Group 1                                     Subcommands: Group 1\n# --------------------                                     --------------------\n#\n# `ls` and dependencies.\n###############################################################################\n# --------------------------------------------------------------------------- #\n\n# count · ############################################################# · count\n\n_describe_count() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} count [<notebook>:][<folder-path>/]\n\n$(_color_primary \"Description\"):\n  Print the number of items in the first level of the current notebook,\n  <notebook>, or the folder at <folder-path>.\nHEREDOC\n}\n_count() {\n  local _list_files_options=()\n  local _selector=\n  local _skip_unmatched_selector=0\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --skip-unmatched-selector)\n        _skip_unmatched_selector=1\n        ;;\n      --type)\n        _list_files_options+=(\"${1}\")\n        _list_files_options+=(_option_get_value \"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      -*|/*)\n        _list_files_options+=(\"${1}\")\n        ;;\n      *)\n        _selector=\"${1}\"\n        ;;\n    esac\n\n    shift\n  done\n\n  if [[ -n \"${_selector:-}\"         ]]\n  then\n    local _selector_path=\n    _selector_path=\"$(_selector_resolve_path \"${_selector}\" --full)\"\n\n    if [[ -z \"${_selector_path:-}\"  ]]\n    then\n      if ! ((_skip_unmatched_selector))\n      then\n        _warn printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector:-}\")\"\n\n        return 1\n      fi\n    else\n      _list_files_options+=(\"${_selector_path:-}\")\n    fi\n  fi\n\n  _list_files \"${_list_files_options[@]:-}\" | wc -l | tr -d ' '\n}\n\n# git · ################################################################# · git\n\n_describe_git() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} git [checkpoint [<message>] | dirty]\n  ${_ME} git <git-options>...\n\n$(_color_primary \"Subcommands\"):\n  checkpoint    Create a new git commit in the current notebook and sync with\n                the remote if \\`${_ME} set auto_sync\\` is enabled.\n  dirty         0 (success, true) if there are uncommitted changes in the\n                current notebook. 1 (error, false) if the notebook is clean.\n\n$(_color_primary \"Description\"):\n  Run \\`git\\` commands within the current notebook directory.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-git-sync\n  ${_README_URL}#-revision-history\n\n$(_color_primary \"See Also\"):\n  ${_ME} help history\n  ${_ME} help remote\n  ${_ME} help run\n  ${_ME} help status\n  ${_ME} help sync\n\n$(_color_primary \"Examples\"):\n  ${_ME} git status\n  ${_ME} git diff\n  ${_ME} git log\n  ${_ME} example:git status\nHEREDOC\n}\n_git() {\n  # _git_autosyncable()\n  #\n  # Usage:\n  #   _git_autosyncable [<notebook-path>]\n  #\n  # Exit / Error / Return Status:\n  #   0 (success, true)  If autosync should trigger.\n  #   1 (error,  false)  If autosync should not trigger.\n  _git_autosyncable() {\n    ((_GIT_ENABLED)) || return 1\n\n    local _last_fetch_timestamp=\n    local _maybe_fetch_timestamp=\n    local _notebook_path=\"${1:-}\"\n\n    if [[ -z \"${_notebook_path}\" ]]\n    then\n      _notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    if ! ((NB_AUTO_SYNC))\n    then # autosync not enabled.\n      return 1\n    fi\n\n    if ! git -C \"${_notebook_path}\" config --get remote.origin.url &>/dev/null\n    then # there is no remote configured.\n      return 1\n    fi\n\n    if [[ ! -e \"${_notebook_path}/.git/FETCH_HEAD\" ]]\n    then # no previous fetches, but has an origin and autosync is enabled.\n      return 0\n    fi\n\n    if _maybe_fetch_timestamp=\"$(\n         stat -c %Y \"${_notebook_path}/.git/FETCH_HEAD\" 2>/dev/null\n       )\"\n    then # GNU\n      _last_fetch_timestamp=\"${_maybe_fetch_timestamp}\"\n    elif _maybe_fetch_timestamp=\"$(\n           gstat -c %Y \"${_notebook_path}/.git/FETCH_HEAD\" 2>/dev/null\n         )\"\n    then # GNU prefixed\n      _last_fetch_timestamp=\"${_maybe_fetch_timestamp}\"\n    else\n      _last_fetch_timestamp=\"$(\n        stat -f '%m' \"${_notebook_path}/.git/FETCH_HEAD\"\n      )\"\n    fi\n\n    local _current_timestamp=\n    _current_timestamp=\"$(date +%s)\"\n\n    local _diff=\n    _diff=$((_current_timestamp-_last_fetch_timestamp))\n\n    [[ \"${_diff}\" -gt 60 ]]\n  }\n\n  # _git_checkpoint()\n  #\n  # Usage:\n  #   _git_checkpoint <notebook-path> <commit-message>\n  #\n  # Description:\n  #   Commit all files in <notebook-path> with the provided <commit-message>.\n  _git_checkpoint() {\n    ((_GIT_ENABLED)) || return 0\n\n    # Usage: _git_checkpoint_commit <notebook-path> <message>\n    _git_checkpoint_commit() {\n      local _message=\"${2:-}\"\n      local _notebook_path=\"${1:-}\"\n\n      if [[ -z \"${_notebook_path:-}\" ]] || [[ -z \"${_message:-}\" ]]\n      then\n        _exit_1 printf \\\n           \"Usage: _git_checkpoint_commit <message> <notebook-path>\"\n      fi\n\n      git -C \"${_notebook_path}\" add --all &&\n        git -C \"${_notebook_path}\" commit -a -m \"${_message}\"\n    }\n\n    local _message=\n    local _notebook_path=\n    local _wait=0\n\n    local __arg=\n    for   __arg in \"${@:-}\"\n    do\n      case \"${__arg}\" in\n        --spinner|--wait)\n          _wait=1\n          ;;\n        *)\n          if [[ -z \"${_notebook_path}\"  ]] &&\n             [[ \"${__arg}\" =~ ^/        ]] &&\n             [[ -d \"${__arg}\"           ]]\n          then\n            _notebook_path=\"${__arg}\"\n          elif [[ -z \"${_message}\" ]]\n          then\n            _message=\"${__arg}\"\n          fi\n          ;;\n      esac\n    done\n\n    if [[ -z \"${_notebook_path:-}\" ]]\n    then\n      _notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    if [[ -z \"${_message}\" ]]\n    then\n      _message=\"[${_ME}] Commit\"\n    fi\n\n    if ((NB_AUTO_SYNC))\n    then\n      (\n        {\n          # only commit when the index is dirty\n          if _git dirty \"${_notebook_path}\"\n          then\n            _git_checkpoint_commit \"${_notebook_path}\" \"${_message}\" &>/dev/null\n          fi && GIT_TERMINAL_PROMPT=0 _git sync \"${_notebook_path}\"  &>/dev/null\n        } || :\n      ) &\n    else\n      (\n        _git_checkpoint_commit \"${_notebook_path}\" \"${_message}\" &>/dev/null ||\n          return 0\n      ) &\n    fi\n\n    if ((_wait))\n    then\n      if ! _piped_input\n      then # interative shell\n        _spinner  ${!}\n      fi\n\n      wait      ${!}\n      return    ${?}\n    else\n      return    0\n    fi\n  }\n\n  # _git_dirty()\n  #\n  # Usage:\n  #   _git_dirty [<notebook-path>]\n  #\n  # Exit / Error / Return Status:\n  #   0 (success, true)  If there are uncommitted changes in <notebook-path>\n  #                      or the current notebook.\n  #   1 (error,  false)  If <notebook-path> or the current notebook is clean.\n  _git_dirty() {\n    ((_GIT_ENABLED)) || return 1\n\n    local _target_path=\"${1:-}\"\n\n    if [[ -z \"${_target_path:-}\" ]]\n    then\n      _target_path=\"$(_notebooks current --path)\"\n    fi\n\n    [[ -n \"$(git -C \"${_target_path}\" status --porcelain)\" ]]\n  }\n\n  # _git_out_of_sync()\n  #\n  # Usage:\n  #   _git_out_of_sync [<notebook-path>]\n  #\n  # Exit / Error / Return Status:\n  #   0 (success, true)  If <notebook-path> or the current notebook is out of\n  #                      sync with the remote.\n  #   1 (error,  false)  If <notebook-path> or the current notebook is synced\n  #                      with the remote.\n  _git_out_of_sync() {\n    ((_GIT_ENABLED)) || return 1\n\n    local _notebook_path=\"${1:-}\"\n\n    if [[ -z \"${_notebook_path:-}\" ]]\n    then\n      _notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    git -C \"${_notebook_path}\" status | grep -q 'diverged'\n  }\n\n  # _git_required()\n  #\n  # Usage:\n  #   _git_required\n  #\n  # Description:\n  #   Exit with `_exit_1` if `git` isn't found.\n  _git_required() {\n    ((_GIT_ENABLED)) || return 0\n\n    if ! _command_exists \"git\"\n    then\n      _exit_1 cat <<HEREDOC\nWelcome to $(_color_primary \"${_ME}\")!\n\nGit is required, but wasn't found. Install Git, then run \\`${_ME}\\` again.\n\nAbout Git: $(_color_primary \"https://git-scm.com\")\nHEREDOC\n    fi\n\n    local _git_name=\n    _git_name=\"$(git config --global --includes user.name   || printf '')\"\n\n    local _git_email=\n    _git_email=\"$(git config --global --includes user.email || printf '')\"\n\n    if [[ -z \"${_git_name:-}\"   ]]  ||\n       [[ -z \"${_git_email:-}\"  ]]\n    then\n      cat <<HEREDOC\nWelcome to $(_color_primary \"${_ME}\")!\n\nGit requires some additional setup before using $(_color_primary \"${_ME}\").\nEnter the name and email address you'd like to use with Git.\nEdits you make are attributed to this name and email address.\nHEREDOC\n      if [[ -z \"${_git_name:-}\"   ]]\n      then\n        while true\n        do\n          local __name=\n          IFS='' read -r -e -d $'\\n' -p \"$(_color_primary \"Name\"):  \" __name\n\n          if [[ -n \"${__name:-}\"  ]]\n          then\n            git config --global user.name \"${__name}\"\n\n            break\n          fi\n        done\n      fi\n\n      if [[ -z \"${_git_email:-}\"  ]]\n      then\n        while true\n        do\n          local __email=\n          IFS='' read -r -e -d $'\\n' -p \"$(_color_primary \"Email\"): \" __email\n\n          if [[ -n \"${__email:-}\" ]]\n          then\n            git config --global user.email \"${__email}\"\n\n            break\n          fi\n        done\n      fi\n    fi\n  }\n\n  # _git_sync()\n  #\n  # Usage:\n  #   _git_sync [<notebook-path>]\n  #\n  # Description:\n  #   Sync <notebook-path> or the current notebook with the remote.\n  _git_sync() {\n    local _notebook_path=\"${1:-}\"\n    local _prompt=\"${GIT_TERMINAL_PROMPT:-1}\"\n\n    if _contains \"--skip-prompt\" \"${1:-}\" \"${2:-}\"\n    then\n      _prompt=0\n    fi\n\n    if [[ -z \"${_notebook_path:-}\"  ]]\n    then\n      _notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    local _remote_url=\n\n    if ! _remote_url=\"$(git -C \"${_notebook_path}\" remote get-url origin 2>/dev/null)\" ||\n       [[ -z \"${_remote_url:-}\"     ]]\n    then\n      return 0\n    fi\n\n    local _git_branch=\n    _git_branch=\"$(git -C \"${_notebook_path}\" rev-parse --abbrev-ref HEAD 2>/dev/null)\"\n\n    local _branch_query_succeeded=0\n\n    local _remote_branches=\n    _remote_branches=($(\n      git -C \"${_notebook_path}\" ls-remote --heads \"${_remote_url}\" 2>/dev/null \\\n        | LC_ALL=C sed \"s/.*\\///g\"\n    )) && _branch_query_succeeded=1\n\n    if ! GIT_TERMINAL_PROMPT=0 git -C \"${_notebook_path}\" fetch origin \"${_git_branch}\" &>/dev/null\n    then\n      if _contains \"${_git_branch}\" \"${_remote_branches[@]:-}\" ||\n         ! ((_branch_query_succeeded))\n      then\n        if ((_prompt))\n        then # fetch again, displaying git prompt and/or errors after newline\n          printf \"\\\\n\"\n\n          if ! GIT_TERMINAL_PROMPT=1 git -C \"${_notebook_path}\" fetch origin \"${_git_branch}\"\n          then\n            exit 1\n          fi\n        else\n          return 1\n        fi\n      fi\n    fi\n\n    if ((_prompt))\n    then\n      if ! _contains \"${_git_branch}\" \"${_remote_branches[@]:-}\"  ||\n         ! git -C \"${_notebook_path}\" show-branch                 \\\n           \"remotes/origin/${_git_branch}\" > /dev/null 2>&1       ||\n         {\n           local _local_branch_root_hash=\n           _local_branch_root_hash=\"$(\n             git -C \"${_notebook_path}\" rev-list --max-parents=0  \\\n               \"${_git_branch}\"\n           )\"\n\n           local _remote_branch_root_hash=\n           _remote_branch_root_hash=\"$(\n             git -C \"${_notebook_path}\" rev-list --max-parents=0  \\\n               \"remotes/origin/${_git_branch}\"\n           )\"\n\n           [[ \"${_local_branch_root_hash:-}\" != \"${_remote_branch_root_hash:-}\" ]]\n         }\n      then\n        printf \"\\\\n\"\n\n        _remote set \"${_remote_url}\" \"${_git_branch}\" --skip-preamble\n\n        _git_branch=\"$(git -C \"${_notebook_path}\" rev-parse --abbrev-ref HEAD)\"\n      fi\n    fi\n\n    if git -C \"${_notebook_path}\" show-branch \\\n         \"remotes/origin/${_git_branch}\"      \\\n         > /dev/null 2>&1                     &&\n         ! git -C \"${_notebook_path}\" rebase \"origin/${_git_branch}\" &>/dev/null\n    then\n      local _merge_error=1\n\n      local _conflicted_files=\n      _conflicted_files=($(\n        GIT_PAGER='' git -C \"${_notebook_path}\" diff --name-only --diff-filter=U\n      ))\n\n      local _conflicted_binary_files=()\n      local _conflicted_text_files=()\n\n      if [[ -n \"${_conflicted_files[*]:-}\" ]]\n      then\n        local __maybe_index_relative_path=\n        for   __maybe_index_relative_path in \"${_conflicted_files[@]}\"\n        do\n          if [[ \"${__maybe_index_relative_path}\" =~ (^.index$|/.index$) ]]\n          then\n            # Remove git conflict markers to keep both.\n            # More info: https://stackoverflow.com/a/55187779\n            _sed_i              \\\n              -e '/^<<<<<<</d'  \\\n              -e '/^>>>>>>>/d'  \\\n              -e '/=======/d'   \\\n              \"${_notebook_path}/${__maybe_index_relative_path}\"\n\n            git -C \"${_notebook_path}\" add \"${__maybe_index_relative_path}\"\n          fi\n        done\n\n        local __relative_path=\n        for   __relative_path in \"${_conflicted_files[@]}\"\n        do\n          [[ \"${__relative_path}\" =~ (^.index$|/.index$) ]] && continue\n\n          if _file_is_text \"${__relative_path}\"\n          then\n            _conflicted_text_files+=(\"${__relative_path}\")\n\n            git -C \"${_notebook_path}\" add                \\\n              \"${__relative_path}\"\n          else\n            git -C \"${_notebook_path}\" checkout           \\\n              \"origin/${_git_branch}\" -- \"${__relative_path}\"\n\n            local _conflicted_file=\n            _conflicted_file=\"$(\n              _notebooks show \"${_notebook_path}\"         \\\n                --filename  \"${__relative_path%%.*}--conflicted-copy.${__relative_path#*.}\"\n            )\"\n\n            _conflicted_binary_files+=(\"${_conflicted_file}\")\n\n            git -C \"${_notebook_path}\" mv                 \\\n              \"${__relative_path}\" \"${_conflicted_file}\"\n\n            git -C \"${_notebook_path}\" checkout           \\\n              \"${_git_branch}\" -- \"${__relative_path}\"\n\n            git -C \"${_notebook_path}\" add \"${_conflicted_file}\"\n            git -C \"${_notebook_path}\" add \"${__relative_path}\"\n          fi\n        done\n\n        GIT_EDITOR=true git -C \"${_notebook_path}\" rebase \\\n          --continue &>/dev/null                          &&\n            _merge_error=0\n      fi\n\n      if ((_merge_error))\n      then\n        git -C \"${_notebook_path}\" rebase --abort\n\n        _warn printf                                              \\\n          \"Merge conflict. Use \\`%s git\\` to merge manually.\\\\n\"  \\\n          \"${_ME}\"\n\n        return 1\n      else\n        local _notebook_name=\n        _notebook_name=\"$(_notebooks show \"${_notebook_path}\" --name)\"\n\n        if ((${#_conflicted_text_files[@]}))\n        then\n          printf \"\\\\n\"\n\n          _warn cat <<HEREDOC\nFiles containing conflicts:\n\n$(printf \"  %s\\\\n\" \"${_conflicted_text_files[@]/#/${_notebook_name}:}\")\n\nResolve conflicts with \\`${_ME} edit\\`. More info: \\`${_ME} help sync\\`\nHEREDOC\n        fi\n\n        if ((${#_conflicted_binary_files[@]}))\n        then\n          printf \"\\\\n\"\n\n          _warn cat <<HEREDOC\nConflicted copies of binary files:\n\n$(printf \"  %s\\\\n\" \"${_conflicted_binary_files[@]/#/${_notebook_name}:}\")\nHEREDOC\n        fi\n      fi\n    fi\n\n    GIT_TERMINAL_PROMPT=\"${GIT_TERMINAL_PROMPT:-1}\" \\\n      git -C \"${_notebook_path}\" push               \\\n      --set-upstream                                \\\n      origin \"${_git_branch}\"                       \\\n      &>/dev/null || {\n        _warn printf \"Unable to push to remote.\\\\n\"\n\n        return 1\n      }\n  }\n\n  case \"${1:-}\" in\n    *autosync*)\n      _git_autosyncable \"${2:-}\"\n      ;;\n    checkpoint)\n      shift\n\n      _git_checkpoint \"${@:-}\"\n      ;;\n    dirty)\n      _git_dirty \"${2:-}\"\n      ;;\n    out*of*sync|o|oos|out)\n      _git_out_of_sync \"${2:-}\"\n      ;;\n    required|setup)\n      _git_required\n      ;;\n    sync)\n      _git_sync \"${2:-}\" \"${3:-}\"\n      ;;\n    *)\n      local _notebook_path=\n      _notebook_path=\"$(_notebooks current --path)\"\n\n      if [[ -n \"${1:-}\" ]]\n      then\n        git -C \"${_notebook_path}\" \"${@}\"\n      else\n        git -C \"${_notebook_path}\"\n      fi\n      ;;\n  esac\n}\n\n# help · ############################################################### · help\n\nexport _README_URL=\"https://github.com/xwmx/nb\"\n\n_describe_help() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} help [<subcommand>] [-p | --print]\n  ${_ME} help [-c | --colors] | [-r | --readme] | [-s | --short] [-p | --print]\n\n$(_color_primary \"Options\"):\n  -c, --colors  View information about color themes and color settings.\n  -p, --print   Print to standard output / terminal.\n  -r, --readme  View the \\`${_ME}\\` README file.\n  -s, --short   Print shorter help without subcommand descriptions.\n\n$(_color_primary \"Description\"):\n  Print the program help information. When a subcommand name is passed, print\n  the help information for the subcommand.\n\n$(_color_primary \"Examples\"):\n  ${_ME} help\n  ${_ME} help add\n  ${_ME} help import\n  ${_ME} h notebooks\n  ${_ME} h e\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} h\nHEREDOC\n}\n_help() {\n  local _arguments=()\n  local _color_help=0\n  local _readme=0\n  local _shell=0\n  local _short=0\n  local _use_pager=1\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      +) _help \"add\"    && return 0 ;;\n      -) _help \"delete\" && return 0 ;;\n      --pager)\n        _use_pager=1\n        ;;\n      -p|--print|--dump|--skip*pager|--no*pager)\n        _use_pager=0\n        ;;\n      -r|*readme*|*README*)\n        _readme=1\n        ;;\n      --shell)\n        _shell=1\n        ;;\n      -s|--short)\n        _short=1\n        ;;\n      -c|*color*|*colour*|*theme*)\n        _color_help=1\n        ;;\n      *)\n        _arguments+=(\"${__arg}\")\n        ;;\n    esac\n  done\n\n  if ! ((_COLOR_ENABLED))\n  then\n    _TPUT_COLOR_PRIMARY=\"\"\n    _TPUT_SETAF_8=\"\"\n    _TPUT_SGR0=\"\"\n  fi\n\n  if ((_readme))\n  then\n    _download_from                          \\\n      \"${_REPO_RAW_URL}/README.md\"          \\\n        | if _command_exists \"pandoc\"       &&\n             _web_browser --check\n          then\n            _pandoc                         \\\n              --standard-input              \\\n              --from  markdown              \\\n              --to    html                  \\\n              2>/dev/null                   \\\n              | _web_browser\n\n            return 0\n          else\n            _highlight_syntax_if_available  \\\n              | if ((_use_pager))\n                then\n                  _pager\n                else\n                  cat\n                fi\n          fi\n  else\n    if ((_color_help))\n    then\n      # NOTE: this screen mirrors the content from README.md#-color-themes:\n      # https://github.com/xwmx/nb#-color-themes\n      _color_primary  \" __          _                     _\"\n      _color_primary  \" \\ \\   _ __ | |__         ___ ___ | | ___  _ __ ___\"\n      _color_primary  \"  \\ \\ | '_ \\| '_ \\   _   / __/ _ \\| |/ _ \\| '__/ __|\"\n      _color_primary  \"  / / | | | | |_) | (_) | (_| (_) | | (_) | |  \\__ \\\\\"\n      _color_primary  \" /_/  |_| |_|_.__/       \\___\\___/|_|\\___/|_|  |___/\"\n      printf \"\\\\n\"\n      _color_secondary \\\n                      \" ---------------------------------------------------\"\n      printf \"\\\\n\"\n      cat <<HEREDOC\n\\`${_ME}\\` uses color to highlight various interface elements, including ids,\nthe current notebook name, the shell prompt, and divider lines.\n\n\\`${_ME}\\` includes several built-in color themes and also supports user-defined\nthemes. The current color theme can be set using \\`${_ME} set color_theme\\`:\n\n    $(_color_primary \"${_ME} set color_theme\")\n\nCustom color themes are \\`${_ME}\\` plugins with a \\`.${_ME}-theme\\` file extension.\nA theme is defined with a single \\`if\\` statement indicating the name and\nassigning the color environment variables to \\`tput\\` ANSI color numbers:\n\n    $(_color_secondary \"# turquoise.${_ME}-theme\")\n    $(_color_primary \"if [[ \\\"\\${NB_COLOR_THEME}\\\" == ${_TPUT_SGR0}\\\"turquoise\\\"${_TPUT_COLOR_PRIMARY} ]]\")\n    $(_color_primary \"then\")\n    $(_color_primary \"  export NB_COLOR_PRIMARY=${_TPUT_SGR0}43${_TPUT_COLOR_PRIMARY}\")\n    $(_color_primary \"  export NB_COLOR_SECONDARY=${_TPUT_SGR0}38${_TPUT_COLOR_PRIMARY}\")\n    $(_color_primary \"fi\")\n\nView this theme as a complete file\n\n    $(_color_primary \"https://github.com/xwmx/nb/blob/master/plugins/turquoise.${_ME}-theme\")\n\nThemes can be installed using the \\`${_ME} plugins\\` subcommand:\n\n    $(_color_muted \">\") $(_color_primary \"${_ME} plugins install https://github.com/xwmx/nb/blob/master/plugins/turquoise.${_ME}-theme\")\n    $(_color_secondary \"Plugin installed:\")\n    $(_color_secondary \"/home/example/.${_ME}/.plugins/turquoise.${_ME}-theme\")\n\nOnce a theme is installed, use it with \\`${_ME} set color_theme\\`:\n\n    $(_color_muted \">\") $(_color_primary \"${_ME} set color_theme turquoise\")\n    $(_color_secondary \"NB_COLOR_THEME set to turquoise\")\n\nThe primary and secondary colors can also be overridden individually,\nmaking color themes easily customizable:\n\n    $(_color_secondary \"# open the settings prompt for the primary color\")\n    $(_color_primary \"${_ME} set color_primary\")\n\n    $(_color_secondary \"# open the settings prompt for the secondary color\")\n    $(_color_primary \"${_ME} set color_secondary\")\n\nTo view a table of available colors and numbers, run:\n\n    $(_color_primary \"${_ME} settings colors\")\n\nTo set the syntax highlighting color theme, use:\n\n    $(_color_primary \"${_ME} set syntax_theme\")\n\nHEREDOC\n    elif [[ -z \"${_arguments[*]:-}\" ]] || ((_short))\n    then\n      _color_primary        \" __          _\"\n      _color_primary        \" \\ \\   _ __ | |__\"\n      _color_primary        \"  \\ \\ | '_ \\| '_ \\\\\"\n      _color_primary        \"  / / | | | | |_) |\"\n      _color_primary        \" /_/  |_| |_|_.__/\"\n\n      printf        \\\n        \"\\\\n %s\\\\n\" \\\n        \"$(_color_secondary  \"------------------\")\"\n\n      cat <<HEREDOC\n\n$(_color_brackets \"${_ME}\") Command line and local web note-taking, bookmarking, and archiving with\nplain text data storage, encryption, filtering and search, pinning, #tagging,\nGit-backed versioning and syncing, Pandoc-backed conversion, global and local\nnotebooks, customizable color themes, [[wiki-style linking]], plugins, and more\nin a single portable, user-friendly script.\n\n$(_color_primary \"Help\"):\n  ${_ME} help               Display this help information.\n  ${_ME} help <subcommand>  View help information for <subcommand>.\n  ${_ME} help --colors      View information about color settings.\n  ${_ME} help --readme      View the \\`${_ME}\\` README file.\n\n$(_color_primary \"Usage\"):\n  ${_ME}\n  ${_ME} [<ls-options>...] [<id> | <filename> | <path> | <title> | <notebook>]\n  ${_ME} [<url>] [<bookmark options>...]\n  ${_ME} add [<notebook>:][<folder-path>/][<filename>] [<content>]\n         [-b | --browse] [-c <content> | --content <content>] [--edit]\n         [-e | --encrypt] [-f <filename> | --filename <filename>]\n         [--folder <folder-path>] [--tags <tag1>,<tag2>...]\n         [-t <title> | --title <title>] [--type <type>]\n  ${_ME} add bookmark [<bookmark-options>...]\n  ${_ME} add folder [<name>]\n  ${_ME} add todo [<todo-options>...]\n  ${_ME} archive [<notebook>]\n  ${_ME} bookmark [<ls-options>...]\n  ${_ME} bookmark [<notebook>:][<folder-path>/] <url>...\n              [-c <comment> | --comment <comment>] [--edit] [-e | --encrypt]\n              [-f <filename> | --filename <filename>] [--no-request]\n              [-q <quote> | --quote <quote>] [--save-source]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]...\n              [-t <tag1>,<tag2>... | --tags <tag1>,<tag2>...] [--title <title>]\n  ${_ME} bookmark [list [<list-options>...]]\n  ${_ME} bookmark (edit | delete | open | peek | url)\n              ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} bookmark search <query>\n  ${_ME} browse [<notebook>:][<folder-path>/][<id> | <filename> | <title>] [--daemon]\n            [-g | --gui] [-n | --notebooks] [-p | --print] [-q | --query <query>]\n            [-s | --serve] [-t <tag> | --tag <tag> | --tags <tag1>,<tag2>...]\n  ${_ME} browse add [<notebook>:][<folder-path>/][<filename>]\n            [-c <content> | --content <content>] [--tags <tag1>,<tag2>...]\n            [-t <title> | --title <title>]\n  ${_ME} browse delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} browse edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} completions (check | install [-d | --download] | uninstall)\n  ${_ME} copy ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[<notebook>:][<folder-path>/]<filename>]\n  ${_ME} count [<notebook>:][<folder-path>/]\n  ${_ME} delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])...\n            [-f | --force]\n  ${_ME} do ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n        [<task-number>]\n  ${_ME} edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [-c <content> | --content <content>] [--edit]\n          [-e <editor> | --editor <editor>] [--overwrite] [--prepend]\n  ${_ME} export ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <path> [-f | --force] [<pandoc options>...]\n  ${_ME} export notebook <name> [<path>]\n  ${_ME} export pandoc ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            [<pandoc options>...]\n  ${_ME} folders (add | delete) [<notebook>:][<folder-path>/]<folder-name>\n  ${_ME} folders <list-options>...\n  ${_ME} git [checkpoint [<message>] | dirty]\n  ${_ME} git <git-options>...\n  ${_ME} help [<subcommand>] [-p | --print]\n  ${_ME} help [-c | --colors] | [-r | --readme] | [-s | --short] [-p | --print]\n  ${_ME} history [<notebook>:][<folder-path>/][<id> | <filename> | <title>]\n  ${_ME} import [copy | download | move] (<path>... | <url>) [--convert]\n            [<notebook>:][<folder-path>/][<filename>]\n  ${_ME} import notebook <path> [<name>]\n  ${_ME} init [<remote-url> [<branch>]] [--author] [--email <email>]\n          [--name <name>]\n  ${_ME} list [-e [<length>] | --excerpt [<length>]] [--filenames]\n          [-f | --folders-first] [-n <limit> | --limit <limit> | --<limit>]\n          [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n          [--paths] [-s | --sort] [-r | --reverse] [--tags]\n          [-t <type> | --type <type> | --<type>]\n          [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n  ${_ME} ls [-a | --all] [-b | --browse] [-e [<length>] | --excerpt [<length>]]\n        [--filenames] [-f | --folders-first] [-g | --gui]\n        [-n <limit> | --limit <limit> | --<limit>] [--no-footer] [--no-header]\n        [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n        [--paths] [-s | --sort] [-r | --reverse] [--tags]\n        [-t <type> | --type <type> | --<type>]\n        [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n  ${_ME} move ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          ([<notebook>:][<path>] | --reset | --to-bookmark | --to-note |\n          --to-title | --to-todo) [-f | --force]\n  ${_ME} notebooks [<name> | <query>] [--ar | --archived] [--global] [--local]\n               [--names] [--paths] [--unar | --unarchived]\n  ${_ME} notebooks add ([<name>] [<remote-url> [<branch>... | --all]]) [--author]\n                   [--email <email>] [--name <name>]\n  ${_ME} notebooks (archive | open | peek | status | unarchive) [<name>]\n  ${_ME} notebooks author [<name> | <path>] [--email <email>] [--name <name>]\n  ${_ME} notebooks current [--path | --selected | --filename [<filename>]]\n                       [--global | --local]\n  ${_ME} notebooks delete <name> [-f | --force]\n  ${_ME} notebooks (export <name> [<path>] | import <path>)\n  ${_ME} notebooks init [<path> [<remote-url> [<branch>]]] [--author]\n                    [--email <email>] [--name <name>]\n  ${_ME} notebooks rename <old-name> <new-name>\n  ${_ME} notebooks select <selector>\n  ${_ME} notebooks show (<name> | <path> | <selector>) [--ar | --archived]\n                    [--escaped | --name | --path | --filename [<filename>]]\n  ${_ME} notebooks use <name>\n  ${_ME} open ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} peek ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} pin  ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} plugins [<name>] [--paths]\n  ${_ME} plugins install [<path> | <url>] [--force]\n  ${_ME} plugins uninstall <name> [--force]\n  ${_ME} remote [branches [<url>] | remove | rename [<branch-name>] <name>]\n  ${_ME} remote [delete <branch-name> | reset <branch-name>]\n  ${_ME} remote set <url> [<branch-name>]\n  ${_ME} run <command> [<arguments>...]\n  ${_ME} search ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <query>... [-a | --all] [--and <query>] [--not <query>] [--or <query>]\n            [-l | --list] [--path] [-t <tag1>,<tag2>... | --tag <tag1>,<tag2>...]\n            [-t | --tags] [--type <type> | --<type>] [--utility <name>]\n  ${_ME} set [<name> [<value>] | <number> [<value>]]\n  ${_ME} settings [colors [<number> | themes] | edit | list [--long]]\n  ${_ME} settings (get | show | unset) (<name> | <number>)\n  ${_ME} settings set (<name> | <number>) <value>\n  ${_ME} shell [<subcommand> [<options>...] | --clear-history]\n  ${_ME} show ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[-a | --added] | [--authors] | [-b | --browse] | --filename | --id |\n          --info-line | --path | [-p | --print] | --relative-path | [-r |\n          --render] | --title | --type [<type>] | [-u | --updated]] [--no-color]\n  ${_ME} show <notebook>\n  ${_ME} status [<notebook>]\n  ${_ME} subcommands [add <name>...] [alias <name> <alias>]\n                 [describe <name> <usage>]\n  ${_ME} sync [-a | --all]\n  ${_ME} tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n           [open | closed]\n  ${_ME} todo add [<notebook>:][<folder-path>/][<filename>] <title>\n              [--description <description>] [--due <date>]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]\n              [--tags <tag1>,<tag2>...] [--task <title>...]\n  ${_ME} todo do   ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  ${_ME} todo undo ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n               [<task-number>]\n  ${_ME} todos [<notebook>:][<folder-path>/] [open | closed] [--tags <tag1>,<tag2>...]\n  ${_ME} todos tasks ([<notebook>:][<folder-path>/][<id> | <filename> | <description>])\n                 [open | closed]\n  ${_ME} unarchive [<notebook>]\n  ${_ME} undo ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [<task-number>]\n  ${_ME} unpin ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} unset (<name> | <number>)\n  ${_ME} update\n  ${_ME} use <notebook>\n  ${_ME} -h | --help | help [<subcommand> | --readme]\n  ${_ME} -i | --interactive [<subcommand> [<options>...]]\n  ${_ME} --no-color\n  ${_ME} --version | version\nHEREDOC\n\n      if ! ((_short))\n      then\n        cat <<HEREDOC\n\n$(_color_primary \"Subcommands\"):\n  (default)    List notes and notebooks. This is an alias for \\`${_ME} ls\\`.\n               When a <url> is provided, create a new bookmark.\n  add          Add a note, folder, or file.\n  archive      Archive the current or specified notebook.\n  bookmark     Add, open, list, and search bookmarks.\n  browse       Browse and manage linked items in terminal and GUI browsers.\n  completions  Install and uninstall completion scripts.\n  copy         Copy or duplicate an item.\n  count        Print the number of items in a notebook or folder.\n  delete       Delete a note.\n  do           Mark a todo or task as done.\n  edit         Edit a note.\n  export       Export a note to a variety of different formats.\n  folders      Add, delete, and list folders.\n  git          Run \\`git\\` commands within the current notebook.\n  help         View help information for the program or a subcommand.\n  history      View git history for the current notebook or a note.\n  import       Import a file into the current notebook.\n  init         Initialize the first notebook.\n  list         List notes in the current notebook.\n  ls           List notebooks and notes in the current notebook.\n  move         Move or rename a note.\n  notebooks    Manage notebooks.\n  open         Open a bookmarked web page or notebook folder, or edit a note.\n  peek         View a note, bookmarked web page, or notebook in the terminal.\n  pin          Pin an item so it appears first in lists.\n  plugins      Install and uninstall plugins and themes.\n  remote       Configure the remote URL and branch for the notebook.\n  run          Run shell commands within the current notebook.\n  search       Search notes.\n  settings     Edit configuration settings.\n  shell        Start the \\`${_ME}\\` interactive shell.\n  show         Show a note or notebook.\n  status       Print notebook status information.\n  subcommands  List, add, alias, and describe subcommands.\n  sync         Sync local notebook with the remote repository.\n  tasks        List tasks in todos, notebooks, folders, and other items.\n  todo         Manage todos and tasks.\n  unarchive    Unarchive the current or specified notebook.\n  undo         Mark a todo or task as not done.\n  unset        Return a setting to its default value.\n  unpin        Unpin a pinned item.\n  update       Update \\`${_ME}\\` to the latest version.\n  use          Switch to a notebook.\n  version      Display version information.\n\n$(_color_primary \"Notebook Usage\"):\n  ${_ME} <notebook>:[<subcommand>] [<identifier>] [<options>...]\n  ${_ME} <subcommand> <notebook>:<identifier> [<options>...]\n\n$(_color_primary \"Program Options\"):\n  -h, --help          Display this help information.\n  -i, --interactive   Start the \\`${_ME}\\` interactive shell.\n  --no-color          Print without color highlighting.\n  --version           Display version information.\n\n$(_color_primary \"More Information\"):\n  https://github.com/${_REPO}\n\n$(_color_primary \"Sponsor & Donate\"):\n  https://github.com/sponsors/xwmx\n  https://paypal.me/WilliamMelody\n\n$(_color_primary \"Created By\"):\n  William Melody\n  https://github.com/xwmx\n  https://www.williammelody.com\n\n$(_color_primary \"Contributors\"):\n  https://github.com/xwmx/nb/graphs/contributors\n\nHEREDOC\n      fi\n    else\n      printf \"%s\\\\n\" \"$(describe --get \"${_arguments[@]}\")\"\n    fi | {\n      if ((_shell))\n      then\n        LC_ALL=C sed -e \"s/^  ${_ME} /  /\" -e \"/^  ${_ME}$/d\"\n      else\n        cat\n      fi\n    } | {\n      if ((_color_help))\n      then\n        cat\n      else\n        local _replacement_pattern=\"${_TPUT_SGR0}${_TPUT_SETAF_8}\\1${_TPUT_SGR0}\"\n\n        LC_ALL=C sed -E                                                               \\\n-e \"/^\\ \\ |\\[\\[wiki\\-style\\ linking\\]\\]/s/(\\[|\\]|\\(|\\)|\\|)/${_replacement_pattern}/g\" \\\n-e \"s/#tag/${_TPUT_SGR0}${_TPUT_SETAF_8}#${_TPUT_SGR0}tag/g\"                          \\\n-e \"s/(currently\\ set\\ to: )(.*)/\\1${_TPUT_SGR0}${_TPUT_COLOR_PRIMARY}\\2${_TPUT_SGR0}/g\"\n      fi\n    } | {\n      LC_ALL=C sed -e \"s/\\`/${_TPUT_SGR0}${_TPUT_SETAF_8}\\`${_TPUT_SGR0}/g\"\n    } | {\n      if ((_use_pager))\n      then\n        _pager\n      else\n        cat\n      fi\n    }\n  fi\n}\n_alias_subcommand \"help\" \"h\"\n\n# index · ############################################################# · index\n\n_describe_index() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} index add <filename>\n  ${_ME} index delete <filename>\n  ${_ME} index edit\n  ${_ME} index get_basename <id>\n  ${_ME} index get_id <filename>\n  ${_ME} index get_max_id\n  ${_ME} index rebuild [--ancestors]\n  ${_ME} index reconcile [--ancestors] [--commit]\n  ${_ME} index show\n  ${_ME} index update <existing-filename> <new-filename>\n  ${_ME} index verify\n  ${_ME} index <subcommand> <options>... [<folder-path>]\n\n$(_color_primary \"Options\"):\n  --ancestors   Perform the action on all folders within the notebook that\n                are ancestors of the current folder.\n  --commit      Commit changes to git.\n\n$(_color_primary \"Subcommands\"):\n  add           Add <filename> to the index.\n  delete        Delete <filename> from the index.\n  edit          Open the index file in \\`\\$EDITOR\\`.\n  get_basename  Print the filename / basename at the specified <id>.\n  get_id        Get the id for <filename>.\n  get_max_id    Get the maximum id for the folder.\n  rebuild       Rebuild the index, listing files by last modified, reversed.\n                Some ids will change. Prefer \\`${_ME} index reconcile\\`.\n  reconcile     Remove duplicates and update index for added and deleted files.\n  show          Print the index.\n  update        Overwrite the <existing-filename> entry with <new-filename>.\n  verify        Verify that the index matches the folder contents.\n\n$(_color_primary \"Description\"):\n  Manage the index for the current folder or the folder at <folder-path>,\n  which can be passed as the final argument to any \\`index\\` subcommand.\n\n  \\`index\\` is used internally by \\`${_ME}\\` and using it manually will\n  probably corrupt the index. If something goes wrong with an index,\n  fix it with \\`${_ME} index reconcile\\`.\n\n  An index is a text file named '.index' in any folder within a notebook.\n  .index contains a list of filenames and the line number of each filename\n  represents the id. .index files are included in the git repository so\n  ids are preserved across systems.\nHEREDOC\n}\n_index() {\n  local _ancestors=0\n  local _commit_changes=0\n  local _folder_path=\n  local _subcommand=\"${1:-}\"\n\n  case \"${_subcommand:-}\" in\n    edit|get_max_id|show|verify)\n      _folder_path=\"${2:-}\"\n      ;;\n    rebuild|reconcile)\n      shift\n\n      local __arg=\n      for   __arg in \"${@:-}\"\n      do\n        case \"${__arg:-}\" in\n          --ancestors)\n            _ancestors=1\n            ;;\n          --commit|--checkpoint)\n            _commit_changes=1\n            ;;\n          *)\n            _folder_path=\"${__arg:-}\"\n            ;;\n        esac\n      done\n      ;;\n    add|delete|get_basename|get_id)\n      _folder_path=\"${3:-}\"\n      ;;\n    update)\n      _folder_path=\"${4:-}\"\n      ;;\n    *)\n      [[ -d \"${1:-}\" ]] && _folder_path=\"${1:-}\"\n      ;;\n  esac\n\n  _folder_path=\"${_folder_path:-\"${NB_NOTEBOOK_PATH}\"}\"\n\n  local _index_path=\"${_folder_path}/.index\"\n  local _notebook_path=\"${NB_NOTEBOOK_PATH}\"\n\n  if [[ ! \"${_folder_path:-}\" =~ ^${NB_NOTEBOOK_PATH} ]]\n  then\n    local _notebook_and_relative_path=\"${_folder_path#\"${NB_DIR}\"/}\"\n    _notebook_path=\"${NB_DIR}/${_notebook_and_relative_path%%/*}\"\n  fi\n\n  if [[ ! -e \"${_index_path}\" ]]\n  then\n    case \"${_subcommand}\" in\n      add)\n        _index reconcile \"${_folder_path}\" --ancestors\n        ;;\n      edit|rebuild|reconcile)\n        :\n        ;;\n      *)\n        _index reconcile \"${_folder_path}\" --ancestors --commit\n        ;;\n    esac\n  fi\n\n  case \"${_subcommand}\" in\n    add)\n      local _basename=\"${2:-}\"\n\n      if [[ -z \"${_basename}\" ]]\n      then\n        _exit_1 _help index\n      fi\n\n      if [[ ! -e \"${_folder_path}/${_basename}\" ]]\n      then\n        _exit_1 printf \"File not found: %s\\\\n\" \"${_folder_path}/${_basename}\"\n      fi\n\n      if ! grep -q \"^${_basename}$\" \"${_index_path}\"\n      then\n        {\n          printf \"%s\\\\n\" \"${_basename}\" | sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n        } >> \"${_index_path}\"\n      fi\n      ;;\n    delete)\n      local _basename=\"${2:-}\"\n\n      if [[ -z \"${_basename}\" ]]\n      then\n        _exit_1 _help index\n      fi\n\n      _basename=\"${_basename//'['/\\\\[}\"\n      _basename=\"${_basename//']'/\\\\]}\"\n\n      if grep -q \"^${_basename}$\" \"${_index_path}\"\n      then\n        _sed_i -e \"s/^${_basename}$//g\" \"${_index_path}\"\n      else\n        return 1\n      fi\n      ;;\n    edit)\n      _edit_file \"${_index_path}\" --no-wait\n\n      return 0\n      ;;\n    get_basename)\n      # Usage: _index_get_basename <id> <index-path>\n      _index_get_basename() {\n        if [[ -z \"${1:-}\" ]] || [[ \"${1:-}\" == \"0\" ]]\n        then\n          return 1\n        fi\n\n        sed \"${1:-}q;d\" \"${2:-}\"\n      }\n\n      local _id_number=\"${2:-}\"\n      if [[ -z \"${_id_number}\"  ]]\n      then\n        _exit_1 _help index\n      fi\n\n      local _basename=\n      _basename=\"$(_index_get_basename \"${_id_number}\" \"${_index_path}\")\"\n\n      if [[ -z \"${_basename}\"   ]]\n      then\n        _index reconcile &&\n          _basename=\"$(_index_get_basename \"${_id_number}\" \"${_index_path}\")\"\n      fi\n\n      if [[ -z \"${_basename}\"   ]]\n      then\n        return 1\n      else\n        printf \"%s\\\\n\" \"${_basename}\"\n      fi\n      ;;\n    get_id)\n      # Usage: _index_get_id <basename> <index-path>\n      _index_get_id() {\n        # Alternatives:\n        # awk 'match($0,v){print NR; exit}' v=\"^${1:-}$\" \"${2:-}\"\n        # git -C \"${3:?}\" grep  \\\n        #   --line-number       \\\n        #   --no-color          \\\n        #   -e \"^${1:?}$\"       \\\n        #   \"${2:?}\"            \\\n        #   | cut -d: -f2\n        # grep -n \"^${1:-}$\" \"${2:-}\"                         | cut -d: -f1\n        # rg --color=never --line-number \"^${1:-}$\" \"${2:-}\"  | cut -d: -f1\n\n        local _basename=\"${1:-}\"\n        _basename=\"${_basename//\\[/\\\\\\[}\"\n        _basename=\"${_basename//\\]/\\\\\\]}\"\n\n        sed -n \"/^${_basename:-}$/=\" \"${2:-}\"\n      }\n\n      local _basename=\"${2:-}\"\n\n      if [[ -z \"${_basename}\" ]]\n      then\n        _help index\n\n        return 1\n      fi\n\n      local _id=\n      _id=\"$(_index_get_id \"${_basename}\" \"${_index_path}\")\"\n\n      if [[ -z \"${_id}\" ]]\n      then\n        _index reconcile &&\n          _id=\"$(_index_get_id \"${_basename}\" \"${_index_path}\")\"\n      fi\n\n      if [[ -z \"${_id}\" ]]\n      then\n        return 1\n      else\n        printf \"%s\\\\n\" \"${_id}\"\n      fi\n\n      # Alternative\n      # -----------\n\n      # local _basename=\"${2:-}\"\n      # local _id=\n\n      # if [[ -z \"${_basename}\" ]]\n      # then\n      #   _help index\n      #\n      #   return 1\n      # fi\n\n      # _index_get_id \"${_basename:-}\" \"${_index_path:-}\" | {\n      #   read -r _id\n\n      #   if [[ -n \"${_id:-}\"   ]]\n      #   then\n      #     printf \"%s\\\\n\" \"${_id:-}\"\n      #   else\n      #     _index reconcile &&\n      #       _index_get_id \"${_basename:-}\" \"${_index_path:-}\" | {\n      #           read -r _id\n\n      #           if [[ -n \"${_id:-}\" ]]\n      #           then\n      #             printf \"%s\\\\n\" \"${_id:-}\"\n      #           else\n      #             return 1\n      #           fi\n      #         }\n      #   fi\n      # }\n      ;;\n    get_max_id)\n      wc -l < \"${_index_path}\" | tr -d '[:space:]'\n\n      printf \"\\\\n\"\n      ;;\n    rebuild)\n      local _top_path=\"${_folder_path:?}\"\n\n      if ((_ancestors))\n      then\n        _top_path=\"${_notebook_path:?}\"\n      fi\n\n      local _rebuild_type=\"Rebuild\"\n\n      if [[ ! -e \"${_folder_path:?}/.index\" ]]\n      then\n        _rebuild_type=\"Initialize\"\n      fi\n\n      local _current_folder_path=\"${_folder_path:?}\"\n\n      while [[ \"${_current_folder_path:?}\" =~ ${_top_path:?} ]]\n      do\n        {\n          ls -t -r \"${_current_folder_path:?}\"\n        } | {\n          sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n        } > \"${_current_folder_path:?}/.index\"\n\n        _current_folder_path=\"${_current_folder_path%/*}\"\n      done  &&\n        _git checkpoint \"${_notebook_path}\" \"[${_ME}] ${_rebuild_type:-Rebuild} Index\"\n\n      return 0\n      ;;\n    reconcile)\n      # Usage: _index_reconcile_remove_duplicates <index-path>\n      _index_reconcile_remove_duplicates() {\n        local _reconcile_index_path=\"${1:-}\"\n        [[ -z \"${_reconcile_index_path:-}\" ]] && return 1\n\n        local _temp_file=\n        _temp_file=\"$(_temp file)\"\n\n        exec 3> \"${_temp_file}\"\n        exec 4< \"${_temp_file}\"\n\n        rm \"${_temp_file:?}\"\n\n        # Remove duplicates and preserve newlines.\n        awk '!NF || !seen[$0]++' \"${_reconcile_index_path}\" >&3\n        cat <&4 > \"${_reconcile_index_path}\"\n\n        exec 3>&-\n        exec 4<&-\n      }\n\n      local _top_path=\"${_folder_path:?}\"\n\n      [[ -d \"${_top_path}\" ]] || return 0\n\n      if ((_ancestors))\n      then\n        _top_path=\"${_notebook_path:?}\"\n      fi\n\n      local _current_folder_path=\"${_folder_path:?}\"\n\n      while [[ \"${_current_folder_path:?}\" =~ ^${_top_path} ]]\n      do\n        if [[ ! -e \"${_current_folder_path:?}/.index\"       ]]\n        then\n          {\n            ls -t -r \"${_current_folder_path:?}\"\n          } | {\n            sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n          } > \"${_current_folder_path:?}/.index\"\n        fi\n\n        local -a _index_list=()\n        _index_list=($(<\"${_current_folder_path:?}/.index\"))\n\n        local -a _file_list=()\n        _file_list=($(\n          {\n            ls -t -r \"${_current_folder_path:?}\"\n          } | {\n            sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n          }\n        ))\n\n        _index_reconcile_remove_duplicates \"${_current_folder_path:?}/.index\"\n\n        local -a _index_file_list_diff=()\n        _index_file_list_diff=($(\n          printf \"%s\\\\n\"          \\\n            \"${_index_list[@]:-}\" \\\n            \"${_file_list[@]:-}\"  \\\n            | sort                \\\n            | uniq -u\n        ))\n\n        local -a _diff_in_index=()\n        _diff_in_index=($(\n          printf \"%s\\\\n\"                    \\\n            \"${_index_list[@]:-}\"           \\\n            \"${_index_file_list_diff[@]:-}\" \\\n            | sort                          \\\n            | uniq -d                       \\\n            | uniq\n        ))\n\n        local __item=\n        for   __item in \"${_diff_in_index[@]:-}\"\n        do\n          if [[ -n \"${__item}\" ]]\n          then\n            _contains \"${__item}\" \"${_file_list[@]:-}\" ||\n              _index delete \"${__item}\" \"${_current_folder_path:?}\"\n          fi\n        done\n\n        local -a _diff_in_file_list=()\n        _diff_in_file_list=($(\n          printf \"%s\\\\n\"                    \\\n            \"${_file_list[@]:-}\"            \\\n            \"${_index_file_list_diff[@]:-}\" \\\n            | sort                          \\\n            | uniq -d                       \\\n            | uniq\n        ))\n\n        local __item=\n        for   __item in \"${_diff_in_file_list[@]:-}\"\n        do\n          if [[ -n \"${__item}\" ]]\n          then\n            _contains \"${__item}\" \"${_index_list[@]:-}\" ||\n              _index add \"${__item}\" \"${_current_folder_path:?}\"\n          fi\n        done\n\n        _current_folder_path=\"${_current_folder_path%/*}\"\n      done\n\n      if ((_commit_changes))\n      then\n        _git checkpoint \"${_notebook_path}\" \"[${_ME}] Reconcile Index\"\n      fi\n      ;;\n    show)\n      cat \"${_index_path}\"\n      ;;\n    update)\n      local _new_basename=\"${3:-}\"\n      local _old_basename=\"${2:-}\"\n\n      if [[ -z \"${_old_basename}\" ]] || [[ -z \"${_new_basename}\" ]]\n      then\n        _exit_1 _help index\n      fi\n\n      _old_basename=\"${_old_basename//'['/\\\\[}\"\n      _old_basename=\"${_old_basename//']'/\\\\]}\"\n\n      if grep -q \"^${_old_basename}$\" \"${_index_path}\"\n      then\n        _sed_i -e \"s/^${_old_basename}$/${_new_basename}/g\" \"${_index_path}\"\n      else\n        return 1\n      fi\n      ;;\n    verify)\n      local _valid=1\n\n      local -a _index_list=()\n      _index_list=($(<\"${_index_path}\"))\n\n      local -a _file_list=()\n      _file_list=($(\n        {\n          ls -t -r \"${_folder_path}\"\n        } | {\n          sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n        }\n      ))\n\n      local -a _index_file_list_diff=()\n      _index_file_list_diff=($(\n        printf \"%s\\\\n\"          \\\n          \"${_index_list[@]:-}\" \\\n          \"${_file_list[@]:-}\"  \\\n          | sort                \\\n          | uniq -u\n      ))\n\n      if [[ -n \"${_index_file_list_diff[*]:-}\" ]]\n      then\n        _valid=0\n      fi\n\n      local __item=\n      for   __item in $(printf \"%s\\\\n\" \"${_index_list[@]:-}\" | uniq -c)\n      do\n        local _count=\n        _count=\"$(printf \"%s\\\\n\" \"${__item}\" | awk '{print $1}')\"\n\n        if [[ \"${_count}\" -gt 1 ]]\n        then\n          _valid=0\n\n          break\n        fi\n      done\n\n      if ! ((_valid))\n      then\n        _warn                                                               \\\n          printf \"Index corrupted. To fix, run:\\\\n  %s index reconcile\\\\n\"  \\\n          \"${_ME}\"\n\n        return 1\n      else\n        return 0\n      fi\n      ;;\n    *)\n      :\n      ;;\n  esac\n}\n\n# init · ############################################################### · init\n\n_describe_init() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} init [<remote-url> [<branch>]] [--author] [--email <email>]\n          [--name <name>]\n\n$(_color_primary \"Options\"):\n  --author         Display the local email and name config prompt.\n  --email <email>  Set the local commit author email address to <email>.\n  --name  <name>   Set the local commit author name to <name>.\n\n$(_color_primary \"Description\"):\n  Initialize the initial \"home\" notebook and generate a configuration file at:\n\n      ${NBRC_PATH}\n\n  Pass optional <remote-url> and <branch> arguments to create the initial\n  \"home\" notebook using a clone of an existing notebook.\n\n$(_color_primary \"See Also\"):\n  ${_ME} help notebooks\n\n$(_color_primary \"Examples\"):\n  ${_ME} init\n  ${_ME} init https://github.com/example/example.git\n  ${_ME} init https://github.com/example/example.git example-branch\nHEREDOC\n}\n_init() {\n  # Usage: _init_create_home_notebook [<url> [<branch>]] [--author]\n  #                                   [--email <email>] [--name <name>]\n  _init_create_home_notebook() {\n    local _author=0\n    local _author_arguments=()\n    local _remote_branch=\n    local _remote_url=\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --author) _author=1 ;;\n        --email|--name)\n          _author=1\n          _author_arguments+=(\"${1:-}\")\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _author_arguments+=(\"${2:-}\")\n\n            shift\n          fi\n          ;;\n        *)\n          if   [[ -z \"${_remote_url:-}\"     ]] &&\n               _string_is_url \"${1:-}\"\n          then\n            _remote_url=\"${1:-}\"\n          elif [[ -z \"${_remote_branch:-}\"  ]]\n          then\n            _remote_branch=\"${1:-}\"\n          fi\n          ;;\n      esac\n\n      shift\n    done\n\n    ((_author)) && _author_arguments+=(\"${NB_DIR}/home\")\n\n    if   [[ -n \"${_remote_url:-}\"     ]]\n    then\n      if [[ -n \"${_remote_branch:-}\"  ]]\n      then\n        git clone --no-local --single-branch --branch \"${_remote_branch:-}\" \\\n          \"${_remote_url}\"                                                  \\\n          \"${NB_DIR}/home\"\n      else\n        git clone --no-local --single-branch \"${_remote_url}\" \"${NB_DIR}/home\"\n      fi && if ((_author))\n            then\n              _notebooks author \"${_author_arguments[@]:-}\"\n            fi\n    else\n      {\n        mkdir -p  \"${NB_DIR}/home\"\n      } && {\n        if ((_GIT_ENABLED))\n        then\n          git -C  \"${NB_DIR}/home\" init   &>/dev/null\n        fi\n      } && {\n        if ((_author))\n        then\n          _notebooks author \"${_author_arguments[@]:-}\"\n        fi\n      } && {\n        touch  \"${NB_DIR}/home/.index\"\n      } && {\n        _git checkpoint \"${NB_DIR}/home\" \"[${_ME}] Initialize\"\n      }\n    fi\n\n    _notebooks use \"home\" 1>/dev/null\n\n    # printf \"Created notebook:           %s\\\\n\" \"$(_color_primary \"home\")\"\n  }\n\n  # Usage: _init_create_nb_dir\n  _init_create_nb_dir() {\n    if    [[ -d \"${NB_DIR}\" ]]\n    then\n      printf \"Data directory exists:      %s\\\\n\" \"$(_color_primary \"${NB_DIR}\")\"\n    elif  [[ -e \"${NB_DIR}\" ]]\n    then\n      _exit_1 cat <<HEREDOC\nUnable to set up the $(_color_primary \"${_ME}\") data directory. File exists at:\n${NB_DIR}\nHEREDOC\n    else\n      mkdir -p \"${NB_DIR}\"\n      printf \"Created data directory:     %s\\\\n\" \"$(_color_primary \"${NB_DIR}\")\"\n    fi\n  }\n\n  # Usage: _init_create_rc_file\n  _init_create_rc_file() {\n    if [[ -e \"${NBRC_PATH}\" ]]\n    then\n      printf \"Configuration file exists:  %s\\\\n\" \\\n        \"$(_color_primary \"${NBRC_PATH}\")\"\n    else\n      cat <<HEREDOC > \"${NBRC_PATH}\"\n#!/usr/bin/env bash\n###############################################################################\n# .${_ME}rc\n#\n# Configuration file for \\`${_ME}\\`, a command line note-taking, bookmarking,\n# and knowledge base application with encryption, search, Git-backed syncing,\n# and more in a single portable script.\n#\n# Edit this file manually or manage settings using the \\`${_ME} settings\\`\n# subcommand. Configuration options are set as environment variables, eg:\n#   export NB_ENCRYPTION_TOOL=gpg\n#\n# https://github.com/${_REPO}\n###############################################################################\nHEREDOC\n      printf \"Created configuration file: %s\\\\n\" \"$(_color_primary \"${NBRC_PATH}\")\"\n    fi\n  }\n\n  # Usage: _init_print_header\n  _init_print_header() {\n    printf \"%s%s\\\\n\" \"$(_color_primary \"Initializing\")\" \"$(_color_muted \"...\")\"\n  }\n\n  if [[ -e \"${NB_DIR}\" ]] && [[ ! -d \"${NB_DIR}\" ]]\n  then\n    _exit_1 printf \"NB_DIR exists and is not a directory: %s\\\\n\" \\\n      \"$(_color_primary \"${NB_DIR}\")\"\n  fi\n\n  if [[ -d \"${_GLOBAL_NOTEBOOK_PATH}\" ]]\n  then\n    _exit_1 cat <<HEREDOC\n$(_color_primary \"${_ME}\") already initialized. To initialize a local notebook, use:\n  $(_color_primary \"${_ME} notebooks init\")\nMore Information:\n  $(_color_primary \"${_ME} help notebooks\")\nHEREDOC\n  fi\n\n  _print_welcome                            &&\n    _init_print_header          1>/dev/null &&\n    _init_create_nb_dir         1>/dev/null &&\n    _init_create_rc_file        1>/dev/null &&\n    _validate_configuration     \"${@:-}\"    &&\n    _init_create_home_notebook  \"${@:-}\"\n}\n\n# list · ############################################################### · list\n\n_describe_list() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} list [-e [<length>] | --excerpt [<length>]] [--filenames]\n          [-f | --folders-first] [-n <limit> | --limit <limit> | --<limit>]\n          [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n          [--paths] [-s | --sort] [-r | --reverse] [--tags]\n          [-t <type> | --type <type> | --<type>]\n          [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n\n$(_color_primary \"Options\"):\n  -e, --excerpt [<length>]        Print an excerpt <length> lines long under\n                                  each note's filename [default: 3].\n  --filenames                     Print the filename for each note.\n  -f, --folders-first             Print folders before other items.\n  -n, --limit <limit>, --<limit>  The maximum number of notes to list.\n  --no-id                         Don't include the id in list items.\n  --no-indicator                  Don't include the indicator in list items.\n  -p, --page <number>             The page to view in the list paginated by\n                                  a <limit> option or \\`${_ME} set limit\\`.\n  --pager                         Display output in the pager.\n  --paths                         Print the full path to each item.\n  -s, --sort                      Order notes by id.\n  -r, --reverse                   List items in reverse order.\n  --tags                          List tags in the notebook or folder.\n  -t, --type <type>, --<type>     List items of <type>. <type> can be a file\n                                  extension or one of the following types:\n                                  archive, audio, book, bookmark, document,\n                                  folder, image, note, text, video\n\n$(_color_primary \"Description\"):\n  List notes in the current notebook.\n\n  When <id>, <filename>, <path>, or <title> are present, the listing for the\n  matching note is displayed. When no match is found, titles and filenames\n  are searched for any that match <query> as a case-insensitive regular\n  expression.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#listing--filtering\n\n$(_color_primary \"Indicators\"):\n  ${_NB_INDICATOR_AUDIO:-} Audio\n  ${_NB_INDICATOR_EBOOK:-} Book\n  ${_NB_INDICATOR_BOOKMARK:-} Bookmark\n  ${_NB_INDICATOR_ENCRYPTED:-} Encrypted\n  ${_NB_INDICATOR_FOLDER:-} Folder\n  ${_NB_INDICATOR_IMAGE:-} Image\n  ${_NB_INDICATOR_DOCUMENT:-} PDF, Word, or Open Office document\n  ${_NB_INDICATOR_VIDEO:-} Video\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help ls\n  ${_ME} help pin\n  ${_ME} help search\n  ${_ME} help unpin\n\n$(_color_primary \"Examples\"):\n  ${_ME} list\n  ${_ME} list example.md -e 10\n  ${_ME} list --excerpt --no-id\n  ${_ME} list --filenames --reverse\n  ${_ME} list \"^Example.*\"\n  ${_ME} list --10\n  ${_ME} list --type document\n  ${_ME} example:list\nHEREDOC\n}\n_list() {\n  local _error_on_empty=0\n  local _excerpt_length=3\n  local _folders_first=0\n  local _force_line_wrap=0\n  local _limit=\n  local _line_wrap=1\n  local _list_filenames=0\n  local _list_paths=0\n  local _no_id=0\n  local _only_pinned=0\n  local _page=1\n  local _paginate=0\n  local _print_excerpt=0\n  local _print_indicators=1\n  local _print_notebook_selectors=0\n  local _recursive=0\n  local _recursive_arguments=()\n  local _reverse=0\n  local _selector_arguments=()\n  local _sort=0\n  local _type=\n  local _use_pager=0\n  local _with_pinned=0\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -a|--all)\n        _limit=\n        ;;\n      -e|--excerpt)\n        _print_excerpt=1\n        _recursive_arguments+=(\"--excerpt\")\n\n        if _option_value_is_present \"${2:-}\"\n        then\n          _excerpt_length=\"${2:-}\"\n          _recursive_arguments+=(\"${2:-}\")\n\n          shift\n        fi\n        ;;\n      --*empty)\n        _error_on_empty=1\n        _recursive_arguments+=(\"--error-on-empty\")\n        ;;\n      --filename*)\n        _list_filenames=1\n        _recursive_arguments+=(\"--filenames\")\n        ;;\n      --folders*first|--ff|-ff|--f|-f)\n        _folders_first=1\n        ;;\n      --limit|-n|--num|--number|--per*)\n        if _option_value_is_present \"${2:-}\"\n        then\n          _limit=\"${2:-}\"\n\n          shift\n        fi\n        ;;\n      --no*color)\n        _COLOR_ENABLED=0\n        ;;\n      --no*folders*first|--no*ff|-no*ff|--no*f|-no*f)\n        _folders_first=0\n        ;;\n      --no-id*|--noid*|--no*index)\n        _no_id=1\n        _recursive_arguments+=(\"--no-id\")\n        ;;\n      --no*indicator*|--no*icon*|--no*emoji*|--no*unicode*)\n        _print_indicators=0\n        _recursive_arguments+=(\"--no-indicators\")\n        ;;\n      --no*wrap|--truncate)\n        _line_wrap=0\n        _recursive_arguments+=(\"--no-wrap\")\n        ;;\n      --notebook-selectors)\n        _print_notebook_selectors=1\n        ;;\n      -p|--page)\n        _page=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        ((_page))               || _page=1\n        [[ -z \"${_limit:-}\" ]]  && _limit=\"${NB_LIMIT}\"\n        _paginate=1\n\n        shift\n        ;;\n      --pager|--less)\n        _use_pager=1\n        ;;\n      --path*)\n        _list_paths=1\n        _recursive_arguments+=(\"--paths\")\n        ;;\n      --pinned)\n        _only_pinned=1\n        _with_pinned=1\n        _recursive_arguments+=(\"--pinned\")\n        ;;\n      --recursive|--tree)\n        _recursive=1\n        ;;\n      -r|--reverse)\n        _reverse=1\n        ;;\n      -s|--sort)\n        _sort=1\n        ;;\n      --tags|--hashtags)\n        _search \"${_selector_arguments[@]:-}\" \"${@:-}\"\n\n        return 0\n        ;;\n      --titles)\n        : # Do nothing. This is the default behavior.\n        ;;\n      -t|--type)\n        _type=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --with*pinned)\n        _with_pinned=1\n        ;;\n      --wrap)\n        _force_line_wrap=1\n        _recursive_arguments+=(\"--wrap\")\n        ;;\n      *)\n        if   [[   \"${1:-}\" =~ ^-+[0-9]+$  ]]\n        then\n          _limit=\"${1##*-}\"\n        elif [[   \"${1:-}\" =~ ^--         ]]\n        then\n          if ! _contains \"${1:-}\" \"--ar\" \"--archived\" \"--unar\" \"--unarchived\"\n          then\n            _type=\"${1:2}\"\n          fi\n        else\n          _selector_arguments+=(\"${1:-}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  local _filter_patterns=()\n  local _folder_relative_path=\n  local _selector=\n  local _selector_basename=\n\n  local __argument=\n  for   __argument in \"${_selector_arguments[@]:-}\"\n  do\n    if [[   -z \"${__argument:-}\"  ]]\n    then\n      continue\n    elif [[ -n \"${_selector:-}\"   ]]\n    then # selector has already been set\n      _filter_patterns+=(\"${__argument}\")\n    elif [[ \"${__argument}\" =~ :$ ]]\n    then # argument appears to be a <notebook>: selector\n      local _selector_notebook_path=\n      _selector_notebook_path=\"$(_notebooks show \"${__argument}\" --path)\"\n\n      if [[ -n \"${_selector_notebook_path:-}\" ]]\n      then\n        _notebooks select \"${_selector_notebook_path}\"\n        _notebook_path=\"${_selector_notebook_path}\"\n\n        _selector=\"${__argument}\"\n      else\n        _filter_patterns+=(\"${__argument}\")\n      fi\n    else\n      local _selector_relative_path=\n      _selector_relative_path=\"$(\n        # resolve selector relative path without a trailing /\n        _selector_resolve_path \"${__argument%\\/}\" --relative\n      )\"\n\n      if [[ \"${__argument:-}\" =~ ^/ ]]\n      then # selector is a full path\n        _selector=\"${__argument}\"\n\n        local _selector_notebook_path=\n        _selector_notebook_path=\"$(\n          _notebooks show \"${__argument}\" --path 2>/dev/null || :\n        )\"\n\n        if [[ -n  \"${_selector_notebook_path:-}\"                        ]] &&\n           [[ -d  \"${_selector_notebook_path:-}\"                        ]] &&\n           [[     \"${_selector_notebook_path:-}\" != \"${_notebook_path}\" ]]\n        then\n          _notebooks select \"${_selector_notebook_path}\"\n          _notebook_path=\"${_selector_notebook_path}\"\n        fi\n\n        if [[ \"${__argument}\" =~ /$ ]] && [[ -d \"${__argument}\"   ]]\n        then\n          _selector_relative_path=\"${_selector_relative_path}/\"\n          _folder_relative_path=\"${_selector_relative_path%\\/*}\"\n          _selector_basename=\"${_selector_relative_path##*\\/}\"\n        elif [[     \"${_selector_relative_path}\" =~ /             ]]\n        then\n          _folder_relative_path=\"${_selector_relative_path%\\/*}\"\n          _selector_basename=\"${_selector_relative_path##*\\/}\"\n        elif [[ -n  \"${_selector_relative_path:-}\"                ]]\n        then\n          _folder_relative_path=\n          _selector_basename=\"${_selector_relative_path}\"\n        elif [[ \"${__argument:-}\" != \"${_notebook_path:-}\"        ]]\n        then\n          _filter_patterns+=(\"${__argument}\")\n        fi\n      elif [[ \"${__argument:-}\" =~ /$                             ]]\n      then\n        if [[ -n \"${_selector_relative_path:-}\"                   ]]\n        then\n          if [[ -d \"${_notebook_path}/${_selector_relative_path}\" ]]\n          then # argument is a folder selector with trailing /\n            _folder_relative_path=\"${_selector_relative_path}\"\n            _selector=\"${__argument}\"\n            _selector_basename=\n          else # argument is a file selector\n            if [[ \"${_selector_relative_path:-}\" =~ /             ]]\n            then # argument is a nested file selector\n              _folder_relative_path=\"${_selector_relative_path%\\/*}\"\n            else # argument does not include a folder\n              _folder_relative_path=\n            fi\n\n            _selector=\"${__argument%\\/}\"\n            _selector_basename=\"${_selector_relative_path##*\\/}\"\n          fi\n        else # argument has a trailing slash and does not match an existing path\n          _filter_patterns+=(\"${__argument}\")\n        fi\n      elif [[ \"${__argument:-}\" =~ /            ]]\n      then\n        if [[ -n \"${_selector_relative_path:-}\" ]]\n        then # argument is a nested file or folder path\n          _folder_relative_path=\"${_selector_relative_path%\\/*}\"\n          _selector=\"${__argument}\"\n          _selector_basename=\"${_selector_relative_path##*\\/}\"\n        else\n          # resolve selector relative path without final path segment\n          _selector_relative_path=\"$(\n            _selector_resolve_path \"${__argument%\\/*}\" --relative\n          )\"\n\n          if [[ -n \"${_selector_relative_path:-}\"                   ]] &&\n             [[ -d \"${_notebook_path}/${_selector_relative_path:-}\" ]]\n          then # folder path is selector, final path segment is filter pattern\n            _folder_relative_path=\"${_selector_relative_path}\"\n            _selector=\"${__argument%\\/*}\"\n            _selector_basename=\n            _selector_relative_path=\"${_folder_relative_path:-}\"\n\n            _filter_patterns+=(\"${__argument##*\\/}\")\n          else # argument does not resolve, treat as filter pattern\n            _filter_patterns+=(\"${__argument}\")\n          fi\n        fi\n      else\n        if [[ -n \"${_selector_relative_path:-}\" ]]\n        then # argument is a root-level file or folder identifier\n          _folder_relative_path=\n          _selector=\"${__argument}\"\n          _selector_basename=\"${_selector_relative_path##*\\/}\"\n        else\n          if [[ \"${__argument:-}\" =~ :          ]]\n          then # argument appears to include notebook selector\n            local _selector_notebook_path=\n            _selector_notebook_path=\"$(\n              _notebooks show \"${__argument%%:*}\" --path || :\n            )\"\n\n            if [[ -n \"${_selector_notebook_path:-}\"                   ]] &&\n               [[ \"${_selector_notebook_path}\" == \"${_notebook_path}\" ]]\n            then # argument notebook selector matches the current notebook\n              _selector=\"${__argument%%:*}\"\n              _filter_patterns+=(\"${__argument#*:}\")\n            else\n              _filter_patterns+=(\"${__argument}\")\n            fi\n          else\n            _filter_patterns+=(\"${__argument}\")\n          fi\n        fi\n      fi\n    fi\n  done\n\n  local _filter_pattern=\n  _filter_pattern=\"$(_join \"|\" \"${_filter_patterns[@]:-}\")\"\n\n  if [[ \"${_selector:-}\" =~ ^[^\\/]+/ ]] && [[ -z \"${_folder_relative_path:-}\" ]]\n  then\n    _warn printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector}\")\"\n\n    return 1\n  fi\n\n  local _list_files_options=()\n\n  [[ -n \"${_type:-}\" ]] && _list_files_options+=(\"--type\" \"${_type}\")\n  ((_reverse))          && _list_files_options+=(\"--reverse\")\n  ((_sort))             && _list_files_options+=(\"--sort\")\n\n  local _list_path=\"${_notebook_path}\"\n\n  # context variables\n\n  local _maybe_id_path_context=\n  local _maybe_selector_context=\n\n  if [[ -n \"${_folder_relative_path:-}\"                 ]] &&\n     [[ -e \"${_notebook_path}/${_folder_relative_path}\" ]]\n  then\n    _list_path=\"${_notebook_path}/${_folder_relative_path}\"\n\n    _maybe_id_path_context=\"$(\n      _get_id_selector \"${_folder_relative_path:-}/\"\n    )\"\n\n    _maybe_selector_context=\"${_folder_relative_path:-}/\"\n  fi\n\n  if [[ ! -e \"${_list_path}\" ]]\n  then\n    _exit_1 printf \"Not found: %s\\\\n\" \"$(\n      _color_primary \"${_folder_relative_path:-\"${_selector:-}\"}\"\n    )\"\n  fi\n\n  if _notebooks current --selected || ((_print_notebook_selectors))\n  then\n    local _selected_notebook_name=\n    _selected_notebook_name=\"$(\n      _notebooks show \"${_notebook_path}\" --name --no-color\n    )\"\n\n    _maybe_id_path_context=\"${_selected_notebook_name}:${_maybe_id_path_context:-}\"\n\n    _maybe_selector_context=\"${_selected_notebook_name}:${_maybe_selector_context}\"\n  fi\n\n  # recursive\n\n  # TODO: support --limit and any other loop-dependent features\n\n  _recursive_arguments+=(\"${_list_files_options[@]:-}\")\n\n  if ((_recursive))\n  then\n    {\n      find \"${_list_path}\" -type d -not -path '*/\\.*' | sort\n    } | {\n      local         __folder_path=\n      while read -r __folder_path\n      do\n        [[ -z \"${__folder_path:-}\"                    ]] && continue\n        [[    \"${__folder_path:-}\" == \"${_list_path}\" ]] && continue\n\n        _list \"${__folder_path}/\"         \\\n          \"${_recursive_arguments[@]:-}\"  \\\n          --error-on-empty 2>/dev/null    || :\n      done\n    }\n  fi\n\n  # pinning\n\n  local _pinned_basenames=()\n\n  if ((_with_pinned))\n  then\n    if [[ -f \"${_list_path}/.pindex\"  ]]\n    then\n      _pinned_basenames=($(cat \"${_list_path}/.pindex\"))\n    fi\n\n    # Search-Based Pinning\n    #\n    # Display pinned items first in the list by matching against a pattern\n    # like \"#pinned\". To enable, assign a tag or other pattern to the\n    # $NB_PINNED_PATTERN environment variable.\n    #\n    # Example:\n    #   # file: ~/.nbrc\n    #   export NB_PINNED_PATTERN=\"#pinned\"\n    if [[ -n \"${NB_PINNED_PATTERN:-}\" ]]\n    then\n      _pinned_basenames=($(\n        {\n          printf \"%s\\\\n\" \"${_pinned_basenames[@]:-}\"\n          GIT_PAGER='' git -C \"${_list_path}\"     \\\n            grep                                  \\\n            --color=never                         \\\n            --extended-regexp                     \\\n            --files-with-matches                  \\\n            --ignore-case                         \\\n            --max-depth 0                         \\\n            --text                                \\\n            -e \"${NB_PINNED_PATTERN:-\"#pinned\"}\"  \\\n            \"${_list_path}\" 2>/dev/null || :\n        } | awk '!NF || !seen[$0]++'\n      ))\n    fi\n  fi\n\n  # TODO: External local variables used in pipeline.\n  #\n  # Not affected by list path:\n  #\n  # ${_excerpt_length}\n  # ${_limit}\n  # ${_list_files_options[@]}\n  # ${_with_pinned}\n  #\n  # Affected by list path / selector (Display):\n  #\n  # ${_maybe_selector_context}\n  #\n  # Affected by list path / selector (Logic):\n  #\n  # ${_filter_pattern}\n  # ${_folder_relative_path}\n  # ${_list_path}\n  # ${_maybe_selector_context}\n  # ${_pinned_basenames[@]}\n  # ${_selector_arguments[@]}\n  # ${_selector_basename}\n\n  # Use code blocks to capture all output for piping to pager.\n  {\n    if [[ -n \"${_selector_basename:-}\"        ]] &&\n       [[ \"${#_selector_arguments[@]}\" -le 1  ]]\n    then\n      printf \"%s\\\\n\" \"${_selector_basename}\"\n    else\n      if ((_with_pinned)) && ((${#_pinned_basenames[@]}))\n      then\n        {\n          printf \"%s\\\\n\" \"${_pinned_basenames[@]:-}\"\n        } | {\n          local         __pinned_basename=\n          while read -r __pinned_basename\n          do\n            if [[ -e \"${_list_path:-}/${__pinned_basename:-}\" ]]\n            then\n              printf \"%s\\\\n\" \"${__pinned_basename:-}\"\n            else\n              _sed_i -e \"s/^${__pinned_basename}$//g\" \"${_list_path}/.pindex\"\n              _sed_i -e '/^[[:space:]]*$/d'           \"${_list_path}/.pindex\"\n\n              if [[ ! -s \"${_list_path}/.pindex\"              ]]\n              then\n                rm -f \"${_list_path}/.pindex\"\n              fi\n\n              local _deleted_pin_relative_path=\"${__pinned_basename:-}\"\n\n              if [[ -n \"${_folder_relative_path:-}\"           ]]\n              then\n                _deleted_pin_relative_path=\"${_folder_relative_path}/${__pinned_basename}\"\n              fi\n\n              _git checkpoint \"${_notebook_path}\"                   \\\n                \"[${_ME}] Unpinned: ${_deleted_pin_relative_path}\"\n            fi\n          done\n        } | {\n          _list_files \"${_list_path}\" \"${_list_files_options[@]:-}\" \\\n            --standard-input  || :\n        }\n      fi\n\n      if ! ((_only_pinned))\n      then\n        if ((_folders_first))\n        then\n          _list_files \"${_list_path}\" \"${_list_files_options[@]:-}\" --type folder || :\n\n          {\n            _list_files \"${_list_path}\" \"${_list_files_options[@]:-}\" || :\n          } | {\n            local         __line=\n            while read -r __line\n            do\n              if [[ ! -d \"${_list_path}/${__line}\" ]]\n              then\n                printf \"%s\\\\n\" \"${__line}\"\n              fi\n            done\n          }\n        else\n          _list_files \"${_list_path}\" \"${_list_files_options[@]:-}\" || :\n        fi\n      fi\n    fi\n  } | {\n    sed -E \"${_IGNORE_PATTERNS[@]:-}\"\n  } | {\n    local _filenames_count=0\n    local _matches=0\n    local _paginated_count=0\n    local _pagination_max=\"$((_page * _limit))\"\n    local _pagination_min=\"$(((_page * _limit) - _limit))\"\n    local _pinned_basenames_seen=()\n    local _printed_count=0\n\n    local _max_id=\n    _max_id=\"$(_index get_max_id \"${_list_path}\")\"\n\n    if ((_line_wrap))         &&\n       ((_COLOR_ENABLED))     &&\n       ! ((_list_filenames))  &&\n       ! ((_list_paths))      &&\n       ! ((_no_id))           &&\n       ! ((_force_line_wrap))\n    then\n      _line_wrap=0\n    fi\n\n    # begin main loop\n\n    local         __basename=\n    while read -r __basename\n    do\n      [[ -z \"${__basename:-}\" ]] && continue\n\n      _filenames_count=$((_filenames_count+1))\n\n      local _first_line=\n      local _maybe_title=\n      local _title_basename_or_path=\"${__basename}\"\n      local _title_basename_or_path_color=\"${__basename}\"\n\n      if [[ -z \"${_filter_pattern:-}\"                       ]] &&\n         [[ -n \"${_selector_basename:-}\"                    ]] &&\n         [[ \"${__basename}\" != \"${_selector_basename}\"      ]]\n      then\n        continue # exclude from list\n      elif ((_with_pinned)) &&\n           _contains \"${__basename}\" \"${_pinned_basenames_seen[@]:-}\"\n      then\n        continue # exclude from list\n      elif [[ -n \"${_selector_basename}\"                    ]] &&\n           [[ \"${__basename:-}\" == \"${_selector_basename}\"  ]]\n      then\n        # include in list\n        _matches=$((_matches+1))\n      elif [[ -n \"${_filter_pattern:-}\" ]]\n      then\n        # turn on case-insensitive matching\n        shopt -s nocasematch\n\n        if [[ -n \"${_selector_basename}\"                    ]] &&\n           [[ \"${__basename:-}\" == \"${_selector_basename}\"  ]]\n        then\n          # include in list\n          _matches=$((_matches+1))\n        elif [[ ! \"${_filter_pattern}\" =~ ^[0-9][0-9]$      ]] &&\n             [[ \"${__basename:-}\" =~ ${_filter_pattern}     ]]\n        then\n          # include in list\n          _matches=$((_matches+1))\n        else\n          _maybe_title=\"$(_get_content \"${_list_path}/${__basename}\")\"\n\n          if [[ \"${_maybe_title:-}\" =~ ^__first_line:       ]]\n          then\n            _first_line=\"${_maybe_title#__first_line:}\"\n            _maybe_title=\n          fi\n\n          if [[ \"${_maybe_title:-}\" =~ ${_filter_pattern}   ]]\n          then\n            # include in list\n            _matches=$((_matches+1))\n          else\n            continue # exclude from list\n          fi\n        fi\n\n        # turn off case-insensitive matching\n        shopt -u nocasematch\n      fi\n\n      local _pinned=0\n\n      if ((_with_pinned))\n      then\n        if _contains \"${__basename}\" \"${_pinned_basenames[@]:-}\"\n        then\n          _pinned=1\n          _pinned_basenames_seen+=(\"${__basename}\")\n        elif ((_only_pinned))\n        then\n          continue\n        fi\n      fi\n\n      if ((_paginate))\n      then\n        _paginated_count=$((_paginated_count+1))\n\n        if   [[ \"${_paginated_count}\" -le \"${_pagination_min}\"  ]]\n        then\n          continue\n        elif [[ \"${_paginated_count}\" -gt \"${_pagination_max}\"  ]]\n        then\n          break\n        fi\n      fi\n\n      if [[   -n \"${_limit:-}\"                        ]] &&\n         [[      \"${_printed_count}\" -ge \"${_limit}\"  ]]\n      then # the limit has been reached\n        if [[ -n \"${_filter_pattern:-}\"               ]]\n        then\n          # keep looking for matches to count total\n          continue\n        else\n          if ((_only_pinned))\n          then\n            _filenames_count=\"${#_pinned_basenames[@]}\"\n          else\n            _filenames_count=\"$(\n              _count \"${_list_path}\" \"${_list_files_options[@]:-}\"\n            )\"\n          fi\n\n          break\n        fi\n      fi\n\n      if ((_list_paths))\n      then\n        _title_basename_or_path=\"${_list_path}/${__basename}\"\n        _title_basename_or_path_color=\"${_list_path}/${__basename}\"\n      elif ! ((_list_filenames))\n      then\n        if [[ -z \"${_maybe_title}\" ]]\n        then\n          _maybe_title=\"$(_get_content \"${_list_path}/${__basename}\")\"\n        fi\n\n        if [[ -n \"${_maybe_title}\" ]]\n        then\n          if [[ \"${_maybe_title}\" =~ ^__first_line: ]]\n          then\n            _first_line=\"${_maybe_title#__first_line:}\"\n            _maybe_title=\n          else\n            _title_basename_or_path=\"${_maybe_title}\"\n            _title_basename_or_path_color=\"${_maybe_title}\"\n          fi\n        fi\n      fi\n\n      local _extra_length=0\n      local _indicators=\n\n      if ((_print_indicators))\n      then\n        if ((_with_pinned)) && ((_pinned))\n        then\n          _indicators+=\"${_NB_INDICATOR_PINNED:-}\"\n        fi\n\n        # TODO: `show --indicators` duplicated for performance\n        if [[ -d \"${_list_path}/${__basename}\" ]]\n        then\n          _indicators+=\"${_NB_INDICATOR_FOLDER:-}\"\n        elif _file_is_bookmark \"${_list_path}/${__basename}\"\n        then\n          _indicators+=\"${_NB_INDICATOR_BOOKMARK:-}\"\n        elif ! LC_ALL=C _contains \"${__basename##*.}\" \"${_TEXT_FILE_EXTENSIONS[@]}\"\n        then\n          if _file_is_image \"${_list_path}/${__basename}\"\n          then\n            _indicators+=\"${_NB_INDICATOR_IMAGE:-}\"\n          elif _file_is_document \"${_list_path}/${__basename}\"\n          then\n            _indicators+=\"${_NB_INDICATOR_DOCUMENT:-}\"\n          elif _file_is_video \"${_list_path}/${__basename}\"\n          then\n            _indicators+=\"${_NB_INDICATOR_VIDEO:-}\"\n          elif _file_is_audio \"${_list_path}/${__basename}\"\n          then\n            _indicators+=\"${_NB_INDICATOR_AUDIO:-}\"\n          elif [[ \"${__basename}\" =~ \\.epub$ ]]\n          then\n            _indicators+=\"${_NB_INDICATOR_EBOOK:-}\"\n          fi\n        fi\n\n        if _file_is_encrypted \"${_list_path}/${__basename}\"\n        then\n          _indicators+=\"${_NB_INDICATOR_ENCRYPTED:-}\"\n        fi\n\n        if _file_is_todo \"${_list_path}/${__basename}\"\n        then\n          # TODO: review\n          if [[ \"${_title_basename_or_path}\" =~ \\[x\\]\\  ]]\n          then\n            _indicators+=\"${_NB_INDICATOR_TODO_DONE% } \"\n            _extra_length=\"1\"\n          else\n            _indicators+=\"${_NB_INDICATOR_TODO% } \"\n            _extra_length=\"-2\"\n          fi\n\n          if ((_COLOR_ENABLED))\n          then\n            _title_basename_or_path_color=\"\\\n${_title_basename_or_path_color/\\[x\\]/${_TPUT_SETAF_8}[${_TPUT_COLOR_PRIMARY}x${_TPUT_SETAF_8}]${_TPUT_SGR0}}\"\n            _title_basename_or_path_color=\"\\\n${_title_basename_or_path_color/\\[$' '\\]/${_TPUT_SETAF_8}[ ]${_TPUT_SGR0}}\"\n          fi\n        fi\n      fi\n\n      local _item_info=\"${_indicators}${_title_basename_or_path}\"\n      local _item_info_color=\"${_indicators}${_title_basename_or_path_color}\"\n\n      if ! ((_list_filenames))  &&\n         ! ((_list_paths))      &&\n         ! ((_print_excerpt))   &&\n         [[ \"${_title_basename_or_path}\" == \"${__basename}\" ]]\n      then\n        if [[ -n \"${_first_line:-}\" ]]\n        then\n          _item_info=\"${_item_info} ${_MD} \\\"${_first_line}\\\"\"\n          _item_info_color=\"${_item_info_color} ${_MD} \\\"${_first_line}\\\"\"\n        fi\n      fi\n\n      local _info_line=\n      local _info_line_color=\n\n      if ((_no_id))\n      then\n        _info_line=\"${_item_info}\"\n        _info_line_color=\"${_item_info_color}\"\n      else\n        local _escaped_basename=\"${__basename}\"\n        _escaped_basename=\"${_escaped_basename//\\[/\\\\\\[}\"\n        _escaped_basename=\"${_escaped_basename//\\]/\\\\\\]}\"\n\n        local _item_id=\n        # use `sed` directly instead of `_index get_id` for performance\n        _item_id=\"$(sed -n \"/^${_escaped_basename:-}$/=\" \"${_list_path:-}/.index\")\"\n\n        if [[ -z \"${_item_id:-}\" ]]\n        then\n          _index reconcile \"${_list_path:-}\" --ancestors --commit\n\n          _item_id=\"$(sed -n \"/^${_escaped_basename:-}$/=\" \"${_list_path:-}/.index\")\"\n        fi\n\n        local _item_identifier=\"${_maybe_selector_context:-}${_item_id:-}\"\n        local _max_identifier=\"${_maybe_selector_context:-}${_max_id:-}\"\n\n        local _brackets_identifier=\"[${_item_identifier:-}]\"\n        # avoid calling `_color_brackets` for performance\n        local _brackets_identifier_color=\"\\\n${_TPUT_SGR0}\\\n${_TPUT_SETAF_8}\\\n[\\\n${_TPUT_COLOR_PRIMARY}\\\n${_item_identifier:-}\\\n${_TPUT_SETAF_8}\\\n]\\\n${_TPUT_SGR0}\"\n\n        # use calculated number of spaces for nicer formatting\n        local _spaces_length=\n        _spaces_length=$(( ${#_max_identifier} - ${#_item_identifier} + 1 ))\n\n        local _spaces=\n        printf -v _spaces '%*s' \"${_spaces_length}\" \"\"\n\n        _info_line=\"${_brackets_identifier}${_spaces}${_item_info}\"\n        _info_line_color=\"${_brackets_identifier_color}${_spaces}${_item_info_color}\"\n      fi\n\n      if ! ((_line_wrap))\n      then\n        _wrap off\n      fi\n\n      if ((_COLOR_ENABLED))\n      then\n        printf \"%s\" \"${_info_line_color}\"\n      else\n        printf \"%s\" \"${_info_line}\"\n      fi\n\n      if ! ((_line_wrap))\n      then\n        _wrap on\n      fi\n\n      # end of line\n      printf \"\\\\n\"\n\n      if ((_print_excerpt))                   &&\n         [[ \"${_excerpt_length}\" =~ ^[0-9] ]] &&\n         _file_is_text \"${_list_path}/${__basename}\"\n      then # excerpt is specified with a non-zero digit, required by `head`\n        _print_line \"${_info_line:-}\"         \\\n          --no-wrap                           \\\n          --visible-length \"${_extra_length:-0}\"\n\n        if ((${_excerpt_length:-0}))\n        then\n          head -n \"${_excerpt_length}\" \"${_list_path}/${__basename}\" \\\n            | _highlight_syntax_if_available \"${__basename##*.}\"\n\n          printf \"\\\\n\"\n        fi\n      fi\n\n      _printed_count=$((_printed_count+1))\n    done\n\n    # end main loop\n\n    if [[   -n \"${_limit:-}\"          ]] && ! ((_paginate))\n    then\n      if [[ -n \"${_filter_pattern:-}\" ]]\n      then\n        if [[ \"${_matches:-0}\"    -gt \"${_limit}\" ]] &&\n           [[ \"${_printed_count}\" -ge \"${_limit}\" ]]\n        then\n          local _label=\"matches\"\n          local _omitted_count=\n          _omitted_count=$((_matches-_printed_count))\n\n          [[ \"${_omitted_count}\" -eq 1 ]] && _label=\"match\"\n\n          printf \"%s %s omitted. %s total.\\\\n\"    \\\n            \"${_omitted_count}\"                   \\\n            \"${_label}\"                           \\\n            \"${_matches}\"\n\n          return 0\n        fi\n      elif [[ \"${_filenames_count}\" -gt \"${_limit}\" ]] &&\n           [[ \"${_printed_count}\"   -ge \"${_limit}\" ]]\n      then\n        printf \"%s omitted. %s total.\\\\n\"         \\\n          \"$((_filenames_count-_printed_count))\"  \\\n          \"${_filenames_count}\"\n\n        return 0\n      fi\n    fi\n\n    if ! ((_printed_count)) && [[ -n \"${_filter_pattern:-}\"   ]]\n    then\n      local _filter_message=\n\n      if _notebooks current --selected\n      then\n        _filter_message=\"$(_color_primary \"$(_notebooks current):\")\"\n      fi\n\n      if [[ -n \"${_folder_relative_path:-}\"     ]]\n      then\n        _filter_message=\"${_filter_message}$(_color_primary \"${_folder_relative_path}/\")\"\n      fi\n\n      if [[ -n \"${_filter_message:-}\"           ]]\n      then\n        _filter_message=\"${_filter_message} \"\n      fi\n\n      _filter_message=\"${_filter_message}$(_color_primary \"${_filter_pattern:-}\")\"\n\n      if [[ -n \"${_type:-}\"                     ]]\n      then\n         _filter_message=\"${_filter_message} Type: $(_color_primary \"${_type}\")\"\n      fi\n\n      _warn printf \"Not found: %s\\\\n\" \"${_filter_message}\"\n\n      return 1\n    fi\n\n    if ! ((_filenames_count)) && [[ -z \"${_filter_pattern:-}\" ]]\n    then\n      {\n        local _maybe_id_path_context_padded_left=\n        local _maybe_id_path_context_padded_right=\n\n        if [[ -n \"${_maybe_id_path_context:-}\"  ]]\n        then\n          _maybe_id_path_context=\"${_maybe_id_path_context//' '/\\\\ }\"\n          _maybe_id_path_context_padded_left=\" ${_maybe_id_path_context:-}\"\n          _maybe_id_path_context_padded_right=\"${_maybe_id_path_context:-} \"\n        fi\n\n        if [[ \"${_type}\" =~ (^bookmark$|^bookmarks$)    ]]\n        then\n          cat <<HEREDOC\n0 bookmarks.\n\nAdd a bookmark:\n  $(_color_primary \"${_ME} ${_maybe_id_path_context_padded_right:-}<url>\")\nHelp information:\n  $(_color_primary \"${_ME} help bookmark\")\nHEREDOC\n        elif [[ \"${_type}\" =~ (^todo$|^todos$)          ]]\n        then\n          cat <<HEREDOC\n0 todos.\n\nAdd a todo:\n  $(_color_primary \"${_ME} todo add${_maybe_id_path_context_padded_left:-} <title>\")\nHelp information:\n  $(_color_primary \"${_ME} help todo\")\nHEREDOC\n        elif [[ -n \"${_type:-}\" ]] || ((_only_pinned))\n        then\n          if _contains \"${_type}\" \"bookmarks\" \"documents\" \"images\" \"videos\" \"folders\"\n          then\n            _type=\"$(printf \"%s\\\\n\" \"${_type}\" | sed -e 's/s$//')\"\n          fi\n\n          if ((_only_pinned))\n          then\n            cat <<HEREDOC\n0 pinned ${_type:+\"${_type} \"}items.\n\nPin an item:\n  $(_color_primary \"${_ME} pin ${_maybe_id_path_context:-}<id>\")\nHelp information:\n  $(_color_primary \"${_ME} help\")\nHEREDOC\n          else\n            if [[ \"${_type:-}\" =~ (^folder$|^folders$)  ]]\n            then\n              local _empty_type_label=\"folders\"\n            else\n              local _empty_type_label=\"${_type} items\"\n            fi\n\n            cat <<HEREDOC\n0 ${_empty_type_label}.\n\nImport a file:\n  $(_color_primary \"${_ME} import (<path> | <url>)${_maybe_id_path_context_padded_left:-}\")\nHelp information:\n  $(_color_primary \"${_ME} help import\")\nHEREDOC\n          fi\n        else\n          cat <<HEREDOC\n0 items.\n\nAdd a note:\n  $(_color_primary \"${_ME} add${_maybe_id_path_context_padded_left:-}\")\nAdd a bookmark:\n  $(_color_primary \"${_ME} ${_maybe_id_path_context_padded_right:-}<url>\")\nAdd a todo:\n  $(_color_primary \"${_ME} todo add${_maybe_id_path_context_padded_left:-} <title>\")\nImport a file:\n  $(_color_primary \"${_ME} import (<path> | <url>)${_maybe_id_path_context_padded_left:-}\")\nHelp information:\n  $(_color_primary \"${_ME} help\")\nHEREDOC\n        fi\n      } | {\n        if ((_error_on_empty))\n        then\n          cat 1>&2\n\n          return 1\n        else\n          cat\n\n          return 0\n        fi\n      }\n    fi\n  } | if ((_use_pager))\n      then\n        _pager\n      else\n        cat\n      fi\n}\n\n# ls · ################################################################### · ls\n\n_describe_ls() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} ls [-a | --all] [-b | --browse] [-e [<length>] | --excerpt [<length>]]\n        [--filenames] [-f | --folders-first] [-g | --gui]\n        [-n <limit> | --limit <limit> | --<limit>] [--no-footer] [--no-header]\n        [--no-id] [--no-indicator] [-p <number> | --page <number>] [--pager]\n        [--paths] [-s | --sort] [-r | --reverse] [--tags]\n        [-t <type> | --type <type> | --<type>]\n        [<notebook>:][<folder-path>/][<id> | <filename> | <path> | <query>]\n\n$(_color_primary \"Options\"):\n  -a, --all                       Print all items in the notebook. Equivalent\n                                  to no limit.\n  -b, --browse                    Open the specified item or current notebook\n                                  with \\`browse\\` in a terminal web browser.\n  -e, --excerpt [<length>]        Print an excerpt <length> lines long under\n                                  each note's filename [default: 3].\n  --filenames                     Print the filename for each note.\n  -f, --folders-first             Print folders before other items.\n  -g, --gui                       Open the specified item or current notebook\n                                  with \\`browse\\` in a GUI web browser.\n  -n, --limit <limit>, --<limit>  The maximum number of listed items.\n                                  [default: 15]\n  --no-footer                     Print without footer.\n  --no-header                     Print without header.\n  --no-id                         Don't include the id in list items.\n  --no-indicator                  Don't include the indicator in list items.\n  -p, --page <number>             The page to view in the list paginated by\n                                  a <limit> option or \\`${_ME} set limit\\`.\n  --pager                         Display output in the pager.\n  --paths                         Print the full path to each item.\n  -s, --sort                      Order notes by id.\n  -r, --reverse                   List items in reverse order.\n  --tags                          List tags in the notebook or folder.\n  -t, --type <type>, --<type>     List items of <type>. <type> can be a file\n                                  extension or one of the following types:\n                                  note, book, bookmark, document, archive,\n                                  image, video, audio, folder, text\n\n$(_color_primary \"Description\"):\n  List notebooks and notes in the current notebook, displaying note titles\n  when available. \\`${_ME} ls\\` is a combination of \\`${_ME} notebooks\\` and\n  \\`${_ME} list\\` in one view.\n\n  When <id>, <filename>, <path>, or <title> are present, the listing for the\n  matching note is displayed. When no match is found, titles and filenames\n  are searched for any that match <query> as a case-insensitive regular\n  expression.\n\n  Options are passed through to \\`list\\`. For more information, see\n  \\`${_ME} help list\\`.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#listing--filtering\n\n$(_color_primary \"Indicators\"):\n  ${_NB_INDICATOR_AUDIO:-} Audio\n  ${_NB_INDICATOR_EBOOK:-} Book\n  ${_NB_INDICATOR_BOOKMARK:-} Bookmark\n  ${_NB_INDICATOR_ENCRYPTED:-} Encrypted\n  ${_NB_INDICATOR_FOLDER:-} Folder\n  ${_NB_INDICATOR_IMAGE:-} Image\n  ${_NB_INDICATOR_DOCUMENT:-} PDF, Word, or Open Office document\n  ${_NB_INDICATOR_VIDEO:-} Video\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help list\n  ${_ME} help pin\n  ${_ME} help search\n  ${_ME} help unpin\n\n$(_color_primary \"Examples\"):\n  ${_ME}\n  ${_ME} --all\n  ${_ME} ls\n  ${_ME} ls example.md -e 10\n  ${_ME} ls --excerpt --no-id\n  ${_ME} ls --reverse\n  ${_ME} ls \"^Example.*\"\n  ${_ME} ls --10\n  ${_ME} ls --type document\n  ${_ME} example:\n  ${_ME} example: -ae\n  ${_ME} example:ls\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME}\nHEREDOC\n}\n_ls() {\n  # _ls_print_footer()\n  #\n  # Usage:\n  #   _ls_print_footer [<selector>]\n  _ls_print_footer() {\n    local _footer_line_hi=\n    local _footer_line_raw=\n    local _footer_separator_raw=\" ${_MD}\"\n    local _footer_test_line=\n    local _maybe_notebook=\n    local _maybe_selector_scope=\n    local _maybe_selector_scope_padded_left=\n    local _maybe_selector_scope_padded_right=\n    local _selector_path=\"${1:-}\"\n\n    local _footer_separator_hi=\n    _footer_separator_hi=\"$(_color_primary \"${_footer_separator_raw}\")\"\n\n    if _notebooks current --selected\n    then\n      _maybe_notebook=\"$(\n        _notebooks show \"$(_notebooks current)\" --escaped --no-color\n      ):\"\n    fi\n\n    local _folder_id_path=\n    _folder_id_path=\"$(_get_id_selector \"${_selector_path:-}\")\"\n\n    if [[ -n \"${_maybe_notebook:-}\" ]] ||\n       [[ -n \"${_folder_id_path:-}\" ]]\n    then\n      _maybe_selector_scope=\"${_maybe_notebook}${_folder_id_path}\"\n      _maybe_selector_scope_padded_left=\" ${_maybe_selector_scope}\"\n      _maybe_selector_scope_padded_right=\"${_maybe_selector_scope} \"\n    fi\n\n    local _notebook_command=\"${_ME} notebooks add <name>\"\n\n    local _unarchived_notebook_count=0\n\n    set +f\n    local __path=\n    for   __path in \"${NB_DIR}\"/*\n    do\n      if [[ ! -f \"${__path:?}/.archived\"          ]]\n      then\n        _unarchived_notebook_count=$((_unarchived_notebook_count + 1))\n      fi\n\n      if [[ \"${_unarchived_notebook_count}\" -gt 1 ]]\n      then\n        if [[ -n \"${_maybe_notebook:-}\"           ]]\n        then\n          _notebook_command=\"${_ME} use ${_maybe_notebook%%:*}\"\n        else\n          _notebook_command=\"${_ME} use <notebook>\"\n        fi\n\n        break\n      fi\n    done\n    set -f\n\n    local _commands_raw=(\n      \"${_CHEVRON_RIGHT} ${_ME}${_maybe_selector_scope_padded_left}\"\n      \"${_ME} add${_maybe_selector_scope_padded_left}\"\n      \"${_ME} ${_maybe_selector_scope_padded_right}<url>\"\n      \"${_ME} edit ${_maybe_selector_scope}<id>\"\n      \"${_ME} show ${_maybe_selector_scope}<id>\"\n      \"${_ME} open ${_maybe_selector_scope}<id>\"\n      \"${_ME} browse${_maybe_selector_scope_padded_left}\"\n      \"${_ME} todos${_maybe_selector_scope_padded_left}\"\n      \"${_ME} tasks${_maybe_selector_scope_padded_left}\"\n      \"${_ME} search ${_maybe_selector_scope_padded_right}<query>\"\n      \"${_notebook_command}\"\n      \"${_ME} settings\"\n      \"${_ME} help\"\n    )\n\n    local _commands_hi=(\n      \"$(_color_muted \"${_CHEVRON_RIGHT}\") $(_color_secondary \"${_ME}${_maybe_selector_scope_padded_left}\")\"\n      \"$(_color_secondary \"${_commands_raw[1]}\")\"\n      \"$(_color_secondary \"${_commands_raw[2]}\")\"\n      \"$(_color_secondary \"${_commands_raw[3]}\")\"\n      \"$(_color_secondary \"${_commands_raw[4]}\")\"\n      \"$(_color_secondary \"${_commands_raw[5]}\")\"\n      \"$(_color_secondary \"${_commands_raw[6]}\")\"\n      \"$(_color_secondary \"${_commands_raw[7]}\")\"\n      \"$(_color_secondary \"${_commands_raw[8]}\")\"\n      \"$(_color_secondary \"${_commands_raw[9]}\")\"\n      \"$(_color_secondary \"${_commands_raw[10]}\")\"\n      \"$(_color_secondary \"${_commands_raw[11]}\")\"\n      \"$(_color_secondary \"${_commands_raw[12]}\")\"\n    )\n\n    _wrap off\n\n    _print_line \"$(printf \"%-${_COLUMNS}s\" '.')\" | tr -d '\\n'\n\n    printf \"%s\" \"${_TPUT_SGR0}\"\n\n    _wrap on\n\n    printf \"\\\\n\"\n\n    local i=\n    for ((i=0; i < ${#_commands_raw[@]}; i++))\n    do\n      if [[ -z \"${_footer_test_line}\"                 ]]\n      then # first item in line\n        _footer_test_line=\"${_commands_raw[i]}\"\n      else\n        _footer_test_line=\"${_footer_test_line}${_footer_separator_raw} ${_commands_raw[i]}\"\n      fi\n\n      if [[ \"${#_footer_test_line}\" -gt \"${_COLUMNS}\" ]]\n      then # wrap to next line\n        printf \"%s\\\\n\" \"${_footer_line_hi}\"\n\n        # Start the line for the next iteration using the current name.\n        _footer_test_line=\"${_commands_raw[i]}\"\n        _footer_line_hi=\"${_commands_hi[i]:-}\"\n        _footer_line_raw=\"${_commands_raw[i]}\"\n      else # add to line\n        if [[ -z \"${_footer_line_hi}\" ]]\n        then # first item in highlighted line\n          _footer_line_hi=\"${_commands_hi[i]:-}\"\n          _footer_line_raw=\"${_commands_raw[i]}\"\n        else\n          _footer_line_hi=\"${_footer_line_hi}${_footer_separator_hi} ${_commands_hi[i]:-}\"\n          _footer_line_raw=\"${_footer_line_raw}${_footer_separator_raw} ${_commands_raw[i]}\"\n        fi\n      fi\n\n      if [[ \"${#_commands_raw[@]}\" == $((i+1))        ]]\n      then # end of list\n        printf \"%s\\\\n\" \"${_footer_line_hi}\"\n      fi\n    done\n  }\n\n  # _ls_print_folder_header()\n  #\n  # Usage: _ls_print_folder_header <folder-path>\n  _ls_print_folder_header() {\n    [[ -z \"${1:-}\" ]] && return 0\n\n    # printf \"${_NB_INDICATOR_FOLDER:-}\" # TODO: Review\n\n    local _folder_separator=\n    _folder_separator=\"$(_color_muted \"/\")\"\n\n    printf \"%s\\\\n\" \"${1//\\// ${_folder_separator} }\"\n\n    _print_line \"$(printf \"%-${_COLUMNS}s\" '.')\" --muted\n\n    printf \"\\\\n\"\n  }\n\n  # _ls_print_header()\n  #\n  # Usage:\n  #   _ls_print_header <alignment>\n  #\n  # Description:\n  #   Build word-wrapping notebook line. `fold` doesn't account for\n  #   highlighting.\n  #\n  #   Simple version:\n  #     _notebooks --names            \\\n  #       | tr '\\n' ' '               \\\n  #       | fold -s \"-w$(tput cols)\"  \\\n  #       && printf \"\\\\n\"\n  _ls_print_header() {\n    local _alignment=\"${1:-}\"\n    local _auto_align=1 # auto-align by default.\n    local _centered=0\n    local _justified=0\n    local _plain=0\n\n    [[ \"${NB_HEADER}\" == 2 ]] && _centered=1\n    [[ \"${NB_HEADER}\" == 3 ]] && _justified=1\n\n    case \"${_alignment}\" in\n      --auto*align)\n        _auto_align=1\n        _centered=0\n        _justified=0\n        ;;\n      --centered)\n        _auto_align=0\n        _centered=1\n        _justified=0\n        ;;\n      --justified)\n        _auto_align=0\n        _centered=0\n        _justified=1\n        ;;\n      --plain)\n        _plain=1\n        ;;\n    esac\n\n    local _separator=\n    local _separator_hi=\n\n    if ! ((_plain))\n    then\n      _separator=\" ${_MD}\"\n      _separator_hi=\"$(_color_muted \"${_separator}\")\"\n    fi\n\n    local _current_notebook_name=\n    _current_notebook_name=\"$(_notebooks current)\"\n\n    local _highlight_archived=0\n\n    if [[ -e \"${NB_NOTEBOOK_PATH:-}/.archived\" ]]\n    then\n      _highlight_archived=1\n    fi\n\n    {\n      local _archived_count=0\n      local _unarchived_notebook_names=()\n\n      set +f\n      local __path=\n      for   __path in \"${NB_DIR}\"/*\n      do\n        if [[ -f \"${__path:?}/.archived\" ]]\n        then\n          _archived_count=$((_archived_count+1))\n        else\n          _unarchived_notebook_names+=(\"${__path##*\\/}\")\n        fi\n      done\n      set -f\n\n      if _notebooks current --local\n      then\n        printf \"local\\\\n\"\n      fi\n\n      printf \"%s\\\\n\" \"${_unarchived_notebook_names[@]:-}\"\n\n      if ((_archived_count))\n      then\n        printf \"[%s archived]\\\\n\" \"${_archived_count}\"\n      fi\n    } | {\n      local _line_hi=\n      local _line_number=0\n      local _line_raw=\n      local _output_line_raw=\n      local _padding=\n      local _test_line=\n\n      local         __header_name=\n      while read -r __header_name\n      do\n        local _maybe_highlighted_notebook_name=\n\n        if [[ \"${_current_notebook_name}\" == \"${__header_name}\" ]] ||\n           {\n             ((_highlight_archived))                               &&\n             [[ \"${__header_name:-}\"      =~ ^\\[.*\\]            ]]\n           }\n        then\n          _maybe_highlighted_notebook_name=\"$(\n            _color_primary \"${__header_name:-}\" --underline\n          )\"\n        else\n          _maybe_highlighted_notebook_name=\"${__header_name:-}\"\n        fi\n\n        if [[ -z \"${_test_line}\"                  ]]\n        then # first item in line\n          _test_line=\"${__header_name}\"\n        else\n          _test_line=\"${_test_line}${_separator} ${__header_name}\"\n        fi\n\n        if [[ \"${#_test_line}\" -gt \"${_COLUMNS}\"  ]]\n        then # wrap to next line\n          # Use the existing value of $_line_[highlighted|raw] without the\n          # current name.\n          if ((_auto_align)) || ((_centered)) && ! ((_justified))\n          then\n            _centered=1\n            _padding=\"$(\n              _print_padding \"${_line_raw}\" \"${_COLUMNS}\" \"${_centered}\"\n            )\"\n          fi\n\n          printf \"%s%s%s\\\\n\" \"${_TPUT_SGR0}\" \"${_padding:-}\" \"${_line_hi:-}\"\n          _output_line_raw=\"${_padding}${_line_raw}\\\\n\"\n          _line_number=$((_line_number + 1))\n\n          # Start the line for the next iteration using the current name.\n          _test_line=\"${__header_name}\"\n          _line_hi=\"${_maybe_highlighted_notebook_name:-}\"\n          _line_raw=\"${__header_name}\"\n        else # add to line\n          if [[ -z \"${_line_hi}\"                  ]]\n          then # first item in highlighted line\n            _line_hi=\"${_maybe_highlighted_notebook_name:-}\"\n            _line_raw=\"${__header_name}\"\n          else\n            _line_hi=\"${_line_hi}${_separator_hi} ${_maybe_highlighted_notebook_name:-}\"\n            _line_raw=\"${_line_raw}${_separator} ${__header_name}\"\n          fi\n        fi\n      done\n\n      if ((_line_number))  && ! ((_justified)) &&\n         ((_auto_align))   ||   ((_centered))\n      then\n        _centered=1\n      fi\n\n      _padding=\"$(\n        _print_padding \"${_line_raw}\" \"${_COLUMNS}\" \"${_centered}\"\n      )\"\n\n      printf \"%s%s%s\\\\n\" \"${_TPUT_SGR0}\" \"${_padding:-}\" \"${_line_hi:-}\"\n      _output_line_raw=\"${_padding}${_line_raw}\\\\n\"\n\n      _wrap off\n\n      if ((_centered))\n      then # print full-width line.\n        _print_line \"$(printf \"%-${_COLUMNS}s\" '.')\" | tr -d '\\n'\n      else # print line the length of the first line.\n        _print_line \"$(\n          # $_output_line_raw content is 2 characters too long. TODO: Review\n          printf \"%s\" \"${_output_line_raw}\" | sed 's/..$//'\n        )\" | tr -d '\\n'\n      fi\n\n      printf \"%s\" \"${_TPUT_SGR0}\"\n\n      _wrap on\n\n      printf \"\\\\n\"\n    }\n  }\n\n  local _all=0\n  local _arguments=()\n  local _delegate_to_browse=0\n  local _delegate_arguments=()\n  local _fast_exit=0\n  local _filter_patterns=()\n  local _folders_first=\"${NB_FOLDERS_FIRST:-0}\"\n  local _header_flags=()\n  local _limit=\n  local _maybe_type=\n  local _selector=\n  local _selector_folder_path=\n  local _use_pager=0\n  local _with_pinned=1\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --added|--ar|--archived|--unar|--unarchived|--updated)\n        _delegate_arguments+=(\"${1}\")\n        ;;\n      -a|--all)\n        _all=1\n        ;;\n      --auto*align|--centered|--justified|--plain)\n        _header_flags+=(\"${1}\")\n        ;;\n      -b|--browse)\n        _delegate_to_browse=1\n        ;;\n      --content|--title)\n        if _option_value_is_present \"${2:-}\"\n        then\n          _delegate_arguments+=(\"${1}\" \"${2:-}\")\n\n          shift\n        fi\n        ;;\n      --*exit*)\n        _fast_exit=1\n        ;;\n      --folders-first|--ff|-ff|--f|-f)\n        _folders_first=1\n        ;;\n      -g|--gui)\n        _delegate_to_browse=1\n        _delegate_arguments+=(\"${1}\")\n        ;;\n      --limit|-n|--num|--number|--per*)\n        _limit=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --pager|--less)\n        _use_pager=1\n        ;;\n      -l)\n        : # Ignore accidental ls -l  due to muscle memory.\n        ;;\n      --no*folders*first|--no*ff|-no*ff|--no*f|-no*f)\n        _folders_first=0\n        ;;\n      --no*footer)\n        NB_FOOTER=0\n        ;;\n      --no*header)\n        NB_HEADER=0\n        ;;\n      -s|--sort|-r|--reverse)\n        _arguments+=(\"${1}\")\n        _with_pinned=0\n        ;;\n      --tag*)\n        _delegate_arguments+=(\"${1}\")\n\n        if _option_value_is_present \"${2:-}\"\n        then\n          _delegate_arguments+=(\"${2:-}\")\n\n          shift\n        fi\n        ;;\n      -t|--type)\n        _maybe_type=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        _arguments+=(\"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      --[A-Za-z]*)\n        _maybe_type=\"${1:2}\"\n\n        _arguments+=(\"${1}\")\n        ;;\n      -*)\n        if [[ \"${1:-}\" =~ ^-+[0-9]+$  ]]\n        then\n          _limit=\"${1##*-}\"\n        else\n          _arguments+=(\"${1}\")\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _arguments+=(\"${2:-}\")\n\n            shift\n          fi\n        fi\n        ;;\n      \\#*)\n        _delegate_arguments+=(--tag \"${1}\")\n        ;;\n      *:*)\n        local _selector_id=\n        _selector_id=\"$(_selector_get_identifier \"${1}\")\"\n\n        if [[ -n \"${_selector_id:-}\"  ]]\n        then\n          _arguments+=(\"${_selector_id}\")\n        fi\n\n        _selector=\"${1:-}\"\n        _filter_patterns+=(\"${1}\")\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\"     ]]\n        then\n          _selector=\"${1}\"\n        fi\n\n        _arguments+=(\"${1}\")\n        _filter_patterns+=(\"${1}\")\n        ;;\n    esac\n\n    shift\n  done\n\n  # Delegate to `add`, `show`, and other subcommands.\n\n  if ((${#_delegate_arguments[@]})) || ((_delegate_to_browse))\n  then\n    if ((_delegate_to_browse))\n    then\n      _defer \"_browse\" \"${_arguments[@]:-}\" \"${_delegate_arguments[@]:-}\"\n\n      return 0\n    else\n      local i=\n      for ((i=0; i < ${#_delegate_arguments[@]}; i++))\n      do\n        case \"${_delegate_arguments[i]:-}\" in\n          --ar*|--unar*)\n            _defer \"_notebooks\" list \"${_delegate_arguments[@]:-}\"\n\n            return 0\n            ;;\n          --added|--updated)\n            if [[ -n \"${_selector:-}\"     ]]\n            then\n              _defer \"_show\" \"${_arguments[@]:-}\" \"${_delegate_arguments[@]:-}\"\n\n              return 0\n            fi\n            ;;\n          --content|--title)\n            if _option_value_is_present \"${_delegate_arguments[$((i+1))]:-}\"\n            then\n              _defer \"_add\" \"${_arguments[@]:-}\" \"${_delegate_arguments[@]:-}\"\n\n              return 0\n            fi\n            ;;\n          --tag*)\n            ((_all)) && _delegate_arguments+=(\"--all\")\n            _defer \"_search\"                \\\n              \"${_arguments[@]:-}\"          \\\n              \"${_delegate_arguments[@]:-}\" \\\n              --list\n\n            return 0\n            ;;\n          *)\n            if [[ -n \"${_arguments[i]:-}\" ]]\n            then\n              _arguments+=(\"${_arguments[i]:-}\")\n            fi\n            ;;\n        esac\n      done\n    fi\n  fi\n\n  # Build list options.\n\n  local _list_options=(${_arguments[@]:-})\n\n  if ((_with_pinned))\n  then\n    _list_options+=(\"--with-pinned\")\n  fi\n\n  if ((_folders_first))\n  then\n    _list_options+=(\"--folders-first\")\n  fi\n\n  local _selector_relative_path=\"${_selector#*:}\"\n\n  if [[ -n \"${_limit:-}\"                            ]]\n  then\n    _list_options+=(\"--limit\" \"${_limit}\")\n  elif ! ((_all))                                       &&\n       [[ -z \"${_AUTO_LIMIT:-}\"                     ]]  &&\n       {\n         [[ -z \"${_selector_relative_path:-}\"       ]]  ||\n         {\n           [[ \"${_selector_relative_path:-}\" =~ /   ]]  &&\n           [[ -z \"${_selector_relative_path##*\\/}\"  ]]  &&\n           [[ \"${#_filter_patterns[@]}\" -le 1       ]]\n         }\n       }\n  then\n    _list_options+=(\"--limit\" \"${NB_LIMIT}\")\n  fi\n\n  # Resolve selector folders before printing header to minimize pause\n  # before printing list.\n\n  if [[ \"${_selector:-}\" =~ /             ]]\n  then\n    _selector_folder_path=\"$(_selector_resolve_folders \"${_selector}\" || :)\"\n\n    if [[ -n \"${_selector_folder_path:-}\" ]]\n    then\n      _selector_folder_path=\"${_selector_folder_path}/\"\n    fi\n  fi\n\n  # Determine whether to display header and footer.\n\n  local _display_header_and_footer=0\n\n  if [[ -z \"${_arguments[*]:-}\"           ]]  ||\n     {\n       [[ \"${_selector:-}\" =~ (/$|:$)     ]]  &&\n       [[ -n \"${_selector_folder_path:-}\" ]]  &&\n       [[ \"${#_arguments[@]}\" -le 1       ]]\n     }\n  then\n    _display_header_and_footer=1\n  fi\n\n  # Pre-load auto --limit header and footer.\n\n  local _footer=\n  local _header=\n\n  if [[ -n \"${_AUTO_LIMIT:-}\"             ]]  &&\n     ! ((_all))                               &&\n     ! _contains \"--limit\" \"${_list_options[@]:-}\"\n  then\n    local _available_lines=0\n    _available_lines=\"$(_tput lines)\"\n\n    local _header_and_footer_line_count=0\n\n    if ((NB_HEADER)) && ((_display_header_and_footer))\n    then\n      _header=\"$(_ls_print_header \"${_header_flags[@]:-}\")\"\n    fi\n\n    if ((NB_FOOTER)) && ((_display_header_and_footer))\n    then\n      _footer=\"$(_ls_print_footer \"${_selector_folder_path:-}\")\"\n    fi\n\n    local _header_and_footer_line_count=0\n    _header_and_footer_line_count=\"$(\n      {\n        [[ -n \"${_header:-}\" ]] && printf \"%s\\\\n\" \"${_header:-}\"\n        [[ -n \"${_footer:-}\" ]] && printf \"%s\\\\n\" \"${_footer:-}\"\n\n        printf \"\"\n      } | wc -l | xargs\n    )\"\n\n    local _auto_limit_adjustment=\"$((_AUTO_LIMIT - 2))\"\n    local _auto_limit_amount=1\n\n    _auto_limit_amount=\"$((\n      ${_available_lines:-1}                -\n        ${_header_and_footer_line_count:-0} +\n        ${_auto_limit_adjustment:-0}\n    ))\"\n\n    [[ \"${_auto_limit_amount}\" -gt 0 ]] || _auto_limit_amount=1\n\n    if [[ -n \"${_AUTO_LIMIT_MAX:-}\"  ]] &&\n       [[    \"${_AUTO_LIMIT_MAX:-}\" -lt \"${_auto_limit_amount:-1}\" ]]\n    then\n      _auto_limit_amount=\"${_AUTO_LIMIT_MAX}\"\n    fi\n\n    _list_options+=(\"--limit\" \"${_auto_limit_amount:-1}\")\n  fi\n\n  local _list_error=\n\n  # NOTE: Pipeline structured to start List, Header, and Footer concurrently.\n  {\n    # List\n    # ----\n    {\n      # Capture error to variable while preserving standard output. More info:\n      # https://unix.stackexchange.com/a/474195\n      _list_error=\"$(\n        _list --error-on-empty \"${_list_options[@]:-}\" 2>&1 >&3 3>&-\n      )\"\n    } 3>&1 || {\n      if [[ -n  \"${_arguments[0]:-}\"        ]]  &&\n         [[ !   \"${_arguments[0]:-}\" =~ ^-- ]]\n      then\n        local _maybe_notebook_name=\"${_arguments[0]:-}\"\n\n        _maybe_notebook_name=\"$(\n          printf \"%s\\\\n\" \"${_maybe_notebook_name}\" | sed 's/\\:$//'\n        )\"\n\n        local _notebook_name=\n        _notebook_name=\"$(\n          _notebooks \\\n            show \"${_maybe_notebook_name:-}\" --name --no-color 2>/dev/null || :\n        )\"\n      fi\n\n      if [[ -n \"${_notebook_name:-}\"          ]]  &&\n         ! _notebooks current --selected          &&\n         [[ -d \"${NB_DIR}/${_notebook_name}\"  ]]\n      then\n        NB_NOTEBOOK_PATH=\"${NB_DIR}/${_notebook_name}\"  \\\n          _ls \"${_arguments[@]:1}\"\n\n        return 0\n      else\n        local _count_arguments=()\n\n        if [[ -n \"${_selector:-}\"   ]]\n        then\n          _count_arguments+=(\"${_selector}\")\n        fi\n\n        if [[ -n \"${_maybe_type:-}\" ]]\n        then\n          _count_arguments+=(\"--${_maybe_type}\")\n        fi\n\n        local _local_count=\n        _local_count=\"$(\n          _count \"${_count_arguments[@]:-}\" --skip-unmatched-selector || :\n        )\"\n\n        if ! ((_local_count))                           &&\n           {\n             [[ -n  \"${_selector_folder_path:-}\"    ]]  ||\n             [[ !   \"${_filter_patterns[*]:-}\" =~ / ]]\n           }\n        then\n          {\n            _list \"${_list_options[@]:-}\"\n          } | {\n            if [[ -z \"${_selector:-}\"               ]]  ||\n               {\n                 [[ \"${_selector:-}\" =~ (/$|:$)     ]]  &&\n                 [[ \"${#_filter_patterns[@]}\" -eq 1 ]]\n               }\n            then # only container arguments\n              if ((NB_HEADER)) && [[ -n \"${_maybe_type:-}\"  ]]\n              then\n                _ls_print_header \"${_header_flags[@]:-}\"\n              fi\n\n              if ! ((${NB_FOLDER_HEADER:-0}))\n              then\n                _ls_print_folder_header \"${_selector_folder_path:-}\"\n              fi\n\n              cat\n\n              if ((NB_FOOTER)) && [[ -n \"${_maybe_type:-}\"  ]]\n              then\n                _ls_print_footer \"${_selector_folder_path:-}\"\n              fi\n            else\n              cat\n            fi\n          }\n        else\n          if [[ -n \"${_list_error:-}\" ]]\n          then\n            printf \"%s\\\\n\" \"${_list_error}\"\n\n            return 1\n          fi\n        fi\n      fi\n    }\n  } | {\n    # Header\n    # ------\n\n    if ((NB_HEADER)) && ((_display_header_and_footer))\n    then\n      if [[ -n \"${_header:-}\"             ]]\n      then\n        printf \"%s\\\\n\" \"${_header:-}\"\n      else\n        _ls_print_header \"${_header_flags[@]:-}\"\n      fi\n    fi\n\n    if [[ -n \"${_selector_folder_path:-}\" ]] &&\n       ((${NB_FOLDER_HEADER:-0}))            &&\n       ((_display_header_and_footer))\n    then\n      _ls_print_folder_header \"${_selector_folder_path:-}\"\n    fi\n\n    cat\n\n  } | {\n    # Footer\n    # ------\n\n    if ((NB_FOOTER))                  &&\n       ((_display_header_and_footer)) &&\n       [[ -z \"${_footer:-}\" ]]\n    then\n      _footer=\"$(_ls_print_footer \"${_selector_folder_path:-}\")\"\n    fi\n\n    cat\n\n    if [[ -n \"${_footer:-}\" ]]\n    then # print preloaded footer\n      printf \"%s\\\\n\" \"${_footer}\"\n    fi\n  } | {\n    if ((_use_pager))\n    then\n      _pager\n    else\n      cat\n    fi\n  }\n\n  if ((_fast_exit))\n  then\n    exit 0\n  else\n    return 0\n  fi\n}\n\n# notebooks · ##################################################### · notebooks\n\n_describe_notebooks() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} notebooks [<name> | <query>] [--ar | --archived] [--global] [--local]\n               [--names] [--paths] [--unar | --unarchived]\n  ${_ME} notebooks add ([<name>] [<remote-url> [<branch>... | --all]]) [--author]\n                   [--email <email>] [--name <name>]\n  ${_ME} notebooks (archive | open | peek | status | unarchive) [<name>]\n  ${_ME} notebooks author [<name> | <path>] [--email <email>] [--name <name>]\n  ${_ME} notebooks current [--path | --selected | --filename [<filename>]]\n                       [--global | --local]\n  ${_ME} notebooks delete <name> [-f | --force]\n  ${_ME} notebooks (export <name> [<path>] | import <path>)\n  ${_ME} notebooks init [<path> [<remote-url> [<branch>]]] [--author]\n                    [--email <email>] [--name <name>]\n  ${_ME} notebooks rename <old-name> <new-name>\n  ${_ME} notebooks select <selector>\n  ${_ME} notebooks show (<name> | <path> | <selector>) [--ar | --archived]\n                    [--escaped | --name | --path | --filename [<filename>]]\n  ${_ME} notebooks use <name>\n\n$(_color_primary \"Options\"):\n  --all                    Add notebooks from all remote branches.\n  --ar, --archived         List archived notebooks, or return archival status\n                           with \\`show\\`.\n  --author                 Set the notebook's commit author email and name.\n  --email <email>          Set the notebook's commit author email to <email>.\n  --escaped                Print the notebook name with spaces escaped.\n  --filename [<filename>]  Print an available filename for the notebooks. When\n                           <filename> is provided, check for an existing file\n                           and provide a filename with an appended sequence\n                           number for uniqueness.\n  -f, --force              Skip the confirmation prompt.\n  --global                 List global notebooks or the notebook set globally\n                           with \\`use\\`.\n  --local                  Exit with 0 if current within a local notebook,\n                           otherwise exit with 1.\n  --name, --names          Print the notebook name.\n  --name <name>            Set the notebook's commit author name to <name>.\n  --path, --paths          Print the notebook path.\n  --selected               Exit with 0 if the current notebook differs from\n                           the current global notebook, otherwise exit with 1.\n  --unar, --unarchived     Only list unarchived notebooks.\n\n$(_color_primary \"Subcommands\"):\n  (default)  List notebooks.\n  add        Create a new global notebook. When <remote-url> is specified,\n             create one or more new global notebook by cloning selected\n             or specified <branch>es from <remote-url>.\n             Aliases: \\`${_ME} notebooks create\\`, \\`${_ME} notebooks new\\`\n  archive    Set the current notebook or notebook <name> to \"archived\" status.\n  author     Configure the commit author email and name for the notebook.\n  current    Print the current notebook name or path.\n  delete     Delete a notebook.\n  export     Export the notebook <name> to the current directory or <path>,\n             making it usable as a local notebook.\n  import     Import the local notebook at <path> to make it global.\n  init       Create a new local notebook. Specify a <path> or omit to\n             initialize the current working directory as a local notebook.\n             Specify <remote-url> to clone an existing notebook.\n  open       Open the current notebook directory or notebook <name> in the\n             file browser, explorer, or finder.\n             Shortcut Alias: \\`o\\`\n  peek       Open the current notebook directory or notebook <name> in the\n             first tool found in the following list:\n             \\`ranger\\` [1], \\`mc\\` [2], \\`vifm\\` [3], \\`joshuto\\` [4], \\`eza\\` [5], or \\`ls\\`.\n             Shortcut Alias: \\`p\\`\n  rename     Rename a notebook. Aliases: \\`move\\`, \\`mv\\`\n  select     Set the current notebook from a colon-prefixed selector.\n             Not persisted. Selection format: <notebook>:<identifier>\n  status     Print the archival status of the current notebook or\n             notebook <name>.\n  show       Show and return information about a specified notebook.\n  unarchive  Remove \"archived\" status from the current notebook or notebook <name>.\n  use        Switch to a notebook.\n\n    1. https://ranger.github.io/\n    2. https://en.wikipedia.org/wiki/Midnight_Commander\n    3. https://vifm.info/\n    4. https://github.com/kamiyaa/joshuto\n    5. https://github.com/eza-community/eza\n\n$(_color_primary \"Description\"):\n  Manage notebooks.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-notebooks\n\n$(_color_primary \"See Also\"):\n  ${_ME} help archive\n  ${_ME} help history\n  ${_ME} help move\n  ${_ME} help remote\n  ${_ME} help status\n  ${_ME} help sync\n  ${_ME} help unarchive\n  ${_ME} help use\n\n$(_color_primary \"Examples\"):\n  ${_ME} notebooks --names\n  ${_ME} notebooks add sample\n  ${_ME} notebooks add example https://github.com/example/example.git\n  ${_ME} nb current --path\n  ${_ME} nb archive example\n\n$(_color_primary \"Shortcut Aliases\"):\n  ${_ME} n\n  ${_ME} nb\nHEREDOC\n}\n_RESERVED_NOTEBOOK_NAMES=(\n  \".cache\"\n  \".current\"\n  \".plugins\"\n  \".readme\"\n  \"readme\"\n  \"readme.md\"\n)\n_notebooks() {\n  # _notebooks_add()\n  #\n  # Usage:\n  #   _notebooks_add ([<name>] [<remote_url> [<branch>... | --all]]) [--author]\n  #                  [--email <email>] [--name <name>]\n  _notebooks_add() {\n    local _author=0\n    local _author_arguments=()\n    local _clone_all_branches=0\n    local _name=\n    local _print_default_feedback=1\n    local _option_selected_remote_branches=()\n    local _remote_url=\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --all)    _clone_all_branches=1 ;;\n        --author) _author=1             ;;\n        --email|--name)\n          _author=1\n          _author_arguments+=(\"${1:-}\")\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _author_arguments+=(\"${2:-}\")\n\n            shift\n          fi\n          ;;\n        *)\n          if _string_is_url \"${1:-}\"\n          then\n            _remote_url=\"${1:-}\"\n          elif [[ -z \"${_name:-}\"         ]] &&\n               [[ -z \"${_remote_url:-}\"   ]]\n          then\n            _name=\"${1:-}\"\n          else\n            _option_selected_remote_branches+=(\"${1:-}\")\n          fi\n          ;;\n      esac\n\n      shift\n    done\n\n    if [[ -z \"${_name:-}\"                 ]] &&\n       [[ -z \"${_remote_url:-}\"           ]]\n    then\n      _exit_1 _help notebooks\n    fi\n\n    if   [[ -n \"${_remote_url:-}\"         ]]\n    then\n      local _git_options=(\n        --no-local\n        --single-branch\n      )\n    fi\n\n    if [[ -n \"${_name:-}\"                 ]]\n    then\n      _notebooks_validate_name \"${_name}\"\n\n      if [[ -e \"${NB_DIR}/${_name}\"       ]]\n      then\n        _exit_1 printf \"Already exists: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n      fi\n    fi\n\n    if [[ -n \"${_remote_url:-}\"           ]]\n    then\n      if [[ -n \"${_name:-}\"               ]] &&\n         ! ((${#_option_selected_remote_branches[@]}))\n      then\n        git clone \"${_git_options[@]:-}\"                  \\\n          \"${_remote_url}\"                                \\\n          \"${NB_DIR}/${_name}\"\n      elif [[ -n \"${_name:-}\"                             ]] &&\n           [[ \"${#_option_selected_remote_branches[@]}\" -eq 1    ]]\n      then\n        git clone \"${_git_options[@]:-}\"                  \\\n          --branch \"${_option_selected_remote_branches[0]:-}\"    \\\n          \"${_remote_url}\"                                \\\n          \"${NB_DIR}/${_name}\"\n      else\n        local _current_notebook_path=\n        _current_notebook_path=\"$(_notebooks current --path)\"\n\n        local _remote_branches=()\n\n        if [[ -n \"${_option_selected_remote_branches[*]:-}\" ]]\n        then\n          _remote_branches=(\"${_option_selected_remote_branches[@]}\")\n        else\n          _remote_branches=($(\n            git -C \"${_current_notebook_path}\" ls-remote  \\\n              --heads \"${_remote_url:-}\"                  \\\n              2>/dev/null                                 \\\n              | LC_ALL=C sed \"s/.*\\///g\"\n          ))\n        fi\n\n        if ! ((${#_remote_branches[@]}))\n        then\n          _warn printf \"No remote branches found.\\\\n\"\n\n          return 1\n        else\n          local _selected_branches=()\n\n          _print_default_feedback=0\n\n          if ((${#_option_selected_remote_branches[@]}))\n          then\n            _selected_branches=(\"${_option_selected_remote_branches[@]:-}\")\n          elif [[ \"${#_remote_branches[@]}\" -eq 1 ]]\n          then\n            _selected_branches=(\"${_remote_branches[0]:-}\")\n          elif ((_clone_all_branches))\n          then\n            _selected_branches=(\"${_remote_branches[@]:-}\")\n          fi\n\n          if ! ((${#_selected_branches[@]}))\n          then\n            printf      \"Choose a remote branch:\\\\n\"\n\n            _print_line \"-----------------------\"\n\n            local i=\n            for ((i=0; i < ${#_remote_branches[@]}; i++))\n            do\n              printf \"%s %s\\\\n\"                 \\\n                \"$(_color_brackets \"$((i+1))\")\" \\\n                \"${_remote_branches[${i}]:-}\"\n            done\n\n            printf \"%s All Branches\\\\n\"         \\\n              \"$(_color_brackets \"$((i+1))\")\"\n\n            local _branch_prompt_response=\n\n            while true\n            do\n              IFS='' read -r -e -d $'\\n' -p                                               \\\n                \"$(_color_primary \"Choose a branch\") or $(_color_primary \"q\") to quit: \"  \\\n                _branch_prompt_response\n\n              case \"${_branch_prompt_response:-}\" in\n                q*|exit)\n                  printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n                  exit 0\n                  ;;\n                [0-9]*)\n                  if [[ -n \"${_remote_branches[$((_branch_prompt_response - 1))]:-}\" ]]\n                  then\n                    _branch_prompt_response=\"${_remote_branches[$((_branch_prompt_response - 1))]:-}\"\n\n                    break\n                  elif [[ \"${_branch_prompt_response}\" -eq \"$((${#_remote_branches[@]} + 1))\" ]]\n                  then\n                    _clone_all_branches=1\n\n                    break\n                  fi\n                  ;;\n                *)\n                  if _contains \"${_branch_prompt_response}\" \"${_remote_branches[@]}\"\n                  then\n                    break\n                  fi\n              esac\n            done\n\n            if ((_clone_all_branches))\n            then\n              _selected_branches=(\"${_remote_branches[@]:-}\")\n            else\n              _selected_branches=(\"${_branch_prompt_response:-}\")\n            fi\n\n            _print_line \"------------------------------------\"\n          fi\n\n          if ! ((${#_selected_branches[@]}))\n          then\n            _selected_branches=(\"${_remote_branches[@]:-}\")\n          fi\n\n          local _first=1\n\n          local __selected_branch=\n          for   __selected_branch in \"${_selected_branches[@]:-}\"\n          do\n            local _target_notebook_name=\n\n            if _contains \"${__selected_branch:-}\" \"main\" \"master\"\n            then\n              _target_notebook_name=\"${_remote_url##*/}\"\n            else\n              _target_notebook_name=\"${__selected_branch:-}\"\n            fi\n\n            local _target_notebook_path=\n            _target_notebook_path=\"$(\n              _get_unique_path \"${NB_DIR}/${_target_notebook_name}\"\n            )\"\n\n            _target_notebook_name=\"${_target_notebook_path##*/}\"\n\n            if ((_first))\n            then\n              _first=0\n            else\n              _print_line \"------------------------------------\"\n            fi\n\n            local _bk_name=  && _bk_name=\"$(_color_brackets \"${_target_notebook_name}\")\"\n            local _hi_enter= && _hi_enter=\"$(_color_primary 'enter')\"\n            local _hi_q=     && _hi_q=\"$(_color_primary 'q')\"\n            local _hi_type=  && _hi_type=\"$(_color_primary 'type')\"\n\n            cat <<HEREDOC\nPress ${_hi_enter} to use the selected name, ${_hi_type} a new name, or press ${_hi_q} to quit.\n\nHEREDOC\n\n            while true\n            do\n              local _target_notebook_prompt_response=\n\n              IFS='' read -r -e -d $'\\n' -p \\\n                \"Name ${_bk_name}: \"        \\\n                _target_notebook_prompt_response\n\n              case \"${_target_notebook_prompt_response:-}\" in\n                '')\n                  break\n                  ;;\n                q*|exit)\n                  printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n                  exit 0\n                  ;;\n                *)\n                  _target_notebook_name=\"${_target_notebook_prompt_response}\"\n\n                  break\n                  ;;\n              esac\n            done\n\n            local _unique_notebook_path=\n            _unique_notebook_path=\"$(\n              _get_unique_path \"${NB_DIR}/${_target_notebook_name:-}\"\n            )\"\n\n            _name=\"${_unique_notebook_path##*/}\"\n\n            _notebooks_validate_name \"${_name}\" || return 1\n\n            git clone \"${_git_options[@]:-}\"    \\\n              \"${_remote_url}\"                  \\\n              --branch \"${__selected_branch:-}\" \\\n              \"${NB_DIR}/${_name}\"              &&\n              printf \"Added notebook: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n          done && return 0\n        fi\n      fi\n    else\n      mkdir -p \"${NB_DIR}/${_name}\"                   &&\n        git -C \"${NB_DIR}/${_name}\" init &>/dev/null  &&\n        {\n          if ((_author))\n          then\n            _author_arguments+=(\"${NB_DIR}/${_name}\")\n            _notebooks author \"${_author_arguments[@]:-}\"\n          fi\n        }                                             &&\n        touch \"${NB_DIR}/${_name}/.index\"             &&\n        _temp cache clear                             &&\n        _git checkpoint \"${NB_DIR}/${_name}\" \"[${_ME}] Initialize\"\n      fi                            &&\n        ((_print_default_feedback)) &&\n        printf \"Added notebook: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n  }\n\n  # Usage: _notebooks_add_new [<notebook>...]\n  _notebooks_add_new() {\n    local _notebook_list=(\"${@:-}\")\n\n    [[ ! -d \"${NB_DIR}\" ]] && return 0\n\n    if [[ -z \"${1:-}\"   ]]\n    then\n      _notebook_list=($(ls -1 \"${NB_DIR}\"))\n    fi\n\n    local __notebook_name=\n    for   __notebook_name in \"${_notebook_list[@]:-}\"\n    do\n      if [[   -d \"${NB_DIR}/${__notebook_name}\"         ]]  &&\n         [[ ! -e \"${NB_DIR}/${__notebook_name}/.index\"  ]]\n      then\n        {\n          if ((_GIT_ENABLED))\n          then\n            git -C \"${NB_DIR}/${__notebook_name}\" init &>/dev/null\n          fi\n        } && touch \"${NB_DIR}/${__notebook_name}/.index\"    &&\n        _temp cache clear                                   &&\n        _git checkpoint \"${NB_DIR}/${__notebook_name}\" \"[${_ME}] Initialize\"\n      fi\n    done\n  }\n\n  # _notebooks_author()\n  #\n  # Usage:\n  #   _notebooks_author [--name [<name>]] [--email [<email>]] [--unset]\n  #                     [<notebook-path>]\n  #\n  # Description:\n  #   Print, set, and delete the <email> and <name> for git commit attribution\n  #   within the notebook.\n  _notebooks_author() {\n    local _email=0\n    local _name=0\n    local _new_local_email=\n    local _new_local_name=\n    local _print_current=0\n    local _selector=\n    local _skip_prompt=0\n    local _unset=0\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --email)\n          _email=1\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _new_local_email=\"${2:-}\"\n\n            shift\n          fi\n          ;;\n        -f|--force|--skip*|-y|--yes)\n          _skip_prompt=1\n          ;;\n        --name)\n          _name=1\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _new_local_name=\"${2:-}\"\n\n            shift\n          fi\n          ;;\n        --print|--current)\n          _print_current=1\n          ;;\n        --unset)\n          _unset=1\n          ;;\n        *)\n          if [[ -z \"${_selector:-}\"     ]]\n          then\n            _selector=\"${1:-}\"\n          fi\n          ;;\n      esac\n\n      shift\n    done\n\n    local _notebook_path=\n\n    if   [[ \"${_selector:-}\" =~ ^/      ]]\n    then\n      _notebook_path=\"${_selector:-}\"\n    elif [[ \"${_selector:-}\" == \"local\" ]]\n    then\n      _notebook_path=\"$(_notebooks_current --local --path || :)\"\n    elif [[ -n \"${_selector:-}\"         ]]\n    then\n      _notebook_path=\"${NB_DIR}/${_selector%%:*}\"\n    fi\n\n    if [[ -z \"${_notebook_path:-}\"            ]]\n    then\n      _notebook_path=\"$(_notebooks_current --path)\"\n    fi\n\n    if [[ \"${_notebook_path:-}\" =~ ^${NB_DIR} ]]\n    then\n      local _notebook_name=\"${_notebook_path##*/}\"\n    else\n      local _notebook_name=\"local\"\n    fi\n\n    local _global_email=\n    _global_email=\"$(\n      git -C \"${_notebook_path:-}\" config --global user.email || :\n    )\"\n\n    local _global_name=\n    _global_name=\"$(\n      git -C \"${_notebook_path:-}\" config --global user.name  || :\n    )\"\n\n    local _local_email=\n    _local_email=\"$(\n      git -C \"${_notebook_path:-}\" config --local user.email  || :\n    )\"\n\n    local _local_name=\n    _local_name=\"$(\n      git -C \"${_notebook_path:-}\" config --local user.name   || :\n    )\"\n\n    if ((_unset))\n    then\n      local _unset_output_present=0\n\n      if [[ -n \"${_local_email:-}\"  ]] && {\n           ((_email)) || ! ((_name))\n         }\n      then\n        _warn printf \"Unsetting local email.\\\\n\"\n        git -C \"${_notebook_path:-}\" config --unset user.email  || :\n        _unset_output_present=1\n      fi\n\n      if [[ -n \"${_local_name:-}\"   ]] && {\n           ((_name))  || ! ((_email))\n         }\n      then\n        _warn printf \"Unsetting local name.\\\\n\"\n        git -C \"${_notebook_path:-}\" config --unset user.name   || :\n        _unset_output_present=1\n      fi\n\n      ((_unset_output_present)) && printf \"\\\\n\"\n\n      printf \"Updated author for: %s\\\\n\" \"$(\n        _color_primary \"${_notebook_name}\"\n      )\"\n\n      _print_line \"-------------------\"\n\n      _notebooks_author \"${_notebook_path}\" --current\n\n      return 0\n    elif ((_print_current))\n    then\n      printf \"%s\" \"$(_color_primary \"email\")\"\n\n      if [[ -n \"${_local_email:-}\"        ]]\n      then\n        printf \" (%s):  %s\\\\n\" \"$(_color_primary \"local\")\" \"${_local_email:-}\"\n      else\n        printf \" (%s): %s\\\\n\" \"$(_color_primary \"global\")\" \"${_global_email:-}\"\n      fi\n\n      printf \"%s\" \"$(_color_primary \"name\")\"\n\n      if [[ -n \"${_local_name:-}\"         ]]\n      then\n        printf \"  (%s):  %s\\\\n\" \"$(_color_primary \"local\")\" \"${_local_name:-}\"\n      else\n        printf \"  (%s): %s\\\\n\" \"$(_color_primary \"global\")\" \"${_global_name:-}\"\n      fi\n\n      return 0\n    else\n      printf \"Current author for: %s\\\\n\" \"$(\n        _color_primary \"${_notebook_name}\"\n      )\"\n\n      _print_line \"-------------------\"\n\n      _notebooks_author \"${_notebook_path}\" --current\n\n      if [[ -n \"${_new_local_email:-}\"    ]] || [[ -n \"${_new_local_name:-}\" ]]\n      then\n        printf    \"\\\\nUpdate:\\\\n\"\n        _print_line  \"-------\"\n\n        if [[ -n \"${_new_local_email:-}\"  ]]\n        then\n          printf \"local %s: %s\\\\n\" \"$(_color_primary \"email\")\" \"${_new_local_email:-}\"\n        fi\n\n        if [[ -n \"${_new_local_name:-}\"   ]]\n        then\n          printf \"local %s:  %s\\\\n\" \"$(_color_primary \"name\")\" \"${_new_local_name:-}\"\n        fi\n      fi\n\n      if ! ((_skip_prompt))\n      then\n        while true\n        do\n          local __yn=\n          IFS='' read -r -e -d $'\\n' -p   \\\n\"${_NEWLINE}$(_color_primary \"Update?\")  $(_color_brackets \"y/N\") \" __yn\n\n          case \"${__yn}\" in\n            [Yy]*)\n              break\n              ;;\n            *)\n              printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n              exit 0\n              ;;\n          esac\n        done\n\n        if [[ -z \"${_new_local_email:-\"${_new_local_name:-}\"}\" ]]\n        then\n          local _unset=\n          _unset=$(_color_primary \"unset\")\n\n          cat <<HEREDOC\n\nEnter a new value, ${_unset} to use the global value,\nor leave blank to keep the current value.\n\nHEREDOC\n\n          IFS='' read -r -e -d $'\\n' -p             \\\n\"local $(_color_primary \"email:\") \" _new_local_email\n\n          IFS='' read -r -e -d $'\\n' -p             \\\n\"local $(_color_primary \"name:\")  \" _new_local_name\n        fi\n      fi\n\n      if [[ -n \"${_new_local_email:-}\"    ]]\n      then\n        if _contains \"${_new_local_email:-}\" \"global\" \"--unset\" \"unset\"\n        then\n          git -C \"${_notebook_path:-}\" config --unset user.email  || :\n        else\n          git -C \"${_notebook_path}\" config --local \\\n            user.email \"${_new_local_email:-}\"\n        fi\n      fi\n\n      if [[ -n \"${_new_local_name:-}\"     ]]\n      then\n        if _contains \"${_new_local_name:-}\" \"global\" \"--unset\" \"unset\"\n        then\n          git -C \"${_notebook_path:-}\" config --unset user.name   || :\n        else\n          git -C \"${_notebook_path}\" config --local \\\n            user.name \"${_new_local_name:-}\"\n        fi\n      fi\n\n      if [[ -n \"${_new_local_email:-\"${_new_local_name:-}\"}\" ]]   || ! ((_skip_prompt))\n      then\n        printf \"\\\\nUpdated author for: %s\\\\n\" \"$(\n          _color_primary \"${_notebook_name}\"\n        )\"\n\n        _print_line \"-------------------\"\n\n        _notebooks_author \"${_notebook_path}\" --current\n      fi\n    fi\n  }\n\n  # _notebooks_current()\n  #\n  # Usage:\n  #   _notebooks_current (<name> | <path> | <selector>) [--global | --local]\n  #                      [--path | --scoped] [--filename]\n  _notebooks_current() {\n    local _file_path=\n    local _print_global=0\n    local _print_local=0\n    local _print_path=0\n    local _print_unique_file_path=0\n    local _return_selected=0\n    local _selector=\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --global)\n          _print_global=1\n          ;;\n        --local)\n          _print_local=1\n          ;;\n        --path*)\n          _print_path=1\n          ;;\n        --scoped|--selected)\n          _return_selected=1\n          ;;\n        --filename|--basename|--file*path)\n          _print_unique_file_path=1\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _file_path=\"${2}\"\n\n            shift\n          fi\n          ;;\n        [^-]*)\n          _selector=\"${1}\"\n          ;;\n      esac\n\n      shift\n    done\n\n    if [[ -n \"${_selector:-}\" ]]\n    then\n      _notebooks_select \"${_selector}\" || :\n    fi\n\n    if ((_print_local))\n    then\n      if [[ -n \"${_LOCAL_NOTEBOOK_PATH:-}\" ]]\n      then\n        if ((_print_path))\n        then\n          printf \"%s\\\\n\" \"${_LOCAL_NOTEBOOK_PATH}\"\n        else\n          return 0\n        fi\n      else\n        return 1\n      fi\n    elif ((_print_global))\n    then\n      if ((_print_path))\n      then\n        printf \"%s\\\\n\" \"${_GLOBAL_NOTEBOOK_PATH}\"\n      else\n        basename \"${_GLOBAL_NOTEBOOK_PATH}\"\n      fi\n    elif ((_print_path))\n    then\n      printf \"%s\\\\n\" \"${NB_NOTEBOOK_PATH}\"\n    elif ((_return_selected))\n    then\n      [[ \"${NB_NOTEBOOK_PATH}\" != \"${_GLOBAL_NOTEBOOK_PATH}\" ]] &&\n      [[ \"${NB_NOTEBOOK_PATH}\" != \"${_LOCAL_NOTEBOOK_PATH}\"  ]]\n    elif ((_print_unique_file_path))\n    then\n      _notebooks_show \"${NB_NOTEBOOK_PATH}\" --filename \"${_file_path:-}\"\n    else\n      if [[ -n \"${_LOCAL_NOTEBOOK_PATH:-}\"                      ]] &&\n         [[ \"${NB_NOTEBOOK_PATH}\" == \"${_LOCAL_NOTEBOOK_PATH}\"  ]]\n      then\n        printf \"local\\\\n\"\n      else\n        basename \"${NB_NOTEBOOK_PATH}\"\n      fi\n    fi\n  }\n\n  # _notebooks_delete()\n  #\n  # Usage:\n  #   _notebooks_delete <name>\n  _notebooks_delete() {\n    local _force=0\n    local _name=\n\n    local __arg=\n    for   __arg in \"${@:-}\"\n    do\n      case \"${__arg}\" in\n        -f|--force|--skip*|-y|--yes)\n          _force=1\n          ;;\n        *)\n          [[ -z \"${_name:-}\"  ]] && _name=\"${__arg%%:*}\"\n          ;;\n      esac\n    done\n\n    if [[   -z  \"${_name}\"    ]]\n    then\n      _exit_1 _help notebooks\n    elif [[     \"${_name}\"    == \"local\"    ]] &&\n         [[ -n  \"${_LOCAL_NOTEBOOK_PATH:-}\" ]]\n    then\n      _exit_1 cat <<HEREDOC\nUse your system's shell or file explorer to delete local notebook directories.\nHEREDOC\n    fi\n\n    _notebooks_validate_name \"${_name}\"\n\n    if [[ ! -d \"${NB_DIR}/${_name}\"         ]] ||\n       [[ ! -e \"${NB_DIR}/${_name}/.git\"    ]] ||\n       [[ ! -e \"${NB_DIR}/${_name}/.index\"  ]]\n    then\n      _exit_1 printf \"Notebook not found: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n    fi\n\n    local _notebook_names=()\n    _notebook_names=($(_notebooks --names --no-color))\n\n    local _notebook_count=\n    _notebook_count=\"${#_notebook_names[@]}\"\n\n    if ! ((_force))\n    then\n      if _command_exists \"trash\" && [[ \"${OSTYPE}\" =~ ^darwin ]]\n      then\n        printf \"Moving to Trash: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n      else\n        cat <<HEREDOC\nDeleting $(_color_primary \"${_name}\").\n\nThis action cannot be undone. This will permanently delete the\n$(_color_primary \"${_name}\") notebook, all notes and files it contains,\nand the entire revision history.\n\nHEREDOC\n      fi\n\n      while true\n      do\n        local __response=\n        IFS='' read -r -e -d $'\\n' -p \\\n\"Please type $(_color_primary \"${_name}\") to confirm: \" __response\n\n        if [[ \"${__response}\"     == \"${_name}\"   ]]\n        then\n          break\n        else\n          printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n          exit 0\n        fi\n      done\n    fi\n\n    if [[ \"$(_notebooks current)\" ==  \"${_name}\"  ]] &&\n       [[ \"${_notebook_count}\"    -gt 1           ]]\n    then\n      if [[ \"${_name}\" != \"home\"  ]]\n      then\n        _notebooks use \"home\"\n      else\n        local __notebook=\n        for   __notebook in \"${_notebook_names[@]:-}\"\n        do\n          if [[ \"${__notebook}\"   !=    \"$(_notebooks current)\"   ]]\n          then\n            _notebooks use \"${__notebook}\"\n\n            break\n          fi\n        done\n      fi\n    fi\n\n    if _command_exists \"trash\"    &&    [[ \"${OSTYPE}\" =~ ^darwin ]]\n    then\n      trash \"${NB_DIR:?}/${_name:?}\"\n    else\n      if [[ -e \"${NB_DIR:?}/${_name:?}\" ]]\n      then\n        rm -r -f \"${NB_DIR:?}/${_name:?}\"\n      fi\n    fi &&\n      _temp cache clear &&\n      printf \"Notebook deleted: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n  }\n\n  # _notebooks_export()\n  #\n  # Usage:\n  #   _notebooks_export <name> [<path>]\n  _notebooks_export() {\n    local _name=\"${1:-}\"\n\n    if [[ -z \"${_name:-}\"           ]]\n    then\n      _exit_1 _help \"notebooks\"\n    fi\n\n    _notebooks_validate_name \"${_name}\"\n\n    if [[ ! -d \"${NB_DIR}/${_name}\" ]]\n    then\n      _exit_1 printf \"Notebook not found: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n    fi\n\n    local _target_path=\"${2:-}\"\n\n    if [[ -n \"${_target_path:-}\"    ]] && [[ ! \"${_target_path}\" =~ ^/ ]]\n    then\n      _target_path=\"${_CURRENT_WORKING_DIR}/${_target_path}\"\n    fi\n\n    if [[ -n \"${_target_path:-}\"              ]] &&\n       [[ -d \"${_target_path}\"                ]] &&\n       [[ ! \"${_target_path}\" =~ \\/${_name}$  ]]\n    then\n      _target_path=\"${_target_path}/${_name}\"\n    fi\n\n    if [[ -z \"${_target_path}\"      ]]\n    then\n      _target_path=\"${_CURRENT_WORKING_DIR}/${_name}\"\n    fi\n\n    _target_path=\"$(_get_unique_path \"${_target_path}\")\"\n\n    cp -R \"${NB_DIR}/${_name}\" \"${_target_path}\"  &&\n      _temp cache clear                           &&\n      printf \"Exported notebook %s to %s\\\\n\"  \\\n        \"$(_color_primary \"${_name}\")\"        \\\n        \"$(_color_primary \"${_target_path}\")\"\n  }\n\n  # _notebooks_import()\n  #\n  # Usage:\n  #   _notebooks_import <path> [<name>]\n  _notebooks_import() {\n    local _path=\"${1:-}\"\n\n    if [[ -z \"${_path:-}\"     ]]\n    then\n      _exit_1 _help \"notebooks\"\n    fi\n\n    local _basename=\n    _basename=\"$(basename \"${_path}\")\"\n\n    if [[ ! \"${_path}\" =~ ^/  ]]\n    then\n      _path=\"${_CURRENT_WORKING_DIR}/${_path}\"\n    fi\n\n    if [[ ! -d \"${_path}\"     ]]\n    then\n      _exit_1 printf \"Not a directory: %s\" \"$(_color_primary \"${_path}\")\"\n    fi\n\n    local _target_basename=\"${2:-}\"\n\n    if [[   -z \"${_target_basename:-}\"  ]]\n    then\n      _target_basename=\"${_basename}\"\n    fi\n\n    _notebooks_validate_name \"${_target_basename}\"\n\n    local _target_path=\n    _target_path=\"$(_get_unique_path \"${NB_DIR}/${_target_basename}\")\"\n\n    cp -R \"${_path}\" \"${_target_path}\"  &&\n      _temp cache clear                 &&\n      _notebooks_add_new                &&\n      printf \"Imported notebook: %s\\\\n\" \\\n        \"$(_color_primary \"$(basename \"${_target_path}\")\")\"\n  }\n\n  # _notebooks_init()\n  #\n  # Usage:\n  #   _notebooks_init [<path> [<remote_url> [<branch>]]\n  _notebooks_init() {\n    local _author=0\n    local _author_arguments=()\n    local _path=\n    local _remote_branch=\n    local _remote_url=\n    local _skip_prompt=0\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --author) _author=1 ;;\n        --email|--name)\n          _author=1\n          _author_arguments+=(\"${1:-}\")\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _author_arguments+=(\"${2:-}\")\n\n            shift\n          fi\n          ;;\n        -f|--force|--skip*|-y|--yes)\n          _skip_prompt=1\n          ;;\n        *)\n          if _string_is_url \"${1:-}\"    && [[ -z \"${_remote_url:-}\" ]]\n          then\n            _remote_url=\"${1:-}\"\n          elif [[ -z \"${_path:-}\"   ]]  && [[ -z \"${_remote_url:-}\" ]]\n          then\n            _path=\"${1:-}\"\n          else\n            _remote_branch=\"${1:-}\"\n          fi\n          ;;\n      esac\n\n      shift\n    done\n\n    if [[ -n \"${_remote_url:-}\"     ]]  && [[ -z \"${_path}\"         ]]\n    then\n      _exit_1 printf                                                    \\\n        \"Must specify a <path> when cloning from <remote-url>.\\\\n%s\\\\n\" \\\n        \"$(_help \"notebooks\")\"\n    fi\n\n    if [[   -n \"${_path:-}\"         ]]\n    then\n      if [[ !   \"${_path}\" =~ ^/    ]]\n      then\n        _path=\"${_CURRENT_WORKING_DIR}/${_path}\"\n      fi\n    else\n      _path=\"${_CURRENT_WORKING_DIR}\"\n    fi\n\n    if [[ -d \"${_path}\"             ]]  &&\n       [[ -e \"${_path}/.git\"        ]]\n    then\n      local _error_message=\n\n      if [[ -f \"${_path}/.index\"    ]]\n      then\n        _error_message=\"Notebook exists: $(_color_primary \"${_path}\")\"\n      else\n        _error_message=\"Git repository exists: $(_color_primary \"${_path}\")\"\n      fi\n\n      _exit_1 printf \"%s\\\\n\" \"${_error_message}\"\n    fi\n\n    if [[ ! -e \"${_path}\"           ]]\n    then\n      mkdir -p \"${_path}\"\n    elif [[ \"${HOME}\" =~ ^${_path}  ]]\n    then\n      _exit_1 printf                                                    \\\n        \"Unable to turn top-level directory into local notebook: %s\\\\n\" \\\n        \"$(_color_primary \"${_path}\")\"\n    elif [[ -f \"${_path}\"           ]]\n    then\n      _exit_1 printf \"File exists: %s\\\\n\" \"$(_color_primary \"${_path}\")\"\n    elif [[ -d \"${_path:-}\"         ]]\n    then\n      printf \"Directory exists: %s\\\\n\" \"$(_color_primary \"${_path}\")\"\n\n      if [[ -n \"${_remote_url:-}\"   ]]\n      then\n        _exit_1 printf \"Unable to clone to existing directory.\\\\n\"\n      else\n        local _git_repository_count=0\n        _git_repository_count=\"$(\n          find \"${_path}\" -name .git -prune | wc -l | awk '$1=$1'\n        )\"\n\n        if ((_git_repository_count))\n        then\n          _warn printf \"This directory contains %s git repositories.\\\\n\" \\\n            \"$(_color_primary \"${_git_repository_count}\")\"\n        fi\n\n        if ! ((_skip_prompt))\n        then\n          while true\n          do\n            local __yn=\n            IFS='' read -r -e -d $'\\n' -p \\\n              \"Initialize directory as a local notebook? $(_color_brackets \"y/N\") \" __yn\n\n            case \"${__yn}\" in\n              [Yy]*)\n                break\n                ;;\n              *)\n                printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n                exit 0\n                ;;\n            esac\n          done\n        fi\n      fi\n    fi\n\n    if [[ \"${_path}\" != \"${_CURRENT_WORKING_DIR}\" ]] &&\n       [[ -n \"${_remote_url:-}\"                   ]]\n    then\n      if [[ -n \"${_remote_branch:-}\"      ]]\n      then\n        git clone --no-local --single-branch --branch \"${_remote_branch:-}\" \\\n          \"${_remote_url}\"                                                  \\\n          \"${_path}\"\n      else\n        git clone --no-local --single-branch \"${_remote_url}\" \"${_path}\"\n      fi\n    else\n      git -C \"${_path}\" init &>/dev/null  &&\n        {\n          if ((_author))\n          then\n            _author_arguments+=(\"${_path}\")\n            _notebooks author \"${_author_arguments[@]:-}\"\n          fi\n        } &&\n        touch \"${_path}/.index\"           &&\n        _git checkpoint \"${_path}\" \"[${_ME}] Initialize\"\n    fi\n\n    printf \"Initialized local notebook: %s\\\\n\" \"$(_color_primary \"${_path}\")\"\n  }\n\n  # _notebooks_list()\n  #\n  # Usage:\n  #   _notebooks_list [<name> | <query>] [--ar | --archived] [--local]\n  #                   [--global] [--names] [--paths] [--unar | --unarchived]\n  _notebooks_list() {\n    local _counter=0\n    local _notebook_color_enabled=\"${_COLOR_ENABLED}\"\n    local _notebook_names=()\n    local _notebook_paths=()\n    local _only_archived=0\n    local _only_global=0\n    local _only_local=0\n    local _only_names=0\n    local _only_paths=0\n    local _only_unarchived=0\n    local _options=()\n    local _query_names=()\n\n    local __arg=\n    for   __arg in \"${@:-}\"\n    do\n      case \"${__arg}\" in\n        --archived|--global|--local|--name*|--no*color|--path*|--unarchived)\n          _options+=(\"${__arg}\")\n          ;;\n      esac\n\n      case \"${__arg}\" in\n        --ar|--archived)\n          _only_archived=1\n          ;;\n        --global)\n          _only_global=1\n          ;;\n        --local)\n          _only_local=1\n          ;;\n        --name*)\n          _only_names=1\n          ;;\n        --no*color)\n          _notebook_color_enabled=0\n          ;;\n        --path*)\n          _only_paths=1\n          ;;\n        --unar|--unarchived)\n          _only_unarchived=1\n          ;;\n        *)\n          _query_names+=(\"${__arg}\")\n          ;;\n      esac\n    done\n\n    if [[ -z \"${NB_DIR}\" ]] || [[ ! -e \"${NB_DIR}\"  ]]\n    then\n      exit 1\n    fi\n\n    _current_notebook_name=\"$(_notebooks current --name)\"\n\n    if [[ -z \"${_query_names[*]:-}\"         ]]\n    then\n      _notebook_names=($(ls -1 \"${NB_DIR}\"))\n\n      _notebooks_add_new \"${_notebook_names[@]:-}\"\n\n      set +f\n      _notebook_paths=($(ls -1 -d \"${NB_DIR}\"/*))\n      set -f\n\n      if [[ -n \"${_LOCAL_NOTEBOOK_PATH:-}\"  ]]\n      then\n        _notebook_names=(\"local\" \"${_notebook_names[@]:-}\")\n        _notebook_paths=(\"${_LOCAL_NOTEBOOK_PATH}\" \"${_notebook_paths[@]:-}\")\n      fi\n    else\n      _notebooks_add_new\n\n      local __name=\n      for   __name in \"${_query_names[@]}\"\n      do\n        __name=\"${__name%:}\"\n\n        _notebook_names+=(\"${__name}\")\n\n        if [[ \"${__name}\" == \"local\"        ]]\n        then\n          _notebook_paths+=(\"${_LOCAL_NOTEBOOK_PATH}\")\n        else\n          _notebook_paths+=(\"${NB_DIR}/${__name}\")\n        fi\n      done\n    fi\n\n    local i=\n    for ((i=0; i < ${#_notebook_names[@]}; i++))\n    do\n      if [[ -e \"${_notebook_paths[i]}/.git\"                 ]]\n      then # it's a git repository.\n        local _notebook_line=\n        local _origin_url=\n\n        if [[     \"${i}\"                        == \"0\"      ]]  &&\n           [[     \"${_notebook_names[i]:-}\"     == \"local\"  ]]  &&\n           [[ -n  \"${_LOCAL_NOTEBOOK_PATH:-}\"               ]]\n        then # local notebook as first notebook\n          if ((_only_global))\n          then\n            continue\n          else\n            if ((_only_paths))\n            then\n              _notebook_line=\"${_notebook_paths[i]}\"\n            elif ((_notebook_color_enabled))                    &&\n                 [[ \"${_current_notebook_name}\" == \"local\"  ]]\n            then\n              _notebook_line=\"$(_color_primary \"local\" --underline)\"\n            else\n              _notebook_line=\"local\"\n            fi\n          fi\n        elif ((_only_local))\n        then\n          if [[ -z \"${_LOCAL_NOTEBOOK_PATH:-}\"      ]]\n          then\n            return 1\n          else\n            continue\n          fi\n        else\n          if ((_only_paths))\n          then\n            _notebook_line=\"${_notebook_paths[i]}\"\n          elif ! ((_notebook_color_enabled))\n          then\n            _notebook_line=\"${_notebook_names[i]}\"\n          else\n            if [[ \"${_current_notebook_name}\" == \"${_notebook_names[i]}\" ]]\n            then # it's the current repository.\n              _notebook_line=\"$(_color_primary \"${_notebook_names[i]}\")\"\n\n              if [[ \"${#_notebook_names[@]}\" -gt 1  ]]\n              then\n                _notebook_line=\"$(\n                  _color_primary \"${_notebook_names[i]}\" --underline\n                )\"\n              fi\n            else\n              _notebook_line=\"${_notebook_names[i]}\"\n            fi\n          fi\n        fi\n\n        if [[ -e \"${_notebook_paths[i]}/.archived\"  ]]\n        then\n          if ((_only_unarchived))\n          then\n            continue\n          elif ! ((_only_names)) && ! ((_only_paths))\n          then\n            _notebook_line=\"${_notebook_line} (archived)\"\n          fi\n        elif ((_only_archived))\n        then\n          continue\n        fi\n\n        if ! ((_only_names)) && ! ((_only_paths))\n        then\n          _origin_url=\"$(\n            git -C \"${_notebook_paths[i]}\" config --get remote.origin.url || echo ''\n          )\"\n\n          if [[ -n \"${_origin_url:-}\"   ]]\n          then\n            _notebook_line=\"${_notebook_line} (${_origin_url})\"\n          fi\n        fi\n\n        if [[ -n \"${_notebook_line:-}\"  ]]\n        then\n          printf \"%s\\\\n\" \"${_notebook_line:-}\"\n\n          _counter=$((_counter+1))\n        fi\n      fi\n    done\n\n    if ! ((_counter))\n    then\n      if [[ -n \"${_query_names[*]:-}\"   ]]\n      then\n        {\n          local _query_pattern=\n          _query_pattern=\"$(_join \"|\" \"${_query_names[@]:-}\")\"\n\n          {\n            _notebooks_list \"${_options[@]:-}\"  2>/dev/null\n          } | {\n            grep -i \"${_query_pattern:-}\"       2>/dev/null\n          }\n        } || {\n          _warn printf                  \\\n            \"Notebook not found: %s\\\\n\" \\\n            \"$(_color_primary \"${_query_names[*]}\" | tr '\\r\\n' ' ')\" &&\n              return 1\n        }\n      else\n        return 1\n      fi\n    fi\n  }\n\n  # _notebooks_notebook()\n  #\n  # Usage:\n  #   _notebooks_notebook [archive | open | peek | status | unarchive] <name>\n  _notebooks_notebook() {\n    local _notebook_name=\"${2%:}\"\n    local _notebook_path=\n    local _subcommand=\"${1:-}\"\n\n    if [[ -n \"${_notebook_name:-}\"  ]]\n    then\n      _notebooks_validate_name \"${_notebook_name}\"\n\n      _notebook_path=\"$(_notebooks \"${_notebook_name}\" --path)\"\n    else\n      _notebook_name=\"$(_notebooks current)\"\n      _notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    if [[ -z \"${_notebook_name:-}\"  ]]\n    then\n      _exit_1 printf \"Unable to determine notebook name.\\\\n\"\n    fi\n\n    if [[ -z \"${_notebook_path:-}\"  ]]\n    then\n      _exit_1 printf \"Unable to determine notebook path.\\\\n\"\n    fi\n\n    if [[ -z \"${_subcommand}\"       ]]\n    then\n      printf \"%s\\\\n\" \"${_notebook_name}\"\n\n      return 0\n    fi\n\n    if [[ \"${_subcommand:-}\"    =~ (^open$|^o$) ]]\n    then\n      if _open_in_gui_app \"${_notebook_path:-}\"\n      then\n        return 0\n      else\n        _exit_1 printf                                                  \\\n          \"%s doesn't know how to open directories on this system.\\\\n\"  \\\n          \"$(_color_primary \"${_ME}\")\"\n      fi\n    elif [[ \"${_subcommand:-}\"  =~ (^peek$|^p$) ]]\n    then\n      if _command_exists \"ranger\"\n      then\n        ranger \"${_notebook_path}\"\n      elif _command_exists \"mc\"\n      then\n        mc \"${_notebook_path}\"\n      elif _command_exists \"vifm\"\n      then\n        vifm \"${_notebook_path}\"\n      elif _command_exists \"exa\"\n      then\n        exa -lah --git \"${_notebook_path}\"\n      else\n        # gnu || bsd\n        ls -lah --color=always \"${_notebook_path}\" 2>/dev/null ||\n          ls -lah -G \"${_notebook_path}\"\n      fi\n    else\n      local _dotfile_path=\"${_notebook_path}/.archived\"\n\n      if [[   \"${_subcommand}\" == \"archive\"   ]]\n      then\n        if [[ ! -e \"${_dotfile_path}\"         ]]\n        then\n          touch \"${_dotfile_path}\" &&\n            _git checkpoint \"${_notebook_path}\" \"[${_ME}] Archived\"\n        fi\n\n        printf \"%s archived.\\\\n\" \"$(_color_primary \"${_notebook_name}\")\"\n      elif [[ \"${_subcommand}\" == \"status\"    ]]\n      then\n        if [[   -e \"${_dotfile_path}\"         ]]\n        then\n          printf \"%s is archived.\\\\n\" \"$(_color_primary \"${_notebook_name}\")\"\n        else\n          printf \"%s is not archived.\\\\n\" \"$(_color_primary \"${_notebook_name}\")\"\n        fi\n      elif [[ \"${_subcommand}\" == \"unarchive\" ]]\n      then\n        if [[   -e \"${_dotfile_path}\"         ]]\n        then\n          rm \"${_dotfile_path:?}\" &&\n            _git checkpoint \"${_notebook_path}\" \"[${_ME}] Unarchived\"\n        fi\n\n        printf \"%s unarchived.\\\\n\" \"$(_color_primary \"${_notebook_name}\")\"\n      fi\n    fi\n  }\n\n  # _notebooks_rename()\n  #\n  # Usage:\n  #   _notebooks_rename <old> <new>\n  _notebooks_rename() {\n    local _new=\"${2:-}\"\n    local _old=\"${1:-}\"\n\n    _notebooks_validate_name \"${_old}\"\n    _notebooks_validate_name \"${_new}\"\n\n    if [[ -z \"${_old}\" ]] || [[ -z \"${_new}\"  ]]\n    then\n      _exit_1 _help notebooks\n    elif [[ -n \"${_LOCAL_NOTEBOOK_PATH:-}\"    ]]\n    then\n      if [[ \"${_old}\" == \"local\" ]] || [[ \"${_new}\" == \"local\" ]]\n      then\n        _exit_1 cat <<HEREDOC\n\"local\" refers to the local notebook and can not be renamed.\nHEREDOC\n      fi\n    elif [[ ! -d \"${NB_DIR}/${_old}\"  ]]\n    then\n      _exit_1 printf \"%s is not a valid notebook name.\\\\n\"        \\\n        \"$(_color_primary \"${_old}\")\"\n    elif [[ -e \"${NB_DIR}/${_new}\"    ]]\n    then\n      _exit_1 printf \"A notebook named \\\"%s\\\" already exists.\\\\n\" \\\n        \"$(_color_primary \"${_new}\")\"\n    fi\n\n    mv \"${NB_DIR}/${_old}\" \"${NB_DIR}/${_new}\"\n\n    if [[ \"$(cat \"${NB_DIR}/.current\")\" == \"${_old}\" ]]\n    then\n      printf \"%s\\\\n\" \"${_new}\" > \"${NB_DIR}/.current\"\n    fi\n\n    _temp cache clear\n\n    printf \"%s is now named %s\\\\n\"  \\\n      \"$(_color_primary \"${_old}\")\" \\\n      \"$(_color_primary \"${_new}\")\"\n  }\n\n  # _notebooks_select()\n  #\n  # Usage:\n  #   _notebook_select <selector>\n  _notebooks_select() {\n    local _selector=\"${1:-}\"\n\n    if [[ -z \"${_selector:-}\"       ]]\n    then\n      _exit_1 _help \"notebooks\"\n    fi\n\n    local _notebook_path=\n    _notebook_path=\"$(\n      _notebooks_show \"${_selector:-}\" --path 2>/dev/null || :\n    )\"\n\n    if [[ -n \"${_notebook_path:-}\"  ]] &&\n       [[ -d \"${_notebook_path:-}\"  ]]\n    then\n      NB_NOTEBOOK_PATH=\"${_notebook_path}\"\n\n      return 0\n    else\n      return 1\n    fi\n  }\n\n  # _notebooks_show()\n  #\n  # Usage:\n  #   _notebooks_show (<name> | <path> | <selector>) [--archived]\n  #                   [--escaped | --name | --path | --filename [<filename>]]\n  _notebooks_show() {\n    local _file_path=\n    local _local_notebook_path=\"${_LOCAL_NOTEBOOK_PATH:-}\"\n    local _notebook_color_enabled=1\n    local _notebook_path=\n    local _only_name=0\n    local _only_path=0\n    local _print_escaped_name=0\n    local _print_unique_file_path=0\n    local _selector=\n    local _test_archived=0\n\n    while ((${#}))\n    do\n      case \"${1:-}\" in\n        --archived)\n          _test_archived=1\n          ;;\n        --escaped)\n          _print_escaped_name=1\n          ;;\n        --name)\n          _only_name=1\n          ;;\n        --no*color)\n          _notebook_color_enabled=0\n          ;;\n        --path)\n          _only_path=1\n          ;;\n        --filename|--basename|--file*path)\n          _print_unique_file_path=1\n\n          if _option_value_is_present \"${2:-}\"\n          then\n            _file_path=\"${2}\"\n\n            shift\n          fi\n          ;;\n        *)\n          if [[ -z \"${_selector}\"   ]]\n          then\n            _selector=\"${1:-}\"\n          fi\n          ;;\n      esac\n\n      shift\n    done\n\n    if [[ -z \"${_selector:-}\"       ]]\n    then\n      _exit_1 _help \"notebooks\"\n    elif [[ \"${_selector:-}\" =~ ^/  ]]\n    then\n      local _maybe_notebook_path=\"${_selector}\"\n\n      while [[ -n \"${_maybe_notebook_path:-}\"         ]] &&\n            ! {\n              [[ -d \"${_maybe_notebook_path}/.git\"    ]] &&\n              [[ -f \"${_maybe_notebook_path}/.index\"  ]]\n            } && {\n              {\n                [[    \"${_maybe_notebook_path:-}\"   =~ ^${NB_DIR}     ]]  &&\n                [[ !  \"${_maybe_notebook_path%/*}\"  == \"${NB_DIR}\"    ]]\n              } || {\n                [[ !  \"${_maybe_notebook_path:-}\"   =~ ^${NB_DIR}     ]]\n              }\n            }\n      do\n        _maybe_notebook_path=\"${_maybe_notebook_path%/*}\"\n      done\n\n      if [[ -n \"${_maybe_notebook_path:-}\"    ]]\n      then\n        if [[ -n \"${_local_notebook_path:-}\"                          ]] &&\n           [[ \"${_maybe_notebook_path}\" == \"${_local_notebook_path}\"  ]]\n        then\n          _notebook_path=\"${_local_notebook_path%/}\"\n        else\n          _notebook_path=\"${_maybe_notebook_path%/}\"\n        fi\n      fi\n    elif [[ -n \"${_selector:-}\"               ]]\n    then\n      local _selector_notebook=\"${_selector%%:*}\"\n\n      if [[ -n \"${_selector_notebook:-}\"      ]]\n      then\n        if [[ \"${_selector_notebook:-}\" == \"local\"  ]] &&\n           [[ -n \"${_local_notebook_path:-}\"        ]]\n        then\n          _notebook_path=\"${_local_notebook_path%/}\"\n        elif [[ -d \"${NB_DIR}/${_selector_notebook:-}/.git\"    ]] &&\n             [[ -f \"${NB_DIR}/${_selector_notebook:-}/.index\"  ]]\n        then\n          _notebook_path=\"${NB_DIR}/${_selector_notebook%/}\"\n        fi\n      fi\n    fi\n\n    if [[ -z \"${_notebook_path:-}\"            ]]\n    then\n      _warn \\\n        printf \"Notebook not found: %s\\\\n\" \"$(_color_primary \"${_selector}\")\"\n\n      return 1\n    fi\n\n    if ((_only_path))\n    then\n      printf \"%s\\\\n\" \"${_notebook_path}\"\n\n      return 0\n    fi\n\n    if ((_test_archived))\n    then\n      if [[ -d \"${_notebook_path}/.archived\"  ]]\n      then\n        return 0\n      else\n        return 1\n      fi\n    fi\n\n    if ((_print_unique_file_path))\n    then\n      _get_unique_relative_path \"${_file_path:-\".${NB_DEFAULT_EXTENSION}\"}\"\n\n      return 0\n    fi\n\n    local _notebook_name=\n\n    if [[   \"${_notebook_path}\"   == \"${_LOCAL_NOTEBOOK_PATH:-}\"  ]] ||\n       [[ ! \"${_notebook_path:-}\" =~ ^${NB_DIR}                   ]]\n    then\n      _notebook_name=\"local\"\n    else\n      _notebook_name=\"$(basename \"${_notebook_path}\")\"\n    fi\n\n    if ((_only_name))\n    then\n      printf \"%s\\\\n\" \"${_notebook_name}\"\n\n      return 0\n    fi\n\n    local _escaped_name=\"${_notebook_name}\"\n\n    if [[ \"${_escaped_name}\" =~ \\         ]]\n    then\n      _escaped_name=\"$(\n        printf \"%s\\\\n\" \"${_escaped_name}\" | sed -e \"s/ /\\\\\\ /g\"\n      )\"\n    fi\n\n    if ((_print_escaped_name))\n    then\n      printf \"%s\\\\n\" \"${_escaped_name:-}\"\n\n      return 0\n    fi\n\n    if ((_notebook_color_enabled))        &&\n       [[ \"${_notebook_path}\" == \"${NB_NOTEBOOK_PATH}\"  ]]\n    then\n      _escaped_name=\"$(_color_primary \"${_escaped_name}\")\"\n    fi\n\n    local _notebook_line=\"${_escaped_name}\"\n\n    if [[ -e \"${_notebook_path}/.archived\"              ]]\n    then\n      _notebook_line=\"${_notebook_line} (archived)\"\n    fi\n\n    local _remote_url=\n    _remote_url=\"$(\n      git -C \"${_notebook_path}\" config --get remote.origin.url || echo ''\n    )\"\n\n    if [[ -n \"${_remote_url:-}\"           ]]\n    then\n      _notebook_line=\"${_notebook_line} (${_remote_url})\"\n    fi\n\n    printf \"%s\\\\n\" \"${_notebook_line}\"\n  }\n\n  # _notebooks_use()\n  #\n  # Usage:\n  #   _notebooks_use <name>\n  _notebooks_use() {\n    local _name=\"${1%:}\"\n\n    if [[ -z \"${_name}\"                   ]]\n    then\n      _exit_1 _help notebooks\n    fi\n\n    _notebooks_validate_name \"${_name}\"\n\n    if [[ -n \"${_LOCAL_NOTEBOOK_PATH}\"    ]]\n    then\n      _exit_1 cat <<HEREDOC\nCurrently in a local notebook. To run a command in a global notebook,\nadd the notebook name before the command name, separated by a colon:\n  ${_ME} <notebook>:<command> [options...]\n\n$(_color_primary \"Examples\"):\n  ${_ME} home:list\n  ${_ME} example:add --title \"Example Title\"\n  ${_ME} example:search \"sample query\"\nHEREDOC\n    fi\n\n    if [[ -e \"${NB_DIR}/${_name}/.index\"  ]]\n    then\n      printf \"%s\\\\n\" \"${_name}\" > \"${NB_DIR}/.current\"\n\n      _GLOBAL_NOTEBOOK_PATH=\"${NB_DIR}/${_name}\"\n      NB_NOTEBOOK_PATH=\"${_GLOBAL_NOTEBOOK_PATH}\"\n\n      printf \"Now using: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n    else\n      _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_name}\")\"\n    fi\n  }\n\n  # Usage: _notebooks_validate_name <name>\n  _notebooks_validate_name() {\n    if _contains                                                \\\n      \"$(printf \"%s\\\\n\" \"${1:-}\" | tr '[:upper:]' '[:lower:]')\" \\\n      \"${_RESERVED_NOTEBOOK_NAMES[@]}\"\n    then\n      _warn printf \"Name reserved: %s\\\\n\" \"$(_color_primary \"${1:-}\")\"\n\n      return 1\n    else\n      return 0\n    fi\n  }\n\n  local _name=\"${2:-}\"\n  local _subcommand=\"${1:-}\"\n\n  if ! _contains \"${_subcommand:-}\" \"add\" \"author\" \"current\" \"init\" \"list\" \"show\"\n  then\n    _notebooks_add_new\n  fi\n\n  case \"${_subcommand}\" in\n    a|add|create|new)\n      shift\n\n      _notebooks_add      \"${@:-}\"\n      ;;\n    author|config*)\n      shift\n\n      _notebooks_author   \"${@:-}\"\n      ;;\n    export)\n      _notebooks_export   \"${2:-}\" \"${3:-}\"\n      ;;\n    import)\n      _notebooks_import   \"${2:-}\" \"${3:-}\"\n      ;;\n    init)\n      shift\n\n      _notebooks_init     \"${@:-}\"\n      ;;\n    current)\n      shift\n\n      _notebooks_current  \"${@:-}\"\n      ;;\n    d|delete)\n      _notebooks_delete   \"${_name:-}\" \"${3:-}\"\n      ;;\n    list)\n      shift\n\n      _notebooks_list     \"${@:-}\"\n      ;;\n    rename|mv|move)\n      _notebooks_rename   \"${_name:-}\" \"${3:-}\"\n      ;;\n    select)\n      _notebooks_select   \"${2:-}\"\n      ;;\n    s|show)\n      shift\n\n      _notebooks_show     \"${@:-}\"\n      ;;\n    u|use)\n      _notebooks_use      \"${_name:-}\"\n      ;;\n    archive|open|o|peek|p|status|unarchive)\n      _notebooks_notebook \"${_subcommand}\" \"${_name:-}\"\n      ;;\n    *)\n      _notebooks_list     \"${@}\"\n      ;;\n  esac\n}\n_alias_subcommand \"notebooks\" \"n\"\n_alias_subcommand \"notebooks\" \"nb\"\n_alias_subcommand \"notebooks\" \"nbs\"\n_alias_subcommand \"notebooks\" \"notebook\"\n_alias_subcommand \"notebooks\" \"ns\"\n\n# subcommands · ################################################# · subcommands\n\n_describe_subcommands() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} subcommands [add <name>...] [alias <name> <alias>]\n                 [describe <name> <usage>]\n\n$(_color_primary \"Subcommands\"):\n  add       Add a new subcommand.\n  alias     Create an <alias> of a given subcommand <name>, with linked help.\n            Note that aliases must also be added with \\`subcommands add\\`.\n  describe  Set the usage text displayed with \\`${_ME} help <subcommand>\\`.\n            This can be assigned as a heredoc, which is recommended, or\n            as a string argument.\n\n$(_color_primary \"Description\"):\n  List, add, alias, and describe subcommands. New subcommands, aliases, and\n  descriptions are not persisted, so \\`add\\`, \\`alias\\`, \\`describe\\` are\n  primarily for plugins.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-plugins\n\n$(_color_primary \"See Also\"):\n  ${_ME} help plugins\nHEREDOC\n}\n_subcommands() {\n  case \"${1:-}\" in\n    add)\n      if [[ -n \"${2:-}\" ]]\n      then\n        shift\n\n        NB_PLUGIN_SUBCOMMANDS+=(\"${@:-}\")\n      fi\n      ;;\n    alias)\n      if [[ -n \"${2:-}\" ]] &&\n         [[ -n \"${3:-}\" ]]\n      then\n        _alias_subcommand \"${2:-}\" \"${3:-}\"\n      fi\n      ;;\n    describe)\n      shift\n\n      describe \"${@:-}\"\n      ;;\n    *)\n      printf \"%s\\\\n\" \"${_DOCUMENTED_SUBCOMMANDS[*]}\"\n      ;;\n  esac\n}\n_alias_subcommand \"subcommands\" \"commands\"\n\n###############################################################################\n# Plugins\n###############################################################################\n\n# $NB_PLUGIN_SUBCOMMANDS\n#\n# The list of subcommands exposed by plugins.\nNB_PLUGIN_SUBCOMMANDS=()\n\n# User defined plugins can be installed in the $NB_DIR/.plugins directory.\n# Plugins have a .nb-plugin or .nb-theme extension and are written in a\n# Bash-compatible shell scripting language.\n#\n# NOTE: Themes are loaded separately.\n__load_plugins() {\n  if [[ -d \"${NB_DIR}/.plugins\" ]]\n  then\n    set +f\n    local __file=\n    for   __file in \"${NB_DIR}/.plugins\"/*.\"${_ME}\"-plugin*\n    do\n      [[ -f \"${__file}\"                           ]] || continue\n      [[    \"${__file}\"  =~ /copy.${_ME}-plugin$  ]] && continue\n\n      source \"${__file}\" 2>/dev/null || :\n    done\n    set -f\n  fi\n}; __load_plugins\n\n###############################################################################\n# Program Option Parsing\n###############################################################################\n\n# _normalize_options()\n#\n# Usage:\n#   _normalize_options <option>...\n#\n# Description:\n#   Iterate over options, breaking -ab into -a -b and --foo=bar into --foo bar\n#   also turns -- into --endopts to avoid issues with things like '-o-', the\n#   '-' should not indicate the end of options, but be an invalid option (or\n#   the argument to the option, such as wget -qO-)\n#\n# Source:\n#   https://github.com/e36freak/templates/blob/master/options\n_NORMALIZED_OPTIONS=()\n_normalize_options() {\n  local _character=\n  local _character_string=\n  local _options=()\n\n  while ((${#}))\n  do\n    case \"${1}\" in\n      # if option is of type -ab\n      -[!-]?*)\n        if  [[ -n \"${_options[*]:-}\" ]]                 &&\n            _contains \"${_options[${#_options[@]}-1]}\"  \\\n              \"--append\"                                \\\n              \"--content\"                               \\\n              \"--overwrite\"                             \\\n              \"--prepend\"                               \\\n              \"add\"                                     \\\n              \"a\"                                       \\\n              \"+\"                                       \\\n              \"new\"\n        then\n          _options+=(\"${1}\")\n\n          shift\n        else\n          # loop over each character starting with the second\n          local i=\n          for ((i=1; i < ${#1}; i++))\n          do\n            _character=\"${1:i:1}\"\n            _character_string+=\"${_character}\"\n\n            if [[ ! \"${_character}\"     =~ [0-9]  ]] ||\n               [[ ! \"${1:$((i + 1)):1}\" =~ [0-9]  ]]\n            then\n              _options+=(\"-${_character_string}\")\n              _character_string=\n            fi\n          done\n\n          shift\n        fi\n        ;;\n      # if option is of type --foo=bar, split on first '='\n      --?*=*)\n        _options+=(\"${1%%=*}\" \"${1#*=}\")\n\n        shift\n        ;;\n      # end of options, stop breaking them up\n      --)\n        _options+=(--endopts)\n\n        shift\n\n        _options+=(\"${@}\")\n\n        break\n        ;;\n      # otherwise, nothing special\n      *)\n        _options+=(\"${1}\")\n\n        shift\n        ;;\n    esac\n  done\n\n  _NORMALIZED_OPTIONS=(\"${_options[@]}\")\n}; _normalize_options \"${@:-}\"\n\n# set new positional parameters to altered options. Set default to blank.\nset -- \"${_NORMALIZED_OPTIONS[@]:-}\"\n\n# Usage: _print_normalized_options\n_print_normalized_options() {\n  printf \"%s\\\\n\" \"${_NORMALIZED_OPTIONS[@]}\"\n}\n\n# Parse Options ###############################################################\n\n# Initialize program option variables.\n_ARGUMENTS=()\n_SUBCOMMAND=\n_USE_DEBUG=0\n\n# $_SUBCOMMANDS\n#\n# All available subcommands.\n_SUBCOMMANDS=(\n  a\n  add\n  ar\n  archive\n  b\n  bk\n  bm\n  bookmark\n  bookmarks\n  br\n  browse\n  browser\n  close\n  commands\n  completions\n  config\n  copy\n  count\n  create\n  d\n  delete\n  \"do\"\n  \"done\"\n  duplicate\n  e\n  edit\n  export\n  env\n  f\n  folder\n  folders\n  git\n  grep\n  h\n  help\n  helpers\n  history\n  i\n  import\n  index\n  init\n  list\n  ls\n  move\n  mv\n  n\n  nb\n  nbs\n  new\n  notebook\n  notebooks\n  ns\n  o\n  open\n  p\n  peek\n  pin\n  plugin\n  plugins\n  preview\n  q\n  r\n  remote\n  rename\n  reset\n  rm\n  run\n  s\n  search\n  set\n  settings\n  shell\n  show\n  st\n  stat\n  status\n  subcommands\n  sync\n  t\n  task\n  tasks\n  trash\n  to\n  todo\n  todos\n  u\n  unar\n  unarchive\n  undo\n  undone\n  unpin\n  unset\n  update\n  upgrade\n  use\n  version\n  view\n  ${NB_PLUGIN_SUBCOMMANDS[@]:-}\n)\n\n# $_DOCUMENTED_SUBCOMMANDS\n#\n# Primary subcommands that appear in documentation. For example, some aliases\n# are omitted from this list. This list is also used for tab completion.\n_DOCUMENTED_SUBCOMMANDS=(\n  +\n  -\n  add\n  archive\n  b\n  bookmark\n  browse\n  commands\n  completions\n  copy\n  count\n  delete\n  \"do\"\n  edit\n  export\n  env\n  folders\n  git\n  help\n  history\n  import\n  init\n  list\n  ls\n  move\n  mv\n  notebooks\n  open\n  peek\n  pin\n  plugins\n  preview\n  q\n  remote\n  rename\n  run\n  search\n  set\n  settings\n  shell\n  show\n  st\n  status\n  subcommands\n  sync\n  tasks\n  todo\n  u\n  unarchive\n  undo\n  unpin\n  unset\n  update\n  use\n  version\n  ${NB_PLUGIN_SUBCOMMANDS[@]:-}\n)\n\n# $_GIT_SUBCOMMANDS\n#\n# Subcommands that initiate background cleanup commits and sync with remotes.\n_GIT_SUBCOMMANDS=(\n  a\n  add\n  ar\n  archive\n  b\n  bk\n  bm\n  bookmark\n  bookmarks\n  br\n  browse\n  browser\n  close\n  copy\n  count\n  create\n  d\n  delete\n  \"do\"\n  \"done\"\n  duplicate\n  e\n  edit\n  export\n  f\n  folder\n  folders\n  grep\n  i\n  import\n  list\n  ls\n  move\n  mv\n  n\n  nb\n  nbs\n  new\n  notebook\n  notebooks\n  ns\n  o\n  open\n  p\n  peek\n  pin\n  preview\n  q\n  rename\n  rm\n  s\n  show\n  search\n  t\n  task\n  tasks\n  to\n  todo\n  todos\n  u\n  unar\n  unarchive\n  undo\n  undone\n  unpin\n  use\n  view\n  ${NB_PLUGIN_SUBCOMMANDS[@]:-}\n)\n\n# $_SUBCOMMANDS_PATTERN\n#\n# The contents of the `$_SUBCOMMANDS` array, joined with '|'.\n_SUBCOMMANDS_PATTERN=\"^$(_join '$|^' \"${_SUBCOMMANDS[@]}\")$|^\\+$|^\\-$\"\n\n# $_GIT_SUBCOMMANDS_PATTERN\n#\n# The contents of the `$_GIT_SUBCOMMANDS` array, joined with '|'.\n_GIT_SUBCOMMANDS_PATTERN=\"^$(_join '$|^' \"${_GIT_SUBCOMMANDS[@]}\")$|^\\+$|^\\-$\"\n\n# _is_valid_subcommand()\n#\n# Usage:\n#   _is_valid_subcommand <name>\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If the given <name> is a valid subcommand name.\n#   1 (error,  false)  If not.\n_is_valid_subcommand() {\n  [[ -n \"${1:-}\" ]] &&  [[ \"${1:-}\" =~ ${_SUBCOMMANDS_PATTERN} ]]\n}\n\n# _parse_options()\n#\n# Usage:\n#   _parse_options <option>...\n#\n# Description:\n#   Parse program options.\n_parse_options() {\n  local _current_option=\n  local _non_option_arguments=()\n  local _previous_option=\n\n  while ((${#}))\n  do\n    _previous_option=\"${_current_option:-}\"\n\n    _current_option=\"${1:-}\"\n\n    shift\n\n    case \"${_current_option}\" in\n      -)\n        if [[ -z \"${_SUBCOMMAND:-}\"     ]]\n        then\n          _SUBCOMMAND=\"delete\"\n        else\n          _ARGUMENTS+=(\"delete\")\n        fi\n        ;;\n      +)\n        if [[ -z \"${_SUBCOMMAND:-}\"     ]]\n        then\n          _SUBCOMMAND=\"add\"\n        else\n          _ARGUMENTS+=(\"add\")\n        fi\n        ;;\n      -h|--help)\n        case \"${_SUBCOMMAND:-}\" in\n          git|run)\n            _ARGUMENTS+=(\"${_current_option}\")\n            ;;\n          *)\n            if [[ -n \"${_SUBCOMMAND:-}\" ]]\n            then\n              _ARGUMENTS+=(\"${_SUBCOMMAND}\")\n            fi\n\n            _SUBCOMMAND=\"help\"\n            ;;\n        esac\n        ;;\n      --debug)\n        _USE_DEBUG=1\n        ;;\n      --no*color)\n        _COLOR_ENABLED=0\n        ;;\n      --no*git|--skip*git)\n        _GIT_ENABLED=0\n        ;;\n      --version)\n        if [[ -n \"${_SUBCOMMAND:-}\"     ]]\n        then\n          _ARGUMENTS+=(\"${_current_option}\")\n        else\n          _SUBCOMMAND=\"version\"\n        fi\n        ;;\n      -i|--interactive)\n        case \"${_SUBCOMMAND:-}\" in\n          git|run)\n            _ARGUMENTS+=(\"${_current_option}\")\n            ;;\n          *)\n            _SUBCOMMAND=\"shell\"\n            ;;\n        esac\n        ;;\n      --welcome)\n        _print_welcome\n        ;;\n      *:*)\n        if [[ ! \"${_current_option:-}\"  =~ ^-         ]] &&\n           [[ ! \"${_previous_option:-}\" =~ ^-         ]]\n        then\n          _non_option_arguments+=(\"${_current_option}\")\n        fi\n\n        if [[ -z \"${_SUBCOMMAND:-}\"                   ]] &&\n            _string_is_url \"${_current_option}\"\n        then\n          _SUBCOMMAND=\"bookmark\"\n          _ARGUMENTS+=(\"${_current_option}\")\n        elif _notebooks current --selected\n        then\n          _ARGUMENTS+=(\"${_current_option}\")\n        elif _contains \"${_SUBCOMMAND:-\"${1:-}\"}\" \"copy\" \"move\" \"mv\" \"rename\" &&\n             (($((${#_non_option_arguments[@]} - 1))))\n        then\n          _ARGUMENTS+=(\"${_current_option}\")\n        elif [[ \"${_SUBCOMMAND:-}\" == \"delete\"        ]]\n        then\n          _ARGUMENTS+=(\"${_current_option}\")\n        elif _contains \"${_previous_option:-}\" \"-r\" \"--related\" \"--via\" \"--also\"\n        then\n          _ARGUMENTS+=(\"${_current_option}\")\n        else\n          local _selector_suffix=\"${_current_option#*:}\"\n\n          if [[ -z \"${_selector_suffix:-}\"            ]] &&\n             [[ -n \"${_SUBCOMMAND:-}\"                 ]] &&\n             [[ ! \"${_SUBCOMMAND}\" =~ (^ls$|^list$)   ]]\n          then\n            _ARGUMENTS+=(\"${_current_option}\")\n          else\n            if ! _notebooks select \"${_current_option}\"\n            then\n              if [[ -n \"${_SUBCOMMAND:-}\"             ]] ||\n                 [[    \"${_previous_option}\" =~ ^-    ]]\n              then\n                _ARGUMENTS+=(\"${_current_option}\")\n\n                continue\n              else\n                _exit_1 printf                \\\n                  \"Notebook not found: %s\\\\n\" \\\n                  \"$(_color_primary \"${_current_option%%:*}\")\"\n              fi\n            fi\n\n            if _is_valid_subcommand \"${_selector_suffix}\"\n            then\n              _SUBCOMMAND=\"${_selector_suffix}\"\n            else\n              if _string_is_url \"${_selector_suffix}\"\n              then\n                _SUBCOMMAND=\"bookmark\"\n                _ARGUMENTS+=(\"${_selector_suffix}\")\n              elif [[ \"${_selector_suffix}\" =~ ^-   ]]\n              then\n                _ARGUMENTS+=(\"${_selector_suffix}\")\n              else\n                _ARGUMENTS+=(\"${_current_option}\")\n              fi\n            fi\n          fi\n        fi\n        ;;\n      --endopts)\n        # Terminate option parsing.\n        break\n        ;;\n      *)\n        if [[     ! \"${_previous_option}\"   =~ ^-   ]]\n        then\n          if [[ -z \"${_SUBCOMMAND:-}\"               ]] &&\n             _is_valid_subcommand \"${_current_option}\"\n          then\n            _SUBCOMMAND=\"${_current_option}\"\n          else\n            if [[ ! \"${_current_option:-}\"  =~ ^-   ]]\n            then\n              _non_option_arguments+=(\"${_current_option}\")\n            fi\n\n            _ARGUMENTS+=(\"${_current_option}\")\n          fi\n        else\n          _ARGUMENTS+=(\"${_current_option}\")\n        fi\n        ;;\n    esac\n  done\n}; _parse_options \"${@:-}\"\n\n_debug printf \"\\${_SUBCOMMAND}:           '%s'\\\\n\"  \"${_SUBCOMMAND}\"\n_debug printf \"\\${NB_NOTEBOOK_PATH}:      '%s'\\\\n\"  \"${NB_NOTEBOOK_PATH}\"\n_debug printf \"\\${_LOCAL_NOTEBOOK_PATH}:  '%s'\\\\n\"  \"${_LOCAL_NOTEBOOK_PATH}\"\n_debug printf \"\\${_ARGUMENTS[*]:-}:       '%s'\\\\n\"  \"${_ARGUMENTS[*]:-}\"\n\n###############################################################################\n# Deprecated Functions and Variables\n#\n# TODO: Remove\n###############################################################################\n\n# _get_notebook_identifier()\n_get_notebook_identifier()  { _notebooks show \"${@}\" --escaped;   }\n\n# _get_selection_basename()\n_get_selection_basename()   { _show \"${@}\" --filename;            }\n\n# _get_unique_basename()\n_get_unique_basename()      { _get_unique_relative_path \"${@:-}\"; }\n\n# _set_selection_notebook() <selector>\n_set_selection_notebook()   {\n  if [[ \"${1:-}\" =~ : ]]\n  then\n    if _notebooks select \"${1:-}\"\n    then\n      _NOTEBOOK_PATH=\"${NB_NOTEBOOK_PATH}\"\n    fi\n  elif [[ \"${_NOTEBOOK_PATH:-}\" != \"${NB_NOTEBOOK_PATH}\" ]]\n  then\n    _NOTEBOOK_PATH=\"${NB_NOTEBOOK_PATH}\"\n  fi\n}\n\n# $_NOTEBOOK_PATH\n# shellcheck disable=SC2034\nexport _NOTEBOOK_PATH=\"${_NOTEBOOK_PATH:-\"${NB_NOTEBOOK_PATH}\"}\"\n\n# $_SCOPE\n# shellcheck disable=SC2034\n# _SCOPE=\"$(_notebooks current --name)\"\n_SCOPE=\"$(basename \"${NB_NOTEBOOK_PATH}\")\"\n\n# $_SCOPED\n# shellcheck disable=SC2034\n_SCOPED=\"$(\n  # if _notebooks current --selected\n  if [[ \"${NB_NOTEBOOK_PATH}\" != \"${_GLOBAL_NOTEBOOK_PATH}\" ]]\n  then\n    printf \"1\\\\n\"\n  else\n    printf \"0\\\\n\"\n  fi\n)\"\n\n# color functions\n_color_dim()          { _color_muted    \"${@:-}\"; }\n_highlight()          { _color_primary  \"${@:-}\"; }\n_id_brackets_color()  { _color_brackets \"${@:-}\"; }\n\n###############################################################################\n# _defer()\n###############################################################################\n\n# $_DEFERRED_COMMAND\n#\n# The function and arguments to run after the script has loaded.\n_DEFERRED_COMMAND=()\n\n# _defer()\n#\n# Usage:\n#   _defer <name> [<argument>...]\n#\n# Description:\n#   Assign a command to run after the script has loaded.\n_defer() {\n  _DEFERRED_COMMAND=(\"${@:-}\")\n}\n\n# _call_deferred_command()\n#\n# Usage:\n#   _call_deferred_command --group <num>\n#\n# Description:\n#   Call the deferred command.\n_call_deferred_command() {\n  [[ -z \"${_DEFERRED_COMMAND[0]:-}\" ]] && exit 0\n\n  local _group=\"${2:-}\"\n  local _group_3_names=(\n    _ar _archive _b _bookmark _br _browse _browser _close _config _copy _do   \\\n    _done _duplicate _f _folder _folders _h _help _helpers _set _plugin       \\\n    _plugins _remote _reset _settings _shell _st _stat _status _sync _t _task \\\n    _tasks _to _todo _todos _unar _unarchive _undo _undone _unset _update     \\\n    _upgrade\n  )\n\n  if {\n       [[ \"${_group:-}\" -eq 2 ]] &&\n         _contains \"${_DEFERRED_COMMAND[0]:-}\" \"${_group_3_names[@]}\"\n     } || {\n       [[ \"${_group:-}\" -eq 3 ]] &&\n       ! _contains \"${_DEFERRED_COMMAND[0]:-}\" \"${_group_3_names[@]}\"\n     }\n  then\n    return 0\n  else\n    \"${_DEFERRED_COMMAND[@]:-}\"\n\n    return 0\n  fi\n}\n\n###############################################################################\n# _main()\n###############################################################################\n\n# _main()\n#\n# Usage:\n#   _main \"$@\"\n#\n# Description:\n#   Primary entry point for the program logic. Call this function at the end\n#   of the script after everything has been defined.\n_main() {\n  if [[ -z \"${_SUBCOMMAND:-}\" ]]\n  then\n    _SUBCOMMAND=\"ls\"\n  fi\n\n  case \"${_SUBCOMMAND}\" in\n    init|sync)\n      _git required\n      _defer \"_${_SUBCOMMAND}\" \"${@:-}\"\n      ;;\n    commands|completions|env|git|h|help*|r|run|set|settings|subcommands|update|version)\n      _defer \"_${_SUBCOMMAND}\" \"${@:-}\"\n      ;;\n    *)\n      _git required\n\n      # Call `_init()` if configuration hasn't been initialized.\n      if [[ ! -e \"${NB_DIR}\"            ]] ||\n         [[ ! -e \"${NB_NOTEBOOK_PATH}\"  ]]\n      then\n        _init \"${@:-}\"\n\n        _ls || true # returns 0 due to empty repository.\n\n        return 0\n      fi\n\n      if [[ \"${_SUBCOMMAND}\" =~ ${_GIT_SUBCOMMANDS_PATTERN} ]]\n      then\n        if _git dirty \"${NB_NOTEBOOK_PATH}\"\n        then\n          _index reconcile\n\n          _git checkpoint \"${NB_NOTEBOOK_PATH}\" --wait\n        elif _git autosyncable \"${NB_NOTEBOOK_PATH}\"\n        then\n          (_git checkpoint \"${NB_NOTEBOOK_PATH}\" &>/dev/null) &\n        fi\n      fi\n\n      if [[ \"${_SUBCOMMAND}\" == \"ls\" ]]\n      then\n        # Run `ls` on its own, exiting at the end in order to avoid running /\n        # loading the rest of the script.\n        \"_${_SUBCOMMAND}\" \"${@}\" --exit\n      else\n        # Defer subcommand call until the rest of the script has been loaded.\n        _defer \"_${_SUBCOMMAND}\" \"${@:-}\"\n\n        return 0\n      fi\n      ;;\n  esac\n}\n\n_main \"${_ARGUMENTS[@]:-}\"\n\n###############################################################################\n# Configuration: Group 2                                 Configuration: Group 2\n# ----------------------                                 ----------------------\n###############################################################################\n# --------------------------------------------------------------------------- #\n\n# $NB_BROWSE_MARKDOWN_READER\n#\n# Default: 'markdown+emoji+raw_html+east_asian_line_breaks'\n#\n# The Pandoc reader, including extensions, to use for converting Markdown to\n# HTML in `nb browse`.\n#\n# More information:\n# https://pandoc.org/MANUAL.html#extensions\n# https://pandoc.org/MANUAL.html#general-options-1\nexport NB_BROWSE_MARKDOWN_READER=\"${NB_BROWSE_MARKDOWN_READER:-\"markdown+emoji+raw_html+east_asian_line_breaks\"}\"\n\n# $NB_BROWSE_SERVER_TOOL\n#\n# Default: '' (automatically assigned)\n#\n# Supported Values: accept, bash, ncat, nc, netcat\nexport NB_BROWSE_SERVER_TOOL=\"${NB_BROWSE_SERVER_TOOL:-}\"\n\n__set_browse_server_tool() {\n  if [[ -z \"${NB_BROWSE_SERVER_TOOL:-}\"     ]]\n  then\n    if [[ \"${OSTYPE}\" =~ cygwin|msys|win32  ]]\n    then\n      if _command_exists \"socat\"\n      then\n        NB_BROWSE_SERVER_TOOL=\"socat\"\n      elif _command_exists \"ncat\"\n      then\n        NB_BROWSE_SERVER_TOOL=\"ncat\"\n      fi\n    elif _command_exists \"ncat\"\n    then\n      NB_BROWSE_SERVER_TOOL=\"ncat\"\n    elif _command_exists \"socat\"\n    then\n      NB_BROWSE_SERVER_TOOL=\"socat\"\n    elif _command_exists \"nc\" && nc --help &>/dev/null\n    then # GNU nc / netcat is present\n      NB_BROWSE_SERVER_TOOL=\"nc\"\n    elif [[ \"${BASH_VERSINFO[0]}\" -ge 5             ]] &&\n         [[ \"${BASH_VERSINFO[1]}\" -ge 2             ]] &&\n         [[ -f \"${BASH%/bin/bash}/lib/bash/accept\"  ]]\n    then\n      NB_BROWSE_SERVER_TOOL=\"accept\"\n    fi\n  fi\n}; __set_browse_server_tool\n\n###############################################################################\n# Helpers: Group 2                                             Helpers: Group 2\n# ----------------                                             ----------------\n###############################################################################\n# --------------------------------------------------------------------------- #\n\n# _build_related_list()\n#\n# Usage:\n#   _build_related_list (<url> | <selector>)...\n#\n# Description:\n#   Build a Markdown-formatted list of <url>s and <selector>s for bookmarks\n#   and todos.\n_build_related_list() {\n  local _list_content=\n  local _related_identifiers=(\"${@:-}\")\n\n  local __identifier=\n  for   __identifier in \"${_related_identifiers[@]:-}\"\n  do\n    [[ -n \"${__identifier:-}\" ]] || continue\n\n    if _string_is_url \"${__identifier:-}\"\n    then\n      _list_content+=\"- <${__identifier:-}>${_NEWLINE}\"\n    else\n      if [[ \"${__identifier:-}\" =~ \\[\\[.*\\]\\] ]]\n      then\n        __identifier=\"$(\n          sed -E -e \"s/\\[\\[(.*)\\]\\]/\\1/g\" <<< \"${__identifier:-}\"\n        )\"\n      fi\n\n      _list_content+=\"- [[${__identifier:-}]]${_NEWLINE}\"\n    fi\n  done\n\n  printf \"%s\\\\n\" \"${_list_content:-}\"\n}\n\n# _decrypt_file()\n#\n# Usage:\n#   _decrypt_file <path> <password>\n_decrypt_file() {\n  local _encrypted_path=\"${1:-}\"\n  local _password=\"${2:-}\"\n\n  if [[ -z \"${_encrypted_path}\" ]]\n  then\n    return 1\n  fi\n\n  local _notebook_and_relative_path=\"${_encrypted_path#\"${NB_DIR}\"/}\"\n\n  local _unencrypted_path=\n  _unencrypted_path=\"$(_temp file \"${_notebook_and_relative_path%.enc}\")\"\n\n  local _file_command_response=\n  _file_command_response=\"$(file \"${_encrypted_path}\" 2>/dev/null || :)\"\n\n  local _decryption_tool=\n  _decryption_tool=\"$(_get_decryption_tool \"${_encrypted_path:-}\")\"\n\n  case \"${_decryption_tool:-}\" in\n    age)\n      if _command_exists \"age\"\n      then\n        age                                 \\\n          --decrypt                         \\\n          --output \"${_unencrypted_path}\"   \\\n          \"${_encrypted_path}\"\n      else\n        _exit_1 printf                      \\\n\"This item was encrypted with \\`age\\`, but the \\`age\\` command was not found.\\\\n\"\n      fi\n      ;;\n    gpg)\n      if _command_exists \"gpg\"\n      then\n        printf \"%s\\\\n\" \"${_password}\"       \\\n          | gpg                             \\\n            --batch                         \\\n            --quiet                         \\\n            --passphrase-fd 0               \\\n            --output \"${_unencrypted_path}\" \\\n            --decrypt \"${_encrypted_path}\"\n      else\n        _exit_1 printf                      \\\n\"This item was encrypted with GPG, but the GPG command was not found.\\\\n\"\n      fi\n      ;;\n    openssl)\n      openssl enc                           \\\n        -d                                  \\\n        -aes-256-cbc                        \\\n        -in   \"${_encrypted_path}\"          \\\n        -md   sha256                        \\\n        -out  \"${_unencrypted_path}\"        \\\n        -pass file:<(printf \"%s\\\\n\" \"${_password}\") 2> /dev/null      || {\n          if [[ -f \"${_unencrypted_path:?}\" ]]\n          then\n            rm \"${_unencrypted_path:?}\"\n          fi\n\n          openssl enc                       \\\n            -d                              \\\n            -aes-256-cbc                    \\\n            -in   \"${_encrypted_path}\"      \\\n            -md   md5                       \\\n            -out  \"${_unencrypted_path}\"    \\\n            -pass file:<(printf \"%s\\\\n\" \"${_password}\") 2> /dev/null  ||\n              if [[ -f \"${_unencrypted_path:?}\" ]]\n              then\n                rm \"${_unencrypted_path:?}\"\n              fi\n        }\n      ;;\n    *)\n      _exit_1 printf \"Unable to decrypt file.\\\\n\"\n      ;;\n  esac\n\n  if [[ ! -e \"${_unencrypted_path}\" ]]\n  then\n    _exit_1 printf \"Decryption error.\\\\n\" 1>&2\n  fi\n\n  printf \"%s\\\\n\" \"${_unencrypted_path}\"\n}\n\n# _download_from()\n#\n# Usage:\n#   _download_from <url> [<outfile>]\n#\n# Description:\n#   Download the file at <url> and print to standard output or <outfile>, if\n#   present.\n_download_from() {\n  local _download_command=\n  local _downloaded=0\n  local _timeout=15\n  local _url=\"${1:-}\"\n\n  if [[ -z \"${_url}\" ]] ||\n     [[ !  \"${_url}\" =~ (^https\\:|^http\\:|^file\\:|^ftp\\:|^sftp\\:) ]]\n  then\n    return 1\n  fi\n\n  local _target_path=\"${2:-}\"\n\n  if  ((${NB_BROWSER_DOWNLOAD_ENABLED:-1}))     &&\n      {\n        [[ \"${_url}\"    =~ .html$         ]]    ||\n        [[ ! \"${_url}\"  =~ .[a-zA-Z0-9]$  ]]\n      }                                         &&\n      [[ ! \"${_url}\" =~ ^https://www.reddit.com ]]\n  then\n    if _command_exists \"google-chrome\"\n    then\n      _download_command=\"google-chrome\"\n    elif _command_exists \"chromium\"\n    then\n      _download_command=\"chromium\"\n    elif _command_exists \"chromium-browser\"\n    then\n      _download_command=\"chromium-browser\"\n    elif [[ -x \"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\" ]]\n    then\n      _download_command=\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\"\n    elif [[ -x \"/Applications/Chromium.app/Contents/MacOS/Chromium\"           ]]\n    then\n      _download_command=\"/Applications/Chromium.app/Contents/MacOS/Chromium\"\n    fi\n  fi\n\n  if [[ -z \"${_download_command:-}\" ]]\n  then\n    if _command_exists \"curl\"\n    then\n      _download_command=\"curl\"\n    elif _command_exists \"wget\"\n    then\n      _download_command=\"wget\"\n    fi\n  fi\n\n  case \"${_download_command:-}\" in\n    *hrome*|*hromium*)\n      {\n        \"${_download_command:-}\"  \\\n          --dump-dom              \\\n          --headless              \\\n          \"${_url}\"               \\\n          2>/dev/null\n      } | {\n        if [[ -n \"${_target_path:-}\" ]]\n        then\n          cat > \"${_target_path:-}\"\n        else\n          cat\n        fi\n      } && _downloaded=1\n      ;;\n    curl*)\n      local _curl_options=(\n        --silent\n        --location\n        --connect-timeout \"${_timeout}\"\n        --compressed\n        \"${_url}\"\n      )\n\n      [[ -n \"${NB_USER_AGENT:-}\" ]]   &&\n        _curl_options+=(--user-agent \"${NB_USER_AGENT}\")\n\n      if [[ -n \"${_target_path}\" ]]\n      then\n        curl                          \\\n          \"${_curl_options[@]}\"       \\\n          --output \"${_target_path}\"  \\\n          && _downloaded=1\n      else\n        curl                          \\\n          \"${_curl_options[@]}\"       \\\n          && _downloaded=1\n      fi\n      ;;\n    wget*)\n      local _wget_options=(\n        --quiet\n        --connect-timeout=\"${_timeout}\"\n        --dns-timeout=\"${_timeout}\"\n        --compression=auto\n        \"${_url}\"\n      )\n\n      [[ -n \"${NB_USER_AGENT:-}\" ]]   &&\n        _wget_options+=(--user-agent=\"${NB_USER_AGENT}\")\n\n      if [[ -n \"${_target_path}\" ]]\n      then\n        wget                          \\\n          \"${_wget_options[@]}\"       \\\n          -O \"${_target_path}\"        \\\n          2>/dev/null                 \\\n          && _downloaded=1\n      else\n        wget                          \\\n          \"${_wget_options[@]}\"       \\\n          -O -                        \\\n          2>/dev/null                 \\\n          && _downloaded=1\n      fi\n      ;;\n  esac\n\n  if ! ((_downloaded))\n  then\n    return 1\n  fi\n}\n\n# _edit_file()\n#\n# Usage:\n#   _edit_file <path> [--no-wait]\n#\n# Description:\n#   Open the file in $EDITOR. Use the `-f` option in vim and `--wait` option in\n#   other GUI editors to wait until the file is closed in the editor before\n#   continuing, unless `--no-wait`.\n_edit_file() {\n  local _file_path=\"${1:-}\"\n  local _wait=1\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      --no-wait)\n        _wait=0\n        ;;\n      *)\n        if [[ -z \"${_file_path}\"  ]]\n        then\n          _file_path=\"${__arg}\"\n        fi\n        ;;\n    esac\n  done\n\n  if [[ -z \"${_file_path}\"        ]]\n  then\n    return 1\n  fi\n\n  local _current_notebook_path=\n  _current_notebook_path=\"$(_notebooks current --path)\"\n\n  cd \"${_current_notebook_path}\"  ||  return 1\n\n  if [[ -e \"${_file_path}\"            ]]\n  then\n    if _file_is_encrypted \"${_file_path}\"\n    then\n      _exit_1 printf                  \\\n\"File must be decrypted before editing.\\\\n\"\n    fi\n\n    if _file_is_archive \"${_file_path}\"   &&\n       [[ ! \"${_file_path}\" =~ docx$  ]]\n    then\n      _exit_1 printf                  \\\n\"Can't edit archives. Export archive and expand to edit.\\\\n\"\n    fi\n\n    if ! _file_is_text \"${_file_path}\"    &&\n       [[ ! -d \"${_file_path}\"        ]]\n    then\n      if _open_in_gui_app \"${_file_path:-}\"\n      then\n        return 0\n      else\n        _exit_1 printf                                \\\n          \"%s doesn't know how to edit this file.\\\\n\" \\\n          \"$(_color_primary \"${_ME}\")\"\n      fi\n    fi\n  fi\n\n  local _editor_command=\"${NB_EDITOR}\"\n\n  # turn on case-insensitive matching\n  shopt -s nocasematch\n\n  if ((_wait))\n  then\n    case \"${NB_EDITOR}\" in\n      *gvim*|*mvim*)\n        _editor_command=\"${_editor_command} -f\"\n        ;;\n      *code*|*mate*|*subl*)\n        _editor_command=\"${_editor_command} --wait\"\n        ;;\n    esac\n  fi\n\n  if [[ -d \"${_file_path}\"    ]] &&\n     [[ \"${NB_EDITOR}\" =~ vim ]]\n  then\n    cd \"${_file_path}\" && \"${_editor_command:-}\"\n  else\n    if [[ \"${NB_EDITOR}\" =~ typora  ]] &&\n       [[ ! -f \"${_file_path:-}\"    ]]\n    then\n      touch \"${_file_path:-}\"\n    fi\n\n    eval \"${_editor_command} \\\"${_file_path}\\\"\"\n\n    if [[ \"${NB_EDITOR}\" =~ (typora|open\\ -a) ]]\n    then\n      printf \"Editing with %s\\\\n\" \"$(_color_primary \"${NB_EDITOR}\")\"\n\n      while true\n      do\n        read -n 1 -s -r -p \"Press any key to save changes and exit$(_color_muted \"...\")\"\n\n        printf \"\\\\n\"\n\n        break\n      done\n    fi\n  fi\n\n  # turn off case-insensitive matching\n  shopt -u nocasematch\n\n  return 0\n}\n\n# _encrypt_file()\n#\n# Usage:\n#   _encrypt_file <unencrypted-path> <encrypted-path>\n#                 [--password <password>] [--tool <tool>]\n_encrypt_file() {\n  local _encrypted_path=\"${2:-}\"\n  local _password=\n  local _tool=\"${NB_ENCRYPTION_TOOL}\"\n  local _unencrypted_path=\"${1:-}\"\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --password)\n        if _option_value_is_present \"${2:-}\"\n        then\n          _password=\"${2:-}\"\n\n          shift\n        fi\n        ;;\n      --tool)\n        if _option_value_is_present \"${2:-}\"\n        then\n          _tool=\"${2:-}\"\n\n          shift\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  if [[ -z \"${_password:-}\"       ]]  &&\n     [[    \"${_tool}\" != \"age\"    ]]\n  then\n    _exit_1 printf \"Password required.\\\\n\"\n  fi\n\n  if [[ -z \"${_unencrypted_path}\" ]]  ||\n     [[ -z \"${_encrypted_path}\"   ]]\n  then\n    _exit_1 printf \"Encrypted and unencrypted paths required.\\\\n\"\n  fi\n\n  if [[   \"${_tool}\" == \"age\"         ]]\n  then\n    age                               \\\n      --encrypt                       \\\n      --output \"${_encrypted_path}\"   \\\n      --passphrase                    \\\n      \"${_unencrypted_path}\"\n  elif [[ \"${_tool}\" == \"gpg\"         ]]\n  then\n    printf \"%s\\\\n\" \"${_password}\"     \\\n      | gpg                           \\\n        --batch                       \\\n        --cipher-algo AES256          \\\n        --quiet                       \\\n        --output \"${_encrypted_path}\" \\\n        --passphrase-fd 0             \\\n        --symmetric                   \\\n        \"${_unencrypted_path}\"\n  elif [[ \"${_tool}\" == \"openssl\"     ]]\n  then\n    openssl enc                       \\\n      -aes-256-cbc                    \\\n      -in   \"${_unencrypted_path}\"    \\\n      -md   sha256                    \\\n      -out  \"${_encrypted_path}\"      \\\n      -pass file:<(printf \"%s\\\\n\" \"${_password}\") 2>/dev/null\n  else\n    _exit_1 printf                    \\\n      \"\\$NB_ENCRYPTION_TOOL must be set to 'gpg' or 'openssl'.\\\\n\"\n  fi\n\n  if [[ ! -e \"${_encrypted_path}\"     ]]\n  then\n    _exit_1 printf \"Encryption error.\\\\n\"\n  fi\n}\n\n# _get_decryption_tool()\n#\n# Usage:\n#   _get_decryption_tool <path>\n#\n# Description:\n#   Print the name of the tool to use to decrypt the file at <path>.\n_get_decryption_tool() {\n  local _encrypted_path=\"${1:-}\"\n\n  local _file_command_response=\n  _file_command_response=\"$(file \"${_encrypted_path}\" 2>/dev/null || :)\"\n\n  local _decryption_tool=\n\n  if [[   \"${_file_command_response}\" =~ (GPG|PGP)  ]]\n  then\n    _decryption_tool=\"gpg\"\n  elif [[ \"${_file_command_response}\" =~ openssl    ]]\n  then\n    _decryption_tool=\"openssl\"\n  elif [[ \"${_file_command_response}\" =~ data       ]]\n  then\n    local         __first_line=\n    IFS=  read -r __first_line < \"${_encrypted_path}\"\n\n    if [[ \"${__first_line:-}\" =~ age-encryption     ]]\n    then\n      _decryption_tool=\"age\"\n    fi\n  fi\n\n  printf \"%s\\\\n\" \"${_decryption_tool:-}\"\n}\n\n# _get_hash()\n#\n# Usage:\n#   _get_hash <path>\n#\n# Description:\n#   Generate a hash for the file or directory at <path>.\n_get_hash() {\n  # Usage: _get_hash_with_command <path> <command>\n  _get_hash_with_command() {\n    local _command=\n    IFS=' ' read -ra _command <<< \"${2:-}\"\n\n    local _path=\"${1:-}\"\n\n    [[ -n \"${_command[*]:-}\" ]] && [[ -n \"${_path}\" ]] || return 1\n\n    if [[ -d \"${_path}\" ]]\n    then\n      tar -P -cf - \"${_path}\"     \\\n        | \"${_command[@]}\"        \\\n        | awk '{ print $1 }'\n    else\n      \"${_command[@]}\" \"${_path}\" \\\n        | awk '{print $1}'\n    fi\n  }\n\n  local _path=\"${1:-}\"\n  [[ -n \"${_path:-}\" ]] || return 1\n\n  if _command_exists \"shasum\"\n  then\n    _get_hash_with_command \"${_path}\" \"shasum -a 256\"\n  elif _command_exists \"md5sum\"\n  then\n    _get_hash_with_command \"${_path}\" \"md5sum\"\n  elif _command_exists \"md5\"\n  then\n    _get_hash_with_command \"${_path}\" \"md5 -q\"\n  else\n    _exit_1 printf \"No hashing tool found.\\\\n\"\n  fi\n}\n\n# _get_http_status()\n#\n# Usage:\n#   _get_http_status <url>\n#\n# Description:\n#   Print the http status response code for <url>.\n_get_http_status() {\n  local _url=\"${1:-}\"\n  [[ -n \"${_url:-}\" ]] || return 1\n\n  if _command_exists \"curl\"\n  then\n    local _curl_options=(\n      --head\n      --silent\n      --output /dev/null\n      -w \"%{http_code}\\\\n\"\n    )\n\n    [[ -n \"${NB_USER_AGENT:-}\" ]] &&\n      _curl_options+=(--user-agent \"${NB_USER_AGENT}\")\n\n    curl \"${_curl_options[@]}\" \"${_url}\" || return 0\n  elif _command_exists \"wget\"\n  then\n    local _wget_options=(\n      --server-response\n    )\n\n    [[ -n \"${NB_USER_AGENT:-}\" ]] &&\n      _wget_options+=(--user-agent=\"${NB_USER_AGENT}\")\n\n    wget \"${_wget_options[@]}\" \"${_url}\" 2>&1 \\\n      | grep \"HTTP/\" | awk '{print $2}' || return 0\n  fi\n}\n\n# _get_sanitized_filename()\n#\n# Usage:\n#   _get_sanitized_file_name <input>\n#\n# Description:\n#   Get a santized filename derived from an input string, such as a title.\n_get_sanitized_filename() {\n  printf \"%s\" \"${1:-}\"                          \\\n    | sed -E                                    \\\n        -e 's/^[[:space:]]+//g'                 \\\n        -e 's/[[:space:]]+$//g'                 \\\n        -e 's/\\[[[:space:]]*\\][[:space:]]*//g'  \\\n        -e 's/\\[x\\][[:space:]]*//g'             \\\n    | tr '[:upper:]' '[:lower:]'                \\\n    | tr '[:space:]:*/\\\\<>?|' '_'               \\\n    | tr \"\\\"\" '_'\n}\n\n# _get_unique_path()\n#\n# Usage:\n#   _get_unique_path <path>\n#\n# Description:\n#   Get a unique full path that doesn't conflict with any existing file.\n_get_unique_path() {\n  local _path=\"${1:-}\"\n\n  local _dir_path=\n  _dir_path=\"$(dirname \"${_path}\")\"\n\n  local _basename=\n  _basename=\"$(basename \"${_path}\")\"\n\n  local _file_name=\"${_basename%%.*}\"\n  local _file_extension=\"${_basename#*.}\"\n\n  if [[ -n \"${_file_extension:-}\"               ]] &&\n     [[ \"${_basename}\"  =~ \\.                   ]] &&\n     [[ \"${_file_name}\" != \"${_file_extension}\" ]]\n  then\n    _file_extension=\".${_file_extension}\"\n  else\n    _file_extension=\n  fi\n\n  local _unique_file_name=\"${_file_name}\"\n  local _uniqueness_counter=0\n\n  while [[ -e \"${_dir_path}/${_unique_file_name}${_file_extension}\"     ]] ||\n        [[ -e \"${_dir_path}/${_unique_file_name}${_file_extension}.enc\" ]]\n  do\n    _uniqueness_counter=\"$((_uniqueness_counter+1))\"\n\n    printf -v _unique_file_name -- \"%s-%01d\"  \\\n      \"${_file_name}\"                         \\\n      \"${_uniqueness_counter}\"\n  done\n\n  printf \"%s\\\\n\" \"${_dir_path}/${_unique_file_name}${_file_extension}\"\n}\n\n# _get_unique_relative_path()\n#\n# Usage:\n#   _get_unique_relative_path [<file-path>[<extension>] [<notebook-path>]\n#\n# Description:\n#   Get a unique basename that doesn't conflict with any existing file.\n_get_unique_relative_path() {\n  local _file_path=\"${1:-}\"\n  local _notebook_path=\"${2:-\"$(_notebooks current --path)\"}\"\n\n  local _file_basename=\"${_file_path##*/}\" # strip ancestors\n  local _file_name=\"${_file_basename%%.*}\" # strip extension\n  local _folder_path=\n  local _target_basename=\n  local _unique_path=\n\n  if [[ -z \"${_file_name:-}\"    ]]\n  then\n    _file_name=\"$(date \"+%Y%m%d%H%M%S\")\"\n  fi\n\n  if [[ \"${_file_path:-}\" =~ /  ]]\n  then\n    _folder_path=\"${_file_path%\\/*}\"\n  fi\n\n  if [[ \"${_file_basename:-}\" =~ ^\\.  ]]\n  then\n    local _file_type=\"${_file_basename#*.}\"\n\n    _target_basename=\"${_file_name}.${_file_type}\"\n  elif [[ -n \"${_file_basename:-}\"    ]]\n  then\n    _target_basename=\"${_file_basename}\"\n  else\n    _target_basename=\"${_file_name}\"\n  fi\n\n  _unique_path=\"$(\n    if [[ -n \"${_folder_path:-}\" ]]\n    then\n      _get_unique_path \"${_notebook_path}/${_folder_path}/${_target_basename}\"\n    else\n      _get_unique_path \"${_notebook_path}/${_target_basename}\"\n    fi\n  )\"\n\n  printf \"%s\" \"${_unique_path#\"${_notebook_path}\"/}\"\n}\n\n# _get_uri()\n#\n# Usage:\n#   _get_uri [--encode | --decode] <string>\n#\n# Description:\n#   Encode or decode a URI.\n_get_uri() {\n  # Usage: _get_uri_decode <string>\n  _get_uri_decode() {\n    # https://unix.stackexchange.com/a/187256\n    local _input=\"${1:-}\"\n\n    _input=\"${_input//+/ }\"\n    _input=\"${_input//$'\\r'}\"\n\n    printf \"%b\\\\n\" \"${_input//%/\\\\x}\"\n  }\n\n  # Usage: _get_uri_encode <string>\n  _get_uri_encode() {\n    local _encoding=\"${1//'%'/%25}\"\n\n    _encoding=\"${_encoding//' '/%20}\"\n    _encoding=\"${_encoding//'\"'/%22}\"\n    _encoding=\"${_encoding//'#'/%23}\"\n    _encoding=\"${_encoding//'$'/%24}\"\n    _encoding=\"${_encoding//'&'/%26}\"\n    _encoding=\"${_encoding//'+'/%2B}\"\n    _encoding=\"${_encoding//','/%2C}\"\n    _encoding=\"${_encoding//${_SLASH}/%2F}\"\n    _encoding=\"${_encoding//':'/%3A}\"\n    _encoding=\"${_encoding//';'/%3B}\"\n    _encoding=\"${_encoding//'='/%3D}\"\n    _encoding=\"${_encoding//'?'/%3F}\"\n    _encoding=\"${_encoding//'@'/%40}\"\n    _encoding=\"${_encoding//'['/%5B}\"\n    _encoding=\"${_encoding//'\\n'/%0A}\"\n\n    local _encoded=\"${_encoding//']'/%5D}\"\n\n    printf \"%s\\\\n\" \"${_encoded:-}\"\n  }\n\n  case \"${1:-}\" in\n    --decode)                 _get_uri_decode \"${2:-}\"  ;;\n    --encode)                 _get_uri_encode \"${2:-}\"  ;;\n    http%3A%2F*|https%3A%2F*) _get_uri_decode \"${1:-}\"  ;;\n    http://*|https://*)       _get_uri_encode \"${1:-}\"  ;;\n  esac\n}\n\n# _option_get_tags()\n#\n# Usage:\n#   _option_get_tags <option> <comma,separated,tags>\n#\n# Description:\n#   Convert a comma-separated list of tags to a string of hashtags.\n_option_get_tags() {\n  local _tag_list=\n  _tag_list=\"$(_option_get_value \"${1:-}\" \"${2:-}\")\" || return 1\n\n  local _tags=()\n  IFS=',' read -ra _tags <<< \"${_tag_list}\"\n\n  local _normalized_tags=()\n\n  local __tag=\n  for   __tag in \"${_tags[@]:-}\"\n  do\n    _normalized_tags+=(\"#${__tag#\\#}\")\n  done\n\n  local _tag_string=\n  _tag_string=\"$(_join \" \" \"${_normalized_tags[@]-}\")\"\n\n  printf \"%s\\\\n\" \"${_tag_string:-}\"\n}\n\n# _render()\n#\n# Usage:\n#   [<input> |] _render [<path>] [--body] [--from] [--pandoc]\n#                       [--source-extension] [--title <title>]\n#                       [<pandoc-option>...]\n#\n# Options:\n#   --body              Only render body, without <head> and <body> opening\n#                       or closing tags.\n#   --from              The format to convert content from.\n#   --pandoc            Use pandoc to convert file.\n#   --source-extension  The extension of the original file. Used to select\n#                       syntax mode in Ace.\n#   --title             <title> content.\n_render() {\n  # Usage: _render_prepare_file <path> <pandoc-enabled>\n  _render_prepare_file() {\n    local _input_file_path=\"${1:?}\"\n    local _prepared_file_path=\"${_input_file_path:-}\"\n    local _use_pandoc=\"${2:-0}\"\n\n    local _code_extensions=(\n      asm aspx awd awk bash bat bats bib c c++ cc cgi class cls cmake coffee\n      cpp cs cson cxx d diff \"do\" el f fs gcl go h hs haml hbs hx j jade java\n      jl js json jsp jsx kts ksh \"less\" lsp lua m matlab ml mk mm perl php pl\n      pm prl pug py rb r rh rs sass scala scpt scss sh sql styl swift tcl toml\n      tpl ts tsx vb vba vbscript vim xml xsl xslt yaml yml zsh\n    )\n\n    if ((_use_pandoc))\n    then\n      _code_extensions+=($(\n        pandoc --list-highlight-languages \\\n          | sed -e \"/html/d\" -e \"/latex/d\" -e \"/markdown/d\"\n      ))\n    fi\n\n    local _source_extension=\"${_input_file_path##*\\.}\"\n\n    if _contains \"${_source_extension}\" \"${_code_extensions[@]:-}\"\n    then\n      if ((_use_pandoc))\n      then\n        local _code_block_temp_path=\n        _code_block_temp_path=\"$(_temp file \".md\" --touch)\"\n\n        printf \"${_BT}${_BT}${_BT}%s\\\\n%s\\\\n${_BT}${_BT}${_BT}\\\\n\"  \\\n          \"${_source_extension}\"                                    \\\n          \"$(cat \"${_input_file_path:-}\")\" >> \"${_code_block_temp_path:-}\"\n      else\n        local _code_block_temp_path=\n        _code_block_temp_path=\"$(_temp file \".html\" --touch)\"\n\n        printf \"<code>\\\\n%s\\\\n</code>\\\\n\" \\\n          \"$(cat \"${_input_file_path:-}\")\" >> \"${_code_block_temp_path:-}\"\n      fi\n\n      _prepared_file_path=\"${_code_block_temp_path:-}\"\n    fi\n\n    printf \"%s\\\\n\" \"${_prepared_file_path:-}\"\n  }\n\n  # Usage: _render_print_head [--title <title>]\n  _render_print_head() {\n    local _custom_css=\"${NB_CUSTOM_CSS:-}\"\n    local _custom_css_element=\n    local _custom_css_url=\"${NB_CUSTOM_CSS_URL:-}\"\n    local _custom_javascript=\"${NB_CUSTOM_JAVASCRIPT:-${NB_CUSTOM_JS:-}}\"\n    local _custom_javascript_element=\n    local _custom_javascript_url=\"${NB_CUSTOM_JAVASCRIPT_URL:-${NB_CUSTOM_JS_URL:-}}\"\n    local _html_title=\"${_ME}\"\n\n    if [[ \"${1:-}\" == \"--title\" ]] && [[ -n \"${2:-}\" ]]\n    then\n      _html_title=\"${2:-}\"\n    fi\n\n    local _ansi_hex_values=(\n      '000000' '800000' '008000' '808000' '000080' '800080' '008080' 'c0c0c0'\n      '808080' 'ff0000' '00ff00' 'ffff00' '0000ff' 'ff00ff' '00ffff' 'ffffff'\n      '000000' '00005f' '000087' '0000af' '0000d7' '0000ff' '005f00' '005f5f'\n      '005f87' '005faf' '005fd7' '005fff' '008700' '00875f' '008787' '0087af'\n      '0087d7' '0087ff' '00af00' '00af5f' '00af87' '00afaf' '00afd7' '00afff'\n      '00d700' '00d75f' '00d787' '00d7af' '00d7d7' '00d7ff' '00ff00' '00ff5f'\n      '00ff87' '00ffaf' '00ffd7' '00ffff' '5f0000' '5f005f' '5f0087' '5f00af'\n      '5f00d7' '5f00ff' '5f5f00' '5f5f5f' '5f5f87' '5f5faf' '5f5fd7' '5f5fff'\n      '5f8700' '5f875f' '5f8787' '5f87af' '5f87d7' '5f87ff' '5faf00' '5faf5f'\n      '5faf87' '5fafaf' '5fafd7' '5fafff' '5fd700' '5fd75f' '5fd787' '5fd7af'\n      '5fd7d7' '5fd7ff' '5fff00' '5fff5f' '5fff87' '5fffaf' '5fffd7' '5fffff'\n      '870000' '87005f' '870087' '8700af' '8700d7' '8700ff' '875f00' '875f5f'\n      '875f87' '875faf' '875fd7' '875fff' '878700' '87875f' '878787' '8787af'\n      '8787d7' '8787ff' '87af00' '87af5f' '87af87' '87afaf' '87afd7' '87afff'\n      '87d700' '87d75f' '87d787' '87d7af' '87d7d7' '87d7ff' '87ff00' '87ff5f'\n      '87ff87' '87ffaf' '87ffd7' '87ffff' 'af0000' 'af005f' 'af0087' 'af00af'\n      'af00d7' 'af00ff' 'af5f00' 'af5f5f' 'af5f87' 'af5faf' 'af5fd7' 'af5fff'\n      'af8700' 'af875f' 'af8787' 'af87af' 'af87d7' 'af87ff' 'afaf00' 'afaf5f'\n      'afaf87' 'afafaf' 'afafd7' 'afafff' 'afd700' 'afd75f' 'afd787' 'afd7af'\n      'afd7d7' 'afd7ff' 'afff00' 'afff5f' 'afff87' 'afffaf' 'afffd7' 'afffff'\n      'd70000' 'd7005f' 'd70087' 'd700af' 'd700d7' 'd700ff' 'd75f00' 'd75f5f'\n      'd75f87' 'd75faf' 'd75fd7' 'd75fff' 'd78700' 'd7875f' 'd78787' 'd787af'\n      'd787d7' 'd787ff' 'd7af00' 'd7af5f' 'd7af87' 'd7afaf' 'd7afd7' 'd7afff'\n      'd7d700' 'd7d75f' 'd7d787' 'd7d7af' 'd7d7d7' 'd7d7ff' 'd7ff00' 'd7ff5f'\n      'd7ff87' 'd7ffaf' 'd7ffd7' 'd7ffff' 'ff0000' 'ff005f' 'ff0087' 'ff00af'\n      'ff00d7' 'ff00ff' 'ff5f00' 'ff5f5f' 'ff5f87' 'ff5faf' 'ff5fd7' 'ff5fff'\n      'ff8700' 'ff875f' 'ff8787' 'ff87af' 'ff87d7' 'ff87ff' 'ffaf00' 'ffaf5f'\n      'ffaf87' 'ffafaf' 'ffafd7' 'ffafff' 'ffd700' 'ffd75f' 'ffd787' 'ffd7af'\n      'ffd7d7' 'ffd7ff' 'ffff00' 'ffff5f' 'ffff87' 'ffffaf' 'ffffd7' 'ffffff'\n      '080808' '121212' '1c1c1c' '262626' '303030' '3a3a3a' '444444' '4e4e4e'\n      '585858' '626262' '6c6c6c' '767676' '808080' '8a8a8a' '949494' '9e9e9e'\n      'a8a8a8' 'b2b2b2' 'bcbcbc' 'c6c6c6' 'd0d0d0' 'dadada' 'e4e4e4' 'eeeeee'\n    )\n\n    # #1a1a1a #1b1b20 #17171c #19191f #18181c\n    local _color_background_hex=\"#141418\"\n    local _color_background_alt_hex=\"#17171c\" # #1b1b20 #1e1e25 #212121\n    local _color_muted_hex=\"#626480\"\n    local _color_primary_hex=\"#7593eb\"\n    # TODO: local _color_secondary_hex=\n    local _color_text_hex=\"#c5c4cc\"           # #e6e6e6 #dedede\n\n    if [[ \"${NB_COLOR_PRIMARY}\" -lt 256 ]]\n    then\n      _color_primary_hex=\"#${_ansi_hex_values[${NB_COLOR_PRIMARY}]}\"\n      # TODO: _color_secondary_hex=\"#${_ansi_hex_values[${NB_COLOR_SECONDARY}]}\"\n\n      # desaturate select colors\n      case \"${_color_primary_hex}\" in\n        \\#5f87ff) _color_primary_hex=\"#7593eb\" ;;\n        \\#ffff5f) _color_primary_hex=\"#ebeb75\" ;;\n      esac\n    fi\n\n    if [[ -n \"${_custom_javascript:-}\"      ]]\n    then\n      _custom_javascript_element=\"\\\n<script>${_NEWLINE}${_custom_javascript:-}${_NEWLINE}</script>\"\n    fi\n\n    if [[ -n \"${_custom_javascript_url:-}\"  ]]\n    then\n      _custom_javascript_url_element=\"\\\n<script src=\\\"${_custom_javascript_url:-}\\\"></script>\"\n    fi\n\n    if [[ -n \"${_custom_css:-}\"             ]]\n    then\n      _custom_css_element=\"\\\n<style>${_NEWLINE}${_custom_css:-}${_NEWLINE}</style>\"\n    fi\n\n    if [[ -n \"${_custom_css_url:-}\"         ]]\n    then\n      _custom_css_url_element=\"\\\n<link rel=\\\"stylesheet\\\" href=\\\"${_custom_css_url:-}\\\"/>\"\n    fi\n\n    cat <<HEREDOC\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\n<title>${_html_title}</title>\n\n<link rel=\"icon\" type=\"image/x-icon\" href=\"data:image/x-icon;base64,\\\nAAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAACQWAAAkFgAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAon8IB59/AlSegwFunYgCVJ+RBhGdlAFcnZkAbp2eAkqc\\\npwMxm6sBaJuxAzCbtwJim7wChZrAAlCaxgUHmsQEAKN+CQafgQJqnYUB2p6JA2WfkQYPnpYDdp2aAd\\\nmengNXnKgEMZutAsCbsgHNm7cCiZu9AnGZwwG8mMcCbo6pAACehgIAnYYCIJ2HAbeeigMYnpUFAJ6c\\\nBSednQK1nqAEE5irAACbsQKTm7MBlp++DwKZxgIAmccCPZjKAbuZzQQXnogCAJ2IAiCdigG8no0EHZ\\\n6XBQCenwUnnZ8CtZ6iBBOZrgAAm7MCkZu1AmqatAAAmcsEAJnLAx2YzQG9mc8EKJ2LAgCdigIenY0B\\\n152RAlqdlwAAnqEEL52iAbaepQQQmLAAAJu2ApObuAGbncQKBJjLAQCZzQJBmM8BupnRBBafiQUOnY\\\nsBep2OAdOdlAKsnZoChZ2gAaidowKVoKwOA5a3AACbuAKQm7sC0ZrCApCYyAF8mM0Bv5jPAmeTxgAA\\\nn4oGDJ6MA1WekANJnpcEIp2cAmudoAJsnaQDGp2jAgCVuwAAm7sCkJu9A3GZxAJUmcgCe5nNAkaa0Q\\\nUGmdAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKjBJwCZuwAAnLkFFZu9AqSbvwNkmr4AAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACowSYAl7sAAJu6A1iavQGym8EDQprAAQ\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqcMpAJu9AACcvAUEnMAECJ3E\\\nCAKcwwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AAD//wAA//8AAAABAAAAAQAAiI\\\ngAAIiYAACIiAAAAIEAAAGBAAD/HwAA/x8AAP8fAAD//wAA//8AAA==\">\n\n<style>\nhtml {\n  background-color:   ${_color_background_hex};\n  color:              ${_color_text_hex};\n  font-size:          16px;\n  line-height:        1.5;\n}\n\n@media (min-width: 992px) {\n  html {\n    font-size:        17px;\n  }\n}\n\nhtml,\ninput,\ntextarea {\n  font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\n}\n\nbody {\n  font-kerning:       normal;\n  hyphens:            none;\n  margin:             0;\n  text-rendering:     optimizeLegibility;\n  word-wrap:          break-word;\n}\n\n@media (max-width: 600px) {\n  body {\n    font-size:        0.9em;\n  }\n}\n\n@media print {\n  body {\n    background-color: transparent;\n    color:            black;\n    font-size:        12pt;\n  }\n\n  h2, h3, p {\n    orphans:          3;\n    widows:           3;\n  }\n\n  h2, h3, h4 {\n    page-break-after: avoid;\n  }\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin-bottom:      1rem;\n  margin-top:         1rem;\n}\n\nh1  { font-size:      1.5rem;   }\nh2  { font-size:      1.3rem;   }\nh3  { font-size:      1.17rem;  }\n\nh5, h6 {\n  font-size: 1em;\n  font-style: italic;\n}\n\nh6  {  font-weight:   normal; }\n\np {\n  margin:             1em 0;\n  overflow:           hidden;\n}\n\na         {  color:   ${_color_primary_hex}; text-decoration: none;       }\na:hover   {  color:   ${_color_primary_hex}; text-decoration: underline;  }\na:visited {  color:   ${_color_primary_hex}; text-decoration: none;       }\n\n:focus {\n  outline:            1px solid #2d2d2d;\n}\n\nbody.using-mouse a:focus,\nbody.using-mouse input:focus {\n  outline:            none;\n}\n\nh1 a,\nh1 a:hover,\nh1 a:visited,\nnav a,\nnav a:hover,\nnav a:visited,\na.list-item,\na.list-item:hover,\na.list-item:visited {\n  color:              ${_color_text_hex};\n  text-decoration:    none;\n}\n\nblockquote {\n  border-left:        2px solid #4d4d4d;\n  color:              #878787;            /* #606060 */\n  margin:             1em 0 1em 1.7em;\n  padding-left:       1em;\n}\n\ncode {\n  font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;\n  font-size:          85%;\n  margin:             0;\n  white-space:        pre-wrap;\n}\n\npre {\n  background-color:   ${_color_background_alt_hex};\n  border:             1px solid ${_color_background_alt_hex};\n  border-radius:      1px;\n  margin:             1rem 0;\n  overflow:           auto;\n  padding:            1rem;\n}\n\npre.sourceCode {\n  padding:            1rem;\n}\n\npre code {\n  overflow:           visible;\n}\n\nhr  {\n  background-color:   #4d4d4d;\n  border:             none;\n  height:             1px;\n  margin:             1em 0;\n}\n\nimg {\n  border-radius:      1px;\n  max-width:          100%;\n}\n\nol, ul {\n  padding-left:       1.7em;\n  margin-top:         1em;\n}\n\nli > ol, li > ul {\n  margin-top:         0;\n}\n\ntable {\n  border-collapse:    collapse;\n  border-color:       transparent;\n  display:            block;\n  font-variant-numeric: lining-nums tabular-nums;\n  margin:             1em 0;\n  overflow-x:         auto;\n  width:              100%;\n}\n\nth {\n  border-top:         1px solid #4d4d4d;\n  padding:            0.25em 0.5em 0.25em 0.5em;\n}\n\ntbody {\n  border: none;\n  border-bottom:      1px solid #4d4d4d;\n  margin-top:         0.5em;\n}\n\ntd {\n  padding:            0 0 1rem 0;\n}\n\ntd > table {\n  margin:             0;\n}\n\ntable caption {\n  margin-bottom:      0.75em;\n}\n\ncol {\n  width:              auto !important;\n}\n\naudio {\n  padding:            1rem 0;\n}\n\naudio,\nvideo {\n  margin:             0 auto;\n  width:              100%;\n}\n\naudio:focus,\nvideo:focus {\n  outline:            ${_color_background_hex};\n}\n\nvideo {\n  height:             auto;\n  max-height:         50rem;\n}\n\n.media-item {\n  padding:            2rem 0 1rem;\n}\n\nheader {\n  margin-bottom:      4em;\n  text-align:         center;\n}\n\n.center {\n  text-align:         center;\n}\n\n.header-crumbs {\n  font-size:          1rem;\n  font-weight:        normal;\n  line-height:        2;\n  margin:             0 auto;\n  max-width:          45rem;\n  padding:            1.75rem 2rem 0rem;\n  text-align:         left;\n}\n\n/* <strong> for bold in terminal browsers only */\n.header-crumbs strong {\n  font-weight:        normal;\n}\n\n.header-crumbs-spacer {\n  display:            none;\n}\n\n.main {\n  margin:             0 auto;\n  max-width:          45rem;\n  padding:            0rem 2rem 2rem;\n}\n\n.main h1:first-child {\n  padding-top:        0.35rem;\n}\n\n.main p:first-child,\n.main .sourceCode:first-child {\n  padding-top:        0.5rem;\n}\n\n.math.display:focus,\n.MathJax:focus {\n  outline:            none;\n}\n\n.item-list {\n  margin-top:         0;\n}\n\n.list-item  {\n  display:            inline-block;\n  max-width:          45rem;\n  overflow:           hidden;\n  text-overflow:      ellipsis;\n  white-space:        nowrap;\n  vertical-align:     top;\n}\n\n.identifier {         color: ${_color_primary_hex}; }\n.muted      {         color: ${_color_muted_hex};   }\n\nform {\n  padding-top:        1rem;\n}\n\n#search {\n  position:           relative;\n}\n\nlabel[for=search-input] {\n  display:            none;\n}\n\n#search-input {\n  background-color:   ${_color_background_hex};\n  border:             none;\n  border-bottom:      1px solid #4d4d4d;\n  color:              ${_color_text_hex};\n  font-size:          1rem;\n  padding:            0.5rem 0;\n  width:              100%;\n}\n\n#search-input:focus {\n  outline:            0;\n}\n\n.search-spacer {\n  display:            none;\n}\n\n#search\ti {\n  animation-name:     blink;\n  animation-duration: 3000ms;\n  animation-iteration-count: infinite;\n  background-color:   #a6a659;\n  display:            none;\n  height:             80%;\n  left:               5px;\n  opacity:            0.5;\n  position:           absolute;\n  top:                10%;\n  width:              1em;\n}\n\n#search input:focus + i {\n  display:            none;\n}\n\n@keyframes blink {\n  from  { opacity:    1; }\n  to    { opacity:    0; }\n}\n\nform br {\n  display:            none;\n}\n\ninput[type=\"submit\"] {\n  background:         none;\n  border:             none;\n  color:              ${_color_primary_hex};\n  font-size:          1rem;\n  outline:            0 solid ${_color_background_hex};\n  padding:            1rem;\n}\n\ninput[type=\"submit\"]:active {\n  border-bottom:      1px solid #bae7ff;\n  color:              #bae7ff;\n}\n\ninput[type=\"submit\"]:focus {\n  outline:            1px solid #2d2d2d;\n}\n\ninput[type=\"submit\"]:hover {\n  border-bottom:      1px solid ${_color_primary_hex};\n}\n\n.last-saved {\n  padding-left:       1rem;\n}\n\ntextarea,\n.ace_editor {\n  background-color:   ${_color_background_alt_hex};\n  border:             none;\n  box-sizing:         border-box;\n  color:              #dddddd;\n  font-size:          0.875rem;\n  line-height:        1.5;\n  margin-bottom:      1rem;\n  margin-top:         1rem;\n  outline:            1px solid ${_color_background_hex};\n  padding:            0;\n  vertical-align:     top;\n  width:              100%;\n}\n\ntextarea {\n  padding:            1rem;\n}\n\n#TOC li {\n  list-style:         none;\n}\n\n#TOC a:not(:hover) {\n  text-decoration:    none;\n}\n\ndiv.column {\n  display:            inline-block;\n  vertical-align:     top;\n  width:              50%;\n}\n\ndiv.hanging-indent {\n  margin-left:        1.5em;\n  text-indent:        -1.5em;\n}\n\nspan.smallcaps {\n  font-variant:       small-caps;\n}\n\nspan.underline {\n  text-decoration:    underline;\n}\n\nul.task-list {\n  list-style:         none;\n}\n\nul.task-list input[type=\"checkbox\"] {\n  -webkit-appearance: none;\n  -moz-appearance:    none;\n  background-color:   #2d2d2d;\n  border-radius:      3px;\n  font-size:          1.2rem;\n  padding:            0 0.3rem;\n}\n\nul.task-list input[type=\"checkbox\"]:before {\n  color:              transparent;\n  content:            \"\\0000A0\";\n}\n\nul.task-list input[type=\"checkbox\"]:checked:before {\n  color:              ${_color_primary_hex};\n  content:            \"x\";\n}\n\n/*\n * #93a5cc #ffcfaf #7f9f7f #dca3a3 #f0dfaf #dfdfbf #dcdccc #c3bf9f #c0bed1\n * #efef8f #b7bcd8 #cccc96 #7290b1\n * /\n\n/* Ace Editor & Syntax */\n\n.ace_editor {\n  /* border:             1rem solid ${_color_background_alt_hex}; */\n}\n\n.ace_gutter {\n  padding:            1rem 0;\n}\n\n.ace_gutter-cell {\n  padding:            0 0.5rem;\n}\n\n.ace_content {\n  padding:            1rem 0.5rem;\n}\n\n.ace_scroller.ace_scroll-left {\n  box-shadow:         initial !important;\n}\n\n.ace-twilight .ace_constant,\n.ace-twilight .ace_constant.ace_character,\n.ace-twilight .ace_constant.ace_character.ace_escape,\n.ace-twilight .ace_constant.ace_other,\n.ace-twilight .ace_heading,\n.ace-twilight .ace_markup.ace_heading,\n.ace-twilight .ace_support.ace_constant {\n  color:              #9191a1;\n}\n\n.ace-tm .ace_gutter,\n.ace-tm .ace_gutter-active-line,\n.ace-twilight .ace_gutter {\n  color:              #E2E2E2;\n  background-color:   ${_color_background_hex};\n}\n\n.ace-tm .ace_gutter-active-line {\n  filter:             brightness(1.25);\n}\n\n.ace-twilight .ace_indent-guide-active {\n  filter: invert(1) grayscale(100%) brightness(0.75);\n}\n\n.ace-twilight .ace_invisible {\n  color:              #333333;\n}\n\n.ace-twilight .ace_list,\n.ace-twilight .ace_markup.ace_list,\n.ace-twilight .ace_storage,\n.ace-twilight .ace_string.ace_strong {\n  color:              #cccc96;\n}\n\n.ace-twilight .ace_print-margin {\n  background:         none;\n}\n\n.ace_separator {\n  color:              #7290b1;\n}\n\n.ace-twilight .ace_keyword,\n.ace-twilight .ace_meta {\n  color:              #7290b1;\n}\n\n.ace-twilight .ace_string {\n  color:              ${_color_primary_hex};\n}\n\n.normal-mode .ace_cursor {\n  background-color:   rgba(255,255,0,0.5);\n}\n\n.normal-mode .ace_hidden-cursors .ace_cursor {\n  border:             1px solid yellow;\n}\n\n/* Pandoc Syntax */\n\npre > code.sourceCode {\n  position:           relative;\n  white-space:        pre;\n}\n\npre > code.sourceCode > span  {\n  display:            inline-block;\n  line-height:        1.25;\n}\n\npre > code.sourceCode > span:empty {\n  height:             1.2em;\n}\n\ncode.sourceCode > span {\n  color:              inherit;\n  text-decoration:    inherit;\n}\n\n@media screen {\n  div.sourceCode {\n    overflow:         auto;\n  }\n}\n\n@media print {\n  pre > code.sourceCode {\n    white-space:      pre-wrap;\n  }\n\n  pre > code.sourceCode > span {\n    padding-left:     5em;\n    text-indent:      -5em;\n  }\n}\n\npre.numberSource code {\n  counter-reset:      source-line 0;\n}\n\npre.numberSource code > span {\n  counter-increment:  source-line;\n  left:               -4em;\n  position:           relative;\n}\n\npre.numberSource code > span > a:first-child::before {\n  border:             none;\n  content:            counter(source-line);\n  display:            inline-block;\n  left:               -1em;\n  padding:            0 4px;\n  position:           relative;\n  text-align:         right;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select:   none;\n  -ms-user-select:    none;\n  user-select:        none;\n  vertical-align:     baseline;\n  width:              4em;\n}\n\npre.numberSource {\n  margin-left:        3em;\n  padding-left:       4px;\n}\n\ndiv.sourceCode {\n  color:              #cccccc;\n}\n\n@media screen {\n  pre > code.sourceCode > span > a:first-child::before {\n    text-decoration:  underline;\n  }\n}\n\ncode span.al { color: #ffcfaf;                          } /*     Alert      */\ncode span.an { color: #7f9f7f;      font-weight: bold;  } /*   Annotation   */\ncode span.at {                                          } /*   Attribute    */\ncode span.bn { color: #dca3a3;                          } /*     BaseN      */\ncode span.bu {                                          } /*    BuiltIn     */\ncode span.cf { color: #7290b1;                          } /*  ControlFlow   */\ncode span.ch { color: #8987a0;                          } /*      Char      */\ncode span.cn { color: #8987a0;      font-weight: bold;  } /*    Constant    */\ncode span.co { color: ${_color_muted_hex};              } /*    Comment     */\ncode span.cv { color: #7f9f7f;      font-weight: bold;  } /*   CommentVar   */\ncode span.do { color: ${_color_muted_hex};              } /* Documentation  */\ncode span.dt { color: #cccc96;                          } /*    DataType    */\ncode span.dv { color: #cccc96;                          } /*     DecVal     */\ncode span.er { color: #cccc96;                          } /*     Error      */\ncode span.ex {                                          } /*   Extension    */\ncode span.fl { color: #c0bed1;                          } /*     Float      */\ncode span.fu { color: #7290b1;                          } /*    Function    */\ncode span.im {                                          } /*     Import     */\ncode span.in { color: #7f9f7f;      font-weight: bold;  } /*  Information   */\ncode span.kw { color: #7290b1;                          } /*    Keyword     */\ncode span.op { color: #f0efd0;                          } /*   Operator     */\ncode span.ot { color: #cccc96;                          } /*     Other      */\ncode span.pp { color: #ffcfaf;      font-weight: bold;  } /*  Preprocessor  */\ncode span.sc { color: #8987a0;                          } /*  SpecialChar   */\ncode span.ss { color: ${_color_primary_hex};            } /* SpecialString  */\ncode span.st { color: ${_color_primary_hex};            } /*     String     */\ncode span.va {                                          } /*    Variable    */\ncode span.vs { color: ${_color_primary_hex};            } /* VerbatimString */\ncode span.wa { color: #93a5cc;      font-weight: bold;  } /*    Warning     */\n</style>\n\n<script>\n// hide broken images\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n  document.querySelectorAll('img').forEach(function(img) {\n    img.onerror = function() { this.style.display = 'none'; };\n  })\n});\n\n// let the document know when the mouse is being used\ndocument.addEventListener('mousedown', function() {\n  document.body.classList.add('using-mouse');\n});\n\n// re-enable focus styling when <tab> is pressed\ndocument.addEventListener('keydown', function(event) {\n  if (event.keyCode === 9) {\n    document.body.classList.remove('using-mouse');\n  }\n});\n</script>\n${_custom_css_url_element:-}\n${_custom_javascript_url_element:-}\n${_custom_css_element:-}\n${_custom_javascript_element:-}\n<meta name=\"referrer\" content=\"no-referrer\" />\n</head>\n<body>\nHEREDOC\n  }\n\n  local _from=\n  local _html_title=\n  local _input_file_path=\n  local _input_string=\n  local _only_body=0\n  local _pandoc_arguments=(\"--highlight-style=zenburn\")\n  local _source_extension=\"${NB_DEFAULT_EXTENSION:-md}\"\n  local _filter_bookmark_content=0\n  local _use_pandoc=0\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      \"\")         :                                           ;;\n      --body)     _only_body=1                                ;;\n      --bookmark) _filter_bookmark_content=1                  ;;\n      --from)     _from=\"${2:?}\" && _use_pandoc=1   && shift  ;;\n      --*pandoc)  _use_pandoc=1                               ;;\n      --source*)  _source_extension=\"${2:?}\"        && shift  ;;\n      --title)    _html_title=\"${2:?}\"              && shift  ;;\n      -*)         _pandoc_arguments+=(\"${1:-}\")               ;;\n      *)\n        if [[ -z \"${_input_file_path:-}\"  ]] &&\n           [[ -f \"${1:-}\"                 ]]\n        then\n          _input_file_path=\"${1:-}\"\n        elif [[ -z \"${_input_string:-}\"   ]]\n        then\n          _input_string=\"${1:-}\"\n        else\n          _pandoc_arguments+=(\"${1:-}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  local _prepared_file_path=\"${_input_file_path:-}\"\n\n  if ! _command_exists \"pandoc\"\n  then\n    _use_pandoc=0\n  fi\n\n  if [[ -n \"${_input_file_path:-}\"  ]]\n  then\n    _prepared_file_path=\"$(\n      _render_prepare_file \"${_input_file_path:-}\" \"${_use_pandoc:-0}\"\n    )\"\n  fi\n\n  {\n    # body\n    if ((_use_pandoc))\n    then\n      if [[ -n \"${_from:-}\"                   ]]\n      then\n        _pandoc_arguments+=(\"--from=${_from:-}\")\n      elif [[ -z \"${_prepared_file_path:-}\"   ]] ||\n           _contains \"${_prepared_file_path##*.}\" \"md\" \"markdown\"\n      then\n        _pandoc_arguments+=(\"--from=${NB_BROWSE_MARKDOWN_READER:-}\")\n      fi\n\n      if ((${NB_MATHJAX_ENABLED:-0}))\n      then\n        _pandoc_arguments+=(\"--mathjax=/--mathjax/tex-chtml.js\")\n      fi\n\n      {\n        if _piped_input\n        then\n          _pandoc                             \\\n            --standard-input                  \\\n            \"${_pandoc_arguments[@]:-}\"       \\\n            2>/dev/null\n        fi\n\n        if [[ -n \"${_prepared_file_path:-}\"   ]]\n        then\n          _pandoc                             \\\n            \"${_prepared_file_path:-}\"        \\\n            \"${_pandoc_arguments[@]:-}\"       \\\n            2>/dev/null\n        fi\n      } | {\n        if [[ -n \"${_input_string}\"           ]]\n        then\n          printf \"%s\\\\n\" \"${_input_string}\"   \\\n            | _pandoc                         \\\n                --standard-input              \\\n                \"${_pandoc_arguments[@]:-}\"   \\\n                2>/dev/null\n        fi\n\n        cat\n      }\n    else\n      {\n        if _piped_input\n        then\n          cat\n        fi\n\n        if [[ -n \"${_prepared_file_path:-}\"   ]]\n        then\n          if _file_is_text \"${_prepared_file_path}\"\n          then\n            cat \"${_prepared_file_path}\"\n          else\n            cat <<HEREDOC\nFile type not yet supported: ${_prepared_file_path##*.}\nHEREDOC\n          fi\n        fi\n      } | {\n        if [[ -n \"${_input_string}\"           ]]\n        then\n          printf \"%s\\\\n\" \"${_input_string}\"\n        fi\n\n        cat\n      }\n    fi\n  } | {\n    # head\n    if ! ((_only_body))\n    then\n      _render_print_head --title \"${_html_title}\"\n    fi\n\n    cat\n  } | {\n    # footer / tail\n    cat\n\n    if ! ((_only_body))\n    then\n      if ((${NB_ACE_ENABLED:-0}))\n      then\n        cat <<HEREDOC\n<script src=\"/--ace/ace.js\"></script>\n<script src=\"/--ace/ext-modelist.js\"></script>\n<script>\n  function initializeAceEditor() {\n    var aceModeList = ace.require(\"ace/ext/modelist\");\n\n    var textarea    = document.querySelector('textarea');\n\n    if (!textarea) return;\n\n    var editDiv = document.createElement('div');\n\n    editDiv.setAttribute(\n      'style',\n      'height:' + textarea.offsetHeight + 'px;' +\n      'width:'  + textarea.offsetWidth  + 'px;'\n    )\n\n    editDiv.style.height    = textarea.offsetHeight + 'px';\n    editDiv.style.width     = textarea.offsetWidth  + 'px';\n    editDiv.classList.add(textarea.classList[0]);\n\n    textarea.parentNode.insertBefore(editDiv, textarea);\n\n    textarea.style.display  = 'none';\n\n    var editor = ace.edit(editDiv);\n\n    editor.getSession().setValue(textarea.value);\n\n    var mode = aceModeList.getModeForPath('example.${_source_extension:-md}').mode;\n    editor.getSession().setMode(mode);\n\n    editor.setOptions({\n      autoScrollEditorIntoView: true,\n      copyWithEmptySelection:   true,\n      displayIndentGuides:      true,\n      fadeFoldWidgets:          true,\n      fixedWidthGutter:         true,\n      highlightActiveLine:      true,\n      navigateWithinSoftTabs:   true,\n      newLineMode:              'unix',\n      printMargin:              false,\n      relativeLineNumbers:      false,\n      scrollPastEnd:            0.5,\n      showFoldWidgets:          true,\n      showGutter:               true,\n      showInvisibles:           true,\n      showLineNumbers:          true,\n      tabSize:                  2,\n      useSoftTabs:              true,\n      wrap:                     false\n    });\n\n    if ('${_source_extension:-md}' === 'md') {\n      if ('${NB_ACE_MD_GUTTER:-1}' === '1') {\n        editor.setOptions({\n          wrap:                 true\n        });\n      } else {\n        editor.setOptions({\n          wrap:                 true,\n          showFoldWidgets:      false,\n          showLineNumbers:      false,\n          showGutter:           false\n        });\n      }\n    }\n\n    if ('${NB_ACE_RELATIVE_LINE_NUMBERS:-0}' === '1') {\n      editor.setOptions({\n        relativeLineNumbers:    true\n      })\n    }\n\n    if ('${NB_ACE_SOFT_TABS:-0}' === '0') {\n      editor.setOptions({\n        useSoftTabs:            false\n      })\n    }\n\n    var keyboard = '${NB_ACE_KEYBOARD:-ace}';\n\n    if (['emacs', 'sublime', 'vim', 'vscode'].indexOf(keyboard) !== -1) {\n      editor.setKeyboardHandler('ace/keyboard/' + keyboard);\n    }\n\n    editor.setTheme('ace/theme/${NB_ACE_THEME:-twilight}');\n\n    textarea.form.addEventListener('submit', function() {\n      textarea.value = editor.getSession().getValue();\n    });\n  }\n\n  (function() {\n    if (document.readyState !== 'loading') {\n      setTimeout(initializeAceEditor, 0);\n    } else {\n      document.addEventListener('DOMContentLoaded', initializeAceEditor);\n    }\n  }());\n</script>\nHEREDOC\n      fi\n\n      if ((${NB_MATHJAX_ENABLED:-0}))\n      then\n        cat <<HEREDOC\n<script id=\"MathJax-script\" async src=\"/--mathjax/tex-chtml.js\"></script>\nHEREDOC\n      fi\n\n      cat <<HEREDOC\n</body>\n</html>\nHEREDOC\n    fi\n  } | {\n    if ((_filter_bookmark_content))\n    then\n      local _in_content=0\n\n      {\n        local               __line=\n        while IFS= read -r  __line\n        do\n          if ! ((_in_content))  &&\n             [[ \"${__line:-}\" =~  (^\\<h2\\ id=\\\"content\\\"|^\\<h2\\ id=\\\"page-content\\\") ]]\n          then\n            _in_content=1\n          fi\n\n          if ((_in_content))\n          then\n            # add line marker\n            printf \"%s-content-%s%s\\\\n\" \"${_ME}\" \"${_ME}\" \"${__line:-}\"\n          else\n            printf \"%s\\\\n\" \"${__line:-}\"\n          fi\n        done\n      } | {\n        # strip bookmark <img> images\n        LC_ALL=C sed -E -e \"/^${_ME}-content-${_ME}/ s/<img[^>]*>//g\"\n      } | {\n        # remove empty <p> paragraph elements\n        LC_ALL=C sed -E -e \"/^${_ME}-content-${_ME}/ s/.*<p>[ ]*<\\/p>$//g\"\n      } | {\n        # remove line marker\n        LC_ALL=C sed -E -e \"s/^${_ME}-content-${_ME}//g\"\n      }\n    else\n      cat\n    fi\n  } | {\n    LC_ALL=C sed -e \"s/<a\\ /<a\\ rel=\\\"noopener\\ noreferrer\\\"\\ /g\"\n  } | {\n    # mark up checkboxes\n    local _checkbox_pattern_open=\"<span class=\\\"muted\\\">[<\\/span><span class=\\\"identifier\\\">\"\n    local _checkbox_pattern_close=\"<\\/span><span class=\\\"muted\\\">\\]<\\/span>\"\n\n    LC_ALL=C sed -E                                                                       \\\n-e \"1, /<textarea/ s/\\[x\\]/${_checkbox_pattern_open}x${_checkbox_pattern_close}/g\"        \\\n-e \"1, /<textarea/ s/\\[ \\]/${_checkbox_pattern_open}${_NBSP}${_checkbox_pattern_close}/g\" \\\n-e \"1, /<textarea/ s/\\[\\]/${_checkbox_pattern_open}${_NBSP}${_checkbox_pattern_close}/g\"\n  }\n}\n\n# _resolve_links()\n#\n# Usage:\n#   <input> | _resolve_links <notebook-path> [--browse] [--limit <limit>]\n#                            [--terminal] [--type <type>]\n#\n# Options:\n#   --browse  Link to web server, link #tags, and redirect outbound links.\n#\n# Description:\n#   Read standard input, resolve all [[wiki-style links]] and wrap each\n#   one in a link to the target item, then print the updated file contents.\n#   When the --browse option is specified, #tags are linked to the search\n#   page for each tag and outbound links are updated to redirect through the\n#   root level of the app to avoid leaking information via the referer header.\n#\n#   By default, links are created with file:// URLs to the item on the\n#   local filesystem. With --browse, links are created with internal web\n#   server URLs.\n_resolve_links() {\n  # Usage: <input> | _resolve_links_get_matches <pattern> [<path>]\n  _resolve_links_get_matches() {\n    local _arguments=()\n\n    case \"${1:-}\" in\n      '') return 1 ;;\n      *)\n        _arguments+=(\"-e\" \"${1:?}\")\n        [[ -n \"${2:-}\" ]] && _arguments+=(\"${2:-}\")\n        ;;\n    esac\n\n    if _command_exists \"rg\"\n    then\n      rg                      \\\n        --color=never         \\\n        --no-filename         \\\n        --only-matching       \\\n        --text                \\\n        \"${_arguments[@]:-}\"  \\\n        2>/dev/null || :\n    else\n      grep                    \\\n        --extended-regexp     \\\n        -h                    \\\n        --only-matching       \\\n        --text                \\\n        \"${_arguments[@]:-}\"  \\\n        2>/dev/null || :\n    fi\n  }\n\n  local _columns=\"${NB_BROWSE_COLUMNS:-70}\"\n  local _for_browsing=0\n  local _input_type=\"html\"\n  local _limit=\n  local _terminal=0\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      --browse)   _for_browsing=1                             ;;\n      --col*)     _columns=\"${2:?}\"                 && shift  ;;\n      --limit|-n|--num|--number|--per*)\n        _limit=\"${2:?}\"\n\n        shift\n        ;;\n      --page)     _option_value_is_present \"${2:-}\" && shift  ;;\n      --terminal) _terminal=1                                 ;;\n      --type)     _input_type=\"${2:?}\"              && shift  ;;\n      *)\n        if [[ -z \"${_notebook_path:-}\"  ]]\n        then\n          _notebook_path=\"${1:-}\"\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  [[ ! -d \"${_notebook_path:-}\" ]] && return 1\n\n  local _url_params_pattern=\n\n  if ((_terminal))\n  then\n    _url_params_pattern=\"?--columns=${_columns:-}\\&--limit=${_limit:-}\"\n  fi\n\n  local _notebook_name=\"${_notebook_path##*/}\"\n\n  if [[ ! \"${_notebook_path:-}\" =~ ^${NB_DIR} ]]\n  then\n    _notebook_name=\"local\"\n\n    local _encoded_local_notebook_path=\n    _encoded_local_notebook_path=\"$(\n      _get_uri --encode \"${_notebook_path:-}\"\n    )\"\n\n    case \"${_url_params_pattern:-}\" in\n      '') _url_params_pattern+=\"?--local=${_encoded_local_notebook_path:-}\"   ;;\n      *)  _url_params_pattern+=\"\\&--local=${_encoded_local_notebook_path:-}\"  ;;\n    esac\n  fi\n\n  local _input_temp_file_path=\n  _input_temp_file_path=\"$(_temp file \".${_input_type}\" --touch)\"\n\n  cat >> \"${_input_temp_file_path}\"\n\n  {\n    cat \"${_input_temp_file_path}\"\n  } | {\n    # link #hashtags to internal search URLs\n\n    if ! ((_for_browsing))\n    then\n      cat\n    else\n      local _replacement_url=\"\\/\\/${NB_SERVER_HOST}:${NB_SERVER_PORT}\\/${_notebook_name}:\"\n\n      case \"${_url_params_pattern:-}\" in\n        '') _replacement_url+=\"?--query=%23\\\\2\"                         ;;\n        *)  _replacement_url+=\"${_url_params_pattern}\\&--query=%23\\\\2\"  ;;\n      esac\n\n      local _pattern=\n\n      case \"${_input_type:-}\" in\n        html) _pattern=\"<a\\ href=\\\"${_replacement_url//' '/%20}\\\">\\#\\\\2<\\/a>\" ;;\n        org)  _pattern=\"[[${_replacement_url//' '/%20}][\\#\\\\2]]\"              ;;\n        *)    _pattern=\"\\#\\\\2\"                                                ;;\n      esac\n\n      if [[ \"${_input_type:-}\" == \"html\" ]] &&\n         grep -q \"<\\/body>\" \"${_input_temp_file_path}\"\n      then\n        LC_ALL=C sed -E \\\n          -e \"/<body>/,/<\\/body>/ s/(^|[>|\\ ])\\#([A-Za-z0-9_\\-]+)/\\1${_pattern}/g\"\n      else\n        LC_ALL=C sed -E -e \"s/(^|[>|\\ ])\\#([A-Za-z0-9_\\-]+)/\\1${_pattern}/g\"\n      fi\n    fi\n  } | {\n    # resolve and link [[wiki-style links]]\n    # TODO: HTML uses `sed` streaming replacement. The current Org\n    # implementation uses querying to ensure link is not an\n    # outbound URL, which requires a separate matching operation. The\n    # match replacement code supports both HTML and Org, with HTML unused.\n\n    if ((_for_browsing)) && [[ \"${_input_type:-}\" == \"html\" ]]\n    then\n      # patterns for wrapping [[wiki-style links]] in HTML links\n      local _host_port_pattern=\"${NB_SERVER_HOST}:${NB_SERVER_PORT}\"\n      local _link_match_pattern=\"\\[\\[([^#|][^]|]*)\\]\\]\"\n      local _url_pattern=\"\\/\\/${_host_port_pattern}\\/\\1${_url_params_pattern:-}\"\n      local _replacement_pattern=\"<a\\ href=\\\"${_url_pattern}\\\">[[\\1]]<\\/a>\"\n\n      local _labeled_link_match_pattern=\"\\[\\[([^#][^]|]+)\\|([^]]+)\\]\\]\"\n      local _labeled_url_pattern=\"\\/\\/${_host_port_pattern}\\/\\1${_url_params_pattern:-}\"\n      local _labeled_replacement_pattern=\"<a\\ href=\\\"${_labeled_url_pattern}\\\">[[\\2]]<\\/a>\"\n\n      # patterns for adding notebook prefixes to just-linked URLs\n      local _notebookless_pattern=\"${_host_port_pattern}\\/([^:?\\\"-]+[\\?\\\"])\"\n      local _notebookless_replacement_pattern=\"${_host_port_pattern}\\/${_notebook_name}:\\1\"\n\n      local _linkable=1\n\n      {\n        local               __line=\n        while IFS= read -r  __line\n        do\n          if [[ \"${__line:-}\" =~ (\\<nav|\\<code)     ]]\n          then\n            _linkable=0\n          fi\n\n          if ((_linkable))\n          then\n            printf \"%s-linkable-%s%s\\\\n\" \"${_ME}\" \"${_ME}\" \"${__line:-}\"\n          else\n            printf \"%s\\\\n\" \"${__line:-}\"\n          fi\n\n          if [[ \"${__line:-}\" =~ (\\<\\/nav|\\<\\/code) ]]\n          then\n            _linkable=1\n          fi\n        done\n      } | {\n        # wrap [[wiki-style links]] in HTML links and add missing notebooks\n        sed -E                                                                                    \\\n-e \"/^${_ME}-linkable-${_ME}/ s/${_link_match_pattern}/${_replacement_pattern}/g\"                 \\\n-e \"/^${_ME}-linkable-${_ME}/ s/${_labeled_link_match_pattern}/${_labeled_replacement_pattern}/g\" \\\n-e \"/^${_ME}-linkable-${_ME}/ s/${_notebookless_pattern}/${_notebookless_replacement_pattern}/g\"\n      } | {\n        LC_ALL=C sed -E -e \"s/^${_ME}-linkable-${_ME}//g\"\n      }\n    else\n      local __match=\n      for   __match in  $(_resolve_links_get_matches  \\\n                          \"\\[\\[[^\\[]+\\]\\]\"            \\\n                          \"${_input_temp_file_path}\")\n      do\n        local _link=\n        local _link_label=\n\n        [[ -z \"${__match:-}\" ]] && continue\n\n        local _selector=\"${__match#[[}\"\n\n        if [[ \"${__match}\" =~ \\| ]]\n        then\n          _selector=\"${_selector%%|*}\"\n\n          _link_label=\"${__match##*|}\"\n          _link_label=\"${_link_label%]]}\"\n        else\n          _selector=\"${_selector%]]}\"\n          _link_label=\"${_selector}\"\n        fi\n\n        if ((_for_browsing))\n        then\n          if [[ -z \"${_selector:-}\" ]]\n          then\n            _link=\"${__match}\"\n          else\n            local _link_notebook_name=\n            local _query_selector=\n\n            if [[ \"${_selector:-}\" =~ : ]] && [[ ! \"${_selector:-}\" =~ :// ]]\n            then\n              _link_notebook_name=\"${_selector%%:*}\"\n              _query_selector=\"${_selector}\"\n            else\n              _link_notebook_name=\"${_notebook_name}\"\n              _query_selector=\"${_link_notebook_name}:${_selector}\"\n            fi\n\n            local _selector_path=\n            _selector_path=\"$(_selector_resolve_path \"${_query_selector:-}\")\"\n\n            local _id_selector=\n            _id_selector=\"$(\n              _get_id_selector \"${_link_notebook_name}:${_selector_path}\" 2>/dev/null || :\n            )\"\n\n            if [[ -n \"${_selector#*:}\" ]] && [[ -z \"${_selector_path:-}\" ]]\n            then\n              _link=\"[[${_selector:-}]]\"\n            else\n              local _target_url=\"//${NB_SERVER_HOST}:${NB_SERVER_PORT}/${_id_selector}${_url_params_pattern:-}\"\n\n              case \"${_input_type:-}\" in\n                html)\n                  _link=\"<a href=\\\"${_target_url//' '/%20}\\\">[[${_link_label:-}]]</a>\"\n                  ;;\n                org)\n                  _link=\"[[${_target_url:-}][[[${_link_label:-}]]]]\"\n                  ;;\n                *)\n                  _link=\"[[${_selector:-}]]\"\n                  ;;\n              esac\n            fi\n          fi\n        else\n          local _link_path=\n          _link_path=\"$(_show \"${_selector}\" --path 2>/dev/null || :)\"\n\n          if [[ -z \"${_link_path:-}\" ]]\n          then\n            _link=\"[[${_selector}]]\"\n          else\n            case \"${_input_type:-}\" in\n              html)\n                _link=\"<a href=\\\"file://${_link_path//' '/%20}\\\">[[${_link_label:-}]]</a>\"\n                ;;\n              org)\n                _link=\"[[file://${_link_path//' '/%20}][[[${_link_label:-}]]]]\"\n                ;;\n              *)\n                _link=\"[[${_selector:-}]]\"\n                ;;\n            esac\n          fi\n        fi\n\n        local _escaped_match=\"${__match//${_SLASH}/\\\\/}\"\n        _escaped_match=\"${_escaped_match//\\[/\\\\[}\"\n        _escaped_match=\"${_escaped_match//\\]/\\\\]}\"\n        _escaped_match=\"${_escaped_match//\\(/\\(}\"\n        _escaped_match=\"${_escaped_match//\\)/\\)}\"\n\n        local _escaped_replacement=\"${_link//${_SLASH}/\\\\/}\"\n        _escaped_replacement=\"${_escaped_replacement//\\[/\\\\[}\"\n        _escaped_replacement=\"${_escaped_replacement//\\]/\\\\]}\"\n        _escaped_replacement=\"${_escaped_replacement//\\(/\\(}\"\n        _escaped_replacement=\"${_escaped_replacement//\\)/\\)}\"\n\n        if [[ -n \"${_escaped_match:-}\"        ]] &&\n           [[ -n \"${_escaped_replacement:-}\"  ]] &&\n           ! _contains \"${_escaped_match}\" \"${_seen_matches[@]:-}\"\n        then\n          _sed_arguments+=(\"-e\" \"s/${_escaped_match}/${_escaped_replacement}/g\")\n          _seen_matches+=(\"${_escaped_match}\")\n        fi\n      done\n\n      LC_ALL=C sed \"${_sed_arguments[@]:-}\"\n    fi\n  } | {\n    # rewrite outbound links to use an exit page\n\n    if ! ((_for_browsing))\n    then\n      cat\n    else\n      local _outbound_url_pattern=\n\n      case \"${_input_type:-}\" in\n        org)  _outbound_url_pattern=\"\\[\\[https?://[^]]+\"      ;;\n        html) _outbound_url_pattern=\"href=\\\"https?://[^\\\"]+\"  ;;\n      esac\n\n      local _sed_arguments=()\n      local _seen_matches=()\n\n      local __match=\n      for   __match in  $(_resolve_links_get_matches    \\\n                          \"${_outbound_url_pattern:-}\"  \\\n                          \"${_input_temp_file_path}\")\n      do\n        [[ -z \"${__match:-}\" ]] && continue\n\n        if [[ \"${__match}\" =~ https?://${NB_SERVER_HOST} ]]\n        then\n          continue\n        fi\n\n        case \"${_input_type:-}\" in\n          org)  local _target_url=\"${__match#\\[\\[}\"     ;;\n          html) local _target_url=\"${__match#href=\\\"}\"  ;;\n        esac\n\n        # NOTE: skip _get_uri() for performance\n        # use ${_SLASH} for macOS bash support\n\n        local _encoding=\"${_target_url//'%'/%25}\"\n        _encoding=\"${_encoding//' '/%20}\"\n        _encoding=\"${_encoding//'\"'/%22}\"\n        _encoding=\"${_encoding//'#'/%23}\"\n        _encoding=\"${_encoding//'$'/%24}\"\n        _encoding=\"${_encoding//'&'/%26}\"\n        _encoding=\"${_encoding//'+'/%2B}\"\n        _encoding=\"${_encoding//','/%2C}\"\n        _encoding=\"${_encoding//${_SLASH}/%2F}\"\n        _encoding=\"${_encoding//':'/%3A}\"\n        _encoding=\"${_encoding//';'/%3B}\"\n        _encoding=\"${_encoding//'='/%3D}\"\n        _encoding=\"${_encoding//'?'/%3F}\"\n        _encoding=\"${_encoding//'@'/%40}\"\n        _encoding=\"${_encoding//'['/%5B}\"\n        local _encoded_url=\"${_encoding//']'/%5D}\"\n\n        local _replacement_url=\"//${NB_SERVER_HOST}:${NB_SERVER_PORT}?url=${_encoded_url}\"\n        local _replacement=\"${_replacement_url}\"\n\n        case \"${_input_type:-}\" in\n          org)\n            if [[ \"${__match:-}\" =~ ^\\[\\[ ]]\n            then\n              _replacement=\"[[${_replacement}\"\n            fi\n            ;;\n          html)\n            _replacement=\"href=\\\"${_replacement}\"\n            ;;\n        esac\n\n        local _escaped_match=\"${__match//${_SLASH}/\\\\/}\"\n        _escaped_match=\"${_escaped_match//\\[/\\\\[}\"\n        _escaped_match=\"${_escaped_match//\\]/\\\\]}\"\n        _escaped_match=\"${_escaped_match//\\(/\\(}\"\n        _escaped_match=\"${_escaped_match//\\)/\\)}\"\n\n        local _escaped_replacement=\"${_replacement//${_SLASH}/\\\\/}\"\n        _escaped_replacement=\"${_escaped_replacement//\\[/\\\\[}\"\n        _escaped_replacement=\"${_escaped_replacement//\\]/\\\\]}\"\n        _escaped_replacement=\"${_escaped_replacement//\\(/\\(}\"\n        _escaped_replacement=\"${_escaped_replacement//\\)/\\)}\"\n\n        if [[ -n \"${_escaped_match:-}\"        ]] &&\n           [[ -n \"${_escaped_replacement:-}\"  ]] &&\n           ! _contains \"${_escaped_match}\" \"${_seen_matches[@]:-}\"\n        then\n          _sed_arguments+=(\"-e\" \"s/${_escaped_match}/${_escaped_replacement}/g\")\n          _seen_matches+=(\"${_escaped_match}\")\n        fi\n      done\n\n      LC_ALL=C sed \"${_sed_arguments[@]:-}\"\n    fi\n  }\n}\n\n# _web_browser()\n#\n# Usage:\n#   _web_browser [[<url>] [--dump] | --check]\n#\n# Options:\n#   --check   Return with status 0 if a browser is available, or 1 if not.\n#   --dump    Print the page to standard output.\n#\n# Description:\n#   Interact with the preferred or available terminal web browser. When called\n#   with no input or arguments, or with only the --check option, test if a\n#   terminal web browser is available. With <url> or standard input, view in\n#   the preferred or available browser.\n#\n# Exit / Error / Return Status:\n#   0 (success, true)  If a terminal browser is available.\n#   1 (error,  false)  if not.\n_web_browser() {\n  local _arguments=()\n  local _check=0\n  local _check_gui=0\n  local _dump=0\n  local _url=\n  local _web_browser_command=()\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      --check)\n        _check=1\n        ;;\n      --dump|--print)\n        _dump=1\n        ;;\n      --gui)\n        _check_gui=1\n        ;;\n      *)\n        [[ -z \"${_url:-}\" ]] && _url=\"${__arg}\"\n        ;;\n    esac\n  done\n\n  if [[ -n \"${NB_BROWSER:-}\" ]]\n  then\n    _web_browser_command=(\"${NB_BROWSER}\")\n  else\n    if _command_exists \"w3m\"\n    then\n      _web_browser_command+=(\"w3m\")\n    elif _command_exists \"links\"\n    then\n      _web_browser_command+=(\"links\")\n    fi\n  fi\n\n  # checks\n\n  if [[ -z \"${_web_browser_command[*]:-}\" ]]\n  then\n    _warn cat <<HEREDOC\nWeb browser not found. Try \\`w3m\\`: $(_color_primary \"http://w3m.sourceforge.net\")\nHEREDOC\n    exit 1\n  fi\n\n  if ((_check_gui))\n  then\n    shopt -s nocasematch\n\n    if [[ \"${_web_browser_command[*]}\" =~ (firefox|chrom|brave|edg) ]]\n    then\n      return 0\n    else\n      return 1\n    fi\n\n    shopt -u nocasematch\n  fi\n\n  if ((_check))\n  then\n    if ((_dump)) && [[ -n \"${_web_browser_command[*]:-}\" ]]\n    then\n      printf \"%s\\\\n\" \"${_web_browser_command[*]:-}\"\n    fi\n\n    return 0\n  fi\n\n  # behaviors\n\n  if ! _piped_input && [[ -z \"${_url:-}\"        ]]\n  then\n    return 0\n  else\n    if [[ \"${_web_browser_command[*]:-}\" =~ w3m ]]\n    then\n      _web_browser_command+=(\"-I\" \"UTF-8\")\n      _web_browser_command+=(\"-O\" \"UTF-8\")\n\n      if [[ -n \"${_url:-}\" ]]\n      then\n        _web_browser_command+=(\"${_url:-}\")\n      fi\n\n      if ((_dump))\n      then\n        \"${_web_browser_command[@]:-}\" -T text/html -dump\n      else\n        \"${_web_browser_command[@]:-}\" -T text/html 2>/dev/null\n      fi\n\n      return 0\n    elif [[ \"${_web_browser_command[*]:-}\" =~ lynx    ]]\n    then\n      ((_dump)) && _arguments+=(\"-dump\")\n\n      if [[ -n \"${_url:-}\" ]]\n      then\n        _arguments+=(\"${_url:-}\")\n      else\n        _arguments+=(\"-stdin\")\n      fi\n\n      _arguments+=(\"-nomargins\")\n      _arguments+=(\"-noreferer\")\n      _arguments+=(\"-notitle\")\n\n      \"${_web_browser_command[@]:-}\" \"${_arguments[@]:-}\"\n\n      return 0\n    elif [[ \"${_web_browser_command[*]:-}\" =~ links   ]]\n    then\n      ((_dump)) && _arguments+=(\"-dump\")\n\n      if [[ ! \"${_web_browser_command[*]}\" =~ elinks  ]]\n      then # links\n        _arguments+=(\"-html-assume-codepage\" \"Unicode UTF-8\")\n      fi\n\n      if [[ -n \"${_url:-}\" ]]\n      then\n        _arguments+=(\"${_url:-}\")\n      fi\n\n      \"${_web_browser_command[@]:-}\" \"${_arguments[@]:-}\"\n    else\n      if [[ -n \"${_url:-}\" ]]\n      then\n        _web_browser_command+=(\"${_url:-}\")\n      fi\n\n      \"${_web_browser_command[@]}\"\n\n      return 0\n    fi\n  fi\n}\n\n###############################################################################\n# Subcommands: Group 2                                     Subcommands: Group 2\n# --------------------                                     --------------------\n###############################################################################\n# --------------------------------------------------------------------------- #\n\n# add ##################################################################### add\n\n_describe_add() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} add [<notebook>:][<folder-path>/][<filename>] [<content>]\n         [-b | --browse] [-c <content> | --content <content>] [--edit]\n         [-e | --encrypt] [-f <filename> | --filename <filename>]\n         [--folder <folder-path>] [--tags <tag1>,<tag2>...]\n         [-t <title> | --title <title>] [--type <type>]\n  ${_ME} add bookmark [<bookmark-options>...]\n  ${_ME} add folder [<name>]\n  ${_ME} add todo [<todo-options>...]\n\n$(_color_primary \"Options\"):\n  -b, --browse                Add using a terminal or GUI web browser.\n  -c, --content <content>     The content for the new note.\n  --edit                      Open the note in the editor before saving when\n                              content is piped or passed as an argument.\n  -e, --encrypt               Encrypt the note with a password.\n  -f, --filename <filename>   The filename for the new note.\n  --folder <folder-path>      Add within the folder located at <folder-path>.\n  --tags <tag1>,<tag2>...     A comma-separated list of tags.\n  -t, --title <title>         The title for a new note. If \\`--title\\` is\n                              present, the filename is derived from the\n                              title, unless \\`--filename\\` is specified.\n  --type <type>               The file type for the new note, as a file\n                              extension.\n\n$(_color_primary \"Description\"):\n  Create a new note or folder.\n\n  If no arguments are passed, a new blank note file is opened with \\`\\$EDITOR\\`,\n  currently set to: ${NB_EDITOR}\n\n  If a non-option argument is passed, \\`${_ME}\\` will treat it as a <filename≥\n  if a file extension is found. If no file extension is found,  \\`${_ME}\\` will\n  treat the string as <content> and will create a new note without opening the\n  editor. \\`${_ME} add\\` can also create a new note with piped content.\n\n  \\`${_ME}\\` creates Markdown files by default. To create a note with a\n  different file type, use the extension in the filename or use the \\`--type\\`\n  option. To change the default file type, use \\`${_ME} set default_extension\\`.\n\n  When the \\`-e\\` / \\`--encrypt\\` option is used, \\`${_ME}\\` will encrypt the\n  note with AES-256 using OpenSSL by default, or GPG, if configured in\n  \\`${_ME} set encryption_tool\\`.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#adding\n\n$(_color_primary \"See Also\"):\n  ${_ME} help bookmark\n  ${_ME} help browse\n  ${_ME} help delete\n  ${_ME} help edit\n  ${_ME} help folders\n  ${_ME} help import\n  ${_ME} help show\n  ${_ME} help todo\n\n$(_color_primary \"Examples\"):\n  ${_ME} add\n  ${_ME} add example.md\n  ${_ME} add \"Note content.\"\n  ${_ME} add example.md --title \"Example Title\" --content \"Example content.\"\n  echo \"Note content.\" | ${_ME} add\n  ${_ME} add -t \"Secret Document\" --encrypt\n  ${_ME} add example/document.md\n  ${_ME} add folder sample/demo\n  ${_ME} example:add\n  ${_ME} example:add -t \"Title\"\n  ${_ME} a\n  ${_ME} a \"Note content.\"\n  ${_ME} example:a\n  ${_ME} example:a -t \"Title\"\n\n$(_color_primary \"Aliases\"):\n  ${_ME} create\n  ${_ME} new\n\n$(_color_primary \"Shortcut Aliases\"):\n  ${_ME} a\n  ${_ME} +\nHEREDOC\n}\n_add() {\n  local _add_type=\n  local _arguments=()\n  local _browse=0\n  local _defer_arguments=()\n  local _edit_before_commit=0\n  local _encrypt=0\n  local _file_type=\"${NB_DEFAULT_EXTENSION}\"\n  local _folder_prompt=0\n  local _option_content=\n  local _option_folder_relative_path=\n  local _option_relative_path=\n  local _password=\n  local _skip_standard_input=0\n  local _tag_list=\n  local _title=\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -b|-br|--browse)\n        _browse=1\n        ;;\n      -c|--content)\n        if [[ -z \"${2:-}\"                   ]]\n        then\n          _exit_1 printf                          \\\n            \"%s requires a valid argument.\\\\n\"    \\\n            \"$(_color_primary \"${1:-}\")\"\n        else\n          if [[ -n \"${_option_content:-}\"   ]]\n          then\n            _option_content+=\"${_NEWLINE}${_NEWLINE}\"\n          fi\n\n          _option_content+=\"$(printf \"%s\\\\n\" \"${2:-}\")\"\n          _defer_arguments+=(\"${1}\" \"${2:-}\")\n\n          shift\n        fi\n        ;;\n      --edit)\n        _edit_before_commit=1\n        ;;\n      -e|--encrypt*)\n        if [[ -z \"${NB_ENCRYPTION_TOOL:-}\"  ]]  ||\n           ! _command_exists \"${NB_ENCRYPTION_TOOL:-}\"\n        then\n          _exit_1 printf                        \\\n            \"Encryption tool not found: %s\\\\n\"  \\\n            \"$(_color_primary \"${NB_ENCRYPTION_TOOL:-}\")\"\n        else\n          _encrypt=1\n        fi\n        ;;\n      -f|--file*|--*path|--target*)\n        _option_relative_path=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        _defer_arguments+=(\"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      --folder)\n        _option_folder_relative_path=\"$(\n          _option_get_value \"${1}\" \"${2:-}\" | sed -e 's/\\/$//'\n        )\"\n        _defer_arguments+=(\"${1}\" \"${_option_folder_relative_path:-}\")\n\n        shift\n        ;;\n      --folder*prompt)\n        _folder_prompt=1\n        ;;\n      --no*color)\n        _COLOR_ENABLED=0\n        ;;\n      --password)\n        _password=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --skip*standard*input)\n        _skip_standard_input=1\n        ;;\n      --tag*)\n        [[ -n \"${_tag_list:-}\" ]] && _tag_list+=\" \"\n        _tag_list+=\"$(_option_get_tags \"${1}\" \"${2:-}\")\"\n        _defer_arguments+=(\"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      -t|--title|--name)\n        # TODO: Detect tag list for dynamic -t for --titles and --tags?\n        _title=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        _defer_arguments+=(\"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      --type)\n        _file_type=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        _defer_arguments+=(\"${1}\" \"${2:-}\")\n\n        shift\n        ;;\n      bookmark)\n        _add_type=\"bookmark\"\n        ;;\n      folder|folders|directory)\n        _file_type=\"folder\"\n        _defer_arguments+=(\"${1}\")\n        ;;\n      todo)\n        _add_type=\"todo\"\n        ;;\n      *)\n        _arguments+=(\"${1:-}\")\n        ;;\n    esac\n\n    shift\n  done\n\n  case \"${_add_type:-}\" in\n    bookmark)\n      _defer \"_bookmark\"    \"${_arguments[@]:-}\" \"${_defer_arguments[@]:-}\"\n\n      return 0\n      ;;\n    todo)\n      _defer \"_todo\" \"add\"  \"${_arguments[@]:-}\" \"${_defer_arguments[@]:-}\"\n\n      return 0\n      ;;\n  esac\n\n  if ((_browse))\n  then\n    _defer \"_browse\" \"add\"  \"${_arguments[@]:-}\" \"${_defer_arguments[@]:-}\"\n\n    return 0\n  fi\n\n  local _common_tlds_excluding_text_file_extensions=(\n    app agency au com company biz blog buzz ca cloud club de design dev cf ch\n    cn edu email es fr fun ga gov guru icu info it jp link life live ly media\n    mil net new nl no online nyc page rocks ru se shop site solutions space\n    store tech top tk tv uk us vip wang website work xyz\n  )\n\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  local _selector_content=\n  local _selector_filename=\n  local _selector_folder_relative_path=\n\n  local i=\n  for ((i=0; i < ${#_arguments[@]}; i++))\n  do\n    local _argument_content=\n\n    if [[ -n \"${_arguments[i]:-}\"         ]]\n    then # argument is not blank\n      if [[ -z \"${_selector_content:-}\"   ]]  &&\n         [[ -n \"${_selector_filename:-}\"  ]]\n      then # argument #2 and the first argument was a selector with filename\n        _argument_content+=\"${_arguments[i]:-}\"\n      else\n        local _content_or_filename_extension=\n        local _selector_notebook_path=\n        local _selector_relative_path=\"${_arguments[i]}\"\n\n        if [[ \"${_arguments[i]:-}\" =~ \\.[A-Za-z0-9]+$ ]]\n        then # argument appears to be a file extension\n          _content_or_filename_extension=\"${_arguments[i]##*\\.}\"\n        fi\n\n        if _string_is_url    \"${_arguments[i]:-}\"           ||\n           _string_is_email  \"${_arguments[i]:-}\"           ||\n           _contains \"${_content_or_filename_extension:-}\"  \\\n                     \"${_common_tlds_excluding_text_file_extensions[@]}\"\n        then # argument contains content\n          _argument_content+=\"${_arguments[i]:-} \"\n        else\n          if [[ \"${_arguments[i]}\" =~ (:|^/)                ]]\n          then\n            if [[ -n \"${_selector_filename:-}\"              ]] ||\n               [[ -n \"${_selector_folder_relative_path:-}\"  ]]\n            then\n              _argument_content+=\"${_arguments[i]:-} \"\n            else\n              _selector_notebook_path=\"$(\n                _notebook show \"${_arguments[i]%%:*}\" --path 2>/dev/null || :\n              )\"\n\n              if [[ -n \"${_selector_notebook_path}\"         ]]\n              then # argument is a selector with a valid notebook\n                _notebook_path=\"${_selector_notebook_path}\"\n\n                if [[ \"${_arguments[i]:-}\" =~ ^/            ]]\n                then\n                  _selector_relative_path=\"${_arguments[i]#${_notebook_path}/}\"\n                else\n                  _selector_relative_path=\"${_arguments[i]#*:}\"\n                fi\n              else # argument is not a selector\n                _argument_content+=\"${_arguments[i]:-} \"\n              fi\n            fi\n          fi\n\n          if [[ -z \"${_argument_content:-}\"                 ]]\n          then # still a candidate selector\n            if [[ \"${_selector_relative_path:-}\" =~ /       ]] &&\n               [[ -z \"${_selector_folder_relative_path:-}\"  ]]\n            then # argument appears to contain a relative path\n              _selector_folder_relative_path=\"${_selector_relative_path%\\/*}\"\n            fi\n\n            if [[ -z \"${_option_relative_path}\"                     ]]  &&\n               [[ -z \"${_selector_filename}\"                        ]]  &&\n               {\n                 _contains \"${_file_type:-}\" \"folder\" \"directory\"       ||\n                 [[ \"${_arguments[i]:-}\" =~ (\\.[A-Za-z0-9]+$|/|:)   ]]\n               }\n            then\n              _selector_filename=\"${_selector_relative_path##*\\/}\"\n            elif [[ -n \"${_selector_content:-}\"             ]]\n            then\n              _argument_content+=\"${_arguments[i]:-} \"\n            elif [[ !   \"${_selector_relative_path}\" =~ /$  ]] &&\n                 [[ -z  \"${_selector_notebook_path:-}\"      ]]\n            then\n              _selector_folder_relative_path=\"\"\n              _argument_content+=\"${_arguments[i]:-} \"\n            fi\n          fi\n        fi\n      fi\n    fi\n\n    if [[ -n \"${_argument_content:-}\" ]]\n    then\n      _selector_content+=\"${_argument_content}\"\n    fi\n  done\n\n  if [[ -n \"${_selector_content:-}\"   ]]\n  then\n    _selector_content=\"${_selector_content%\\ }\"\n  fi\n\n  # Filename\n  # --------\n\n  local _target_filename=\n\n  if [[ -n \"${_option_relative_path:-}\"   ]]\n  then\n    _target_filename=\"${_option_relative_path##*\\/}\"\n  elif [[ -n \"${_selector_filename:-}\"    ]]\n  then\n    _target_filename=\"${_selector_filename:-}\"\n  fi\n\n  if [[ -z \"${_target_filename:-}\"        ]] &&\n     [[ -z \"${_option_relative_path:-}\"   ]]\n  then\n    if [[ -n \"${_title:-}\" ]] &&\n       ! _contains \"${_file_type:-}\" \"folder\" \"directory\"\n    then\n      _target_filename=\"$(_get_sanitized_filename \"${_title}\")\"\n    fi\n\n    if [[ -n \"${_file_type}\"              ]] &&\n       [[ \"${_file_type:-}\" != \"folder\"   ]]\n    then\n      # NOTE: ${_target_filename} can be blank, resulting in '.type'\n      _target_filename=\"${_target_filename:-}.${_file_type}\"\n    elif [[ \"${_file_type:-}\" == \"folder\" ]] &&\n         [[ -z \"${_target_filename:-}\"    ]]\n    then\n      _target_filename=\"folder\"\n    fi\n  fi\n\n  # Folder\n  # ------\n\n  local _target_folder_relative_path=\n\n  if [[ \"${_option_relative_path}\" =~ /           ]]\n  then\n    _target_folder_relative_path=\"${_option_relative_path%%\\/*}\"\n  fi\n\n  if [[ -n \"${_option_folder_relative_path:-}\"    ]]\n  then\n    _target_folder_relative_path=\"${_option_folder_relative_path}/${_target_folder_relative_path:-}\"\n  fi\n\n  if [[ -n \"${_selector_folder_relative_path:-}\"  ]]\n  then\n    _resolved_selector_folder_relative_path=\"$(\n      _selector_resolve_folders               \\\n        \"${_selector_folder_relative_path}/\"  \\\n        --build || :\n    )\"\n\n    if [[ -n \"${_resolved_selector_folder_relative_path:-}\" ]]\n    then\n      _target_folder_relative_path=\"${_resolved_selector_folder_relative_path:-}/${_target_folder_relative_path}\"\n    fi\n  fi\n\n  _target_folder_relative_path=\"${_target_folder_relative_path%/}\"\n\n  # Target\n  # ------\n\n  local _target_relative_path=\"${_target_folder_relative_path:-}/${_target_filename:-}\"\n  _target_relative_path=\"${_target_relative_path#/}\"\n\n  local _target_unique_relative_path=\n\n  if [[     \"${_target_relative_path}\" =~ ^\\..* ]] &&\n     [[ -n  \"${_option_relative_path:-}\"        ]]\n  then\n    local _target_unique_path=\n    _target_unique_path=\"$(\n      _get_unique_path \"${_notebook_path}/${_target_relative_path}\"\n    )\"\n\n    _target_unique_relative_path=\"${_target_unique_path#\"${_notebook_path}\"/}\"\n  else\n    _target_unique_relative_path=\"$(\n      _notebooks current --filename \"${_target_relative_path}\"\n    )\"\n  fi\n\n  local _target_basename=\n  _target_basename=\"$(basename \"${_target_unique_relative_path}\")\"\n\n  local _target_path=\"${_notebook_path}/${_target_unique_relative_path}\"\n\n  if _contains \"${_file_type:-}\" \"folder\" \"directory\"\n  then\n    if ! mkdir -p \"${_target_path:?}\" 2>/dev/null\n    then\n      _exit_1 printf \"Unable to create folder: %s\\\\n\"       \\\n        \"$(_color_primary \"${_target_unique_relative_path}\")\"\n    fi\n\n    touch \"${_target_path:?}/.index\"\n\n    if [[ -n \"${_target_folder_relative_path:-}\" ]]\n    then\n      _index reconcile                                      \\\n        \"${_notebook_path}/${_target_folder_relative_path}\" \\\n        --ancestors\n    fi\n  else\n    if ((_encrypt))\n    then\n      if [[ -z \"${_password}\"                   ]] &&\n         [[ \"${NB_ENCRYPTION_TOOL:-}\" != \"age\"  ]]\n      then\n        # request password without displaying it\n        printf \"%s: \" \"$(_color_primary \"Password\")\"\n\n        local _password=\n        IFS='' read -r -e -d $'\\n' -s _password </dev/tty\n\n        if [[ -z \"${_password:-}\"               ]]\n        then\n          _exit_1 printf \"Password required.\\\\n\"\n        fi\n\n        local _password_confirmation=\n\n        # request password without displaying it\n        printf \"%s: \" \"$(_color_primary \"Confirm Password\")\"\n\n        local _password_confirmation=\n        IFS='' read -r -e -d $'\\n' -s _password_confirmation </dev/tty\n\n        if [[ \"${_password}\" != \"${_password_confirmation}\" ]]\n        then\n          _exit_1 printf \"Password mismatch.\\\\n\"\n        fi\n      fi\n\n      if [[ -n \"${_target_folder_relative_path:-}\"  ]]\n      then\n        if ! mkdir -p \"$(_temp directory)/${_target_folder_relative_path}\" 2>/dev/null\n        then\n          _exit_1 printf \"Unable to create temporary folder: %s\\\\n\" \\\n            \"$(_color_primary \"$(_temp directory)/${_target_folder_relative_path}\")\"\n        fi\n      fi\n\n      _target_path=\"$(_temp directory)/${_target_unique_relative_path}\"\n    fi\n\n    if [[ -n \"${_target_folder_relative_path:-}\"                      ]] &&\n       [[ ! -d \"${_notebook_path}/${_target_folder_relative_path:-}\"  ]]\n    then\n      if [[ -e \"${_notebook_path}/${_target_folder_relative_path:-}\"  ]]\n      then\n        _exit_1 printf \"File exists at: %s\\\\n\"  \\\n          \"$(_color_primary \"${_target_folder_relative_path:-}\")\"\n      else\n        if ((_folder_prompt))\n        then\n          local _target_folder_selector=\"${_target_folder_relative_path:-}/\"\n\n          if _notebooks current --selected\n          then\n            _target_folder_selector=\"$(_notebooks current --name):${_target_folder_selector}\"\n          fi\n\n          printf \"Creating new folder: %s\\\\n\"   \\\n            \"$(_color_primary \"${_target_folder_selector}\")\"\n\n          while true\n          do\n            local __yn=\n            IFS='' read -r -e -d $'\\n' -p       \\\n\"$(_color_primary \"Proceed?\") $(_color_brackets \"y/N\") \" __yn\n\n            case \"${__yn}\" in\n              [Yy]*)\n                break\n                ;;\n              *)\n                printf \"Exiting...\\\\n\"\n\n                exit 0\n                ;;\n            esac\n          done\n        fi\n\n        if ! mkdir -p \"${_notebook_path:?}/${_target_folder_relative_path}\" 2>/dev/null\n        then\n          _exit_1 printf \"Unable to create folder: %s\\\\n\" \\\n            \"$(_color_primary \"${_target_folder_relative_path}\")\"\n        fi\n      fi\n    fi\n\n    if [[ -n \"${_title}\"                  ]]\n    then\n      case \"${_target_path:-}\" in\n        *.adoc|*.asciidoc)\n          _title_prefix=\"=\"\n          ;;\n        *.org)\n          _title_prefix=\"#+TITLE:\"\n          ;;\n        *)\n          _title_prefix=\"#\"\n          ;;\n      esac\n\n      printf \"%s\\\\n\\\\n\" \"${_title_prefix} ${_title}\" >> \"${_target_path}\"\n    fi\n\n    local _print_spacing=0\n\n    if [[ -n \"${_tag_list:-}\"             ]]\n    then\n      printf \"%s\\\\n\" \"${_tag_list}\" >> \"${_target_path}\"\n      _print_spacing=1\n    fi\n\n    if [[ -n \"${_selector_content:-}\"     ]]\n    then # argument content\n      ((_print_spacing)) && printf \"\\\\n\"    >> \"${_target_path}\"\n\n      printf \"%s\\\\n\" \"${_selector_content}\" >> \"${_target_path}\"\n      _print_spacing=1\n    fi\n\n    if [[ -n \"${_option_content:-}\"       ]]\n    then # argument content\n      ((_print_spacing)) && printf \"\\\\n\"  >> \"${_target_path}\"\n\n      printf \"%s\\\\n\" \"${_option_content}\" >> \"${_target_path}\"\n      _print_spacing=1\n    fi\n\n    if _piped_input && ! ((_skip_standard_input))\n    then # piped input\n      ((_print_spacing)) &&\n        printf \"\\\\n\"  >> \"${_target_path}\"\n\n      cat             >> \"${_target_path}\"\n    fi\n\n    if ((_edit_before_commit))                ||\n       {\n         ! _piped_input                       &&\n         [[ -z \"${_selector_content:-}\"   ]]  &&\n         [[ -z \"${_option_content:-}\"     ]]\n       }\n    then\n      _edit_file \"${_target_path}\"\n    fi\n\n    # walk up and delete empty directories when file not created\n    if [[ ! -e \"${_target_path:?}\"                                    ]] &&\n       [[   -n \"${_target_folder_relative_path:-}\"                    ]] &&\n       [[   -e \"${_notebook_path:?}/${_target_folder_relative_path}\"  ]]\n    then\n      cd \"${_notebook_path:?}/${_target_folder_relative_path:?}\"\n\n      while [[ \"${PWD:?}\" =~ ^${_notebook_path:?}       ]] &&\n            [[ \"${PWD:?}\" != \"${_notebook_path:?}\"      ]] &&\n            [[ -z \"$(find \"${PWD}/.\" ! -name . -prune)\" ]]\n      do\n        local _empty_directory_path=\"${PWD:?}\"\n\n        cd ..\n\n        if [[ -d \"${_empty_directory_path:?}\"                             ]] &&\n           [[ -z \"$(find \"${_empty_directory_path}/.\" ! -name . -prune)\"  ]]\n        then\n          rm -r \"${_empty_directory_path:?}\"\n        fi\n      done\n    fi\n\n    if ((_encrypt)) && [[ -e \"${_target_path}\" ]]\n    then\n      _target_basename=\"${_target_basename}.enc\"\n\n      local _decrypted_path=\"${_target_path}\"\n      local _encrypted_path=\"${_notebook_path}/${_target_unique_relative_path}.enc\"\n\n      _encrypt_file           \\\n        \"${_decrypted_path}\"  \\\n        \"${_encrypted_path}\"  \\\n        --password \"${_password}\"\n\n      if [[ -n \"${_decrypted_path}\" ]] && [[ -e \"${_decrypted_path}\" ]]\n      then\n        rm \"${_decrypted_path:?}\"\n      fi\n\n      _target_unique_relative_path=\"${_target_unique_relative_path}.enc\"\n      _target_path=\"${_encrypted_path}\"\n    fi\n  fi\n\n  if [[ -e \"${_target_path}\"              ]]\n  then\n    if [[ ! \"${_target_path##*/}\" =~ ^\\.  ]]\n    then\n      _index add                          \\\n        \"${_target_basename}\"             \\\n        \"${_notebook_path:?}/${_target_folder_relative_path:-}\"\n    fi && _git checkpoint                 \\\n      \"${_notebook_path}\"                 \\\n      \"[${_ME}] Add: ${_target_unique_relative_path}\"\n\n    local _info=\n    _info=\"$(\n      _show \"${_notebook_path:?}/${_target_unique_relative_path:?}\" --info-line\n    )\"\n\n    printf \"Added: %s\\\\n\" \"${_info}\"\n  fi\n}\n_alias_subcommand \"add\" \"+\"\n_alias_subcommand \"add\" \"a\"\n_alias_subcommand \"add\" \"create\"\n_alias_subcommand \"add\" \"new\"\n\n# bookmark ########################################################### bookmark\n\n_describe_bookmark() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} bookmark [<ls-options>...]\n  ${_ME} bookmark [<notebook>:][<folder-path>/] <url>...\n              [-c <comment> | --comment <comment>] [--edit] [-e | --encrypt]\n              [-f <filename> | --filename <filename>] [--no-request]\n              [-q <quote> | --quote <quote>] [--save-source]\n              [-r (<url> | <selector>) | --related (<url> | <selector>)]...\n              [-t <tag1>,<tag2>... | --tags <tag1>,<tag2>...] [--title <title>]\n  ${_ME} bookmark list [<list-options>...]\n  ${_ME} bookmark (edit | delete | open | peek | url)\n              ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n  ${_ME} bookmark search <query>\n\n$(_color_primary \"Options\"):\n  -c, --comment <comment>      A comment or description for this bookmark.\n  --edit                       Open the bookmark in your editor before saving.\n  -e, --encrypt                Encrypt the bookmark with a password.\n  -f, --filename <filename>    The filename for the bookmark. It is\n                               recommended to omit the extension so the\n                               default bookmark extension is used.\n  --no-request                 Don't request or download the target page.\n  -q, --quote <quote>          A quote or excerpt from the saved page.\n                               Alias: \\`--excerpt\\`\n  -r, --related <selector>     A selector for an item related to the\n                               bookmarked page.\n  -r, --related <url>          A URL for a page related to the bookmarked page.\n                               Multiple \\`--related\\` flags can be used in a\n                               command to save multiple related URLs and\n                               selectors.\n  --save-source                Save the page source as HTML.\n  -t, --tags <tag1>,<tag2>...  A comma-separated list of tags.\n  --title <title>              The bookmark title. When not specified,\n                               \\`${_ME}\\` will use the html <title> tag.\n\n$(_color_primary \"Subcommands\"):\n  (default)  Add a new bookmark for <url>, or list bookmarks.\n             Bookmarks can also be added with \\`${_ME} <url>\\`\n  delete     Delete a bookmark.\n  edit       Edit a bookmark.\n  list       List bookmarks in the current notebook.\n             Shortcut Alias: \\`ls\\`\n  open       Open the bookmarked page in your system's primary web browser.\n             Shortcut Alias: \\`o\\`\n  peek       Open the bookmarked page in your terminal web browser.\n             Alias: \\`preview\\`\n             Shortcut Alias: \\`p\\`\n  search     Search bookmarks for <query>.\n             Shortcut Alias: \\`q\\`\n  url        Print the URL for the specified bookmark.\n\n$(_color_primary \"Description\"):\n  Create, view, search, edit, and delete bookmarks.\n\n  By default, the html page content is saved within the bookmark, making the\n  bookmarked page available for full-text search. When Pandoc [1] is\n  installed, the HTML content is converted to Markdown before saving.\n  When readability-cli [2] is install, markup is cleaned up to focus on\n  content.\n\n  \\`peek\\` opens the page in \\`w3m\\` [3] or \\`links\\` [4] when available.\n  To specify a preferred browser, set the \\`\\$BROWSER\\` environment variable\n  in your .bashrc, .zshrc, or equivalent, e.g.: export BROWSER=\"links\"\n\n  Bookmarks are identified by the \\`.bookmark.md\\` file extension. The\n  bookmark URL is the first URL in the file within \"<\" and \">\" characters:\n\n    <https://www.example.com>\n\n    1. https://pandoc.org/\n    2. https://gitlab.com/gardenappl/readability-cli\n    3. https://en.wikipedia.org/wiki/W3m\n    4. https://en.wikipedia.org/wiki/Links_(web_browser)\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-bookmark\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help open\n  ${_ME} help peek\n  ${_ME} help show\n\n$(_color_primary \"Examples\"):\n  ${_ME} https://example.com\n  ${_ME} example: https://example.com\n  ${_ME} https://example.com --encrypt\n  ${_ME} https://example.com --tags example,sample,demo\n  ${_ME} https://example.com/about -c \"Example comment.\"\n  ${_ME} https://example.com/faqs -f example-filename\n  ${_ME} https://example.com --quote \"Example quote or excerpt.\"\n  ${_ME} bookmark list\n  ${_ME} bookmark search \"example query\"\n  ${_ME} bookmark open 5\n  ${_ME} bk\n\n$(_color_primary \"Shortcut Aliases\"):\n  ${_ME} bk\n  ${_ME} bm\nHEREDOC\n}\n_bookmark() {\n    # Usage: _bookmark_cleanup_tag_content <string>\n  _bookmark_cleanup_tag_content() {\n    local _character_removal_pattern=\n    _character_removal_pattern=\"$(\n      printf \"\\xE2\\x80\\xAA|\\xE2\\x80\\xAB|\\xE2\\x80\\xAC\"\n    )\"\n\n    # `awk` condenses and trims whitespace\n    # `sed` removes select unicode characters\n    # `w3m` converts HTML entities\n    printf \"%s\\\\n\" \"${1:-}\"                             \\\n      | awk '$1=$1'                                     \\\n      | sed -E -e \"s/${_character_removal_pattern}//g\"  \\\n      | if _command_exists \"w3m\"\n        then\n           w3m -dump -T text/html -cols 99999\n         else\n           cat\n        fi\n  }\n\n  # Usage: _bookmark_view_in_terminal_browser (<url>)\n  _bookmark_view_in_terminal_browser() {\n    local _target_url=\"${1:-}\"\n\n    if _web_browser --check\n    then\n      _web_browser \"${_target_url}\"\n\n      return 0\n    elif _command_exists \"curl\" || _command_exists \"wget\"\n    then\n      _download_from \"${_target_url}\"               \\\n        | if _command_exists \"pandoc\"\n          then\n            _pandoc                                 \\\n              --standard-input                      \\\n              --from  html-native_divs-native_spans \\\n              --to    markdown                      \\\n              | _highlight_syntax_if_available \"md\"\n          else\n            cat\n          fi | _pager\n\n      return 0\n    else\n      _exit_1 printf \"Terminal web browser not detected.\\\\n\"\n    fi\n  }\n\n  local _arguments=()\n  local _bookmark_content=\n  local _comment=\n  local _edit_before_commit=0\n  local _encrypt=0\n  local _non_url_arguments=()\n  local _password=\n  local _quote=\n  local _readability_enabled=1\n  local _related_identifiers=()\n  local _request_page=1\n  local _save_source=0\n  local _secondary_urls=()\n  local _selector=\n  local _skip_content=0\n  local _skip_folder_prompt=0\n  local _subcommand=\n  local _tag_list=\n  local _target_filename=\n  local _title=\n  local _url=\n\n  local _previous_arg=\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    if [[ \"${_previous_arg:-}\" =~ ^-- ]] ||\n       ! _string_is_url \"${__arg:-}\"\n    then\n      _non_url_arguments+=(\"${__arg:-}\")\n    fi\n\n    _previous_arg=\"${__arg:-}\"\n  done\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -c|--comment*)\n        _comment=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --download|--fetch|--online|--request)\n        _request_page=1\n        ;;\n      --edit)\n        _edit_before_commit=1\n        ;;\n      -e|--encrypt*)\n        _encrypt=1\n        ;;\n      -f|--filename)\n        _target_filename=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --no*download|--no*fetch|--no*request|--offline)\n        _request_page=0\n        ;;\n      --no*readab*|--skip*readab*)\n        _readability_enabled=0\n        ;;\n      --password)\n        _password=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        _arguments+=(\"${1:-}\" \"${2:-}\")\n\n        shift\n        ;;\n      -q|--quote|--excerpt)\n        _quote=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      -r|--via|--also|--related)\n        _related_identifiers+=(\"$(_option_get_value \"${1}\" \"${2:-}\")\")\n\n        shift\n        ;;\n      --save*source|--source|--save*html|--html|--raw*content|--raw*html)\n        _save_source=1\n        ;;\n      --skip*content|--no*content)\n        _skip_content=1\n        ;;\n      --skip*folder*prompt)\n        _skip_folder_prompt=1\n        ;;\n      -t|--tag*)\n        _tag_list=\"$(_option_get_tags \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --title)\n        _title=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      delete)\n        _delete \"${2:-}\" \"${3:-}\"\n\n        return 0\n        ;;\n      edit)\n        _edit \"${2:-}\"\n\n        return 0\n        ;;\n      help)\n        _help \"bookmark\"\n\n        return 0\n        ;;\n      ls|list)\n        _subcommand=\"list\"\n        ;;\n      search|q)\n        _subcommand=\"search\"\n        ;;\n      open|o|peek|p|preview|url)\n        if _option_value_is_present \"${2:-}\"\n        then\n          if [[ \"${1}\" =~ (^open$|^o$)  ]]\n          then\n            _subcommand=\"open\"\n          elif [[ \"${1}\" =~ (^peek$|^p$|^preview$) ]]\n          then\n            _subcommand=\"peek\"\n          elif [[ \"${1}\" == \"url\"       ]]\n          then\n            _subcommand=\"url\"\n          fi\n\n          _selector=\"${2:-}\"\n\n          shift\n        else\n          _exit_1                                     \\\n            printf \"%s requires a valid argument.\\\\n\" \\\n            \"$(_color_primary \"bookmark ${1}\")\"\n        fi\n        ;;\n      *)\n        if [[ ! \"${_subcommand:-}\"  =~ (^list$|^search$)  ]] &&\n           _string_is_url \"${1}\"\n        then\n          if [[ -z \"${_url:-}\" ]]\n          then\n            _url=\"${1}\"\n          else\n            _secondary_urls+=(\"${1}\")\n          fi\n        elif [[ -z \"${_subcommand:-}\"                     ]] ||\n             [[ \"${_subcommand}\"    =~ (^list$|^search$)  ]]\n        then\n          if [[ \"${1:-}\" =~ (:|^/) ]] && [[ -z \"${_selector:-}\" ]]\n          then\n            _selector=\"${1:-}\"\n          fi\n\n          _arguments+=(\"${1}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  # `bookmark list`\n\n  if [[ \"${_subcommand}\" == \"list\"  ]]\n  then\n    if [[ -n \"${_arguments[*]:-}\"   ]]\n    then\n      _list --bookmarks \"${_arguments[@]}\"\n\n      return 0\n    else\n      _list --bookmarks\n\n      return 0\n    fi\n  fi\n\n  # `bookmark search`\n\n  if [[ \"${_subcommand}\" == \"search\" ]]\n  then\n    _search --bookmarks \"${_arguments[@]}\"\n\n    return 0\n  fi\n\n  # `bookmark open`, `bookmark peek`, `bookmark url`\n\n  {\n    if [[ \"${_subcommand}\" =~ (^open$|^peek$|^url$) ]]\n    then\n      local _relative_path=\n      _relative_path=\"$(_show \"${_selector}\" --relative-path)\"\n\n      local _notebook_path=\n      _notebook_path=\"$(_notebooks current --path)\"\n\n      if [[ -z \"${_relative_path}\"                  ]]\n      then\n        if [[ \"${_subcommand}\" =~ (^open$|^peek$)   ]]\n        then\n          local _maybe_notebook=\"${_selector:-}\"\n          _maybe_notebook=\"$(printf \"%s\\\\n\" \"${_maybe_notebook}\" | sed 's/\\:$//')\"\n\n          if [[ -d \"${NB_DIR}/${_maybe_notebook}/.git\" ]]\n          then\n            _notebooks \"${_subcommand}\" \"${_maybe_notebook}\" && return 0\n          fi\n        fi\n        _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector}\")\"\n      fi\n\n      local _target_path=\"${_notebook_path}/${_relative_path}\"\n\n      # handle non-bookmarks\n      if [[ \"${_subcommand}\" =~ (^open$|^peek$) ]]\n      then\n        if [[ \"${_relative_path}\" =~ \\.html$  ]]\n        then\n          if [[ \"${_subcommand}\" == \"open\"  ]]\n          then\n            _open_in_gui_app \"${_target_path:-}\" && return 0\n          elif [[ \"${_subcommand}\" == \"peek\"  ]]\n          then\n            _bookmark_view_in_terminal_browser \"file://${_target_path}\"\n\n            return 0\n          fi\n        elif [[ ! \"${_relative_path}\" =~ .bookmark\\.md$       ]] &&\n             [[ ! \"${_relative_path}\" =~ .bookmark\\.md\\.enc$  ]]\n        then\n          if [[ \"${_subcommand}\" == \"open\"    ]]\n          then\n            if [[ -d \"${_target_path:-}\"      ]] &&\n               _open_in_gui_app \"${_target_path:-}\"\n            then\n              return 0\n            elif [[ -n \"${_password}\"         ]]\n            then\n              _edit \"${_selector}\" --password \"${_password}\"\n            else\n              _edit \"${_selector}\"\n            fi\n          elif [[ \"${_subcommand}\" == \"peek\"  ]]\n          then\n            if [[ -n \"${_password}\"           ]]\n            then\n              _show \"${_selector}\" --password \"${_password}\"\n            else\n              _show \"${_selector}\"\n            fi\n          fi\n\n          return 0\n        fi\n      fi\n\n      local _target_url=\n      _target_url=\"$(_show \"${_target_path}\" --url \"${_arguments[@]:-}\")\"\n\n      if [[ \"${_subcommand}\" == \"url\"           ]]\n      then\n        printf \"%s\\\\n\" \"${_target_url}\"\n\n        return 0\n      fi\n\n      if [[ \"${_subcommand}\" =~ (^open$|^peek$) ]]\n      then\n        local _check_wayback=0\n        local _http_error_codes=(\n          404 408 410 451 500 502 503 504 509 520 521 523 524 525 526\n        )\n        local _http_status=\n        _http_status=\"$(_get_http_status \"${_target_url}\")\"\n\n        if _contains \"${_http_status}\" \"${_http_error_codes[@]}\"\n        then\n          printf \"Page no longer available: %s\\\\n\" \\\n            \"$(_color_primary \"${_target_url}\")\"\n\n          while true\n          do\n            local __yn=\n            IFS='' read -r -e -d $'\\n' -p \\\n\"Check the Wayback Machine for an archived version instead? $(_color_brackets \"y/N\") \" __yn\n\n            case \"${__yn}\" in\n              [Yy]*)\n                _check_wayback=1\n\n                break\n                ;;\n              *)\n                break\n                ;;\n            esac\n          done\n        fi\n\n        if ((_check_wayback))\n        then\n          local _wayback_response=\n          _wayback_response=\"$(\n            _download_from                                                \\\n              \"https://archive.org/wayback/available?url=${_target_url}\"  \\\n              | grep 'closest'                                            \\\n              | sed -E \"s/.*\\\"closest\\\": {([^}]+)}.*/\\1/g\"                \\\n              | sed -E \"s/.*\\\"url\\\": \\\"([^\\\"]+)\\\".*/\\1/g\" || printf \"\"\n          )\"\n\n          if [[ -n \"${_wayback_response:-}\" ]]\n          then\n            _target_url=\"${_wayback_response}\"\n          else\n            _exit_1 printf                  \\\n              \"No archived version available from the Wayback Machine.\\\\n\"\n          fi\n        fi\n      fi\n\n      # `bookmark peek`\n      if [[   \"${_subcommand}\" == \"peek\"    ]]\n      then\n        _bookmark_view_in_terminal_browser \"${_target_url}\"\n\n        return 0\n      # `bookmark open`\n      elif [[ \"${_subcommand}\" == \"open\"    ]]\n      then\n        if _open_in_gui_app \"${_target_url:-}\"\n        then\n          return 0\n        else\n          _exit_1 printf                                          \\\n            \"%s doesn't know how to open URLs on this system.\\\\n\" \\\n            \"$(_color_primary \"${_ME}\")\"\n        fi\n      fi\n    fi\n  }\n\n  # `bookmark`\n\n  if [[   -z \"${_url:-}\"          ]]\n  then\n    if [[ -z \"${_arguments[*]:-}\" ]]\n    then\n      local _line_length=36\n      local _maybe_header_selector=\n\n      if _notebooks current --selected\n      then\n        _maybe_header_selector=\"$(\n          _notebooks show \"$(_notebooks current)\" --no-color --escaped\n        ): \"\n\n        local _padded_header_selector_length=\n        _padded_header_selector_length=\"$(\n          _get_visible_length \"${_maybe_header_selector}\"\n        )\"\n\n        _line_length=\"$((_line_length + _padded_header_selector_length))\"\n      fi\n\n      local _header=\n      _header=\"Add: $(_color_primary \"${_ME} ${_maybe_header_selector}<url>\")\"\n      _header=\"${_header} Help: $(_color_primary \"${_ME} help bookmark\")\"\n\n      printf \"%s\\\\n\" \"${_header}\"\n      _print_line \"$(printf \"%-${_line_length}s\" '.')\"\n    fi\n\n    _bookmark list \"${_arguments[@]:-}\"\n\n    return 0\n  fi\n\n  # `bookmark <url>`\n\n  if ((${#_secondary_urls[@]}))\n  then\n    local __url=\n    for   __url in \"${_url}\" \"${_secondary_urls[@]}\"\n    do\n      # shellcheck disable=SC2046\n      _bookmark \"${__url}\" $(printf \"%s\\\\n\" \"${_non_url_arguments[@]}\")\n    done\n\n    return 0\n  fi\n\n  local _temp_file=\n  _temp_file=\"$(_temp file)\"\n\n  local _download_url=\"${_url}\"\n  _download_url=\"$(\n    printf \"%s\\\\n\" \"${_download_url}\"       \\\n      | sed 's/https:\\/\\/twitter.com/https:\\/\\/mobile.twitter.com/g'\n  )\"\n\n  if [[ \"${_selector}\" =~ (:|^/)  ]]\n  then\n    _notebooks select \"${_selector}\"\n  fi\n\n  local _relative_folder_path=\n  local _relative_path=\n\n  _relative_folder_path=\"$(\n    _selector_resolve_folders \"${_arguments[0]:-}\" --build || :\n  )\"\n\n  if [[ -n \"${_relative_folder_path:-}\"     ]]\n  then\n    _relative_folder_path=\"${_relative_folder_path}/\"\n  fi\n\n  if [[ -z \"${_target_filename:-}\"          ]]\n  then\n    _relative_path=\"$(\n      _notebooks current --filename         \\\n        \"${_relative_folder_path}$(date '+%Y%m%d%H%M%S').bookmark.md\"\n    )\"\n  else\n    if [[ \"${_target_filename}\" =~ \\.       ]]\n    then\n      _relative_path=\"$(\n        _notebooks current --filename       \\\n          \"${_relative_folder_path}${_target_filename}\")\"\n    else\n      _relative_path=\"$(\n        _notebooks current --filename       \\\n          \"${_relative_folder_path}${_target_filename}.bookmark.md\"\n      )\"\n    fi\n  fi\n\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  local _duplicate_search_path=\"${_notebook_path}\"\n\n  if [[ -n \"${_relative_folder_path:-}\"     ]]\n  then\n    _duplicate_search_path=\"${_notebook_path}/${_relative_folder_path}\"\n  fi\n\n  if [[ -d \"${_duplicate_search_path:-}\"    ]]\n  then\n    local _grep_command=(\n      grep -s                         \\\n        -e \"^<${_download_url}>\"      \\\n        -e \"^##\"\n    )\n\n    if ((_GIT_ENABLED))\n    then\n      _grep_command=(\n        git -C \"${_notebook_path:-}\"  \\\n          grep                        \\\n          -e \"^<${_download_url}>\"    \\\n          -e \"^##\"                    \\\n          --no-heading                \\\n          --color=never\n      )\n    elif _command_exists \"rg\"\n    then\n      _grep_command=(\n        rg                            \\\n          --color never               \\\n          --no-heading                \\\n          --with-filename             \\\n          -e \"^##\"                    \\\n          -e \"^<${_download_url}>\"\n      )\n    fi\n\n    local _candidate_matches=()\n    _candidate_matches=($(\n      set +o noglob\n\n      \"${_grep_command[@]:-}\"                     \\\n        \"${_duplicate_search_path}/\"*.bookmark.md \\\n        2>/dev/null || :\n\n      set -o noglob\n    ))\n\n    local _duplicate_matches=()\n\n    if ((${#_candidate_matches[@]}))\n    then\n      local _current_filename=\n      local _include_match=1\n\n      local __candidate_match=\n      for   __candidate_match in \"${_candidate_matches[@]:-}\"\n      do\n        if [[ \"${_current_filename:-}\" != \"${__candidate_match%%:*}\"  ]]\n        then\n          _current_filename=\"${__candidate_match%%:*}\"\n          _include_match=1\n        fi\n\n        if [[ \"${__candidate_match#*:}\" =~ ^##                        ]]\n        then\n          _include_match=0\n        fi\n\n        if ((_include_match))\n        then\n          _duplicate_matches+=(\"${_current_filename:-}\")\n\n          _include_match=0\n        fi\n      done\n    fi\n\n    if ((${#_duplicate_matches[@]}))\n    then\n      if [[ \"${#_duplicate_matches[@]}\" == \"1\" ]]\n      then\n        printf      \\\n\"1 bookmark for this URL exists in this folder:\\\\n\"\n      _print_line   \\\n\"----------------------------------------------\"\n      else\n        printf      \\\n\"%s bookmarks for this URL exist in this folder:\\\\n\" \"${#_duplicate_matches[@]}\"\n        _print_line \\\n\"${#_duplicate_matches[@]}----------------------------------------------\"\n      fi\n\n      local __duplicate_match=\n      for   __duplicate_match in \"${_duplicate_matches[@]:-}\"\n      do\n        _show --info-line \"${__duplicate_match%%:*}\"\n      done\n\n      _print_line \"------------------------------\"\n\n      while true\n      do\n        local __yn=\n        IFS='' read -r -e -d $'\\n' -p \\\n\"$(_color_primary \"Create another bookmark?\") $(_color_brackets \"y/N\") \" __yn\n\n        case \"${__yn}\" in\n          [Yy]*)\n            break\n            ;;\n          *)\n            printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n            exit 0\n            ;;\n        esac\n      done\n    fi\n  fi 1>&2\n\n  if ((_request_page))\n  then\n    if ! _download_from \"${_download_url}\" \"${_temp_file}\" ||\n       [[ ! -e \"${_temp_file}\"                          ]] ||\n       [[ \"$(wc -c <\"${_temp_file}\")\" == 0              ]]\n    then\n      _warn printf                            \\\n        \"Unable to download page at %s\\\\n\"    \\\n        \"$(_color_primary \"${_url}\")\"\n    fi\n  fi\n\n  if _file_is_text \"${_temp_file}\"\n  then\n    if [[ -z \"${_title}\"    ]]\n    then\n      _title=\"$(\n        cat \"${_temp_file}\"                   \\\n          | if _command_exists 'iconv'\n            then\n              iconv -c -t utf-8\n            else\n              cat\n            fi                                \\\n          | awk '/<title[^>]*>/,/<\\/title>/'  \\\n          | LC_ALL=C sed -e '/<\\/title>/ q'   \\\n          | LC_ALL=C sed -e 's/<\\/title>.*//' \\\n          | LC_ALL=C sed                      \\\n            -e 's/.*<title[^>]*>//'           \\\n            -e 's/.*<TITLE[^>]*>//'           \\\n            -e 's/<\\/title>.*//'              \\\n            -e 's/<\\/TITLE>.*//'              \\\n          | awk '$1=$1'     ||  :\n      )\"\n    fi\n\n    if [[ -z \"${_title:-}\"  ]]\n    then\n      _title=\"$(\n        cat \"${_temp_file}\"     \\\n          | LC_ALL=C sed -E -n  \\\n            \"s/.*<meta .*property=.og:title[^>]*content=\\\"([^\\\"]+)\\\".*/\\1/p\" \\\n            2>/dev/null     ||  :\n      )\"\n    fi\n  fi\n\n  local _domain=\n  _domain=\"$(printf \"%s\\\\n\" \"${_url}\" | awk -F[/:] '{print $4}')\"\n\n  if [[ -n \"${_domain:-}\"   ]]\n  then\n    [[ -n \"${_title:-}\"     ]]  && _title+=\" \"\n    _title+=\"(${_domain})\"\n  fi\n\n  if [[ -n \"${_title:-}\"    ]]\n  then\n    _title=\"$(_bookmark_cleanup_tag_content \"${_title}\")\"\n\n    _bookmark_content=\"# ${_title}${_NEWLINE}${_NEWLINE}\"\n  fi\n\n  _bookmark_content+=\"<${_url}>${_NEWLINE}\"\n\n  if _file_is_text \"${_temp_file}\"\n  then\n    local _description=\n    _description=\"$(\n      cat \"${_temp_file}\"       \\\n        | LC_ALL=C sed -E -n    \\\n            \"s/.*<meta .*name=.description.[^>]*content=\\\"([^\\\"]+)\\\".*/\\1/p\" \\\n            2>/dev/null     ||  :\n    )\"\n\n    if [[ -z \"${_description:-}\"    ]]\n    then\n      _description=\"$(\n        cat \"${_temp_file}\"     \\\n          | LC_ALL=C sed -E -n  \\\n              \"s/.*<meta .*property=.og:description[^>]*content=\\\"([^\\\"]+)\\\".*/\\1/p\" \\\n              2>/dev/null   ||  :\n      )\"\n    fi\n\n    if [[ -n \"${_description:-}\"    ]]\n    then\n      _description=\"$(_bookmark_cleanup_tag_content \"${_description}\")\"\n\n      _bookmark_content+=\"${_NEWLINE}## Description${_NEWLINE}\"\n      _bookmark_content+=\"${_NEWLINE}${_description}${_NEWLINE}\"\n    fi\n  fi\n\n  if [[ -n \"${_quote:-}\"            ]]\n  then\n    _bookmark_content+=\"${_NEWLINE}## Quote${_NEWLINE}\"\n\n    local _counter=0\n\n    local               __line=\n    while IFS= read -r  __line\n    do\n      if ! ((_counter))\n      then\n        _bookmark_content+=\"${_NEWLINE}> ${__line}${_NEWLINE}\"\n      elif [[ -z \"${__line:-}\"      ]]\n      then\n        _bookmark_content+=\">${_NEWLINE}\"\n      else\n        _bookmark_content+=\"> ${__line}${_NEWLINE}\"\n      fi\n\n      _counter=\"$((_counter+1))\"\n    done <<< \"${_quote}\"\n  fi\n\n  if [[ -n \"${_comment:-}\"          ]]\n  then\n    _bookmark_content+=\"${_NEWLINE}## Comment${_NEWLINE}\"\n    _bookmark_content+=\"${_NEWLINE}${_comment}${_NEWLINE}\"\n  fi\n\n  if [[ -n \"${_related_identifiers[*]:-}\" ]]\n  then\n    _bookmark_content+=\"${_NEWLINE}## Related${_NEWLINE}${_NEWLINE}\"\n    _bookmark_content+=\"$(_build_related_list \"${_related_identifiers[@]:-}\")\"\n    _bookmark_content+=\"${_NEWLINE}\"\n  fi\n\n  if [[ -n \"${_tag_list:-}\"         ]]\n  then\n    _bookmark_content+=\"${_NEWLINE}## Tags${_NEWLINE}\"\n    _bookmark_content+=\"${_NEWLINE}${_tag_list}${_NEWLINE}\"\n  fi\n\n  if _file_is_text \"${_temp_file}\"\n  then\n    if ! ((_skip_content))\n    then\n      local _processed_content=\n\n      if _command_exists \"pandoc\"   || _command_exists \"readable\"\n      then\n        _processed_content=\"$(\n          {\n            cat \"${_temp_file}\"\n          } | {\n            if _command_exists \"readable\" && ((_readability_enabled))\n            then\n              readable            \\\n                --base \"${_url}\"  \\\n                --quiet           \\\n                2>/dev/null || cat\n            else\n              cat\n            fi\n          } | {\n            if _command_exists \"pandoc\"\n            then\n              {\n                _pandoc                                 \\\n                  --standard-input                      \\\n                  --from  html-native_divs-native_spans \\\n                  --to    markdown-grid_tables          \\\n                  --wrap=none                           \\\n                  2>/dev/null || cat\n              } | {\n                # strip empty list items\n                LC_ALL=C sed -E -e 's/^-[[:space:]]*$//g'\n              }\n            else\n              cat\n            fi\n          }\n        )\"\n\n        if [[ -n \"${_processed_content}\"  ]]\n        then\n          _bookmark_content+=\"${_NEWLINE}## Content${_NEWLINE}\"\n          _bookmark_content+=\"${_NEWLINE}${_processed_content}${_NEWLINE}\"\n        fi\n      else\n        _save_source=1\n      fi\n    fi\n\n    if ((_save_source))\n    then\n      _bookmark_content+=\"${_NEWLINE}## Source${_NEWLINE}\"\n      _bookmark_content+=\"${_NEWLINE}${_BT}${_BT}${_BT}html${_NEWLINE}\"\n      _bookmark_content+=\"$(cat \"${_temp_file}\")\"\n      _bookmark_content+=\"${_NEWLINE}${_BT}${_BT}${_BT}${_NEWLINE}\"\n    fi\n  fi\n\n  if [[ -n \"${_bookmark_content}\"         ]]\n  then\n\n    local _add_options=(\n      \"${_relative_path}\"\n      --content \"${_bookmark_content}\"\n      --skip-standard-input\n    )\n\n    ((_encrypt))                &&  _add_options+=(\"--encrypt\")\n    ((_edit_before_commit))     &&  _add_options+=(\"--edit\")\n    [[ -n \"${_password:-}\"  ]]  &&  _add_options+=(\"--password\" \"${_password}\")\n\n    if ! ((_skip_folder_prompt))\n    then\n      _add_options+=(\"--folder-prompt\")\n    fi\n\n    _add \"${_add_options[@]}\"\n\n    [[ -f \"${_temp_file:-}\" ]]  &&  rm -f \"${_temp_file:?}\"\n\n    return 0\n  fi\n}\n_alias_subcommand \"bookmark\" \"bk\"\n_alias_subcommand \"bookmark\" \"bm\"\n_alias_subcommand \"bookmark\" \"bookmarks\"\n\n# completions ##################################################### completions\n\n_describe_completions() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} completions (check | install [-d | --download] | uninstall)\n\n$(_color_primary \"Options\"):\n  -d, --download  Download the completion scripts and install.\n\n$(_color_primary \"Description\"):\n  Manage completion scripts.\n\n$(_color_primary \"Read More\"):\n  https://github.com/${_REPO}/blob/${_REPO_MAIN_BRANCH}/etc/README.md\n\n$(_color_primary \"See Also\"):\n  ${_ME} help env\nHEREDOC\n}\n_completions() {\n  local _BASH_COMP_NAME=\"${_ME}\"\n  local _FISH_COMP_NAME=\"${_ME}.fish\"\n  local _ZSH_COMP_NAME=\"_${_ME}\"\n\n  # Usage: _completions_check\n  _completions_check() {\n    local _exists=0\n\n    local __shell=\n    for   __shell in bash fish zsh\n    do\n      local _completion_path=\n      local _completion_target=\n\n      case \"${__shell}\" in\n        bash)\n          _completion_path=\"$(_get_bash_completion_path)\"\n          _completion_target=\"${_completion_path}/${_BASH_COMP_NAME}\"\n          ;;\n        fish)\n          _completion_path=\"$(_get_fish_completion_path)\"\n          _completion_target=\"${_completion_path}/${_FISH_COMP_NAME}\"\n          ;;\n        zsh)\n          _completion_path=\"/usr/local/share/zsh/site-functions\"\n          _completion_target=\"${_completion_path}/${_ZSH_COMP_NAME}\"\n          ;;\n      esac\n\n      if [[ -d \"${_completion_path}\"        ]]\n      then\n        if [[ -w \"${_completion_path}\"      ]]\n        then\n          if [[ -e \"${_completion_target}\"  ]]\n          then\n            _exists=1\n\n            printf \"Exists: %s\\\\n\" \"${_completion_target}\"\n          fi\n        else\n          _warn printf \"Permission denied: %s\\\\n\" \"${_completion_path}\"\n        fi\n      fi\n    done\n\n    if ! ((_exists))\n    then\n      _exit_1 printf \"Completion scripts not found.\\\\n\"\n    fi\n  }\n\n  # Usage: _get_bash_completion_path\n  _get_bash_completion_path() {\n    local _bash_completion_path=\n\n    if [[ -n \"${BASH_COMPLETION_COMPAT_DIR:-}\"  ]]\n    then\n      _bash_completion_path=\"${BASH_COMPLETION_COMPAT_DIR}\"\n    fi\n\n    if [[ -z \"${_bash_completion_path:-}\"       ]]\n    then\n      local _maybe_path=\n      _maybe_path=\"$(\n        pkg-config --variable=completionsdir bash-completion 2>/dev/null || :\n      )\"\n\n      if [[ -n \"${_maybe_path:-}\"               ]]\n      then\n        _bash_completion_path=\"${_maybe_path}\"\n      fi\n    fi\n\n    if [[ -z \"${_bash_completion_path:-}\"       ]] &&\n       [[ -d \"/usr/local/etc/bash_completion.d\" ]]\n    then\n      _bash_completion_path=\"/usr/local/etc/bash_completion.d\"\n    fi\n\n    if [[ -z \"${_bash_completion_path:-}\"       ]] &&\n       [[ -d \"/etc/bash_completion.d\"           ]]\n    then\n      _bash_completion_path=\"/etc/bash_completion.d\"\n    fi\n\n    printf \"%s\\\\n\" \"${_bash_completion_path:-}\"\n  }\n\n  # Usage: _get_fish_completion_path\n  _get_fish_completion_path() {\n    local _fish_completion_path=\n\n    if [[ -z \"${_fish_completion_path:-}\"                 ]] &&\n       [[ -d \"/usr/local/share/fish/vendor_completions.d\" ]]\n    then\n      _fish_completion_path=\"/usr/local/share/fish/vendor_completions.d\"\n    fi\n\n    if [[ -z \"${_fish_completion_path:-}\"       ]]\n    then\n      local _maybe_path=\n      _maybe_path=\"$(\n        pkg-config --variable=completionsdir fish 2>/dev/null || :\n      )\"\n\n      if [[ -n \"${_maybe_path:-}\"               ]]\n      then\n        _fish_completion_path=\"${_maybe_path}\"\n      fi\n    fi\n\n    if [[ -z \"${_fish_completion_path:-}\"                 ]] &&\n       [[ -d \"/usr/share/fish/vendor_completions.d\"       ]]\n    then\n      _fish_completion_path=\"/usr/share/fish/vendor_completions.d\"\n    fi\n\n    printf \"%s\\\\n\" \"${_fish_completion_path:-}\"\n  }\n\n  _get_zsh_completion_path() {\n      local _zsh_completion_path=\n\n      if [[ -z \"${_zsh_completion_path:-}\"                 ]] &&\n         [[ -d \"/usr/local/share/zsh/site-functions\" ]]\n      then\n        _zsh_completion_path=\"/usr/local/share/zsh/site-functions\"\n      fi\n\n      if [[ -z \"${_zsh_completion_path:-}\"                 ]] &&\n         [[ -d \"/usr/share/zsh/site-functions\"       ]]\n      then\n        _zsh_completion_path=\"/usr/share/zsh/site-functions\"\n      fi\n\n      printf \"%s\\\\n\" \"${_zsh_completion_path:-}\"\n  }\n\n  # Usage: _completions_install [--download]\n  _completions_install() {\n    local _download=0\n    if [[ \"${1:-}\" == \"--download\"  ]]\n    then\n      _download=1\n    fi\n\n    local _my_path=\"${0}\"\n\n    if [[ -L \"${_my_path}\"          ]]\n    then\n      _my_path=\"$(_resolve_symlink \"${_my_path}\")\"\n    fi\n\n    local _my_dir=\n    _my_dir=\"$(cd \"$(dirname \"${_my_path}\")\"; pwd)\"\n    if [[ -z \"${_my_dir}\"   ]]  ||  [[ ! -d \"${_my_dir}\"        ]]\n    then\n      exit 1\n    fi\n\n    if [[ -z \"${_REPO:-}\"   ]]  ||  [[ -z \"${_REPO_RAW_URL:-}\"  ]]\n    then\n      _exit_1 printf \"Source Git repository not configured.\\\\n\"\n    fi\n\n    local __shell=\n    for   __shell in bash fish zsh\n    do\n      local _completion_source=\"${_my_dir}/etc/${_ME}-completion.${__shell}\"\n\n      if ((_download))\n      then\n        if [[ ! -f \"${_completion_source}\"  ]]\n        then\n          _completion_source=\"$(_temp file)\"\n          local _completion_url=\"${_REPO_RAW_URL}/etc/${_ME}-completion.${__shell}\"\n\n          if ! _download_from \"${_completion_url}\" \"${_completion_source}\"\n          then\n            _exit_1 printf \"Unable to download completion script from %s\\\\n\" \\\n              \"${_completion_source}\"\n          fi\n        fi\n      fi\n\n      if [[ ! -f \"${_completion_source}\"    ]]\n      then\n        cat <<HEREDOC\nUnable to find source ${__shell} completion script. You can try downloading\nand installing the latest version with the following command (\\`sudo\\` might\nbe necessary):\n  ${_ME} completions install --download\n\nMore Information: ${__shell}\n  https://github.com/${_REPO}/blob/${_REPO_MAIN_BRANCH}/etc/README.md\nHEREDOC\n      else\n        local _completion_path=\n        local _completion_target=\n\n        case \"${__shell}\" in\n          bash)\n            _completion_path=\"$(_get_bash_completion_path)\"\n            _completion_target=\"${_completion_path}/${_BASH_COMP_NAME}\"\n            ;;\n          fish)\n            _completion_path=\"$(_get_fish_completion_path)\"\n            _completion_target=\"${_completion_path}/${_FISH_COMP_NAME}\"\n            ;;\n          zsh)\n            _completion_path=\"$(_get_zsh_completion_path)\"\n            _completion_target=\"${_completion_path}/${_ZSH_COMP_NAME}\"\n            ;;\n        esac\n\n        if [[ -n \"${_completion_path:-}\"        ]] &&\n           [[ -d \"${_completion_path}\"          ]]\n        then\n          if [[ -w \"${_completion_path}\"        ]]\n          then\n            if [[ ! -e \"${_completion_target}\"  ]]\n            then\n              cp                                \\\n                \"${_completion_source}\"         \\\n                \"${_completion_target}\"\n\n              chmod +r \"${_completion_target}\"\n\n              printf \"Completion script installed: %s\\\\n\" \\\n                \"${_completion_target}\"\n            else\n              _warn printf \"Exists: %s\\\\n\" \"${_completion_target}\"\n            fi\n          else\n            _warn printf \"Permission denied: %s\\\\n\" \"${_completion_path}\"\n          fi\n        fi\n      fi\n    done\n  }\n\n  # Usage: _completions_uninstall\n  _completions_uninstall() {\n    local _completion_path=\n    local _completion_target=\n\n    local __shell=\n    for   __shell in bash fish zsh\n    do\n      case \"${__shell}\" in\n        bash)\n          _completion_path=\"$(_get_bash_completion_path)\"\n          _completion_target=\"${_completion_path}/${_BASH_COMP_NAME}\"\n          ;;\n        fish)\n          _completion_path=\"$(_get_fish_completion_path)\"\n          _completion_target=\"${_completion_path}/${_FISH_COMP_NAME}\"\n          ;;\n        zsh)\n          _completion_path=\"/usr/local/share/zsh/site-functions\"\n          _completion_target=\"${_completion_path}/${_ZSH_COMP_NAME}\"\n          ;;\n      esac\n\n      if [[ -n \"${_completion_path:-}\"  ]] &&\n         [[ -d \"${_completion_path}\"    ]]\n      then\n        if [[ -w \"${_completion_path}\"    ]] &&\n           [[ -w \"${_completion_target}\"  ]]\n        then\n          if [[ -f \"${_completion_target}\"  ]]\n          then\n            rm \"${_completion_target:?}\"\n\n            printf \"Completion script removed: %s\\\\n\" \\\n              \"${_completion_target}\"\n          fi\n        else\n          _warn printf \"Permission denied: %s\\\\n\" \"${_completion_path}\"\n        fi\n      fi\n    done\n  }\n\n  local _subcommand=\"${1:-}\"\n\n  case \"${_subcommand}\" in\n    check)\n      _completions_check\n      ;;\n    install)\n      if [[ \"${2:-}\" =~ (^-d|--download$)   ]]\n      then\n        _completions_install --download\n      else\n        _completions_install\n      fi\n      ;;\n    uninstall)\n      _completions_uninstall\n      ;;\n    *)\n      _help \"completions\"\n\n      return 0\n      ;;\n  esac\n}\n\n# delete ############################################################### delete\n\n_describe_delete() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} delete ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])...\n            [-f | --force]\n\n$(_color_primary \"Options\"):\n  -f, --force   Skip the confirmation prompt.\n\n$(_color_primary \"Description\"):\n  Delete one or more items.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#deleting\n\n$(_color_primary \"See Also\"):\n  ${_ME} help add\n  ${_ME} help browse\n  ${_ME} help edit\n  ${_ME} help move\n  ${_ME} help show\n\n$(_color_primary \"Examples\"):\n  ${_ME} delete 3\n  ${_ME} delete example.md\n  ${_ME} delete \"A Document Title\"\n  ${_ME} 3 delete --force\n  ${_ME} example:delete 12\n  ${_ME} delete example:12\n  ${_ME} example:12 delete\n  ${_ME} d 3\n  ${_ME} 3 d\n  ${_ME} d example:12\n  ${_ME} example:12 d\n\n$(_color_primary \"Aliases\"):\n  ${_ME} rm\n  ${_ME} trash\n\n$(_color_primary \"Shortcut Aliases\"):\n  ${_ME} d\n  ${_ME} -\nHEREDOC\n}\n_delete() {\n  local _force=0\n  local _print_prompt_list=0\n  local _selectors=()\n  local _title=\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      -f|--force|--skip*|-y|--yes)\n        _force=1\n        ;;\n      --prompt-list)\n        _print_prompt_list=1\n        ;;\n      *)\n        [[ -n \"${__arg:-}\"  ]]  && _selectors+=(\"${__arg:-}\")\n        ;;\n    esac\n  done\n\n  if ! ((${#_selectors[@]}))\n  then\n    _exit_1 _help \"delete\"\n  fi\n\n  local _notebook_paths=()\n  local _notebook_selectors=()\n  local _target_paths=()\n  local _target_selectors=()\n\n  local __selector=\n  for   __selector in \"${_selectors[@]:-}\"\n  do\n    [[ -z \"${__selector:-}\"       ]]  && continue\n\n    local _selector_path=\n    _selector_path=\"$(_show \"${__selector:-}\" --path 2>/dev/null || :)\"\n\n    local _selector_notebook_path=\n    _selector_notebook_path=\"$(_notebooks show \"${__selector:-}\" --path 2>/dev/null || :)\"\n\n    if [[ -n \"${_selector_path}\" ]]\n    then\n      if [[ \"${_selector_path:-}\" == \"${_selector_notebook_path:-}\" ]]\n      then\n        _notebook_paths+=(\"${_selector_notebook_path}\")\n        _notebook_selectors+=(\"${__selector}\")\n      else\n        _target_paths+=(\"${_selector_path}\")\n        _target_selectors+=(\"${__selector}\")\n      fi\n    elif [[ -n \"${_selector_notebook_path:-}\" ]] &&\n         {\n           [[ -z  \"${__selector##*:}\"         ]] ||\n           [[ !   \"${__selector:-}\" =~ :      ]]\n         }\n    then\n      _notebook_paths+=(\"${_selector_notebook_path}\")\n      _notebook_selectors+=(\"${__selector}\")\n    else\n      _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${__selector}\")\"\n    fi\n  done\n\n  local __notebook_selector=\n  for   __notebook_selector in \"${_notebook_selectors[@]:-}\"\n  do\n    [[ -z \"${__notebook_selector:-}\" ]]  && continue\n\n    if ((_force))\n    then\n      _notebooks delete \"${__notebook_selector}\" --force\n    else\n      _notebooks delete \"${__notebook_selector}\"\n    fi\n  done\n\n  if ! ((${#_target_paths[@]}))\n  then\n    return\n  fi\n\n  if ((_print_prompt_list))     || ! ((_force))\n  then\n    if [[ \"${#_target_paths[@]}\"   == 1  ]]\n    then\n      printf \"Deleting: %s\\\\n\" \"$(_show \"${_target_selectors[0]:-}\" --info-line)\"\n    else\n      printf \"Deleting:\\\\n\"\n\n      local __prompt_selector=\n      for   __prompt_selector in \"${_target_paths[@]:-}\"\n      do\n        [[ -z \"${__prompt_selector:-}\" ]] && continue\n\n        printf \"%s\\\\n\" \"$(_show \"${__prompt_selector:-}\" --info-line)\"\n      done\n\n    fi\n  fi\n\n  if ! ((_force))\n  then\n    while true\n    do\n      local __yn=\n      IFS='' read -r -e -d $'\\n' -p \\\n\"$(_color_primary \"Proceed?\")  $(_color_brackets \"y/N\") \" __yn\n\n      case \"${__yn}\" in\n        [Yy]*)\n          break\n          ;;\n        *)\n          printf \"Exiting...\\\\n\"\n\n          exit 0\n          ;;\n      esac\n    done\n  fi\n\n  local __delete_selector=\n  for   __delete_selector in \"${_target_paths[@]:-}\"\n  do\n    local _info_line=\n    _info_line=\"$(_show \"${__delete_selector:-}\" --info-line)\"\n\n    local _relative_path=\n    _relative_path=\"$(_show \"${__delete_selector}\" --relative-path)\"\n\n    local _notebook_path=\n    _notebook_path=\"$(\n      _notebooks show \"${__delete_selector:-}\" --path ||\n        _notebooks current --path\n    )\"\n\n    local _basename=\"${_relative_path##*\\/}\"\n    local _folder_path=\"${_notebook_path}\"\n\n    if [[ \"${_relative_path:-}\" =~ / ]]\n    then\n      _folder_path=\"${_notebook_path}/${_relative_path%\\/*}\"\n    fi\n\n    if [[ -n \"${_basename}\" ]] && [[ -e \"${_notebook_path}/${_relative_path}\" ]]\n    then\n      _pin unpin \"${_notebook_path}/${_relative_path}\" &> /dev/null || :\n\n      if [[ -d \"${_notebook_path}/${_relative_path}\"            ]]  &&\n         [[ -z \"$(ls -A \"${_notebook_path}/${_relative_path}\")\" ]]\n      then\n        rm -r \"${_notebook_path:?}/${_relative_path:?}\"\n      else\n        if git -C \"${_notebook_path:?}\" check-ignore    \\\n             \"${_notebook_path:?}/${_relative_path:?}\" 1>/dev/null\n        then\n          rm -r \"${_notebook_path:?}/${_relative_path:?}\"\n        else\n          git -C \"${_notebook_path:?}\" rm -r            \\\n            \"${_notebook_path:?}/${_relative_path:?}\" 1>/dev/null\n        fi\n      fi\n\n      if [[ ! -e \"${_notebook_path}/${_relative_path}\"  ]]\n      then\n        _index delete \"${_basename}\" \"${_folder_path}\"\n\n        _git checkpoint \"${_notebook_path}\" \"[${_ME}] Delete: ${_relative_path}\"\n\n        printf \"Deleted:  %s\\\\n\" \"${_info_line}\"\n      fi\n    else\n      _exit_1 printf \"Selection not found.\\\\n\"\n    fi\n  done\n}\n_alias_subcommand \"delete\" \"-\"\n_alias_subcommand \"delete\" \"d\"\n_alias_subcommand \"delete\" \"rm\"\n_alias_subcommand \"delete\" \"trash\"\n\n# edit ################################################################### edit\n\n_describe_edit() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} edit ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [-c <content> | --content <content>] [--edit]\n          [-e <editor> | --editor <editor>] [--overwrite] [--prepend]\n\n$(_color_primary \"Options\"):\n  -c, --content <content>  Content to add to the item.\n  --edit                   Open the note in the editor before saving when\n                           content is piped or passed as an argument.\n  -e, --editor <editor>    Edit the note with <editor>, overriding the editor\n                           specified in the \\`\\$EDITOR\\` environment variable.\n  --overwrite              Overwrite existing content with <content> and\n                           standard input.\n  --prepend                Prepend <content> and standard input before\n                           existing content.\n\n$(_color_primary \"Description\"):\n  Open the specified note in \\`\\$EDITOR\\`, currently set to: ${NB_EDITOR}\n\n  Content piped to \\`${_ME} edit\\` or passed using the \\`--content\\` option\n  is appended to the file without opening it in the editor, unless the\n  \\`--edit\\` flag is specified.\n\n  Non-text files are opened in your system's preferred app or program for\n  that file type.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#editing\n\n$(_color_primary \"See Also\"):\n  ${_ME} help add\n  ${_ME} help browse\n  ${_ME} help delete\n  ${_ME} help move\n  ${_ME} help show\n\n$(_color_primary \"Examples\"):\n  ${_ME} edit 3\n  ${_ME} edit example.md\n  ${_ME} edit \"A Document Title\"\n  echo \"Content to append.\" | ${_ME} edit 1\n  ${_ME} 3 edit\n  ${_ME} example:edit 12\n  ${_ME} edit example:12\n  ${_ME} example:12 edit\n  ${_ME} e 12\n  ${_ME} 12 e\n  ${_ME} e example:12\n  ${_ME} example:12 e\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} e\nHEREDOC\n}\n_edit() {\n  local _content=\n  local _content_option_present=0\n  local _edit_before_commit=0\n  local _edit_type=\"append\"\n  local _local_editor=\n  local _password=\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -c|--content)\n        _content_option_present=1\n\n        if [[ -z \"${2:-}\"                   ]]\n        then\n          _exit_1 printf                          \\\n            \"%s requires a valid argument.\\\\n\"    \\\n            \"$(_color_primary \"${1:-}\")\"\n        else\n          if [[ -n \"${_content:-}\"          ]]\n          then\n            _content+=\"${_NEWLINE}${_NEWLINE}\"\n          fi\n\n          _content+=\"$(printf \"%s\\\\n\" \"${2:-}\")\"\n\n          shift\n        fi\n        ;;\n      --edit)\n        _edit_before_commit=1\n        ;;\n      -e|--editor)\n        _local_editor=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --append|--overwrite|--prepend)\n        _edit_type=\"${1#--}\"\n\n        if [[ -n  \"${2:-}\"                  ]] &&\n           [[ !   \"${2:-}\" =~ ^--[A-z0-9]+  ]] &&\n           ! _contains \"${2:-}\" \"-c\" \"-e\"\n        then\n          if [[ -n \"${_content:-}\"          ]]\n          then\n            _content+=\"${_NEWLINE}\"\n          fi\n\n          _content+=\"$(printf \"%s\\\\n\" \"${2:-}\")\"\n\n          shift\n        fi\n        ;;\n      --password)\n        _password=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\" ]]\n        then\n          _selector=\"${1:-}\"\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  [[ -z \"${_selector:-}\" ]] && _exit_1 _help \"edit\"\n\n  local _relative_path=\n  _relative_path=\"$(_show \"${_selector:-}\" --relative-path)\"\n\n  local _basename=\"${_relative_path##*\\/}\"\n  local _folder_path=\"${_relative_path%\\/*}\"\n\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  if [[ -z \"${_relative_path:-}\"  ]]\n  then\n    _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_relative_path}\")\"\n  fi\n\n  if [[ -n \"${_relative_path}\"                    ]] &&\n     [[ -e \"${_notebook_path}/${_relative_path}\"  ]]\n  then\n    local _before=\n    _before=\"$(_get_hash \"${_notebook_path}/${_relative_path}\")\"\n\n    local _decrypted_path=\n    local _encrypted_path=\n    local _encryption_tool=\n    local _target_file=\"${_notebook_path}/${_relative_path}\"\n\n    if _file_is_encrypted \"${_target_file}\"\n    then\n      _encrypted_path=\"${_target_file}\"\n      _encryption_tool=\"$(_get_decryption_tool \"${_encrypted_path:-}\")\"\n\n      if [[    \"${_encryption_tool:-}\" != \"age\"   ]] &&\n         [[ -z \"${_password}\"                     ]]\n      then\n        # request password without displaying it\n        printf \"%s: \" \"$(_color_primary \"Password\")\"\n\n        IFS='' read -r -e -d $'\\n' -s _password </dev/tty\n\n        if [[ -z \"${_password}\"                   ]]\n        then\n          _exit_1 printf \"Password required.\\\\n\"\n        fi\n      fi\n\n      _decrypted_path=\"$(_decrypt_file \"${_target_file}\" \"${_password:-}\")\"\n\n      _target_file=\"${_decrypted_path}\"\n\n      _before=\"$(_get_hash \"${_decrypted_path}\")\"\n    fi\n\n    if [[ -n \"${_content:-}\"      ]] || _piped_input\n    then\n      {\n        if [[ -n \"${_content}\"    ]]\n        then\n          printf \"%s\\\\n\" \"${_content}\"\n        fi\n\n        if _piped_input\n        then\n          cat\n        fi\n      } | {\n        if [[   \"${_edit_type:-}\" == \"overwrite\"  ]]\n        then\n          cat > \"${_target_file}\"\n        elif [[ \"${_edit_type:-}\" == \"prepend\"    ]]\n        then\n          local _prepend_temp=\n          _prepend_temp=\"$(_temp file)\"\n\n          cat                       >   \"${_prepend_temp:?}\"\n\n          if ((_content_option_present))\n          then\n            printf \"\\\\n\"            >>  \"${_prepend_temp:?}\"\n          fi\n\n          cat \"${_target_file}\"     >>  \"${_prepend_temp:?}\"\n\n          cat \"${_prepend_temp:?}\"  >   \"${_target_file}\"\n\n          if [[ -f \"${_prepend_temp:?}\" ]]\n          then\n            rm  \"${_prepend_temp:?}\"\n          fi\n        else\n          if ((_content_option_present))\n          then\n            printf \"\\\\n\"  >>  \"${_target_file}\"\n          fi\n\n          cat             >>  \"${_target_file}\"\n        fi\n      }\n    fi\n\n    if ((_edit_before_commit)) || {\n       ! _piped_input && [[ -z \"${_content:-}\"    ]]\n    }\n    then\n      if [[ -n \"${_local_editor}\"   ]]\n      then\n        NB_EDITOR=\"${_local_editor}\" _edit_file \"${_target_file}\"\n      else\n        _edit_file \"${_target_file}\"\n      fi\n    fi\n\n    local _after=\n    _after=\"$(_get_hash \"${_notebook_path}/${_relative_path}\")\"\n\n    if [[ -n \"${_encrypted_path:-}\" ]]  &&  [[ -e \"${_decrypted_path:-}\" ]]\n    then\n      _after=\"$(_get_hash \"${_decrypted_path}\")\"\n\n      if [[ \"${_before}\" != \"${_after}\" ]]\n      then\n        local _temp_encrypted_path=\n        _temp_encrypted_path=\"$(_temp file \"${_relative_path}\").tmp\"\n\n        mv \"${_encrypted_path}\" \"${_temp_encrypted_path}\"\n\n        _encrypt_file                   \\\n          \"${_decrypted_path}\"          \\\n          \"${_encrypted_path}\"          \\\n          --password \"${_password:-}\"   \\\n          --tool \"${_encryption_tool:-}\"\n\n        if [[ -e \"${_temp_encrypted_path:-}\"  ]]\n        then\n          if [[ -e \"${_encrypted_path:?}\"     ]]\n          then\n            rm \"${_temp_encrypted_path:?}\"\n          else\n            mv \"${_temp_encrypted_path}\" \"${_encrypted_path}\"\n          fi\n        fi\n      fi\n\n      rm \"${_decrypted_path:?}\"\n    fi\n\n    _git checkpoint \"${_notebook_path}\" \"[${_ME}] Edit: ${_relative_path}\"\n\n    if [[ \"${_before}\" != \"${_after}\"   ]]\n    then\n      local _info=\n      _info=\"$(_show \"${_relative_path}\" --info-line)\"\n\n      printf \"Updated: %s\\\\n\" \"${_info}\"\n    fi\n  else\n    _exit_1 printf \"Selection not found.\\\\n\"\n  fi\n}\n_alias_subcommand \"edit\" \"e\"\n\n# env ##################################################################### env\n\n_describe_env() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} env [install]\n\n$(_color_primary \"Subcommands\"):\n  install  Install dependencies on supported systems.\n\n$(_color_primary \"Description\"):\n  Print program environment and configuration information, or install\n  dependencies.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#installation\n\n$(_color_primary \"See Also\"):\n  ${_ME} help completions\n  ${_ME} help init\n  ${_ME} help update\n  ${_ME} help version\nHEREDOC\n}\n_env() {\n  # Usage: _env_install_deb <name> <version> <repo>\n  _env_install_deb() {\n    local _deb_filename=\n    local _name=\"${1:?}\"\n    local _repo=\"${3:?}\"\n    local _version=\"${2:?}\"\n    local _x86_64_bit=1\n\n    local _arch=\n    _arch=\"$(uname -m)\"\n\n    case \"${_arch:-}\" in\n      x86_64)\n        _deb_filename=\"${_name}_${_version}_amd64.deb\"\n        ;;\n      aarch64)\n        _x86_64_bit=0\n        _deb_filename=\"${_name}_${_version}_arm64.deb\"\n        ;;\n      arm*)\n        _x86_64_bit=0\n        _deb_filename=\"${_name}_${_version}_armhf.deb\"\n        ;;\n    esac\n\n    if [[ -z \"${_deb_filename:-}\"   ]]  || {\n         [[ \"${_name}\" == \"ripgrep\" ]]  && ! ((_x86_64_bit))\n       }\n    then\n      _warn printf                                                      \\\n        \"Please install %s manually. No .deb package available for %s.\" \\\n        \"$(_color_primary \"${_name}\")\"                                  \\\n        \"$(_color_primary \"${_arch}\")\"\n      return 0\n    fi\n\n    local _deb_path=\"${HOME}/${_deb_filename}\"\n\n    # handle bat version prefix in URL\n    [[ \"${_name}\" == \"bat\"  ]] && _version=\"v${_version}\"\n\n    wget                    \\\n      -O \"${_deb_path}\"     \\\n      \"https://github.com/${_repo}/releases/download/${_version}/${_deb_filename}\"\n\n    if [[ -e \"${_deb_path}\" ]]\n    then\n      dpkg -i \"${_deb_path}\"\n      rm \"${_deb_path:?}\"\n    fi\n  }\n\n  # Usage: _env_max_version <version> <version>\n  _env_max_version() {\n    printf \"%s\\\\n\" \"${@:?}\"                           \\\n      | sort -r -t '.' -k 1,1 -k 2,2 -k 3,3 -k 4,4 -g \\\n      | head -n 1\n  }\n\n  local _subcommand=\"${1:-}\"\n\n  case \"${_subcommand}\" in\n    install)\n      if ! _contains \"${2:-}\" \"--ace\" \"--mathjax\"\n      then # skip to next section if `_env install --ace`\n        # packages: curl pandoc pygments w3m ripgrep tig\n        if [[ -x \"$(command -v apk)\"  ]]\n        then\n          _completions install --download\n\n          apk add --no-cache  \\\n            bash-completion   \\\n            curl              \\\n            pandoc            \\\n            py3-pygments      \\\n            ripgrep           \\\n            tig               \\\n            w3m\n        elif [[ -x \"$(command -v apt-get)\" ]]\n        then\n          _completions install --download\n\n          local _apt_packages=()\n          local _deb_packages=()\n          local _dependencies=(\n            bash-completion\n            bat\n            curl\n            ncat\n            pandoc\n            python3-pygments\n            ripgrep\n            socat\n            tig\n            w3m\n          )\n\n          [[ \"$(cat /etc/os-release)\" =~ (ubuntu|debian) ]] || return 1\n\n          apt-get update\n\n          local __package=\n          for   __package in \"${_dependencies[@]}\"\n          do\n            if ! _command_exists \"${__package}\" &&\n               apt-cache show \"${__package}\" | grep -q \"Package: ${__package}\"\n            then\n              _apt_packages+=(\"${__package}\")\n            fi\n          done\n\n          apt-get install -y \"${_apt_packages[@]:-}\"\n\n          # force install of bat\n          apt-get install -y bat -o Dpkg::Options::=\"--force-overwrite\"\n\n          if ! _command_exists \"rg\"\n          then\n            _deb_packages+=(\"ripgrep 12.1.1 BurntSushi/ripgrep\")\n          fi\n\n          if ! _command_exists \"bat\" || ! _command_exists \"batcat\"\n          then\n            _deb_packages+=(\"bat 0.22.1 sharkdp/bat\")\n          fi\n\n          local __package=\n          for   __package in \"${_deb_packages[@]}\"\n          do\n            local _arguments=()\n            IFS=' ' read -ra _arguments <<< \"${__package:-}\"\n\n            _env_install_deb \"${_arguments[@]:-}\"\n          done\n        elif [[ -x \"$(command -v dnf)\"    ]]\n        then\n          : # TODO: dnf install\n          _completions install --download\n        elif [[ -x \"$(command -v zypper)\" ]]\n        then\n          : # TODO: zypper install\n          _completions install --download\n        else\n          _completions install --download\n        fi\n      fi\n\n      # install assets\n\n      case \"${2:-}\" in\n        --ace)\n          if [[ ! -e \"${NB_DIR}/.assets/ace-builds\" ]]\n          then\n            if [[ ! -e \"${NB_DIR}/.assets\"          ]]\n            then\n              mkdir \"${NB_DIR}/.assets\"\n            fi\n\n            cd \"${NB_DIR}/.assets\" ||\n              _exit_1 printf \"Unable to \\`cd\\` to %s\\\\n\" \"${NB_DIR}/.assets\"\n\n            git clone https://github.com/ajaxorg/ace-builds.git\n          fi\n          ;;\n        --mathjax)\n          if [[ ! -e \"${NB_DIR}/.assets/MathJax\"    ]]\n          then\n            if [[ ! -e \"${NB_DIR}/.assets\"          ]]\n            then\n              mkdir \"${NB_DIR}/.assets\"\n            fi\n\n            cd \"${NB_DIR}/.assets\" ||\n              _exit_1 printf \"Unable to \\`cd\\` to %s\\\\n\" \"${NB_DIR}/.assets\"\n\n            git clone https://github.com/mathjax/MathJax.git\n          fi\n          ;;\n      esac\n      ;;\n    uninstall)\n      _completions uninstall\n      ;;\n    *)\n      printf \"_ME=%s\\\\n\"                  \"${_ME:-}\"\n      printf \"_MY_PATH=%s\\\\n\"             \"${_MY_PATH:-}\"\n      printf \"NB_NOTEBOOK_PATH=%s\\\\n\"     \"${NB_NOTEBOOK_PATH:-}\"\n      printf \"NB_BROWSER=%s\\\\n\"           \"${NB_BROWSER:-}\"\n      printf \"NB_EDITOR=%s\\\\n\"            \"${NB_EDITOR:-}\"\n      printf \"PAGER=%s\\\\n\"                \"${PAGER:-}\"\n      printf \"NB_AUTO_SYNC=%s\\\\n\"         \"${NB_AUTO_SYNC:-}\"\n      printf \"NB_DIR=%s\\\\n\"               \"${NB_DIR:-}\"\n      printf \"NB_DEFAULT_EXTENSION=%s\\\\n\" \"${NB_DEFAULT_EXTENSION:-}\"\n      printf \"NB_ENCRYPTION_TOOL=%s\\\\n\"   \"${NB_ENCRYPTION_TOOL:-}\"\n      printf \"NB_COLOR_PRIMARY=%s\\\\n\"     \"${NB_COLOR_PRIMARY:-}\"\n      printf \"NB_COLOR_SECONDARY=%s\\\\n\"   \"${NB_COLOR_SECONDARY:-}\"\n      printf \"NB_COLOR_THEME=%s\\\\n\"       \"${NB_COLOR_THEME:-}\"\n      printf \"NB_FOOTER=%s\\\\n\"            \"${NB_FOOTER:-}\"\n      printf \"NB_HEADER=%s\\\\n\"            \"${NB_HEADER:-}\"\n      printf \"NB_LIMIT=%s\\\\n\"             \"${NB_LIMIT:-}\"\n      printf \"NB_SYNTAX_THEME=%s\\\\n\"      \"${NB_SYNTAX_THEME:-}\"\n      printf \"NBRC_PATH=%s\\\\n\"            \"${NBRC_PATH:-}\"\n      printf \"ack:        %s\\\\n\" \"$(command -v ack)\"\n      printf \"ag:         %s\\\\n\" \"$(command -v ag)\"\n      printf \"bat:        %s\\\\n\" \"$(command -v bat)\"\n      printf \"code:       %s\\\\n\" \"$(command -v code)\"\n      printf \"curl:       %s\\\\n\" \"$(command -v curl)\"\n      printf \"emacs:      %s\\\\n\" \"$(command -v emacs)\"\n      printf \"git:        %s\\\\n\" \"$(command -v git)\"\n      printf \"gvim:       %s\\\\n\" \"$(command -v gvim)\"\n      printf \"gpg:        %s\\\\n\" \"$(command -v gpg)\"\n      printf \"highlight:  %s\\\\n\" \"$(command -v highlight)\"\n      printf \"less:       %s\\\\n\" \"$(command -v less)\"\n      printf \"lynx:       %s\\\\n\" \"$(command -v lynx)\"\n      printf \"macdown:    %s\\\\n\" \"$(command -v macdown)\"\n      printf \"mate:       %s\\\\n\" \"$(command -v mate)\"\n      printf \"mvim:       %s\\\\n\" \"$(command -v mvim)\"\n      printf \"nano:       %s\\\\n\" \"$(command -v nano)\"\n      printf \"nvim:       %s\\\\n\" \"$(command -v nvim)\"\n      printf \"openssl:    %s\\\\n\" \"$(command -v openssl)\"\n      printf \"pandoc:     %s\\\\n\" \"$(command -v pandoc)\"\n      printf \"pygments:   %s\\\\n\" \"$(command -v pygmentize)\"\n      printf \"readable:   %s\\\\n\" \"$(command -v readable)\"\n      printf \"rg:         %s\\\\n\" \"$(command -v rg)\"\n      printf \"subl:       %s\\\\n\" \"$(command -v subl)\"\n      printf \"tig:        %s\\\\n\" \"$(command -v tig)\"\n      printf \"w3m:        %s\\\\n\" \"$(command -v w3m)\"\n      printf \"vim:        %s\\\\n\" \"$(command -v vim)\"\n      printf \"bash --version: %s\\\\n\"  \"$(bash --version | head -1)\"\n      printf \"uname -a: %s\\\\n\"        \"$(uname -a)\"\n      ;;\n  esac\n}\n\n# export ############################################################### export\n\n_describe_export() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} export ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <path> [-f | --force] [<pandoc options>...]\n  ${_ME} export notebook <name> [<path>]\n  ${_ME} export pandoc ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            [<pandoc options>...]\n\n$(_color_primary \"Options\"):\n  -f, --force   Skip the confirmation prompt when overwriting an existing file.\n\n$(_color_primary \"Subcommands\"):\n  (default)     Export a file to <path>. If <path> has a different extension\n                than the source note, convert the note using \\`pandoc\\`.\n  notebook      Export the notebook <name> to the current directory or <path>.\n                Alias for \\`${_ME} notebooks export\\`.\n  pandoc        Export the file to standard output or a file using \\`pandoc\\`.\n                \\`export pandoc\\` prints to standard output by default.\n\n$(_color_primary \"Description\"):\n  Export a file or notebook.\n\n  If Pandoc [1] is available, convert the note from its current format\n  to the format of the output file as indicated by the file extension\n  in <path>. Any additional arguments are passed directly to Pandoc.\n  See the Pandoc help information for available options.\n\n    1. https://pandoc.org/\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#%EF%B8%8F-import--export\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help import\n\n$(_color_primary \"Examples\"):\n  # Export an Emacs Org mode note\n  ${_ME} export example.org /path/to/example.org\n\n  # Export a Markdown note to HTML and print to standard output\n  ${_ME} export pandoc example.md --from=markdown_strict --to=html\n\n  # Export a Markdown note to a .docx Microsoft Office Word document\n  ${_ME} export example.md /path/to/example.docx\n\n  # Export note 12 in the \"sample\" notebook to HTML\n  ${_ME} export sample:12 /path/to/example.html\nHEREDOC\n}\n_export() {\n  local _args=()\n  local _force=0\n  local _notebook_export=0\n  local _pandoc_only=0\n  local _selector=\n  local _target_path=\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      -f|--force|--skip*|-y|--yes)\n        _force=1\n        ;;\n      notebook*)\n        _notebook_export=1\n        ;;\n      pandoc)\n        _pandoc_only=1\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\"   ]]\n        then\n          _selector=\"${__arg}\"\n        elif ! ((_pandoc_only)) &&  [[ -z \"${_target_path:-}\" ]]\n        then\n          _target_path=\"${__arg}\"\n        else\n          _args+=(\"${__arg}\")\n        fi\n        ;;\n    esac\n  done\n\n  if [[ -z \"${_selector:-}\" ]]\n  then\n    _exit_1 _help \"export\"\n  fi\n\n  if ((_notebook_export))\n  then\n    _notebooks export \"${_selector:-}\" \"${_target_path:-}\"\n\n    return 0\n  fi\n\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  local _relative_path=\n  _relative_path=\"$(_show \"${_selector}\" --relative-path)\"\n\n  local _basename=\"${_relative_path##*\\/}\"\n\n  if [[ -z \"${_relative_path:-}\"                      ]] ||\n     [[ ! -e \"${_notebook_path}/${_relative_path:-}\"  ]]\n  then\n    _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector}\")\"\n  fi\n\n  if ((_pandoc_only))\n  then\n    if _command_exists \"pandoc\"\n    then\n      if [[ -n \"${_args[*]:-}\"    ]]\n      then\n        _pandoc \"${_notebook_path}/${_relative_path}\" \"${_args[@]:-}\"\n      else\n        _pandoc \"${_notebook_path}/${_relative_path}\"\n      fi\n    else\n      _exit_1 printf \"Pandoc required. https://pandoc.org/\\\\n\"\n    fi\n  else\n    if [[ -z \"${_target_path:-}\"  ]]\n    then\n      _exit_1 _help \"export\"\n    fi\n\n    if [[ -d \"${_target_path:-}\"  ]]\n    then\n      _target_path=\"${_target_path%/}/${_basename}\"\n    fi\n\n    if [[ -e \"${_target_path:-}\"  ]]\n    then\n      if ! ((_force))\n      then\n        printf \"File exists at %s\\\\n\" \"$(_color_primary \"${_target_path}\")\"\n\n        while true\n        do\n          local __yn=\n          IFS='' read -r -e -d $'\\n' -p \\\n\"$(_color_primary \"Overwrite existing file?\") $(_color_brackets \"y/N\") \" __yn\n\n          case \"${__yn}\" in\n            [Yy]*)\n              break\n              ;;\n            *)\n              printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n              exit 0\n              ;;\n          esac\n        done\n      fi\n    fi\n\n    local _source_file_type=\"${_basename##*.}\"\n    local _target_file_type=\"${_target_path##*.}\"\n\n    if _command_exists \"pandoc\"   &&\n       [[ \"${_source_file_type}\"  != \"${_target_file_type}\" ]]\n    then\n      if [[ -n \"${_args[*]:-}\"    ]]\n      then\n        _pandoc                                   \\\n          \"${_notebook_path}/${_relative_path}\"   \\\n          -o \"${_target_path}\"                    \\\n          --standalone                            \\\n          \"${_args[@]:-}\"\n      else\n        _pandoc                                   \\\n          \"${_notebook_path}/${_relative_path}\"   \\\n          -o \"${_target_path}\"                    \\\n          --standalone\n      fi\n    else\n      cp \"${_notebook_path}/${_relative_path}\" \"${_target_path}\"\n    fi &&\n      printf \"Exported: %s\\\\n\"  \"$(_show \"${_relative_path}\" --info-line)\"\n      printf \"To:        %s\\\\n\" \"$(_color_primary \"${_target_path}\")\"\n  fi\n}\n\n# history ############################################################# history\n\n_describe_history() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} history [<notebook>:][<folder-path>/][<id> | <filename> | <title>]\n\n$(_color_primary \"Description\"):\n  Display notebook history using \\`tig\\` [1] (if available) or \\`git log\\`.\n  When a note is specified, the history for that note is displayed.\n\n    1. https://github.com/jonas/tig\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-revision-history\n  ${_README_URL}#-git-sync\n\n$(_color_primary \"See Also\"):\n  ${_ME} help git\n  ${_ME} help remote\n  ${_ME} help status\n  ${_ME} help sync\n\n$(_color_primary \"Examples\"):\n  ${_ME} history\n  ${_ME} history example.md\n  ${_ME} 3 history\n  ${_ME} example:history\n  ${_ME} history example:\n  ${_ME} example:history 12\n  ${_ME} history example:12\n  ${_ME} example:12 history\nHEREDOC\n}\n_history() {\n  local _basename=\n  local _force_git_log=0\n  local _notebook_path=\n  local _selector=\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      --*log*|--*git*)\n        _force_git_log=1\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\" ]]\n        then\n          _selector=\"${__arg}\"\n        fi\n        ;;\n    esac\n  done\n\n  if [[ -n \"${_selector:-}\"       ]]\n  then\n    if [[  \"${_selector}\" =~ :$   ]] ||\n       ! _relative_path=\"$(_show \"${_selector}\" --relative-path 2>/dev/null)\"\n    then\n      if ! _notebook_path=\"$(_notebooks show \"${_selector}\" --path 2>/dev/null)\"\n      then\n        _exit_1 printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector:-}\")\"\n      fi\n    fi\n  fi\n\n  if [[ -z \"${_notebook_path:-}\"  ]]\n  then\n    _notebook_path=\"$(_notebooks current --path)\"\n  fi\n\n  cd \"${_notebook_path}\" || _exit_1 printf \"_history() \\`cd\\` failed.\\\\n\"\n\n  local _log_command=\"git log\"\n\n  if _command_exists \"tig\" && ! ((_force_git_log))\n  then\n    _log_command=\"tig --all\"\n  fi\n\n  if [[ -n \"${_relative_path:-}\"  ]] && [[ -e \"${_notebook_path}/${_relative_path}\" ]]\n  then\n    eval \"${_log_command} -- \\\"${_relative_path}\\\"\"\n  else\n    eval \"${_log_command}\"\n  fi\n}\n\n# import ############################################################### import\n\n_describe_import() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} import [copy | download | move] (<path>... | <url>) [--convert]\n            [<notebook>:][<folder-path>/][<filename>]\n  ${_ME} import notebook <path> [<name>]\n\n$(_color_primary \"Options\"):\n  --convert  Convert HTML content to Markdown.\n\n$(_color_primary \"Subcommands\"):\n  (default) Copy or download the file(s) at <path> or <url>.\n  copy      Copy the file(s) at <path> into the current notebook.\n  download  Download the file at <url> into the current notebook.\n  move      Move the file(s) at <path> into the current notebook.\n  notebook  Import the local notebook at <path> to make it global.\n\n$(_color_primary \"Description\"):\n  Copy, move, or download files into the current notebook or import\n  a local notebook to make it global.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#%EF%B8%8F-import--export\n\n$(_color_primary \"See Also\"):\n  ${_ME} help add\n  ${_ME} help export\n\n$(_color_primary \"Examples\"):\n  ${_ME} import ~/Pictures/example.png\n  ${_ME} import ~/Documents/example.docx\n  ${_ME} import https://example.com/example.pdf\n  ${_ME} example:import https://example.com/example.jpg\n  ${_ME} import ./*\n  ${_ME} import ./*.md\n  ${_ME} import ~/Pictures/example.png example-notebook:\n  ${_ME} import ~/Documents/example.docx example-folder/\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} i\nHEREDOC\n}\n_import() {\n  # _import_create_bookmark()\n  #\n  # Usage:\n  #   _import_create_bookmark <target-selector> <line>\n  _import_create_bookmark() {\n    local _line=\"${2:?}\"\n    local _target_selector=\"${1:-}\"\n\n    local _bookmark_options=(--skip-folder-prompt)\n\n    local _add_timestamp=\n    _add_timestamp=\"$(\n      sed -E -e 's/.*ADD_DATE=\\\"([[:digit:]]+)\\\".*/\\1/g'  <<< \"${_line}\"\n    )\"\n\n    local _target_filename=\n    _target_filename=\"$(\n      if hash \"gdate\" 2>/dev/null\n      then # GNU prefixed\n        gdate -u -d \"@${_add_timestamp}\"  \"+%Y%m%d%H%M%S\"\n      elif date --version >/dev/null 2>&1\n      then # GNU\n        date  -u -d \"@${_add_timestamp}\"  \"+%Y%m%d%H%M%S\"\n      else # BSD\n        date  -u -r \"${_add_timestamp}\"   \"+%Y%m%d%H%M%S\"\n      fi\n    )\"\n\n    if [[ -n \"${_target_filename:-}\"  ]]\n    then\n      _bookmark_options+=(--filename \"${_target_filename}\")\n    fi\n\n    local _tag_list=\n    _tag_list=\"$(\n      grep -q 'TAGS=\\\"'                             <<< \"${_line}\" &&\n        sed -E -e 's/.*TAGS=\\\"([^\\\"]+)\\\".*/\\1/g'    <<< \"${_line}\" || :\n    )\"\n\n    if [[ -n \"${_tag_list:-}\"         ]]\n    then\n      _bookmark_options+=(--tags \"${_tag_list}\")\n    fi\n\n    local _title=\n    _title=\"$(\n      sed -E -e 's/.*>(.*)<\\/A>/\\1/g'               <<< \"${_line}\"\n    )\"\n\n    if [[ -n \"${_title:-}\"            ]]\n    then\n      _bookmark_options+=(--title \"${_title}\")\n    fi\n\n    local _url=\n    _url=\"$(\n      sed -E -e 's/.*HREF=\\\"(.*)\\\" ADD_DATE.*/\\1/g' <<< \"${_line}\"\n    )\"\n\n    _notebooks select \"${_target_selector%%:*}\"\n\n    _bookmark                         \\\n      \"${_target_selector}\"           \\\n      \"${_url}\"                       \\\n      \"${_bookmark_options[@]}\"\n  }\n\n  # _import_init_target_relative_path()\n  #\n  # Usage:\n  #   _import_init_target_relative_path <notebook-path> <source-basename> <selector-path>\n  _import_init_target_relative_path() {\n    local _notebook_path=\"${1:?}\"\n    local _source_basename=\"${2:?}\"\n    local _selector_path=\"${3:-}\"\n    local _target_folder_relative_path=\n    local _target_relative_path=\n\n    if [[ -n \"${_selector_path:-}\"          ]]\n    then\n      if [[ \"${_selector_path}\" =~ /$                 ]] ||\n         [[ -d \"${_notebook_path}/${_selector_path}\"  ]]\n      then\n        if [[ ! \"${_selector_path}\" =~ /$   ]]\n        then\n          _selector_path=\"${_selector_path}/\"\n        fi\n\n        _target_folder_relative_path=\"$(\n          _selector_resolve_folders \"${_selector_path}\" --build || :\n        )\"\n\n        _target_relative_path=\"${_target_folder_relative_path}/${_source_basename}\"\n      elif [[ \"${_selector_path}\" =~ /      ]]\n      then\n        _target_folder_relative_path=\"$(\n          _selector_resolve_folders \"${_selector_path}\" --build || :\n        )\"\n\n        _target_relative_path=\"${_target_folder_relative_path}/${_selector_path##*\\/}\"\n      else\n        _target_relative_path=\"${_selector_path}\"\n      fi\n    else\n      _target_relative_path=\"${_source_basename}\"\n    fi\n\n    if [[ \"${_target_relative_path:-}\" =~ / ]]\n    then\n      _target_folder_relative_path=\"${_target_relative_path%\\/*}\"\n\n      if [[ ! -e \"${_notebook_path}/${_target_folder_relative_path}\" ]]\n      then\n        mkdir -p \"${_notebook_path}/${_target_folder_relative_path}\"\n      fi\n    fi\n\n    printf \"%s\\\\n\" \"$(\n      _notebooks show \"${_notebook_path}\" --filename \"${_target_relative_path}\"\n    )\"\n  }\n\n  # _import_validate_path()\n  #\n  # Usage:\n  #   _import_validate_path <path>\n  _import_validate_path() {\n    if [[     -z \"${1:-}\" ]]\n    then\n      _exit_1 _help \"import\"\n    elif [[ ! -e \"${1:-}\" ]]\n    then\n      _exit_1 printf \"File not found: %s\\\\n\" \"$(_color_primary \"${1:-}\")\"\n    fi\n  }\n\n  local _convert=0\n  local _paths=()\n  local _selector=\n  local _source_and_target_identifiers=()\n  local _subcommand=\n  local _target_notebook_name=\n  local _url=\n\n  local _local_notebook_path=\n  _local_notebook_path=\"$(_notebooks --local --path || :)\"\n\n  if _piped_input\n  then\n    IFS=$' \\n' _paths+=($(cat))\n  fi\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg}\" in\n      bookmark|bookmarks)\n        _subcommand=\"bookmarks\"\n        ;;\n      copy|download|move)\n        _subcommand=\"${__arg}\"\n        ;;\n      notebook*)\n        _subcommand=\"notebook\"\n        ;;\n      --convert)\n        _convert=1\n        ;;\n      *)\n        if _string_is_url \"${__arg:-}\"\n        then\n          _url=\"${__arg:-}\"\n          _subcommand=\"download\"\n        else\n          _source_and_target_identifiers+=(\"${__arg:-}\")\n        fi\n        ;;\n    esac\n  done\n\n  [[ -n \"${_subcommand:-}\" ]] || _subcommand=\"copy\"\n\n  local __source_and_target_identifier=\n  for   __source_and_target_identifier in \"${_source_and_target_identifiers[@]:-}\"\n  do\n    if [[    \"${_subcommand:-}\" == \"download\" ]] &&\n       [[ -n \"${_url:-}\"                      ]]\n    then\n      _selector=\"${__source_and_target_identifier:-}\"\n    elif [[ \"${_subcommand}\" == bookmarks                     ]] &&\n         [[ ! \"${__source_and_target_identifier}\" =~ ^/       ]] &&\n         [[ \"${__source_and_target_identifier}\"   =~ (:$|/$)  ]]\n    then\n      _selector=\"${__source_and_target_identifier}\"\n    elif [[ \"${_subcommand}\" =~ (^copy$|^move$)               ]] &&\n         [[ ! \"${__source_and_target_identifier}\" =~ ^/       ]] &&\n         {\n           [[ -n \"${_local_notebook_path}\"                    ]] ||\n           [[ ! -e \"${PWD}/${__source_and_target_identifier}\" ]]\n         }\n    then\n      _selector=\"${__source_and_target_identifier}\"\n    elif [[ \"${_subcommand}\" == \"notebook\"    ]] &&\n         [[ -n \"${_paths[*]:-}\"               ]]\n    then\n      _target_notebook_name=\"${__source_and_target_identifier:-}\"\n    else\n      _paths+=(\"${__source_and_target_identifier:-}\")\n    fi\n  done\n\n  local _notebook_name=\n  local _notebook_path=\n  local _selector_path=\n\n  if [[ \"${_selector:-}\" =~ :     ]]\n  then\n    _notebook_name=\"$(\n      _notebooks show \"${_selector%%:*}\" --name 2>/dev/null \\\n        || _notebooks current --name\n    )\"\n    _notebook_path=\"$(\n      _notebooks show \"${_selector%%:*}\" --path 2>/dev/null \\\n        || _notebooks current --path\n      )\"\n    _selector_path=\"${_selector#*:}\"\n  else\n    _notebook_name=\"$(_notebooks current --name)\"\n    _notebook_path=\"$(_notebooks current --path)\"\n    _selector_path=\"${_selector:-}\"\n  fi\n\n  local _source_basename=\n  local _target_basename=\n  local _target_folder_relative_path=\n  local _target_relative_path=\n\n  case \"${_subcommand}\" in\n    bookmarks)\n      local _target_folder_relative_path=\n      _target_folder_relative_path=\"$(\n        _selector_resolve_folders \"${_selector_path}\" --build || :\n      )\"\n\n      if [[ -n  \"${_target_folder_relative_path:-}\"     ]] &&\n         [[ !   \"${_target_folder_relative_path}\" =~ /$ ]]\n      then\n        _target_folder_relative_path=\"${_target_folder_relative_path}/\"\n      fi\n\n      local __path=\n      for   __path in \"${_paths[@]:-}\"\n      do\n        _import_validate_path \"${__path:-}\"\n\n        local               __line=\n        while IFS= read -r  __line || [[ -n \"${__line:-}\"           ]]\n        do\n          if [[ \"${__line}\" =~ ^[[:space:]]*\\<DT\\>                  ]]\n          then\n            if [[ \"${__line}\" =~ PERSONAL_TOOLBAR_FOLDER=\\\"true\\\"   ]]\n            then\n              _target_folder_relative_path=\"${_target_folder_relative_path}toolbar/\"\n            elif [[ \"${__line}\" =~ \\<DT\\>\\<A.*\\>.*\\</A\\>            ]]\n            then\n              _import_create_bookmark                               \\\n                \"${_notebook_name}:${_target_folder_relative_path}\" \\\n                \"${__line}\" || :\n            elif [[ \"${__line}\" =~ \\<DT\\>\\<H3.*\\>.*\\</H3\\>          ]]\n            then\n              local _parent_folder_name=\n              _parent_folder_name=\"$(\n                sed -E -e 's/.*>(.*)<\\/H3>.*/\\1/g' <<< \"${__line}\"\n              )\"\n\n              _target_folder_relative_path=\"${_target_folder_relative_path}${_parent_folder_name}/\"\n            fi\n          elif [[ \"${__line}\" =~ \\</DL\\>\\<p\\>                       ]]\n          then\n            _target_folder_relative_path=\"${_target_folder_relative_path%/}\"\n\n            if [[ \"${_target_folder_relative_path:-}\" =~ \\/         ]]\n            then\n              _target_folder_relative_path=\"${_target_folder_relative_path%/*}/\"\n            else\n              _target_folder_relative_path=\n            fi\n          fi\n        done < \"${__path}\"\n      done\n      ;;\n    copy)\n      local __path=\n      for   __path in \"${_paths[@]:-}\"\n      do\n        _import_validate_path \"${__path:-}\"\n\n        _source_basename=\"$(basename -- \"${__path}\")\"\n\n        _target_relative_path=\"$(\n          _import_init_target_relative_path \\\n            \"${_notebook_path}\"             \\\n            \"${_source_basename}\"           \\\n            \"${_selector_path}\"\n        )\"\n\n        if [[ \"${_target_relative_path}\" =~ / ]]\n        then\n          _target_folder_relative_path=\"${_target_relative_path%\\/*}\"\n        fi\n\n        _target_basename=\"${_target_relative_path##*\\/}\"\n\n        if [[ -d \"${__path}\"      ]]\n        then\n          cp -R \"${__path}\" \"${_notebook_path}/${_target_relative_path}\"\n        else\n          cp \"${__path}\" \"${_notebook_path}/${_target_relative_path}\"\n        fi &&\n          _index add              \\\n            \"${_target_basename}\" \\\n            \"${_notebook_path}/${_target_folder_relative_path}\" &&\n              _git checkpoint \"${_notebook_path}\" \"[${_ME}] Import: ${_target_relative_path}\"\n\n        printf \"Imported %s from %s\\\\n\"                                       \\\n          \"$(_show \"${_notebook_path}/${_target_relative_path}\" --info-line)\" \\\n          \"$(_color_primary \"${__path}\")\"\n      done\n      ;;\n    download)\n      _source_basename=\"$(basename -- \"${_url}\" | tr -d '[:space:]')\"\n\n      if [[ \"${_url}\" =~ \\/$ ]]\n      then\n        _source_basename=\"${_source_basename}.html\"\n      fi\n\n      _target_relative_path=\"$(\n        _import_init_target_relative_path \\\n          \"${_notebook_path}\"             \\\n          \"${_source_basename}\"           \\\n          \"${_selector_path}\"\n      )\"\n\n      if [[ \"${_target_relative_path}\" =~ / ]]\n      then\n        _target_folder_relative_path=\"${_target_relative_path%\\/*}\"\n      fi\n\n      _target_basename=\"${_target_relative_path##*\\/}\"\n\n      if ((_convert))\n      then\n        if ! _download_from \"${_url}\" \\\n            | _pandoc                 \\\n              --standard-input        \\\n              --from html             \\\n              --to markdown           \\\n              -o \"${_notebook_path}/${_target_relative_path}\"\n        then\n          _exit_1 printf \"Unable to download and convert: %s\\\\n\" \"${_url}\"\n        fi\n      else\n        if ! _download_from \"${_url}\" \"${_notebook_path}/${_target_relative_path}\"\n        then\n          _exit_1 printf \"Unable to download: %s\\\\n\" \"${_url}\"\n        fi\n      fi &&\n        _index add              \\\n          \"${_target_basename}\" \\\n          \"${_notebook_path}/${_target_folder_relative_path:-}\" &&\n            _git checkpoint \"${_notebook_path}\" \"\\\n[${_ME}] Import: ${_target_relative_path}\n\nSource:\n${_url}\n\"\n      printf \"Imported %s from %s\\\\n\"                     \\\n        \"$(_show \"${_target_relative_path}\" --info-line)\" \\\n        \"$(_color_primary \"${_url}\")\"\n      ;;\n    move)\n      local __path=\n      for   __path in \"${_paths[@]:-}\"\n      do\n        _import_validate_path \"${__path:-}\"\n\n        _source_basename=\"$(basename -- \"${__path}\")\"\n\n        _target_relative_path=\"$(\n          _import_init_target_relative_path   \\\n            \"${_notebook_path}\"               \\\n            \"${_source_basename}\"             \\\n            \"${_selector_path}\"\n        )\"\n\n        if [[ \"${_target_relative_path}\" =~ / ]]\n        then\n          _target_folder_relative_path=\"${_target_relative_path%\\/*}\"\n        fi\n\n        _target_basename=\"${_target_relative_path##*\\/}\"\n\n        mv \"${__path}\" \"${_notebook_path}/${_target_relative_path}\" &&\n          _index add              \\\n            \"${_target_basename}\" \\\n            \"${_notebook_path}/${_target_folder_relative_path:-}\"   &&\n              _git checkpoint \"${_notebook_path}\" \"[${_ME}] Import: ${_target_relative_path}\"\n\n        printf \"Imported %s from %s\\\\n\"                     \\\n          \"$(_show \"${_target_relative_path}\" --info-line)\" \\\n          \"$(_color_primary \"${__path}\")\"\n      done\n      ;;\n    notebook)\n      _notebooks import \"${_paths[0]:-}\" \"${_target_notebook_name:-}\"\n\n      return 0\n      ;;\n    *)\n      _exit_1 _help \"import\"\n      ;;\n  esac\n}\n_alias_subcommand \"import\" \"i\"\n\n# move ################################################################### move\n\n_describe_move() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} move ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          ([<notebook>:][<path>] | --reset | --to-bookmark | --to-note |\n          --to-title | --to-todo) [-f | --force]\n\n$(_color_primary \"Options\"):\n  -f, --force     Skip the confirmation prompt.\n  --reset         Reset the filename to the last modified timestamp.\n  --to-bookmark   Preserve the existing filename and replace the extension\n                  with \".bookmark.md\" to convert the note to a bookmark.\n  --to-note       Preserve the existing filename and replace the bookmark's\n                  \".bookmark.md\" extension with \".md\" to convert the bookmark\n                  to a Markdown note.\n  --to-title      Set the filename to the note title, lowercased with spaces\n                  and disallowed filename characters replaced with underscores.\n  --to-todo       Preserve the existing filename and replace the extension\n                  with \".todo.md\" to convert the note to a todo.\n\n$(_color_primary \"Description\"):\n  Move or rename a note. Move the note to <path> or change the file type.\n  When the file extension is omitted, the existing extension is used.\n  When only a file extension is specified, only the extension will be updated.\n\n  \\`move\\` and \\`rename\\` are aliases and can be used interchangeably.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-moving--renaming\n\n$(_color_primary \"See Also\"):\n  ${_ME} help copy\n  ${_ME} help delete\n  ${_ME} help edit\n\n$(_color_primary \"Examples\"):\n  # move \"example.md\" to \"sample.org\"\n  ${_ME} move example.md sample.org\n\n  # rename note 3 (\"example.md\") to \"New Name.md\"\n  ${_ME} rename 3 \"New Name\"\n\n  # rename \"example.bookmark.md\" to \"New Name.bookmark.md\"\n  ${_ME} move example.bookmark.md \"New Name\"\n\n  # rename note 3 (\"example.md\") to a bookmark named \"example.bookmark.md\"\n  ${_ME} rename 3 --to-bookmark\n\n  # move note 12 into \"Sample Folder\" in the \"demo\" notebook\n  ${_ME} move example:12 demo:Sample\\ Folder/\n\n  # rename note 12 in the \"example\" notebook to \"sample.md\"\n  ${_ME} rename example:12 \"sample.md\"\n\n  # change the file extension of note 5 to .org\n  ${_ME} rename 5 .org\n\n$(_color_primary \"Alias\"):\n  ${_ME} rename\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} mv\nHEREDOC\n}\n_move() {\n  local _force=0\n  local _reset=0\n  local _selectors=()\n  local _to_target_type=\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -f|--force|--skip*|-y|--yes)\n        _force=1\n        ;;\n      --reset)\n        _reset=1\n        ;;\n      --to*bookmark)\n        _to_target_type=\"bookmark\"\n        ;;\n      --to*note)\n        _to_target_type=\"note\"\n        ;;\n      --to*title)\n        _to_target_type=\"title\"\n        ;;\n      --to*todo)\n        _to_target_type=\"todo\"\n        ;;\n      --to)\n        _to_target_type=\"$(_option_get_value \"${1:-}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      -*)\n        :\n        ;;\n      *)\n        if [[ -n \"${1:-}\" ]]\n        then\n          _selectors+=(\"${1:-}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  local _source_selectors=()\n  local _target_selector=\n\n  if ((${#_selectors[@]}))\n  then\n    if ((${#_selectors[@]} - 1))\n    then\n      local i=\n      for ((i=0; i < ${#_selectors[@]} - 1; i++))\n      do\n        _source_selectors+=(\"${_selectors[i]}\")\n      done\n\n      _target_selector=\"${_selectors[${#_selectors[@]}-1]}\"\n    else\n      _source_selectors+=(\"${_selectors[@]}\")\n    fi\n  elif [[ -z \"${_to_target_type:-}\" ]] &&\n       [[ -z \"${_reset:-}\"          ]]\n  then\n    _exit_1 _help \"move\"\n  fi\n\n  if ! ((${#_source_selectors[@]}))\n  then\n    _exit_1 _help \"move\"\n  fi\n\n  local _source_selector=\n  for   _source_selector in \"${_source_selectors[@]:-}\"\n  do\n    local _source_relative_path=\n    _source_relative_path=\"$(_show \"${_source_selector}\" --relative-path)\"\n\n    if [[ -z \"${_source_relative_path:-}\"     ]]\n    then\n      _exit_1 _help \"move\"\n    fi\n\n    local _source_notebook_path=\n    if [[ \"${_source_selector:-}\" =~ :    ]]\n    then\n      _source_notebook_path=\"$(\n        _notebooks show \"${_source_selector}\" --path 2>/dev/null || :\n      )\"\n    fi\n\n    if [[ -z \"${_source_notebook_path:-}\"     ]]\n    then\n      _source_notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    local _source_basename=\"${_source_relative_path##*\\/}\"\n    local _source_folder_path=\"${_source_notebook_path}\"\n    local _source_path=\"${_source_notebook_path}/${_source_relative_path}\"\n\n    if [[ \"${_source_relative_path:-}\" =~ /   ]]\n    then\n      _source_folder_path=\"${_source_notebook_path}/${_source_relative_path%\\/*}\"\n    fi\n\n    local _source_file_name=\"${_source_basename%%.*}\"\n    local _source_file_type=\"${_source_basename#*.}\"\n\n    if [[ -z \"${_source_file_type:-}\"                     ]] ||\n       [[ \"${_source_file_type}\" == \"${_source_basename}\" ]]\n    then\n      _source_file_type=\n    fi\n\n    local _target_selector_relative_path=\n\n    if ((_reset))\n    then\n      local _target_file_name=\n      _target_file_name=\"$(\n        date -r \"${_source_notebook_path}/${_source_relative_path}\" \"+%Y%m%d%H%M%S\"\n      )\"\n\n      local _target_file_type=\"${_source_file_type:-\"${NB_DEFAULT_EXTENSION}\"}\"\n\n      _target_basename=\"${_target_file_name}.${_target_file_type}\"\n    elif [[ \"${_to_target_type:-}\" == \"title\" ]]\n    then\n      if ! _file_is_text \"${_source_path:-}\"\n      then\n        _exit_1 printf \"Must be a text file.\\\\n\"\n      fi\n\n      local _source_title=\n      _source_title=\"$(_get_content \"${_source_path:-}\" --title)\"\n\n      if [[ -z \"${_source_title:-}\"           ]]\n      then\n        _exit_1 printf \"Title not found.\\\\n\"\n      fi\n\n      local _sanitized_filename=\n      _sanitized_filename=\"$(_get_sanitized_filename \"${_source_title:-}\")\"\n\n      local _target_file_type=\"${_source_file_type:-\"${NB_DEFAULT_EXTENSION}\"}\"\n\n      _target_basename=\"${_sanitized_filename}.${_target_file_type}\"\n    elif [[ -n \"${_target_selector:-}\"        ]] ||\n         [[ -n \"${_to_target_type:-}\"         ]]\n    then\n      _target_selector_relative_path=\"${_target_selector#*:}\"\n\n      local _target_basename=\"${_target_selector_relative_path##*\\/}\"\n      local _target_file_name=\"${_target_basename%%.*}\"\n      local _target_file_type=\"${_target_basename#*.}\"\n\n      if [[   -n \"${_target_file_type:-}\"                         ]] &&\n         [[   -z \"${_target_file_name:-}\"                         ]]\n      then # only file extension in target\n        _target_selector_relative_path=\"\"\n      elif [[ -z \"${_target_file_type:-}\"                         ]] ||\n           [[    \"${_target_file_type}\" == \"${_target_basename}\"  ]]\n      then # no file extension in target\n        if [[ -n \"${_source_file_type}\"                           ]]\n        then\n          _target_file_type=\"${_source_file_type}\"\n        else\n          _target_file_type=\n        fi\n      fi\n\n      case \"${_to_target_type:-}\" in\n        '')       :                                               ;;\n        bookmark) _target_file_type=\"bookmark.md\"                 ;;\n        note)     _target_file_type=\"${NB_DEFAULT_EXTENSION:-md}\" ;;\n        todo)     _target_file_type=\"todo.md\"                     ;;\n        *)        _target_file_type=\"${_to_target_type#.}\"        ;;\n      esac\n\n      if [[ -z \"${_target_file_name:-}\" ]]\n      then\n        _target_file_name=\"${_source_file_name}\"\n      fi\n\n      if [[ -n \"${_target_file_type:-}\" ]]\n      then\n        _target_basename=\"${_target_file_name}.${_target_file_type}\"\n      else\n        _target_basename=\"${_target_file_name}\"\n      fi\n    else\n      _exit_1 _help \"move\"\n    fi\n\n    if [[ -z  \"${_target_selector_relative_path:-}\" ]]\n    then\n      if [[   \"${_source_relative_path}\" =~ /       ]]\n      then\n        _target_selector_relative_path=\"${_source_relative_path%/*}/${_target_basename}\"\n      else\n        _target_selector_relative_path=\"${_target_basename}\"\n      fi\n    fi\n\n    local _target_info=\n    local _target_notebook_path=\n\n    if [[       \"${_target_selector:-}\" =~ :  ]]\n    then\n      _target_notebook_path=\"$(\n        _notebooks show \"${_target_selector:-}\" --path 2>/dev/null || :\n      )\"\n\n      if [[ -z  \"${_target_notebook_path:-}\"  ]]\n      then\n        _exit_1 printf \"Target notebook not found: %s\\\\n\" \"${_target_selector%%:*}\"\n      fi\n    else\n      _target_notebook_path=\"$(_notebooks current --path)\"\n    fi\n\n    if _notebooks current --selected ||\n       [[ \"${_target_notebook_path}\" != \"$(_notebooks current --path)\" ]]\n    then\n      _target_info=\"$(_notebooks show \"${_target_notebook_path}\" --name --no-color):\"\n    fi\n\n    local _target_folder_relative_path=\n\n    if [[ -n \"${_target_selector_relative_path:-}\"  ]]\n    then\n      _target_folder_relative_path=\"$(\n        _selector_resolve_folders \"${_target_selector_relative_path}\" --build || :\n      )\"\n\n      if [[ -z \"${_target_folder_relative_path:-}\"  ]]\n      then\n        _target_folder_relative_path=\"${_target_selector_relative_path%\\/*}\"\n      fi\n    fi\n\n    local _target_folder_path=\n    local _target_relative_path=\n\n    if [[   \"${_target_selector_relative_path:-}\" =~ /            ]]\n    then\n      _target_folder_path=\"${_target_notebook_path}/${_target_folder_relative_path}\"\n      _target_relative_path=\"${_target_folder_relative_path}/${_target_basename}\"\n    else\n      _target_folder_path=\"${_target_notebook_path}\"\n      _target_relative_path=\"${_target_basename}\"\n    fi\n\n    _target_info+=\"${_target_relative_path}\"\n\n    if [[ -e  \"${_target_notebook_path}/${_target_relative_path}\" ]]\n    then\n      _exit_1 printf \"File already exists: %s\\\\n\"         \\\n        \"$(_color_primary \"${_target_info}\")\"\n    fi\n\n    if ! ((_force))\n    then\n      printf \"Moving:   %s\\\\n\" \"$(_show \"${_source_path}\" --info-line)\"\n      printf \"To:       %s\\\\n\" \"$(_color_primary \"${_target_info}\")\"\n\n      while true\n      do\n        local __yn=\n        IFS='' read -r -e -d $'\\n' -p                     \\\n\"$(_color_primary \"Proceed?\")  $(_color_brackets \"y/N\") \" __yn\n\n        case \"${__yn}\" in\n          [Yy]*)\n            break\n            ;;\n          *)\n            printf \"Exiting%s\\\\n\" \"$(_color_muted \"...\")\"\n\n            exit 0\n            ;;\n        esac\n      done\n    fi\n\n    if [[ ! -e \"${_target_folder_path}\" ]]\n    then\n      mkdir -p \"${_target_folder_path}\" ||\n        _exit_1 printf \"Unable to create folder: %s\\\\n\"   \\\n          \"$(_color_primary \"${_target_folder_path}\")\"\n    fi\n\n    mv \"${_source_path}\" \"${_target_notebook_path}/${_target_relative_path}\" ||\n      _exit_1 printf \"Move failed.\\\\n\"\n\n    if [[ -e \"${_source_folder_path:-}/.pindex\"           ]]  &&\n       grep -q  \"^${_source_basename}$\"     \"${_source_folder_path:-}/.pindex\"\n    then\n      if [[ \"${_source_folder_path}\" == \"${_target_folder_path}\"    ]]\n      then\n        _sed_i -e                                         \\\n          \"s/^${_source_basename}$/${_target_basename}/\"  \\\n          \"${_source_folder_path:-}/.pindex\"\n      else\n        _sed_i -e                                         \\\n          \"/^${_source_basename}$/d\"                      \\\n          \"${_source_folder_path:-}/.pindex\"\n\n        if [[ ! -e \"${_target_folder_path:-}/.pindex\"     ]]\n        then\n          touch \"${_target_folder_path:-}/.pindex\"\n        fi\n\n        printf \"%s\\\\n\" \"${_target_basename}\" >> \"${_target_folder_path:-}/.pindex\"\n      fi\n    fi\n\n    if [[ \"${_source_notebook_path}\" == \"${_target_notebook_path}\"  ]]\n    then\n      if [[ \"${_source_folder_path}\" == \"${_target_folder_path}\"    ]]\n      then\n        _index update               \\\n          \"${_source_basename}\"     \\\n          \"${_target_basename}\"     \\\n          \"${_source_folder_path}\"\n      else\n        _index delete \"${_source_basename}\" \"${_source_folder_path}\"  &&\n          _index add  \"${_target_basename}\" \"${_target_folder_path}\"\n      fi || _exit_1 printf \"Move index update failed.\\\\n\"\n\n      _git checkpoint \"${_target_notebook_path}\"  \\\n        \"[${_ME}] Move: ${_source_relative_path} to ${_target_relative_path}\"\n    else\n      _index delete \"${_source_basename}\" \"${_source_folder_path}\"\n\n      _git checkpoint \"${_source_notebook_path}\"  \\\n        \"[${_ME}] Delete: ${_source_relative_path}\"\n\n      _index add \"${_target_basename}\" \"${_target_folder_path}\"\n\n      _git checkpoint \"${_target_notebook_path}\"  \\\n        \"[${_ME}] Add: ${_target_relative_path}\"\n    fi\n\n    printf \"Moved to: %s\\\\n\" \"$(\n      _show \"${_target_notebook_path}/${_target_relative_path}\" --info-line\n    )\"\n  done\n}\n_alias_subcommand \"move\" \"mv\"\n_alias_subcommand \"move\" \"rename\"\n\n# open ################################################################### open\n\n_describe_open() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} open ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\n$(_color_primary \"Description\"):\n  Open an item or notebook. When the item is a bookmark, open the bookmarked\n  page in your system's primary web browser. When the item is in a text format\n  or any other file type, \\`open\\` is the equivalent of \\`edit\\`. \\`open\\`\n  with a notebook opens the notebook folder in the system's file browser.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#viewing-bookmarks\n\n$(_color_primary \"See also\"):\n  ${_ME} help bookmark\n  ${_ME} help browse\n  ${_ME} help peek\n  ${_ME} help show\n\n$(_color_primary \"Examples\"):\n  ${_ME} open 3\n  ${_ME} open example.bookmark.md\n  ${_ME} 3 open\n  ${_ME} example:open 12\n  ${_ME} open example:12\n  ${_ME} example:12 open\n  ${_ME} o 3\n  ${_ME} 3 o\n  ${_ME} o example:12\n  ${_ME} example:12 o\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} o\nHEREDOC\n}\n_open() {\n  if [[ -z \"${1:-}\" ]]\n  then\n    _exit_1 _help \"open\"\n  fi\n\n  _bookmark open \"${@:-}\"\n}\n_alias_subcommand \"open\" \"o\"\n\n# peek ################################################################### peek\n\n_describe_peek() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} peek ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\n$(_color_primary \"Description\"):\n  View an item or notebook in the terminal. When the item is a bookmark, view\n  the bookmarked page in your terminal web browser. When the note is in a text\n  format or any other file type, \\`peek\\` is the equivalent of \\`show\\`. When\n  used with a notebook, \\`peek\\` opens the notebook folder first tool found in\n  the following list: \\`ranger\\` [1], \\`mc\\` [2], \\`vifm\\` [3], \\`joshuto\\` [4],\n  \\`lsd\\` [5] \\`eza\\` [6], or \\`ls\\`.\n\n    1. https://ranger.github.io/\n    2. https://en.wikipedia.org/wiki/Midnight_Commander\n    3. https://vifm.info/\n    4. https://github.com/kamiyaa/joshuto\n    5. https://github.com/lsd-rs/lsd\n    6. https://github.com/eza-community/eza\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#viewing-bookmarks\n\n$(_color_primary \"See also\"):\n  ${_ME} help bookmark\n  ${_ME} help browse\n  ${_ME} help open\n  ${_ME} help show\n\n$(_color_primary \"Examples\"):\n  ${_ME} peek 3\n  ${_ME} peek example.bookmark.md\n  ${_ME} 3 peek\n  ${_ME} example:peek 12\n  ${_ME} peek example:12\n  ${_ME} example:12 peek\n  ${_ME} p 3\n  ${_ME} 3 p\n  ${_ME} p example:12\n  ${_ME} example:12 p\n\n$(_color_primary \"Alias\"):\n  ${_ME} preview\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} p\nHEREDOC\n}\n_peek() {\n  if [[ -z \"${1:-}\" ]]\n  then\n    _exit_1 _help \"peek\"\n  fi\n\n  _bookmark peek \"${@}\"\n}\n_alias_subcommand \"peek\" \"p\"\n_alias_subcommand \"peek\" \"preview\"\n\n# pin ##################################################################### pin\n\n_describe_pin() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} pin ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n\n$(_color_primary \"Description\"):\n  Pin an item so it appears first in lists.\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-pinning\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help list\n  ${_ME} help ls\n  ${_ME} help unpin\n\n$(_color_primary \"Examples\"):\n  ${_ME} pin 123\n  ${_ME} pin example:sample/321\nHEREDOC\n}\n_pin() {\n  local _selector=\n  local _subcommand=\"pin\"\n\n  local __arg=\n  for   __arg in \"${@:-}\"\n  do\n    case \"${__arg:-}\" in\n      unpin)  _subcommand=\"unpin\"     ;;\n      *)      _selector=\"${__arg:-}\"  ;;\n    esac\n  done\n\n  if [[ -z \"${_selector:-}\" ]]\n  then\n    _warn _help \"${_subcommand}\"\n\n    return 1\n  fi\n\n  local _item_path=\n  _item_path=\"$(_show \"${_selector}\" --path)\" || return 1\n\n  local _basename=\"${_item_path##*\\/}\"\n  local _folder_path=\"${_item_path%\\/*}\"\n  local _pindex_path=\"${_folder_path}/.pindex\"\n\n  local _notebook_path=\n  _notebook_path=\"$(\n    _notebooks show \"${_selector}\" --path 2>/dev/null ||\n      _notebooks current --path\n  )\"\n\n  local _relative_path=\n  _relative_path=\"$(_show \"${_selector}\" --relative-path)\"\n\n  if [[ ! -e \"${_item_path:-}\"        ]] ||\n     [[ ! -d \"${_folder_path:-}\"      ]] ||\n     [[   -z \"${_basename:-}\"         ]] ||\n     [[   -z \"${_notebook_path:-}\"    ]] ||\n     [[   -z \"${_relative_path:-}\"    ]]\n  then\n    _warn printf \"Not found: %s\\\\n\" \"${_selector}\"\n\n    return 1\n  fi\n\n  case \"${_subcommand:-}\" in\n    unpin)\n      if [[ ! -e \"${_pindex_path}\"    ]] ||\n         ! grep -q \"^${_basename}$\" \"${_pindex_path}\"\n      then\n        _warn printf                  \\\n          \"Not pinned: %s\\\\n\"         \\\n          \"$(_color_primary \"${_selector}\")\"\n\n        return 1\n      fi\n\n      _sed_i -e \"s/^${_basename}$//g\"   \"${_pindex_path}\"\n      _sed_i -e '/^[[:space:]]*$/d'     \"${_pindex_path}\" # remove blank line\n\n      if [[ ! -s \"${_pindex_path:?}\"  ]]\n      then\n        rm -f \"${_pindex_path:?}\"\n      fi\n\n      _git checkpoint \"${_notebook_path}\" \"[${_ME}] Unpinned: ${_relative_path}\"\n\n      printf \"Unpinned: %s\\\\n\" \"$(_show \"${_selector}\" --info-line)\"\n      ;;\n    *)\n      if [[ ! -e \"${_pindex_path}\"    ]]\n      then\n        touch \"${_pindex_path}\"\n      fi\n\n      if grep -q \"^${_basename}$\" \"${_pindex_path}\"\n      then\n        _warn printf                  \\\n          \"Already pinned: %s\\\\n\"     \\\n          \"$(_color_primary \"${_selector}\")\"\n\n        return 1\n      else\n        printf \"%s\\\\n\" \"${_basename}\" >> \"${_pindex_path}\"\n        _sed_i -e '/^[[:space:]]*$/d'    \"${_pindex_path}\" # remove blank lines\n\n        _git checkpoint \"${_notebook_path}\" \"[${_ME}] Pinned: ${_relative_path}\"\n\n        printf \"Pinned: %s\\\\n\" \"$(_show \"${_selector}\" --info-line)\"\n      fi\n      ;;\n  esac\n}\n\n# run ##################################################################### run\n\n_describe_run() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} run <command> [<arguments>...]\n\n$(_color_primary \"Description\"):\n  Run shell commands within the current notebook directory.\n\n$(_color_primary \"See Also\"):\n  ${_ME} help git\n  ${_ME} help shell\n\n$(_color_primary \"Examples\"):\n  ${_ME} run ls -la\n  ${_ME} run find . -name 'example*'\n  ${_ME} run rg example\nHEREDOC\n}\n_run() {\n  local _notebook_path=\n  _notebook_path=\"$(_notebooks current --path)\"\n\n  cd \"${_notebook_path}\"  || _exit_1 printf \"_run() \\`cd\\` failed.\\\\n\"\n  [[ -n \"${*}\" ]]         || _exit_1 printf \"Command required.\\\\n\"\n\n  if ! _command_exists \"${1:-}\"\n  then\n    _exit_1 printf \"Command not found: %s\\\\n\" \"$(_color_primary \"${1:-}\")\"\n  fi\n\n  (\"${@}\")\n}\n_alias_subcommand \"run\" \"r\"\n\n# search ############################################################### search\n\n_describe_search() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} search ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n            <query>... [-a | --all] [--and <query>] [--not <query>] [--or <query>]\n            [-l | --list] [--path] [-t <tag1>,<tag2>... | --tag <tag1>,<tag2>...]\n            [-t | --tags] [--type <type> | --<type>] [--utility <name>]\n\n$(_color_primary \"Options\"):\n  -a, --all                     Search all unarchived notebooks.\n  --and <query>                 Add a AND query.\n  -l, --list                    Print the id, filename, and title listing for\n                                each matching file, without the excerpt.\n  --not <query>                 Add a NOT query.\n  --or  <query>                 Add an OR query.\n  --path                        Print the full path for each matching file.\n  -t, --tag <tag1>,<tag2>...    A comma-separated list of tags.\n  -t, --tags                    List all tags found in the notebook.\n  --type <type>, --<type>       Search items of <type>. <type> can be a file\n                                extension or one of the following types:\n                                note, bookmark, document, archive, image,\n                                video, audio, folder, text\n  --utility <name>              The name of the search utility to search with.\n\n$(_color_primary \"Description\"):\n  Perform a full text search.\n\n  Multiple query arguments are treated as AND queries, returning items that\n  match all queries. AND queries can also be specified with the --and <query>\n  option. The --or <query> option can be used to specify an OR query,\n  returning items that match at least one of the queries. --not <query>\n  excludes items matching <query>.\n\n  \\`${_ME} search\\` is powered by Git's built-in \\`git grep\\` tool. \\`${_ME}\\` also\n  supports performing searches with alternative search tools using the\n  --utility <name> option.\n\n  Supported alternative search tools:\n    1. \\`rga\\`   https://github.com/phiresky/ripgrep-all\n    2. \\`rg\\`    https://github.com/BurntSushi/ripgrep\n    3. \\`ag\\`    https://github.com/ggreer/the_silver_searcher\n    4. \\`ack\\`   https://beyondgrep.com/\n    5. \\`grep\\`  https://en.wikipedia.org/wiki/Grep\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#-search\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help list\n  ${_ME} help ls\n\n$(_color_primary \"Examples\"):\n  # search current notebook for \"example query\"\n  ${_ME} search \"example query\"\n\n  # search the notebook \"example\" for \"example query\"\n  ${_ME} search example: \"example query\"\n\n  # search all notebooks for \"example query\" and list matching items\n  ${_ME} search \"example query\" --all --list\n\n  # search for items matching \"Example\" AND \"Demo\"\n  ${_ME} search \"Example\" \"Demo\"\n  ${_ME} search \"Example\" --and \"Demo\"\n\n  # search for items matching \"Example\" OR \"Sample\"\n  ${_ME} search \"Example|Sample\"\n  ${_ME} search \"Example\" --or \"Sample\"\n\n  # search for items matching both \"Example\" AND \"Sample\", and NOT \"Demo\"\n  ${_ME} search \"Example\" --and \"Sample\" --not \"Demo\"\n\n  # search with a regular expression\n  ${_ME} search \"\\d\\d\\d-\\d\\d\\d\\d\"\n\n  # search for tags\n  ${_ME} search --tag tag1 -t tag2\n\n  # search the current notebook for \"example query\"\n  ${_ME} q \"example query\"\n\n  # search all notebooks for \"example query\" and list matching items\n  ${_ME} q -la \"example query\"\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} q\nHEREDOC\n}\n_search() {\n  # Usage: _search_with <command-name> <search-utility>\n  _search_with() {\n    _command_exists \"${1:?}\" && [[ \"${2:-}\" == \"${1:?}\" ]]\n  }\n\n  local _all=0\n  local _and_queries=()\n  local _not_queries=()\n  local _arguments=()\n  local _last_path=\n  local _limit=0\n  local _max_columns=\"2000\"\n  local _max_depth=0\n  local _only_list=0\n  local _option_tags=()\n  local _or_queries=()\n  local _page=1\n  local _print_notebook_selectors=0\n  local _print_paths=0\n  local _query=\n  local _replacement=\n  local _search_args=()\n  local _search_for_tags=0\n  local _search_utility=\n  local _selectors=()\n  local _sort=0\n  local _type=\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -a|--all)\n        _all=1\n        ;;\n      --and|--not|--or)\n        local _operator=\"${1#--}\"\n\n        if [[ \"${2:-}\" == \"-e\" ]]\n        then\n          shift\n        fi\n\n        if [[ \"${2:-}\" =~ (^-t$|^--tag*|^--hashtag*) ]] &&\n           _option_value_is_present \"${3:-}\"\n        then\n          shift\n\n          IFS=' ' read -ra _option_tags <<< \"$(\n            _option_get_tags \"${1:-}\" \"${2:-}\"\n          )\"\n\n          if [[   \"${_operator:-}\" == \"and\" ]]\n          then\n            _and_queries+=(${_option_tags[@]:-})\n          elif [[ \"${_operator:-}\" == \"not\" ]]\n          then\n            _not_queries+=(${_option_tags[@]:-})\n          else\n            _or_queries+=(${_option_tags[@]:-})\n          fi\n\n          shift\n        else\n          if [[   \"${_operator:-}\" == \"and\" ]]\n          then\n            _and_queries+=(\"$(_option_get_value \"--and\" \"${2:-}\")\")\n          elif [[ \"${_operator:-}\" == \"not\" ]]\n          then\n            _not_queries+=(\"$(_option_get_value \"--not\" \"${2:-}\")\")\n          else\n            _or_queries+=(\"$(_option_get_value \"--or\" \"${2:-}\")\")\n          fi\n\n          shift\n        fi\n        ;;\n      --limit|-n|--num|--number|--per*)\n        _limit=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      -l|--list)\n        _only_list=1\n        ;;\n      --no*color)\n        _COLOR_ENABLED=0\n        ;;\n      --no*recur*)\n        _max_depth=1\n        ;;\n      --notebook-selectors)\n        _print_notebook_selectors=1\n        ;;\n      --page)\n        _page=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        ((_page)) || _page=1\n\n        shift\n        ;;\n      --path*)\n        _print_paths=1\n        _COLOR_ENABLED=0\n        ;;\n      -q|--query|-e)\n        _and_queries+=(\"$(_option_get_value \"${1}\" \"${2:-}\")\")\n\n        shift\n        ;;\n      --replace*)\n        # TODO\n        _replacement=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      -s|--sort)\n        _sort=1\n        ;;\n      -t|--tag*|--hashtag*)\n        if _option_value_is_present \"${2:-}\"\n        then\n          IFS=' ' read -ra _option_tags <<< \"$(\n            _option_get_tags \"${1:-}\" \"${2:-}\"\n          )\"\n\n          _and_queries+=(${_option_tags[@]:-})\n\n          shift\n        else\n          _search_for_tags=1\n        fi\n        ;;\n      --*tool|--*utility)\n        _search_utility=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --type)\n        _type=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --use*grep)\n        # TODO: Remove. Replaced with the --tool / --utility option.\n        _search_utility=\"grep\"\n        ;;\n      *)\n        if [[ \"${1:-}\" =~ ^-- ]]\n        then\n          _type=\"${1:2}\"\n        else\n          _arguments+=(\"${1}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  if [[ -z \"${_search_utility:-}\"                       ]] &&\n     [[ -n \"${NB_SEARCH_TOOL:-${NB_SEARCH_UTILITY:-}}\"  ]]\n  then\n    _search_utility=${NB_SEARCH_TOOL:-${NB_SEARCH_UTILITY:-}}\n  fi\n\n  local _current_notebook_path=\n  _current_notebook_path=\"$(_notebooks current --path)\"\n\n  local _local_notebook_path=\n  _local_notebook_path=\"$(_notebooks --local --path || :)\"\n\n  local _target_paths=()\n\n  if ((_all))\n  then\n    _target_paths=($(_notebooks --paths --unarchived))\n  fi\n\n  local i=\n  for ((i=0; i < ${#_arguments[@]}; i++))\n  do\n    local _maybe_path=\n\n    if [[ -z \"${_arguments[i]:-}\"     ]]\n    then\n      continue\n    elif [[ \"${_arguments[i]}\" =~ :$  ]]\n    then\n      _maybe_path=\"$(\n        _notebooks show \"${_arguments[i]}\" --path 2>/dev/null || :\n      )\"\n\n      if [[ -n \"${_maybe_path:-}\"     ]]\n      then\n        _notebooks select \"${_arguments[i]}\"\n      fi\n    else\n      if [[ \"${_arguments[i]}\" =~ ^/  ]]\n      then\n        _maybe_path=\"${_arguments[i]%/}\"\n      else\n        _maybe_path=\"$(\n          _selector_resolve_path \"${_arguments[i]:-}\" \\\n            --full                                    \\\n            --skip-titles                             \\\n            2>/dev/null || :\n        )\"\n      fi\n    fi\n\n    if [[ -z \"${_maybe_path:-}\"                     ]] ||\n       {\n         [[ \"${i}\" -eq \"$((${#_arguments[@]} - 1))\" ]] &&\n         [[ -z \"${_and_queries[*]:-}\"               ]]\n       }\n    then\n      local _query_argument=\"${_arguments[i]:-}\"\n\n      if [[ \"${_query_argument:-}\"    =~ ^[^/]*/$   ]]\n      then\n        if [[ -d \"${_maybe_path:-}\"   ]]\n        then\n          _query_argument=\n        else\n          _query_argument=\"${_query_argument%\\/}\"\n        fi\n      fi\n\n      if _notebooks current --selected\n      then\n        _and_queries+=(\"${_query_argument#*:}\")\n      else\n        _and_queries+=(\"${_query_argument}\")\n      fi\n    fi\n\n    if [[ -n \"${_maybe_path:-}\"       ]] &&\n       [[ -z \"${_target_paths[*]:-}\"  ]] &&\n       {\n         _notebooks current --selected   ||\n         [[ \"${#_arguments[@]}\" -gt 1 ]] ||\n         ((_search_for_tags))\n       }\n    then\n      _target_paths+=(\"${_maybe_path}\")\n      _selectors+=(\"${_arguments[i]}\")\n    fi\n  done\n\n  if [[ -z \"${_target_paths[*]:-}\"    ]]\n  then\n    _target_paths=(\"${_current_notebook_path}\")\n  fi\n\n  local _xargs=(\"-0\")\n\n  if xargs --help &> /dev/null\n  then # GNU (BSD does this by default)\n    _xargs+=(\"--no-run-if-empty\")\n  fi\n\n  if ((_search_for_tags))\n  then\n    local _git_major_version=\n    _git_major_version=\"$(git --version | cut -d \" \"  -f 3 | cut -d \".\" -f 1)\"\n\n    local _git_minor_version=\n    _git_minor_version=\"$(git --version | cut -d \" \"  -f 3 | cut -d \".\" -f 2)\"\n\n    local _use_git_grep=0\n\n    if ((_GIT_ENABLED))                           &&\n       [[ \"${_git_major_version:-}\"   -gt 2   ]]  ||  {\n         [[ \"${_git_major_version:-}\" ==  2   ]]  &&\n         [[ \"${_git_minor_version:-}\" -ge 19  ]]\n    }\n    then # git 2.19+ has --only-matching option\n      _use_git_grep=1\n    fi\n\n    if ((_use_git_grep))\n    then\n      local _grep_arguments=(\n        \"--extended-regexp\"\n        \"-I\"\n        \"--ignore-case\"\n        \"--only-matching\"\n        -e '(^|[[:space:]])#[[:alnum:]_-]+'\n      )\n    else\n      local _grep_arguments=(\n        \"--extended-regexp\"\n        \"-I\"\n        \"--ignore-case\"\n        \"--only-matching\"\n        -e '[[:space:]]#[[:alnum:]_-]+'\n        -e '^#[A-Za-z0-9_-]+'\n      )\n    fi\n\n    {\n      local __target_path=\n      for   __target_path in \"${_target_paths[@]:-}\"\n      do\n        [[ -n \"${__target_path:-}\"    ]] || continue\n\n        if [[ -d \"${__target_path:-}\" ]]\n        then\n          local _target_folder_path=\"${__target_path:-}\"\n        else\n          local _target_folder_path=\"${__target_path%/*}\"\n        fi\n\n        {\n          if ((_use_git_grep))\n          then\n            GIT_PAGER=''                      \\\n              git -C \"${_target_folder_path}\" \\\n              grep                            \\\n              \"${_grep_arguments[@]:-}\"       \\\n              --files-with-matches            \\\n              --null                          \\\n              \"${__target_path}\"              \\\n              2>/dev/null || true\n          else\n            {\n              find \"${__target_path}\"         \\\n                ! -path '*/.git*'             \\\n                -path '*/[^.]*'               \\\n                -type f                       \\\n                -print0\n            } | {\n              xargs \"${_xargs[@]}\"            \\\n                grep                          \\\n                \"${_grep_arguments[@]:-}\"     \\\n                --files-with-matches          \\\n                --null\n            }\n          fi\n        } | {\n          if ((_use_git_grep))\n          then\n            GIT_PAGER=''                      \\\n              xargs \"${_xargs[@]}\"            \\\n              git -C \"${_target_folder_path}\" \\\n              grep                            \\\n              \"${_grep_arguments[@]:-}\"       \\\n              -e \"## Comment\"                 \\\n              -e \"## Tags\"                    \\\n              -e \"## Content\"                 \\\n              -e \"## Page Content\"            \\\n              -e \"## Source\"                  \\\n              2>/dev/null || true\n          else\n            xargs \"${_xargs[@]}\"              \\\n              grep                            \\\n              \"${_grep_arguments[@]:-}\"       \\\n              -e \"## Comment\"                 \\\n              -e \"## Tags\"                    \\\n              -e \"## Content\"                 \\\n              -e \"## Page Content\"            \\\n              -e \"## Source\"                  \\\n              2>/dev/null || true\n          fi\n        }\n      done\n    } | {\n      local _last_match_path=\n      local _match_path=\n      local _seen_matches=()\n      local _skip=1\n\n      local         __match=\n      while read -r __match\n      do\n        if [[ \"${__match:-}\" =~ : ]]\n        then\n          _match_path=\"${__match%:*}\"\n        fi\n\n        local _normalized_match=\"${__match##*:}\"\n        _normalized_match=\"${_normalized_match#\"${_normalized_match%%[![:space:]]*}\"}\"\n        _normalized_match=\"${_normalized_match%\"${_normalized_match##*[![:space:]]}\"}\"\n\n        if [[ \"${_match_path:-}\"              =~ \\.bookmark\\.md$    ]]\n        then\n          if [[ \"${_last_match_path:-}\"       != \"${_match_path:-}\" ]]\n          then\n            _skip=1\n            _last_match_path=\"${_match_path}\"\n          fi\n\n          if [[ \"${_normalized_match:-}\"      =~ ^##                ]]\n          then\n            if [[ \"${_normalized_match:-}\"    =~ (Comment|Tags)     ]]\n            then\n              _skip=0\n            elif [[ \"${_normalized_match:-}\"  =~ (Content|Source)   ]]\n            then\n              _skip=1\n            fi\n\n            continue\n          fi\n\n          if ((_skip))\n          then\n            continue\n          fi\n        elif [[ \"${_normalized_match:-}\"      =~ ^##                ]]\n        then\n          continue\n        fi\n\n        if ! _contains \"${_normalized_match}\" \"${_seen_matches[@]:-}\"\n        then\n          printf \"%s\\\\n\" \"${_normalized_match:-}\"\n          _seen_matches+=(\"${_normalized_match:-}\")\n        fi\n      done\n\n      if ! ((${#_seen_matches[@]}))\n      then\n        printf \"No #hashtags found.\\\\n\"\n      fi\n    }\n\n    return 0\n  fi\n\n  if [[ -z \"${_and_queries[*]:-}\" ]] &&\n     [[ -z \"${_not_queries[*]:-}\" ]]\n  then\n    _exit_1 _help \"search\"\n  fi\n\n  local _queries=()\n\n  local __and_query=\n  for   __and_query in \"${_and_queries[@]:-}\"\n  do\n    [[ -n \"${__and_query:-}\"            ]] || continue\n\n    if [[ \"${_and_query:-}\" =~ ^\\#      ]]\n    then\n      _and_query=\"${_and_query}$\"\n    fi\n\n    if ((${#_or_queries[@]}))\n    then\n      local _or_query_string=\n\n      local __or_query=\n      for   __or_query in \"${_or_queries[@]:-}\"\n      do\n        [[ -n \"${__or_query:-}\"         ]] || continue\n\n        if [[ \"${__or_query:-}\" =~ ^\\#  ]]\n        then\n          __or_query=\"${__or_query}$\"\n        fi\n\n        _or_query_string=\"${_or_query_string}|${__or_query}\"\n      done\n\n      _queries+=(\"${__and_query}${_or_query_string}\")\n    else\n      _queries+=(\"${__and_query}\")\n    fi\n  done\n\n  local _query=\n  _query=\"$(_join \"|\" \"${_queries[@]:-}\")\"\n\n  if [[ -z \"${_query:-}\"          ]] &&\n     [[ -n \"${_not_queries[*]:-}\" ]]\n  then\n    _only_list=1\n  fi\n\n  {\n    local __target_path=\n    for   __target_path in \"${_target_paths[@]:-}\"\n    do\n      if [[ -d \"${__target_path}\" ]]\n      then\n        local _target_folder_path=\"${__target_path}\"\n      else\n        local _target_folder_path=\"${__target_path%\\/*}\"\n      fi\n\n      local _max_id=\n      _max_id=\"$(_index get_max_id \"${_target_folder_path}\")\"\n\n      {\n        if _search_with \"rg\" \"${_search_utility:-}\"\n        then\n          local _rg_command=\"rg\"\n\n          if _command_exists \"rga\"\n          then\n            _rg_command=\"rga\"\n          fi\n\n          if ((_max_depth))\n          then\n            _search_args+=(\"--max-depth\" \"${_max_depth}\")\n          fi\n\n          if ((_COLOR_ENABLED))\n          then\n            _search_args+=(\"--color\" \"always\")\n          else\n            _search_args+=(\"--color\" \"never\")\n          fi\n\n          if ((_sort))\n          then\n            _search_args+=(\"--sort-files\")\n          fi\n\n          local _search_paths=(\"${__target_path}\")\n\n          if [[ -f \"${__target_path}\"     ]] &&\n             [[ \"${#_arguments[@]}\" -le 1 ]]\n          then\n            _search_paths+=(\"${__target_path%\\/*}/.index\")\n          fi\n\n          \"${_rg_command}\"                  \\\n            --hidden                        \\\n            --iglob '!.git'                 \\\n            --ignore-case                   \\\n            --line-number                   \\\n            --max-columns \"${_max_columns}\" \\\n            --max-columns-preview           \\\n            --no-heading                    \\\n            --with-filename                 \\\n            \"${_search_args[@]}\"            \\\n            \"${_query}\"                     \\\n            \"${_search_paths[@]:-}\"         \\\n              || return 0 # Don't fail out within a single scope.\n        elif _search_with \"ag\" \"${_search_utility:-}\"\n        then\n          if ((_max_depth))\n          then\n            _search_args+=(\"--norecurse\")\n          fi\n\n          if ((_COLOR_ENABLED))\n          then\n            _search_args+=(\"--color\")\n            _search_args+=(\"--color-line-number\"  \"32\")\n            _search_args+=(\"--color-match\"        \"1;35\")\n          else\n            _search_args+=(\"--nocolor\")\n          fi\n\n          # TODO: ag doesn't support sorting directly.\n          # if ((_sort))\n          # then\n          #   _search_args+=(\"--workers\" \"1\")\n          # fi\n\n          local _search_paths=(\"${__target_path}\")\n\n          if [[ -f \"${__target_path}\"     ]] &&\n             [[ \"${#_arguments[@]}\" -le 1 ]]\n          then\n            _search_paths+=(\"${__target_path%\\/*}/.index\")\n          fi\n\n          ag                      \\\n            --filename            \\\n            --hidden              \\\n            --ignore \".git\"       \\\n            --ignore-case         \\\n            --noheading           \\\n            \"${_search_args[@]}\"  \\\n            \"${_query}\"           \\\n            \"${_search_paths[@]}\" \\\n              || return 0 # Don't fail out within a single scope.\n        elif _search_with \"ack\" \"${_search_utility:-}\"\n        then # ack is available.\n          if ((_max_depth))\n          then\n            _search_args+=(\"--no-recurse\")\n          fi\n\n          if ((_COLOR_ENABLED))\n          then\n            _search_args+=(\"--color\")\n            _search_args+=(\"--color-lineno=bold green\")\n            _search_args+=(\"--color-match=blue on_black\")\n          else\n            _search_args+=(\"--nocolor\")\n          fi\n\n          if ((_sort))\n          then\n            _search_args+=(\"--sort-files\")\n          fi\n\n          local _search_paths=(\"${__target_path}\")\n\n          if [[ -f \"${__target_path}\"     ]] &&\n             [[ \"${#_arguments[@]}\" -le 1 ]]\n          then\n            _search_paths+=(\"${__target_path%\\/*}/.index\")\n          fi\n\n          ack                     \\\n            --ignore-case         \\\n            --noheading           \\\n            --with-filename       \\\n            \"${_search_args[@]}\"  \\\n            \"${_query}\"           \\\n            \"${_search_paths[@]}\" \\\n              || return 0 # Don't fail out within a single scope.\n        elif _search_with \"grep\" \"${_search_utility:-}\"\n        then\n          if _grep_supports_color\n          then\n            if ((_COLOR_ENABLED))\n            then\n              _search_args+=(\"--color=always\")\n            else\n              _search_args+=(\"--color=never\")\n            fi\n          fi\n\n          set +f\n          {\n            if [[ -f \"${__target_path:-}\"     ]]\n            then\n              if [[ \"${#_arguments[@]}\" -le 1 ]]\n              then\n                # Print .index with null byte delimiter so it's included in\n                # the list of files to search.\n                printf \"%s/.index\\0%s\" \"${__target_path%\\/*}\" \"${__target_path}\"\n              else\n                printf \"%s\" \"${__target_path}\"\n              fi\n            elif [[ \"${_max_depth}\" == 1      ]]\n            then\n              # Print .index with null byte delimiter so it's included in\n              # the list of files to search.\n              printf \"%s/.index\\0\" \"${__target_path}\"\n              find \"${__target_path}\"/*   \\\n                \\( -name . -o -prune \\)   \\\n                -type f                   \\\n                -print0\n            else\n              find \"${__target_path}\"                     \\\n                ! -path '*/.git*'                         \\\n                \\( -path '*/.index' -o -path '*/[^.]*' \\) \\\n                -type f                                   \\\n                -print0\n            fi\n          } | {\n            # Add /dev/null so file path is printed even if there is only one\n            # matching file. Reference: https://stackoverflow.com/a/15432718\n            xargs -0 grep           \\\n              -E                    \\\n              --ignore-case         \\\n              \"${_search_args[@]}\"  \\\n              --text                \\\n              -n                    \\\n              \"${_query}\"           \\\n              /dev/null             \\\n                || return 0 # Don't fail out within a single scope.\n          }\n          set -f\n        else\n          local _notebook_path=\n          _notebook_path=\"$(_notebooks show \"${__target_path:-}\" --path)\"\n\n          local _escaped_notebook_path=\n          _escaped_notebook_path=\"$(\n            printf \"%s\\\\n\" \"${_notebook_path:-}\" | sed 's/\\//\\\\\\//g'\n          )\"\n\n          if ((_max_depth))\n          then\n            _search_args+=(\"--no-recursive\")\n          fi\n\n          local _search_args_no_color=(\"--color=never\")\n\n          if [[ -n \"${_search_args[*]:-}\" ]]\n          then\n            _search_args_no_color+=(\"${_search_args[@]:-}\")\n          fi\n\n          if ((_COLOR_ENABLED))\n          then\n            _search_args+=(\"--color=always\")\n          else\n            _search_args+=(\"--color=never\")\n          fi\n\n          local _search_paths=(\"${__target_path}\")\n\n          if [[ -f \"${__target_path}\"     ]] &&\n             [[ \"${#_arguments[@]}\" -le 1 ]]\n          then\n            _search_paths+=(\"${__target_path%\\/*}/.index\")\n          fi\n\n          if [[ \"${#_queries[@]}\" == 1 ]]\n          then\n            GIT_PAGER='' git -C \"${_notebook_path}\"     \\\n              grep                                      \\\n              --extended-regexp                         \\\n              --ignore-case                             \\\n              --line-number                             \\\n              --text                                    \\\n              \"${_search_args[@]:-}\"                    \\\n              -e \"${_query:-}\"                          \\\n              \"${_search_paths[@]:-}\"                   \\\n            | sed -e \"s/^/${_escaped_notebook_path}\\//\" \\\n              || return 0  # Don't fail out within a single scope.\n          else\n            local __search_group=\n            for   __search_group in \"index\" \"files\"\n            do\n              {\n                if [[ \"${__search_group}\" == \"index\" ]]\n                then\n                  # list all .index files\n                  GIT_PAGER='' git -C \"${_notebook_path}\" \\\n                    ls-files -z '*.index'\n                else\n                  # list all non-.index files\n                  GIT_PAGER='' git -C \"${_notebook_path}\" \\\n                    ls-files -z -- . ':!:*.index'\n                fi\n              } | {\n                local _last_pipe=\n                local _this_pipe=\n\n                local __and_query=\n                for   __and_query in \"${_queries[@]:-}\"\n                do\n                  [[ -n \"${__and_query:-}\"    ]] || continue\n\n                  _this_pipe=$(_temp file --touch) && {\n                    rm -f   \"${_this_pipe}\"\n                    mkfifo  \"${_this_pipe}\"\n                  }\n\n                  if [[ -p \"${_last_pipe:-}\"  ]]\n                  then\n                    <\"${_last_pipe:-}\" cat\n                  else\n                    cat\n                  fi | {\n                    GIT_PAGER='' xargs \"${_xargs[@]}\" \\\n                      git -C \"${_notebook_path}\"      \\\n                      grep                            \\\n                      --extended-regexp               \\\n                      --files-with-matches            \\\n                      --ignore-case                   \\\n                      --null                          \\\n                      --text                          \\\n                      \"${_search_args_no_color[@]:-}\" \\\n                      -e \"${__and_query:-}\"           \\\n                        || return 0  # Don't fail out within a single scope.\n                  } > \"${_this_pipe:-}\" &\n\n                  _last_pipe=\"${_this_pipe:-}\"\n                done\n\n                if [[ -p \"${_last_pipe:-}\"    ]]\n                then\n                  <\"${_last_pipe:-}\" cat\n                else\n                  cat\n                fi\n              } | {\n                local _last_pipe=\n                local _this_pipe=\n\n                local __not_query=\n                for   __not_query in \"${_not_queries[@]:-}\"\n                do\n                  [[ -n \"${__not_query:-}\"    ]] || continue\n\n                  _this_pipe=$(_temp file --touch) && {\n                    rm -f   \"${_this_pipe}\"\n                    mkfifo  \"${_this_pipe}\"\n                  }\n\n                  if [[ -p \"${_last_pipe:-}\"  ]]\n                  then\n                    <\"${_last_pipe:-}\" cat\n                  else\n                    cat\n                  fi | {\n                    GIT_PAGER='' xargs \"${_xargs[@]}\" \\\n                      git -C \"${_notebook_path}\"      \\\n                      grep                            \\\n                      --extended-regexp               \\\n                      --files-without-match           \\\n                      --ignore-case                   \\\n                      --null                          \\\n                      --text                          \\\n                      \"${_search_args_no_color[@]:-}\" \\\n                      -e \"${__not_query:-}\"           \\\n                        || return 0  # Don't fail out within a single scope.\n                  } > \"${_this_pipe:-}\" &\n\n                  _last_pipe=\"${_this_pipe:-}\"\n                done\n\n                if [[ -p \"${_last_pipe:-}\"    ]]\n                then\n                  <\"${_last_pipe:-}\" cat\n                else\n                  cat\n                fi\n              } | {\n                if [[ \"${__search_group}\" == \"index\" ]]\n                then\n                  local i=\n                  for ((i=0; i < ${#_queries[@]}; i++))\n                  do\n                    [[ -n \"${_queries[i]:-}\"  ]] || continue\n\n                    if ! ((i))\n                    then\n                      _search_args+=(\"-e\" \"${_queries[i]:-}\")\n                    else\n                      _search_args+=(\"--and\" \"-e\" \"${_queries[i]:-}\")\n                    fi\n                  done\n\n                  GIT_PAGER='' xargs \"${_xargs[@]}\"           \\\n                    git -C \"${_notebook_path}\"                \\\n                    grep                                      \\\n                    --extended-regexp                         \\\n                    --ignore-case                             \\\n                    --line-number                             \\\n                    --text                                    \\\n                    \"${_search_args[@]:-}\"                    \\\n                  | sed -e \"s/^/${_escaped_notebook_path}\\//\" \\\n                    || return 0  # Don't fail out within a single scope.\n                else\n                  GIT_PAGER='' xargs \"${_xargs[@]}\"           \\\n                    git -C \"${_notebook_path}\"                \\\n                    grep                                      \\\n                    --extended-regexp                         \\\n                    --ignore-case                             \\\n                    --line-number                             \\\n                    --text                                    \\\n                    \"${_search_args[@]:-}\"                    \\\n                    -e \"${_query:-}\"                          \\\n                  | sed -e \"s/^/${_escaped_notebook_path}\\//\" \\\n                    || return 0  # Don't fail out within a single scope.\n                fi\n              }\n            done\n          fi\n        fi\n      } | {\n        local _binary_match_message_printed=0\n        local _paginated_count=0\n        local _pagination_max=\"$((_page * _limit))\"\n        local _pagination_min=\"$(((_page * _limit) - _limit))\"\n\n        local         __line=\n        while read -r __line\n        do\n          local _content=\n          local _content_line_with_hit=\n          local _file_info=\n          local _file_info_color=\n          local _filename=\n          local _filename_color=\n          local _filename_hit=0\n          local _id=\n          local _line_path_segment=\"${__line%%:*}\"\n          local _path=\n          local _skip=0\n\n          if ((_print_paths))\n          then\n            _path=\"${_line_path_segment:-}\"\n          else\n            # Use `sed` to remove color and 'matches' suffix from output.\n            # https://unix.stackexchange.com/a/140255\n            _path=\"$(\n              printf \"%s\\\\n\" \"${_line_path_segment}\"              \\\n                | sed                                             \\\n                    -e \"s,$(printf '\\033')\\\\[[0-9;]*[a-zA-Z],,g\"  \\\n                    -e 's/ matches//g'\n            )\"\n          fi\n\n          if ((_only_list))                       &&\n             [[ \"${_last_path}\" == \"${_path}\" ]]  &&\n             [[ ! \"${_path}\"    =~ .index$    ]]\n          then\n            [[ -n \"${_path}\" ]] && _last_path=\"${_path}\"\n\n            continue\n          fi\n\n          if [[ \"${_path}\"      =~ \\.pindex$  ]]\n          then\n            [[ -n \"${_path}\" ]] && _last_path=\"${_path}\"\n\n            continue\n          fi\n\n          if [[ \"${_last_path}\" != \"${_path}\" ]]\n          then\n            if   [[ ! \"${_path}\" =~ .index    ]] &&\n                 [[ -z \"$(sed -E \"${_IGNORE_PATTERNS[@]:-}\" <<< \"${_path##*/}\")\" ]]\n            then\n              _skip=1\n            elif [[ -n \"${_type:-}\"           ]]\n            then\n              if [[  \"${_path}\" =~ ${_type}$  ]]\n              then\n                _skip=0\n              elif {\n                [[ \"${_type}\" =~ (^bookmark$|^bookmarks$)                   ]] &&\n                  _file_is_bookmark \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^todo$|^todos$|^task$|^tasks$)          ]] &&\n                  _file_is_todo \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^note$|^notes$)                         ]] &&\n                  _file_is_text \"${_path}\"                                     &&\n                  [[ ! \"${_path:-}\" =~ (.bookmark.md$|-bookmark.md$)        ]]\n                } || {\n                  [[ \"${_type}\" =~ (^folder$|^folders$)                     ]] &&\n                  [[ \"$(dirname \"${_path}\")\" != \"${__target_path}\"          ]]\n                } || {\n                  [[ \"${_type}\" =~ ^archive$                                ]] &&\n                  _file_is_archive \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^audio$|^music$)                        ]] &&\n                  _file_is_audio \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^document$|^documents$|^doc$|^docs$)    ]] &&\n                  _file_is_document \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ ^encrypted$                              ]] &&\n                  _file_is_encrypted \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^image$|^images$|^picture$|^pictures$)  ]] &&\n                  _file_is_image \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ ^text$                                   ]] &&\n                  _file_is_text \"${_path}\"\n                } || {\n                  [[ \"${_type}\" =~ (^video$|^videos$)                       ]] &&\n                  _file_is_video \"${_path}\"\n                }\n              then\n                _skip=0\n              else\n                _skip=1\n              fi\n            fi\n          fi\n\n          if [[ -z \"${__line}\" ]]\n          then\n            # Print nothing, skipping the blank line in `ag` output with\n            # multiple matches.\n            :\n          elif ((_print_paths))\n          then\n            if [[ \"${_last_path}\" != \"${_path}\"   ]]\n            then # match is in a different file than the last match\n              printf \"%s\\\\n\" \"${_path}\"\n            fi\n          else\n            if ((_skip))\n            then\n              continue\n            fi\n\n            local _folder_path=\"${_path%\\/*}\"\n\n            if [[ ! -e \"${_folder_path}/.index\"   ]]\n            then # skip unindexed folders\n              continue\n            fi\n\n            if ((_limit)) &&\n               {\n                 [[ \"${_last_path}\" != \"${_path}\" ]] ||\n                 [[ \"${_path}\"      =~ \\.index$   ]]\n               }\n            then\n              _paginated_count=$((_paginated_count+1))\n\n              if [[ \"${_paginated_count}\"   -le \"${_pagination_min}\"  ]]\n              then\n                [[ -n \"${_path}\" ]] && _last_path=\"${_path}\"\n\n                continue\n              elif [[ \"${_paginated_count}\" -gt \"${_pagination_max}\"  ]]\n              then\n                break\n              fi\n            fi\n\n            if [[ -n \"${_local_notebook_path:-}\"                ]] &&\n               [[ \"${_folder_path}\" =~ ${_local_notebook_path}  ]]\n            then\n              local _notebook_path=\"${_local_notebook_path}\"\n            else\n              local _notebook_and_folder_path=\"${_folder_path#\"${NB_DIR}\"/}\"\n              local _notebook_path=\"${NB_DIR}/${_notebook_and_folder_path%%/*}\"\n            fi\n\n            local _relative_folder_path=\"${_folder_path#\"${_notebook_path}\"/}\"\n            _relative_folder_path=\"${_relative_folder_path#\"${_notebook_path}\"}\"\n\n            _filename=\"$(basename \"${_path}\")\"\n            _filename_color=\"${_filename}\"\n\n            # Use \".index\" to match filenames.\n            if [[ -n \"${_filename:-}\" ]] && [[ \"${_filename:-}\" == \".index\" ]]\n            then\n              _filename_hit=1\n              _filename_color=\"$(printf \"%s\\\\n\" \"${__line}\" | cut -d: -f 3-)\"\n              _filename=\"$(\n                printf \"%s\\\\n\" \"${_filename_color}\" \\\n                  | sed \"s,$(printf '\\033')\\\\[[0-9;]*[a-zA-Z],,g\"\n              )\"\n            fi\n\n            local _maybe_id_path=\n            local _relative_path=\"${_filename}\"\n\n            if [[ -n \"${_relative_folder_path:-}\" ]]\n            then\n              _max_id=\"$(_index get_max_id \"${_folder_path}\")\"\n              _maybe_id_path=\"${_relative_folder_path}/\"\n              _relative_path=\"${_relative_folder_path}/${_filename}\"\n            fi\n\n            _id=\"$(_index get_id \"${_filename}\" \"${_folder_path}\")\"\n\n            if ((_filename_hit))\n            then\n              _content=\"$(_get_content \"${_folder_path}/${_filename}\")\"\n\n              if [[ -n \"${_content}\"                  ]] &&\n                 [[ ! \"${_content}\" =~ ^__first_line: ]]\n              then\n                _file_info=\"${_filename} ${_MD} ${_content}\"\n                _file_info_color=\"${_filename_color} ${_MD} ${_content}\"\n              else\n                _file_info=\"${_filename}\"\n                _file_info_color=\"${_filename_color}\"\n              fi\n            else\n              _content=\"$(_get_content \"${_path}\")\"\n\n              if [[ \"${_content:-}\" =~ ^__first_line: ]]\n              then\n                _file_info=\"${_filename} ${_MD} \\\"${_content#__first_line:}\\\"\"\n                _file_info_color=\"${_filename_color} ${_MD} \\\"${_content#__first_line:}\\\"\"\n              elif [[ -n \"${_content:-}\" ]]\n              then\n                _file_info=\"${_content}\"\n                _file_info_color=\"${_content}\"\n              else\n                _file_info=\"${_filename}\"\n                _file_info_color=\"${_filename_color}\"\n              fi\n            fi\n\n            local _indicators=\n            _indicators=\"$(\n              NB_NOTEBOOK_PATH=\"${_notebook_path}\" \\\n                _show \"${_relative_path}\" --indicators\n            )\"\n\n            local _info_line=\n            local _info_line_color=\n            local _max_identifier=\n\n            if ((_all))                       ||\n               ((_print_notebook_selectors))  ||\n               _notebooks current --selected\n            then\n              local _notebook_name=\n              _notebook_name=\"$(\n                _notebooks show \"${_notebook_path}\" --name --no-color\n              )\"\n\n              _info_line=\"[${_notebook_name}:${_maybe_id_path}${_id}] \"\n              _info_line_color+=\"$(_color_brackets \"${_notebook_name}:${_maybe_id_path}${_id}\") \"\n              _max_identifier=\"[${_notebook_name}:${_maybe_id_path}${_max_id}] \"\n            else\n              _info_line=\"[${_maybe_id_path}${_id}] \"\n              _info_line_color+=\"$(_color_brackets \"${_maybe_id_path}${_id}\") \"\n              _max_identifier=\"[${_maybe_id_path}${_max_id}] \"\n            fi\n\n            # Use calculated number of spaces for nicer formatting.\n            local _spaces=''\n            local _spaces_length=0\n\n            if ((_only_list))\n            then\n              _spaces_length=$(( ${#_max_identifier} - ${#_info_line} ))\n            fi\n\n            if ((_spaces_length))\n            then\n              printf -v _spaces '%*s' \"${_spaces_length}\" \"\"\n\n              _info_line+=\"${_spaces}\"\n              _info_line_color+=\"${_spaces}\"\n            fi\n\n            if [[ -n \"${_indicators:-}\" ]]\n            then\n              _info_line+=\"${_indicators}\"\n              _info_line_color+=\"${_indicators}\"\n            fi\n\n            _info_line+=\"${_file_info}\"\n            _info_line_color+=\"${_file_info_color}\"\n\n            if [[ \"${_last_path}\" != \"${_path}\" ]] || ((_filename_hit))\n            then # match is in a different file than the last match\n              ((_COLOR_ENABLED)) && _wrap off\n\n              printf \"%s\" \"${_info_line_color}\"\n\n              ((_COLOR_ENABLED)) && _wrap on\n\n              printf \"\\\\n\"\n\n              _binary_match_message_printed=0\n            fi\n\n            if ((_only_list)) || ((_binary_match_message_printed))\n            then\n              [[ -n \"${_path}\" ]] && _last_path=\"${_path}\"\n\n              continue\n            fi\n\n            if [[ \"${_last_path}\" != \"${_path}\" ]] || ((_filename_hit))\n            then # match is in a different file than the last match\n              ((_COLOR_ENABLED)) && _wrap off\n\n              local _visible_line_length=\n              _visible_line_length=\"$(\n                _get_visible_length \"${_info_line:-}\"\n              )\"\n\n              _print_line \"$(printf \"%-${_visible_line_length}s\" '.')\"\n\n              ((_COLOR_ENABLED)) && _wrap on\n            fi\n\n            if ((_filename_hit))\n            then\n              local _filename_type_label=\"Filename\"\n\n              if [[ -d \"${_folder_path}/${_filename}\" ]]\n              then\n                _filename_type_label=\"Folder Name\"\n              fi\n\n              _content_line_with_hit=\"${_filename_type_label} Match: $(\n                printf \"%s\\\\n\" \"${__line}\" | cut -d: -f 3-\n              )\"\n            elif ! _file_is_text \"${_folder_path}/${_filename}\"\n            then\n              _content_line_with_hit=\"Binary file matches.\"\n              _binary_match_message_printed=1\n            else\n              _content_line_with_hit=\"$(\n                printf \"%s\\\\n\" \"${__line}\" | cut -d: -f 2-\n              )\"\n            fi\n\n            # Truncate long lines.\n            local _line_length=\n            _line_length=\"$(\n              printf \"%s\\\\n\" \"${_content_line_with_hit}\" | awk '{print length}'\n            )\"\n\n            local _line_length_diff=\n            _line_length_diff=$((_line_length-_max_columns-100))\n\n            if [[ \"${_line_length_diff}\" -gt 0      ]]\n            then\n              _content_line_with_hit=\"$(\n                printf \"%s\\\\n\" \"${_content_line_with_hit}\" \\\n                  | awk '{ print substr($0, 1, 2000) }'\n              )\"\n\n              _content_line_with_hit+=\"$(\n                _color_primary \"... [${_line_length_diff} characters omitted]\"\n              )\"\n            fi\n\n            printf \"%s\\\\n\\\\n\" \"${_content_line_with_hit}\"\n          fi\n\n          [[ -n \"${_path}\" ]] && _last_path=\"${_path}\"\n        done\n      }\n    done\n  } | {\n    local       __search_output_line=\n    if read -r  __search_output_line\n    then # output is present\n      # Print the test line then `cat` the rest.\n      printf \"%s\\\\n\" \"${__search_output_line:-}\"\n\n      cat\n\n      return 0\n    else\n      if ((_all))\n      then\n        printf \"Not found in any notebook: %s\\\\n\"   \\\n          \"$(_color_primary \"${_query:-}\")\"\n      else\n        local _search_selector=\n\n        if [[ -n \"${_selectors[0]:-}\"               ]]\n        then\n          _search_selector=\"${_selectors[0]}\"\n\n          if [[ -f \"${_target_paths[0]:-}\"          ]] &&\n             [[ \"${_search_selector:-}\" =~ /$       ]]\n          then # strip trailing slash from files\n            _search_selector=\"${_search_selector%/}\"\n          elif [[ \"${_search_selector:-}\" =~ :$     ]]\n          then\n            _search_selector=\"${_search_selector%:}\"\n          elif [[ -d \"${_target_paths[0]:-}\"        ]] &&\n               [[ !  \"${_search_selector:-}\" =~ /$  ]]\n          then # add trailing slash to folders\n            _search_selector=\"${_search_selector}/\"\n          fi\n        else\n          _search_selector=\"$(_notebooks current --name)\"\n        fi\n\n        local _query_message=\n\n        if [[ \"${#_queries[@]}\" -le 1 ]]\n        then\n          _query_message=\"${_query}\"\n        else\n          local i=\n          for ((i=0; i < ${#_queries[@]}; i++))\n          do\n            if ((i))\n            then\n              _query_message+=\" + ${_queries[i]:-}\"\n            else\n              _query_message=\"${_queries[i]:-}\"\n            fi\n          done\n        fi\n\n        if [[ \"${_page:-0}\" -gt 1     ]]\n        then\n          return 0\n        else\n          _warn printf \"Not found in %s: %s\\\\n\"               \\\n                  \"$(_color_primary \"${_search_selector:-}\")\" \\\n                  \"$(_color_primary \"${_query_message:-}\")\"\n        fi\n      fi\n\n      return 1\n    fi\n  }\n}\n_alias_subcommand \"search\" \"q\"\n_alias_subcommand \"search\" \"grep\"\n\n# show ################################################################### show\n\n_describe_show() {\n  cat <<HEREDOC\n$(_color_primary \"Usage\"):\n  ${_ME} show ([<notebook>:][<folder-path>/][<id> | <filename> | <title>])\n          [[-a | --added] | [--authors] | [-b | --browse] | --filename | --id |\n          --info-line | --path | [-p | --print] | --relative-path | [-r |\n          --render] | --title | --type [<type>] | [-u | --updated]] [--no-color]\n  ${_ME} show <notebook>\n\n$(_color_primary \"Options\"):\n  -a, --added      Print the date and time when the item was added.\n  --authors        List the git commit authors of an item.\n  -b, --browse     Open the item with \\`${_ME} browse\\`.\n  --filename       Print the filename of the item.\n  --id             Print the id number of the item.\n  --info-line      Print the id, filename, and title of the item.\n  --no-color       Show without syntax highlighting.\n  --path           Print the full path of the item.\n  -p, --print      Print to standard output / terminal.\n  --relative-path  Print the item's path relative within the notebook.\n  -r, --render     Use \\`pandoc\\` [1] to render the file to HTML and display\n                   in the terminal web browser. If either \\`pandoc\\` or a\n                   browser are unavailable, \\`-r\\` / \\`--render\\` is ignored.\n  --title          Print the title of the note.\n  --type [<type>]  Print the file extension or, when <type> is specified,\n                   return true if the item matches <type>. <type> can be a\n                   file extension or one of the following types:\n                   archive, audio, bookmark, document, folder, image,\n                   text, video\n  -u, --updated    Print the date and time of the last recorded change.\n\n$(_color_primary \"Description\"):\n  Show an item or notebook. Notes in text file formats can be rendered or\n  printed to standard output. Non-text files are opened in your system's\n  preferred app or program for that file type.\n\n  By default, the item is opened using \\`less\\` or the program configured\n  in the \\`\\$PAGER\\` environment variable. Use the following keys to navigate\n  in \\`less\\` (see \\`man less\\` for more information):\n\n    Key               Function\n    ---               --------\n    mouse scroll      Scroll up or down\n    arrow up or down  Scroll one line up or down\n    f                 Jump forward one window\n    b                 Jump back one window\n    d                 Jump down one half window\n    u                 Jump up one half window\n    /<query>          Search for <query>\n    n                 Jump to next <query> match\n    q                 Quit\n\n  To skip the pager and print to standard output, use the \\`-p\\` / \\`--print\\`\n  option.\n\n  \\`-r\\` / \\`--render\\` automatically uses either \\`w3m\\` [2] or \\`links\\` [3].\n  To specify a preferred browser, set the \\`\\$BROWSER\\` environment variable\n  in your .bashrc, .zshrc, or equivalent, e.g.: export BROWSER=\"links\"\n\n  If \\`bat\\` [5], \\`highlight\\` [6], or Pygments [7] is installed, notes are\n  printed with syntax highlighting.\n\n    1. https://pandoc.org/\n    2. https://en.wikipedia.org/wiki/W3m\n    3. https://en.wikipedia.org/wiki/Links_(web_browser)\n    5. https://github.com/sharkdp/bat\n    6. http://www.andre-simon.de/doku/highlight/en/highlight.php\n    7. https://pygments.org/\n\n$(_color_primary \"Read More\"):\n  ${_README_URL}#viewing\n\n$(_color_primary \"See Also\"):\n  ${_ME} help browse\n  ${_ME} help open\n  ${_ME} help peek\n\n$(_color_primary \"Examples\"):\n  ${_ME} show 1\n  ${_ME} show example.md --render\n  ${_ME} show \"A Document Title\" --print --no-color\n  ${_ME} 1 show\n  ${_ME} example:show 12\n  ${_ME} show example:12\n  ${_ME} example:12 show\n  ${_ME} s 1\n  ${_ME} 1 s\n  ${_ME} s example:12\n  ${_ME} example:12 s\n\n$(_color_primary \"Alias\"):\n  ${_ME} view\n\n$(_color_primary \"Shortcut Alias\"):\n  ${_ME} s\nHEREDOC\n}\n_show() {\n  # _show_indicators()\n  #\n  # Usage:\n  #   _show_indicators <path> [--done]\n  #\n  # Description:\n  #   Print a list of indicators based on the file type.\n  #\n  # NOTE: Indicator logic is also specified in `list` for performance.\n  _show_indicators() {\n    local _done=0\n    local _indicators=\n    local _path=\"${1:-}\"\n\n    case \"${2:-}\" in\n      --done) _done=1 ;;\n    esac\n\n    local _pindex_path=\"${_path%/*}/.pindex\"\n\n    if [[ -e \"${_pindex_path}\"  ]]\n    then\n      # shellcheck disable=SC2046\n      if _contains \"${_path##*/}\" $(cat \"${_pindex_path}\")\n      then\n        _indicators+=\"${_NB_INDICATOR_PINNED:-}\"\n      fi\n    fi\n\n    if [[ -d \"${_path}\"         ]]\n    then\n      _indicators+=\"${_NB_INDICATOR_FOLDER:-}\"\n    elif _file_is_bookmark \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_BOOKMARK:-}\"\n    elif _file_is_image \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_IMAGE:-}\"\n    elif _file_is_document \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_DOCUMENT:-}\"\n    elif _file_is_video \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_VIDEO:-}\"\n    elif _file_is_audio \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_AUDIO:-}\"\n    elif [[ \"${_path}\" =~ \\.epub$ ]]\n    then\n      _indicators+=\"${_NB_INDICATOR_EBOOK:-}\"\n    fi\n\n    if _file_is_encrypted \"${_path}\"\n    then\n      _indicators+=\"${_NB_INDICATOR_ENCRYPTED:-}\"\n    fi\n\n    if _file_is_todo \"${_path}\"\n    then\n      if ((_done))\n      then\n        _indicators+=\"${_NB_INDICATOR_TODO_DONE% } \"\n      else\n        _indicators+=\"${_NB_INDICATOR_TODO% } \"\n      fi\n    fi\n\n    printf \"%s\\\\n\" \"${_indicators:-}\"\n  }\n\n  local _browse=0\n  local _check_type=0\n  local _limit=\"${NB_BROWSE_LIMIT:-20}\"\n  local _list_page=1\n  local _password=\n  local _print_added=0\n  local _print_authors=0\n  local _print_bookmark_url=0\n  local _print_filename=0\n  local _print_folder_path=0\n  local _print_id=0\n  local _print_indicators=0\n  local _print_info=0\n  local _print_output=0\n  local _print_path=0\n  local _print_relative_path=0\n  local _print_selector_id=0\n  local _print_title=0\n  local _print_updated=0\n  local _render=0\n  local _selector=\n  local _skip_notebook_fallback=0\n  local _tool=\n  local _type=\n  local _unresolved_arguments=()\n\n  while ((${#}))\n  do\n    case \"${1:-}\" in\n      -a|--added*)\n        _print_added=1\n        _skip_notebook_fallback=1\n        ;;\n      --auth*)\n        _print_authors=1\n        ;;\n      -b|--br|--browse)\n        _browse=1\n        ;;\n      --filename|--basename)\n        _print_filename=1\n        _skip_notebook_fallback=1\n        ;;\n      --folder-path)\n        _print_folder_path=1\n        ;;\n      --id|--index)\n        _print_id=1\n        _skip_notebook_fallback=1\n        ;;\n      --indicators)\n        _print_indicators=1\n        _skip_notebook_fallback=1\n        ;;\n      --info*line)\n        _print_info=1\n        _skip_notebook_fallback=1\n        ;;\n      --limit|-n|--num|--number|--per*)\n        _limit=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --no*color|--raw)\n        _COLOR_ENABLED=0\n        ;;\n      --notebook*|--include*notebook*|--with*notebook*)\n        _skip_notebook_fallback=0\n        ;;\n      --page)\n        _list_page=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n        ((_list_page)) || _list_page=1\n\n        shift\n        ;;\n      --password)\n        _password=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --path)\n        _print_path=1\n        _skip_notebook_fallback=1\n        ;;\n      -p|--print|--dump|--skip*pager|--no*pager)\n        _print_output=1\n        ;;\n      --relative-path)\n        _print_relative_path=1\n        _skip_notebook_fallback=1\n        ;;\n      -r|--render)\n        _render=1\n        ;;\n      --selector*id)\n        _print_selector_id=1\n        _skip_notebook_fallback=1\n        ;;\n      --title)\n        _print_title=1\n        _skip_notebook_fallback=1\n        ;;\n      --tool|--utility)\n        _tool=\"$(_option_get_value \"${1}\" \"${2:-}\")\"\n\n        shift\n        ;;\n      --type)\n        _check_type=1\n        _skip_notebook_fallback=1\n\n        if _option_value_is_present \"${2:-}\"\n        then\n          _type=\"${2}\"\n\n          shift\n        fi\n        ;;\n      -u|--updated*)\n        _print_updated=1\n        _skip_notebook_fallback=1\n        ;;\n      --url)\n        _print_bookmark_url=1\n        ;;\n      *)\n        if [[ -z \"${_selector:-}\" ]]\n        then\n          _selector=\"${1}\"\n        else\n          _unresolved_arguments+=(\"${1}\")\n        fi\n        ;;\n    esac\n\n    shift\n  done\n\n  if [[ -z \"${_selector:-}\" ]]\n  then\n    _exit_1 _help \"show\"\n  fi\n\n  if ((_print_selector_id))\n  then\n    _selector_get_identifier \"${_selector:-}\"\n\n    return 0\n  fi\n\n  local _notebook_path=\n\n  if [[ \"${_selector:-}\" =~ : ]] && [[ ! \"${_selector:-}\" =~ /.*: ]]\n  then\n    _notebook_path=\"$(_notebooks show \"${_selector%%:*}\" --path)\" || return 1\n\n    if ((_print_path)) && [[ \"${_selector:-}\" =~ :$ ]]\n    then\n      printf \"%s\\\\n\" \"${_notebook_path}\"\n\n      return 0\n    fi\n  elif [[ \"${_selector:-}\" =~ ^${NB_DIR}  ]]\n  then\n    local _selector_relative_path=\"${_selector#\"${NB_DIR}\"/}\"\n\n    _notebook_path=\"$(_notebooks show \"${_selector_relative_path%%/*}\" --path)\"\n  elif [[ \"${_selector:-}\" =~ ^/          ]]\n  then\n    _notebook_path=\"$(_notebooks show \"${_selector}\" --path)\"\n  fi\n\n  if [[ -z \"${_notebook_path:-}\"          ]]\n  then\n    _notebook_path=\"$(_notebooks current --path)\"\n  fi\n\n  local _relative_path=\n  _relative_path=\"$(\n    _selector_resolve_path \"${_selector}\" \"${_notebook_path}\" --relative\n  )\"\n\n  local _folder_path=\"${_notebook_path:?}\"\n  local _relative_folder_path=\n\n  if [[ \"${_relative_path:-}\" =~ /        ]]\n  then\n    _folder_path=\"${_notebook_path}/${_relative_path%\\/*}\"\n    _relative_folder_path=\"${_relative_path%\\/*}\"\n  fi\n\n  local _basename=\n  _basename=\"$(basename \"${_relative_path}\")\"\n\n  local _target_path=\"${_notebook_path}/${_relative_path}\"\n\n  if [[ -z \"${_relative_path:-}\"    ]] && ! ((_skip_notebook_fallback))\n  then\n    local _maybe_notebook=\"${_selector:-}\"\n\n    if [[ \"${_maybe_notebook:-}\" =~ ^${NB_DIR}    ]]\n    then\n      _maybe_notebook=\"${_maybe_notebook##*\\/}\"\n    fi\n\n    _maybe_notebook=\"${_maybe_notebook%:}\"\n\n    if [[ -d \"${NB_DIR}/${_maybe_notebook}/.git\"  ]]\n    then\n      if ((_print_path))\n      then\n        printf \"%s\\\\n\" \"${NB_DIR}/${_maybe_notebook}\"\n      elif ((_print_relative_path)) || ((_print_folder_path))\n      then\n        printf \"\"\n      else\n        NB_NOTEBOOK_PATH=\"${NB_DIR}/${_maybe_notebook}\" \\\n          _ls \"${_unresolved_arguments[@]:-}\"\n      fi\n\n      return 0\n    else\n      _warn printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector}\")\"\n\n      return 1\n    fi\n  fi\n\n  if [[ ! \"${_selector}\" =~ :$      ]] && {\n       [[ -z \"${_relative_path:-}\"  ]] ||\n       [[ ! -e \"${_target_path}\"    ]]\n     }\n  then\n    _warn printf \"Not found: %s\\\\n\" \"$(_color_primary \"${_selector:-}\")\"\n\n    return 1\n  fi\n\n  if ((_print_folder_path))\n  then\n    if [[ \"${_selector:-}\" =~ /$                      ]] &&\n       [[ -d \"${_notebook_path}/${_relative_path:-}\"  ]]\n    then\n      printf \"%s\\\\n\" \"${_relative_path}\"\n    elif [[ \"${_relative_path:-}\" =~ / ]]\n    then\n      printf \"%s\\\\n\" \"${_relative_path%\\/*}\"\n    else\n      printf \"\"\n    fi\n\n    return 0\n  fi\n\n  if ((_print_relative_path))\n  then\n    printf \"%s\\\\n\" \"${_relative_path}\"\n\n    return 0\n  fi\n\n  if ((_print_path))\n  then # `show --path`\n    printf \"%s/%s\\\\n\" \"${_notebook_path}\" \"${_relative_path}\"\n\n    return 0\n  fi\n\n  if ((_print_filename))\n  then\n    printf \"%s\\\\n\" \"${_basename}\"\n\n    return 0\n  fi\n\n  if ((_print_id))\n  then\n    printf \"%s\\\\n\" \"$(\n      _index get_id \"${_relative_path##*/}\" \"${_folder_path}\"\n    )\"\n\n    return 0\n  fi\n\n  if ((_print_title))\n  then\n    _get_content \"${_notebook_path}/${_relative_path}\" --title\n\n    return 0\n  fi\n\n  if ((_print_authors))\n  then\n    GIT_PAGER='' git -C \"${_notebook_path}\" shortlog              \\\n      --summary --email -- \"${_notebook_path}/${_relative_path}\"  \\\n      | sed \"s/^[[:space:]]\\{1,\\}[[:digit:]]\\{1,\\}[[:space:]]\\{1,\\}//g\"\n\n    return 0\n  fi\n\n  if ((_print_indicators))\n  then\n    local _indicator_arguments=(\"${_notebook_path}/${_relative_path}\")\n\n    if [[ \"${_relative_path:-}\" =~ todo\\.md ]]\n    then\n      local _todo_title=\n      _todo_title=\"$(\n        _get_content \"${_notebook_path}/${_relative_path}\" --title\n      )\"\n\n      if [[ \"${_todo_title}\" =~ ^\\[x\\]      ]]\n      then\n        _indicator_arguments+=(--done)\n      fi\n    fi\n\n    _show_indicators \"${_indicator_arguments[@]:-}\"\n\n    return 0\n  fi\n\n  if ((_check_type))\n  then\n    if [[ -z \"${_type}\"       ]]\n    then\n      if [[ -d \"${_notebook_path}/${_relative_path}\"  ]]\n      then\n        printf \"%s\\\\n\" \"folder\"\n      else\n        printf \"%s\\\\n\" \"${_relative_path#*.}\"\n      fi\n\n      return 0\n    else\n      if _contains \"${_type}\" \"${_FILE_TYPES[@]:-}\"\n      then\n        \"_file_is_${_type}\" \"${_notebook_path}/${_relative_path}\"\n\n        return $?\n      else\n        [[ \"${_type}\" == \"${_relative_path#*.}\"       ]]\n\n        return $?\n      fi\n    fi\n  fi\n\n  if ((_print_info))\n  then\n    local _id=\n\n    if [[ -n \"${_basename:-}\" ]]\n    then\n      _id=\"$(_index get_id \"${_basename}\" \"${_folder_path}\")\"\n    fi\n\n    local _maybe_scoped_relative_path=\"${_relative_path}\"\n\n    local _maybe_scoped_id=\n    _maybe_scoped_id=\"${_relative_folder_path:+\"${_relative_folder_path}/\"}${_id}\"\n\n    if _notebooks current --selected ||\n       [[ \"${_notebook_path}\" != \"$(_notebooks current --path)\" ]]\n    then\n      local _notebook_name=\n      _notebook_name=\"$(\n        _notebooks show \"${_notebook_path}\" --name --no-color\n      )\"\n\n      _maybe_scoped_id=\"${_notebook_name}:${_maybe_scoped_id}\"\n      _maybe_scoped_relative_path=\"${_notebook_name}:${_maybe_scoped_relative_path}\"\n    fi\n\n    local _info_line=\n    _info_line+=\"$(_color_brackets \"${_maybe_scoped_id}\") \"\n\n    local _indicators=\n    _indicators=\"$(_show \"${_notebook_path}/${_relative_path}\" --indicators)\"\n\n    if [[ -n \"${_indicators:-}\" ]]\n    then\n      _info_line+=\"${_indicators}\"\n    fi\n\n    _info_line+=\"$(_color_primary \"${_maybe_scoped_relative_path}\") \"\n\n    local _title=\n    _title=\"$(_get_content \"${_notebook_path}/${_relative_path}\" --title)\"\n\n    if [[ -n \"${_title:-}\"      ]]\n    then\n      if [[ \"${_relative_path}\"  =~ todo\\.md$ ]] && ((_COLOR_ENABLED))\n      then\n        _title=\"\\\n${_title/\\[x\\]/${_TPUT_SETAF_8}[${_TPUT_COLOR_PRIMARY}x${_TPUT_SETAF_8}]${_TPUT_SGR0}}\"\n        _title=\"\\\n${_title/\\[$' '\\]/${_TPUT_SETAF_8}[ ]${_TPUT_SGR0}}\"\n      fi\n\n      _info_line+=\"\\\"${_title}\\\"\"\n    fi\n\n    # trim leading and trailing whitepace\n    IFS=' ' read -r _info_line <<<\"${_info_line:-}\"\n\n    printf \"%s\\\\n\" \"${_info_line:-}\"\n\n    return 0\n  fi\n\n  if ((_print_added))\n  then\n    git -C \"${_notebook_path}\" --no-pager \\\n      log                                 \\\n      --follow                            \\\n      --diff-filter=A                     \\\n      --date=iso-local                    \\\n      --pretty='%ad'                      \\\n      \"${_relative_path}\"\n\n    return 0\n  fi\n\n  if ((_print_updated))\n  then\n    git -C \"${_notebook_path}\" --no-pager \\\n      log                                 \\\n      -1                                  \\\n      --follow                            \\\n      --date=iso-local                    \\\n      --pretty='%ad'                      \\\n      \"${_relative_path}\"\n\n    return 0\n  fi\n\n  if _file_is_encrypted \"${_target_path}\"\n  then\n    local _encrypted_path=\n    _encrypted_path=\"${_target_path}\"\n\n    local _decryption_tool=\n    _decryption_tool=\"$(_get_decryption_tool \"${_encrypted_path:-}\")\"\n\n    if [[    \"${_decryption_tool:-}\" != \"age\" ]] &&\n       [[ -z \"${_password}\"                   ]]\n    then\n      # request password without displaying it\n      printf \"%s: \" \"$(_color_primary \"Password\")\"\n\n      local _password=\n      IFS='' read -r -e -d $'\\n' -s _password </dev/tty\n\n      if [[ -z \"${_password}\"                 ]]\n      then\n        _exit_1 printf \"Password required.\\\\n\"\n      fi\n    fi\n\n    local _decrypted_path=\n    _decrypted_path=\"$(_decrypt_file \"${_target_path}\" \"${_password}\")\"\n\n    _target_path=\"${_decrypted_path}\"\n  fi\n\n  if ((_print_bookmark_url))\n  then\n    if ! _file_is_bookmark \"${_target_path:-}\"\n    then\n      _warn printf \"%s\\\\n\" \"Not a bookmark.\\\\n\"\n    fi\n\n    local _url_match_patterns=()\n\n    local __url_match_pattern=\n    for   __url_match_pattern in \"${_URL_PATTERNS[@]}\"\n    do\n      _url_match_patterns+=(-e \"<${__url_match_pattern}>\")\n    done\n\n    local _target_url=\n    _target_url=\"$(\n      grep -E                         \\\n        \"${_url_match_patterns[@]:-}\" \\\n        \"${_target_path}\"             \\\n        | head -n 1                   \\\n        | sed \"s/^[[:space:]]*<//g\"   \\\n        | sed \"s/>[[:space:]]*$//g\"   || :\n    )\"\n\n    if [[ -z \"${_target_url:-}\"       ]]\n    then\n      _warn printf \"No URL found.\\\\n\"\n\n      return 1\n    fi\n\n    printf \"%s\\\\n\" \"${_target_url:-}\"\n\n    return 0\n  fi\n\n  if _file_is_archive \"${_target_path}\"     &&\n     [[ ! \"${_target_path}\" =~ docx$  ]]\n  then\n    _exit_1 printf \"\\\nCan't show archives. Export archive and expand to edit.\\\\n\"\n  fi\n\n  # change directory to folder path to enable relative paths\n  cd \"${_folder_path}\"\n\n  # turn on case-insensitive matching\n  shopt -s nocasematch\n\n  if [[ -z \"${_tool:-}\" ]]                  &&\n     _file_is_image \"${_target_path:-}\"     &&\n     _contains      \"${NB_IMAGE_TOOL:-}\"    \\\n        \"catimg\"                            \\\n        \"chafa\"                             \\\n        \"icat\"                              \\\n        \"imgcat\"                            \\\n        \"magick\"                            \\\n        \"termvisage\"                        \\\n        \"timg\"                              \\\n        \"viu\"\n  then\n    _tool=\"${NB_IMAGE_TOOL:-}\"\n  fi\n\n  if _contains \"${_target_path##*.}\"        \\\n       \"csv\" \"json\" \"mysql\" \"postgres\"      \\\n       \"sqlite\" \"tab\" \"tar\" \"tsv\" \"usv\" \"vds\" \"xml\" \"xlsx\" \"zip\"      &&\n     _command_exists \"vd\"                                             &&\n     _contains \"${_tool:-${NB_DATA_TOOL:-vd}}\" \"vd\" \"visidata\"\n  then\n    vd \"${_target_path}\"\n  elif _contains \"${_target_path##*.}\" \"csv\" \"sc\" \"tab\" \"tsv\" \"xlsx\"  &&\n       _command_exists \"sc-im\"                                        &&\n       [[ \"${_tool:-${NB_DATA_TOOL:-sc-im}}\" == \"sc-im\"      ]]\n  then\n    sc-im \"${_target_path}\"\n  elif _contains \"${_target_path##*.}\" \"csv\" \"psv\" \"tsv\"              &&\n       _command_exists \"tv\"                                           &&\n       _contains \"${_tool:-${NB_DATA_TOOL:-tv}}\" \"tv\" \"tidy-viewer\" \"tidyviewer\"\n  then\n    tv \"${_target_path}\"\n  elif ! _file_is_text \"${_target_path}\"    &&\n     ! {\n       ((_render))                          &&\n       [[       \"${_target_path:-}\" =~ (\\.docx$|\\.epub$|\\.odt$) ]]\n     } || [[ -d \"${_target_path:-}\"                             ]]\n  then\n    if [[ -d \"${_target_path}\"  ]]\n    then\n      if [[ -z \"${_tool:-}\"     ]]          &&\n        _contains \"${NB_DIRECTORY_TOOL:-}\"  \\\n          \"joshuto\"                         \\\n          \"lsd\"                             \\\n          \"mc\"                              \\\n          \"exa\"                             \\\n          \"eza\"                             \\\n          \"ranger\"                          \\\n          \"vifm\"                            &&\n        _command_exists \"${NB_DIRECTORY_TOOL:-}\"\n      then\n        _tool=\"${NB_DIRECTORY_TOOL}\"\n      fi\n\n      if [[ -n \"${NB_BROWSE_SERVER_TOOL:-}\" ]]  &&\n         _command_exists \"pandoc\"               &&\n         _web_browser --check                   &&\n         [[ -z \"${_tool:-}\"     ]]\n      then\n        cd \"${_CURRENT_WORKING_DIR}\"\n\n        _defer \"_browse\" \"${_target_path}/\"\n\n        return 0\n      elif _command_exists \"ranger\"   && [[ \"${_tool:-ranger}\"  == \"ranger\"   ]]\n      then\n        ranger \"${_target_path}\"\n      elif _command_exists \"mc\"       && [[ \"${_tool:-mc}\"      == \"mc\"       ]]\n      then\n        mc \"${_target_path}\"\n      elif _command_exists \"vifm\"     && [[ \"${_tool:-vifm}\"    == \"vifm\"     ]]\n      "
        },
        {
          "name": "nb.go",
          "type": "tree",
          "content": null
        },
        {
          "name": "nb.ksh",
          "type": "tree",
          "content": null
        },
        {
          "name": "nb.zsh",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.3076171875,
          "content": "{\n  \"name\": \"nb.sh\",\n  \"version\": \"7.15.1\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"nb.sh\",\n      \"version\": \"7.15.1\",\n      \"license\": \"AGPL-3.0-or-later\",\n      \"bin\": {\n        \"bookmark\": \"bin/bookmark\",\n        \"nb\": \"nb\",\n        \"nb.sh\": \"nb\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0517578125,
          "content": "{\n  \"name\": \"nb.sh\",\n  \"version\": \"7.15.1\",\n  \"description\": \"CLI and local web note-taking, bookmarking, and archiving with encryption, search, Git-backed versioning and syncing, tagging, and more in a single portable script.\",\n  \"global\": true,\n  \"install\": \"make install\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"bin\": {\n    \"nb\": \"nb\",\n    \"nb.sh\": \"nb\",\n    \"bookmark\": \"bin/bookmark\"\n  },\n  \"scripts\": {\n    \"test\": \"bats test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/xwmx/nb.git\"\n  },\n  \"keywords\": [\n    \"notes\",\n    \"bash\",\n    \"shell\",\n    \"productivity\",\n    \"cli\",\n    \"terminal\",\n    \"command-line\",\n    \"prompt\",\n    \"note-taking\",\n    \"vim\",\n    \"emacs\",\n    \"vscode\",\n    \"git\",\n    \"versioning\",\n    \"syncing\",\n    \"sync\",\n    \"encryption\",\n    \"pandoc\",\n    \"bookmarks\",\n    \"bookmarking\",\n    \"tagging\",\n    \"tags\",\n    \"archive\"\n  ],\n  \"author\": \"William Melody\",\n  \"license\": \"AGPL-3.0-or-later\",\n  \"bugs\": {\n    \"url\": \"https://github.com/xwmx/nb/issues\"\n  },\n  \"homepage\": \"https://github.com/xwmx/nb#readme\"\n}\n"
        },
        {
          "name": "package.sh",
          "type": "blob",
          "size": 0.3779296875,
          "content": "###############################################################################\n# package.sh\n#\n# Configuration for basher, a package manager for shell scripts.\n#\n# https://github.com/basherpm/basher\n###############################################################################\n\nexport BINS=nb\nexport BASH_COMPLETIONS=etc/nb-completion.bash\nexport ZSH_COMPLETIONS=etc/nb-completion.zsh\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}