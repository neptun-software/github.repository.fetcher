{
  "metadata": {
    "timestamp": 1736568848512,
    "page": 34,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "1N3/Sn1per",
      "stars": 8293,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 37.1630859375,
          "content": "## CHANGELOG:\n* v9.2 - Added Tomba.io API integration via OSINT mode (Credit: @benemohamed)\n* v9.2 - Fixed issue with gau tool not installing and updated GAU setting in confs\n* v9.2 - Updated python2 to python3\n* v9.2 - Removed Slurp tool\n* v9.2 - Added BlackArch Dockerfile (Credit: @AnonymousWP)\n* v9.2 - Updated DockerFile to latest Kali release (Credit: @AnonymousWP)\n* v9.1 - Fixed issue with dirsearch installation/command syntax update\n* v9.1 - Updated Nuclei sc0pe templates\n* v9.1 - Fixed issue with Nuclei sc0pe parsers not working\n* v9.1 - Fixed issue with GAU installer/commmand not working\n* v9.1 - Fixed issue with passive URL fetching \n* v9.1 - Fixed issue with nuclei not being installed\n* v9.1 - Removed error in hackertarget URL fetching\n* v9.1 - Added dnsutils to installer to fix missing deps\n* v9.1 - Fixed issue with gau in webscan modes not running\n* v9.1 - Updated subfinder to latest version\n* v9.1 - Added new email spoofing security checks to OSINT mode (-o)\n* v9.1 - Removed spoofcheck.py\n* v9.1 - Updated timeout settings for curl which was causing sockets/scans to hang\n* v9.1 - Fixed issue with Nuclei symlink missing in installer\n* v9.1 - Fixed issue with Nuclei sc0pe parser not parsing results correctly\n* v9.1 - Fixed issue with Dirsearch not running due to invalid command settings\n* v9.1 - Fixed issue with Nuclei templates not being installed\n* v9.1 - Fixed issue with enum4linux command not being installed\n* v9.1 - Fixed HackerTarget API integration\n* v9.1 - Fixed issue with ping command not being installed\n* v9.1 - Fixed issue with carriage returns in conf\n* v9.1 - Fixed issue with DNS resolution in 'discover' mode scans causing duplicate hosts\n* v9.1 - Fixed issue with bruteforce running automatically due to changes in conf file\n* v9.1 - Added verbose scan notifications for disabled conf options\n* v9.1 - Updated default aux mode options in default sniper.conf\n* v9.0 - Added Fortinet FortiGate SSL VPN Panel Detected sc0pe template\n* v9.0 - Added CVE-2020-17519 - Apache Flink Path Traversal sc0pe template\n* v9.0 - Added RabbitMQ Management Interface Detected sc0pe template\n* v9.0 - Added CVE-2020-29583 Zyxel SSH Hardcoded Credentials via BruteX\n* v9.0 - Removed vulnscan NMap CSV updates/downloads to save space/bandwidth\n* v9.0 - Added Nuclei sc0pe parser\n* v9.0 - Added Nuclei vulnerability scanner\n* v9.0 - Added Wordpress WPScan sc0pe vulnerability parser\n* v9.0 - Fixed issue with wrong WPscan API key command\n* v9.0 - Added CVE-2020-11738 - WordPress Duplicator plugin Directory Traversal sc0pe template\n* v9.0 - Renamed AUTO_VULNSCAN setting to \"VULNSCAN\" in sniper.conf to perform vulnerability scans via 'normal' mode\n* v8.9 - Tuned sniper.conf around performance for all scans and recon modes\n* v8.9 - Added out of scope options to config\n* v8.9 - Added automatic HTTP/HTTPS web scans and vulnerability scans to 'normal' mode\n* v8.9 - Added SolarWinds Orion Panel Default Credentials sc0pe template\n* v8.9 - Added SolarWinds Orion Panel sc0pe template\n* v8.9 - Fixed issue with UDP port scans not working\n* v8.9 - Fixed issue with theHarvester not running on Kali 2020.4\n* v8.9 - Added WPScan API support\n* v8.9 - Added CVE-2020-8209 - XenMobile-Citrix Endpoint Management Config Password Disclosure sc0pe template\n* v8.9 - Added CVE-2020-8209 - XenMobile-Citrix Endpoint Management Path Traversal sc0pe template\n* v8.9 - Removed verbose error for chromium on Ubuntu\n* v8.9 - Added CVE-2020-8209 - Citrix XenMobile Server Path Traversal sc0pe template\n* v8.9 - Fixed F+ in CSP Not Enforced sc0pe template\n* v8.9 - Added CVE-2020-14815 - Oracle Business Intelligence Enterprise DOM XSS sc0pe template\n* v8.9 - Fixed issue with dnscan not working in Kali 2020.3\n* v8.9 - Fixed issue with screenshots not working in Ubuntu 2020\n* v8.9 - Added Frontpage Service Password Disclosure sc0pe template\n* v8.9 - Removed Yasuo tool\n* v8.8 - Fixed issue with webscreenshot on Kali 2020.3+\n* v8.8 - Fixed error in install.sh for theharvester sym link\n* v8.8 - Fixed issue with flyover mode not capturing web screenshots\n* v8.8 - Added automatic 'flyover' scans of all discovered domains for 'recon' mode\n* v8.8 - Added static grep searching rules of all URL's and sub-domains (see sniper.conf for details)\n* v8.8 - Added verbose status logging to flyover mode showing HTTP status/redirect/title, etc.\n* v8.8 - Added integration for Port Scanner Add-on for Sn1per Professional\n* v8.8 - Added enhanced scanning of all unique dynamic URL's via InjectX fuzzer\n* v8.8 - Added CVE-2020-25213 - WP File Manager File Upload sc0pe template\n* v8.8 - Added cPanel Login Found sc0pe template\n* v8.8 - Added Wordpress WP-File-Manager Version Detected sc0pe template\n* v8.8 - Added VMware vCenter Unauthenticated Arbitrary File Read sc0pe template\n* v8.8 - Added PHP Composer Disclosure sc0pe template\n* v8.8 - Added Git Config Disclosure sc0pe template\n* v8.8 - Added updated NMap vulscan DB files\n* v8.8 - Added CVE-2020-9047 - exacqVision Web Service Remote Code Execution sc0pe template\n* v8.8 - Removed UDP port scan settings/options and combined with full portscan ports\n* v8.8 - Added CVE-2019-8442 - Jira Webroot Directory Traversal sc0pe template\n* v8.8 - Added CVE-2020-2034 - PAN-OS GlobalProtect OS Command Injection sc0pe template\n* v8.8 - Added CVE-2020-2551 - Unauthenticated Oracle WebLogic Server Remote Code Execution sc0pe template\n* v8.8 - Added CVE-2020-14181 - User Enumeration Via Insecure Jira Endpoint sc0pe template\n* v8.8 - Added Smuggler HTTP request smuggling detection\n* v8.8 - Added CVE-2020-0618 - Remote Code Execution SQL Server Reporting Services sc0pe template\n* v8.8 - Added CVE-2020-5412 - Full-read SSRF in Spring Cloud Netflix sc0pe template\n* v8.8 - Added Jaspersoft Detected sc0pe template\n* v8.8 - Added improved dirsearch exclude options to all web file/dir searches\n* v8.8 - Fixed naming conflict for theharvester\n* v8.8 - Created backups of all NMap HTML reports for fullportonly scans\n* v8.8 - Added line limit to GUA URL's displayed in console\n* v8.7 - Added AvantFAX LOGIN Detected sc0pe template\n* v8.7 - Updated web file bruteforce lists\n* v8.7 - Added updated Slack API integration/notifications\n* v8.7 - Added Arachni, Nikto, Nessus, NMap + 20 passive sc0pe vulnerability parsers\n* v8.7 - Added CVE-2020-15129 - Open Redirect In Traefik sc0pe template\n* v8.7 - Added MobileIron Login sc0pe template\n* v8.7 - Added Revive Adserver XSS sc0pe template\n* v8.7 - Added IceWarp Webmail XSS sc0pe template\n* v8.7 - Added Mara CMS v7.5 XSS sc0pe template\n* v8.7 - Added Administrative Privilege Escalation in SAP NetWeaver sc0pe template\n* v8.7 - Added Magento 2.3.0 SQL Injection sc0pe template\n* v8.7 - Added CVE-2020-15920 - Unauthenticated RCE at Mida eFramework sc0pe template\n* v8.7 - Added CVE-2019-7192 - QNAP Pre-Auth Root RCE sc0pe template\n* v8.7 - Added CVE-2020-10204 - Sonatype Nexus Repository RCE sc0pe template\n* v8.7 - Added CVE-2020-13167 - Netsweeper WebAdmin unixlogin.php Python Code Injection sc0pe template\n* v8.7 - Added CVE-2020-2140 - Jenkin AuditTrailPlugin XSS sc0pe template\n* v8.7 - Added CVE-2020-7209 - LinuxKI Toolset 6.01 Remote Command Execution sc0pe template\n* v8.7 - Added CVE-2019-16662 - rConfig 3.9.2 Remote Code Execution sc0pe template\n* v8.7 - Added Sitemap.xml Detected sc0pe template\n* v8.7 - Added Robots.txt Detected sc0pe template\n* v8.7 - Added AWS S3 Public Bucket Listing sc0pe template\n* v8.7 - Fixed logic error in stealth mode recon scans not running\n* v8.7 - Added CVE-2020-7048 - WP Database Reset 3.15 Unauthenticated Database Reset sc0pe template\n* v8.7 - Fixed F- detection in Wordpress Sc0pe templates\n* v8.7 - Added CVE-2020-11530 - Wordpress Chop Slider 3 Plugin SQL Injection sc0pe template\n* v8.7 - Added CVE-2019-11580 - Atlassian Crowd Data Center Unauthenticated RCE sc0pe template\n* v8.7 - Added CVE-2019-16759 - vBulletin 5.x 0-Day Pre-Auth Remote Command Execution Bypass sc0pe template\n* v8.6 - Added new Sn1per configuration flow that allows persistent user configurations and API key transfer\n* v8.6 - Updated port lists to remove duplicate ports error and slim down list\n* v8.6 - Updated PHP to 7.4\n* v8.6 - Added CVE-2020-12720 - vBulletin Unauthenticaed SQLi\n* v8.6 - Added CVE-2020-9757 - SEOmatic < 3.3.0 Server-Side Template Injection\n* v8.6 - Added CVE-2020-1147 - Remote Code Execution in Microsoft SharePoint Server\n* v8.6 - Added CVE-2020-3187 - Citrix Unauthenticated File Deletion\n* v8.6 - Added CVE-2020-8193 - Citrix Unauthenticated LFI\n* v8.6 - Added CVE-2020-8194 - Citrix ADC & NetScaler Gateway Reflected Code Injection\n* v8.6 - Added CVE-2020-8982 - Citrix ShareFile StorageZones Unauthenticated Arbitrary File Read\n* v8.6 - Added CVE-2020-9484 - Apache Tomcat RCE by deserialization\n* v8.6 - Added Cisco VPN scanner template\n* v8.6 - Added Tiki Wiki CMS scanner template\n* v8.6 - Added Palo Alto PAN OS Portal scanner template\n* v8.6 - Added SAP NetWeaver AS JAVA LM Configuration Wizard Detection\n* v8.6 - Added delete task workspace function to remove running tasks\n* v8.6 - Added CVE-2020-3452 - Cisco ASA/FTD Arbitrary File Reading Vulnerability Sc0pe template\n* v8.6 - Updated theharvester command to exclude github-code search\n* v8.6 - Updated theharvester installer to v3.1\n* v8.6 - Added urlscan.io API to OSINT mode (-o)\n* v8.6 - Added OpenVAS package to install.sh \n* v8.6 - Added Palo Alto GlobalProtect PAN-OS Portal Sc0pe template\n* v8.6 - Fixed issue with Javascript downloader downloading localhost files instead of target\n* v8.6 - Added CVE-2020-5902 F5 BIG-IP RCE sc0pe template\n* v8.6 - Added CVE-2020-5902 F5 BIG-IP XSS sc0pe template\n* v8.6 - Added F5 BIG-IP detection sc0pe template\n* v8.6 - Added interesting ports sc0pe template\n* v8.6 - Added components with known vulnerabilities sc0pe template\n* v8.6 - Added server header disclosure sc0pe template\n* v8.6 - Added SMBv1 enabled sc0pe template\n* v8.6 - Removed verbose comment from stealth scan\n* v8.5 - Added manual installer for Metasploit\n* v8.5 - Added Phantomjs manual installer\n* v8.5 - Added sc0pe template to check for default credentials via BruteX\n* v8.5 - Added fullportscans to all 'web' mode scans to ensure full port coverage\n* v8.5 - Fixed issue with 2nd stage OSINT scans not running\n* v8.5 - Added port values to sc0pe engine to define port numbers\n* v8.5 - Fixed issue with LinkFinder not working\n* v8.5 - Fixed issue with Javascript link parser\n* v8.5 - Added phantomjs dependency to fix webscreenshots on Ubuntu\n* v8.5 - Added http-default-accounts NMap NSE to check for default web credentials\n* v8.5 - Fixed several issues with install.sh to resolve deps on Ubuntu and Kali 2020.2\n* v8.5 - Removed larger wordlists to reduce install size of Sn1per\n* v8.5 - Added 20+ new active/passive sc0pe templates\n* v8.5 - Fixed issue with installer on latest Kali and Docker builds\n* v8.5 - Fixed custom installer for Arachni\n* v8.5 - Fixed Dockerfile with updated Kali image (CC. @stevemcilwain)\n* v8.4 - Added project \"Sc0pe\" active/passive vulnerability scanner\n* v8.4 - Added 68 new active sc0pe templates\n* v8.4 - Added 14 new passive sc0pe templates\n* v8.4 - Added OWASP ZAP API integration\n* v8.4 - Added 8 new Sn1per configuration templates (see /usr/share/sniper/conf/)\n* v8.4 - Added Gau (https://github.com/lc/gau)\n* v8.4 - Added rapiddns subdomain retrieval\n* v8.4 - Updated web content wordlists\n* v8.4 - Improved efficiency of 'web' and 'recon' mode scans\n* v8.4 - Disabled legacy Metasploit web exploits (check Sn1per conf to re-enable)\n* v8.4 - Fixed issue with dirsearch asterisk being used incorrectly\n* v8.4 - Fixed issue with airstrike mode not updated Sn1per Professional v8.0 host list\n* v8.4 - Fixed issue with webtech re.error: invalid group reference 1 at position 130\n* v8.3 - Added Github subdomain retrieval (requires API key/conf options enabled)\n* v8.3 - Added NMAP_OPTIONS setting to sniper.conf to configure optional NMap scan settings\n* v8.3 - Added option to specify custom Sn1per configuration via (-c) switch\n* v8.3 - Created several custom config files to select from, including: bug_bounty_quick, bug_bounty_max_javascript, super_stealth_mode, webpwn_only + more\n* v8.3 - Added workspace --export option to backup/export a workspace\n* v8.3 - Added flyover mode tuning options to sniper.conf\n* v8.3 - Added GitGraber automated Github leak search (https://github.com/hisxo/gitGraber)\n* v8.3 - Added static Javascript parsing for sub-domains, URL's, path relative links and comments\n* v8.3 - Added js-beautifier\n* v8.3 - Added LinkFinder Javascript link finder (https://github.com/GerbenJavado/LinkFinder)\n* v8.3 - Added fprobe HTTP probe checker (https://github.com/theblackturtle/fprobe)\n* v8.3 - Added Cisco RV320 and RV325 Unauthenticated Remote Code Execution CVE-2019-1653 MSF exploit\n* v8.3 - Improved performance of 'stealth' and 'recon' modes\n* v8.3 - Updated default port lists\n* v8.3 - Improved performance of all port scans\n* v8.3 - Added fix for missing Amass package\n* v8.3 - Added sniper.conf options for OPENVAS_HOST and OPENVAS_PORT selection for remote instances\n* v8.3 - Improved 'vulnscan' mode via OpenVAS to scan the same asset multiple times with improved error handling\n* v8.2 - Added root priv check to sniper script to run\n* v8.2 - Added NMap port change notifications via Slack\n* v8.2 - Fixed issue with firefox not loading on Kali Linux 2020.1 \n* v8.2 - Fixed issue with Masswebscan mode not working\n* v8.2 - Added Rails file exposure exploit CVE-2019-5418\n* v8.2 - Updated wordlist selections to fingerprint common vulnerable applications\n* v8.2 - Added h8mail compromised credentials check to OSINT (-o) mode\n* v8.2 - Added Kali start menu app & icon for Sn1per\n* v8.2 - Added check for insecure SSL/TLS connections\n* v8.2 - Added NMAP_OPTIONS setting in ~/.sniper.conf to configure optional NMap settings\n* v8.2 - Fixed issue with ManageEngine MSF exploit payload\n* v8.2 - Added Spyse sub-domain enumeration tool (https://github.com/zeropwn/spyse.py)\n* v8.2 - Fixed issue with Subjack (open /src/github.com/haccer/subjack/fingerprints.json: no such file or directory)\n* v8.1 - Added Citrix Gateway Arbitary Code Execution CVE-2019-19781 vulnerability detection\n* v8.1 - Added Pulse Secure VPN Arbitrary File Disclosure CVE-2019-11510 exploit\n* v8.1 - Added --data-length=50 for NMap IPS evasion\n* v8.1 - Removed NMap vulscan script due to F+ results\n* v8.1 - Fixed issue with CRT.SH sub-domain retrieval\n* v8.1 - Updated Kali Linux keyring package\n* v8.1 - Fixed \"[: ==: unary operator expected\" in all code\n* v8.1 - Updated Sn1per Professional autoload settings\n* v8.1 - Updated web brute force wordlists\n* v8.1 - Removed null and debug errors from passive spider API output\n* v8.1 - Updated Commoncrawl index repo\n* v8.1 - Updated DockerFile repository\n* v8.1 - Fixed issue with -dh flag to delete host with Sn1per Pro v8.0\n* v8.1 - Fixed issue with subfinder missing\n* v8.1 - Fixed issue with 7zip missing\n* v8.1 - Added check for Ubuntu to install.sh automatically\n* v8.0 - Added ASnip tool to retrieve ASN's via 'recon' mode\n* v8.0 - Added Shodan sub-domain lookup\n* v8.0 - Added script timeout flag for NMap scripts\n* v8.0 - Fixed issue with dnsenum getting stuck on gathering dns info stage\n* v8.0 - Added option to force upgrade/install.sh without user prompt (ie. ./install.sh force)\n* v8.0 - Fixed issue with theHarvester package on Ubuntu systems\n* v8.0 - Fixed error \"[: ==: unary operator expected\" in all modes\n* v8.0 - Added net-tools package for Ubuntu OS deps\n* v7.4 - Added LDAP anomyous search to port 389/tcp checks (Shoutout @D0rkerDevil)\n* v7.4 - Added Java RMI dump registry scan checks and exploits to port 8001/tcp (Shoutout @D0rkerDevil)\n* v7.4 - Added CheckPoint Firewall-1 SecuRemote Topology Service Hostname Disclosure MSF module\n* v7.4 - Added virtualhost scanning via web mode\n* v7.4 - Added Gobuster\n* v7.4 - Addd URLCrazy DNS alterations check to OSINT mode\n* v7.4 - Added Ultratools Whois Lookups to OSINT mode\n* v7.4 - Added Email-Format.com Email Retreival to OSINT mode\n* v7.4 - Added Metasploit OSINT email retrieval to OSINT mode\n* v7.4 - Added Hackertarget URL API retrieval to web modes\n* v7.4 - Fixed error in massvulnscan mode\n* v7.4 - Fixed issue with webscreenshot.py not running\n* v7.4 - Added reverse whois DNS search via AMass\n* v7.4 - Added MassDNS IP's to master sorted IP list \n* v7.4 - Fixed issue with MassDNS installation\n* v7.4 - Fixed bad path with DNSGen \n* v7.4 - Fixed issue with AMass not running\n* v7.4 - Improved performance of AltDNS/DNSgen/MassDNS retrieval\n* v7.4 - Changed webscreenshot.py setting to use chrome browser and increased timeout\n* v7.4 - Fixed issue with missing xmlstarlet package for OpenVAS scans\n* v7.4 - Improved active web spider URL consolidation\n* v7.3 - Added CVE-2019-15107 Webmin <= 1.920 - Unauthenticated RCE MSF exploit\n* v7.3 - Added massdns plugin\n* v7.3 - Added altdns plugin\n* v7.3 - Added dnsgen plugin\n* v7.3 - Updated web file/dir wordlists from public exploits and honeypots\n* v7.3 - Added time stamps to all commands\n* v7.3 - Removed CloudFront from domain hijacking checks\n* v7.3 - Removed snmp-brute.nse script due to scan issues\n* v7.3 - Fixed issue with discover scan workspace names\n* v7.3 - Fixed issue with DockerFile (sed: can't read /usr/bin/msfdb: No such file or directory)\n* v7.3 - Fixed issue with installer on docker not having pip installed\n* v7.3 - Fixed issue with port 161 not being referenced correctly in scans\n* v7.2 - Added experimental OpenVAS API integration\n* v7.2 - Improved Burpsuite 2.x API integration with vuln reporting\n* v7.2 - Added hunter.io API integration to recon mode scans\n* v7.2 - Added Cisco IKE Key Disclosure MSF exploit\n* v7.2 - Added JBoss MSF vuln scanner module\n* v7.2 - Added Apache CouchDB RCE MSF exploit\n* v7.2 - Added IBM Tivoli Endpoint Manager POST Query Buffer Overflow exploit\n* v7.2 - Added Java RMI MSF scanner\n* v7.2 - New scan mode \"vulnscan\"\n* v7.2 - New scan mode \"massportscan\"\n* v7.2 - New scan mode \"massweb\"\n* v7.2 - New scan mode \"masswebscan\"\n* v7.2 - New scan mode \"massvulnscan\"\n* v7.2 - Added additional Slack API notification settings\n* v7.2 - Improved NMap port detection and scan modes\n* v7.2 - Fixed issue with Censys API being enabled by default\n* v7.2 - Fixed verbose errors in subjack/subover tools\n* v7.2 - Fixed issue with NMap http scripts not working\n* v7.1 - Added BlueKeep CVE-2019-0708 MSF scanner\n* v7.1 - Added automatic workspace generation for single target scans\n* v7.1 - Added new slack.sh API integration script\n* v7.1 - Added differential Slack notifications for new domains, new URL's and various scan outputs\n* v7.1 - Added vulners and vulscan NMap scripts\n* v7.1 - Added installer and support for Debian, Parrot and Ubuntu OS (install_debian.sh) (CC. @imhaxormad)\n* v7.1 - Fixed various issues with the DockerFile\n* v7.1 - Fixed/added Metasploit LHOST/LPORT values to all exploits based on sniper.conf settings\n* v7.1 - Fixed issue with Amass/Golang 1.11 not installing correctly\n* v7.0 - Added \"webscan\" mode for automated Burpsuite 2.x and Arachni web application scans only\n* v7.0 - Added Slack API notifications (Disabled by default..check ~/.sniper.conf)\n* v7.0 - Added new command switch to add daily, weekly or monthly sniper scheduled scans... check README\n* v7.0 - Added scheduled scan tasks command switch (Needs additional configuration to setup... check README)\n* v7.0 - Added Axis2 authenticated deployer MSF exploit\n* v7.0 - Added Axis2 login brute force module\n* v7.0 - Added subjack tool to check for subdomain hijacking\n* v7.0 - Added sorted IP lists under $LOOT_DIR/ips/ips-all-sorted.txt\n* v7.0 - Added subnet retrieval for all 'recon' mode scans under $LOOT_DIR/nmap/subnets-$TARGET.txt\n* v7.0 - Added Webscreenshot.py and disabled cutycapt from default config\n* v7.0 - Added Gobuster (Disabled by default..check ~/.sniper.conf)\n* v7.0 - Fixed issue with SubOver not working due to bad path\n* v7.0 - Fixed issue with flyover mode running 2x \n* v6.3 - Added Drupal RESET Unserialize RCE CVE-2019-6340\n* v6.2 - Added Glassfish Admin traversal MSF exploit \n* v6.2 - Added ElasticSearch Java Injection MSF RCE exploit\n* v6.2 - Added WebTech web fingerprinting tool\n* v6.2 - Added censys subdomain retrieval and API key config\n* v6.2 - Added project sonar sub-domain retrieval\n* v6.2 - Added command switch to remove workspace (-d)\n* v6.2 - Added command switch to remove host (-dh)\n* v6.2 - Added DockerFile to run Sn1per in Docker (CC. Hariom Vashisth <hariom.devops@gmail.com>)\n* v6.2 - Changed option to automatically import all NMap XML's into Metasploit's DB\n* v6.2 - Changed option to automatically load Sn1per Professional's report when scans complete\n* v6.2 - Added config option to enable/disable subdomain hijacking checks in sniper.conf\n* v6.2 - Fixed issue with sniper --list command having invalid reference\n* v6.2 - Fixed issue with theharvester not running\n* v6.1 - Added automated web scanning via Burpsuite Pro 2.x API for all 'web' mode scans\n* v6.1 - Added Waybackmachine URL retrieval to all web scans\n* v6.1 - Converted all exploits to Metasploit\n* v6.1 - Added configuration options to set LHOST/LPORT for all Metasploit exploits in sniper.conf\n* v6.1 - Added improved web brute forcing dictionaries for all scan modes\n* v6.1 - Added individual logging for all tools under the loot directory\n* v6.1 - Added new sniper.conf options to enabled/disable all plugins and change settings per user\n* v6.1 - Fixed issue with CMSMap install/usage\n* v6.1 - Fixed issue with WPScan gem dependency missing (public_suffix)\n* v6.1 - Fixed timeout setting in cutycapt\n* v6.1 - Fixed issue with theharvester not running correctly\n* v6.1 - Fixed issue with Amass not running due to invalid command line options in latest release\n* v6.1 - Fixed issue with Sn1per Professional notepad.html missing\n* v6.1 - Cleaned up plugins and install dependencies list\n* v6.0 - Improved scan options for discover mode scans\n* v6.0 - Fixed issue with pip3 dependency package missing\n* v6.0 - Removed iceweasel from install.sh to fix apt error\n* v5.9 - Fixed issue with auto updates not notifying users of updates\n* v5.8 - Fixed issue with subfinder not working due to lack of wordlist switch\n* v5.8 - Fixed missing osint directory/file paths\n* v5.7 - Added libSSH auth bypass scanner CVE-2018-10933\n* v5.7 - Added HTTP PUT method RCE MSF exploit\n* v5.7 - Added sniper.conf scan configuration file to customize sniper environments by user\n* v5.7 - Added modular scan mode source files\n* v5.7 - Updated wordlists for improved performance and results\n* v5.7 - Fixed issue with DNScan using an invalid path\n* v5.6 - Changed automatic report generation to \"ON\" for Sn1per Pro users\n* v5.5 - Added new multi-threaded high speed \"flyover\" mode added\n* v5.5 - Added new scan status mode via (sniper --status) command\n* v5.5 - Apache Struts CVE-2018-11776 RCE exploit\n* v5.5 - Added Android Insecure ADB RCE auto exploit\n* v5.5 - Added Apache Tomcat CVE-2017-12617 RCE exploit\n* v5.5 - Added Oracle WebLogic WLS-WSAT Component Deserialisation RCE CVE-2017-10271 MSF exploit\n* v5.5 - Added BlackWidow web application scanner with INJECTX fuzzer\n* v5.5 - Added CVE-2018-15473 SSH user enumeration script\n* v5.5 - Minor wordlist updates for web file brute forcing\n* v5.4 - Updated Golang in install.sh\n* v5.3 - Updated AMass repo in install.sh\n* v5.3 - Removed CloudFail\n* v5.3 - Fixed issue with subfinder missing brute force list\n* v5.3 - Fixed issue with invalid dnsscan reference\n* v5.2 - Added SubOver subdomain takeover scanner\n* v5.2 - Added Subfinder subdomain enumeration tool\n* v5.2 - Added Amass subdomain enumeration tool\n* v5.2 - Added configurable modules/plugins to sniper script\n* v5.2 - Added MS17-010 SMB Etternal Blue MSF exploit\n* v5.2 - Added MSF Postgresql login scanner\n* v5.2 - Added passive web spider\n* v5.2 - Added WebDav metasploit aux modules\n* v5.2 - Added NetBIOS NMap/MSF enumeration\n* v5.2 - Added SMB MSF enumeration\n* v5.2 - Added NSF MSF enumeration\n* v5.2 - Added SSH MSF enumeration\n* v5.2 - Added BadBlue Passthru MSF exploit\n* v5.2 - Added SMB GPP MSF aux module\n* v5.2 - Added Intel AMT MSF scanner\n* v5.2 - Added MySQL MSF scanner\n* v5.2 - Added MS03-026 DCOM RCE MSF exploit\n* v5.2 - Added VNC no auth MSF scanner\n* v5.2 - Added FTP MSF version scanner\n* v5.2 - Added FTP anonymous access MSF scanner\n* v5.2 - Added MS12-020 RDP MSF scanner\n* v5.2 - Added MS10-061 Spoolss MSF exploit\n* v5.2 - Added MS15-034 Sys Memory Dump MSF exploit\n* v5.2 - Added MS06-040 Netapi MSF exploit\n* v5.2 - Added MS05-039 PNP MSF exploit\n* v5.2 - Added MS12-020 Max Channels RDP scanner\n* v5.2 - Added JBoss status MSF scanner\n* v5.2 - Added Apache Struts 2 REST Plugin XStream RCE check\n* v5.2 - Added Apache Tomcat UTF8 Traversal MSF exploit\n* v5.2 - Added Apache OPTIONS Bleed MSF exploit\n* v5.2 - Added HP ILO Auth Bypass MSF exploit\n* v5.2 - Added Jooma Comfields SQL injection MSF exploit\n* v5.1 - Added dnscan to install.sh and updated sniper references which were broken\n* v5.1 - Changed default brute force list for dnscan to improve performance of scans\n* v5.1 - Removed CloudHunter and SubOver references (CC. 爱上平顶山)\n* v5.0 - Added Sn1per Pro reporting interface (see https://sn1persecurity.com for more details)\n* v5.0 - Added GPON Router RCE auto exploit \n* v5.0 - Added Cloudapp.net Azure subdomain takeover check\n* v5.0 - Added Cisco ASA Directory Traversal auto exploit (CVE-2018-0296)\n* v5.0 - Added Wig Web Information Gatherer\n* v5.0 - Added Dirsearch with custom dirsearch wordlists (quick, normal, full)\n* v5.0 - Fixed bug in installer/upgrade which copied the local dir contents to the install dir\n* v5.0 - Improved scan performance while taking web screenshots \n* v5.0 - Fixed repo issue with Slurp (Shoutz to @ifly53e)\n* v5.0 - Fixed issues with wrong ports listed in port scans (Shoutz to @ifly53e)\n* v5.0 - Minor code fixes and typos corrected (Shoutz to @ifly53e)\n* v5.0 - Updated \"discover\" mode scans for improved performance\n* v4.5 - Added Apache Struts 2 CVE-2017-9805 and CVE-2017-5638 detection\n* v4.5 - Added dirsearch web/file brute forcing\n* v4.5 - Added smart file/directory brute forcing to all scan modes.\n* v4.5 - Added subdomain brute force scan option to Sublist3r scan.\n* v4.4 - Fixed issue with sniper nuke and airstrike modes not running.\n* v4.4 - Added improved SNMP checks via NMap/Metasploit.\n* v4.4 - Resolved dependency issue for nfs-common package.\n* v4.4 - Fixed bug in sniper -fp command switch.\n* v4.3 - Fixed bug in version info.\n* v4.2 - Fixed bad merge in 4.1 causing sniper to break.\n* v4.1 - Fixed a few bugs with various command line switches for airstrike and nuke modes.\n* v4.1 - Fixed issue with path relative file inclusion via the -f flag. You can now include just the local filename (sniper -f targets.txt).\n* v4.0 - Added new command switch options for all sniper scans (see --help for details)\n* v4.0 - Added HTML formatted report for all workspaces to display screenshots, headers, reports and open ports\n* v4.0 - Added optional scan options such as --recon, --osint, --fullportonly --bruteforce, etc. to selectively enable scan modules. (see --help for details) \n* v4.0 - Improved Yasou scan options to include existing NMap XML files\n* v4.0 - Added automatic HTML/TXT/PDF reporting for all scans by default\n* v4.0 - Updated default workspace directory to store all loot files by $TARGET name or $WORKSPACE alias\n* v4.0 - Added screenshot and header retrieval to loot storage\n* v4.0 - Updated NMAP SMB enum script\n* v3.0 - Improved performance of various sniper modes\n* v3.0 - Added Aquatone domain flyover tool\n* v3.0 - Added slurp S3 public AWS scanner\n* v3.0 - Updated Sub-domain hijacking site list\n* v3.0 - Changed look and feel of console output to help readability\n* v3.0 - Added online/offline check to implement changes to scans when in online vs. offline mode\n* v2.9 - New improved fullportonly scan mode\n* v2.9 - Added online check to see if there's an active internet connection\n* v2.9 - Changed default browser to firefox to clear up errors in loot commmand\n* v2.9 - Created uninstall.sh script to uninstall sniper\n* v2.9 - Removed automatic workspace creation per scan\n* v2.9 - Added curl timeout in update command to fix lag\n* v2.9 - Fixed minor NMap UDP scan flag issue\n* v2.9 - Added Metagoofil\n* v2.9 - Updated theharvester scan options to include more results\n* v2.8 - Improved discovery mode scan performance and output\n* v2.8 - Improved fullportonly scan performance\n* v2.8 - Improved startup performance options\n* v2.8 - Added Cansina web/file brute force tool\n* v2.8 - Added webporthttp and webporthttps modes\n* v2.8 - Added custerd software enumeration tool\n* v2.7 - Fixed issue with sniper update command and install.sh not running\n* v2.7 - Fixed errors with GooHak\n* v2.7 - Fixed syntax errors in sniper conditional statements \n* v2.7 - Added CloudFail \n* v2.7 - Fixed issue with [: ==: unary operator expected errors\n* v2.6 - Added Blackarch Linux support \n* v2.6 - Added $BROWSER variable to set default browser\n* v2.5g - Updated README with update command\n* v2.5f - Fixes for various bugs reported and fixed by @ifly53e (https://github.com/1N3/Sn1per/pull/89)\n* v2.5e - Fixed issue with port 3128/tcp checks (CC. @ifly53e)\n* v2.5d - Added searchsploit option for (-v) to search all terms (CC. @ifly53e)\n* v2.5c - Added various improvements to 'discover' mode scans\n* v2.5b - Removed NMap script checks for 'fullportonly' mode\n* v2.5a - Added auto-updates to check and download new versions\n* v2.5a - Fixed issue with install.sh to resolve pip aha error\n* v2.5a - Added libxml2-utils to install.sh to meet dependencies\n* v2.5 - Added HTML report generation via sniper 'loot' command\n* v2.5 - Added automatic NMap searchsploit integration to find exploits\n* v2.5 - Added various improvements to Sn1per discovery scan mode\n* v2.5 - Fixed issue with IIS BoF NMap script (CC. ifly53e)\n* v2.4f - Fixed issue with upper NMap port range(CC. DaveW)\n* v2.4e - Added NMap no ping switch to all scans\n* v2.4d - Fixed issue with rpcinfo install script\n* v2.4d - Fixed issue with Arachni install script\n* v2.4c - Added loot and $TARGET sanity checks (CC. @menzow)\n* v2.4b - Fixed issue with discovery scan output file (CC. @ifly53e)\n* v2.4b - Fixed issue with Intel AMT RCE port list\n* v2.4a - Added all NMap script checks via 'fullportonly' mode\n* v2.4a - Added JBoss JMX Console Beanshell Deployer WAR Upload and Deployment Metasploit exploit\n* v2.4a - Added Java RMI RCE NMap/Metasploit detection\n* v2.4a - Added INTEL-SA-00075 (Intel AMT) vulnerability NMap script\n* v2.4 - Added detection for open X11 servers\n* v2.4 - Added IIS6 Win2k3 RCE NMap script\n* v2.4 - Added option to disable Google Hacking queries via Firefox\n* v2.3d - Fixed issue with loot command\n* v2.3c - Added Apache Struts 2 RCE NMap script\n* v2.3c - Added Apache Struts 2 RCE NMap exploit\n* v2.3b - Changed NMap scan options to exclude ping sweeps (-P0)\n* v2.3a - Fixed minor issue with MSSQL NMap script command (CC. @helo86)\n* v2.3 - Fixed minor issues with missing $TARGET definitions for NMap (CC. @helo86)\n* v2.2f - Added various optimizations and minor code fixes\n* v2.2e - Changed NMap scan options (removed -P0 flag)\n* v2.2d - Added MongoDB checks\n* v2.2d - Improved NMap scanning options\n* v2.2c - Added CouchDB checks\n* v2.2c - Updated Sub-domain takeover list\n* v2.2b - Added fullportonly mode to do exclusive full port scans\n* v2.2b - Fixed minor issue with Metasploit Pro not starting\n* v2.2b - Fixed minor issue with sniper loot command\n* v2.2a - Fixed minor issue with loot function\n* v2.2 - Added auto Metasploit Pro & Zenmap GUI integration\n* v2.2 - Added Sn1per workspaces to loot directory\n* v2.1d - Added crt.sh sub-domain check\n* v2.1d - Removed blank screenshots from loot directory\n* v2.1c - Fixed issue with install.sh install directories\n* v2.1b - Added automatic Metasploit NMap xml imports for loot directory\n* v2.1b - Removed Zenmap\n* v2.1a - Separated Arachni reports for port 80/443/tcp\n* v2.1a - Fixed NMap full port scan options\n* v2.1 - Added Arachni with auto HTML web reporting (web mode only)\n* v2.1 - Added full NMap detailed port scans\n* v2.1 - Added port 4443/tcp checks\n* v2.1 - Added META tag scans for web apps\n* v2.1 - Removed Uniscan from web mode\n* v2.1 - Removed SQLMap from web mode\n* v2.0b - Added help option --help\n* v2.0a - Fixed issue with ssh-audit\n* v2.0a - Fixed issue with 'discover' mode\n* v2.0 - Updated sub-domain takeover list\n* v2.0 - Improved scan performance for stealth, airstrike and discover modes\n* v2.0 - Removed jexboss due to clear screen issue with output\n* v2.0 - Auto loot directory sorting for all tools\n* v2.0 - Updated install.sh package list\n* v1.9c - Enabled BruteX automated brute force attacks\n* v1.9b - Fixed MSSQL port 1433/tcp port scan check (@hacktrack)\n* v1.9a - Removed testssl script from stealth mode scans\n* v1.9 - Added Ubuntu docker image for Sn1per (@menzow)\n* v1.9 - Added automatic loot directory sorting for all modes\n* v1.9 - Added MSSQL port 1433/tcp checks\n* v1.9 - Added SNMP port 162/tcp checks (@hexageek)\n* v1.9 - Added nslookup to install.sh\n* v1.9 - Fixed install.sh dependency duplicates\n* v1.8c - Added -A option to all NMap port scans\n* v1.8c - Fixed install.sh permission issue\n* v1.8c - Fixed install.sh cleanup options\n* v1.8c - Added ssh-audit\n* v1.8c - Added install directory (/usr/share/sniper/) to install script for universal access\n* v1.8c - Fixed issue with Metasploit SSH scans\n* v1.8c - Added auto-update to install.sh to automatically pull latest github release\n* v1.8b - Fixed bug with NMap UDP scan options\n* v1.8b - Fixed install.sh dependencies \n* v1.8b - Fixed jexboss options\n* v1.8a - Updated sub-domain hijack list of domains (CC: th3gundy)\n* v1.8 - Added sub-domain hijack scans for all sub-domains\n* v1.8 - Added auto explort of all sub-domains to /domains directory\n* v1.8 - Added additional stealth and airstrike checks for port 80 and 443\n* v1.8 - Fixed issue with theHarvester not working with google\n* v1.7g - Added email security/spoofing checks\n* v1.7f - Added Zenmap XML auto-imports \n* v1.7f - Added ClamAV RCE Nmap script\n* v1.7e - Fixed minor issue with airstrike and nuke mode\n* v1.7e - Fixed minor issues with discover mode\n* v1.7e - Added minor cosmetic improvements to reports\n* v1.7e - Disabled automatic brute forcing by default\n* v1.7e - Added automatic brute force setting in script vars\n* v1.7d - Added sslyze\n* v1.7d - Added 'discover' mode for full subnet scans\n* v1.7d - Added verbosity to scan tasks to separate sub-tasks better\n* v1.7c - Added plain text reporting \n* v1.7c - Improved loot directory structure and sorting\n* v1.7b - Fixed issue with airstrike mode not scanning correctly\n* v1.7b - Improved passive recon performance\n* v1.7a - Improved NMap http scan performance\n* v1.7a - Removed joomscan due to verbosity issues\n* v1.7 - Added uniscan web vulnerability scanner\n* v1.7 - Added joomscan Joomla scanner\n* v1.7 - Improved web scan performance\n* v1.7 - Fixed issue with inurlbr output\n* v1.7 - Added remote desktop viewing for RDP connections\n* v1.7 - Added experimental Metasploit exploit for Apache Struts RCE (CVE-2016-3081)\n* v1.6e - Added reporting option for nobrute mode (CC. @mero01)\n* v1.6e - Improved SMB scan performance/optimization added\n* v1.6d - Improved NMap scan performance options\n* v1.6d - Added xprobe2 OS finger printing tool\n* v1.6d - Added jexbos JBoss autopwn\n* v1.6d - Merged fix for theharvester package (CC. @RubenRocha)\n* v1.6d - Merged fix for SuperMicroScanner (CC. @mero01)\n* v1.6c - Add report mode for web scans\n* v1.6c - Fixed issues with Sublist3r and theharvester\n* v1.6c - Added Shocker Shellshock exploitation scanner\n* v1.6b - Added Sublist3r sub-domain brute tool\n* v1.6b - Added cutycapt web screenshot util\n* v1.6a - Added improvements to recon phase\n* v1.6a - Fixed small issue with 3rd party extension\n* v1.6a - Various improvements to overall optimization of scans\n* v1.6a - Added new \"web\" mode for full web application scans \n* v1.6 - Added 4 new modes including: stealth, port, airstrike and nuke\n* v1.6 - Added Java de-serialization scanner\n* v1.6 - Added reporting option to output to console and text file for all scans\n* v1.6 - Added option to set Sn1per full path for universal command line access\n* v1.6 - Added in DirBuster for web file brute forcing\n* v1.6 - Fixed issue with sderr errors in TheHarvester\n* v1.5e - Removed shodan command line tool due to issues\n* v1.5e - Fixed wafwoof installation in kali 2.0\n* v1.5d - Fixed minor issues with port 513/tmp and 514/tcp checks\n* v1.5c - Fixed issue which broke link to sniper directory\n* v1.5b - Added Squid Proxy checks port 3128/tcp\n* v1.5b - Fixed shodan setup options in install.sh\n* v1.5b - Fixed syntax error with theHarvester in install.sh\n* v1.5a - Fixed syntax error with port 8081 checks\n* v1.5a - Added Arachni integration\n* v1.5a - Added vsftpd, proftpd, mysql, unrealircd auto exploits\n* v1.5 - Added Metasploit scan and auto-exploit modules\n* v1.5 - Added additional port checks\n* v1.5 - Added full TCP/UDP NMap XML output\n* v1.5 - Auto tune scan for either IP or hostname/domain\n* v1.4h - Added auto IP/domain name scan configurations\n* v1.4g - Added finger enumeration scripts\n* v1.4g - Fixed nmap -p 445 target issue\n* v1.4g - Fixed smtp-enum target issue\n* v1.4f - Fixed BruteX directory bug\n* v1.4e - Fixed reported errors install.sh\n* v1.4e - Added auto-upgrade option to install.sh for existing Sn1per installs\n* v1.4d - Fixed missing rake gem install dependency\n* v1.4c - Reordered 3rd party extensions\n* v1.4b - Fixed install.sh executable references\n* v1.4b - Fixed Yasou dependencies in install.sh\n* v1.4b - Fixed minor issues with BruteX loot directory\n* v1.4 - Added Yasou for automatic web form brute forcing\n* v1.4 - Added MassBleed for SSL vulnerability detection\n* v1.4 - Added Breach-Miner for detection of breached accounts\n* v1.4 - Fixed minor errors with nmap\n* v1.4 - Removed debug output from goohak from displaying on console\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.212890625,
          "content": "FROM docker.io/kalilinux/kali-rolling:latest\n\nLABEL org.label-schema.name='Sn1per - Kali Linux' \\\n    org.label-schema.description='Automated pentest framework for offensive security experts' \\\n    org.label-schema.usage='https://github.com/1N3/Sn1per' \\\n    org.label-schema.url='https://github.com/1N3/Sn1per' \\\n    org.label-schema.vendor='https://sn1persecurity.com' \\\n    org.label-schema.schema-version='1.0' \\\n    org.label-schema.docker.cmd.devel='docker run --rm -ti xer0dayz/sniper' \\\n    MAINTAINER=\"@xer0dayz\"\n\nRUN echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" > /etc/apt/sources.list && \\\n    echo \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" >> /etc/apt/sources.list\nENV DEBIAN_FRONTEND noninteractive\n\nRUN set -x \\\n        && apt -yqq update \\\n        && apt -yqq full-upgrade \\\n        && apt clean\nRUN apt install --yes metasploit-framework\n\nRUN sed -i 's/systemctl status ${PG_SERVICE}/service ${PG_SERVICE} status/g' /usr/bin/msfdb && \\\n    service postgresql start && \\\n    msfdb reinit\n\nWORKDIR /usr/src/app\n\nRUN apt --yes install git bash\nRUN git clone https://github.com/1N3/Sn1per.git \\\n    && cd Sn1per \\\n    && ./install.sh \\\n    && sniper -u force\n\nCMD [\"sniper\"]"
        },
        {
          "name": "Dockerfile.blackarch",
          "type": "blob",
          "size": 0.1806640625,
          "content": "FROM docker.io/blackarchlinux/blackarch:latest\n\n# Upgrade system\nRUN pacman -Syu --noconfirm\n\n# Install sn1per from official repository\nRUN pacman -Sy sn1per --noconfirm\n\nCMD [\"sn1per\"]"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 3.431640625,
          "content": "## LICENSE:\nSn1per Community Edition End User License Agreement (EULA)\n\nSn1perSecurity LLC grants you the right to download, use, and distribute in part or in whole Sn1per Community Edition (also referred to as “Project”, “Code”, “Software”, “Sn1per”, “Product”), provided the following terms and conditions are met:\n\n(1) You agree to give credit to the original author @xer0dayz and link back to https://sn1persecurity.com (Sn1perSecurity LLC)\n(2) You may not rename or rebrand the Project.\n(3) You agree not to create any product or service from any par of the Code from this Project, paid or free.\n(4) You agree not to re-license the Code.\n(5) You may not use the Code for illegal or nefarious purposes, which violates any laws (in your jurisdiction, the jurisdiction in which the Software is running, the jurisdiction in which the Software is targeting, and the United States of America).\n(6) You agree not to scan a target in a manner that is considered unlawful, illegal, or that you do not have explicit permission to do so.\n\nThis Software is provided as-is without warranty. Sn1perSecurity LLC, its creators and staff take no liability for consequential damages to the maximum extent permitted by all applicable laws. In no event shall Sn1perSecurity LLC or any person be liable for any consequential, reliance, incidental, special, direct or indirect damages whatsoever (including without limitation, damages for loss of business profits, business interruption, loss of business information, personal injury, or any other loss) arising out of or in connection with the use or inability to use this Product, even if Sn1perSecurity LLC has been advised of the possibility of such damages.\n\nSn1perSecurity LLC does not guarantee any functionality or performance of Sn1per Community Edition. Sn1perSecurity LLC does not warrant that the Code will be maintained and in good working order, or that the Software will meet your requirements, be uninterrupted, or error free, or that any errors in the Software will be corrected.\n\nThe Software code, name, and logos are owned by Sn1perSecurity LLC and protected by the United States of America and the state of Arizona copyright and/or patent laws of international treaty provisions. All rights reserved.\n\nSn1perSecurity LLC reserves the right to change the licensing terms at any time, without advance notice. Sn1perSecurity LLC reserves the right to terminate your license at any time.\n\nIf any provision of this EULA is determined to be unlawful, void, or unenforceable, such provision shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion shall be deemed to be severed from this EULA. Such determination shall not affect the validity and enforceability of any remaining provisions.\n\nFailure of Sn1perSecurity LLC to exercise or enforce any right or provision of this EULA does not constitute a waiver of such right or provision.\n\nAny ambiguities in the interpretation of this EULA shall not be construed against the drafting party/parties.\n\nDownload, use, distribution (in part or in whole) of this Project/Code constitutes your acceptance of the Sn1per Community Edition EULA. If at any time you are not in agreement or cannot meet any part of this EULA, you should immediately cease use of the Project by removing/uninstalling all copies from all locations.\n\nFor any questions concerning this EULA, please submit a GitHub issue with your question: https://github.com/1N3/Sn1per\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.4755859375,
          "content": "[![Sn1perSecurity](https://sn1persecurity.com/images/Sn1perSecurity-Attack-Surface-Management-header2.png)](https://sn1persecurity.com)\n\n[![GitHub release](https://img.shields.io/github/release/1N3/Sn1per.svg)](https://github.com/1N3/Sn1per/releases)\n[![GitHub issues](https://img.shields.io/github/issues/1N3/Sn1per.svg)](https://github.com/1N3/Sn1per/issues)\n[![Github Stars](https://img.shields.io/github/stars/1N3/Sn1per.svg?style=social&label=Stars)](https://github.com/1N3/Sn1per/)\n[![GitHub Followers](https://img.shields.io/github/followers/1N3.svg?style=social&label=Follow)](https://github.com/1N3/Sn1per/)\n[![Tweet](https://img.shields.io/twitter/url/http/xer0dayz.svg?style=social)](https://twitter.com/intent/tweet?original_referer=https%3A%2F%2Fdeveloper.twitter.com%2Fen%2Fdocs%2Ftwitter-for-websites%2Ftweet-button%2Foverview&ref_src=twsrc%5Etfw&text=Sn1per%20-%20Automated%20Pentest%20Recon%20Scanner&tw_p=tweetbutton&url=https%3A%2F%2Fgithub.com%2F1N3%2FSn1per)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/xer0dayz.svg?style=social&label=Follow)](https://twitter.com/intent/follow?screen_name=xer0dayz)\n\n[[Website](https://sn1persecurity.com/wordpress/)] [[Blog](https://sn1persecurity.com/wordpress/blog/)] [[Shop](https://sn1persecurity.com/wordpress/shop)] [[Documentation](https://sn1persecurity.com/wordpress/documentation/)] [[Demo](https://www.youtube.com/c/Sn1perSecurity/videos)] [[Find Out More](https://sn1persecurity.com/wordpress/external-attack-surface-management-with-sn1per/)]\n\n\n## Attack Surface Management Platform\n\n### Discover hidden assets and vulnerabilities in your environment\n\n#### [[Find out more](https://sn1persecurity.com/wordpress/shop)]\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/05/Sn1per-Enterprise-workspace-navigator1-3.png)](https://sn1persecurity.com/)\n\n## The ultimate pentesting toolkit\n\nIntegrate with the leading commercial and open source vulnerability scanners to scan for the latest CVEs and vulnerabilities.\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/05/Sn1per-Enterprise-workspace-report1-3.png)](https://sn1persecurity.com/)\n\n### Automate the most powerful tools\n\nSecurity tools are expensive and time-consuming, but with Sn1per, you can save time by automating the execution of these open source and commercial tools to discover vulnerabilities across your entire attack surface.\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/05/Sn1per-Enterprise-host-list3-1.png)](https://sn1persecurity.com/)\n\n### Find what you can't see\n\nHacking is a problem that's only getting worse. But, with Sn1per, you can find what you can’t see—hidden assets and vulnerabilities in your environment.\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/05/Sn1per-Enterprise-host-list2-1.png)](https://sn1persecurity.com/)\n\n### Discover and prioritize risks in your organization\n\nSn1per is a next-generation information gathering tool that provides automated, deep, and continuous security for organizations of all sizes.\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/05/Sn1per-Enterprise-vulnerability-report1-3.png)](https://sn1persecurity.com/)\n\n### See Sn1per in action\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/10/Sn1perbootcampseries1.png)](https://www.youtube.com/c/Sn1perSecurity/videos)\n\n### News\n\n- #### [Sn1per Scan Engine v10.7 Released!](https://sn1persecurity.com/wordpress/sn1per-scan-engine-v10-7-released/)\n- #### [Sn1per Enterprise v20240608 Released!](https://sn1persecurity.com/wordpress/sn1per-enterprise-v20240608-released/)\n- #### [Sn1per Scan Engine v10.6 Released!](https://sn1persecurity.com/wordpress/sn1per-scan-engine-v10-6-released/)\n- #### [Sn1per Enterprise v20231025 Released!](https://sn1persecurity.com/wordpress/sn1per-enterprise-v20231025-released/)\n- #### [Sn1per Enterprise Released!](https://sn1persecurity.com/wordpress/sn1per-enterprise-released/)\n- #### [Sn1per Professional v10.0 Released!](https://sn1persecurity.com/wordpress/sn1per-professional-v10-released/)\n\n## Kali/Ubuntu/Debian/Parrot Linux Install\n\n```\ngit clone https://github.com/1N3/Sn1per\ncd Sn1per\nbash install.sh\n```\n\n## AWS AMI (Free Tier) VPS Install\n\n[![](https://sn1persecurity.com/wordpress/wp-content/uploads/2022/06/AWS-Marketplace.png)](https://aws.amazon.com/marketplace/pp/prodview-rmloab6wnymno)\n\nTo install Sn1per using an AWS EC2 instance:\n\n1. Go to <https://aws.amazon.com/marketplace/pp/prodview-rmloab6wnymno> and click the “Continue to Subscribe” button\n2. Click the “Continue to Configuration” button\n3. Click the “Continue to Launch” button\n4. Login via SSH using the public IP of the new EC2 instance\n\n## Docker Install\n\n[![](https://sn1persecurity.com/images/docker-logo.png)](https://hub.docker.com/r/sn1persecurity/sn1per)\n\n### Kali Linux-based Sn1per\n\n1. Run the Docker Compose file\n\n    ```bash\n    sudo docker compose up\n    ```\n\n1. Run the container\n\n    ```bash\n    sudo docker run -it sn1per-kali-linux /bin/bash\n    ```\n\n### BlackArch-based Sn1per\n\n1. Run the Docker Compose file\n\n    ```bash\n    sudo docker compose -f docker-compose-blackarch.yml up\n    ```\n\n1. Run the container\n\n    ```bash\n    sudo docker run -it sn1per-blackarch /bin/bash\n    ```\n\n## Usage\n\n```\n[*] NORMAL MODE\nsniper -t <TARGET>\n\n[*] NORMAL MODE + OSINT + RECON\nsniper -t <TARGET> -o -re\n\n[*] STEALTH MODE + OSINT + RECON\nsniper -t <TARGET> -m stealth -o -re\n\n[*] DISCOVER MODE\nsniper -t <CIDR> -m discover -w <WORSPACE_ALIAS>\n\n[*] SCAN ONLY SPECIFIC PORT\nsniper -t <TARGET> -m port -p <portnum>\n\n[*] FULLPORTONLY SCAN MODE\nsniper -t <TARGET> -fp\n\n[*] WEB MODE - PORT 80 + 443 ONLY!\nsniper -t <TARGET> -m web\n\n[*] HTTP WEB PORT MODE\nsniper -t <TARGET> -m webporthttp -p <port>\n\n[*] HTTPS WEB PORT MODE\nsniper -t <TARGET> -m webporthttps -p <port>\n\n[*] HTTP WEBSCAN MODE\nsniper -t <TARGET> -m webscan \n\n[*] ENABLE BRUTEFORCE\nsniper -t <TARGET> -b\n\n[*] AIRSTRIKE MODE\nsniper -f targets.txt -m airstrike\n\n[*] NUKE MODE WITH TARGET LIST, BRUTEFORCE ENABLED, FULLPORTSCAN ENABLED, OSINT ENABLED, RECON ENABLED, WORKSPACE & LOOT ENABLED\nsniper -f targets.txt -m nuke -w <WORKSPACE_ALIAS>\n\n[*] MASS PORT SCAN MODE\nsniper -f targets.txt -m massportscan\n\n[*] MASS WEB SCAN MODE\nsniper -f targets.txt -m massweb\n\n[*] MASS WEBSCAN SCAN MODE\nsniper -f targets.txt -m masswebscan\n\n[*] MASS VULN SCAN MODE\nsniper -f targets.txt -m massvulnscan\n\n[*] PORT SCAN MODE\nsniper -t <TARGET> -m port -p <PORT_NUM>\n\n[*] LIST WORKSPACES\nsniper --list\n\n[*] DELETE WORKSPACE\nsniper -w <WORKSPACE_ALIAS> -d\n\n[*] DELETE HOST FROM WORKSPACE\nsniper -w <WORKSPACE_ALIAS> -t <TARGET> -dh\n\n[*] GET SNIPER SCAN STATUS\nsniper --status\n\n[*] LOOT REIMPORT FUNCTION\nsniper -w <WORKSPACE_ALIAS> --reimport\n\n[*] LOOT REIMPORTALL FUNCTION\nsniper -w <WORKSPACE_ALIAS> --reimportall\n\n[*] LOOT REIMPORT FUNCTION\nsniper -w <WORKSPACE_ALIAS> --reload\n\n[*] LOOT EXPORT FUNCTION\nsniper -w <WORKSPACE_ALIAS> --export\n\n[*] SCHEDULED SCANS\nsniper -w <WORKSPACE_ALIAS> -s daily|weekly|monthly\n\n[*] USE A CUSTOM CONFIG\nsniper -c /path/to/sniper.conf -t <TARGET> -w <WORKSPACE_ALIAS>\n\n[*] UPDATE SNIPER\nsniper -u|--update\n```\n\n## Modes\n\n- **NORMAL:** Performs basic scan of targets and open ports using both active and passive checks for optimal performance.\n\n- **STEALTH:** Quickly enumerate single targets using mostly non-intrusive scans to avoid WAF/IPS blocking.\n- **FLYOVER:** Fast multi-threaded high level scans of multiple targets (useful for collecting high level data on many hosts quickly).\n- **AIRSTRIKE:** Quickly enumerates open ports/services on multiple hosts and performs basic fingerprinting. To use, specify the full location of the file which contains all hosts, IPs that need to be scanned and run ./sn1per /full/path/to/targets.txt airstrike to begin scanning.\n- **NUKE:** Launch full audit of multiple hosts specified in text file of choice. Usage example: ./sniper /pentest/loot/targets.txt nuke.\n- **DISCOVER:** Parses all hosts on a subnet/CIDR (ie. 192.168.0.0/16) and initiates a sniper scan against each host. Useful for internal network scans.\n- **PORT:** Scans a specific port for vulnerabilities. Reporting is not currently available in this mode.\n- **FULLPORTONLY:** Performs a full detailed port scan and saves results to XML.\n- **MASSPORTSCAN:** Runs a \"fullportonly\" scan on multiple targets specified via the \"-f\" switch.\n- **WEB:** Adds full automatic web application scans to the results (port 80/tcp & 443/tcp only). Ideal for web applications but may increase scan time significantly.\n- **MASSWEB:** Runs \"web\" mode scans on multiple targets specified via the \"-f\" switch.\n- **WEBPORTHTTP:** Launches a full HTTP web application scan against a specific host and port.\n- **WEBPORTHTTPS:** Launches a full HTTPS web application scan against a specific host and port.\n- **WEBSCAN:** Launches a full HTTP & HTTPS web application scan against via Burpsuite and Arachni.\n- **MASSWEBSCAN:** Runs \"webscan\" mode scans of multiple targets specified via the \"-f\" switch.\n- **VULNSCAN:** Launches a OpenVAS vulnerability scan.\n- **MASSVULNSCAN:** Launches a \"vulnscan\" mode scans on multiple targets specified via the \"-f\" switch.\n\n## Help Topics\n\n- [x] [Plugins & Tools](https://github.com/1N3/Sn1per/wiki/Plugins-&-Tools)\n- [x] [Scheduled Scans](https://github.com/1N3/Sn1per/wiki/Scheduled-Scans)\n- [x] [Sn1per Configuration Options](https://github.com/1N3/Sn1per/wiki/Sn1per-Configuration-Options)\n- [x] [Sn1per Configuration Templates](https://github.com/1N3/Sn1per/wiki/Sn1per-Configuration-Templates)\n- [x] [Sc0pe Templates](https://github.com/1N3/Sn1per/wiki/Sc0pe-Templates)\n\n## Integration Guides\n\n- [x] [Github API integration](https://github.com/1N3/Sn1per/wiki/Github-API-Integration)\n- [x] [Burpsuite Professional 2.x integration](https://github.com/1N3/Sn1per/wiki/Burpsuite-Professional-2.x-Integration)\n- [x] [OWASP ZAP integration](https://github.com/1N3/Sn1per/wiki/OWASP-ZAP-Integration)\n- [x] [Shodan API integration](https://github.com/1N3/Sn1per/wiki/Shodan-Integration)\n- [x] [Censys API integration](https://github.com/1N3/Sn1per/wiki/Censys-API-Integration)\n- [x] [Hunter.io API integration](https://github.com/1N3/Sn1per/wiki/Hunter.io-API-Integration)\n- [x] [Metasploit integration](https://github.com/1N3/Sn1per/wiki/Metasploit-Integration)\n- [x] [Nessus integration](https://github.com/1N3/Sn1per/wiki/Nessus-Integration)\n- [x] [OpenVAS API integration](https://github.com/1N3/Sn1per/wiki/OpenVAS-Integration)\n- [x] [GVM 21.x integration](https://github.com/1N3/Sn1per/wiki/GVM-21.x-Integration)\n- [x] [Slack API integration](https://github.com/1N3/Sn1per/wiki/Slack-API-Integration)\n- [x] [WPScan API integration](https://github.com/1N3/Sn1per/wiki/WPScan-API-Integration)\n\n## License & Legal Agreement\n\nFor license and legal information, refer to the [LICENSE.md](https://github.com/1N3/Sn1per/blob/master/LICENSE.md) file in this repository.\n\n## Purchase Sn1per Professional\n\nTo obtain a Sn1per Professional license, go to <https://sn1persecurity.com>.\n\nExternal attack surface management, Attack surface monitoring, Attack Surface Management Platform, Attack Surface Management Solutions, Vulnerability management, Threat intelligence, Cybersecurity risk assessment, Security posture assessment, Digital footprint analysis, Attack surface mapping, Web application security, Network security, Infrastructure security, Cloud security, Third-party risk management, Incident response, Penetration testing, Asset discovery, Patch management, Security scanning, Firewall configuration, Intrusion detection system, Security awareness training, Data breach prevention, Web server security, Endpoint security, Phishing protection, Vulnerability assessment, Network security, Web application testing, Ethical hacking, Security assessment, Information security, Red teaming, Cybersecurity testing, Pen testing tools, Exploitation techniques, Wireless network testing, Social engineering, Security auditing, Incident response, Intrusion detection, Firewall testing, Security assessment methodology, Risk assessment, Security controls, Web vulnerability scanning, Password cracking, Security testing services, Security architecture, System hardening, Network reconnaissance, Red teaming, Penetration testing, Cybersecurity, Vulnerability assessment, Attack simulation, Threat intelligence, Risk assessment, Security testing, Adversarial tactics, Incident response, Security assessment, Network security, Defensive measures, Security controls, Social engineering, Exploitation techniques, Security awareness, Defensive strategies, Risk mitigation, Blue teaming, Security operations, Intrusion detection, Security frameworks, Cyber defense, Information security\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-blackarch.yml",
          "type": "blob",
          "size": 0.2294921875,
          "content": "version: '3.9'\n\nx-logging: &default-logging\n  options:\n    max-size: \"40m\"\n    max-file: \"10\"\n  driver: json-file\n\nservices:\n  blackarch:\n    container_name: blackarch\n    build:\n      context: .\n      dockerfile: Dockerfile.blackarch\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.2216796875,
          "content": "version: '3.9'\n\nx-logging: &default-logging\n  options:\n    max-size: \"40m\"\n    max-file: \"10\"\n  driver: json-file\n\nservices:\n  kali-linux:\n    container_name: kali-linux\n    build:\n      context: .\n      dockerfile: Dockerfile\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 16.2578125,
          "content": "#!/bin/bash\n# Install script for Sn1per CE\n# Created by @xer0dayz - https://sn1persecurity.com\n\nOKBLUE='\\033[94m'\nOKRED='\\033[91m'\nOKGREEN='\\033[92m'\nOKORANGE='\\033[93m'\nRESET='\\e[0m'\n\necho -e \"$OKRED                ____               $RESET\"\necho -e \"$OKRED    _________  /  _/___  ___  _____$RESET\"\necho -e \"$OKRED   / ___/ __ \\ / // __ \\/ _ \\/ ___/$RESET\"\necho -e \"$OKRED  (__  ) / / // // /_/ /  __/ /    $RESET\"\necho -e \"$OKRED /____/_/ /_/___/ .___/\\___/_/     $RESET\"\necho -e \"$OKRED               /_/                 $RESET\"\necho -e \"$RESET\"\necho -e \"$OKORANGE + -- --=[ https://sn1persecurity.com $RESET\"\necho -e \"$OKORANGE + -- --=[ Sn1per CE by @xer0dayz $RESET\"\necho \"\"\n\nINSTALL_DIR=/usr/share/sniper\nLOOT_DIR=/usr/share/sniper/loot\nPLUGINS_DIR=/usr/share/sniper/plugins\nGO_DIR=~/go/bin\n\necho -e \"$OKRED[>]$RESET This script will install Sn1per under $INSTALL_DIR. Are you sure you want to continue? (Hit Ctrl+C to exit)$RESET\"\nif [[ \"$1\" != \"force\" ]]; then\n\tread answer\nfi\n\nif [[ $EUID -ne 0 ]]; then\n   echo \"This script must be run as root\"\n   exit 1\nfi\n\nmkdir -p $INSTALL_DIR 2> /dev/null\nchmod 755 -Rf $INSTALL_DIR 2> /dev/null\nchown root $INSTALL_DIR/sniper 2> /dev/null\nmkdir -p $LOOT_DIR 2> /dev/null\nmkdir $LOOT_DIR/domains 2> /dev/null\nmkdir $LOOT_DIR/screenshots 2> /dev/null\nmkdir $LOOT_DIR/nmap 2> /dev/null\nmkdir $LOOT_DIR/reports 2> /dev/null\nmkdir $LOOT_DIR/output 2> /dev/null\nmkdir $LOOT_DIR/osint 2> /dev/null\ncp -Rf * $INSTALL_DIR 2> /dev/null\ncd $INSTALL_DIR\n\nsudo cp -a /root/.Xauthority /root/.Xauthority.bak 2> /dev/null\nsudo cp -a /home/$USER/.Xauthority /root/.Xauthority 2> /dev/null\nsudo cp -a /home/kali/.Xauthority /root/.Xauthority 2> /dev/null\nsudo chown root: /root/.Xauthority 2> /dev/null\nXAUTHORITY=/root/.Xauthority\n\n# CHECK FOR UBUNTU...\nUBUNTU_CHECK=$(egrep DISTRIB_ID /etc/lsb-release 2> /dev/null)\nif [[ $UBUNTU_CHECK == \"DISTRIB_ID=Ubuntu\" ]]; then\n\tcp /root/.Xauthority /root/.Xauthority.bak 2> /dev/null\n\tcp -a /run/user/1000/gdm/Xauthority /root/.Xauthority 2> /dev/null\n\tcp -a /home/user/.Xauthority /root/.Xauthority 2> /dev/null\n\tchown root /root/.Xauthority 2> /dev/null\n\tXAUTHORITY=/root/.Xauthority 2> /dev/null\n\tsnap install chromium 2> /dev/null\n\tln -s /snap/bin/chromium /usr/bin/chromium 2> /dev/null\n\txhost + 2> /dev/null\n\tmkdir -p /run/user/0 2> /dev/null\n\tadd-apt-repository ppa:longsleep/golang-backports\n\tsudo apt update\n\tapt install golang\nfi\n\necho -e \"$OKBLUE[*]$RESET Installing package dependencies...$RESET\"\napt update\napt install -y nfs-common\napt install -y nodejs\napt install -y wafw00f\napt install -y xdg-utils\napt install -y ruby\napt install -y rubygems\napt install -y python2\napt install -y python3\napt install -y python3-paramiko\napt purge -y python3-pip\napt install -y python3-pip\napt install -y dos2unix\napt install -y aha\napt install -y libxml2-utils\napt install -y rpcbind\napt install -y cutycapt\napt install -y host\napt install -y whois\napt install -y dnsrecon\napt install -y curl\napt install -y nmap\napt install -y php8.2\napt install -y php8.2-curl\napt install -y hydra\napt install -y sqlmap\napt install -y nbtscan\napt install -y nikto\napt install -y whatweb\napt install -y sslscan\napt install -y jq\napt install -y golang\napt install -y adb\napt install -y xsltproc\napt install -y ldapscripts\napt install -y libssl-dev 2> /dev/null\napt install -y xmlstarlet\napt install -y net-tools\napt install -y p7zip-full\napt install -y jsbeautifier\napt install -y theharvester 2> /dev/null\napt install -y phantomjs 2> /dev/null\napt install -y chromium 2> /dev/null\napt install -y xvfb\napt install -y urlcrazy\napt install -y iputils-ping\napt install -y enum4linux\napt install -y dnsutils\napt install -y wtmpdb\n\necho -e \"$OKBLUE[*]$RESET Installing Metasploit...$RESET\"\nrm -f /usr/share/keyrings/metasploit-framework.gpg 2> /dev/null\ncurl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > /tmp/msfinstall\nchmod 755 /tmp/msfinstall\n/tmp/msfinstall\n\npip3 install dnspython colorama tldextract urllib3 ipaddress requests\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash\n\necho -e \"$OKBLUE[*]$RESET Installing gem dependencies...$RESET\"\ngem install rake 2> /dev/null > /dev/null\ngem install ruby-nmap 2> /dev/null > /dev/null\ngem install net-http-persistent 2> /dev/null > /dev/null\ngem install mechanize 2> /dev/null > /dev/null\ngem install text-table 2> /dev/null > /dev/null\ngem install public_suffix 2> /dev/null > /dev/null\n\necho -e \"$OKBLUE[*]$RESET Setting up Ruby...$RESET\"\ndpkg-reconfigure ruby\n\necho -e \"$OKBLUE[*]$RESET Upgrading Pip...$RESET\"\npython3 -m pip install --upgrade pip\n\necho -e \"$OKBLUE[*]$RESET Cleaning up old extensions...$RESET\"\nrm -Rf $PLUGINS_DIR 2> /dev/null\nmkdir $PLUGINS_DIR 2> /dev/null\ncd $PLUGINS_DIR\nmkdir -p $GO_DIR 2> /dev/null\n\necho -e \"$OKBLUE[*]$RESET Downloading extensions...$RESET\"\n\n# SUBLIST3R INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Sublist3r...$RESET\"\ngit clone https://github.com/1N3/Sublist3r.git\n\n# SHOCKER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Shocker...$RESET\"\ngit clone https://github.com/nccgroup/shocker.git\n\n# SSH-AUDIT INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing SSH-Audit...$RESET\"\ngit clone https://github.com/arthepsy/ssh-audit\n\n# JEXBOSS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Jexboss...$RESET\"\ngit clone https://github.com/1N3/jexboss.git\n\n# WIG INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Wig...$RESET\"\ngit clone https://github.com/jekyc/wig.git\n\n# CORSTEST INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing CORStest...$RESET\"\ngit clone https://github.com/RUB-NDS/CORStest.git\n\n# VULSCAN INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Vulscan...$RESET\"\ngit clone https://github.com/scipag/vulscan\n\n# METAGOOFIL INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Metagoofil...$RESET\"\ngit clone https://github.com/laramies/metagoofil.git\n\n# SHODAN INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Shodan...$RESET\"\ngit clone https://github.com/achillean/shodan-python\n\n# CMSMAP INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing CMSMap...$RESET\"\ngit clone https://github.com/Dionach/CMSmap.git\n\n# SMUGGLER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Smuggler...$RESET\"\ngit clone https://github.com/defparam/smuggler.git\n\n# DIRSEARCH INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Dirsearch...$RESET\"\ncd $PLUGINS_DIR\nrm -Rf dirsearch/ 2> /dev/null\nwget https://github.com/maurosoria/dirsearch/archive/refs/tags/v0.4.2.tar.gz\ntar -zxvf v0.4.2.tar.gz\nmv dirsearch-0.4.2/ dirsearch/\ncd dirsearch/\npip3 install -r requirements.txt\ncd $PLUGINS_DIR\n\n# SECRETFINDER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing SecretFinder...$RESET\"\ngit clone https://github.com/m4ll0k/SecretFinder.git secretfinder\npip install -r $PLUGINS_DIR/secretfinder/requirements.txt\n\n# LINKFINDER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing LinkFinder...$RESET\"\ngit clone https://github.com/1N3/LinkFinder\ncd LinkFinder\npython3 setup.py install\ncd ..\n\n# GITGRABER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing GitGrabber...$RESET\"\ngit clone https://github.com/hisxo/gitGraber.git\npip3 install -r $PLUGINS_DIR/gitGraber/requirements.txt 2> /dev/null\n\n# CENSYS-SUBDOMAIN-FINDER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Censys-Subdomain-Finder...$RESET\"\ngit clone https://github.com/christophetd/censys-subdomain-finder.git\npip3 install -r $PLUGINS_DIR/censys-subdomain-finder/requirements.txt\n\n# DNSCAN INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing DNScan...$RESET\"\ngit clone https://github.com/rbsec/dnscan.git\npip3 install -r $PLUGINS_DIR/dnscan/requirements.txt\n\n# ALTDNS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing AltDNS...$RESET\"\ngit clone https://github.com/infosec-au/altdns.git\ncd altdns\npip3 install -r requirements.txt\npython3 setup.py install\npip3 install py-altdns\ncd ..\n\n# MASSDNS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing MassDNS...$RESET\"\ngit clone https://github.com/blechschmidt/massdns.git\ncd massdns\nmake && make install\ncd ..\n\n# DNSGEN INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing DNSGen...$RESET\"\ngit clone https://github.com/ProjectAnte/dnsgen\ncd dnsgen\npip3 install -r requirements.txt\npython3 setup.py install\ncd ..\n\n# NUCLEI UPDATES\necho -e \"$OKBLUE[*]$RESET Installing Nuclei...$RESET\"\nGO111MODULE=on go install github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest\nln -fs /root/go/bin/nuclei /usr/local/bin/nuclei 2> /dev/null\nnuclei --update\nnuclei\n\n# INSTALL WEBTECH\necho -e \"$OKBLUE[*]$RESET Installing WebTech...$RESET\"\npip3 install -U webtech\n\n# INSTALL SUBJACK\necho -e \"$OKBLUE[*]$RESET Installing SubJack...$RESET\"\ncd ~/go/bin/;go install github.com/haccer/subjack@latest\n\n# INSTALL SUBOVER\necho -e \"$OKBLUE[*]$RESET Installing SubOver...$RESET\"\ncd ~/go/bin/;go install github.com/Ice3man543/SubOver@latest; mv /root/go/bin/SubOver /usr/local/bin/subover\n\n# INSTALL FPROBE\necho -e \"$OKBLUE[*]$RESET Installing FProbe...$RESET\"\ngo install github.com/theblackturtle/fprobe@latest; ln -fs ~/go/bin/fprobe /usr/bin/fprobe\n\n# INSTALL ASNIP\necho -e \"$OKBLUE[*]$RESET Installing ASnip...$RESET\"\ngo install github.com/harleo/asnip@latest; ln -fs ~/go/bin/asnip /usr/bin/asnip\n\n# GAU INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing GAU...$RESET\"\nGO111MODULE=on go install github.com/lc/gau@latest\nrm -f /usr/bin/gau 2> /dev/null\nln -fs /root/go/bin/gau /usr/bin/gau 2> /dev/null\n\n# INSTALL HTTPX\necho -e \"$OKBLUE[*]$RESET Installing HTTPX...$RESET\"\ngo install github.com/projectdiscovery/httpx@latest; ln -fs /root/go/bin/httpx /usr/bin/httpx\n\n# INSTALL FFUF\necho -e \"$OKBLUE[*]$RESET Installing FFuF...$RESET\"\ngo install github.com/ffuf/ffuf@latest; ln -fs /root/go/bin/ffuf /usr/bin/ffuf\n\n# GITHUB-ENDPOINTS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Github-Endpoints...$RESET\"\ngo install github.com/gwen001/github-endpoints@latest; ln -fs /root/go/bin/github-endpoints /usr/bin/github-endpoints\n\n# PUREDNS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing PureDNS...$RESET\"\ngo install github.com/d3mondev/puredns/v2@latest; ln -fs /root/go/bin/puredns /usr/bin/puredns\n\n# AMASS INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing AMass...$RESET\"\ngo install -v github.com/OWASP/Amass/v3/...@master\ncd /root/go/bin/\n\n# SUBFINDER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing SubFinder...$RESET\"\ngo install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest; ln -fs /root/go/bin/subfinder /usr/local/bin/subfinder\n\n# DIRDAR INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing DirDar...$RESET\"\ngo install github.com/1N3/dirdar@latest; ln -fs /root/go/bin/dirdar /usr/local/bin/dirdar\n\n# VULNERS NMAP INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Vulners...$RESET\"\ncd /usr/share/nmap/scripts/\nrm -f /usr/share/nmap/scripts/vulners.nse\nwget https://raw.githubusercontent.com/vulnersCom/nmap-vulners/master/vulners.nse\n\n# GOBUSTER INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing GoBuster...$RESET\"\nwget https://github.com/OJ/gobuster/releases/download/v3.0.1/gobuster-linux-amd64.7z -O /tmp/gobuster.7z\ncd /tmp/\n7z e gobuster.7z\nchmod +rx gobuster\nmv gobuster /usr/bin/gobuster\n\n# SHODAN INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing Shodan...$RESET\"\ncd $PLUGINS_DIR\ncd shodan-python\npython setup.py install\ncd ..\n\n# H8MAIL INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing H8Mail...$RESET\"\npip3 install h8mail 2> /dev/null\n\n# CMSMAP INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing CMSMap...$RESET\"\ncd $PLUGINS_DIR/CMSmap/ && pip3 install . && python3 setup.py install\n\ncd $PLUGINS_DIR\n\n# ARACHNI MANUAL INSTALL\necho -e \"$OKBLUE[*]$RESET Installing Arachni...$RESET\"\nwget https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz -O /tmp/arachni.tar.gz\ncd /tmp/\ntar -zxf arachni.tar.gz\nrm -f /tmp/arachni.tar.gz 2> /dev/null\ncd arachni-*\nmkdir -p /usr/share/arachni 2> /dev/null\ncp -Rf * /usr/share/arachni/ 2> /dev/null\ncd /usr/share/arachni/bin/\nfor a in `ls`; do ln -fs $PWD/$a /usr/bin/$a; done;\n\n# REMOVE CVE TEMPLATES (ALL CVEs GOING FORWARD COVERED BY NUCLEI)\nrm -f /usr/share/sniper/templates/active/CVE*\n\n# PHANTOMJS MANUAL INSTALL\necho -e \"$OKBLUE[*]$RESET Installing PhantomJS...$RESET\"\ncd /usr/local/share\nwget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-x86_64.tar.bz2 2> /dev/null\ntar xjf phantomjs-1.9.7-linux-x86_64.tar.bz2 2> /dev/null\nln -s /usr/local/share/phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/local/share/phantomjs 2> /dev/null\nln -s /usr/local/share/phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs 2> /dev/null\nln -s /usr/local/share/phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/bin/phantomjs 2> /dev/null\n\n# DNS RESOLVERS DOWNLOAD\necho -e \"$OKBLUE[*]$RESET Installing DNS Resolvers...$RESET\"\nwget https://raw.githubusercontent.com/janmasarik/resolvers/master/resolvers.txt -O /usr/share/sniper/wordlists/resolvers.txt\n\n# THEHARVESTER KALI SETUP\necho -e \"$OKBLUE[*]$RESET Installing TheHarvester...$RESET\"\ncp -f /usr/bin/theHarvester /usr/bin/theharvester 2> /dev/null\n\n# BLACKWIDOW INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing BlackWidow...$RESET\"\ncd $PLUGINS_DIR\ngit clone https://github.com/1N3/BlackWidow\ncd $PLUGINS_DIR/BlackWidow/ && bash install.sh force 2> /dev/null\n\n# BRUTEX INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing BruteX...$RESET\"\ncd $PLUGINS_DIR\ngit clone https://github.com/1N3/BruteX.git\ncd $PLUGINS_DIR/BruteX/ && bash install.sh 2> /dev/null\n\n# FINDSPLOIT INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing FindSploit...$RESET\"\ncd $PLUGINS_DIR\ngit clone https://github.com/1N3/Findsploit.git\ncd $PLUGINS_DIR/Findsploit/ && bash install.sh 2> /dev/null\n\n# GOOHAK INSTALLER\necho -e \"$OKBLUE[*]$RESET Installing GooHak...$RESET\"\ncd $PLUGINS_DIR\ngit clone https://github.com/1N3/Goohak.git\n\necho -e \"$OKBLUE[*]$RESET Setting up environment...$RESET\"\ncd $INSTALL_DIR\nmkdir $LOOT_DIR 2> /dev/null\nmkdir $LOOT_DIR/screenshots/ -p 2> /dev/null\nmkdir $LOOT_DIR/nmap -p 2> /dev/null\nmkdir $LOOT_DIR/domains -p 2> /dev/null\nmkdir $LOOT_DIR/output -p 2> /dev/null\nmkdir $LOOT_DIR/reports -p 2> /dev/null\nchmod +x $INSTALL_DIR/sniper\nchmod +x $PLUGINS_DIR/Goohak/goohak\nrm -f /usr/bin/dirsearch\nln -s $INSTALL_DIR/sniper /usr/bin/sniper 2> /dev/null\nln -s $PLUGINS_DIR/Goohak/goohak /usr/bin/goohak 2> /dev/null\nln -s $PLUGINS_DIR/dirsearch/dirsearch.py /usr/bin/dirsearch 2> /dev/null\nln -s /usr/share/sniper /sniper 2> /dev/null\nln -s /usr/share/sniper /usr/share/sn1per 2> /dev/null\nln -s /usr/share/sniper/loot/workspace /workspace 2> /dev/null\nln -s /usr/share/sniper/loot/workspace /root/workspace 2> /dev/null\nln -s /usr/share/sniper /root/sniper 2> /dev/null\nln -s /root/.sniper.conf /usr/share/sniper/conf/sniper.conf 2> /dev/null\nln -s /root/.sniper_api_keys.conf /usr/share/sniper/conf/sniper_api_keys.conf 2> /dev/null\nmv /root/.sniper.conf /root/.sniper.conf.bak 2> /dev/null\ncp -vf /usr/share/sniper/sniper.conf /root/.sniper.conf 2> /dev/null\nmsfdb init 2> /dev/null\n\necho -e \"$OKBLUE[*]$RESET Adding start menu and desktop shortcuts... $RESET\"\ncp -f $INSTALL_DIR/sn1per.desktop /usr/share/applications/ 2> /dev/null\ncp -f $INSTALL_DIR/sn1per.desktop /usr/share/applications/sn1per.desktop 2> /dev/null\ncp -f $INSTALL_DIR/sn1per.desktop /usr/share/kali-menu/applications/sn1per.desktop 2> /dev/null\ncp -f $INSTALL_DIR/sn1per.png /usr/share/pixmaps/ 2> /dev/null\ncp -f $PLUGINS_DIR/BruteX/brutex.desktop /usr/share/applications/ 2> /dev/null\ncp -f $PLUGINS_DIR/BruteX/brutex.desktop /usr/share/applications/brutex.desktop 2> /dev/null\ncp -f $PLUGINS_DIR/BruteX/brutex.desktop /usr/share/kali-menu/applications/brutex.desktop 2> /dev/null\ncp -f $PLUGINS_DIR/BlackWidow/blackwidow.desktop /usr/share/applications/ 2> /dev/null\ncp -f $PLUGINS_DIR/BlackWidow/blackwidow.desktop /usr/share/applications/blackwidow.desktop 2> /dev/null\ncp -f $PLUGINS_DIR/BlackWidow/blackwidow.desktop /usr/share/kali-menu/applications/blackwidow.desktop 2> /dev/null\ncp -f $PLUGINS_DIR/Findsploit/findsploit.desktop /usr/share/applications/ 2> /dev/null\ncp -f $PLUGINS_DIR/Findsploit/findsploit.desktop /usr/share/applications/findsploit.desktop 2> /dev/null\ncp -f $PLUGINS_DIR/Findsploit/findsploit.desktop /usr/share/kali-menu/applications/findsploit.desktop 2> /dev/null\nmkdir -p /usr/share/sniper/loot/workspaces/ 2> /dev/null\nln -fs /usr/share/sniper/loot/workspaces/ /home/kali/Desktop/workspaces 2> /dev/null\nln -fs /usr/share/sniper/loot/workspaces/ /root/Desktop/workspaces 2> /dev/null\n\necho -e \"$OKBLUE[*]$RESET Cleaning up installation files... $RESET\"\nrm -Rf /tmp/arachni* /tmp/gobuster* /tmp/msfinstall /tmp/openssl.cnf 2> /dev/null\n\necho -e \"$OKRED[>]$RESET Done! $RESET\"\necho -e \"$OKRED[>]$RESET To run, type 'sniper'! $RESET\"\n"
        },
        {
          "name": "loot",
          "type": "tree",
          "content": null
        },
        {
          "name": "modes",
          "type": "tree",
          "content": null
        },
        {
          "name": "pro",
          "type": "tree",
          "content": null
        },
        {
          "name": "sn1per.desktop",
          "type": "blob",
          "size": 0.2705078125,
          "content": "[Desktop Entry]\nName=sn1per\nEncoding=UTF-8\nExec=bash-wrapper \"sudo sniper\"\nIcon=/usr/share/pixmaps/sn1per.png\nStartupNotify=false \nTerminal=true\nType=Application\nCategories=08-exploitation-tools;02-vulnerability-analysis;01-info-gathering;\nX-Kali-Package=sn1per\nComment=\nPath=\n"
        },
        {
          "name": "sn1per.png",
          "type": "blob",
          "size": 4.1826171875,
          "content": null
        },
        {
          "name": "sniper",
          "type": "blob",
          "size": 26.7744140625,
          "content": "#!/bin/bash\n# + -- --=[Sn1per Community Edition by @xer0dayz\n# + -- --=[https://sn1persecurity.com\n# \n\nif [[ $EUID -ne 0 ]]; then\n   echo \"This script must be run as root\"\n   exit 1\nfi\n\nVER=\"9.2\"\nINSTALL_DIR=\"/usr/share/sniper\"\nLOOT_DIR=\"$INSTALL_DIR/loot/$TARGET\"\nSNIPER_PRO=$INSTALL_DIR/pro.sh\n\n# INIT POSTGRESQL\nservice postgresql start 2> /dev/null\n\n# LOAD DEFAULT SNIPER CONFIGURATION FILE\ndos2unix $INSTALL_DIR/sniper.conf 2> /dev/null > /dev/null\nsource $INSTALL_DIR/sniper.conf\necho -e \"$OKBLUE[*]$RESET Loaded configuration file from $INSTALL_DIR/sniper.conf $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n\nif [[ -f /root/.sniper.conf ]]; then\n  # LOAD USER SN1PER CONFIGURATION FILE\n  dos2unix /root/.sniper.conf 2> /dev/null > /dev/null\n  source /root/.sniper.conf\n  echo -e \"$OKBLUE[*]$RESET Loaded configuration file from /root/.sniper.conf $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n\n  if [[ -f /root/.sniper_api_keys.conf ]]; then\n    # LOAD USER API KEYS (PERSISTENT CONFIG)\n    dos2unix /root/.sniper_api_keys.conf 2> /dev/null > /dev/null\n    source /root/.sniper_api_keys.conf\n    echo -e \"$OKBLUE[*]$RESET Loaded API keys from /root/.sniper_api_keys.conf $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n  fi\n\nelse\n  # IF NO USER CONFIG PRESENT, CREATE IT FROM THE DEFAULT TEMPLATE\n  cp $INSTALL_DIR/sniper.conf /root/.sniper.conf 2> /dev/null\n  dos2unix /root/.sniper.conf 2> /dev/null > /dev/null\n  source /root/.sniper.conf\n  echo -e \"$OKBLUE[*]$RESET Loaded configuration file from /root/.sniper.conf $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\nfi\n\nDISTRO=$(cat /etc/*-release | grep DISTRIB_ID= | cut -d'=' -f2)\n\nfunction help {\n  logo\n  local star\n  printf -v star \"$OKBLUE[*]$RESET\"\n  cat <<EOHELP\n\n$star NORMAL MODE\n sniper -t <TARGET>\n\n$star SPECIFY CUSTOM CONFIG FILE\n sniper -c /full/path/to/sniper.conf -t <TARGET> -m <MODE> -w <WORKSPACE>\n\n$star NORMAL MODE + OSINT + RECON\n sniper -t <TARGET> -o -re\n\n$star STEALTH MODE + OSINT + RECON\n sniper -t <TARGET> -m stealth -o -re\n\n$star DISCOVER MODE\n sniper -t <CIDR> -m discover -w <WORSPACE_ALIAS>\n\n$star SCAN ONLY SPECIFIC PORT\n sniper -t <TARGET> -m port -p <portnum>\n\n$star FULLPORTONLY SCAN MODE\n sniper -t <TARGET> -fp\n\n$star WEB MODE - PORT 80 + 443 ONLY!\n sniper -t <TARGET> -m web\n\n$star HTTP WEB PORT MODE\n sniper -t <TARGET> -m webporthttp -p <port>\n\n$star HTTPS WEB PORT MODE\n sniper -t <TARGET> -m webporthttps -p <port>\n\n$star HTTP WEBSCAN MODE\n sniper -t <TARGET> -m webscan\n\n$star ENABLE BRUTEFORCE\n sniper -t <TARGET> -b\n\n$star AIRSTRIKE MODE\n sniper -f targets.txt -m airstrike\n\n$star NUKE MODE WITH TARGET LIST, BRUTEFORCE ENABLED, FULLPORTSCAN ENABLED, OSINT ENABLED, RECON ENABLED, WORKSPACE & LOOT ENABLED\n sniper -f targets.txt -m nuke -w <WORKSPACE_ALIAS>\n\n$star MASS PORT SCAN MODE\n sniper -f targets.txt -m massportscan -w <WORKSPACE_ALIAS>\n\n$star MASS WEB SCAN MODE\n sniper -f targets.txt -m massweb -w <WORKSPACE_ALIAS>\n\n$star MASS WEBSCAN SCAN MODE\n sniper -f targets.txt -m masswebscan -w <WORKSPACE_ALIAS>\n\n$star MASS VULN SCAN MODE\n sniper -f targets.txt -m massvulnscan -w <WORKSPACE_ALIAS>\n\n$star PORT SCAN MODE\n sniper -t <TARGET> -m port -p <PORT_NUM>\n\n$star LIST WORKSPACES\n sniper --list\n\n$star DELETE WORKSPACE\n sniper -w <WORKSPACE_ALIAS> -d\n\n$star DELETE HOST FROM WORKSPACE\n sniper -w <WORKSPACE_ALIAS> -t <TARGET> -dh\n\n$star DELETE TASKS FROM WORKSPACE\n sniper -w <WORKSPACE_ALIAS> -t <TARGET> -dt\n\n$star GET SNIPER SCAN STATUS\n sniper --status\n\n$star LOOT REIMPORT FUNCTION\n sniper -w <WORKSPACE_ALIAS> --reimport\n\n$star LOOT REIMPORTALL FUNCTION\n sniper -w <WORKSPACE_ALIAS> --reimportall\n\n$star LOOT REIMPORT FUNCTION\n sniper -w <WORKSPACE_ALIAS> --reload\n\n$star LOOT EXPORT FUNCTION\n sniper -w <WORKSPACE_ALIAS> --export\n\n$star SCHEDULED SCANS\n sniper -w <WORKSPACE_ALIAS> -s daily|weekly|monthly\n\n$star USE A CUSTOM CONFIG\n sniper -c /path/to/sniper.conf -t <TARGET> -w <WORKSPACE_ALIAS>\n\n$star UPDATE SNIPER\n sniper -u|--update\n\n\nEOHELP\n  exit\n}\n\nfunction logo {\n  echo -e \"$OKRED                ____               $RESET\"\n  echo -e \"$OKRED    _________  /  _/___  ___  _____$RESET\"\n  echo -e \"$OKRED   / ___/ __ \\ / // __ \\/ _ \\/ ___/$RESET\"\n  echo -e \"$OKRED  (__  ) / / // // /_/ /  __/ /    $RESET\"\n  echo -e \"$OKRED /____/_/ /_/___/ .___/\\___/_/     $RESET\"\n  echo -e \"$OKRED               /_/                 $RESET\"\n  echo \"\"\n  echo -e \"$OKORANGE + -- --=[ https://sn1persecurity.com$RESET\"\n  echo -e \"$OKORANGE + -- --=[ Sn1per v$VER by @xer0dayz$RESET\"\n  echo \"\"\n}\n\nfunction sniper_status {\n  watch -n 1 -c 'ps -ef | egrep \"sniper|slurp|hydra|ruby|python|dirsearch|amass|nmap|metasploit|curl|wget|nikto\" && echo \"NETWORK CONNECTIONS...\" && netstat -an | egrep \"TIME_WAIT|EST\"'\n}\n\n# CHECK FOR UPDATES\nfunction check_update {\n  if [[ \"$ENABLE_AUTO_UPDATES\" == \"1\" ]] && [[ \"$ONLINE\" == \"1\" ]]; then\n    LATEST_VER=$(curl --connect-timeout 5 -s https://api.github.com/repos/1N3/Sn1per/tags | grep -Po '\"name\":.*?[^\\\\]\",'| head -1 | cut -c11-13)\n    if [[ \"$LATEST_VER\" != \"$VER\" ]]; then\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE] sniper v$LATEST_VER is available to download... To update, type$OKRED \\\"sniper -u\\\" $RESET\"\n    fi\n  fi\n  touch /tmp/update-check.txt 2> /dev/null\n}\n\n# APPLY UPDATES\nfunction update {\n  logo\n  echo -e \"$OKBLUE[*]$RESET Checking for updates...$OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n  if [[ \"$ONLINE\" == \"0\" ]]; then\n    echo \"You will need to download the latest release manually at https://github.com/1N3/Sn1per/\"\n  else\n    LATEST_VER=$(curl --connect-timeout 5 -s https://api.github.com/repos/1N3/Sn1per/tags | grep -Po '\"name\":.*?[^\\\\]\",'| head -1 | cut -c11-13)\n    if [[ \"$LATEST_VER\" != \"$VER\" ]]; then\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE] Sn1per $LATEST_VER is available to download...Do you want to update? (y or n)$RESET\"\n      read ans\n      if [[ \"$ans\" = \"y\" ]]; then\n        rm -Rf /tmp/Sn1per/ 2>/dev/null\n        git clone https://github.com/1N3/Sn1per /tmp/Sn1per/\n        cd /tmp/Sn1per/\n        chmod +rx install.sh\n        bash install.sh\n        rm -Rf /tmp/Sn1per/ 2>/dev/null\n        exit\n      fi\n    fi\n  fi\n}\n\nif [[ \"$UPDATE\" = \"1\" ]]; then\n  update\n  exit\nfi\n\n# CHECK IF ONLINE\nfunction check_online {\n  ONLINE=$(curl --connect-timeout 3 --insecure -s \"https://sn1persecurity.com/community/updates.txt?$VER&mid=$(cat /etc/machine-id)\" 2> /dev/null)\n  if [[ -z \"$ONLINE\" ]]; then\n    ONLINE=$(curl --connect-timeout 3 -s https://api.github.com/repos/1N3/Sn1per/tags | grep -Po '\"name\":.*?[^\\\\]\",'| head -1 | cut -c11-13)\n    if [[ -z \"$ONLINE\" ]]; then\n      ONLINE=\"0\"\n      echo -e \"$OKBLUE[*]$RESET Checking for active internet connection $OKBLUE[$RESET${OKRED}FAIL${RESET}$OKBLUE]\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET sniper is running in offline mode.$RESET\"\n    else\n      ONLINE=\"1\"\n      echo -e \"$OKBLUE[*]$RESET Checking for active internet connection $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n    fi\n  else\n    ONLINE=\"1\"\n    echo -e \"$OKBLUE[*]$RESET Checking for active internet connection $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n  fi\n}\n\n# COMMAND LINE SWITCHES\nPOSITIONAL=()\nwhile [[ $# -gt 0 ]]\ndo\nkey=\"$1\"\n\ncase $key in\n    -h|--help)\n    help\n    shift # past argument\n    ;;\n    -c|--config)\n    CONFIG=\"$2\"\n    echo -e \"$OKBLUE[*]$RESET Creating backup of existing config to /root/.sniper.conf.bak...$OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n    cp -f /root/.sniper.conf /root/.sniper.conf.bak\n    echo -e \"$OKBLUE[*]$RESET Copying $CONFIG to /root/.sniper.conf...$OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n    cp -f $CONFIG /root/.sniper.conf 2> /dev/null\n    dos2unix /root/.sniper.conf 2> /dev/null > /dev/null\n    source /root/.sniper.conf\n    sleep 1\n    shift\n    shift\n    ;;\n    -t)\n    TARGET=\"$2\"\n    shift # past argument\n    shift # past argument\n    ;;\n    -b)\n    AUTO_BRUTE=\"1\"\n    shift # past argument\n    ;;\n    -fp|--fullportscan)\n    FULLNMAPSCAN=\"1\"\n    shift # past argument\n    ;;\n    -o|--osint)\n    OSINT=\"1\"\n    shift # past argument\n    ;;\n    -re|--recon)\n    RECON=\"1\"\n    shift # past argument\n    ;;\n    -m)\n    MODE=\"$2\"\n    shift # past argument\n    shift # past argument\n    ;;\n    -p)\n    PORT=\"$2\"\n    shift # past argument\n    shift # past argument\n    ;;\n    -f|--file)\n    FILE=\"$(realpath $2)\"\n    shift # past argument\n    shift # past argument\n    ;;\n    -ri|--reimport)\n    REIMPORT=\"1\"\n    shift # past argument\n    ;;\n    -ria|--reimportall)\n    REIMPORT_ALL=\"1\"\n    shift # past argument\n    ;;\n    -rl|--reload)\n    RELOAD=\"1\"\n    shift # past argument\n    ;;\n    -n|--noreport)\n    REPORT=\"0\"\n    shift # past argument\n    ;;\n    -nl|--noloot)\n    LOOT=\"0\"\n    NOLOOT=\"1\"\n    shift # past argument\n    ;;\n    -w)\n    WORKSPACE=\"$(echo $2 | tr / -)\"\n    WORKSPACE_DIR=\"$INSTALL_DIR/loot/workspace/$WORKSPACE\"\n    shift # past argument\n    shift # past argument\n    ;;\n    -s|--schedule)\n    if [[ -z \"$WORKSPACE\" ]]; then\n      echo \"You need to set a workspace via the -w switch to schedule a scan task.\"\n      exit\n    fi\n    SCHEDULE_ARG=\"$2\"\n    if [[ \"$SCHEDULE_ARG\" = \"daily\" ]] || [[ \"$SCHEDULE_ARG\" = \"weekly\" ]] || [[ \"$SCHEDULE_ARG\" = \"monthly\" ]]; then\n      SCHEDULE_TASK=\"$WORKSPACE_DIR/scans/scheduled/$SCHEDULE_ARG.sh\"\n      vim $SCHEDULE_TASK\n      cat $WORKSPACE_DIR/scans/scheduled/*.sh 2> /dev/null\n      exit\n    else\n      echo \"You need to specify either daily, weekly or monthly for the scheduled scan argument.\"\n      exit\n    fi\n    shift # past argument\n    shift # past argument\n    ;;\n    -d|--delete)\n    logo\n    echo \"Are you sure you want to remove the following workspace? (Hit Ctrl+C to exit): /usr/share/sniper/loot/workspace/$WORKSPACE/\"\n    read ANS\n    rm -Rf /usr/share/sniper/loot/workspace/$WORKSPACE/\n    echo \"Workspace /usr/share/sniper/loot/workspace/$WORKSPACE/ was removed.\"\n    sniper -w default --reimport\n    exit\n    shift # past argument\n    ;;\n    -dh|--delete-host)\n    echo \"Removing $TARGET from $WORKSPACE\"\n    sed -i \"/$TARGET/d\" $WORKSPACE_DIR/domains/* $WORKSPACE_DIR/reports/host-table-report.csv\n    egrep -R \"$TARGET\" $WORKSPACE_DIR/domains/* $WORKSPACE_DIR/reports/host-table-report.csv\n    rm -f $WORKSPACE_DIR/screenshots/$TARGET*.jpg 2> /dev/null\n    rm -f $WORKSPACE_DIR/nmap/dns-$TARGET.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/nmap/ports-$TARGET.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/web/title-*-$TARGET.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/web/headers-*-$TARGET.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/vulnerabilities/sc0pe-$TARGET-*.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/vulnerabilities/vulnerability-report-$TARGET.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/vulnerabilities/vulnerability-risk-$TARGET.txt 2> /dev/null\n    #sniper --reimportall -w $WORKSPACE\n    exit\n    shift # past argument\n    ;;\n    -dt|--delete-task)\n    echo \"Removing all running $TARGET tasks from $WORKSPACE\"\n    rm -vf $WORKSPACE_DIR/scans/running_$TARGET_*.txt\n    ls -lh $LOOT_DIR/scans/running_*.txt 2> /dev/null | wc -l 2> /dev/null > $WORKSPACE_DIR/scans/tasks-running.txt 2> /dev/null\n    ps -ef | egrep \"$TARGET|sniper\"\n    ps -ef | egrep \"sniper\" | awk '{print $2}' | xargs -i sudo kill -9 {} \n    exit\n    shift # past argument\n    ;;\n    --list)\n    logo\n    ls -l $INSTALL_DIR/loot/workspace/\n    echo \"\"\n    echo \"cd /usr/share/sniper/loot/workspace/\"\n    WORKSPACE_REPORT=$LOOT_DIR/sniper-report.html\n    if [[ -f $WORKSPACE_REPORT ]]; then\n      echo -e \"$OKORANGE + -- --=[ Loading Sn1per Professional...$RESET\"\n      $BROWSER $INSTALL_DIR/loot/workspace/sniper-report.html 2> /dev/null > /dev/null &\n    else\n      echo -e \"$OKORANGE + -- --=[ Loading workspaces...$RESET\"\n      $BROWSER $INSTALL_DIR/loot/workspace/ 2> /dev/null > /dev/null &\n    fi\n    exit\n    shift\n    ;;\n    --export)\n    if [[ -z \"$WORKSPACE\" ]]; then\n      echo \"You need to set a workspace via the -w switch to export a workspace.\"\n      exit\n    fi\n    echo \"Archiving $WORKSPACE to $INSTALL_DIR/loot/$WORKSPACE.tar\"\n    cd $INSTALL_DIR/loot/workspace/ && tar -cvf ../$WORKSPACE.tar $WORKSPACE \n    cp -Rf $WORKSPACE ${WORKSPACE}_`date +\"%Y-%m-%d\"`\n    echo \"Done!\"\n    exit\n    shift\n    ;;\n    -s|--status)\n    sniper_status\n    exit\n    shift\n    ;;\n    -u|--update)\n    UPDATE=\"1\"\n    update\n    exit\n    shift # past argument\n    ;;\n    *)    # unknown option\n    POSITIONAL+=(\"$1\") # save it in an array for later\n    echo \"Unknown scan option $POSITIONAL...refer to the help menu for usage details.\"\n    exit\n    shift # past argument\n    ;;\nesac\ndone\nset -- \"${POSITIONAL[@]}\" # restore positional parameters\n\nif [[ ! -z \"$TARGET\" ]] && [[ -z \"$WORKSPACE\" ]]; then\n  WORKSPACE=$(echo \"$TARGET\")\nfi\n\nif [[ -z \"$TARGET\" ]] && [[ -z \"$WORKSPACE\" ]]; then\n  logo\n  echo \"You need to specify a target or workspace to use. Type sniper --help for command usage.\"\n  exit\nfi\n\ncd $INSTALL_DIR\n\nfunction init {\n  if [[ ! -z $WORKSPACE_DIR ]]; then\n    LOOT_DIR=$WORKSPACE_DIR\n  fi\n  echo -e \"$OKBLUE[*]$RESET Saving loot to $LOOT_DIR $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n  mkdir -p $LOOT_DIR 2> /dev/nul\n  mkdir $LOOT_DIR/domains 2> /dev/null\n  mkdir $LOOT_DIR/ips 2> /dev/null\n  mkdir $LOOT_DIR/screenshots 2> /dev/null\n  mkdir $LOOT_DIR/nmap 2> /dev/null\n  mkdir $LOOT_DIR/reports 2> /dev/null\n  mkdir $LOOT_DIR/output 2> /dev/null\n  mkdir $LOOT_DIR/osint 2> /dev/null\n  mkdir $LOOT_DIR/credentials 2> /dev/null\n  mkdir $LOOT_DIR/web 2> /dev/null\n  mkdir $LOOT_DIR/vulnerabilities 2> /dev/null\n  mkdir $LOOT_DIR/notes 2> /dev/null\n  mkdir -p $LOOT_DIR/scans/scheduled/ 2> /dev/null\n  touch $LOOT_DIR/scans/scheduled/daily.sh 2> /dev/null\n  touch $LOOT_DIR/scans/scheduled/weekly.sh 2> /dev/null\n  touch $LOOT_DIR/scans/scheduled/monthly.sh 2> /dev/null\n  touch $LOOT_DIR/scans/notifications.txt 2> /dev/null\n  touch $LOOT_DIR/scans/notifications_new.txt 2> /dev/null\n  chmod 777 -Rf $INSTALL_DIR 2> /dev/null\n  chown root $INSTALL_DIR/sniper 2> /dev/null\n  chmod 4777 $INSTALL_DIR/sniper 2> /dev/null\n  TARGET=\"$(echo $TARGET | sed 's/https:\\/\\///g' | sed 's/http:\\/\\///g')\"\n  rm -f /tmp/out_of_scope 2> /dev/null\n  for key in \"${OUT_OF_SCOPE[@]}\"; do echo $TARGET | egrep ${key} >> /tmp/out_of_scope 2> /dev/null; done;\n  OUT_OF_SCOPE_NUM=$(wc -l /tmp/out_of_scope 2> /dev/null | awk '{print $1}' 2> /dev/null)\n  if [[ $OUT_OF_SCOPE_NUM > 0 ]]; then\n    echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE] $TARGET is out of scope. Skipping! $RESET\"\n    exit\n  else\n    echo -e \"$OKBLUE[*]$RESET Scanning $TARGET $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n    echo \"$TARGET\" >> $LOOT_DIR/domains/targets.txt 2> /dev/null\n  fi\n  service postgresql start 2> /dev/null > /dev/null\n  msfdb start 2> /dev/null > /dev/null\n  chown root /run/user/1000/gdm/Xauthority 2> /dev/null\n  LAST_USER=$(last | head -n 1 | awk '{print $1}')\n  sudo cp -a /home/$LAST_USER/.Xauthority /root/.Xauthority 2> /dev/null\n  sudo cp -a /root/.Xauthority /root/.Xauthority.bak 2> /dev/null\n  sudo cp -a /home/$USER/.Xauthority /root/.Xauthority 2> /dev/null\n  sudo cp -a /home/kali/.Xauthority /root/.Xauthority 2> /dev/null\n  sudo chown root: /root/.Xauthority 2> /dev/null\n  XAUTHORITY=/root/.Xauthority\n  UPDATED_TARGETS=$LOOT_DIR/scans/updated.txt\n  if [[ \"$AUTO_BRUTE\" == \"1\" ]]; then\n    echo \"$TARGET AUTO_BRUTE `date +\"%Y-%m-%d %H:%M\"`\" 2> /dev/null >> $LOOT_DIR/scans/tasks.txt\n    touch $LOOT_DIR/scans/$TARGET-AUTO_BRUTE.txt 2> /dev/null\n  fi\n  if [[ \"$FULLNMAPSCAN\" == \"1\" ]]; then\n    echo \"$TARGET fullnmapscan `date +\"%Y-%m-%d %H:%M\"`\" 2> /dev/null >> $LOOT_DIR/scans/tasks.txt\n    touch $LOOT_DIR/scans/$TARGET-fullnmapscan.txt 2> /dev/null\n  fi\n  if [[ \"$OSINT\" == \"1\" ]]; then\n    echo \"$TARGET osint `date +\"%Y-%m-%d %H:%M\"`\" 2> /dev/null >> $LOOT_DIR/scans/tasks.txt\n    touch $LOOT_DIR/scans/$TARGET-osint.txt 2> /dev/null\n  fi\n  if [[ \"$RECON\" == \"1\" ]]; then\n    echo \"$TARGET recon `date +\"%Y-%m-%d %H:%M\"`\" 2> /dev/null >> $LOOT_DIR/scans/tasks.txt\n    touch $LOOT_DIR/scans/$TARGET-recon.txt 2> /dev/null\n  fi\n}\n\nfunction loot {\n  if [[ ! $LOOT == \"0\" ]]; then\n    echo -e \"$OKRED                ____               $RESET\"\n    echo -e \"$OKRED    _________  /  _/___  ___  _____$RESET\"\n    echo -e \"$OKRED   / ___/ __ \\ / // __ \\/ _ \\/ ___/$RESET\"\n    echo -e \"$OKRED  (__  ) / / // // /_/ /  __/ /    $RESET\"\n    echo -e \"$OKRED /____/_/ /_/___/ .___/\\___/_/     $RESET\"\n    echo -e \"$OKRED               /_/                 $RESET\"\n    echo \"\"\n    if [[ ! -z $WORKSPACE_DIR ]]; then\n      LOOT_DIR=$WORKSPACE_DIR\n    fi\n    rm -f $INSTALL_DIR/stash.sqlite 2> /dev/null\n    rm -f $INSTALL_DIR/hydra.restore 2> /dev/null\n    rm -f /tmp/update-check.txt 2> /dev/null\n    ls -lh $LOOT_DIR/scans/running_*.txt 2> /dev/null | wc -l 2> /dev/null > $LOOT_DIR/scans/tasks-running.txt 2> /dev/null\n    echo -e \"$OKBLUE[*]$RESET Opening loot directory $LOOT_DIR $OKBLUE[$RESET${OKGREEN}OK${RESET}$OKBLUE]$RESET\"\n    cd $LOOT_DIR\n    if [[ \"$METASPLOIT_IMPORT\" == \"1\" ]]; then\n      echo -e \"$OKORANGE + -- --=[ Starting Metasploit service...$RESET\"\n      /etc/init.d/metasploit start 2> /dev/null > /dev/null\n      msfdb start\n      echo -e \"$OKORANGE + -- --=[ Importing NMap XML files into Metasploit...$RESET\"\n      msfconsole -x \"workspace -a $WORKSPACE; workspace $WORKSPACE; db_import $LOOT_DIR/nmap/nmap*.xml; hosts; services; exit;\" | tee $LOOT_DIR/notes/msf-$WORKSPACE.txt\n    fi\n    echo -e \"$OKORANGE + -- --=[ Generating reports...$RESET\"\n    cd $LOOT_DIR/output 2> /dev/null\n    echo -en \"$OKGREEN[$OKBLUE\"\n    for a in `ls sniper-*.txt 2>/dev/null`;\n    do\n      echo \"$a\" 2> /dev/null | aha 2> /dev/null > $LOOT_DIR/reports/$a.html 2> /dev/null\n      cat \"$a\" 2> /dev/null | aha 2> /dev/null >> $LOOT_DIR/reports/$a.html 2> /dev/null\n      echo -n '|'\n    done\n    echo -en \"$OKGREEN]$RESET\"\n    echo \"\"\n    cd ..\n    chmod 777 -Rf $LOOT_DIR\n    echo -e \"$OKORANGE + -- --=[ Sorting all files...$RESET\"\n    cat $LOOT_DIR/scans/notifications_new.txt 2> /dev/null >> $LOOT_DIR/scans/notifications.txt 2> /dev/null\n    sort -u $LOOT_DIR/domains/*-full.txt 2> /dev/null > $LOOT_DIR/domains/domains-all-presorted.txt 2> /dev/null\n    sed -E \"s/^\\.//g\" $LOOT_DIR/domains/domains-all-presorted.txt 2> /dev/null | sed -E \"s/^\\*\\.//g\" |  tr '[:upper:]' '[:lower:]' | sort -u > $LOOT_DIR/domains/domains-all-presorted2.txt 2> /dev/null\n    sort -u $LOOT_DIR/domains/targets.txt 2> /dev/null > $LOOT_DIR/domains/targets-all-presorted.txt 2> /dev/null\n    sed -E \"s/^\\.//g\" $LOOT_DIR/domains/targets-all-presorted.txt 2> /dev/null | sed -E \"s/^\\*\\.//g\" |  tr '[:upper:]' '[:lower:]' | sort -u > $LOOT_DIR/domains/targets-all-sorted.txt 2> /dev/null\n    sort -u $LOOT_DIR/ips/ips-all-unsorted.txt 2> /dev/null > $LOOT_DIR/ips/ips-all-sorted.txt 2> /dev/null\n    sed -i -E 's/address//g' $LOOT_DIR/ips/ips-all-sorted.txt 2> /dev/null\n    sort -u $LOOT_DIR/domains/domains-all-presorted2.txt $LOOT_DIR/domains/targets-all-sorted.txt 2> /dev/null > $LOOT_DIR/domains/domains-all-sorted.txt 2> /dev/null\n    diff $LOOT_DIR/domains/targets-all-sorted.txt $LOOT_DIR/domains/domains-all-sorted.txt 2> /dev/null | grep \\> | awk '{print $2}' > $LOOT_DIR/domains/targets-all-unscanned.txt\n    rm -f $LOOT_DIR/domains/targets-all-presorted.txt $LOOT_DIR/domains/targets-all-presorted2.txt 2> /dev/null\n    rm -f $LOOT_DIR/domains/domains-all-presorted.txt $LOOT_DIR/domains/domains-all-presorted2.txt 2> /dev/null\n    sort -u $LOOT_DIR/nmap/openports-unsorted.txt 2> /dev/null > $LOOT_DIR/nmap/openports-sorted.txt 2> /dev/null\n    sort -u $LOOT_DIR/nmap/livehosts-unsorted.txt 2> /dev/null > $LOOT_DIR/nmap/livehosts-sorted.txt 2> /dev/null\n    find $LOOT_DIR/web/ -type f -size -1c -exec rm -f {} \\;\n    cd $LOOT_DIR/web/ && rm -f webhosts-all-sorted-* 2> /dev/null\n    cd $LOOT_DIR/domains/ && rm -f domains-all-sorted-* 2> /dev/null\n    cd $LOOT_DIR/nmap/ && rm -f openports-all-sorted-* 2> /dev/null\n    cd $LOOT_DIR/nmap/ && rm -f livehosts-all-sorted-* 2> /dev/null\n    cd $LOOT_DIR/web/ 2> /dev/null\n    egrep -Hi 'HTTP/1.' headers-* 2> /dev/null | cut -d':' -f1 | sed \"s/headers\\-http\\(\\|s\\)\\-//g\" | sed \"s/\\.txt//g\" | cut -d \\- -f1 | sort -u 2> /dev/null > $LOOT_DIR/web/webhosts-sorted.txt 2> /dev/null\n    split -d -l $MAX_HOSTS -e $LOOT_DIR/web/webhosts-sorted.txt webhosts-all-sorted- 2> /dev/null\n    cd $LOOT_DIR/domains/ 2> /dev/null\n    split -d -l $MAX_HOSTS -e  $LOOT_DIR/domains/domains-all-sorted.txt domains-all-sorted- 2> /dev/null\n    cd $LOOT_DIR/nmap/ 2> /dev/null\n    split -d -l $MAX_HOSTS -e $LOOT_DIR/nmap/openports-sorted.txt openports-all-sorted- 2> /dev/null\n    split -d -l $MAX_HOSTS -e $LOOT_DIR/nmap/livehosts-sorted.txt livehosts-all-sorted- 2> /dev/null\n    echo -e \"$OKORANGE + -- --=[ Removing blank screenshots and files...$RESET\"\n    chmod 777 -Rf $LOOT_DIR 2> /dev/null\n    cd $LOOT_DIR/screenshots/\n    find $LOOT_DIR/screenshots/ -type f -size -9000c -exec rm -f {} \\;\n    find $LOOT_DIR/nmap/ -type f -size -1c -exec rm -f {} \\;\n    find $LOOT_DIR/ips/ -type f -size -1c -exec rm -f {} \\;\n    find $LOOT_DIR/osint/ -type f -size -1c -exec rm -f {} \\;\n    find $LOOT_DIR/vulnerabilities/ -type f -size -1c -exec rm -f {} \\;\n    cd $LOOT_DIR\n    if [[ -f $SNIPER_PRO ]]; then\n      wc -l $LOOT_DIR/scans/notifications.txt 2> /dev/null | awk '{print $1}' > $LOOT_DIR/scans/notifications_total.txt 2> /dev/null\n      wc -l $LOOT_DIR/scans/notifications_new.txt 2> /dev/null | awk '{print $1}' > $LOOT_DIR/scans/notifications_new_total.txt 2> /dev/null\n      cat $LOOT_DIR/scans/tasks-running.txt 2> /dev/null > $LOOT_DIR/scans/tasks-running_total.txt 2> /dev/null\n      wc -l $LOOT_DIR/scans/tasks.txt 2> /dev/null | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/tasks_total.txt 2> /dev/null \n      wc -l $LOOT_DIR/scans/scheduled/*.sh 2> /dev/null | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/scheduled_tasks_total.txt 2> /dev/null \n      grep \"Host\\ status\" $LOOT_DIR/scans/notifications.txt 2> /dev/null | wc -l | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/host_status_changes_total.txt 2> /dev/null \n      grep \"Port\\ change\" $LOOT_DIR/scans/notifications.txt 2> /dev/null | wc -l | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/port_changes_total.txt 2> /dev/null \n      wc -l $LOOT_DIR/domains/domains_new-*.txt 2> /dev/null | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/domain_changes_total.txt 2> /dev/null \n      cat $LOOT_DIR/web/dirsearch-new-*.txt $LOOT_DIR/web/spider-new-*.txt 2> /dev/null | wc -l | awk '{print $1}' 2> /dev/null > $LOOT_DIR/scans/url_changes_total.txt 2> /dev/null\n      if [[ -f \"$LOOT_DIR/notes/notepad.html\" ]]; then\n        echo -n \"\" 2>/dev/null\n      else\n        cp \"$INSTALL_DIR/pro/notepad.html\" \"$LOOT_DIR/notes/notepad.html\" 2>/dev/null\n        PRE_NAME=$(echo $WORKSPACE | sed \"s/\\./-/g\")\n        sed -i \"s/notepad/notepad-$PRE_NAME/g\" \"$LOOT_DIR/notes/notepad.html\" 2> /dev/null\n      fi\n      if [[ \"$SN1PER_AUTOLOAD\" = \"1\" ]] && [[ ! -f \"$INSTALL_DIR/pro/settings.php\" ]]; then\n          echo -e \"$OKORANGE + -- --=[ Loading Sn1per Professional...$RESET\"\n          source $INSTALL_DIR/pro.sh\n          sudo $LAST_USER -c $BROWSER $LOOT_DIR/sniper-report.html 2> /dev/null > /dev/null &\n      else\n        echo -e \"$OKORANGE + -- --=[ Generating Sn1per Professional reports...$RESET\"\n        source $INSTALL_DIR/pro.sh\n      fi\n    else\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET ⚡ Upgrade to Sn1per Professional and unlock a world of powerful benefits! 🚀 $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 💡 Don't miss out on important updates by using the Community version. $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 🔝 The latest Professional version ( ${OKRED}10.7 ${RESET}) offers unparalleled features, including: $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET     💻 Sleek Web UI $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET     🛠️ Extensive add-ons $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET     🔄 Seamless integrations $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 🤝 Experience priority support, continuous updates, and enhanced capabilities tailored for professionals like you. $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 💰 Maximize your investment and achieve exceptional results with Sn1per Professional. $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 🔍 Learn more about the differences between the versions at: ${OKBLUE}https://sn1persecurity.com/wordpress/sn1per-community-vs-professional-whats-the-difference/ $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET  $RESET\"\n      echo -e \"$OKBLUE[$RESET${OKRED}i${RESET}$OKBLUE]$RESET 🛒 Purchase your Sn1per Professional license now at: ${OKBLUE}https://sn1persecurity.com/ $RESET\"\n      sudo $LAST_USER -c $BROWSER https://sn1persecurity.com 2> /dev/null > /dev/null &\n    fi\n    rm -f $UPDATED_TARGETS 2> /dev/null\n    touch $UPDATED_TARGETS 2> /dev/null\n    echo -e \"$OKORANGE + -- --=[ Done!$RESET\"\n  fi\n}\n\nif [[ \"$REIMPORT\" = \"1\" ]]; then\n  if [[ ! -z \"$WORKSPACE_DIR\" ]]; then\n    LOOT=\"1\"\n    loot\n    exit\n  fi\nfi\n\nif [[ \"$REIMPORT_ALL\" = \"1\" ]]; then\n  if [[ ! -z \"$WORKSPACE_DIR\" ]]; then\n    touch $WORKSPACE_DIR/domains/targets.txt $WORKSPACE_DIR/domains/targets-all-sorted.txt $WORKSPACE_DIR/domains/domains-all-sorted.txt\n    cat $WORKSPACE_DIR/domains/targets.txt $WORKSPACE_DIR/domains/targets-all-sorted.txt $WORKSPACE_DIR/domains/domains-all-sorted.txt | sort -u > $WORKSPACE_DIR/scans/updated.txt\n    rm -f $WORKSPACE_DIR/nmap/openports-unsorted.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/nmap/openports-sorted.txt 2> /dev/null\n    rm -f $WORKSPACE_DIR/reports/host-table-report.csv 2> /dev/null\n    LOOT=\"1\"\n    loot\n    exit\n  fi\nfi\n\nif [[ \"$RELOAD\" = \"1\" ]]; then\n  if [[ ! -z \"$WORKSPACE_DIR\" ]]; then\n    $BROWSER $WORKSPACE_DIR/sniper-report.html 2> /dev/null > /dev/null &\n    exit\n  fi\nfi\n\nif [[ ${TARGET:0:1} =~ $REGEX ]];\nthen\n  SCAN_TYPE=\"IP\"\nelse\n  SCAN_TYPE=\"DOMAIN\"\nfi\n\n# INITILIZE\ninit\n\nif [[ ! -f /tmp/update-check.txt ]]; then\n  # CHECK CONNECTION STATUS\n  check_online\nfi\n\nif [[ ! -f /tmp/update-check.txt ]]; then\n  # CHECK FOR UPDATES\n  check_update\nfi\n\n# CHECK FOR BLACKARCH LINUX\nif grep -q BlackArch /etc/issue; then\n  DISTRO='blackarch'\n  echo \"Detected BlackArch GNU/Linux\"\n  INSTALL_DIR=$(pwd)\n  echo \"Setting current path to $INSTALL_DIR\"\nfi\n\nsource modes/discover.sh\nsource modes/flyover.sh\nsource modes/vulnscan.sh\nsource modes/fullportonly.sh\nsource modes/web.sh\nsource modes/webporthttp.sh\nsource modes/webporthttps.sh\nsource modes/webscan.sh\nsource modes/massweb.sh\nsource modes/masswebscan.sh\nsource modes/massvulnscan.sh\nsource modes/massportscan.sh\nsource modes/stealth.sh\nsource modes/airstrike.sh\nsource modes/nuke.sh\nsource modes/normal.sh\n\nrm -f /tmp/update-check.txt 2> /dev/null\n\nexit 0\n"
        },
        {
          "name": "sniper.conf",
          "type": "blob",
          "size": 9.5888671875,
          "content": "INSTALL_DIR=\"/usr/share/sniper\"\nSNIPER_PRO=$INSTALL_DIR/pro.sh\nPLUGINS_DIR=\"$INSTALL_DIR/plugins\"\n\n# COLORS\nOKBLUE='\\033[94m'\nOKRED='\\033[91m'\nOKGREEN='\\033[92m'\nOKORANGE='\\033[93m'\nRESET='\\e[0m'\nREGEX='^[0-9]+$'\n\n# AUX MODE OVERRIDE\n# AUTO_BRUTE=\"0\"\n# FULLNMAPSCAN=\"0\"\n# OSINT=\"0\"\nVULNSCAN=\"0\"\n\n# DEFAULT SETTINGS\nENABLE_AUTO_UPDATES=\"1\"\nREPORT=\"1\"\nLOOT=\"1\"\n\n# OUT OF SCOPE\nOUT_OF_SCOPE=(\"www.sn1persecurity.com\" \"sn1persecurity.com\" \"*.sn1persecurity.com\")\n\n# SN1PER PROFESSIONAL SETTINGS\nSNIPER_PRO_CONSOLE_OUTPUT=\"0\"\nSN1PER_AUTOLOAD=\"0\"\nMAX_HOSTS=\"2000\"\n\n# DEFAULT BROWSER\nBROWSER=\"firefox\"\n\n# BURP 2.0 SCANNER CONFIG\nBURP_HOST=\"127.0.0.1\"\nBURP_PORT=\"1338\"\n\n# OPENVAS CONFIG\nOPENVAS=\"0\"\nOPENVAS_HOST=\"127.0.0.1\"\nOPENVAS_PORT=\"9390\"\nOPENVAS_USERNAME=\"admin\"\nOPENVAS_PASSWORD=\"\"\nOPENVAS_RUNAS_USER=\"kali\"\n\n# NESSUS CONFIG\nNESSUS=\"0\"\nNESSUS_HOST=\"127.0.0.1:8834\"\nNESSUS_USERNAME=\"admin\"\nNESSUS_PASSWORD=\"\"\nNESSUS_POLICY_ID=\"c3cbcd46-329f-a9ed-1077-554f8c2af33d0d44f09d736969bf\"\n\n# METASPLOIT SCANNER CONFIG\nMETASPLOIT_IMPORT=\"0\"\nMSF_LHOST=\"127.0.0.1\"\nMSF_LPORT=\"4444\"\n\n# SHODAN API KEY\nSHODAN_API_KEY=\"\"\n\n# CENSYS API KEYS\nCENSYS_APP_ID=\"\"\nCENSYS_API_SECRET=\"\"\n\n# HUNTER.IO API KEY\nHUNTERIO_KEY=\"\"\n\n# TOMBA.IO API\nTOMBAIO_KEY=\"\"\nTOMBAIO_SECRET=\"\"\n\n# GITHUB API KEY\nGITHUB_API_KEY=\"\"\n\n# WPSCAN API KEY\nWP_API_KEY=\"\"\n\n# SLACK API\nSLACK_NOTIFICATIONS=\"0\"\nSLACK_NOTIFICATIONS_THEHARVESTER=\"0\"\nSLACK_NOTIFICATIONS_EMAIL_SECURITY=\"0\"\nSLACK_NOTIFICATIONS_DOMAINS_NEW=\"0\"\nSLACK_NOTIFICATIONS_TAKEOVERS_NEW=\"0\"\nSLACK_NOTIFICATIONS_SUBOVER_NEW=\"0\"\nSLACK_NOTIFICATIONS_SUBJACK_NEW=\"0\"\nSLACK_NOTIFICATIONS_S3_BUCKETS=\"0\"\nSLACK_NOTIFICATIONS_SUBNETS=\"0\"\nSLACK_NOTIFICATIONS_DIRSEARCH_NEW=\"0\"\nSLACK_NOTIFICATIONS_SPIDER_NEW=\"0\"\nSLACK_NOTIFICATIONS_WHATWEB=\"0\"\nSLACK_NOTIFICATIONS_NMAP=\"0\"\nSLACK_NOTIFICATIONS_NMAP_DIFF=\"0\"\nSLACK_NOTIFICATIONS_BRUTEFORCE=\"0\"\nSLACK_NOTIFICATIONS_WHOIS=\"0\"\nSLACK_NOTIFICATIONS_METAGOOFIL=\"0\"\nSLACK_NOTIFICATIONS_ARACHNI_SCAN=\"0\"\nSLACK_NOTIFICATIONS_EMAIL_FORMAT=\"0\"\n\n# ACTIVE WEB BRUTE FORCE STAGES\nWEB_BRUTE_STEALTHSCAN=\"1\"\nWEB_BRUTE_COMMONSCAN=\"1\"\nWEB_BRUTE_FULLSCAN=\"0\"\nWEB_BRUTE_EXPLOITSCAN=\"0\"\nWEB_JAVASCRIPT_ANALYSIS=\"1\"\nMAX_JAVASCRIPT_FILES=\"25\"\n\n# WEB BRUTE FORCE WORDLISTS\nWEB_BRUTE_STEALTH=\"$INSTALL_DIR/wordlists/web-brute-stealth.txt\"\nWEB_BRUTE_COMMON=\"$INSTALL_DIR/wordlists/web-brute-common.txt\"\nWEB_BRUTE_FULL=\"$INSTALL_DIR/wordlists/web-brute-full.txt\"\nWEB_BRUTE_EXPLOITS=\"$INSTALL_DIR/wordlists/web-brute-exploits.txt\"\nWEB_BRUTE_EXTENSIONS=\"htm,html,asp,aspx,php,jsp,js\"\nWEB_BRUTE_EXCLUDE_CODES=\"400,403,404,405,406,429,500,502,503,504\"\n\n# GREP PATTERNS\nSTATIC_GREP_SEARCH=\"1\"\nGREP_MAX_LINES=\"10\"\nGREP_INTERESTING_SUBDOMAINS=\"admin|jenkins|test|proxy|stage|test|dev|devops|staff|db|qa|internal\"\nGREP_EXTENSIONS=\"\\.action|\\.adr|\\.ascx|\\.asmx|\\.axd|\\.backup|\\.bak|\\.bkf|\\.bkp|\\.bok|\\.achee|\\.cfg|\\.cfm|\\.cgi|\\.cnf|\\.conf|\\.config|\\.crt|\\.csr|\\.csv|\\.dat|\\.doc|\\.docx|\\.eml|\\.env|\\.exe|\\.gz|\\.ica|\\.inf|\\.ini|\\.java|\\.json|\\.key|\\.log|\\.lst|\\.mai|\\.mbox|\\.mbx|\\.md|\\.mdb|\\.nsf|\\.old|\\.ora|\\.pac|\\.passwd|\\.pcf|\\.pdf|\\.pem|\\.pgp|\\.pl| plist|\\.pwd|\\.rdp|\\.reg|\\.rtf|\\.skr|\\.sql|\\.swf|\\.tpl|\\.txt|\\.url|\\.wml|\\.xls|\\.xlsx|\\.xml|\\.xsd|\\.yml\"\nGREP_PARAMETERS=\"template=|preview=|id=|view=|activity=|name=|content=|redirect=|(&|[?])access(&|=)|(&|[?])admin(&|=)|(&|[?])dbg(&|=)|(&|[?])debug(&|=)|(&|[?])edit(&|=)|(&|[?])grant(&|=)|(&|[?])test(&|=)|(&|[?])alter(&|=)|(&|[?])clone(&|=)|(&|[?])create(&|=)|(&|[?])delete(&|=)|(&|[?])disable(&|=)|(&|[?])enable(&|=)|(&|[?])exec(&|=)|(&|[?])execute(&|=)|(&|[?])load(&|=)|(&|[?])make(&|=)|(&|[?])modify(&|=)|(&|[?])rename(&|=)|(&|[?])reset(&|=)|(&|[?])shell(&|=)|(&|[?])toggle(&|=)|(&|[?])adm(&|=)|(&|[?])root(&|=)|(&|[?])cfg(&|=)|(&|[?])dest(&|=)|(&|[?])redirect(&|=)|(&|[?])uri(&|=)|(&|[?])path(&|=)|(&|[?])continue(&|=)|(&|[?])url(&|=)|(&|[?])window(&|=)|(&|[?])next(&|=)|(&|[?])data(&|=)|(&|[?])reference(&|=)|(&|[?])site(&|=)|(&|[?])html(&|=)|(&|[?])val(&|=)|(&|[?])validate(&|=)|(&|[?])domain(&|=)|(&|[?])callback(&|=)|(&|[?])return(&|=)|(&|[?])feed(&|=)|(&|[?])host(&|=)|(&|[?])port(&|=)|(&|[?])to(&|=)|(&|[?])out(&|=)|(&|[?])view(&|=)|(&|[?])dir(&|=)|(&|[?])show(&|=)|(&|[?])navigation(&|=)|(&|[?])open(&|=)|(&|[?])file(&|=)|(&|[?])document(&|=)|(&|[?])folder(&|=)|(&|[?])pg(&|=)|(&|[?])php_path(&|=)|(&|[?])style(&|=)|(&|[?])doc(&|=)|(&|[?])img(&|=)|(&|[?])filename(&|=)|id=|select=|report=|role=|update=|query=|user=|name=|sort=|where=|search=|params=|process=|row=|view=|table=|from=|sel=|results=|sleep=|fetch=|order=|keyword=|column=|field=|delete=|string=|number=|filter=|(&|[?])callback=|(&|[?])cgi-bin/redirect.cgi|(&|[?])checkout=|(&|[?])checkout_url=|(&|[?])continue=|(&|[?])data=|(&|[?])dest=|(&|[?])destination=|(&|[?])dir=|(&|[?])domain=|(&|[?])feed=|(&|[?])file=|(&|[?])file_name=|(&|[?])file_url=|(&|[?])folder=|(&|[?])folder_url=|(&|[?])forward=|(&|[?])from_url=|(&|[?])go=|(&|[?])goto=|(&|[?])host=|(&|[?])html=|(&|[?])image_url=|(&|[?])img_url=|(&|[?])load_file=|(&|[?])load_url=|(&|[?])login_url=|(&|[?])logout=|(&|[?])navigation=|(&|[?])next=|(&|[?])next_page=|(&|[?])Open=|(&|[?])out=|(&|[?])page_url=|(&|[?])path=|(&|[?])port=|(&|[?])redir=|(&|[?])redirect=|(&|[?])redirect_to=|(&|[?])redirect_uri=|(&|[?])redirect_url=|(&|[?])reference=|(&|[?])return=|(&|[?])return_path=|(&|[?])return_to=|(&|[?])returnTo=|(&|[?])return_url=|(&|[?])rt=|(&|[?])rurl=|(&|[?])show=|(&|[?])site=|(&|[?])target=|(&|[?])to=|(&|[?])uri=|(&|[?])url=|(&|[?])val=|(&|[?])validate=|(&|[?])view=|(&|[?])window=|daemon=|upload=|dir=|execute=|download=|log=|ip=|cli=|cmd=|file=|document=|folder=|root=|path=|pg=|style=|pdf=|template=|php_path=|doc=|page=|name=|id=|user=|account=|number=|order=|no=|doc=|key=|email=|group=|profile=|edit=|report=|access=|admin=|dbg=|debug=|edit=|grant=|test=|alter=|clone=|create=|delete=|disable=|enable=|exec=|execute=|load=|make=|modify=|rename=|reset=|shell=|toggle=|adm=|root=|cfg=|config=\"\nGREP_XSS=\"q=|s=|search=|lang=|keyword=|query=|page=|keywords=|year=|view=|email=|type=|name=|p=|callback=|jsonp=|api_key=|api=|password=|email=|emailto=|token=|username=|csrf_token=|unsubscribe_token=|id=|item=|page_id=|month=|immagine=|list_type=|url=|terms=|categoryid=|key=|l=|begindate=|enddate=\"\nGREP_SSRF=\"access|admin|dbg|debug|edit|grant|test|alter|clone|create|delete|disable|enable|exec|execute|load|make|modify|rename|reset|shell|toggle|adm|root|cfg|dest|redirect|uri|path|continue|url|window|next|data|reference|site|html|val|validate|domain|callback|return|page|feed|host|port|to|out|view|dir|show|navigation|open\"\nGREP_REDIRECT=\"forward=|dest=|redirect=|uri=|path=|continue=|url=|window=|to=|out=|view=|dir=|show=|navigation=|Open=|file=|val=|validate=|domain=|callback=|return=|page=|feed=|host=|port=|next=|data=|reference=|site=|html=\"\nGREP_RCE=\"daemon|upload|dir|execute|download|log|ip|cli|cmd\"\nGREP_IDOR=\"id|user|account|number|order|no|doc|key|email|group|profile|edit|report\"\nGREP_SQL=\"id|select|report|role|update|query|user|name|sort|where|search|params|process|row|view|table|from|sel|results|sleep|fetch|order|keyword|column|field|delete|string|number|filter\"\nGREP_LFI=\"file|document|folder|root|path|pg|style|pdf|template|php_path|doc\"\nGREP_SSTI=\"template|preview|id|view|activity|name|content|redirect\"\nGREP_DEBUG=\"access|admin|dbg|debug|edit|grant|test|alter|clone|create|delete|disable|enable|exec|execute|load|make|modify|rename|reset|shell|toggle|adm|root|cfg|config\"\n\n# DOMAIN WORDLISTS\nDOMAINS_QUICK=\"$INSTALL_DIR/wordlists/domains-quick.txt\"\nDOMAINS_DEFAULT=\"$INSTALL_DIR/wordlists/domains-default.txt\"\n# DOMAINS_FULL=\"$INSTALL_DIR/wordlists/domains-all.txt\"\n\n# DEFAULT USER/PASS WORDLISTS\nUSER_FILE=\"/usr/share/brutex/wordlists/simple-users.txt\"\nPASS_FILE=\"/usr/share/brutex/wordlists/password.lst\"\nDNS_FILE=\"/usr/share/brutex/wordlists/namelist.txt\"\n\n# TOOL DIRECTORIES\nSAMRDUMP=\"$INSTALL_DIR/bin/samrdump.py\"\nINURLBR=\"$INSTALL_DIR/bin/inurlbr.php\"\n\n# FLYOVER MODE TUNING\nFLYOVER_MAX_HOSTS=\"5\"\nFLYOVER_DELAY=\"10\"\n\n# NMAP OPTIONS\nNMAP_OPTIONS=\"--script-args http.useragent='' --open\"\n\n# NMAP PORT CONFIGURATIONS\nQUICK_PORTS=\"21,22,80,443,8000,8080,8443\"\nDEFAULT_PORTS=\"10000,1099,110,111,123,135,137,139,1433,1524,161,162,16992,2049,21,2121,2181,22,23,25,264,27017,27018,27019,28017,3128,3306,3310,3389,3632,389,443,4443,445,49152,49180,500,512,513,514,53,5432,5555,5800,5900,5984,623,624,6667,67,68,69,7001,79,80,8000,8001,8080,8180,8443,8888,9200,9495\"\nFULL_PORTSCAN_PORTS=\"T:1-65535,U:53,U:67,U:68,U:69,U:88,U:161,U:162,U:137,U:138,U:139,U:389,U:500,U:520,U:2049\"\nTHREADS=\"100\"\n\n# NETWORK PLUGINS\nNMAP_SCRIPTS=\"1\"\nMETASPLOIT_EXPLOIT=\"1\"\nMSF_LEGACY_WEB_EXPLOITS=\"0\"\nSSH_AUDIT=\"1\"\nSSH_ENUM=\"1\"\nLIBSSH_BYPASS=\"1\"\nSMTP_USER_ENUM=\"1\"\nFINGER_TOOL=\"1\"\nSHOW_MOUNT=\"1\"\nRPC_INFO=\"1\"\nSMB_ENUM=\"1\"\nAMAP=\"0\"\n\n# OSINT PLUGINS\nWHOIS=\"1\"\nGOOHAK=\"1\"\nINURLBR=\"1\"\nTHEHARVESTER=\"1\"\nMETAGOOFIL=\"1\"\nHUNTERIO=\"0\"\nTOMBAIO=\"0\"\nINTODNS=\"1\"\nEMAILFORMAT=\"1\"\nULTRATOOLS=\"1\"\nURLCRAZY=\"1\"\nVHOSTS=\"0\"\nH8MAIL=\"0\"\nGITHUB_SECRETS=\"0\"\nURLSCANIO=\"1\"\n\n# DYNAMIC APPLICATION SCANNERS\nBURP_SCAN=\"0\"\nARACHNI_SCAN=\"0\"\nZAP_SCAN=\"0\"\n\n# ACTIVE WEB PLUGINS\nSC0PE_VULNERABLITY_SCANNER=\"1\"\nNUCLEI=\"1\"\nDIRSEARCH=\"1\"\nGOBUSTER=\"0\"\nNIKTO=\"0\"\nBLACKWIDOW=\"1\"\nINJECTX=\"1\"\nCLUSTERD=\"0\"\nWPSCAN=\"0\"\nCMSMAP=\"0\"\nWAFWOOF=\"1\"\nWHATWEB=\"1\"\nWIG=\"0\"\nSHOCKER=\"0\"\nJEXBOSS=\"0\"\nWEBTECH=\"1\"\nSSL_INSECURE=\"1\"\nHTTP_PROBE=\"0\"\nSMUGGLER=\"1\"\n\n# PASSIVE WEB PLUGINS\nWAYBACKMACHINE=\"1\"\nSSL=\"1\"\nPASSIVE_SPIDER=\"1\"\nGAU=\"1\"\nHACKERTARGET=\"1\"\nCUTYCAPT=\"0\"\nWEBSCREENSHOT=\"1\"\n\n# EMAIL PLUGINS\nSPOOF_CHECK=\"1\"\n\n# RECON PLUGINS\nSUBHIJACK_CHECK=\"0\"\nAQUATONE=\"0\"\nSLURP=\"0\"\nSUBLIST3R=\"0\"\nAMASS=\"0\"\nSUBFINDER=\"0\"\nDNSCAN=\"0\"\nCRTSH=\"1\"\nSUBOVER=\"0\"\nPROJECT_SONAR=\"1\"\nCENSYS_SUBDOMAINS=\"0\"\nSUBNET_RETRIEVAL=\"1\"\nSUBJACK=\"0\"\nALT_DNS=\"0\"\nMASS_DNS=\"0\"\nDNSGEN=\"0\"\nSHODAN=\"0\"\nASN_CHECK=\"1\"\nSPYSE=\"0\"\nSUBBRUTE_DNS=\"0\"\nGITHUB_SUBDOMAINS=\"0\"\nRAPIDDNS=\"1\"\nSCAN_ALL_DISCOVERED_DOMAINS=\"0\""
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "uninstall.sh",
          "type": "blob",
          "size": 0.9609375,
          "content": "#!/bin/bash\n# Uninstall script for Sn1per\n# Created by @xer0dayz - https://sn1persecurity.com\n\nif [[ $EUID -ne 0 ]]; then\n   echo \"This script must be run as root\" \n   exit 1\nfi\n\n# VARS\nOKBLUE='\\033[94m'\nOKRED='\\033[91m'\nOKGREEN='\\033[92m'\nOKORANGE='\\033[93m'\nRESET='\\e[0m'\n\necho -e \"$OKRED                ____               $RESET\"\necho -e \"$OKRED    _________  /  _/___  ___  _____$RESET\"\necho -e \"$OKRED   / ___/ __ \\ / // __ \\/ _ \\/ ___/$RESET\"\necho -e \"$OKRED  (__  ) / / // // /_/ /  __/ /    $RESET\"\necho -e \"$OKRED /____/_/ /_/___/ .___/\\___/_/     $RESET\"\necho -e \"$OKRED               /_/                 $RESET\"\necho -e \"$RESET\"\necho -e \"$OKORANGE + -- --=[https://sn1persecurity.com$RESET\"\necho \"\"\n\nINSTALL_DIR=/usr/share/sniper\n\necho -e \"$OKRED[>]$RESET This script will uninstall sniper and remove ALL files under $INSTALL_DIR. Are you sure you want to continue?$RESET\"\nread answer\n\nrm -Rf /usr/share/sniper/\nrm -f /usr/bin/sniper\n\necho -e \"$OKBLUE[*]$RESET Done!$RESET\""
        },
        {
          "name": "wordlists",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}