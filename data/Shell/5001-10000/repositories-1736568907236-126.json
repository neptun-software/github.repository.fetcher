{
  "metadata": {
    "timestamp": 1736568907236,
    "page": 126,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "holoiso-eol/holoiso",
      "stars": 5242,
      "defaultBranch": "stable",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": "work/\nout/\nsteamdeck-20230323.1000-snapshot.manifest.pacman\npkglist.x86_64.txt\ntest2.sh\ntest\nefiboot/loader/entries/*\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.494140625,
          "content": "            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar\n  22 rue de Plaisance, 75014 Paris, France\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.162109375,
          "content": "# All work is being done on: https://github.com/holoiso-staging/releases. This version is completely EOL and is no longer supported.\n\n\n\n\n\n\n\n[![Build ISO](https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml/badge.svg)](https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml)\n\n![image](https://user-images.githubusercontent.com/97450182/167457908-07be1a60-7e86-4bef-b7f0-6bd19efd8b24.png)\n# HoloISO\nSteamOS 3 (Holo) archiso configuration.\n\n***Yes, Gabe. SteamOS functions well on a toaster.***\n\nThis project attempts to bring the Steam Deck's SteamOS Holo redistribution into a generic, installable format, and provide a close-to-official SteamOS experience.\nMain point of this project focuses in re-implementing proprietary (as in runs-only-on-deck) components that Steam client, OS itself, gamescope and user-created applications for Deck rely on and making me learn Linux in a fun and unique way.\n\nClick [here](https://t.me/HoloISO) to join **HoloISO** Telegram update channel;\n\n**Common Questions**\n\n- Is this official?\n> No, but it may as well be 99% of the way there. Most of the code and packages, are straight from Valve, with zero possible edits, and the ISO is being built same rootfs bootstrap as all HoloISO installations run\n- I have an NVIDIA G-\n> No. Not even questionable. If you have an NVIDIA GPU, You're on your own. Latest Valve updates for Steam client including normal and Jupiter bootstraps have broken gamepadui on NVIDIA GPUs, and if so, no support will be provided for you.\n\nHardware Support:\n-\n**CPU:**\n- Mostly all CPUs work fine. But people report inoperable experience on 7xxx series. (Should be working in later builds with linux-zen package included)\n\n**WLAN/PCIe additional cards:**\n- Any pre-2021 WLAN Card works fine on Valve's 5.13 Neptune kernel, but linux-zen provides support for ALL current cards\n\n**Sound:**\n- Everything mostly works fine(tm)\n\n**GPU:**\n- AMD GPUs with RADV support (Guaranteed to work fully stable. 7xxx requires testing)\n- NVIDIA GPUs (Unfunctional, but might work. No support will be provided to you, don't ask about it)\n- Intel GPUs (Random experience)\n\nProgress:\n-\n**Working stuff:**\n- Bootup\n- SteamOS OOBE (Steam Deck UI First Boot Experience)\n- Deck UI (separate session)\n- Deck UI (-gamepadui)\n- ~~TDP/FPS limiting~~ (*0)\n- Global FSR\n- Shader Pre-Caching\n- Switch to Desktop from plasma/to plasma without user interference.\n- Valve's exclusive *Vapor* appearance for KDE Plasma\n- Steam Deck pacman mirrors\n- Cool-looking neofetch?\n- System updates\n\n**Working stuff on Steam Deck compared to other distributions:**\n- Dock Firmware updater (additionally installable in desktop by running sudo pacman -S jupiter-dock-updater-bin)\n- Steam Deck BIOS, Controller firmware, OS firmware updater, support for thumbstick and haptic motor calibration, native amplifier (CS35L41) support\n- New fan curve control\n- TDP/Clock control\n\n(*0) Disabled for ALL systems except for Steam Deck (Valve Jupiter 1) due to VERY LOW hardcoded TDP/Clock values, especially for dGPUs.\n\nInstallation process:\n-\n**Prerequistes:**\n- 4GB flash drive\n- More than 8 GB RAM if you plan to use \"Copy-To-RAM\" option to install\n- AMD GPU that supports RADV Drivers instead of Radeon (Southern Islands and Sea Islands require additional kernel cmdline property)\n- UEFI-enabled device\n- Disabled secure boot\n\n**Installation:**\n- Flash the ISO from [releases](https://github.com/bhaiest/holoiso/releases/latest) using [BalenaEtcher](https://www.balena.io/etcher/), [Rufus](https://rufus.ie) with DD mode, or by typing `sudo dd if=SteamOS.iso of=/dev/sd(your flash drive) bs=4M status=progress oflag=sync`, or by simply throwing ISO into Ventoy drive\n- Boot into ISO\n- Click on \"Install SteamOS on this device\"\n- Follow on-screen instructions\n- Take your favourite hot beverage, and wait 'till it installs :3\n\nUpon booting, you'll be greeted with Steam Deck's OOBE screen, from where you'll connect to your network, and login to your Steam account, from there, you can exit to KDE Plasma seamlessly by choosing *Switch to desktop* in the power menu, [like so](https://www.youtube.com/watch?v=smfwna2iHho).\n\nScreenshots:\n-\n![Screenshot_20220508_133916](https://user-images.githubusercontent.com/97450182/167292656-1679e007-4701-4a3c-89ee-2104b5eb12cd.png)\n![Screenshot_20220508_133737](https://user-images.githubusercontent.com/97450182/167292672-8bc9032d-4a21-4528-ab7e-b9dbc25a0664.png)\n![Screenshot_20220508_133746](https://user-images.githubusercontent.com/97450182/167292722-a68806c1-5768-4790-a8e7-108d7c72bb08.png)\n![Screenshot_20220508_133822](https://user-images.githubusercontent.com/97450182/167292731-86fed590-0260-4c5e-ac13-05d284b5fd24.png)\n![Screenshot_20220508_134038](https://user-images.githubusercontent.com/97450182/167292734-90036b5f-2571-438e-8951-8d731cd4ae93.png)\n![Screenshot_20220508_134051](https://user-images.githubusercontent.com/97450182/167292738-a70d266f-814d-4352-8d38-b920ae3f3381.png)\n\nCredits:\n-\n(Too much people xD, to be filled later!!!)\n\nNotes:\n-\n\nThis configuration includes Valve's pacman.conf repositories, `holoinstall` script and `holoinstall` post-installation binaries.\n\nThis configuration builds a *releng-based ISO*, which is the default Arch Linux redistribution flavor.\n"
        },
        {
          "name": "README.zh_CN.md",
          "type": "blob",
          "size": 5.150390625,
          "content": "[![Build ISO](https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml/badge.svg)](https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml)\n\n![image](https://user-images.githubusercontent.com/97450182/167457908-07be1a60-7e86-4bef-b7f0-6bd19efd8b24.png)\n\n# ENGLISH Version\nClick [here](https://github.com/theVakhovskeIsTaken/holoiso) to access the English version.\n\n# HoloISO \n\nArchLinux 的 SteamOS 3 (Holo) 配置文件。\n\n***是的，V社宣称你甚至可以在面包机上运行SteamOS。***\n本项目试图将 Steam Desk 的 SteamOS Holo 重新更改为通用、可安装的发布版本，并提供类似于官方的 SteamOS 体验。本项目的重点在于实现 Steam 客户端、操作系统本身、 Gamescope 组件和用户为 Deck 创建的应用程序所依赖的专有运行库(例如 Steam Desk 专有运行库。)。\n\n点击 [这里](https://t.me/HoloISO) 来加入 **HoloISO** 的官方 **Telegram** 更新频道 ;\n\n点击 [这里](https://steamdeck.community/forums/holoiso.29/) 来访问 **Steam Deck** 官方社区论坛上对 **HoloISO** 的讨论。\n\n**常见问题：**\n\n- 本项目是V社官方的吗?\n> 不是，但它 99% 的部分已经和官方是一样的。它的原代码和软件包没有经过任何修改，都源自 Valve ，并且所有被构建的 ISO 有 HoloISO 安装运行后相同的 rootfs 引导程序。\n- 我有一个 NVIDIA G- 系列显卡\n> 不，甚至不值得提问。如果您有 NVIDIA 显卡，您就靠自己了。Steam 客户端的最新 Valve 更新包括普通和 Jupiter 引导程序已经破坏了 NVIDIA 显卡的 gamepadui。因此，你将不会获得任何技术支持。\n\n\n**项目计划：**\n- 成功启动\n- SteamOS OOBE（Steam Deck UI 首次启动时的欢迎界面）\n- Deck UI (桌面模式)\n- Deck UI (-游戏模式)\n- ~~TDP 控制/FPS 限制~~ (*0)\n- 全局 FSR\n- 着色器预缓存\n- 在没有用户干扰的情况下切换桌面模式从Plasma/到Plasma。\n- Valve 为 KDE Plasma 桌面独家打造的 *Vapor* 主题\n- Steam Deck pacman 镜像源\n- 看起来很酷的 neofetch ?\n- 系统更新\n\n\n**Steam Deck 上的程序内容与发行版的比较：：**\n\n- Dock 固件更新程序（可通过运行 sudo pacman -S jupiter-dock-updater-bin 在桌面上额外安装）\n- Steam Deck BIOS、控制器固件、操作系统固件更新程序\n- 新的风扇曲线控制\n- TDP/时钟控制\n\n(*0) 由于 Steam Deck 默认的 TDP 功耗和 GPU 频率都很低，特别是 dGPUs ，无法匹配大部分通用配置，所以该功能禁用。\n\n# 安装说明：\n**最低需求：**\n- 4GB 存储介质\n- 如果您需要使用“复制到内存”选项进行安装，则需要 8 GB 以上的内存\n- 支持 RADV 驱动而非 Radeon 系列的 AMD GPU（Southern Islands 和 Sea Islands 需要额外的内核 cmdline 属性）； Intel iGPU 支持到 11 代 Iris Xe（暂不支持 Arc 显卡）\n- 支持 UEFI 启动\n- 禁用安全启动(secure boot)\n\n**安装步骤：**\n- 从 [release](https://github.com/bhaiest/holoiso/releases/latest) 或者兼容 NVIDIA 显卡的 [actions](https://nightly.link/theVakhovskeIsTaken/holoiso/workflows/build/stable/holoiso) 下载并使用 DD 模式的 [BalenaEtcher](https://www.balena.io/etcher/) 或 [Rufus](https://rufus.ie) ，或使用命令 `sudo dd if=SteamOS.iso of=/dev/sd(你的存储介质) bs=4M status=progress oflag=sync` 刷入ISO镜像，或者将 ISO 文件直接放入 Ventoy 设备。\n- 引导到 ISO 镜像\n- 选择 \"Install SteamOS on this device\"\n- 按照屏幕上的提示进行操作\n- 喝点饮料，等他安装完毕 :3\n\n在启动时，你会看到 Steam Deck 的初始设置界面。设置你的网络，并登录你的 Steam 帐户，然后你在电源菜单选择`切换到桌面`来退出到 KDE Plasma 桌面。[像这样](https://www.youtube.com/watch?v=smfwna2iHho)。\n\n# 截屏：\n-\n![Screenshot_20220508_133916](https://user-images.githubusercontent.com/97450182/167292656-1679e007-4701-4a3c-89ee-2104b5eb12cd.png)\n![Screenshot_20220508_133737](https://user-images.githubusercontent.com/97450182/167292672-8bc9032d-4a21-4528-ab7e-b9dbc25a0664.png)\n![Screenshot_20220508_133746](https://user-images.githubusercontent.com/97450182/167292722-a68806c1-5768-4790-a8e7-108d7c72bb08.png)\n![Screenshot_20220508_133822](https://user-images.githubusercontent.com/97450182/167292731-86fed590-0260-4c5e-ac13-05d284b5fd24.png)\n![Screenshot_20220508_134038](https://user-images.githubusercontent.com/97450182/167292734-90036b5f-2571-438e-8951-8d731cd4ae93.png)\n![Screenshot_20220508_134051](https://user-images.githubusercontent.com/97450182/167292738-a70d266f-814d-4352-8d38-b920ae3f3381.png)\n\n# 致谢:\n\n（人太多 xD ，待会再补！！！）\n\n# 备注：\n\n本项目配置包含 Valve 的 pacman.conf 镜像库、 `holoinstall` 脚本和 `holoinstall` 编译后的二进制文件。\n\n该项目生成了一个基于 releng-based 的 ISO ，使用了默认的 Arch Linux 再发行版。\n\n# 如何生成 ISO：\n通过执行以下命令进行构建：\n```\npacman -Sy archiso\ngit clone https://github.com/bhaiest/holoiso/\nmv holoiso/mkarchiso-holoiso /usr/bin\nchmod +x /usr/bin/mkarchiso-holoiso\nsudo mkarchiso-holoiso -v holoiso\n```\n编译结束后，你的生成的 ISO 文件生成再 `out` 文件夹中。\n"
        },
        {
          "name": "airootfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap_packages.x86_64",
          "type": "blob",
          "size": 0.025390625,
          "content": "arch-install-scripts\nbase\n"
        },
        {
          "name": "efiboot",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen_entries.sh",
          "type": "blob",
          "size": 2.154296875,
          "content": "#!/bin/bash\nPROFILEDIR=$1\ncount=1\nfor kernel in $(cat ${PROFILEDIR}/kernel_list.bootstrap)\ndo\n    kernel=$(echo $kernel | sed 's/.*linux/linux/g' | sed 's/.*headers//g')\n    if [ -z \"$kernel\" ]; then\n        continue\n    fi\n    if [[ \"$kernel\" != \"linux-neptune\" ]]; then\n    echo -e \"title   HoloISO installer (${kernel}, NVIDIA/Zen 3+/RZ608 or Unverified devices, Copy to RAM)\\nlinux   /%INSTALL_DIR%/boot/x86_64/vmlinuz-${kernel}\\ninitrd  /%INSTALL_DIR%/boot/intel-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/amd-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/x86_64/initramfs-${kernel}.img\\noptions splash plymouth.nolog archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% cow_spacesize=10G copytoram\" > ${PROFILEDIR}/efiboot/loader/entries/$count-$kernel-copytoram.conf\n    count=$((count+1))\n    echo -e \"title   HoloISO installer (${kernel}, NVIDIA/Zen 3+/RZ608 or Unverified devices)\\nlinux   /%INSTALL_DIR%/boot/x86_64/vmlinuz-${kernel}\\ninitrd  /%INSTALL_DIR%/boot/intel-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/amd-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/x86_64/initramfs-${kernel}.img\\noptions splash plymouth.nolog archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%\" > ${PROFILEDIR}/efiboot/loader/entries/$count-$kernel.conf\n    count=$((count+1))\n    else\n    echo -e \"title   HoloISO installer (${kernel}, Deck kernel, Copy to RAM)\\nlinux   /%INSTALL_DIR%/boot/x86_64/vmlinuz-${kernel}\\ninitrd  /%INSTALL_DIR%/boot/intel-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/amd-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/x86_64/initramfs-${kernel}.img\\noptions splash plymouth.nolog archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% cow_spacesize=10G copytoram\" > ${PROFILEDIR}/efiboot/loader/entries/$count-$kernel-copytoram.conf\n    count=$((count+1))\n    echo -e \"title   HoloISO installer (${kernel}, Deck kernel)\\nlinux   /%INSTALL_DIR%/boot/x86_64/vmlinuz-${kernel}\\ninitrd  /%INSTALL_DIR%/boot/intel-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/amd-ucode.img\\ninitrd  /%INSTALL_DIR%/boot/x86_64/initramfs-${kernel}.img\\noptions splash plymouth.nolog archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%\" > ${PROFILEDIR}/efiboot/loader/entries/$count-$kernel.conf\n    count=$((count+1))\n    fi\ndone"
        },
        {
          "name": "kernel_list.bootstrap",
          "type": "blob",
          "size": 0.0263671875,
          "content": "linux-zen linux-zen-headers"
        },
        {
          "name": "packages.x86_64",
          "type": "blob",
          "size": 1.6748046875,
          "content": "alsa-utils\namd-ucode\narch-install-scripts\nb43-fwcutter\nbase\nbind-tools\nbrltty\nbroadcom-wl\nbtrfs-progs\nclonezilla\ncloud-init\ncrda\ncryptsetup\ndarkhttpd\nddrescue\ndhclient\ndhcpcd\ndiffutils\ndmraid\ndnsmasq\ndosfstools\ne2fsprogs\nedk2-shell\nefibootmgr\nespeakup\nethtool\nexfatprogs\nf2fs-tools\nfatresize\nfsarchiver\ngnu-netcat\ngpart\ngpm\ngptfdisk\ngrml-zsh-config\ngrub\nhdparm\nintel-ucode\nirssi\niw\njfsutils\nkitty-terminfo\nless\nlftp\nlibfido2\nlibusb-compat\nlinux-atm\ncore-main/linux-firmware\ncore-main/linux-firmware-marvell\ncore-main/linux-firmware-whence\nlivecd-sounds\nlsscsi\nlvm2\nlynx\nman-db\nman-pages\nmc\nmdadm\nmemtest86+\nmkinitcpio\nmkinitcpio-archiso\nmkinitcpio-nfs-utils\nmodemmanager\nmtools\nnano\nnbd\nndisc6\nnfs-utils\nnilfs-utils\nnmap\nntfs-3g\nnvme-cli\nopenconnect\nopenssh\nopenvpn\npartclone\nparted\npartimage\npcsclite\nppp\npptpclient\npv\nqemu-guest-agent\nrefind\nreiserfsprogs\nrp-pppoe\nrsync\nrxvt-unicode-terminfo\nscreen\nsdparm\nsg3_utils\nsmartmontools\nsof-firmware\nsquashfs-tools\nsudo\nsyslinux\nsystemd-resolvconf\ntcpdump\nterminus-font\ntestdisk\ntmux\ntpm2-tss\nudftools\nusb_modeswitch\nusbmuxd\nusbutils\nvim\nvirtualbox-guest-utils-nox\nvpnc\nwget\nwireless-regdb\nwireless_tools\nwpa_supplicant\nwvdial\nxfsprogs\nxl2tpd\nzsh\n\n# GUI\nholo-keyring\nplasma\nplasma-nm\nplasma-meta\nxorg-server\nvim\nxdg-user-dirs\nbash-completion\nnetworkmanager\nnetwork-manager-applet\nmousepad\ngvfs\nneofetch\nxfce4-pulseaudio-plugin\npulseaudio-alsa\nnoto-fonts\nonboard\nzenity\ndialog\ndolphin\nspectacle\nkonsole\n# rz608-fix-git - Unrequired since we use LNX6+ for machines that include it\n\n# Another HoloISO addons -- BETA\nbtop\ndos2unix\ngptfdisk\niotop\nlib32-mesa-vdpau\nlibva-mesa-driver\nmesa-vdpau\nokular\nopencl-mesa\np7zip\nparu\npowertop\nsteam_notif_daemon\ntk\nunrar\nxorg-xhost\nzip"
        },
        {
          "name": "pacman.conf",
          "type": "blob",
          "size": 3.392578125,
          "content": "#\n# /etc/pacman.conf\n#\n# See the pacman.conf(5) manpage for option and repository directives\n\n#\n# GENERAL OPTIONS\n#\n[options]\n# The following paths are commented out with their default values listed.\n# If you wish to use different paths, uncomment and update the paths.\n#RootDir     = /\n#DBPath      = /var/lib/pacman/\n#CacheDir    = /var/cache/pacman/pkg/\n#LogFile     = /var/log/pacman.log\n#GPGDir      = /etc/pacman.d/gnupg/\n#HookDir     = /etc/pacman.d/hooks/\nHoldPkg     = pacman glibc\n#XferCommand = /usr/bin/curl -L -C - -f -o %o %u\n#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n#CleanMethod = KeepInstalled\nArchitecture = auto\n\n# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup\n#IgnorePkg   =\n#IgnoreGroup =\n\n#NoUpgrade   =\n#NoExtract   =\n\n# Misc options\n#UseSyslog\n#Color\n#TotalDownload\n# We cannot check disk space from within a chroot environment\nCheckSpace\n#VerbosePkgLists\nParallelDownloads = 5\n\n# By default, pacman accepts packages signed by keys that its local keyring\n# trusts (see pacman-key and its man page), as well as unsigned packages.\nSigLevel    = Required DatabaseOptional\nLocalFileSigLevel = Optional\n#RemoteFileSigLevel = Required\n\n# NOTE: You must run `pacman-key --init` before first using pacman; the local\n# keyring can then be populated with the keys of all official Arch Linux\n# packagers with `pacman-key --populate archlinux`.\n\n#\n# REPOSITORIES\n#   - can be defined here or included from another file\n#   - pacman will search repositories in the order defined here\n#   - local/custom mirrors can be added here or in separate files\n#   - repositories listed first will take precedence when packages\n#     have identical names, regardless of version number\n#   - URLs will have $repo replaced by the name of the current repo\n#   - URLs will have $arch replaced by the name of the architecture\n#\n# Repository entries are of the format:\n#       [repo-name]\n#       Server = ServerName\n#       Include = IncludePath\n#\n# The header [repo-name] is crucial - it must be present and\n# uncommented to enable the repo.\n#\n\n# The testing repositories are disabled by default. To enable, uncomment the\n# repo name header and Include lines. You can add preferred servers immediately\n# after the header, and they will be used before the default mirrors.\n\n#[testing]\n#Include = /etc/pacman.d/mirrorlist\n\n[holoiso-next]\nServer = https://cd2.holoiso.ru.eu.org/pkg/$repo/os/$arch\nSigLevel = Never\n\n[holostaging]\nServer = https://cd2.holoiso.ru.eu.org/pkg/$repo/os/$arch\nSigLevel = Never\n\n[jupiter-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n[holo-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n[core-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n[extra-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n#[community-testing]\n#Include = /etc/pacman.d/mirrorlist\n\n[community-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n[multilib-main]\nServer = https://steamdeck-packages.steamos.cloud/archlinux-mirror/$repo/os/$arch\nSigLevel = Never\n\n# An example of a custom package repository.  See the pacman manpage for\n# tips on creating your own repositories.\n#[custom]\n#SigLevel = Optional TrustAll\n#Server = file:///home/custompkgs\n"
        },
        {
          "name": "profiledef.sh",
          "type": "blob",
          "size": 0.6494140625,
          "content": "#!/usr/bin/env bash\n# shellcheck disable=SC2034\n\niso_name=\"$(cat /tmp/isobuildname)\"\niso_label=\"HOLO_$(date +%Y%m)\"\niso_publisher=\"theVakhovske <https://github.com/theVakhovskeIsTaken>\"\niso_application=\"HoloISO\"\niso_version=\"1\"\ninstall_dir=\"arch\"\nbuildmodes=('iso')\nbootmodes=('uefi-x64.systemd-boot.esp' 'uefi-x64.systemd-boot.eltorito')\narch=\"x86_64\"\npacman_conf=\"pacman.conf\"\nairootfs_image_type=\"squashfs\"\nairootfs_image_tool_options=('-comp' 'xz' '-Xbcj' 'x86' '-b' '1M' '-Xdict-size' '1M')\nfile_permissions=(\n  [\"/etc/skel/Desktop/ime-kb.desktop\"]=\"0:0:755\"\n  [\"/etc/skel/Desktop/chroot.desktop\"]=\"0:0:755\"\n  [\"/etc/skel/Desktop/install.desktop\"]=\"0:0:755\"\n)\n"
        }
      ]
    }
  ]
}