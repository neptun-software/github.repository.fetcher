{
  "metadata": {
    "timestamp": 1736568831151,
    "page": 8,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "juewuy/ShellCrash",
      "stars": 9470,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.4833984375,
          "content": "<h1 align=\"center\">\n  <br>ShellCrash<br>\n</h1>\n\n\n  <p align=\"center\">\n\n  <a target=\"_blank\" href=\"https://github.com/juewuy/ShellCrash/releases\">\n    <img src=\"https://img.shields.io/github/release/juewuy/ShellCrash.svg?style=flat-square&label=ShellCrash&colorB=green\">\n  </a>\n</p>\n\n[中文](README_CN.md) | English\n\n## Function introduction: \n\n~Convenient use in Shell environment through management script [Crash](https://github.com/Dreamacro/Crash)<br>~Support management of [Crash functions](https://lancellc.gitbook.io/Crash)<br>~Support online import [Crash](https://github.com/Dreamacro/Crash) supports sharing, subscription and configuration links<br>~Support configuration timing tasks, support configuration file timing updates<br>~Support online installation and Use local web panel to manage built-in rules<br>~Support routing mode, native mode and other mode switching<br>~Support online update<br>\n\n## Equipment support:\n\n~Support various router devices based on OpenWrt or secondary custom development using OpenWrt<br>~Support various devices running standard Linux systems (such as Debian/CenOS/Armbian, etc.)<br>~Compatible with Padavan firmware (conservative mode), Pandora firmware<br>~Compatible with various types of devices customized and developed using the Linux kernel<br>——————————<br>~For more device support, please submit an issue or go to the TG group for feedback (the device name and the device core information returned by running uname -a must be provided)<br>\n\n\n\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 5.51171875,
          "content": "<h1 align=\"center\">\n  <br>ShellCrash<br>\n</h1>\n\n\n  <p align=\"center\">\n\t<a target=\"_blank\" href=\"https://github.com/MetaCubeX/mihomo/releases\">\n    <img src=\"https://img.shields.io/github/release/MetaCubeX/mihomo.svg?style=flat-square&label=Core\">\n  </a>\n  <a target=\"_blank\" href=\"https://github.com/juewuy/ShellCrash/releases\">\n    <img src=\"https://img.shields.io/github/release/juewuy/ShellCrash.svg?style=flat-square&label=ShellCrash&colorB=green\">\n  </a>\n</p>\n\n中文 | [English](README.md) \n\n功能简介：\n--\n\n~通过管理脚本在Shell环境下便捷使用Mihomo/Singbox内核<br>\n~支持在Shell环境下管理<br>\n~支持在线导入订阅及配置链接<br>\n~支持配置定时任务，支持配置文件定时更新<br>\n~支持在线安装及使用本地网页面板管理内置规则<br>\n~支持路由模式、本机模式等多种模式切换<br>\n~支持在线更新<br>\n\n设备支持：\n--\n\n~支持各种基于OpenWrt或使用OpenWrt二次定制开发的路由器设备<br>\n~支持各种运行标准Linux系统（如Debian/CenOS/Armbian等）的设备<br>\n~兼容Padavan固件（保守模式）、潘多拉固件以及华硕/梅林固件<br>\n~兼容各类使用Linux内核定制开发的各类型设备<br>\n\n——————————<br>\n~更多设备支持，请提issue或前往TG群反馈（需提供设备名称及运行uname -a返回的设备核心信息）<br>\n\n## 常见问题：\n\n[ShellCrash常见问题 | Juewuy's Blog](https://juewuy.github.io/chang-jian-wen-ti/)\n\n## 使用方式：\n\n~确认设备已经开启SSH并获取root权限（带GUI桌面的Linux设备可使用自带终端安装）<br>\n~使用SSH连接工具（如putty，JuiceSSH，系统自带终端等）路由器或Linux设备的SSH管理界面或终端界面\n\n~之后在SSH界面执行目标设备对应的安装命令，并按照后续提示完成安装<br>\n\n### 在线安装：<br>\n\n（**如无法连接或出现SSL连接错误，请尝试更换各种不同的安装源！**）<br>\n\n~**标准Linux设备安装：**<br>\n\n```shell\nsudo -i #切换到root用户，如果需要密码，请输入密码\nbash #如已处于bash环境可跳过\nexport url='https://fastly.jsdelivr.net/gh/juewuy/ShellCrash@master' && wget -q --no-check-certificate -O /tmp/install.sh $url/install.sh  && bash /tmp/install.sh && source /etc/profile &> /dev/null\n```\n或者\n```shell\nsudo -i #切换到root用户，如果需要密码，请输入密码\nbash #如已处于bash环境可跳过\nexport url='https://gh.jwsc.eu.org/master' && bash -c \"$(curl -kfsSl $url/install.sh)\" && source /etc/profile &> /dev/null\n```\n\n~**路由设备使用curl安装**：<br>\n\n```shell\n#GitHub源(可能需要代理)\nexport url='https://raw.githubusercontent.com/juewuy/ShellCrash/master' && sh -c \"$(curl -kfsSl $url/install.sh)\" && source /etc/profile &> /dev/null\n```\n或者\n```shell\n#jsDelivrCDN源\nexport url='https://fastly.jsdelivr.net/gh/juewuy/ShellCrash@master' && sh -c \"$(curl -kfsSl $url/install.sh)\" && source /etc/profile &> /dev/null\n```\n或者\n```shell\n#作者私人源\nexport url='https://gh.jwsc.eu.org/master' && sh -c \"$(curl -kfsSl $url/install.sh)\" && source /etc/profile &> /dev/null\n```\n\n~**路由设备使用wget安装**：<br>\n\n```Shell\n#GitHub源(可能需要代理)\nexport url='https://raw.githubusercontent.com/juewuy/ShellCrash/master' && wget -q --no-check-certificate -O /tmp/install.sh $url/install.sh  && sh /tmp/install.sh && source /etc/profile &> /dev/null\n```\n或者\n```shell\n#jsDelivrCDN源\nexport url='https://fastly.jsdelivr.net/gh/juewuy/ShellCrash@master' && wget -q --no-check-certificate -O /tmp/install.sh $url/install.sh  && sh /tmp/install.sh && source /etc/profile &> /dev/null\n```\n\n~**老旧设备使用低版本wge安装**：<br>\n\n```Shell\n#作者私人http内测源\nexport url='http://t.jwsc.eu.org' && wget -q -O /tmp/install.sh $url/install.sh  && sh /tmp/install.sh && source /etc/profile &> /dev/null\n```\n\n~**虚拟机/Docker环境安装：**<br>\n\n虚拟机或Docker环境推荐使用Alpine镜像安装<br>\n\n这里以Docker为例(其他虚拟机请自行查找安装Alpine镜像安装教程)<br>\n\n```shell\n#注意，以下命令请分步执行！\n#Docker一键启动Alpine镜像\ndocker run -d --name ShellCrash alpine sleep infinity\n#进入容器内sh环境\ndocker exec -it ShellCrash sh\n#安装必要依赖\napk add curl \napk add nftables\n#执行安装命令\nexport url='https://fastly.jsdelivr.net/gh/juewuy/ShellCrash@master' && sh -c \"$(curl -kfsSl $url/install.sh)\" && source /etc/profile &> /dev/null\n```\n\n\n\n### **本地安装：**<br>\n\n如使用在线安装出现问题，请参考：[本地安装ShellCrash的教程 | Juewuy's Blog](https://juewuy.github.io/bdaz) 使用本地安装！<br>\n\n### 使用脚本：<br>\n\n安装完成管理脚本后，执行如下命令使用~\n\n```Shell\ncrash \t\t#进入对话\ncrash -h \t#帮助列表\n```\n\n#### **运行时的额外依赖**：<br>\n\n> 大部分的设备/系统都已经预装了以下的大部分依赖，使用时如无影响可以无视之\n\n```shell\ncurl/wget\t\t必须\t\t全部缺少时无法在线安装及更新，无法使用节点保存功能\niptables/nftables\t重要\t\t缺少时只能使用纯净模式\ncrontab\t\t\t较低\t\t缺少时无法启用定时任务功能\nnet-tools\t\t极低\t\t缺少时无法正常检测端口占用\nubus/iproute-doc\t极低\t\t缺少时无法正常获取本机host地址\n```\n\n\n\n更新日志：\n--\n\n### [点击查看](https://github.com/juewuy/ShellCrash/releases)\n\n交流反馈：\n--\n### [TG讨论组](https://t.me/ShellClash) \n\n机场推荐：\n--\n#### [大米-群友力荐，流媒体解锁，月付推荐](https://1s.bigmeok.me/user#/register?code=2PuWY9I7)<br>\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 10.072265625,
          "content": "#! /bin/bash\n# Copyright (C) Juewuy\n\n[ -z \"$url\" ] && url=\"https://fastly.jsdelivr.net/gh/juewuy/ShellCrash@master\"\ntype bash &>/dev/null && shtype=bash || shtype=sh\necho='echo -e'\n[ -n \"$(echo -e | grep e)\" ] && {\n\techo \"\\033[31m不支持dash环境安装！请先输入bash命令后再运行安装命令！\\033[0m\"\n\texit\n}\n\necho \"***********************************************\"\necho \"**                 欢迎使用                  **\"\necho \"**                ShellCrash                 **\"\necho \"**                             by  Juewuy    **\"\necho \"***********************************************\"\n#内置工具\ndir_avail() {\n\tdf $2 $1 | awk '{ for(i=1;i<=NF;i++){ if(NR==1){ arr[i]=$i; }else{ arr[i]=arr[i]\" \"$i; } } } END{ for(i=1;i<=NF;i++){ print arr[i]; } }' | grep -E 'Ava|可用' | awk '{print $2}'\n}\nsetconfig() {\n\tconfigpath=$CRASHDIR/configs/ShellCrash.cfg\n\t[ -n \"$(grep ${1} $configpath)\" ] && sed -i \"s#${1}=.*#${1}=${2}#g\" $configpath || echo \"${1}=${2}\" >>$configpath\n}\nwebget() {\n\t#参数【$1】代表下载目录，【$2】代表在线地址\n\t#参数【$3】代表输出显示，【$4】不启用重定向\n\tif curl --version >/dev/null 2>&1; then\n\t\t[ \"$3\" = \"echooff\" ] && progress='-s' || progress='-#'\n\t\t[ -z \"$4\" ] && redirect='-L' || redirect=''\n\t\tresult=$(curl -w %{http_code} --connect-timeout 5 $progress $redirect -ko $1 $2)\n\t\t[ -n \"$(echo $result | grep -e ^2)\" ] && result=\"200\"\n\telse\n\t\tif wget --version >/dev/null 2>&1; then\n\t\t\t[ \"$3\" = \"echooff\" ] && progress='-q' || progress='-q --show-progress'\n\t\t\t[ \"$4\" = \"rediroff\" ] && redirect='--max-redirect=0' || redirect=''\n\t\t\tcertificate='--no-check-certificate'\n\t\t\ttimeout='--timeout=3'\n\t\tfi\n\t\t[ \"$3\" = \"echoon\" ] && progress=''\n\t\t[ \"$3\" = \"echooff\" ] && progress='-q'\n\t\twget $progress $redirect $certificate $timeout -O $1 $2\n\t\t[ $? -eq 0 ] && result=\"200\"\n\tfi\n}\nerror_down() {\n\t$echo \"请参考 \\033[32mhttps://github.com/juewuy/ShellCrash/blob/master/README_CN.md\"\n\t$echo \"\\033[33m使用其他安装源重新安装！\\033[0m\"\n}\n#安装及初始化\ngettar() {\n\twebget /tmp/ShellCrash.tar.gz \"$url/bin/ShellCrash.tar.gz\"\n\tif [ \"$result\" != \"200\" ]; then\n\t\t$echo \"\\033[33m文件下载失败！\\033[0m\"\n\t\terror_down\n\t\texit 1\n\telse\n\t\t$CRASHDIR/start.sh stop 2>/dev/null\n\t\t#解压\n\t\techo -----------------------------------------------\n\t\techo 开始解压文件！\n\t\tmkdir -p $CRASHDIR >/dev/null\n\t\ttar -zxf '/tmp/ShellCrash.tar.gz' -C $CRASHDIR/ || tar -zxf '/tmp/ShellCrash.tar.gz' --no-same-owner -C $CRASHDIR/\n\t\tif [ -s $CRASHDIR/init.sh ]; then\n\t\t\t. $CRASHDIR/init.sh >/dev/null || $echo \"\\033[33m初始化失败，请尝试本地安装！\\033[0m\"\n\t\telse\n\t\t\trm -rf /tmp/ShellCrash.tar.gz\n\t\t\t$echo \"\\033[33m文件解压失败！\\033[0m\"\n\t\t\terror_down\n\t\t\texit 1\n\t\tfi\n\tfi\n}\nsetdir() {\n\tset_usb_dir() {\n\t\t$echo \"请选择安装目录\"\n\t\tdu -hL /mnt | awk '{print \" \"NR\" \"$2\"  \"$1}'\n\t\tread -p \"请输入相应数字 > \" num\n\t\tdir=$(du -hL /mnt | awk '{print $2}' | sed -n \"$num\"p)\n\t\tif [ -z \"$dir\" ]; then\n\t\t\t$echo \"\\033[31m输入错误！请重新设置！\\033[0m\"\n\t\t\tset_usb_dir\n\t\tfi\n\t}\n\tset_asus_dir() {\n\t\techo -e \"请选择U盘目录\"\n\t\tdu -hL /tmp/mnt | awk '{print \" \"NR\" \"$2\"  \"$1}'\n\t\tread -p \"请输入相应数字 > \" num\n\t\tdir=$(du -hL /tmp/mnt | awk '{print $2}' | sed -n \"$num\"p)\n\t\tif [ ! -f \"$dir/asusware.arm/etc/init.d/S50downloadmaster\" ]; then\n\t\t\techo -e \"\\033[31m未找到下载大师自启文件：$dir/asusware.arm/etc/init.d/S50downloadmaster，请检查设置！\\033[0m\"\n\t\t\tset_asus_dir\n\t\tfi\n\t}\n\tset_cust_dir() {\n\t\techo -----------------------------------------------\n\t\techo '可用路径 剩余空间:'\n\t\tdf -h | awk '{print $6,$4}' | sed 1d\n\t\techo '路径是必须带 / 的格式，注意写入虚拟内存(/tmp,/opt,/sys...)的文件会在重启后消失！！！'\n\t\tread -p \"请输入自定义路径 > \" dir\n\t\tif [ \"$(dir_avail $dir)\" = 0 ]; then\n\t\t\t$echo \"\\033[31m路径错误！请重新设置！\\033[0m\"\n\t\t\tset_cust_dir\n\t\tfi\n\t}\n\techo -----------------------------------------------\n\t$echo \"\\033[33m注意：安装ShellCrash至少需要预留约1MB的磁盘空间\\033[0m\"\n\tif [ -n \"$systype\" ]; then\n\t\t[ \"$systype\" = \"Padavan\" ] && dir=/etc/storage\n\t\t[ \"$systype\" = \"mi_snapshot\" ] && {\n\t\t\t$echo \"\\033[33m检测到当前设备为小米官方系统，请选择安装位置\\033[0m\"\n\t\t\t[ \"$(dir_avail /data)\" -gt 256 ] && $echo \" 1 安装到 /data 目录(推荐，支持软固化功能)\"\n\t\t\t[ \"$(dir_avail /userdisk)\" -gt 256 ] && $echo \" 2 安装到 /userdisk 目录(推荐，支持软固化功能)\"\n\t\t\t$echo \" 3 安装到自定义目录(不推荐，不明勿用！)\"\n\t\t\t$echo \" 0 退出安装\"\n\t\t\techo -----------------------------------------------\n\t\t\tread -p \"请输入相应数字 > \" num\n\t\t\tcase \"$num\" in\n\t\t\t1)\n\t\t\t\tdir=/data\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tdir=/userdisk\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tset_cust_dir\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\t\tesac\n\t\t}\n\t\t[ \"$systype\" = \"asusrouter\" ] && {\n\t\t\t$echo \"\\033[33m检测到当前设备为华硕固件，请选择安装方式\\033[0m\"\n\t\t\t$echo \" 1 基于USB设备安装(限23年9月之前固件，须插入\\033[31m任意\\033[0mUSB设备)\"\n\t\t\t$echo \" 2 基于自启脚本安装(仅支持梅林及部分非koolshare官改固件)\"\n\t\t\t$echo \" 3 基于U盘+下载大师安装(支持所有固件，限ARM设备，须插入U盘或移动硬盘)\"\n\t\t\t$echo \" 0 退出安装\"\n\t\t\techo -----------------------------------------------\n\t\t\tread -p \"请输入相应数字 > \" num\n\t\t\tcase \"$num\" in\n\t\t\t1)\n\t\t\t\tread -p \"将脚本安装到USB存储/系统闪存？(1/0) > \" res\n\t\t\t\t[ \"$res\" = \"1\" ] && set_usb_dir || dir=/jffs\n\t\t\t\tusb_status=1\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\t$echo \"如无法正常开机启动，请重新使用USB方式安装！\"\n\t\t\t\tsleep 2\n\t\t\t\tdir=/jffs\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\techo -e \"请先在路由器网页后台安装下载大师并启用，之后选择外置存储所在目录！\"\n\t\t\t\tsleep 2\n\t\t\t\tset_asus_dir\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\t\tesac\n\t\t}\n\t\t[ \"$systype\" = \"ng_snapshot\" ] && dir=/tmp/mnt\n\telse\n\t\t$echo \" 1 在\\033[32m/etc目录\\033[0m下安装(适合root用户)\"\n\t\t$echo \" 2 在\\033[32m/usr/share目录\\033[0m下安装(适合Linux系统)\"\n\t\t$echo \" 3 在\\033[32m当前用户目录\\033[0m下安装(适合非root用户)\"\n\t\t$echo \" 4 在\\033[32m外置存储\\033[0m中安装\"\n\t\t$echo \" 5 手动设置安装目录\"\n\t\t$echo \" 0 退出安装\"\n\t\techo -----------------------------------------------\n\t\tread -p \"请输入相应数字 > \" num\n\t\t#设置目录\n\t\tif [ -z $num ]; then\n\t\t\techo 安装已取消\n\t\t\texit 1\n\t\telif [ \"$num\" = \"1\" ]; then\n\t\t\tdir=/etc\n\t\telif [ \"$num\" = \"2\" ]; then\n\t\t\tdir=/usr/share\n\t\telif [ \"$num\" = \"3\" ]; then\n\t\t\tdir=~/.local/share\n\t\t\tmkdir -p ~/.config/systemd/user\n\t\telif [ \"$num\" = \"4\" ]; then\n\t\t\tset_usb_dir\n\t\telif [ \"$num\" = \"5\" ]; then\n\t\t\tset_cust_dir\n\t\telse\n\t\t\techo 安装已取消！！！\n\t\t\texit 1\n\t\tfi\n\tfi\n\n\tif [ ! -w $dir ]; then\n\t\t$echo \"\\033[31m没有$dir目录写入权限！请重新设置！\\033[0m\" && sleep 1 && setdir\n\telse\n\t\t$echo \"目标目录\\033[32m$dir\\033[0m空间剩余：$(dir_avail $dir -h)\"\n\t\tread -p \"确认安装？(1/0) > \" res\n\t\t[ \"$res\" = \"1\" ] && CRASHDIR=$dir/ShellCrash || setdir\n\tfi\n}\ninstall() {\n\techo -----------------------------------------------\n\techo 开始从服务器获取安装文件！\n\techo -----------------------------------------------\n\tgettar\n\techo -----------------------------------------------\n\techo ShellCrash 已经安装成功!\n\t[ \"$profile\" = \"~/.bashrc\" ] && echo \"请执行【. ~/.bashrc &> /dev/null】命令以加载环境变量！\"\n\t[ -n \"$(ls -l /bin/sh | grep -oE 'zsh')\" ] && echo \"请执行【. ~/.zshrc &> /dev/null】命令以加载环境变量！\"\n\techo -----------------------------------------------\n\t$echo \"\\033[33m输入\\033[30;47m crash \\033[0;33m命令即可管理！！！\\033[0m\"\n\techo -----------------------------------------------\n}\nsetversion() {\n\techo -----------------------------------------------\n\t$echo \"\\033[33m请选择想要安装的版本：\\033[0m\"\n\t$echo \" 1 \\033[32m公测版(推荐)\\033[0m\"\n\t$echo \" 2 \\033[36m稳定版\\033[0m\"\n\t$echo \" 3 \\033[31m开发版\\033[0m\"\n\techo -----------------------------------------------\n\tread -p \"请输入相应数字 > \" num\n\tcase \"$num\" in\n\t2)\n\t\turl=$(echo $url | sed 's/master/stable/')\n\t\t;;\n\t3)\n\t\turl=$(echo $url | sed 's/master/dev/')\n\t\t;;\n\t*) ;;\n\tesac\n}\n#特殊固件识别及标记\n[ -f \"/etc/storage/started_script.sh\" ] && {\n\tsystype=Padavan #老毛子固件\n\tinitdir='/etc/storage/started_script.sh'\n}\n[ -d \"/jffs\" ] && {\n\tsystype=asusrouter #华硕固件\n\t[ -f \"/jffs/.asusrouter\" ] && initdir='/jffs/.asusrouter'\n\t[ -d \"/jffs/scripts\" ] && initdir='/jffs/scripts/nat-start'\n}\n[ -f \"/data/etc/crontabs/root\" ] && systype=mi_snapshot #小米设备\n[ -w \"/var/mnt/cfg/firewall\" ] && systype=ng_snapshot   #NETGEAR设备\n\n#检查root权限\nif [ \"$USER\" != \"root\" -a -z \"$systype\" ]; then\n\techo 当前用户:$USER\n\t$echo \"\\033[31m请尽量使用root用户（不要直接使用sudo命令！）执行安装!\\033[0m\"\n\techo -----------------------------------------------\n\tread -p \"仍要安装？可能会产生未知错误！(1/0) > \" res\n\t[ \"$res\" != \"1\" ] && exit 1\nfi\n\nif [ -n \"$(echo $url | grep master)\" ]; then\n\tsetversion\nfi\n#获取版本信息\nwebget /tmp/version \"$url/bin/version\" echooff\n[ \"$result\" = \"200\" ] && versionsh=$(cat /tmp/version | grep \"versionsh\" | awk -F \"=\" '{print $2}')\nrm -rf /tmp/version\n\n#输出\n$echo \"最新版本：\\033[32m$versionsh\\033[0m\"\necho -----------------------------------------------\n$echo \"\\033[44m如遇问题请加TG群反馈：\\033[42;30m t.me/ShellClash \\033[0m\"\n$echo \"\\033[37m支持各种基于openwrt的路由器设备\"\n$echo \"\\033[33m支持Debian、Centos等标准Linux系统\\033[0m\"\n\nif [ -n \"$CRASHDIR\" ]; then\n\techo -----------------------------------------------\n\t$echo \"检测到旧的安装目录\\033[36m$CRASHDIR\\033[0m，是否覆盖安装？\"\n\t$echo \"\\033[32m覆盖安装时不会移除配置文件！\\033[0m\"\n\tread -p \"覆盖安装/卸载旧版本？(1/0) > \" res\n\tif [ \"$res\" = \"1\" ]; then\n\t\tinstall\n\telif [ \"$res\" = \"0\" ]; then\n\t\trm -rf $CRASHDIR\n\t\techo -----------------------------------------------\n\t\t$echo \"\\033[31m 旧版本文件已卸载！\\033[0m\"\n\t\tsetdir\n\t\tinstall\n\telif [ \"$res\" = \"9\" ]; then\n\t\techo 测试模式，变更安装位置\n\t\tsetdir\n\t\tinstall\n\telse\n\t\t$echo \"\\033[31m输入错误！已取消安装！\\033[0m\"\n\t\texit 1\n\tfi\nelse\n\tsetdir\n\tinstall\nfi\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "rules",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}