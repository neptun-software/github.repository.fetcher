{
  "metadata": {
    "timestamp": 1736568881957,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyenv/pyenv-virtualenv",
      "stars": 6425,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1591796875,
          "content": "/bats/\n/libexec/pyenv-virtualenv/*/*.class\n/libexec/pyenv-virtualenv/*/*.pyc\n/libexec/pyenv-virtualenv/*/*.pyo\n/libexec/pyenv-virtualenv/*/__pycache__\n*.swo\n*.swp\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4404296875,
          "content": "sudo: false\ninstall: git clone --depth=1 https://github.com/sstephenson/bats.git\nscript: bats/bin/bats --tap test\nlanguage: c\nnotifications:\n  email:\n    on_success: never\ndeploy:\n  provider: releases\n  api_key:\n    secure: DsGAt0UmTSGVfsNJ6LmM+LvsV6FYmvX4FcET82XrskPiQW+N8+8JZR8WuZxfmwdJZu+dkkdoq6gYgL2xF7m4LxRG7aw3B5TtbMTrJQeW0hdtCSBwbbYyvwcp2m7ywE8lGAfZQITaGj1R6f2Cgh8cgtcrErjcF0KJsYlVlgNv+/M=\n  on:\n    repo: pyenv/pyenv-virtualenv\n    tags: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.654296875,
          "content": "## Version History\n\n#### 1.2.4\n* Fix failing to detect `-m venv` when \"python\" is not provided by the distro by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/479\n* README: Remove dollar signs from commands that are meant to be copied by @galonsky in https://github.com/pyenv/pyenv-virtualenv/pull/481\n* Reflect pyenv-latest switch change in 2.4.8 by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/484\n\n#### 1.2.3\n* Fix: add `colorize` helper by @silverjam in https://github.com/pyenv/pyenv-virtualenv/pull/470\n* Bump pyenv-virtualenv reporting version to match release by @ushuz in https://github.com/pyenv/pyenv-virtualenv/pull/471\n* Add fish prompt changing by @romirk in https://github.com/pyenv/pyenv-virtualenv/pull/475\n* Don't activate if a 3rd-party venv is activated over ours by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/478\n\n#### 1.2.2\n* Prompt removal was never done and is not planned anymore by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/447\n* Update PYENV_VIRTUALENV_VERSION by @jack-mcivor in https://github.com/pyenv/pyenv-virtualenv/pull/449\n* Add activate/deactivate hooks by @joshfrench in https://github.com/pyenv/pyenv-virtualenv/pull/452\n* More helpful error message when requesting a nonexistent base version by @MarcinKonowalczyk in https://github.com/pyenv/pyenv-virtualenv/pull/454\n* Add fish install oneliner by @ElijahLynn in https://github.com/pyenv/pyenv-virtualenv/pull/322\n* Link python*-config into VE by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/460\n\n#### 1.2.1\n* Support prefixes resolved by pyenv-latest as base version names by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/446\n\n#### 1.2.0\n* ~/.*rc should be modified instead of ~/.*profile by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/384\n* Fixes #394 - update pyenv virtualenvs to list virtualenvs start with dot prefixes by @Gauravtalreja1 in https://github.com/pyenv/pyenv-virtualenv/pull/395\n* Fix installation steps to allow for Pyenv 2 by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/388\n* Fix get-pip.py URLs for older versions of Python by @jivanf in https://github.com/pyenv/pyenv-virtualenv/pull/403\n* Add (y/N) prompt help text by @sh-cho in https://github.com/pyenv/pyenv-virtualenv/pull/404\n* perf(sh-activate): avoid a pyenv-version-name call by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/380\n* Fix unbound variable errors when running `pyenv activate` with `set -u` Use default empty value. This fixes #422. by @ackalker in https://github.com/pyenv/pyenv-virtualenv/pull/423\n* Fix another unbound variable error by @ackalker in https://github.com/pyenv/pyenv-virtualenv/pull/424\n* Update `get-pip.py` URLs in `pyenv-virtualenv` by @mcdonnnj in https://github.com/pyenv/pyenv-virtualenv/pull/426\n* Deduplicate shims in $PATH for the fish shell during initialization by @ericvw in https://github.com/pyenv/pyenv-virtualenv/pull/430\n* Upgrade uninstall hook after pyenv/pyenv#2432 by @laggardkernel in https://github.com/pyenv/pyenv-virtualenv/pull/438\n* Stop delete force failing when virtualenv does not exist by @eganjs in https://github.com/pyenv/pyenv-virtualenv/pull/330\n* fix: relative path to pyenv-realpath.dylib by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/378\n* Spelling fixes by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/352\n* Clone bats with --depth=1, gitignore it by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/351\n* set -u fixes by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/350\n* Set up Github Actions CI by @native-api in https://github.com/pyenv/pyenv-virtualenv/pull/440\n* Enhance documentation about options for `pyenv virtualenv` by @pylipp in https://github.com/pyenv/pyenv-virtualenv/pull/425\n* Return control to pyenv-uninstall in uninstall/envs.bash by @aiguofer in https://github.com/pyenv/pyenv-virtualenv/pull/321\n* Use realpath of scripts to determine relative locations by @andrew-christianson in https://github.com/pyenv/pyenv-virtualenv/pull/308\n* Shell detect improvements by @scop in https://github.com/pyenv/pyenv-virtualenv/pull/377\n\n#### 1.1.5\n\n* Fix install script (#290, #302)\n\n#### 1.1.4\n\n* Support newer conda (#290)\n* Prefer `python3.x` executable if available (#206, #282, #296)\n\n#### 1.1.3\n\n* No code changes since 1.1.2\n\n#### 1.1.2\n\n* Use custom get-pip URL based on the target version (#253, #254, #255)\n* Source conda 4.4.4 shell files (#251)\n* Evaluate force flag before testing if venv exists (#232)\n\n#### 1.1.1\n\n* Set `CONDA_PREFIX` to make is useable in conda activate/deactivate scripts (#224)\n* Generate `pydoc` executable after creating new virtualenv (#197, #230)\n\n#### 1.1.0\n\n* fish: use \"set -gx\" instead of \"setenv\" (#215, #216, #217, #218)\n\n#### 1.0.0\n\n* Use similar versioning scheme as pyenv; YYYYMMDD -> X.Y.Z\n\n#### 20160716\n\n* Suppress activate/deactivate messages by default (#169, #170, #171)\n* Source conda package activate/deactivat scripts if exist (#173)\n* Use `source` in favor of `.` for `fish` (#175)\n* Use `python -m venv` instead of `pyvenv` due to deprecation of `pyvenv` after 3.6 (#184, #185)\n\n#### 20160315\n\n* Evaluate `${PATH}` when outputted code is eval'd. (#154)\n* Set proper `CONDA_DEFAULT_ENV` for shorter name (#160)\n\n#### 20160202\n\n* Install virtualenv 13.1.2 for CPython/Stackless 3.2.x (yyuu/pyenv#531)\n\n#### 20160112\n\n* Fix problem with `virtualenv` to look up executables from source version with `--system-site-packages` (#62)\n\n#### 20151229\n\n* Fix `deactivate` error on `fish` (#136)\n\n#### 20151222\n\n* Improved interoperability with Anaconda/Miniconda (#103, #106, #107, #108)\n* Create `virtualenv` inside `envs` directory of source version, like Anaconda/Miniconda (#103, #107)\n* Rewrite `pyenv activate` and `pyenv deactivate` without using scripts provided by virtualenv and conda (#51, #69, #103, #104, #121)\n* Improve the `pyenv activate` behaviour on multiple versions (#105, #111)\n* Reject creating a virtualenv named `system` (yyuu/pyenv#475)\n* Add `--skip-aliases` to `pyenv virtualenvs` (#120)\n* Stop showing `version not installed` warning messages in precmd (#49)\n\n#### 20151103\n\n* Passing return value from executed command. (#100)\n* Add workaround for commands installed in a virtual environment created by `pyvenv` (#62)\n* init: zsh: prepend hook to `precmd_functions` (#101)\n\n#### 20151006\n\n* Ignore user's site-packages on ensurepip/get-pip (#89)\n* Find `python-config` from source version if current version is a virtualenv\n* Fix pyenv-virtualenv-init script for fish where command was in string and not being evaluated (#98)\n* Add foolproof for `-p` argument. (yyuu/pyenv#98)\n\n#### 20150719\n\n* Add support for `conda` environments created by Anaconda/Miniconda (#91)\n* Look up commands for original version as well if the environment is created with `--system-site-packages` (#62)\n* Add error message if the source version is not installed (#83)\n\n#### 20150526\n\n* Use `typeset -g` with `precmd_functions` (#75)\n* activate: display setup instructions only with `PYENV_VIRTUALENV_INIT=0` (#78)\n* Ignore failure of pyenv activate (#68)\n\n#### 20150119\n\n * Ignore errors from `pyenv-version-name` since it might fail if there is configuration error (yyuu/pyenv#291)\n * The _shell_ version set in `activate` should be unset in `deactivate` (#61)\n * Anaconda has `activate` script nevertheless it is not a virtual environment (#65)\n\n#### 20141106\n\n * Stop creating after `ensurepip` since it has done by `ensurepip` itself\n * Suppress some useless warnings from `pyenv virtualenv-init`\n\n#### 20141012\n\n * Fix warnings from `shellcheck` to improve support for POSIX sh (#40)\n * Do not allow whitespace in `VIRTUALENV_NAME` (#44)\n * Should not persist `PYENV_DEACTIVATE` after automatic deactivation (#47, #48)\n\n#### 20140705\n\n * Display information on auto-(de)?activation\n * Support manual (de)?activation with auto-activation enabled (#32, #34)\n * Exit as error when (de)?activation failed\n * Use https://bootstrap.pypa.io/ to install setuptools and pip\n * Create backup of original virtualenv within `$(pyenv root)/versions` when `--upgrade`\n\n#### 20140615\n\n * Fix incompatibility issue of `pyenv activate` and `pyenv deactivate` (#26)\n * Workaround for the issue with pyenv-which-ext (#26)\n\n#### 20140614\n\n * Add `pyenv virtualenv-init` to enable auto-activation feature (#24)\n * Create symlinks for executables with version suffix (yyuu/pyenv#182)\n\n#### 20140602\n\n * Use new style GH raw url to avoid redirects (raw.github.com -> raw.githubusercontent.com)\n * Repaired virtualenv activation and deactivation for the fish shell (#23)\n\n#### 20140421\n\n * Display error if `pyenv activate` was invoked as a command\n * Fix completion of `pyenv activate` (#15)\n * Use `virtualenv` instead of `pyvenv` if `-p` has given (yyuu/pyenv#158)\n\n#### 20140123\n\n * Add `activate` and `deactivate` to make `pyenv-virtualenv` work with [jedi](https://github.com/davidhalter/jedi) (#9)\n * Use `ensurepip` to install `pip` if it is available\n * Unset `PIP_REQUIRE_VENV` to avoid problem on the installation of `virtualenv` (#10)\n * Add tests\n\n#### 20140110.1\n\n * Fix install script\n\n#### 20140110\n\n * Support environment variables of `EZ_SETUP` and `GET_PIP`.\n * Support a short option `-p` of `virtualenv`.\n\n#### 20131216\n\n * Use latest release of setuptools and pip if the version not given via environment variables.\n\n#### 20130622\n\n * Removed bundled `virtualenv.py` script. Now pyenv-virtualenv installs `virtualenv` package into source version and then use it.\n * On Python 3.3+, use `pyvenv` as virtualenv command if `virtualenv` is not available.\n * Install setuptools and pip into environments created by `pyvenv`.\n\n#### 20130614\n\n * Add `pyenv virtualenvs` to list all virtualenv versions.\n * *EXPERIMENTAL*: Add `--upgrade` option to re-create virtualenv with migrating packages\n\n#### 20130527\n\n * Remove `python-virtualenv` which was no longer used.\n * Change the installation path of the `virtualenv.py` script. (`./libexec` -> `./libexec/pyenv-virtualenv/${VIRTUALENV_VERSION}`)\n * Download `virtualenv.py` if desired version has not been installed.\n\n#### 20130507\n\n * Display virtualenv information in `--help` and `--version`\n * Update virtualenv version; 1.8.4 -> 1.9.1\n\n#### 20130307\n\n * Rename the project; `s/python-virtualenv/pyenv-virtualenv/g`\n * The `pyenv-virtualenv` script is not depending on `python-virtualenv` now.\n   `python-virtualenv` will left for compatibility and will not continue for future releases.\n * Update virtualenv version; 1.8.2 -> 1.8.4\n\n#### 20130218\n\n * Add pyenv 0.2.x (rbenv 0.4.x) style help messages.\n\n#### 20121023\n\n * Create virtualenv with exact name of python executables.\n * Changed command-line options of python-virtualenv.\n   First argument should be a path to the python executable.\n * Add install script.\n\n#### 20120927\n\n * Initial public release.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2025 Yamashita, Yuu\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MAINTENANCE.md",
          "type": "blob",
          "size": 1.0166015625,
          "content": "Creating a release\n==================\n\nThe release of the new version of Pyenv is done via GitHub Releases.\n\nRelease checklist:\n* Start [drafting a new release on GitHub](https://github.com/pyenv/pyenv-virtualenv/releases) to generate a summary of changes. Save the summary locally.\n  * The summary may need editing. E.g. rephrase entries, delete/merge entries that are too minor or irrelevant to the users (e.g. typo fixes, CI)\n* Push the version number in `bin/pyenv-virtualenv`\n  * Minor version is pushed if there are significant functional changes (not e.g. bugfixes/formula adaptations/supporting niche use cases).\n  * Major version is pushed if there are breaking changes\n* Update `CHANGELOG.md` with the new version number and the edited summary (only the changes section), reformatting it like the rest of the changelog sections\n* Commit the changes locally into `master`\n* Create a new tag with the new version number and push the changes including the tag\n* Create a new release on GitHub based on the tag, using the saved summary"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.0537109375,
          "content": "# pyenv-virtualenv\n\n[![Join the chat at https://gitter.im/yyuu/pyenv-virtualenv](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/yyuu/pyenv-virtualenv?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/pyenv/pyenv-virtualenv.svg?branch=master)](https://travis-ci.org/pyenv/pyenv-virtualenv)\n\npyenv-virtualenv is a [pyenv](https://github.com/pyenv/pyenv) plugin\nthat provides features to manage virtualenvs and conda environments\nfor Python on UNIX-like systems.\n\n(NOTICE: If you are an existing user of [virtualenvwrapper](http://pypi.python.org/pypi/virtualenvwrapper)\nand you love it, [pyenv-virtualenvwrapper](https://github.com/pyenv/pyenv-virtualenvwrapper) may help you\n(additionally) to manage your virtualenvs.)\n\n## Installation\n\n### Installing as a pyenv plugin\n\nThis will install the latest development version of pyenv-virtualenv into\nthe `$(pyenv root)/plugins/pyenv-virtualenv` directory.\n\n**Important note:**  If you installed pyenv into a non-standard directory, make\nsure that you clone this repo into the 'plugins' directory of wherever you\ninstalled into.\n\nFrom inside that directory you can:\n - Check out a specific release tag.\n - Get the latest development release by running `git pull` to download the\n   latest changes.\n\n1. **Check out pyenv-virtualenv into plugin directory**\n\n    ```bash\n    git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv\n    ```\n\n    For the Fish shell:\n\n    ```fish\n    git clone https://github.com/pyenv/pyenv-virtualenv.git (pyenv root)/plugins/pyenv-virtualenv\n    ```\n\n2. (OPTIONAL) **Add `pyenv virtualenv-init` to your shell** to enable auto-activation of virtualenvs. This is entirely optional but pretty useful. See \"Activate virtualenv\" below.\n\n    ```bash\n    echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc\n    ```\n\n    **Fish shell note**:  Add this to your `~/.config/fish/config.fish`\n\n    ```fish\n    status --is-interactive; and pyenv virtualenv-init - | source\n    ```\n\n    **Zsh note**: Modify your `~/.zshrc` file instead of `~/.bashrc`.\n    \n3. **Restart your shell to enable pyenv-virtualenv**\n\n    ```bash\n    exec \"$SHELL\"\n    ```\n\n\n### Installing with Homebrew (for macOS users)\n\nmacOS users can install pyenv-virtualenv with the\n[Homebrew](https://brew.sh) package manager.\nThis will give you access to the `pyenv-virtualenv` command. If you have pyenv\ninstalled, you will also be able to use the `pyenv virtualenv` command.\n\n*This is the recommended method of installation if you installed pyenv\n with Homebrew.*\n\n```sh\nbrew install pyenv-virtualenv\n```\n\nOr, if you would like to install the latest development release:\n\n```sh\nbrew install --HEAD pyenv-virtualenv\n```\n\nAfter installation, you'll still need to do\n[Pyenv shell setup steps](https://github.com/pyenv/pyenv#basic-github-checkout)\nthen add \n```sh\neval \"$(pyenv virtualenv-init -)\"\n```\nto your shell's `.rc` file (as stated in the caveats). You'll only ever have to do this once.\n\n\n## Usage\n\n### Using `pyenv virtualenv` with pyenv\n\nTo create a virtualenv for the Python version used with pyenv, run\n`pyenv virtualenv`, specifying the Python version you want and the name\nof the virtualenv directory. For example,\n\n```sh\npyenv virtualenv 2.7.10 my-virtual-env-2.7.10\n```\n\nwill create a virtualenv based on Python 2.7.10 under `$(pyenv root)/versions` in a\nfolder called `my-virtual-env-2.7.10`.\n\n`pyenv virtualenv` forwards any options to the underlying command that actually\ncreates the virtual environment (`conda`, `virtualenv`, or `python -m venv`).\nSee the output of `pyenv virtualenv --help` for details.\n\n### Create virtualenv from current version\n\nIf there is only one argument given to `pyenv virtualenv`, the virtualenv will\nbe created with the given name based on the current pyenv Python version.\n\n```sh\n$ pyenv version\n3.4.3 (set by /home/yyuu/.pyenv/version)\n$ pyenv virtualenv venv34\n```\n\n\n### List existing virtualenvs\n\n`pyenv virtualenvs` shows you the list of existing virtualenvs and `conda` environments.\n\n```sh\n$ pyenv shell venv34\n$ pyenv virtualenvs\n  miniconda3-3.9.1 (created from /home/yyuu/.pyenv/versions/miniconda3-3.9.1)\n  miniconda3-3.9.1/envs/myenv (created from /home/yyuu/.pyenv/versions/miniconda3-3.9.1)\n  2.7.10/envs/my-virtual-env-2.7.10 (created from /home/yyuu/.pyenv/versions/2.7.10)\n  3.4.3/envs/venv34 (created from /home/yyuu/.pyenv/versions/3.4.3)\n  my-virtual-env-2.7.10 (created from /home/yyuu/.pyenv/versions/2.7.10)\n* venv34 (created from /home/yyuu/.pyenv/versions/3.4.3)\n```\n\nThere are two entries for each virtualenv, and the shorter one is just a symlink.\n\n\n### Activate virtualenv\n\nSome external tools (e.g. [jedi](https://github.com/davidhalter/jedi)) might\nrequire you to `activate` the virtualenv and `conda` environments.\n\nIf `eval \"$(pyenv virtualenv-init -)\"` is configured in your shell, `pyenv-virtualenv` will automatically activate/deactivate virtualenvs on entering/leaving directories which contain a `.python-version` file that contains the name of a valid virtual environment as shown in the output of `pyenv virtualenvs` (e.g., `venv34` or `3.4.3/envs/venv34` in example above) . `.python-version` files are used by pyenv to denote local Python versions and can be created and deleted with the [`pyenv local`](https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-local) command.\n\nYou can also activate and deactivate a pyenv virtualenv manually:\n\n```sh\npyenv activate <name>\npyenv deactivate\n```\n\n\n### Delete existing virtualenv\n\nRemoving the directories in `$(pyenv root)/versions` and `$(pyenv root)/versions/{version}/envs` will delete the virtualenv, or you can run:\n\n```sh\npyenv uninstall my-virtual-env\n```\n\nYou can also delete existing virtualenvs by using `virtualenv-delete` command, e.g. you can run:\n```sh\npyenv virtualenv-delete my-virtual-env\n```\nThis will delete virtualenv called `my-virtual-env`.\n\n\n### virtualenv and venv\n\nThere is a [venv](http://docs.python.org/3/library/venv.html) module available\nfor CPython 3.3 and newer.\nIt provides an executable module `venv` which is the successor of `virtualenv`\nand distributed by default.\n\n`pyenv-virtualenv` uses `python -m venv` if it is available and the `virtualenv`\ncommand is not available.\n\n\n### Anaconda and Miniconda\n\nYou can manage `conda` environments by `conda create` as same manner as standard Anaconda/Miniconda installations.\nTo use those environments, you can use `pyenv activate` and `pyenv deactivate`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by /home/yyuu/.pyenv/version)\n$ conda env list\n# conda environments:\n#\nmyenv                    /home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv\nroot                  *  /home/yyuu/.pyenv/versions/miniconda3-3.9.1\n$ pyenv activate miniconda3-3.9.1/envs/myenv\ndiscarding /home/yyuu/.pyenv/versions/miniconda3-3.9.1/bin from PATH\nprepending /home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv/bin to PATH\n$ python --version\nPython 3.4.3 :: Continuum Analytics, Inc.\n$ pyenv deactivate\ndiscarding /home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv/bin from PATH\n```\n\nIf `conda` is available, `pyenv virtualenv` will use it to create environment by `conda create`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by /home/yyuu/.pyenv/version)\n$ pyenv virtualenv myenv2\n$ conda env list\n# conda environments:\n#\nmyenv                    /home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv\nmyenv                    /home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv2\nroot                  *  /home/yyuu/.pyenv/versions/miniconda3-3.9.1\n```\n\nYou can use version like `miniconda3-3.9.1/envs/myenv` to specify `conda` environment as a version in pyenv.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by /home/yyuu/.pyenv/version)\n$ pyenv shell miniconda3-3.9.1/envs/myenv\n$ which python\n/home/yyuu/.pyenv/versions/miniconda3-3.9.1/envs/myenv/bin/python\n```\n\n\n### Special environment variables\n\nYou can set certain environment variables to control pyenv-virtualenv.\n\n* `PYENV_VIRTUALENV_CACHE_PATH`, if set, specifies a directory to use for\n  caching downloaded package files.\n* `VIRTUALENV_VERSION`, if set, forces pyenv-virtualenv to install the desired\n  version of virtualenv. If `virtualenv` has not been installed,\n  pyenv-virtualenv will try to install the given version of virtualenv.\n* `GET_PIP`, if set and `venv` is preferred over `virtualenv`,\n  use `get_pip.py` from the specified location.\n* `GET_PIP_URL`, if set and `venv` is preferred over\n  `virtualenv`, download `get_pip.py` from the specified URL.\n* `PIP_VERSION`, if set and `venv` is preferred\n  over `virtualenv`, install the specified version of pip.\n* `PYENV_VIRTUALENV_VERBOSE_ACTIVATE`, if set, shows some verbose outputs on activation and deactivation\n* `PYENV_VIRTUALENV_PROMPT`, if set, allows users to customize how `pyenv-virtualenv` modifies their shell prompt. The default prompt (\"(venv)\") is overwritten with any user-specified text. Specify the location of the virtual environment name with the string `{venv}`. For example, the default prompt string would be `({venv})`.\n\n## Version History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n\n### License\n\n[(The MIT License)](LICENSE)\n\n* Copyright (c) 2015 Yamashita, Yuu\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.6318359375,
          "content": "#!/bin/sh\n# Usage: PREFIX=/usr/local ./install.sh\n#\n# Installs pyenv-virtualenv under $PREFIX.\n\nset -e\n\ncd \"$(dirname \"$0\")\"\n\nif [ -z \"${PREFIX}\" ]; then\n  PREFIX=\"/usr/local\"\nfi\n\nBIN_PATH=\"${PREFIX}/bin\"\nLIBEXEC_PATH=\"${PREFIX}/libexec\"\nSHIMS_PATH=\"${PREFIX}/shims\"\nHOOKS_PATH=\"${PREFIX}/etc/pyenv.d\"\n\nmkdir -p \"$BIN_PATH\"\nmkdir -p \"$LIBEXEC_PATH\"\nmkdir -p \"$SHIMS_PATH\"\nmkdir -p \"$HOOKS_PATH\"\n\ninstall -p bin/* \"$BIN_PATH\"\ninstall -p libexec/* \"$LIBEXEC_PATH\"\ninstall -p shims/* \"$SHIMS_PATH\"\nfor hook in etc/pyenv.d/*; do\n  if [ -d \"$hook\" ]; then\n    cp -RPp \"$hook\" \"$HOOKS_PATH\"\n  else\n    install -p -m 0644 \"$hook\" \"$HOOKS_PATH\"\n  fi\ndone\n"
        },
        {
          "name": "libexec",
          "type": "tree",
          "content": null
        },
        {
          "name": "shims",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}