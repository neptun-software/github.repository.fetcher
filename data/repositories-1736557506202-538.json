{
  "metadata": {
    "timestamp": 1736557506202,
    "page": 538,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rapid7/metasploit-framework",
      "stars": 34566,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 2.52,
          "content": ".dockerignore\n.gitignore\n.env*\ndocker-compose*.yml\ndocker/\n!docker/msfconsole.rc\n!docker/entrypoint.sh\n!docker/database.yml\nDockerfile\nREADME.md\n.git/\n.github/\n.ruby-version\n.ruby-gemset\n\n.bundle\nGemfile.local\nGemfile.local.lock\n# Rubymine project directory\n.idea\n# Sublime Text project directory (not created by ST by default)\n.sublime-project\n# RVM control file, keep this to avoid backdooring Metasploit\n.rvmrc\n# Allow for a local choice of (unsupported / semi-supported) ruby versions\n# See PR #4136 for usage, but example usage for rvm:\n#   rvm --create --versions-conf use 2.1.4@metasploit-framework\n# Because rbenv doesn't use .versions.conf, to achieve this same functionality, run:\n#   rbenv shell 2.1.4\n.versions.conf\n# YARD cache directory\n.yardoc\n# Mac OS X files\n.DS_Store\n# database config for testing\nconfig/database.yml\n# target config file for testing\nfeatures/support/targets.yml\n# simplecov coverage data\ncoverage/\ndoc/\nexternal/source/meterpreter/java/bin\nexternal/source/meterpreter/java/build\nexternal/source/meterpreter/java/extensions\nexternal/source/javapayload/bin\nexternal/source/javapayload/build\n# Java binary ignores. Replace the 5 above with this once we're merged.\nexternal/source/javapayload/*/.classpath\nexternal/source/javapayload/*/.project\nexternal/source/javapayload/*/.settings\nexternal/source/javapayload/*/bin\nexternal/source/javapayload/*/target\nexternal/source/javapayload/*/*/.classpath\nexternal/source/javapayload/*/*/.project\nexternal/source/javapayload/*/*/.settings\nexternal/source/javapayload/*/*/bin\nexternal/source/javapayload/*/*/target\n# Packaging directory\npkg\ntags\n*.swp\n*.orig\n*.rej\n*~\n# Ignore backups of retabbed files\n*.notab\n\n# ignore Visual Studio external source garbage\n*.suo\n*.sdf\n*.opensdf\n*.user\n\n# Rails log directory\n/log\n# Rails tmp directory\n/tmp\n\n# ignore release/debug folders for exploits\nexternal/source/exploits/**/Debug\nexternal/source/exploits/**/Release\n\n# Avoid checking in Meterpreter binaries. These are supplied upstream by\n# the metasploit-payloads gem.\ndata/meterpreter/*.dll\ndata/meterpreter/*.php\ndata/meterpreter/*.py\ndata/meterpreter/*.bin\ndata/meterpreter/*.jar\ndata/meterpreter/*.lso\ndata/android\ndata/java\n\n# Avoid checking in Meterpreter libs that are built from\n# private source. If you're interested in this functionality,\n# check out Metasploit Pro: https://metasploit.com/download\ndata/meterpreter/ext_server_pivot.*.dll\n\n# Avoid checking in metakitty, the source for\n# https://rapid7.github.io/metasploit-framework. It's an orphan branch.\n/metakitty\n.vagrant\n\n# no need for rspecs\nspec/\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.68,
          "content": "# This file aims to document any commits which should be ignored from Git/Github history\n# Only whitespace changes should be added to this file where possible\n#\n# Additional details:\n#    https://docs.github.com/en/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view\n# \n\n# 2013: Retabbing the majority of Metasploit Framework to use two-space soft tabs instead of hard tabs\n7e5e0f7fc814fee55a1eca148c51f2344da65e59\n41e4375e43443bb568729a3079d3bf9944cbc669\n84aaf2334ae2de73f27999d4c003448c8e891d3a\n9f3a5dc5d0424c2c1a067b140b1642319dee65c2\n\n# 2022: Fixing whitespace on the tests folder with \"rubocop --fix-layout test\"\n29cc349649f978304712dd0c31dc8861e9627209\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.62,
          "content": ".bundle\nGemfile.local\nGemfile.local.lock\n# Rubymine project directory\n.idea\n# Visual Studio Code configuration settings directory\n.vscode\n# Sublime Text project directory (not created by ST by default)\n.sublime-project\n# RVM control file, keep this to avoid backdooring Metasploit\n.rvmrc\n# Allow for a local choice of (unsupported / semi-supported) ruby versions\n# See PR #4136 for usage, but example usage for rvm:\n#   rvm --create --versions-conf use 2.1.4@metasploit-framework\n# Because rbenv doesn't use .versions.conf, to achieve this same functionality, run:\n#   rbenv shell 2.1.4\n.versions.conf\n# YARD cache directory\n.yardoc\n# Mac OS X files\n.DS_Store\n# Ignore Solargraph config file\n.solargraph.yml\n# database config for testing\nconfig/database.yml\n# target config file for testing\nfeatures/support/targets.yml\n# Generated test files\nspec/dummy\n# simplecov coverage data\ncoverage\ndoc/\nexternal/source/meterpreter/java/bin\nexternal/source/meterpreter/java/build\nexternal/source/meterpreter/java/extensions\nexternal/source/javapayload/bin\nexternal/source/javapayload/build\n# Java binary ignores. Replace the 5 above with this once we're merged.\nexternal/source/javapayload/*/.classpath\nexternal/source/javapayload/*/.project\nexternal/source/javapayload/*/.settings\nexternal/source/javapayload/*/bin\nexternal/source/javapayload/*/target\nexternal/source/javapayload/*/*/.classpath\nexternal/source/javapayload/*/*/.project\nexternal/source/javapayload/*/*/.settings\nexternal/source/javapayload/*/*/bin\nexternal/source/javapayload/*/*/target\n# Packaging directory\npkg\ntags\n*.swp\n*.orig\n*.rej\n*~\n# Ignore backups of retabbed files\n*.notab\n\n# ignore Visual Studio external source garbage\n*.suo\n*.sdf\n*.opensdf\n*.user\n\n# Rails log directory\n/log\n# Rails tmp directory\n/tmp\n\n# ignore release/debug folders for exploits\nexternal/source/exploits/**/Debug\nexternal/source/exploits/**/Release\n\n# Avoid checking in Meterpreter binaries. These are supplied upstream by\n# the metasploit-payloads gem.\ndata/meterpreter/*.dll\ndata/meterpreter/*.php\ndata/meterpreter/*.py\ndata/meterpreter/*.bin\ndata/meterpreter/*.jar\ndata/meterpreter/*.lso\ndata/android\ndata/java\n\n# Avoid checking in Meterpreter libs that are built from\n# private source. If you're interested in this functionality,\n# check out Metasploit Pro: https://metasploit.com/download\ndata/meterpreter/ext_server_pivot.*.dll\n\n# Avoid checking in metakitty, the source for\n# https://rapid7.github.io/metasploit-framework. It's an orphan branch.\n/metakitty\n.vagrant\n\n# local docker compose overrides\ndocker-compose.local*\n.env\n\n# Ignore python bytecode\n*.pyc\nrspec.failures\n\n#Ignore any base disk store files\ndb/modules_metadata_base.pstore\n"
        },
        {
          "name": ".gitleaksignore",
          "type": "blob",
          "size": 5.05,
          "content": "06da60cade4d9a7aebf265a76a4e5b0a8636ee6a:documentation/modules/exploit/multi/http/atlassian_confluence_rce_cve_2024_21683.md:73\n06da60cade4d9a7aebf265a76a4e5b0a8636ee6a:documentation/modules/exploit/multi/http/atlassian_confluence_rce_cve_2024_21683.md:76\n06da60cade4d9a7aebf265a76a4e5b0a8636ee6a:documentation/modules/exploit/multi/http/atlassian_confluence_rce_cve_2024_21683.md:119\ndeabf9b1d846e4ced5dca20be5e21e8732762889:documentation/modules/exploit/multi/http/atlassian_confluence_rce_cve_2023_22527.md:16\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.1.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.2.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.10.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.0.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.7.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.6.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.9.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.9.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.0.0_proxy:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.7.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.8.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.4.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.5.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.3.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.5.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.8.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.6.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.10.0_platform:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.1.0_proxy:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.4.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.2.0_collector:1\nb3b1595ef4046f4923109e44f7d113ed0f45e079:data/exploits/CVE-2023-34039/id_rsa_vnera_keypair_6.3.0_collector:1\n58f9a39f72c623ab337a6768b34dc32f06d8ae67:documentation/modules/exploit/unix/webapp/zoneminder_snapshots.md:60\n686d704b371da3545f21b281b4ee29f3863cd3b7:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:57\n686d704b371da3545f21b281b4ee29f3863cd3b7:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:57\n619a46d45081c09c661da37a1b3665d8f82bc8d1:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:58\n619a46d45081c09c661da37a1b3665d8f82bc8d1:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:58\n619a46d45081c09c661da37a1b3665d8f82bc8d1:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:58\n619a46d45081c09c661da37a1b3665d8f82bc8d1:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:65\ne34ed10eca5b01a5d19ee6465eb0f336af5d77a4:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:86\ne34ed10eca5b01a5d19ee6465eb0f336af5d77a4:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:86\ne34ed10eca5b01a5d19ee6465eb0f336af5d77a4:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:86\ne34ed10eca5b01a5d19ee6465eb0f336af5d77a4:documentation/modules/exploit/linux/http/apache_superset_cookie_sig_rce.md:93\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:data/wordlists/flask_secret_keys.txt:7642\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:data/wordlists/flask_secret_keys.txt:8471\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:data/wordlists/flask_secret_keys.txt:8472\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/apache_superset_cookie_sig_priv_esc.md:75\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/apache_superset_cookie_sig_priv_esc.md:75\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/apache_superset_cookie_sig_priv_esc.md:75\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/apache_superset_cookie_sig_priv_esc.md:77\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/apache_superset_cookie_sig_priv_esc.md:77\n94657d317ba4ecaa7f58bfc227b7e4a0bbec167e:documentation/modules/auxiliary/gather/python_flask_cookie_signer.md:99\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.16,
          "content": "[submodule \"external/source/ReflectiveDLLInjection\"]\n\tpath = external/source/ReflectiveDLLInjection\n\turl = https://github.com/rapid7/ReflectiveDLLInjection.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 12.89,
          "content": "adfoster-r7 <adfoster-r7@github>       <alandavid_foster@rapid7.com>\nadeherdt-r7 <adeherdt-r7@github>       Arne De Herdt <arne_deherdt@rapid7.com>\nbwatters-r7 <bwatters-r7@github>       <bwatters@rapid7.com>\ncdelafuente-r7 <cdelafuente-r7@github> Christophe De La Fuente <christophe_delafuente@rapid7.com>\ncdoughty-r7 <cdoughty-r7@github>       <chris_doughty@rapid7.com>\ncgranleese-r7 <cgranleese-r7@github>   <christopher_granleese@rapid7.com>\ndheiland-r7 <dheiland-r7@github>       <dh@layereddefense.com>\ndwelch-r7 <dwelch-r7@github>           <dean_welch@rapid7.com>\ngwillcox-r7 <gwillcox-r7@github>       <Grant_Willcox@rapid7.com>\njmartin-r7 <jmartin-r7@github>         <Jeffrey_Martin@rapid7.com>\nmkienow-r7 <mkienow-r7@github>         <matthew_kienow@rapid7.com>\npdeardorff-r7 <pdeardorff-r7@github>   <paul_deardorff@rapid7.com>\npdeardorff-r7 <pdeardorff-r7@github>   <Paul_Deardorff@rapid7.com>\nsmcintyre-r7 <smcintyre-r7@github>     <spencer_mcintyre@rapid7.com>\nspace-r7 <space-r7@github>             <shelby_pace@rapid7.com>\ntodb-r7 <todb-r7@github>               <tod_beardsley@rapid7.com>\ntodb-r7 <todb-r7@github>               <todb@metasploit.com>\ntodb-r7 <todb-r7@github>               <todb@packetfu.com>\ndledda-r7 <dledda-r7@github>           <diego_ledda@rapid7.com>\nmsutovsky-r7 <msutovsky-r7@github>     <martin_sutovsky@rapid7.com>\n\n# Above this line are current Rapid7 employees. Below this paragraph are\n# volunteers, former employees, and potential Rapid7 employees who, at\n# one time or another, had some largeish number of commits landed on\n# rapid7/metasploit-framework master branch.  This should be refreshed\n# periodically. If you're on this list and would like to not be, just\n# let todb@metasploit.com know.\n\nacammack-r7 <acammack-r7@github>       <acammack@aus-mbp-1099.aus.rapid7.com>\nacammack-r7 <acammack-r7@github>       <adam_cammack@rapid7.com>\nacammack-r7 <acammack-r7@github>       <Adam_Cammack@rapid7.com>\nadamgalway-r7 <adamgalway-r7@github>   <adam_galway@rapid7.com>\nasoto-r7 <asoto-r7@github>             <aaron_soto@rapid7.com>\nbannedit <bannedit@github>             David Rude <bannedit0@gmail.com>\nbcoles <bcoles@github>                 bcoles <bcoles@gmail.com>\nbcook-r7 <bcook-r7@github>             <bcook@rapid7.com>\nbcook-r7 <bcook-r7@github>             <busterb@gmail.com>\nbokojan <bokojan@github>               parzamendi-r7 <peter_arzamendi@rapid7.com>\nbpatterson-r7 <bpatterson-r7@github>   <bpatterson@rapid7.com>\nbpatterson-r7 <bpatterson-r7@github>   <Brian_Patterson@rapid7.com>\nbrandonprry <brandonprry@github>       <bperry@brandons-mbp.attlocal.net>\nbrandonprry <brandonprry@github>       Brandon Perry <bperry@bperry-rapid7.(none)>\nbrandonprry <brandonprry@github>       Brandon Perry <bperry.volatile@gmail.com>\nbrandonprry <brandonprry@github>       Brandon Perry <brandon.perry@zenimaxonline.com>\nbturner-r7 <bturner-r7@github>         <brandon_turner@rapid7.com>\nbwall <bwall@github>                   Brian Wallace <bwall@openbwall.com>\nbwall <bwall@github>                   (B)rian (Wall)ace <nightstrike9809@gmail.com>\nceballosm <ceballosm@github>           Mario Ceballos <mc@metasploit.com>\nChao-mu <Chao-Mu@github>               chao-mu <chao@confusion.(none)>\nChao-mu <Chao-Mu@github>               <chao.mu@minorcrash.com>\nChrisJohnRiley <ChrisJohnRiley@github> Chris John Riley <chris.riley@c22.cc>\nChrisJohnRiley <ChrisJohnRiley@github> Chris John Riley <reg@c22.cc>\nclaudijd <claudijd@github>             Jonathan Claudius <claudijd@yahoo.com>\nclaudijd <claudijd@github>             Jonathan Claudius <jclaudius@trustwave.com>\ncorelanc0d3r <corelanc0d3r@github>     corelanc0d3r <peter.ve@corelan.be>\ncorelanc0d3r <corelanc0d3r@github>     Peter Van Eeckhoutte (corelanc0d3r) <peter.ve@corelan.be>\ncrcatala <crcatala@github>             Christian Catalan <ccatalan@rapid7.com>\ndarkoperator <darkoperator@github>     Carlos Perez <carlos_perez@darkoperator.com>\nDanielRTeixeira <DanielRTeixeira@github> Daniel Teixeira <danieljcrteixeira@gmail.com>\ndmaloney-r7 <dmaloney-r7@github>       <David_Maloney@rapid7.com>\ndmaloney-r7 <dmaloney-r7@github>       <DMaloney@rapid7.com>\ndmohanty-r7 <dmohanty-r7@github>       <Dev_Mohanty@rapid7.com>\necarey-r7 <ecarey-r7@github>           <e@ipwnstuff.com>\nefraintorres <efraintorres@github>     efraintorres <etlownoise@gmail.com>\nefraintorres <efraintorres@github>     et <>\negypt <egypt@github>                   <egypt@metasploit.com> # aka egypt\negypt <egypt@github>                   <james_lee@rapid7.com>\nespreto <espreto@github>               <robertoespreto@gmail.com>\nfab <fab@???>                          fab <> # fab at revhosts.net (Fabrice MOURRON)\nfarias-r7 <farias-r7@github>           <fernando_arias@rapid7.com>\nFireFart <FireFart@github>             <firefart@gmail.com>\nFireFart <FireFart@github>             <FireFart@users.noreply.github.com>\ngmikeska-r7 <gmikeska-r7@github>       <greg_mikeska@rapid7.com>\ngmikeska-r7 <gmikeska-r7@github>       greg.mikeska@rapid7.com <=>\ngmikeska-r7 <gmikeska-r7@github>       greg.mikeska@rapid7.com <YOUR_USERNAME_FOR_EMAIL>\ng0tmi1k <g0tmi1k@github>               <g0tmi1k@users.noreply.github.com>\ng0tmi1k <g0tmi1k@github>               <have.you.g0tmi1k@gmail.com>\nh00die <h00die@github>                 <h00die@users.noreply.github.com>\nh00die <h00die@github>                 <mike@shorebreaksecurity.com>\nh0ng10 <h0ng10@github>                 h0ng10 <hansmartin.muench@googlemail.com>\nh0ng10 <h0ng10@github>                 Hans-Martin Münch <hansmartin.muench@googlemail.com>\nhdm <hdm@github>                       HD Moore <hdm@digitaloffense.net>\nhdm <hdm@github>                       HD Moore <hd_moore@rapid7.com>\nhdm <hdm@github>                       HD Moore <x@hdm.io>\njabra <jabra@github>                   <jabra@spl0it.org>\njbarnett-r7 <jbarnett-r7@github>       <James_Barnett@rapid7.com>\njbarnett-r7 <jbarnett-r7@github>       <jbarnett@rapid7.com>\njcran <jcran@github>                   <jcran@0x0e.org>\njcran <jcran@github>                   <jcran@pentestify.com>\njcran <jcran@github>                   <jcran@pwnieexpress.com>\njcran <jcran@github>                   <jcran@rapid7.com>\njduck <jduck@github>                   <github.jdrake@qoop.org>\njduck <jduck@github>                   <jdrake@qoop.org>\njgor <jgor@github>                     jgor <jgor@indiecom.org>\njhart-r7 <jhart-r7@github>             <jon_hart@rapid7.com>\njinq102030 <jinq102030@github>         <Jin_Qian@rapid7.com>\njinq102030 <jinq102030@github>         <jqian@rapid7.com>\njoevennix <joevennix@github>           Joe Vennix <joevennix@gmail.com>\njoevennix <joevennix@github>           <Joe_Vennix@rapid7.com>\njoevennix <joevennix@github>           <joev@metasploit.com>\njoevennix <joevennix@github>           jvennix-r7 <Joe_Vennix@rapid7.com>\njuanvazquez <juanvazquez@github>       jvazquez-r7 <juan.vazquez@metasploit.com>\njuanvazquez <juanvazquez@github>       jvazquez-r7 <juan_vazquez@rapid7.com>\nkernelsmith <kernelsmith@github>       Joshua Smith <kernelsmith@kernelsmith.com>\nkernelsmith <kernelsmith@github>       Joshua Smith <kernelsmith@metasploit.com>\nkernelsmith <kernelsmith@github>       kernelsmith <kernelsmith@kernelsmith>\nkgray-r7 <kgray-r7@github>             <kyle_gray@rapid7.com>\nkost <kost@github>                     Vlatko Kosturjak <kost@linux.hr>\nkris <kris@???>                        kris <>\nKronicDeth <KronicDeth@github>         Luke Imhoff <luke_imhoff@rapid7.com>\nlsanchez-r7 <lsanchez-r7@github>       <lance@aus-mac-1041.aus.rapid7.com>\nlsanchez-r7 <lsanchez-r7@github>       <lance@AUS-MAC-1041.local>\nlsanchez-r7 <lsanchez-r7@github>       <lance.sanchez+github@gmail.com>\nlsanchez-r7 <lsanchez-r7@github>       <lance.sanchez@gmail.com>\nlsanchez-r7 <lsanchez-r7@github>       <lance.sanchez@rapid7.com>\nlsato-r7 <lsato-r7@github>             <lsato@rapid7.com>\nlvarela-r7 <lvarela-r7@github>         <“leonardo_varela@rapid7.com”>\nm-1-k-3 <m-1-k-3@github>               m-1-k-3 <github@s3cur1ty.de>\nm-1-k-3 <m-1-k-3@github>               m-1-k-3 <m1k3@s3cur1ty.de>\nm-1-k-3 <m-1-k-3@github>               m-1-k-3 <michael.messner@integralis.com>\nm-1-k-3 <m-1-k-3@github>               Michael Messner <devnull@s3cur1ty.de>\nMeatballs1 <Meatballs1@github>         <eat_meatballs@hotmail.co.uk>\nMeatballs1 <Meatballs1@github>         <Meatballs1@users.noreply.github.com>\nmubix <mubix@github>                   Rob Fuller <jd.mubix@gmail.com>\nmwalas-r7 <mwalas-r7@github>           <marcin_walas@rapid7.com>\nnet-ninja <net-ninja@github.com>       Steven Seeley <steventhomasseeley@gmail.com>\nnevdull77 <nevdull77@github>           Patrik Karlsson <patrik@cqure.net>\nnmonkee <nmonkee@github>               nmonkee <dave@northern-monkee.co.uk>\nnullbind <nullbind@github>             nullbind <scott.sutherland@nullbind.com>\nnullbind <nullbind@github>             Scott Sutherland <scott.sutherland@nullbind.com>\nohdae <ohdae@github>                   ohdae <bindshell@live.com>\noj <oj@github>                         <oj@buffered.io>\npbarry-r7 <pbarry-r7@github>           <pearce_barry@rapid7.com>\nr3dy <r3dy@github>                     Royce Davis <r3dy@Royces-MacBook-Pro.local>\nr3dy <r3dy@github>                     Royce Davis <rdavis@Royces-MacBook-Pro-2.local>\nr3dy <r3dy@github>                     Royce Davis <royce.e.davis@gmail.com>\nrep <mschloesser-r7@github>            Mark Schloesser <mark_schloesser@rapid7.com>\nrep <mschloesser-r7@github>            mschloesser-r7 <mark_schloesser@rapid7.com>\nRageLtMan <sempervictus@github>        <rageltman [at] sempervictus>\nRageLtMan <sempervictus@github>        <rageltman@sempervictus.com>\nRick Flores <0xnanoquetz9l@gmail.com>  Rick Flores (nanotechz9l) <0xnanoquetz9l@gmail.com>\nrsmudge <rsmudge@github>               Raphael Mudge <rsmudge@gmail.com> # Aka `butane\nrwhitcroft <rwhitcroft@github>         <rwhitcroft.github@gmail.com>\nrwhitcroft <rwhitcroft@github>         <rwhitcroft@gmail.com>\nrwhitcroft <rwhitcroft@github>         <rwhitcroft@users.noreply.github.com>\nschierlm <schierlm@github>             Michael Schierl <schierlm@gmx.de> # Aka mihi\nscriptjunkie <scriptjunkie@github>     Matt Weeks <scriptjunkie@scriptjunkie.us>\nscriptjunkie <scriptjunkie@github>     scriptjunkie <scriptjunkie@scriptjunkie.us>\nsdavis-r7 <sdavis-r7@github>           <scott_davis@rapid7.com>\nsdavis-r7 <sdavis-r7@github>           <Scott_Davis@rapid7.com>\nsdavis-r7 <sdavis-r7@github>           <sdavis@rapid7.com>\nsgonzalez-r7 <sgonzalez-r7@github>     <sgonzalez@rapid7.com>\nsgonzalez-r7 <sgonzalez-r7@github>     <sonny_gonzalez@rapid7.com>\nshuckins-r7 <shuckins-r7@github>       <samuel_huckins@rapid7.com>\nsjanusz-r7 <sjanusz-r7@github>         <simon_janusz@rapid7.com>\nskape <skape@???>                      Matt Miller <mmiller@hick.org>\nsmashery <smashery@github>             Ashley Donaldson <smashery@gmail.com>\nspoonm <spoonm@github>                 Spoon M <spoonm@gmail.com>\nstufus <stufus@github>                 Stuart Morgan <stuart.morgan@mwrinfosecurity.com>\nstufus <stufus@github>                 Stuart <stufus@users.noreply.github.com>\nswtornio <swtornio@github>             Steve Tornio <swtornio@gmail.com>\nTasos Laskos <Tasos_Laskos@rapid7.com> Tasos Laskos <Tasos_Laskos@rapid7.com>\ntatanus <tatanus@github>               <adam_compton@rapid7.com>\ntdoan-r7 <tdoan-r7@github>             <thao_doan@rapid7.com>\ntechpeace <techpeace@github>           Matt Buck <Matthew_Buck@rapid7.com>\ntechpeace <techpeace@github>           Matt Buck <techpeace@gmail.com>\ntimwr <timwr@github>                   <timrlw@gmail.com>\nTomSellers <TomSellers@github>         Tom Sellers <tom@fadedcode.net>\ntrevrosen <trevrosen@github>           Trevor Rosen <trevor@catapult-creative.com>\ntrevrosen <trevrosen@github>           Trevor Rosen <Trevor_Rosen@rapid7.com>\nTrustedSec <davek@trustedsec.com>      trustedsec <davek@trustedsec.com>\nvoid-in <void-in@github>               void_in <root@localhost.localdomain>\nvoid-in <void-in@github>               void-in <root@localhost.localdomain>\nvoid-in <void-in@github>               <void-in@users.noreply.github.com>\nvoid-in <void-in@github>               void-in <waqas.bsquare@gmail.com>\nvoid-in <void-in@github>               Waqas Ali <waqas.bsquare@gmail.com>\nwchen-r7 <wchen-r7@github>             <msfsinn3r@gmail.com> # aka sinn3r\nwchen-r7 <wchen-r7@github>             <wei_chen@rapid7.com>\nwwalker-r7 <wwalker-r7@github>         <wyatt_walker@rapid7.com>\nwwebb-r7 <wwebb-r7@github>             <William_Webb@rapid7.com>\nzeroSteiner <zeroSteiner@github>       Spencer McIntyre <zeroSteiner@gmail.com>\n\n# Aliases for utility author names. Since they're fake, typos abound\n\nMetasploit Bot <metasploit@rapid7.com>    Metasploit <metasploit@rapid7.com>\nJenkins Bot <jenkins@rapid7.com>          Jenkins <jenkins@rapid7.com>\nTab Assassin <tabassassin@metasploit.com> TabAssassin <tabasssassin@metasploit.com>\nTab Assassin <tabassassin@metasploit.com> Tabassassin <tabassassin@metasploit.com>\nTab Assassin <tabassassin@metasploit.com> Tabasssassin <tabassassin@metasploit.com>\nTab Assassin <tabassassin@metasploit.com> URI Assassin <tabassassin@metasploit.com>\n"
        },
        {
          "name": ".rspec",
          "type": "blob",
          "size": 0.05,
          "content": "--color\n--format Fivemat\n--require spec_helper\n"
        },
        {
          "name": ".rubocop.yml",
          "type": "blob",
          "size": 16.83,
          "content": "# This list was intially created by analyzing the last three months (51\n# modules) committed to Metasploit Framework. Many, many older modules\n# will have offenses, but this should at least provide a baseline for\n# new modules.\n#\n# Updates to this file should include a 'Description' parameter for any\n# explanation needed.\n\n# inherit_from: .rubocop_todo.yml\n\nAllCops:\n  TargetRubyVersion: 2.7\n  SuggestExtensions: false\n  NewCops: disable\n\nrequire:\n  - ./lib/rubocop/cop/layout/module_hash_on_new_line.rb\n  - ./lib/rubocop/cop/layout/module_hash_values_on_same_line.rb\n  - ./lib/rubocop/cop/layout/module_description_indentation.rb\n  - ./lib/rubocop/cop/layout/extra_spacing_with_bindata_ignored.rb\n  - ./lib/rubocop/cop/lint/module_disclosure_date_format.rb\n  - ./lib/rubocop/cop/lint/module_disclosure_date_present.rb\n  - ./lib/rubocop/cop/lint/deprecated_gem_version.rb\n  - ./lib/rubocop/cop/lint/module_enforce_notes.rb\n  - ./lib/rubocop/cop/lint/detect_invalid_pack_directives.rb\n\nLayout/SpaceBeforeBrackets:\n  Description: >-\n    Disabled as it generates invalid code:\n      https://github.com/rubocop-hq/rubocop/issues/9499\n  Enabled: false\n\nLint/AmbiguousAssignment:\n  Enabled: true\n\nLint/DeprecatedConstants:\n  Enabled: true\n\nLint/DuplicateBranch:\n  Description: >-\n    Disabled as it causes a lot of noise around our current exception/error handling\n  Enabled: false\n\nLint/DuplicateRegexpCharacterClassElement:\n  Enabled: false\n\nLint/EmptyBlock:\n  Enabled: false\n\nLint/EmptyClass:\n  Enabled: false\n\nLint/LambdaWithoutLiteralBlock:\n  Enabled: true\n\nLint/NoReturnInBeginEndBlocks:\n  Enabled: true\n\nLint/NumberedParameterAssignment:\n  Enabled: true\n\nLint/OrAssignmentToConstant:\n  Enabled: true\n\nLint/RedundantDirGlobSort:\n  Enabled: true\n\nLint/SymbolConversion:\n  Enabled: true\n\nLint/ToEnumArguments:\n  Enabled: true\n\nLint/TripleQuotes:\n  Enabled: true\n\nLint/UnexpectedBlockArity:\n  Enabled: true\n\nLint/UnmodifiedReduceAccumulator:\n  Enabled: true\n\nLint/UnusedMethodArgument:\n  Description: >-\n    Disabled on files under the lib/ directory (aka library files)\n    as this can break YARD documentation since YARD doesn't recognize\n    the _ prefix before parameter names and thinks its a different argument.\n    See https://github.com/rapid7/metasploit-framework/pull/17735\n    Also see https://github.com/rubocop/rubocop/pull/11020\n  Enabled: true\n  Exclude:\n    - 'lib/**/*'\n\nStyle/ArgumentsForwarding:\n  Enabled: true\n\nStyle/BlockComments:\n  Description: >-\n    Disabled as multiline comments are great for embedded code snippets/payloads that can\n    be copy/pasted directly into a terminal etc.\n  Enabled: false\n\nStyle/CaseLikeIf:\n  Description: >-\n    This would cause a lot of noise, and potentially introduce subtly different code when\n    being auto fixed. Could potentially be enabled in isolation, but would require more\n    consideration.\n  Enabled: false\n\nStyle/CollectionCompact:\n  Enabled: true\n\nStyle/DocumentDynamicEvalDefinition:\n  Enabled: false\n\nStyle/EndlessMethod:\n  Enabled: true\n\nStyle/HashExcept:\n  Enabled: true\n\nStyle/IfWithBooleanLiteralBranches:\n  Description: >-\n    Most of the time this is a valid replacement. Although it can generate subtly different\n    rewrites that might break code:\n      2.7.2 :001 > foo = nil\n      => nil\n      2.7.2 :002 > (foo && foo['key'] == 'foo') ? true : false\n      => false\n      2.7.2 :003 > foo && foo['key'] == 'foo'\n      => nil\n  Enabled: false\n\nStyle/NegatedIfElseCondition:\n  Enabled: false\n\nStyle/MultipleComparison:\n  Description: >-\n    Disabled as it generates invalid code:\n      https://github.com/rubocop-hq/rubocop/issues/9520\n    It may also introduce subtle semantic issues if automatically applied to the\n    entire codebase without rigorous testing.\n  Enabled: false\n\nStyle/NilLambda:\n  Enabled: true\n\nStyle/RedundantArgument:\n  Enabled: false\n\nStyle/RedundantAssignment:\n  Description: >-\n    Disabled as it sometimes improves the readability of code having an explicitly named\n    response object, it also makes it easier to put a breakpoint between the assignment\n    and return expression\n  Enabled: false\n\nStyle/SwapValues:\n  Enabled: false\n\nLayout/ModuleHashOnNewLine:\n  Enabled: true\n\nLayout/ModuleHashValuesOnSameLine:\n  Enabled: true\n\nLayout/ModuleDescriptionIndentation:\n  Enabled: true\n\nLint/DetectInvalidPackDirectives:\n  Enabled: true\n\nLint/ModuleDisclosureDateFormat:\n  Enabled: true\n\nLint/ModuleDisclosureDatePresent:\n  Include:\n    # Only exploits require disclosure dates, but they can be present in auxiliary modules etc.\n    - 'modules/exploits/**/*'\n\nLint/ModuleEnforceNotes:\n  Include:\n    # Only exploits and auxiliary modules require SideEffects to be listed.\n    - 'modules/exploits/**/*'\n    - 'modules/auxiliary/**/*'\n    - 'modules/post/**/*'\n\nLint/DeprecatedGemVersion:\n  Enabled: true\n  Exclude:\n    - 'metasploit-framework.gemspec'\n\nMetrics/ModuleLength:\n  Description: 'Most Metasploit modules are quite large. This is ok.'\n  Enabled: false\n\nMetrics/ClassLength:\n  Description: 'Most Metasploit classes are quite large. This is ok.'\n  Enabled: false\n\nStyle/ClassAndModuleChildren:\n  Enabled: false\n  Description: 'Forced nesting is harmful for grepping and general code comprehension'\n\nMetrics/AbcSize:\n  Enabled: false\n  Description: 'This is often a red-herring'\n\nMetrics/CyclomaticComplexity:\n  Enabled: false\n  Description: 'This is often a red-herring'\n\nMetrics/PerceivedComplexity:\n  Enabled: false\n  Description: 'This is often a red-herring'\n\nMetrics/BlockNesting:\n  Description: >-\n    This is a good rule to follow, but will cause a lot of overhead introducing this rule.\n  Enabled: false\n\nMetrics/ParameterLists:\n  Description: >-\n    This is a good rule to follow, but will cause a lot of overhead introducing this rule.\n    Increasing the max count for now\n  Max: 8\n\nStyle/TernaryParentheses:\n  Enabled: false\n  Description: 'This outright produces bugs'\n\nStyle/FrozenStringLiteralComment:\n  Enabled: false\n  Description: 'We cannot support this yet without a lot of things breaking'\n\nStyle/MutableConstant:\n  Enabled: false\n  Description: 'We cannot support this yet without a lot of things breaking'\n\nStyle/RedundantReturn:\n  Description: 'This often looks weird when mixed with actual returns, and hurts nothing'\n  Enabled: false\n\nNaming/HeredocDelimiterNaming:\n  Description: >-\n    Could be enabled in isolation with additional effort.\n  Enabled: false\n\nNaming/AccessorMethodName:\n  Description: >-\n    Disabled for now, as this naming convention is used in a lot of core library files.\n    Could be enabled in isolation with additional effort.\n  Enabled: false\n\nNaming/ConstantName:\n  Description: >-\n    Disabled for now, Metasploit is unfortunately too inconsistent with its naming to introduce\n    this. Definitely possible to enforce this in the future if need be.\n\n    Examples:\n        ManualRanking, LowRanking, etc.\n        NERR_ClientNameNotFound\n        HttpFingerprint\n        CachedSize\n        ErrUnknownTransferId\n  Enabled: false\n\nNaming/VariableNumber:\n  Description: 'To make it easier to use reference code, disable this cop'\n  Enabled: false\n\nStyle/NumericPredicate:\n  Description: 'This adds no efficiency nor space saving'\n  Enabled: false\n\nStyle/EvenOdd:\n  Description: 'This adds no efficiency nor space saving'\n  Enabled: false\n\nStyle/FloatDivision:\n  Description: 'Not a safe rule to run on Metasploit without manual verification as the right hand side may be a string'\n  Enabled: false\n\nStyle/FormatString:\n  Description: 'Not a safe rule to run on Metasploit without manual verification that the format is not redefined/shadowed'\n  Enabled: false\n\nStyle/Documentation:\n  Enabled: true\n  Description: 'Most Metasploit modules do not have class documentation.'\n  Exclude:\n    - 'modules/**/*'\n    - 'test/modules/**/*'\n    - 'spec/file_fixtures/modules/**/*'\n\nLayout/FirstArgumentIndentation:\n  Enabled: true\n  EnforcedStyle: consistent\n  Description: 'Useful for the module hash to be indented consistently'\n\nLayout/ArgumentAlignment:\n  Enabled: true\n  EnforcedStyle: with_first_argument\n  Description: 'Useful for the module hash to be indented consistently'\n\nLayout/FirstHashElementIndentation:\n  Enabled: true\n  EnforcedStyle: consistent\n  Description: 'Useful for the module hash to be indented consistently'\n\nLayout/FirstHashElementLineBreak:\n  Enabled: true\n  Description: 'Enforce consistency by breaking hash elements on to new lines'\n\nLayout/SpaceInsideArrayLiteralBrackets:\n  Enabled: false\n  Description: 'Almost all module metadata have space in brackets'\n\nStyle/GuardClause:\n  Enabled: false\n  Description: 'This often introduces bugs in tested code'\n\nStyle/EmptyLiteral:\n  Enabled: false\n  Description: 'This looks awkward when you mix empty and non-empty literals'\n\nStyle/NegatedIf:\n  Enabled: false\n  Description: 'This often introduces bugs in tested code'\n\nStyle/ConditionalAssignment:\n  Enabled: false\n  Description: 'This is confusing for folks coming from other languages'\n\nStyle/Encoding:\n  Description: 'We prefer binary to UTF-8.'\n  Enabled: false\n\nStyle/ParenthesesAroundCondition:\n  Enabled: false\n  Description: 'This is used in too many places to discount, especially in ported code. Has little effect'\n\nStyle/StringConcatenation:\n  Enabled: false\n  Description: >-\n    Disabled for now as it changes escape sequences when auto corrected:\n      https://github.com/rubocop/rubocop/issues/9543\n\n    Additionally seems to break with multiline string concatenation with trailing comments, example:\n      payload = \"\\x12\" + # Size\n                \"\\x34\" + # eip\n                \"\\x56\"   # etc\n    With `rubocop -A` this will become:\n      payload = \"\\u00124V\"    # etc\n\nStyle/TrailingCommaInArrayLiteral:\n  Enabled: false\n  Description: 'This is often a useful pattern, and is actually required by other languages. It does not hurt.'\n\nLayout/LineLength:\n  Description: >-\n    Metasploit modules often pattern match against very\n    long strings when identifying targets.\n  Enabled: false\n\nMetrics/BlockLength:\n  Enabled: true\n  Description: >-\n    While the style guide suggests 10 lines, exploit definitions\n    often exceed 200 lines.\n  Max: 300\n\nMetrics/MethodLength:\n  Enabled: true\n  Description: >-\n    While the style guide suggests 10 lines, exploit definitions\n    often exceed 200 lines.\n  Max: 300\n\nNaming/MethodParameterName:\n  Enabled: true\n  Description: 'Whoever made this requirement never looked at crypto methods, IV'\n  MinNameLength: 2\n\nNaming/PredicateName:\n  Enabled: true\n  # Current methods that break the rule, so that we don't add additional methods that break the convention\n  AllowedMethods:\n    - has_additional_info?\n    - has_advanced_options?\n    - has_auth\n    - has_auto_target?\n    - has_bad_activex?\n    - has_badchars?\n    - has_chars?\n    - has_check?\n    - has_command?\n    - has_content_type_extension?\n    - has_datastore_cred?\n    - has_evasion_options?\n    - has_fatal_errors?\n    - has_fields\n    - has_files?\n    - has_flag?\n    - has_function_name?\n    - has_gcc?\n    - has_h2_headings\n    - has_input_name?\n    - has_j_security_check?\n    - has_key?\n    - has_match?\n    - has_module\n    - has_object_ref\n    - has_objects_list\n    - has_options?\n    - has_page?\n    - has_passphrase?\n    - has_pid?\n    - has_pkt_line_data?\n    - has_prereqs?\n    - has_privacy_waiver?\n    - has_privates?\n    - has_protected_mode_prompt?\n    - has_proxy?\n    - has_read_data?\n    - has_ref?\n    - has_required_args\n    - has_required_module_options?\n    - has_requirements\n    - has_rop?\n    - has_s_flag?\n    - has_service_cred?\n    - has_subscriber?\n    - has_subtree?\n    - has_text\n    - has_tlv?\n    - has_u_flag?\n    - has_users?\n    - has_vuln?\n    - has_waiver?\n    - have_auth_error?\n    - have_powershell?\n    - is_accessible?\n    - is_admin?\n    - is_alive?\n    - is_alpha_web_server?\n    - is_android?\n    - is_app_binom3?\n    - is_app_carlogavazzi?\n    - is_app_cnpilot?\n    - is_app_epaduo?\n    - is_app_epmp1000?\n    - is_app_infovista?\n    - is_app_ironport?\n    - is_app_metweblog?\n    - is_app_oilom?\n    - is_app_openmind?\n    - is_app_popad?\n    - is_app_radware?\n    - is_app_rfreader?\n    - is_app_sentry?\n    - is_app_sevone?\n    - is_app_splunk?\n    - is_app_ssl_vpn?\n    - is_array_type?\n    - is_auth_required?\n    - is_author_blacklisted?\n    - is_badchar\n    - is_base64?\n    - is_bind?\n    - is_cached_size_accurate?\n    - is_cgi_enabled?\n    - is_cgi_exploitable?\n    - is_check_interesting?\n    - is_child_of?\n    - is_clr_enabled\n    - is_connect?\n    - is_dlink?\n    - is_dn?\n    - is_dynamic?\n    - is_error_code\n    - is_exception?\n    - is_exploit_module?\n    - is_exploitable?\n    - is_fqdn?\n    - is_glob?\n    - is_groupwise?\n    - is_guest_mode_enabled?\n    - is_hash_from_empty_pwd?\n    - is_high_integrity?\n    - is_hostname?\n    - is_ie?\n    - is_imc?\n    - is_imc_som?\n    - is_in_admin_group?\n    - is_interface?\n    - is_ip_targeted?\n    - is_key_wanted?\n    - is_leaf?\n    - is_local?\n    - is_logged_in?\n    - is_loggedin\n    - is_loopback_address?\n    - is_mac?\n    - is_match\n    - is_md5_format?\n    - is_module_arch?\n    - is_module_platform?\n    - is_module_wanted?\n    - is_multi_platform_exploit?\n    - is_not_null?\n    - is_null_pointer\n    - is_null_pointer?\n    - is_num?\n    - is_num_type?\n    - is_numeric\n    - is_online?\n    - is_parseable\n    - is_pass_ntlm_hash?\n    - is_passwd_method?\n    - is_password_required?\n    - is_payload_compatible?\n    - is_payload_platform_compatible?\n    - is_pointer_type?\n    - is_pri_key?\n    - is_proficy?\n    - is_rdp_up\n    - is_remote_exploit?\n    - is_resource_taken?\n    - is_rf?\n    - is_rmi?\n    - is_root?\n    - is_routable?\n    - is_running?\n    - is_scan_complete\n    - is_secure_admin_disabled?\n    - is_session_type?\n    - is_signature_correct?\n    - is_single_object?\n    - is_struct_type?\n    - is_supermicro?\n    - is_superuser?\n    - is_sws?\n    - is_system?\n    - is_system_user?\n    - is_target?\n    - is_target_suitable?\n    - is_trial_enabled?\n    - is_trustworthy\n    - is_uac_enabled?\n    - is_url_alive\n    - is_usable?\n    - is_uuid?\n    - is_valid?\n    - is_valid_bus?\n    - is_valid_snmp_value\n    - is_value_wanted?\n    - is_version_compat?\n    - is_version_tested?\n    - is_vmware?\n    - is_vul\n    - is_vulnerable?\n    - is_warbird?\n    - is_windows?\n    - is_writable\n    - is_writable?\n    - is_x86?\n    - is_zigbee_hwbridge_session?\n\n# %q() is super useful for long strings split over multiple lines and\n# is very common in module constructors for things like descriptions\nStyle/RedundantPercentQ:\n  Enabled: false\n\nStyle/NumericLiterals:\n  Enabled: false\n  Description: 'This often hurts readability for exploit-ish code.'\n\nLayout/FirstArrayElementLineBreak:\n  Enabled: true\n  Description: 'This cop checks for a line break before the first element in a multi-line array.'\n\nLayout/FirstArrayElementIndentation:\n  Enabled: true\n  EnforcedStyle: consistent\n  Description: 'Useful to force values within the register_options array to have sane indentation'\n\nLayout/EmptyLinesAroundClassBody:\n  Enabled: false\n  Description: 'these are used to increase readability'\n\nLayout/EmptyLinesAroundMethodBody:\n  Enabled: true\n\nLayout/ExtraSpacingWithBinDataIgnored:\n  Description: 'Do not use unnecessary spacing.'\n  Enabled: true\n  # When true, allows most uses of extra spacing if the intent is to align\n  # things with the previous or next line, not counting empty lines or comment\n  # lines.\n  AllowForAlignment: false\n  # When true, allows things like 'obj.meth(arg)  # comment',\n  # rather than insisting on 'obj.meth(arg) # comment'.\n  # If done for alignment, either this OR AllowForAlignment will allow it.\n  AllowBeforeTrailingComments: true\n  # When true, forces the alignment of `=` in assignments on consecutive lines.\n  ForceEqualSignAlignment: false\n\nStyle/For:\n  Enabled: false\n  Description: 'if a module is written with a for loop, it cannot always be logically replaced with each'\n\nStyle/WordArray:\n  Enabled: false\n  Description: 'Metasploit prefers consistent use of []'\n\nStyle/IfUnlessModifier:\n  Enabled: false\n  Description: 'This style might save a couple of lines, but often makes code less clear'\n\nStyle/PercentLiteralDelimiters:\n  Description: 'Use `%`-literal delimiters consistently.'\n  Enabled: true\n  # Specify the default preferred delimiter for all types with the 'default' key\n  # Override individual delimiters (even with default specified) by specifying\n  # an individual key\n  PreferredDelimiters:\n    default: ()\n    '%i': '[]'\n    '%I': '[]'\n    '%r': '{}'\n    '%w': '[]'\n    '%W': '[]'\n    '%q': '{}' # Chosen for module descriptions as () are frequently used characters, whilst {} are rarely used\n  VersionChanged: '0.48.1'\n\nStyle/RedundantBegin:\n  Enabled: true\n\nStyle/SafeNavigation:\n  Description: >-\n    This cop transforms usages of a method call safeguarded by\n    a check for the existence of the object to\n    safe navigation (`&.`).\n\n    This has been disabled as in some scenarios it produced invalid code, and disobeyed the 'AllowedMethods'\n    configuration.\n  Enabled: false\n\nStyle/UnpackFirst:\n  Description: >-\n    Disabling to make it easier to copy/paste `unpack('h*')` expressions from code\n    into a debugging REPL.\n  Enabled: false\n"
        },
        {
          "name": ".ruby-gemset",
          "type": "blob",
          "size": 0.02,
          "content": "metasploit-framework\n"
        },
        {
          "name": ".ruby-version",
          "type": "blob",
          "size": 0.01,
          "content": "3.2.5\n"
        },
        {
          "name": ".simplecov",
          "type": "blob",
          "size": 1.49,
          "content": "# RM_INFO is set when using Rubymine.  In Rubymine, starting SimpleCov is\n# controlled by running with coverage, so don't explicitly start coverage (and\n# therefore generate a report) when in Rubymine.  This _will_ generate a report\n# whenever `rake spec` is run.\nunless ENV['RM_INFO']\n\tSimpleCov.start\nend\n\nSimpleCov.configure do\n  # ignore this file\n\tadd_filter '.simplecov'\n\n\t#\n\t# Changed Files in Git Group\n\t# @see http://fredwu.me/post/35625566267/simplecov-test-coverage-for-changed-files-only\n\t#\n\n\tuntracked = `git ls-files --exclude-standard --others`\n\tunstaged = `git diff --name-only`\n\tstaged = `git diff --name-only --cached`\n\tall = untracked + unstaged + staged\n\tchanged_filenames = all.split(\"\\n\")\n\n\tadd_group 'Changed' do |source_file|\n\t\tchanged_filenames.detect { |changed_filename|\n\t\t\tsource_file.filename.end_with?(changed_filename)\n\t\t}\n\tend\n\n\t#\n\t# Framework (msf) related groups\n\t#\n\n\tadd_group 'Metasploit Framework', 'lib/msf'\n\tadd_group 'Metasploit Framework (Base)', 'lib/msf/base'\n\tadd_group 'Metasploit Framework (Core)', 'lib/msf/core'\n\n\t#\n\t# Other library groups\n\t#\n\n\tadd_group 'Metasm', 'lib/metasm'\n\tadd_group 'PacketFu', 'lib/packetfu'\n\tadd_group 'Rex', 'lib/rex'\n\tadd_group 'RKelly', 'lib/rkelly'\n\tadd_group 'Ruby Mysql', 'lib/rbmysql'\n\tadd_group 'Ruby Postgres', 'lib/postgres'\n\tadd_group 'SNMP', 'lib/snmp'\n\tadd_group 'Zip', 'lib/zip'\n\n\t#\n\t# Specs are reported on to ensure that all examples are being run and all\n\t# lets, befores, afters, etc are being used.\n\t#\n\n\tadd_group 'Specs', 'spec'\nend\n"
        },
        {
          "name": ".snyk",
          "type": "blob",
          "size": 0.35,
          "content": "version: v1.25.0\nignore: {}\npatch: {}\nexclude:\n  global:\n    # exclude unit tests which contain hard coded passwords and encrypting keys for testing purposes.\n    - spec/\n    # exclude the source code to local exploits and utilities which have to be written in a particular way to exploit the vulnerabilities that we're targeting.\n    - external/source/\n"
        },
        {
          "name": ".solargraph.yml",
          "type": "blob",
          "size": 0.41,
          "content": "---\ninclude:\n- \"**/*.rb\"\nexclude:\n- spec/**/*\n- test/**/*\n- vendor/**/*\n- \".bundle/**/*\"\n- modules/**/*\n- data/**/*\n- db/**/*\n- external/**/*\n- plugins/**/*\n- scripts/**/* # Some of this is old and may not need indexing???\nrequire: []\ndomains: []\nreporters:\n- rubocop\n- require_not_found\nformatter:\n  rubocop:\n    cops: safe\n    except: []\n    only: []\n    extra_args: []\nrequire_paths: []\nplugins: []\nmax_files: 0\n"
        },
        {
          "name": ".yardopts",
          "type": "blob",
          "size": 0.19,
          "content": "--protected\n--exclude samples/\n--exclude \\.ut\\.rb/\n--exclude \\.ts\\.rb/\n--files CONTRIBUTING.md,COPYING,LICENSE\napp/**/*.rb\nlib/msf/**/*.rb\nlib/metasploit/**/*.rb\nlib/rex/**/*.rb\nplugins/**/*.rb\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.45,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating\ndocumentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic\n  addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to\nfairly and consistently applying these principles to every aspect of managing\nthis project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project maintainers at msfdev@metasploit.com. If\nthe incident involves a committer, you may report it directly to\ncaitlin_condon@rapid7.com or todb@metasploit.com.\n\nAll complaints will be reviewed and investigated and will result in a\nresponse that is deemed necessary and appropriate to the circumstances.\nMaintainers are obligated to maintain confidentiality with regard to the\nreporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.3.0, available at\n[http://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.2,
          "content": "# Contributing to Metasploit\nThank you for your interest in making Metasploit -- and therefore, the\nworld -- a better place!  Before you get started, please review our [Code of Conduct](./CODE_OF_CONDUCT.md). This helps us ensure our community is positive and supportive for everyone involved.\n\n## Code Free Contributions\nBefore we get into the details of contributing code, you should know there are multiple ways you can add to Metasploit without any coding experience:\n\n - You can [submit bugs and feature requests](https://github.com/rapid7/metasploit-framework/issues/new/choose) with detailed information about your issue or idea:\n \t- If you'd like to propose a feature, describe what you'd like to see. Mock ups of console views would be great.\n \t- If you're reporting a bug, please be sure to include the expected behaviour, the observed behaviour, and steps to reproduce the problem. Resource scripts, console copy-pastes, and any background on the environment you encountered the bug in would be appreciated. More information can be found [below](#bug-reports).\n - [Help fellow users with open issues]. This can require technical knowledge, but you can also get involved in conversations about bug reports and feature requests. This is a great way to get involved without getting too overwhelmed!\n - [Help fellow committers test recently submitted pull requests](https://github.com/rapid7/metasploit-framework/pulls). Again this can require some technical skill, but by pulling down a pull request and testing it, you can help ensure our new code contributions for stability and quality.\n - [Report a security vulnerability in Metasploit itself] to Rapid7. If you see something you think makes Metasploit vulnerable to an attack, let us know!\n - Add [module documentation]. New documentation is always needed and cleaning up existing documents is just as important! If you're a non-native english speaker, you can help by replacing any ambiguous idioms, metaphors, or unclear language that might make our documentation hard to understand.\n\n\n## Code Contributions\nFor those of you who are looking to add code to Metasploit, your first step is to set up a [development environment]. Once that's done, we recommend beginners start by adding a [proof-of-concept exploit from ExploitDB,](https://www.exploit-db.com/search?verified=true&hasapp=true&nomsf=true) as a new module to the Metasploit framework. These exploits have been verified as recreatable and their ExploitDB page includes a copy of the exploitable software. This makes testing your module locally much simpler, and most importantly the exploits don't have an existing Metasploit implementation. ExploitDB can be slow to update however, so please double check that there isn't an existing module before beginning development! If you're certain the exploit you've chosen isn't already in Metasploit, read our [writing an exploit guide](https://docs.metasploit.com/docs/development/developing-modules/guides/get-started-writing-an-exploit.html). It will help you to get started and avoid some common mistakes.\n\nOnce you have finished your new module and tested it locally to ensure it's working as expected, check out our [guide for accepting modules](https://docs.metasploit.com/docs/development/maintainers/process/guidelines-for-accepting-modules-and-enhancements.html#module-additions). This will give you a good idea of how to clean up your code so that it's likely to get accepted.\n\nFinally, follow our short list of do's and don'ts below to make sure your valuable contributions actually make it into Metasploit's master branch! We try to consider all our pull requests fairly and in detail, but if you do not follow these rules, your contribution\nwill be closed. We need to ensure the code we're adding to master is written to a high standard.\n\n\n### Code Contribution Do's & Don'ts:\n\nKeeping the following in mind gives your contribution the best chance of landing!\n\n#### <u>Pull Requests</u>\n**Pull request [PR#9966] is a good example to follow.**\n\n* **Do** create a [topic branch] to work on instead of working directly on `master`. This helps to:\n\t*  Protect the process.\n\t* Ensures users are aware of commits on the branch being considered for merge.\n\t* Allows for a location for more commits to be offered without mingling with other contributor changes.\n\t* Allows contributors to make progress while a PR is still being reviewed.\n* **Do** follow the [50/72 rule] for Git commit messages.\n* **Do** write \"WIP\" on your PR and/or open a [draft PR] if submitting **working** yet unfinished code.\n* **Do** target your pull request to the **master branch**.\n* **Do** specify a descriptive title to make searching for your pull request easier.\n* **Do** include [console output], especially for effects that can be witnessed in the  `msfconsole`.\n* **Do** list [verification steps] so your code is testable.\n* **Do** [reference associated issues] in your pull request description.\n* **Don't** leave your pull request description blank.\n* **Don't** abandon your pull request. Being responsive helps us land your code faster.\n* **Don't** post questions in older closed PRs.\n\n#### <u>New Modules</u>\n* **Do** license your code as BSD 3-clause, BSD 2-clause, or MIT.\n* **Do** stick to the [Ruby style guide] and use [Rubocop] to find common style issues.\n* **Do** set up `msftidy` to fix any errors or warnings that come up as a [pre-commit hook].\n* **Do** use the many module mixin [API]s.\n* **Do** include instructions on how to setup the vulnerable environment or software.\n* **Do** include [Module Documentation] showing sample run-throughs.\n* **Do** ask cve@rapid7.com for a CVE ID if this describes a new vulnerability (remember to mention your PR number!)\n* **Don't** include more than one module per pull request.\n* **Don't** submit new [scripts].  Scripts are shipped as examples for automating local tasks, and anything \"serious\" can be done with post modules and local exploits.\n\n#### <u>Library Code</u>\n* **Do** write [RSpec] tests - even the smallest change in a library can break existing code.\n* **Do** follow [Better Specs] - it's like the style guide for specs.\n* **Do** write [YARD] documentation - this makes it easier for people to use your code.\n* **Don't** fix a lot of things in one pull request. Small fixes are easier to validate.\n\n#### <u>Bug Fixes</u>\n* **Do** include reproduction steps in the form of verification steps.\n* **Do** link to any corresponding [Issues] in the format of `See #1234` in your commit description.\n\n## Bug Reports\n\nPlease report vulnerabilities in Rapid7 software directly to security@rapid7.com. For more on our disclosure policy and Rapid7's approach to coordinated disclosure, [head over here](https://www.rapid7.com/security).\n\nWhen reporting Metasploit issues:\n* **Do** write a detailed description of your bug and use a descriptive title.\n* **Do** include reproduction steps, stack traces, and anything that might help us fix your bug.\n* **Don't** file duplicate reports; search for your bug before filing a new report.\n* **Don't** attempt to report issues on a closed PR.\n\nIf you need some more guidance, talk to the main body of open source contributors over on our\n[Metasploit Slack] or [#metasploit on Freenode IRC].\n\nFinally, **thank you** for taking the few moments to read this far! You're already way ahead of the\ncurve, so keep it up!\n\n[Code of Conduct]:https://docs.metasploit.com/docs/code-of-conduct.html\n[Submit bugs and feature requests]:http://r-7.co/MSF-BUGv1\n[Help fellow users with open issues]:https://github.com/rapid7/metasploit-framework/issues\n[help fellow committers test recently submitted pull requests]:https://github.com/rapid7/metasploit-framework/pulls\n[Report a security vulnerability in Metasploit itself]:https://www.rapid7.com/disclosure.jsp\n[development environment]:http://r-7.co/MSF-DEV\n[proof-of-concept exploits]:https://www.exploit-db.com/search?verified=true&hasapp=true&nomsf=true\n[Ruby style guide]:https://github.com/bbatsov/ruby-style-guide\n[Rubocop]:https://rubygems.org/search?query=rubocop\n[50/72 rule]:http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n[topic branch]:http://git-scm.com/book/en/Git-Branching-Branching-Workflows#Topic-Branches\n[draft PR]:https://help.github.com/en/articles/about-pull-requests#draft-pull-requests\n[console output]:https://docs.github.com/en/free-pro-team@latest/github/writing-on-github/creating-and-highlighting-code-blocks#fenced-code-blocks\n[verification steps]:https://docs.github.com/en/free-pro-team@latest/github/writing-on-github/basic-writing-and-formatting-syntax#task-lists\n[reference associated issues]:https://github.com/blog/1506-closing-issues-via-pull-requests\n[PR#9966]:https://github.com/rapid7/metasploit-framework/pull/9966\n[pre-commit hook]:https://github.com/rapid7/metasploit-framework/blob/master/tools/dev/pre-commit-hook.rb\n[API]:https://rapid7.github.io/metasploit-framework/api\n[module documentation]:https://docs.metasploit.com/docs/using-metasploit/basics/module-documentation.html\n[scripts]:https://github.com/rapid7/metasploit-framework/tree/master/scripts\n[RSpec]:http://rspec.info\n[Better Specs]:http://www.betterspecs.org/\n[YARD]:http://yardoc.org\n[Issues]:https://github.com/rapid7/metasploit-framework/issues\n[Metasploit Slack]:https://www.metasploit.com/slack\n[#metasploit on Freenode IRC]:http://webchat.freenode.net/?channels=%23metasploit&uio=d4\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.81,
          "content": "Copyright (C) 2006-2020, Rapid7, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n    * Neither the name of Rapid7, Inc. nor the names of its contributors\n    may be used to endorse or promote products derived from this software\n    without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n================================================================================\n\nThe Metasploit Framework is provided under the 3-clause BSD license above.\n\nThe copyright on this package is held by Rapid7, Inc.\n\nThis license does not apply to several components within the Metasploit\nFramework source tree.  For more details see the LICENSE file.\n\n"
        },
        {
          "name": "CURRENT.md",
          "type": "blob",
          "size": 1.05,
          "content": "Active Metasploit 5 development will sometimes push aggressive changes.\nIntegrations with 3rd-party tools, as well as general usage, may change quickly\nfrom day to day. Some of the steps for dealing with major changes will be\ndocumented here. We will continue to maintain the Metasploit 4.x branch until\nMetasploit 5.0 is released.\n\n**2018/01/17 - [internal] module cache reworked to not store metadata in PostgreSQL**\n\nMetasploit no longer stores module metadata in a PostgreSQL database, instead\nstoring it in a cache file in your local ~/.msf4 config directory. This has a\nnumber of advantages:\n\n * Fast searches whether you have the database enabled or not (no more slow search mode)\n * Faster load time for msfconsole, the cache loads more quickly\n * Private module data is not uploaded to a shared database, no collisions\n * Adding or deleting modules no longer displays file-not-found error messages on start in msfconsole\n * Reduced memory consumption\n\nCode that reads directly from the Metasploit database for module data will need\nto use the new module search API.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.2,
          "content": "FROM ruby:3.2.5-alpine3.20 AS builder\nLABEL maintainer=\"Rapid7\"\n\nARG BUNDLER_CONFIG_ARGS=\"set no-cache 'true' set system 'true' set without 'development test coverage'\"\nARG BUNDLER_FORCE_CLEAN=\"true\"\nENV APP_HOME=/usr/src/metasploit-framework\nENV TOOLS_HOME=/usr/src/tools\nENV BUNDLE_IGNORE_MESSAGES=\"true\"\nWORKDIR $APP_HOME\n\nCOPY Gemfile* metasploit-framework.gemspec Rakefile $APP_HOME/\nCOPY lib/metasploit/framework/version.rb $APP_HOME/lib/metasploit/framework/version.rb\nCOPY lib/metasploit/framework/rails_version_constraint.rb $APP_HOME/lib/metasploit/framework/rails_version_constraint.rb\nCOPY lib/msf/util/helper.rb $APP_HOME/lib/msf/util/helper.rb\n\nRUN apk add --no-cache \\\n      autoconf \\\n      bash \\\n      bison \\\n      build-base \\\n      curl \\\n      ruby-dev \\\n      openssl-dev \\\n      readline-dev \\\n      sqlite-dev \\\n      postgresql-dev \\\n      libpcap-dev \\\n      libxml2-dev \\\n      libxslt-dev \\\n      yaml-dev \\\n      zlib-dev \\\n      ncurses-dev \\\n      git \\\n      go \\\n    && echo \"gem: --no-document\" > /etc/gemrc \\\n    && gem update --system \\\n    && bundle config $BUNDLER_CONFIG_ARGS \\\n    && bundle install --jobs=8 \\\n    && if [ \"${BUNDLER_FORCE_CLEAN}\" == \"true\" ]; then \\\n         bundle clean --force; \\\n       fi \\\n    # temp fix for https://github.com/bundler/bundler/issues/6680\n    && rm -rf /usr/local/bundle/cache \\\n    # needed so non root users can read content of the bundle\n    && chmod -R a+r /usr/local/bundle\n\nENV GO111MODULE=off\nRUN mkdir -p $TOOLS_HOME/bin && \\\n    cd $TOOLS_HOME/bin && \\\n    curl -O https://dl.google.com/go/go1.21.1.src.tar.gz && \\\n    tar -zxf go1.21.1.src.tar.gz && \\\n    rm go1.21.1.src.tar.gz && \\\n    cd go/src && \\\n    ./make.bash\n\nFROM ruby:3.2.5-alpine3.20\nLABEL maintainer=\"Rapid7\"\nARG TARGETARCH\n\nENV APP_HOME=/usr/src/metasploit-framework\nENV TOOLS_HOME=/usr/src/tools\nENV NMAP_PRIVILEGED=\"\"\nENV METASPLOIT_GROUP=metasploit\n\n# used for the copy command\nRUN addgroup -S $METASPLOIT_GROUP\n\nRUN apk add --no-cache curl bash sqlite-libs nmap nmap-scripts nmap-nselibs \\\n    postgresql-libs python3 py3-pip py3-impacket py3-requests ncurses libcap su-exec alpine-sdk \\\n    openssl-dev nasm\nRUN\\\n    if [ \"${TARGETARCH}\" = \"arm64\" ];\\\n\tthen apk add --no-cache gcc musl-dev python3-dev libffi-dev gcompat;\\\n    else apk add --no-cache mingw-w64-gcc;\\\n    fi\n\nRUN /usr/sbin/setcap cap_net_raw,cap_net_bind_service=+eip $(which ruby)\nRUN /usr/sbin/setcap cap_net_raw,cap_net_bind_service=+eip $(which nmap)\n\nCOPY --from=builder /usr/local/bundle /usr/local/bundle\nRUN chown -R root:metasploit /usr/local/bundle\nCOPY . $APP_HOME/\nCOPY --from=builder $TOOLS_HOME $TOOLS_HOME\nRUN chown -R root:metasploit $APP_HOME/\nRUN chmod 664 $APP_HOME/Gemfile.lock\nRUN gem update --system\nRUN cp -f $APP_HOME/docker/database.yml $APP_HOME/config/database.yml\n\nENV GOPATH=$TOOLS_HOME/go\nENV GOROOT=$TOOLS_HOME/bin/go\nENV PATH=${PATH}:${GOPATH}/bin:${GOROOT}/bin\n\nWORKDIR $APP_HOME\n\n# we need this entrypoint to dynamically create a user\n# matching the hosts UID and GID so we can mount something\n# from the users home directory. If the IDs don't match\n# it results in access denied errors.\nENTRYPOINT [\"docker/entrypoint.sh\"]\n\nCMD [\"./msfconsole\", \"-r\", \"docker/msfconsole.rc\", \"-y\", \"$APP_HOME/config/database.yml\"]\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 1.57,
          "content": "source 'https://rubygems.org'\n# Add default group gems to `metasploit-framework.gemspec`:\n#   spec.add_runtime_dependency '<name>', [<version requirements>]\ngemspec name: 'metasploit-framework'\n\n# separate from test as simplecov is not run on travis-ci\ngroup :coverage do\n  # code coverage for tests\n  gem 'simplecov', '0.18.2'\nend\n\ngroup :development do\n  # Markdown formatting for yard\n  gem 'redcarpet'\n  # generating documentation\n  gem 'yard'\n  # for development and testing purposes\n  gem 'pry-byebug'\n  # Ruby Debugging Library - rebuilt and included by default from Ruby 3.1 onwards.\n  # Replaces the old lib/debug.rb and provides more features.\n  gem 'debug', '>= 1.0.0'\n  # module documentation\n  gem 'octokit'\n  # memory profiling\n  gem 'memory_profiler'\n  # cpu profiling\n  gem 'ruby-prof', '1.4.2'\n  # Metasploit::Aggregator external session proxy\n  # disabled during 2.5 transition until aggregator is available\n  # gem 'metasploit-aggregator'\nend\n\ngroup :development, :test do\n  # running documentation generation tasks and rspec tasks\n  gem 'rake'\n  # Define `rake spec`.  Must be in development AND test so that its available by default as a rake test when the\n  # environment is development\n  gem 'rspec-rails'\n  gem 'rspec-rerun'\n  # Required during CI as well local development\n  gem 'rubocop'\nend\n\ngroup :test do\n  # automatically include factories from spec/factories\n  gem 'test-prof'\n  gem 'factory_bot_rails'\n  # Make rspec output shorter and more useful\n  gem 'fivemat'\n  # rspec formatter for acceptance tests\n  gem 'allure-rspec'\n  # Manipulate Time.now in specs\n  gem 'timecop'\nend\n\n"
        },
        {
          "name": "Gemfile.local.example",
          "type": "blob",
          "size": 1.46,
          "content": "##\n# Example Gemfile.local file for Metasploit Framework\n#\n# The Gemfile.local file provides a way to use other gems that are not\n# included in the standard Gemfile provided with Metasploit.\n# This filename is included in Metasploit's .gitignore file, so local changes\n# to this file will not accidentally show up in future pull requests. This\n# example Gemfile.local includes all gems in Gemfile using instance_eval.\n# It also creates a new bundle group, 'local', to hold additional gems.\n#\n# This file will not be used by default within the framework. As such, one\n# must first install the custom Gemfile.local with bundle:\n#   bundle install --gemfile Gemfile.local\n#\n# Note that msfupdate does not consider Gemfile.local when updating the\n# framework. If it is used, it may be necessary to run the above bundle\n# command after the update.\n#\n###\n\n# Include the Gemfile included with the framework. This is very\n# important for picking up new gem dependencies.\nmsf_gemfile = File.join(File.dirname(__FILE__), 'Gemfile')\nif File.readable?(msf_gemfile)\n  instance_eval(File.read(msf_gemfile))\nend\n\n# Create a custom group\ngroup :local do\n  # This is the first way to add a non-standard gem file dependency in.\n  gem 'lab', '~> 0.2.7'\n  # And this is another way that references local directories to find and compile the gem file as needed.\n  # This is the optimal method for testing Gem PRs such as those in rex-text or rex-powershell.\n  gem 'rex-powershell', path: '../rex-powershell'\nend\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 13.23,
          "content": "PATH\n  remote: .\n  specs:\n    metasploit-framework (6.4.45)\n      aarch64\n      abbrev\n      actionpack (~> 7.0.0)\n      activerecord (~> 7.0.0)\n      activesupport (~> 7.0.0)\n      aws-sdk-ec2\n      aws-sdk-ec2instanceconnect\n      aws-sdk-iam\n      aws-sdk-s3\n      aws-sdk-ssm\n      base64\n      bcrypt\n      bcrypt_pbkdf\n      benchmark\n      bigdecimal\n      bootsnap\n      bson\n      chunky_png\n      csv\n      dnsruby\n      drb\n      ed25519\n      elftools\n      em-http-request\n      eventmachine\n      faker\n      faraday (= 2.7.11)\n      faraday-retry\n      faye-websocket\n      ffi (< 1.17.0)\n      fiddle\n      filesize\n      getoptlong\n      hrr_rb_ssh-ed25519\n      http-cookie\n      irb (~> 1.7.4)\n      jsobfu\n      json\n      metasm\n      metasploit-concern\n      metasploit-credential\n      metasploit-model\n      metasploit-payloads (= 2.0.189)\n      metasploit_data_models\n      metasploit_payloads-mettle (= 1.0.35)\n      mqtt\n      msgpack (~> 1.6.0)\n      mutex_m\n      nessus_rest\n      net-imap\n      net-ldap\n      net-sftp\n      net-smtp\n      net-ssh\n      network_interface\n      nexpose\n      nokogiri\n      octokit (~> 4.0)\n      openssl-ccm\n      openvas-omp\n      ostruct\n      packetfu\n      patch_finder\n      pcaprub\n      pdf-reader\n      pg\n      puma\n      railties\n      rasn1 (= 0.13.0)\n      rb-readline\n      recog\n      redcarpet\n      reline\n      rex-arch\n      rex-bin_tools\n      rex-core\n      rex-encoder\n      rex-exploitation\n      rex-java\n      rex-mime\n      rex-nop\n      rex-ole\n      rex-powershell\n      rex-random_identifier\n      rex-registry\n      rex-rop_builder\n      rex-socket\n      rex-sslscan\n      rex-struct2\n      rex-text\n      rex-zip\n      ruby-macho\n      ruby-mysql\n      ruby_smb (~> 3.3.3)\n      rubyntlm\n      rubyzip\n      sinatra\n      sqlite3 (= 1.7.3)\n      sshkey\n      swagger-blocks\n      thin\n      tzinfo\n      tzinfo-data\n      unix-crypt\n      warden\n      win32api\n      windows_error\n      winrm\n      xdr\n      xmlrpc\n      zeitwerk\n\nGEM\n  remote: https://rubygems.org/\n  specs:\n    Ascii85 (1.1.1)\n    aarch64 (2.1.0)\n      racc (~> 1.6)\n    abbrev (0.1.2)\n    actionpack (7.0.8.6)\n      actionview (= 7.0.8.6)\n      activesupport (= 7.0.8.6)\n      rack (~> 2.0, >= 2.2.4)\n      rack-test (>= 0.6.3)\n      rails-dom-testing (~> 2.0)\n      rails-html-sanitizer (~> 1.0, >= 1.2.0)\n    actionview (7.0.8.6)\n      activesupport (= 7.0.8.6)\n      builder (~> 3.1)\n      erubi (~> 1.4)\n      rails-dom-testing (~> 2.0)\n      rails-html-sanitizer (~> 1.1, >= 1.2.0)\n    activemodel (7.0.8.6)\n      activesupport (= 7.0.8.6)\n    activerecord (7.0.8.6)\n      activemodel (= 7.0.8.6)\n      activesupport (= 7.0.8.6)\n    activesupport (7.0.8.6)\n      concurrent-ruby (~> 1.0, >= 1.0.2)\n      i18n (>= 1.6, < 2)\n      minitest (>= 5.1)\n      tzinfo (~> 2.0)\n    addressable (2.8.7)\n      public_suffix (>= 2.0.2, < 7.0)\n    afm (0.2.2)\n    allure-rspec (2.24.5)\n      allure-ruby-commons (= 2.24.5)\n      rspec-core (>= 3.8, < 4)\n    allure-ruby-commons (2.24.5)\n      mime-types (>= 3.3, < 4)\n      require_all (>= 2, < 4)\n      rspec-expectations (~> 3.12)\n      uuid (>= 2.3, < 3)\n    arel-helpers (2.15.0)\n      activerecord (>= 3.1.0, < 8)\n    ast (2.4.2)\n    aws-eventstream (1.3.0)\n    aws-partitions (1.999.0)\n    aws-sdk-core (3.211.0)\n      aws-eventstream (~> 1, >= 1.3.0)\n      aws-partitions (~> 1, >= 1.992.0)\n      aws-sigv4 (~> 1.9)\n      jmespath (~> 1, >= 1.6.1)\n    aws-sdk-ec2 (1.486.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sigv4 (~> 1.5)\n    aws-sdk-ec2instanceconnect (1.52.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sigv4 (~> 1.5)\n    aws-sdk-iam (1.112.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sigv4 (~> 1.5)\n    aws-sdk-kms (1.95.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sigv4 (~> 1.5)\n    aws-sdk-s3 (1.169.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sdk-kms (~> 1)\n      aws-sigv4 (~> 1.5)\n    aws-sdk-ssm (1.183.0)\n      aws-sdk-core (~> 3, >= 3.210.0)\n      aws-sigv4 (~> 1.5)\n    aws-sigv4 (1.10.1)\n      aws-eventstream (~> 1, >= 1.0.2)\n    base64 (0.2.0)\n    bcrypt (3.1.20)\n    bcrypt_pbkdf (1.1.1)\n    benchmark (0.4.0)\n    bigdecimal (3.1.8)\n    bindata (2.4.15)\n    bootsnap (1.18.4)\n      msgpack (~> 1.2)\n    bson (5.0.1)\n    builder (3.3.0)\n    byebug (11.1.3)\n    chunky_png (1.4.0)\n    coderay (1.1.3)\n    concurrent-ruby (1.3.4)\n    cookiejar (0.3.4)\n    crass (1.0.6)\n    csv (3.3.0)\n    daemons (1.4.1)\n    date (3.4.1)\n    debug (1.8.0)\n      irb (>= 1.5.0)\n      reline (>= 0.3.1)\n    diff-lcs (1.5.1)\n    dnsruby (1.72.2)\n      simpleidn (~> 0.2.1)\n    docile (1.4.1)\n    domain_name (0.6.20240107)\n    drb (2.2.1)\n    ed25519 (1.3.0)\n    elftools (1.3.1)\n      bindata (~> 2)\n    em-http-request (1.1.7)\n      addressable (>= 2.3.4)\n      cookiejar (!= 0.3.1)\n      em-socksify (>= 0.3)\n      eventmachine (>= 1.0.3)\n      http_parser.rb (>= 0.6.0)\n    em-socksify (0.3.3)\n      base64\n      eventmachine (>= 1.0.0.beta.4)\n    erubi (1.13.0)\n    eventmachine (1.2.7)\n    factory_bot (6.5.0)\n      activesupport (>= 5.0.0)\n    factory_bot_rails (6.4.4)\n      factory_bot (~> 6.5)\n      railties (>= 5.0.0)\n    faker (3.5.1)\n      i18n (>= 1.8.11, < 2)\n    faraday (2.7.11)\n      base64\n      faraday-net_http (>= 2.0, < 3.1)\n      ruby2_keywords (>= 0.0.4)\n    faraday-net_http (3.0.2)\n    faraday-retry (2.2.1)\n      faraday (~> 2.0)\n    faye-websocket (0.11.3)\n      eventmachine (>= 0.12.0)\n      websocket-driver (>= 0.5.1)\n    ffi (1.16.3)\n    fiddle (1.1.6)\n    filesize (0.2.0)\n    fivemat (1.3.7)\n    getoptlong (0.2.1)\n    gssapi (1.3.1)\n      ffi (>= 1.0.1)\n    gyoku (1.4.0)\n      builder (>= 2.1.2)\n      rexml (~> 3.0)\n    hashery (2.1.2)\n    hrr_rb_ssh (0.4.2)\n    hrr_rb_ssh-ed25519 (0.4.2)\n      ed25519 (~> 1.2)\n      hrr_rb_ssh (>= 0.4)\n    http-cookie (1.0.7)\n      domain_name (~> 0.5)\n    http_parser.rb (0.8.0)\n    httpclient (2.8.3)\n    i18n (1.14.6)\n      concurrent-ruby (~> 1.0)\n    io-console (0.7.2)\n    irb (1.7.4)\n      reline (>= 0.3.6)\n    jmespath (1.6.2)\n    jsobfu (0.4.2)\n      rkelly-remix\n    json (2.7.5)\n    language_server-protocol (3.17.0.3)\n    little-plugger (1.1.4)\n    logger (1.6.1)\n    logging (2.4.0)\n      little-plugger (~> 1.1)\n      multi_json (~> 1.14)\n    loofah (2.23.1)\n      crass (~> 1.0.2)\n      nokogiri (>= 1.12.0)\n    macaddr (1.7.2)\n      systemu (~> 2.6.5)\n    memory_profiler (1.1.0)\n    metasm (1.0.5)\n    metasploit-concern (5.0.3)\n      activemodel (~> 7.0)\n      activesupport (~> 7.0)\n      railties (~> 7.0)\n      zeitwerk\n    metasploit-credential (6.0.11)\n      metasploit-concern\n      metasploit-model\n      metasploit_data_models (>= 5.0.0)\n      net-ssh\n      pg\n      railties\n      rex-socket\n      rubyntlm\n      rubyzip\n    metasploit-model (5.0.2)\n      activemodel (~> 7.0)\n      activesupport (~> 7.0)\n      railties (~> 7.0)\n    metasploit-payloads (2.0.189)\n    metasploit_data_models (6.0.5)\n      activerecord (~> 7.0)\n      activesupport (~> 7.0)\n      arel-helpers\n      metasploit-concern\n      metasploit-model (>= 3.1)\n      pg\n      railties (~> 7.0)\n      recog\n      webrick\n    metasploit_payloads-mettle (1.0.35)\n    method_source (1.1.0)\n    mime-types (3.6.0)\n      logger\n      mime-types-data (~> 3.2015)\n    mime-types-data (3.2024.1001)\n    mini_portile2 (2.8.7)\n    minitest (5.25.1)\n    mqtt (0.6.0)\n    msgpack (1.6.1)\n    multi_json (1.15.0)\n    mustermann (3.0.3)\n      ruby2_keywords (~> 0.0.1)\n    mutex_m (0.2.0)\n    nessus_rest (0.1.6)\n    net-imap (0.5.0)\n      date\n      net-protocol\n    net-ldap (0.19.0)\n    net-protocol (0.2.2)\n      timeout\n    net-sftp (4.0.0)\n      net-ssh (>= 5.0.0, < 8.0.0)\n    net-smtp (0.5.0)\n      net-protocol\n    net-ssh (7.3.0)\n    network_interface (0.0.4)\n    nexpose (7.3.0)\n    nio4r (2.7.4)\n    nokogiri (1.16.7)\n      mini_portile2 (~> 2.8.2)\n      racc (~> 1.4)\n    nori (2.7.1)\n      bigdecimal\n    octokit (4.25.1)\n      faraday (>= 1, < 3)\n      sawyer (~> 0.9)\n    openssl-ccm (1.2.3)\n    openssl-cmac (2.0.2)\n    openvas-omp (0.0.4)\n    ostruct (0.6.1)\n    packetfu (2.0.0)\n      pcaprub (~> 0.13.1)\n    parallel (1.26.3)\n    parser (3.3.5.0)\n      ast (~> 2.4.1)\n      racc\n    patch_finder (1.0.2)\n    pcaprub (0.13.3)\n    pdf-reader (2.12.0)\n      Ascii85 (~> 1.0)\n      afm (~> 0.2.1)\n      hashery (~> 2.0)\n      ruby-rc4\n      ttfunk\n    pg (1.5.9)\n    pry (0.14.2)\n      coderay (~> 1.1)\n      method_source (~> 1.0)\n    pry-byebug (3.10.1)\n      byebug (~> 11.0)\n      pry (>= 0.13, < 0.15)\n    public_suffix (6.0.1)\n    puma (6.4.3)\n      nio4r (~> 2.0)\n    racc (1.8.1)\n    rack (2.2.10)\n    rack-protection (3.2.0)\n      base64 (>= 0.1.0)\n      rack (~> 2.2, >= 2.2.4)\n    rack-test (2.1.0)\n      rack (>= 1.3)\n    rails-dom-testing (2.2.0)\n      activesupport (>= 5.0.0)\n      minitest\n      nokogiri (>= 1.6)\n    rails-html-sanitizer (1.6.0)\n      loofah (~> 2.21)\n      nokogiri (~> 1.14)\n    railties (7.0.8.6)\n      actionpack (= 7.0.8.6)\n      activesupport (= 7.0.8.6)\n      method_source\n      rake (>= 12.2)\n      thor (~> 1.0)\n      zeitwerk (~> 2.5)\n    rainbow (3.1.1)\n    rake (13.2.1)\n    rasn1 (0.13.0)\n      strptime (~> 0.2.5)\n    rb-readline (0.5.5)\n    recog (3.1.11)\n      nokogiri\n    redcarpet (3.6.0)\n    regexp_parser (2.9.2)\n    reline (0.5.10)\n      io-console (~> 0.5)\n    require_all (3.0.0)\n    rex-arch (0.1.16)\n      rex-text\n    rex-bin_tools (0.1.9)\n      metasm\n      rex-arch\n      rex-core\n      rex-struct2\n      rex-text\n    rex-core (0.1.32)\n    rex-encoder (0.1.7)\n      metasm\n      rex-arch\n      rex-text\n    rex-exploitation (0.1.40)\n      jsobfu\n      metasm\n      rex-arch\n      rex-encoder\n      rex-text\n      rexml\n    rex-java (0.1.7)\n    rex-mime (0.1.8)\n      rex-text\n    rex-nop (0.1.3)\n      rex-arch\n    rex-ole (0.1.8)\n      rex-text\n    rex-powershell (0.1.100)\n      rex-random_identifier\n      rex-text\n      ruby-rc4\n    rex-random_identifier (0.1.13)\n      rex-text\n    rex-registry (0.1.5)\n    rex-rop_builder (0.1.5)\n      metasm\n      rex-core\n      rex-text\n    rex-socket (0.1.58)\n      dnsruby\n      rex-core\n    rex-sslscan (0.1.10)\n      rex-core\n      rex-socket\n      rex-text\n    rex-struct2 (0.1.4)\n    rex-text (0.2.59)\n    rex-zip (0.1.5)\n      rex-text\n    rexml (3.3.9)\n    rkelly-remix (0.0.7)\n    rspec (3.13.0)\n      rspec-core (~> 3.13.0)\n      rspec-expectations (~> 3.13.0)\n      rspec-mocks (~> 3.13.0)\n    rspec-core (3.13.2)\n      rspec-support (~> 3.13.0)\n    rspec-expectations (3.13.3)\n      diff-lcs (>= 1.2.0, < 2.0)\n      rspec-support (~> 3.13.0)\n    rspec-mocks (3.13.2)\n      diff-lcs (>= 1.2.0, < 2.0)\n      rspec-support (~> 3.13.0)\n    rspec-rails (7.0.1)\n      actionpack (>= 7.0)\n      activesupport (>= 7.0)\n      railties (>= 7.0)\n      rspec-core (~> 3.13)\n      rspec-expectations (~> 3.13)\n      rspec-mocks (~> 3.13)\n      rspec-support (~> 3.13)\n    rspec-rerun (1.1.0)\n      rspec (~> 3.0)\n    rspec-support (3.13.1)\n    rubocop (1.67.0)\n      json (~> 2.3)\n      language_server-protocol (>= 3.17.0)\n      parallel (~> 1.10)\n      parser (>= 3.3.0.2)\n      rainbow (>= 2.2.2, < 4.0)\n      regexp_parser (>= 2.4, < 3.0)\n      rubocop-ast (>= 1.32.2, < 2.0)\n      ruby-progressbar (~> 1.7)\n      unicode-display_width (>= 2.4.0, < 3.0)\n    rubocop-ast (1.33.0)\n      parser (>= 3.3.1.0)\n    ruby-macho (4.1.0)\n    ruby-mysql (4.1.0)\n    ruby-prof (1.4.2)\n    ruby-progressbar (1.13.0)\n    ruby-rc4 (0.1.5)\n    ruby2_keywords (0.0.5)\n    ruby_smb (3.3.13)\n      bindata (= 2.4.15)\n      openssl-ccm\n      openssl-cmac\n      rubyntlm (>= 0.6.5)\n      windows_error (>= 0.1.4)\n    rubyntlm (0.6.5)\n      base64\n    rubyzip (2.3.2)\n    sawyer (0.9.2)\n      addressable (>= 2.3.5)\n      faraday (>= 0.17.3, < 3)\n    simplecov (0.18.2)\n      docile (~> 1.1)\n      simplecov-html (~> 0.11)\n    simplecov-html (0.13.1)\n    simpleidn (0.2.3)\n    sinatra (3.2.0)\n      mustermann (~> 3.0)\n      rack (~> 2.2, >= 2.2.4)\n      rack-protection (= 3.2.0)\n      tilt (~> 2.0)\n    sqlite3 (1.7.3)\n      mini_portile2 (~> 2.8.0)\n    sshkey (3.0.0)\n    strptime (0.2.5)\n    swagger-blocks (3.0.0)\n    systemu (2.6.5)\n    test-prof (1.4.2)\n    thin (1.8.2)\n      daemons (~> 1.0, >= 1.0.9)\n      eventmachine (~> 1.0, >= 1.0.4)\n      rack (>= 1, < 3)\n    thor (1.3.2)\n    tilt (2.4.0)\n    timecop (0.9.10)\n    timeout (0.4.1)\n    ttfunk (1.8.0)\n      bigdecimal (~> 3.1)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2024.2)\n      tzinfo (>= 1.0.0)\n    unicode-display_width (2.6.0)\n    unix-crypt (1.3.1)\n    uuid (2.3.9)\n      macaddr (~> 1.0)\n    warden (1.2.9)\n      rack (>= 2.0.9)\n    webrick (1.8.2)\n    websocket-driver (0.7.6)\n      websocket-extensions (>= 0.1.0)\n    websocket-extensions (0.1.5)\n    win32api (0.1.0)\n    windows_error (0.1.5)\n    winrm (2.3.9)\n      builder (>= 2.1.2)\n      erubi (~> 1.8)\n      gssapi (~> 1.2)\n      gyoku (~> 1.0)\n      httpclient (~> 2.2, >= 2.2.0.2)\n      logging (>= 1.6.1, < 3.0)\n      nori (~> 2.0, >= 2.7.1)\n      rexml (~> 3.0)\n      rubyntlm (~> 0.6.0, >= 0.6.3)\n    xdr (3.0.3)\n      activemodel (>= 4.2, < 8.0)\n      activesupport (>= 4.2, < 8.0)\n    xmlrpc (0.3.3)\n      webrick\n    yard (0.9.37)\n    zeitwerk (2.6.18)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  allure-rspec\n  debug (>= 1.0.0)\n  factory_bot_rails\n  fivemat\n  memory_profiler\n  metasploit-framework!\n  octokit\n  pry-byebug\n  rake\n  redcarpet\n  rspec-rails\n  rspec-rerun\n  rubocop\n  ruby-prof (= 1.4.2)\n  simplecov (= 0.18.2)\n  test-prof\n  timecop\n  yard\n\nBUNDLED WITH\n   2.5.10\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 65,
          "content": "Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\nSource: https://www.metasploit.com/\n\nFiles: *\nCopyright: 2006-2020, Rapid7, Inc.\nLicense: BSD-3-clause\n\n# The Metasploit Framework is provided under the 3-clause BSD license provided\n# at the end of this file.\n#\n# The copyright on this package is held by Rapid7, Inc.\n#\n# This license does not apply to third-party components detailed below.\n#\n# Last updated: 2013-Nov-04\n#\n\nFiles: data/exploits/mysql/lib_mysqludf_sys_*.so\nCopyright: 2007  Roland Bouman\n           2008-2010  Roland Bouman and Bernardo Damele A. G.\nLicense: LGPL-2.1\nPurpose: These files are used in exploits/multi/mysql/mysql_udf_payload.rb\n\nFiles: data/exploits/cve-2023-34634/test.png\nCopyright: 2023 Brendan Watters\nLicense: MIT\nPurpose: These image is used as the default file to embed the exploit command.\n\nFiles: data/headers/windows/c_payload_util/beacon.h\nCopyright: 2022, Copyright Help/Systems LLC and its group of companies.\nLicense: Apache 2.0\n\nFiles: data/jtr/*\nCopyright: Copyright 1996-2013 by Solar Designer\nLicense: GNU GPL 2.0\n\nFiles: data/post/SharpHound.exe\n       data/post/powershell/SharpHound.ps1\nCopyright (C) 2016-2022 Specter Ops Inc.\nLicense: GNU GPL 3.0\nPurpose: These files are uploaded and executed by\n         post/windows/gather/bloodhound.\n\nFiles: data/templates/to_mem_pshreflection.ps1.template\nCopyright: 2012, Matthew Graeber\nLicense: BSD-3-clause\n\nFiles: data/webcam/api.js\nCopyright: Copyright 2013 Muaz Khan<@muazkh>.\nLicense: MIT\n\nFiles: data/wordlists/flask_secret_keys.txt\nSource: https://github.com/Paradoxis/Flask-Unsign-Wordlist/blob/v2023.34/flask_unsign_wordlist/wordlists/github.txt\nCopyright: Copyright (c) 2023 Luke Paris (Paradoxis)\nLicense: MIT\n\nFiles: external/source/byakugan/*\nCopyright: Lurene Grenier, 2009\nLicense: BSD-3-clause\n\nFiles: external/source/evasion/windows/process_herpaderping/ProcessHerpaderping/*\nCopyright: 2020 Johnny Shaw\nLicense: MIT\n\nFiles: external/source/exploits/CVE-2018-8120/*\nCopyright: 2018\nLicense: GNU GPL 3\nPurpose: This supports exploits/windows/local/ms18_8120_win32k_privesc module\n\nFiles: external/source/exploits/CVE-2022-1043/cve-2022-1043.c\nCopyright: 2022 Open Source Security, Inc.\nLicense: GNU GPL 2.0\nPurpose: This source file is necessary for users to create a stand-alone executable\n         to exploit CVE-2022-1043, a local privilege escalation vulnerability in\n         Linux kernels 5.12-rc3 - 5.14-rc7.\n\nFiles: external/source/exploits/CVE-2022-22942/cve-2022-22942-dc.c\nCopyright: 2022 Open Source Security, Inc.\nLicense: GNU GPL 2.0\nPurpose: This source file is necessary for users to create a stand-alone executable\n         to exploit CVE-2022-22942, a local privilege escalation vulnerability in\n         Linux kernels 4.14-rc1 - 5.17-rc1.\n\nFiles: exteneral/source/exploits/CVE-2022-26904/*\nCopyright: 2022 Abdelhamid Naceri\nLicense: MIT\n\nFiles: external/source/exploits/CVE-2023-36874/*\nCopyright: 2023 Octoberfest7\nLicense: MIT\nPurpose: Library and error report file are required for calculating offsets to the correct\n         function calls to implement the exploit.  The heavily modified C main is necessary\n         to create and trigger the exploit.\n\nFiles: external/source/exploits/drunkpotato/Common_Src_Files/spnegotokenhandler/*\nCopyright: 2011 Jon Bringhurst\nLicense: GNU GPL 2.0\n\nFiles: external/source/exploits/IE11SandboxEscapes/*\nCopyright: James Forshaw, 2014\nLicense: GPLv3\nPurpose: This set of source code supports the following modules\n         exploits/windows/local/ms13_097_ie_registry_symlink.rb\n         exploits/windows/local/ms14_009_ie_dfsvc.rb\n\nFiles: external/source/ipwn/*\nCopyright: 2004-2005 vlad902 <vlad902 [at] gmail.com>\n           2007 H D Moore <hdm [at] metasploit.com>\nLicense: GPL-2 and Artistic\nPurpose: These files are used in payloads/stages/osx/armle/execute\n\nFiles: external/source/metsvc/*\nCopyright: 2007, Determina Inc.\nLicense: BSD-3-clause\n\nFiles: external/source/osx/isight/*\nCopyright: 2009\nLicense: GPL\nPurpose: Used in modules/payloads/stages/osx/x86/isight to capture images.\n\nFiles: external/source/pxesploit/regeditor/ntreg.h\n       external/source/pxesploit/regeditor/ntreg.c\nCopyright: 1997-2010, Petter Nordahl-Hagen\nLicense: LGPL\nPurpose: Unknown. These files are used to create a linux binary called regeditor\n         which allows a linux OS to edit a Windows registry. It is used in\n         pxesploit modules.\n\nFiles: external/source/ReflectiveDLLInjection/*\nCopyright: 2011, Stephen Fewer of Harmony Security (www.harmonysecurity.com)\nLicense: BSD-3-clause\n\nFiles: external/source/shellcode/windows/build.sh\nCopyright: 2009\nLicense: GPL / Perl Artistic\nPurpose: A perl script to build some of the x86 Windows payloads.\n\nFiles: external/source/unixasm/*\nCopyright: 2004-2008 Ramon de Carvalho Valle <ramon@risesecurity.org>\nLicense: BSD-4-clause\n\nFiles: external/source/vncdll/winvnc/*\n       external/source/tightvnc/*\nCopyright: 1999 AT&T Laboratories Cambridge.\n           2000 Tridia Corp.\n           2002-2003 RealVNC Ltd.\n           2001-2004 HorizonLive.com, Inc.\n           2000-2006 Constantin Kaplinsky.\n           2000-2009 TightVNC Group\nLicense: GPL-2\nPurpose: The built result is used in:\n           payloads/stages/windows/vncinject.rb\n           payloads/stages/windows/x64/vncinject.rb\n\nFiles: external/source/exploits/CVE-2022-46689/vm_unaligned_copy_switch_race.c\nCopyright: 1999-2007 Apple Inc.\nLicense: Apple\nPurpose: This source file is necessary for users to create a stand-alone executable\n         to exploit CVE-2022-46689, a local privilege escalation vulnerability in\n         MacOSX versions (macOS dirty cow)\n\nFiles: lib/anemone.rb\n       lib/anemone/*\nCopyright: 2009 Vertive, Inc.\nLicense: MIT\n\nFiles: lib/expect.rb\nCopyright: 2017 Yukihiro Matsumoto\nLicense: Ruby\n\nFiles: lib/msf/core/modules/external/python/async_timeout/*\nCopyright: 2016-2023 Andrew Svetlov\nLicense: Apache 2.0\n\nFiles: lib/msf/core/web_services/public/*\n       lib/msf/core/web_services/views/api_docs.erb\nCopyright: Copyright 2018 SmartBear Software\nLicense: Apache 2.0\n\nFiles: lib/net/dns.rb\n       lib/net/dns/*\nCopyright: 2006 Marco Ceresa\nLicense: Ruby\n\nFiles: lib/postgres_msf.rb\n       lib/postgres/postgres-pr/message.rb\n       lib/postgres/postgres-pr/connection.rb\nCopyright: 2005 Michael Neumann\nLicense: BSD-3-clause or Ruby\n\nFiles: lib/rabal/*\nCopyright: Jeremy Hinegadner <jeremy at hinegardner dot org>\nLicense: Ruby\n\nFiles: lib/rbmysql.rb\n       lib/rbmysql/*\nCopyright: 2009 tommy\nLicense: Ruby\n\nFiles: lib/snmp.rb\n       lib/snmp/*\nCopyright: 2004, David R. Halliday\nLicense: Ruby\n\nFiles: lib/windows_console_color_support.rb\nCopyright: 2011 Michael 'mihi' Schierl\nLicense: BSD-3-clause\n\nFiles: lib/zip.rb\n       lib/zip/*\nCopyright: 2002-2004, Thomas Sandergaard\nLicense: Ruby\n\nFiles: modules/auxiliary/dos/cisco/cisco_7937g_dos.py\nCopyright: 2020, Cody Martin\nLicense: GPL\nPurpose: This module allows an attacker to render a Cisco 7937G unresponsive\n         until it is manually power cycled.\n\nFiles: modules/auxiliary/dos/cisco/cisco_7937g_dos_reboot.py\nCopyright: 2020, Cody Martin\nLicense: GPL\nPurpose: This module allows an attacker to render a Cisco 7937G unresponsive\n         until it automatically power cycles.\n\nFiles: modules/auxiliary/admin/http/cisco_7937g_ssh_privesc.py\nCopyright: 2020, Cody Martin\nLicense: GPL\nPurpose: This module allows an unauthenticated user to change the credentials\n         for SSH access on a Cisco 7937G device.\n\nFiles: modules/auxiliary/gather/office365userenum.py\nCopyright: 2015  Oliver Morton\nLicense: GPL\nPurpose: Enumerates valid usernames from Office 365 using ActiveSync.\n\nFiles: modules/exploits/linux/local/bpf_priv_esc.rb\n       data/exploits/CVE-2016-4557/hello\nCopyright: 2001-2007\nLicense: GPL\nPurpose: This module contains the source code for FUSE, which this module\n         uploads and compiles or uploads a precompiled binary (hello).\n\nFiles: modules/exploits/linux/local/ntfs3g_priv_esc.rb\nCopyright: 2017\nLicense: GPLv2\nPurpose: The Ruby file contains the text of several modules from exploit-db\n         which it compiles and uploads to the target to elevate privileges.\n\nFiles: modules/exploits/unix/fileformat/metasploit_libnotify_cmd_injection.rb\nCopyright: 2020\nLicense: GPL\nPurpose: This module targets a vulnerability in Metasploit Framework versions\n         prior to 5.0.86.\n\nFiles: modules/exploits/windows/smb/ms04_007_killbill.rb\nCopyright: 2004, Solar Eclipse\nLicense: GPL\nPurpose: The module exploits the Windows ASN.1 vulnerability in Windows 2000\n         SP2-SP4 and Windows XP SP0-SP1. It contains code ported from a GPLv2\n         module.\n\nFiles: modules/payloads/singles/windows/speak_pwned.rb\nCopyright: 2009-2010 Berend-Jan \"SkyLined\" Wever <berendjanwever@gmail.com>\nLicense: BSD-3-clause\n\nFiles: modules/payloads/singles/windows/x64/messagebox.rb\nCopyright: 2018, jaguinaga\nLicense: GPL\nPurpose: This module allows us to create an x64 Windows messagebox payload.\n\nFiles: modules/post/linux/dos/xen_420_dos.rb\nCopyright: 2016\nLicense: GPL\nPurpose: This module crashes the Xen 4.2.0 hypervisor when run in a\n         paravirtualized VM. It contains a short code section licensed through\n         GPL.\n\nFiles: tools/exploit/metasm_shell.rb\nCopyright: 2007, Yoann GUILLOT\nLicense: LGPL\nPurpose: Allows users to invoke an interactive metasm shell to get opcodes from\nassembly instructions.\n\nLicense: BSD-2-clause\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n .\n Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n .\n Redistributions in binary form must reproduce the above copyright notice, this\n list of conditions and the following disclaimer in the documentation and/or\n other materials provided with the distribution.\n .\n THIS SOFTWARE IS PROVIDED BY {{THE COPYRIGHT HOLDERS AND CONTRIBUTORS}} \"AS IS\"\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL {{THE COPYRIGHT HOLDER OR CONTRIBUTORS}} BE\n LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense: BSD-3-clause\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n .\n     * Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n .\n     * Redistributions in binary form must reproduce the above copyright notice,\n     this list of conditions and the following disclaimer in the documentation\n     and/or other materials provided with the distribution.\n .\n     * Neither the name of Rapid7, Inc. nor the names of its contributors\n     may be used to endorse or promote products derived from this software\n     without specific prior written permission.\n .\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense: BSD-4-clause\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n 3. All advertising materials mentioning features or use of this software\n    must display the following acknowledgement:\n    This product includes software developed by the <organization>.\n 4. Neither the name of the <organization> nor the\n    names of its contributors may be used to endorse or promote products\n    derived from this software without specific prior written permission.\n .\n THIS SOFTWARE IS PROVIDED BY <COPYRIGHT HOLDER> ''AS IS'' AND ANY\n EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense: Ruby\n 1. You may make and give away verbatim copies of the source form of the\n    software without restriction, provided that you duplicate all of the\n    original copyright notices and associated disclaimers.\n .\n 2. You may modify your copy of the software in any way, provided that\n    you do at least ONE of the following:\n .\n    a) place your modifications in the Public Domain or otherwise\n       make them Freely Available, such as by posting said\n       modifications to Usenet or an equivalent medium, or by allowing\n       the author to include your modifications in the software.\n .\n    b) use the modified software only within your corporation or\n       organization.\n .\n    c) rename any non-standard executables so the names do not conflict\n       with standard executables, which must also be provided.\n .\n    d) make other distribution arrangements with the author.\n .\n 3. You may distribute the software in object code or executable\n    form, provided that you do at least ONE of the following:\n .\n    a) distribute the executables and library files of the software,\n       together with instructions (in the manual page or equivalent)\n       on where to get the original distribution.\n .\n    b) accompany the distribution with the machine-readable source of\n       the software.\n .\n    c) give non-standard executables non-standard names, with\n       instructions on where to get the original software distribution.\n .\n    d) make other distribution arrangements with the author.\n .\n 4. You may modify and include the part of the software into any other\n    software (possibly commercial).  But some files in the distribution\n    are not written by the author, so that they are not under this terms.\n    They are gc.c(partly), utils.c(partly), regex.[ch], fnmatch.[ch],\n    glob.c, st.[ch] and some files under the ./missing directory.  See\n    each file for the copying condition.\n .\n 5. The scripts and library files supplied as input to or produced as\n    output from the software do not automatically fall under the\n    copyright of the software, but belong to whomever generated them,\n    and may be sold commercially, and may be aggregated with this\n    software.\n .\n 6. THIS SOFTWARE IS PROVIDED \"AS IS\" AND WITHOUT ANY EXPRESS OR\n    IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\n    WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE.\n\nLicense: GPL-2\n This program is free software; you can redistribute it\n and/or modify it under the terms of the GNU General Public\n License as published by the Free Software Foundation; either\n version 2 of the License, or (at your option) any later\n version.\n .\n This program is distributed in the hope that it will be\n useful, but WITHOUT ANY WARRANTY; without even the implied\n warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n PURPOSE.  See the GNU General Public License for more\n details.\n .\n You should have received a copy of the GNU General Public\n License along with this package; if not, write to the Free\n Software Foundation, Inc., 51 Franklin St, Fifth Floor,\n Boston, MA  02110-1301 USA\n .\n On Debian systems, the full text of the GNU General Public\n License version 2 can be found in the file\n `/usr/share/common-licenses/GPL-2'.\n\nLicense: LGPL-2.1\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n .\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n .\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nLicense: OpenSSL\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n .\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n .\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n .\n 3. All advertising materials mentioning features or use of this\n    software must display the following acknowledgment:\n    \"This product includes software developed by the OpenSSL Project\n    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n .\n 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n    endorse or promote products derived from this software without\n    prior written permission. For written permission, please contact\n    openssl-core@openssl.org.\n .\n 5. Products derived from this software may not be called \"OpenSSL\"\n    nor may \"OpenSSL\" appear in their names without prior written\n    permission of the OpenSSL Project.\n .\n 6. Redistributions of any form whatsoever must retain the following\n    acknowledgment:\n    \"This product includes software developed by the OpenSSL Project\n    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n .\n THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT `AS IS'' AND ANY\n EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\n ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n OF THE POSSIBILITY OF SUCH DAMAGE.\n .\n This product includes cryptographic software written by Eric Young\n (eay@cryptsoft.com).  This product includes software written by Tim\n Hudson (tjh@cryptsoft.com).\n\nLicense: SSLeay\n This package is an SSL implementation written\n by Eric Young (eay@cryptsoft.com).\n The implementation was written so as to conform with Netscapes SSL.\n .\n This library is free for commercial and non-commercial use as long as\n the following conditions are aheared to.  The following conditions\n apply to all code found in this distribution, be it the RC4, RSA,\n lhash, DES, etc., code; not just the SSL code.  The SSL documentation\n included with this distribution is covered by the same copyright terms\n except that the holder is Tim Hudson (tjh@cryptsoft.com).\n .\n Copyright remains Eric Young's, and as such any Copyright notices in\n the code are not to be removed.\n If this package is used in a product, Eric Young should be given attribution\n as the author of the parts of the library used.\n This can be in the form of a textual message at program startup or\n in documentation (online or textual) provided with the package.\n .\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n 3. All advertising materials mentioning features or use of this software\n    must display the following acknowledgement:\n    \"This product includes cryptographic software written by\n    Eric Young (eay@cryptsoft.com)\"\n    The word 'cryptographic' can be left out if the rouines from the library\n    being used are not cryptographic related :-).\n 4. If you include any Windows specific code (or a derivative thereof) from\n    the apps directory (application code) you must include an acknowledgement:\n    \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n .\n THIS SOFTWARE IS PROVIDED BY ERIC YOUNG `AS IS'' AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n SUCH DAMAGE.\n .\n The licence and distribution terms for any publically available version or\n derivative of this code cannot be changed.  i.e. this code cannot simply be\n copied and put under another distribution licence\n [including the GNU Public Licence.]\n\nLicense: MIT\n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the\n \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish,\n distribute, sublicense, and/or sell copies of the Software, and to\n permit persons to whom the Software is furnished to do so, subject to\n the following conditions:\n .\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n .\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense: Artistic\n Copyright (c) 2000-2006, The Perl Foundation.\n .\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n .\n Preamble\n .\n This license establishes the terms under which a given free software\n Package may be copied, modified, distributed, and/or redistributed.\n The intent is that the Copyright Holder maintains some artistic\n control over the development of that Package while still keeping the\n Package available as open source and free software.\n .\n You are always permitted to make arrangements wholly outside of this\n license directly with the Copyright Holder of a given Package. If the\n terms of this license do not permit the full use that you propose to\n make of the Package, you should contact the Copyright Holder and seek\n a different licensing arrangement.\n .\n Definitions\n .\n \"Copyright Holder\" means the individual(s) or organization(s)\n named in the copyright notice for the entire Package.\n .\n \"Contributor\" means any party that has contributed code or other\n material to the Package, in accordance with the Copyright Holder's\n procedures.\n .\n \"You\" and \"your\" means any person who would like to copy,\n distribute, or modify the Package.\n .\n \"Package\" means the collection of files distributed by the\n Copyright Holder, and derivatives of that collection and/or of\n those files. A given Package may consist of either the Standard\n Version, or a Modified Version.\n .\n \"Distribute\" means providing a copy of the Package or making it\n accessible to anyone else, or in the case of a company or\n organization, to others outside of your company or organization.\n .\n \"Distributor Fee\" means any fee that you charge for Distributing\n this Package or providing support for this Package to another\n party. It does not mean licensing fees.\n .\n \"Standard Version\" refers to the Package if it has not been\n modified, or has been modified only in ways explicitly requested\n by the Copyright Holder.\n .\n \"Modified Version\" means the Package, if it has been changed, and\n such changes were not explicitly requested by the Copyright\n Holder.\n .\n \"Original License\" means this Artistic License as Distributed with\n the Standard Version of the Package, in its current version or as\n it may be modified by The Perl Foundation in the future.\n .\n \"Source\" form means the source code, documentation source, and\n configuration files for the Package.\n .\n \"Compiled\" form means the compiled bytecode, object code, binary,\n or any other form resulting from mechanical transformation or\n translation of the Source form.\n .\n Permission for Use and Modification Without Distribution\n .\n (1) You are permitted to use the Standard Version and create and use\n Modified Versions for any purpose without restriction, provided that\n you do not Distribute the Modified Version.\n .\n .\n Permissions for Redistribution of the Standard Version\n .\n (2) You may Distribute verbatim copies of the Source form of the\n Standard Version of this Package in any medium without restriction,\n either gratis or for a Distributor Fee, provided that you duplicate\n all of the original copyright notices and associated disclaimers. At\n your discretion, such verbatim copies may or may not include a\n Compiled form of the Package.\n .\n (3) You may apply any bug fixes, portability changes, and other\n modifications made available from the Copyright Holder. The resulting\n Package will still be considered the Standard Version, and as such\n will be subject to the Original License.\n .\n .\n Distribution of Modified Versions of the Package as Source\n .\n (4) You may Distribute your Modified Version as Source (either gratis\n or for a Distributor Fee, and with or without a Compiled form of the\n Modified Version) provided that you clearly document how it differs\n from the Standard Version, including, but not limited to, documenting\n any non-standard features, executables, or modules, and provided that\n you do at least ONE of the following:\n .\n (a) make the Modified Version available to the Copyright Holder\n of the Standard Version, under the Original License, so that the\n Copyright Holder may include your modifications in the Standard\n Version.\n .\n (b) ensure that installation of your Modified Version does not\n prevent the user installing or running the Standard Version. In\n addition, the Modified Version must bear a name that is different\n from the name of the Standard Version.\n .\n (c) allow anyone who receives a copy of the Modified Version to\n make the Source form of the Modified Version available to others\n under\n .\n (i) the Original License or\n .\n (ii) a license that permits the licensee to freely copy,\n modify and redistribute the Modified Version using the same\n licensing terms that apply to the copy that the licensee\n received, and requires that the Source form of the Modified\n Version, and of any works derived from it, be made freely\n available in that license fees are prohibited but Distributor\n Fees are allowed.\n .\n .\n Distribution of Compiled Forms of the Standard Version\n or Modified Versions without the Source\n .\n (5) You may Distribute Compiled forms of the Standard Version without\n the Source, provided that you include complete instructions on how to\n get the Source of the Standard Version. Such instructions must be\n valid at the time of your distribution. If these instructions, at any\n time while you are carrying out such distribution, become invalid, you\n must provide new instructions on demand or cease further distribution.\n If you provide valid instructions or cease distribution within thirty\n days after you become aware that the instructions are invalid, then\n you do not forfeit any of your rights under this license.\n .\n (6) You may Distribute a Modified Version in Compiled form without\n the Source, provided that you comply with Section 4 with respect to\n the Source of the Modified Version.\n .\n .\n Aggregating or Linking the Package\n .\n (7) You may aggregate the Package (either the Standard Version or\n Modified Version) with other packages and Distribute the resulting\n aggregation provided that you do not charge a licensing fee for the\n Package. Distributor Fees are permitted, and licensing fees for other\n components in the aggregation are permitted. The terms of this license\n apply to the use and Distribution of the Standard or Modified Versions\n as included in the aggregation.\n .\n (8) You are permitted to link Modified and Standard Versions with\n other works, to embed the Package in a larger work of your own, or to\n build stand-alone binary or bytecode versions of applications that\n include the Package, and Distribute the result without restriction,\n provided the result does not expose a direct interface to the Package.\n .\n .\n Items That are Not Considered Part of a Modified Version\n .\n (9) Works (including, but not limited to, modules and scripts) that\n merely extend or make use of the Package, do not, by themselves, cause\n the Package to be a Modified Version. In addition, such works are not\n considered parts of the Package itself, and are not subject to the\n terms of this license.\n .\n .\n General Provisions\n .\n (10) Any use, modification, and distribution of the Standard or\n Modified Versions is governed by this Artistic License. By using,\n modifying or distributing the Package, you accept this license. Do not\n use, modify, or distribute the Package, if you do not accept this\n license.\n .\n (11) If your Modified Version has been derived from a Modified\n Version made by someone other than you, you are nevertheless required\n to ensure that your Modified Version complies with the requirements of\n this license.\n .\n (12) This license does not grant you the right to use any trademark,\n service mark, tradename, or logo of the Copyright Holder.\n .\n (13) This license includes the non-exclusive, worldwide,\n free-of-charge patent license to make, have made, use, offer to sell,\n sell, import and otherwise transfer the Package with respect to any\n patent claims licensable by the Copyright Holder that are necessarily\n infringed by the Package. If you institute patent litigation\n (including a cross-claim or counterclaim) against any party alleging\n that the Package constitutes direct or contributory patent\n infringement, then this Artistic License to you shall terminate on the\n date that such litigation is filed.\n .\n (14) Disclaimer of Warranty:\n THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS \"AS\n IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED\n WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\n NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL\n LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL\n BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\n DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF\n ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense: Apache\n Version 1.1, 2000\n Modifications by CORE Security Technologies\n .\n Copyright (c) 2000 The Apache Software Foundation.  All rights\n reserved.\n .\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n .\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n .\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n .\n 3. The end-user documentation included with the redistribution,\n    if any, must include the following acknowledgment:\n       \"This product includes software developed by\n        CORE Security Technologies (http://www.coresecurity.com/).\"\n    Alternately, this acknowledgment may appear in the software itself,\n    if and wherever such third-party acknowledgments normally appear.\n .\n 4. The names \"Impacket\" and \"CORE Security Technologies\" must\n    not be used to endorse or promote products derived from this\n    software without prior written permission. For written\n    permission, please contact oss@coresecurity.com.\n .\n 5. Products derived from this software may not be called \"Impacket\",\n    nor may \"Impacket\" appear in their name, without prior written\n    permission of CORE Security Technologies.\n .\n THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n SUCH DAMAGE.\n\nLicense: Apache\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n .\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n .\n 1. Definitions.\n .\n \"License\" shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n .\n \"Licensor\" shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n .\n \"Legal Entity\" shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n \"control\" means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n .\n \"You\" (or \"Your\") shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n .\n \"Source\" form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n .\n \"Object\" form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n .\n \"Work\" shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n .\n \"Derivative Works\" shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n .\n \"Contribution\" shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, \"submitted\"\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as \"Not a Contribution.\"\n .\n \"Contributor\" shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n .\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n .\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n .\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n .\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n .\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n .\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n .\n (d) If the Work includes a \"NOTICE\" text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n .\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n .\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n .\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n .\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n .\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n .\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n .\n END OF TERMS AND CONDITIONS\n .\n APPENDIX: How to apply the Apache License to your work.\n .\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets \"[]\"\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same \"printed page\" as the copyright notice for easier\n identification within third-party archives.\n .\n Copyright [yyyy] [name of copyright owner]\n .\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n .\n http://www.apache.org/licenses/LICENSE-2.0\n .\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\nLicense: Zlib\n This software is provided 'as-is', without any express or implied\n warranty.  In no event will the authors be held liable for any damages\n arising from the use of this software.\n .\n Permission is granted to anyone to use this software for any purpose,\n including commercial applications, and to alter it and redistribute it\n freely, subject to the following restrictions:\n .\n 1. The origin of this software must not be misrepresented; you must not\n    claim that you wrote the original software. If you use this software\n    in a product, an acknowledgment in the product documentation would be\n    appreciated but is not required.\n 2. Altered source versions must be plainly marked as such, and must not be\n    misrepresented as being the original software.\n 3. This notice may not be removed or altered from any source distribution.\n\nLicense: Apple\nAPPLE PUBLIC SOURCE LICENSE\nVersion 2.0 - August 6, 2003\n\nPlease read this License carefully before downloading this software.\nBy downloading or using this software, you are agreeing to be bound by\nthe terms of this License. If you do not or cannot agree to the terms\nof this License, please do not download or use the software.\n\n1. General; Definitions. This License applies to any program or other\nwork which Apple Computer, Inc. (\"Apple\") makes publicly available and\nwhich contains a notice placed by Apple identifying such program or\nwork as \"Original Code\" and stating that it is subject to the terms of\nthis Apple Public Source License version 2.0 (\"License\"). As used in\nthis License:\n\n1.1 \"Applicable Patent Rights\" mean: (a) in the case where Apple is\nthe grantor of rights, (i) claims of patents that are now or hereafter\nacquired, owned by or assigned to Apple and (ii) that cover subject\nmatter contained in the Original Code, but only to the extent\nnecessary to use, reproduce and/or distribute the Original Code\nwithout infringement; and (b) in the case where You are the grantor of\nrights, (i) claims of patents that are now or hereafter acquired,\nowned by or assigned to You and (ii) that cover subject matter in Your\nModifications, taken alone or in combination with Original Code.\n\n1.2 \"Contributor\" means any person or entity that creates or\ncontributes to the creation of Modifications.\n\n1.3 \"Covered Code\" means the Original Code, Modifications, the\ncombination of Original Code and any Modifications, and/or any\nrespective portions thereof.\n\n1.4 \"Externally Deploy\" means: (a) to sublicense, distribute or\notherwise make Covered Code available, directly or indirectly, to\nanyone other than You; and/or (b) to use Covered Code, alone or as\npart of a Larger Work, in any way to provide a service, including but\nnot limited to delivery of content, through electronic communication\nwith a client other than You.\n\n1.5 \"Larger Work\" means a work which combines Covered Code or portions\nthereof with code not governed by the terms of this License.\n\n1.6 \"Modifications\" mean any addition to, deletion from, and/or change\nto, the substance and/or structure of the Original Code, any previous\nModifications, the combination of Original Code and any previous\nModifications, and/or any respective portions thereof. When code is\nreleased as a series of files, a Modification is: (a) any addition to\nor deletion from the contents of a file containing Covered Code;\nand/or (b) any new file or other representation of computer program\nstatements that contains any part of Covered Code.\n\n1.7 \"Original Code\" means (a) the Source Code of a program or other\nwork as originally made available by Apple under this License,\nincluding the Source Code of any updates or upgrades to such programs\nor works made available by Apple under this License, and that has been\nexpressly identified by Apple as such in the header file(s) of such\nwork; and (b) the object code compiled from such Source Code and\noriginally made available by Apple under this License.\n\n1.8 \"Source Code\" means the human readable form of a program or other\nwork that is suitable for making modifications to it, including all\nmodules it contains, plus any associated interface definition files,\nscripts used to control compilation and installation of an executable\n(object code).\n\n1.9 \"You\" or \"Your\" means an individual or a legal entity exercising\nrights under this License. For legal entities, \"You\" or \"Your\"\nincludes any entity which controls, is controlled by, or is under\ncommon control with, You, where \"control\" means (a) the power, direct\nor indirect, to cause the direction or management of such entity,\nwhether by contract or otherwise, or (b) ownership of fifty percent\n(50%) or more of the outstanding shares or beneficial ownership of\nsuch entity.\n\n2. Permitted Uses; Conditions & Restrictions. Subject to the terms\nand conditions of this License, Apple hereby grants You, effective on\nthe date You accept this License and download the Original Code, a\nworld-wide, royalty-free, non-exclusive license, to the extent of\nApple's Applicable Patent Rights and copyrights covering the Original\nCode, to do the following:\n\n2.1 Unmodified Code. You may use, reproduce, display, perform,\ninternally distribute within Your organization, and Externally Deploy\nverbatim, unmodified copies of the Original Code, for commercial or\nnon-commercial purposes, provided that in each instance:\n\n(a) You must retain and reproduce in all copies of Original Code the\ncopyright and other proprietary notices and disclaimers of Apple as\nthey appear in the Original Code, and keep intact all notices in the\nOriginal Code that refer to this License; and\n\n(b) You must include a copy of this License with every copy of Source\nCode of Covered Code and documentation You distribute or Externally\nDeploy, and You may not offer or impose any terms on such Source Code\nthat alter or restrict this License or the recipients' rights\nhereunder, except as permitted under Section 6.\n\n2.2 Modified Code. You may modify Covered Code and use, reproduce,\ndisplay, perform, internally distribute within Your organization, and\nExternally Deploy Your Modifications and Covered Code, for commercial\nor non-commercial purposes, provided that in each instance You also\nmeet all of these conditions:\n\n(a) You must satisfy all the conditions of Section 2.1 with respect to\nthe Source Code of the Covered Code;\n\n(b) You must duplicate, to the extent it does not already exist, the\nnotice in Exhibit A in each file of the Source Code of all Your\nModifications, and cause the modified files to carry prominent notices\nstating that You changed the files and the date of any change; and\n\n(c) If You Externally Deploy Your Modifications, You must make\nSource Code of all Your Externally Deployed Modifications either\navailable to those to whom You have Externally Deployed Your\nModifications, or publicly available. Source Code of Your Externally\nDeployed Modifications must be released under the terms set forth in\nthis License, including the license grants set forth in Section 3\nbelow, for as long as you Externally Deploy the Covered Code or twelve\n(12) months from the date of initial External Deployment, whichever is\nlonger. You should preferably distribute the Source Code of Your\nExternally Deployed Modifications electronically (e.g. download from a\nweb site).\n\n2.3 Distribution of Executable Versions. In addition, if You\nExternally Deploy Covered Code (Original Code and/or Modifications) in\nobject code, executable form only, You must include a prominent\nnotice, in the code itself as well as in related documentation,\nstating that Source Code of the Covered Code is available under the\nterms of this License with information on how and where to obtain such\nSource Code.\n\n2.4 Third Party Rights. You expressly acknowledge and agree that\nalthough Apple and each Contributor grants the licenses to their\nrespective portions of the Covered Code set forth herein, no\nassurances are provided by Apple or any Contributor that the Covered\nCode does not infringe the patent or other intellectual property\nrights of any other entity. Apple and each Contributor disclaim any\nliability to You for claims brought by any other entity based on\ninfringement of intellectual property rights or otherwise. As a\ncondition to exercising the rights and licenses granted hereunder, You\nhereby assume sole responsibility to secure any other intellectual\nproperty rights needed, if any. For example, if a third party patent\nlicense is required to allow You to distribute the Covered Code, it is\nYour responsibility to acquire that license before distributing the\nCovered Code.\n\n3. Your Grants. In consideration of, and as a condition to, the\nlicenses granted to You under this License, You hereby grant to any\nperson or entity receiving or distributing Covered Code under this\nLicense a non-exclusive, royalty-free, perpetual, irrevocable license,\nunder Your Applicable Patent Rights and other intellectual property\nrights (other than patent) owned or controlled by You, to use,\nreproduce, display, perform, modify, sublicense, distribute and\nExternally Deploy Your Modifications of the same scope and extent as\nApple's licenses under Sections 2.1 and 2.2 above.\n\n4. Larger Works. You may create a Larger Work by combining Covered\nCode with other code not governed by the terms of this License and\ndistribute the Larger Work as a single product. In each such instance,\nYou must make sure the requirements of this License are fulfilled for\nthe Covered Code or any portion thereof.\n\n5. Limitations on Patent License. Except as expressly stated in\nSection 2, no other patent rights, express or implied, are granted by\nApple herein. Modifications and/or Larger Works may require additional\npatent licenses from Apple which Apple may grant in its sole\ndiscretion.\n\n6. Additional Terms. You may choose to offer, and to charge a fee for,\nwarranty, support, indemnity or liability obligations and/or other\nrights consistent with the scope of the license granted herein\n(\"Additional Terms\") to one or more recipients of Covered Code.\nHowever, You may do so only on Your own behalf and as Your sole\nresponsibility, and not on behalf of Apple or any Contributor. You\nmust obtain the recipient's agreement that any such Additional Terms\nare offered by You alone, and You hereby agree to indemnify, defend\nand hold Apple and every Contributor harmless for any liability\nincurred by or claims asserted against Apple or such Contributor by\nreason of any such Additional Terms.\n\n7. Versions of the License. Apple may publish revised and/or new\nversions of this License from time to time. Each version will be given\na distinguishing version number. Once Original Code has been published\nunder a particular version of this License, You may continue to use it\nunder the terms of that version. You may also choose to use such\nOriginal Code under the terms of any subsequent version of this\nLicense published by Apple. No one other than Apple has the right to\nmodify the terms applicable to Covered Code created under this\nLicense.\n\n8. NO WARRANTY OR SUPPORT. The Covered Code may contain in whole or in\npart pre-release, untested, or not fully tested works. The Covered\nCode may contain errors that could cause failures or loss of data, and\nmay be incomplete or contain inaccuracies. You expressly acknowledge\nand agree that use of the Covered Code, or any portion thereof, is at\nYour sole and entire risk. THE COVERED CODE IS PROVIDED \"AS IS\" AND\nWITHOUT WARRANTY, UPGRADES OR SUPPORT OF ANY KIND AND APPLE AND\nAPPLE'S LICENSOR(S) (COLLECTIVELY REFERRED TO AS \"APPLE\" FOR THE\nPURPOSES OF SECTIONS 8 AND 9) AND ALL CONTRIBUTORS EXPRESSLY DISCLAIM\nALL WARRANTIES AND/OR CONDITIONS, EXPRESS OR IMPLIED, INCLUDING, BUT\nNOT LIMITED TO, THE IMPLIED WARRANTIES AND/OR CONDITIONS OF\nMERCHANTABILITY, OF SATISFACTORY QUALITY, OF FITNESS FOR A PARTICULAR\nPURPOSE, OF ACCURACY, OF QUIET ENJOYMENT, AND NONINFRINGEMENT OF THIRD\nPARTY RIGHTS. APPLE AND EACH CONTRIBUTOR DOES NOT WARRANT AGAINST\nINTERFERENCE WITH YOUR ENJOYMENT OF THE COVERED CODE, THAT THE\nFUNCTIONS CONTAINED IN THE COVERED CODE WILL MEET YOUR REQUIREMENTS,\nTHAT THE OPERATION OF THE COVERED CODE WILL BE UNINTERRUPTED OR\nERROR-FREE, OR THAT DEFECTS IN THE COVERED CODE WILL BE CORRECTED. NO\nORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY APPLE, AN APPLE\nAUTHORIZED REPRESENTATIVE OR ANY CONTRIBUTOR SHALL CREATE A WARRANTY.\nYou acknowledge that the Covered Code is not intended for use in the\noperation of nuclear facilities, aircraft navigation, communication\nsystems, or air traffic control machines in which case the failure of\nthe Covered Code could lead to death, personal injury, or severe\nphysical or environmental damage.\n\n9. LIMITATION OF LIABILITY. TO THE EXTENT NOT PROHIBITED BY LAW, IN NO\nEVENT SHALL APPLE OR ANY CONTRIBUTOR BE LIABLE FOR ANY INCIDENTAL,\nSPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING\nTO THIS LICENSE OR YOUR USE OR INABILITY TO USE THE COVERED CODE, OR\nANY PORTION THEREOF, WHETHER UNDER A THEORY OF CONTRACT, WARRANTY,\nTORT (INCLUDING NEGLIGENCE), PRODUCTS LIABILITY OR OTHERWISE, EVEN IF\nAPPLE OR SUCH CONTRIBUTOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES AND NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE OF ANY\nREMEDY. SOME JURISDICTIONS DO NOT ALLOW THE LIMITATION OF LIABILITY OF\nINCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS LIMITATION MAY NOT APPLY\nTO YOU. In no event shall Apple's total liability to You for all\ndamages (other than as may be required by applicable law) under this\nLicense exceed the amount of fifty dollars ($50.00).\n\n10. Trademarks. This License does not grant any rights to use the\ntrademarks or trade names \"Apple\", \"Apple Computer\", \"Mac\", \"Mac OS\",\n\"QuickTime\", \"QuickTime Streaming Server\" or any other trademarks,\nservice marks, logos or trade names belonging to Apple (collectively\n\"Apple Marks\") or to any trademark, service mark, logo or trade name\nbelonging to any Contributor. You agree not to use any Apple Marks in\nor as part of the name of products derived from the Original Code or\nto endorse or promote products derived from the Original Code other\nthan as expressly permitted by and in strict compliance at all times\nwith Apple's third party trademark usage guidelines which are posted\nat http://www.apple.com/legal/guidelinesfor3rdparties.html.\n\n11. Ownership. Subject to the licenses granted under this License,\neach Contributor retains all rights, title and interest in and to any\nModifications made by such Contributor. Apple retains all rights,\ntitle and interest in and to the Original Code and any Modifications\nmade by or on behalf of Apple (\"Apple Modifications\"), and such Apple\nModifications will not be automatically subject to this License. Apple\nmay, at its sole discretion, choose to license such Apple\nModifications under this License, or on different terms from those\ncontained in this License or may choose not to license them at all.\n\n12. Termination.\n\n12.1 Termination. This License and the rights granted hereunder will\nterminate:\n\n(a) automatically without notice from Apple if You fail to comply with\nany term(s) of this License and fail to cure such breach within 30\ndays of becoming aware of such breach;\n\n(b) immediately in the event of the circumstances described in Section\n13.5(b); or\n\n(c) automatically without notice from Apple if You, at any time during\nthe term of this License, commence an action for patent infringement\nagainst Apple; provided that Apple did not first commence\nan action for patent infringement against You in that instance.\n\n12.2 Effect of Termination. Upon termination, You agree to immediately\nstop any further use, reproduction, modification, sublicensing and\ndistribution of the Covered Code. All sublicenses to the Covered Code\nwhich have been properly granted prior to termination shall survive\nany termination of this License. Provisions which, by their nature,\nshould remain in effect beyond the termination of this License shall\nsurvive, including but not limited to Sections 3, 5, 8, 9, 10, 11,\n12.2 and 13. No party will be liable to any other for compensation,\nindemnity or damages of any sort solely as a result of terminating\nthis License in accordance with its terms, and termination of this\nLicense will be without prejudice to any other right or remedy of\nany party.\n\n13. Miscellaneous.\n\n13.1 Government End Users. The Covered Code is a \"commercial item\" as\ndefined in FAR 2.101. Government software and technical data rights in\nthe Covered Code include only those rights customarily provided to the\npublic as defined in this License. This customary commercial license\nin technical data and software is provided in accordance with FAR\n12.211 (Technical Data) and 12.212 (Computer Software) and, for\nDepartment of Defense purchases, DFAR 252.227-7015 (Technical Data --\nCommercial Items) and 227.7202-3 (Rights in Commercial Computer\nSoftware or Computer Software Documentation). Accordingly, all U.S.\nGovernment End Users acquire Covered Code with only those rights set\nforth herein.\n\n13.2 Relationship of Parties. This License will not be construed as\ncreating an agency, partnership, joint venture or any other form of\nlegal association between or among You, Apple or any Contributor, and\nYou will not represent to the contrary, whether expressly, by\nimplication, appearance or otherwise.\n\n13.3 Independent Development. Nothing in this License will impair\nApple's right to acquire, license, develop, have others develop for\nit, market and/or distribute technology or products that perform the\nsame or similar functions as, or otherwise compete with,\nModifications, Larger Works, technology or products that You may\ndevelop, produce, market or distribute.\n\n13.4 Waiver; Construction. Failure by Apple or any Contributor to\nenforce any provision of this License will not be deemed a waiver of\nfuture enforcement of that or any other provision. Any law or\nregulation which provides that the language of a contract shall be\nconstrued against the drafter will not apply to this License.\n\n13.5 Severability. (a) If for any reason a court of competent\njurisdiction finds any provision of this License, or portion thereof,\nto be unenforceable, that provision of the License will be enforced to\nthe maximum extent permissible so as to effect the economic benefits\nand intent of the parties, and the remainder of this License will\ncontinue in full force and effect. (b) Notwithstanding the foregoing,\nif applicable law prohibits or restricts You from fully and/or\nspecifically complying with Sections 2 and/or 3 or prevents the\nenforceability of either of those Sections, this License will\nimmediately terminate and You must immediately discontinue any use of\nthe Covered Code and destroy all copies of it that are in your\npossession or control.\n\n13.6 Dispute Resolution. Any litigation or other dispute resolution\nbetween You and Apple relating to this License shall take place in the\nNorthern District of California, and You and Apple hereby consent to\nthe personal jurisdiction of, and venue in, the state and federal\ncourts within that District with respect to this License. The\napplication of the United Nations Convention on Contracts for the\nInternational Sale of Goods is expressly excluded.\n\n13.7 Entire Agreement; Governing Law. This License constitutes the\nentire agreement between the parties with respect to the subject\nmatter hereof. This License shall be governed by the laws of the\nUnited States and the State of California, except that body of\nCalifornia law concerning conflicts of law.\n\nWhere You are located in the province of Quebec, Canada, the following\nclause applies: The parties hereby confirm that they have requested\nthat this License and all related documents be drafted in English. Les\nparties ont exige que le present contrat et tous les documents\nconnexes soient rediges en anglais.\n\nEXHIBIT A.\n\n\"Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights\nReserved.\n\nThis file contains Original Code and/or Modifications of Original Code\nas defined in and that are subject to the Apple Public Source License\nVersion 2.0 (the 'License'). You may not use this file except in\ncompliance with the License. Please obtain a copy of the License at\nhttp://www.opensource.apple.com/apsl/ and read it before using this\nfile.\n\nThe Original Code and all software distributed under the License are\ndistributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,\nINCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.\nPlease see the License for the specific language governing rights and\nlimitations under the License.\"\n"
        },
        {
          "name": "LICENSE_GEMS",
          "type": "blob",
          "size": 6.23,
          "content": "This file is auto-generated by tools/dev/update_gem_licenses.sh\nAscii85, 1.1.1, MIT\naarch64, 2.1.0, \"Apache 2.0\"\nabbrev, 0.1.2, \"ruby, Simplified BSD\"\nactionpack, 7.0.8.6, MIT\nactionview, 7.0.8.6, MIT\nactivemodel, 7.0.8.6, MIT\nactiverecord, 7.0.8.6, MIT\nactivesupport, 7.0.8.6, MIT\naddressable, 2.8.7, \"Apache 2.0\"\nafm, 0.2.2, MIT\nallure-rspec, 2.24.5, \"Apache 2.0\"\nallure-ruby-commons, 2.24.5, \"Apache 2.0\"\narel-helpers, 2.15.0, MIT\nast, 2.4.2, MIT\naws-eventstream, 1.3.0, \"Apache 2.0\"\naws-partitions, 1.999.0, \"Apache 2.0\"\naws-sdk-core, 3.211.0, \"Apache 2.0\"\naws-sdk-ec2, 1.486.0, \"Apache 2.0\"\naws-sdk-ec2instanceconnect, 1.52.0, \"Apache 2.0\"\naws-sdk-iam, 1.112.0, \"Apache 2.0\"\naws-sdk-kms, 1.95.0, \"Apache 2.0\"\naws-sdk-s3, 1.169.0, \"Apache 2.0\"\naws-sdk-ssm, 1.183.0, \"Apache 2.0\"\naws-sigv4, 1.10.1, \"Apache 2.0\"\nbase64, 0.2.0, \"ruby, Simplified BSD\"\nbcrypt, 3.1.20, MIT\nbcrypt_pbkdf, 1.1.1, MIT\nbenchmark, 0.4.0, \"ruby, Simplified BSD\"\nbigdecimal, 3.1.8, \"ruby, Simplified BSD\"\nbindata, 2.4.15, \"Simplified BSD\"\nbootsnap, 1.18.4, MIT\nbson, 5.0.1, \"Apache 2.0\"\nbuilder, 3.3.0, MIT\nbundler, 2.5.10, MIT\nbyebug, 11.1.3, \"Simplified BSD\"\nchunky_png, 1.4.0, MIT\ncoderay, 1.1.3, MIT\nconcurrent-ruby, 1.3.4, MIT\ncookiejar, 0.3.4, \"Simplified BSD\"\ncrass, 1.0.6, MIT\ncsv, 3.3.0, \"ruby, Simplified BSD\"\ndaemons, 1.4.1, MIT\ndate, 3.4.1, \"ruby, Simplified BSD\"\ndebug, 1.8.0, \"ruby, Simplified BSD\"\ndiff-lcs, 1.5.1, \"MIT, Artistic-2.0, GPL-2.0-or-later\"\ndnsruby, 1.72.2, \"Apache 2.0\"\ndocile, 1.4.1, MIT\ndomain_name, 0.6.20240107, \"Simplified BSD, New BSD, Mozilla Public License 2.0\"\ndrb, 2.2.1, \"ruby, Simplified BSD\"\ned25519, 1.3.0, MIT\nelftools, 1.3.1, MIT\nem-http-request, 1.1.7, MIT\nem-socksify, 0.3.3, MIT\nerubi, 1.13.0, MIT\neventmachine, 1.2.7, \"ruby, GPL-2.0\"\nfactory_bot, 6.5.0, MIT\nfactory_bot_rails, 6.4.4, MIT\nfaker, 3.5.1, MIT\nfaraday, 2.7.11, MIT\nfaraday-net_http, 3.0.2, MIT\nfaraday-retry, 2.2.1, MIT\nfaye-websocket, 0.11.3, \"Apache 2.0\"\nffi, 1.16.3, \"New BSD\"\nfiddle, 1.1.6, \"ruby, Simplified BSD\"\nfilesize, 0.2.0, MIT\nfivemat, 1.3.7, MIT\ngetoptlong, 0.2.1, \"ruby, Simplified BSD\"\ngssapi, 1.3.1, MIT\ngyoku, 1.4.0, MIT\nhashery, 2.1.2, \"Simplified BSD\"\nhrr_rb_ssh, 0.4.2, \"Apache 2.0\"\nhrr_rb_ssh-ed25519, 0.4.2, \"Apache 2.0\"\nhttp-cookie, 1.0.7, MIT\nhttp_parser.rb, 0.8.0, MIT\nhttpclient, 2.8.3, ruby\ni18n, 1.14.6, MIT\nio-console, 0.7.2, \"ruby, Simplified BSD\"\nirb, 1.7.4, \"ruby, Simplified BSD\"\njmespath, 1.6.2, \"Apache 2.0\"\njsobfu, 0.4.2, \"New BSD\"\njson, 2.7.5, ruby\nlanguage_server-protocol, 3.17.0.3, MIT\nlittle-plugger, 1.1.4, MIT\nlogger, 1.6.1, \"ruby, Simplified BSD\"\nlogging, 2.4.0, MIT\nloofah, 2.23.1, MIT\nmacaddr, 1.7.2, ruby\nmemory_profiler, 1.1.0, MIT\nmetasm, 1.0.5, LGPL-2.1\nmetasploit-concern, 5.0.3, \"New BSD\"\nmetasploit-credential, 6.0.11, \"New BSD\"\nmetasploit-framework, 6.4.45, \"New BSD\"\nmetasploit-model, 5.0.2, \"New BSD\"\nmetasploit-payloads, 2.0.189, \"3-clause (or \"\"modified\"\") BSD\"\nmetasploit_data_models, 6.0.5, \"New BSD\"\nmetasploit_payloads-mettle, 1.0.35, \"3-clause (or \"\"modified\"\") BSD\"\nmethod_source, 1.1.0, MIT\nmime-types, 3.6.0, MIT\nmime-types-data, 3.2024.1001, MIT\nmini_portile2, 2.8.7, MIT\nminitest, 5.25.1, MIT\nmqtt, 0.6.0, MIT\nmsgpack, 1.6.1, \"Apache 2.0\"\nmulti_json, 1.15.0, MIT\nmustermann, 3.0.3, MIT\nmutex_m, 0.2.0, \"ruby, Simplified BSD\"\nnessus_rest, 0.1.6, MIT\nnet-imap, 0.5.0, \"ruby, Simplified BSD\"\nnet-ldap, 0.19.0, MIT\nnet-protocol, 0.2.2, \"ruby, Simplified BSD\"\nnet-sftp, 4.0.0, MIT\nnet-smtp, 0.5.0, \"ruby, Simplified BSD\"\nnet-ssh, 7.3.0, MIT\nnetwork_interface, 0.0.4, MIT\nnexpose, 7.3.0, \"New BSD\"\nnio4r, 2.7.4, \"MIT, Simplified BSD\"\nnokogiri, 1.16.7, MIT\nnori, 2.7.1, MIT\noctokit, 4.25.1, MIT\nopenssl-ccm, 1.2.3, MIT\nopenssl-cmac, 2.0.2, MIT\nopenvas-omp, 0.0.4, MIT\nostruct, 0.6.1, \"ruby, Simplified BSD\"\npacketfu, 2.0.0, \"New BSD\"\nparallel, 1.26.3, MIT\nparser, 3.3.5.0, MIT\npatch_finder, 1.0.2, \"New BSD\"\npcaprub, 0.13.3, LGPL-2.1\npdf-reader, 2.12.0, MIT\npg, 1.5.9, \"Simplified BSD\"\npry, 0.14.2, MIT\npry-byebug, 3.10.1, MIT\npublic_suffix, 6.0.1, MIT\npuma, 6.4.3, \"New BSD\"\nracc, 1.8.1, \"ruby, Simplified BSD\"\nrack, 2.2.10, MIT\nrack-protection, 3.2.0, MIT\nrack-test, 2.1.0, MIT\nrails-dom-testing, 2.2.0, MIT\nrails-html-sanitizer, 1.6.0, MIT\nrailties, 7.0.8.6, MIT\nrainbow, 3.1.1, MIT\nrake, 13.2.1, MIT\nrasn1, 0.13.0, MIT\nrb-readline, 0.5.5, BSD\nrecog, 3.1.11, unknown\nredcarpet, 3.6.0, MIT\nregexp_parser, 2.9.2, MIT\nreline, 0.5.10, ruby\nrequire_all, 3.0.0, MIT\nrex-arch, 0.1.16, \"New BSD\"\nrex-bin_tools, 0.1.9, \"New BSD\"\nrex-core, 0.1.32, \"New BSD\"\nrex-encoder, 0.1.7, \"New BSD\"\nrex-exploitation, 0.1.40, \"New BSD\"\nrex-java, 0.1.7, \"New BSD\"\nrex-mime, 0.1.8, \"New BSD\"\nrex-nop, 0.1.3, \"New BSD\"\nrex-ole, 0.1.8, \"New BSD\"\nrex-powershell, 0.1.100, \"New BSD\"\nrex-random_identifier, 0.1.13, \"New BSD\"\nrex-registry, 0.1.5, \"New BSD\"\nrex-rop_builder, 0.1.5, \"New BSD\"\nrex-socket, 0.1.58, \"New BSD\"\nrex-sslscan, 0.1.10, \"New BSD\"\nrex-struct2, 0.1.4, \"New BSD\"\nrex-text, 0.2.59, \"New BSD\"\nrex-zip, 0.1.5, \"New BSD\"\nrexml, 3.3.9, \"Simplified BSD\"\nrkelly-remix, 0.0.7, MIT\nrspec, 3.13.0, MIT\nrspec-core, 3.13.2, MIT\nrspec-expectations, 3.13.3, MIT\nrspec-mocks, 3.13.2, MIT\nrspec-rails, 7.0.1, MIT\nrspec-rerun, 1.1.0, MIT\nrspec-support, 3.13.1, MIT\nrubocop, 1.67.0, MIT\nrubocop-ast, 1.33.0, MIT\nruby-macho, 4.1.0, MIT\nruby-mysql, 4.1.0, MIT\nruby-prof, 1.4.2, \"Simplified BSD\"\nruby-progressbar, 1.13.0, MIT\nruby-rc4, 0.1.5, MIT\nruby2_keywords, 0.0.5, \"ruby, Simplified BSD\"\nruby_smb, 3.3.13, \"New BSD\"\nrubyntlm, 0.6.5, MIT\nrubyzip, 2.3.2, \"Simplified BSD\"\nsawyer, 0.9.2, MIT\nsimplecov, 0.18.2, MIT\nsimplecov-html, 0.13.1, MIT\nsimpleidn, 0.2.3, MIT\nsinatra, 3.2.0, MIT\nsqlite3, 1.7.3, \"New BSD\"\nsshkey, 3.0.0, MIT\nstrptime, 0.2.5, \"Simplified BSD\"\nswagger-blocks, 3.0.0, MIT\nsystemu, 2.6.5, ruby\ntest-prof, 1.4.2, MIT\nthin, 1.8.2, \"GPL-2.0+, ruby\"\nthor, 1.3.2, MIT\ntilt, 2.4.0, MIT\ntimecop, 0.9.10, MIT\ntimeout, 0.4.1, \"ruby, Simplified BSD\"\nttfunk, 1.8.0, \"Nonstandard, GPL-2.0-only, GPL-3.0-only\"\ntzinfo, 2.0.6, MIT\ntzinfo-data, 1.2024.2, MIT\nunicode-display_width, 2.6.0, MIT\nunix-crypt, 1.3.1, 0BSD\nuuid, 2.3.9, MIT\nwarden, 1.2.9, MIT\nwebrick, 1.8.2, \"ruby, Simplified BSD\"\nwebsocket-driver, 0.7.6, \"Apache 2.0\"\nwebsocket-extensions, 0.1.5, \"Apache 2.0\"\nwin32api, 0.1.0, unknown\nwindows_error, 0.1.5, BSD\nwinrm, 2.3.9, \"Apache 2.0\"\nxdr, 3.0.3, \"Apache 2.0\"\nxmlrpc, 0.3.3, \"ruby, Simplified BSD\"\nyard, 0.9.37, MIT\nzeitwerk, 2.6.18, MIT\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.56,
          "content": "# Metasploit Framework\n\nThe Metasploit Framework is an open-source tool released under a BSD-style license. For detailed licensing information, refer to the `COPYING` file.\n\n## Latest Version\nAccess the latest version of Metasploit from the [Nightly Installers](https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html) page.\n\n## Documentation\nComprehensive documentation, including usage guides, is available at [Metasploit Docs](https://docs.metasploit.com/).\n\n## Development Environment\nTo set up a development environment, visit the [Development Setup Guide](https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html).\n\n## Bug and Feature Requests\nSubmit bugs and feature requests via the [GitHub Issues](https://github.com/rapid7/metasploit-framework/issues) tracker. New submissions can be made through the [MSF-BUGv1 form](https://github.com/rapid7/metasploit-framework/issues/new/choose).\n\n## API Documentation\nFor information on writing modules, refer to the [API Documentation](https://docs.metasploit.com/api/).\n\n## Support and Communication\nFor questions and suggestions, join the Freenode IRC channel or contact the metasploit-hackers mailing list.\n\n## Installing Metasploit\n\n### Recommended Installation\n\nWe recommend installation with the [official Metasploit installers](https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html#installing-metasploit-on-linux--macos) on Linux or macOS. Metasploit is also pre-installed with Kali.\n\nFor a manual setup, consult the [Dev Environment Setup](https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html) guide.\n\n## Using Metasploit\n\nTo get started with Metasploit:\n\n1. **Start `msfconsole`:** This is the primary interface for interacting with Metasploit.\n2. **Explore Resources:** \n   - Visit the [Using Metasploit](https://docs.metasploit.com/docs/using-metasploit/getting-started/index.html) section of the documentation.\n\n## Contributing\n\nTo contribute to Metasploit:\n\n1. **Setup Development Environment:** Follow the instructions in the [Development Setup Guide](https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html) on GitHub.\n2. **Clone the Repository:** Obtain the source code from the official repository.\n3. **Submit a Pull Request:** After making changes, submit a pull request for review. Additional details can be found in the [Contributing Guide](https://github.com/rapid7/metasploit-framework/blob/master/CONTRIBUTING.md).\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 1.29,
          "content": "#!/usr/bin/env rake\nrequire File.expand_path('../config/application', __FILE__)\nrequire 'msfenv'\nrequire 'metasploit/framework/require'\nrequire 'metasploit/framework/spec/untested_payloads'\n\n# @note must be before `Metasploit::Framework::Application.load_tasks`\n#\n# define db rake tasks from activerecord if activerecord is in the bundle.  activerecord could be not in the bundle if\n# the user installs with `bundle install --without db`\nMetasploit::Framework::Require.optionally_active_record_railtie\n\nbegin\n  require 'rspec/core'\n  require 'rspec-rerun/tasks'\nrescue LoadError\n  puts \"rspec not in bundle, so can't set up spec tasks.  \" \\\n       \"To run specs ensure to install the development and test groups.\"\n  puts \"Bundle currently installed '--without #{Bundler.settings.without.join(' ')}'.\"\n  puts \"To clear the without option do `bundle install --without ''` (the --without flag with an empty string) or \" \\\n       \"`rm -rf .bundle` to remove the .bundle/config manually and then `bundle install`\"\nelse\n  require 'rspec/core/rake_task'\n  RSpec::Core::RakeTask.new(spec: 'db:test:prepare')\nend\n\nMetasploit::Framework::Application.load_tasks\nMetasploit::Framework::Spec::Constants.define_task\nMetasploit::Framework::Spec::Threads::Suite.define_task\nMetasploit::Framework::Spec::UntestedPayloads.define_task\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 2.71,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\ndisplay_name = \"metasploit-framework\"\n\nVagrant.configure(2) do |config|\n  config.ssh.forward_x11 = true\n  config.vm.box = \"hashicorp/bionic64\" # https://app.vagrantup.com/hashicorp/boxes/bionic64\n  config.vm.network :forwarded_port, guest: 4444, host: 4444\n  config.vm.provider \"vmware_desktop\" do |v|\n\t  v.memory = 2048\n\t  v.cpus = 2\n    v.vmx['displayname'] = display_name\n    #v.gui = true # uncomment to show VM in your hypervisor's GUI\n  end\n  config.vm.provider \"virtualbox\" do |v|\n    v.name = display_name\n\t  v.memory = 2048\n\t  v.cpus = 2\n    #v.gui = true # uncomment to show VM in your hypervisor's GUI\n  end\n  %w(.vimrc .gitconfig).each do |f|\n    local = File.expand_path \"~/#{f}\"\n    if File.exist? local\n      config.vm.provision \"file\", source: local, destination: f\n    end\n  end\n\n  [ #\"echo 127.0.1.1 `cat /etc/hostname` >> /etc/hosts\", work around a bug in official Ubuntu Xenial cloud images\n    \"apt-get update\",\n    \"apt-get dist-upgrade -y\",\n    \"apt-get -y install curl build-essential git tig vim john nmap libpq-dev libpcap-dev gnupg2 fortune postgresql postgresql-contrib\",\n  ].each do |step|\n    config.vm.provision \"shell\", inline: step\n  end\n\n  [ # use the rvm install method used in omnibus install\n    # only show stderr when gpg really fails. avoids superfluous stderr from gpg\n    'out=`curl -sSL https://rvm.io/mpapis.asc | gpg --import - 2>&1` && echo \"imported mpapis.asc\" || echo $out 1>&2',\n    'out=`curl -sSL https://rvm.io/pkuczynski.asc | gpg --import - 2>&1` && echo \"imported pkuczynski.asc\" || echo $out 1>&2',\n    'out=`curl -L -sSL https://get.rvm.io | bash -s stable 2>&1` && echo \"rvm installed\" || echo $out 1>&2',\n    # only install Ruby if the right version isn't already present\n    \"echo 'Installing Ruby if necessary'\",\n    'cd /vagrant && rv=`cat .ruby-version` && source ~/.rvm/scripts/rvm && rvm list strings | grep -q $rv || rvm install $rv',\n    'source ~/.rvm/scripts/rvm && cd /vagrant && gem install --quiet bundler && bundle',\n    'mkdir -p ~/.msf4',\n  ].each do |step|\n    config.vm.provision \"shell\", privileged: false, inline: step\n  end\n  config.vm.provision \"file\", source: \"config/database.yml.vagrant\", destination: \"~/.msf4/database.yml\"\n\n  config.vm.provision \"shell\", inline: \"sudo -u postgres psql postgres -tAc \\\"SELECT 1 FROM pg_roles WHERE rolname='vagrant'\\\" | grep -q 1 || sudo -u postgres createuser -s -e -w vagrant && sudo -u postgres psql -c \\\"ALTER USER vagrant with ENCRYPTED PASSWORD 'vagrant';\\\"\"\n\n  [\"msf_dev_db\", \"msf_test_db\"].each do |database|\n    config.vm.provision \"shell\", inline: \"sudo -u postgres psql -lqt | awk '{ print $1 }' | grep -w #{database} | wc -l | grep -q 1 || sudo -u postgres createdb --owner vagrant #{database}\"\n  end\nend\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "cortex.yaml",
          "type": "blob",
          "size": 0.31,
          "content": "---\ninfo:\n  title: Metasploit Framework\n  description: Metasploit Framework\n  x-cortex-git:\n    github:\n      alias: r7org\n      repository: rapid7/metasploit-framework\n  x-cortex-tag: metasploit-framework\n  x-cortex-type: service\n  x-cortex-domain-parents:\n  - tag: metasploit\nopenapi: 3.0.1\nservers:\n- url: \"/\"\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "db",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.override.yml",
          "type": "blob",
          "size": 0.28,
          "content": "services:\n  ms:\n    build:\n      context: .\n      dockerfile: ./Dockerfile\n      args:\n        BUNDLER_ARGS: --jobs=8\n    image: metasploit:dev\n    environment:\n      DATABASE_URL: postgres://postgres@db:5432/msf_dev?pool=200&timeout=5\n    volumes:\n      - .:/usr/src/metasploit-framework\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.44,
          "content": "services:\n  ms:\n    image: metasploitframework/metasploit-framework:latest\n    environment:\n      DATABASE_URL: postgres://postgres@db:5432/msf?pool=200&timeout=5\n    links:\n      - db\n    ports:\n      - 4444:4444\n    volumes:\n      - $HOME/.msf4:/home/msf/.msf4\n\n  db:\n    image: postgres:10-alpine\n    volumes:\n      - pg_data:/var/lib/postgresql/data\n    environment:\n      POSTGRES_HOST_AUTH_METHOD: trust\n\nvolumes:\n  pg_data:\n    driver: local\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "metasploit-framework.gemspec",
          "type": "blob",
          "size": 10.83,
          "content": "# coding: utf-8\n\n# During build, the Gemfile is temporarily moved and\n# we must manually define the project root\nif ENV['MSF_ROOT']\n  lib = File.realpath(File.expand_path('lib', ENV['MSF_ROOT']))\n  $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\n  require 'metasploit/framework/version'\n  require 'metasploit/framework/rails_version_constraint'\n  require 'msf/util/helper'\nelse\n  # XXX: Use explicit calls to require_relative to ensure that static analysis tools such as dependabot work\n  require_relative 'lib/metasploit/framework/version'\n  require_relative 'lib/metasploit/framework/rails_version_constraint'\n  require_relative 'lib/msf/util/helper'\nend\n\nGem::Specification.new do |spec|\n  spec.name          = 'metasploit-framework'\n  spec.version       = Metasploit::Framework::GEM_VERSION\n  spec.authors       = ['Metasploit Hackers']\n  spec.email         = ['msfdev@metasploit.com']\n  spec.summary       = 'metasploit-framework'\n  spec.description   = 'metasploit-framework'\n  spec.homepage      = 'https://www.metasploit.com'\n  spec.license       = 'BSD-3-clause'\n\n  # only do a git ls-files if the .git folder exists and we have a git binary in PATH\n  if File.directory?(File.join(File.dirname(__FILE__), \".git\")) && Msf::Util::Helper.which(\"git\")\n    spec.files         = `git ls-files`.split($/).reject { |file|\n      file =~ /^external|^docs|^\\.solargraph\\.yml/\n    }\n  end\n  spec.bindir = '.'\n  if ENV['CREATE_BINSTUBS']\n    spec.executables   = [\n      'msfconsole',\n      'msfd',\n      'msfrpc',\n      'msfrpcd',\n      'msfvenom'\n    ]\n  end\n  spec.test_files    = spec.files.grep(%r{^spec/})\n  spec.require_paths = [\"lib\"]\n\n  spec.required_ruby_version = '>= 2.7'\n\n  # Database support\n  spec.add_runtime_dependency 'activerecord', *Metasploit::Framework::RailsVersionConstraint::RAILS_VERSION\n  # Need 3+ for ActiveSupport::Concern\n  spec.add_runtime_dependency 'activesupport', *Metasploit::Framework::RailsVersionConstraint::RAILS_VERSION\n  # Needed for config.action_view for view plugin compatibility for Pro\n  spec.add_runtime_dependency 'actionpack', *Metasploit::Framework::RailsVersionConstraint::RAILS_VERSION\n  # Needed for some admin modules (cfme_manageiq_evm_pass_reset.rb)\n  spec.add_runtime_dependency 'bcrypt'\n  # Improves bootup performance by caching expensive computations\n  spec.add_runtime_dependency 'bootsnap'\n  # Needed for Javascript obfuscation\n  spec.add_runtime_dependency 'jsobfu'\n  # Needed for some admin modules (scrutinizer_add_user.rb)\n  spec.add_runtime_dependency 'json'\n  # Metasm compiler/decompiler/assembler\n  spec.add_runtime_dependency 'metasm'\n  # Needed for aarch64 assembler support - as Metasm does not currently support Aarch64 fully\n  spec.add_runtime_dependency 'aarch64'\n  # Metasploit::Concern hooks\n  spec.add_runtime_dependency 'metasploit-concern'\n  # Metasploit::Credential database models\n  spec.add_runtime_dependency 'metasploit-credential'\n  # Database models shared between framework and Pro.\n  spec.add_runtime_dependency 'metasploit_data_models'\n  # Things that would normally be part of the database model, but which\n  # are needed when there's no database\n  spec.add_runtime_dependency 'metasploit-model'\n  # Needed for Meterpreter\n  spec.add_runtime_dependency 'metasploit-payloads', '2.0.189'\n  # Needed for the next-generation POSIX Meterpreter\n  spec.add_runtime_dependency 'metasploit_payloads-mettle', '1.0.35'\n  # Needed by msfgui and other rpc components\n  # Locked until build env can handle newer version. See: https://github.com/msgpack/msgpack-ruby/issues/334\n  spec.add_runtime_dependency 'msgpack', '~> 1.6.0'\n  # get list of network interfaces, like eth* from OS.\n  spec.add_runtime_dependency 'network_interface'\n  # NTLM authentication\n  spec.add_runtime_dependency 'rubyntlm'\n  # Needed by for XML parsing\n  spec.add_runtime_dependency 'nokogiri'\n  # Needed by db.rb and Msf::Exploit::Capture\n  spec.add_runtime_dependency 'packetfu'\n  # For sniffer and raw socket modules\n  spec.add_runtime_dependency 'pcaprub'\n  # Used by the Metasploit data model, etc.\n  # bound to 0.2x for Activerecord 4.2.8 deprecation warnings:\n  # https://github.com/ged/ruby-pg/commit/c90ac644e861857ae75638eb6954b1cb49617090\n  spec.add_runtime_dependency 'pg'\n  # Run initializers for metasploit-concern, metasploit-credential, metasploit_data_models Rails::Engines\n  spec.add_runtime_dependency 'railties'\n  # required for OS fingerprinting\n  spec.add_runtime_dependency 'recog'\n  # required for bitlocker fvek extraction\n  spec.add_runtime_dependency 'openssl-ccm'\n  # Needed for documentation generation - locked unitl Ruby 2.6 support is dropped\n  spec.add_runtime_dependency 'octokit', '~> 4.0'\n  spec.add_runtime_dependency 'redcarpet'\n  # Needed for Microsoft patch finding tool (msu_finder)\n  spec.add_runtime_dependency 'patch_finder'\n  # Required for Metasploit Web Services\n  spec.add_runtime_dependency 'puma'\n  spec.add_runtime_dependency 'ruby-mysql'\n  spec.add_runtime_dependency 'thin'\n  spec.add_runtime_dependency 'sinatra'\n  spec.add_runtime_dependency 'warden'\n  spec.add_runtime_dependency 'swagger-blocks'\n  # Required for JSON-RPC client\n  spec.add_runtime_dependency 'em-http-request'\n  # TimeZone info\n  spec.add_runtime_dependency 'tzinfo-data'\n  # Gem for dealing with SSHKeys\n  spec.add_runtime_dependency 'sshkey'\n  # Library for interpreting Windows error codes and strings\n  spec.add_runtime_dependency 'windows_error'\n  # This used to be depended on by nokogiri, depended on by wmap\n  if Gem::Version.new(RUBY_VERSION) >= Gem::Version.new('2.3.0')\n    spec.add_runtime_dependency 'xmlrpc'\n  end\n  # Gem for handling Cookies\n  spec.add_runtime_dependency 'http-cookie'\n  # Needed for some modules (polkit_auth_bypass.rb)\n  spec.add_runtime_dependency 'unix-crypt'\n  # Needed for Kerberos structure parsing; Pinned to ensure a security review is performed on updates\n  spec.add_runtime_dependency 'rasn1', '0.13.0'\n\n  #\n  # File Parsing Libraries\n  #\n  # Needed by auxiliary/gather/http_pdf_authors module\n  spec.add_runtime_dependency 'pdf-reader'\n  spec.add_runtime_dependency 'ruby-macho'\n  # Needed for mongodb/bson\n  spec.add_runtime_dependency 'bson'\n\n  #\n  # Protocol Libraries\n  #\n  spec.add_runtime_dependency 'dnsruby'\n  spec.add_runtime_dependency 'mqtt'\n  spec.add_runtime_dependency 'net-ssh'\n  spec.add_runtime_dependency 'ed25519' # Adds ed25519 keys for net-ssh\n  spec.add_runtime_dependency 'bcrypt_pbkdf'\n  spec.add_runtime_dependency 'ruby_smb', '~> 3.3.3'\n  spec.add_runtime_dependency 'net-imap' # Used in Postgres auth for its SASL stringprep implementation\n  spec.add_runtime_dependency 'net-ldap'\n  spec.add_runtime_dependency 'net-smtp'\n  spec.add_runtime_dependency 'net-sftp'\n  spec.add_runtime_dependency 'winrm'\n  spec.add_runtime_dependency 'ffi', '< 1.17.0'\n\n  #\n  # REX Libraries\n  #\n  # Core of the Ruby Exploitation Library\n  spec.add_runtime_dependency 'rex-core'\n  # Text manipulation library for things like generating random string\n  spec.add_runtime_dependency 'rex-text'\n  # Library for Generating Randomized strings valid as Identifiers such as variable names\n  spec.add_runtime_dependency 'rex-random_identifier'\n  # library for creating Powershell scripts for exploitation purposes\n  spec.add_runtime_dependency 'rex-powershell'\n  # Library for processing and creating Zip compatbile archives\n  spec.add_runtime_dependency 'rex-zip'\n  # Library for parsing offline Windows Registry files\n  spec.add_runtime_dependency 'rex-registry'\n  # Library for parsing Java serialized streams\n  spec.add_runtime_dependency 'rex-java'\n  # Library for C-style structs\n  spec.add_runtime_dependency 'rex-struct2'\n  # Library which contains architecture specific information such as registers, opcodes,\n  # and stack manipulation routines.\n  spec.add_runtime_dependency 'rex-arch'\n  # Library for working with OLE.\n  spec.add_runtime_dependency 'rex-ole'\n  # Library for creating and/or parsing MIME messages.\n  spec.add_runtime_dependency 'rex-mime'\n  # Library for Dynamic Multi-byte x86 NOP generation\n  spec.add_runtime_dependency 'rex-nop'\n  # Library for parsing and manipulating executable binaries\n  spec.add_runtime_dependency 'rex-bin_tools'\n  # Rex Socket Abstraction Layer\n  spec.add_runtime_dependency 'rex-socket'\n  # Library for scanning a server's SSL/TLS capabilities\n  spec.add_runtime_dependency 'rex-sslscan'\n  # Library and tool for finding ROP gadgets in a supplied binary\n  spec.add_runtime_dependency 'rex-rop_builder'\n  # Library for polymorphic encoders; used for payload encoding\n  spec.add_runtime_dependency 'rex-encoder'\n  # Library for exploit development helpers\n  spec.add_runtime_dependency 'rex-exploitation'\n  # Command line editing, history, and tab completion in msfconsole\n  spec.add_runtime_dependency 'rb-readline'\n  # Needed by some modules\n  spec.add_runtime_dependency 'rubyzip'\n  # Needed for some post modules\n  spec.add_runtime_dependency 'sqlite3', '1.7.3'\n  # required for Time::TZInfo in ActiveSupport\n  spec.add_runtime_dependency 'tzinfo'\n  # Needed so that disk size output isn't horrible\n  spec.add_runtime_dependency 'filesize'\n  # Needed for openvas plugin\n  spec.add_runtime_dependency 'openvas-omp'\n  # Needed by metasploit nessus bridge\n  spec.add_runtime_dependency 'nessus_rest'\n  # Nexpose Gem\n  spec.add_runtime_dependency 'nexpose'\n  # Needed for NDMP sockets\n  spec.add_runtime_dependency 'xdr'\n  # Needed for ::Msf...CertProvider\n  spec.add_runtime_dependency 'faker'\n  # SSH server library with ed25519\n  spec.add_runtime_dependency 'hrr_rb_ssh-ed25519'\n  # Needed for irb internal command\n  spec.add_runtime_dependency 'irb', '~> 1.7.4'\n\n  # AWS enumeration modules\n  spec.add_runtime_dependency 'aws-sdk-s3'\n  spec.add_runtime_dependency 'aws-sdk-ec2'\n  spec.add_runtime_dependency 'aws-sdk-iam'\n  spec.add_runtime_dependency 'aws-sdk-ssm'\n\n  # AWS session support\n  spec.add_runtime_dependency 'aws-sdk-ec2instanceconnect'\n\n  # Needed for WebSocket Support\n  spec.add_runtime_dependency 'faye-websocket'\n  spec.add_runtime_dependency 'eventmachine'\n\n  spec.add_runtime_dependency 'faraday', '2.7.11'\n  spec.add_runtime_dependency 'faraday-retry'\n\n  # Required for windows terminal colors as of Ruby 3.0\n  spec.add_runtime_dependency 'win32api'\n\n  spec.add_runtime_dependency 'zeitwerk'\n\n  # Required for PNG payload support.\n  # WARNING: Chunky_PNG is vulnerable to decompression bomb attacks.\n  # Do not use this to process untrusted PNG files! This is only to be used\n  # to generate PNG files, not to parse untrusted PNG files.\n  spec.add_runtime_dependency 'chunky_png'\n\n  # Needed for multiline REPL support for interactive SQL sessions\n  spec.add_runtime_dependency 'reline'\n\n  # Needed to parse sections of ELF files in order to retrieve symbols\n  spec.add_runtime_dependency 'elftools'\n\n  # Standard libraries: https://www.ruby-lang.org/en/news/2023/12/25/ruby-3-3-0-released/\n  %w[\n    abbrev\n    base64\n    benchmark\n    bigdecimal\n    csv\n    drb\n    fiddle\n    getoptlong\n    mutex_m\n    ostruct\n  ].each do |library|\n    spec.add_runtime_dependency library\n  end\nend\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "msf-json-rpc.ru",
          "type": "blob",
          "size": 1.29,
          "content": "# msf-json-rpc.ru\n# Start using thin:\n# thin --rackup msf-json-rpc.ru --address localhost --port 8081 --environment development --tag msf-json-rpc start\n#\n\nrequire 'pathname'\n@framework_path = File.expand_path(File.dirname(__FILE__))\nroot = Pathname.new(@framework_path).expand_path\n@framework_lib_path = root.join('lib')\n$LOAD_PATH << @framework_lib_path.to_path unless $LOAD_PATH.include?(@framework_lib_path)\n\nrequire 'msfenv'\n\nif ENV['MSF_LOCAL_LIB']\n  $LOAD_PATH << ENV['MSF_LOCAL_LIB'] unless $LOAD_PATH.include?(ENV['MSF_LOCAL_LIB'])\nend\n\nrun Msf::WebServices::JsonRpcApp\n\n#\n# Ensure that framework is loaded before any external requests can be routed to the running\n# application. This stops the possibility of the rack application being alive, but all\n# requests failing.\n#\nwarmup do |app|\n  client = Rack::MockRequest.new(app)\n  response = client.get('/api/v1/health')\n\n  warmup_error_message = \"Metasploit JSON RPC did not successfully start up. Unexpected response returned: '#{response.body}'\"\n  begin\n    parsed_response = JSON.parse(response.body)\n  rescue JSON::ParserError => e\n    raise warmup_error_message, e\n  end\n\n  expected_response = { 'data' => { 'status' => 'UP' } }\n  is_valid_response = parsed_response == expected_response\n\n  unless is_valid_response\n    raise warmup_error_message\n  end\nend\n"
        },
        {
          "name": "msf-ws.ru",
          "type": "blob",
          "size": 0.42,
          "content": "# msf-ws.ru\n# Metasploit data web service\n\nrequire 'pathname'\n@framework_path = '.'\nroot = Pathname.new(@framework_path).expand_path\n@framework_lib_path = root.join('lib')\n$LOAD_PATH << @framework_lib_path.to_path unless $LOAD_PATH.include?(@framework_lib_path)\n\nrequire 'msfenv'\n\nif ENV['MSF_LOCAL_LIB']\n  $LOAD_PATH << ENV['MSF_LOCAL_LIB'] unless $LOAD_PATH.include?(ENV['MSF_LOCAL_LIB'])\nend\n\nrun Msf::WebServices::MetasploitApiApp\n"
        },
        {
          "name": "msfconsole",
          "type": "blob",
          "size": 0.78,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n#\n# This user interface provides users with a command console interface to the\n# framework.\n#\n\nrequire 'pathname'\nbegin\n\n  # Silences warnings as they only serve to confuse end users\n  if defined?(Warning) && Warning.respond_to?(:[]=)\n    Warning[:deprecated] = false unless ENV['CI']\n  end\n\n  # @see https://github.com/rails/rails/blob/v3.2.17/railties/lib/rails/generators/rails/app/templates/script/rails#L3-L5\n  require Pathname.new(__FILE__).realpath.expand_path.parent.join('config', 'boot')\n  require 'metasploit/framework/profiler'\n  Metasploit::Framework::Profiler.start\n\n  require 'msfenv'\n  require 'metasploit/framework/command/console'\n  Metasploit::Framework::Command::Console.start\nrescue Interrupt\n  puts \"\\nAborting...\"\n  exit(1)\nend\n"
        },
        {
          "name": "msfd",
          "type": "blob",
          "size": 2.72,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n#\n# $Id$\n#\n# This user interface listens on a port and provides clients that connect to\n# it with an msfconsole instance.  The nice thing about this interface is that\n# it allows multiple clients to share one framework instance and thus makes it\n# possible for sessions to to be shared from a single vantage point.\n#\n# $Revision$\n#\n\nmsfbase = __FILE__\nwhile File.symlink?(msfbase)\n  msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\nend\n\n$:.unshift(File.expand_path(File.join(File.dirname(msfbase), 'lib')))\nrequire 'msfenv'\n\n$:.unshift(ENV['MSF_LOCAL_LIB']) if ENV['MSF_LOCAL_LIB']\n\nrequire 'rex/parser/arguments'\n# Declare the argument parser for msfd\narguments = Rex::Parser::Arguments.new(\n  \"-a\" => [ true,  \"Bind to this IP address instead of loopback\"          ],\n  \"-p\" => [ true,  \"Bind to this port instead of 55554\"                   ],\n  \"-s\" => [ false, \"Use SSL\"                                              ],\n  \"-f\" => [ false, \"Run the daemon in the foreground\"                     ],\n  \"-A\" => [ true,  \"Specify list of hosts allowed to connect\"             ],\n  \"-D\" => [ true,  \"Specify list of hosts not allowed to connect\"         ],\n  \"-q\" => [ false, \"Do not print the banner on startup\"                   ],\n  \"-h\" => [ false, \"Help banner\"                                          ])\n\nopts = {\n  'RunInForeground' => true,\n  'DisableBanner' => false\n}\nforeground = false\n\n# Parse command line arguments.\narguments.parse(ARGV) { |opt, idx, val|\n  case opt\n    when \"-a\"\n      opts['ServerHost'] = val\n    when \"-p\"\n      opts['ServerPort'] = val\n    when \"-f\"\n      foreground = true\n    when \"-s\"\n      opts['SSL'] = true\n    when \"-A\"\n      begin\n        opts['HostsAllowed'] = val.split(',').map { |a|\n          Rex::Socket.resolv_nbo(a)\n        }\n      rescue\n        $stderr.puts \"Bad argument for -A: #{$!}\"\n        exit\n      end\n    when \"-D\"\n      begin\n        opts['HostsDenied'] = val.split(',').map { |a|\n          Rex::Socket.resolv_nbo(a)\n        }\n      rescue\n        $stderr.puts \"Bad argument for -D: #{$!}\"\n        exit\n      end\n    when \"-q\"\n      opts['DisableBanner'] = true\n    when \"-h\"\n      print(\n        \"\\nUsage: #{File.basename(__FILE__)} <options>\\n\" +\n        arguments.usage)\n      exit\n  end\n}\n\n$stderr.puts \"[*] Initializing msfd...\"\n\n\n$stderr.puts \"[*] Running msfd...\"\n\n# Fork into the background if requested\nbegin\n  if (not foreground)\n    exit(0) if Process.fork()\n  end\nrescue ::NotImplementedError\n  $stderr.puts \"[-] Background mode is not available on this platform\"\nend\n\n# Create an instance of the framework\n$framework = Msf::Simple::Framework.create\n\n\n# Run the plugin instance in the foreground.\n$framework.plugins.load('msfd', opts).run(opts)\n"
        },
        {
          "name": "msfdb",
          "type": "blob",
          "size": 32.02,
          "content": "#!/usr/bin/env ruby\n\nrequire 'fileutils'\nrequire 'io/console'\nrequire 'json'\nrequire 'net/http'\nrequire 'net/https'\nrequire 'open3'\nrequire 'optparse'\nrequire 'rex/socket'\nrequire 'rex/text'\nrequire 'securerandom'\nrequire 'uri'\nrequire 'yaml'\nrequire 'pg'\n\n\ninclude Rex::Text::Color\n\nmsfbase = __FILE__\nwhile File.symlink?(msfbase)\n  msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\nend\n\n$:.unshift(File.expand_path(File.join(File.dirname(msfbase), 'lib')))\n$:.unshift(ENV['MSF_LOCAL_LIB']) if ENV['MSF_LOCAL_LIB']\n\nrequire 'msfdb_helpers/pg_ctlcluster'\nrequire 'msfdb_helpers/pg_ctl'\nrequire 'msfdb_helpers/standalone'\n\nrequire 'msfenv'\n\n@script_name = File.basename(__FILE__)\n@framework = File.expand_path(File.dirname(__FILE__))\n\n@localconf = Msf::Config.config_directory\n@db = \"#{@localconf}/db\"\n@db_conf = \"#{@localconf}/database.yml\"\n@pg_cluster_conf_root = \"#{@localconf}/.local/etc/postgresql\"\n@db_driver = nil\n\n@ws_tag = 'msf-ws'\n@ws_conf = File.join(@framework, \"#{@ws_tag}.ru\")\n@ws_ssl_key_default = \"#{@localconf}/#{@ws_tag}-key.pem\"\n@ws_ssl_cert_default = \"#{@localconf}/#{@ws_tag}-cert.pem\"\n@ws_log = \"#{@localconf}/logs/#{@ws_tag}.log\"\n@ws_pid = \"#{@localconf}/#{@ws_tag}.pid\"\n\n@current_user = ENV['LOGNAME'] || ENV['USERNAME'] || ENV['USER']\n@msf_ws_user = (@current_user || \"msfadmin\").to_s.strip\n@ws_generated_ssl = false\n@ws_api_token = nil\n\n@components = %w(database webservice)\n@environments = %w(production development)\n\n@options = {\n    # When the component value is nil, the user has not yet specified a specific component\n    # It will later be defaulted to a more sane value\n    component: nil,\n    debug: false,\n    msf_db_name: 'msf',\n    msf_db_user: 'msf',\n    msftest_db_name: 'msftest',\n    msftest_db_user: 'msftest',\n    db_host: '127.0.0.1',\n    db_port: 5433,\n    db_pool: 200,\n    address: 'localhost',\n    port: 5443,\n    daemon: true,\n    ssl: true,\n    ssl_cert: @ws_ssl_cert_default,\n    ssl_key: @ws_ssl_key_default,\n    ssl_disable_verify: true,\n    ws_env: ENV['RACK_ENV'] || 'production',\n    retry_max: 10,\n    retry_delay: 5.0,\n    ws_user: nil,\n    add_data_service: false,\n    data_service_name: nil,\n    use_defaults: false,\n    delete_existing_data: true\n}\n\ndef supports_color?\n  return true if Rex::Compat.is_windows\n  term = Rex::Compat.getenv('TERM')\n  term and term.match(/(?:vt10[03]|xterm(?:-color)?|linux|screen|rxvt)/i) != nil\nend\n\nclass String\n  def bold\n    substitute_colors(\"%bld#{self}%clr\")\n  end\n\n  def underline\n    substitute_colors(\"%und#{self}%clr\")\n  end\n\n  def red\n    substitute_colors(\"%red#{self}%clr\")\n  end\n\n  def green\n    substitute_colors(\"%grn#{self}%clr\")\n  end\n\n  def blue\n    substitute_colors(\"%blu#{self}%clr\")\n  end\n\n  def cyan\n    substitute_colors(\"%cya#{self}%clr\")\n  end\n\nend\n\ndef pw_gen\n  SecureRandom.base64(32)\nend\n\ndef tail(file)\n  begin\n    File.readlines(file).last.to_s.strip\n  rescue\n    nil\n  end\nend\n\ndef status_db\n  update_db_port\n\n  case @db_driver.status\n  when DatabaseStatus::RUNNING\n    puts \"Database started\"\n  when DatabaseStatus::INACTIVE\n    puts \"Database found, but is not running\"\n  when DatabaseStatus::NEEDS_INIT\n    puts \"Database found, but needs initialized\"\n  when DatabaseStatus::NOT_FOUND\n    puts \"No database found\"\n  end\nend\n\ndef start_db\n  case @db_driver.status\n  when DatabaseStatus::NOT_FOUND\n    print_error 'No database found.'\n    return\n  when DatabaseStatus::NEEDS_INIT\n    print_error 'Has the database been initialized with \"msfdb init\" or \"msfdb init --component database\"?'\n    return\n  end\n\n  update_db_port\n  db_started = @db_driver.start\n\n  if !db_started\n    last_log = tail(\"#{@db}/log\")\n    puts last_log\n    if last_log =~ /not compatible/\n      puts 'Please attempt to upgrade the database manually using pg_upgrade.'\n    end\n    print_error 'Your database may be corrupt. Try reinitializing.'\n  end\nend\n\ndef stop_db\n  update_db_port\n  @db_driver.stop\nend\n\ndef restart_db\n  @db_driver.restart\nend\n\ndef init_db\n  case @db_driver.status\n  when DatabaseStatus::RUNNING\n    puts 'Existing database running'\n    return\n  when DatabaseStatus::INACTIVE\n    puts 'Existing database found, attempting to start it'\n    @db_driver.start\n    return\n  end\n\n  if @db_driver.exists? && !@options[:delete_existing_data]\n    if !load_db_config\n      puts 'Failed to load existing database config. Please reinit and overwrite the file.'\n      return\n    end\n  end\n\n  # Generate new database passwords if not already assigned\n  @msf_pass ||= pw_gen\n  @msftest_pass ||= pw_gen\n\n  @db_driver.init(@msf_pass, @msftest_pass)\n  write_db_config\n\n  puts 'Creating initial database schema'\n  Dir.chdir(@framework) do\n    @db_driver.run_cmd('bundle exec rake db:migrate')\n  end\n  puts 'Database initialization successful'.green.bold.to_s\nend\n\ndef load_db_config\n  if File.file?(@db_conf)\n    config = YAML.load(File.read(@db_conf))\n\n    production = config['production']\n    if production.nil?\n      puts \"No production section found in database config #{@db_conf}.\"\n      return false\n    end\n\n    test = config['test']\n    if test.nil?\n      puts \"No test section found in database config #{@db_conf}.\"\n      return false\n    end\n\n    # get values for development and production\n    @options[:msf_db_name] = production['database']\n    @options[:msf_db_user] = production['username']\n    @msf_pass = production['password']\n    @options[:db_port] = production['port']\n    @options[:db_pool] = production['pool']\n\n    # get values for test\n    @options[:msftest_db_name] = test['database']\n    @options[:msftest_db_user] = test['username']\n    @msftest_pass = test['password']\n    return true\n  end\n\n  return false\nend\n\ndef write_db_config\n  # Write a default database config file\n  Dir.mkdir(@localconf) unless File.directory?(@localconf)\n  File.open(@db_conf, 'w') do |f|\n    f.puts <<~EOF\n      development: &pgsql\n        adapter: postgresql\n        database: #{@options[:msf_db_name]}\n        username: #{@options[:msf_db_user]}\n        password: #{@msf_pass}\n        host: #{@options[:db_host]}\n        port: #{@options[:db_port]}\n        pool: #{@options[:db_pool]}\n\n      production: &production\n        <<: *pgsql\n\n      test:\n        <<: *pgsql\n        database: #{@options[:msftest_db_name]}\n        username: #{@options[:msftest_db_user]}\n        password: #{@msftest_pass}\n    EOF\n  end\n\n  File.chmod(0640, @db_conf)\nend\n\ndef update_db_port\n  if File.file?(@db_conf)\n    config = begin\n      YAML.load_file(@db_conf, aliases: true) || {}\n    rescue ArgumentError\n      YAML.load_file(@db_conf) || {}\n    end\n    if config[\"production\"] && config[\"production\"][\"port\"]\n      port = config[\"production\"][\"port\"]\n      if port != @options[:db_port]\n        puts \"Using database port #{port} found in #{@db_conf}\"\n        @options[:db_port] = port\n      end\n    end\n  end\nend\n\ndef ask_yn(question, default: nil)\n  loop do\n    print \"#{'[?]'.blue.bold} #{question} [#{default}]: \"\n    input = STDIN.gets.strip\n    input = input.empty? ? default : input\n    case input\n    when /^[Yy]/\n      return true\n    when /^[Nn]/\n      return false\n    else\n      puts 'Please answer yes or no.'\n    end\n  end\nend\n\ndef ask_value(question, default)\n  return default if @options[:use_defaults]\n\n  print \"#{'[?]'.blue.bold} #{question} [#{default}]: \"\n  input = STDIN.gets.strip\n  if input.nil? || input.empty?\n    return default\n  else\n    return input\n  end\nend\n\ndef ask_password(question)\n  print \"#{'[?]'.blue.bold} #{question}: \"\n  input = STDIN.noecho(&:gets).chomp\n  print \"\\n\"\n  if input.nil? || input.empty?\n    return pw_gen\n  else\n    return input\n  end\nend\n\ndef print_error(error)\n  puts \"#{'[!]'.red.bold} #{error}\"\nend\n\ndef delete_db\n  stop_web_service\n  @db_driver.delete\nend\n\ndef reinit_db\n  delete_db\n  init_db\nend\n\ndef print_webservice_removal_prompt\n  $stderr.puts \"#{'[WARNING]'.red} The remote web service is being removed. Does this impact you? React here: https://github.com/rapid7/metasploit-framework/issues/18439\"\nend\n\nclass WebServicePIDStatus\n  RUNNING = 0\n  INACTIVE = 1\n  NO_PID_FILE = 2\nend\n\nclass DatabaseStatus\n  RUNNING = 0\n  INACTIVE = 1\n  NOT_FOUND = 2\n  NEEDS_INIT = 3\nend\n\ndef web_service_pid\n  File.file?(@ws_pid) ? tail(@ws_pid) : nil\nend\n\ndef web_service_pid_status\n  if File.file?(@ws_pid)\n    ws_pid = tail(@ws_pid)\n    if ws_pid.nil? || !process_active?(ws_pid.to_i)\n      WebServicePIDStatus::INACTIVE\n    else\n      WebServicePIDStatus::RUNNING\n    end\n  else\n    WebServicePIDStatus::NO_PID_FILE\n  end\nend\n\ndef status_web_service\n  ws_pid = web_service_pid\n  status = web_service_pid_status\n  if status == WebServicePIDStatus::RUNNING\n    puts \"MSF web service is running as PID #{ws_pid}\"\n  elsif status == WebServicePIDStatus::INACTIVE\n    puts \"MSF web service is not running: PID file found at #{@ws_pid}, but no active process running as PID #{ws_pid}\"\n  elsif status == WebServicePIDStatus::NO_PID_FILE\n    puts \"MSF web service is not running: no PID file found at #{@ws_pid}\"\n  end\nend\n\ndef init_web_service\n  if web_service_pid_status == WebServicePIDStatus::RUNNING\n    puts \"MSF web service is already running as PID #{web_service_pid}\"\n    return false\n  end\n\n  unless @options[:use_defaults]\n    if @options[:ws_user].nil?\n      @msf_ws_user = ask_value('Initial MSF web service account username?', @msf_ws_user)\n    else\n      @msf_ws_user = @options[:ws_user]\n    end\n  end\n\n  if @options[:use_defaults]\n    @msf_ws_pass = pw_gen\n  elsif @options[:ws_pass].nil?\n    @msf_ws_pass = ask_password('Initial MSF web service account password? (Leave blank for random password)')\n  else\n    @msf_ws_pass = @options[:ws_pass]\n  end\n\n  if should_generate_web_service_ssl && @options[:delete_existing_data]\n    generate_web_service_ssl(key: @options[:ssl_key], cert: @options[:ssl_cert])\n  end\n\n  if start_web_service(expect_auth: false)\n    if add_web_service_workspace && add_web_service_user\n      output_web_service_information\n    else\n      puts 'Failed to complete MSF web service configuration, please reinitialize.'\n      stop_web_service\n    end\n  end\nend\n\ndef start_web_service_daemon(expect_auth:)\n  if @db_driver.run_cmd(\"#{thin_cmd} start\") == 0\n    # wait until web service is online\n    retry_count = 0\n    response_data = web_service_online_check(expect_auth: expect_auth)\n    is_online = response_data[:state] != :offline\n    while !is_online && retry_count < @options[:retry_max]\n      retry_count += 1\n      if @options[:debug]\n        puts \"MSF web service doesn't appear to be online. Sleeping #{@options[:retry_delay]}s until check #{retry_count}/#{@options[:retry_max]}\"\n      end\n      sleep(@options[:retry_delay])\n      response_data = web_service_online_check(expect_auth: expect_auth)\n      is_online = response_data[:state] != :offline\n    end\n\n    if response_data[:state] == :online\n      puts \"#{'success'.green.bold}\"\n      puts 'MSF web service started and online'\n      return true\n    elsif response_data[:state] == :error\n      puts \"#{'failed'.red.bold}\"\n      print_error 'MSF web service failed and returned the following message:'\n      puts \"#{response_data[:message].nil? || response_data[:message].empty? ? \"No message returned.\" : response_data[:message]}\"\n    elsif response_data[:state] == :offline\n      puts \"#{'failed'.red.bold}\"\n      print_error 'A connection with the web service was refused.'\n    end\n\n    puts \"Please see #{@ws_log} for additional webservice details.\"\n    return false\n  else\n    puts \"#{'failed'.red.bold}\"\n    puts 'Failed to start MSF web service'\n    return false\n  end\nend\n\ndef start_web_service(expect_auth: true)\n  unless File.file?(@ws_conf)\n    puts \"No MSF web service configuration found at #{@ws_conf}, not starting\"\n    return false\n  end\n\n  # check if MSF web service is already started\n  ws_pid = web_service_pid\n  status = web_service_pid_status\n  if status == WebServicePIDStatus::RUNNING\n    puts \"MSF web service is already running as PID #{ws_pid}\"\n    return false\n  elsif status == WebServicePIDStatus::INACTIVE\n    puts \"MSF web service PID file found, but no active process running as PID #{ws_pid}\"\n    puts \"Deleting MSF web service PID file #{@ws_pid}\"\n    File.delete(@ws_pid)\n  end\n\n  print 'Attempting to start MSF web service...'\n\n  unless File.file?(@options[:ssl_key])\n    puts \"#{'failed'.red.bold}\"\n    print_error \"The SSL Key needed for the webservice to connect to the database could not be found at #{@options[:ssl_key]}.\"\n    print_error 'Has the webservice been initialized with \"msfdb init\"  or \"msfdb init --component webservice\"?'\n    return false\n  end\n\n  if @options[:daemon]\n    start_web_service_daemon(expect_auth: expect_auth)\n  else\n    puts thin_cmd\n    system \"#{thin_cmd} start\"\n  end\nend\n\ndef stop_web_service\n  ws_pid = web_service_pid\n  status = web_service_pid_status\n  if status == WebServicePIDStatus::RUNNING\n    puts \"Stopping MSF web service PID #{ws_pid}\"\n    @db_driver.run_cmd(\"#{thin_cmd} stop\")\n  else\n    puts 'MSF web service is no longer running'\n    if status == WebServicePIDStatus::INACTIVE\n      puts \"Deleting MSF web service PID file #{@ws_pid}\"\n      File.delete(@ws_pid)\n    end\n  end\nend\n\ndef restart_web_service\n  stop_web_service\n  start_web_service\nend\n\ndef delete_web_service\n  stop_web_service\n\n  File.delete(@ws_pid) if web_service_pid_status == WebServicePIDStatus::INACTIVE\n  if @options[:delete_existing_data]\n    File.delete(@options[:ssl_key]) if File.file?(@options[:ssl_key])\n    File.delete(@options[:ssl_cert]) if File.file?(@options[:ssl_cert])\n  end\nend\n\ndef reinit_web_service\n  delete_web_service\n  init_web_service\nend\n\ndef generate_web_service_ssl(key:, cert:)\n  @ws_generated_ssl = true\n  if (File.file?(key) || File.file?(cert)) && !@options[:delete_existing_data]\n    return\n  end\n\n  puts 'Generating SSL key and certificate for MSF web service'\n  @ssl_key, @ssl_cert, @ssl_extra_chain_cert = Rex::Socket::Ssl.ssl_generate_certificate\n\n  # write PEM format key and certificate\n  mode = 'wb'\n  mode_int = 0600\n  File.open(key, mode) { |f| f.write(@ssl_key.to_pem) }\n  File.chmod(mode_int, key)\n\n  File.open(cert, mode) { |f| f.write(@ssl_cert.to_pem) }\n  File.chmod(mode_int, cert)\nend\n\ndef web_service_online_check(expect_auth:)\n  msf_version_uri = get_web_service_uri(path: '/api/v1/msf/version')\n  response_data = http_request(uri: msf_version_uri, method: :get,\n                          skip_verify: skip_ssl_verify?, cert: get_ssl_cert)\n\n  if !response_data[:exception].nil? && response_data[:exception].is_a?(Errno::ECONNREFUSED)\n    response_data[:state] = :offline\n  elsif !response_data[:exception].nil? && response_data[:exception].is_a?(OpenSSL::OpenSSLError)\n    response_data[:state] = :error\n    response_data[:message] = 'Detected an SSL issue. Please set the same options used to initialize the web service or reinitialize.'\n  elsif !response_data[:response].nil? && response_data[:response].dig(:error, :code) == 401\n    if expect_auth\n      response_data[:state] = :online\n    else\n      response_data[:state] = :error\n      response_data[:message] = 'MSF web service expects authentication. If you wish to reinitialize the web service account you will need to reinitialize the database.'\n    end\n  elsif !response_data[:response].nil? && !response_data[:response].dig(:data, :metasploit_version).nil?\n    response_data[:state] = :online\n  else\n    response_data[:state] = :error\n  end\n\n  puts \"web_service_online: expect_auth=#{expect_auth}, response_msg=#{response_data}\" if @options[:debug]\n  response_data\nend\n\ndef add_web_service_workspace(name: 'default')\n  # Send request to create new workspace\n  workspace_data = { name: name }\n  workspaces_uri = get_web_service_uri(path: '/api/v1/workspaces')\n  response_data = http_request(uri: workspaces_uri, data: workspace_data, method: :post,\n                               skip_verify: skip_ssl_verify?, cert: get_ssl_cert)\n  response = response_data[:response]\n  puts \"add_web_service_workspace: add workspace response=#{response}\" if @options[:debug]\n  if response.nil? || response.dig(:data, :name) != name\n    print_error \"Error creating MSF web service workspace '#{name}'\"\n    return false\n  end\n  return true\nend\n\ndef add_web_service_user\n  puts \"Creating MSF web service user #{@msf_ws_user}\"\n\n  # Generate new web service user password\n  cred_data = { username: @msf_ws_user, password: @msf_ws_pass }\n\n  # Send request to create new admin user\n  user_data = cred_data.merge({ admin: true })\n  user_uri = get_web_service_uri(path: '/api/v1/users')\n  response_data = http_request(uri: user_uri, data: user_data, method: :post,\n                          skip_verify: skip_ssl_verify?, cert: get_ssl_cert)\n  response = response_data[:response]\n  puts \"add_web_service_user: create user response=#{response}\" if @options[:debug]\n  if response.nil? || response.dig(:data, :username) != @msf_ws_user\n    print_error \"Error creating MSF web service user #{@msf_ws_user}\"\n    return false\n  end\n\n  puts \"\\n#{'    ############################################################'.cyan}\"\n  print \"#{'    ##              '.cyan}\"\n  print\"#{'MSF Web Service Credentials'.cyan.bold.underline}\"\n  puts\"#{'               ##'.cyan}\"\n  puts \"#{'    ##                                                        ##'.cyan}\"\n  puts \"#{'    ##        Please store these credentials securely.        ##'.cyan}\"\n  puts \"#{'    ##    You will need them to connect to the webservice.    ##'.cyan}\"\n  puts \"#{'    ############################################################'.cyan}\"\n\n  puts \"\\n#{'MSF web service username'.cyan.bold}: #{@msf_ws_user}\"\n  puts \"#{'MSF web service password'.cyan.bold}: #{@msf_ws_pass}\"\n\n  # Send request to create new API token for the user\n  generate_token_uri = get_web_service_uri(path: '/api/v1/auth/generate-token')\n  response_data = http_request(uri: generate_token_uri, data: cred_data, method: :post,\n                          skip_verify: skip_ssl_verify?, cert: get_ssl_cert)\n  response = response_data[:response]\n  puts \"add_web_service_user: generate token response=#{response}\" if @options[:debug]\n  if response.nil? || (@ws_api_token = response.dig(:data, :token)).nil?\n    print_error \"Error creating MSF web service user API token\"\n    return false\n  end\n  puts \"#{'MSF web service user API token'.cyan.bold}: #{@ws_api_token}\"\n  return true\nend\n\ndef output_web_service_information\n  puts \"\\n\\n\"\n  puts 'MSF web service configuration complete'\n  if @options[:add_data_service]\n    data_service_name = @options[:data_service_name] || \"local-#{@options[:ssl] ? 'https' : 'http'}-data-service\"\n    puts \"The web service has been configured as your default data service in msfconsole with the name \\\"#{data_service_name}\\\"\"\n  else\n    puts \"No data service has been configured in msfconsole.\"\n  end\n  puts ''\n  puts 'If needed, manually reconnect to the data service in msfconsole using the command:'\n  puts \"#{get_db_connect_command}\"\n  puts ''\n  puts 'The username and password are credentials for the API account:'\n  puts \"#{get_web_service_uri(path: '/api/v1/auth/account')}\"\n  puts ''\n\n  if @options[:add_data_service]\n    persist_data_service\n  end\nend\n\ndef run_msfconsole_command(cmd)\n  # Attempts to run a the metasploit command first with the default env settings, and once again with the path set\n  # to the current directory. This ensures that it works in an environment such as bundler\n  # @msf_command holds the initial common part of commands (msfconsole -qx) and takes the optional specific commands as arguments (#{cmd})\n  msf_command = \"msfconsole -qx '#{cmd}'\"\n  if @db_driver.run_cmd(msf_command) != 0\n    # attempt to execute msfconsole in the current working directory\n    if @db_driver.run_cmd(msf_command, env: {'PATH' => \".:#{ENV[\"PATH\"]}\"}) != 0\n      puts 'Failed to run msfconsole'\n    end\n  end\nend\n\ndef persist_data_service\n  puts 'Persisting http web data service credentials in msfconsole'\n  # execute msfconsole commands to add and persist the data service connection\n  cmd = \"#{get_db_connect_command}; db_save; exit\"\n  run_msfconsole_command(cmd)\nend\n\ndef get_db_connect_command\n  data_service_name = \"local-#{@options[:ssl] ? 'https' : 'http'}-data-service\"\n  if !@options[:data_service_name].nil?\n    data_service_name = @options[:data_service_name]\n  end\n\n  # build db_remove and db_connect command based on install options\n  connect_cmd = \"db_connect\"\n  connect_cmd << \" --name #{data_service_name}\"\n  connect_cmd << \" --token #{@ws_api_token}\"\n  connect_cmd << \" --cert #{@options[:ssl_cert]}\" if @options[:ssl]\n  connect_cmd << \" --skip-verify\" if skip_ssl_verify?\n  connect_cmd << \" #{get_web_service_uri}\"\n  connect_cmd\nend\n\ndef get_web_service_uri(path: nil)\n  uri_class = @options[:ssl] ? URI::HTTPS : URI::HTTP\n  uri_class.build({host: get_web_service_host, port: @options[:port], path: path})\nend\n\ndef get_web_service_host\n  # user specified any address INADDR_ANY (0.0.0.0), return a routable address\n  @options[:address] == '0.0.0.0' ? 'localhost' : @options[:address]\nend\n\ndef skip_ssl_verify?\n  @ws_generated_ssl || @options[:ssl_disable_verify]\nend\n\ndef get_ssl_cert\n  @options[:ssl] ? @options[:ssl_cert] : nil\nend\n\n# TODO: In the future this can be replaced by Msf::WebServices::HttpDBManagerService\ndef thin_cmd\n  server_opts = \"--rackup #{@ws_conf.shellescape} --address #{@options[:address].shellescape} --port #{@options[:port]}\"\n  ssl_opts = @options[:ssl] ? \"--ssl --ssl-key-file #{@options[:ssl_key].shellescape} --ssl-cert-file #{@options[:ssl_cert].shellescape}\" : ''\n  ssl_opts << ' --ssl-disable-verify' if skip_ssl_verify?\n  adapter_opts = \"--environment #{@options[:ws_env]}\"\n  daemon_opts = \"--daemonize --log #{@ws_log.shellescape} --pid #{@ws_pid.shellescape} --tag #{@ws_tag}\" if @options[:daemon]\n  all_opts = [server_opts, ssl_opts, adapter_opts, daemon_opts].reject(&:blank?).join(' ')\n\n  \"thin #{all_opts}\"\nend\n\ndef process_active?(pid)\n  begin\n    Process.kill(0, pid)\n    true\n  rescue Errno::ESRCH\n    false\n  end\nend\n\ndef http_request(uri:, query: nil, data: nil, method: :get, headers: nil, skip_verify: false, cert: nil)\n  all_headers = { 'User-Agent': @script_name }\n  all_headers.merge!(headers) unless headers.nil?\n  query_str = (!query.nil? && !query.empty?) ? URI.encode_www_form(query.compact) : nil\n  uri.query = query_str\n\n  http = Net::HTTP.new(uri.host, uri.port)\n  if uri.is_a?(URI::HTTPS)\n    http.use_ssl = true\n    if skip_verify\n      http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n    else\n      # https://stackoverflow.com/questions/22093042/implementing-https-certificate-pubkey-pinning-with-ruby\n      http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n      user_passed_cert = OpenSSL::X509::Certificate.new(File.read(cert))\n\n      http.verify_callback = lambda do |preverify_ok, cert_store|\n        server_cert = cert_store.chain[0]\n        return true unless server_cert.to_der == cert_store.current_cert.to_der\n        same_public_key?(server_cert, user_passed_cert)\n      end\n    end\n  end\n\n  begin\n    response_data = { response: nil }\n    case method\n      when :get\n        request = Net::HTTP::Get.new(uri.request_uri, initheader=all_headers)\n      when :post\n        request = Net::HTTP::Post.new(uri.request_uri, initheader=all_headers)\n      else\n        raise Exception, \"Request method #{method} is not handled\"\n    end\n\n    request.content_type = 'application/json'\n    unless data.nil?\n      json_body = data.to_json\n      request.body = json_body\n    end\n\n    response = http.request(request)\n    unless response.body.nil? || response.body.empty?\n      response_data[:response] = JSON.parse(response.body, symbolize_names: true)\n    end\n  rescue => e\n    response_data[:exception] = e\n    puts \"Problem with HTTP #{method} request #{uri.request_uri}, message: #{e.message}\" if @options[:debug]\n  end\n\n  response_data\nend\n\n# Tells us whether the private keys on the passed certificates match\n# and use the same algo\ndef same_public_key?(ref_cert, actual_cert)\n  pkr, pka = ref_cert.public_key, actual_cert.public_key\n\n  # First check if the public keys use the same crypto...\n  return false unless pkr.class == pka.class\n  # ...and then - that they have the same contents\n  return false unless pkr.to_pem == pka.to_pem\n\n  true\nend\n\ndef parse_args(args)\n  subtext = <<~USAGE\n    Commands:\n      init     initialize the component\n      reinit   delete and reinitialize the component\n      delete   delete and stop the component\n      status   check component status\n      start    start the component\n      stop     stop the component\n      restart  restart the component\n  USAGE\n\n  parser = OptionParser.new do |opts|\n    opts.banner = \"Usage: #{@script_name} [options] <command>\"\n    opts.separator('Manage a Metasploit Framework database and web service')\n    opts.separator('')\n    opts.separator('General Options:')\n    opts.on('--component COMPONENT', @components + ['all'], 'Component used with provided command (default: database)',\n            \"  (#{@components.join(', ')})\") { |component|\n      @options[:component] = component.to_sym\n    }\n\n    opts.on('-d', '--debug', 'Enable debug output') { |d| @options[:debug] = d }\n    opts.on('-h', '--help', 'Show this help message') {\n      puts opts\n      exit\n    }\n    opts.on('--use-defaults', 'Accept all defaults and do not prompt for options during an init') { |d|\n      @options[:use_defaults] = d\n    }\n\n    opts.separator('')\n    opts.separator('Database Options:')\n    opts.on('--msf-db-name NAME', \"Database name (default: #{@options[:msf_db_name]})\") { |n|\n      @options[:msf_db_name] = n\n    }\n\n    opts.on('--msf-db-user-name USER', \"Database username (default: #{@options[:msf_db_user]})\") { |u|\n      @options[:msf_db_user] = u\n    }\n\n    opts.on('--msf-test-db-name NAME', \"Test database name (default: #{@options[:msftest_db_name]})\") { |n|\n      @options[:msftest_db_name] = n\n    }\n\n    opts.on('--msf-test-db-user-name USER', \"Test database username (default: #{@options[:msftest_db_user]})\") { |u|\n      @options[:msftest_db_user] = u\n    }\n\n    opts.on('--db-port PORT', Integer, \"Database port (default: #{@options[:db_port]})\") { |p|\n      @options[:db_port] = p\n    }\n\n    opts.on('--db-pool MAX', Integer, \"Database connection pool size (default: #{@options[:db_pool]})\") { |m|\n      @options[:db_pool] = m\n    }\n\n    opts.on('--connection-string URI', 'Use a pre-existing database cluster for initialization',\n            'Example: --connection-string=postgresql://postgres:mysecretpassword@localhost:5432/postgres') { |c|\n      @connection_string = c\n    }\n\n    opts.separator('')\n    opts.separator('Web Service Options:')\n    opts.on('-a', '--address ADDRESS',\n            \"Bind to host address (default: #{@options[:address]})\") { |a|\n      @options[:address] = a\n    }\n\n    opts.on('-p', '--port PORT', Integer,\n            \"Web service port (default: #{@options[:port]})\") { |p|\n      @options[:port] = p\n    }\n\n    opts.on('--[no-]daemon', 'Enable daemon') { |d|\n      @options[:daemon] = d\n    }\n\n    opts.on('--[no-]ssl', \"Enable SSL (default: #{@options[:ssl]})\") { |s| @options[:ssl] = s }\n\n    opts.on('--ssl-key-file PATH', \"Path to private key (default: #{@options[:ssl_key]})\") { |p|\n      @options[:ssl_key] = p\n    }\n\n    opts.on('--ssl-cert-file PATH', \"Path to certificate (default: #{@options[:ssl_cert]})\") { |p|\n      @options[:ssl_cert] = p\n    }\n\n    opts.on('--[no-]ssl-disable-verify',\n            \"Disables (optional) client cert requests (default: #{@options[:ssl_disable_verify]})\") { |v|\n      @options[:ssl_disable_verify] = v\n    }\n\n    opts.on('--environment ENV', @environments,\n            \"Web service framework environment (default: #{@options[:ws_env]})\",\n            \"  (#{@environments.join(', ')})\") { |e|\n      @options[:ws_env] = e\n    }\n\n    opts.on('--retry-max MAX', Integer,\n            \"Maximum number of web service connect attempts (default: #{@options[:retry_max]})\") { |m|\n      @options[:retry_max] = m\n    }\n\n    opts.on('--retry-delay DELAY', Float,\n            \"Delay in seconds between web service connect attempts (default: #{@options[:retry_delay]})\") { |d|\n      @options[:retry_delay] = d\n    }\n\n    opts.on('--user USER', 'Initial web service admin username') { |u|\n      @options[:ws_user] = u\n    }\n\n    opts.on('--pass PASS', 'Initial web service admin password') { |p|\n      @options[:ws_pass] = p\n    }\n\n    opts.on('--[no-]msf-data-service NAME', 'Local msfconsole data service connection name') { |n|\n      if !n\n        @options[:add_data_service] = false\n      else\n        @options[:add_data_service] = true\n        @options[:data_service_name] = n\n      end\n    }\n\n    opts.separator('')\n    opts.separator(subtext)\n  end\n\n  parser.parse!(args)\n\n  if args.length != 1\n    puts parser\n    abort\n  end\n\n  @options\nend\n\ndef invoke_command(commands, component, command)\n  method = commands[component][command]\n  if !method.nil?\n    send(method)\n  else\n    print_error \"Error: unrecognized command '#{command}' for #{component}\"\n  end\nend\n\ndef installed?(cmd)\n  !Msf::Util::Helper.which(cmd).nil?\nend\n\ndef has_requirements(postgresql_cmds)\n  ret_val = true\n  other_cmds = %w(bundle thin)\n  missing_msg = \"Missing requirement: %<name>s does not appear to be installed or '%<prog>s' is not in the environment path\"\n\n  postgresql_cmds.each do |cmd|\n    next unless Msf::Util::Helper.which(cmd).nil?\n    puts missing_msg % { name: 'PostgreSQL', prog: cmd }\n    ret_val = false\n  end\n\n  other_cmds.each do |cmd|\n    if Msf::Util::Helper.which(cmd).nil?\n      puts missing_msg % { name: \"'#{cmd}'\", prog: cmd }\n      ret_val = false\n    end\n  end\n\n  ret_val\nend\n\ndef should_generate_web_service_ssl\n  @options[:ssl] && ((!File.file?(@options[:ssl_key]) || !File.file?(@options[:ssl_cert])) ||\n      (@options[:ssl_key] == @ws_ssl_key_default && @options[:ssl_cert] == @ws_ssl_cert_default))\nend\n\ndef prompt_for_component(command)\n  if command == :status || command == :delete\n    return :all\n  end\n\n  if command == :stop && web_service_pid_status != WebServicePIDStatus::RUNNING\n    return :database\n  end\n\n  if @options[:add_data_service] == true\n    :all\n  else\n    :database\n  end\nend\n\ndef prompt_for_deletion(command)\n  destructive_operations = [:reinit, :delete]\n\n  if destructive_operations.include? command\n    @options[:delete_existing_data] = should_delete\n  end\nend\n\ndef should_delete\n  return true if @options[:use_defaults]\n  ask_yn(\"Would you like to delete your existing data and configurations?\")\nend\n\nif $PROGRAM_NAME == __FILE__\n  # Bomb out if we're root\n  if !Gem.win_platform? && Process.uid.zero?\n    puts \"Please run #{@script_name} as a non-root user\"\n    abort\n  end\n\n  # map component commands to methods\n  commands = {\n      database: {\n          init: :init_db,\n          reinit: :reinit_db,\n          delete: :delete_db,\n          status: :status_db,\n          start: :start_db,\n          stop: :stop_db,\n          restart: :restart_db\n      },\n      webservice: {\n          init: :init_web_service,\n          reinit: :reinit_web_service,\n          delete: :delete_web_service,\n          status: :status_web_service,\n          start: :start_web_service,\n          stop: :stop_web_service,\n          restart: :restart_web_service\n      }\n  }\n\n  parse_args(ARGV)\n  update_db_port\n\n  if @connection_string\n    @db_driver = MsfdbHelpers::Standalone.new(options: @options, db_conf: @db_conf, connection_string: @connection_string)\n  elsif installed?('pg_ctl') && has_requirements(MsfdbHelpers::PgCtl.requirements)\n    @db_driver = MsfdbHelpers::PgCtl.new(db_path: @db, options: @options, localconf: @localconf, db_conf: @db_conf)\n  elsif installed?('pg_ctlcluster') && has_requirements(MsfdbHelpers::PgCtlcluster.requirements)\n    @db_driver = MsfdbHelpers::PgCtlcluster.new(db_path: @db, options: @options, localconf: @localconf, db_conf: @db_conf)\n  else\n    print_error('You need to have postgres installed or specify a database with --connection-string')\n    abort\n  end\n\n  command = ARGV[0].to_sym\n  if @options[:component].nil?\n    @options[:component] = prompt_for_component(command)\n  end\n  prompt_for_deletion(command)\n  if @options[:component] == :all\n    @components.each { |component|\n      if component == :webservice\n        3.times { print_webservice_removal_prompt }\n      end\n      puts '===================================================================='\n      puts \"Running the '#{command}' command for the #{component}:\"\n      invoke_command(commands, component.to_sym, command)\n      puts '===================================================================='\n      puts\n    }\n  else\n    puts \"Running the '#{command}' command for the #{@options[:component]}:\"\n    if @options[:component] == :webservice\n      3.times { print_webservice_removal_prompt }\n    end\n    invoke_command(commands, @options[:component], command)\n  end\nend\n"
        },
        {
          "name": "msfrpc",
          "type": "blob",
          "size": 2.14,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n#\n# $Id$\n#\n# This user interface allows users to interact with a remote framework\n# instance through a XMLRPC socket.\n#\n# $Revision$\n#\n\nmsfbase = __FILE__\nwhile File.symlink?(msfbase)\n  msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\nend\n\n$:.unshift(File.expand_path(File.join(File.dirname(msfbase), 'lib')))\nrequire 'msfenv'\n\n$:.unshift(ENV['MSF_LOCAL_LIB']) if ENV['MSF_LOCAL_LIB']\n\nrequire 'rex/parser/arguments'\n\n# Declare the argument parser for msfrpc\narguments = Rex::Parser::Arguments.new(\n  \"-a\" => [ true,  \"Connect to this IP address\"                           ],\n  \"-p\" => [ true,  \"Connect to the specified port instead of 55553\"       ],\n  \"-U\" => [ true,  \"Specify the username to access msfrpcd\"               ],\n  \"-P\" => [ true,  \"Specify the password to access msfrpcd\"               ],\n  \"-S\" => [ false, \"Disable SSL on the RPC socket\"                        ],\n  \"-h\" => [ false, \"Help banner\"                                          ]\n)\n\nopts = {\n  'User' => 'msf',\n  'SSL'  => true,\n  'ServerPort' => 55553,\n  'Type' => 'Msg'\n}\n\n# Parse command line arguments.\narguments.parse(ARGV) do |opt, idx, val|\n  case opt\n    when \"-a\"\n      opts['ServerHost'] = val\n    when \"-S\"\n      opts['SSL'] = false\n    when \"-p\"\n      opts['ServerPort'] = val\n    when '-U'\n      opts['User'] = val\n    when '-P'\n      opts['Pass'] = val\n    when \"-h\"\n      print(\"\\nUsage: #{File.basename(__FILE__)} <options>\\n\" +\targuments.usage)\n      exit\n  end\nend\n\nunless opts['ServerHost']\n  $stderr.puts \"[-] Error: a server IP must be specified (-a)\"\n  $stderr.puts arguments.usage\n  exit(0)\nend\n\nunless opts['Pass']\n  $stderr.puts \"[-] Error: a password must be specified (-P)\"\n  $stderr.puts arguments.usage\n  exit(0)\nend\n\n$0 = \"msfrpc\"\n\nrequire 'msf/core/rpc/v10/client'\n\nrpc = Msf::RPC::Client.new(\n  :host => opts['ServerHost'],\n  :port => opts['ServerPort'],\n  :ssl  => opts['SSL']\n)\n\nrpc.login(opts['User'], opts['Pass'])\n\nputs \"[*] The 'rpc' object holds the RPC client interface\"\nputs \"[*] Use rpc.call('group.command') to make RPC calls\"\nputs ''\n\nwhile(ARGV.shift)\nend\n\nRex::Ui::Text::IrbShell.new(binding).run\n"
        },
        {
          "name": "msfrpcd",
          "type": "blob",
          "size": 9.34,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n#\n# $Id$\n#\n# This user interface listens on a port and provides clients that connect to\n# it with an RPC or JSON-RPC interface to the Metasploit Framework.\n#\n# $Revision$\n#\n\nRPC_TYPE = 'Msg'\nWS_TAG = 'msf-ws'\nWS_RPC_TAG = 'msf-json-rpc'\nWS_CONF = \"#{WS_RPC_TAG}.ru\"\nWS_ENV = 'production'\n\n\ndef start_json_rpc_service(conf:, address:, port:, ssl:, ssl_key:, ssl_cert:,\n                           ssl_disable_verify:, daemonize:, log:, pid:)\n  unless File.file?(conf)\n    $stdout.puts \"[-] No MSF JSON-RPC web service configuration found at #{conf}, not starting\"\n    return false\n  end\n\n  # check if MSF JSON-RPC web service is already started\n  if File.file?(pid)\n    ws_pid = Msf::Util::ServiceHelper.tail(pid)\n    if ws_pid.nil? || !Msf::Util::ServiceHelper.process_active?(ws_pid.to_i)\n      $stdout.puts \"[-] MSF JSON-RPC web service PID file found, but no active process running as PID #{ws_pid}\"\n      $stdout.puts \"[*] Deleting MSF JSON-RPC web service PID file #{pid}\"\n      File.delete(pid)\n    else\n      $stdout.puts \"[*] MSF JSON-RPC web service is already running as PID #{ws_pid}\"\n      return false\n    end\n  end\n\n  # attempt to start MSF JSON-RPC service\n  thin_cmd = Msf::Util::ServiceHelper.thin_cmd(conf: conf,\n                                               address: address,\n                                               port: port,\n                                               ssl: ssl,\n                                               ssl_key: ssl_key,\n                                               ssl_cert: ssl_cert,\n                                               ssl_disable_verify: ssl_disable_verify,\n                                               env: WS_ENV,\n                                               daemonize: daemonize,\n                                               log: log,\n                                               pid: pid,\n                                               tag: WS_RPC_TAG)\n  Msf::Util::ServiceHelper.run_cmd(\"#{thin_cmd} start\")\nend\n\ndef stop_json_rpc_service(conf:, address:, port:, ssl:, ssl_key:, ssl_cert:,\n                          ssl_disable_verify:, daemonize:, log:, pid:)\n  ws_pid = Msf::Util::ServiceHelper.tail(pid)\n  $stdout.puts ''\n  if ws_pid.nil? || !Msf::Util::ServiceHelper.process_active?(ws_pid.to_i)\n    $stdout.puts '[*] MSF JSON-RPC web service is no longer running'\n    if File.file?(pid)\n      $stdout.puts \"[*] Deleting MSF JSON-RPC web service PID file #{pid}\"\n      File.delete(pid)\n    end\n  else\n    $stdout.puts \"[*] Stopping MSF JSON-RPC web service PID #{ws_pid}\"\n    thin_cmd = Msf::Util::ServiceHelper.thin_cmd(conf: conf,\n                                      address: address,\n                                      port: port,\n                                      ssl: ssl,\n                                      ssl_key: ssl_key,\n                                      ssl_cert: ssl_cert,\n                                      ssl_disable_verify: ssl_disable_verify,\n                                      env: WS_ENV,\n                                      daemonize: daemonize,\n                                      log: log,\n                                      pid: pid,\n                                      tag: WS_RPC_TAG)\n    Msf::Util::ServiceHelper.run_cmd(\"#{thin_cmd} stop\")\n  end\nend\n\ndef start_rpc_service(opts, frameworkOpts, foreground)\n  # Fork into the background if requested\n  begin\n    if foreground\n      $stdout.puts \"[*] #{RPC_TYPE.upcase}RPC ready at #{Time.now}.\"\n    else\n      $stderr.puts \"[*] #{RPC_TYPE.upcase}RPC backgrounding at #{Time.now}...\"\n      child_pid = Process.fork()\n      if child_pid\n        $stderr.puts \"[*] #{RPC_TYPE.upcase}RPC background PID #{child_pid}\"\n        exit(0)\n      end\n    end\n  rescue ::NotImplementedError\n    $stderr.puts \"[-] Background mode is not available on this platform\"\n  end\n\n  # Create an instance of the framework\n  $framework = Msf::Simple::Framework.create(frameworkOpts)\n\n  # Run the plugin instance in the foreground.\n  begin\n    $framework.plugins.load(\"#{RPC_TYPE.downcase}rpc\", opts).run\n  rescue ::Interrupt\n    $stderr.puts \"[*] Shutting down\"\n  end\nend\n\n\nif $PROGRAM_NAME == __FILE__\n  msfbase = __FILE__\n  while File.symlink?(msfbase)\n    msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\n  end\n\n  $:.unshift(File.expand_path(File.join(File.dirname(msfbase), 'lib')))\n  require 'msfenv'\n\n  $:.unshift(ENV['MSF_LOCAL_LIB']) if ENV['MSF_LOCAL_LIB']\n\n    require 'rex/parser/arguments'\n\n  ws_ssl_key_default = File.join(Msf::Config.config_directory, \"#{WS_TAG}-key.pem\")\n  ws_ssl_cert_default = File.join(Msf::Config.config_directory, \"#{WS_TAG}-cert.pem\")\n  ws_log = File.join(Msf::Config.config_directory, 'logs', \"#{WS_RPC_TAG}.log\")\n  ws_rpc_pid = File.join(Msf::Config.config_directory, \"#{WS_RPC_TAG}.pid\")\n  ws_ssl_key = ws_ssl_key_default\n  ws_ssl_cert = ws_ssl_cert_default\n  ssl_enable_verify = false\n  foreground = false\n  json_rpc = false\n  frameworkOpts = {}\n\n  opts = {\n      'RunInForeground' => true,\n      'SSL'             => true,\n      'ServerHost'      => '0.0.0.0',\n      'ServerPort'      => 55553,\n      'ServerType'      => RPC_TYPE,\n      'TokenTimeout'    => 300,\n  }\n\n  # Declare the argument parser for msfrpcd\n  arguments = Rex::Parser::Arguments.new(\n      \"-a\" => [ true,  \"Bind to this IP address (default: #{opts['ServerHost']})\"          ],\n      \"-p\" => [ true,  \"Bind to this port (default: #{opts['ServerPort']})\"                ],\n      \"-U\" => [ true,  \"Specify the username to access msfrpcd\"                            ],\n      \"-P\" => [ true,  \"Specify the password to access msfrpcd\"                            ],\n      \"-u\" => [ true,  \"URI for Web server\"                                                ],\n      \"-t\" => [ true,  \"Token Timeout seconds (default: #{opts['TokenTimeout']})\"          ],\n      \"-S\" => [ false, \"Disable SSL on the RPC socket\"                                     ],\n      \"-f\" => [ false, \"Run the daemon in the foreground\"                                  ],\n      \"-n\" => [ false, \"Disable database\"                                                  ],\n      \"-j\" => [ false, \"(JSON-RPC) Start JSON-RPC server\"                                  ],\n      \"-k\" => [ false, \"(JSON-RPC) Path to private key (default: #{ws_ssl_key_default})\"   ],\n      \"-c\" => [ false, \"(JSON-RPC) Path to certificate (default: #{ws_ssl_cert_default})\"  ],\n      \"-v\" => [ false, \"(JSON-RPC) SSL enable verify (optional) client cert requests\"      ],\n      \"-h\" => [ false, \"Help banner\"                                                       ])\n\n  # Parse command line arguments.\n  arguments.parse(ARGV) { |opt, idx, val|\n    case opt\n    when \"-a\"\n      opts['ServerHost'] = val\n    when \"-S\"\n      opts['SSL'] = false\n    when \"-p\"\n      opts['ServerPort'] = val\n    when '-U'\n      opts['User'] = val\n    when '-P'\n      opts['Pass'] = val\n    when \"-t\"\n      opts['TokenTimeout'] = val.to_i\n    when \"-f\"\n      foreground = true\n    when \"-u\"\n      opts['URI'] = val\n    when \"-n\"\n      frameworkOpts['DisableDatabase'] = true\n    when \"-j\"\n      json_rpc = true\n    when \"-k\"\n      ws_ssl_key = val\n    when \"-c\"\n      ws_ssl_cert = val\n    when \"-v\"\n      ssl_enable_verify = true\n    when \"-h\"\n      print(\"\\nUsage: #{File.basename(__FILE__)} <options>\\n\" +\targuments.usage)\n      exit\n    end\n  }\n\n  $0 = \"msfrpcd\"\n\n  begin\n    if json_rpc\n\n      if !File.file?(ws_ssl_key_default) || !File.file?(ws_ssl_cert_default)\n        $stdout.puts \"[-] It doesn't appear msfdb has been run; please run 'msfdb init' first.\"\n        abort\n      end\n\n      $stderr.puts \"[*] JSON-RPC starting on #{opts['ServerHost']}:#{opts['ServerPort']} (#{opts['SSL'] ? \"SSL\" : \"NO SSL\"})...\"\n      $stderr.puts \"[*] URI: /api/v1/json-rpc\"\n      $stderr.puts \"[*] JSON-RPC server log: #{ws_log}\" unless foreground\n      $stderr.puts \"[*] JSON-RPC server PID file: #{ws_rpc_pid}\" unless foreground\n\n      ws_conf_full_path = File.expand_path(File.join(File.dirname(msfbase), WS_CONF))\n\n      start_json_rpc_service(conf: ws_conf_full_path,\n                             address: opts['ServerHost'],\n                             port: opts['ServerPort'],\n                             ssl: opts['SSL'],\n                             ssl_key: ws_ssl_key,\n                             ssl_cert: ws_ssl_cert,\n                             ssl_disable_verify: !ssl_enable_verify,\n                             daemonize: !foreground,\n                             log: ws_log,\n                             pid: ws_rpc_pid)\n    else\n      unless opts['Pass']\n        $stderr.puts \"[-] Error: a password must be specified (-P)\"\n        exit(0)\n      end\n\n      $stderr.puts \"[*] #{RPC_TYPE.upcase}RPC starting on #{opts['ServerHost']}:#{opts['ServerPort']} (#{opts['SSL'] ? \"SSL\" : \"NO SSL\"}):#{opts['ServerType']}...\"\n      $stderr.puts \"[*] URI: #{opts['URI']}\" if opts['URI']\n\n      start_rpc_service(opts, frameworkOpts, foreground)\n    end\n  rescue ::Interrupt\n    stop_json_rpc_service(conf: ws_conf_full_path,\n                          address: opts['ServerHost'],\n                          port: opts['ServerPort'],\n                          ssl: opts['SSL'],\n                          ssl_key: ws_ssl_key,\n                          ssl_cert: ws_ssl_cert,\n                          ssl_disable_verify: !ssl_enable_verify,\n                          daemonize: !foreground,\n                          log: ws_log,\n                          pid: ws_rpc_pid) if json_rpc\n  end\nend\n"
        },
        {
          "name": "msfupdate",
          "type": "blob",
          "size": 9.93,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n#\n# $Id$\n#\n# This keeps the framework up-to-date\n#\n# $Revision$\n#\n\nmsfbase = __FILE__\nwhile File.symlink?(msfbase)\n  msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\nend\n\nclass Msfupdate\n  attr_reader :stdin\n  attr_reader :stdout\n  attr_reader :stderr\n\n  def initialize(msfbase_dir, stdin = $stdin, stdout = $stdout, stderr = $stderr)\n    @msfbase_dir = msfbase_dir\n    @stdin = stdin\n    @stdout = stdout\n    @stderr = stderr\n  end\n\n  def usage(io = stdout)\n    help = \"usage: msfupdate [options...]\\n\"\n    help << \"Options:\\n\"\n    help << \"-h, --help               show help\\n\"\n    help << \"    --git-remote REMOTE  git remote to use (default upstream)\\n\" if git?\n    help << \"    --git-branch BRANCH  git branch to use (default master)\\n\" if git?\n    help << \"    --offline-file FILE  offline update file to use\\n\" if binary_install?\n    io.print help\n  end\n\n  def parse_args(args)\n    begin\n      # GetoptLong uses ARGV, but we want to use the args parameter\n      # Copy args into ARGV, then restore ARGV after GetoptLong\n      real_args = ARGV.clone\n      ARGV.clear\n      args.each { |arg| ARGV << arg }\n\n      require 'getoptlong'\n      opts = GetoptLong.new(\n        ['--help', '-h', GetoptLong::NO_ARGUMENT],\n        ['--git-remote', GetoptLong::REQUIRED_ARGUMENT],\n        ['--git-branch', GetoptLong::REQUIRED_ARGUMENT],\n        ['--offline-file', GetoptLong::REQUIRED_ARGUMENT]\n      )\n\n      begin\n        opts.each do |opt, arg|\n          case opt\n          when '--help'\n            usage\n            maybe_wait_and_exit\n          when '--git-remote'\n            @git_remote = arg\n          when '--git-branch'\n            @git_branch = arg\n          when '--offline-file'\n            @offline_file = File.expand_path(arg)\n          end\n        end\n      rescue GetoptLong::Error\n        stderr.puts \"#{$PROGRAM_NAME}: try 'msfupdate --help' for more information\"\n        maybe_wait_and_exit 0x20\n      end\n\n      # Handle the old wait/nowait argument behavior\n      if ARGV[0] == 'wait' || ARGV[0] == 'nowait'\n        @actually_wait = (ARGV.shift == 'wait')\n      end\n\n    ensure\n      # Restore the original ARGV value\n      ARGV.clear\n      real_args.each { |arg| ARGV << arg }\n    end\n  end\n\n  def validate_args\n    valid = true\n    if binary_install? || apt?\n      if @git_branch\n        stderr.puts \"[-] ERROR: git-branch is not supported on this installation\"\n        valid = false\n      end\n      if @git_remote\n        stderr.puts \"[-] ERROR: git-remote is not supported on this installation\"\n        valid = false\n      end\n    end\n    if apt? || git?\n      if @offline_file\n        stderr.puts \"[-] ERROR: offline-file option is not supported on this installation\"\n        valid = false\n      end\n    end\n    valid\n  end\n\n  def apt?\n    File.exist?(File.expand_path(File.join(@msfbase_dir, '.apt')))\n  end\n\n  # Are you an installer, or did you get here via a source checkout?\n  def binary_install?\n    File.exist?(File.expand_path(File.join(@msfbase_dir, \"..\", \"engine\", \"update.rb\"))) && !apt?\n  end\n\n  def git?\n    File.directory?(File.join(@msfbase_dir, \".git\"))\n  end\n\n  def run!\n    validate_args || maybe_wait_and_exit(0x13)\n\n    stderr.puts \"[*]\"\n    stderr.puts \"[*] Attempting to update the Metasploit Framework...\"\n    stderr.puts \"[*]\"\n    stderr.puts \"\"\n\n    # Bail right away, no waiting around for consoles.\n    unless Process.uid.zero? || File.stat(@msfbase_dir).owned?\n      stderr.puts \"[-] ERROR: User running msfupdate does not own the Metasploit installation\"\n      stderr.puts \"[-] Please run msfupdate as the same user who installed Metasploit.\"\n      maybe_wait_and_exit 0x10\n    end\n\n    Dir.chdir(@msfbase_dir) do\n      if apt?\n        stderr.puts \"[-] ERROR: msfupdate is not supported on Kali Linux.\"\n        stderr.puts \"[-] Please run 'apt update; apt install metasploit-framework' instead.\"\n      elsif binary_install?\n        update_binary_install!\n      elsif git?\n        update_git!\n      else\n        raise \"Cannot determine checkout type: `#{@msfbase_dir}'\"\n      end\n    end\n  end\n\n  # We could also do this by running `git config --global user.name` and `git config --global user.email`\n  # and check the output of those. (it's a bit quieter)\n  def git_globals_okay?\n    output = ''\n    begin\n      output = `git config --list`\n    rescue Errno::ENOENT\n      stderr.puts '[-] ERROR: Failed to check git settings, git not found'\n      return false\n    end\n\n    unless output.include? 'user.name'\n      stderr.puts '[-] ERROR: user.name is not set in your global git configuration'\n      stderr.puts '[-] Set it by running: \\'git config --global user.name \"NAME HERE\"\\''\n      stderr.puts ''\n      return false\n    end\n\n    unless output.include? 'user.email'\n      stderr.puts '[-] ERROR: user.email is not set in your global git configuration'\n      stderr.puts '[-] Set it by running: \\'git config --global user.email \"email@example.com\"\\''\n      stderr.puts ''\n      return false\n    end\n\n    true\n  end\n\n  def update_git!\n    ####### Since we're Git, do it all that way #######\n    stdout.puts \"[*] Checking for updates via git\"\n    stdout.puts \"[*] Note: Updating from bleeding edge\"\n    out = `git remote show upstream` # Actually need the output for this one.\n    add_git_upstream unless $?.success? &&\n      out =~ %r{(https|git|git@github\\.com):(//github\\.com/)?(rapid7/metasploit-framework\\.git)}\n\n    remote = @git_remote || \"upstream\"\n    branch = @git_branch || \"master\"\n\n    # This will save local changes in a stash, but won't\n    # attempt to reapply them. If the user wants them back\n    # they can always git stash pop them, and that presumes\n    # they know what they're doing when they're editing local\n    # checkout, which presumes they're not using msfupdate\n    # to begin with.\n    #\n    # Note, this requires at least user.name and user.email\n    # to be configured in the global git config. Installers\n    # will be told to set them if they aren't already set.\n\n    # Checks user.name and user.email\n    global_status = git_globals_okay?\n    maybe_wait_and_exit(1) unless global_status\n\n    # We shouldn't get here if the globals dont check out\n    committed = system(\"git\", \"diff\", \"--quiet\", \"HEAD\")\n    if committed.nil?\n      stderr.puts \"[-] ERROR: Failed to run git\"\n      stderr.puts \"\"\n      stderr.puts \"[-] If you used a binary installer, make sure you run the symlink in\"\n      stderr.puts \"[-] /usr/local/bin instead of running this file directly (e.g.: ./msfupdate)\"\n      stderr.puts \"[-] to ensure a proper environment.\"\n      maybe_wait_and_exit 1\n    elsif !committed\n      system(\"git\", \"stash\")\n      stdout.puts \"[*] Stashed local changes to avoid merge conflicts.\"\n      stdout.puts \"[*] Run `git stash pop` to reapply local changes.\"\n    end\n\n    system(\"git\", \"reset\", \"HEAD\", \"--hard\")\n    system(\"git\", \"checkout\", branch)\n    system(\"git\", \"fetch\", remote)\n    system(\"git\", \"merge\", \"#{remote}/#{branch}\")\n\n    stdout.puts \"[*] Updating gems...\"\n    begin\n      require 'bundler'\n    rescue LoadError\n      stderr.puts '[*] Installing bundler'\n      system('gem', 'install', 'bundler')\n      Gem.clear_paths\n      require 'bundler'\n    end\n    Bundler.with_clean_env do\n      if File::exist? \"Gemfile.local\"\n        system(\"bundle\", \"install\", \"--gemfile\", \"Gemfile.local\")\n      else\n        system(\"bundle\", \"install\")\n      end\n    end\n  end\n\n  def update_binary_install!\n    update_script = File.expand_path(File.join(@msfbase_dir, \"..\", \"engine\", \"update.rb\"))\n    product_key =   File.expand_path(File.join(@msfbase_dir, \"..\", \"engine\", \"license\", \"product.key\"))\n    if File.exist? product_key\n      if File.readable? product_key\n        if @offline_file\n          system(\"ruby\", update_script, @offline_file)\n        else\n          system(\"ruby\", update_script)\n        end\n      else\n        stdout.puts \"[-] ERROR: Failed to update Metasploit installation\"\n        stdout.puts \"\"\n        stdout.puts \"[-] You must be able to read the product key for the\"\n        stdout.puts \"[-]\tMetasploit installation in order to run msfupdate.\"\n        stdout.puts \"[-] Usually, this means you must be root (EUID 0).\"\n        maybe_wait_and_exit 10\n      end\n    else\n      stdout.puts \"[-] ERROR: Failed to update Metasploit installation\"\n      stdout.puts \"\"\n      stdout.puts \"[-] In order to update your Metasploit installation,\"\n      stdout.puts \"[-] you must first register it through the UI, here:\"\n      stderr.puts \"[-] https://localhost:3790\"\n      stderr.puts \"[-] (Note: Metasploit Community Edition is totally\"\n      stderr.puts \"[-] free and takes just a few seconds to register!)\"\n      maybe_wait_and_exit 11\n    end\n  end\n\n  # Adding an upstream enables msfupdate to pull updates from\n  # Rapid7's metasploit-framework repo instead of the repo\n  # the user originally cloned or forked.\n  def add_git_upstream\n    stdout.puts \"[*] Attempting to add remote 'upstream' to your local git repository.\"\n    system(\"git\", \"remote\", \"add\", \"upstream\", \"git://github.com/rapid7/metasploit-framework.git\")\n    stdout.puts \"[*] Added remote 'upstream' to your local git repository.\"\n  end\n\n  # This only exits if you actually pass a wait option, otherwise\n  # just returns nil. This is likely unexpected, revisit this.\n  def maybe_wait_and_exit(exit_code = 0)\n    if @actually_wait\n      stdout.puts \"\"\n      stdout.puts \"[*] Please hit enter to exit\"\n      stdout.puts \"\"\n      stdin.readline\n    end\n    exit exit_code\n  end\n\n  def apt_upgrade_available(package)\n    require 'open3'\n    installed = nil\n    upgrade = nil\n    ::Open3.popen3({ 'LANG' => 'en_US.UTF-8' }, \"apt-cache\", \"policy\", package) do |_stdin, stdout, _stderr|\n      stdout.each do |line|\n        installed = $1 if line =~ /Installed: ([\\w\\-+.:~]+)$/\n        upgrade = $1 if line =~ /Candidate: ([\\w\\-+.:~]+)$/\n        break if installed && upgrade\n      end\n    end\n    if installed && installed != upgrade\n      upgrade\n    else\n      nil\n    end\n  end\nend\n\nif __FILE__ == $PROGRAM_NAME\n  cli = Msfupdate.new(File.dirname(msfbase))\n  cli.parse_args(ARGV.dup)\n  cli.run!\n  cli.maybe_wait_and_exit\nend\n"
        },
        {
          "name": "msfvenom",
          "type": "blob",
          "size": 13.73,
          "content": "#!/usr/bin/env ruby\n# -*- coding: binary -*-\n\nclass MsfVenomError < StandardError; end\nclass HelpError < StandardError; end\nclass UsageError < MsfVenomError; end\n\nrequire 'optparse'\nrequire 'timeout'\n\n# Silences warnings as they only serve to confuse end users\nif defined?(Warning) && Warning.respond_to?(:[]=)\n  Warning[:deprecated] = false\nend\n\nmsfbase = __FILE__\nwhile File.symlink?(msfbase)\n  msfbase = File.expand_path(File.readlink(msfbase), File.dirname(msfbase))\nend\n\n$:.unshift(File.expand_path(File.join(File.dirname(msfbase), 'lib')))\n\nrequire 'metasploit/framework/profiler'\nMetasploit::Framework::Profiler.start\n\ndef require_deps\n  require 'msfenv'\n\n  $:.unshift(ENV['MSF_LOCAL_LIB']) if ENV['MSF_LOCAL_LIB']\n\n  require 'rex'\n  require 'msf/core/payload_generator'\n  require 'msf/core/constants'\n\n  @framework_loaded = true\nend\n\n# Creates a new framework object.\n#\n# @note Ignores any previously cached value.\n# @param (see ::Msf::Simple::Framework.create)\n# @return [Msf::Framework]\ndef init_framework(create_opts={})\n  require_deps unless @framework_loaded\n\n  create_opts[:module_types] ||= [\n    ::Msf::MODULE_PAYLOAD, ::Msf::MODULE_ENCODER, ::Msf::MODULE_NOP\n  ]\n\n  create_opts[:module_types].map! do |type|\n    Msf.const_get(\"MODULE_#{type.upcase}\")\n  end\n\n  @framework = ::Msf::Simple::Framework.create(create_opts)\n\n  unless $stdout.tty?\n    Rex::Text::Table.unwrap_tables!\n  end\nend\n\n# Cached framework object\n#\n# @return [Msf::Framework]\ndef framework\n  return @framework if @framework\n\n  init_framework\n\n  @framework\nend\n\ndef parse_args(args)\n  opts = {}\n  datastore = {}\n  opt = OptionParser.new\n  banner = \"MsfVenom - a Metasploit standalone payload generator.\\n\"\n  banner << \"Also a replacement for msfpayload and msfencode.\\n\"\n  banner << \"Usage: #{$0} [options] <var=val>\\n\"\n  banner << \"Example: #{$0} -p windows/meterpreter/reverse_tcp LHOST=<IP> -f exe -o payload.exe\"\n  opt.banner = banner\n  opt.separator('')\n  opt.separator('Options:')\n\n  opt.on('-l', '--list            <type>', Array, 'List all modules for [type]. Types are: payloads, encoders, nops, platforms, archs, encrypt, formats, all') do |l|\n    if l.to_s.empty?\n      l = [\"all\"]\n    end\n    opts[:list] = l\n  end\n\n  opt.on('-p', '--payload         <payload>', String,\n         \"Payload to use (--list payloads to list, --list-options for arguments). Specify '-' or STDIN for custom\") do |p|\n    if p == '-'\n      opts[:payload] = 'stdin'\n    else\n      opts[:payload] = p\n    end\n  end\n\n  opt.on('--list-options', \"List --payload <value>'s standard, advanced and evasion options\") do\n    opts[:list_options] = true\n  end\n\n  opt.on('-f', '--format          <format>', String, \"Output format (use --list formats to list)\") do |f|\n    opts[:format] = f.downcase\n  end\n\n  opt.on('-e', '--encoder         <encoder>', String, 'The encoder to use (use --list encoders to list)') do |e|\n    opts[:encoder] = e\n  end\n\n  opt.on('--service-name    <value>', String, 'The service name to use when generating a service binary') do |s|\n    opts[:servicename] = s\n    opts[:sub_method] = true # Needed to ensure that to_win32pe_service() will call\n                             # exe_sub_method() for x86 binaries, not needed and ignored for x64 binaries.\n  end\n\n  opt.on('--sec-name        <value>', String, 'The new section name to use when generating large Windows binaries. Default: random 4-character alpha string') do |s|\n    opts[:secname] = s\n  end\n\n  opt.on('--smallest', 'Generate the smallest possible payload using all available encoders') do\n    opts[:smallest] = true\n  end\n\n  opt.on('--encrypt         <value>', String, 'The type of encryption or encoding to apply to the shellcode (use --list encrypt to list)') do |e|\n    opts[:encryption_format] = e\n  end\n\n  opt.on('--encrypt-key     <value>', String, 'A key to be used for --encrypt') do |e|\n    init_framework\n    opts[:encryption_key] = Rex::Text.dehex(e)\n  end\n\n  opt.on('--encrypt-iv      <value>', String, 'An initialization vector for --encrypt') do |e|\n    opts[:encryption_iv] = e\n  end\n\n  opt.on('-a', '--arch            <arch>', String, 'The architecture to use for --payload and --encoders (use --list archs to list)') do |a|\n    opts[:arch] = a\n  end\n\n  opt.on('--platform        <platform>', String, 'The platform for --payload (use --list platforms to list)') do |l|\n    opts[:platform] = l\n  end\n\n  opt.on('-o', '--out             <path>', 'Save the payload to a file') do |x|\n    opts[:out] = x\n  end\n\n  opt.on('-b', '--bad-chars       <list>', String, 'Characters to avoid example: \\'\\x00\\xff\\'') do |b|\n    init_framework\n    opts[:badchars] = Rex::Text.dehex(b)\n  end\n\n  opt.on('-n', '--nopsled         <length>', Integer, 'Prepend a nopsled of [length] size on to the payload') do |n|\n    opts[:nops] = n.to_i\n  end\n\n  opt.on('--pad-nops', 'Use nopsled size specified by -n <length> as the total payload size, auto-prepending a nopsled of quantity (nops minus payload length)') do\n    opts[:padnops] = true\n  end\n\n  opt.on('-s', '--space           <length>', Integer, 'The maximum size of the resulting payload') do |s|\n    opts[:space] = s\n  end\n\n  opt.on('--encoder-space   <length>', Integer, 'The maximum size of the encoded payload (defaults to the -s value)') do |s|\n    opts[:encoder_space] = s\n  end\n\n  opt.on('-i', '--iterations      <count>', Integer, 'The number of times to encode the payload') do |i|\n    opts[:iterations] = i\n  end\n\n  opt.on('-c', '--add-code        <path>', String, 'Specify an additional win32 shellcode file to include') do |x|\n    opts[:add_code] = x\n  end\n\n  opt.on('-x', '--template        <path>', String, 'Specify a custom executable file to use as a template') do |x|\n    opts[:template] = x\n  end\n\n  opt.on('-k', '--keep', 'Preserve the --template behaviour and inject the payload as a new thread') do\n    opts[:keep] = true\n  end\n\n  opt.on('-v', '--var-name        <value>', String, 'Specify a custom variable name to use for certain output formats') do |x|\n    opts[:var_name] = x\n  end\n\n  opt.on('-t', '--timeout         <second>', Integer, \"The number of seconds to wait when reading the payload from STDIN (default 30, 0 to disable)\") do |x|\n    opts[:timeout] = x\n  end\n\n  opt.on_tail('-h', '--help', 'Show this message') do\n    raise HelpError, \"#{opt}\"\n  end\n\n  begin\n    opt.parse!(args)\n  rescue OptionParser::InvalidOption => e\n    raise UsageError, \"Invalid option\\n#{opt}\"\n  rescue OptionParser::MissingArgument => e\n    raise UsageError, \"Missing required argument for option\\n#{opt}\"\n  end\n\n  if opts.empty?\n    raise UsageError, \"No options\\n#{opt}\"\n  end\n\n  if args\n    args.each do |x|\n      k,v = x.split('=', 2)\n      datastore[k.upcase] = v.to_s\n    end\n    if opts[:payload].to_s =~ /[\\_\\/]reverse/ && datastore['LHOST'].nil?\n      init_framework\n      datastore['LHOST'] = Rex::Socket.source_address\n    end\n  end\n\n  if opts[:payload].nil? # if no payload option is selected assume we are reading it from stdin\n    opts[:payload] = \"stdin\"\n  end\n\n  if opts[:payload].downcase == 'stdin' && !opts[:list]\n    $stderr.puts \"Attempting to read payload from STDIN...\"\n    begin\n      opts[:timeout] ||= 30\n      ::Timeout.timeout(opts[:timeout]) do\n        opts[:stdin] = payload_stdin\n      end\n    rescue Timeout::Error\n      opts[:stdin] = ''\n    end\n  end\n\n  opts[:datastore] = datastore\n\n  opts\nend\n# Read a raw payload from stdin (or whatever IO object we're currently\n# using as stdin, see {#initialize})\n#\n# @return [String]\ndef payload_stdin\n  @in = $stdin\n  @in.binmode\n  payload = @in.read\n  payload\nend\n\ndef dump_platforms\n  init_framework(:module_types => [])\n  supported_platforms = []\n  Msf::Module::Platform.subclasses.each {|c| supported_platforms << c.realname.downcase}\n\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Platforms [--platform <value>]\",\n    'Columns' =>\n    [\n      \"Name\",\n    ])\n\n  supported_platforms.sort.each do |name|\n    tbl << [name]\n  end\n\n  \"\\n\" + tbl.to_s + \"\\n\"\nend\n\ndef dump_archs\n  init_framework(:module_types => [])\n  supported_archs = ARCH_ALL.dup\n\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Architectures [--arch <value>]\",\n    'Columns' =>\n    [\n      \"Name\",\n    ])\n\n  supported_archs.sort.each do |name|\n    tbl << [name]\n  end\n\n  \"\\n\" + tbl.to_s + \"\\n\"\nend\n\ndef dump_encrypt\n  init_framework(:module_types => [])\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Encryption Formats [--encrypt <value>]\",\n    'Columns' =>\n    [\n      \"Name\",\n    ])\n\n  ::Msf::Simple::Buffer.encryption_formats.each do |name|\n    tbl << [ name]\n  end\n\n  \"\\n\" + tbl.to_s + \"\\n\"\nend\n\ndef dump_formats\n  init_framework(:module_types => [])\n  tbl1 = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Executable Formats [--format <value>]\",\n    'Columns' =>\n    [\n      \"Name\"\n    ])\n\n  ::Msf::Util::EXE.to_executable_fmt_formats.each do |name|\n    tbl1 << [ name ]\n  end\n\n  tbl2 = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Transform Formats [--format <value>]\",\n    'Columns' =>\n    [\n      \"Name\"\n    ])\n\n  ::Msf::Simple::Buffer.transform_formats.each do |name|\n    tbl2 << [ name ]\n  end\n\n  \"\\n\" + tbl1.to_s + \"\\n\" + tbl2.to_s + \"\\n\"\nend\n\ndef dump_payloads(platform = nil, arch = nil)\n  init_framework(:module_types => [ :payload ])\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Payloads (#{framework.stats.num_payloads} total) [--payload <value>]\",\n    'Columns' =>\n    [\n      \"Name\",\n      \"Description\"\n    ])\n\n  framework.payloads.each_module(\n    'Platform' => platform ? Msf::Module::PlatformList.transform(platform.split(',')) : nil,\n    'Arch'     => arch ? arch.split(',') : nil) do |name, mod|\n      begin\n        mod_info = mod.new.description.split.join(' ')\n      rescue ::Exception, ::LoadError => e\n        wlog(\"Module #{name} failed to initialize: #{e}\", 'core', LEV_0)\n        next\n      end\n      tbl << [ name, mod_info ]\n  end\n\n  \"\\n\" + tbl.to_s + \"\\n\"\nend\n\ndef dump_encoders(arch = nil)\n  init_framework(:module_types => [ :encoder ])\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework Encoders\" + ((arch) ? \" (architectures: #{arch})\" : \"\") + \" [--encoder <value>]\",\n    'Columns' =>\n    [\n      \"Name\",\n      \"Rank\",\n      \"Description\"\n    ])\n  cnt = 0\n\n  framework.encoders.each_module(\n    'Arch' => arch ? arch.split(',') : nil) do |name, mod|\n      tbl << [ name, mod.rank_to_s, mod.new.name ]\n\n      cnt += 1\n  end\n\n    (cnt > 0) ? \"\\n\" + tbl.to_s + \"\\n\" : \"\\nNo compatible encoders found.\\n\\n\"\nend\n\ndef dump_nops\n  init_framework(:module_types => [ :nop ])\n  tbl = Rex::Text::Table.new(\n    'Indent'  => 4,\n    'Header'  => \"Framework NOPs (#{framework.stats.num_nops} total)\",\n    'Columns' =>\n    [\n      \"Name\",\n      \"Description\"\n    ])\n\n  framework.nops.each_module do |name, mod|\n    tbl << [ name, mod.new.description.split.join(' ') ]\n  end\n\n  \"\\n\" + tbl.to_s + \"\\n\"\nend\n\nbegin\n  generator_opts = parse_args(ARGV)\n\nrescue HelpError => e\n  $stderr.puts e.message\n  exit(1)\nrescue MsfVenomError => e\n  $stderr.puts \"Error: #{e.message}\"\n  exit(1)\nend\n\nif generator_opts[:list]\n  generator_opts[:list].each do |mod|\n    case mod.downcase\n    when \"payloads\", \"payload\", \"p\"\n      $stdout.puts dump_payloads(generator_opts[:platform], generator_opts[:arch])\n    when \"encoders\", \"encoder\", \"e\"\n      $stdout.puts dump_encoders(generator_opts[:arch])\n    when \"nops\", \"nop\", \"n\"\n      $stdout.puts dump_nops\n    when \"platforms\", \"dump_platform\"\n      $stdout.puts dump_platforms\n    when \"archs\", \"dump_arch\"\n      $stdout.puts dump_archs\n    when \"encrypts\", \"encrypt\", \"encryption\"\n      $stdout.puts dump_encrypt\n    when \"formats\", \"format\", \"f\"\n      $stdout.puts dump_formats\n    when \"all\", \"a\"\n      # Init here so #dump_payloads doesn't create a framework with\n      # only payloads, etc.\n      init_framework\n      $stdout.puts dump_payloads\n      $stdout.puts dump_encoders\n      $stdout.puts dump_nops\n      $stdout.puts dump_platforms\n      $stdout.puts dump_archs\n      $stdout.puts dump_encrypt\n      $stdout.puts dump_formats\n    else\n      $stderr.puts \"Invalid type (#{mod}). These are valid: payloads, encoders, nops, platforms, archs, encrypt, formats, all\"\n    end\n  end\n  exit(0)\nend\n\nif generator_opts[:list_options]\n  payload_mod = framework.payloads.create(generator_opts[:payload])\n\n  if payload_mod.nil?\n    $stderr.puts \"Invalid payload: #{generator_opts[:payload]}\"\n    exit(1)\n  end\n\n  $stderr.puts \"Options for #{payload_mod.fullname}:\\n\" + \"=\"*25 + \"\\n\\n\"\n  $stdout.puts ::Msf::Serializer::ReadableText.dump_module(payload_mod, '    ')\n\n  $stderr.puts \"\\nAdvanced options for #{payload_mod.fullname}:\\n\" + \"=\"*25 + \"\\n\\n\"\n  $stdout.puts ::Msf::Serializer::ReadableText.dump_advanced_options(payload_mod, '    ')\n\n  $stderr.puts \"\\nEvasion options for #{payload_mod.fullname}:\\n\" + \"=\"*25 + \"\\n\\n\"\n  $stdout.puts ::Msf::Serializer::ReadableText.dump_evasion_options(payload_mod, '    ')\n\n  exit(0)\nend\n\ngenerator_opts[:framework] = framework\ngenerator_opts[:cli] = true\n\nbegin\n  venom_generator = Msf::PayloadGenerator.new(generator_opts)\n  payload = venom_generator.generate_payload\nrescue Msf::InvalidFormat => e\n  $stderr.puts \"Error: #{e.message}\"\n  $stderr.puts dump_formats\nrescue ::Exception => e\n  elog(\"#{e.class} : #{e.message}\\n#{e.backtrace * \"\\n\"}\")\n  $stderr.puts \"Error: #{e.message}\"\nend\n\n# No payload generated, no point to go on\nexit(2) unless payload\n\nif generator_opts[:out]\n  begin\n    ::File.open(generator_opts[:out], 'wb') do |f|\n      f.write(payload)\n    end\n    $stderr.puts \"Saved as: #{generator_opts[:out]}\"\n  rescue ::Exception => e\n    # If I can't save it, then I can't save it. I don't think it matters what error.\n    elog(\"#{e.class} : #{e.message}\\n#{e.backtrace * \"\\n\"}\")\n    $stderr.puts \"Error: #{e.message}\"\n  end\nelse\n  output_stream = $stdout\n  output_stream.binmode\n  output_stream.write payload\n  # trailing newline for pretty output\n  $stderr.puts unless payload =~ /\\n$/\nend\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}