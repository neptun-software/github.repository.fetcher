{
  "metadata": {
    "timestamp": 1736557715626,
    "page": 845,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "exelban/stats",
      "stars": 27188,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.12,
          "content": ".DS_Store\n\nPods\nCarthage\nbuild\nxcuserdata\n\nStats.dmg\nStats.app\ncreate-dmg\ndSYMs.zip\nStats.dmg.zip\nSMC/smc\n\nCartfile.resolved"
        },
        {
          "name": ".swiftlint.yml",
          "type": "blob",
          "size": 0.96,
          "content": "disabled_rules:\n  - force_cast # todo\n  - type_name # todo\n  - cyclomatic_complexity # todo\n  - trailing_whitespace\n  - opening_brace\n  - implicit_getter\n  - redundant_optional_initialization\n  - large_tuple\n  - function_body_length\n\nopt_in_rules:\n  - control_statement\n  - empty_count\n  - trailing_newline\n  - colon\n  - comma\n\nidentifier_name:\n  min_length: 1\n  excluded:\n    - AppUpdateIntervals\n    - TemperatureUnits\n    - SpeedBase\n    - SensorsWidgetMode\n    - SpeedPictogram\n    - BatteryAdditionals\n    - ShortLong\n    - ReaderUpdateIntervals\n    - NumbersOfProcesses\n    - NetworkReaders\n    - SensorsList\n    - Alignments\n    - _devices\n    - _uuidAddress\n    - AppleSiliconSensorsList\n    - FanValues\n    - CombinedModulesSpacings\n    - BatteryInfo\n    - PublicIPAddressRefreshIntervals\n    - _values\n    - _writeTS\n    - LineChartHistory\n    - SpeedPictogramColor\n    - SensorsWidgetValue\n\nline_length: 200\n\ntype_body_length:\n  - 700\n  - 1000\n\nfile_length:\n  - 1400\n  - 1800"
        },
        {
          "name": "Kit",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05,
          "content": "MIT License\n\nCopyright (c) 2019 Serhiy Mytrovtsiy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LaunchAtLogin",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.63,
          "content": "APP = Stats\nBUNDLE_ID = eu.exelban.$(APP)\n\nBUILD_PATH = $(PWD)/build\nAPP_PATH = \"$(BUILD_PATH)/$(APP).app\"\nZIP_PATH = \"$(BUILD_PATH)/$(APP).zip\"\n\n.SILENT: archive notarize sign prepare-dmg prepare-dSYM clean next-version check history disk smc leveldb\n.PHONY: build archive notarize sign prepare-dmg prepare-dSYM clean next-version check history open smc leveldb\n\nbuild: clean next-version archive notarize sign prepare-dmg prepare-dSYM open\n\n# --- MAIN WORLFLOW FUNCTIONS --- #\n\narchive: clean\n\tosascript -e 'display notification \"Exporting application archive...\" with title \"Build the Stats\"'\n\techo \"Exporting application archive...\"\n\n\txcodebuild \\\n  \t\t-scheme $(APP) \\\n  \t\t-destination 'platform=OS X,arch=x86_64' \\\n  \t\t-configuration Release archive \\\n  \t\t-archivePath $(BUILD_PATH)/$(APP).xcarchive\n\n\techo \"Application built, starting the export archive...\"\n\n\txcodebuild -exportArchive \\\n  \t\t-exportOptionsPlist \"$(PWD)/exportOptions.plist\" \\\n  \t\t-archivePath $(BUILD_PATH)/$(APP).xcarchive \\\n  \t\t-exportPath $(BUILD_PATH)\n\n\tditto -c -k --keepParent $(APP_PATH) $(ZIP_PATH)\n\n\techo \"Project archived successfully\"\n\nnotarize:\n\tosascript -e 'display notification \"Submitting app for notarization...\" with title \"Build the Stats\"'\n\techo \"Submitting app for notarization...\"\n\n\txcrun notarytool submit --keychain-profile \"AC_PASSWORD\" --wait $(ZIP_PATH)\n\n\techo \"Stats successfully notarized\"\n\nsign:\n\tosascript -e 'display notification \"Stampling the Stats...\" with title \"Build the Stats\"'\n\techo \"Going to staple an application...\"\n\n\txcrun stapler staple $(APP_PATH)\n\tspctl -a -t exec -vvv $(APP_PATH)\n\n\tosascript -e 'display notification \"Stats successfully stapled\" with title \"Build the Stats\"'\n\techo \"Stats successfully stapled\"\n\nprepare-dmg:\n\tif [ ! -d $(PWD)/create-dmg ]; then \\\n\t    git clone https://github.com/create-dmg/create-dmg; \\\n\tfi\n\n\t./create-dmg/create-dmg \\\n\t    --volname $(APP) \\\n\t    --background \"./Stats/Supporting Files/background.png\" \\\n\t    --window-pos 200 120 \\\n\t    --window-size 500 320 \\\n\t    --icon-size 80 \\\n\t    --icon \"Stats.app\" 125 175 \\\n\t    --hide-extension \"Stats.app\" \\\n\t    --app-drop-link 375 175 \\\n\t    --no-internet-enable \\\n\t    $(PWD)/$(APP).dmg \\\n\t    $(APP_PATH)\n\n\trm -rf ./create-dmg\n\nprepare-dSYM:\n\techo \"Zipping dSYMs...\"\n\tcd $(BUILD_PATH)/Stats.xcarchive/dSYMs && zip -r $(PWD)/dSYMs.zip .\n\techo \"Created zip with dSYMs\"\n\n# --- HELPERS --- #\n\nclean:\n\trm -rf $(BUILD_PATH)\n\tif [ -a $(PWD)/dSYMs.zip ]; then rm $(PWD)/dSYMs.zip; fi;\n\tif [ -a $(PWD)/Stats.dmg ]; then rm $(PWD)/Stats.dmg; fi;\n\nnext-version:\n\tversionNumber=$$(/usr/libexec/PlistBuddy -c \"Print CFBundleVersion\" \"$(PWD)/Stats/Supporting Files/Info.plist\") ;\\\n\techo \"Actual version is: $$versionNumber\" ;\\\n\tversionNumber=$$((versionNumber + 1)) ;\\\n\techo \"Next version is: $$versionNumber\" ;\\\n\t/usr/libexec/PlistBuddy -c \"Set :CFBundleVersion $$versionNumber\" \"$(PWD)/Stats/Supporting Files/Info.plist\" ;\\\n\ncheck:\n\txcrun notarytool log 2d0045cc-8f0d-4f4c-ba6f-728895fd064a --keychain-profile \"AC_PASSWORD\"\n\nhistory:\n\txcrun notarytool history --keychain-profile \"AC_PASSWORD\"\n\nopen:\n\tosascript -e 'display notification \"Stats signed and ready for distribution\" with title \"Build the Stats\"'\n\techo \"Opening working folder...\"\n\topen $(PWD)\n\nsmc:\n\t$(MAKE) --directory=./smc\n\topen $(PWD)/smc\n\nleveldb:\n\tif [ ! -d $(PWD)/leveldb-source ]; then \\\n\t\tgit clone --recurse-submodules https://github.com/google/leveldb.git leveldb-source; \\\n\tfi\n\tmkdir -p $(PWD)/leveldb-source/build\n\tcd $(PWD)/leveldb-source/build && cmake -DCMAKE_OSX_ARCHITECTURES=\"x86_64;arm64\" -DCMAKE_BUILD_TYPE=Release .. && cmake --build .\n\tcp $(PWD)/leveldb-source/build/libleveldb.a $(PWD)/Kit/lldb/libleveldb.a\n\trm -rf $(PWD)/leveldb-source"
        },
        {
          "name": "Modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.12,
          "content": "# Stats\n\n<a href=\"https://github.com/exelban/stats/releases\"><p align=\"center\"><img src=\"https://github.com/exelban/stats/raw/master/Stats/Supporting%20Files/Assets.xcassets/AppIcon.appiconset/icon_256x256.png\" width=\"120\"></p></a>\n\n[![Stats](https://serhiy.s3.eu-central-1.amazonaws.com/Github_repo/stats/menus%3Fv2.3.2.png?v1)](https://github.com/exelban/stats/releases)\n[![Stats](https://serhiy.s3.eu-central-1.amazonaws.com/Github_repo/stats/popups%3Fv2.3.2.png?v3)](https://github.com/exelban/stats/releases)\n\nmacOS system monitor in your menu bar\n\n## Installation\n### Manual\nYou can download the latest version [here](https://github.com/exelban/stats/releases/latest/download/Stats.dmg).\nThis will download a file called `Stats.dmg`. Open it and move the app to the application folder.\n\n### Homebrew\nTo install it using Homebrew, open the Terminal app and type:\n```bash\nbrew install stats\n```\n\n## Requirements\nStats is supported on the released macOS version starting from macOS 10.15 (Catalina).\n\n## Features\nStats is an application that allows you to monitor your macOS system.\n\n - CPU utilization\n - GPU utilization\n - Memory usage\n - Disk utilization\n - Network usage\n - Battery level\n - Fan's control (not maintained)\n - Sensors information (Temperature/Voltage/Power)\n - Bluetooth devices\n - Multiple time zone clock\n\n## FAQs\n\n### How do you change the order of the menu bar icons?\nmacOS decides the order of the menu bar items not `Stats` - it may change after the first reboot after installing Stats.\n\nTo change the order of any menu bar icon - macOS Mojave (version 10.14) and up.\n\n1. Hold down ⌘ (command key).\n2. Drag the icon to the desired position on the menu bar.\n3. Release ⌘ (command key)\n\n### What if you don't see sensors (M1 macs)?\nSensors data on the first generation of M1 mac could be obtained only from HID services. It's disabled by default because it consumes a lot of CPU and energy. You can enable it in the Sensors module settings with the option `HID sensors`.\n\nIt's only valid for M1 Apple Silicon macs. If you don't see sensors on another mac, please open an issue for that.\n\n### How to show the CPU frequency?\nThe CPU frequency is available only on Intel-based macs. You need to have installed [Intel Power Gadget](https://www.intel.com/content/www/us/en/developer/articles/tool/power-gadget.html) (IPG) for that. It allows receiving the CPU frequency from the IPG driver. There is no way to obtain a CPU frequency on Apple silicon macs.\n\n### How to reduce energy impact or CPU usage of Stats?\nStats tries to be efficient as it's possible. But reading some data periodically is not a cheap task. Each module has its own \"price\". So, if you want to reduce energy impact from the Stats you need to disable some Stats modules. The most inefficient modules are Sensors and Bluetooth. Disabling these modules could reduce CPU usage and power efficiency by up to 50% in some cases.\n\n### Why my issue was closed without any response?\nMost probably because it's a duplicated issue and there is an answer to the question, report, or proposition. Please use a search by closed issues to get an answer.\nSo, if your issue was closed without any response, most probably it already has a response.\n\n### Fan control\nFan control is in legacy mode. It does not receive any updates or fixes. It's not dropped from the app just because in the old Macs it works pretty acceptable. I'm open to accepting fixed or improvements (via PR) for this feature in case someone would like to help with that. But have no option and time to provide support for this feature.\n\n## Supported languages\n- English\n- Polski\n- Українська\n- Русский\n- 中文 (简体) (thanks to [chenguokai](https://github.com/chenguokai), [Tai-Zhou](https://github.com/Tai-Zhou), and [Jerry](https://github.com/Jerry23011))\n- Türkçe (thanks to [yusufozgul](https://github.com/yusufozgul))\n- 한국어 (thanks to [escapeanaemia](https://github.com/escapeanaemia) and [iamhslee](https://github.com/iamhslee))\n- German (thanks to [natterstefan](https://github.com/natterstefan) and [aneitel](https://github.com/aneitel))\n- 中文 (繁體) (thanks to [iamch15542](https://github.com/iamch15542) and [jrthsr700tmax](https://github.com/jrthsr700tmax))\n- Spanish (thanks to [jcconca](https://github.com/jcconca))\n- Vietnamese (thanks to [HXD.VN](https://github.com/xuandung38))\n- French (thanks to [RomainLt](https://github.com/RomainLt))\n- Italian (thanks to [gmcinalli](https://github.com/gmcinalli))\n- Portuguese (Brazil) (thanks to [marcelochaves95](https://github.com/marcelochaves95) and [pedroserigatto](https://github.com/pedroserigatto))\n- Norwegian Bokmål (thanks to [rubjo](https://github.com/rubjo))\n- 日本語 (thanks to [treastrain](https://github.com/treastrain))\n- Portuguese (Portugal) (thanks to [AdamModus](https://github.com/AdamModus))\n- Czech (thanks to [mpl75](https://github.com/mpl75))\n- Magyar (thanks to [moriczr](https://github.com/moriczr))\n- Bulgarian (thanks to [zbrox](https://github.com/zbrox))\n- Romanian (thanks to [razluta](https://github.com/razluta))\n- Dutch (thanks to [ngohungphuc](https://github.com/ngohungphuc))\n- Hrvatski (thanks to [milotype](https://github.com/milotype))\n- Danish (thanks to [casperes1996](https://github.com/casperes1996) and [aleksanderbl29](https://github.com/aleksanderbl29))\n- Catalan (thanks to [davidalonso](https://github.com/davidalonso))\n- Indonesian (thanks to [yooody](https://github.com/yooody))\n- Hebrew (thanks to [BadSugar](https://github.com/BadSugar))\n- Slovenian (thanks to [zigapovhe](https://github.com/zigapovhe))\n- Greek (thanks to [sudoxcess](https://github.com/sudoxcess) and [vaionicle](https://github.com/vaionicle))\n- Persian (thanks to [ShawnAlisson](https://github.com/ShawnAlisson))\n- Slovenský (thanks to [martinbernat](https://github.com/martinbernat))\n- Thai (thanks to [apiphoomchu](https://github.com/apiphoomchu))\n- Estonian (thanks to [postylem](https://github.com/postylem))\n- Hindi (thanks to [patiljignesh](https://github.com/patiljignesh))\n- Finnish (thanks to [eightscrow](https://github.com/eightscrow))\n\nYou can help by adding a new language or improving the existing translation.\n\n## License\n[MIT License](https://github.com/exelban/stats/blob/master/LICENSE)\n"
        },
        {
          "name": "SMC",
          "type": "tree",
          "content": null
        },
        {
          "name": "Stats.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "Stats",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Widgets",
          "type": "tree",
          "content": null
        },
        {
          "name": "exportOptions.plist",
          "type": "blob",
          "size": 0.29,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>method</key>\n    <string>developer-id</string>\n    <key>signingStyle</key>\n    <string>automatic</string>\n</dict>\n</plist>"
        }
      ]
    }
  ]
}