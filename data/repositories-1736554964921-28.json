{
  "metadata": {
    "timestamp": 1736554964921,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jackfrued/Python-100-Days",
      "stars": 159639,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.24,
          "content": "venv\n.idea\n*.pyc\n__pycache__\n\n### VisualStudioCode ###\n.vscode/*\n.vscode/**\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n"
        },
        {
          "name": "Day01-15",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day16-20",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day21-30",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day31-35",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day36-45",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day46-60",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day61-65",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day66-80",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day81-90",
          "type": "tree",
          "content": null
        },
        {
          "name": "Day91-100",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 31.78,
          "content": "## Python - 100天从新手到大师\n\n> **作者**：骆昊\n>\n> **说明**：从项目上线到获得8w+星标以来，一直收到反馈说基础部分（前15天的内容）对新手来说是比较困难的，建议有配套视频进行讲解。最近把基础部分的内容重新制作了一个名为[“Python-Core-50-Courses”](<https://github.com/jackfrued/Python-Core-50-Courses>)的项目，用更为简单通俗的方式重写了这部分内容并附带了视频讲解，初学者可以看看这个新的仓库。国内用户如果访问GitHub比较慢的话，可以关注我的**知乎号[Python-Jack](https://www.zhihu.com/people/jackfrued)**，上面的[“从零开始学Python”](<https://zhuanlan.zhihu.com/c_1216656665569013760>)专栏比较适合初学者，其他的专栏如“数据思维和统计思维”、“基于Python的数据分析”等也在持续创作和更新中，欢迎大家关注、点赞和评论。\n>\n> 大家在学习过程中如果遇到一些棘手的问题或者需要相关的学习资源，可以加入下面的QQ交流群，三个群是一样的加入一个即可，请不要重复加群，也不要在群里发布广告和其他色情、低俗或敏感内容。**如果缺乏自律性，有付费学习的需求，可以添加我的微信（jackfrued）私聊，备注好自己的称呼和需求，我会给大家提供一些学习方案和职业规划方面的指导**。\n>\n> <img src=\"res/python_study_qq_group.png\" style=\"zoom:30%;\">\n>\n> 配套的视频在抖音和B站持续更新中，有兴趣的小伙伴可以关注我的抖音或B站账号，最近刚刚起号，还希望大家多多支持，非常感谢您！\n>\n> <img src=\"res/qrcode.JPG\" style=\"zoom:20%;\">\n>\n> 大家一直催更的《机器学习和深度学习》因个人和公司的原因，一直处于停滞状态，近期会开始更新相关内容，感谢大家一如既往的支持和理解。\n\n### Python应用领域和职业发展分析\n\n简单的说，Python是一个“优雅”、“明确”、“简单”的编程语言。\n\n - 学习曲线低，非专业人士也能上手\n - 开源系统，拥有强大的生态圈\n - 解释型语言，完美的平台可移植性\n - 动态类型语言，支持面向对象和函数式编程\n - 代码规范程度高，可读性强\n\nPython在以下领域都有用武之地。\n\n - 后端开发 - Python / Java / Go / PHP\n - DevOps - Python / Shell / Ruby\n - 数据采集 - Python / C++ / Java\n - 量化交易 - Python / C++ / R\n - 数据科学 - Python / R / Julia / Matlab\n - 机器学习 - Python / R / C++ / Julia\n - 自动化测试 - Python / Shell\n\n作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。\n\n- Python后端开发工程师（服务器、云平台、数据接口）\n- Python运维工程师（自动化运维、SRE、DevOps）\n- Python数据分析师（数据分析、商业智能、数字化运营）\n- Python数据挖掘工程师（机器学习、深度学习、算法专家）\n- Python爬虫工程师\n- Python测试工程师（自动化测试、测试开发）\n\n> **说明**：目前，**数据分析和数据挖掘是非常热门的方向**，因为不管是互联网行业还是传统行业都已经积累了大量的数据，各行各业都需要数据分析师从已有的数据中发现更多的商业价值，从而为企业的决策提供数据的支撑，这就是所谓的数据驱动决策。\n\n给初学者的几个建议：\n\n- Make English as your working language. （让英语成为你的工作语言）\n- Practice makes perfect. （熟能生巧）\n- All experience comes from mistakes. （所有的经验都源于你犯过的错误）\n- Don't be one of the leeches. （不要当伸手党）\n- Either outstanding or out. （要么出众，要么出局）\n\n### Day01~15 - Python语言基础\n\n#### Day01 - [初识Python](./Day01-15/01.初识Python.md)\n\n- Python简介 - Python的历史 / Python的优缺点 / Python的应用领域\n- 搭建编程环境 - Windows环境 / Linux环境 / MacOS环境\n- 从终端运行Python程序 - Hello, world / `print`函数 / 运行程序\n- 使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE\n- 注释 - 注释的作用 / 单行注释 / 多行注释\n\n#### Day02 - [语言元素](./Day01-15/02.语言元素.md)\n\n- 程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制\n- 变量和类型 - 变量的命名 / 变量的使用 / `input`函数 / 检查变量类型 / 类型转换\n- 数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码\n- 运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级\n- 应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年\n\n#### Day03 - [分支结构](./Day01-15/03.分支结构.md)\n\n- 分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图\n- if语句 - 简单的`if` / `if`-`else`结构 / `if`-`elif`-`else`结构 / 嵌套的`if`\n- 应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积\n\n#### Day04 - [循环结构](./Day01-15/04.循环结构.md)\n\n- 循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图\n- while循环 - 基本结构 / `break`语句 / `continue`语句\n- for循环 - 基本结构 / `range`类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序 \n- 应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡\n\n#### Day05 - [构造程序逻辑](./Day01-15/05.构造程序逻辑.md)\n\n- 经典案例：水仙花数 / 百钱百鸡 / Craps赌博游戏\n- 练习题目：斐波那契数列 / 完美数 / 素数\n\n#### Day06 - [函数和模块的使用](./Day01-15/06.函数和模块的使用.md)\n\n- 函数的作用 - 代码的坏味道 / 用函数封装功能模块\n- 定义函数 - `def`关键字 / 函数名 / 参数列表 / `return`语句 / 调用自定义函数\n- 调用函数 - Python内置函数 /  导入模块和函数\n- 函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数\n- 函数的返回值 - 没有返回值  / 返回单个值 / 返回多个值\n- 作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字\n- 用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）\n\n#### Day07 - [字符串和常用数据结构](./Day01-15/07.字符串和常用数据结构.md)\n\n- 字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法\n- 列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历\n- 列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找\n- 生成列表 - 使用`range`创建数字列表 / 生成表达式 / 生成器\n- 元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换\n- 集合基本用法 - 集合和列表的区别 /  创建集合 / 添加元素 / 删除元素 /  清空\n- 集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集\n- 字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空\n- 字典常用操作 - `keys`方法 / `values`方法 / `items`方法 / `setdefault`方法\n- 基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角\n- 综合案例 - 双色球选号 / 井字棋\n\n#### Day08 - [面向对象编程基础](./Day01-15/08.面向对象编程基础.md)\n\n- 类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念\n- 定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / `__str__`方法\n- 使用对象 - 创建对象 / 给对象发消息\n- 面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态\n- 基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类\n\n#### Day09 - [面向对象进阶](./Day01-15/09.面向对象进阶.md)\n\n- 属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用`__slots__`\n- 类中的方法 - 实例方法 / 类方法 / 静态方法\n- 运算符重载 - `__add__` / `__sub__` / `__or__` /`__getitem__` / `__setitem__` / `__len__` / `__repr__` / `__gt__` / `__lt__` / `__le__` / `__ge__` / `__eq__` / `__ne__` / `__contains__` \n- 类(的对象)之间的关系 - 关联 / 继承 / 依赖\n- 继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法\n- 综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类\n\n#### Day10 - [图形用户界面和游戏开发](./Day01-15/10.图形用户界面和游戏开发.md)\n\n- 使用`tkinter`开发GUI程序\n- 使用`pygame`三方库开发游戏应用\n- “大球吃小球”游戏\n\n#### Day11 - [文件和异常](./Day01-15/11.文件和异常.md)\n\n- 读文件 - 读取整个文件 / 逐行读取 / 文件路径\n- 写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件\n- 异常处理 - 异常机制的重要性 / `try`-`except`代码块 / `else`代码块 / `finally`代码块 / 内置异常类型 / 异常栈 / `raise`语句\n- 数据持久化 - CSV文件概述 / `csv`模块的应用 / JSON数据格式 / `json`模块的应用\n\n#### Day12 - [字符串和正则表达式](./Day01-15/12.字符串和正则表达式.md)\n\n- 字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / `in`和`not in`运算符 / `is_xxx`方法 / `join`和`split`方法 / `strip`相关方法 / `pyperclip`模块 / 不变字符串和可变字符串 / `StringIO`的使用\n- 正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用`re`模块实现正则表达式操作（匹配、搜索、替换、捕获）\n- 使用正则表达式 - `re`模块 / `compile`函数 / `group`和`groups`方法 / `match`方法 / `search`方法 / `findall`和`finditer`方法 / `sub`和`subn`方法 / `split`方法\n- 应用案例 - 使用正则表达式验证输入的字符串\n\n#### Day13 - [进程和线程](./Day01-15/13.进程和线程.md)\n\n- 进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景\n- 使用进程 - `fork`函数 / `multiprocessing`模块 / 进程池 / 进程间通信\n- 使用线程 -  `threading`模块 / `Thread`类 / `RLock`类 / `Condition`类 / 线程池\n\n#### Day14 - [网络编程入门和网络应用开发](./Day01-15/14.网络编程入门和网络应用开发.md)\n\n- 计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念\n- 网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式\n- 基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / `requests`三方库 / 解析JSON格式数据\n- Python网络编程 - 套接字的概念 / `socket`模块 /  `socket`函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端\n- 电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / `smtplib`模块 / `poplib`模块 / `imaplib`模块\n- 短信服务 - 调用短信服务网关\n\n#### Day15 - [图像和文档处理](./Day01-15/15.图像和办公文档处理.md)\n\n- 用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果\n- 读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理\n- 读写Excel文件 - `xlrd` / `xlwt` / `openpyxl`\n\n### Day16~Day20 - [Python语言进阶 ](./Day16-20/16-20.Python语言进阶.md)\n\n- 常用数据结构\n- 函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器\n- 面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式\n- 迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 / \n- 并发和异步编程 - 多线程 / 多进程 / 异步IO / `async`和`awai`t\n\n### Day21~30 - [Web前端入门](./Day21-30/21-30.Web前端概述.md)\n\n- 用HTML标签承载页面内容\n- 用CSS渲染页面\n- 用JavaScript处理交互式行为\n- jQuery入门和提高\n- Vue.js入门\n- Element的使用\n- Bootstrap的使用\n\n### Day31~35 - [玩转Linux操作系统](./Day31-35/31-35.玩转Linux操作系统.md)\n\n- 操作系统发展史和Linux概述\n- Linux基础命令\n- Linux中的实用程序\n- Linux的文件系统\n- Vim编辑器的应用\n- 环境变量和Shell编程\n- 软件的安装和服务的配置\n- 网络访问和管理\n- 其他相关内容\n\n### Day36~45 - 数据库基础和进阶\n\n#### Day36 - [关系型数据库和MySQL概述](./Day36-45/36.关系型数据库和MySQL概述.md)\n\n- 关系型数据库概述\n- MySQL简介\n- 安装MySQL\n- MySQL基本命令\n\n#### Day37 - [SQL详解之DDL](./Day36-45/37.SQL详解之DDL.md)\n\n- 建库建表\n- 删除表和修改表\n\n#### Day38 - [SQL详解之DML](./Day36-45/38.SQL详解之DML.md)\n\n- insert操作\n- delete操作\n- update操作\n\n#### Day39 - [SQL详解之DQL](./Day36-45/39.SQL详解之DQL.md)\n\n- 投影和别名\n- 筛选数据\n- 空值处理\n- 去重\n- 排序\n- 聚合函数\n- 嵌套查询\n- 分组\n- 表连接\n    - 笛卡尔积\n    - 内连接\n    - 自然连接\n    - 外连接\n- 窗口函数\n    - 定义窗口\n    - 排名函数\n    - 取数函数\n\n\n#### Day40 - [SQL详解之DCL](./Day36-45/40.SQL详解之DCL.md)\n\n- 创建用户\n- 授予权限\n- 召回权限\n\n#### Day41 - [MySQL新特性](./Day36-45/41.MySQL新特性.md)\n\n- JSON类型\n- 窗口函数\n- 公共表表达式\n\n#### Day42 - [视图、函数和过程](./Day36-45/42.视图、函数和过程.md)\n\n- 视图\n    - 使用场景\n    - 创建视图\n    - 使用限制\n- 函数\n    - 内置函数\n    - 用户自定义函数（UDF）\n- 过程\n    - 创建过程\n    - 调用过程\n\n#### Day43 - [索引](./Day36-45/43.索引.md)\n\n- 执行计划\n- 索引的原理\n- 创建索引\n    - 普通索引\n    - 唯一索引\n    - 前缀索引\n    - 复合索引\n- 注意事项\n\n#### Day44 - [Python接入MySQL数据库](./Day36-45/44.Python接入MySQL数据库.md)\n\n- 安装三方库\n- 创建连接\n- 获取游标\n- 执行SQL语句\n- 通过游标抓取数据\n- 事务提交和回滚\n- 释放连接\n- 编写ETL脚本\n\n#### Day45 - [大数据平台和HiveSQL](./Day36-45/45.大数据平台和HiveSQL.md)\n\n- Hadoop生态圈\n- Hive概述\n- 准备工作\n- 数据类型\n- DDL操作\n- DML操作\n- 数据查询\n\n### Day46~60 - 实战Django\n\n#### Day46 - [Django快速上手](./Day46-60/46.Django快速上手.md)\n\n- Web应用工作机制\n- HTTP请求和响应\n- Django框架概述\n- 5分钟快速上手\n\n#### Day47 - [深入模型](./Day46-60/47.深入模型.md)\n\n- 关系型数据库配置\n- 使用ORM完成对模型的CRUD操作\n- 管理后台的使用\n- Django模型最佳实践\n- 模型定义参考\n\n#### Day48 - [静态资源和Ajax请求](./Day46-60/48.静态资源和Ajax请求.md)\n\n- 加载静态资源\n- Ajax概述\n- 用Ajax实现投票功能\n\n#### Day49 - [Cookie和Session](./Day46-60/49.Cookie和Session.md)\n\n- 实现用户跟踪\n- cookie和session的关系\n- Django框架对session的支持\n- 视图函数中的cookie读写操作\n\n#### Day50 - [报表和日志](./Day46-60/50.制作报表.md)\n\n- 通过`HttpResponse`修改响应头\n- 使用`StreamingHttpResponse`处理大文件\n- 使用`xlwt`生成Excel报表\n- 使用`reportlab`生成PDF报表\n- 使用ECharts生成前端图表\n\n#### Day51 - [日志和调试工具栏](./Day46-60/51.日志和调试工具栏.md)\n\n- 配置日志\n- 配置Django-Debug-Toolbar\n- 优化ORM代码\n\n#### Day52 - [中间件的应用](./Day46-60/52.中间件的应用.md)\n\n- 什么是中间件\n- Django框架内置的中间件\n- 自定义中间件及其应用场景\n\n#### Day53 - [前后端分离开发入门](./Day46-60/53.前后端分离开发入门.md)\n\n- 返回JSON格式的数据\n- 用Vue.js渲染页面\n\n#### Day54 - [RESTful架构和DRF入门](./Day46-60/54.RESTful架构和DRF入门.md)\n\n- REST概述\n- DRF库使用入门\n- 前后端分离开发\n- JWT的应用\n\n#### Day55 - [RESTful架构和DRF进阶](./Day46-60/55.RESTful架构和DRF进阶.md)\n\n- 使用CBV\n- 数据分页\n- 数据筛选\n\n#### Day56 - [使用缓存](./Day46-60/56.使用缓存.md)\n\n- 网站优化第一定律\n\n- 在Django项目中使用Redis提供缓存服务\n- 在视图函数中读写缓存\n- 使用装饰器实现页面缓存\n- 为数据接口提供缓存服务\n\n#### Day57 - [接入三方平台](./Day46-60/57.接入三方平台.md)\n\n- 文件上传表单控件和图片文件预览\n- 服务器端如何处理上传的文件\n\n#### Day58 - [异步任务和定时任务](./Day46-60/58.异步任务和定时任务.md)\n\n- 网站优化第二定律\n- 配置消息队列服务\n- 在项目中使用Celery实现任务异步化\n- 在项目中使用Celery实现定时任务\n\n#### Day59 - [单元测试](./Day46-60/59.单元测试.md)\n\n#### Day60 - [项目上线](./Day46-60/60.项目上线.md)\n\n- Python中的单元测试\n- Django框架对单元测试的支持\n- 使用版本控制系统\n- 配置和使用uWSGI\n- 动静分离和Nginx配置\n- 配置HTTPS\n- 配置域名解析\n\n### Day61~65 - [爬虫开发](./Day61-65)\n\n#### Day61 - [网络数据采集概述](./Day61-65/61.网络数据采集概述.md)\n\n- 网络爬虫的概念及其应用领域\n- 网络爬虫的合法性探讨\n- 开发网络爬虫的相关工具\n- 一个爬虫程序的构成\n\n#### Day62 - 数据抓取和解析\n\n- [使用`requests`三方库实现数据抓取](./Day61-65/62.用Python获取网络资源-1.md)\n- [页面解析的三种方式](./Day61-65/62.用Python解析HTML页面-2.md)\n    - 正则表达式解析\n    - XPath解析\n    - CSS选择器解析\n\n\n#### Day63 - Python中的并发编程\n\n- [多线程](./Day61-65/63.Python中的并发编程-1.md)\n- [多进程](./Day61-65/63.Python中的并发编程-2.md)\n- [异步I/O](./Day61-65/63.Python中的并发编程-3.md)\n\n#### Day64 - [使用Selenium抓取网页动态内容](./Day61-65/64.使用Selenium抓取网页动态内容.md)\n\n- 安装Selenium\n- 加载页面\n- 查找元素和模拟用户行为\n- 隐式等待和显示等待\n- 执行JavaScript代码\n- Selenium反爬破解\n- 设置无头浏览器\n\n#### Day65 - [爬虫框架Scrapy简介](./Day61-65/65.爬虫框架Scrapy简介.md)\n\n- Scrapy核心组件\n- Scrapy工作流程\n- 安装Scrapy和创建项目\n- 编写蜘蛛程序\n- 编写中间件和管道程序\n- Scrapy配置文件\n\n### Day66~80 - 数据分析\n\n#### Day66 - [数据分析概述](./Day66-80/66.数据分析概述.md)\n\n- 数据分析师的职责\n- 数据分析师的技能栈\n- 数据分析相关库\n\n#### Day67 - [环境准备](./Day66-80/67.环境准备.md)\n\n- 安装和使用anaconda\n    - conda相关命令\n- 安装和使用jupyter-lab\n    - 安装和启动\n    - 使用小技巧\n\n#### Day68 - [NumPy的应用-1](./Day66-80/68.NumPy的应用-1.md)\n\n- 创建数组对象\n- 数组对象的属性\n- 数组对象的索引运算\n    - 普通索引\n    - 花式索引\n    - 布尔索引\n    - 切片索引\n- 案例：使用数组处理图像\n\n#### Day69 - [NumPy的应用-2](./Day66-80/69.NumPy的应用-2.md)\n\n- 数组对象的相关方法\n    - 获取描述性统计信息\n    - 其他相关方法\n\n#### Day70 - [NumPy的应用-3](./Day66-80/70.NumPy的应用-3.md)\n\n- 数组的运算\n    - 数组跟标量的运算\n    - 数组跟数组的运算\n- 通用一元函数\n- 通用二元函数\n- 广播机制\n- Numpy常用函数\n\n#### Day71 - [NumPy的应用-4](./Day66-80/71.NumPy的应用-4.md)\n\n- 向量\n- 行列式\n- 矩阵\n- 多项式\n\n#### Day72 - [深入浅出pandas-1](./Day66-80/72.深入浅出pandas-1.md)\n\n- 创建`Series`对象\n- `Series`对象的运算\n- `Series`对象的属性和方法\n\n#### Day73 - [深入浅出pandas-2](./Day66-80/73.深入浅出pandas-2.md)\n\n- 创建`DataFrame`对象\n- `DataFrame`对象的属性和方法\n- 读写`DataFrame`中的数据\n\n#### Day74 - [深入浅出pandas-3](./Day66-80/74.深入浅出pandas-3.md)\n\n- 数据重塑\n    - 数据拼接\n    - 数据合并\n- 数据清洗\n    - 缺失值\n    - 重复值\n    - 异常值\n    - 预处理\n\n#### Day75 - [深入浅出pandas-4](./Day66-80/75.深入浅出pandas-4.md)\n\n- 数据透视\n    - 获取描述性统计信息\n    - 排序和头部值\n    - 分组聚合\n    - 透视表和交叉表\n- 数据呈现\n\n#### Day76 - [深入浅出pandas-5](./Day66-80/76.深入浅出pandas-5.md)\n\n- 计算同比环比\n- 窗口计算\n- 相关性判定\n\n#### Day77 - [深入浅出pandas-6](./Day66-80/77.深入浅出pandas-6.md)\n\n- 索引的使用\n    - 范围索引\n    - 分类索引\n    - 多级索引\n    - 间隔索引\n    - 日期时间索引\n\n#### Day78 - [数据可视化-1](./Day66-80/78.数据可视化-1.md)\n\n- 安装和导入matplotlib\n- 创建画布\n- 创建坐标系\n- 绘制图表\n    - 折线图\n    - 散点图\n    - 柱状图\n    - 饼状图\n    - 直方图\n    - 箱线图\n- 显示和保存图表\n\n#### Day79 - [数据可视化-2](./Day66-80/79.数据可视化-2.md)\n\n- 高阶图表\n    - 气泡图\n    - 面积图\n    - 雷达图\n    - 玫瑰图\n    - 3D图表\n\n#### Day80 - [数据可视化-3](./Day66-80/80.数据可视化-3.md)\n\n- Seaborn\n- Pyecharts\n\n### Day81~90 - [机器学习和深度学习](./Day81-90)\n\n#### Day81 - [浅谈机器学习](./Day81-90/81.浅谈机器学习.md)\n\n#### Day82 - [k最近邻算法](./Day81-90/82.k最近邻算法.md)\n\n#### Day83 - [决策树和随机森林](./Day81-90/83.决策树和随机森林.md)\n\n#### Day84 - [朴素贝叶斯算法](./Day81-90/84.朴素贝叶斯算法.md)\n\n#### Day85 - [聚类算法](./Day81-90/85.聚类算法.md)\n\n#### Day86 - [支持向量机](./Day81-90/86.支持向量机.md)\n\n#### Day87 - [回归模型](./Day81-90/87.回归模型.md)\n\n#### Day88 - [集成学习算法](./Day81-90/88.集成学习算法.md)\n\n#### Day89 - [PyTorch深度学习概述](./Day81-90/89.PyTorch深度学习概述.md)\n\n#### Day90 - [PyTorch深度学习实战](./Day81-90/90.PyTorch深度学习实战.md)\n\n### Day91~100 - [团队项目开发](./Day91-100)\n\n#### 第91天：[团队项目开发的问题和解决方案](./Day91-100/91.团队项目开发的问题和解决方案.md)\n\n1. 软件过程模型\n   - 经典过程模型（瀑布模型）\n     - 可行性分析（研究做还是不做），输出《可行性分析报告》。\n     - 需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。\n     - 概要设计和详细设计，输出概念模型图（ER图）、物理模型图、类图、时序图等。\n     - 编码 / 测试。\n     - 上线 / 维护。\n\n     瀑布模型最大的缺点是无法拥抱需求变化，整套流程结束后才能看到产品，团队士气低落。\n   - 敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint\n     - 产品的Backlog（用户故事、产品原型）。\n     - 计划会议（评估和预算）。\n     - 日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。\n     - 修复bug（问题描述、重现步骤、测试人员、被指派人）。\n     - 发布版本。\n     - 评审会议（Showcase，用户需要参与）。\n     - 回顾会议（对当前迭代周期做一个总结）。\n\n     > 补充：敏捷软件开发宣言\n     >\n     > - **个体和互动** 高于 流程和工具\n     > - **工作的软件** 高于 详尽的文档\n     > - **客户合作** 高于 合同谈判\n     > - **响应变化** 高于 遵循计划\n\n     ![](./res/agile-scrum-sprint-cycle.png)\n\n     > 角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。\n\n     > 准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。\n\n     >  敏捷团队通常人数为8-10人。\n\n     >  工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在看板上面，看板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。\n\n2. 项目团队组建\n\n   - 团队的构成和角色\n\n     > 说明：感谢**付祥英**女士帮助我绘制了下面这张精美的公司组织架构图。\n\n     ![company_architecture](./res/company_architecture.png)\n\n   - 编程规范和代码审查（`flake8`、`pylint`）\n\n     ![](./res/pylint.png)\n\n   - Python中的一些“惯例”（请参考[《Python惯例-如何编写Pythonic的代码》](Python惯例.md)）\n\n   - 影响代码可读性的原因：\n\n     - 代码注释太少或者没有注释\n     - 代码破坏了语言的最佳实践\n     - 反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）\n\n3. 团队开发工具介绍\n   - 版本控制：Git、Mercury\n   - 缺陷管理：[Gitlab](https://about.gitlab.com/)、[Redmine](http://www.redmine.org.cn/)\n   - 敏捷闭环工具：[禅道](https://www.zentao.net/)、[JIRA](https://www.atlassian.com/software/jira/features)\n   - 持续集成：[Jenkins](https://jenkins.io/)、[Travis-CI](https://travis-ci.org/)\n\n   请参考[《团队项目开发的问题和解决方案》](Day91-100/91.团队项目开发的问题和解决方案.md)。\n\n##### 项目选题和理解业务\n\n1. 选题范围设定\n\n   - CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。\n   - MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。\n\n   - App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。\n   - 其他类型：自身行业背景和工作经验、业务容易理解和把控。\n\n2. 需求理解、模块划分和任务分配\n\n   - 需求理解：头脑风暴和竞品分析。\n   - 模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。\n   - 任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。\n\n   ![](./res/requirements_by_xmind.png)\n\n3. 制定项目进度表（每日更新）\n\n   | 模块 | 功能     | 人员   | 状态     | 完成 | 工时 | 计划开始 | 实际开始 | 计划结束 | 实际结束 | 备注             |\n   | ---- | -------- | ------ | -------- | ---- | ---- | -------- | -------- | -------- | -------- | ---------------- |\n   | 评论 | 添加评论 | 王大锤 | 正在进行 | 50%  | 4    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | 删除评论 | 王大锤 | 等待     | 0%   | 2    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | 查看评论 | 白元芳 | 正在进行 | 20%  | 4    | 2018/8/7 |          | 2018/8/7 |          | 需要进行代码审查 |\n   |      | 评论投票 | 白元芳 | 等待     | 0%   | 4    | 2018/8/8 |          | 2018/8/8 |          |                  |\n\n4. OOAD和数据库设计\n\n  - UML（统一建模语言）的类图\n\n    ![uml](./res/uml-class-diagram.png)\n\n  - 通过模型创建表（正向工程），例如在Django项目中可以通过下面的命令创建二维表。\n\n    ```Shell\n    python manage.py makemigrations app\n    python manage.py migrate\n    ```\n\n  - 使用PowerDesigner绘制物理模型图。\n\n    ![](./res/power-designer-pdm.png)\n\n  - 通过数据表创建模型（反向工程），例如在Django项目中可以通过下面的命令生成模型。\n\n    ```Shell\n    python manage.py inspectdb > app/models.py\n    ```\n\n#### 第92天：[Docker容器技术详解](./Day91-100/92.Docker容器技术详解.md)\n\n1. Docker简介\n2. 安装Docker\n3. 使用Docker创建容器（Nginx、MySQL、Redis、Gitlab、Jenkins）\n4. 构建Docker镜像（Dockerfile的编写和相关指令）\n5. 容器编排（Docker-compose）\n6. 集群管理（Kubernetes）\n\n#### 第93天：[MySQL性能优化](./Day91-100/93.MySQL性能优化.md)\n\n1. 基本原则\n2. InnoDB引擎\n3. 索引的使用和注意事项\n4. 数据分区\n5. SQL优化\n6. 配置优化\n7. 架构优化\n\n#### 第94天：[网络API接口设计](./Day91-100/94.网络API接口设计.md)\n\n- 设计原则\n    - 关键问题\n    - 其他问题\n- 文档撰写\n\n#### 第95天：[使用Django开发商业项目](./Day91-100/95.使用Django开发商业项\t目.md)\n\n##### 项目开发中的公共问题\n\n1. 数据库的配置（多数据库、主从复制、数据库路由）\n2. 缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））\n3. 日志的配置\n4. 分析和调试（Django-Debug-ToolBar）\n5. 好用的Python模块（日期计算、图像处理、数据加密、三方API）\n\n##### REST API设计\n\n1. RESTful架构\n   - [理解RESTful架构](http://www.ruanyifeng.com/blog/2011/09/restful.html)\n   - [RESTful API设计指南](http://www.ruanyifeng.com/blog/2014/05/restful_api.html)\n   - [RESTful API最佳实践](http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html)\n2. API接口文档的撰写\n   - [RAP2](http://rap2.taobao.org/)\n   - [YAPI](http://yapi.demo.qunar.com/)\n3. [django-REST-framework](https://www.django-rest-framework.org/)的应用\n\n##### 项目中的重点难点剖析\n\n1. 使用缓存缓解数据库压力 - Redis\n2. 使用消息队列做解耦合和削峰 - Celery + RabbitMQ\n\n#### 第96天：[软件测试和自动化测试](Day91-100/96.软件测试和自动化测试.md)\n\n##### 单元测试\n\n1. 测试的种类\n2. 编写单元测试（`unittest`、`pytest`、`nose2`、`tox`、`ddt`、……）\n3. 测试覆盖率（`coverage`）\n\n##### Django项目部署\n\n1. 部署前的准备工作\n   - 关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）\n   - HTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE  \n   - 日志相关配置\n2. Linux常用命令回顾\n3. Linux常用服务的安装和配置\n4. uWSGI/Gunicorn和Nginx的使用\n   - Gunicorn和uWSGI的比较\n     - 对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。\n     - uWSGI支持异构部署。\n     - 由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。\n     - 在性能上，Gunicorn和uWSGI其实表现相当。\n5. 使用虚拟化技术（Docker）部署测试环境和生产环境\n\n##### 性能测试\n\n1. AB的使用\n2. SQLslap的使用\n3. sysbench的使用\n\n##### 自动化测试\n\n1. 使用Shell和Python进行自动化测试\n2. 使用Selenium实现自动化测试\n   - Selenium IDE\n   - Selenium WebDriver\n   - Selenium Remote Control\n3. 测试工具Robot Framework介绍\n\n#### 第97天：[电商网站技术要点剖析](./Day91-100/97.电商网站技术要点剖析.md)\n\n1. 商业模式和需求要点\n2. 物理模型设计\n3. 第三方登录\n4. 缓存预热和查询缓存\n5. 购物车的实现\n6. 支付功能集成\n7. 秒杀和超卖问题\n8. 静态资源管理\n9. 全文检索方案\n\n#### 第98天：[项目部署上线和性能调优](./Day91-100/98.项目部署上线和性能调优.md)\n\n1. MySQL数据库调优\n2. Web服务器性能优化\n   - Nginx负载均衡配置\n   - Keepalived实现高可用\n3. 代码性能调优\n   - 多线程\n   - 异步化\n4. 静态资源访问优化\n   - 云存储\n   - CDN\n\n#### 第99天：[面试中的公共问题](./Day91-100/99.面试中的公共问题.md)\n\n- 计算机基础\n- Python基础\n- Web框架相关\n- 爬虫相关问题\n- 数据分析\n- 项目相关\n\n#### 第100天：[Python面试题实录](./Day91-100/100.Python面试题实录.md)\n\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "公开课",
          "type": "tree",
          "content": null
        },
        {
          "name": "更新日志.md",
          "type": "blob",
          "size": 5.42,
          "content": "## 更新日志\n\n### 2024年4月18日\n\n1. 重新整理了项目结构，补充了一部分文档。\n2. 准备开始撰写《机器学习和深度学习》部分的内容。\n\n### 2022年1月11日\n\n1. 将近期收到的打赏通过水滴筹和众缘普济公益慈善促进会捐赠给有需要的人。\n\n    <img src=\"res/ABF827024EA535099DC0E6A66A336C51.png\" style=\"zoom:20%;\">\n\n### 2021年11月22日\n\n1. 更新了数据库部分的文档和代码。\n2. 修正了网友们指出的文档和代码中的bug。\n3. 更新了README文件中的群信息。\n\n### 2021年10月7日\n\n1. 调整了项目目录结构。\n2. 更新了数据分析部分的内容。\n\n### 2021年3月28日\n\n1. 最近把数据挖掘的东西梳理了一遍，准备开始写文档啦。\n\n2. 近期收到的打赏通过美团公益捐赠给有需要的人。\n\n    <img src=\"res/donation6.png\" style=\"zoom:50%;\">\n\n    <img src=\"res/donation7.png\" style=\"zoom:50%;\">\n\n    <img src=\"res/donation8.png\" style=\"zoom:44%;\">\n\n###2020年10月3日\n\n1. 调整项目目录结构。\n2. 开始补全前面缺失内容和更新最后部分的工作。\n3. 将近期收到的打赏通过水滴筹等平台捐助给需要帮助的人。\n\n### 2020年7月12日\n\n1. 修正了部分文档中的bug。\n\n2. 更新了Django部分的文档。\n\n3. 将近期收到的打赏捐赠给陕西回归儿童救助中心。\n\n    <img src=\"res/donation5.png\" style=\"zoom:50%;\">\n\n### 2020年4月8日\n\n1. 将基础部分（第1天到第15天）内容重新创建了一个名为“Python-Core-50-Courses”的仓库，更新了部分内容。\n\n2. 更新了README.md文件。\n\n3. 将近期收到的打赏通过腾讯公益捐出，助力“儿童健康课堂”。\n\n   <img src=\"res/donation4.png\" style=\"zoom:50%;\">\n\n### 2020年3月8日\n\n1. 更新了最后10天的部分文档。\n\n2. 通过美团公益将近期打赏捐助给受疫情影响儿童。\n\n   <img src=\"res/donation3.png\" style=\"zoom:50%;\">\n\n### 2020年3月1日\n\n1. 优化了项目中的部分图片资源。\n2. 更新了部分文档。\n\n### 2019年9月23日\n\n1. 计划在国庆长假结束前，完成第91天到第100天内容的更新，包括最新的Python面试题集。\n2. 修改了第7天《字符串和常用数据结构》一文的内容。\n\n### 2019年9月15日\n\n1. 将微信打赏所得收入通过腾讯公益捐赠给国家级贫困大学生。\n\n   <img src=\"./res/donation2.png\" style=\"zoom:50%;\">\n\n2. 开始更新和调整第1天到第15天的内容。\n\n3. 开始整理大家期待已久的《Python面试题大全及参考答案》。\n\n### 2019年8月12日\n\n1. 发布了《使用Hexo搭建自己的博客》一文。\n\n### 2019年8月8日\n\n1. 最近公司给安排了很多任务，所以好久都没有更新这个项目，今天终于把一直计划更新的《关系型数据库MySQL》更新完了。\n2. 昨天微信收款提示我已经连续有48天收到了打赏，非常感谢大家持续的支持。\n3. 最近一直在计划为这个项目录制一个配套的视频，当然这个工作量的巨大是可想而知的，但是我还是决定要在年底之前开始做这件事情，这样才能不辜负那么多希望通过这个项目学习和了解Python的人。\n\n### 2019年7月11日\n\n1. 今天终于结束了出差的日子，回来先把最近收到的打赏通过腾讯公益平台全部捐赠给了绿之叶，总共捐出了111笔打赏。\n\n   <img src=\"./res/donation1.png\" style=\"zoom:128%\">\n\n### 2019年7月9日\n\n1. 最近出差，项目一直处于停更状态。交流群的很多初学者反馈从第8天开始内容就有一定难度，最近本来也打算把语言基础部分和爬虫的部门重新整理一次，这次争取将文字和案例做得更加通俗易懂，而且更具实用性，这个事情从今天已然开始了，最终的目标是要将这部分的内容整理成一本书，希望大家到时候能够一如既往的支持。\n2. 最近1周多的时间一共收到60笔以上的打赏，最多的一天收到了14笔打赏，还是要再次谢谢大家为知识付费的行为，当然加交流群是不用付费的，您支付的费用会用于支持山区儿童教育。\n3. 今天重新翻译了*Zen of Python*，这次的版本我自己都比较喜欢，所以也分享给大家。\n\n### 2019年6月30日\n\n1. 最近2天一共收到11笔打赏。\n2. 终于将第48天《前后端分离开发》一文更新完，但是自己都感觉有点凑数的嫌疑，文字描述没怎么花心思去写，大家可以参考项目的代码来了解前后端分离开发。项目中使用了Vue.js，但是没有使用脚手架工具，也没有配置前端路由，仅仅使用了Vue.js来渲染页面，毕竟我自己也不是专业的前端。\n\n### 2019年6月27日\n\n1. 最近3天一共收到35笔打赏，感谢大家持续关注。\n2. 近期事情较多，更新速度可能会放缓，请大家谅解。\n3. 今晚公开课相关的资料已经更新到公开课目录中。\n\n### 2019年6月23日\n\n1. 最近几天一共收到25笔打赏，感谢大家的支持。\n2. 更新了QQ交流群，重新创建了一个2000人群。\n\n### 2019年6月18日\n\n1. 在朋友的建议下，给首页加了一个打赏的二维码，看看有多少愿意为知识付费。今天一共收到了7位小伙伴的打赏，在此表示感谢，打赏获得的收入将通过腾讯公益平台全部捐出。\n2. Django部分（第41天到第55天）更新到第47天，最新上线的部分包括报表、日志、ORM查询优化以及中间件相关的内容，并将投票应用的完成代码同步到github。\n\n"
        },
        {
          "name": "番外篇",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}