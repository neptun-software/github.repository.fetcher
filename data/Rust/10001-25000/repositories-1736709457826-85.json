{
  "metadata": {
    "timestamp": 1736709457826,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ratatui/ratatui",
      "stars": 11562,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cz.toml",
          "type": "blob",
          "size": 3.14453125,
          "content": "# configuration for https://github.com/commitizen/cz-cli\n\n[tool.commitizen]\nname = \"cz_customize\"\ntag_format = \"$version\"\nversion_type = \"semver\"\nversion_provider = \"cargo\"\nupdate_changelog_on_bump = true\nmajor_version_zero = true\nuse_shortcuts = true\n\n[tool.commitizen.customize]\nmessage_template = \"\"\"{{change_type}}({{scope}}): {{subject}}\n\n{% if body %}\\\n{{body}}\\\n{% endif %}\n\n{%if is_breaking_change %}\\\nBREAKING_CHANGE: \\\n{% endif %}\\\n{{footer}}\\\n\"\"\"\nexample = \"feature: this feature enable customize through config file\"\nschema = \"<type>(<scope>): <subject>\\n\\n<body>\\n\\n<footer>\"\nschema_pattern = \"(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)\\\\(\\\\w+\\\\):\\\\s(?P<subject>.*)(\\\\n\\\\n(?P<body>.*))?(\\\\n\\\\n(?P<footer>.*))?\"\n\n# The order needs to be preserved, as it influences the order when executing cz commit/cz c\n\n# Change types\n[[tool.commitizen.customize.questions]]\ntype = \"list\"\nname = \"change_type\"\nchoices = [\n    { value = \"build\", name = \"build: Changes that affect the build system or external dependencies (example scopes: pip, docker, npm)\", key = \"b\" },\n    { value = \"chore\", name = \"chore: A modification that generally does not fall into any other category\", key = \"c\" },\n    { value = \"ci\", name = \"ci: Changes to our CI configuration files and scripts (example scopes: GitLabCI)\", key = \"i\" },\n    { value = \"docs\", name = \"docs: Documentation only changes\", key = \"d\" },\n    { value = \"feat\", name = \"feat: A new feature.\", key = \"f\" },\n    { value = \"fix\", name = \"fix: A bug fix.\", key = \"x\" },\n    { value = \"perf\", name = \"perf: A code change that improves performance\", key = \"p\" },\n    { value = \"refactor\", name = \"refactor: A code change that neither fixes a bug nor adds a feature\", key = \"r\" },\n    { value = \"revert\", name = \"revert: Revert previous commits\", key = \"v\" },\n    { value = \"style\", name = \"style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\", key = \"s\" },\n    { value = \"test\", name = \"test: Adding missing or correcting existing tests\", key = \"t\" },\n]\nmessage = \"Select the type of change you are committing\"\n\n# The scope of the change, can be a file, class name or other context\n[[tool.commitizen.customize.questions]]\ntype = \"input\"\nname = \"scope\"\nmessage = \"What is the scope of this change? (class or file name): (press [enter] to skip)\\n\"\n\n# Summary of the changes\n[[tool.commitizen.customize.questions]]\n\"type\" = \"input\"\n\"name\" = \"subject\"\n\"message\" = \"Write a short and imperative summary of the code changes: (lower case and no period)\\n\"\n\n# The commit body, elaborate the changes if need be.\n[[tool.commitizen.customize.questions]]\ntype = \"input\"\nname = \"body\"\nmessage = \"Provide additional contextual information about the code changes: (press [enter] to skip)\\n\"\n\n# Specify if the changes are breaking\n[[tool.commitizen.customize.questions]]\ntype = \"confirm\"\nname = \"is_breaking_change\"\nmessage = \"Is this a BREAKING CHANGE?\"\ndefault = false\n\n# Reference closing issues and share other\n[[tool.commitizen.customize.questions]]\ntype = \"input\"\nname = \"footer\"\nmessage = \"Footer. Information about Breaking Changes and reference issues that this commit closes: (press [enter] to skip)\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2412109375,
          "content": "# configuration for https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.rs]\nindent_style = space\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "target\n*.log\n*.rs.rustfmt\n.gdb_history\n.idea/\n"
        },
        {
          "name": ".markdownlint.yaml",
          "type": "blob",
          "size": 0.2841796875,
          "content": "# configuration for https://github.com/DavidAnson/markdownlint\n\nfirst-line-heading: false\nno-inline-html:\n  allowed_elements:\n    - img\n    - details\n    - summary\n    - div\n    - br\nline-length:\n  line_length: 100\n\n# to support repeated headers in the changelog\nno-duplicate-heading: false\n"
        },
        {
          "name": "BREAKING-CHANGES.md",
          "type": "blob",
          "size": 32.7080078125,
          "content": "# Breaking Changes\n\nThis document contains a list of breaking changes in each version and some notes to help migrate\nbetween versions. It is compiled manually from the commit history and changelog. We also tag PRs on\nGitHub with a [breaking change] label.\n\n[breaking change]: (https://github.com/ratatui/ratatui/issues?q=label%3A%22breaking+change%22)\n\n## Summary\n\nThis is a quick summary of the sections below:\n\n- [Unreleased](#unreleased)\n  - The `From` impls for backend types are now replaced with more specific traits\n  - `FrameExt` trait for `unstable-widget-ref` feature\n- [v0.29.0](#v0290)\n  - `Sparkline::data` takes `IntoIterator<Item = SparklineBar>` instead of `&[u64]` and is no longer const\n  - Removed public fields from `Rect` iterators\n  - `Line` now implements `From<Cow<str>`\n  - `Table::highlight_style` is now `Table::row_highlight_style`\n  - `Tabs::select` now accepts `Into<Option<usize>>`\n  - `Color::from_hsl` is now behind the `palette` feature\n- [v0.28.0](#v0280)\n  - `Backend::size` returns `Size` instead of `Rect`\n  - `Backend` trait migrates to `get/set_cursor_position`\n  - Ratatui now requires Crossterm 0.28.0\n  - `Axis::labels` now accepts `IntoIterator<Into<Line>>`\n  - `Layout::init_cache` no longer returns bool and takes a `NonZeroUsize` instead of `usize`\n  - `ratatui::terminal` module is now private\n  - `ToText` no longer has a lifetime\n  - `Frame::size` is deprecated and renamed to `Frame::area`\n- [v0.27.0](#v0270)\n  - List no clamps the selected index to list\n  - Prelude items added / removed\n  - 'termion' updated to 4.0\n  - `Rect::inner` takes `Margin` directly instead of reference\n  - `Buffer::filled` takes `Cell` directly instead of reference\n  - `Stylize::bg()` now accepts `Into<Color>`\n  - Removed deprecated `List::start_corner`\n  - `LineGauge::gauge_style` is deprecated\n- [v0.26.0](#v0260)\n  - `Flex::Start` is the new default flex mode for `Layout`\n  - `patch_style` & `reset_style` now consume and return `Self`\n  - Removed deprecated `Block::title_on_bottom`\n  - `Line` now has an extra `style` field which applies the style to the entire line\n  - `Block` style methods cannot be created in a const context\n  - `Tabs::new()` now accepts `IntoIterator<Item: Into<Line<'a>>>`\n  - `Table::new` now accepts `IntoIterator<Item: Into<Row<'a>>>`.\n- [v0.25.0](#v0250)\n  - Removed `Axis::title_style` and `Buffer::set_background`\n  - `List::new()` now accepts `IntoIterator<Item = Into<ListItem<'a>>>`\n  - `Table::new()` now requires specifying the widths\n  - `Table::widths()` now accepts `IntoIterator<Item = AsRef<Constraint>>`\n  - Layout::new() now accepts direction and constraint parameters\n  - The default `Tabs::highlight_style` is now `Style::new().reversed()`\n- [v0.24.0](#v0240)\n  - MSRV is now 1.70.0\n  - `ScrollbarState`: `position`, `content_length`, and `viewport_content_length` are now `usize`\n  - `BorderType`: `line_symbols` is now `border_symbols` and returns `symbols::border::set`\n  - `Frame<'a, B: Backend>` is now `Frame<'a>`\n  - `Stylize` shorthands for `String` now consume the value and return `Span<'static>`\n  - `Spans` is removed\n- [v0.23.0](#v0230)\n  - `Scrollbar`: `track_symbol` now takes `Option<&str>`\n  - `Scrollbar`: symbols moved to `symbols` module\n  - MSRV is now 1.67.0\n- [v0.22.0](#v0220)\n  - `serde` representation of `Borders` and `Modifiers` has changed\n- [v0.21.0](#v0210)\n  - MSRV is now 1.65.0\n  - `terminal::ViewPort` is now an enum\n  - `\"\".as_ref()` must be annotated to implement `Into<Text<'a>>`\n  - `Marker::Block` renders as a block char instead of a bar char\n- [v0.20.0](#v0200)\n  - MSRV is now 1.63.0\n  - `List` no longer ignores empty strings\n\n## Unreleased (0.30.0)\n\n### `FrameExt` trait for `unstable-widget-ref` feature ([#1530])\n\n[#1530]: https://github.com/ratatui/ratatui/pull/1530\n\nTo call `Frame::render_widget_ref()` or `Frame::render_stateful_widget_ref()` you now need to:\n\n1. Import the `FrameExt` trait from `ratatui::widgets`.\n2. Enable the `unstable-widget-ref` feature.\n\nFor example:\n\n```rust\nuse ratatui::{\n    layout::Rect,\n    widgets::{Block, FrameExt},\n};\n\nlet block = Block::new();\nlet area = Rect::new(0, 0, 5, 5);\nframe.render_widget_ref(&block, area);\n```\n\n### `WidgetRef` no longer has a blanket implementation of Widget\n\nPreviously there was a blanket implementation of Widget for WidgetRef. This has been reversed to\ninstead be a blanket implementation of WidgetRef for all &W where W: Widget. Any widgets that\npreviously implemented WidgetRef directly should now instead implement Widget for a reference to the\ntype.\n\n```diff\n-impl WidgetRef for Foo {\n-    fn render_ref(&self, area: Rect, buf: &mut Buffer)\n+impl Widget for &Foo {\n+    fn render(self, area: Rect, buf: &mut Buffer)\n}\n```\n\n### The `From` impls for backend types are now replaced with more specific traits [#1464]\n\n[#1464]: https://github.com/ratatui/ratatui/pull/1464\n\nCrossterm gains `ratatui::backend::crossterm::{FromCrossterm, IntoCrossterm}`\nTermwiz gains `ratatui::backend::termwiz::{FromTermwiz, IntoTermwiz}`\n\nThis is necessary in order to avoid the orphan rule when implementing `From` for crossterm types\nonce the crossterm types are moved to a separate crate.\n\n```diff\n+ use ratatui::backend::crossterm::{FromCrossterm, IntoCrossterm};\n\nlet crossterm_color = crossterm::style::Color::Black;\n- let ratatui_color = crossterm_color.into();\n- let ratatui_color = ratatui::style::Color::from(crossterm_color);\n+ let ratatui_color = ratatui::style::Color::from_crossterm(crossterm_color);\n- let crossterm_color = ratatui_color.into();\n- let crossterm_color = crossterm::style::Color::from(ratatui_color);\n+ let crossterm_color = ratatui_color.into_crossterm();\n\nlet crossterm_attribute = crossterm::style::types::Attribute::Bold;\n- let ratatui_modifier = crossterm_attribute.into();\n- let ratatui_modifier = ratatui::style::Modifier::from(crossterm_attribute);\n+ let ratatui_modifier = ratatui::style::Modifier::from_crossterm(crossterm_attribute);\n- let crossterm_attribute = ratatui_modifier.into();\n- let crossterm_attribute = crossterm::style::types::Attribute::from(ratatui_modifier);\n+ let crossterm_attribute = ratatui_modifier.into_crossterm();\n```\n\nSimilar conversions for `ContentStyle` -> `Style` and `Attributes` -> `Modifier` exist for\nCrossterm and the various Termion and Termwiz types as well.\n\n### `Bar::label()` and `BarGroup::label()` now accepts `Into<Line<'a>>`. ([#1471])\n\n[#1471]: https://github.com/ratatui/ratatui/pull/1471\n\nPreviously `Bar::label()` and `BarGroup::label()` accepted `Line<'a>`, but they now accepts `Into<Line<'a>>`.\n\nfor `Bar::label()`:\n\n```diff\n- Bar::default().label(\"foo\".into());\n+ Bar::default().label(\"foo\");\n```\n\nfor `BarGroup::label()`:\n\n```diff\n- BarGroup::default().label(\"bar\".into());\n+ BarGroup::default().label(\"bar\");\n```\n\n### `Bar::text_value` now accepts `Into<String>` ([#1471])\n\nPreviously `Bar::text_value` accepted `String`, but now it accepts `Into<String>`.\n\nfor `Bar::text_value()`:\n\n```diff\n- Bar::default().text_value(\"foobar\".into());\n+ Bar::default().text_value(\"foobar\");\n```\n\n## [v0.29.0](https://github.com/ratatui/ratatui/releases/tag/v0.29.0)\n\n### `Sparkline::data` takes `IntoIterator<Item = SparklineBar>` instead of `&[u64]` and is no longer const ([#1326])\n\n[#1326]: https://github.com/ratatui/ratatui/pull/1326\n\nThe `Sparkline::data` method has been modified to accept `IntoIterator<Item = SparklineBar>`\ninstead of `&[u64]`.\n\n`SparklineBar` is a struct that contains an `Option<u64>` value, which represents an possible\n_absent_ value, as distinct from a `0` value. This change allows the `Sparkline` to style\ndata points differently, depending on whether they are present or absent.\n\n`SparklineBar` also contains an `Option<Style>` that will be used to apply a style the bar in\naddition to any other styling applied to the `Sparkline`.\n\nSeveral `From` implementations have been added to `SparklineBar` to support existing callers who\nprovide `&[u64]` and other types that can be converted to `SparklineBar`, such as `Option<u64>`.\n\nIf you encounter any type inference issues, you may need to provide an explicit type for the data\npassed to `Sparkline::data`. For example, if you are passing a single value, you may need to use\n`into()` to convert it to form that can be used as a `SparklineBar`:\n\n```diff\nlet value = 1u8;\n- Sparkline::default().data(&[value.into()]);\n+ Sparkline::default().data(&[u64::from(value)]);\n```\n\nAs a consequence of this change, the `data` method is no longer a `const fn`.\n\n### `Color::from_hsl` is now behind the `palette` feature and accepts `palette::Hsl` ([#1418])\n\n[#1418]: https://github.com/ratatui/ratatui/pull/1418\n\nPreviously `Color::from_hsl` accepted components as individual f64 parameters. It now accepts a\nsingle `palette::Hsl` value and is gated behind a `palette` feature flag.\n\n```diff\n- Color::from_hsl(360.0, 100.0, 100.0)\n+ Color::from_hsl(Hsl::new(360.0, 100.0, 100.0))\n```\n\n### Removed public fields from `Rect` iterators ([#1358], [#1424])\n\n[#1358]: https://github.com/ratatui/ratatui/pull/1358\n[#1424]: https://github.com/ratatui/ratatui/pull/1424\n\nThe `pub` modifier has been removed from fields on the `Columns`,`Rows`, and `Positions` iterators.\nThese fields were not intended to be public and should not have been accessed directly.\n\n### `Rect::area()` now returns u32 instead of u16 ([#1378])\n\n[#1378]: https://github.com/ratatui/ratatui/pull/1378\n\nThis is likely to impact anything which relies on `Rect::area` maxing out at u16::MAX. It can now\nreturn up to u16::MAX * u16::MAX (2^32 - 2^17 + 1).\n\n### `Line` now implements `From<Cow<str>` ([#1373])\n\n[#1373]: https://github.com/ratatui/ratatui/pull/1373\n\nAs this adds an extra conversion, ambiguous inferred expressions may no longer compile.\n\n```rust\n// given:\nstruct Foo { ... }\nimpl From<Foo> for String { ... }\nimpl From<Foo> for Cow<str> { ... }\n\nlet foo = Foo { ... };\nlet line = Line::from(foo); // now fails due to now ambiguous inferred type\n// replace with e.g.\nlet line = Line::from(String::from(foo));\n```\n\n### `Tabs::select()` now accepts `Into<Option<usize>>` ([#1413])\n\n[#1413]: https://github.com/ratatui/ratatui/pull/1413\n\nPreviously `Tabs::select()` accepted `usize`, but it now accepts `Into<Option<usize>>`. This breaks\nany code already using parameter type inference:\n\n```diff\nlet selected = 1u8;\n- let tabs = Tabs::new([\"A\", \"B\"]).select(selected.into())\n+ let tabs = Tabs::new([\"A\", \"B\"]).select(selected as usize)\n```\n\n### `Table::highlight_style` is now `Table::row_highlight_style` ([#1331])\n\n[#1331]: https://github.com/ratatui/ratatui/pull/1331\n\nThe `Table::highlight_style` is now deprecated in favor of `Table::row_highlight_style`.\n\nAlso, the serialized output of the `TableState` will now include the \"selected_column\" field.\nSoftware that manually parse the serialized the output (with anything other than the `Serialize`\nimplementation on `TableState`) may have to be refactored if the \"selected_column\" field is not\naccounted for. This does not affect users who rely on the `Deserialize`, or `Serialize`\nimplementation on the state.\n\n## [v0.28.0](https://github.com/ratatui/ratatui/releases/tag/v0.28.0)\n\n### `Backend::size` returns `Size` instead of `Rect` ([#1254])\n\n[#1254]: https://github.com/ratatui/ratatui/pull/1254\n\nThe `Backend::size` method returns a `Size` instead of a `Rect`.\nThere is no need for the position here as it was always 0,0.\n\n### `Backend` trait migrates to `get/set_cursor_position` ([#1284])\n\n[#1284]: https://github.com/ratatui/ratatui/pull/1284\n\nIf you just use the types implementing the `Backend` trait, you will see deprecation hints but\nnothing is a breaking change for you.\n\nIf you implement the Backend trait yourself, you need to update the implementation and add the\n`get/set_cursor_position` method. You can remove the `get/set_cursor` methods as they are deprecated\nand a default implementation for them exists.\n\n### Ratatui now requires Crossterm 0.28.0 ([#1278])\n\n[#1278]: https://github.com/ratatui/ratatui/pull/1278\n\nCrossterm is updated to version 0.28.0, which is a semver incompatible version with the previous\nversion (0.27.0). Ratatui re-exports the version of crossterm that it is compatible with under\n`ratatui::crossterm`, which can be used to avoid incompatible versions in your dependency list.\n\n### `Axis::labels()` now accepts `IntoIterator<Into<Line>>` ([#1273] and [#1283])\n\n[#1273]: https://github.com/ratatui/ratatui/pull/1173\n[#1283]: https://github.com/ratatui/ratatui/pull/1283\n\nPreviously Axis::labels accepted `Vec<Span>`. Any code that uses conversion methods that infer the\ntype will need to be rewritten as the compiler cannot infer the correct type.\n\n```diff\n- Axis::default().labels(vec![\"a\".into(), \"b\".into()])\n+ Axis::default().labels([\"a\", \"b\"])\n```\n\n### `Layout::init_cache` no longer returns bool and takes a `NonZeroUsize` instead of `usize` ([#1245])\n\n[#1245]: https://github.com/ratatui/ratatui/pull/1245\n\n```diff\n- let is_initialized = Layout::init_cache(100);\n+ Layout::init_cache(NonZeroUsize::new(100).unwrap());\n```\n\n### `ratatui::terminal` module is now private ([#1160])\n\n[#1160]: https://github.com/ratatui/ratatui/pull/1160\n\nThe `terminal` module is now private and can not be used directly. The types under this module are\nexported from the root of the crate. This reduces clashes with other modules in the backends that\nare also named terminal, and confusion about module exports for newer Rust users.\n\n```diff\n- use ratatui::terminal::{CompletedFrame, Frame, Terminal, TerminalOptions, ViewPort};\n+ use ratatui::{CompletedFrame, Frame, Terminal, TerminalOptions, ViewPort};\n```\n\n### `ToText` no longer has a lifetime ([#1234])\n\n[#1234]: https://github.com/ratatui/ratatui/pull/1234\n\nThis change simplifies the trait and makes it easier to implement.\n\n### `Frame::size` is deprecated and renamed to `Frame::area` ([#1293])\n\n[#1293]: https://github.com/ratatui/ratatui/pull/1293\n\n`Frame::size` is renamed to `Frame::area` as it's the more correct name.\n\n## [v0.27.0](https://github.com/ratatui/ratatui/releases/tag/v0.27.0)\n\n### List no clamps the selected index to list ([#1159])\n\n[#1149]: https://github.com/ratatui/ratatui/pull/1149\n\nThe `List` widget now clamps the selected index to the bounds of the list when navigating with\n`first`, `last`, `previous`, and `next`, as well as when setting the index directly with `select`.\n\nPreviously selecting an index past the end of the list would show treat the list as having a\nselection which was not visible. Now the last item in the list will be selected instead.\n\n### Prelude items added / removed ([#1149])\n\nThe following items have been removed from the prelude:\n\n- `style::Styled` - this trait is useful for widgets that want to\n  support the Stylize trait, but it adds complexity as widgets have two\n  `style` methods and a `set_style` method.\n- `symbols::Marker` - this item is used by code that needs to draw to\n  the `Canvas` widget, but it's not a common item that would be used by\n  most users of the library.\n- `terminal::{CompletedFrame, TerminalOptions, Viewport}` - these items\n  are rarely used by code that needs to interact with the terminal, and\n  they're generally only ever used once in any app.\n\nThe following items have been added to the prelude:\n\n- `layout::{Position, Size}` - these items are used by code that needs\n  to interact with the layout system. These are newer items that were\n  added in the last few releases, which should be used more liberally.\n  This may cause conflicts for types defined elsewhere with a similar\n  name.\n\nTo update your app:\n\n```diff\n// if your app uses Styled::style() or Styled::set_style():\n-use ratatui::prelude::*;\n+use ratatui::{prelude::*, style::Styled};\n\n// if your app uses symbols::Marker:\n-use ratatui::prelude::*;\n+use ratatui::{prelude::*, symbols::Marker}\n\n// if your app uses terminal::{CompletedFrame, TerminalOptions, Viewport}\n-use ratatui::prelude::*;\n+use ratatui::{prelude::*, terminal::{CompletedFrame, TerminalOptions, Viewport}};\n\n// to disambiguate existing types named Position or Size:\n- use some_crate::{Position, Size};\n- let size: Size = ...;\n- let position: Position = ...;\n+ let size: some_crate::Size = ...;\n+ let position: some_crate::Position = ...;\n```\n\n### Termion is updated to 4.0 [#1106]\n\nChangelog: <https://gitlab.redox-os.org/redox-os/termion/-/blob/master/CHANGELOG.md>\n\nA change is only necessary if you were matching on all variants of the `MouseEvent` enum without a\nwildcard. In this case, you need to either handle the two new variants, `MouseLeft` and\n`MouseRight`, or add a wildcard.\n\n[#1106]: https://github.com/ratatui/ratatui/pull/1106\n\n### `Rect::inner` takes `Margin` directly instead of reference ([#1008])\n\n[#1008]: https://github.com/ratatui/ratatui/pull/1008\n\n`Margin` needs to be passed without reference now.\n\n```diff\n-let area = area.inner(&Margin {\n+let area = area.inner(Margin {\n     vertical: 0,\n     horizontal: 2,\n });\n```\n\n### `Buffer::filled` takes `Cell` directly instead of reference ([#1148])\n\n[#1148]: https://github.com/ratatui/ratatui/pull/1148\n\n`Buffer::filled` moves the `Cell` instead of taking a reference.\n\n```diff\n-Buffer::filled(area, &Cell::new(\"X\"));\n+Buffer::filled(area, Cell::new(\"X\"));\n```\n\n### `Stylize::bg()` now accepts `Into<Color>` ([#1103])\n\n[#1103]: https://github.com/ratatui/ratatui/pull/1103\n\nPreviously, `Stylize::bg()` accepted `Color` but now accepts `Into<Color>`. This allows more\nflexible types from calling scopes, though it can break some type inference in the calling scope.\n\n### Remove deprecated `List::start_corner` and `layout::Corner` ([#759])\n\n[#759]: https://github.com/ratatui/ratatui/pull/759\n\n`List::start_corner` was deprecated in v0.25. Use `List::direction` and `ListDirection` instead.\n\n```diff\n- list.start_corner(Corner::TopLeft);\n- list.start_corner(Corner::TopRight);\n// This is not an error, BottomRight rendered top to bottom previously\n- list.start_corner(Corner::BottomRight);\n// all becomes\n+ list.direction(ListDirection::TopToBottom);\n```\n\n```diff\n- list.start_corner(Corner::BottomLeft);\n// becomes\n+ list.direction(ListDirection::BottomToTop);\n```\n\n`layout::Corner` was removed entirely.\n\n### `LineGauge::gauge_style` is deprecated ([#565])\n\n[#565]: https://github.com/ratatui/ratatui/pull/1148\n\n`LineGauge::gauge_style` is deprecated and replaced with `LineGauge::filled_style` and `LineGauge::unfilled_style`:\n\n```diff\nlet gauge = LineGauge::default()\n- .gauge_style(Style::default().fg(Color::Red).bg(Color::Blue)\n+ .filled_style(Style::default().fg(Color::Green))\n+ .unfilled_style(Style::default().fg(Color::White));\n```\n\n## [v0.26.0](https://github.com/ratatui/ratatui/releases/tag/v0.26.0)\n\n### `Flex::Start` is the new default flex mode for `Layout` ([#881])\n\n[#881]: https://github.com/ratatui/ratatui/pull/881\n\nPreviously, constraints would stretch to fill all available space, violating constraints if\nnecessary.\n\nWith v0.26.0, `Flex` modes are introduced, and the default is `Flex::Start`, which will align\nareas associated with constraints to be beginning of the area. With v0.26.0, additionally,\n`Min` constraints grow to fill excess space. These changes will allow users to build layouts\nmore easily.\n\nWith v0.26.0, users will most likely not need to change what constraints they use to create\nexisting layouts with `Flex::Start`. However, to get old behavior, use `Flex::Legacy`.\n\n```diff\n- let rects = Layout::horizontal([Length(1), Length(2)]).split(area);\n// becomes\n+ let rects = Layout::horizontal([Length(1), Length(2)]).flex(Flex::Legacy).split(area);\n```\n\n### `Table::new()` now accepts `IntoIterator<Item: Into<Row<'a>>>` ([#774])\n\n[#774]: https://github.com/ratatui/ratatui/pull/774\n\nPreviously, `Table::new()` accepted `IntoIterator<Item=Row<'a>>`. The argument change to\n`IntoIterator<Item: Into<Row<'a>>>`, This allows more flexible types from calling scopes, though it\ncan some break type inference in the calling scope for empty containers.\n\nThis can be resolved either by providing an explicit type (e.g. `Vec::<Row>::new()`), or by using\n`Table::default()`.\n\n```diff\n- let table = Table::new(vec![], widths);\n// becomes\n+ let table = Table::default().widths(widths);\n```\n\n### `Tabs::new()` now accepts `IntoIterator<Item: Into<Line<'a>>>` ([#776])\n\n[#776]: https://github.com/ratatui/ratatui/pull/776\n\nPreviously, `Tabs::new()` accepted `Vec<T>` where `T: Into<Line<'a>>`. This allows more flexible\ntypes from calling scopes, though it can break some type inference in the calling scope.\n\nThis typically occurs when collecting an iterator prior to calling `Tabs::new`, and can be resolved\nby removing the call to `.collect()`.\n\n```diff\n- let tabs = Tabs::new((0.3).map(|i| format!(\"{i}\")).collect());\n// becomes\n+ let tabs = Tabs::new((0.3).map(|i| format!(\"{i}\")));\n```\n\n### Table::default() now sets segment_size to None and column_spacing to ([#751])\n\n[#751]: https://github.com/ratatui/ratatui/pull/751\n\nThe default() implementation of Table now sets the column_spacing field to 1 and the segment_size\nfield to `SegmentSize::None`. This will affect the rendering of a small amount of apps.\n\nTo use the previous default values, call `table.segment_size(Default::default())` and\n`table.column_spacing(0)`.\n\n### `patch_style` & `reset_style` now consumes and returns `Self` ([#754])\n\n[#754]: https://github.com/ratatui/ratatui/pull/754\n\nPreviously, `patch_style` and `reset_style` in `Text`, `Line` and `Span` were using a mutable\nreference to `Self`. To be more consistent with the rest of `ratatui`, which is using fluent\nsetters, these now take ownership of `Self` and return it.\n\nThe following example shows how to migrate for `Line`, but the same applies for `Text` and `Span`.\n\n```diff\n- let mut line = Line::from(\"foobar\");\n- line.patch_style(style);\n// becomes\n+ let line = Line::new(\"foobar\").patch_style(style);\n```\n\n### Remove deprecated `Block::title_on_bottom` ([#757])\n\n`Block::title_on_bottom` was deprecated in v0.22. Use `Block::title` and `Title::position` instead.\n\n```diff\n- block.title(\"foobar\").title_on_bottom();\n+ block.title(Title::from(\"foobar\").position(Position::Bottom));\n```\n\n### `Block` style methods cannot be used in a const context ([#720])\n\n[#720]: https://github.com/ratatui/ratatui/pull/720\n\nPreviously the `style()`, `border_style()` and `title_style()` methods could be used to create a\n`Block` in a constant context. These now accept `Into<Style>` instead of `Style`. These methods no\nlonger can be called from a constant context.\n\n### `Line` now has a `style` field that applies to the entire line ([#708])\n\n[#708]: https://github.com/ratatui/ratatui/pull/708\n\nPreviously the style of a `Line` was stored in the `Span`s that make up the line. Now the `Line`\nitself has a `style` field, which can be set with the `Line::styled` method. Any code that creates\n`Line`s using the struct initializer instead of constructors will fail to compile due to the added\nfield. This can be easily fixed by adding `..Default::default()` to the field list or by using a\nconstructor method (`Line::styled()`, `Line::raw()`) or conversion method (`Line::from()`).\n\nEach `Span` contained within the line will no longer have the style that is applied to the line in\nthe `Span::style` field.\n\n```diff\n  let line = Line {\n      spans: vec![\"\".into()],\n      alignment: Alignment::Left,\n+     ..Default::default()\n  };\n\n  // or\n\n  let line = Line::raw(vec![\"\".into()])\n      .alignment(Alignment::Left);\n```\n\n## [v0.25.0](https://github.com/ratatui/ratatui/releases/tag/v0.25.0)\n\n### Removed `Axis::title_style` and `Buffer::set_background` ([#691])\n\n[#691]: https://github.com/ratatui/ratatui/pull/691\n\nThese items were deprecated since 0.10.\n\n- You should use styling capabilities of [`text::Line`] given as argument of [`Axis::title`]\n  instead of `Axis::title_style`\n- You should use styling capabilities of [`Buffer::set_style`] instead of `Buffer::set_background`\n\n[`text::Line`]: https://docs.rs/ratatui/latest/ratatui/text/struct.Line.html\n[`Axis::title`]: https://docs.rs/ratatui/latest/ratatui/widgets/struct.Axis.html#method.title\n[`Buffer::set_style`]: https://docs.rs/ratatui/latest/ratatui/buffer/struct.Buffer.html#method.set_style\n\n### `List::new()` now accepts `IntoIterator<Item = Into<ListItem<'a>>>` ([#672])\n\n[#672]: https://github.com/ratatui/ratatui/pull/672\n\nPreviously `List::new()` took `Into<Vec<ListItem<'a>>>`. This change will throw a compilation\nerror for `IntoIterator`s with an indeterminate item (e.g. empty vecs).\n\nE.g.\n\n```diff\n- let list = List::new(vec![]);\n// becomes\n+ let list = List::default();\n```\n\n### The default `Tabs::highlight_style` is now `Style::new().reversed()` ([#635])\n\n[#635]: https://github.com/ratatui/ratatui/pull/635\n\nPreviously the default highlight style for tabs was `Style::default()`, which meant that a `Tabs`\nwidget in the default configuration would not show any indication of the selected tab.\n\n### The default `Tabs::highlight_style` is now `Style::new().reversed()` ([#635])\n\nPreviously the default highlight style for tabs was `Style::default()`, which meant that a `Tabs`\nwidget in the default configuration would not show any indication of the selected tab.\n\n### `Table::new()` now requires specifying the widths of the columns ([#664])\n\n[#664]: https://github.com/ratatui/ratatui/pull/664\n\nPreviously `Table`s could be constructed without `widths`. In almost all cases this is an error.\nA new `widths` parameter is now mandatory on `Table::new()`. Existing code of the form:\n\n```diff\n- Table::new(rows).widths(widths)\n```\n\nShould be updated to:\n\n```diff\n+ Table::new(rows, widths)\n```\n\nFor ease of automated replacement in cases where the amount of code broken by this change is large\nor complex, it may be convenient to replace `Table::new` with `Table::default().rows`.\n\n```diff\n- Table::new(rows).block(block).widths(widths);\n// becomes\n+ Table::default().rows(rows).widths(widths)\n```\n\n### `Table::widths()` now accepts `IntoIterator<Item = AsRef<Constraint>>` ([#663])\n\n[#663]: https://github.com/ratatui/ratatui/pull/663\n\nPreviously `Table::widths()` took a slice (`&'a [Constraint]`). This change will introduce clippy\n`needless_borrow` warnings for places where slices are passed to this method. To fix these, remove\nthe `&`.\n\nE.g.\n\n```diff\n- let table = Table::new(rows).widths(&[Constraint::Length(1)]);\n// becomes\n+ let table = Table::new(rows, [Constraint::Length(1)]);\n```\n\n### Layout::new() now accepts direction and constraint parameters ([#557])\n\n[#557]: https://github.com/ratatui/ratatui/pull/557\n\nPreviously layout new took no parameters. Existing code should either use `Layout::default()` or\nthe new constructor.\n\n```rust\nlet layout = layout::new()\n  .direction(Direction::Vertical)\n  .constraints([Constraint::Min(1), Constraint::Max(2)]);\n// becomes either\nlet layout = layout::default()\n  .direction(Direction::Vertical)\n  .constraints([Constraint::Min(1), Constraint::Max(2)]);\n// or\nlet layout = layout::new(Direction::Vertical, [Constraint::Min(1), Constraint::Max(2)]);\n```\n\n## [v0.24.0](https://github.com/ratatui/ratatui/releases/tag/v0.24.0)\n\n### `ScrollbarState` field type changed from `u16` to `usize` ([#456])\n\n[#456]: https://github.com/ratatui/ratatui/pull/456\n\nIn order to support larger content lengths, the `position`, `content_length` and\n`viewport_content_length` methods on `ScrollbarState` now take `usize` instead of `u16`\n\n### `BorderType::line_symbols` renamed to `border_symbols` ([#529])\n\n[#529]: https://github.com/ratatui/ratatui/issues/529\n\nApplications can now set custom borders on a `Block` by calling `border_set()`. The\n`BorderType::line_symbols()` is renamed to `border_symbols()` and now returns a new struct\n`symbols::border::Set`. E.g.:\n\n```diff\n- let line_set: symbols::line::Set = BorderType::line_symbols(BorderType::Plain);\n// becomes\n+ let border_set: symbols::border::Set = BorderType::border_symbols(BorderType::Plain);\n```\n\n### Generic `Backend` parameter removed from `Frame` ([#530])\n\n[#530]: https://github.com/ratatui/ratatui/issues/530\n\n`Frame` is no longer generic over Backend. Code that accepted `Frame<Backend>` will now need to\naccept `Frame`. To migrate existing code, remove any generic parameters from code that uses an\ninstance of a Frame. E.g.:\n\n```diff\n- fn ui<B: Backend>(frame: &mut Frame<B>) { ... }\n// becomes\n+ fn ui(frame: Frame) { ... }\n```\n\n### `Stylize` shorthands now consume rather than borrow `String` ([#466])\n\n[#466]: https://github.com/ratatui/ratatui/issues/466\n\nIn order to support using `Stylize` shorthands (e.g. `\"foo\".red()`) on temporary `String` values, a\nnew implementation of `Stylize` was added that returns a `Span<'static>`. This causes the value to\nbe consumed rather than borrowed. Existing code that expects to use the string after a call will no\nlonger compile. E.g.\n\n```diff\n- let s = String::new(\"foo\");\n- let span1 = s.red();\n- let span2 = s.blue(); // will no longer compile as s is consumed by the previous line\n// becomes\n+ let span1 = s.clone().red();\n+ let span2 = s.blue();\n```\n\n### Deprecated `Spans` type removed (replaced with `Line`) ([#426])\n\n[#426]: https://github.com/ratatui/ratatui/issues/426\n\n`Spans` was replaced with `Line` in 0.21.0. `Buffer::set_spans` was replaced with\n`Buffer::set_line`.\n\n```diff\n- let spans = Spans::from(some_string_str_span_or_vec_span);\n- buffer.set_spans(0, 0, spans, 10);\n// becomes\n+ let line - Line::from(some_string_str_span_or_vec_span);\n+ buffer.set_line(0, 0, line, 10);\n```\n\n## [v0.23.0](https://github.com/ratatui/ratatui/releases/tag/v0.23.0)\n\n### `Scrollbar::track_symbol()` now takes an `Option<&str>` instead of `&str` ([#360])\n\n[#360]: https://github.com/ratatui/ratatui/issues/360\n\nThe track symbol of `Scrollbar` is now optional, this method now takes an optional value.\n\n```diff\n- let scrollbar = Scrollbar::default().track_symbol(\"|\");\n// becomes\n+ let scrollbar = Scrollbar::default().track_symbol(Some(\"|\"));\n```\n\n### `Scrollbar` symbols moved to `symbols::scrollbar` and `widgets::scrollbar` module is private ([#330])\n\n[#330]: https://github.com/ratatui/ratatui/issues/330\n\nThe symbols for defining scrollbars have been moved to the `symbols` module from the\n`widgets::scrollbar` module which is no longer public. To update your code update any imports to the\nnew module locations. E.g.:\n\n```diff\n- use ratatui::{widgets::scrollbar::{Scrollbar, Set}};\n// becomes\n+ use ratatui::{widgets::Scrollbar, symbols::scrollbar::Set}\n```\n\n### MSRV updated to 1.67 ([#361])\n\n[#361]: https://github.com/ratatui/ratatui/issues/361\n\nThe MSRV of ratatui is now 1.67 due to an MSRV update in a dependency (`time`).\n\n## [v0.22.0](https://github.com/ratatui/ratatui/releases/tag/v0.22.0)\n\n### `bitflags` updated to 2.3 ([#205])\n\n[#205]: https://github.com/ratatui/ratatui/issues/205\n\nThe `serde` representation of `bitflags` has changed. Any existing serialized types that have\nBorders or Modifiers will need to be re-serialized. This is documented in the [`bitflags`\nchangelog](https://github.com/bitflags/bitflags/blob/main/CHANGELOG.md#200-rc2)..\n\n## [v0.21.0](https://github.com/ratatui/ratatui/releases/tag/v0.21.0)\n\n### MSRV is 1.65.0 ([#171])\n\n[#171]: https://github.com/ratatui/ratatui/issues/171\n\nThe minimum supported rust version is now 1.65.0.\n\n### `Terminal::with_options()` stabilized to allow configuring the viewport ([#114])\n\n[#114]: https://github.com/ratatui/ratatui/issues/114\n\nIn order to support inline viewports, the unstable method `Terminal::with_options()` was stabilized\nand `ViewPort` was changed from a struct to an enum.\n\n```diff\nlet terminal = Terminal::with_options(backend, TerminalOptions {\n-    viewport: Viewport::fixed(area),\n});\n// becomes\nlet terminal = Terminal::with_options(backend, TerminalOptions {\n+    viewport: Viewport::Fixed(area),\n});\n```\n\n### Code that binds `Into<Text<'a>>` now requires type annotations ([#168])\n\n[#168]: https://github.com/ratatui/ratatui/issues/168\n\nA new type `Masked` was introduced that implements `From<Text<'a>>`. This causes any code that\npreviously did not need to use type annotations to fail to compile. To fix this, annotate or call\n`to_string()` / `to_owned()` / `as_str()` on the value. E.g.:\n\n```diff\n- let paragraph = Paragraph::new(\"\".as_ref());\n// becomes\n+ let paragraph = Paragraph::new(\"\".as_str());\n```\n\n### `Marker::Block` now renders as a block rather than a bar character ([#133])\n\n[#133]: https://github.com/ratatui/ratatui/issues/133\n\nCode using the `Block` marker that previously rendered using a half block character (`'▀'``) now\nrenders using the full block character (`'█'`). A new marker variant`Bar` is introduced to replace\nthe existing code.\n\n```diff\n- let canvas = Canvas::default().marker(Marker::Block);\n// becomes\n+ let canvas = Canvas::default().marker(Marker::Bar);\n```\n\n## [v0.20.0](https://github.com/ratatui/ratatui/releases/tag/v0.20.0)\n\nv0.20.0 was the first release of Ratatui - versions prior to this were release as tui-rs. See the\n[Changelog](./CHANGELOG.md) for more details.\n\n### MSRV is update to 1.63.0 ([#80])\n\n[#80]: https://github.com/ratatui/ratatui/issues/80\n\nThe minimum supported rust version is 1.63.0\n\n### List no longer ignores empty string in items ([#42])\n\n[#42]: https://github.com/ratatui/ratatui/issues/42\n\nThe following code now renders 3 items instead of 2. Code which relies on the previous behavior will\nneed to manually filter empty items prior to display.\n\n```rust\nlet items = vec![\n    ListItem::new(\"line one\"),\n    ListItem::new(\"\"),\n    ListItem::new(\"line four\"),\n];\n```\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 304.94921875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n_\"Food will come, Remy. Food always comes to those who love to cook.\" – Gusteau_\n\nWe are excited to announce the new version of `ratatui` - a Rust library that's all about cooking up TUIs 👨‍🍳🐀\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v029/>\n\n⚠️ List of breaking changes can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md).\n\n## [v0.29.0](https://github.com/ratatui/ratatui/releases/tag/v0.29.0) - 2024-10-21\n\n### Features\n\n- [3a43274](https://github.com/ratatui/ratatui/commit/3a43274881a79b4e593536c2ca915b509e557215) *(color)* Add hsluv support by @du-ob in [#1333](https://github.com/ratatui/ratatui/pull/1333)\n\n- [4c4851c](https://github.com/ratatui/ratatui/commit/4c4851ca3d1437a50ed1f146c0849b58716b89a2) *(example)* Add drawing feature to the canvas example by @orhun in [#1429](https://github.com/ratatui/ratatui/pull/1429)\n\n  > ![rec_20241018T235208](https://github.com/user-attachments/assets/cfb2f9f8-773b-4599-9312-29625ff2ca60)\n  >\n  >\n  > fun fact: I had to do [35\n  > pushups](https://www.youtube.com/watch?v=eS92stzBYXA) for this...\n  >\n  > ---------\n\n- [e5a7609](https://github.com/ratatui/ratatui/commit/e5a76095884a4ce792846289f56d04a4acaaa6fa) *(line)* Impl From<Cow<str>> for Line by @joshka in [#1373](https://github.com/ratatui/ratatui/pull/1373) [**breaking**]\n  >\n  > BREAKING-CHANGES:`Line` now implements `From<Cow<str>`\n  >\n  > As this adds an extra conversion, ambiguous inferred values may no longer\n  > compile.\n  >\n  > ```rust\n  > // given:\n  > struct Foo { ... }\n  > impl From<Foo> for String { ... }\n  > impl From<Foo> for Cow<str> { ... }\n  >\n  > let foo = Foo { ... };\n  > let line = Line::from(foo); // now fails due to ambiguous type inference\n  > // replace with\n  > let line = Line::from(String::from(foo));\n  > ```\n  >\n  > Fixes:https://github.com/ratatui/ratatui/issues/1367\n  >\n  > ---------\n\n- [2805ddd](https://github.com/ratatui/ratatui/commit/2805dddf0527584da9c7865ff6a78a9c74731187) *(logo)* Add a Ratatui logo widget by @joshka in [#1307](https://github.com/ratatui/ratatui/pull/1307)\n\n  > This is a simple logo widget that can be used to render the Ratatui logo\n  > in the terminal. It is used in the `examples/ratatui-logo.rs` example,\n  > and may be used in your applications' help or about screens.\n  >\n  > ```rust\n  > use ratatui::{Frame, widgets::RatatuiLogo};\n  >\n  > fn draw(frame: &mut Frame) {\n  >     frame.render_widget(RatatuiLogo::tiny(), frame.area());\n  > }\n  > ```\n\n- [d72968d](https://github.com/ratatui/ratatui/commit/d72968d86b94100579feba80c5cd207c2e7e13e7) *(scrolling-regions)* Use terminal scrolling regions to stop Terminal::insert_before from flickering by @nfachan in [#1341](https://github.com/ratatui/ratatui/pull/1341) [**breaking**]\n\n  > The current implementation of Terminal::insert_before causes the\n  > viewport to flicker. This is described in #584 .\n  >\n  > This PR removes that flickering by using terminal scrolling regions\n  > (sometimes called \"scroll regions\"). A terminal can have its scrolling\n  > region set to something other than the whole screen. When a scroll ANSI\n  > sequence is sent to the terminal and it has a non-default scrolling\n  > region, the terminal will scroll just inside of that region.\n  >\n  > We use scrolling regions to implement insert_before. We create a region\n  > on the screen above the viewport, scroll that up to make room for the\n  > newly inserted lines, and then draw the new lines. We may need to repeat\n  > this process depending on how much space there is and how many lines we\n  > need to draw.\n  >\n  > When the viewport takes up the entire screen, we take a modified\n  > approach. We create a scrolling region of just the top line (could be\n  > more) of the viewport, then use that to draw the lines we want to\n  > output. When we're done, we scroll it up by one line, into the\n  > scrollback history, and then redraw the top line from the viewport.\n  >\n  > A final edge case is when the viewport hasn't yet reached the bottom of\n  > the screen. This case, we set up a different scrolling region, where the\n  > top is the top of the viewport, and the bottom is the viewport's bottom\n  > plus the number of lines we want to scroll by. We then scroll this\n  > region down to open up space above the viewport for drawing the inserted\n  > lines.\n  >\n  > Regardless of what we do, we need to reset the scrolling region. This PR\n  > takes the approach of always resetting the scrolling region after every\n  > operation. So the Backend gets new scroll_region_up and\n  > scroll_region_down methods instead of set_scrolling_region, scroll_up,\n  > scroll_down, and reset_scrolling_region methods. We chose that approach\n  > for two reasons. First, we don't want Ratatui to have to remember that\n  > state and then reset the scrolling region when tearing down. Second, the\n  > pre-Windows-10 console code doesn't support scrolling region\n  >\n  > This PR:\n  > - Adds a new scrolling-regions feature.\n  > - Adds two new Backend methods: scroll_region_up and scroll_region_down.\n  > - Implements those Backend methods on all backends in the codebase.\n  > - The crossterm and termion implementations use raw ANSI escape\n  > sequences. I'm trying to merge changes into those two projects\n  > separately to support these functions.\n  > - Adds code to Terminal::insert_before to choose between\n  > insert_before_scrolling_regions and insert_before_no_scrolling_regions.\n  > The latter is the old implementation.\n  > - Adds lots of tests to the TestBackend to for the\n  > scrolling-region-related Backend methods.\n  > - Adds versions of terminal tests that show that insert_before doesn't\n  > clobber the viewport. This is a change in behavior from before.\n\n- [dc8d058](https://github.com/ratatui/ratatui/commit/dc8d0587ecfd46cde86c9e33a6fd385e2d4810a9) *(table)* Add support for selecting column and cell by @airblast-dev in [#1331](https://github.com/ratatui/ratatui/pull/1331) [**breaking**]\n\n  > Fixes https://github.com/ratatui-org/ratatui/issues/1250\n  >\n  > Adds support for selecting a column and cell in `TableState`. The\n  > selected column, and cells style can be set by\n  > `Table::column_highlight_style` and `Table::cell_highlight_style`\n  > respectively.\n  >\n  > The table example has also been updated to display the new\n  > functionality:\n  >\n  > https://github.com/user-attachments/assets/e5fd2858-4931-4ce1-a2f6-a5ea1eacbecc\n  >\n  > BREAKING CHANGE:The Serialized output of the state will now include the\n  > \"selected_column\" field. Software that manually parse the serialized the\n  > output (with anything other than the `Serialize` implementation on\n  > `TableState`) may have to be refactored if the \"selected_column\" field\n  > is not accounted for. This does not affect users who rely on the\n  > `Deserialize`, or `Serialize` implementation on the state.\n  >\n  > BREAKING CHANGE:The `Table::highlight_style` is now deprecated in favor\n  > of `Table::row_highlight_style`.\n  >\n  > ---------\n\n- [ab6b1fe](https://github.com/ratatui/ratatui/commit/ab6b1feaec3ef0cf23bcfac219b95ec946180fa8) *(tabs)* Allow tabs to be deselected by @joshka in [#1413](https://github.com/ratatui/ratatui/pull/1413) [**breaking**]\n  >\n  > `Tabs::select()` now accepts `Into<Option<usize>>` instead of `usize`.\n  > This allows tabs to be deselected by passing `None`.\n  >\n  > `Tabs::default()` is now also implemented manually instead of deriving\n  > `Default`, and a new method `Tabs::titles()` is added to set the titles\n  > of the tabs.\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/pull/1412>\n  >\n  > BREAKING CHANGE:`Tabs::select()` now accepts `Into<Option<usize>>`\n  > which breaks any code already using parameter type inference:\n  >\n  > ```diff\n  > let selected = 1u8;\n  > - let tabs = Tabs::new([\"A\", \"B\"]).select(selected.into())\n  > + let tabs = Tabs::new([\"A\", \"B\"]).select(selected as usize)\n  > ```\n\n- [23c0d52](https://github.com/ratatui/ratatui/commit/23c0d52c29f27547d94448be44aa46e85f49fbb0) *(text)* Improve concise debug view for Span,Line,Text,Style by @joshka in [#1410](https://github.com/ratatui/ratatui/pull/1410)\n\n  > Improves https://github.com/ratatui/ratatui/pull/1383\n  >\n  > The following now round trips when formatted for debug.\n  > This will make it easier to use insta when testing text related views of\n  > widgets.\n  >\n  > ```rust\n  > Text::from_iter([\n  >     Line::from(\"Hello, world!\"),\n  >     Line::from(\"How are you?\").bold().left_aligned(),\n  >     Line::from_iter([\n  >         Span::from(\"I'm \"),\n  >         Span::from(\"doing \").italic(),\n  >         Span::from(\"great!\").bold(),\n  >     ]),\n  > ]).on_blue().italic().centered()\n  > ```\n\n- [60cc15b](https://github.com/ratatui/ratatui/commit/60cc15bbb064faa704f78ca51ae60584b5f7ca31) *(uncategorized)* Add support for empty bar style to `Sparkline` by @fujiapple852 in [#1326](https://github.com/ratatui/ratatui/pull/1326) [**breaking**]\n\n  > - distinguish between empty bars and bars with a value of 0\n  > - provide custom styling for empty bars\n  > - provide custom styling for individual bars\n  > - inverts the rendering algorithm to be item first\n  >\n  > Closes:#1325\n  >\n  > BREAKING CHANGE:`Sparkline::data` takes `IntoIterator<Item = SparklineBar>`\n  > instead of `&[u64]` and is no longer const\n\n- [453a308](https://github.com/ratatui/ratatui/commit/453a308b46bbacba2ee7cba849cf0c19c88a1a27) *(uncategorized)* Add overlap to layout by @kdheepak in [#1398](https://github.com/ratatui/ratatui/pull/1398) [**breaking**]\n\n  > This PR adds a new feature for the existing `Layout::spacing` method,\n  > and introducing a `Spacing` enum.\n  >\n  > Now `Layout::spacing` is generic and can take\n  >\n  > - zero or positive numbers, e.g. `Layout::spacing(1)` (current\n  > functionality)\n  > - negative number, e.g. `Layout::spacing(-1)` (new)\n  > - variant of the `Spacing` (new)\n  >\n  > This allows creating layouts with a shared pixel for segments. When\n  > `spacing(negative_value)` is used, spacing is ignored and all segments\n  > will be adjacent and have pixels overlapping.\n  > `spacing(zero_or_positive_value)` behaves the same as before. These are\n  > internally converted to `Spacing::Overlap` or `Spacing::Space`.\n  >\n  > Here's an example output to illustrate the layout solve from this PR:\n  >\n  > ```rust\n  > #[test]\n  > fn test_layout() {\n  >     use crate::layout::Constraint::*;\n  >     let mut terminal = crate::Terminal::new(crate::backend::TestBackend::new(50, 4)).unwrap();\n  >     terminal\n  >         .draw(|frame| {\n  >             let [upper, lower] = Layout::vertical([Fill(1), Fill(1)]).areas(frame.area());\n  >\n  >             let (segments, spacers) = Layout::horizontal([Length(10), Length(10), Length(10)])\n  >                 .flex(Flex::Center)\n  >                 .split_with_spacers(upper);\n  >\n  >             for segment in segments.iter() {\n  >                 frame.render_widget(\n  >                     crate::widgets::Block::bordered()\n  >                         .border_set(crate::symbols::border::DOUBLE),\n  >                     *segment,\n  >                 );\n  >             }\n  >             for spacer in spacers.iter() {\n  >                 frame.render_widget(crate::widgets::Block::bordered(), *spacer);\n  >             }\n  >\n  >             let (segments, spacers) = Layout::horizontal([Length(10), Length(10), Length(10)])\n  >                 .flex(Flex::Center)\n  >                 .spacing(-1) // new feature\n  >                 .split_with_spacers(lower);\n  >\n  >             for segment in segments.iter() {\n  >                 frame.render_widget(\n  >                     crate::widgets::Block::bordered()\n  >                         .border_set(crate::symbols::border::DOUBLE),\n  >                     *segment,\n  >                 );\n  >             }\n  >             for spacer in spacers.iter() {\n  >                 frame.render_widget(crate::widgets::Block::bordered(), *spacer);\n  >             }\n  >         })\n  >         .unwrap();\n  >     dbg!(terminal.backend());\n  > }\n  > ```\n  >\n  >\n  > ```plain\n  > ┌────────┐╔════════╗╔════════╗╔════════╗┌────────┐\n  > └────────┘╚════════╝╚════════╝╚════════╝└────────┘\n  > ┌─────────┐╔════════╔════════╔════════╗┌─────────┐\n  > └─────────┘╚════════╚════════╚════════╝└─────────┘\n  > ```\n  >\n  > Currently drawing a border on top of an existing border overwrites it.\n  > Future PRs will allow for making the border drawing handle overlaps\n  > better.\n  >\n  > ---------\n\n- [7bdccce](https://github.com/ratatui/ratatui/commit/7bdccce3d56052306eb4121afe6b1ff56b198796) *(uncategorized)* Add an impl of `DoubleEndedIterator` for `Columns` and `Rows` by @fujiapple852 [**breaking**]\n  >\n  > BREAKING-CHANGE:The `pub` modifier has been removed from fields on the\n  >\n  > `layout::rect::Columns` and `layout::rect::Rows` iterators. These fields\n  > were not intended to be public and should not have been accessed\n  > directly.\n  >\n  > Fixes:#1357\n\n### Bug Fixes\n\n- [4f5503d](https://github.com/ratatui/ratatui/commit/4f5503dbf610290904a759a3f169a15111f11392) *(color)* Hsl and hsluv are now clamped before conversion by @joshka in [#1436](https://github.com/ratatui/ratatui/pull/1436) [**breaking**]\n\n  > The `from_hsl` and `from_hsluv` functions now clamp the HSL and HSLuv\n  > values before converting them to RGB. This ensures that the input values\n  > are within the expected range before conversion.\n  >\n  > Also note that the ranges of Saturation and Lightness values have been\n  > aligned to be consistent with the palette crate. Saturation and Lightness\n  > for `from_hsl` are now in the range [0.0..1.0] while `from_hsluv` are\n  > in the range [0.0..100.0].\n  >\n  > Refs:- <https://github.com/Ogeon/palette/discussions/253>\n  > - <https://docs.rs/palette/latest/palette/struct.Hsl.html>\n  > - <https://docs.rs/palette/latest/palette/struct.Hsluv.html>\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1433>\n\n- [b7e4885](https://github.com/ratatui/ratatui/commit/b7e488507d23cbc91ac63d5249088ad0f4852205) *(color)* Fix doc test for from_hsl by @joshka in [#1421](https://github.com/ratatui/ratatui/pull/1421)\n\n- [3df685e](https://github.com/ratatui/ratatui/commit/3df685e1144340935db2b1d929e2546f83c5e65f) *(rect)* Rect::area now returns u32 and Rect::new() no longer clamps area to u16::MAX by @joshka in [#1378](https://github.com/ratatui/ratatui/pull/1378) [**breaking**]\n\n  > This change fixes the unexpected behavior of the Rect::new() function to\n  > be more intuitive. The Rect::new() function now clamps the width and\n  > height of the rectangle to keep each bound within u16::MAX. The\n  > Rect::area() function now returns a u32 instead of a u16 to allow for\n  > larger areas to be calculated.\n  >\n  > Previously, the Rect::new() function would clamp the total area of the\n  > rectangle to u16::MAX, by preserving the aspect ratio of the rectangle.\n  >\n  > BREAKING CHANGE:Rect::area() now returns a u32 instead of a u16.\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1375>\n\n- [514d273](https://github.com/ratatui/ratatui/commit/514d2738750d792a75fde6cc7666f9220bcf6b3a) *(terminal)* Use the latest, resized area when clearing by @roberth in [#1427](https://github.com/ratatui/ratatui/pull/1427)\n\n- [0f48239](https://github.com/ratatui/ratatui/commit/0f4823977894cef51d5ffafe6ae35ca7ad56e1ac) *(terminal)* Resize() now resizes fixed viewports by @Patryk27 in [#1353](https://github.com/ratatui/ratatui/pull/1353)\n  >\n  > `Terminal::resize()` on a fixed viewport used to do nothing due to\n  > an accidentally shadowed variable. This now works as intended.\n\n- [a52ee82](https://github.com/ratatui/ratatui/commit/a52ee82fc716fafb2652b83a331c36f844104dda) *(text)* Truncate based on alignment by @Lunderberg in [#1432](https://github.com/ratatui/ratatui/pull/1432)\n\n  > This is a follow-up PR to https://github.com/ratatui/ratatui/pull/987,\n  > which implemented alignment-aware truncation for the `Line` widget.\n  > However, the truncation only checked the `Line::alignment` field, and\n  > any alignment inherited from a parent's `Text::alignment` field would\n  > not be used.\n  >\n  > This commit updates the truncation of `Line` to depend both on the\n  > individual `Line::alignment`, and on any alignment inherited from the\n  > parent's `Text::alignment`.\n\n- [611086e](https://github.com/ratatui/ratatui/commit/611086eba4dc07dcef89502a3bedfc28015b879f) *(uncategorized)* Sparkline docs / doc tests by @joshka in [#1437](https://github.com/ratatui/ratatui/pull/1437)\n\n- [b9653ba](https://github.com/ratatui/ratatui/commit/b9653ba05a468d3843499d8abd243158df823f82) *(uncategorized)* Prevent calender render panic when terminal height is small by @adrodgers in [#1380](https://github.com/ratatui/ratatui/pull/1380)\n  >\n  > Fixes:#1379\n\n- [da821b4](https://github.com/ratatui/ratatui/commit/da821b431edd656973b4480d3d4f22e7eea6d369) *(uncategorized)* Clippy lints from rust 1.81.0 by @fujiapple852 in [#1356](https://github.com/ratatui/ratatui/pull/1356)\n\n- [68886d1](https://github.com/ratatui/ratatui/commit/68886d1787b8e07d307dda4f36342d51d650345b) *(uncategorized)* Add `unstable-backend-writer` feature by @Patryk27 in [#1352](https://github.com/ratatui/ratatui/pull/1352)\n  >\n  > https://github.com/ratatui/ratatui/pull/991 created a new unstable\n  > feature, but forgot to add it to Cargo.toml, making it impossible to use\n  > on newer versions of rustc - this commit fixes it.\n\n### Refactor\n\n- [6db16d6](https://github.com/ratatui/ratatui/commit/6db16d67fc3cc97f1e5bd4b7df02ce9f00756a55) *(color)* Use palette types for Hsl/Hsluv conversions by @orhun in [#1418](https://github.com/ratatui/ratatui/pull/1418) [**breaking**]\n  >\n  > BREAKING-CHANGE:Previously `Color::from_hsl` accepted components\n  > as individual f64 parameters. It now accepts a single `palette::Hsl`\n  > value\n  > and is gated behind a `palette` feature flag.\n  >\n  > ```diff\n  > - Color::from_hsl(360.0, 100.0, 100.0)\n  > + Color::from_hsl(Hsl::new(360.0, 100.0, 100.0))\n  > ```\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1414>\n  >\n  > ---------\n\n- [edcdc8a](https://github.com/ratatui/ratatui/commit/edcdc8a8147a2f450d2c871b19da6d6383fd5497) *(layout)* Rename element to segment in layout by @kdheepak in [#1397](https://github.com/ratatui/ratatui/pull/1397)\n\n  > This PR renames `element` to `segment` in a couple of functions in the\n  > layout calculations for clarity. `element` can refer to `segment`s or\n  > `spacer`s and functions that take only `segment`s should use `segment`\n  > as the variable names.\n\n- [1153a9e](https://github.com/ratatui/ratatui/commit/1153a9ebaf0b98c45982002a659cb718e3c1d137) *(uncategorized)* Consistent result expected in layout tests by @farmeroy in [#1406](https://github.com/ratatui/ratatui/pull/1406)\n  >\n  > Fixes #1399\n  > I've looked through all the `assert_eq` and made sure that they follow\n  > the `expected, result` pattern. I wasn't sure if it was desired to\n  > actually pass result and expected as variables to the assert_eq\n  > statements, so I've left everything that seems to have followed the\n  > pattern as is.\n\n- [20c88aa](https://github.com/ratatui/ratatui/commit/20c88aaa5b9eb011a52240eab5edc1a8db23157a) *(uncategorized)* Avoid unneeded allocations by @mo8it in [#1345](https://github.com/ratatui/ratatui/pull/1345)\n\n### Documentation\n\n- [b13e2f9](https://github.com/ratatui/ratatui/commit/b13e2f94733afccfe02275fca263bde1dc532d2f) *(backend)* Added link to stdio FAQ by @Valentin271 in [#1349](https://github.com/ratatui/ratatui/pull/1349)\n\n- [b88717b](https://github.com/ratatui/ratatui/commit/b88717b65f7f89276edd855c4a3f9da2eda44361) *(constraint)* Add note about percentages by @joshka in [#1368](https://github.com/ratatui/ratatui/pull/1368)\n\n- [381ec75](https://github.com/ratatui/ratatui/commit/381ec75329866b3c1256113d1cb7716206b79fb7) *(readme)* Reduce the length by @joshka in [#1431](https://github.com/ratatui/ratatui/pull/1431)\n\n  > Motivation for this is that there's a bunch of stuff at the bottom of the Readme that we don't really keep up to date. Instead it's better to link to the places that we do keep this info.\n\n- [4728f0e](https://github.com/ratatui/ratatui/commit/4728f0e68b41eabb7d4ebd041fd5a85a0e794287) *(uncategorized)* Tweak readme by @joshka in [#1419](https://github.com/ratatui/ratatui/pull/1419)\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1417>\n\n- [4069aa8](https://github.com/ratatui/ratatui/commit/4069aa82745585f53b4b3376af589bb1b6108427) *(uncategorized)* Fix missing breaking changes link by @joshka in [#1416](https://github.com/ratatui/ratatui/pull/1416)\n\n- [870bc6a](https://github.com/ratatui/ratatui/commit/870bc6a64a680e9209d30e67e2e1f4e50a10a4bb) *(uncategorized)* Use `Frame::area()` instead of `size()` in examples by @hosseinnedaee in [#1361](https://github.com/ratatui/ratatui/pull/1361)\n  >\n  > `Frame::size()` is deprecated\n\n### Performance\n\n- [8db7a9a](https://github.com/ratatui/ratatui/commit/8db7a9a44a2358315dedaee3e7a2cb1a44ae1e58) *(uncategorized)* Implement size hints for `Rect` iterators by @airblast-dev in [#1420](https://github.com/ratatui/ratatui/pull/1420)\n\n### Styling\n\n- [e02947b](https://github.com/ratatui/ratatui/commit/e02947be6185643f906a97c453540676eade3f38) *(example)* Update panic message in minimal template by @orhun in [#1344](https://github.com/ratatui/ratatui/pull/1344)\n\n### Miscellaneous Tasks\n\n- [67c0ea2](https://github.com/ratatui/ratatui/commit/67c0ea243b5eb08159e41f922067247984902c1a) *(block)* Deprecate block::Title by @joshka in [#1372](https://github.com/ratatui/ratatui/pull/1372)\n  >\n  > `ratatui::widgets::block::Title` is deprecated in favor of using `Line`\n  > to represent titles.\n  > This removes an unnecessary layer of wrapping (string -> Span -> Line ->\n  > Title).\n  >\n  > This struct will be removed in a future release of Ratatui (likely\n  > 0.31).\n  > For more information see:\n  >\n  > <https://github.com/ratatui/ratatui/issues/738>\n  >\n  > To update your code:\n  > ```rust\n  >\n  > Block::new().title(Title::from(\"foo\"));\n  > // becomes any of\n  >\n  > Block::new().title(\"foo\");\n  >\n  > Block::new().title(Line::from(\"foo\"));\n  >\n  > Block::new().title(Title::from(\"foo\").position(Position::TOP));\n  > // becomes any of\n  >\n  > Block::new().title_top(\"foo\");\n  >\n  > Block::new().title_top(Line::from(\"foo\"));\n  >\n  > Block::new().title(Title::from(\"foo\").position(Position::BOTTOM));\n  > // becomes any of\n  >\n  > Block::new().title_bottom(\"foo\");\n  >\n  > Block::new().title_bottom(Line::from(\"foo\"));\n  > ```\n\n- [6515097](https://github.com/ratatui/ratatui/commit/6515097434a10c08276b58f0cd10b9301b44e9fe) *(cargo)* Check in Cargo.lock by @joshka in [#1434](https://github.com/ratatui/ratatui/pull/1434)\n\n  > When kept up to date, this makes it possible to build any git version\n  > with the same versions of crates that were used for any version, without\n  > it, you can only use the current versions. This makes bugs in semver\n  > compatible code difficult to detect.\n  >\n  > The Cargo.lock file is not used by downstream consumers of the crate, so\n  > it is safe to include it in the repository (and recommended by the Rust\n  > docs).\n  >\n  > See:- https://doc.rust-lang.org/cargo/faq.html#why-have-cargolock-in-version-control\n  > - https://blog.rust-lang.org/2023/08/29/committing-lockfiles.html\n  > - https://github.com/rust-lang/cargo/issues/8728\n\n- [c777beb](https://github.com/ratatui/ratatui/commit/c777beb658ebab26890b52cbda8df5d945525221) *(ci)* Bump git-cliff-action to v4 by @orhun in [#1350](https://github.com/ratatui/ratatui/pull/1350)\n  >\n  > See:https://github.com/orhun/git-cliff-action/releases/tag/v4.0.0\n\n- [69e0cd2](https://github.com/ratatui/ratatui/commit/69e0cd2fc4b126870b3381704260271904996c8f) *(deny)* Allow Zlib license in cargo-deny configuration by @orhun in [#1411](https://github.com/ratatui/ratatui/pull/1411)\n\n- [bc10af5](https://github.com/ratatui/ratatui/commit/bc10af5931d1c1ec58a4181c01807ed3c52051c6) *(style)* Make Debug output for Text/Line/Span/Style more concise by @joshka in [#1383](https://github.com/ratatui/ratatui/pull/1383)\n  >\n  > Given:```rust\n  >\n  > Text::from_iter([\n  >     Line::from(\"without line fields\"),\n  >     Line::from(\"with line fields\").bold().centered(),\n  >     Line::from_iter([\n  >         Span::from(\"without span fields\"),\n  >         Span::from(\"with span fields\")\n  >             .green()\n  >             .on_black()\n  >             .italic()\n  >             .not_dim(),\n  >     ]),\n  > ])\n  > ```\n  >\n  > Debug:```\n  > Text [Line [Span(\"without line fields\")], Line { style: Style::new().add_modifier(Modifier::BOLD), alignment: Some(Center), spans: [Span(\"with line fields\")] }, Line [Span(\"without span fields\"), Span { style: Style::new().green().on_black().add_modifier(Modifier::ITALIC).remove_modifier(Modifier::DIM), content: \"with span fields\" }]]\n  > ```\n  >\n  > Fixes: https://github.com/ratatui/ratatui/issues/1382\n  >\n  > ---------\n\n- [f6f7794](https://github.com/ratatui/ratatui/commit/f6f7794dd782d20cd41875c0578ffc4331692c1e) *(uncategorized)* Remove leftover prelude refs / glob imports from example code by @joshka in [#1430](https://github.com/ratatui/ratatui/pull/1430)\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1150>\n\n- [9fd1bee](https://github.com/ratatui/ratatui/commit/9fd1beedb25938bcc9565a52f1104ed45636c2dd) *(uncategorized)* Make Positions iterator fields private by @joshka in [#1424](https://github.com/ratatui/ratatui/pull/1424) [**breaking**]\n  >\n  > BREAKING CHANGE:The Rect Positions iterator no longer has public\n  > fields. The `rect` and `current_position` fields have been made private\n  > as they were not intended to be accessed directly.\n\n- [c32baa7](https://github.com/ratatui/ratatui/commit/c32baa7cd8a29a370a71da07ee02cf32125c9bcf) *(uncategorized)* Add benchmark for `Table` by @airblast-dev in [#1408](https://github.com/ratatui/ratatui/pull/1408)\n\n- [5ad623c](https://github.com/ratatui/ratatui/commit/5ad623c29b8f0b50fad742448902245f353ef19e) *(uncategorized)* Remove usage of prelude by @joshka in [#1390](https://github.com/ratatui/ratatui/pull/1390)\n\n  > This helps make the doc examples more explicit about what is being used.\n  > It will also makes it a bit easier to do future refactoring of Ratatui,\n  > into several crates, as the ambiguity of where types are coming from\n  > will be reduced.\n  >\n  > Additionally, several doc examples have been simplified to use Stylize,\n  > and necessary imports are no longer hidden.\n  >\n  > This doesn't remove the prelude. Only the internal usages.\n\n- [f4880b4](https://github.com/ratatui/ratatui/commit/cc7497532ac50e7e15e8ee8ff506f4689c396f50) *(deps)* Pin unicode-width to 0.2.0 by @orhun in [#1403](https://github.com/ratatui/ratatui/pull/1403) [**breaking**]\n\n  > We pin unicode-width to avoid breaking applications when there are breaking changes in the library.\n  >\n  > Discussion in [#1271](https://github.com/ratatui/ratatui/pull/1271)\n\n### Continuous Integration\n\n- [5635b93](https://github.com/ratatui/ratatui/commit/5635b930c7196ef8f12824341a7bd8b7323aabcd) *(uncategorized)* Add cargo-machete and remove unused deps by @Veetaha in [#1362](https://github.com/ratatui/ratatui/pull/1362)\n  >\n  > https://github.com/bnjbvr/cargo-machete\n\n### New Contributors\n\n* @roberth made their first contribution in [#1427](https://github.com/ratatui/ratatui/pull/1427)\n* @du-ob made their first contribution in [#1333](https://github.com/ratatui/ratatui/pull/1333)\n* @farmeroy made their first contribution in [#1406](https://github.com/ratatui/ratatui/pull/1406)\n* @adrodgers made their first contribution in [#1380](https://github.com/ratatui/ratatui/pull/1380)\n* @Veetaha made their first contribution in [#1362](https://github.com/ratatui/ratatui/pull/1362)\n* @hosseinnedaee made their first contribution in [#1361](https://github.com/ratatui/ratatui/pull/1361)\n* @Patryk27 made their first contribution in [#1352](https://github.com/ratatui/ratatui/pull/1352)\n\n**Full Changelog**: https://github.com/ratatui/ratatui/compare/v0.28.1...v0.29.0\n\n## [v0.28.1](https://github.com/ratatui/ratatui/releases/tag/v0.28.1) - 2024-08-25\n\n### Features\n\n- [ed51c4b](https://github.com/ratatui/ratatui/commit/ed51c4b3429862201b2c5de6846fea4c237f0ffb) *(terminal)* Add ratatui::init() and restore() methods by @joshka in [#1289](https://github.com/ratatui/ratatui/pull/1289)\n\n  > These are simple opinionated methods for creating a terminal that is\n  > useful to use in most apps. The new init method creates a crossterm\n  > backend writing to stdout, enables raw mode, enters the alternate\n  > screen, and sets a panic handler that restores the terminal on panic.\n  >\n  > A minimal hello world now looks a bit like:\n  >\n  > ```rust\n  > use ratatui::{\n  >     crossterm::event::{self, Event},\n  >     text::Text,\n  >     Frame,\n  > };\n  >\n  > fn main() {\n  >     let mut terminal = ratatui::init();\n  >     loop {\n  >         terminal\n  >             .draw(|frame: &mut Frame| frame.render_widget(Text::raw(\"Hello World!\"), frame.area()))\n  >             .expect(\"Failed to draw\");\n  >         if matches!(event::read().expect(\"failed to read event\"), Event::Key(_)) {\n  >             break;\n  >         }\n  >     }\n  >     ratatui::restore();\n  > }\n  > ```\n  >\n  > A type alias `DefaultTerminal` is added to represent this terminal\n  > type and to simplify any cases where applications need to pass this\n  > terminal around. It is equivalent to:\n  > `Terminal<CrosstermBackend<Stdout>>`\n  >\n  > We also added `ratatui::try_init()` and `try_restore()`, for situations\n  > where you might want to handle initialization errors yourself instead\n  > of letting the panic handler fire and cleanup. Simple Apps should\n  > prefer the `init` and `restore` functions over these functions.\n  >\n  > Corresponding functions to allow passing a `TerminalOptions` with\n  > a `Viewport` (e.g. inline, fixed) are also available\n  > (`init_with_options`,\n  > and `try_init_with_options`).\n  >\n  > The existing code to create a backend and terminal will remain and\n  > is not deprecated by this approach. This just provides a simple one\n  > line initialization using the common options.\n  >\n  > ---------\n\n### Bug Fixes\n\n- [aed60b9](https://github.com/ratatui/ratatui/commit/aed60b98394edc834d9fe8e96c3698510b5922f4) *(terminal)* Terminal::insert_before would crash when called while the viewport filled the screen by @nfachan in [#1329](https://github.com/ratatui/ratatui/pull/1329)\n\n  > Reimplement Terminal::insert_before. The previous implementation would\n  > insert the new lines in chunks into the area between the top of the\n  > screen and the top of the (new) viewport. If the viewport filled the\n  > screen, there would be no area in which to insert lines, and the\n  > function would crash.\n  >\n  > The new implementation uses as much of the screen as it needs to, all\n  > the way up to using the whole screen.\n  >\n  > This commit:\n  > - adds a scrollback buffer to the `TestBackend` so that tests can\n  > inspect and assert the state of the scrollback buffer in addition to the\n  > screen\n  > - adds functions to `TestBackend` to assert the state of the scrollback\n  > - adds and updates `TestBackend` tests to test the behavior of the\n  > scrollback and the new asserting functions\n  > - reimplements `Terminal::insert_before`, including adding two new\n  > helper functions `Terminal::draw_lines` and `Terminal::scroll_up`.\n  > - updates the documentation for `Terminal::insert_before` to clarify\n  > some of the edge cases\n  > - updates terminal tests to assert the state of the scrollback buffer\n  > - adds a new test for the condition that causes the bug\n  > - adds a conversion constructor `Cell::from(char)`\n  >\n  > Fixes:https://github.com/ratatui/ratatui/issues/999\n\n- [fdd5d8c](https://github.com/ratatui/ratatui/commit/fdd5d8c092b33c188b0657f5a2e17fa6712a91ae) *(text)* Remove trailing newline from single-line Display trait impl by @LucasPickering in [#1320](https://github.com/ratatui/ratatui/pull/1320)\n\n- [2fb0b8a](https://github.com/ratatui/ratatui/commit/2fb0b8a741e7e20d4bbef8077e25d63e5ee51d83) *(uncategorized)* Fix u16 overflow in Terminal::insert_before. by @nfachan in [#1323](https://github.com/ratatui/ratatui/pull/1323)\n\n  > If the amount of characters in the screen above the viewport was greater\n  > than u16::MAX, a multiplication would overflow. The multiply was used to\n  > compute the maximum chunk size. The fix is to just do the multiplication\n  > as a usize and also do the subsequent division as a usize.\n  >\n  > There is currently another outstanding issue that limits the amount of\n  > characters that can be inserted when calling Terminal::insert_before to\n  > u16::MAX. However, this bug can still occur even if the viewport and the\n  > amount of characters being inserted are both less than u16::MAX, since\n  > it's dependant on how large the screen is above the viewport.\n  >\n  > Fixes #1322\n\n### Documentation\n\n- [3631b34](https://github.com/ratatui/ratatui/commit/3631b34f538a14840d633de57a0beb59c83bd649) *(examples)* Add widget implementation example by @joshka in [#1147](https://github.com/ratatui/ratatui/pull/1147)\n\n  > This new example documents the various ways to implement widgets in\n  > Ratatui. It demonstrates how to implement the `Widget` trait on a type,\n  > a reference, and a mutable reference. It also shows how to use the\n  > `WidgetRef` trait to render boxed widgets.\n\n- [d5477b5](https://github.com/ratatui/ratatui/commit/d5477b50d54fc43c75924c2b2584331f039ed261) *(examples)* Use ratatui::crossterm in examples by @joshka in [#1315](https://github.com/ratatui/ratatui/pull/1315)\n\n- [730dfd4](https://github.com/ratatui/ratatui/commit/730dfd4940809fb2d8a15ed2976a4016c2227114) *(examples)* Show line gauge in demo example by @montmorill in [#1309](https://github.com/ratatui/ratatui/pull/1309)\n\n- [9ed85fd](https://github.com/ratatui/ratatui/commit/9ed85fd1dddc68757e9258b2e99dbd25f7ba0768) *(table)* Fix incorrect backticks in `TableState` docs by @airblast-dev in [#1342](https://github.com/ratatui/ratatui/pull/1342)\n\n- [6d1bd99](https://github.com/ratatui/ratatui/commit/6d1bd99544ab3b82b2494ca514f307234c6f2477) *(uncategorized)* Minor grammar fixes by @matta in [#1330](https://github.com/ratatui/ratatui/pull/1330)\n\n- [097ee86](https://github.com/ratatui/ratatui/commit/097ee86e399abefdca6505550287035967a7b035) *(uncategorized)* Remove superfluous doc(inline) by @EdJoPaTo in [#1310](https://github.com/ratatui/ratatui/pull/1310)\n\n  > It's no longer needed since #1260\n\n- [3fdb5e8](https://github.com/ratatui/ratatui/commit/3fdb5e8987ca811c094593b0f816a64900880d23) *(uncategorized)* Fix typo in terminal.rs by @mrjackwills in [#1313](https://github.com/ratatui/ratatui/pull/1313)\n\n### Testing\n\n- [0d5f3c0](https://github.com/ratatui/ratatui/commit/0d5f3c091f838888a3cfb69c6de3a0a6af739bbe) *(uncategorized)* Avoid unneeded allocations in assertions by @mo8it in [#1335](https://github.com/ratatui/ratatui/pull/1335)\n\n  > A vector can be compared to an array.\n\n### Miscellaneous Tasks\n\n- [65da535](https://github.com/ratatui/ratatui/commit/65da5357455b11cd395757182f07b0ee22025e4b) *(ci)* Update release strategy by @orhun in [#1337](https://github.com/ratatui/ratatui/pull/1337)\n  >\n  > closes #1232\n  >\n  > Now we can trigger point releases by pushing a tag (follow the\n  > instructions in `RELEASE.md`). This will create a release with generated\n  > changelog.\n  >\n  > There is still a lack of automation (e.g. updating `CHANGELOG.md`), but\n  > this PR is a good start towards improving that.\n\n- [57d8b74](https://github.com/ratatui/ratatui/commit/57d8b742e55b75674e271a83339fc585f62d3a6d) *(ci)* Use cargo-docs-rs to lint docs by @joshka in [#1318](https://github.com/ratatui/ratatui/pull/1318)\n\n- [8b624f5](https://github.com/ratatui/ratatui/commit/8b624f5952af940d570bc95d45b6bd7bf8018dd0) *(maintainers)* Remove EdJoPaTo by @EdJoPaTo in [#1314](https://github.com/ratatui/ratatui/pull/1314)\n\n- [23516bc](https://github.com/ratatui/ratatui/commit/23516bce76af91586b697db339da6b895c9e7151) *(uncategorized)* Rename ratatui-org to ratatui by @joshka in [#1334](https://github.com/ratatui/ratatui/pull/1334)\n\n  > All urls updated to point at https://github.com/ratatui\n  >\n  > To update your repository remotes, you can run the following commands:\n  >\n  > ```shell\n  > git remote set-url origin https://github.com/ratatui/ratatui\n  > ```\n\n### Build\n\n- [0256269](https://github.com/ratatui/ratatui/commit/0256269a7f978c6bba6fcae3e35517b42b3dc846) *(uncategorized)* Simplify Windows build by @joshka in [#1317](https://github.com/ratatui/ratatui/pull/1317)\n\n  > Termion is not supported on Windows, so we need to avoid building it.\n  >\n  > Adds a conditional dependency to the Cargo.toml file to only include\n  > termion when the target is not Windows. This allows contributors to\n  > build using the `--all-features` flag on Windows rather than needing\n  > to specify the features individually.\n\n### New Contributors\n\n* @nfachan made their first contribution in [#1329](https://github.com/ratatui/ratatui/pull/1329)\n* @LucasPickering made their first contribution in [#1320](https://github.com/ratatui/ratatui/pull/1320)\n* @montmorill made their first contribution in [#1309](https://github.com/ratatui/ratatui/pull/1309)\n\n**Full Changelog**: https://github.com/ratatui/ratatui/compare/v0.28.0...v0.28.1\n\n## [0.28.0](https://github.com/ratatui/ratatui/releases/tag/v0.28.0) - 2024-08-07\n\n_\"If you are what you eat, then I only want to eat the good stuff.\" – Remy_\n\nWe are excited to announce the new version of `ratatui` - a Rust library that's all about cooking up TUIs 🐭\n\nIn this version, we have upgraded to Crossterm 0.28.0, introducing enhanced functionality and performance improvements.\nNew features include GraphType::Bar, lines in bar charts, and enhanced scroll/navigation methods.\nWe have also refined the terminal module and added brand new methods for cursor positions and text operations.\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v028/>\n\n⚠️ List of breaking changes can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md).\n\n### Features\n\n- [8d4a102](https://github.com/ratatui/ratatui/commit/8d4a1026ab410a52570737c6d62edcd0a205091e) _(barchart)_ Allow axes to accept Lines by @joshka in [#1273](https://github.com/ratatui/ratatui/pull/1273) [**breaking**]\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1272>\n\n- [a23ecd9](https://github.com/ratatui/ratatui/commit/a23ecd9b456ab2aa4dc858fe31461a6224b40fe3) _(buffer)_ Add Buffer::cell, cell_mut and index implementations by @joshka in [#1084](https://github.com/ratatui/ratatui/pull/1084)\n\n  > Code which previously called `buf.get(x, y)` or `buf.get_mut(x, y)`\n  > should now use index operators, or be transitioned to `buff.cell()` or\n  > `buf.cell_mut()` for safe access that avoids panics by returning\n  > `Option<&Cell>` and `Option<&mut Cell>`.\n  >\n  > The new methods accept `Into<Position>` instead of `x` and `y`\n  > coordinates, which makes them more ergonomic to use.\n  >\n  > ```rust\n  > let mut buffer = Buffer::empty(Rect::new(0, 0, 10, 10));\n  >\n  > let cell = buf[(0, 0)];\n  > let cell = buf[Position::new(0, 0)];\n  >\n  > let symbol = buf.cell((0, 0)).map(|cell| cell.symbol());\n  > let symbol = buf.cell(Position::new(0, 0)).map(|cell| cell.symbol());\n  >\n  > buf[(0, 0)].set_symbol(\"🐀\");\n  > buf[Position::new(0, 0)].set_symbol(\"🐀\");\n  >\n  > buf.cell_mut((0, 0)).map(|cell| cell.set_symbol(\"🐀\"));\n  > buf.cell_mut(Position::new(0, 0)).map(|cell| cell.set_symbol(\"🐀\"));\n  > ```\n  >\n  > The existing `get()` and `get_mut()` methods are marked as deprecated.\n  > These are fairly widely used and we will leave these methods around on\n  > the buffer for a longer time than our normal deprecation approach (2\n  > major release)\n  >\n  > Addresses part of: <https://github.com/ratatui/ratatui/issues/1011>\n  >\n  > ---------\n\n- [afe1534](https://github.com/ratatui/ratatui/commit/afe15349c87efefc5c9f0385f8f145f4b9c42c0a) _(chart)_ Accept `IntoIterator` for axis labels by @EdJoPaTo in [#1283](https://github.com/ratatui/ratatui/pull/1283) [**breaking**]\n\n  > BREAKING CHANGES: #1273 is already breaking and this only advances the\n  > already breaking part\n\n- [5b51018](https://github.com/ratatui/ratatui/commit/5b51018501c859d4e6ee0ff55e010310bda5511f) _(chart)_ Add GraphType::Bar by @joshka in [#1205](https://github.com/ratatui/ratatui/pull/1205)\n\n  > ![Demo](https://vhs.charm.sh/vhs-50v7I5n7lQF7tHCb1VCmFc.gif)\n\n- [f97e07c](https://github.com/ratatui/ratatui/commit/f97e07c08a332e257efabdbe3f8bb306aec2a8eb) _(frame)_ Replace Frame::size() with Frame::area() by @EdJoPaTo in [#1293](https://github.com/ratatui/ratatui/pull/1293)\n\n  > Area is the more correct term for the result of this method.\n  > The Frame::size() method is marked as deprecated and will be\n  > removed around Ratatui version 0.30 or later.\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/pull/1254#issuecomment-2268061409>\n\n- [5b89bd0](https://github.com/ratatui/ratatui/commit/5b89bd04a8a4860dc5040150464b45d1909184db) _(layout)_ Add Size::ZERO and Position::ORIGIN constants by @EdJoPaTo in [#1253](https://github.com/ratatui/ratatui/pull/1253)\n\n- [b2aa843](https://github.com/ratatui/ratatui/commit/b2aa843b310d8df77d16670c302b247fc0315372) _(layout)_ Enable serde for Margin, Position, Rect, Size by @EdJoPaTo in [#1255](https://github.com/ratatui/ratatui/pull/1255)\n\n- [36d49e5](https://github.com/ratatui/ratatui/commit/36d49e549b9e19e87e71c23afaee274fa7415fde) _(table)_ Select first, last, etc to table state by @robertpsoane in [#1198](https://github.com/ratatui/ratatui/pull/1198)\n\n  > Add select_previous, select_next, select_first & select_last to\n  > TableState\n  >\n  > Used equivalent API as in ListState\n\n- [3bb374d](https://github.com/ratatui/ratatui/commit/3bb374df88c79429767d9eb788bda2e65b3ba412) _(terminal)_ Add Terminal::try_draw() method by @joshka in [#1209](https://github.com/ratatui/ratatui/pull/1209)\n\n  > This makes it easier to write fallible rendering methods that can use\n  > the `?` operator\n  >\n  > ```rust\n  > terminal.try_draw(|frame| {\n  >     some_method_that_can_fail()?;\n  >     another_faillible_method()?;\n  >     Ok(())\n  > })?;\n  > ```\n\n- [3725262](https://github.com/ratatui/ratatui/commit/3725262ca384d28a46e03013023a19677b5a35fe) _(text)_ Add `Add` and `AddAssign` implementations for `Line`, `Span`, and `Text` by @joshka in [#1236](https://github.com/ratatui/ratatui/pull/1236)\n\n  > This enables:\n  >\n  > ```rust\n  > let line = Span::raw(\"Red\").red() + Span::raw(\"blue\").blue();\n  > let line = Line::raw(\"Red\").red() + Span::raw(\"blue\").blue();\n  > let line = Line::raw(\"Red\").red() + Line::raw(\"Blue\").blue();\n  > let text = Line::raw(\"Red\").red() + Line::raw(\"Blue\").blue();\n  > let text = Text::raw(\"Red\").red() + Line::raw(\"Blue\").blue();\n  >\n  > let mut line = Line::raw(\"Red\").red();\n  > line += Span::raw(\"Blue\").blue();\n  >\n  > let mut text = Text::raw(\"Red\").red();\n  > text += Line::raw(\"Blue\").blue();\n  >\n  > line.extend(vec![Span::raw(\"1\"), Span::raw(\"2\"), Span::raw(\"3\")]);\n  > ```\n\n- [c34fb77](https://github.com/ratatui/ratatui/commit/c34fb778183b8360ac0a273af16c695c33632b39) _(text)_ Remove unnecessary lifetime from ToText trait by @joshka in [#1234](https://github.com/ratatui/ratatui/pull/1234) [**breaking**]\n  >\n  > BREAKING CHANGE:The ToText trait no longer has a lifetime parameter.\n  > This change simplifies the trait and makes it easier implement.\n\n- [c68ee6c](https://github.com/ratatui/ratatui/commit/c68ee6c64a7c48955a7b26db1db57f8427e35e5c) _(uncategorized)_ Add `get/set_cursor_position()` methods to Terminal and Backend by @EdJoPaTo in [#1284](https://github.com/ratatui/ratatui/pull/1284) [**breaking**]\n\n  > The new methods return/accept `Into<Position>` which can be either a Position or a (u16, u16) tuple.\n  >\n  > ```rust\n  > backend.set_cursor_position(Position { x: 0, y: 20 })?;\n  > let position = backend.get_cursor_position()?;\n  > terminal.set_cursor_position((0, 20))?;\n  > let position = terminal.set_cursor_position()?;\n  > ```\n\n- [b70cd03](https://github.com/ratatui/ratatui/commit/b70cd03c029d91acd4709c2b91c735b8d796987c) _(uncategorized)_ Add ListState / TableState scroll_down_by() / scroll_up_by() methods by @josueBarretogit in [#1267](https://github.com/ratatui/ratatui/pull/1267)\n\n  > Implement new methods `scroll_down_by(u16)` and `scroll_up_by(u16)` for\n  > both `Liststate` and `Tablestate`.\n  >\n  > Closes:#1207\n\n### Bug Fixes\n\n- [864cd9f](https://github.com/ratatui/ratatui/commit/864cd9ffef47c43269fa16e773fc7c6e06d13bf3) _(testbackend)_ Prevent area mismatch by @EdJoPaTo in [#1252](https://github.com/ratatui/ratatui/pull/1252)\n\n  > Removes the height and width fields from TestBackend, which can get\n  > out of sync with the Buffer, which currently clamps to 255,255.\n  >\n  > This changes the `TestBackend` serde representation. It should be\n  > possible to read older data, but data generated after this change\n  > can't be read by older versions.\n\n- [7e1bab0](https://github.com/ratatui/ratatui/commit/7e1bab049bc5acd4a5cb13189e8f86fec5813ab8) _(buffer)_ Dont render control characters by @EdJoPaTo in [#1226](https://github.com/ratatui/ratatui/pull/1226)\n\n- [c08b522](https://github.com/ratatui/ratatui/commit/c08b522d34ef3bfae37342ba1bff897cb320971e) _(chart)_ Allow removing all the axis labels by @EdJoPaTo in [#1282](https://github.com/ratatui/ratatui/pull/1282)\n\n  > `axis.labels(vec![])` removes all the labels correctly.\n  >\n  > This makes calling axis.labels with an empty Vec the equivalent\n  > of not calling axis.labels. It's likely that this is never used, but it\n  > prevents weird cases by removing the mix-up of `Option::None`\n  > and `Vec::is_empty`, and simplifies the implementation code.\n\n- [03f3124](https://github.com/ratatui/ratatui/commit/03f3124c1d83294788213fb4195a708f86eecd4f) _(paragraph)_ Line_width, and line_count include block borders by @airblast-dev in [#1235](https://github.com/ratatui/ratatui/pull/1235)\n\n  > The `line_width`, and `line_count` methods for `Paragraph` would not\n  > take into account the `Block` if one was set. This will now correctly\n  > calculate the values including the `Block`'s width/height.\n  >\n  > Fixes:#1233\n\n- [3ca920e](https://github.com/ratatui/ratatui/commit/3ca920e881f2f78ada27e0ff19a9705bb194e533) _(span)_ Prevent panic on rendering out of y bounds by @EdJoPaTo in [#1257](https://github.com/ratatui/ratatui/pull/1257)\n\n- [84cb164](https://github.com/ratatui/ratatui/commit/84cb16483a76f1eb28f31f4a99075edfd78635f4) _(terminal)_ Make terminal module private by @joshka in [#1260](https://github.com/ratatui/ratatui/pull/1260) [**breaking**]\n\n  > This is a simplification of the public API that is helpful for new users\n  > that are not familiar with how rust re-exports work, and helps avoid\n  > clashes with other modules in the backends that are named terminal.\n  >\n  > BREAKING CHANGE:The `terminal` module is now private and can not be\n  > used directly. The types under this module are exported from the root of\n  > the crate.\n  >\n  > ```diff\n  > - use ratatui::terminal::{CompletedFrame, Frame, Terminal, TerminalOptions, ViewPort};\n  > + use ratatui::{CompletedFrame, Frame, Terminal, TerminalOptions, ViewPort};\n  > ```\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1210>\n\n- [29c8c84](https://github.com/ratatui/ratatui/commit/29c8c84fd05692e8981fc21ae55102bf29835431) _(uncategorized)_ Ignore newlines in Span's Display impl by @SUPERCILEX in [#1270](https://github.com/ratatui/ratatui/pull/1270)\n\n- [cd93547](https://github.com/ratatui/ratatui/commit/cd93547db869aab3dbca49f11667a8091a7077bd) _(uncategorized)_ Remove unnecessary synchronization in layout cache by @SUPERCILEX in [#1245](https://github.com/ratatui/ratatui/pull/1245)\n  >\n  > Layout::init_cache no longer returns bool and takes a NonZeroUsize instead of usize\n  >\n  > The cache is a thread-local, so doesn't make much sense to require\n  > synchronized initialization.\n\n- [b344f95](https://github.com/ratatui/ratatui/commit/b344f95b7cfc3b90221c84cfef8afcf6944bafc1) _(uncategorized)_ Only apply style to first line when rendering a `Line` by @joshka in [#1247](https://github.com/ratatui/ratatui/pull/1247)\n\n  > A `Line` widget should only apply its style to the first line when\n  > rendering and not the entire area. This is because the `Line` widget\n  > should only render a single line of text. This commit fixes the issue by\n  > clamping the area to a single line before rendering the text.\n\n- [7ddfbc0](https://github.com/ratatui/ratatui/commit/7ddfbc0010400f39756a66a666702176e508c5ea) _(uncategorized)_ Unnecessary allocations when creating Lines by @SUPERCILEX in [#1237](https://github.com/ratatui/ratatui/pull/1237)\n\n- [84f3341](https://github.com/ratatui/ratatui/commit/84f334163be2945ca8f5da9e0b244b6413a4d329) _(uncategorized)_ Clippy lints from rust 1.80.0 by @joshka in [#1238](https://github.com/ratatui/ratatui/pull/1238)\n\n### Refactor\n\n- [bb68bc6](https://github.com/ratatui/ratatui/commit/bb68bc6968219dacea8f3c272bb99d142d2f3253) _(backend)_ Return `Size` from `Backend::size` instead of `Rect` by @EdJoPaTo in [#1254](https://github.com/ratatui/ratatui/pull/1254) [**breaking**]\n\n  > The `Backend::size` method returns a `Size` instead of a `Rect`.\n  > There is no need for the position here as it was always 0,0.\n\n- [e81663b](https://github.com/ratatui/ratatui/commit/e81663bec07f46433db7b6eb0154ca48e9389bdb) _(list)_ Split up list.rs into smaller modules by @joshka in [#1204](https://github.com/ratatui/ratatui/pull/1204)\n\n- [e707ff1](https://github.com/ratatui/ratatui/commit/e707ff11d15b5ee10ef2cffc934bb132ee8a1ead) _(uncategorized)_ Internally use Position struct by @EdJoPaTo in [#1256](https://github.com/ratatui/ratatui/pull/1256)\n\n- [32a0b26](https://github.com/ratatui/ratatui/commit/32a0b265253cb83cbf1d51784abf150fed7ef82f) _(uncategorized)_ Simplify WordWrapper implementation by @tranzystorekk in [#1193](https://github.com/ratatui/ratatui/pull/1193)\n\n### Documentation\n\n- [6ce447c](https://github.com/ratatui/ratatui/commit/6ce447c4f344ae7bec11d7f98cdc49ccac800df8) _(block)_ Add docs about style inheritance by @joshka in [#1190](https://github.com/ratatui/ratatui/pull/1190)\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/1129>\n\n- [55e0880](https://github.com/ratatui/ratatui/commit/55e0880d2fef35b328901b4194d39101fe26a9e9) _(block)_ Update block documentation by @leohscl in [#1206](https://github.com/ratatui/ratatui/pull/1206)\n\n  > Update block documentation with constructor methods and setter methods\n  > in the main doc comment Added an example for using it to surround\n  > widgets\n  >\n  > Fixes:<https://github.com/ratatui/ratatui/issues/914>\n\n- [f2fa1ae](https://github.com/ratatui/ratatui/commit/f2fa1ae9aa6f456615c519dcb17d7d3b8177bfb8) _(breaking-changes)_ Add missing code block by @orhun in [#1291](https://github.com/ratatui/ratatui/pull/1291)\n\n- [f687af7](https://github.com/ratatui/ratatui/commit/f687af7c0d1dfc87302d2cf3b9ef7c7d58edb2d3) _(breaking-changes)_ Mention removed lifetime of ToText trait by @orhun in [#1292](https://github.com/ratatui/ratatui/pull/1292)\n\n- [d468463](https://github.com/ratatui/ratatui/commit/d468463fc6aff426131f3ff61dc63291b90b37d1) _(breaking-changes)_ Fix the PR link by @orhun in [#1294](https://github.com/ratatui/ratatui/pull/1294)\n\n- [1b9bdd4](https://github.com/ratatui/ratatui/commit/1b9bdd425cb68bbb5f57900175ad88a9b211f607) _(contributing)_ Fix minor issues by @EdJoPaTo in [#1300](https://github.com/ratatui/ratatui/pull/1300)\n\n- [5f7a7fb](https://github.com/ratatui/ratatui/commit/5f7a7fbe19ecf36c5060a6ba8835d92029a15777) _(examples)_ Update barcharts gifs by @joshka in [#1306](https://github.com/ratatui/ratatui/pull/1306)\n\n- [fe4eeab](https://github.com/ratatui/ratatui/commit/fe4eeab676e8db69a1e4f878173cdda0d96d5f7f) _(examples)_ Simplify the barchart example by @joshka in [#1079](https://github.com/ratatui/ratatui/pull/1079)\n\n  > The `barchart` example has been split into two examples: `barchart` and\n  > `barchart-grouped`. The `barchart` example now shows a simple barchart\n  > with random data, while the `barchart-grouped` example shows a grouped\n  > barchart with fake revenue data.\n  >\n  > This simplifies the examples a bit so they don't cover too much at once.\n  >\n  > - Simplify the rendering functions\n  > - Fix several clippy lints that were marked as allowed\n  >\n  > ---------\n\n- [6e7b4e4](https://github.com/ratatui/ratatui/commit/6e7b4e4d55abcfeb3ffa598086ab227604b26ff7) _(examples)_ Add async example by @joshka in [#1248](https://github.com/ratatui/ratatui/pull/1248)\n\n  > This example demonstrates how to use Ratatui with widgets that fetch\n  > data asynchronously. It uses the `octocrab` crate to fetch a list of\n  > pull requests from the GitHub API. You will need an environment\n  > variable named `GITHUB_TOKEN` with a valid GitHub personal access\n  > token. The token does not need any special permissions.\n\n- [935a718](https://github.com/ratatui/ratatui/commit/935a7187c273e0efc876d094d6247d50e28677a3) _(examples)_ Add missing examples to README by @kibibyt3 in [#1225](https://github.com/ratatui/ratatui/pull/1225)\n  >\n  > Resolves:#1014\n\n- [50e5674](https://github.com/ratatui/ratatui/commit/50e5674a20edad0d95bd103522b21df35b38430b) _(examples)_ Fix: fix typos in tape files by @kibibyt3 in [#1224](https://github.com/ratatui/ratatui/pull/1224)\n\n- [810da72](https://github.com/ratatui/ratatui/commit/810da72f26acd8761031d9a822957df9588ac406) _(examples)_ Fix hyperlink example tape by @kibibyt3 in [#1222](https://github.com/ratatui/ratatui/pull/1222)\n\n- [5eeb1cc](https://github.com/ratatui/ratatui/commit/5eeb1ccbc4e1e1dff4979647f87e91c515a56fd5) _(github)_ Create CODE_OF_CONDUCT.md by @joshka in [#1279](https://github.com/ratatui/ratatui/pull/1279)\n\n- [7c0665c](https://github.com/ratatui/ratatui/commit/7c0665cb0e34eff3ca427d2ada81f043f20cea00) _(layout)_ Fix typo in example by @EmiOnGit in [#1217](https://github.com/ratatui/ratatui/pull/1217)\n\n- [272d059](https://github.com/ratatui/ratatui/commit/272d0591a7efc09897a2566969fbafcb2423fdbc) _(paragraph)_ Update main docs by @joshka in [#1202](https://github.com/ratatui/ratatui/pull/1202)\n\n- [bb71e5f](https://github.com/ratatui/ratatui/commit/bb71e5ffd484fa3296d014d72d8a0521f56c7876) _(readme)_ Remove MSRV by @EdJoPaTo in [#1266](https://github.com/ratatui/ratatui/pull/1266)\n\n  > This notice was useful when the `Cargo.toml` had no standardized field\n  > for this. Now it's easier to look it up in the `Cargo.toml` and it's\n  > also a single point of truth. Updating the README was overlooked for\n  > quite some time so it's better to just omit it rather than having\n  > something wrong that will be forgotten again in the future.\n\n- [8857037](https://github.com/ratatui/ratatui/commit/8857037bfff52104affa3c764dea0f3370cc702c) _(terminal)_ Fix imports by @EdJoPaTo in [#1263](https://github.com/ratatui/ratatui/pull/1263)\n\n- [2fd5ae6](https://github.com/ratatui/ratatui/commit/2fd5ae64bf1440fccf072c1b6aa3dc03dc9ac1ec) _(widgets)_ Document stability of WidgetRef by @joshka in [#1288](https://github.com/ratatui/ratatui/pull/1288)\n\n  > Addresses some confusion about when to implement `WidgetRef` vs `impl\n  > Widget for &W`. Notes the stability rationale and links to an issue that\n  > helps explain the context of where we're at in working this out.\n\n- [716c931](https://github.com/ratatui/ratatui/commit/716c93136e0c0f11e62364fdc9b32ec58036851e) _(uncategorized)_ Document crossterm breaking change by @joshka in [#1281](https://github.com/ratatui/ratatui/pull/1281)\n\n- [f775030](https://github.com/ratatui/ratatui/commit/f77503050ffbe4dd2d4949cb22b451a2b0fe9296) _(uncategorized)_ Update main lib.rs / README examples by @joshka in [#1280](https://github.com/ratatui/ratatui/pull/1280)\n\n- [8433d09](https://github.com/ratatui/ratatui/commit/8433d0958bd0a384383bdefe28e6146de1332e17) _(uncategorized)_ Update demo image by @joshka in [#1276](https://github.com/ratatui/ratatui/pull/1276)\n\n  > Follow up to <https://github.com/ratatui/ratatui/pull/1203>\n\n### Performance\n\n- [663486f](https://github.com/ratatui/ratatui/commit/663486f1e8deae6287d4d0051dfab0682b700423) _(list)_ Avoid extra allocations when rendering `List` by @airblast-dev in [#1244](https://github.com/ratatui/ratatui/pull/1244)\n\n  > When rendering a `List`, each `ListItem` would be cloned. Removing the\n  > clone, and replacing `Widget::render` with `WidgetRef::render_ref` saves\n  > us allocations caused by the clone of the `Text<'_>` stored inside of\n  > `ListItem`.\n  >\n  > Based on the results of running the \"list\" benchmark locally;\n  > Performance is improved by %1-3 for all `render` benchmarks for `List`.\n\n- [4753b72](https://github.com/ratatui/ratatui/commit/4753b7241bf3f33b9d953d301f83baa547e7037c) _(reflow)_ Eliminate most WordWrapper allocations by @SUPERCILEX in [#1239](https://github.com/ratatui/ratatui/pull/1239)\n\n  > On large paragraphs (~1MB), this saves hundreds of thousands of\n  > allocations.\n  >\n  > TL;DR:reuse as much memory as possible across `next_line` calls.\n  > Instead of allocating new buffers each time, allocate the buffers once\n  > and clear them before reuse.\n\n- [be3eb75](https://github.com/ratatui/ratatui/commit/be3eb75ea58127caad6696a21d794f5f99e0dfd6) _(table)_ Avoid extra allocations when rendering `Table` by @airblast-dev in [#1242](https://github.com/ratatui/ratatui/pull/1242)\n\n  > When rendering a `Table` the `Text` stored inside of a `Cell` gets\n  > cloned before rendering. This removes the clone and uses `WidgetRef`\n  > instead, saving us from allocating a `Vec<Line<'_>>` inside `Text`. Also\n  > avoids an allocation when rendering the highlight symbol if it contains\n  > an owned value.\n\n- [f04bf85](https://github.com/ratatui/ratatui/commit/f04bf855cbc28e0ae29eaf678f26425a05f2295e) _(uncategorized)_ Add buffer benchmarks by @joshka in [#1303](https://github.com/ratatui/ratatui/pull/1303)\n\n- [e6d2e04](https://github.com/ratatui/ratatui/commit/e6d2e04bcf2340c901ba1513ddaf84d358751768) _(uncategorized)_ Move benchmarks into a single benchmark harness by @joshka in [#1302](https://github.com/ratatui/ratatui/pull/1302)\n\n  > Consolidates the benchmarks into a single executable rather than having\n  > to create a new cargo.toml setting per and makes it easier to rearrange\n  > these when adding new benchmarks.\n\n### Styling\n\n- [a80a8a6](https://github.com/ratatui/ratatui/commit/a80a8a6a473274aa44a4543d945760123f9d5407) _(format)_ Lint markdown by @joshka in [#1131](https://github.com/ratatui/ratatui/pull/1131)\n\n  > - **chore: Fix line endings for changelog**\n  > - **chore: cleanup markdown lints**\n  > - **ci: add Markdown linter**\n  > - **build: add markdown lint to the makefile**\n  >\n  > ---------\n\n### Testing\n\n- [32d0695](https://github.com/ratatui/ratatui/commit/32d0695cc2d56900d8a6246d9d876393294dd94e) _(buffer)_ Ensure emojis are rendered by @EdJoPaTo in [#1258](https://github.com/ratatui/ratatui/pull/1258)\n\n### Miscellaneous Tasks\n\n- [82b70fd](https://github.com/ratatui/ratatui/commit/82b70fd329885f8ab3cb972b6fe117bc27e3d96a) _(ci)_ Integrate cargo-semver-checks by @orhun in [#1166](https://github.com/ratatui/ratatui/pull/1166)\n\n  > >\n  > [`cargo-semver-checks`](https://github.com/obi1kenobi/cargo-semver-checks):\n  > Lint your crate API changes for semver violations.\n\n- [c245c13](https://github.com/ratatui/ratatui/commit/c245c13cc14ac8c483c4aeb6e2e3b4f8e387b791) _(ci)_ Onboard bencher for tracking benchmarks by @orhun in [#1174](https://github.com/ratatui/ratatui/pull/1174)\n  >\n  > <https://bencher.dev/console/projects/ratatui-org>\n  >\n  > Closes:#1092\n\n- [efef0d0](https://github.com/ratatui/ratatui/commit/efef0d0dc0872ed2b0c5d865ef008698f3051d10) _(ci)_ Change label from `breaking change` to `Type: Breaking Change` by @kdheepak in [#1243](https://github.com/ratatui/ratatui/pull/1243)\n\n  > This PR changes the label that is auto attached to a PR with a breaking\n  > change per the conventional commits specification.\n\n- [41a9100](https://github.com/ratatui/ratatui/commit/41a910004dfe69de135845fac900dd4240a865c7) _(github)_ Use the GitHub organization team as codeowners by @EdJoPaTo in [#1081](https://github.com/ratatui/ratatui/pull/1081)\n\n  > Use GitHub organization team in CODEOWNERS and create MAINTAINERS.md\n\n- [3e7458f](https://github.com/ratatui/ratatui/commit/3e7458fdb8051b9a62aac551372d5592e7f59eb7) _(github)_ Add forums and faqs to the issue template by @joshka in [#1201](https://github.com/ratatui/ratatui/pull/1201)\n\n- [45fcab7](https://github.com/ratatui/ratatui/commit/45fcab7497650685781434e27abf3ddf0459aead) _(uncategorized)_ Add rect::rows benchmark by @joshka in [#1301](https://github.com/ratatui/ratatui/pull/1301)\n\n- [edc2af9](https://github.com/ratatui/ratatui/commit/edc2af98223229656480dd30e03f1230b0aba919) _(uncategorized)_ Replace big_text with hardcoded logo by @joshka in [#1203](https://github.com/ratatui/ratatui/pull/1203)\n\n  > big_text.rs was a copy of the code from tui-big-text and was getting\n  > gradually out of sync with the original crate. It was also rendering\n  > something a bit different than the Ratatui logo. This commit replaces\n  > the big_text.rs file with a much smaller string representation of the\n  > Ratatui logo.\n  >\n  > ![demo2](https://raw.githubusercontent.com/ratatui/ratatui/images/examples/demo2-destroy.gif)\n\n- [c2d3850](https://github.com/ratatui/ratatui/commit/c2d38509b4d6a5d80f721c08d4e8727a37475aa6) _(uncategorized)_ Use LF line endings for CHANGELOG.md instead of CRLF by @joshka in [#1269](https://github.com/ratatui/ratatui/pull/1269)\n\n- [a9fe428](https://github.com/ratatui/ratatui/commit/a9fe4284acfa6ca01260c11b0f64f8f610272d20) _(uncategorized)_ Update cargo-deny config by @EdJoPaTo in [#1265](https://github.com/ratatui/ratatui/pull/1265)\n\n  > Update `cargo-deny` config (noticed in\n  > <https://github.com/ratatui/ratatui/pull/1263#pullrequestreview-2215488414>)\n  >\n  > See <https://github.com/EmbarkStudios/cargo-deny/pull/611>\n\n- [ffc4300](https://github.com/ratatui/ratatui/commit/ffc43005589c9baf90db839f5388d3783d59e963) _(uncategorized)_ Remove executable flag for rs files by @EdJoPaTo in [#1262](https://github.com/ratatui/ratatui/pull/1262)\n\n- [7bab9f0](https://github.com/ratatui/ratatui/commit/7bab9f0d802e154f3551f895399398a4d43d489f) _(uncategorized)_ Add more CompactString::const_new instead of new by @joshka in [#1230](https://github.com/ratatui/ratatui/pull/1230)\n\n- [ccf83e6](https://github.com/ratatui/ratatui/commit/ccf83e6d7610bf74f4ab02e0b1e2fe0e55ad9e78) _(uncategorized)_ Update labels in issue templates by @joshka in [#1212](https://github.com/ratatui/ratatui/pull/1212)\n\n### Build\n\n- [379dab9](https://github.com/ratatui/ratatui/commit/379dab9cdb8f1836836dc3ad6bf411088d610f37) _(uncategorized)_ Cleanup dev dependencies by @EdJoPaTo in [#1231](https://github.com/ratatui/ratatui/pull/1231)\n\n### Continuous Integration\n\n- [476ac87](https://github.com/ratatui/ratatui/commit/476ac87c9937de8863d2e884efdac19c8c1e43d2) _(uncategorized)_ Split up lint job by @EdJoPaTo in [#1264](https://github.com/ratatui/ratatui/pull/1264)\n\n  > This helps with identifying what failed right from the title. Also steps\n  > after a failing one are now always executed.\n  >\n  > Also shortens the steps a bit by removing obvious names.\n\n### New Contributors\n\n- @SUPERCILEX made their first contribution in [#1239](https://github.com/ratatui/ratatui/pull/1239)\n\n- @josueBarretogit made their first contribution in [#1267](https://github.com/ratatui/ratatui/pull/1267)\n- @airblast-dev made their first contribution in [#1242](https://github.com/ratatui/ratatui/pull/1242)\n- @kibibyt3 made their first contribution in [#1225](https://github.com/ratatui/ratatui/pull/1225)\n- @EmiOnGit made their first contribution in [#1217](https://github.com/ratatui/ratatui/pull/1217)\n- @leohscl made their first contribution in [#1206](https://github.com/ratatui/ratatui/pull/1206)\n- @robertpsoane made their first contribution in [#1198](https://github.com/ratatui/ratatui/pull/1198)\n\n**Full Changelog**: <https://github.com/ratatui/ratatui/compare/v0.27.0...0.28.0>\n\n## [0.27.0](https://github.com/ratatui/ratatui/releases/tag/v0.27.0) - 2024-06-24\n\nIn this version, we have focused on enhancing usability and functionality with new features like\nbackground styles for LineGauge, palette colors, and various other improvements including\nimproved performance. Also, we added brand new examples for tracing and creating hyperlinks!\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v027/>\n\n⚠️ List of breaking changes can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md).\n\n### Features\n\n- [eef1afe](https://github.com/ratatui/ratatui/commit/eef1afe9155089dca489a9159c368a5ac07e7585) _(linegauge)_ Allow LineGauge background styles by @nowNick in [#565](https://github.com/ratatui/ratatui/pull/565)\n\n  ```text\n  This PR deprecates `gauge_style` in favor of `filled_style` and\n  `unfilled_style` which can have its foreground and background styled.\n\n  `cargo run --example=line_gauge --features=crossterm`\n  ```\n\n  <https://github.com/ratatui/ratatui/assets/5149215/5fb2ce65-8607-478f-8be4-092e08612f5b>\n\n  Implements:<https://github.com/ratatui/ratatui/issues/424>\n\n- [1365620](https://github.com/ratatui/ratatui/commit/13656206064b53c7f86f179b570c7769399212a3) _(borders)_ Add FULL and EMPTY border sets by @joshka in [#1182](https://github.com/ratatui/ratatui/pull/1182)\n\n  `border::FULL` uses a full block symbol, while `border::EMPTY` uses an\n  empty space. This is useful for when you need to allocate space for the\n  border and apply the border style to a block without actually drawing a\n  border. This makes it possible to style the entire title area or a block\n  rather than just the title content.\n\n```rust\nuse ratatui::{symbols::border, widgets::Block};\nlet block = Block::bordered().title(\"Title\").border_set(border::FULL);\nlet block = Block::bordered().title(\"Title\").border_set(border::EMPTY);\n```\n\n- [7a48c5b](https://github.com/ratatui/ratatui/commit/7a48c5b11b3d51b915ccc187d0499b6e0e88b89d) _(cell)_ Add EMPTY and (const) new method by @EdJoPaTo in [#1143](https://github.com/ratatui/ratatui/pull/1143)\n\n  ```text\n  This simplifies calls to `Buffer::filled` in tests.\n  ```\n\n- [3f2f2cd](https://github.com/ratatui/ratatui/commit/3f2f2cd6abf67a04809ff314025a462a3c2e2446) _(docs)_ Add tracing example by @joshka in [#1192](https://github.com/ratatui/ratatui/pull/1192)\n\n  ```text\n  Add an example that demonstrates logging to a file for:\n  ```\n\n  <https://forum.ratatui.rs/t/how-do-you-println-debug-your-tui-programs/66>\n\n```shell\ncargo run --example tracing\nRUST_LOG=trace cargo run --example=tracing\ncat tracing.log\n```\n\n![Made with VHS](https://vhs.charm.sh/vhs-21jgJCedh2YnFDONw0JW7l.gif)\n\n- [1520ed9](https://github.com/ratatui/ratatui/commit/1520ed9d106f99580a9e529212e43dac06a2f6d2) _(layout)_ Impl Display for Position and Size by @joshka in [#1162](https://github.com/ratatui/ratatui/pull/1162)\n\n- [46977d8](https://github.com/ratatui/ratatui/commit/46977d88519d28ccac1c94e171af0c9cca071dbc) _(list)_ Add list navigation methods (first, last, previous, next) by @joshka in [#1159](https://github.com/ratatui/ratatui/pull/1159) [**breaking**]\n\n  ```text\n  Also cleans up the list example significantly (see also\n  <https://github.com/ratatui/ratatui/issues/1157>)\n  ```\n\n  Fixes:<https://github.com/ratatui/ratatui/pull/1159>\n\n  BREAKING CHANGE:The `List` widget now clamps the selected index to the\n  bounds of the list when navigating with `first`, `last`, `previous`, and\n  `next`, as well as when setting the index directly with `select`.\n\n- [10d7788](https://github.com/ratatui/ratatui/commit/10d778866edea55207ff3f03d063c9fec619b9c9) _(style)_ Add conversions from the palette crate colors by @joshka in [#1172](https://github.com/ratatui/ratatui/pull/1172)\n\n  ````text\n  This is behind the \"palette\" feature flag.\n\n  ```rust\n  use palette::{LinSrgb, Srgb};\n  use ratatui::style::Color;\n\n  let color = Color::from(Srgb::new(1.0f32, 0.0, 0.0));\n  let color = Color::from(LinSrgb::new(1.0f32, 0.0, 0.0));\n  ```\n  ````\n\n- [7ef2dae](https://github.com/ratatui/ratatui/commit/7ef2daee060a7fe964a8de64eafcb6062228e035) _(text)_ support conversion from Display to Span, Line and Text by @orhun in [#1167](https://github.com/ratatui/ratatui/pull/1167)\n\n  ````text\n  Now you can create `Line` and `Text` from numbers like so:\n\n  ```rust\n  let line = 42.to_line();\n  let text = 666.to_text();\n  ```\n  ````\n\n- [74a32af](https://github.com/ratatui/ratatui/commit/74a32afbaef8851f9462b27094d88d518e56addf) _(uncategorized)_ Re-export backends from the ratatui crate by @joshka in [#1151](https://github.com/ratatui/ratatui/pull/1151)\n\n  ```text\n  `crossterm`, `termion`, and `termwiz` can now be accessed as\n  `ratatui::{crossterm, termion, termwiz}` respectively. This makes it\n  possible to just add the Ratatui crate as a dependency and use the\n  backend of choice without having to add the backend crates as\n  dependencies.\n\n  To update existing code, replace all instances of `crossterm::` with\n  `ratatui::crossterm::`, `termion::` with `ratatui::termion::`, and\n  `termwiz::` with `ratatui::termwiz::`.\n  ```\n\n- [3594180](https://github.com/ratatui/ratatui/commit/35941809e11ab43309dd83a8f67bb375f5e7ff2b) _(uncategorized)_ Make Stylize's `.bg(color)` generic by @kdheepak in [#1103](https://github.com/ratatui/ratatui/pull/1103) [**breaking**]\n\n- [0b5fd6b](https://github.com/ratatui/ratatui/commit/0b5fd6bf8eb64662df96900faea3608d4cbb3984) _(uncategorized)_ Add writer() and writer_mut() to termion and crossterm backends by @enricozb in [#991](https://github.com/ratatui/ratatui/pull/991)\n\n  ```text\n  It is sometimes useful to obtain access to the writer if we want to see\n  what has been written so far. For example, when using &mut [u8] as a\n  writer.\n  ```\n\n### Bug Fixes\n\n- [efa965e](https://github.com/ratatui/ratatui/commit/efa965e1e806c60cb1bdb2d1715f960db0857704) _(line)_ Remove newlines when converting strings to Lines by @joshka in [#1191](https://github.com/ratatui/ratatui/pull/1191)\n\n  `Line::from(\"a\\nb\")` now returns a line with two `Span`s instead of 1\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/1111>\n\n- [d370aa7](https://github.com/ratatui/ratatui/commit/d370aa75af99da3e0c41ceb28e2d02ee81cd2538) _(span)_ Ensure that zero-width characters are rendered correctly by @joshka in [#1165](https://github.com/ratatui/ratatui/pull/1165)\n\n- [127d706](https://github.com/ratatui/ratatui/commit/127d706ee4876a58230f42f4a730b18671eae167) _(table)_ Ensure render offset without selection properly by @joshka in [#1187](https://github.com/ratatui/ratatui/pull/1187)\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/1179>\n\n- [4bfdc15](https://github.com/ratatui/ratatui/commit/4bfdc15b80ba14489d359ab1f88564c3bd016c19) _(uncategorized)_ Render of &str and String doesn't respect area.width by @thscharler in [#1177](https://github.com/ratatui/ratatui/pull/1177)\n\n- [e6871b9](https://github.com/ratatui/ratatui/commit/e6871b9e21c25acf1e203f4860198c37aa9429a1) _(uncategorized)_ Avoid unicode-width breaking change in tests by @joshka in [#1171](https://github.com/ratatui/ratatui/pull/1171)\n\n  ```text\n  unicode-width 0.1.13 changed the width of \\u{1} from 0 to 1.\n  Our tests assumed that \\u{1} had a width of 0, so this change replaces\n  the \\u{1} character with \\u{200B} (zero width space) in the tests.\n\n  Upstream issue (closed as won't fix):\n  https://github.com/unicode-rs/unicode-width/issues/55\n  ```\n\n- [7f3efb0](https://github.com/ratatui/ratatui/commit/7f3efb02e6f846fc72079f0921abd2cee09d2d83) _(uncategorized)_ Pin unicode-width crate to 0.1.13 by @joshka in [#1170](https://github.com/ratatui/ratatui/pull/1170)\n\n  ```text\n  semver breaking change in 0.1.13\n  <https://github.com/unicode-rs/unicode-width/issues/55>\n\n  <!-- Please read CONTRIBUTING.md before submitting any pull request. -->\n  ```\n\n- [42cda6d](https://github.com/ratatui/ratatui/commit/42cda6d28706bf83308787ca784f374f6c286a02) _(uncategorized)_ Prevent panic from string_slice by @EdJoPaTo in [#1140](https://github.com/ratatui/ratatui/pull/1140)\n\n  <https://rust-lang.github.io/rust-clippy/master/index.html#string_slice>\n\n### Refactor\n\n- [73fd367](https://github.com/ratatui/ratatui/commit/73fd367a740924ce80ef7a0cd13a66b5094f7a54) _(block)_ Group builder pattern methods by @EdJoPaTo in [#1134](https://github.com/ratatui/ratatui/pull/1134)\n\n- [257db62](https://github.com/ratatui/ratatui/commit/257db6257f392a07ee238b439344d91566beb740) _(cell)_ Must_use and simplify style() by @EdJoPaTo in [#1124](https://github.com/ratatui/ratatui/pull/1124)\n\n  ```text\n  <!-- Please read CONTRIBUTING.md before submitting any pull request. -->\n  ```\n\n- [bf20369](https://github.com/ratatui/ratatui/commit/bf2036987f04d83f4f2b8338fab1b4fd7f4cc81d) _(cell)_ Reset instead of applying default by @EdJoPaTo in [#1127](https://github.com/ratatui/ratatui/pull/1127)\n\n  ```text\n  Using reset is clearer to me what actually happens. On the other case a\n  struct is created to override the old one completely which basically\n  does the same in a less clear way.\n  ```\n\n- [7d175f8](https://github.com/ratatui/ratatui/commit/7d175f85c1905c08adf547dd37cc89c63039f480) _(lint)_ Fix new lint warnings by @EdJoPaTo in [#1178](https://github.com/ratatui/ratatui/pull/1178)\n\n- [cf67ed9](https://github.com/ratatui/ratatui/commit/cf67ed9b884347cef034b09e0e9f9d4aff74ab0a) _(lint)_ Use clippy::or_fun_call by @EdJoPaTo in [#1138](https://github.com/ratatui/ratatui/pull/1138)\n\n  <https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call>\n\n- [4770e71](https://github.com/ratatui/ratatui/commit/4770e715819475cdca2f2ccdbac00cba203cd6d2) _(list)_ Remove deprecated `start_corner` and `Corner` by @Valentin271 in [#759](https://github.com/ratatui/ratatui/pull/759) [**breaking**]\n\n  `List::start_corner` was deprecated in v0.25. Use `List::direction` and\n  `ListDirection` instead.\n\n```diff\n- list.start_corner(Corner::TopLeft);\n- list.start_corner(Corner::TopRight);\n// This is not an error, BottomRight rendered top to bottom previously\n- list.start_corner(Corner::BottomRight);\n// all becomes\n+ list.direction(ListDirection::TopToBottom);\n```\n\n```diff\n- list.start_corner(Corner::BottomLeft);\n// becomes\n+ list.direction(ListDirection::BottomToTop);\n```\n\n`layout::Corner` is removed entirely.\n\n- [4f77910](https://github.com/ratatui/ratatui/commit/4f7791079edd16b54dc8cdfc95bb72b282a09576) _(padding)_ Add Padding::ZERO as a constant by @EdJoPaTo in [#1133](https://github.com/ratatui/ratatui/pull/1133)\n\n  ```text\n  Deprecate Padding::zero()\n  ```\n\n- [8061813](https://github.com/ratatui/ratatui/commit/8061813f324c08e11196e62fca22c2f6b9216b7e) _(uncategorized)_ Expand glob imports by @joshka in [#1152](https://github.com/ratatui/ratatui/pull/1152)\n\n  ```text\n  Consensus is that explicit imports make it easier to understand the\n  example code. This commit removes the prelude import from all examples\n  and replaces it with the necessary imports, and expands other glob\n  imports (widget::*, Constraint::*, KeyCode::*, etc.) everywhere else.\n  Prelude glob imports not in examples are not covered by this PR.\n\n  See https://github.com/ratatui/ratatui/issues/1150 for more details.\n  ```\n\n- [d929971](https://github.com/ratatui/ratatui/commit/d92997105bde15a1fd43829466ec8cc46bffe121) _(uncategorized)_ Dont manually impl Default for defaults by @EdJoPaTo in [#1142](https://github.com/ratatui/ratatui/pull/1142)\n\n  ```text\n  Replace `impl Default` by `#[derive(Default)]` when its implementation\n  equals.\n  ```\n\n- [8a60a56](https://github.com/ratatui/ratatui/commit/8a60a561c95691912cbf41d55866abafcba0127d) _(uncategorized)_ Needless_pass_by_ref_mut by @EdJoPaTo in [#1137](https://github.com/ratatui/ratatui/pull/1137)\n\n  <https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut>\n\n- [1de9a82](https://github.com/ratatui/ratatui/commit/1de9a82b7a871a83995d224785cae139c6f4787b) _(uncategorized)_ Simplify if let by @EdJoPaTo in [#1135](https://github.com/ratatui/ratatui/pull/1135)\n\n  ```text\n  While looking through lints\n  [`clippy::option_if_let_else`](https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else)\n  found these. Other findings are more complex so I skipped them.\n  ```\n\n### Documentation\n\n- [1908b06](https://github.com/ratatui/ratatui/commit/1908b06b4a497ff1cfb2c8d8c165d2a241ee1864) _(borders)_ Add missing closing code blocks by @orhun in [#1195](https://github.com/ratatui/ratatui/pull/1195)\n\n- [38bb196](https://github.com/ratatui/ratatui/commit/38bb19640449c7a3eee3a2fba6450071395e5e06) _(breaking-changes)_ Mention `LineGauge::gauge_style` by @orhun in [#1194](https://github.com/ratatui/ratatui/pull/1194)\n\n  see #565\n\n- [07efde5](https://github.com/ratatui/ratatui/commit/07efde5233752e1bcb7ae94a91b9e36b7fadb01b) _(examples)_ Add hyperlink example by @joshka in [#1063](https://github.com/ratatui/ratatui/pull/1063)\n\n- [7fdccaf](https://github.com/ratatui/ratatui/commit/7fdccafd52f4ddad1a3c9dda59fada59af21ecfa) _(examples)_ Add vhs tapes for constraint-explorer and minimal examples by @joshka in [#1164](https://github.com/ratatui/ratatui/pull/1164)\n\n- [4f307e6](https://github.com/ratatui/ratatui/commit/4f307e69db058891675d0f12d75ef49006c511d6) _(examples)_ Simplify paragraph example by @joshka in [#1169](https://github.com/ratatui/ratatui/pull/1169)\n\n  Related:<https://github.com/ratatui/ratatui/issues/1157>\n\n- [f429f68](https://github.com/ratatui/ratatui/commit/f429f688da536a52266144e63a1a7897ec6b7f26) _(examples)_ Remove lifetimes from the List example by @matta in [#1132](https://github.com/ratatui/ratatui/pull/1132)\n\n  ```text\n  Simplify the List example by removing lifetimes not strictly necessary\n  to demonstrate how Ratatui lists work. Instead, the sample strings are\n  copied into each `TodoItem`. To further simplify, I changed the code to\n  use a new TodoItem::new function, rather than an implementation of the\n  `From` trait.\n  ```\n\n- [308c1df](https://github.com/ratatui/ratatui/commit/308c1df6495ee4373f808007a1566ca7e9279933) _(readme)_ Add links to forum by @joshka in [#1188](https://github.com/ratatui/ratatui/pull/1188)\n\n- [2f8a936](https://github.com/ratatui/ratatui/commit/2f8a9363fc6c54fe2b10792c9f57fbb40b06bc0f) _(uncategorized)_ Fix links on docs.rs by @EdJoPaTo in [#1144](https://github.com/ratatui/ratatui/pull/1144)\n\n  ```text\n  This also results in a more readable Cargo.toml as the locations of the\n  things are more obvious now.\n\n  Includes rewording of the underline-color feature.\n\n  Logs of the errors: https://docs.rs/crate/ratatui/0.26.3/builds/1224962\n  Also see #989\n  ```\n\n### Performance\n\n- [4ce67fc](https://github.com/ratatui/ratatui/commit/4ce67fc84e3bc472e9ae97aece85f8ffae091834) _(buffer)_ Filled moves the cell to be filled by @EdJoPaTo in [#1148](https://github.com/ratatui/ratatui/pull/1148) [**breaking**]\n\n- [8b447ec](https://github.com/ratatui/ratatui/commit/8b447ec4d6276c3110285e663417487ff18dafc1) _(rect)_ `Rect::inner` takes `Margin` directly instead of reference by @EdJoPaTo in [#1008](https://github.com/ratatui/ratatui/pull/1008) [**breaking**]\n\n  BREAKING CHANGE:Margin needs to be passed without reference now.\n\n```diff\n-let area = area.inner(&Margin {\n+let area = area.inner(Margin {\n     vertical: 0,\n     horizontal: 2,\n });\n```\n\n### Styling\n\n- [df4b706](https://github.com/ratatui/ratatui/commit/df4b706674de806bdf2a1fb8c04d0654b6b0b891) _(uncategorized)_ Enable more rustfmt settings by @EdJoPaTo in [#1125](https://github.com/ratatui/ratatui/pull/1125)\n\n### Testing\n\n- [d6587bc](https://github.com/ratatui/ratatui/commit/d6587bc6b0db955aeac6af167e1b8ef81a3afcc9) _(style)_ Use rstest by @EdJoPaTo in [#1136](https://github.com/ratatui/ratatui/pull/1136)\n\n  ```text\n  <!-- Please read CONTRIBUTING.md before submitting any pull request. -->\n  ```\n\n### Miscellaneous Tasks\n\n- [7b45f74](https://github.com/ratatui/ratatui/commit/7b45f74b719ff18329ddbf9f05a9ac53bf06f71d) _(prelude)_ Add / remove items by @joshka in [#1149](https://github.com/ratatui/ratatui/pull/1149) [**breaking**]\n\n  ```text\n  his PR removes the items from the prelude that don't form a coherent\n  common vocabulary and adds the missing items that do.\n\n  Based on a comment at\n  <https://www.reddit.com/r/rust/comments/1cle18j/comment/l2uuuh7/>\n  ```\n\n  BREAKING CHANGE:The following items have been removed from the prelude:\n\n- `style::Styled` - this trait is useful for widgets that want to\n  support the Stylize trait, but it adds complexity as widgets have two\n  `style` methods and a `set_style` method.\n- `symbols::Marker` - this item is used by code that needs to draw to\n  the `Canvas` widget, but it's not a common item that would be used by\n  most users of the library.\n- `terminal::{CompletedFrame, TerminalOptions, Viewport}` - these items\n  are rarely used by code that needs to interact with the terminal, and\n  they're generally only ever used once in any app.\n\nThe following items have been added to the prelude:\n\n- `layout::{Position, Size}` - these items are used by code that needs\n  to interact with the layout system. These are newer items that were\n  added in the last few releases, which should be used more liberally.\n\n- [cd64367](https://github.com/ratatui/ratatui/commit/cd64367e244a1588206f653fd79678ce62a86a2f) _(symbols)_ Add tests for line symbols by @joshka in [#1186](https://github.com/ratatui/ratatui/pull/1186)\n\n- [8cfc316](https://github.com/ratatui/ratatui/commit/8cfc316bccb48e88660d14cd18c0df2264c4d6ce) _(uncategorized)_ Alphabetize examples in Cargo.toml by @joshka in [#1145](https://github.com/ratatui/ratatui/pull/1145)\n\n### Build\n\n- [70df102](https://github.com/ratatui/ratatui/commit/70df102de0154cdfbd6508659cf6ed649f820bc8) _(bench)_ Improve benchmark consistency by @EdJoPaTo in [#1126](https://github.com/ratatui/ratatui/pull/1126)\n\n  ```text\n  Codegen units are optimized on their own. Per default bench / release\n  have 16 codegen units. What ends up in a codeget unit is rather random\n  and can influence a benchmark result as a code change can move stuff\n  into a different codegen unit → prevent / allow LLVM optimizations\n  unrelated to the actual change.\n\n  More details: https://doc.rust-lang.org/cargo/reference/profiles.html\n  ```\n\n### New Contributors\n\n- @thscharler made their first contribution in [#1177](https://github.com/ratatui/ratatui/pull/1177)\n- @matta made their first contribution in [#1132](https://github.com/ratatui/ratatui/pull/1132)\n- @nowNick made their first contribution in [#565](https://github.com/ratatui/ratatui/pull/565)\n- @enricozb made their first contribution in [#991](https://github.com/ratatui/ratatui/pull/991)\n\n**Full Changelog**: <https://github.com/ratatui/ratatui/compare/v0.26.3...v0.27.0>\n\n## [0.26.3](https://github.com/ratatui/ratatui/releases/tag/v0.26.3) - 2024-05-19\n\nWe are happy to announce a brand new [**Ratatui Forum**](https://forum.ratatui.rs) 🐭 for Rust & TUI enthusiasts.\n\nThis is a patch release that fixes the unicode truncation bug, adds performance and quality of life improvements.\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v0263/>\n\n### Features\n\n- [97ee102](https://github.com/ratatui/ratatui/commit/97ee102f179eed4f309d575495f0e4c8359b4f04) _(buffer)_ Track_caller for index_of by @EdJoPaTo in [#1046](https://github.com/ratatui/ratatui/pull/1046)\n**\n\n  ````text\n  The caller put in the wrong x/y -> the caller is the cause.\n  ````\n\n- [bf09234](https://github.com/ratatui/ratatui/commit/bf0923473c5cb7f2cff24b010f0072b5ce2f8cf2) _(table)_ Make TableState::new const by @EdJoPaTo in [#1040](https://github.com/ratatui/ratatui/pull/1040)\n\n- [eb281df](https://github.com/ratatui/ratatui/commit/eb281df97482c2aab66875dc27a49a316a4d7fd7) _(uncategorized)_ Use inner Display implementation by @EdJoPaTo in [#1097](https://github.com/ratatui/ratatui/pull/1097)\n\n- [ec763af](https://github.com/ratatui/ratatui/commit/ec763af8512df731799c8f30c38c37252068a4c4) _(uncategorized)_ Make Stylize's `.bg(color)` generic by @kdheepak in [#1099](https://github.com/ratatui/ratatui/pull/1099)\n\n  ````text\n  This PR makes `.bg(color)` generic accepting anything that can be\n  converted into `Color`; similar to the `.fg(color)` method on the same\n  trait\n  ````\n\n- [4d1784f](https://github.com/ratatui/ratatui/commit/4d1784f2de104b88e998216addaae96ab018f44f) _(uncategorized)_ Re-export ParseColorError as style::ParseColorError by @joshka in [#1086](https://github.com/ratatui/ratatui/pull/1086)\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/1085>\n\n### Bug Fixes\n\n- [366cbae](https://github.com/ratatui/ratatui/commit/366cbae09fb2bf5b5d7f489de1ff15f930569f05) _(buffer)_ Fix Debug panic and fix formatting of overridden parts by @EdJoPaTo in [#1098](https://github.com/ratatui/ratatui/pull/1098)\n\n  ````text\n  Fix panic in `Debug for Buffer` when `width == 0`.\n  Also corrects the output when symbols are overridden.\n  ````\n\n- [4392759](https://github.com/ratatui/ratatui/commit/43927595012254b33a3901e0d2e5d28164ad04f0) _(examples)_ Changed user_input example to work with multi-byte unicode chars by @OkieOth in [#1069](https://github.com/ratatui/ratatui/pull/1069)\n\n  ````text\n  This is the proposed solution for issue #1068. It solves the bug in the\n  user_input example with multi-byte UTF-8 characters as input.\n  ````\n\n  Fixes:#1068\n\n---------\n\n- [20fc0dd](https://github.com/ratatui/ratatui/commit/20fc0ddfca97a863c9ec7537bcf283d3d49baab4) _(examples)_ Fix key handling in constraints by @psobolik in [#1066](https://github.com/ratatui/ratatui/pull/1066)\n\n  ````text\n  Add check for `KeyEventKind::Press` to constraints example's event\n  handler to eliminate double keys\n  on Windows.\n  ````\n\n  Fixes:#1062\n\n---------\n\n- [f4637d4](https://github.com/ratatui/ratatui/commit/f4637d40c35e068fd60d17c9a42b9114667c9861) _(reflow)_ Allow wrapping at zero width whitespace by @kxxt in [#1074](https://github.com/ratatui/ratatui/pull/1074)\n\n- [699c2d7](https://github.com/ratatui/ratatui/commit/699c2d7c8d0e8c2023cf75350b66535a7b48a102) _(uncategorized)_ Unicode truncation bug by @joshka in [#1089](https://github.com/ratatui/ratatui/pull/1089)\n\n  ````text\n  - Rewrote the line / span rendering code to take into account how\n  multi-byte / wide emoji characters are truncated when rendering into\n  areas that cannot accommodate them in the available space\n  - Added comprehensive coverage over the edge cases\n  - Adds a benchmark to ensure perf\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/1032>\n\n- [b30411d](https://github.com/ratatui/ratatui/commit/b30411d1c71cb7b43b7232226514caa54a56c25f) _(uncategorized)_ Termwiz underline color test by @joshka in [#1094](https://github.com/ratatui/ratatui/pull/1094)\n\n  ````text\n  Fixes code that doesn't compile in the termwiz tests when\n  underline-color feature is enabled.\n  ````\n\n- [5f1e119](https://github.com/ratatui/ratatui/commit/5f1e119563043e97e5c2c5e7dd48ccd75e17791e) _(uncategorized)_ Correct feature flag typo for termwiz by @joshka in [#1088](https://github.com/ratatui/ratatui/pull/1088)\n\n  ````text\n  underline-color was incorrectly spelt as underline_color\n  ````\n\n- [0a16496](https://github.com/ratatui/ratatui/commit/0a164965ea2b163433871717cee4fd774a23ee5a) _(uncategorized)_ Use `to_string` to serialize Color by @SleepySwords in [#934](https://github.com/ratatui/ratatui/pull/934)\n\n  ````text\n  Since deserialize now uses `FromStr` to deserialize color, serializing\n  `Color` RGB values, as well as index values, would produce an output\n  that would no longer be able to be deserialized without causing an\n  error.\n  ````\n\n  Color::Rgb will now be serialized as the hex representation of their\nvalue.\nFor example, with serde_json, `Color::Rgb(255, 0, 255)` would be\nserialized as `\"#FF00FF\"` rather than `{\"Rgb\": [255, 0, 255]}`.\n\n  Color::Indexed will now be serialized as just the string of the index.\nFor example, with serde_json, `Color::Indexed(10)` would be serialized\nas `\"10\"` rather than `{\"Indexed\": 10}`.\n\nOther color variants remain the same.\n\n### Refactor\n\n- [2cfe82a](https://github.com/ratatui/ratatui/commit/2cfe82a47eb34baa25f474db7be364de7b95374a) _(buffer)_ Deprecate assert_buffer_eq! in favor of assert_eq! by @EdJoPaTo in [#1007](https://github.com/ratatui/ratatui/pull/1007)\n\n  ````text\n  - Simplify `assert_buffer_eq!` logic.\n  - Deprecate `assert_buffer_eq!`.\n  - Introduce `TestBackend::assert_buffer_lines`.\n\n  Also simplify many tests involving buffer comparisons.\n\n  For the deprecation, just use `assert_eq` instead of `assert_buffer_eq`:\n\n  ```diff\n  -assert_buffer_eq!(actual, expected);\n  +assert_eq!(actual, expected);\n  ```\n\n  ---\n\n  I noticed `assert_buffer_eq!` creating no test coverage reports and\n  looked into this macro. First I simplified it. Then I noticed a bunch of\n  `assert_eq!(buffer, …)` and other indirect usages of this macro (like\n  `TestBackend::assert_buffer`).\n\n  The good thing here is that it's mainly used in tests so not many\n  changes to the library code.\n  ````\n\n- [baedc39](https://github.com/ratatui/ratatui/commit/baedc39494ea70292b1d247934420a20d0544b7e) _(buffer)_ Simplify set_stringn logic by @EdJoPaTo in [#1083](https://github.com/ratatui/ratatui/pull/1083)\n\n- [9bd89c2](https://github.com/ratatui/ratatui/commit/9bd89c218afb1f3999dce1bfe6edea5b7442966d) _(clippy)_ Enable breaking lint checks by @EdJoPaTo in [#988](https://github.com/ratatui/ratatui/pull/988)\n\n  ````text\n  We need to make sure to not change existing methods without a notice.\n  But at the same time this also finds public additions with mistakes\n  before they are even released which is what I would like to have.\n\n  This renames a method and deprecated the old name hinting to a new name.\n  Should this be mentioned somewhere, so it's added to the release notes?\n  It's not breaking because the old method is still there.\n  ````\n\n- [bef5bcf](https://github.com/ratatui/ratatui/commit/bef5bcf750375a78b11ae06f217091b2463e842f) _(example)_ Remove pointless new method by @EdJoPaTo in [#1038](https://github.com/ratatui/ratatui/pull/1038)\n\n  ````text\n  Use `App::default()` directly.\n  ````\n\n- [f3172c5](https://github.com/ratatui/ratatui/commit/f3172c59d4dae6ce4909251976a39c21d88f1907) _(gauge)_ Fix internal typo by @EdJoPaTo in [#1048](https://github.com/ratatui/ratatui/pull/1048)\n\n### Documentation\n\n- [da1ade7](https://github.com/ratatui/ratatui/commit/da1ade7b2e4d8909ea0001483780d2c907349fd6) _(github)_ Update code owners about past maintainers by @orhun in [#1073](https://github.com/ratatui/ratatui/pull/1073)\n\n  ````text\n  As per suggestion in\n  https://github.com/ratatui/ratatui/pull/1067#issuecomment-2079766990\n\n  It's good for historical purposes!\n  ````\n\n- [3687f78](https://github.com/ratatui/ratatui/commit/3687f78f6a06bd175eda3e19819f6dc68012fb59) _(github)_ Update code owners by @orhun in [#1067](https://github.com/ratatui/ratatui/pull/1067)\n\n  ````text\n  Removes the team members that are not able to review PRs recently (with\n  their approval ofc)\n  ````\n\n- [839cca2](https://github.com/ratatui/ratatui/commit/839cca20bf3f109352ea43f1119e13c879e04b95) _(table)_ Fix typo in docs for highlight_symbol by @kdheepak in [#1108](https://github.com/ratatui/ratatui/pull/1108)\n\n- [f945a0b](https://github.com/ratatui/ratatui/commit/f945a0bcff644c1fa2ad3caaa87cf2b640beaf46) _(test)_ Fix typo in TestBackend documentation by @orhun in [#1107](https://github.com/ratatui/ratatui/pull/1107)\n\n- [828d17a](https://github.com/ratatui/ratatui/commit/828d17a3f5f449255d7981bb462bf48382c7cb2e) _(uncategorized)_ Add minimal example by @joshka in [#1114](https://github.com/ratatui/ratatui/pull/1114)\n\n- [e95230b](https://github.com/ratatui/ratatui/commit/e95230beda9f86dfb7a9bc1c1167e5a91a2748c3) _(uncategorized)_ Add note about scrollbar state content length by @Utagai in [#1077](https://github.com/ratatui/ratatui/pull/1077)\n\n### Performance\n\n- [366c2a0](https://github.com/ratatui/ratatui/commit/366c2a0e6d17810b26ba37918e72c2f784176d2c) _(block)_ Use Block::bordered by @EdJoPaTo in [#1041](https://github.com/ratatui/ratatui/pull/1041)\n\n  `Block::bordered()` is shorter than\n\n  `Block::new().borders(Borders::ALL)`, requires one less import\n(`Borders`) and in case `Block::default()` was used before can even be\n`const`.\n\n- [2e71c18](https://github.com/ratatui/ratatui/commit/2e71c1874e2de6d9f2bd21622246e55484a9fc62) _(buffer)_ Simplify Buffer::filled with macro by @EdJoPaTo in [#1036](https://github.com/ratatui/ratatui/pull/1036)\n\n  ````text\n  The `vec![]` macro is highly optimized by the Rust team and shorter.\n  Don't do it manually.\n\n  This change is mainly cleaner code. The only production code that uses\n  this is `Terminal::with_options` and `Terminal::insert_before` so it's\n  not performance relevant on every render.\n  ````\n\n- [81b9633](https://github.com/ratatui/ratatui/commit/81b96338ea41f9e5fbb0868808a0b450f31eef41) _(calendar)_ Use const fn by @EdJoPaTo in [#1039](https://github.com/ratatui/ratatui/pull/1039)\n\n  ````text\n  Also, do the comparison without `as u8`. Stays the same at runtime and\n  is cleaner code.\n  ````\n\n- [c442dfd](https://github.com/ratatui/ratatui/commit/c442dfd1ad4896e7abeeaac1754b94bae1f8d014) _(canvas)_ Change map data to const instead of static by @EdJoPaTo in [#1037](https://github.com/ratatui/ratatui/pull/1037)\n\n- [1706b0a](https://github.com/ratatui/ratatui/commit/1706b0a3e434c51dfed9af88470f47162b615c33) _(crossterm)_ Speed up combined fg and bg color changes by up to 20% by @joshka in [#1072](https://github.com/ratatui/ratatui/pull/1072)\n\n- [1a4bb1c](https://github.com/ratatui/ratatui/commit/1a4bb1cbb8dc98ab3c9ecfce225a591b0f7a36bc) _(layout)_ Avoid allocating memory when using split ergonomic utils by @tranzystorekk in [#1105](https://github.com/ratatui/ratatui/pull/1105)\n\n  ````text\n  Don't create intermediate vec in `Layout::areas` and\n  `Layout::spacers` when there's no need for one.\n  ````\n\n### Styling\n\n- [aa4260f](https://github.com/ratatui/ratatui/commit/aa4260f92c869ed77123fab700f9f20b059bbe07) _(uncategorized)_ Use std::fmt instead of importing Debug and Display by @joshka in [#1087](https://github.com/ratatui/ratatui/pull/1087)\n\n  ````text\n  This is a small universal style change to avoid making this change a\n  part of other PRs.\n\n  [rationale](https://github.com/ratatui/ratatui/pull/1083#discussion_r1588466060)\n  ````\n\n### Testing\n\n- [3cc29bd](https://github.com/ratatui/ratatui/commit/3cc29bdada096283f1fa89d0a610fa6fd5425f9b) _(block)_ Use rstest to simplify test cases by @EdJoPaTo in [#1095](https://github.com/ratatui/ratatui/pull/1095)\n\n### Miscellaneous Tasks\n\n- [5fbb77a](https://github.com/ratatui/ratatui/commit/5fbb77ad205ccff763d71899c2f5a34560d25b92) _(readme)_ Use terminal theme for badges by @TadoTheMiner in [#1026](https://github.com/ratatui/ratatui/pull/1026)\n\n  ````text\n  The badges in the readme were all the default theme. Giving them\n  prettier colors that match the terminal gif is better. I've used the\n  colors from the VHS repo.\n  ````\n\n- [bef2bc1](https://github.com/ratatui/ratatui/commit/bef2bc1e7c012ecbf357ac54a5262304646b292d) _(cargo)_ Add homepage to Cargo.toml by @joshka in [#1080](https://github.com/ratatui/ratatui/pull/1080)\n\n- [76e5fe5](https://github.com/ratatui/ratatui/commit/76e5fe5a9a1934aa7cce8f0d48c1c9035ac0bf41) _(uncategorized)_ Revert \"Make Stylize's `.bg(color)` generic\" by @kdheepak in [#1102](https://github.com/ratatui/ratatui/pull/1102)\n\n  ````text\n  This reverts commit ec763af8512df731799c8f30c38c37252068a4c4 from #1099\n  ````\n\n- [64eb391](https://github.com/ratatui/ratatui/commit/64eb3913a4776db290baeb4179e00d2686d42934) _(uncategorized)_ Fixup cargo lint for windows targets by @joshka in [#1071](https://github.com/ratatui/ratatui/pull/1071)\n\n  ````text\n  Crossterm brings in multiple versions of the same dep\n  ````\n\n- [326a461](https://github.com/ratatui/ratatui/commit/326a461f9a345ba853d57afefc8d77ba0b0b5a14) _(uncategorized)_ Add package categories field by @mcskware in [#1035](https://github.com/ratatui/ratatui/pull/1035)\n\n  ````text\n  Add the package categories field in Cargo.toml, with value\n  `[\"command-line-interface\"]`. This fixes the (currently non-default)\n  clippy cargo group lint\n  [`clippy::cargo_common_metadata`](https://rust-lang.github.io/rust-clippy/master/index.html#/cargo_common_metadata).\n\n  As per discussion in [Cargo package categories\n  suggestions](https://github.com/ratatui/ratatui/discussions/1034),\n  this lint is not suggested to be run by default in CI, but rather as an\n  occasional one-off as part of the larger\n  [`clippy::cargo`](https://doc.rust-lang.org/stable/clippy/lints.html#cargo)\n  lint group.\n  ````\n\n### Build\n\n- [4955380](https://github.com/ratatui/ratatui/commit/4955380932ab4d657be15dd6c65f48334795c785) _(uncategorized)_ Remove pre-push hooks by @joshka in [#1115](https://github.com/ratatui/ratatui/pull/1115)\n\n- [28e81c0](https://github.com/ratatui/ratatui/commit/28e81c0714d55f0103d9f075609bcf7e5f551fb1) _(uncategorized)_ Add underline-color to all features flag in makefile by @joshka in [#1100](https://github.com/ratatui/ratatui/pull/1100)\n\n- [c75aa19](https://github.com/ratatui/ratatui/commit/c75aa1990f5c1e7e86de0fafc9ce0c1b1dcac3ea) _(uncategorized)_ Add clippy::cargo lint by @joshka in [#1053](https://github.com/ratatui/ratatui/pull/1053)\n\n  ````text\n  Followup to https://github.com/ratatui/ratatui/pull/1035 and\n  https://github.com/ratatui/ratatui/discussions/1034\n\n  It's reasonable to enable this and deal with breakage by fixing any\n  specific issues that arise.\n  ````\n\n### New Contributors\n\n- @Utagai made their first contribution in [#1077](https://github.com/ratatui/ratatui/pull/1077)\n- @kxxt made their first contribution in [#1074](https://github.com/ratatui/ratatui/pull/1074)\n- @OkieOth made their first contribution in [#1069](https://github.com/ratatui/ratatui/pull/1069)\n- @psobolik made their first contribution in [#1066](https://github.com/ratatui/ratatui/pull/1066)\n- @SleepySwords made their first contribution in [#934](https://github.com/ratatui/ratatui/pull/934)\n- @mcskware made their first contribution in [#1035](https://github.com/ratatui/ratatui/pull/1035)\n\n**Full Changelog**: <https://github.com/ratatui/ratatui/compare/v0.26.2...v0.26.3>\n\n## [0.26.2](https://github.com/ratatui/ratatui/releases/tag/v0.26.2) - 2024-04-15\n\nThis is a patch release that fixes bugs and adds enhancements, including new iterator constructors, List scroll padding, and various rendering improvements. ✨\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v0262/>\n\n### Features\n\n- [11b452d](https://github.com/ratatui/ratatui/commit/11b452d56fe590188ee7a53fa2dde95513b1a4c7)\n  _(layout)_ Mark various functions as const by @EdJoPaTo in [#951](https://github.com/ratatui/ratatui/pull/951)\n\n- [1cff511](https://github.com/ratatui/ratatui/commit/1cff51193466f5a94d202b6233d56889eccf6d7b)\n  _(line)_ Impl Styled for Line by @joshka in [#968](https://github.com/ratatui/ratatui/pull/968)\n\n  ````text\n  This adds `FromIterator` impls for `Line` and `Text` that allow creating\n  `Line` and `Text` instances from iterators of `Span` and `Line`\n  instances, respectively.\n\n  ```rust\n  let line = Line::from_iter(vec![\"Hello\".blue(), \" world!\".green()]);\n  let line: Line = iter::once(\"Hello\".blue())\n      .chain(iter::once(\" world!\".green()))\n      .collect();\n  let text = Text::from_iter(vec![\"The first line\", \"The second line\"]);\n  let text: Text = iter::once(\"The first line\")\n      .chain(iter::once(\"The second line\"))\n      .collect();\n  ```\n  ````\n\n- [654949b](https://github.com/ratatui/ratatui/commit/654949bb00b4522130642f9ad50ab4d9095d921b)\n  _(list)_ Add Scroll Padding to Lists by @CameronBarnes in [#958](https://github.com/ratatui/ratatui/pull/958)\n\n  ````text\n  Introduces scroll padding, which allows the api user to request that a certain number of ListItems be kept visible above and below the currently selected item while scrolling.\n\n  ```rust\n  let list = List::new(items).scroll_padding(1);\n  ```\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/pull/955>\n\n- [26af650](https://github.com/ratatui/ratatui/commit/26af65043ee9f165459dec228d12eaeed9997d92)\n  _(text)_ Add push methods for text and line by @joshka in [#998](https://github.com/ratatui/ratatui/pull/998)\n\n  ````text\n  Adds the following methods to the `Text` and `Line` structs:\n  - Text::push_line\n  - Text::push_span\n  - Line::push_span\n\n  This allows for adding lines and spans to a text object without having\n  to call methods on the fields directly, which is useful for incremental\n  construction of text objects.\n  ````\n\n- [b5bdde0](https://github.com/ratatui/ratatui/commit/b5bdde079e0e1eda98b9b1bbbba011b770e5b167)\n  _(text)_ Add `FromIterator` impls for `Line` and `Text` by @joshka in [#967](https://github.com/ratatui/ratatui/pull/967)\n\n  ````text\n  This adds `FromIterator` impls for `Line` and `Text` that allow creating\n  `Line` and `Text` instances from iterators of `Span` and `Line`\n  instances, respectively.\n\n  ```rust\n  let line = Line::from_iter(vec![\"Hello\".blue(), \" world!\".green()]);\n  let line: Line = iter::once(\"Hello\".blue())\n      .chain(iter::once(\" world!\".green()))\n      .collect();\n  let text = Text::from_iter(vec![\"The first line\", \"The second line\"]);\n  let text: Text = iter::once(\"The first line\")\n      .chain(iter::once(\"The second line\"))\n      .collect();\n  ```\n  ````\n\n- [12f67e8](https://github.com/ratatui/ratatui/commit/12f67e810fad0f907546408192a2380b590ff7bd)\n  _(uncategorized)_ Impl Widget for `&str` and `String` by @kdheepak in [#952](https://github.com/ratatui/ratatui/pull/952)\n\n  ````text\n  Currently, `f.render_widget(\"hello world\".bold(), area)` works but\n  `f.render_widget(\"hello world\", area)` doesn't. This PR changes that my\n  implementing `Widget` for `&str` and `String`. This makes it easier to\n  render strings with no styles as widgets.\n\n  Example usage:\n\n  ```rust\n  terminal.draw(|f| f.render_widget(\"Hello World!\", f.size()))?;\n  ```\n\n  ---------\n  ````\n\n### Bug Fixes\n\n- [0207160](https://github.com/ratatui/ratatui/commit/02071607848c51250b4663722c52e19c8ce1c5e2)\n  _(line)_ Line truncation respects alignment by @TadoTheMiner in [#987](https://github.com/ratatui/ratatui/pull/987)\n\n  ````text\n  When rendering a `Line`, the line will be truncated:\n  - on the right for left aligned lines\n  - on the left for right aligned lines\n  - on bot sides for centered lines\n\n  E.g. \"Hello World\" will be rendered as \"Hello\", \"World\", \"lo wo\" for\n  left, right, centered lines respectively.\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/932>\n\n- [c56f49b](https://github.com/ratatui/ratatui/commit/c56f49b9fb1c7f1c8c97749119e85f81882ca9a9)\n  _(list)_ Saturating_sub to fix highlight_symbol overflow by @mrjackwills in [#949](https://github.com/ratatui/ratatui/pull/949)\n\n  ````text\n  An overflow (pedantically an underflow) can occur if the\n  highlight_symbol is a multi-byte char, and area is reduced to a size\n  less than that char length.\n  ````\n\n- [b7778e5](https://github.com/ratatui/ratatui/commit/b7778e5cd15d0d4b28f7bbb8b3c62950748e333a)\n  _(paragraph)_ Unit test typo by @joshka in [#1022](https://github.com/ratatui/ratatui/pull/1022)\n\n- [943c043](https://github.com/ratatui/ratatui/commit/943c0431d968a82b23a2f31527f32e57f86f8a7c)\n  _(scrollbar)_ Dont render on 0 length track by @EdJoPaTo in [#964](https://github.com/ratatui/ratatui/pull/964)\n\n  ````text\n  Fixes a panic when `track_length - 1` is used. (clamp panics on `-1.0`\n  being smaller than `0.0`)\n  ````\n\n- [742a5ea](https://github.com/ratatui/ratatui/commit/742a5ead066bec14047f6ab7ffa3ac8307eea715)\n  _(text)_ Fix panic when rendering out of bounds by @joshka in [#997](https://github.com/ratatui/ratatui/pull/997)\n\n  ````text\n  Previously it was possible to cause a panic when rendering to an area\n  outside of the buffer bounds. Instead this now correctly renders nothing\n  to the buffer.\n  ````\n\n- [f6c4e44](https://github.com/ratatui/ratatui/commit/f6c4e447e65fe10f4fc7fcc9e9c4312acad41096)\n  _(uncategorized)_ Ensure that paragraph correctly renders styled text by @joshka in [#992](https://github.com/ratatui/ratatui/pull/992)\n\n  ````text\n  Paragraph was ignoring the new `Text::style` field added in 0.26.0\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/990>\n\n- [35e971f](https://github.com/ratatui/ratatui/commit/35e971f7ebb0deadc613b561b15511abd48bdb54)\n  _(uncategorized)_ Scrollbar thumb not visible on long lists by @ThomasMiz in [#959](https://github.com/ratatui/ratatui/pull/959)\n\n  ````text\n  When displaying somewhat-long lists, the `Scrollbar` widget sometimes did not display a thumb character, and only the track will be visible.\n  ````\n\n### Refactor\n\n- [6fd5f63](https://github.com/ratatui/ratatui/commit/6fd5f631bbd58156d9fcae196040bb0248097819)\n  _(lint)_ Prefer idiomatic for loops by @EdJoPaTo\n\n- [37b957c](https://github.com/ratatui/ratatui/commit/37b957c7e167a7ecda07b8a60cee5de71efcc55e)\n  _(lints)_ Add lints to scrollbar by @EdJoPaTo\n\n- [c12bcfe](https://github.com/ratatui/ratatui/commit/c12bcfefa26529610886040bd96f2b6762436b15)\n  _(non-src)_ Apply pedantic lints by @EdJoPaTo in [#976](https://github.com/ratatui/ratatui/pull/976)\n\n  ````text\n  Fixes many not yet enabled lints (mostly pedantic) on everything that is\n  not the lib (examples, benches, tests). Therefore, this is not containing\n  anything that can be a breaking change.\n\n  Lints are not enabled as that should be the job of #974. I created this\n  as a separate PR as it's mostly independent and would only clutter up the\n  diff of #974 even more.\n\n  Also see\n  https://github.com/ratatui/ratatui/pull/974#discussion_r1506458743\n\n  ---------\n  ````\n\n- [8719608](https://github.com/ratatui/ratatui/commit/8719608bdaf32ba92bdfdd60569cf73f7070a618)\n  _(span)_ Rename to_aligned_line into into_aligned_line by @EdJoPaTo in [#993](https://github.com/ratatui/ratatui/pull/993)\n\n  ````text\n  With the Rust method naming conventions these methods are into methods\n  consuming the Span. Therefore, it's more consistent to use `into_`\n  instead of `to_`.\n\n  ```rust\n  Span::to_centered_line\n  Span::to_left_aligned_line\n  Span::to_right_aligned_line\n  ```\n\n  Are marked deprecated and replaced with the following\n\n  ```rust\n  Span::into_centered_line\n  Span::into_left_aligned_line\n  Span::into_right_aligned_line\n  ```\n  ````\n\n- [b831c56](https://github.com/ratatui/ratatui/commit/b831c5688c6f1fbfa6ae2bcd70d803a54fcf0196)\n  _(widget-ref)_ Clippy::needless_pass_by_value by @EdJoPaTo\n\n- [359204c](https://github.com/ratatui/ratatui/commit/359204c9298cc26ea21807d886d596de0329bacc)\n  _(uncategorized)_ Simplify to io::Result by @EdJoPaTo in [#1016](https://github.com/ratatui/ratatui/pull/1016)\n\n  ````text\n  Simplifies the code, logic stays exactly the same.\n  ````\n\n- [8e68db9](https://github.com/ratatui/ratatui/commit/8e68db9e2f57fcbf7cb5140006bbbd4dd80bf907)\n  _(uncategorized)_ Remove pointless default on internal structs by @EdJoPaTo in [#980](https://github.com/ratatui/ratatui/pull/980)\n\n  See #978\n\nAlso remove other derives. They are unused and just slow down\ncompilation.\n\n- [3be189e](https://github.com/ratatui/ratatui/commit/3be189e3c6ebd418d13138ff32bc4a749dc840cf)\n  _(uncategorized)_ Clippy::thread_local_initializer_can_be_made_const by @EdJoPaTo\n\n  ````text\n  enabled by default on nightly\n  ````\n\n- [5c4efac](https://github.com/ratatui/ratatui/commit/5c4efacd1d70bb295d90ffaa73853dc206c187fb)\n  _(uncategorized)_ Clippy::map_err_ignore by @EdJoPaTo\n\n- [bbb6d65](https://github.com/ratatui/ratatui/commit/bbb6d65e063df9a74ab6487b2216183c1fdd7230)\n  _(uncategorized)_ Clippy::else_if_without_else by @EdJoPaTo\n\n- [fdb14dc](https://github.com/ratatui/ratatui/commit/fdb14dc7cd69788e2ed20709e767f7631b11ffa2)\n  _(uncategorized)_ Clippy::redundant_type_annotations by @EdJoPaTo\n\n- [9b3b23a](https://github.com/ratatui/ratatui/commit/9b3b23ac14518a1ef23065d4a5da0fb047b18213)\n  _(uncategorized)_ Remove literal suffix by @EdJoPaTo\n\n  ````text\n  it's not needed and can just be assumed\n  ````\n\n  related:clippy::(un)separated_literal_suffix\n\n- [58b6e0b](https://github.com/ratatui/ratatui/commit/58b6e0be0f4db3d90005e130e4b84cd865179785)\n  _(uncategorized)_ Clippy::should_panic_without_expect by @EdJoPaTo\n\n- [c870a41](https://github.com/ratatui/ratatui/commit/c870a41057ac0c14c2e72e762b37689dc32e7b23)\n  _(uncategorized)_ Clippy::many_single_char_names by @EdJoPaTo\n\n- [a6036ad](https://github.com/ratatui/ratatui/commit/a6036ad78911653407f607f5efa556a055d3dce9)\n  _(uncategorized)_ Clippy::similar_names by @EdJoPaTo\n\n- [060d26b](https://github.com/ratatui/ratatui/commit/060d26b6dc6e1027dbf46ae98b0ebba83701f941)\n  _(uncategorized)_ Clippy::match_same_arms by @EdJoPaTo\n\n- [fcbea9e](https://github.com/ratatui/ratatui/commit/fcbea9ee68591344a29a7b2e83f1c8c878857aeb)\n  _(uncategorized)_ Clippy::uninlined_format_args by @EdJoPaTo\n\n- [14b24e7](https://github.com/ratatui/ratatui/commit/14b24e75858af48f39d5880e7f6c9adeac1b1da9)\n  _(uncategorized)_ Clippy::if_not_else by @EdJoPaTo\n\n- [5ed1f43](https://github.com/ratatui/ratatui/commit/5ed1f43c627053f25d9ee711677ebec6cb8fcd85)\n  _(uncategorized)_ Clippy::redundant_closure_for_method_calls by @EdJoPaTo\n\n- [c8c7924](https://github.com/ratatui/ratatui/commit/c8c7924e0ca84351f5ed5c54e79611ce16d4dc37)\n  _(uncategorized)_ Clippy::too_many_lines by @EdJoPaTo\n\n- [e3afe7c](https://github.com/ratatui/ratatui/commit/e3afe7c8a14c1cffd7de50782a7acf0f95f41673)\n  _(uncategorized)_ Clippy::unreadable_literal by @EdJoPaTo\n\n- [a1f54de](https://github.com/ratatui/ratatui/commit/a1f54de7d60fa6c57be29bf8f02a675e58b7b9c2)\n  _(uncategorized)_ Clippy::bool_to_int_with_if by @EdJoPaTo\n\n- [b8ea190](https://github.com/ratatui/ratatui/commit/b8ea190bf2cde8c18e2ac8276d2eb57d219db263)\n  _(uncategorized)_ Clippy::cast_lossless by @EdJoPaTo\n\n- [0de5238](https://github.com/ratatui/ratatui/commit/0de5238ed3613f2d663f5e9628ca7b2aa205ed02)\n  _(uncategorized)_ Dead_code by @EdJoPaTo\n\n  ````text\n  enabled by default, only detected by nightly yet\n  ````\n\n- [df5dddf](https://github.com/ratatui/ratatui/commit/df5dddfbc9c679d15a5a90ea79bb1f8946d5cb9c)\n  _(uncategorized)_ Unused_imports by @EdJoPaTo\n\n  ````text\n  enabled by default, only detected on nightly yet\n  ````\n\n- [f1398ae](https://github.com/ratatui/ratatui/commit/f1398ae6cb1abd32106923d64844b482c7ba6f82)\n  _(uncategorized)_ Clippy::useless_vec by @EdJoPaTo\n\n  ````text\n  Lint enabled by default but only nightly finds this yet\n  ````\n\n- [525848f](https://github.com/ratatui/ratatui/commit/525848ff4e066526d402fecf1d5b9c63cff1f22a)\n  _(uncategorized)_ Manually apply clippy::use_self for impl with lifetimes by @EdJoPaTo\n\n- [660c718](https://github.com/ratatui/ratatui/commit/660c7183c7a10dc453d80dfb651d9534536960b9)\n  _(uncategorized)_ Clippy::empty_line_after_doc_comments by @EdJoPaTo\n\n- [ab951fa](https://github.com/ratatui/ratatui/commit/ab951fae8166c9321728ba942b48552dfe4d9c55)\n  _(uncategorized)_ Clippy::return_self_not_must_use by @EdJoPaTo\n\n- [3cd4369](https://github.com/ratatui/ratatui/commit/3cd436917649a93b4b80d0c4a0343284e0585522)\n  _(uncategorized)_ Clippy::doc_markdown by @EdJoPaTo\n\n- [9bc014d](https://github.com/ratatui/ratatui/commit/9bc014d7f16efdb70fcd6b6b786fe74eac7b9bdf)\n  _(uncategorized)_ Clippy::items_after_statements by @EdJoPaTo\n\n- [36a0cd5](https://github.com/ratatui/ratatui/commit/36a0cd56e5645533a1d6c2720536fa10a56b0d40)\n  _(uncategorized)_ Clippy::deref_by_slicing by @EdJoPaTo\n\n- [f7f6692](https://github.com/ratatui/ratatui/commit/f7f66928a8833532a3bc97292665640285e7aafa)\n  _(uncategorized)_ Clippy::equatable_if_let by @EdJoPaTo\n\n- [01418eb](https://github.com/ratatui/ratatui/commit/01418eb7c2e1874cb4070828c485d81ea171b18d)\n  _(uncategorized)_ Clippy::default_trait_access by @EdJoPaTo\n\n- [8536760](https://github.com/ratatui/ratatui/commit/8536760e7802a498f7c6d9fe8fb4c7920a1c6e71)\n  _(uncategorized)_ Clippy::inefficient_to_string by @EdJoPaTo\n\n- [a558b19](https://github.com/ratatui/ratatui/commit/a558b19c9a7b90a1ed3f309301f49f0b483e02ec)\n  _(uncategorized)_ Clippy::implicit_clone by @EdJoPaTo\n\n- [5b00e3a](https://github.com/ratatui/ratatui/commit/5b00e3aae98cb5c20c10bec944948a75ac83f956)\n  _(uncategorized)_ Clippy::use_self by @EdJoPaTo\n\n- [27680c0](https://github.com/ratatui/ratatui/commit/27680c05ce1670f026ad23c446ada321c1c755f0)\n  _(uncategorized)_ Clippy::semicolon_if_nothing_returned by @EdJoPaTo\n\n### Documentation\n\n- [14461c3](https://github.com/ratatui/ratatui/commit/14461c3a3554c95905ebca433fc3d4dae1e1acda)\n  _(breaking-changes)_ Typos and markdownlint by @EdJoPaTo in [#1009](https://github.com/ratatui/ratatui/pull/1009)\n\n- [d0067c8](https://github.com/ratatui/ratatui/commit/d0067c8815d5244d319934d58a9366c8ad36b3e5)\n  _(license)_ Update copyright years by @orhun in [#962](https://github.com/ratatui/ratatui/pull/962)\n\n- [88bfb5a](https://github.com/ratatui/ratatui/commit/88bfb5a43027cf3410ad560772c5bfdbaa3d58b7)\n  _(text)_ Update Text and Line docs by @joshka in [#969](https://github.com/ratatui/ratatui/pull/969)\n\n- [3b002fd](https://github.com/ratatui/ratatui/commit/3b002fdcab964ce3f65f55dc8053d9678ae247a3)\n  _(uncategorized)_ Update incompatible code warning in examples readme by @joshka in [#1013](https://github.com/ratatui/ratatui/pull/1013)\n\n### Performance\n\n- [e02f476](https://github.com/ratatui/ratatui/commit/e02f4768ce2ee30473200fe98e2687e42acb9c33)\n  _(borders)_ Allow border!() in const by @EdJoPaTo in [#977](https://github.com/ratatui/ratatui/pull/977)\n\n  ````text\n  This allows more compiler optimizations when the macro is used.\n  ````\n\n- [541f0f9](https://github.com/ratatui/ratatui/commit/541f0f99538762a07d68a71b2989ecc6ff6f71ef)\n  _(cell)_ Use const CompactString::new_inline by @EdJoPaTo in [#979](https://github.com/ratatui/ratatui/pull/979)\n\n  ````text\n  Some minor find when messing around trying to `const` all the things.\n\n  While `reset()` and `default()` can not be `const` it's still a benefit\n  when their contents are.\n  ````\n\n- [65e7923](https://github.com/ratatui/ratatui/commit/65e792375396c3160d76964ef0dfc4fb1e53be41)\n  _(scrollbar)_ Const creation by @EdJoPaTo in [#963](https://github.com/ratatui/ratatui/pull/963)\n\n  ````text\n  A bunch of `const fn` allow for more performance and `Default` now uses the `const` new implementations.\n  ````\n\n- [8195f52](https://github.com/ratatui/ratatui/commit/8195f526cb4b321f337dcbe9e689cc7f6eb84065)\n  _(uncategorized)_ Clippy::needless_pass_by_value by @EdJoPaTo\n\n- [183c07e](https://github.com/ratatui/ratatui/commit/183c07ef436cbb8fb0bec418042b44b4fedd836f)\n  _(uncategorized)_ Clippy::trivially_copy_pass_by_ref by @EdJoPaTo\n\n- [a13867f](https://github.com/ratatui/ratatui/commit/a13867ffceb2f8f57f4540049754c2f916fd3efc)\n  _(uncategorized)_ Clippy::cloned_instead_of_copied by @EdJoPaTo\n\n- [3834374](https://github.com/ratatui/ratatui/commit/3834374652b46c5ddbfedcf8dea2086fd762f884)\n  _(uncategorized)_ Clippy::missing_const_for_fn by @EdJoPaTo\n\n### Miscellaneous Tasks\n\n- [125ee92](https://github.com/ratatui/ratatui/commit/125ee929ee9009b97a270e2e105a3f1167ab13d7)\n  _(docs)_ Fix: fix typos in crate documentation by @orhun in [#1002](https://github.com/ratatui/ratatui/pull/1002)\n\n- [38c17e0](https://github.com/ratatui/ratatui/commit/38c17e091cf3f4de2d196ecdd6a40129019eafc4)\n  _(editorconfig)_ Set and apply some defaults by @EdJoPaTo\n\n- [07da90a](https://github.com/ratatui/ratatui/commit/07da90a7182035b24f870bcbf0a0ffaad75eb48b)\n  _(funding)_ Add eth address for receiving funds from drips.network by @BenJam in [#994](https://github.com/ratatui/ratatui/pull/994)\n\n- [078e97e](https://github.com/ratatui/ratatui/commit/078e97e4ff65c02afa7c884914ecd38a6e959b58)\n  _(github)_ Add EdJoPaTo as a maintainer by @orhun in [#986](https://github.com/ratatui/ratatui/pull/986)\n\n- [b0314c5](https://github.com/ratatui/ratatui/commit/b0314c5731b32f51f5b6ca71a5194c6d7f265972)\n  _(uncategorized)_ Remove conventional commit check for PR by @Valentin271 in [#950](https://github.com/ratatui/ratatui/pull/950)\n\n  ````text\n  This removes conventional commit check for PRs.\n\n  Since we use the PR title and description this is useless. It fails a\n  lot of time and we ignore it.\n\n  IMPORTANT NOTE: This does **not** mean Ratatui abandons conventional\n  commits. This only relates to commits in PRs.\n  ````\n\n### Build\n\n- [6e6ba27](https://github.com/ratatui/ratatui/commit/6e6ba27a122560bcf47b0efd20b7095f1bfd8714)\n  _(lint)_ Warn on pedantic and allow the rest by @EdJoPaTo\n\n- [c4ce7e8](https://github.com/ratatui/ratatui/commit/c4ce7e8ff6f00875e1ead5b68052f0db737bd44d)\n  _(uncategorized)_ Enable more satisfied lints by @EdJoPaTo\n\n  ````text\n  These lints dont generate warnings and therefore dont need refactoring.\n  I think they are useful in the future.\n  ````\n\n- [a4e84a6](https://github.com/ratatui/ratatui/commit/a4e84a6a7f6f5b80903799028f30e2a4438f2807)\n  _(uncategorized)_ Increase msrv to 1.74.0 by @EdJoPaTo [**breaking**]\n\n  ````text\n  configure lints in Cargo.toml requires 1.74.0\n  ````\n\n  BREAKING CHANGE:rust 1.74 is required now\n\n### New Contributors\n\n- @TadoTheMiner made their first contribution in [#987](https://github.com/ratatui/ratatui/pull/987)\n- @BenJam made their first contribution in [#994](https://github.com/ratatui/ratatui/pull/994)\n- @CameronBarnes made their first contribution in [#958](https://github.com/ratatui/ratatui/pull/958)\n- @ThomasMiz made their first contribution in [#959](https://github.com/ratatui/ratatui/pull/959)\n\n**Full Changelog**: <https://github.com/ratatui/ratatui/compare/v0.26.1...0.26.2>\n\n## [0.26.1](https://github.com/ratatui/ratatui/releases/tag/v0.26.1) - 2024-02-12\n\nThis is a patch release that fixes bugs and adds enhancements, including new iterators, title options for blocks, and various rendering improvements. ✨\n\n### Features\n\n- [74a0511](https://github.com/ratatui/ratatui/commit/74a051147a4059990c31e08d96a8469d8220537b)\n  _(rect)_ Add Rect::positions iterator ([#928](https://github.com/ratatui/ratatui/issues/928))\n\n  ````text\n  Useful for performing some action on all the cells in a particular area.\n  E.g.,\n\n  ```rust\n  fn render(area: Rect, buf: &mut Buffer) {\n     for position in area.positions() {\n          buf.get_mut(position.x, position.y).set_symbol(\"x\");\n      }\n  }\n  ```\n  ````\n\n- [9182f47](https://github.com/ratatui/ratatui/commit/9182f47026d1630cb749163b6f8b8987474312ae)\n  _(uncategorized)_ Add Block::title_top and Block::title_top_bottom ([#940](https://github.com/ratatui/ratatui/issues/940))\n\n  ````text\n  This adds the ability to add titles to the top and bottom of a block\n  without having to use the `Title` struct (which will be removed in a\n  future release - likely v0.28.0).\n\n  Fixes a subtle bug if the title was created from a right aligned Line\n  and was also right aligned. The title would be rendered one cell too far\n  to the right.\n\n  ```rust\n  Block::bordered()\n      .title_top(Line::raw(\"A\").left_aligned())\n      .title_top(Line::raw(\"B\").centered())\n      .title_top(Line::raw(\"C\").right_aligned())\n      .title_bottom(Line::raw(\"D\").left_aligned())\n      .title_bottom(Line::raw(\"E\").centered())\n      .title_bottom(Line::raw(\"F\").right_aligned())\n      .render(buffer.area, &mut buffer);\n  // renders\n  \"┌A─────B─────C┐\",\n  \"│             │\",\n  \"└D─────E─────F┘\",\n  ```\n\n  Addresses part of https://github.com/ratatui/ratatui/issues/738\n  ````\n\n### Bug Fixes\n\n- [2202059](https://github.com/ratatui/ratatui/commit/220205925911ed4377358d2a28ffca9373f11bda)\n  _(block)_ Fix crash on empty right aligned title ([#933](https://github.com/ratatui/ratatui/issues/933))\n\n  ````text\n  - Simplified implementation of the rendering for block.\n  - Introduces a subtle rendering change where centered titles that are\n    odd in length will now be rendered one character to the left compared\n    to before. This aligns with other places that we render centered text\n    and is a more consistent behavior. See\n    https://github.com/ratatui/ratatui/pull/807#discussion_r1455645954\n    for another example of this.\n  ````\n\n  Fixes: <https://github.com/ratatui/ratatui/pull/929>\n\n- [14c67fb](https://github.com/ratatui/ratatui/commit/14c67fbb52101d10b2d2e26898c408ab8dd3ec2d)\n  _(list)_ Highlight symbol when using a  multi-bytes char ([#924](https://github.com/ratatui/ratatui/issues/924))\n\n  ````text\n  ratatui v0.26.0 brought a regression in the List widget, in which the\n  highlight symbol width was incorrectly calculated - specifically when\n  the highlight symbol was a multi-char character, e.g. `▶`.\n  ````\n\n- [0dcdbea](https://github.com/ratatui/ratatui/commit/0dcdbea083aace6d531c0d505837e0911f400675)\n  _(paragraph)_ Render Line::styled correctly inside a paragraph ([#930](https://github.com/ratatui/ratatui/issues/930))\n\n  ````text\n  Renders the styled graphemes of the line instead of the contained spans.\n  ````\n\n- [fae5862](https://github.com/ratatui/ratatui/commit/fae5862c6e0947ee1488a7e4775413dbead67c8b)\n  _(uncategorized)_ Ensure that buffer::set_line sets the line style ([#926](https://github.com/ratatui/ratatui/issues/926))\n\n  ````text\n  Fixes a regression in 0.26 where buffer::set_line was no longer setting\n  the style. This was due to the new style field on Line instead of being\n  stored only in the spans.\n\n  Also adds a configuration for just running unit tests to bacon.toml.\n  ````\n\n- [fbb5dfa](https://github.com/ratatui/ratatui/commit/fbb5dfaaa903efde0e63114c393dc3063d5f56fd)\n  _(uncategorized)_ Scrollbar rendering when no track symbols are provided ([#911](https://github.com/ratatui/ratatui/issues/911))\n\n### Refactor\n\n- [c3fb258](https://github.com/ratatui/ratatui/commit/c3fb25898f3e3ffe485ee69631b680679874d2cb)\n  _(rect)_ Move iters to module and add docs ([#927](https://github.com/ratatui/ratatui/issues/927))\n\n- [e51ca6e](https://github.com/ratatui/ratatui/commit/e51ca6e0d2705e6e0a96aeee78f1e80fcaaf34fc)\n  _(uncategorized)_ Finish tidying up table ([#942](https://github.com/ratatui/ratatui/issues/942))\n\n- [91040c0](https://github.com/ratatui/ratatui/commit/91040c0865043b8d5e7387509523a41345ed5af3)\n  _(uncategorized)_ Rearrange block structure ([#939](https://github.com/ratatui/ratatui/issues/939))\n\n### Documentation\n\n- [61a8278](https://github.com/ratatui/ratatui/commit/61a827821dff2bd733377cfc143266edce1dbeec)\n  _(canvas)_ Add documentation to canvas module ([#913](https://github.com/ratatui/ratatui/issues/913))\n\n  ````text\n  Document the whole `canvas` module. With this, the whole `widgets`\n  module is documented.\n  ````\n\n- [d2d91f7](https://github.com/ratatui/ratatui/commit/d2d91f754c87458c6d07863eca20f3ea8ae319ce)\n  _(changelog)_ Add sponsors section ([#908](https://github.com/ratatui/ratatui/issues/908))\n\n- [410d08b](https://github.com/ratatui/ratatui/commit/410d08b2b5812d7e29302adc0e8ddf18eb7d1d26)\n  _(uncategorized)_ Add link to FOSDEM 2024 talk ([#944](https://github.com/ratatui/ratatui/issues/944))\n\n- [1f208ff](https://github.com/ratatui/ratatui/commit/1f208ffd0368b4d269854dc0c550686dcd2d1de0)\n  _(uncategorized)_ Add GitHub Sponsors badge ([#943](https://github.com/ratatui/ratatui/issues/943))\n\n### Performance\n\n- [0963463](https://github.com/ratatui/ratatui/commit/096346350e19c5de9a4d74bba64796997e9f40da)\n  _(uncategorized)_ Use drain instead of remove in chart examples ([#922](https://github.com/ratatui/ratatui/issues/922))\n\n### Miscellaneous Tasks\n\n- [a4892ad](https://github.com/ratatui/ratatui/commit/a4892ad444739d7a760bc45bbd954e728c66b2d2)\n  _(uncategorized)_ Fix typo in docsrs example ([#946](https://github.com/ratatui/ratatui/issues/946))\n\n- [18870ce](https://github.com/ratatui/ratatui/commit/18870ce99063a492674de061441b2cce5dc54c60)\n  _(uncategorized)_ Fix the method name for setting the Line style ([#947](https://github.com/ratatui/ratatui/issues/947))\n\n- [8fb4630](https://github.com/ratatui/ratatui/commit/8fb46301a00b5d065f9b890496f914d3fdc17495)\n  _(uncategorized)_ Remove github action bot that makes comments nudging commit signing ([#937](https://github.com/ratatui/ratatui/issues/937))\n\n  ````text\n  We can consider reverting this commit once this PR is merged:\n  https://github.com/1Password/check-signed-commits-action/pull/9\n  ````\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- @mo8it\n- @m4rch3n1ng\n\n## [0.26.0](https://github.com/ratatui/ratatui/releases/tag/v0.26.0) - 2024-02-02\n\nWe are excited to announce the new version of `ratatui` - a Rust library that's all about cooking up TUIs 🐭\n\nIn this version, we have primarily focused on simplifications and quality-of-life improvements for providing a more intuitive and user-friendly experience while building TUIs.\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v026/>\n\n⚠️ List of breaking changes can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md).\n\n💖 Consider sponsoring us at <https://github.com/sponsors/ratatui>!\n\n### Features\n\n- [79ceb9f](https://github.com/ratatui/ratatui/commit/79ceb9f7b6ce7d7079fd7a1e1de8b160086206d0)\n  _(line)_ Add alignment convenience functions ([#856](https://github.com/ratatui/ratatui/issues/856))\n\n  ```text\n  This adds convenience functions `left_aligned()`, `centered()` and\n  `right_aligned()` plus unit tests. Updated example code.\n  ```\n\n- [0df9354](https://github.com/ratatui/ratatui/commit/0df935473f59d9bcf16ea5092878e59ee129d876)\n  _(padding)_ Add new constructors for padding ([#828](https://github.com/ratatui/ratatui/issues/828))\n\n  ````text\n  Adds `proportional`, `symmetric`, `left`, `right`, `top`, and `bottom`\n  constructors for Padding struct.\n\n  Proportional is\n  ```\n  /// **NOTE**: Terminal cells are often taller than they are wide, so to make horizontal and vertical\n  /// padding seem equal, doubling the horizontal padding is usually pretty good.\n  ```\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/798>\n\n- [d726e92](https://github.com/ratatui/ratatui/commit/d726e928d2004d2a99caeeb00b95ce27dbc04bc0)\n  _(paragraph)_ Add alignment convenience functions ([#866](https://github.com/ratatui/ratatui/issues/866))\n\n  ```text\n  Added convenience functions left_aligned(), centered() and\n  right_aligned() plus unit tests. Updated example code.\n  ```\n\n- [c1ed5c3](https://github.com/ratatui/ratatui/commit/c1ed5c3637dc4574612ac2029249ba700e9192b5)\n  _(span)_ Add alignment functions ([#873](https://github.com/ratatui/ratatui/issues/873))\n\n  ```text\n  Implemented functions that convert Span into a\n  left-/center-/right-aligned Line. Implemented unit tests.\n  ```\n\n  Closes #853\n\n- [b80264d](https://github.com/ratatui/ratatui/commit/b80264de877e7ca240cea15716379622d822bc08)\n  _(text)_ Add alignment convenience functions ([#862](https://github.com/ratatui/ratatui/issues/862))\n\n  ```text\n  Adds convenience functions `left_aligned()`, `centered()` and\n  `right_aligned()` plus unit tests.\n  ```\n\n- [23f6938](https://github.com/ratatui/ratatui/commit/23f6938498a7c31916a091d5b79c9d95a0575344)\n  _(block)_ Add `Block::bordered` ([#736](https://github.com/ratatui/ratatui/issues/736))\n\n  ````text\n  This avoid creating a block with no borders and then settings Borders::ALL. i.e.\n\n  ```diff\n  - Block::default().borders(Borders::ALL);\n  + Block::bordered();\n  ```\n  ````\n\n- [ffd5fc7](https://github.com/ratatui/ratatui/commit/ffd5fc79fcaf8bfff1a49c55f8d4b503a9e6dfed)\n  _(color)_ Add Color::from_u32 constructor ([#785](https://github.com/ratatui/ratatui/issues/785))\n\n  ````text\n  Convert a u32 in the format 0x00RRGGBB to a Color.\n\n  ```rust\n  let white = Color::from_u32(0x00FFFFFF);\n  let black = Color::from_u32(0x00000000);\n  ```\n  ````\n\n- [4f2db82](https://github.com/ratatui/ratatui/commit/4f2db82a774a3faea7db9659f30684e9635c24b2)\n  _(color)_ Use the FromStr implementation for deserialization ([#705](https://github.com/ratatui/ratatui/issues/705))\n\n  ```text\n  The deserialize implementation for Color used to support only the enum\n  names (e.g. Color, LightRed, etc.) With this change, you can use any of\n  the strings supported by the FromStr implementation (e.g. black,\n  light-red, #00ff00, etc.)\n  ```\n\n- [1cbe1f5](https://github.com/ratatui/ratatui/commit/1cbe1f52abb7ab1cd5bd05030e7857ee1762f44a)\n  _(constraints)_ Rename `Constraint::Proportional` to `Constraint::Fill` ([#880](https://github.com/ratatui/ratatui/issues/880))\n\n  `Constraint::Fill` is a more intuitive name for the behavior, and it is\n  shorter.\n\n  Resolves #859\n\n- [dfd6db9](https://github.com/ratatui/ratatui/commit/dfd6db988faa7a45cbe99b01024c086c4fcf7577)\n  _(demo2)_ Add destroy mode to celebrate commit 1000! ([#809](https://github.com/ratatui/ratatui/issues/809))\n\n  ````text\n  ```shell\n  cargo run --example demo2 --features=\"crossterm widget-calendar\"\n  ```\n\n  Press `d` to activate destroy mode and Enjoy!\n\n  ![Destroy\n  Demo2](https://github.com/ratatui/ratatui/blob/1d39444e3dea6f309cf9035be2417ac711c1abc9/examples/demo2-destroy.gif?raw=true)\n\n  Vendors a copy of tui-big-text to allow us to use it in the demo.\n  ````\n\n- [540fd2d](https://github.com/ratatui/ratatui/commit/540fd2df036648674a2f6d37f7b12326d5978bbd)\n  _(layout)_ Change `Flex::default()` ([#881](https://github.com/ratatui/ratatui/issues/881)) [**breaking**]\n\n  ````text\n  This PR makes a number of simplifications to the layout and constraint\n  features that were added after v0.25.0.\n\n  For users upgrading from v0.25.0, the net effect of this PR (along with\n  the other PRs) is the following:\n\n  - New `Flex` modes have been added.\n    - `Flex::Start` (new default)\n    - `Flex::Center`\n    - `Flex::End`\n    - `Flex::SpaceAround`\n    - `Flex::SpaceBetween`\n    - `Flex::Legacy` (old default)\n  - `Min(v)` grows to allocate excess space in all `Flex` modes instead of\n  shrinking (except in `Flex::Legacy` where it retains old behavior).\n  - `Fill(1)` grows to allocate excess space, growing equally with\n  `Min(v)`.\n\n  ---\n\n  The following contains a summary of the changes in this PR and the\n  motivation behind them.\n\n  **`Flex`**\n\n  - Removes `Flex::Stretch`\n  - Renames `Flex::StretchLast` to `Flex::Legacy`\n\n  **`Constraint`**\n\n  - Removes `Fixed`\n  - Makes `Min(v)` grow as much as possible everywhere (except\n  `Flex::Legacy` where it retains the old behavior)\n  - Makes `Min(v)` grow equally as `Fill(1)` while respecting `Min` lower\n  bounds. When `Fill` and `Min` are used together, they both fill excess\n  space equally.\n\n  Allowing `Min(v)` to grow still allows users to build the same layouts\n  as before with `Flex::Start` with no breaking changes to the behavior.\n\n  This PR also removes the unstable feature `SegmentSize`.\n\n  This is a breaking change to the behavior of constraints. If users want\n  old behavior, they can use `Flex::Legacy`.\n\n  ```rust\n  Layout::vertical([Length(25), Length(25)]).flex(Flex::Legacy)\n  ```\n\n  Users that have constraint that exceed the available space will probably\n  not see any difference or see an improvement in their layouts. Any\n  layout with `Min` will be identical in `Flex::Start` and `Flex::Legacy`\n  so any layout with `Min` will not be breaking.\n\n  Previously, `Table` used `EvenDistribution` internally by default, but\n  with that gone the default is now `Flex::Start`. This changes the\n  behavior of `Table` (for the better in most cases). The only way for\n  users to get exactly the same as the old behavior is to change their\n  constraints. I imagine most users will be happier out of the box with\n  the new Table default.\n\n  Resolves https://github.com/ratatui/ratatui/issues/843\n\n  Thanks to @joshka for the direction\n  ````\n\n- [bbcfa55](https://github.com/ratatui/ratatui/commit/bbcfa55a88c1916598ea0442217ac7f6a99ea96f)\n  _(layout)_ Add Rect::contains method ([#882](https://github.com/ratatui/ratatui/issues/882))\n\n  ```text\n  This is useful for performing hit tests (i.e. did the user click in an\n  area).\n  ```\n\n- [736605e](https://github.com/ratatui/ratatui/commit/736605ec88aac4877b19dd66ded97b26d933407f)\n  _(layout)_ Add default impl for Position ([#869](https://github.com/ratatui/ratatui/issues/869))\n\n- [1e75596](https://github.com/ratatui/ratatui/commit/1e755967c53e9a1803cc7fcc46ad0946c78f0eda)\n  _(layout)_ Increase default cache size to 500 ([#850](https://github.com/ratatui/ratatui/issues/850))\n\n  ```text\n  This is a somewhat arbitrary size for the layout cache based on adding\n  the columns and rows on my laptop's terminal (171+51 = 222) and doubling\n  it for good measure and then adding a bit more to make it a round\n  number. This gives enough entries to store a layout for every row and\n  every column, twice over, which should be enough for most apps. For\n  those that need more, the cache size can be set with\n  `Layout::init_cache()`.\n  ```\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/820>\n\n- [2819eea](https://github.com/ratatui/ratatui/commit/2819eea82bfde48562b830b4ef1c998dacae8b69)\n  _(layout)_ Add Position struct ([#790](https://github.com/ratatui/ratatui/issues/790))\n\n  ```text\n  This stores the x and y coordinates (columns and rows)\n\n  - add conversions from Rect\n  - add conversion with Size to Rect\n  - add Rect::as_position\n  ```\n\n- [1561d64](https://github.com/ratatui/ratatui/commit/1561d64c80e6498f90807a1607d84a1405d3e0bb)\n  _(layout)_ Add Rect -> Size conversion methods ([#789](https://github.com/ratatui/ratatui/issues/789))\n\n  ```text\n  - add Size::new() constructor\n  - add Rect::as_size()\n  - impl From<Rect> for Size\n  - document and add tests for Size\n  ```\n\n- [f13fd73](https://github.com/ratatui/ratatui/commit/f13fd73d9ec108af723a9cd11f4262f2b09c9d25)\n  _(layout)_ Add `Rect::clamp()` method ([#749](https://github.com/ratatui/ratatui/issues/749))\n\n  ````text\n  * feat(layout): add a Rect::clamp() method\n\n  This ensures a rectangle does not end up outside an area. This is useful\n  when you want to be able to dynamically move a rectangle around, but\n  keep it constrained to a certain area.\n\n  For example, this can be used to implement a draggable window that can\n  be moved around, but not outside the terminal window.\n\n  ```rust\n  let window_area = Rect::new(state.x, state.y, 20, 20).clamp(area);\n  state.x = rect.x;\n  state.y = rect.y;\n  ```\n\n  * refactor: use rstest to simplify clamp test\n\n  * fix: use rstest description instead of string\n\n  test layout::rect::tests::clamp::case_01_inside ... ok\n  test layout::rect::tests::clamp::case_02_up_left ... ok\n  test layout::rect::tests::clamp::case_04_up_right ... ok\n  test layout::rect::tests::clamp::case_05_left ... ok\n  test layout::rect::tests::clamp::case_03_up ... ok\n  test layout::rect::tests::clamp::case_06_right ... ok\n  test layout::rect::tests::clamp::case_07_down_left ... ok\n  test layout::rect::tests::clamp::case_08_down ... ok\n  test layout::rect::tests::clamp::case_09_down_right ... ok\n  test layout::rect::tests::clamp::case_10_too_wide ... ok\n  test layout::rect::tests::clamp::case_11_too_tall ... ok\n  test layout::rect::tests::clamp::case_12_too_large ... ok\n\n  * fix: less ambiguous docs for this / other rect\n\n  * fix: move rstest to dev deps\n  ````\n\n- [98bcf1c](https://github.com/ratatui/ratatui/commit/98bcf1c0a57a340229684345497b2d378979de04)\n  _(layout)_ Add Rect::split method ([#729](https://github.com/ratatui/ratatui/issues/729))\n\n  ````text\n  This method splits a Rect and returns a fixed-size array of the\n  resulting Rects. This allows the caller to use array destructuring\n  to get the individual Rects.\n\n  ```rust\n  use Constraint::*;\n  let layout = &Layout::vertical([Length(1), Min(0)]);\n  let [top, main] = area.split(&layout);\n  ```\n  ````\n\n- [0494ee5](https://github.com/ratatui/ratatui/commit/0494ee52f1f0070f1ccf4532f7301fd59d4a5c10)\n  _(layout)_ Accept Into<Constraint> for constructors ([#744](https://github.com/ratatui/ratatui/issues/744))\n\n  ````text\n  This allows Layout constructors to accept any type that implements\n  Into<Constraint> instead of just AsRef<Constraint>. This is useful when\n  you want to specify a fixed size for a layout, but don't want to\n  explicitly create a Constraint::Length yourself.\n\n  ```rust\n  Layout::new(Direction::Vertical, [1, 2, 3]);\n  Layout::horizontal([1, 2, 3]);\n  Layout::vertical([1, 2, 3]);\n  Layout::default().constraints([1, 2, 3]);\n  ```\n  ````\n\n- [7ab12ed](https://github.com/ratatui/ratatui/commit/7ab12ed8ce8f6cdb0712d132b4dfc4cccfda08da)\n  _(layout)_ Add horizontal and vertical constructors ([#728](https://github.com/ratatui/ratatui/issues/728))\n\n  ````text\n  * feat(layout): add vertical and horizontal constructors\n\n  This commit adds two new constructors to the `Layout` struct, which\n  allow the user to create a vertical or horizontal layout with default\n  values.\n\n  ```rust\n  let layout = Layout::vertical([\n      Constraint::Length(10),\n      Constraint::Min(5),\n      Constraint::Length(10),\n  ]);\n\n  let layout = Layout::horizontal([\n      Constraint::Length(10),\n      Constraint::Min(5),\n      Constraint::Length(10),\n  ]);\n  ```\n  ````\n\n- [4278b40](https://github.com/ratatui/ratatui/commit/4278b4088d2ab1d94aa5d73d7a0c321a46dbd9de)\n  _(line)_ Implement iterators for Line ([#896](https://github.com/ratatui/ratatui/issues/896))\n\n  ```text\n  This allows iterating over the `Span`s of a line using `for` loops and\n  other iterator methods.\n\n  - add `iter` and `iter_mut` methods to `Line`\n  - implement `IntoIterator` for `Line`, `&Line`, and `&mut Line` traits\n  - update call sites to iterate over `Line` rather than `Line::spans`\n  ```\n\n- [5d410c6](https://github.com/ratatui/ratatui/commit/5d410c6895de49e77c7e0d1884be63d797724448)\n  _(line)_ Implement Widget for Line ([#715](https://github.com/ratatui/ratatui/issues/715))\n\n  ````text\n  This allows us to use Line as a child of other widgets, and to use\n  Line::render() to render it rather than calling buffer.set_line().\n\n  ```rust\n  frame.render_widget(Line::raw(\"Hello, world!\"), area);\n  // or\n  Line::raw(\"Hello, world!\").render(frame, area);\n  ```\n  ````\n\n- [c977293](https://github.com/ratatui/ratatui/commit/c977293f14b019ee520379bf5eaafb44cef04a01)\n  _(line)_ Add style field, setters and docs ([#708](https://github.com/ratatui/ratatui/issues/708)) [**breaking**]\n\n  ```text\n  - The `Line` struct now stores the style of the line rather than each\n    `Span` storing it.\n  - Adds two new setters for style and spans\n  - Adds missing docs\n  ```\n\n  BREAKING CHANGE:`Line::style` is now a field of `Line` instead of being\n  stored in each `Span`.\n\n- [bbf2f90](https://github.com/ratatui/ratatui/commit/bbf2f906fbe7e593fdeb5dd7530d3479788f77a5)\n  _(rect.rs)_ Implement Rows and Columns iterators in Rect ([#765](https://github.com/ratatui/ratatui/issues/765))\n\n  ```text\n  This enables iterating over rows and columns of a Rect. In tern being able to use that with other iterators and simplify looping over cells.\n  ```\n\n- [fe06f0c](https://github.com/ratatui/ratatui/commit/fe06f0c7b06e50cd5d7916dab9ccb5e28f5a6511)\n  _(serde)_ Support TableState, ListState, and ScrollbarState ([#723](https://github.com/ratatui/ratatui/issues/723))\n\n  ````text\n  TableState, ListState, and ScrollbarState can now be serialized and deserialized\n  using serde.\n\n  ```rust\n  #[derive(Debug, Clone, serde::Serialize, serde::Deserialize)]\n  struct AppState {\n      list_state: ListState,\n      table_state: TableState,\n      scrollbar_state: ScrollbarState,\n  }\n\n  let app_state = AppState::default();\n  let serialized = serde_json::to_string(app_state);\n\n  let app_state = serde_json::from_str(serialized);\n  ```\n  ````\n\n- [37c1836](https://github.com/ratatui/ratatui/commit/37c183636b573e7637af5fbab9ae5c6f2d3fec6b)\n  _(span)_ Implement Widget on Span ([#709](https://github.com/ratatui/ratatui/issues/709))\n\n  ````text\n  This allows us to use Span as a child of other widgets, and to use\n  Span::render() to render it rather than calling buffer.set_span().\n\n  ```rust\n  frame.render_widget(Span::raw(\"Hello, world!\"), area);\n  // or\n  Span::raw(\"Hello, world!\").render(frame, area);\n  // or even\n  \"Hello, world!\".green().render(frame, area);\n  ```\n  ````\n\n- [e1e85aa](https://github.com/ratatui/ratatui/commit/e1e85aa7af2a7624b12a0ad7f0aa2413b409475d)\n  _(style)_ Add material design color palette ([#786](https://github.com/ratatui/ratatui/issues/786))\n\n  ````text\n  The `ratatui::style::palette::material` module contains the Google 2014\n  Material Design palette.\n\n  See https://m2.material.io/design/color/the-color-system.html#tools-for-picking-colors\n  for more information.\n\n  ```rust\n  use ratatui::style::palette::material::BLUE_GRAY;\n  Line::styled(\"Hello\", BLUE_GRAY.c500);\n  ```\n  ````\n\n- [bf67850](https://github.com/ratatui/ratatui/commit/bf678507395a528befcf5c5e3180368cb8f4b826)\n  _(style)_ Add tailwind color palette ([#787](https://github.com/ratatui/ratatui/issues/787))\n\n  ````text\n  The `ratatui::style::palette::tailwind` module contains the default\n  Tailwind color palette. This is useful for styling components with\n  colors that match the Tailwind color palette.\n\n  See https://tailwindcss.com/docs/customizing-colors for more information\n  on Tailwind.\n\n  ```rust\n  use ratatui::style::palette::tailwind::SLATE;\n  Line::styled(\"Hello\", SLATE.c500);\n  ```\n  ````\n\n- [27e9216](https://github.com/ratatui/ratatui/commit/27e9216cea7f25fcf172fe0a8f11e7cca222b055)\n  _(table)_ Remove allow deprecated attribute used previously for segment_size ✨ ([#875](https://github.com/ratatui/ratatui/issues/875))\n\n- [a489d85](https://github.com/ratatui/ratatui/commit/a489d85f2dda561ea18f1431f6e44f0335549eca)\n  _(table)_ Deprecate SegmentSize on table ([#842](https://github.com/ratatui/ratatui/issues/842))\n\n  ```text\n  This adds for table:\n\n  - Added new flex method with flex field\n  - Deprecated segment_size method and removed segment_size field\n  - Updated documentation\n  - Updated tests\n  ```\n\n- [c69ca47](https://github.com/ratatui/ratatui/commit/c69ca47922619332f76488f5d9e70541b496fe1c)\n  _(table)_ Collect iterator of `Row` into `Table` ([#774](https://github.com/ratatui/ratatui/issues/774)) [**breaking**]\n\n  ```text\n  Any iterator whose item is convertible into `Row` can now be\n  collected into a `Table`.\n\n  Where previously, `Table::new` accepted `IntoIterator<Item = Row>`, it\n  now accepts `IntoIterator<Item: Into<Row>>`.\n  ```\n\n  BREAKING CHANGE:The compiler can no longer infer the element type of the container\n  passed to `Table::new()`. For example, `Table::new(vec![], widths)`\n  will no longer compile, as the type of `vec![]` can no longer be\n  inferred.\n\n- [2faa879](https://github.com/ratatui/ratatui/commit/2faa879658a439d233edc4ac886fb42c17ff971a)\n  _(table)_ Accept Text for highlight_symbol ([#781](https://github.com/ratatui/ratatui/issues/781))\n\n  ````text\n  This allows for multi-line symbols to be used as the highlight symbol.\n\n  ```rust\n  let table = Table::new(rows, widths)\n      .highlight_symbol(Text::from(vec![\n          \"\".into(),\n          \" █ \".into(),\n          \" █ \".into(),\n          \"\".into(),\n      ]));\n  ```\n  ````\n\n- [e64e194](https://github.com/ratatui/ratatui/commit/e64e194b6bc5f89c68fe73d430e63c264af6ca4f)\n  _(table)_ Implement FromIterator for widgets::Row ([#755](https://github.com/ratatui/ratatui/issues/755))\n\n  ```text\n  The `Row::new` constructor accepts a single argument that implements\n  `IntoIterator`.  This commit adds an implementation of `FromIterator`,\n  as a thin wrapper around `Row::new`.  This allows `.collect::<Row>()`\n  to be used at the end of an iterator chain, rather than wrapping the\n  entire iterator chain in `Row::new`.\n  ```\n\n- [803a72d](https://github.com/ratatui/ratatui/commit/803a72df27190e273556e089e42036bfc001f003)\n  _(table)_ Accept Into<Constraint> for widths ([#745](https://github.com/ratatui/ratatui/issues/745))\n\n  ````text\n  This allows Table constructors to accept any type that implements\n  Into<Constraint> instead of just AsRef<Constraint>. This is useful when\n  you want to specify a fixed size for a table columns, but don't want to\n  explicitly create a Constraint::Length yourself.\n\n  ```rust\n  Table::new(rows, [1,2,3])\n  Table::default().widths([1,2,3])\n  ```\n  ````\n\n- [f025d2b](https://github.com/ratatui/ratatui/commit/f025d2bfa26eac11ef5c2a63943a4e177abfc800)\n  _(table)_ Add Table::footer and Row::top_margin methods ([#722](https://github.com/ratatui/ratatui/issues/722))\n\n  ```text\n  * feat(table): Add a Table::footer method\n  ```\n\n- [f29c73f](https://github.com/ratatui/ratatui/commit/f29c73fb1cf746aea0adfaed4a8b959e0466b830)\n  _(tabs)_ Accept Iterators of `Line` in constructors ([#776](https://github.com/ratatui/ratatui/issues/776)) [**breaking**]\n\n  ```text\n  Any iterator whose item is convertible into `Line` can now be\n  collected into `Tabs`.\n\n  In addition, where previously `Tabs::new` required a `Vec`, it can now\n  accept any object that implements `IntoIterator` with an item type\n  implementing `Into<Line>`.\n  ```\n\n  BREAKING CHANGE:Calls to `Tabs::new()` whose argument is collected from an iterator\n  will no longer compile. For example,\n\n  `Tabs::new([\"a\",\"b\"].into_iter().collect())` will no longer compile,\n  because the return type of `.collect()` can no longer be inferred to\n  be a `Vec<_>`.\n\n- [b459228](https://github.com/ratatui/ratatui/commit/b459228e26b9429b8a09084d76251361f7f5bfd3)\n  _(termwiz)_ Add `From` termwiz style impls ([#726](https://github.com/ratatui/ratatui/issues/726))\n\n  ```text\n  Important note: this also fixes a wrong mapping between ratatui's gray\n  and termwiz's grey. `ratatui::Color::Gray` now maps to\n  `termwiz::color::AnsiColor::Silver`\n  ```\n\n- [9ba7354](https://github.com/ratatui/ratatui/commit/9ba7354335a106607fe0670e1205a038ec54aa1b)\n  _(text)_ Implement iterators for Text ([#900](https://github.com/ratatui/ratatui/issues/900))\n\n  ```text\n  This allows iterating over the `Lines`s of a text using `for` loops and\n  other iterator methods.\n\n  - add `iter` and `iter_mut` methods to `Text`\n  - implement `IntoIterator` for `Text`, `&Text`, and `&mut Text` traits\n  - update call sites to iterate over `Text` rather than `Text::lines`\n  ```\n\n- [68d5783](https://github.com/ratatui/ratatui/commit/68d5783a6912c644b922b7030facff4b1172a434)\n  _(text)_ Add style and alignment ([#807](https://github.com/ratatui/ratatui/issues/807))\n\n  Fixes #758, fixes #801\n\nThis PR adds:\n\n- `style` and `alignment` to `Text`\n- impl `Widget` for `Text`\n- replace `Text` manual draw to call for Widget impl\n\nAll places that use `Text` have been updated and support its new\nfeatures expect paragraph which still has a custom implementation.\n\n- [815757f](https://github.com/ratatui/ratatui/commit/815757fcbbc147050f8ce9418a4e91fd871d011f)\n  _(widgets)_ Implement Widget for Widget refs ([#833](https://github.com/ratatui/ratatui/issues/833))\n\n  ````text\n  Many widgets can be rendered without changing their state.\n\n  This commit implements The `Widget` trait for references to\n  widgets and changes their implementations to be immutable.\n\n  This allows us to render widgets without consuming them by passing a ref\n  to the widget when calling `Frame::render_widget()`.\n\n  ```rust\n  // this might be stored in a struct\n  let paragraph = Paragraph::new(\"Hello world!\");\n\n  let [left, right] = area.split(&Layout::horizontal([20, 20]));\n  frame.render_widget(&paragraph, left);\n  frame.render_widget(&paragraph, right); // we can reuse the widget\n  ```\n\n  Implemented for all widgets except BarChart (which has an implementation\n  that modifies the internal state and requires a rewrite to fix.\n\n  Other widgets will be implemented in follow up commits.\n  ````\n\n  Fixes:<https://github.com/ratatui/ratatui/discussions/164>\n  Replaces PRs: <https://github.com/ratatui/ratatui/pull/122> and\n\n  <https://github.com/ratatui/ratatui/pull/16>\n\n  Enables:<https://github.com/ratatui/ratatui/issues/132>\n  Validated as a viable working solution by:\n\n  <https://github.com/ratatui/ratatui/pull/836>\n\n- [eb79256](https://github.com/ratatui/ratatui/commit/eb79256ceea151130c6b80930b51098b9ad43f5b)\n  _(widgets)_ Collect iterator of `ListItem` into `List` ([#775](https://github.com/ratatui/ratatui/issues/775))\n\n  ````text\n  Any iterator whose item is convertible into `ListItem` can now be\n  collected into a `List`.\n\n  ```rust\n  let list: List = (0..3).map(|i| format!(\"Item{i}\")).collect();\n  ```\n  ````\n\n- [c8dd879](https://github.com/ratatui/ratatui/commit/c8dd87918d44fff6d4c3c78e1fc821a3275db1ae)\n  _(uncategorized)_ Add WidgetRef and StatefulWidgetRef traits ([#903](https://github.com/ratatui/ratatui/issues/903))\n\n  ````text\n  The Widget trait consumes self, which makes it impossible to use in a\n  boxed context. Previously we implemented the Widget trait for &T, but\n  this was not enough to render a boxed widget. We now have a new trait\n  called `WidgetRef` that allows rendering a widget by reference. This\n  trait is useful when you want to store a reference to one or more\n  widgets and render them later. Additionally this makes it possible to\n  render boxed widgets where the type is not known at compile time (e.g.\n  in a composite layout with multiple panes of different types).\n\n  This change also adds a new trait called `StatefulWidgetRef` which is\n  the stateful equivalent of `WidgetRef`.\n\n  Both new traits are gated behind the `unstable-widget-ref` feature flag\n  as we may change the exact name / approach a little on this based on\n  further discussion.\n\n  Blanket implementation of `Widget` for `&W` where `W` implements\n  `WidgetRef` and `StatefulWidget` for `&W` where `W` implements\n  `StatefulWidgetRef` is provided. This allows you to render a widget by\n  reference and a stateful widget by reference.\n\n  A blanket implementation of `WidgetRef` for `Option<W>` where `W`\n  implements `WidgetRef` is provided. This makes it easier to render\n  child widgets that are optional without the boilerplate of unwrapping\n  the option. Previously several widgets implemented this manually. This\n  commits expands the pattern to apply to all widgets.\n\n  ```rust\n  struct Parent {\n      child: Option<Child>,\n  }\n\n  impl WidgetRef for Parent {\n      fn render_ref(&self, area: Rect, buf: &mut Buffer) {\n          self.child.render_ref(area, buf);\n      }\n  }\n  ```\n\n  ```rust\n  let widgets: Vec<Box<dyn WidgetRef>> = vec![Box::new(Greeting), Box::new(Farewell)];\n  for widget in widgets {\n      widget.render_ref(buf.area, &mut buf);\n  }\n  assert_eq!(buf, Buffer::with_lines([\"Hello        Goodbye\"]));\n  ```\n  ````\n\n- [87bf1dd](https://github.com/ratatui/ratatui/commit/87bf1dd9dfb8bf2e6c08c488d4a38dac21e14304)\n  _(uncategorized)_ Replace Rect::split with Layout::areas and spacers ([#904](https://github.com/ratatui/ratatui/issues/904))\n\n  ```text\n  In a recent commit we added Rec::split, but this feels more ergonomic as\n  Layout::areas. This also adds Layout::spacers to get the spacers between\n  the areas.\n  ```\n\n- [dab08b9](https://github.com/ratatui/ratatui/commit/dab08b99b6a2a4c8ced6f780af7a37a0f3c34f6b)\n  _(uncategorized)_ Show space constrained UIs conditionally ([#895](https://github.com/ratatui/ratatui/issues/895))\n\n  ```text\n  With this PR the constraint explorer demo only shows space constrained\n  UIs instead:\n\n  Smallest (15 row height):\n\n  <img width=\"759\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/37a4a027-6c6d-4feb-8104-d732aee298ac\">\n\n  Small (20 row height):\n\n  <img width=\"759\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/f76e025f-0061-4f09-9c91-2f7b00fcfb9e\">\n\n  Medium (30 row height):\n\n  <img width=\"758\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/81b070da-1bfb-40c5-9fbc-c1ab44ce422e\">\n\n  Full (40 row height):\n\n  <img width=\"760\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/7bb8a8c4-1a77-4bbc-a346-c8b5c198c6d3\">\n  ```\n\n- [2a12f7b](https://github.com/ratatui/ratatui/commit/2a12f7bddf0b286e63439c2d1fa894dcfbfde6c0)\n  _(uncategorized)_ Impl Widget for &BarChart ([#897](https://github.com/ratatui/ratatui/issues/897))\n\n  ```text\n  BarChart had some internal mutations that needed to be removed to\n  implement the Widget trait for &BarChart to bring it in line with the\n  other widgets.\n  ```\n\n- [9ec43ef](https://github.com/ratatui/ratatui/commit/9ec43eff1c7a62631fab99e4874ccd15fe7b210a)\n  _(uncategorized)_ Constraint Explorer example ([#893](https://github.com/ratatui/ratatui/issues/893))\n\n  ```text\n  Here's a constraint explorer demo put together with @joshka\n  ```\n\n  <https://github.com/ratatui/ratatui/assets/1813121/08d7d8f6-d013-44b4-8331-f4eee3589cce>\n\nIt allows users to interactive explore how the constraints behave with\nrespect to each other and compare that across flex modes. It allows\nusers to swap constraints out for other constraints, increment or\ndecrement the values, add and remove constraints, and add spacing\n\nIt is also a good example for how to structure a simple TUI with several\nRatatui code patterns that are useful for refactoring.\n\nFixes:<https://github.com/ratatui/ratatui/issues/792>\n\n---\n\n- [4ee4e6d](https://github.com/ratatui/ratatui/commit/4ee4e6d78a136b5a1e4942f25b9afe34f7dd5d0c)\n  _(uncategorized)_ Make spacing work in `Flex::SpaceAround` and `Flex::SpaceBetween` ([#892](https://github.com/ratatui/ratatui/issues/892))\n\n  ```text\n  This PR implements user provided spacing gaps for `SpaceAround` and\n  `SpaceBetween`.\n  ```\n\n  <https://github.com/ratatui/ratatui/assets/1813121/2e260708-e8a7-48ef-aec7-9cf84b655e91>\n\nNow user provided spacing gaps always take priority in all `Flex` modes.\n\n- [dd5ca3a](https://github.com/ratatui/ratatui/commit/dd5ca3a0c83bc1efc281133707eec04864567e69)\n  _(uncategorized)_ Better weights for constraints ([#889](https://github.com/ratatui/ratatui/issues/889))\n\n  ````text\n  This PR is a split of reworking the weights from #888\n\n  This keeps the same ranking of weights, just uses a different numerical\n  value so that the lowest weight is `WEAK` (`1.0`).\n\n  No tests are changed as a result of this change, and running the\n  following multiple times did not cause any errors for me:\n\n  ```rust\n  for i in {0..100}\n  do\n   cargo test --lib --\n   if [ $? -ne 0 ]; then\n   echo \"Test failed. Exiting loop.\"\n   break\n   fi\n  done\n  ```\n  ````\n\n- [aeec163](https://github.com/ratatui/ratatui/commit/aeec16369bdf26dc96af46cc580df191078464ae)\n  _(uncategorized)_ Change rounding to make tests stable ([#888](https://github.com/ratatui/ratatui/issues/888))\n\n  ```text\n  This fixes some unstable tests\n  ```\n\n- [be4fdaa](https://github.com/ratatui/ratatui/commit/be4fdaa0c7c863daa50c0109cd5f96005365029d)\n  _(uncategorized)_ Change priority of constraints and add `split_with_spacers` ✨ ([#788](https://github.com/ratatui/ratatui/issues/788))\n\n  ```text\n  Follow up to https://github.com/ratatui/ratatui/pull/783\n\n  This PR introduces different priorities for each kind of constraint.\n  This PR also adds tests that specifies this behavior. This PR resolves a\n  number of broken tests.\n\n  Fixes https://github.com/ratatui/ratatui/issues/827\n\n  With this PR, the layout algorithm will do the following in order:\n\n  1. Ensure that all the segments are within the user provided area and\n  ensure that all segments and spacers are aligned next to each other\n  2. if a user provides a `layout.spacing`, it will enforce it.\n  3. ensure proportional elements are all proportional to each other\n  4. if a user provides a `Fixed(v)` constraint, it will enforce it.\n  5. `Min` / `Max` binding inequality constraints\n  6. `Length`\n  7. `Percentage`\n  8. `Ratio`\n  9. collapse `Min` or collapse `Max`\n  10. grow `Proportional` as much as possible\n  11. grow spacers as much as possible\n\n  This PR also returns the spacer areas as `Rects` to the user. Users can\n  then draw into the spacers as they see fit (thanks @joshka for the\n  idea). Here's a screenshot with the modified flex example:\n\n  <img width=\"569\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/46c8901d-882c-43b0-ba87-b1d455099d8f\">\n\n  This PR introduces a `strengths` module that has \"default\" weights that\n  give stable solutions as well as predictable behavior.\n  ```\n\n- [d713201](https://github.com/ratatui/ratatui/commit/d7132011f921cb87593914bd7d2e24ac676ec911)\n  _(uncategorized)_ Add `Color::from_hsl` ✨ ([#772](https://github.com/ratatui/ratatui/issues/772))\n\n  ````text\n  This PR adds `Color::from_hsl` that returns a valid `Color::Rgb`.\n\n  ```rust\n  let color: Color = Color::from_hsl(360.0, 100.0, 100.0);\n  assert_eq!(color, Color::Rgb(255, 255, 255));\n\n  let color: Color = Color::from_hsl(0.0, 0.0, 0.0);\n  assert_eq!(color, Color::Rgb(0, 0, 0));\n  ```\n\n  HSL stands for Hue (0-360 deg), Saturation (0-100%), and Lightness\n  (0-100%) and working with HSL the values can be more intuitive. For\n  example, if you want to make a red color more orange, you can change the\n  Hue closer toward yellow on the color wheel (i.e. increase the Hue).\n  ````\n\n  Related #763\n\n- [405a125](https://github.com/ratatui/ratatui/commit/405a125c8235b983993e3774361821b67a340aa0)\n  _(uncategorized)_ Add wide and tall proportional border set ([#848](https://github.com/ratatui/ratatui/issues/848))\n\n  ```text\n  Adds `PROPORTIONAL_WIDE` and `PROPORTIONAL_TALL` border sets.\n  ```\n\n  `symbols::border::PROPORTIONAL_WIDE`\n\n```\n▄▄▄▄\n█xx█\n█xx█\n▀▀▀▀\n```\n\n`symbols::border::PROPORTIONAL_TALL`\n\n```\n█▀▀█\n█xx█\n█xx█\n█▄▄█\n```\n\nFixes:<https://github.com/ratatui/ratatui/issues/834>\n\n- [9df6ceb](https://github.com/ratatui/ratatui/commit/9df6cebb58e97ac795868fa0af96a8aaf9c794c0)\n  _(uncategorized)_ Table column calculation uses layout spacing ✨ ([#824](https://github.com/ratatui/ratatui/issues/824))\n\n  ```text\n  This uses the new `spacing` feature of the `Layout` struct to allocate\n  columns spacing in the `Table` widget.\n  This changes the behavior of the table column layout in the following\n  ways:\n\n  1. Selection width is always allocated.\n  - if a user does not want a selection width ever they should use\n  `HighlightSpacing::Never`\n  2. Column spacing is prioritized over other constraints\n  - if a user does not want column spacing, they should use\n  `Table::new(...).column_spacing(0)`\n\n  ---------\n  ```\n\n- [f299463](https://github.com/ratatui/ratatui/commit/f299463847e8aa4b61619e5a5c02c5855d8fdb7b)\n  _(uncategorized)_ Add one eighth wide and tall border sets ✨ ([#831](https://github.com/ratatui/ratatui/issues/831))\n\n  ````text\n  This PR adds the\n  [`McGugan`](https://www.willmcgugan.com/blog/tech/post/ceo-just-wants-to-draw-boxes/)\n  border set, which allows for tighter borders.\n\n  For example, with the `flex` example you can get this effect (top is\n  mcgugan wide, bottom is mcgugan tall):\n\n  <img width=\"759\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/756bb50e-f8c3-4eec-abe8-ce358058a526\">\n\n  <img width=\"759\" alt=\"image\"\n  src=\"https://github.com/ratatui/ratatui/assets/1813121/583485ef-9eb2-4b45-ab88-90bd7cb14c54\">\n\n  As of this PR, `MCGUGAN_WIDE` has to be styled manually, like so:\n\n  ```rust\n              let main_color = color_for_constraint(*constraint);\n              let cell = buf.get_mut(block.x, block.y + 1);\n              cell.set_style(Style::reset().fg(main_color).reversed());\n              let cell = buf.get_mut(block.x, block.y + 2);\n              cell.set_style(Style::reset().fg(main_color).reversed());\n              let cell = buf.get_mut(block.x + block.width.saturating_sub(1), block.y + 1);\n              cell.set_style(Style::reset().fg(main_color).reversed());\n              let cell = buf.get_mut(block.x + block.width.saturating_sub(1), block.y + 2);\n              cell.set_style(Style::reset().fg(main_color).reversed());\n\n  ```\n\n  `MCGUGAN_TALL` has to be styled manually, like so:\n\n  ```rust\n              let main_color = color_for_constraint(*constraint);\n              for x in block.x + 1..(block.x + block.width).saturating_sub(1) {\n                  let cell = buf.get_mut(x, block.y);\n                  cell.set_style(Style::reset().fg(main_color).reversed());\n                  let cell = buf.get_mut(x, block.y + block.height - 1);\n                  cell.set_style(Style::reset().fg(main_color).reversed());\n              }\n\n  ```\n  ````\n\n- [ae6a2b0](https://github.com/ratatui/ratatui/commit/ae6a2b0007ee7195de14d36420e2e30853fbb2f4)\n  _(uncategorized)_ Add spacing feature to flex example ✨ ([#830](https://github.com/ratatui/ratatui/issues/830))\n\n  ```text\n  This adds the `spacing` using `+` and `-` to the flex example\n  ```\n\n- [cddf4b2](https://github.com/ratatui/ratatui/commit/cddf4b2930f573fafad64a4ddd7fe5753f7540e2)\n  _(uncategorized)_ Implement Display for Text, Line, Span ([#826](https://github.com/ratatui/ratatui/issues/826))\n\n  Issue:<https://github.com/ratatui/ratatui/issues/816>\n\nThis PR adds:\n\n`std::fmt::Display` for `Text`, `Line`, and `Span` structs.\n\nDisplay implementation displays actual content while ignoring style.\n\n- [5131c81](https://github.com/ratatui/ratatui/commit/5131c813ce5de078be0458c9a067bca2d6b38921)\n  _(uncategorized)_ Add layout spacing ✨ ([#821](https://github.com/ratatui/ratatui/issues/821))\n\n  ```text\n  This adds a `spacing` feature for layouts.\n\n  Spacing can be added between items of a layout.\n  ```\n\n- [de97a1f](https://github.com/ratatui/ratatui/commit/de97a1f1da4fd146034f7c8f20264f4d558cc1a0)\n  _(uncategorized)_ Add flex to layout ✨\n\n  ```text\n  This PR adds a new way to space elements in a `Layout`.\n\n  Loosely based on\n  [flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/), this\n  PR adds a `Flex` enum with the following variants:\n\n  - Start\n  - Center\n  - End\n  - SpaceAround\n  - SpaceBetween\n\n  <img width=\"380\" alt=\"image\" src=\"https://github.com/ratatui/ratatui/assets/1813121/b744518c-eae7-4e35-bbc4-fe3c95193cde\">\n\n  It also adds two more variants, to make this backward compatible and to\n  make it replace `SegmentSize`:\n\n  - StretchLast (default in the `Flex` enum, also behavior matches old\n    default `SegmentSize::LastTakesRemainder`)\n  - Stretch (behavior matches `SegmentSize::EvenDistribution`)\n\n  The `Start` variant from above matches `SegmentSize::None`.\n\n  This allows `Flex` to be a complete replacement for `SegmentSize`, hence\n  this PR also deprecates the `segment_size` constructor on `Layout`.\n  `SegmentSize` is still used in `Table` but under the hood `segment_size`\n  maps to `Flex` with all tests passing unchanged.\n\n  I also put together a simple example for `Flex` layouts so that I could\n  test it visually, shared below:\n  ```\n\n  <https://github.com/ratatui/ratatui/assets/1813121/c8716c59-493f-4631-add5-feecf4bd4e06>\n\n- [9a3815b](https://github.com/ratatui/ratatui/commit/9a3815b66d8b6e4ff9f6475666f5742701e256bb)\n  _(uncategorized)_ Add Constraint::Fixed and Constraint::Proportional ✨ ([#783](https://github.com/ratatui/ratatui/issues/783))\n\n- [425a651](https://github.com/ratatui/ratatui/commit/425a65140b61695169c996784974488ad2fd16ea)\n  _(uncategorized)_ Add comprehensive tests for Length interacting with other constraints ✨ ([#802](https://github.com/ratatui/ratatui/issues/802))\n\n- [c50ff08](https://github.com/ratatui/ratatui/commit/c50ff08a630ae59c9aac10f69fe3ce67c2db449c)\n  _(uncategorized)_ Add frame count ✨ ([#766](https://github.com/ratatui/ratatui/issues/766))\n\n- [8f56fab](https://github.com/ratatui/ratatui/commit/8f56fabcdd34cb3938736f3302902a7fead64ee5)\n  _(uncategorized)_ Accept Color and Modifier for all Styles ([#720](https://github.com/ratatui/ratatui/issues/720)) [**breaking**]\n\n  ````text\n  * feat: accept Color and Modifier for all Styles\n\n  All style related methods now accept `S: Into<Style>` instead of\n  `Style`.\n  `Color` and `Modifier` implement `Into<Style>` so this is allows for\n  more ergonomic usage. E.g.:\n\n  ```rust\n  Line::styled(\"hello\", Style::new().red());\n  Line::styled(\"world\", Style::new().bold());\n\n  // can now be simplified to\n  ````\n\n  Line::styled(\"hello\", Color::Red);\n\n  Line::styled(\"world\", Modifier::BOLD);\n\n`````\n\nFixes https://github.com/ratatui/ratatui/issues/694\n\n  BREAKING CHANGE:All style related methods now accept `S: Into<Style>`\ninstead of `Style`. This means that if you are already passing an\nambiguous type that implements `Into<Style>` you will need to remove\nthe `.into()` call.\n\n`Block` style methods can no longer be called from a const context as\ntrait functions cannot (yet) be const.\n\n* feat: add tuple conversions to Style\n\nAdds conversions for various Color and Modifier combinations\n\n* chore: add unit tests\n\n### Bug Fixes\n\n- [ee54493](https://github.com/ratatui/ratatui/commit/ee544931633ada25d84daa95e4e3a0b17801cb8b)\n  *(buffer)* Don't panic in set_style ([#714](https://github.com/ratatui/ratatui/issues/714))\n\n  ````text\n  This fixes a panic in set_style when the area to be styled is\n  outside the buffer's bounds.\n`````\n\n- [c959bd2](https://github.com/ratatui/ratatui/commit/c959bd2881244a4ad9609403d8a84860f290b859)\n  _(calendar)_ CalendarEventStore panic ([#822](https://github.com/ratatui/ratatui/issues/822))\n\n  `CalendarEventStore::today()` panics if the system's UTC offset cannot\n  be determined. In this circumstance, it's better to use `now_utc`\n  instead.\n\n- [0614190](https://github.com/ratatui/ratatui/commit/06141900b4f049dd2c76bfccb49b4d51ae854bb0)\n  _(cd)_ Fix grepping the last release ([#762](https://github.com/ratatui/ratatui/issues/762))\n\n- [a67815e](https://github.com/ratatui/ratatui/commit/a67815e1388806d87d387ff17af0dfab48412011)\n  _(chart)_ Exclude unnamed datasets from legend ([#753](https://github.com/ratatui/ratatui/issues/753))\n\n  ```text\n  A dataset with no name won't display an empty line anymore in the legend.\n  If no dataset have name, then no legend is ever displayed.\n  ```\n\n- [3e7810a](https://github.com/ratatui/ratatui/commit/3e7810a2ab2bbd09027ecd832aa295c5e71d9eda)\n  _(example)_ Increase layout cache size ([#815](https://github.com/ratatui/ratatui/issues/815))\n\n  ```text\n  This was causing very bad performances especially on scrolling.\n  It's also a good usage demonstration.\n  ```\n\n- [50b81c9](https://github.com/ratatui/ratatui/commit/50b81c9d4ea6a357cc964baff0b267dcfe6087c6)\n  _(examples/scrollbar)_ Title wasn't displayed because of background reset ([#795](https://github.com/ratatui/ratatui/issues/795))\n\n- [b3a57f3](https://github.com/ratatui/ratatui/commit/b3a57f3dff1e56fe431235b839c4bd0ee0fec594)\n  _(list)_ Modify List and List example to support saving offsets. ([#667](https://github.com/ratatui/ratatui/issues/667))\n\n  ```text\n  The current `List` example will unselect and reset the position of a\n  list.\n\n  This PR will save the last selected item, and updates `List` to honor\n  its offset, preventing the list from resetting when the user\n  `unselect()`s a `StatefulList`.\n  ```\n\n- [6645d2e](https://github.com/ratatui/ratatui/commit/6645d2e0585a4e2d1d64fa730c09077b2d215545)\n  _(table)_ Ensure that default and new() match ([#751](https://github.com/ratatui/ratatui/issues/751)) [**breaking**]\n\n  ```text\n  In https://github.com/ratatui/ratatui/pull/660 we introduced the\n  segment_size field to the Table struct. However, we forgot to update\n  the default() implementation to match the new() implementation. This\n  meant that the default() implementation picked up SegmentSize::default()\n  instead of SegmentSize::None.\n\n  Additionally the introduction of Table::default() in an earlier PR,\n  https://github.com/ratatui/ratatui/pull/339, was also missing the\n  default for the column_spacing field (1).\n\n  This commit fixes the default() implementation to match the new()\n  implementation of these two fields by implementing the Default trait\n  manually.\n  ```\n\n  BREAKING CHANGE:The default() implementation of Table now sets the\n  column_spacing field to 1 and the segment_size field to\n\n  SegmentSize::None. This will affect the rendering of a small amount of\n  apps.\n\n- [b0ed658](https://github.com/ratatui/ratatui/commit/b0ed658970e8a94f25948c80d511102c197a8f6a)\n  _(table)_ Render missing widths as equal ([#710](https://github.com/ratatui/ratatui/issues/710))\n\n  ```text\n  Previously, if `.widths` was not called before rendering a `Table`, no\n  content would render in the area of the table. This commit changes that\n  behaviour to default to equal widths for each column.\n  ```\n\n  Fixes #510.\n\n- [f71bf18](https://github.com/ratatui/ratatui/commit/f71bf182975526aa2eca9ee710361f39db2d666d)\n  _(uncategorized)_ Bug with flex stretch with spacing and proportional constraints ([#829](https://github.com/ratatui/ratatui/issues/829))\n\n  ```text\n  This PR fixes a bug with layouts when using spacing on proportional\n  constraints.\n  ```\n\n- [cc6737b](https://github.com/ratatui/ratatui/commit/cc6737b8bc09d254413adc1cbf2bc62d2f93792d)\n  _(uncategorized)_ Make SpaceBetween with one element Stretch 🐛 ([#813](https://github.com/ratatui/ratatui/issues/813))\n\n  ```text\n  When there's just one element, `SpaceBetween` should do the same thing\n  as `Stretch`.\n  ```\n\n- [7a8af8d](https://github.com/ratatui/ratatui/commit/7a8af8da6ba83c7a3f31d03b29c51de6b03ced64)\n  _(uncategorized)_ Update templates links ([#808](https://github.com/ratatui/ratatui/issues/808))\n\n- [f2eab71](https://github.com/ratatui/ratatui/commit/f2eab71ccf11a206c253bf4efeafc744f103b116)\n  _(uncategorized)_ Broken tests in table.rs ([#784](https://github.com/ratatui/ratatui/issues/784))\n\n  ```text\n  * fix: broken tests in table.rs\n\n  * fix: Use default instead of raw\n  ```\n\n- [8dd177a](https://github.com/ratatui/ratatui/commit/8dd177a0513230bfddc89aa315dfb49d1c7b070c)\n  _(uncategorized)_ Fix PR write permission to upload unsigned commit comment ([#770](https://github.com/ratatui/ratatui/issues/770))\n\n### Refactor\n\n- [cf86123](https://github.com/ratatui/ratatui/commit/cf861232c7c2369fa44010374432ba0a4814b6f8)\n  _(scrollbar)_ Rewrite scrollbar implementation ([#847](https://github.com/ratatui/ratatui/issues/847))\n\n  ```text\n  Implementation was simplified and calculates the size of the thumb a\n  bit more proportionally to the content that is visible.\n  ```\n\n- [fd4703c](https://github.com/ratatui/ratatui/commit/fd4703c0869eca22a51d9a33f7bb54bfd051c565)\n  _(block)_ Move padding and title into separate files ([#837](https://github.com/ratatui/ratatui/issues/837))\n\n- [bc274e2](https://github.com/ratatui/ratatui/commit/bc274e2bd9cfee1133dfbcca3c95374560706537)\n  _(block)_ Remove deprecated `title_on_bottom` ([#757](https://github.com/ratatui/ratatui/issues/757)) [**breaking**]\n\n  `Block::title_on_bottom` was deprecated in v0.22. Use `Block::title` and `Title::position` instead.\n\n- [a62632a](https://github.com/ratatui/ratatui/commit/a62632a947a950f7ab303e67eb910b01f4ee256d)\n  _(buffer)_ Split buffer module into files ([#721](https://github.com/ratatui/ratatui/issues/721))\n\n- [e0aa6c5](https://github.com/ratatui/ratatui/commit/e0aa6c5e1f254c7222afee7a8acf1652025b1949)\n  _(chart)_ Replace deprecated apply ([#812](https://github.com/ratatui/ratatui/issues/812))\n\n  Fixes #793\n\n- [7f42ec9](https://github.com/ratatui/ratatui/commit/7f42ec97139da1897583d1d04610fa24e3c53fa2)\n  _(colors_rgb)_ Impl widget on mutable refs ([#865](https://github.com/ratatui/ratatui/issues/865))\n\n  ```text\n  This commit refactors the colors_rgb example to implement the Widget\n  trait on mutable references to the app and its sub-widgets. This allows\n  the app to update its state while it is being rendered.\n\n  Additionally the main and run functions are refactored to be similar to\n  the other recent examples. This uses a pattern where the App struct has\n  a `run` method that takes a terminal as an argument, and the main\n  function is in control of initializing and restoring the terminal and\n  installing the error hooks.\n  ```\n\n- [813f707](https://github.com/ratatui/ratatui/commit/813f707892d77177b5f7bfe910ff0d312f17eb83)\n  _(example)_ Improve constraints and flex examples ([#817](https://github.com/ratatui/ratatui/issues/817))\n\n  ```text\n  This PR is a follow up to\n  https://github.com/ratatui/ratatui/pull/811.\n\n  It improves the UI of the layouts by\n\n  - thoughtful accessible color that represent priority in constraints\n  resolving\n  - using QUADRANT_OUTSIDE symbol set for block rendering\n  - adding a scrollbar\n  - panic handling\n  - refactoring for readability\n\n  to name a few. Here are some example gifs of the outcome:\n\n\n  ![constraints](https://github.com/ratatui/ratatui/assets/381361/8eed34cf-e959-472f-961b-d439bfe3324e)\n\n\n  ![flex](https://github.com/ratatui/ratatui/assets/381361/3195a56c-9cb6-4525-bc1c-b969c0d6a812)\n\n  ---------\n  ```\n\n- [bb5444f](https://github.com/ratatui/ratatui/commit/bb5444f618f8baf7be9c9ba9f0cad829160d9392)\n  _(example)_ Add scroll to flex example ([#811](https://github.com/ratatui/ratatui/issues/811))\n\n  ```text\n  This commit adds `scroll` to the flex example. It also adds more examples to showcase how constraints interact. It improves the UI to make it easier to understand and short terminal friendly.\n\n  <img width=\"380\" alt=\"image\" src=\"https://github.com/ratatui/ratatui/assets/1813121/30541efc-ecbe-4e28-b4ef-4d5f1dc63fec\"/>\n\n  ---------\n  ```\n\n- [6d15b25](https://github.com/ratatui/ratatui/commit/6d15b2570ff1a7c5dc2f6888efb313fb38f55f2a)\n  _(layout)_ Move the remaining types ([#743](https://github.com/ratatui/ratatui/issues/743))\n\n  ```text\n  - alignment -> layout/alignment.rs\n  - corner -> layout/corner.rs\n  - direction -> layout/direction.rs\n  - size -> layout/size.rs\n  ```\n\n- [659460e](https://github.com/ratatui/ratatui/commit/659460e19cc4109a36f416f79e583066730ca199)\n  _(layout)_ Move SegmentSize to layout/segment_size.rs ([#742](https://github.com/ratatui/ratatui/issues/742))\n\n- [ba036cd](https://github.com/ratatui/ratatui/commit/ba036cd57966ff9e7e2f871580095fda1df158ee)\n  _(layout)_ Move Layout to layout/layout.rs ([#741](https://github.com/ratatui/ratatui/issues/741))\n\n- [8724aeb](https://github.com/ratatui/ratatui/commit/8724aeb9e74f4756a15681740ce7825cb094b42a)\n  _(layout)_ Move Margin to margin.rs ([#740](https://github.com/ratatui/ratatui/issues/740))\n\n- [9574198](https://github.com/ratatui/ratatui/commit/95741989588547cec12aaa27fbb5bc7cf2600426)\n  _(line)_ Reorder methods for natural reading order ([#713](https://github.com/ratatui/ratatui/issues/713))\n\n- [6364533](https://github.com/ratatui/ratatui/commit/63645333d681c13502047e20d67612d9113d4375)\n  _(table)_ Split table into multiple files ([#718](https://github.com/ratatui/ratatui/issues/718))\n\n  ```text\n  At close to 2000 lines of code, the table widget was getting a bit\n  unwieldy. This commit splits it into multiple files, one for each\n  struct, and one for the table itself.\n\n  Also refactors the table rendering code to be easier to maintain.\n  ```\n\n- [5aba988](https://github.com/ratatui/ratatui/commit/5aba988fac6d0a2437192f5127c36bd272de5c78)\n  _(terminal)_ Extract types to files ([#760](https://github.com/ratatui/ratatui/issues/760))\n\n  ```text\n  Fields on Frame that were private are now pub(crate).\n  ```\n\n- [4d262d2](https://github.com/ratatui/ratatui/commit/4d262d21cbfba12da92a754fad533403df20701d)\n  _(widget)_ Move borders to widgets/borders.rs ([#832](https://github.com/ratatui/ratatui/issues/832))\n\n- [5254795](https://github.com/ratatui/ratatui/commit/525479546acebff7faec165f45028001a01525fe)\n  _(uncategorized)_ Make layout tests a bit easier to understand ([#890](https://github.com/ratatui/ratatui/issues/890))\n\n- [bd6b91c](https://github.com/ratatui/ratatui/commit/bd6b91c958a8ac2eb5b0e62432d65294403e5af3)\n  _(uncategorized)_ Make `patch_style` & `reset_style` chainable ([#754](https://github.com/ratatui/ratatui/issues/754)) [**breaking**]\n\n  ```text\n  Previously, `patch_style` and `reset_style` in `Text`, `Line` and `Span`\n   were using a mutable reference to `Self`. To be more consistent with\n   the rest of `ratatui`, which is using fluent setters, these now take\n   ownership of `Self` and return it.\n  ```\n\n- [da6c299](https://github.com/ratatui/ratatui/commit/da6c299804850a1b7747ca1472c9a904bcd956ea)\n  _(uncategorized)_ Extract layout::Constraint to file ([#739](https://github.com/ratatui/ratatui/issues/739))\n\n### Documentation\n\n- [6ecaeed](https://github.com/ratatui/ratatui/commit/6ecaeed5497b15c4fa12c15048776b884e46b985)\n  _(text)_ Add overview of the relevant methods ([#857](https://github.com/ratatui/ratatui/issues/857))\n\n  ```text\n  Add an overview of the relevant methods under `Constructor Methods`, `Setter Methods`, and `Other Methods` subtitles.\n  ```\n\n- [50374b2](https://github.com/ratatui/ratatui/commit/50374b2456808af8e14715c86bd773d7cfee2627)\n  _(backend)_ Fix broken book link ([#733](https://github.com/ratatui/ratatui/issues/733))\n\n- [e1cc849](https://github.com/ratatui/ratatui/commit/e1cc8495544513bc0d9a26f8d2fe446d9b6b1091)\n  _(breaking)_ Fix typo ([#702](https://github.com/ratatui/ratatui/issues/702))\n\n- [49df5d4](https://github.com/ratatui/ratatui/commit/49df5d46263a3e2fab2e8bdb9379c507922e3aa1)\n  _(example)_ Fix markdown syntax for note ([#730](https://github.com/ratatui/ratatui/issues/730))\n\n- [4b8e54e](https://github.com/ratatui/ratatui/commit/4b8e54e811bbd591f21ad8fe5b2467e4486aa6e9)\n  _(examples)_ Refactor Tabs example ([#861](https://github.com/ratatui/ratatui/issues/861))\n\n  ```text\n  - Used a few new techniques from the 0.26 features (ref widgets, text rendering,\n    dividers / padding etc.)\n  - Updated the app to a simpler application approach\n  - Use color_eyre\n  - Make it look pretty (colors, new proportional borders)\n\n  ![Made with VHS](https://vhs.charm.sh/vhs-4WW21XTtepDhUSq4ZShO56.gif)\n\n  ---------\n  Fixes https://github.com/ratatui/ratatui/issues/819\n  Co-authored-by: Josh McKinney <joshka@users.noreply.github.com>\n  ```\n\n- [5b7ad2a](https://github.com/ratatui/ratatui/commit/5b7ad2ad82f38af25d5f8d40ea5bdc454fbbbc60)\n  _(examples)_ Update gauge example ([#863](https://github.com/ratatui/ratatui/issues/863))\n\n  ```text\n  - colored gauges\n  - removed box borders\n  - show the difference between ratio / percentage and unicode / no unicode better\n  - better application approach (consistent with newer examples)\n  - various changes for 0.26 featuers\n  - impl `Widget` for `&App`\n  - use color_eyre\n\n  for gauge.tape\n\n  - change to get better output from the new code\n\n  ---------\n  Fixes: https://github.com/ratatui/ratatui/issues/846\n  Co-authored-by: Josh McKinney <joshka@users.noreply.github.com>\n  ```\n\n- [f383625](https://github.com/ratatui/ratatui/commit/f383625f0e1cae320ae56af615f3b05c59700f93)\n  _(examples)_ Add note about example versions to all examples ([#871](https://github.com/ratatui/ratatui/issues/871))\n\n- [847bacf](https://github.com/ratatui/ratatui/commit/847bacf32ee40e5af2207f8aefd2a0538beec693)\n  _(examples)_ Refactor demo2 ([#836](https://github.com/ratatui/ratatui/issues/836))\n\n  ```text\n  Simplified a bunch of the logic in the demo2 example\n  - Moved destroy mode to its own file.\n  - Moved error handling to its own file.\n  - Removed AppContext\n  - Implemented Widget for &App. The app state is small enough that it\n    doesn't matter here and we could just copy or clone the app state on\n    every frame, but for larger apps this can be a significant performance\n    improvement.\n  - Made the tabs stateful\n  - Made the term module just a collection of functions rather than a\n    struct.\n  - Changed to use color_eyre for error handling.\n  - Changed keyboard shortcuts and rearranged the bottom bar.\n  - Use strum for the tabs enum.\n  ```\n\n- [804c841](https://github.com/ratatui/ratatui/commit/804c841fdc370049403282e0c6d140cbed85db7b)\n  _(examples)_ Update list example and list.tape ([#864](https://github.com/ratatui/ratatui/issues/864))\n\n  ```text\n  This PR adds:\n\n  - subjectively better-looking list example\n  - change list example to a todo list example\n  - status of a TODO can be changed, further info can be seen under the list.\n  ```\n\n- [eb1484b](https://github.com/ratatui/ratatui/commit/eb1484b6db5b21df6bda017fbe1a8f4888151ed3)\n  _(examples)_ Update tabs example and tabs.tape ([#855](https://github.com/ratatui/ratatui/issues/855))\n\n  ```text\n  This PR adds:\n\n  for tabs.rs\n\n  - general refactoring on code\n  - subjectively better looking front\n  - add tailwind colors\n\n  for tabs.tape\n\n  - change to get better output from the new code\n\n  Here is the new output:\n\n  ![tabs](https://github.com/ratatui/ratatui/assets/30180366/0a9371a5-e90d-42ba-aba5-70cbf66afd1f)\n  ```\n\n- [330a899](https://github.com/ratatui/ratatui/commit/330a899eacb1f7d2d6dc19856f2bbb782e2c53b0)\n  _(examples)_ Update table example and table.tape ([#840](https://github.com/ratatui/ratatui/issues/840))\n\n  ```text\n  In table.rs\n  - added scrollbar to the table\n  - colors changed to use style::palette::tailwind\n  - now colors can be changed with keys (l or →) for the next color, (h or\n  ←) for the previous color\n  - added a footer for key info\n\n  For table.tape\n  - typing speed changed to 0.75s from 0.5s\n  - screen size changed to fit\n  - pushed keys changed to show the current example better\n  ```\n\n  Fixes:<https://github.com/ratatui/ratatui/issues/800>\n\n- [41de884](https://github.com/ratatui/ratatui/commit/41de8846fda6b50dbd8288eb108037dd5b0a2acd)\n  _(examples)_ Document incompatible examples better ([#844](https://github.com/ratatui/ratatui/issues/844))\n\n  ```text\n  Examples often take advantage of unreleased API changes, which makes\n  them not copy-paste friendly.\n  ```\n\n- [3464894](https://github.com/ratatui/ratatui/commit/34648941d447245cf7b1b6172fe84b1867b1bd5a)\n  _(examples)_ Add warning about examples matching the main branch ([#778](https://github.com/ratatui/ratatui/issues/778))\n\n- [fb93db0](https://github.com/ratatui/ratatui/commit/fb93db073029fc9bc6a365511706c1f60a64af1b)\n  _(examples)_ Simplify docs using new layout methods ([#731](https://github.com/ratatui/ratatui/issues/731))\n\n  ```text\n  Use the new `Layout::horizontal` and `vertical` constructors and\n  `Rect::split_array` through all the examples.\n  ```\n\n- [d6b8513](https://github.com/ratatui/ratatui/commit/d6b851301e0edcc96274262c2351391c4d414481)\n  _(examples)_ Refactor chart example to showcase scatter ([#703](https://github.com/ratatui/ratatui/issues/703))\n\n- [fe84141](https://github.com/ratatui/ratatui/commit/fe84141119d87f478478fa1570344aaa7fa5f417)\n  _(layout)_ Document the difference in the split methods ([#750](https://github.com/ratatui/ratatui/issues/750))\n\n  ```text\n  * docs(layout): document the difference in the split methods\n\n  * fix: doc suggestion\n  ```\n\n- [48b0380](https://github.com/ratatui/ratatui/commit/48b0380cb3c50b62fe347e27fed46b6c702d0e13)\n  _(scrollbar)_ Complete scrollbar documentation ([#823](https://github.com/ratatui/ratatui/issues/823))\n\n- [e67d3c6](https://github.com/ratatui/ratatui/commit/e67d3c64e0192ac5a31ecb34cfb8a55c53ba7bdc)\n  _(table)_ Fix typo ([#707](https://github.com/ratatui/ratatui/issues/707))\n\n- [065b6b0](https://github.com/ratatui/ratatui/commit/065b6b05b7685d30cfccc9343ff5232fe67d5a7a)\n  _(terminal)_ Document buffer diffing better ([#852](https://github.com/ratatui/ratatui/issues/852))\n\n- [86168aa](https://github.com/ratatui/ratatui/commit/86168aa7117b4f4218bd658c861a0bd2bc03e7b5)\n  _(uncategorized)_ Fix docstring for `Max` constraints ([#898](https://github.com/ratatui/ratatui/issues/898))\n\n- [11e4f6a](https://github.com/ratatui/ratatui/commit/11e4f6a0ba71b7adad44af5866a2b0789175aafa)\n  _(uncategorized)_ Adds better documentation for constraints and flex 📚 ([#818](https://github.com/ratatui/ratatui/issues/818))\n\n- [1746a61](https://github.com/ratatui/ratatui/commit/1746a616595af019d52b8cd69bf08d5c49c0a968)\n  _(uncategorized)_ Update links to templates repository 📚 ([#810](https://github.com/ratatui/ratatui/issues/810))\n\n  ```text\n  This PR updates links to the `templates` repository.\n  ```\n\n- [43b2b57](https://github.com/ratatui/ratatui/commit/43b2b57191ed9226c93cbef40b8e5b899ef81fdc)\n  _(uncategorized)_ Fix typo in Table widget description ([#797](https://github.com/ratatui/ratatui/issues/797))\n\n- [2b4aa46](https://github.com/ratatui/ratatui/commit/2b4aa46a6a225c6629778257a4548b7fa55f3ef9)\n  _(uncategorized)_ GitHub admonition syntax for examples README.md ([#791](https://github.com/ratatui/ratatui/issues/791))\n\n  ```text\n  * docs: GitHub admonition syntax for examples README.md\n\n  * docs: Add link to stable release\n  ```\n\n- [388aa46](https://github.com/ratatui/ratatui/commit/388aa467f17dd219ec8e99a177547eb03c6fa01d)\n  _(uncategorized)_ Update crate, lib and readme links ([#771](https://github.com/ratatui/ratatui/issues/771))\n\n  ```text\n  Link to the contributing, changelog, and breaking changes docs at the\n  top of the page instead of just in in the main part of the doc. This\n  makes it easier to find them.\n\n  Rearrange the links to be in a more logical order.\n\n  Use link refs for all the links\n\n  Fix up the CI link to point to the right workflow\n  ```\n\n### Performance\n\n- [1d3fbc1](https://github.com/ratatui/ratatui/commit/1d3fbc1b15c619f571b9981b841986a7947a4195)\n  _(buffer)_ Apply SSO technique to text buffer in `buffer::Cell` ([#601](https://github.com/ratatui/ratatui/issues/601)) [**breaking**]\n\n  ```text\n  Use CompactString instead of String to store the Cell::symbol field.\n  This saves reduces the size of memory allocations at runtime.\n  ```\n\n### Testing\n\n- [663bbde](https://github.com/ratatui/ratatui/commit/663bbde9c39afc1ad15cc44228811ae1b62f4343)\n  _(layout)_ Convert layout tests to use rstest ([#879](https://github.com/ratatui/ratatui/issues/879))\n\n  ```text\n  This PR makes all the letters test use `rstest`\n  ```\n\n- [f780be3](https://github.com/ratatui/ratatui/commit/f780be31f37f2305f514f4dba6f82dcae0ad3f9b)\n  _(layout)_ Parameterized tests 🚨 ([#858](https://github.com/ratatui/ratatui/issues/858))\n\n### Miscellaneous Tasks\n\n- [ba20372](https://github.com/ratatui/ratatui/commit/ba20372c23c65122db055e202cfe68fcddafd342)\n  _(contributing)_ Remove part about squashing commits ([#874](https://github.com/ratatui/ratatui/issues/874))\n\n  ```text\n  Removes the part about squashing commits from the CONTRIBUTING file.\n\n  We no longer require that because github squashes commits when merging.\n  This will cleanup the CONTRIBUTING file a bit which is already quite\n  dense.\n  ```\n\n- [d49bbb2](https://github.com/ratatui/ratatui/commit/d49bbb259091a7b061e0dec71ee06884b27e308a)\n  _(ci)_ Update the job description for installing cargo-nextest ([#839](https://github.com/ratatui/ratatui/issues/839))\n\n- [8d77b73](https://github.com/ratatui/ratatui/commit/8d77b734bb5d267114afffd4bb594695d8544dce)\n  _(ci)_ Use cargo-nextest for running tests ([#717](https://github.com/ratatui/ratatui/issues/717))\n\n  ```text\n  * chore(ci): use cargo-nextest for running tests\n\n  * refactor(make): run library tests before doc tests\n  ```\n\n- [b7a4793](https://github.com/ratatui/ratatui/commit/b7a479392ee71574e32b5aa797ef612cdd99498f)\n  _(ci)_ Bump alpha release for breaking changes ([#495](https://github.com/ratatui/ratatui/issues/495))\n\n  ```text\n  Automatically detect breaking changes based on commit messages\n  and bump the alpha release number accordingly.\n\n  E.g. v0.23.1-alpha.1 will be bumped to v0.24.0-alpha.0 if any commit\n  since v0.23.0 has a breaking change.\n  ```\n\n- [fab943b](https://github.com/ratatui/ratatui/commit/fab943b61afb1c5f79d03b1f3764067ac26945d0)\n  _(contributing)_ Add deprecation notice guideline ([#761](https://github.com/ratatui/ratatui/issues/761))\n\n- [fc0879f](https://github.com/ratatui/ratatui/commit/fc0879f98dedf36699ebf77b5b1298f6f3fb3015)\n  _(layout)_ Comment tests that may fail on occasion ([#814](https://github.com/ratatui/ratatui/issues/814))\n\n  ```text\n  These fails seem to fail on occasion, locally and on CI.\n\n  This issue will be revisited in the PR on constraint weights:\n  https://github.com/ratatui/ratatui/pull/788\n  ```\n\n- [f8367fd](https://github.com/ratatui/ratatui/commit/f8367fdfdd1da0ae98705a0b23fc88d156425f4c)\n  _(uncategorized)_ Allow Buffer::with_lines to accept IntoIterator ([#901](https://github.com/ratatui/ratatui/issues/901))\n\n  ```text\n  This can make it easier to use `Buffer::with_lines` with iterators that\n  don't necessarily produce a `Vec`. For example, this allows using\n  `Buffer::with_lines` with `&[&str]` directly, without having to call\n  `collect` on it first.\n  ```\n\n- [78f1c14](https://github.com/ratatui/ratatui/commit/78f1c1446b00824970449d9aff2d74ef875d2449)\n  _(uncategorized)_ Small fixes to constraint-explorer ([#894](https://github.com/ratatui/ratatui/issues/894))\n\n- [984afd5](https://github.com/ratatui/ratatui/commit/984afd580bff5be6f30622733e5a28db952c72fd)\n  _(uncategorized)_ Cache dependencies in the CI workflow to speed up builds ([#883](https://github.com/ratatui/ratatui/issues/883))\n\n- [6e76729](https://github.com/ratatui/ratatui/commit/6e76729ce899e2f32af8335aff530622d9a8dbe4)\n  _(uncategorized)_ Move example vhs tapes to a folder ([#867](https://github.com/ratatui/ratatui/issues/867))\n\n- [151db6a](https://github.com/ratatui/ratatui/commit/151db6ac7d93713b6212ce627e3b725879573aa9)\n  _(uncategorized)_ Add commit footers to git-cliff config ([#805](https://github.com/ratatui/ratatui/issues/805))\n\n  Fixes:<https://github.com/orhun/git-cliff/issues/297>\n\n- [c24216c](https://github.com/ratatui/ratatui/commit/c24216cf307bba7d19ed579a10ef541e28dfd4bc)\n  _(uncategorized)_ Add comment on PRs with unsigned commits ([#768](https://github.com/ratatui/ratatui/issues/768))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- @yanganto\n- @akiomik\n- @Lunderberg\n- @BogdanPaul15\n- @stchris\n- @MultisampledNight\n- @lxl66566\n- @bblsh\n- @Eeelco\n\n### Sponsors\n\nShout out to our new sponsors!\n\n- @pythops\n- @DanNixon\n- @ymgyt\n- @plabayo\n- @atuinsh\n- @JeftavanderHorst!\n\n## [0.25.0](https://github.com/ratatui/ratatui/releases/tag/v0.25.0) - 2023-12-18\n\nWe are thrilled to announce the new version of `ratatui` - a Rust library that's all about cooking up TUIs 🐭\n\nIn this version, we made improvements on widgets such as List, Table and Layout and changed some of the defaults for a better user experience.\nAlso, we renewed our website and updated our documentation/tutorials to get started with `ratatui`: <https://ratatui.rs> 🚀\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v025/>\n\n⚠️ List of breaking changes can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md).\n\n💖 We also enabled GitHub Sponsors for our organization, consider sponsoring us if you like `ratatui`: <https://github.com/sponsors/ratatui>\n\n### Features\n\n- [aef4956](https://github.com/ratatui/ratatui/commit/aef495604c52e563fbacfb1a6e730cd441a99129)\n  _(list)_ `List::new` now accepts `IntoIterator<Item = Into<ListItem>>` ([#672](https://github.com/ratatui/ratatui/issues/672)) [**breaking**]\n\n  ````text\n  This allows to build list like\n\n  ```\n  List::new([\"Item 1\", \"Item 2\"])\n  ```\n  ````\n\n- [8bfd666](https://github.com/ratatui/ratatui/commit/8bfd6661e251b6943f74bda626e4708b2e9f4b51)\n  _(paragraph)_ Add `line_count` and `line_width` unstable helper methods\n\n  ````text\n  This is an unstable feature that may be removed in the future\n  ````\n\n- [1229b96](https://github.com/ratatui/ratatui/commit/1229b96e428df880a951ef57f53ca73e74ef1ea2)\n  _(rect)_ Add `offset` method ([#533](https://github.com/ratatui/ratatui/issues/533))\n\n  ````text\n  The offset method creates a new Rect that is moved by the amount\n  specified in the x and y direction. These values can be positive or\n  negative. This is useful for manual layout tasks.\n\n  ```rust\n  let rect = area.offset(Offset { x: 10, y -10 });\n  ```\n  ````\n\n- [edacaf7](https://github.com/ratatui/ratatui/commit/edacaf7ff4e4b14702f6361af5a6da713b7dc564)\n  _(buffer)_ Deprecate `Cell::symbol` field ([#624](https://github.com/ratatui/ratatui/issues/624))\n\n  ````text\n  The Cell::symbol field is now accessible via a getter method (`symbol()`). This will\n  allow us to make future changes to the Cell internals such as replacing `String` with\n  `compact_str`.\n  ````\n\n- [6b2efd0](https://github.com/ratatui/ratatui/commit/6b2efd0f6c3bf56dc06bbf042db40c0c66de577e)\n  _(layout)_ Accept IntoIterator for constraints ([#663](https://github.com/ratatui/ratatui/issues/663))\n\n  ````text\n  Layout and Table now accept IntoIterator for constraints with an Item\n  that is AsRef<Constraint>. This allows pretty much any collection of\n  constraints to be passed to the layout functions including arrays,\n  vectors, slices, and iterators (without having to call collect() on\n  them).\n  ````\n\n- [753e246](https://github.com/ratatui/ratatui/commit/753e246531e1e9e2ea558911f8d03e738901d85f)\n  _(layout)_ Allow configuring layout fill ([#633](https://github.com/ratatui/ratatui/issues/633))\n\n  ````text\n  The layout split will generally fill the remaining area when `split()`\n  is called. This change allows the caller to configure how any extra\n  space is allocated to the `Rect`s. This is useful for cases where the\n  caller wants to have a fixed size for one of the `Rect`s, and have the\n  other `Rect`s fill the remaining space.\n\n  For now, the method and enum are marked as unstable because the exact\n  name is still being bikeshedded. To enable this functionality, add the\n  `unstable-segment-size` feature flag in your `Cargo.toml`.\n\n  To configure the layout to fill the remaining space evenly, use\n  `Layout::segment_size(SegmentSize::EvenDistribution)`. The default\n  behavior is `SegmentSize::LastTakesRemainder`, which gives the last\n  segment the remaining space. `SegmentSize::None` will disable this\n  behavior. See the docs for `Layout::segment_size()` and\n  `layout::SegmentSize` for more information.\n\n  Fixes https://github.com/ratatui/ratatui/issues/536\n  ````\n\n- [1e2f0be](https://github.com/ratatui/ratatui/commit/1e2f0be75ac3fb3d6500c1de291bd49972b808e4)\n  _(layout)_ Add parameters to Layout::new() ([#557](https://github.com/ratatui/ratatui/issues/557)) [**breaking**]\n\n  ````text\n  Adds a convenience function to create a layout with a direction and a\n  list of constraints which are the most common parameters that would be\n  generally configured using the builder pattern. The constraints can be\n  passed in as any iterator of constraints.\n\n  ```rust\n  let layout = Layout::new(Direction::Horizontal, [\n      Constraint::Percentage(50),\n      Constraint::Percentage(50),\n  ]);\n  ```\n  ````\n\n- [c862aa5](https://github.com/ratatui/ratatui/commit/c862aa5e9ef4dbf494b5151214ac87f5c71e76d4)\n  _(list)_ Support line alignment ([#599](https://github.com/ratatui/ratatui/issues/599))\n\n  ````text\n  The `List` widget now respects the alignment of `Line`s and renders them as expected.\n  ````\n\n- [4424637](https://github.com/ratatui/ratatui/commit/4424637af252dc2f227fe4956eac71135e60fb02)\n  _(span)_ Add setters for content and style ([#647](https://github.com/ratatui/ratatui/issues/647))\n\n- [ebf1f42](https://github.com/ratatui/ratatui/commit/ebf1f4294211d478b8633a06576ec269a50db588)\n  _(style)_ Implement `From` trait for crossterm to `Style` related structs ([#686](https://github.com/ratatui/ratatui/issues/686))\n\n- [e49385b](https://github.com/ratatui/ratatui/commit/e49385b78c8e01fe6381b19d15137346bc6eb8a1)\n  _(table)_ Add a Table::segment_size method ([#660](https://github.com/ratatui/ratatui/issues/660))\n\n  ````text\n  It controls how to distribute extra space to an underconstrained table.\n  The default, legacy behavior is to leave the extra space unused.  The\n  new options are LastTakesRemainder which gets all space to the rightmost\n  column that can used it, and EvenDistribution which divides it amongst\n  all columns.\n  ````\n\n- [b8f71c0](https://github.com/ratatui/ratatui/commit/b8f71c0d6eda3da272d29c7a9b3c47181049f76a)\n  _(widgets/chart)_ Add option to set the position of legend ([#378](https://github.com/ratatui/ratatui/issues/378))\n\n- [5bf4f52](https://github.com/ratatui/ratatui/commit/5bf4f52119ab3e0e3a266af196058179dc1d18c3)\n  _(uncategorized)_ Implement `From` trait for termion to `Style` related structs ([#692](https://github.com/ratatui/ratatui/issues/692))\n\n  ````text\n  * feat(termion): implement from termion color\n\n  * feat(termion): implement from termion style\n\n  * feat(termion): implement from termion `Bg` and `Fg`\n  ````\n\n- [d19b266](https://github.com/ratatui/ratatui/commit/d19b266e0eabdb0fb00660439a1818239c94024b)\n  _(uncategorized)_ Add Constraint helpers (e.g. from_lengths) ([#641](https://github.com/ratatui/ratatui/issues/641))\n\n  ````text\n  Adds helper methods that convert from iterators of u16 values to the\n  specific Constraint type. This makes it easy to create constraints like:\n\n  ```rust\n  // a fixed layout\n  let constraints = Constraint::from_lengths([10, 20, 10]);\n\n  // a centered layout\n  let constraints = Constraint::from_ratios([(1, 4), (1, 2), (1, 4)]);\n  let constraints = Constraint::from_percentages([25, 50, 25]);\n\n  // a centered layout with a minimum size\n  let constraints = Constraint::from_mins([0, 100, 0]);\n\n  // a sidebar / main layout with maximum sizes\n  let constraints = Constraint::from_maxes([30, 200]);\n  ```\n  ````\n\n### Bug Fixes\n\n- [f69d57c](https://github.com/ratatui/ratatui/commit/f69d57c3b59e27b517a5ca1a002af808fee47970)\n  _(rect)_ Fix underflow in the `Rect::intersection` method ([#678](https://github.com/ratatui/ratatui/issues/678))\n\n- [56fc410](https://github.com/ratatui/ratatui/commit/56fc4101056e0f631f563f8f2c07646063e650d3)\n  _(block)_ Make `inner` aware of title positions ([#657](https://github.com/ratatui/ratatui/issues/657))\n\n  ````text\n  Previously, when computing the inner rendering area of a block, all\n  titles were assumed to be positioned at the top, which caused the\n  height of the inner area to be miscalculated.\n  ````\n\n- [ec7b387](https://github.com/ratatui/ratatui/commit/ec7b3872b46c6828c88ce7f72308dc67731fca25)\n  _(doc)_ Do not access deprecated `Cell::symbol` field in doc example ([#626](https://github.com/ratatui/ratatui/issues/626))\n\n- [37c70db](https://github.com/ratatui/ratatui/commit/37c70dbb8e19c0fb35ced16b29751933514a441e)\n  _(table)_ Add widths parameter to new() ([#664](https://github.com/ratatui/ratatui/issues/664)) [**breaking**]\n\n  ````text\n  This prevents creating a table that doesn't actually render anything.\n  ````\n\n- [1f88da7](https://github.com/ratatui/ratatui/commit/1f88da75383f6de76e64e9258fbf38d02ec77af9)\n  _(table)_ Fix new clippy lint which triggers on table widths tests ([#630](https://github.com/ratatui/ratatui/issues/630))\n\n  ````text\n  * fix(table): new clippy lint in 1.74.0 triggers on table widths tests\n  ````\n\n- [36d8c53](https://github.com/ratatui/ratatui/commit/36d8c5364590a559913c40ee5f021b5d8e3466e6)\n  _(table)_ Widths() now accepts AsRef<[Constraint]> ([#628](https://github.com/ratatui/ratatui/issues/628))\n\n  ````text\n  This allows passing an array, slice or Vec of constraints, which is more\n  ergonomic than requiring this to always be a slice.\n\n  The following calls now all succeed:\n\n  ```rust\n  Table::new(rows).widths([Constraint::Length(5), Constraint::Length(5)]);\n  Table::new(rows).widths(&[Constraint::Length(5), Constraint::Length(5)]);\n\n  // widths could also be computed at runtime\n  let widths = vec![Constraint::Length(5), Constraint::Length(5)];\n  Table::new(rows).widths(widths.clone());\n  Table::new(rows).widths(&widths);\n  ```\n  ````\n\n- [34d099c](https://github.com/ratatui/ratatui/commit/34d099c99af27eacfdde71f9ced255c29e1e001a)\n  _(tabs)_ Fixup tests broken by semantic merge conflict ([#665](https://github.com/ratatui/ratatui/issues/665))\n\n  ````text\n  Two changes without any line overlap caused the tabs tests to break\n  ````\n\n- [e4579f0](https://github.com/ratatui/ratatui/commit/e4579f0db2b70b59590cae02e994e3736b19a1b3)\n  _(tabs)_ Set the default highlight_style ([#635](https://github.com/ratatui/ratatui/issues/635)) [**breaking**]\n\n  ````text\n  Previously the default highlight_style was set to `Style::default()`,\n  which meant that the highlight style was the same as the normal style.\n  This change sets the default highlight_style to reversed text.\n  ````\n\n- [28ac55b](https://github.com/ratatui/ratatui/commit/28ac55bc62e4e14e3ace300633d56791a1d3dea0)\n  _(tabs)_ Tab widget now supports custom padding ([#629](https://github.com/ratatui/ratatui/issues/629))\n\n  ````text\n  The Tab widget now contains padding_left and and padding_right\n  properties. Those values can be set with functions `padding_left()`,\n  `padding_right()`, and `padding()` which all accept `Into<Line>`.\n\n  Fixes issue https://github.com/ratatui/ratatui/issues/502\n  ````\n\n- [df0eb1f](https://github.com/ratatui/ratatui/commit/df0eb1f8e94752db542ff58e1453f4f8beab17e2)\n  _(terminal)_ Insert_before() now accepts lines > terminal height and doesn't add an extra blank line ([#596](https://github.com/ratatui/ratatui/issues/596))\n\n  ````text\n  Fixes issue with inserting content with height>viewport_area.height and adds\n  the ability to insert content of height>terminal_height\n\n  - Adds TestBackend::append_lines() and TestBackend::clear_region() methods to\n    support testing the changes\n  ````\n\n- [aaeba27](https://github.com/ratatui/ratatui/commit/aaeba2709c09b7373f3781ecd4b0a96b22fc2764)\n  _(uncategorized)_ Truncate table when overflow ([#685](https://github.com/ratatui/ratatui/issues/685))\n\n  ````text\n  This prevents a panic when rendering an empty right aligned and rightmost table cell\n  ````\n\n- [ffa78aa](https://github.com/ratatui/ratatui/commit/ffa78aa67ccd79b9aa1af0d7ccf56a2059d0f519)\n  _(uncategorized)_ Add #[must_use] to Style-moving methods ([#600](https://github.com/ratatui/ratatui/issues/600))\n\n- [a2f2bd5](https://github.com/ratatui/ratatui/commit/a2f2bd5df53a796c0f2a57bb1b22151e52b5ef03)\n  _(uncategorized)_ MSRV is now `1.70.0` ([#593](https://github.com/ratatui/ratatui/issues/593))\n\n### Refactor\n\n- [f767ea7](https://github.com/ratatui/ratatui/commit/f767ea7d3766887cb79145103b5aa92e0eabf8f6)\n  _(list)_ `start_corner` is now `direction` ([#673](https://github.com/ratatui/ratatui/issues/673))\n\n  ````text\n  The previous name `start_corner` did not communicate clearly the intent of the method.\n  A new method `direction` and a new enum `ListDirection` were added.\n\n  `start_corner` is now deprecated\n  ````\n\n- [b82451f](https://github.com/ratatui/ratatui/commit/b82451fb33f35ae0323a56bb6f962404b076a262)\n  _(examples)_ Add vim binding ([#688](https://github.com/ratatui/ratatui/issues/688))\n\n- [0576a8a](https://github.com/ratatui/ratatui/commit/0576a8aa3212c57d288c67592337a3870ae6dafc)\n  _(layout)_ To natural reading order ([#681](https://github.com/ratatui/ratatui/issues/681))\n\n  ````text\n  Structs and enums at the top of the file helps show the interaction\n  between the types without having to find each type in between longer\n  impl sections.\n\n  Also moved the try_split function into the Layout impl as an associated\n  function and inlined the `layout::split()` which just called try_split.\n  This makes the code a bit more contained.\n  ````\n\n- [4be18ab](https://github.com/ratatui/ratatui/commit/4be18aba8b535165f03d15450276b2e95a7970eb)\n  _(readme)_ Reference awesome-ratatui instead of wiki ([#689](https://github.com/ratatui/ratatui/issues/689))\n\n  ````text\n  * refactor(readme): link awesome-ratatui instead of wiki\n\n  The apps wiki moved to awesome-ratatui\n\n  * docs(readme): Update README.md\n  ````\n\n- [7ef0afc](https://github.com/ratatui/ratatui/commit/7ef0afcb62198f76321e84d9bb19a8a590a3b649)\n  _(widgets)_ Remove unnecessary dynamic dispatch and heap allocation ([#597](https://github.com/ratatui/ratatui/issues/597))\n\n- [b282a06](https://github.com/ratatui/ratatui/commit/b282a0693289d9d2602b54b639d3701d8c8cc8a8)\n  _(uncategorized)_ Remove items deprecated since 0.10 ([#691](https://github.com/ratatui/ratatui/issues/691)) [**breaking**]\n\n  ````text\n  Remove `Axis::title_style` and `Buffer::set_background` which are deprecated since 0.10\n  ````\n\n- [7ced7c0](https://github.com/ratatui/ratatui/commit/7ced7c0aa3acdaa63ed6add59711614993210ba3)\n  _(uncategorized)_ Define struct WrappedLine instead of anonymous tuple ([#608](https://github.com/ratatui/ratatui/issues/608))\n\n  ````text\n  It makes the type easier to document, and more obvious for users\n  ````\n\n### Documentation\n\n- [fe632d7](https://github.com/ratatui/ratatui/commit/fe632d70cb150264d9af2f79145a1d14a3637f3e)\n  _(sparkline)_ Add documentation ([#648](https://github.com/ratatui/ratatui/issues/648))\n\n- [f4c8de0](https://github.com/ratatui/ratatui/commit/f4c8de041d48cec5ea9b3e1f540f57af5a09d7a4)\n  _(chart)_ Document chart module ([#696](https://github.com/ratatui/ratatui/issues/696))\n\n- [1b8b626](https://github.com/ratatui/ratatui/commit/1b8b6261e2de29a37b2cd7d6ee8659fb46d3beff)\n  _(examples)_ Add animation and FPS counter to colors_rgb ([#583](https://github.com/ratatui/ratatui/issues/583))\n\n- [2169a0d](https://github.com/ratatui/ratatui/commit/2169a0da01e3bd6272e33b9de26a033fcb5f55f2)\n  _(examples)_ Add example of half block rendering ([#687](https://github.com/ratatui/ratatui/issues/687))\n\n  ````text\n  This is a fun example of how to render big text using half blocks\n  ````\n\n- [41c44a4](https://github.com/ratatui/ratatui/commit/41c44a4af66ba791959f3a298d1b544330b9a164)\n  _(frame)_ Add docs about resize events ([#697](https://github.com/ratatui/ratatui/issues/697))\n\n- [91c67eb](https://github.com/ratatui/ratatui/commit/91c67eb1009449e0dfdd29e6ef0132c5254cfbde)\n  _(github)_ Update code owners ([#666](https://github.com/ratatui/ratatui/issues/666))\n\n  ````text\n  onboard @Valentin271 as maintainer\n  ````\n\n- [458fa90](https://github.com/ratatui/ratatui/commit/458fa9036281e0e6e88bd2ec90c633e499ce547c)\n  _(lib)_ Tweak the crate documentation ([#659](https://github.com/ratatui/ratatui/issues/659))\n\n- [3ec4e24](https://github.com/ratatui/ratatui/commit/3ec4e24d00e118a12c8fea888e16ce19b75cf45f)\n  _(list)_ Add documentation to the List widget ([#669](https://github.com/ratatui/ratatui/issues/669))\n\n  ````text\n  Adds documentation to the List widget and all its sub components like `ListState` and `ListItem`\n  ````\n\n- [9f37100](https://github.com/ratatui/ratatui/commit/9f371000968044e09545d66068c4ed4ea4b35d8a)\n  _(readme)_ Update README.md and fix the bug that demo2 cannot run ([#595](https://github.com/ratatui/ratatui/issues/595))\n\n  ````text\n  Fixes https://github.com/ratatui/ratatui/issues/594\n  ````\n\n- [2a87251](https://github.com/ratatui/ratatui/commit/2a87251152432fd99c18864f32874fed2cab2f99)\n  _(security)_ Add security policy ([#676](https://github.com/ratatui/ratatui/issues/676))\n\n  ````text\n  * docs: Create SECURITY.md\n\n  * Update SECURITY.md\n  ````\n\n- [987f7ee](https://github.com/ratatui/ratatui/commit/987f7eed4c8bd09e319b504e587eb1f3667ee64b)\n  _(website)_ Rename book to website ([#661](https://github.com/ratatui/ratatui/issues/661))\n\n- [a15c3b2](https://github.com/ratatui/ratatui/commit/a15c3b2660bf4102bc881a5bc11959bc136f4a17)\n  _(uncategorized)_ Remove deprecated table constructor from breaking changes ([#698](https://github.com/ratatui/ratatui/issues/698))\n\n- [113b4b7](https://github.com/ratatui/ratatui/commit/113b4b7a4ea841fe2ca7b1c153243fec781c3cc0)\n  _(uncategorized)_ Rename template links to remove ratatui from name 📚 ([#690](https://github.com/ratatui/ratatui/issues/690))\n\n- [211160c](https://github.com/ratatui/ratatui/commit/211160ca165e2ad23b3d4cd9382c6e4869644a9c)\n  _(uncategorized)_ Remove simple-tui-rs ([#651](https://github.com/ratatui/ratatui/issues/651))\n\n  ````text\n  This has not been recently and doesn't lead to good code\n  ````\n\n### Styling\n\n- [6a6e9dd](https://github.com/ratatui/ratatui/commit/6a6e9dde9dc66ecb6f47f858fd0a67d7dc9eb7d1)\n  _(tabs)_ Fix doc formatting ([#662](https://github.com/ratatui/ratatui/issues/662))\n\n### Miscellaneous Tasks\n\n- [910ad00](https://github.com/ratatui/ratatui/commit/910ad00059c3603ba6b1751c95783f974fde88a1)\n  _(rustfmt)_ Enable format_code_in_doc_comments ([#695](https://github.com/ratatui/ratatui/issues/695))\n\n  ````text\n  This enables more consistently formatted code in doc comments,\n  especially since ratatui heavily uses fluent setters.\n\n  See https://rust-lang.github.io/rustfmt/?version=v1.6.0#format_code_in_doc_comments\n  ````\n\n- [d118565](https://github.com/ratatui/ratatui/commit/d118565ef60480fba8f2906ede81f875a562cb61)\n  _(table)_ Cleanup docs and builder methods ([#638](https://github.com/ratatui/ratatui/issues/638))\n\n  ````text\n  - Refactor the `table` module for better top to bottom readability by\n  putting types first and arranging them in a logical order (Table, Row,\n  Cell, other).\n\n  - Adds new methods for:\n    - `Table::rows`\n    - `Row::cells`\n    - `Cell::new`\n    - `Cell::content`\n    - `TableState::new`\n    - `TableState::selected_mut`\n\n  - Makes `HighlightSpacing::should_add` pub(crate) since it's an internal\n    detail.\n\n  - Adds tests for all the new methods and simple property tests for all\n    the other setter methods.\n  ````\n\n- [dd22e72](https://github.com/ratatui/ratatui/commit/dd22e721e3aed24538eb08e46e40339cec636bcb)\n  _(uncategorized)_ Correct \"builder methods\" in docs and add `must_use` on widgets setters ([#655](https://github.com/ratatui/ratatui/issues/655))\n\n- [18e19f6](https://github.com/ratatui/ratatui/commit/18e19f6ce6ae3ce9bd52110ab6cbd4ed4bcca5e6)\n  _(uncategorized)_ Fix breaking changes doc versions ([#639](https://github.com/ratatui/ratatui/issues/639))\n\n  ````text\n  Moves the layout::new change to unreleasedd section and adds the table change\n  ````\n\n- [a58cce2](https://github.com/ratatui/ratatui/commit/a58cce2dba404fe394bbb298645bf3c40518fe1f)\n  _(uncategorized)_ Disable default benchmarking ([#598](https://github.com/ratatui/ratatui/issues/598))\n\n  ````text\n  Disables the default benchmarking behaviour for the lib target to fix unrecognized\n  criterion benchmark arguments.\n\n  See https://bheisler.github.io/criterion.rs/book/faq.html#cargo-bench-gives-unrecognized-option-errors-for-valid-command-line-options for details\n  ````\n\n### Continuous Integration\n\n- [59b9c32](https://github.com/ratatui/ratatui/commit/59b9c32fbc2bc6725bdec42e63216024fab71493)\n  _(codecov)_ Adjust threshold and noise settings ([#615](https://github.com/ratatui/ratatui/issues/615))\n\n  ````text\n  Fixes https://github.com/ratatui/ratatui/issues/612\n  ````\n\n- [03401cd](https://github.com/ratatui/ratatui/commit/03401cd46e6566af4d063bac11efc30f28b5358a)\n  _(uncategorized)_ Fix untrusted input in pr check workflow ([#680](https://github.com/ratatui/ratatui/issues/680))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- @rikonaka\n- @danny-burrows\n- @SOF3\n- @jan-ferdinand\n- @rhaskia\n- @asomers\n- @progval\n- @TylerBloom\n- @YeungKC\n- @lyuha\n\n## [0.24.0](https://github.com/ratatui/ratatui/releases/tag/v0.24.0) - 2023-10-23\n\nWe are excited to announce the new version of `ratatui` - a Rust library that's all about cooking up TUIs 🐭\n\nIn this version, we've introduced features like window size API, enhanced chart rendering, and more.\nThe list of \\*breaking changes\\* can be found [here](https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md) ⚠️.\nAlso, we created various tutorials and walkthroughs in [Ratatui Book](https://github.com/ratatui/ratatui-book) which is available at <https://ratatui.rs> 🚀\n\n✨ **Release highlights**: <https://ratatui.rs/highlights/v024>\n\n### Features\n\n- [c6c3f88](https://github.com/ratatui/ratatui/commit/c6c3f88a79515a085fb8a96fe150843dab6dd5bc)\n  _(backend)_ Implement common traits for `WindowSize` ([#586](https://github.com/ratatui/ratatui/issues/586))\n\n- [d077903](https://github.com/ratatui/ratatui/commit/d0779034e741834aac36b5b7a87c54bd8c50b7f2)\n  _(backend)_ Backend provides window_size, add Size struct ([#276](https://github.com/ratatui/ratatui/issues/276))\n\n  ```text\n  For image (sixel, iTerm2, Kitty...) support that handles graphics in\n  terms of `Rect` so that the image area can be included in layouts.\n\n  For example: an image is loaded with a known pixel-size, and drawn, but\n  the image protocol has no mechanism of knowing the actual cell/character\n  area that been drawn on. It is then impossible to skip overdrawing the\n  area.\n\n  Returning the window size in pixel-width / pixel-height, together with\n  columns / rows, it can be possible to account the pixel size of each cell\n  / character, and then known the `Rect` of a given image, and also resize\n  the image so that it fits exactly in a `Rect`.\n\n  Crossterm and termwiz also both return both sizes from one syscall,\n  while termion does two.\n\n  Add a `Size` struct for the cases where a `Rect`'s `x`/`y` is unused\n  (always zero).\n\n  `Size` is not \"clipped\" for `area < u16::max_value()` like `Rect`. This\n  is why there are `From` implementations between the two.\n  ```\n\n- [301366c](https://github.com/ratatui/ratatui/commit/301366c4fa33524b0634bbd3dcf1abd1a1ebe7c6)\n  _(barchart)_ Render charts smaller than 3 lines ([#532](https://github.com/ratatui/ratatui/issues/532))\n\n  ```text\n  The bar values are not shown if the value width is equal the bar width\n  and the bar is height is less than one line\n\n  Add an internal structure `LabelInfo` which stores the reserved height\n  for the labels (0, 1 or 2) and also whether the labels will be shown.\n\n  Fixes ratatui#513\n  ```\n\n- [32e4619](https://github.com/ratatui/ratatui/commit/32e461953c8c9231edeef65c410b295916f26f3e)\n  _(block)_ Allow custom symbols for borders ([#529](https://github.com/ratatui/ratatui/issues/529)) [**breaking**]\n\n  ````text\n  Adds a new `Block::border_set` method that allows the user to specify\n  the symbols used for the border.\n\n  Added two new border types: `BorderType::QuadrantOutside` and\n  `BorderType::QuadrantInside`. These are used to draw borders using the\n  unicode quadrant characters (which look like half block \"pixels\").\n\n  ```\n  ▛▀▀▜\n  ▌  ▐\n  ▙▄▄▟\n\n  ▗▄▄▖\n  ▐  ▌\n  ▝▀▀▘\n  ```\n  Fixes: https://github.com/ratatui/ratatui/issues/528\n\n  BREAKING CHANGES:\n  - BorderType::to_line_set is renamed to to_border_set\n  - BorderType::line_symbols is renamed to border_symbols\n  ````\n\n- [4541336](https://github.com/ratatui/ratatui/commit/45413365146ede5472dc28e0ee1970d245e2fa02)\n  _(canvas)_ Implement half block marker ([#550](https://github.com/ratatui/ratatui/issues/550))\n\n  ```text\n  * feat(canvas): implement half block marker\n\n  A useful technique for the terminal is to use half blocks to draw a grid\n  of \"pixels\" on the screen. Because we can set two colors per cell, and\n  because terminal cells are about twice as tall as they are wide, we can\n  draw a grid of half blocks that looks like a grid of square pixels.\n\n  This commit adds a new `HalfBlock` marker that can be used in the Canvas\n  widget and the associated HalfBlockGrid.\n\n  Also updated demo2 to use the new marker as it looks much nicer.\n\n  Adds docs for many of the methods and structs on canvas.\n\n  Changes the grid resolution method to return the pixel count\n  rather than the index of the last pixel.\n  This is an internal detail with no user impact.\n  ```\n\n- [be55a5f](https://github.com/ratatui/ratatui/commit/be55a5fbcdffc4fd6aeb7edffa32f6e6c942a41e)\n  _(examples)_ Add demo2 example ([#500](https://github.com/ratatui/ratatui/issues/500))\n\n- [082cbcb](https://github.com/ratatui/ratatui/commit/082cbcbc501d4284dc7e142227f9e04ef17da61d)\n  _(frame)_ Remove generic Backend parameter ([#530](https://github.com/ratatui/ratatui/issues/530)) [**breaking**]\n\n  ````text\n  This change simplifies UI code that uses the Frame type. E.g.:\n\n  ```rust\n  fn draw<B: Backend>(frame: &mut Frame<B>) {\n      // ...\n  }\n  ```\n\n  Frame was generic over Backend because it stored a reference to the\n  terminal in the field. Instead it now directly stores the viewport area\n  and current buffer. These are provided at creation time and are valid\n  for the duration of the frame.\n\n  BREAKING CHANGE: Frame is no longer generic over Backend. Code that\n  accepted a Frame<Backend> will now need to accept a Frame.\n  ````\n\n- [d67fa2c](https://github.com/ratatui/ratatui/commit/d67fa2c00d6d6125eeefa0eeeb032664dae9a4de)\n  _(line)_ Add `Line::raw` constructor ([#511](https://github.com/ratatui/ratatui/issues/511))\n\n  ```text\n  * feat(line): add `Line::raw` constructor\n\n  There is already `Span::raw` and `Text::raw` methods\n  and this commit simply adds `Line::raw` method for symmetry.\n\n  Multi-line content is converted to multiple spans with the new line removed\n  ```\n\n- [cbf86da](https://github.com/ratatui/ratatui/commit/cbf86da0e7e4a2d99ace8df68854de74157a665a)\n  _(rect)_ Add is_empty() to simplify some common checks ([#534](https://github.com/ratatui/ratatui/issues/534))\n\n  ```text\n  - add `Rect::is_empty()` that checks whether either height or width == 0\n  - refactored `Rect` into layout/rect.rs from layout.rs. No public API change as\n     the module is private and the type is re-exported under the `layout` module.\n  ```\n\n- [15641c8](https://github.com/ratatui/ratatui/commit/15641c8475b7596c97a0affce0d6082c4b9586c2)\n  _(uncategorized)_ Add `buffer_mut` method on `Frame` ✨ ([#548](https://github.com/ratatui/ratatui/issues/548))\n\n### Bug Fixes\n\n- [638d596](https://github.com/ratatui/ratatui/commit/638d596a3b7aec723a2354cf0e261b207ac412f8)\n  _(layout)_ Use LruCache for layout cache ([#487](https://github.com/ratatui/ratatui/issues/487))\n\n  ```text\n  The layout cache now uses a LruCache with default size set to 16 entries.\n  Previously the cache was backed by a HashMap, and was able to grow\n  without bounds as a new entry was added for every new combination of\n  layout parameters.\n\n  - Added a new method (`layout::init_cache(usize)`) that allows the cache\n  size to be changed if necessary. This will only have an effect if it is called\n  prior to any calls to `layout::split()` as the cache is wrapped in a `OnceLock`\n  ```\n\n- [8d507c4](https://github.com/ratatui/ratatui/commit/8d507c43fa866ab4c0eda9fd169f307fba2a1109)\n  _(backend)_ Add feature flag for underline-color ([#570](https://github.com/ratatui/ratatui/issues/570))\n\n  ````text\n  Windows 7 doesn't support the underline color attribute, so we need to\n  make it optional. This commit adds a feature flag for the underline\n  color attribute - it is enabled by default, but can be disabled by\n  passing `--no-default-features` to cargo.\n\n  We could specically check for Windows 7 and disable the feature flag\n  automatically, but I think it's better for this check to be done by the\n  crossterm crate, since it's the one that actually knows about the\n  underlying terminal.\n\n  To disable the feature flag in an application that supports Windows 7,\n  add the following to your Cargo.toml:\n\n  ```toml\n  ratatui = { version = \"0.24.0\", default-features = false, features = [\"crossterm\"] }\n  ```\n\n  Fixes https://github.com/ratatui/ratatui/issues/555\n  ````\n\n- [c3155a2](https://github.com/ratatui/ratatui/commit/c3155a24895ec4dfb1a8e580fb9ee3d31e9af139)\n  _(barchart)_ Add horizontal labels([#518](https://github.com/ratatui/ratatui/issues/518))\n\n  ```text\n  Labels were missed in the initial implementation of the horizontal\n  mode for the BarChart widget. This adds them.\n\n  Fixes https://github.com/ratatui/ratatui/issues/499\n  ```\n\n- [c5ea656](https://github.com/ratatui/ratatui/commit/c5ea656385843c880b3bef45dccbe8ea57431d10)\n  _(barchart)_ Avoid divide by zero in rendering ([#525](https://github.com/ratatui/ratatui/issues/525))\n\n- [c9b8e7c](https://github.com/ratatui/ratatui/commit/c9b8e7cf412de235082f1fcd1698468c4b1b6171)\n  _(barchart)_ Render value labels with unicode correctly ([#515](https://github.com/ratatui/ratatui/issues/515))\n\n  ```text\n  An earlier change introduced a bug where the width of value labels with\n  unicode characters was incorrectly using the string length in bytes\n  instead of the unicode character count. This reverts the earlier change.\n  ```\n\n- [c8ab2d5](https://github.com/ratatui/ratatui/commit/c8ab2d59087f5b475ecf6ffa31b89ce24b6b1d28)\n  _(chart)_ Use graph style for top line ([#462](https://github.com/ratatui/ratatui/issues/462))\n\n  ```text\n  A bug in the rendering caused the top line of the chart to be rendered\n  using the style of the chart, instead of the dataset style. This is\n  fixed by only setting the style for the width of the text, and not the\n  entire row.\n  ```\n\n- [0c7d547](https://github.com/ratatui/ratatui/commit/0c7d547db196a7cf65a6bf8cde74bd908407a3ff)\n  _(docs)_ Don't fail rustdoc due to termion ([#503](https://github.com/ratatui/ratatui/issues/503))\n\n  ```text\n  Windows cannot compile termion, so it is not included in the docs.\n  Rustdoc will fail if it cannot find a link, so the docs fail to build\n  on windows.\n\n  This replaces the link to TermionBackend with one that does not fail\n  during checks.\n\n  Fixes https://github.com/ratatui/ratatui/issues/498\n  ```\n\n- [0c52ff4](https://github.com/ratatui/ratatui/commit/0c52ff431a1eedb0e38b5c8fb6623d4da17fa97e)\n  _(gauge)_ Fix gauge widget colors ([#572](https://github.com/ratatui/ratatui/issues/572))\n\n  ```text\n  The background colors of the gauge had a workaround for the issue we had\n  with VHS / TTYD rendering the background color of the gauge. This\n  workaround is no longer necessary in the updated versions of VHS / TTYD.\n\n  Fixes https://github.com/ratatui/ratatui/issues/501\n  ```\n\n- [11076d0](https://github.com/ratatui/ratatui/commit/11076d0af3a76229af579fb40684fdd37df172dd)\n  _(rect)_ Fix arithmetic overflow edge cases ([#543](https://github.com/ratatui/ratatui/issues/543))\n\n  ```text\n  Fixes https://github.com/ratatui/ratatui/issues/258\n  ```\n\n- [21303f2](https://github.com/ratatui/ratatui/commit/21303f21672de1405135bb785497c30150644078)\n  _(rect)_ Prevent overflow in inner() and area() ([#523](https://github.com/ratatui/ratatui/issues/523))\n\n- [ebd3680](https://github.com/ratatui/ratatui/commit/ebd3680a471d96ae1d8f52cd9e4a8a80c142d060)\n  _(stylize)_ Add Stylize impl for String ([#466](https://github.com/ratatui/ratatui/issues/466)) [**breaking**]\n\n  ```text\n  Although the `Stylize` trait is already implemented for `&str` which\n  extends to `String`, it is not implemented for `String` itself. This\n  commit adds an impl of Stylize that returns a Span<'static> for `String`\n  so that code can call Stylize methods on temporary `String`s.\n\n  E.g. the following now compiles instead of failing with a compile error\n  about referencing a temporary value:\n\n      let s = format!(\"hello {name}!\", \"world\").red();\n\n  BREAKING CHANGE: This may break some code that expects to call Stylize\n  methods on `String` values and then use the String value later. This\n  will now fail to compile because the String is consumed by set_style\n  instead of a slice being created and consumed.\n\n  This can be fixed by cloning the `String`. E.g.:\n\n      let s = String::from(\"hello world\");\n      let line = Line::from(vec![s.red(), s.green()]); // fails to compile\n      let line = Line::from(vec![s.clone().red(), s.green()]); // works\n\n  Fixes https://discord.com/channels/1070692720437383208/1072907135664529508/1148229700821450833\n  ```\n\n### Refactor\n\n- [2fd85af](https://github.com/ratatui/ratatui/commit/2fd85af33c5cb7c04286e4e4198a939b4857eadc)\n  _(barchart)_ Simplify internal implementation ([#544](https://github.com/ratatui/ratatui/issues/544))\n\n  ```text\n  Replace `remove_invisible_groups_and_bars` with `group_ticks`\n  `group_ticks` calculates the visible bar length in ticks. (A cell contains 8 ticks).\n\n  It is used for 2 purposes:\n  1. to get the bar length in ticks for rendering\n  2. since it delivers only the values of the visible bars, If we zip these values\n     with the groups and bars, then we will filter out the invisible groups and bars\n  ```\n\n### Documentation\n\n- [0c68ebe](https://github.com/ratatui/ratatui/commit/0c68ebed4f63a595811006e0af221b11a83780cf)\n  _(block)_ Add documentation to Block ([#469](https://github.com/ratatui/ratatui/issues/469))\n\n- [0fe7385](https://github.com/ratatui/ratatui/commit/0fe738500cd461aeafa0a63b37ed6250777f3599)\n  _(gauge)_ Add docs for `Gauge` and `LineGauge` ([#514](https://github.com/ratatui/ratatui/issues/514))\n\n- [27c5637](https://github.com/ratatui/ratatui/commit/27c56376756b854db6d2fd8939419bd8578f8a90)\n  _(readme)_ Fix links to CONTRIBUTING.md and BREAKING-CHANGES.md ([#577](https://github.com/ratatui/ratatui/issues/577))\n\n- [1947c58](https://github.com/ratatui/ratatui/commit/1947c58c60127ee7d1a72bcd408ee23062b8c4ec)\n  _(backend)_ Improve backend module docs ([#489](https://github.com/ratatui/ratatui/issues/489))\n\n- [e098731](https://github.com/ratatui/ratatui/commit/e098731d6c1a68a0319d544301ac91cf2d05ccb2)\n  _(barchart)_ Add documentation to `BarChart` ([#449](https://github.com/ratatui/ratatui/issues/449))\n\n  ```text\n  Add documentation to the `BarChart` widgets and its sub-modules.\n  ```\n\n- [17797d8](https://github.com/ratatui/ratatui/commit/17797d83dab07dc6b76e7a3838e3e17fc3c94711)\n  _(canvas)_ Add support note for Braille marker ([#472](https://github.com/ratatui/ratatui/issues/472))\n\n- [3cf0b83](https://github.com/ratatui/ratatui/commit/3cf0b83bda5deee18b8a1233acec0a21fde1f5f4)\n  _(color)_ Document true color support ([#477](https://github.com/ratatui/ratatui/issues/477))\n\n  ```text\n  * refactor(style): move Color to separate color mod\n\n  * docs(color): document true color support\n  ```\n\n- [e5caf17](https://github.com/ratatui/ratatui/commit/e5caf170c8c304b952cbff7499fd4da17ab154ea)\n  _(custom_widget)_ Make button sticky when clicking with mouse ([#561](https://github.com/ratatui/ratatui/issues/561))\n\n- [ad2dc56](https://github.com/ratatui/ratatui/commit/ad2dc5646dae04fa5502e677182cdeb0c3630cce)\n  _(examples)_ Update examples readme ([#576](https://github.com/ratatui/ratatui/issues/576))\n\n  ```text\n  remove VHS bug info, tweak colors_rgb image, update some of the instructions. add demo2\n  ```\n\n- [b61f65b](https://github.com/ratatui/ratatui/commit/b61f65bc20918380f2854253d4301ea804fc7437)\n  _(examples)_ Update theme to Aardvark Blue ([#574](https://github.com/ratatui/ratatui/issues/574))\n\n  ```text\n  This is a nicer theme that makes the colors pop\n  ```\n\n- [61af0d9](https://github.com/ratatui/ratatui/commit/61af0d99069ec99b3075cd499ede13cc2143401f)\n  _(examples)_ Make custom widget example into a button ([#539](https://github.com/ratatui/ratatui/issues/539))\n\n  ```text\n  The widget also now supports mouse\n  ```\n\n- [6b8725f](https://github.com/ratatui/ratatui/commit/6b8725f09173f418e9f17933d8ef8c943af444de)\n  _(examples)_ Add colors_rgb example ([#476](https://github.com/ratatui/ratatui/issues/476))\n\n- [5c785b2](https://github.com/ratatui/ratatui/commit/5c785b22709fb64a0982722e4f6d0021ccf621b2)\n  _(examples)_ Move example gifs to github ([#460](https://github.com/ratatui/ratatui/issues/460))\n\n  ```text\n  - A new orphan branch named \"images\" is created to store the example\n    images\n  ```\n\n- [ca9bcd3](https://github.com/ratatui/ratatui/commit/ca9bcd3156f55cd2df4edf003aa1401abbed9b12)\n  _(examples)_ Add descriptions and update theme ([#460](https://github.com/ratatui/ratatui/issues/460))\n\n  ```text\n  - Use the OceanicMaterial consistently in examples\n  ```\n\n- [080a05b](https://github.com/ratatui/ratatui/commit/080a05bbd3357cde3f0a02721a0f7f1aa206206b)\n  _(paragraph)_ Add docs for alignment fn ([#467](https://github.com/ratatui/ratatui/issues/467))\n\n- [1e20475](https://github.com/ratatui/ratatui/commit/1e204750617acccf952b1845a3c7ce86e2b90cf7)\n  _(stylize)_ Improve docs for style shorthands ([#491](https://github.com/ratatui/ratatui/issues/491))\n\n  ```text\n  The Stylize trait was introduced in 0.22 to make styling less verbose.\n  This adds a bunch of documentation comments to the style module and\n  types to make this easier to discover.\n  ```\n\n- [dd9a8df](https://github.com/ratatui/ratatui/commit/dd9a8df03ab09d2381ef5ddd0c2b6ef5517b44df)\n  _(table)_ Add documentation for `block` and `header` methods of the `Table` widget ([#505](https://github.com/ratatui/ratatui/issues/505))\n\n- [232be80](https://github.com/ratatui/ratatui/commit/232be80325cb899359ea1389516c421e57bc9cce)\n  _(table)_ Add documentation for `Table::new()` ([#471](https://github.com/ratatui/ratatui/issues/471))\n\n- [3bda372](https://github.com/ratatui/ratatui/commit/3bda37284781b62560cde2a7fa774211f651ec25)\n  _(tabs)_ Add documentation to `Tabs` ([#535](https://github.com/ratatui/ratatui/issues/535))\n\n- [42f8169](https://github.com/ratatui/ratatui/commit/42f816999e2cd573c498c4885069a5523707663c)\n  _(terminal)_ Add docs for terminal module ([#486](https://github.com/ratatui/ratatui/issues/486))\n\n  ```text\n  - moves the impl Terminal block up to be closer to the type definition\n  ```\n\n- [28e7fd4](https://github.com/ratatui/ratatui/commit/28e7fd4bc58edf537b66b69095691ae06872acd8)\n  _(terminal)_ Fix doc comment ([#452](https://github.com/ratatui/ratatui/issues/452))\n\n- [51fdcbe](https://github.com/ratatui/ratatui/commit/51fdcbe7e936b3af3ee6a8ae8fee43df31aab27c)\n  _(title)_ Add documentation to title ([#443](https://github.com/ratatui/ratatui/issues/443))\n\n  ```text\n  This adds documentation for Title and Position\n  ```\n\n- [d4976d4](https://github.com/ratatui/ratatui/commit/d4976d4b63d4a17adb31bbe853a82109e2caaf1b)\n  _(widgets)_ Update the list of available widgets ([#496](https://github.com/ratatui/ratatui/issues/496))\n\n- [6c7bef8](https://github.com/ratatui/ratatui/commit/6c7bef8d111bbc3ecfe228b14002c5db9634841c)\n  _(uncategorized)_ Replace colons with dashes in README.md for consistency ([#566](https://github.com/ratatui/ratatui/issues/566))\n\n- [88ae348](https://github.com/ratatui/ratatui/commit/88ae3485c2c540b4ee630ab13e613e84efa7440a)\n  _(uncategorized)_ Update `Frame` docstring to remove reference to generic backend ([#564](https://github.com/ratatui/ratatui/issues/564))\n\n- [089f8ba](https://github.com/ratatui/ratatui/commit/089f8ba66a50847780c4416b9b8833778a95e558)\n  _(uncategorized)_ Add double quotes to instructions for features ([#560](https://github.com/ratatui/ratatui/issues/560))\n\n- [346e7b4](https://github.com/ratatui/ratatui/commit/346e7b4f4d53063ee13b04758b1b994e4f14e51c)\n  _(uncategorized)_ Add summary to breaking changes ([#549](https://github.com/ratatui/ratatui/issues/549))\n\n- [401a7a7](https://github.com/ratatui/ratatui/commit/401a7a7f7111989d7dda11524b211a488483e732)\n  _(uncategorized)_ Improve clarity in documentation for `Frame` and `Terminal` 📚 ([#545](https://github.com/ratatui/ratatui/issues/545))\n\n- [e35e413](https://github.com/ratatui/ratatui/commit/e35e4135c9080389baa99e13814aace7784d9cb3)\n  _(uncategorized)_ Fix terminal comment ([#547](https://github.com/ratatui/ratatui/issues/547))\n\n- [8ae4403](https://github.com/ratatui/ratatui/commit/8ae4403b63a82d353b224c898b15249f30215476)\n  _(uncategorized)_ Fix `Terminal` docstring ([#546](https://github.com/ratatui/ratatui/issues/546))\n\n- [9cfb133](https://github.com/ratatui/ratatui/commit/9cfb133a981c070a27342d78f4b9451673d8b349)\n  _(uncategorized)_ Document alpha release process ([#542](https://github.com/ratatui/ratatui/issues/542))\n\n  ```text\n  Fixes https://github.com/ratatui/ratatui/issues/412\n  ```\n\n- [4548a9b](https://github.com/ratatui/ratatui/commit/4548a9b7e22b07c1bd6839280c44123b8679589d)\n  _(uncategorized)_ Add BREAKING-CHANGES.md ([#538](https://github.com/ratatui/ratatui/issues/538))\n\n  ```text\n  Document the breaking changes in each version. This document is\n  manually curated by summarizing the breaking changes in the changelog.\n  ```\n\n- [c0991cc](https://github.com/ratatui/ratatui/commit/c0991cc576b3ade02494cb33fd7c290aba55bfb8)\n  _(uncategorized)_ Make library and README consistent ([#526](https://github.com/ratatui/ratatui/issues/526))\n\n  ```text\n  * docs: make library and README consistent\n\n  Generate the bulk of the README from the library documentation, so that\n  they are consistent using cargo-rdme.\n\n  - Removed the Contributors section, as it is redundant with the github\n    contributors list.\n  - Removed the info about the other backends and replaced it with a\n    pointer to the documentation.\n  - add docsrs example, vhs tape and images that will end up in the README\n  ```\n\n- [1414fbc](https://github.com/ratatui/ratatui/commit/1414fbcc05b4dfd7706cc68fcaba7d883e22f869)\n  _(uncategorized)_ Import prelude::\\* in doc examples ([#490](https://github.com/ratatui/ratatui/issues/490))\n\n  ```text\n  This commit adds `prelude::*` all doc examples and widget::* to those\n  that need it. This is done to highlight the use of the prelude and\n  simplify the examples.\n\n  - Examples in Type and module level comments show all imports and use\n    `prelude::*` and `widget::*` where possible.\n  - Function level comments hide imports unless there are imports other\n    than `prelude::*` and `widget::*`.\n  ```\n\n- [74c5244](https://github.com/ratatui/ratatui/commit/74c5244be12031e372797c3c7949914552293f5c)\n  _(uncategorized)_ Add logo and favicon to docs.rs page ([#473](https://github.com/ratatui/ratatui/issues/473))\n\n- [927a5d8](https://github.com/ratatui/ratatui/commit/927a5d8251a7947446100f4bb4d7a8e3ec2ad962)\n  _(uncategorized)_ Fix documentation lint warnings ([#450](https://github.com/ratatui/ratatui/issues/450))\n\n- [eda2fb7](https://github.com/ratatui/ratatui/commit/eda2fb7077dcf0b158d1a69d2725aeb9464162be)\n  _(uncategorized)_ Use ratatui 📚 ([#446](https://github.com/ratatui/ratatui/issues/446))\n\n### Testing\n\n- [ea70bff](https://github.com/ratatui/ratatui/commit/ea70bffe5d3ec68dcf9eff015437d2474c08f855)\n  _(barchart)_ Add benchmarks ([#455](https://github.com/ratatui/ratatui/issues/455))\n\n- [94af2a2](https://github.com/ratatui/ratatui/commit/94af2a29e10248ed709bbc8a7bf2f569894abc62)\n  _(buffer)_ Allow with_lines to accept Vec<Into<Line>> ([#494](https://github.com/ratatui/ratatui/issues/494))\n\n  ```text\n  This allows writing unit tests without having to call set_style on the\n  expected buffer.\n  ```\n\n### Miscellaneous Tasks\n\n- [1278131](https://github.com/ratatui/ratatui/commit/127813120eb17a7652b90e4333bb576e510ff51b)\n  _(changelog)_ Make the scopes lowercase in the changelog ([#479](https://github.com/ratatui/ratatui/issues/479))\n\n- [82b40be](https://github.com/ratatui/ratatui/commit/82b40be4ab8aa735070dff1681c3d711147792e1)\n  _(ci)_ Improve checking the PR title ([#464](https://github.com/ratatui/ratatui/issues/464))\n\n  ```text\n  - Use [`action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request)\n  - Allow only reading the PR contents\n  - Enable merge group\n  ```\n\n- [a20bd6a](https://github.com/ratatui/ratatui/commit/a20bd6adb5431d19140acdf1f9201381a31b2b24)\n  _(deps)_ Update lru requirement from 0.11.1 to 0.12.0 ([#581](https://github.com/ratatui/ratatui/issues/581))\n\n  ```text\n  Updates the requirements on [lru](https://github.com/jeromefroe/lru-rs) to permit the latest version.\n  - [Changelog](https://github.com/jeromefroe/lru-rs/blob/master/CHANGELOG.md)\n  - [Commits](https://github.com/jeromefroe/lru-rs/compare/0.11.1...0.12.0)\n\n  ---\n  updated-dependencies:\n  - dependency-name: lru\n    dependency-type: direct:production\n  ...\n  ```\n\n- [5213f78](https://github.com/ratatui/ratatui/commit/5213f78d25927d834ada29b8c1023fcba5c891c6)\n  _(deps)_ Bump actions/checkout from 3 to 4 ([#580](https://github.com/ratatui/ratatui/issues/580))\n\n  ```text\n  Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n  - [Release notes](https://github.com/actions/checkout/releases)\n  - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n  - [Commits](https://github.com/actions/checkout/compare/v3...v4)\n\n  ---\n  updated-dependencies:\n  - dependency-name: actions/checkout\n    dependency-type: direct:production\n    update-type: version-update:semver-major\n  ...\n  ```\n\n- [6cbdb06](https://github.com/ratatui/ratatui/commit/6cbdb06fd86858849d2454d09393a8e43c10741f)\n  _(examples)_ Refactor some examples ([#578](https://github.com/ratatui/ratatui/issues/578))\n\n  ```text\n  * chore(examples): Simplify timeout calculation with `Duration::saturating_sub`\n  ```\n\n- [12f9291](https://github.com/ratatui/ratatui/commit/12f92911c74211a22c6c142762ccb459d399763b)\n  _(github)_ Create dependabot.yml ([#575](https://github.com/ratatui/ratatui/issues/575))\n\n  ```text\n  * chore: Create dependabot.yml\n\n  * Update .github/dependabot.yml\n  ```\n\n- [3a57e76](https://github.com/ratatui/ratatui/commit/3a57e76ed18b93f0bcee264d818a469920ce70db)\n  _(github)_ Add contact links for issues ([#567](https://github.com/ratatui/ratatui/issues/567))\n\n- [5498a88](https://github.com/ratatui/ratatui/commit/5498a889ae8bd4ccb51b04d3a848dd2f58935906)\n  _(spans)_ Remove deprecated `Spans` type ([#426](https://github.com/ratatui/ratatui/issues/426))\n\n  ```text\n  The `Spans` type (plural, not singular) was replaced with a more ergonomic `Line` type\n  in Ratatui v0.21.0 and marked deprecated but left for backwards compatibility. This is now\n  removed.\n\n  - `Line` replaces `Spans`\n  - `Buffer::set_line` replaces `Buffer::set_spans`\n  ```\n\n- [fbf1a45](https://github.com/ratatui/ratatui/commit/fbf1a451c85871db598cf1df2ad9a50edbe07cd2)\n  _(uncategorized)_ Simplify constraints ([#556](https://github.com/ratatui/ratatui/issues/556))\n\n  ```text\n  Use bare arrays rather than array refs / Vecs for all constraint\n  examples.\n  ```\n\n- [a7bf4b3](https://github.com/ratatui/ratatui/commit/a7bf4b3f36f3281017d112ac1a67af7e82308261)\n  _(uncategorized)_ Use modern modules syntax ([#492](https://github.com/ratatui/ratatui/issues/492))\n\n  ```text\n  Move xxx/mod.rs to xxx.rs\n  ```\n\n- [af36282](https://github.com/ratatui/ratatui/commit/af36282df5d8dd1b4e6b32bba0539dba3382c23c)\n  _(uncategorized)_ Only run check pr action on pull_request_target events ([#485](https://github.com/ratatui/ratatui/issues/485))\n\n- [322e46f](https://github.com/ratatui/ratatui/commit/322e46f15d8326d18c951be4c57e3b47005285bc)\n  _(uncategorized)_ Prevent PR merge with do not merge labels ♻️ ([#484](https://github.com/ratatui/ratatui/issues/484))\n\n- [983ea7f](https://github.com/ratatui/ratatui/commit/983ea7f7a5371dd608891a0e2a7444a16e9fdc54)\n  _(uncategorized)_ Fix check for if breaking change label should be added ♻️ ([#483](https://github.com/ratatui/ratatui/issues/483))\n\n- [384e616](https://github.com/ratatui/ratatui/commit/384e616231c1579328e7a4ba1a7130f624753ad1)\n  _(uncategorized)_ Add a check for if breaking change label should be added ♻️ ([#481](https://github.com/ratatui/ratatui/issues/481))\n\n- [5f6aa30](https://github.com/ratatui/ratatui/commit/5f6aa30be54ea5dfcef730d709707a814e64deee)\n  _(uncategorized)_ Check documentation lint ([#454](https://github.com/ratatui/ratatui/issues/454))\n\n- [47ae602](https://github.com/ratatui/ratatui/commit/47ae602df43674928f10016e2edc97c550b01ba2)\n  _(uncategorized)_ Check that PR title matches conventional commit guidelines ♻️ ([#459](https://github.com/ratatui/ratatui/issues/459))\n\n- [28c6157](https://github.com/ratatui/ratatui/commit/28c61571e8a90345a866285a6f8459b24b70578a)\n  _(uncategorized)_ Add documentation guidelines ([#447](https://github.com/ratatui/ratatui/issues/447))\n\n### Continuous Integration\n\n- [343c6cd](https://github.com/ratatui/ratatui/commit/343c6cdc47c4fe38e64633d982aa413be356fb90)\n  _(lint)_ Move formatting and doc checks first ([#465](https://github.com/ratatui/ratatui/issues/465))\n\n  ```text\n  Putting the formatting and doc checks first to ensure that more critical\n  errors are caught first (e.g. a conventional commit error or typo should\n  not prevent the formatting and doc checks from running).\n  ```\n\n- [c95a75c](https://github.com/ratatui/ratatui/commit/c95a75c5d5e0370c98a2a37bcbd65bde996b2306)\n  _(makefile)_ Remove termion dependency from doc lint ([#470](https://github.com/ratatui/ratatui/issues/470))\n\n  ```text\n  Only build termion on non-windows targets\n  ```\n\n- [b996102](https://github.com/ratatui/ratatui/commit/b996102837dad7c77710bcbbc524c6e9691bd96f)\n  _(makefile)_ Add format target ([#468](https://github.com/ratatui/ratatui/issues/468))\n\n  ```text\n  - add format target to Makefile.toml that actually fixes the formatting\n  - rename fmt target to lint-format\n  - rename style-check target to lint-style\n  - rename typos target to lint-typos\n  - rename check-docs target to lint-docs\n  - add section to CONTRIBUTING.md about formatting\n  ```\n\n- [572df75](https://github.com/ratatui/ratatui/commit/572df758ba1056759aa6f79c9e975854d27331db)\n  _(uncategorized)_ Put commit id first in changelog ([#463](https://github.com/ratatui/ratatui/issues/463))\n\n- [878b6fc](https://github.com/ratatui/ratatui/commit/878b6fc258110b41e85833c35150d7dfcedf31ca)\n  _(uncategorized)_ Ignore benches from code coverage ([#461](https://github.com/ratatui/ratatui/issues/461))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- @[aatukaj](https://github.com/aatukaj)\n- @[DreadedHippy](https://github.com/DreadedHippy)\n- @[marianomarciello](https://github.com/marianomarciello)\n- @[HeeillWang](https://github.com/HeeillWang)\n- @[tz629](https://github.com/tz629)\n- @[hueblu](https://github.com/hueblu)\n\n## [v0.23.0](https://github.com/ratatui/ratatui/releases/tag/v0.23.0) - 2023-08-28\n\nWe are thrilled to release the new version of `ratatui` 🐭, the official successor[\\*](https://github.com/fdehau/tui-rs/commit/335f5a4563342f9a4ee19e2462059e1159dcbf25) of [`tui-rs`](https://github.com/fdehau/tui-rs).\n\nIn this version, we improved the existing widgets such as `Barchart` and `Scrollbar`. We also made improvmements in the testing/internal APIs to provide a smoother testing/development experience. Additionally, we have addressed various bugs and implemented enhancements.\n\nHere is a blog post that highlights the new features and breaking changes along with a retrospective about the project: [https://blog.orhun.dev/ratatui-0-23-0](https://blog.orhun.dev/ratatui-0-23-0)\n\n### Features\n\n- _(barchart)_ Add direction attribute. (horizontal bars support) ([#325](https://github.com/ratatui/ratatui/issues/325))\n([0dca6a6](https://github.com/ratatui/ratatui/commit/0dca6a689a7af640c5de8f7c87c2f1e03f0adf25))\n\n  ````text\n  * feat(barchart): Add direction attribute\n\n  Enable rendering the bars horizontally. In some cases this allow us to\n  make more efficient use of the available space.\n  ````\n\n- _(cell)_ Add voluntary skipping capability for sixel ([#215](https://github.com/ratatui/ratatui/issues/215))\n([e4bcf78](https://github.com/ratatui/ratatui/commit/e4bcf78afabe6b06970c51b4284246e345002cf5))\n\n  ````text\n  > Sixel is a bitmap graphics format supported by terminals.\n  > \"Sixel mode\" is entered by sending the sequence ESC+Pq.\n  > The \"String Terminator\" sequence ESC+\\ exits the mode.\n\n  The graphics are then rendered with the top left positioned at the\n  cursor position.\n\n  It is actually possible to render sixels in ratatui with just\n  `buf.get_mut(x, y).set_symbol(\"^[Pq ... ^[\\\")`. But any buffer covering\n  the \"image area\" will overwrite the graphics. This is most likely the same\n  buffer, even though it consists of empty characters `' '`, except for\n  the top-left character that starts the sequence.\n\n  Thus, either the buffer or cells must be specialized to avoid drawing\n  over the graphics. This patch specializes the `Cell` with a\n  `set_skip(bool)` method, based on James' patch:\n  https://github.com/TurtleTheSeaHobo/tui-rs/tree/sixel-support\n  I unsuccessfully tried specializing the `Buffer`, but as far as I can tell\n  buffers get merged all the way \"up\" and thus skipping must be set on the\n  Cells. Otherwise some kind of \"skipping area\" state would be required,\n  which I think is too complicated.\n\n  Having access to the buffer now it is possible to skip all cells but the\n  first one which can then `set_symbol(sixel)`. It is up to the user to\n  deal with the graphics size and buffer area size. It is possible to get\n  the terminal's font size in pixels with a syscall.\n\n  An image widget for ratatui that uses this `skip` flag is available at\n  https://github.com/benjajaja/ratatu-image.\n  ````\n\n- _(list)_ Add option to always allocate the \"selection\" column width ([#394](https://github.com/ratatui/ratatui/issues/394))\n([4d70169](https://github.com/ratatui/ratatui/commit/4d70169bef86898d331f46013ff72ef6d1c275ed))\n\n  ````text\n  * feat(list): add option to always allocate the \"selection\" column width\n\n  Before this option was available, selecting a item in a list when nothing was selected\n  previously made the row layout change (the same applies to unselecting) by adding the width\n  of the \"highlight symbol\" in the front of the list, this option allows to configure this\n  behavior.\n\n  * style: change \"highlight_spacing\" doc comment to use inline code-block for reference\n  ````\n\n- _(release)_ Add automated nightly releases ([#359](https://github.com/ratatui/ratatui/issues/359))\n([aad164a](https://github.com/ratatui/ratatui/commit/aad164a5311b0a6d6d3f752a87ed385d5f0c1962))\n\n  ````text\n  * feat(release): add automated nightly releases\n\n  * refactor(release): rename the alpha workflow\n\n  * refactor(release): simplify the release calculation\n  ````\n\n- _(scrollbar)_ Add optional track symbol ([#360](https://github.com/ratatui/ratatui/issues/360))\n([1727fa5](https://github.com/ratatui/ratatui/commit/1727fa5120fa4bfcddd57484e532b2d5da88bc73)) [**breaking**]\n\n  ````text\n  The track symbol is now optional, simplifying composition with other\n  widgets.\n  ````\n\n- _(table)_ Add support for line alignment in the table widget ([#392](https://github.com/ratatui/ratatui/issues/392))\n([7748720](https://github.com/ratatui/ratatui/commit/77487209634f26da32bc59d9280769d80cc7c25c))\n\n  ````text\n  * feat(table): enforce line alignment in table render\n\n  * test(table): add table alignment render test\n  ````\n\n- _(widgets::table)_ Add option to always allocate the \"selection\" constraint ([#375](https://github.com/ratatui/ratatui/issues/375))\n([f63ac72](https://github.com/ratatui/ratatui/commit/f63ac72305f80062727d81996f9bdb523e666099))\n\n  ````text\n  * feat(table): add option to configure selection layout changes\n\n  Before this option was available, selecting a row in the table when no row was selected\n  previously made the tables layout change (the same applies to unselecting) by adding the width\n  of the \"highlight symbol\" in the front of the first column, this option allows to configure this\n  behavior.\n\n  * refactor(table): refactor \"get_columns_widths\" to return (x, width)\n\n  and \"render\" to make use of that\n\n  * refactor(table): refactor \"get_columns_widths\" to take in a selection_width instead of a boolean\n\n  also refactor \"render\" to make use of this change\n\n  * fix(table): rename \"highlight_set_selection_space\" to \"highlight_spacing\"\n\n  * style(table): apply doc-comment suggestions from code review\n  ````\n\n- _(uncategorized)_ Expand serde attributes for `TestBuffer` ([#389](https://github.com/ratatui/ratatui/issues/389))\n([57ea871](https://github.com/ratatui/ratatui/commit/57ea871753a5b23f302c6f0a83d98f6a1988abfb))\n\n- _(uncategorized)_ Add weak constraints to make rects closer to each other in size ✨ ([#395](https://github.com/ratatui/ratatui/issues/395))\n([6153371](https://github.com/ratatui/ratatui/commit/61533712be57f3921217a905618b319975f90330))\n\n  ````text\n  Also make `Max` and `Min` constraints MEDIUM strength for higher priority over equal chunks\n  ````\n\n- _(uncategorized)_ Simplify split function ✨ ([#411](https://github.com/ratatui/ratatui/issues/411))\n([b090101](https://github.com/ratatui/ratatui/commit/b090101b231a467628c910f05a73715809cb8d73))\n\n### Bug Fixes\n\n- _(barchart)_ Empty groups causes panic ([#333](https://github.com/ratatui/ratatui/issues/333))\n([9c95673](https://github.com/ratatui/ratatui/commit/9c956733f740b18616974e2c7d786ca761666f79))\n\n  ````text\n  This unlikely to happen, since nobody wants to add an empty group.\n  Even we fix the panic, things will not render correctly.\n  So it is better to just not add them to the BarChart.\n  ````\n\n- _(block)_ Fixed title_style not rendered ([#349](https://github.com/ratatui/ratatui/issues/349)) ([#363](https://github.com/ratatui/ratatui/issues/363))\n([49a82e0](https://github.com/ratatui/ratatui/commit/49a82e062f2c46dc3060cdfdb230b65d9dbfb2d9))\n\n- _(cargo)_ Adjust minimum paste version ([#348](https://github.com/ratatui/ratatui/issues/348))\n([8db9fb4](https://github.com/ratatui/ratatui/commit/8db9fb4aebd01e5ddc4edd68482361928f7e9c97))\n\n  ````text\n  ratatui is using features that are currently only available in paste 1.0.2; specifying the minimum version to be 1.0 will consequently cause a compilation error if cargo is only able to use a version less than 1.0.2.\n  ````\n\n- _(example)_ Fix typo ([#337](https://github.com/ratatui/ratatui/issues/337))\n([daf5890](https://github.com/ratatui/ratatui/commit/daf589015290ac8b379389d29ef90a1af15e3f75))\n\n  ````text\n  the existential feels\n  ````\n\n- _(layout)_ Don't leave gaps between chunks ([#408](https://github.com/ratatui/ratatui/issues/408))\n([56455e0](https://github.com/ratatui/ratatui/commit/56455e0fee57616f87ea43872fb7d5d9bb14aff5))\n\n  ````text\n  Previously the layout used the floor of the calculated start and width\n  as the value to use for the split Rects. This resulted in gaps between\n  the split rects.\n\n  This change modifies the layout to round to the nearest column instead\n  of taking the floor of the start and width. This results in the start\n  and end of each rect being rounded the same way and being strictly\n  adjacent without gaps.\n\n  Because there is a required constraint that ensures that the last end is\n  equal to the area end, there is no longer the need to fixup the last\n  item width when the fill (as e.g. width = x.99 now rounds to x+1 not x).\n\n  The colors example has been updated to use Ratio(1, 8) instead of\n  Percentage(13), as this now renders without gaps for all possible sizes,\n  whereas previously it would have left odd gaps between columns.\n  ````\n\n- _(layout)_ Ensure left <= right ([#410](https://github.com/ratatui/ratatui/issues/410))\n([f4ed3b7](https://github.com/ratatui/ratatui/commit/f4ed3b758450ef9c257705f3a1ea937329a968b4))\n\n  ````text\n  The recent refactor missed the positive width constraint\n  ````\n\n- _(readme)_ Fix typo in readme ([#344](https://github.com/ratatui/ratatui/issues/344))\n([d05ab6f](https://github.com/ratatui/ratatui/commit/d05ab6fb700527f0e062f334c7a5319c07099b04))\n\n- _(readme)_ Fix incorrect template link ([#338](https://github.com/ratatui/ratatui/issues/338))\n([b9290b3](https://github.com/ratatui/ratatui/commit/b9290b35d13df57726d65a16d3c8bb18ce43e8c2))\n\n- _(readme)_ Fix typo in readme ([#336](https://github.com/ratatui/ratatui/issues/336))\n([7e37a96](https://github.com/ratatui/ratatui/commit/7e37a96678440bc62cce52de840fef82eed58dd8))\n\n- _(release)_ Fix the last tag retrieval for alpha releases ([#416](https://github.com/ratatui/ratatui/issues/416))\n([b6b2da5](https://github.com/ratatui/ratatui/commit/b6b2da5eb761ac5894cc7a2ee67f422312b63cfc))\n\n- _(release)_ Set the correct permissions for creating alpha releases ([#400](https://github.com/ratatui/ratatui/issues/400))\n([778c320](https://github.com/ratatui/ratatui/commit/778c32000815b9abb0246c73997b1800256aade2))\n\n- _(scrollbar)_ Move symbols to symbols module ([#330](https://github.com/ratatui/ratatui/issues/330))\n([7539f77](https://github.com/ratatui/ratatui/commit/7539f775fef4d816495e1e06732f6500cf08c126)) [**breaking**]\n\n  ````text\n  The symbols and sets are moved from `widgets::scrollbar` to\n  `symbols::scrollbar`. This makes it consistent with the other symbol\n  sets and allows us to make the scrollbar module private rather than\n  re-exporting it.\n  ````\n\n- _(table)_ Fix unit tests broken due to rounding ([#419](https://github.com/ratatui/ratatui/issues/419))\n([dc55211](https://github.com/ratatui/ratatui/commit/dc552116cf5e83c7ffcc2f5299c00d2315490c1d))\n\n  ````text\n  The merge of the table unit tests after the rounding layout fix was not\n  rebased correctly, this addresses the broken tests, makes them more\n  concise while adding comments to help clarify that the rounding behavior\n  is working as expected.\n  ````\n\n- _(uncategorized)_ Correct minor typos in documentation ([#331](https://github.com/ratatui/ratatui/issues/331))\n([13fb11a](https://github.com/ratatui/ratatui/commit/13fb11a62c826da412045d498a03673d130ec057))\n\n### Refactor\n\n- _(barchart)_ Reduce some calculations ([#430](https://github.com/ratatui/ratatui/issues/430))\n([fc727df](https://github.com/ratatui/ratatui/commit/fc727df7d2d8347434a7d3a4e19465b29d7a0ed8))\n\n  ````text\n  Calculating the label_offset is unnecessary, if we just render the\n  group label after rendering the bars. We can just reuse bar_y.\n  ````\n\n- _(layout)_ Simplify and doc split() ([#405](https://github.com/ratatui/ratatui/issues/405))\n([de25de0](https://github.com/ratatui/ratatui/commit/de25de0a9506e53df1378929251594bccf63d932))\n\n  ````text\n  * test(layout): add tests for split()\n\n  * refactor(layout): simplify and doc split()\n\n  This is mainly a reduction in density of the code with a goal of\n  improving mainatainability so that the algorithm is clear.\n  ````\n\n- _(layout)_ Simplify split() function ([#396](https://github.com/ratatui/ratatui/issues/396))\n([5195099](https://github.com/ratatui/ratatui/commit/519509945be866c3b2f6a4230ee317262266f894))\n\n  ````text\n  Removes some unnecessary code and makes the function more readable.\n  Instead of creating a temporary result and mutating it, we just create\n  the result directly from the list of changes.\n  ````\n\n### Documentation\n\n- _(examples)_ Fix the instructions for generating demo GIF ([#442](https://github.com/ratatui/ratatui/issues/442))\n([7a70602](https://github.com/ratatui/ratatui/commit/7a70602ec6bfcfec51bafd3bdbd35ff68b64340c))\n\n- _(examples)_ Show layout constraints ([#393](https://github.com/ratatui/ratatui/issues/393))\n([10dbd6f](https://github.com/ratatui/ratatui/commit/10dbd6f2075285473ef47c4c898ef2f643180cd1))\n\n  ````text\n  Shows the way that layout constraints interact visually\n\n  ![example](https://vhs.charm.sh/vhs-1ZNoNLNlLtkJXpgg9nCV5e.gif)\n  ````\n\n- _(examples)_ Add color and modifiers examples ([#345](https://github.com/ratatui/ratatui/issues/345))\n([6ad4bd4](https://github.com/ratatui/ratatui/commit/6ad4bd4cf2e7ea7548e49e64f92114c30d61ebb2))\n\n  ````text\n  The intent of these examples is to show the available colors and\n  modifiers.\n\n  - added impl Display for Color\n\n  ![colors](https://vhs.charm.sh/vhs-2ZCqYbTbXAaASncUeWkt1z.gif)\n  ![modifiers](https://vhs.charm.sh/vhs-2ovGBz5l3tfRGdZ7FCw0am.gif)\n  ````\n\n- _(examples)_ Regen block.gif in readme ([#365](https://github.com/ratatui/ratatui/issues/365))\n([e82521e](https://github.com/ratatui/ratatui/commit/e82521ea798d1385f671e1849c48de42857bf87a))\n\n- _(examples)_ Update block example ([#351](https://github.com/ratatui/ratatui/issues/351))\n([554805d](https://github.com/ratatui/ratatui/commit/554805d6cbbf140c6da474daa891e9e754a5d281))\n\n  ````text\n  ![Block example](https://vhs.charm.sh/vhs-5X6hpReuDBKjD6hLxmDQ6F.gif)\n  ````\n\n- _(examples)_ Add examples readme with gifs ([#303](https://github.com/ratatui/ratatui/issues/303))\n([add578a](https://github.com/ratatui/ratatui/commit/add578a7d6d342e3ebaa26e69452a2ab5b08b0c7))\n\n  ````text\n  This commit adds a readme to the examples directory with gifs of each\n  example. This should make it easier to see what each example does\n  without having to run it.\n\n  I modified the examples to fit better in the gifs. Mostly this was just\n  removing the margins, but for the block example I cleaned up the code a\n  bit to make it more readable and changed it so the background bug is not\n  triggered.\n\n  For the table example, the combination of Min, Length, and Percent\n  constraints was causing the table to panic when the terminal was too\n  small. I changed the example to use the Max constraint instead of the\n  Length constraint.\n\n  The layout example now shows information about how the layout is\n  constrained on each block (which is now a paragraph with a block).\n  ````\n\n- _(layout)_ Add doc comments ([#403](https://github.com/ratatui/ratatui/issues/403))\n([418ed20](https://github.com/ratatui/ratatui/commit/418ed20479e060c1bd2f430ae127eae19a013afc))\n\n- _(layout::Constraint)_ Add doc-comments for all variants ([#371](https://github.com/ratatui/ratatui/issues/371))\n([c8ddc16](https://github.com/ratatui/ratatui/commit/c8ddc164c7941c31b1b5fa82345e452923ec56e7))\n\n- _(lib)_ Extract feature documentation from Cargo.toml ([#438](https://github.com/ratatui/ratatui/issues/438))\n([8b36683](https://github.com/ratatui/ratatui/commit/8b36683571e078792b20d6f693b817522cf6e992))\n\n  ````text\n  * docs(lib): extract feature documentation from Cargo.toml\n\n  * chore(deps): make `document-features` optional dependency\n\n  * docs(lib): document the serde feature from features section\n  ````\n\n- _(paragraph)_ Add more docs ([#428](https://github.com/ratatui/ratatui/issues/428))\n([6d6ecee](https://github.com/ratatui/ratatui/commit/6d6eceeb88b4da593c63dad258d2724cd583f9e0))\n\n- _(project)_ Make the project description cooler ([#441](https://github.com/ratatui/ratatui/issues/441))\n([47fe4ad](https://github.com/ratatui/ratatui/commit/47fe4ad69f527fcbf879e9fec2a4d3702badc76b))\n\n  ````text\n  * docs(project): make the project description cooler\n\n  * docs(lib): simplify description\n  ````\n\n- _(readme)_ Use the correct version for MSRV ([#369](https://github.com/ratatui/ratatui/issues/369))\n([3a37d2f](https://github.com/ratatui/ratatui/commit/3a37d2f6ede02fdde9ddffbb996059d6b95f98e7))\n\n- _(readme)_ Fix widget docs links ([#346](https://github.com/ratatui/ratatui/issues/346))\n([2920e04](https://github.com/ratatui/ratatui/commit/2920e045ba23aa2eb3a4049625cd256ff37076c9))\n\n  ````text\n  Add scrollbar, clear. Fix Block link. Sort\n  ````\n\n- _(span)_ Update docs and tests for `Span` ([#427](https://github.com/ratatui/ratatui/issues/427))\n([d0ee04a](https://github.com/ratatui/ratatui/commit/d0ee04a69f30506fae706b429f15fe63b056b79e))\n\n- _(uncategorized)_ Improve scrollbar doc comment ([#329](https://github.com/ratatui/ratatui/issues/329))\n([c3f87f2](https://github.com/ratatui/ratatui/commit/c3f87f245a5a2fc180d4c8f64557bcff716d09a9))\n\n### Performance\n\n- _(bench)_ Used `iter_batched` to clone widgets in setup function ([#383](https://github.com/ratatui/ratatui/issues/383))\n([149d489](https://github.com/ratatui/ratatui/commit/149d48919d870e29a7f104664db11eb77fb951a8))\n\n  ````text\n  Replaced `Bencher::iter` by `Bencher::iter_batched` to clone the widget in the setup function instead of in the benchmark timing.\n  ````\n\n### Styling\n\n- _(paragraph)_ Add documentation for \"scroll\"'s \"offset\" ([#355](https://github.com/ratatui/ratatui/issues/355))\n([ab5e616](https://github.com/ratatui/ratatui/commit/ab5e6166358b2e6f0e9601a1ec5480760b91ca8e))\n\n  ````text\n  * style(paragraph): add documentation for \"scroll\"'s \"offset\"\n\n  * style(paragraph): add more text to the scroll doc-comment\n  ````\n\n### Testing\n\n- _(block)_ Test all block methods ([#431](https://github.com/ratatui/ratatui/issues/431))\n([a890f2a](https://github.com/ratatui/ratatui/commit/a890f2ac004b0e45db40de222fe3560fe0fdf94b))\n\n- _(block)_ Add benchmarks ([#368](https://github.com/ratatui/ratatui/issues/368))\n([e18393d](https://github.com/ratatui/ratatui/commit/e18393dbc6781a8b1266906e8ba7da019a0a5d82))\n\n  ````text\n  Added benchmarks to the block widget to uncover eventual performance issues\n  ````\n\n- _(canvas)_ Add unit tests for line ([#437](https://github.com/ratatui/ratatui/issues/437))\n([ad3413e](https://github.com/ratatui/ratatui/commit/ad3413eeec9aab1568f8519caaf5efb951b2800c))\n\n  ````text\n  Also add constructor to simplify creating lines\n  ````\n\n- _(canvas)_ Add tests for rectangle ([#429](https://github.com/ratatui/ratatui/issues/429))\n([ad4d6e7](https://github.com/ratatui/ratatui/commit/ad4d6e7dec0f7e4c4e2e5624ccec54eb71c3f5ca))\n\n- _(clear)_ Test Clear rendering ([#432](https://github.com/ratatui/ratatui/issues/432))\n([e9bd736](https://github.com/ratatui/ratatui/commit/e9bd736b1a680204fa801a7208cddc477f208680))\n\n- _(list)_ Added benchmarks ([#377](https://github.com/ratatui/ratatui/issues/377))\n([664fb4c](https://github.com/ratatui/ratatui/commit/664fb4cffd71c85da87545cb4258165c1a44afa6))\n\n  ````text\n  Added benchmarks for the list widget (render and render half scrolled)\n  ````\n\n- _(map)_ Add unit tests ([#436](https://github.com/ratatui/ratatui/issues/436))\n([f0716ed](https://github.com/ratatui/ratatui/commit/f0716edbcfd33d50e4e74eaf51fe5ad945dab6b3))\n\n- _(sparkline)_ Added benchmark ([#384](https://github.com/ratatui/ratatui/issues/384))\n([3293c6b](https://github.com/ratatui/ratatui/commit/3293c6b80b0505f9ed031fc8d9678e3db627b7ad))\n\n  ````text\n  Added benchmark for the `sparkline` widget testing a basic render with different amount of data\n  ````\n\n- _(styled_grapheme)_ Test StyledGrapheme methods ([#433](https://github.com/ratatui/ratatui/issues/433))\n([292a11d](https://github.com/ratatui/ratatui/commit/292a11d81e2f8c7676cc897f3493b75903025766))\n\n- _(table)_ Add test for consistent table-column-width ([#404](https://github.com/ratatui/ratatui/issues/404))\n([4cd843e](https://github.com/ratatui/ratatui/commit/4cd843eda97abbc8fa7af85a03c2fffafce3c676))\n\n- _(tabs)_ Add unit tests ([#439](https://github.com/ratatui/ratatui/issues/439))\n([14eb6b6](https://github.com/ratatui/ratatui/commit/14eb6b69796550648f7d0d0427384b64c31e36d8))\n\n- _(test_backend)_ Add tests for TestBackend coverage ([#434](https://github.com/ratatui/ratatui/issues/434))\n([b35f19e](https://github.com/ratatui/ratatui/commit/b35f19ec442d3eb4810f6181e03ba0d4c077b768))\n\n  ````text\n  These are mostly to catch any future bugs introduced in the test backend\n  ````\n\n- _(text)_ Add unit tests ([#435](https://github.com/ratatui/ratatui/issues/435))\n([fc9f637](https://github.com/ratatui/ratatui/commit/fc9f637fb08fdc2959a52ed3eb12643565c634d9))\n\n### Miscellaneous Tasks\n\n- _(changelog)_ Ignore alpha tags ([#440](https://github.com/ratatui/ratatui/issues/440))\n([6009844](https://github.com/ratatui/ratatui/commit/6009844e256cf926039fa969b9ad8896e2289213))\n\n- _(changelog)_ Show full commit message ([#423](https://github.com/ratatui/ratatui/issues/423))\n([a937500](https://github.com/ratatui/ratatui/commit/a937500ae4ac0a60fc5db82f6ce105a1154215f6))\n\n  ````text\n  This allows someone reading the changelog to search for information\n  about breaking changes or implementation of new functionality.\n\n  - refactored the commit template part to a macro instead of repeating it\n  - added a link to the commit and to the release\n  - updated the current changelog for the alpha and unreleased changes\n  - Automatically changed the existing * lists to - lists\n  ````\n\n- _(ci)_ Update the name of the CI workflow ([#417](https://github.com/ratatui/ratatui/issues/417))\n([89ef0e2](https://github.com/ratatui/ratatui/commit/89ef0e29f56078ed0629f2dce89656c1131ebda1))\n\n- _(codecov)_ Fix yaml syntax ([#407](https://github.com/ratatui/ratatui/issues/407))\n([ea48af1](https://github.com/ratatui/ratatui/commit/ea48af1c9abac7012e3bf79e78c6179f889a6321))\n\n  ````text\n  a yaml file cannot contain tabs outside of strings\n  ````\n\n- _(docs)_ Add doc comment bump to release documentation ([#382](https://github.com/ratatui/ratatui/issues/382))\n([8b28672](https://github.com/ratatui/ratatui/commit/8b286721314142dc7078354015db909e6938068c))\n\n- _(github)_ Add kdheepak as a maintainer ([#343](https://github.com/ratatui/ratatui/issues/343))\n([60a4131](https://github.com/ratatui/ratatui/commit/60a4131384e6c0b38b6a6e933e62646b5265ca60))\n\n- _(github)_ Rename `tui-rs-revival` references to `ratatui-org` ([#340](https://github.com/ratatui/ratatui/issues/340))\n([964190a](https://github.com/ratatui/ratatui/commit/964190a859e6479f22c6ccae8305192f548fbcc3))\n\n- _(make)_ Add task descriptions to Makefile.toml ([#398](https://github.com/ratatui/ratatui/issues/398))\n([268bbed](https://github.com/ratatui/ratatui/commit/268bbed17e0ebc18b39f3253c9beb92c21946c80))\n\n- _(toolchain)_ Bump msrv to 1.67 ([#361](https://github.com/ratatui/ratatui/issues/361))\n([8cd3205](https://github.com/ratatui/ratatui/commit/8cd3205d70a1395d2c60fc26d76c300a2a463c9e)) [**breaking**]\n\n  ````text\n  * chore(toolchain)!: bump msrv to 1.67\n  ````\n\n- _(traits)_ Add Display and FromStr traits ([#425](https://github.com/ratatui/ratatui/issues/425))\n([98155dc](https://github.com/ratatui/ratatui/commit/98155dce25bbc0e8fe271735024a1f6bf2279d67))\n\n  ````text\n  Use strum for most of these, with a couple of manual implementations,\n  and related tests\n  ````\n\n- _(uncategorized)_ Create rust-toolchain.toml ([#415](https://github.com/ratatui/ratatui/issues/415))\n([d2429bc](https://github.com/ratatui/ratatui/commit/d2429bc3e44a34197511192dbd215dd32fdf2d9c))\n\n- _(uncategorized)_ Use vhs to create demo.gif ([#390](https://github.com/ratatui/ratatui/issues/390))\n([8c55158](https://github.com/ratatui/ratatui/commit/8c551588224ca97ee07948b445aa2ac9d05f997d))\n\n  ````text\n  The bug that prevented braille rendering is fixed, so switch to VHS for\n  rendering the demo gif\n\n  ![Demo of Ratatui](https://vhs.charm.sh/vhs-tF0QbuPbtHgUeG0sTVgFr.gif)\n  ````\n\n- _(uncategorized)_ Implement `Hash` common traits ([#381](https://github.com/ratatui/ratatui/issues/381))\n([8c4a2e0](https://github.com/ratatui/ratatui/commit/8c4a2e0fbfd021f1e087bb7256d9c6457742ea39))\n\n  ````text\n  Reorder the derive fields to be more consistent:\n\n      Debug, Default, Clone, Copy, Eq, PartialEq, Ord, PartialOrd, Hash\n\n  Hash trait won't be impl in this PR due to rust std design.\n  If we need hash trait for f64 related structs in the future,\n  we should consider wrap f64 into a new type.\n  ````\n\n- _(uncategorized)_ Implement `Eq & PartialEq` common traits ([#357](https://github.com/ratatui/ratatui/issues/357))\n([181706c](https://github.com/ratatui/ratatui/commit/181706c564d86e02991f89ec674b1af1d7f393fe))\n\n  ````text\n  Reorder the derive fields to be more consistent:\n\n      Debug, Default, Clone, Copy, Eq, PartialEq, Ord, PartialOrd, Hash\n  ````\n\n- _(uncategorized)_ Implement `Clone & Copy` common traits ([#350](https://github.com/ratatui/ratatui/issues/350))\n([440f62f](https://github.com/ratatui/ratatui/commit/440f62ff5435af9536c55d17707a9bc48dae92cc))\n\n  ````text\n  Implement `Clone & Copy` common traits for most structs in src.\n\n  Only implement `Copy` for structs that are simple and trivial to copy.\n\n  Reorder the derive fields to be more consistent:\n\n      Debug, Default, Clone, Copy, Eq, PartialEq, Ord, PartialOrd, Hash\n  ````\n\n- _(uncategorized)_ Implement `Debug & Default` common traits ([#339](https://github.com/ratatui/ratatui/issues/339))\n([bf49446](https://github.com/ratatui/ratatui/commit/bf4944683d6afb6f42bec80a1bd308ecdac50cbc))\n\n  ````text\n  Implement `Debug & Default` common traits for most structs in src.\n\n  Reorder the derive fields to be more consistent:\n\n      Debug, Default, Clone, Copy, Eq, PartialEq, Ord, PartialOrd, Hash\n  ````\n\n### Build\n\n- _(deps)_ Upgrade crossterm to 0.27 ([#380](https://github.com/ratatui/ratatui/issues/380))\n([37fa6ab](https://github.com/ratatui/ratatui/commit/37fa6abe9d5dc459dc9855ea10f06afa72717c98))\n\n- _(examples)_ Fix cargo make run-examples ([#327](https://github.com/ratatui/ratatui/issues/327))\n([e2cb11c](https://github.com/ratatui/ratatui/commit/e2cb11cc30072d90b20e04270c1fa97c18ab6f3f))\n\n  ````text\n  Enables the all-widgets feature so that the calendar example runs correctly\n  ````\n\n- _(uncategorized)_ Forbid unsafe code ([#332](https://github.com/ratatui/ratatui/issues/332))\n([0fb1ed8](https://github.com/ratatui/ratatui/commit/0fb1ed85c6232966ab25c8b3cab0fc277e9b69a6))\n\n  ````text\n  This indicates good (high level) code and is used by tools like cargo-geiger.\n  ````\n\n### Continuous Integration\n\n- _(coverage)_ Exclude examples directory from coverage ([#373](https://github.com/ratatui/ratatui/issues/373))\n([de9f52f](https://github.com/ratatui/ratatui/commit/de9f52ff2cc606e1bf6b6bd8b97907afd73860fe))\n\n- _(uncategorized)_ Don't fail fast ([#364](https://github.com/ratatui/ratatui/issues/364))\n([9191ad6](https://github.com/ratatui/ratatui/commit/9191ad60fd4fc3ddf8650a8f5eed87216a0e5c6f))\n\n  ````text\n  Run all the tests rather than canceling when one test fails. This allows\n  us to see all the failures, rather than just the first one if there are\n  multiple. Specifically this is useful when we have an issue in one\n  toolchain or backend.\n  ````\n\n- _(uncategorized)_ Add coverage token ([#352](https://github.com/ratatui/ratatui/issues/352))\n([6f659cf](https://github.com/ratatui/ratatui/commit/6f659cfb07aad5ad2524f32fe46c45b84c8e9e34))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- @[EdJoPaTo](https://github.com/EdJoPaTo)\n- @[mhovd](https://github.com/mhovd)\n- @[joshrotenberg](https://github.com/joshrotenberg)\n- @[t-nil](https://github.com/t-nil)\n- @[ndd7xv](https://github.com/ndd7xv)\n- @[TieWay59](https://github.com/TieWay59)\n- @[Valentin271](https://github.com/Valentin271)\n- @[hasezoey](https://github.com/hasezoey)\n- @[jkcdarunday](https://github.com/jkcdarunday)\n- @[stappersg](https://github.com/stappersg)\n- @[benjajaja](https://github.com/benjajaja)\n\n## v0.22.0 - 2023-07-17\n\n### Features\n\n- _(barchart)_ Set custom text value in the bar ([#309](https://github.com/ratatui/ratatui/issues/309))\n- _(barchart)_ Enable barchart groups ([#288](https://github.com/ratatui/ratatui/issues/288))\n- _(block)_ Support for having more than one title ([#232](https://github.com/ratatui/ratatui/issues/232))\n- _(examples)_ User_input example cursor movement ([#302](https://github.com/ratatui/ratatui/issues/302))\n- _(misc)_ Make builder fn const ([#275](https://github.com/ratatui/ratatui/issues/275)) ([#275](https://github.com/ratatui/ratatui/issues/275))\n- _(prelude)_ Add a prelude ([#304](https://github.com/ratatui/ratatui/issues/304))\n- _(style)_ Enable setting the underline color for crossterm ([#308](https://github.com/ratatui/ratatui/issues/308)) ([#310](https://github.com/ratatui/ratatui/issues/310))\n- _(style)_ Allow Modifiers add/remove in const ([#287](https://github.com/ratatui/ratatui/issues/287))\n- _(stylize)_ Allow all widgets to be styled ([#289](https://github.com/ratatui/ratatui/issues/289))\n- _(terminal)_ Expose 'swap_buffers' method\n- _(uncategorized)_ Stylization shorthands ([#283](https://github.com/ratatui/ratatui/issues/283))\n- _(uncategorized)_ Add scrollbar widget ([#228](https://github.com/ratatui/ratatui/issues/228))\n\n### Bug Fixes\n\n- _(clippy)_ Unused_mut lint for layout ([#285](https://github.com/ratatui/ratatui/issues/285))\n- _(examples)_ Correct progress label in gague example ([#263](https://github.com/ratatui/ratatui/issues/263))\n- _(layout)_ Cap Constraint::apply to 100% length ([#264](https://github.com/ratatui/ratatui/issues/264))\n- _(lint)_ Suspicious_double_ref_op is new in 1.71 ([#311](https://github.com/ratatui/ratatui/issues/311))\n- _(prelude)_ Remove widgets module from prelude ([#317](https://github.com/ratatui/ratatui/issues/317))\n- _(title)_ Remove default alignment and position ([#323](https://github.com/ratatui/ratatui/issues/323))\n- _(typos)_ Configure typos linter ([#233](https://github.com/ratatui/ratatui/issues/233))\n- _(uncategorized)_ Rust-tui-template became a revival project ([#320](https://github.com/ratatui/ratatui/issues/320))\n- _(uncategorized)_ Revert removal of WTFPL from deny.toml ([#266](https://github.com/ratatui/ratatui/issues/266))\n\n### Refactor\n\n- _(ci)_ Simplify cargo-make installation ([#240](https://github.com/ratatui/ratatui/issues/240))\n- _(text)_ Simplify reflow implementation ([#290](https://github.com/ratatui/ratatui/issues/290))\n\n### Documentation\n\n- _(color)_ Parse more color formats and add docs ([#306](https://github.com/ratatui/ratatui/issues/306))\n- _(lib)_ Add `tui-term` a pseudoterminal library ([#268](https://github.com/ratatui/ratatui/issues/268))\n- _(lib)_ Fixup tui refs in widgets/mod.rs ([#216](https://github.com/ratatui/ratatui/issues/216))\n- _(lib)_ Add backend docs ([#213](https://github.com/ratatui/ratatui/issues/213))\n- _(readme)_ Remove duplicated mention of tui-rs-tree-widgets ([#223](https://github.com/ratatui/ratatui/issues/223))\n- _(uncategorized)_ Improve CONTRIBUTING.md ([#277](https://github.com/ratatui/ratatui/issues/277))\n- _(uncategorized)_ Fix scrollbar ascii illustrations and calendar doc paths ([#272](https://github.com/ratatui/ratatui/issues/272))\n- _(uncategorized)_ README tweaks ([#225](https://github.com/ratatui/ratatui/issues/225))\n- _(uncategorized)_ Add CODEOWNERS file ([#212](https://github.com/ratatui/ratatui/issues/212))\n- _(uncategorized)_ Update README.md and add hello_world example ([#204](https://github.com/ratatui/ratatui/issues/204))\n\n### Styling\n\n- _(comments)_ Set comment length to wrap at 100 chars ([#218](https://github.com/ratatui/ratatui/issues/218))\n- _(config)_ Apply formatting to config files ([#238](https://github.com/ratatui/ratatui/issues/238))\n- _(manifest)_ Apply formatting to Cargo.toml ([#237](https://github.com/ratatui/ratatui/issues/237))\n- _(readme)_ Update the style of badges in README.md ([#299](https://github.com/ratatui/ratatui/issues/299))\n- _(widget)_ Inline format arguments ([#279](https://github.com/ratatui/ratatui/issues/279))\n- _(uncategorized)_ Fix formatting ([#292](https://github.com/ratatui/ratatui/issues/292))\n- _(uncategorized)_ Reformat imports ([#219](https://github.com/ratatui/ratatui/issues/219))\n\n### Testing\n\n- _(barchart)_ Add unit tests ([#301](https://github.com/ratatui/ratatui/issues/301))\n- _(paragraph)_ Simplify paragraph benchmarks ([#282](https://github.com/ratatui/ratatui/issues/282))\n- _(uncategorized)_ Add benchmarks for paragraph ([#262](https://github.com/ratatui/ratatui/issues/262))\n\n### Miscellaneous Tasks\n\n- _(ci)_ Bump cargo-make version ([#239](https://github.com/ratatui/ratatui/issues/239))\n- _(ci)_ Enable merge queue for builds ([#235](https://github.com/ratatui/ratatui/issues/235))\n- _(ci)_ Integrate cargo-deny for linting dependencies ([#221](https://github.com/ratatui/ratatui/issues/221))\n- _(commitizen)_ Add commitizen config ([#222](https://github.com/ratatui/ratatui/issues/222))\n- _(demo)_ Update demo gif ([#234](https://github.com/ratatui/ratatui/issues/234))\n- _(demo)_ Update demo gif with a fixed unicode gauge ([#227](https://github.com/ratatui/ratatui/issues/227))\n- _(features)_ Enable building with all-features ([#286](https://github.com/ratatui/ratatui/issues/286))\n- _(github)_ Add EditorConfig config ([#300](https://github.com/ratatui/ratatui/issues/300))\n- _(github)_ Simplify the CODEOWNERS file ([#271](https://github.com/ratatui/ratatui/issues/271))\n- _(github)_ Add pull request template ([#269](https://github.com/ratatui/ratatui/issues/269))\n- _(github)_ Fix the syntax in CODEOWNERS file ([#236](https://github.com/ratatui/ratatui/issues/236))\n- _(license)_ Add Ratatui developers to license ([#297](https://github.com/ratatui/ratatui/issues/297))\n- _(tests)_ Add coverage job to bacon ([#312](https://github.com/ratatui/ratatui/issues/312))\n- _(uncategorized)_ Lint and doc cleanup ([#191](https://github.com/ratatui/ratatui/issues/191))\n\n### Build\n\n- _(deps)_ Upgrade bitflags to 2.3 ([#205](https://github.com/ratatui/ratatui/issues/205)) [**breaking**]\n- _(uncategorized)_ Add git pre-push hooks using cargo-husky ([#274](https://github.com/ratatui/ratatui/issues/274))\n\n### Continuous Integration\n\n- _(makefile)_ Split CI jobs ([#278](https://github.com/ratatui/ratatui/issues/278))\n- _(uncategorized)_ Parallelize CI jobs ([#318](https://github.com/ratatui/ratatui/issues/318))\n- _(uncategorized)_ Add feat-wrapping on push and on pull request ci triggers ([#267](https://github.com/ratatui/ratatui/issues/267))\n- _(uncategorized)_ Add code coverage action ([#209](https://github.com/ratatui/ratatui/issues/209))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- [@Nydragon](https://github.com/Nydragon)\n- [@snpefk](https://github.com/snpefk)\n- [@Philipp-M](https://github.com/Philipp-M)\n- [@mrbcmorris](https://github.com/mrbcmorris)\n- [@endepointe](https://github.com/endepointe)\n- [@kdheepak](https://github.com/kdheepak)\n- [@samyosm](https://github.com/samyosm)\n- [@SLASHLogin](https://github.com/SLASHLogin)\n- [@karthago1](https://github.com/karthago1)\n- [@BoolPurist](https://github.com/BoolPurist)\n- [@Nogesma](https://github.com/Nogesma)\n\n## v0.21.0 - 2023-05-28\n\n### Features\n\n- _(backend)_ Add termwiz backend and example ([#5](https://github.com/ratatui/ratatui/issues/5))\n- _(block)_ Support placing the title on bottom ([#36](https://github.com/ratatui/ratatui/issues/36))\n- _(border)_ Add border! macro for easy bitflag manipulation ([#11](https://github.com/ratatui/ratatui/issues/11))\n- _(calendar)_ Add calendar widget ([#138](https://github.com/ratatui/ratatui/issues/138))\n- _(color)_ Add `FromStr` implementation for `Color` ([#180](https://github.com/ratatui/ratatui/issues/180))\n- _(list)_ Add len() to List ([#24](https://github.com/ratatui/ratatui/pull/24))\n- _(paragraph)_ Allow Lines to be individually aligned ([#149](https://github.com/ratatui/ratatui/issues/149))\n- _(sparkline)_ Finish #1 Sparkline directions PR ([#134](https://github.com/ratatui/ratatui/issues/134))\n- _(terminal)_ Add inline viewport ([#114](https://github.com/ratatui/ratatui/issues/114)) [**breaking**]\n- _(test)_ Expose test buffer ([#160](https://github.com/ratatui/ratatui/issues/160))\n- _(text)_ Add `Masked` to display secure data ([#168](https://github.com/ratatui/ratatui/issues/168)) [**breaking**]\n- _(widget)_ Add circle widget ([#159](https://github.com/ratatui/ratatui/issues/159))\n- _(widget)_ Add style methods to Span, Spans, Text ([#148](https://github.com/ratatui/ratatui/issues/148))\n- _(widget)_ Support adding padding to Block ([#20](https://github.com/ratatui/ratatui/issues/20))\n- _(widget)_ Add offset() and offset_mut() for table and list state ([#12](https://github.com/ratatui/ratatui/issues/12))\n\n### Bug Fixes\n\n- _(canvas)_ Use full block for Marker::Block ([#133](https://github.com/ratatui/ratatui/issues/133)) [**breaking**]\n- _(example)_ Update input in examples to only use press events ([#129](https://github.com/ratatui/ratatui/issues/129))\n- _(uncategorized)_ Cleanup doc example ([#145](https://github.com/ratatui/ratatui/issues/145))\n- _(reflow)_ Remove debug macro call ([#198](https://github.com/ratatui/ratatui/issues/198))\n\n### Refactor\n\n- _(example)_ Remove redundant `vec![]` in `user_input` example ([#26](https://github.com/ratatui/ratatui/issues/26))\n- _(example)_ Refactor paragraph example ([#152](https://github.com/ratatui/ratatui/issues/152))\n- _(style)_ Mark some Style fns const so they can be defined globally ([#115](https://github.com/ratatui/ratatui/issues/115))\n- _(text)_ Replace `Spans` with `Line` ([#178](https://github.com/ratatui/ratatui/issues/178))\n\n### Documentation\n\n- _(apps)_ Fix rsadsb/adsb_deku radar link ([#140](https://github.com/ratatui/ratatui/issues/140))\n- _(apps)_ Add tenere ([#141](https://github.com/ratatui/ratatui/issues/141))\n- _(apps)_ Add twitch-tui ([#124](https://github.com/ratatui/ratatui/issues/124))\n- _(apps)_ Add oxycards ([#113](https://github.com/ratatui/ratatui/issues/113))\n- _(apps)_ Re-add trippy to APPS.md ([#117](https://github.com/ratatui/ratatui/issues/117))\n- _(block)_ Add example for block.inner ([#158](https://github.com/ratatui/ratatui/issues/158))\n- _(changelog)_ Update the empty profile link in contributors ([#112](https://github.com/ratatui/ratatui/issues/112))\n- _(readme)_ Fix small typo in readme ([#186](https://github.com/ratatui/ratatui/issues/186))\n- _(readme)_ Add termwiz demo to examples ([#183](https://github.com/ratatui/ratatui/issues/183))\n- _(readme)_ Add acknowledgement section ([#154](https://github.com/ratatui/ratatui/issues/154))\n- _(readme)_ Update project description ([#127](https://github.com/ratatui/ratatui/issues/127))\n- _(uncategorized)_ Scrape example code from examples/* ([#195](https://github.com/ratatui/ratatui/issues/195))\n\n### Styling\n\n- _(apps)_ Update the style of application list ([#184](https://github.com/ratatui/ratatui/issues/184))\n- _(readme)_ Update project introduction in README.md ([#153](https://github.com/ratatui/ratatui/issues/153))\n- _(uncategorized)_ Clippy's variable inlining in format macros\n\n### Testing\n\n- _(buffer)_ Add `assert_buffer_eq!` and Debug implementation ([#161](https://github.com/ratatui/ratatui/issues/161))\n- _(list)_ Add characterization tests for list ([#167](https://github.com/ratatui/ratatui/issues/167))\n- _(widget)_ Add unit tests for Paragraph ([#156](https://github.com/ratatui/ratatui/issues/156))\n\n### Miscellaneous Tasks\n\n- _(uncategorized)_ Inline format args ([#190](https://github.com/ratatui/ratatui/issues/190))\n- _(uncategorized)_ Minor lints, making Clippy happier ([#189](https://github.com/ratatui/ratatui/issues/189))\n\n### Build\n\n- _(uncategorized)_ Bump MSRV to 1.65.0 ([#171](https://github.com/ratatui/ratatui/issues/171))\n\n### Continuous Integration\n\n- _(uncategorized)_ Add ci, build, and revert to allowed commit types\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\nHere is the list of contributors who have contributed to `ratatui` for the first time!\n\n- [@kpcyrd](https://github.com/kpcyrd)\n- [@fujiapple852](https://github.com/fujiapple852)\n- [@BrookJeynes](https://github.com/BrookJeynes)\n- [@Ziqi-Yang](https://github.com/Ziqi-Yang)\n- [@Xithrius](https://github.com/Xithrius)\n- [@lesleyrs](https://github.com/lesleyrs)\n- [@pythops](https://github.com/pythops)\n- [@wcampbell0x2a](https://github.com/wcampbell0x2a)\n- [@sophacles](https://github.com/sophacles)\n- [@Eyesonjune18](https://github.com/Eyesonjune18)\n- [@a-kenji](https://github.com/a-kenji)\n- [@TimerErTim](https://github.com/TimerErTim)\n- [@Mehrbod2002](https://github.com/Mehrbod2002)\n- [@thomas-mauran](https://github.com/thomas-mauran)\n- [@nyurik](https://github.com/nyurik)\n\n## v0.20.1 - 2023-03-19\n\n### Bug Fixes\n\n- _(style)_ Bold needs a bit ([#104](https://github.com/ratatui/ratatui/issues/104))\n\n### Documentation\n\n- _(apps)_ Add \"logss\" to apps ([#105](https://github.com/ratatui/ratatui/issues/105))\n- _(uncategorized)_ Fixup remaining tui references ([#106](https://github.com/ratatui/ratatui/issues/106))\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\n- [@joshka](https://github.com/joshka)\n- [@todoesverso](https://github.com/todoesverso)\n- [@UncleScientist](https://github.com/UncleScientist)\n\n## v0.20.0 - 2023-03-19\n\nThis marks the first release of `ratatui`, a community-maintained fork of [tui](https://github.com/fdehau/tui-rs).\n\nThe purpose of this release is to include **bug fixes** and **small changes** into the repository thus **no new features** are added. We have transferred all the pull requests from the original repository and worked on the low hanging ones to incorporate them in this \"maintenance\" release.\n\nHere is a list of changes:\n\n### Features\n\n- _(cd)_ Add continuous deployment workflow ([#93](https://github.com/ratatui/ratatui/issues/93))\n- _(ci)_ Add MacOS to CI ([#60](https://github.com/ratatui/ratatui/issues/60))\n- _(widget)_ Add `offset()` to `TableState` ([#10](https://github.com/ratatui/ratatui/issues/10))\n- _(widget)_ Add `width()` to ListItem ([#17](https://github.com/ratatui/ratatui/issues/17))\n\n### Bug Fixes\n\n- _(ci)_ Test MSRV compatibility on CI ([#85](https://github.com/ratatui/ratatui/issues/85))\n- _(ci)_ Bump Rust version to 1.63.0 ([#80](https://github.com/ratatui/ratatui/issues/80))\n- _(ci)_ Use env for the cargo-make version ([#76](https://github.com/ratatui/ratatui/issues/76))\n- _(ci)_ Fix deprecation warnings on CI ([#58](https://github.com/ratatui/ratatui/issues/58))\n- _(doc)_ Add 3rd party libraries accidentally removed at #21 ([#61](https://github.com/ratatui/ratatui/issues/61))\n- _(widget)_ List should not ignore empty string items ([#42](https://github.com/ratatui/ratatui/issues/42)) [**breaking**]\n- _(uncategorized)_ Cassowary/layouts: add extra constraints for fixing Min(v)/Max(v) combination. ([#31](https://github.com/ratatui/ratatui/issues/31))\n- _(uncategorized)_ Fix user_input example double key press registered on windows\n- _(uncategorized)_ Ignore zero-width symbol on rendering `Paragraph`\n- _(uncategorized)_ Fix typos ([#45](https://github.com/ratatui/ratatui/issues/45))\n- _(uncategorized)_ Fix typos ([#47](https://github.com/ratatui/ratatui/issues/47))\n\n### Refactor\n\n- _(style)_ Make bitflags smaller ([#13](https://github.com/ratatui/ratatui/issues/13))\n\n### Documentation\n\n- _(apps)_ Move 'apps using ratatui' to dedicated file ([#98](https://github.com/ratatui/ratatui/issues/98)) ([#99](https://github.com/ratatui/ratatui/issues/99))\n- _(canvas)_ Add documentation for x_bounds, y_bounds ([#35](https://github.com/ratatui/ratatui/issues/35))\n- _(contributing)_ Specify the use of unsafe for optimization ([#67](https://github.com/ratatui/ratatui/issues/67))\n- _(github)_ Remove pull request template ([#68](https://github.com/ratatui/ratatui/issues/68))\n- _(readme)_ Update crate status badge ([#102](https://github.com/ratatui/ratatui/issues/102))\n- _(readme)_ Small edits before first release ([#101](https://github.com/ratatui/ratatui/issues/101))\n- _(readme)_ Add install instruction and update title ([#100](https://github.com/ratatui/ratatui/issues/100))\n- _(readme)_ Add systeroid to application list ([#92](https://github.com/ratatui/ratatui/issues/92))\n- _(readme)_ Add glicol-cli to showcase list ([#95](https://github.com/ratatui/ratatui/issues/95))\n- _(readme)_ Add oxker to application list ([#74](https://github.com/ratatui/ratatui/issues/74))\n- _(readme)_ Add app kubectl-watch which uses tui ([#73](https://github.com/ratatui/ratatui/issues/73))\n- _(readme)_ Add poketex to 'apps using tui' in README ([#64](https://github.com/ratatui/ratatui/issues/64))\n- _(readme)_ Update README.md ([#39](https://github.com/ratatui/ratatui/issues/39))\n- _(readme)_ Update README.md ([#40](https://github.com/ratatui/ratatui/issues/40))\n- _(readme)_ Clarify README.md fork status update\n- _(uncategorized)_ Fix: fix typos ([#90](https://github.com/ratatui/ratatui/issues/90))\n- _(uncategorized)_ Update to build more backends ([#81](https://github.com/ratatui/ratatui/issues/81))\n- _(uncategorized)_ Expand \"Apps\" and \"Third-party\" sections ([#21](https://github.com/ratatui/ratatui/issues/21))\n- _(uncategorized)_ Add tui-input and update xplr in README.md\n- _(uncategorized)_ Add hncli to list of applications made with tui-rs ([#41](https://github.com/ratatui/ratatui/issues/41))\n- _(uncategorized)_ Updated readme and contributing guide with updates about the fork ([#46](https://github.com/ratatui/ratatui/issues/46))\n\n### Performance\n\n- _(layout)_ Better safe shared layout cache ([#62](https://github.com/ratatui/ratatui/issues/62))\n\n### Miscellaneous Tasks\n\n- _(cargo)_ Update project metadata ([#94](https://github.com/ratatui/ratatui/issues/94))\n- _(ci)_ Integrate `typos` for checking typos ([#91](https://github.com/ratatui/ratatui/issues/91))\n- _(ci)_ Change the target branch to main ([#79](https://github.com/ratatui/ratatui/issues/79))\n- _(ci)_ Re-enable clippy on CI ([#59](https://github.com/ratatui/ratatui/issues/59))\n- _(uncategorized)_ Integrate `committed` for checking conventional commits ([#77](https://github.com/ratatui/ratatui/issues/77))\n- _(uncategorized)_ Update `rust-version` to 1.59 in Cargo.toml ([#57](https://github.com/ratatui/ratatui/issues/57))\n- _(uncategorized)_ Update deps ([#51](https://github.com/ratatui/ratatui/issues/51))\n- _(uncategorized)_ Fix typo in layout.rs ([#619](https://github.com/ratatui/ratatui/issues/619))\n- _(uncategorized)_ Add apps using `tui`\n\n### Contributors\n\nThank you so much to everyone that contributed to this release!\n\n- [@orhun](https://github.com/orhun)\n- [@mindoodoo](https://github.com/mindoodoo)\n- [@sayanarijit](https://github.com/sayanarijit)\n- [@Owletti](https://github.com/Owletti)\n- [@UncleScientist](https://github.com/UncleScientist)\n- [@rhysd](https://github.com/rhysd)\n- [@ckaznable](https://github.com/ckaznable)\n- [@imuxin](https://github.com/imuxin)\n- [@mrjackwills](https://github.com/mrjackwills)\n- [@conradludgate](https://github.com/conradludgate)\n- [@kianmeng](https://github.com/kianmeng)\n- [@chaosprint](https://github.com/chaosprint)\n\nAnd most importantly, special thanks to [Florian Dehau](https://github.com/fdehau) for creating this awesome library 💖 We look forward to building on the strong foundations that the original crate laid out.\n\n## v0.19.0 - 2022-08-14\n\n### Features\n\n- Bump `crossterm` to `0.25`\n\n## v0.18.0 - 2022-04-24\n\n### Features\n\n- Update `crossterm` to `0.23`\n\n## v0.17.0 - 2022-01-22\n\n### Features\n\n- Add option to `widgets::List` to repeat the highlight symbol for each line of multi-line items (#533).\n- Add option to control the alignment of `Axis` labels in the `Chart` widget (#568).\n\n### Breaking changes\n\n- The minimum supported rust version is now `1.56.1`.\n\n#### New default backend and consolidated backend options (#553)\n\n- `crossterm` is now the default backend.\nIf you are already using the `crossterm` backend, you can simplify your dependency specification in `Cargo.toml`:\n\n```diff\n- tui = { version = \"0.16\", default-features = false, features = [\"crossterm\"] }\n+ tui = \"0.17\"\n```\n\nIf you are using the `termion` backend, your `Cargo` is now a bit more verbose:\n\n```diff\n- tui = \"0.16\"\n+ tui = { version = \"0.17\", default-features = false, features = [\"termion\"] }\n```\n\n`crossterm` has also been bumped to version `0.22`.\n\nBecause of their apparent low usage, `curses` and `rustbox` backends have been removed.\nIf you are using one of them, you can import their last implementation in your own project:\n\n- [curses](https://github.com/fdehau/tui-rs/blob/v0.16.0/src/backend/curses.rs)\n- [rustbox](https://github.com/fdehau/tui-rs/blob/v0.16.0/src/backend/rustbox.rs)\n\n#### Canvas labels (#543)\n\n- Labels of the `Canvas` widget are now `text::Spans`.\nThe signature of `widgets::canvas::Context::print` has thus been updated:\n\n```diff\n- ctx.print(x, y, \"Some text\", Color::Yellow);\n+ ctx.print(x, y, Span::styled(\"Some text\", Style::default().fg(Color::Yellow)))\n```\n\n## v0.16.0 - 2021-08-01\n\n### Features\n\n- Update `crossterm` to `0.20`.\n- Add `From<Cow<str>>` implementation for `text::Text` (#471).\n- Add option to right or center align the title of a `widgets::Block` (#462).\n\n### Fixes\n\n- Apply label style in `widgets::Gauge` and avoid panics because of overflows with long labels (#494).\n- Avoid panics because of overflows with long axis labels in `widgets::Chart` (#512).\n- Fix computation of column widths in `widgets::Table` (#514).\n- Fix panics because of invalid offset when input changes between two frames in `widgets::List` and\n  `widgets::Chart` (#516).\n\n## v0.15.0 - 2021-05-02\n\n### Features\n\n- Update `crossterm` to `0.19`.\n- Update `rand` to `0.8`.\n- Add a read-only view of the terminal state after the draw call (#440).\n\n### Fixes\n\n- Remove compile warning in `TestBackend::assert_buffer` (#466).\n\n## v0.14.0 - 2021-01-01\n\n### Breaking changes\n\n#### New API for the Table widget\n\nThe `Table` widget got a lot of improvements that should make it easier to work with:\n\n- It should not longer panic when rendered on small areas.\n- `Row`s are now a collection of `Cell`s, themselves wrapping a `Text`. This means you can style\nthe entire `Table`, an entire `Row`, an entire `Cell` and rely on the styling capabilities of\n`Text` to get full control over the look of your `Table`.\n- `Row`s can have multiple lines.\n- The header is now optional and is just another `Row` always visible at the top.\n- `Row`s can have a bottom margin.\n- The header alignment is no longer off when an item is selected.\n\nTaking the example of the code in `examples/demo/ui.rs`, this is what you may have to change:\n\n```diff\n     let failure_style = Style::default()\n         .fg(Color::Red)\n         .add_modifier(Modifier::RAPID_BLINK | Modifier::CROSSED_OUT);\n-    let header = [\"Server\", \"Location\", \"Status\"];\n     let rows = app.servers.iter().map(|s| {\n         let style = if s.status == \"Up\" {\n             up_style\n         } else {\n             failure_style\n         };\n-        Row::StyledData(vec![s.name, s.location, s.status].into_iter(), style)\n+        Row::new(vec![s.name, s.location, s.status]).style(style)\n     });\n-    let table = Table::new(header.iter(), rows)\n+    let table = Table::new(rows)\n+        .header(\n+            Row::new(vec![\"Server\", \"Location\", \"Status\"])\n+                .style(Style::default().fg(Color::Yellow))\n+                .bottom_margin(1),\n+        )\n         .block(Block::default().title(\"Servers\").borders(Borders::ALL))\n-        .header_style(Style::default().fg(Color::Yellow))\n         .widths(&[\n             Constraint::Length(15),\n             Constraint::Length(15),\n```\n\nHere, we had to:\n\n- Change the way we construct [`Row`](https://docs.rs/tui/*/tui/widgets/struct.Row.html) which is no\nlonger an `enum` but a `struct`. It accepts anything that can be converted to an iterator of things\nthat can be converted to a [`Cell`](https://docs.rs/tui/*/tui/widgets/struct.Cell.html)\n- The header is no longer a required parameter so we use\n[`Table::header`](https://docs.rs/tui/*/tui/widgets/struct.Table.html#method.header) to set it.\n`Table::header_style` has been removed since the style can be directly set using\n[`Row::style`](https://docs.rs/tui/*/tui/widgets/struct.Row.html#method.style). In addition, we want\nto preserve the old margin between the header and the rest of the rows so we add a bottom margin to\nthe header using\n[`Row::bottom_margin`](https://docs.rs/tui/*/tui/widgets/struct.Row.html#method.bottom_margin).\n\nYou may want to look at the documentation of the different types to get a better understanding:\n\n- [`Table`](https://docs.rs/tui/*/tui/widgets/struct.Table.html)\n- [`Row`](https://docs.rs/tui/*/tui/widgets/struct.Row.html)\n- [`Cell`](https://docs.rs/tui/*/tui/widgets/struct.Cell.html)\n\n### Fixes\n\n- Fix handling of Non Breaking Space (NBSP) in wrapped text in `Paragraph` widget.\n\n### Features\n\n- Add `Style::reset` to create a `Style` resetting all styling properties when applied.\n- Add an option to render the `Gauge` widget with unicode blocks.\n- Manage common project tasks with `cargo-make` rather than `make` for easier on-boarding.\n\n## v0.13.0 - 2020-11-14\n\n### Features\n\n- Add `LineGauge` widget which is a more compact variant of the existing `Gauge`.\n- Bump `crossterm` to 0.18\n\n### Fixes\n\n- Take into account the borders of the `Table` widget when the widths of columns is controlled by\n`Percentage` and `Ratio` constraints.\n\n## v0.12.0 - 2020-09-27\n\n### Features\n\n- Make it easier to work with string with multiple lines in `Text` (#361).\n\n### Fixes\n\n- Fix a style leak in `Graph` so components drawn on top of the plotted data (i.e legend and axis\ntitles) are not affected by the style of the `Dataset`s (#388).\n- Make sure `BarChart` shows bars with the max height only when the plotted data is actually equal\nto the max (#383).\n\n## v0.11.0 - 2020-09-20\n\n### Features\n\n- Add the dot character as a new type of canvas marker (#350).\n- Support more style modifiers on Windows (#368).\n\n### Fixes\n\n- Clearing the terminal through `Terminal::clear` will cause the whole UI to be redrawn (#380).\n- Fix incorrect output when the first diff to draw is on the second cell of the terminal (#347).\n\n## v0.10.0 - 2020-07-17\n\n### Breaking changes\n\n#### Easier cursor management\n\nA new method has been added to `Frame` called `set_cursor`. It lets you specify where the cursor\nshould be placed after the draw call. Furthermore like any other widgets, if you do not set a cursor\nposition during a draw call, the cursor is automatically hidden.\n\nFor example:\n\n```rust\nfn draw_input(f: &mut Frame, app: &App) {\n  if app.editing {\n    let input_width = app.input.width() as u16;\n    // The cursor will be placed just after the last character of the input\n    f.set_cursor((input_width + 1, 0));\n  } else {\n    // We are no longer editing, the cursor does not have to be shown, set_cursor is not called and\n    // thus automatically hidden.\n  }\n}\n```\n\nIn order to make this possible, the draw closure takes in input `&mut Frame` instead of `mut Frame`.\n\n#### Advanced text styling\n\nIt has been reported several times that the text styling capabilities were somewhat limited in many\nplaces of the crate. To solve the issue, this release includes a new set of text primitives that are\nnow used by a majority of widgets to provide flexible text styling.\n\n`Text` is replaced by the following types:\n\n- `Span`: a string with a unique style.\n- `Spans`: a string with multiple styles.\n- `Text`: a multi-lines string with multiple styles.\n\nHowever, you do not always need this complexity so the crate provides `From` implementations to\nlet you use simple strings as a default and switch to the previous primitives when you need\nadditional styling capabilities.\n\nFor example, the title of a `Block` can be set in the following ways:\n\n```rust\n// A title with no styling\nBlock::default().title(\"My title\");\n// A yellow title\nBlock::default().title(Span::styled(\"My title\", Style::default().fg(Color::Yellow)));\n// A title where \"My\" is bold and \"title\" is a simple string\nBlock::default().title(vec![\n    Span::styled(\"My\", Style::default().add_modifier(Modifier::BOLD)),\n    Span::from(\"title\")\n]);\n```\n\n- `Buffer::set_spans` and `Buffer::set_span` were added.\n- `Paragraph::new` expects an input that can be converted to a `Text`.\n- `Block::title_style` is deprecated.\n- `Block::title` expects a `Spans`.\n- `Tabs` expects a list of `Spans`.\n- `Gauge` custom label is now a `Span`.\n- `Axis` title and labels are `Spans` (as a consequence `Chart` no longer has generic bounds).\n\n#### Incremental styling\n\nPreviously `Style` was used to represent an exhaustive set of style rules to be applied to an UI\nelement. It implied that whenever you wanted to change even only one property you had to provide the\ncomplete style. For example, if you had a `Block` where you wanted to have a green background and\na title in bold, you had to do the following:\n\n```rust\nlet style = Style::default().bg(Color::Green);\nBlock::default()\n  .style(style)\n  .title(\"My title\")\n  // Here we reused the style otherwise the background color would have been reset\n  .title_style(style.modifier(Modifier::BOLD));\n```\n\nIn this new release, you may now write this as:\n\n```rust\nBlock::default()\n    .style(Style::default().bg(Color::Green))\n    // The style is not overridden anymore, we simply add new style rule for the title.\n    .title(Span::styled(\"My title\", Style::default().add_modifier(Modifier::BOLD)))\n```\n\nIn addition, the crate now provides a method `patch` to combine two styles into a new set of style\nrules:\n\n```rust\nlet style = Style::default().modifier(Modifier::BOLD);\nlet style = style.patch(Style::default().add_modifier(Modifier::ITALIC));\n// style.modifier == Modifier::BOLD | Modifier::ITALIC, the modifier has been enriched not overridden\n```\n\n- `Style::modifier` has been removed in favor of `Style::add_modifier` and `Style::remove_modifier`.\n- `Buffer::set_style` has been added. `Buffer::set_background` is deprecated.\n- `BarChart::style` no longer set the style of the bars. Use `BarChart::bar_style` in replacement.\n- `Gauge::style` no longer set the style of the gauge. Use `Gauge::gauge_style` in replacement.\n\n#### List with item on multiple lines\n\nThe `List` widget has been refactored once again to support items with variable heights and complex\nstyling.\n\n- `List::new` expects an input that can be converted to a `Vec<ListItem>` where `ListItem` is a\nwrapper around the item content to provide additional styling capabilities. `ListItem` contains a\n`Text`.\n- `List::items` has been removed.\n\n```rust\n// Before\nlet items = vec![\n  \"Item1\",\n  \"Item2\",\n  \"Item3\"\n];\nList::default().items(items.iters());\n\n// After\nlet items = vec![\n  ListItem::new(\"Item1\"),\n  ListItem::new(\"Item2\"),\n  ListItem::new(\"Item3\"),\n];\nList::new(items);\n```\n\nSee the examples for more advanced usages.\n\n#### More wrapping options\n\n`Paragraph::wrap` expects `Wrap` instead of `bool` to let users decided whether they want to trim\nwhitespaces when the text is wrapped.\n\n```rust\n// before\nParagraph::new(text).wrap(true)\n// after\nParagraph::new(text).wrap(Wrap { trim: true }) // to have the same behavior\nParagraph::new(text).wrap(Wrap { trim: false }) // to use the new behavior\n```\n\n#### Horizontal scrolling in paragraph\n\nYou can now scroll horizontally in `Paragraph`. The argument of `Paragraph::scroll` has thus be\nchanged from `u16` to `(u16, u16)`.\n\n### Features\n\n#### Serialization of style\n\nYou can now serialize and de-serialize `Style` using the optional `serde` feature.\n\n## v0.9.5 - 2020-05-21\n\n### Bug Fixes\n\n- Fix out of bounds panic in `widgets::Tabs` when the widget is rendered on\nsmall areas.\n\n## v0.9.4 - 2020-05-12\n\n### Bug Fixes\n\n- Ignore zero-width graphemes in `Buffer::set_stringn`.\n\n## v0.9.3 - 2020-05-11\n\n### Bug Fixes\n\n- Fix usize overflows in `widgets::Chart` when a dataset is empty.\n\n## v0.9.2 - 2020-05-10\n\n### Bug Fixes\n\n- Fix usize overflows in `widgets::canvas::Line` drawing algorithm.\n\n## v0.9.1 - 2020-04-16\n\n### Bug Fixes\n\n- The `List` widget now takes into account the width of the `highlight_symbol`\nwhen calculating the total width of its items. It prevents items to overflow\noutside of the widget area.\n\n## v0.9.0 - 2020-04-14\n\n### Features\n\n- Introduce stateful widgets, i.e widgets that can take advantage of keeping\nsome state around between two draw calls (#210 goes a bit more into the\ndetails).\n- Allow a `Table` row to be selected.\n\n```rust\n// State initialization\nlet mut state = TableState::default();\n\n// In the terminal.draw closure\nlet header = [\"Col1\", \"Col2\", \"Col\"];\nlet rows = [\n  Row::Data([\"Row11\", \"Row12\", \"Row13\"].into_iter())\n];\nlet table = Table::new(header.into_iter(), rows.into_iter());\nf.render_stateful_widget(table, area, &mut state);\n\n// In response to some event:\nstate.select(Some(1));\n```\n\n- Add a way to choose the type of border used to draw a block. You can now\nchoose from plain, rounded, double and thick lines.\n\n- Add a `graph_type` property on the `Dataset` of a `Chart` widget. By\ndefault it will be `Scatter` where the points are drawn as is. An other\noption is `Line` where a line will be draw between each consecutive points\nof the dataset.\n- Style methods are now const, allowing you to initialize const `Style`\nobjects.\n- Improve control over whether the legend in the `Chart` widget is shown or\nnot. You can now set custom constraints using\n`Chart::hidden_legend_constraints`.\n- Add `Table::header_gap` to add some space between the header and the first\nrow.\n- Remove `log` from the dependencies\n- Add a way to use a restricted set of unicode symbols in several widgets to\nimprove portability in exchange of a degraded output. (see `BarChart::bar_set`,\n`Sparkline::bar_set` and `Canvas::marker`). You can check how the\n`--enhanced-graphics` flag is used in the demos.\n\n### Breaking Changes\n\n- `Widget::render` has been deleted. You should now use `Frame::render_widget`\nto render a widget on the corresponding `Frame`. This makes the `Widget`\nimplementation totally decoupled from the `Frame`.\n\n```rust\n// Before\nBlock::default().render(&mut f, size);\n\n// After\nlet block = Block::default();\nf.render_widget(block, size);\n```\n\n- `Widget::draw` has been renamed to `Widget::render` and the signature has\nbeen updated to reflect that widgets are consumable objects. Thus the method\ntakes `self` instead of `&mut self`.\n\n```rust\n// Before\nimpl Widget for MyWidget {\n  fn draw(&mut self, area: Rect, buf: &mut Buffer) {\n  }\n}\n\n/// After\nimpl Widget for MyWidget {\n  fn render(self, arera: Rect, buf: &mut Buffer) {\n  }\n}\n```\n\n- `Widget::background` has been replaced by `Buffer::set_background`\n\n```rust\n// Before\nimpl Widget for MyWidget {\n  fn render(self, arera: Rect, buf: &mut Buffer) {\n    self.background(area, buf, self.style.bg);\n  }\n}\n\n// After\nimpl Widget for MyWidget {\n  fn render(self, arera: Rect, buf: &mut Buffer) {\n    buf.set_background(area, self.style.bg);\n  }\n}\n```\n\n- Update the `Shape` trait for objects that can be draw on a `Canvas` widgets.\nInstead of returning an iterator over its points, a `Shape` is given a\n`Painter` object that provides a `paint` as well as a `get_point` method. This\ngives the `Shape` more information about the surface it will be drawn to. In\nparticular, this change allows the `Line` shape to use a more precise and\nefficient drawing algorithm (Bresenham's line algorithm).\n\n- `SelectableList` has been deleted. You can now take advantage of the\nassociated `ListState` of the `List` widget to select an item.\n\n```rust\n// Before\nList::new(&[\"Item1\", \"Item2\", \"Item3\"])\n  .select(Some(1))\n  .render(&mut f, area);\n\n// After\n\n// State initialization\nlet mut state = ListState::default();\n\n// In the terminal.draw closure\nlet list = List::new(&[\"Item1\", \"Item2\", \"Item3\"]);\nf.render_stateful_widget(list, area, &mut state);\n\n// In response to some events\nstate.select(Some(1));\n```\n\n- `widgets::Marker` has been moved to `symbols::Marker`\n\n## v0.8.0 - 2019-12-15\n\n### Breaking Changes\n\n- Bump crossterm to 0.14.\n- Add cross symbol to the symbols list.\n\n### Bug Fixes\n\n- Use the value of `title_style` to style the title of `Axis`.\n\n## v0.7.0 - 2019-11-29\n\n### Breaking Changes\n\n- Use `Constraint` instead of integers to specify the widths of the `Table`\nwidget's columns. This will allow more responsive tables.\n\n```rust\nTable::new(header, row)\n  .widths(&[15, 15, 10])\n  .render(f, chunk);\n```\n\nbecomes:\n\n```rust\nTable::new(header, row)\n  .widths(&[\n    Constraint::Length(15),\n    Constraint::Length(15),\n    Constraint::Length(10),\n  ])\n  .render(f, chunk);\n```\n\n- Bump crossterm to 0.13.\n- Use Github Actions for CI (Travis and Azure Pipelines integrations have been deleted).\n\n### Features\n\n- Add support for horizontal and vertical margins in `Layout`.\n\n## v0.6.2 - 2019-07-16\n\n### Features\n\n- `Text` implements PartialEq\n\n### Bug Fixes\n\n- Avoid overflow errors in canvas\n\n## v0.6.1 - 2019-06-16\n\n### Bug Fixes\n\n- Avoid a division by zero when all values in a barchart are equal to 0.\n- Fix the inverted cursor position in the curses backend.\n- Ensure that the correct terminal size is returned when using the crossterm\nbackend.\n- Avoid highlighting the separator after the selected item in the Tabs widget.\n\n## v0.6.0 - 2019-05-18\n\n### Breaking Changes\n\n- Update crossterm backend\n\n## v0.5.1 - 2019-04-14\n\n### Bug Fixes\n\n- Fix a panic in the Sparkline widget\n\n## v0.5.0 - 2019-03-10\n\n### Features\n\n- Add a new curses backend (with Windows support thanks to `pancurses`).\n- Add `Backend::get_cursor` and `Backend::set_cursor` methods to query and\nset the position of the cursor.\n- Add more constructors to the `Crossterm` backend.\n- Add a demo for all backends using a shared UI and application state.\n- Add `Ratio` as a new variant of layout `Constraint`. It can be used to define\nexact ratios constraints.\n\n### Breaking Changes\n\n- Add support for multiple modifiers on the same `Style` by changing `Modifier`\nfrom an enum to a bitflags struct.\n\nSo instead of writing:\n\n```rust\nlet style = Style::default().add_modifier(Modifier::Italic);\n```\n\none should use:\n\n```rust\nlet style = Style::default().add_modifier(Modifier::ITALIC);\n// or\nlet style = Style::default().add_modifier(Modifier::ITALIC | Modifier::BOLD);\n```\n\n### Bug Fixes\n\n- Ensure correct behavior of the alternate screens with the `Crossterm` backend.\n- Fix out of bounds panic when two `Buffer` are merged.\n\n## v0.4.0 - 2019-02-03\n\n### Features\n\n- Add a new canvas shape: `Rectangle`.\n- Official support of `Crossterm` backend.\n- Make it possible to choose the divider between `Tabs`.\n- Add word wrapping on Paragraph.\n- The gauge widget accepts a ratio (f64 between 0 and 1) in addition of a\npercentage.\n\n### Breaking Changes\n\n- Upgrade to Rust 2018 edition.\n\n### Bug Fixes\n\n- Fix rendering of double-width characters.\n- Fix race condition on the size of the terminal and expose a size that is\nsafe to use when drawing through `Frame::size`.\n- Prevent unsigned int overflow on large screens.\n\n## v0.3.0 - 2018-11-04\n\n### Features\n\n- Add experimental test backend\n\n## v0.3.0-beta.3 - 2018-09-24\n\n### Features\n\n- `show_cursor` is called when `Terminal` is dropped if the cursor is hidden.\n\n## v0.3.0-beta.2 - 2018-09-23\n\n### Breaking Changes\n\n- Remove custom `termion` backends. This is motivated by the fact that\n`termion` structs are meant to be combined/wrapped to provide additional\nfunctionalities to the terminal (e.g AlternateScreen, Mouse support, ...).\nThus providing exclusive types do not make a lot of sense and give a false\nhint that additional features cannot be used together. The recommended\napproach is now to create your own version of `stdout`:\n\n```rust\nlet stdout = io::stdout().into_raw_mode()?;\nlet stdout = MouseTerminal::from(stdout);\nlet stdout = AlternateScreen::from(stdout);\n```\n\nand then to create the corresponding `termion` backend:\n\n```rust\nlet backend = TermionBackend::new(stdout);\n```\n\nThe resulting code is more verbose but it works with all combinations of\nadditional `termion` features.\n\n## v0.3.0-beta.1 - 2018-09-08\n\n### Breaking Changes\n\n- Replace `Item` by a generic and flexible `Text` that can be used in both\n`Paragraph` and `List` widgets.\n- Remove unnecessary borrows on `Style`.\n\n## v0.3.0-beta.0 - 2018-09-04\n\n### Features\n\n- Add a basic `Crossterm` backend\n\n### Breaking Changes\n\n- Remove `Group` and introduce `Layout` in its place\n  - `Terminal` is no longer required to compute a layout\n  - `Size` has been renamed `Constraint`\n- Widgets are rendered on a `Frame` instead of a `Terminal` in order to\navoid mixing `draw` and `render` calls\n- `draw` on `Terminal` expects a closure where the UI is built by rendering\nwidgets on the given `Frame`\n- Update `Widget` trait\n  - `draw` takes area by value\n  - `render` takes a `Frame` instead of a `Terminal`\n- All widgets use the consumable builder pattern\n- `SelectableList` can have no selected item and the highlight symbol is hidden\nin this case\n- Remove markup language inside `Paragraph`. `Paragraph` now expects an iterator\nof `Text` items\n\n## v0.2.3 - 2018-06-09\n\n### Features\n\n- Add `start_corner` option for `List`\n- Add more text alignment options for `Paragraph`\n\n## v0.2.2 - 2018-05-06\n\n### Features\n\n- `Terminal` implements `Debug`\n\n### Breaking Changes\n\n- Use `FnOnce` instead of `FnMut` in Group::render\n\n## v0.2.1 - 2018-04-01\n\n### Features\n\n- Add `AlternateScreenBackend` in `termion` backend\n- Add `TermionBackend::with_stdout` in order to let an user of the library\nprovides its own termion struct\n- Add tests and documentation for `Buffer::pos_of`\n- Remove leading whitespaces when wrapping text\n\n### Bug Fixes\n\n- Fix `debug_assert` in `Buffer::pos_of`\n- Pass the style of `SelectableList` to the underlying `List`\n- Fix missing character when wrapping text\n- Fix panic when specifying layout constraints\n\n## v0.2.0 - 2017-12-26\n\n### Features\n\n- Add `MouseBackend` in `termion` backend to handle scroll and mouse events\n- Add generic `Item` for items in a `List`\n- Drop `log4rs` as a dev-dependencies in favor of `stderrlog`\n\n### Breaking Changes\n\n- Rename `TermionBackend` to `RawBackend` (to distinguish it from the `MouseBackend`)\n- Generic parameters for `List` to allow passing iterators as items\n- Generic parameters for `Table` to allow using iterators as rows and header\n- Generic parameters for `Tabs`\n- Rename `border` bitflags to `Borders`\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.13671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhttps://forum.ratatui.rs/ or https://discord.gg/pMCEU9hNEj.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.3212890625,
          "content": "# Contribution guidelines\n\nFirst off, thank you for considering contributing to Ratatui.\n\nIf your contribution is not straightforward, please first discuss the change you wish to make by\ncreating a new issue before making the change, or starting a discussion on\n[discord](https://discord.gg/pMCEU9hNEj).\n\n## Reporting issues\n\nBefore reporting an issue on the [issue tracker](https://github.com/ratatui/ratatui/issues),\nplease check that it has not already been reported by searching for some related keywords. Please\nalso check [`tui-rs` issues](https://github.com/fdehau/tui-rs/issues/) and link any related issues\nfound.\n\n## Pull requests\n\nAll contributions are obviously welcome. Please include as many details as possible in your PR\ndescription to help the reviewer (follow the provided template). Make sure to highlight changes\nwhich may need additional attention, or you are uncertain about. Any idea with a large scale impact\non the crate or its users should ideally be discussed in a \"Feature Request\" issue beforehand.\n\n### Keep PRs small, intentional, and focused\n\nTry to do one pull request per change. The time taken to review a PR grows exponential with the size\nof the change. Small focused PRs will generally be much more faster to review. PRs that include both\nrefactoring (or reformatting) with actual changes are more difficult to review as every line of the\nchange becomes a place where a bug may have been introduced. Consider splitting refactoring /\nreformatting changes into a separate PR from those that make a behavioral change, as the tests help\nguarantee that the behavior is unchanged.\n\n### Code formatting\n\nRun `cargo xtask format` before committing to ensure that code is consistently formatted with\nrustfmt. Configuration is in [`rustfmt.toml`](./rustfmt.toml).\n\n### Search `tui-rs` for similar work\n\nThe original fork of Ratatui, [`tui-rs`](https://github.com/fdehau/tui-rs/), has a large amount of\nhistory of the project. Please search, read, link, and summarize any relevant\n[issues](https://github.com/fdehau/tui-rs/issues/),\n[discussions](https://github.com/fdehau/tui-rs/discussions/) and [pull\nrequests](https://github.com/fdehau/tui-rs/pulls).\n\n### Use conventional commits\n\nWe use [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) and check for them as\na lint build step. To help adhere to the format, we recommend to install\n[Commitizen](https://commitizen-tools.github.io/commitizen/). By using this tool you automatically\nfollow the configuration defined in [.cz.toml](.cz.toml). Your commit messages should have enough\ninformation to help someone reading the [CHANGELOG](./CHANGELOG.md) understand what is new just from\nthe title. The summary helps expand on that to provide information that helps provide more context,\ndescribes the nature of the problem that the commit is solving and any unintuitive effects of the\nchange. It's rare that code changes can easily communicate intent, so make sure this is clearly\ndocumented.\n\n### Run CI tests before pushing a PR\n\nRunning `cargo xtask ci` before pushing will perform the same checks that we do in the CI process.\nIt's not mandatory to do this before pushing, however it may save you time to do so instead of\nwaiting for GitHub to run the checks.\n\n### Sign your commits\n\nWe use commit signature verification, which will block commits from being merged via the UI unless\nthey are signed. To set up your machine to sign commits, see [managing commit signature\nverification](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification)\nin GitHub docs.\n\n## Implementation Guidelines\n\n### Setup\n\nTL;DR: Clone the repo and build it using `cargo xtask`.\n\nRatatui is an ordinary Rust project where common tasks are managed with\n[cargo-xtask](https://github.com/matklad/cargo-xtask). It wraps common `cargo` commands with sane\ndefaults depending on your platform of choice. Building the project should be as easy as running\n`cargo xtask build`.\n\n```shell\ngit clone https://github.com/ratatui/ratatui.git\ncd ratatui\ncargo xtask build\n```\n\n### Tests\n\nThe [test coverage](https://app.codecov.io/gh/ratatui/ratatui) of the crate is reasonably\ngood, but this can always be improved. Focus on keeping the tests simple and obvious and write unit\ntests for all new or modified code. Beside the usual doc and unit tests, one of the most valuable\ntest you can write for Ratatui is a test against the `TestBackend`. It allows you to assert the\ncontent of the output buffer that would have been flushed to the terminal after a given draw call.\nSee `widgets_block_renders` in [tests/widgets_block.rs](./tests/widget_block.rs) for an example.\n\nWhen writing tests, generally prefer to write unit tests and doc tests directly in the code file\nbeing tested rather than integration tests in the `tests/` folder.\n\nIf an area that you're making a change in is not tested, write tests to characterize the existing\nbehavior before changing it. This helps ensure that we don't introduce bugs to existing software\nusing Ratatui (and helps make it easy to migrate apps still using `tui-rs`).\n\nFor coverage, we have two [bacon](https://dystroy.org/bacon/) jobs (one for all tests, and one for\nunit tests, keyboard shortcuts `v` and `u` respectively) that run\n[cargo-llvm-cov](https://github.com/taiki-e/cargo-llvm-cov) to report the coverage. Several plugins\nexist to show coverage directly in your editor. E.g.:\n\n- <https://marketplace.visualstudio.com/items?itemName=ryanluker.vscode-coverage-gutters>\n- <https://github.com/alepez/vim-llvmcov>\n\n### Documentation\n\nHere are some guidelines for writing documentation in Ratatui.\n\nEvery public API **must** be documented.\n\nKeep in mind that Ratatui tends to attract beginner Rust users that may not be familiar with Rust\nconcepts.\n\n#### Content\n\nThe main doc comment should talk about the general features that the widget supports and introduce\nthe concepts pointing to the various methods. Focus on interaction with various features and giving\nenough information that helps understand why you might want something.\n\nExamples should help users understand a particular usage, not test a feature. They should be as\nsimple as possible. Prefer hiding imports and using wildcards to keep things concise. Some imports\nmay still be shown to demonstrate a particular non-obvious import (e.g. `Stylize` trait to use style\nmethods). Speaking of `Stylize`, you should use it over the more verbose style setters:\n\n```rust\nlet style = Style::new().red().bold();\n// not\nlet style = Style::default().fg(Color::Red).add_modifier(Modifiers::BOLD);\n```\n\n#### Format\n\n- First line is summary, second is blank, third onward is more detail\n\n```rust\n/// Summary\n///\n/// A detailed description\n/// with examples.\nfn foo() {}\n```\n\n- Max line length is 100 characters\nSee [VS Code rewrap extension](https://marketplace.visualstudio.com/items?itemName=stkb.rewrap)\n\n- Doc comments are above macros\ni.e.\n\n```rust\n/// doc comment\n#[derive(Debug)]\nstruct Foo {}\n```\n\n- Code items should be between backticks\ni.e. ``[`Block`]``, **NOT** ``[Block]``\n\n### Deprecation notice\n\nWe generally want to wait at least two versions before removing deprecated items, so users have\ntime to update. However, if a deprecation is blocking for us to implement a new feature we may\n*consider* removing it in a one version notice.\n\n### Use of unsafe for optimization purposes\n\nWe don't currently use any unsafe code in Ratatui, and would like to keep it that way. However, there\nmay be specific cases that this becomes necessary in order to avoid slowness. Please see [this\ndiscussion](https://github.com/ratatui/ratatui/discussions/66) for more about the decision.\n\n## Continuous Integration\n\nWe use GitHub Actions for the CI where we perform the following checks:\n\n- The code should compile on `stable` and the Minimum Supported Rust Version (MSRV).\n- The tests (docs, lib, tests and examples) should pass.\n- The code should conform to the default format enforced by `rustfmt`.\n- The code should not contain common style issues `clippy`.\n\nYou can also check most of those things yourself locally using `cargo xtask ci` which will offer you\na shorter feedback loop than pushing to github.\n\n## Relationship with `tui-rs`\n\nThis project was forked from [`tui-rs`](https://github.com/fdehau/tui-rs/) in February 2023, with the\n[blessing of the original author](https://github.com/fdehau/tui-rs/issues/654), Florian Dehau\n([@fdehau](https://github.com/fdehau)).\n\nThe original repository contains all the issues, PRs, and discussion that were raised originally, and\nit is useful to refer to when contributing code, documentation, or issues with Ratatui.\n\nWe imported all the PRs from the original repository, implemented many of the smaller ones, and\nmade notes on the leftovers. These are marked as draft PRs and labelled as [imported from\ntui](https://github.com/ratatui/ratatui/pulls?q=is%3Apr+is%3Aopen+label%3A%22imported+from+tui%22).\nWe have documented the current state of those PRs, and anyone is welcome to pick them up and\ncontinue the work on them.\n\nWe have not imported all issues opened on the previous repository. For that reason, anyone wanting\nto **work on or discuss** an issue will have to follow the following workflow:\n\n- Recreate the issue\n- Start by referencing the **original issue**: ```Referencing issue #[<issue number>](<original\n  issue link>)```\n- Then, paste the original issues **opening** text\n\nYou can then resume the conversation by replying to this new issue you have created.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 97.919921875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"arc-swap\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457\"\n\n[[package]]\nname = \"argh\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ff18325c8a36b82f992e533ece1ec9f9a9db446bd1c14d4f936bac88fcd240\"\ndependencies = [\n \"argh_derive\",\n \"argh_shared\",\n \"rust-fuzzy-search\",\n]\n\n[[package]]\nname = \"argh_derive\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb7b2b83a50d329d5d8ccc620f5c7064028828538bdf5646acd60dc1f767803\"\ndependencies = [\n \"argh_shared\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"argh_shared\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a464143cc82dedcdc3928737445362466b7674b5db4e2eb8e869846d6d84f4f6\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"async-github\"\nversion = \"0.1.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"octocrab\",\n \"ratatui\",\n \"tokio\",\n \"tokio-stream\",\n]\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"atomic\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d818003e740b63afc82337e3160717f4f63078720a810b7b903e70a5d1d2994\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dde43e75fd43e8a1bf86103336bc699aa8d17ad1be60c76c0bdfd4828e19b78\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.71\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b05800d2e817c8b3b4b54abd461726265fa9789ae34330622f2db9ee696f9d\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"by_address\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fa3c856b712db6612c019f14756e64e4bcea13337a6b33b696333a9eaa2d06\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef657dfab802224e671f5818e9a4935f9b1957ed18e58292690cc39e7a4092a3\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"calendar-explorer\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"ratatui\",\n \"time\",\n]\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"canvas\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"itertools 0.13.0\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e35af189006b9c0f00a064685c727031e3ed2d8020f7ba284d78cc2671bd36ea\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8769706aad5d996120af43197bf46ef6ad0fda35216b4505f926a365a232d924\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver 1.0.24\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.9\",\n]\n\n[[package]]\nname = \"cassowary\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df8670b8c7b9dae1793364eafadf7239c40d669904660c5960d74cfd80b46a53\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"castaway\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0abae9be0aaf9ea96a3b1b8b1b55c602ca751eba1b1500220cea4ecbafe7c0d5\"\ndependencies = [\n \"rustversion\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c31a0499c1dc64f458ad13872de75c0eb7e3fdb0e67964610c914b034fc5956e\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"\n\n[[package]]\nname = \"chart\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"serde\",\n \"wasm-bindgen\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap-cargo\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e3340d63f960ad376843dd750fb2aa4ac1b79e10775a070882bd135edfce303\"\ndependencies = [\n \"anstyle\",\n \"cargo_metadata\",\n \"clap\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"clap-verbosity-flag\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2678fade3b77aa3a8ff3aae87e9c008d3fb00473a41c71fbf74e91c8c7b37e84\"\ndependencies = [\n \"clap\",\n \"log\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim 0.11.1\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"cloudabi\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"color-explorer\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"itertools 0.13.0\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"color-eyre\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55146f5e46f237f7423d74111267d4597b59b0dad0ffaf7303bce9945d843ad5\"\ndependencies = [\n \"backtrace\",\n \"color-spantrace\",\n \"eyre\",\n \"indenter\",\n \"once_cell\",\n \"owo-colors\",\n \"tracing-error\",\n]\n\n[[package]]\nname = \"color-spantrace\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd6be1b2a7e382e2b98b43b2adcca6bb0e465af0bdd38123873ae61eb17a72c2\"\ndependencies = [\n \"once_cell\",\n \"owo-colors\",\n \"tracing-core\",\n \"tracing-error\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"compact_str\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6050c3a16ddab2e412160b31f2c871015704239bca62f72f6e5f0be631d3f644\"\ndependencies = [\n \"castaway\",\n \"cfg-if\",\n \"itoa\",\n \"rustversion\",\n \"ryu\",\n \"serde\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ba6d68e24814cb8de6bb986db8222d3a027d15872cabc0d18817bc3c0e4471\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crossterm\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"829d955a0bb380ef178a640b91779e3987da38c9aea133b20614cfed8cdea9c6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"crossterm_winapi\",\n \"futures-core\",\n \"mio\",\n \"parking_lot\",\n \"rustix\",\n \"signal-hook\",\n \"signal-hook-mio\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossterm_winapi\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdd7c62a3665c7f6830a51635d9ac9b23ed385797f70a83bb8bafe9c572ab2b\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"csscolorparser\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb2a7d3066da2de787b7f032c736763eb7ae5d355f81a68bab2675a96008b0bf\"\ndependencies = [\n \"lab\",\n \"phf\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim 0.11.1\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"deltae\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5729f5117e208430e437df2f4843f5e5952997175992d1414f94c57d61e270b4\"\n\n[[package]]\nname = \"demo\"\nversion = \"0.0.0\"\ndependencies = [\n \"clap\",\n \"rand 0.8.5\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"demo2\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"indoc\",\n \"itertools 0.13.0\",\n \"palette\",\n \"rand 0.8.5\",\n \"rand_chacha 0.3.1\",\n \"ratatui\",\n \"strum\",\n \"time\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3aa72a6f96ea37bbc5aa912f6788242832f75369bdfdadcb0e38423f100059\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"duct\"\nversion = \"0.13.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4ab5718d1224b63252cd0c6f74f6480f9ffeb117438a2e0f5cf6d9a4798929c\"\ndependencies = [\n \"libc\",\n \"once_cell\",\n \"os_pipe\",\n \"shared_child\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"euclid\"\nversion = \"0.22.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad9cdb4b747e485a12abb0e6566612956c7a1bafa3bdb8d682c5b6d403589e48\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"eyre\"\nversion = \"0.6.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cd915d99f24784cdc19fd37ef22b97e3ff0ae756c7e492e9fbfe897d61e2aec\"\ndependencies = [\n \"indenter\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fakeit\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7926667ef705d624c77bfad7ee4a3a52df3d0957b4962d8f085da6a97e29e114\"\ndependencies = [\n \"libmath\",\n \"rand 0.6.5\",\n \"simplerand\",\n \"uuid 0.8.2\",\n]\n\n[[package]]\nname = \"fancy-regex\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b95f7c0680e4142284cf8b22c14a476e87d61b004a3a0861872b32ef7ead40a2\"\ndependencies = [\n \"bit-set\",\n \"regex\",\n]\n\n[[package]]\nname = \"fast-srgb8\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd2e7510819d6fbf51a5545c8f922716ecfb14df168a3242f7d33e0239efe6a1\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"filedescriptor\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7199d965852c3bac31f779ef99cbb4537f80e952e2d6aa0ffeb30cce00f4f46e\"\ndependencies = [\n \"libc\",\n \"thiserror 1.0.69\",\n \"winapi\",\n]\n\n[[package]]\nname = \"finl_unicode\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94c970b525906eb37d3940083aa65b95e481fc1857d467d13374e1d925cfc163\"\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"font8x8\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"875488b8711a968268c7cf5d139578713097ca4635a76044e8fe8eedf831d07e\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"allocator-api2\",\n \"equivalent\",\n \"foldhash\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"http\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f16ca2af56261c99fba8bac40a10251ce8188205a4c448fbb745a2e4daa76fea\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"256fb8d4bd6413123cc9d91832d78325c48ff41677595be797d90f42969beae0\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d191583f3da1305256f22463b9bb0471acad48a4e534a5218b9963e9c1f59b2\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"log\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-timeout\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b90d566bffbce6a75bd8b09a05aa8c2cb1fabb6cb348f8840c9e4c90a0d83b0\"\ndependencies = [\n \"hyper\",\n \"hyper-util\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indenter\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce23b50ad8242c51a442f3ff322d56b02f08852c77e4c0b4d3fd684abc89c683\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"input-form\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"ratatui\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"instability\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"894813a444908c0c8c0e221b041771d107c4a21de1d317dc49bcc66e3c9e5b3f\"\ndependencies = [\n \"darling\",\n \"indoc\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"iri-string\"\nversion = \"0.7.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc0f0a572e8ffe56e2ff4f769f32ffe919282c3916799f8b68688b6030063bea\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"jsonwebtoken\"\nversion = \"9.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9ae10193d25051e74945f1ea2d0b42e03cc3b890f7e4cc5faa44997d808193f\"\ndependencies = [\n \"base64 0.21.7\",\n \"js-sys\",\n \"pem\",\n \"ring\",\n \"serde\",\n \"serde_json\",\n \"simple_asn1\",\n]\n\n[[package]]\nname = \"lab\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf36173d4167ed999940f804952e6b08197cae5ad5d572eb4db150ce8ad5d58f\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libmath\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfd3416934a853ae80d5c3b006f632dfcbaf320300c5167e88a469e9ac214502\"\ndependencies = [\n \"rand 0.3.23\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"line-clipping\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76364bf78d7ed059f98564fc5fb94c5a6eb2b6c9edd621cb1528febe1e918b29\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"line_drawing\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d1478a313008a3e6c8149995e90a99ee9094034b5c5c3da1eeb81183cb61d1d\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg 1.4.0\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lru\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"234cf4f4a04dc1f57e24b96cc0cd600cf2af460d4161ac5ecdd0af8e1f3b2a38\"\ndependencies = [\n \"hashbrown\",\n]\n\n[[package]]\nname = \"mac_address\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8836fae9d0d4be2c8b4efcdd79e828a2faa058a90d005abf42f91cac5493a08e\"\ndependencies = [\n \"nix 0.28.0\",\n \"winapi\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memmem\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a64a92489e2744ce060c349162be1c5f33c6969234104dbd99ddb5feb08b8c15\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"mouse-drawing\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"line_drawing\",\n \"rand 0.8.5\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n \"memoffset 0.7.1\",\n \"pin-utils\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab2156c4fce2f8df6c499cc1c763e4394b7482525bf2a9701c9d79d215f519e4\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n \"memoffset 0.9.1\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-derive\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"876a53fff98e03a936a674b29568b0e605f06b29372c2489ff4de23f1949743d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c7398b9c8b70908f6371f47ed36737907c87c52af34c268fed0bf0ceb92ead9\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"numtoa\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6aa2c4e539b869820a2b82e1aef6ff40aa85e65decdd5185e83fb4b1249cd00f\"\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"octocrab\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b97f949a7cb04608441c2ddb28e15a377e8b5142c2d1835ad2686d434de8558\"\ndependencies = [\n \"arc-swap\",\n \"async-trait\",\n \"base64 0.22.1\",\n \"bytes\",\n \"cfg-if\",\n \"chrono\",\n \"either\",\n \"futures\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-timeout\",\n \"hyper-util\",\n \"jsonwebtoken\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project\",\n \"secrecy\",\n \"serde\",\n \"serde_json\",\n \"serde_path_to_error\",\n \"serde_urlencoded\",\n \"snafu\",\n \"tokio\",\n \"tower\",\n \"tower-http\",\n \"tracing\",\n \"url\",\n \"web-time\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"ordered-float\"\nversion = \"4.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7bb71e1b3fa6ca1c61f383464aaf2bb0e2f8e772a1f01d486832464de363b951\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"os_pipe\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ffd2b0a5634335b135d5728d84c5e0fd726954b87111f7506a61c502280d982\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"3.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f\"\n\n[[package]]\nname = \"palette\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cbf71184cc5ecc2e4e1baccdb21026c20e5fc3dcf63028a086131b3ab00b6e6\"\ndependencies = [\n \"approx\",\n \"fast-srgb8\",\n \"palette_derive\",\n \"phf\",\n]\n\n[[package]]\nname = \"palette_derive\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5030daf005bface118c096f510ffb781fc28f9ab6a32ab224d8631be6851d30\"\ndependencies = [\n \"by_address\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pem\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae\"\ndependencies = [\n \"base64 0.22.1\",\n \"serde\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b7cafe60d6cf8e62e1b9b2ea516a089c008945bb5a275416789e7db0bc199dc\"\ndependencies = [\n \"memchr\",\n \"thiserror 2.0.9\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"pest_derive\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"816518421cfc6887a0d62bf441b6ffb4536fcc926395a69e1a85852d4363f57e\"\ndependencies = [\n \"pest\",\n \"pest_generator\",\n]\n\n[[package]]\nname = \"pest_generator\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d1396fd3a870fc7838768d171b4616d5c91f6cc25e377b673d714567d99377b\"\ndependencies = [\n \"pest\",\n \"pest_meta\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"pest_meta\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1e58089ea25d717bfd31fb534e4f3afcc2cc569c70de3e239778991ea3b7dea\"\ndependencies = [\n \"once_cell\",\n \"pest\",\n \"sha2\",\n]\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_macros\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand 0.8.5\",\n]\n\n[[package]]\nname = \"phf_macros\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3444646e286606587e49f3bcf1679b8cef1dc2c5ecc29ddacaffc305180d464b\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be57f64e946e500c8ee36ef6331845d40a93055567ec57e8fae13efd33759b95\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c0f5fad0874fc7abcd4d750e76917eaebbecaa2c20bde22e1dbeeba8beb758c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ae130e2f271fbc2ac3a40fb1d07180839cdbbe443c7a27e1e3c13c5cac0116d\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.3.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ac302d8f83c0c1974bf758f6b041c6c8ada916fbb44a609158ca8b064cc76c\"\ndependencies = [\n \"libc\",\n \"rand 0.4.6\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293\"\ndependencies = [\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.3.1\",\n \"rdrand\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"libc\",\n \"rand_chacha 0.1.1\",\n \"rand_core 0.4.2\",\n \"rand_hc\",\n \"rand_isaac\",\n \"rand_jitter\",\n \"rand_os\",\n \"rand_pcg\",\n \"rand_xorshift\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha 0.3.1\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\ndependencies = [\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_isaac\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_jitter\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1166d5c91dc97b88d1decc3285bb0a99ed84b05cfd0bc2341bdf2d43fc41e39b\"\ndependencies = [\n \"libc\",\n \"rand_core 0.4.2\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_os\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071\"\ndependencies = [\n \"cloudabi\",\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.4.2\",\n \"rdrand\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_pcg\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_xorshift\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"ratatui\"\nversion = \"0.30.0-alpha.0\"\ndependencies = [\n \"argh\",\n \"color-eyre\",\n \"criterion\",\n \"crossterm\",\n \"document-features\",\n \"fakeit\",\n \"font8x8\",\n \"futures\",\n \"indoc\",\n \"instability\",\n \"itertools 0.13.0\",\n \"palette\",\n \"pretty_assertions\",\n \"rand 0.8.5\",\n \"rand_chacha 0.3.1\",\n \"ratatui-core\",\n \"ratatui-crossterm\",\n \"ratatui-termion\",\n \"ratatui-termwiz\",\n \"ratatui-widgets\",\n \"rstest\",\n \"serde\",\n \"serde_json\",\n \"strum\",\n \"time\",\n \"tokio\",\n \"tracing\",\n \"tracing-appender\",\n \"tracing-subscriber\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"ratatui-core\"\nversion = \"0.1.0-alpha.0\"\ndependencies = [\n \"anstyle\",\n \"bitflags 2.6.0\",\n \"cassowary\",\n \"compact_str\",\n \"document-features\",\n \"indoc\",\n \"itertools 0.13.0\",\n \"lru\",\n \"palette\",\n \"paste\",\n \"pretty_assertions\",\n \"ratatui\",\n \"rstest\",\n \"serde\",\n \"serde_json\",\n \"strum\",\n \"thiserror 2.0.9\",\n \"unicode-segmentation\",\n \"unicode-truncate\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"ratatui-crossterm\"\nversion = \"0.1.0-alpha.0\"\ndependencies = [\n \"crossterm\",\n \"document-features\",\n \"instability\",\n \"ratatui\",\n \"ratatui-core\",\n \"rstest\",\n]\n\n[[package]]\nname = \"ratatui-termion\"\nversion = \"0.1.0-alpha.0\"\ndependencies = [\n \"document-features\",\n \"instability\",\n \"ratatui-core\",\n \"rstest\",\n \"termion\",\n]\n\n[[package]]\nname = \"ratatui-termwiz\"\nversion = \"0.1.0-alpha.0\"\ndependencies = [\n \"document-features\",\n \"ratatui\",\n \"ratatui-core\",\n \"rstest\",\n \"termwiz\",\n]\n\n[[package]]\nname = \"ratatui-widgets\"\nversion = \"0.3.0-alpha.0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"color-eyre\",\n \"document-features\",\n \"indoc\",\n \"instability\",\n \"itertools 0.13.0\",\n \"line-clipping\",\n \"pretty_assertions\",\n \"ratatui\",\n \"ratatui-core\",\n \"rstest\",\n \"serde\",\n \"strum\",\n \"time\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"rdrand\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"redox_termios\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20145670ba436b55d91fc92d25e71160fbfbdd57831631c8d7d36377a476f1cb\"\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a2c585be59b6b5dd66a9d2084aa1d8bd52fbdb806eafdeffb52791147862035\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"825ea780781b15345a146be27eaefb05085e337e869bff01b4306a4fd4a9ad5a\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn 2.0.91\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rust-fuzzy-search\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a157657054ffe556d8858504af8a672a054a6e0bd9e8ee531059100c0fa11bb2\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver 1.0.24\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5065c3f250cbd332cd894be57c40fa52387247659b14a2d6041d121547903b1b\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2bf47e6ff922db3825eb750c4e2ff784c6ff8fb9e13046ef6a1d1c5401b0b37\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"secrecy\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e891af845473308773346dc847b2c23ee78fe442e0472ac50e22a18a93d3ae5a\"\ndependencies = [\n \"zeroize\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81d3f8c9bfcc3cbb6b0179eb57042d75b1582bdc65c3cb95f3fa999509c03cbc\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1863fd3768cd83c56a7f60faa4dc0d403f1b6df0a38c3c25f44b7894e45370d5\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f301af10236f6df4160f7c3f04eec6dbc70ace82d23326abad5edee88801c6b6\"\ndependencies = [\n \"semver-parser\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"semver-parser\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9900206b54a3527fdc7b8a938bffd94a568bac4f4aa8113b209df75a09c0dec2\"\ndependencies = [\n \"pest\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.134\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_path_to_error\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af99884400da37c88f5e9146b7f1fd0fbcae8f6eec4e9da38b67d05486f814a6\"\ndependencies = [\n \"itoa\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shared_child\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09fa9338aed9a1df411814a5b2252f7cd206c55ae9bf2fa763f8de84603aa60c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-mio\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34db1a06d485c9142248b7a054f034b349b212551f3dfd19c94d45a754a217cd\"\ndependencies = [\n \"libc\",\n \"mio\",\n \"signal-hook\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simple_asn1\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085\"\ndependencies = [\n \"num-bigint\",\n \"num-traits\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"simplerand\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21e69528fe5b77e9b19f5c4de1fcb8692471bb3325c8876ae62773d318351538\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"snafu\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"223891c85e2a29c3fe8fb900c1fae5e69c2e42415e3177752e8718475efa5019\"\ndependencies = [\n \"snafu-derive\",\n]\n\n[[package]]\nname = \"snafu-derive\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03c3c6b7927ffe7ecaa769ee0e3994da3b8cafc8f444578982c83ecb161af917\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d53cbcb5a243bd33b7858b1d7f4aca2153490815872d86d955d6ea29f743c035\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263\"\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"terminfo\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"666cd3a6681775d22b200409aad3b089c5b99fb11ecdd8a204d9d62f8148498f\"\ndependencies = [\n \"dirs\",\n \"fnv\",\n \"nom\",\n \"phf\",\n \"phf_codegen\",\n]\n\n[[package]]\nname = \"termion\"\nversion = \"4.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eaa98560e51a2cf4f0bb884d8b2098a9ea11ecf3b7078e9c68242c74cc923a7\"\ndependencies = [\n \"libc\",\n \"libredox\",\n \"numtoa\",\n \"redox_termios\",\n]\n\n[[package]]\nname = \"termios\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"411c5bf740737c7918b8b1fe232dca4dc9f8e754b8ad5e20966814001ed0ac6b\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"termwiz\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a75313e21da5d4406ea31402035b3b97aa74c04356bdfafa5d1043ab4e551d1\"\ndependencies = [\n \"anyhow\",\n \"base64 0.21.7\",\n \"bitflags 2.6.0\",\n \"fancy-regex\",\n \"filedescriptor\",\n \"finl_unicode\",\n \"fixedbitset\",\n \"hex\",\n \"lazy_static\",\n \"libc\",\n \"log\",\n \"memmem\",\n \"nix 0.26.4\",\n \"num-derive\",\n \"num-traits\",\n \"ordered-float\",\n \"pest\",\n \"pest_derive\",\n \"phf\",\n \"semver 0.11.0\",\n \"sha2\",\n \"signal-hook\",\n \"siphasher\",\n \"tempfile\",\n \"terminfo\",\n \"termios\",\n \"thiserror 1.0.69\",\n \"ucd-trie\",\n \"unicode-segmentation\",\n \"vtparse\",\n \"wezterm-bidi\",\n \"wezterm-blob-leases\",\n \"wezterm-color-types\",\n \"wezterm-dynamic\",\n \"wezterm-input-types\",\n \"winapi\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6d0975eaace0cf0fcadee4e4aaa5da15b5c079146f2cffb67c113be122bf37\"\ndependencies = [\n \"rustls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-stream\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eca58d7bba4a75707817a2c44174253f9236b2d5fbd055602e9d5c07c139a047\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7fcaa8d55a2bdd6b83ace262b016eca0d79ee02818c5c1bcdf0305114081078\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d039ad9159c98b70ecfd540b2573b97f7f52c3e8d9f8ad57a24b916a536975f9\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project-lite\",\n \"sync_wrapper\",\n \"tokio\",\n \"tokio-util\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-http\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"403fa3b783d4b626a8ad51d766ab03cb6d2dbfc46b1c5d4448395e6628dc9697\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"iri-string\",\n \"pin-project-lite\",\n \"tower\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e\"\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-appender\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3566e8ce28cc0a3fe42519fc80e6b4c943cc4c8cef275620eb8dac2d3d4e06cf\"\ndependencies = [\n \"crossbeam-channel\",\n \"thiserror 1.0.69\",\n \"time\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-error\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b1581020d7a273442f5b45074a6a57d5757ad0a47dac0e9f0bd57b81936f3db\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2896d95c02a80c6d6a5d6e953d479f5ddf2dfdb6a244441010e373ac0fb88971\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-truncate\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fbf03860ff438702f3910ca5f28f8dac63c1c11e7efb5012b8b175493606330\"\ndependencies = [\n \"itertools 0.13.0\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc5cf98d8186244414c848017f0e2676b3fcb46807f6668a97dfe67359a3c4b7\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"atomic\",\n \"getrandom\",\n]\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"vtparse\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d9b2acfb050df409c972a37d3b8e08cdea3bddb0c09db9d53137e504cfabed0\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"weather\"\nversion = \"0.0.0\"\ndependencies = [\n \"color-eyre\",\n \"crossterm\",\n \"rand 0.8.5\",\n \"ratatui\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"wezterm-bidi\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c0a6e355560527dd2d1cf7890652f4f09bb3433b6aadade4c9b5ed76de5f3ec\"\ndependencies = [\n \"log\",\n \"wezterm-dynamic\",\n]\n\n[[package]]\nname = \"wezterm-blob-leases\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e5a5e0adf7eed68976410def849a4bdab6f6e9f6163f152de9cb89deea9e60b\"\ndependencies = [\n \"getrandom\",\n \"mac_address\",\n \"once_cell\",\n \"sha2\",\n \"thiserror 1.0.69\",\n \"uuid 1.11.0\",\n]\n\n[[package]]\nname = \"wezterm-color-types\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7de81ef35c9010270d63772bebef2f2d6d1f2d20a983d27505ac850b8c4b4296\"\ndependencies = [\n \"csscolorparser\",\n \"deltae\",\n \"lazy_static\",\n \"wezterm-dynamic\",\n]\n\n[[package]]\nname = \"wezterm-dynamic\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfb128bacfa86734e07681fb6068e34c144698e84ee022d6e009145d1abb77b5\"\ndependencies = [\n \"log\",\n \"ordered-float\",\n \"strsim 0.10.0\",\n \"thiserror 1.0.69\",\n \"wezterm-dynamic-derive\",\n]\n\n[[package]]\nname = \"wezterm-dynamic-derive\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c9f5ef318442d07b3d071f9f43ea40b80992f87faee14bb4d017b6991c307f0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"wezterm-input-types\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7012add459f951456ec9d6c7e6fc340b1ce15d6fc9629f8c42853412c029e57e\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"euclid\",\n \"lazy_static\",\n \"wezterm-dynamic\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"xtask\"\nversion = \"0.0.0\"\ndependencies = [\n \"cargo_metadata\",\n \"clap\",\n \"clap-cargo\",\n \"clap-verbosity-flag\",\n \"color-eyre\",\n \"duct\",\n \"tracing\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.91\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.9677734375,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\"ratatui\", \"ratatui-*\", \"xtask\", \"examples/apps/*\"]\ndefault-members = [\n    \"ratatui\",\n    \"ratatui-core\",\n    \"ratatui-crossterm\",\n    # this is not included as it doesn't compile on windows\n    # \"ratatui-termion\",\n    \"ratatui-termwiz\",\n    \"ratatui-widgets\",\n    \"examples/apps/*\",\n]\n\n[workspace.package]\nauthors = [\"Florian Dehau <work@fdehau.com>\", \"The Ratatui Developers\"]\ndocumentation = \"https://docs.rs/ratatui/latest/ratatui/\"\nrepository = \"https://github.com/ratatui/ratatui\"\nhomepage = \"https://ratatui.rs\"\nkeywords = [\"tui\", \"terminal\", \"dashboard\"]\ncategories = [\"command-line-interface\"]\nreadme = \"README.md\"\nlicense = \"MIT\"\nexclude = [\"assets/*\", \".github\", \"Makefile.toml\", \"CONTRIBUTING.md\", \"*.log\", \"tags\"]\nedition = \"2021\"\nrust-version = \"1.74.0\"\n\n[workspace.dependencies]\nbitflags = \"2.6.0\"\ncolor-eyre = \"0.6.3\"\ncrossterm = \"0.28.1\"\ndocument-features = \"0.2.7\"\nindoc = \"2.0.5\"\ninstability = \"0.3.6\"\nitertools = \"0.13.0\"\npretty_assertions = \"1.4.1\"\nratatui = { path = \"ratatui\", version = \"0.30.0-alpha.0\" }\nratatui-core = { path = \"ratatui-core\", version = \"0.1.0-alpha.0\" }\nratatui-crossterm = { path = \"ratatui-crossterm\", version = \"0.1.0-alpha.0\" }\nratatui-termion = { path = \"ratatui-termion\", version = \"0.1.0-alpha.0\" }\nratatui-termwiz = { path = \"ratatui-termwiz\", version = \"0.1.0-alpha.0\" }\nratatui-widgets = { path = \"ratatui-widgets\", version = \"0.3.0-alpha.0\" }\nrstest = \"0.23.0\"\nserde = { version = \"1.0.217\", features = [\"derive\"] }\nserde_json = \"1.0.134\"\nstrum = { version = \"0.26.3\", features = [\"derive\"] }\ntermwiz = { version = \"0.22.0\" }\nunicode-segmentation = \"1.12.0\"\n# See <https://github.com/ratatui/ratatui/issues/1271> for information about why we pin unicode-width\nunicode-width = \"=0.2.0\"\ntermion = \"4.0.0\"\n\n# Improve benchmark consistency\n[profile.bench]\ncodegen-units = 1\nlto = true\n\n[workspace.lints.rust]\nunsafe_code = \"forbid\"\n\n[workspace.lints.clippy]\npedantic = { level = \"warn\", priority = -1 }\ncast_possible_truncation = \"allow\"\ncast_possible_wrap = \"allow\"\ncast_precision_loss = \"allow\"\ncast_sign_loss = \"allow\"\nmissing_errors_doc = \"allow\"\nmissing_panics_doc = \"allow\"\nmodule_name_repetitions = \"allow\"\nmust_use_candidate = \"allow\"\n\n# we often split up a module into multiple files with the main type in a file named after the\n# module, so we want to allow this pattern\nmodule_inception = \"allow\"\n\n# nursery or restricted\nas_underscore = \"warn\"\nderef_by_slicing = \"warn\"\nelse_if_without_else = \"warn\"\nempty_line_after_doc_comments = \"warn\"\nequatable_if_let = \"warn\"\nfn_to_numeric_cast_any = \"warn\"\nformat_push_string = \"warn\"\nmap_err_ignore = \"warn\"\nmissing_const_for_fn = \"warn\"\nmixed_read_write_in_expression = \"warn\"\nmod_module_files = \"warn\"\nneedless_pass_by_ref_mut = \"warn\"\nneedless_raw_strings = \"warn\"\nor_fun_call = \"warn\"\nredundant_type_annotations = \"warn\"\nrest_pat_in_fully_bound_structs = \"warn\"\nstring_lit_chars_any = \"warn\"\nstring_slice = \"warn\"\nstring_to_string = \"warn\"\nunnecessary_self_imports = \"warn\"\nuse_self = \"warn\"\n"
        },
        {
          "name": "FUNDING.json",
          "type": "blob",
          "size": 0.1044921875,
          "content": "{\n  \"drips\": {\n    \"ethereum\": {\n      \"ownedBy\": \"0x6053C8984f4F214Ad12c4653F28514E1E09213B5\"\n    }\n  }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.10546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016-2022 Florian Dehau\nCopyright (c) 2023-2024 The Ratatui Developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.4140625,
          "content": "# Maintainers\n\nThis file documents current and past maintainers.\n\n- [orhun](https://github.com/orhun)\n- [joshka](https://github.com/joshka)\n- [kdheepak](https://github.com/kdheepak)\n- [Valentin271](https://github.com/Valentin271)\n\n## Past Maintainers\n\n- [fdehau](https://github.com/fdehau)\n- [mindoodoo](https://github.com/mindoodoo)\n- [sayanarijit](https://github.com/sayanarijit)\n- [EdJoPaTo](https://github.com/EdJoPaTo)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2021484375,
          "content": "<details>\n<summary>Table of Contents</summary>\n\n- [Quickstart](#quickstart)\n- [Documentation](#documentation)\n- [Templates](#templates)\n- [Built with Ratatui](#built-with-ratatui)\n- [Alternatives](#alternatives)\n- [Contributing](#contributing)\n- [Acknowledgements](#acknowledgements)\n- [License](#license)\n\n</details>\n\n![Demo](https://github.com/ratatui/ratatui/blob/87ae72dbc756067c97f6400d3e2a58eeb383776e/examples/demo2-destroy.gif?raw=true)\n\n<div align=\"center\">\n\n[![Crate Badge]][Crate] [![Repo Badge]][Repo] [![Docs Badge]][Docs] [![License Badge]][License]  \\\n[![CI Badge]][CI] [![Deps Badge]][Deps] [![Codecov Badge]][Codecov] [![Sponsors Badge]][Sponsors]  \\\n[Ratatui Website] · [Docs] · [Widget Examples] · [App Examples] · [Changelog]  \\\n[Breaking Changes] · [Contributing] · [Report a bug] · [Request a Feature]\n\n</div>\n\n[Ratatui][Ratatui Website] (_ˌræ.təˈtu.i_) is a Rust crate for cooking up terminal user interfaces\n(TUIs). It provides a simple and flexible way to create text-based user interfaces in the terminal,\nwhich can be used for command-line applications, dashboards, and other interactive console programs.\n\n## Quickstart\n\nRatatui has [templates] available to help you get started quickly. You can use the\n[`cargo-generate`] command to create a new project with Ratatui:\n\n```shell\ncargo install --locked cargo-generate\ncargo generate ratatui/templates\n```\n\nSelecting the Hello World template produces the following application:\n\n```rust\nuse color_eyre::Result;\nuse crossterm::event::{self, Event};\nuse ratatui::{DefaultTerminal, Frame};\n\nfn main() -> Result<()> {\n    color_eyre::install()?;\n    let terminal = ratatui::init();\n    let result = run(terminal);\n    ratatui::restore();\n    result\n}\n\nfn run(mut terminal: DefaultTerminal) -> Result<()> {\n    loop {\n        terminal.draw(render)?;\n        if matches!(event::read()?, Event::Key(_)) {\n            break Ok(());\n        }\n    }\n}\n\nfn render(frame: &mut Frame) {\n    frame.render_widget(\"hello world\", frame.area());\n}\n```\n\n## Documentation\n\n- [Docs] - the full API documentation for the library on docs.rs.\n- [Ratatui Website] - explains the library's concepts and provides step-by-step tutorials.\n- [Ratatui Forum] - a place to ask questions and discuss the library.\n- [Widget Examples] - a collection of examples that demonstrate how to use the library.\n- [App Examples] - a collection of more complex examples that demonstrate how to build apps.\n- [Changelog] - generated by [git-cliff] utilizing [Conventional Commits].\n- [Breaking Changes] - a list of breaking changes in the library.\n\nYou can also watch the [EuroRust 2024 talk] to learn about common concepts in Ratatui and what's\npossible to build with it.\n\n## Templates\n\nIf you're looking to get started quickly, you can use one of the available templates from the\n[templates] repository using [`cargo-generate`]:\n\n```shell\ncargo generate ratatui/templates\n```\n\n## Built with Ratatui\n\n[![Awesome](https://awesome.re/badge-flat2.svg)][awesome-ratatui]\n\nCheck out the [showcase] section of the website, or the [awesome-ratatui] repository for a curated\nlist of awesome apps and libraries built with Ratatui!\n\n## Alternatives\n\n- [Cursive](https://crates.io/crates/cursive) - a ncurses-based TUI library.\n- [iocraft](https://crates.io/crates/iocraft) - a declarative TUI library.\n\n## Contributing\n\n[![Discord Badge]][Discord Server] [![Matrix Badge]][Matrix] [![Forum Badge]][Ratatui Forum]\n\nFeel free to join our [Discord server](https://discord.gg/pMCEU9hNEj) for discussions and questions!\nThere is also a [Matrix](https://matrix.org/) bridge available at\n[#ratatui:matrix.org](https://matrix.to/#/#ratatui:matrix.org). We have also recently launched the\n[Ratatui Forum].\n\nWe rely on GitHub for [bugs][Report a bug] and [feature requests][Request a Feature].\n\nPlease make sure you read the [contributing](./CONTRIBUTING.md) guidelines before [creating a pull\nrequest][Create a Pull Request].\n\n## Acknowledgements\n\nRatatui was forked from the [tui-rs] crate in 2023 in order to continue its development. None of\nthis could be possible without [Florian Dehau] who originally created [tui-rs] which inspired many\nRust TUIs.\n\nSpecial thanks to [Pavel Fomchenkov] for his work in designing an awesome logo for the Ratatui\nproject and organization.\n\n## License\n\nThis project is licensed under the [MIT License][License].\n\n[Repo]: https://github.com/ratatui/ratatui\n[Ratatui Website]: https://ratatui.rs/\n[Ratatui Forum]: https://forum.ratatui.rs\n[Docs]: https://docs.rs/ratatui\n[Widget Examples]: https://github.com/ratatui/ratatui/tree/main/ratatui-widgets/examples\n[App Examples]: https://github.com/ratatui/ratatui/tree/main/examples\n[Changelog]: https://github.com/ratatui/ratatui/blob/main/CHANGELOG.md\n[git-cliff]: https://git-cliff.org\n[Conventional Commits]: https://www.conventionalcommits.org\n[Breaking Changes]: https://github.com/ratatui/ratatui/blob/main/BREAKING-CHANGES.md\n[EuroRust 2024 talk]: https://www.youtube.com/watch?v=hWG51Mc1DlM\n[Report a bug]: https://github.com/ratatui/ratatui/issues/new?labels=bug&projects=&template=bug_report.md\n[Request a Feature]: https://github.com/ratatui/ratatui/issues/new?labels=enhancement&projects=&template=feature_request.md\n[Create a Pull Request]: https://github.com/ratatui/ratatui/compare\n[Contributing]: https://github.com/ratatui/ratatui/blob/main/CONTRIBUTING.md\n[Crate]: https://crates.io/crates/ratatui\n[tui-rs]: https://crates.io/crates/tui\n[Sponsors]: https://github.com/sponsors/ratatui\n[Crate Badge]: https://img.shields.io/crates/v/ratatui?logo=rust&style=flat-square&color=E05D44\n[Repo Badge]: https://img.shields.io/badge/repo-ratatui/ratatui-1370D3?style=flat-square&logo=github\n[License Badge]: https://img.shields.io/crates/l/ratatui?style=flat-square&color=1370D3\n[CI Badge]: https://img.shields.io/github/actions/workflow/status/ratatui/ratatui/ci.yml?style=flat-square&logo=github\n[CI]: https://github.com/ratatui/ratatui/actions/workflows/ci.yml\n[Codecov Badge]: https://img.shields.io/codecov/c/github/ratatui/ratatui?logo=codecov&style=flat-square&token=BAQ8SOKEST&color=C43AC3\n[Codecov]: https://app.codecov.io/gh/ratatui/ratatui\n[Deps Badge]: https://deps.rs/repo/github/ratatui/ratatui/status.svg?path=ratatui&style=flat-square\n[Deps]: https://deps.rs/repo/github/ratatui/ratatui?path=ratatui\n[Discord Badge]: https://img.shields.io/discord/1070692720437383208?label=discord&logo=discord&style=flat-square&color=1370D3&logoColor=1370D3\n[Discord Server]: https://discord.gg/pMCEU9hNEj\n[Docs Badge]: https://img.shields.io/badge/docs-ratatui-1370D3?style=flat-square&logo=rust\n[Matrix Badge]: https://img.shields.io/matrix/ratatui-general%3Amatrix.org?style=flat-square&logo=matrix&label=Matrix&color=C43AC3\n[Matrix]: https://matrix.to/#/#ratatui:matrix.org\n[Forum Badge]: https://img.shields.io/discourse/likes?server=https%3A%2F%2Fforum.ratatui.rs&style=flat-square&logo=discourse&label=forum&color=C43AC3\n[Sponsors Badge]: https://img.shields.io/github/sponsors/ratatui?logo=github&style=flat-square&color=1370D3\n[templates]: https://github.com/ratatui/templates/\n[showcase]: https://ratatui.rs/showcase/\n[awesome-ratatui]: https://github.com/ratatui/awesome-ratatui\n[Pavel Fomchenkov]: https://github.com/nawok\n[Florian Dehau]: https://github.com/fdehau\n[`cargo-generate`]: https://crates.io/crates/cargo-generate\n[License]: ./LICENSE\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 2.369140625,
          "content": "# Creating a Release\n\nOur release strategy is:\n\n> Release major versions with detailed summaries when necessary, while releasing minor versions\n> weekly or as needed without extensive announcements.\n>\n> Versioning scheme being `0.x.y`, where `x` is the major version and `y` is the minor version.\n\n[crates.io](https://crates.io/crates/ratatui) releases are automated via [GitHub\nactions](.github/workflows/cd.yml) and triggered by pushing a tag.\n\n1. Record a new demo gif if necessary. The preferred tool for this is\n[vhs](https://github.com/charmbracelet/vhs) (installation instructions in README).\n\n   ```shell\n   cargo build --example demo2\n   vhs examples/demo2.tape\n   ```\n\n1. Switch branches to the images branch and copy demo2.gif to examples/, commit, and push.\n1. Grab the permalink from <https://github.com/ratatui/ratatui/blob/images/examples/demo2.gif> and\n   append `?raw=true` to redirect to the actual image url. Then update the link in the main README.\n   Avoid adding the gif to the git repo as binary files tend to bloat repositories.\n\n1. Bump the version in [Cargo.toml](Cargo.toml).\n1. Ensure [CHANGELOG.md](CHANGELOG.md) is updated. [git-cliff](https://github.com/orhun/git-cliff)\n   can be used for generating the entries.\n1. Ensure that any breaking changes are documented in [BREAKING-CHANGES.md](./BREAKING-CHANGES.md)\n1. Commit and push the changes.\n1. Create a new tag: `git tag -a v[0.x.y]`\n1. Push the tag: `git push --tags`\n1. Wait for [Continuous Deployment](https://github.com/ratatui/ratatui/actions) workflow to\n   finish.\n\n## Alpha Releases\n\nAlpha releases are automatically released every Saturday via [cd.yml](./.github/workflows/cd.yml)\nand can be manually be created when necessary by triggering the [Continuous\nDeployment](https://github.com/ratatui/ratatui/actions/workflows/cd.yml) workflow.\n\nWe automatically release an alpha release with a patch level bump + alpha.num weekly (and when we\nneed to manually). E.g. the last release was 0.22.0, and the most recent alpha release is\n0.22.1-alpha.1.\n\nThese releases will have whatever happened to be in main at the time of release, so they're useful\nfor apps that need to get releases from crates.io, but may contain more bugs and be generally less\ntested than normal releases.\n\nSee [#147](https://github.com/ratatui/ratatui/issues/147) and\n[#359](https://github.com/ratatui/ratatui/pull/359) for more info on the alpha release process.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.236328125,
          "content": "# Security Policy\n\n## Supported Versions\n\nWe only support the latest version of this crate.\n\n## Reporting a Vulnerability\n\nTo report secuirity vulnerability, please use the form at <https://github.com/ratatui/ratatui/security/advisories/new>\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bacon.toml",
          "type": "blob",
          "size": 2.6181640625,
          "content": "# This is a configuration file for the bacon tool\n#\n# Bacon repository: https://github.com/Canop/bacon\n# Complete help on configuration: https://dystroy.org/bacon/config/\n# You can also check bacon's own bacon.toml file\n#  as an example: https://github.com/Canop/bacon/blob/main/bacon.toml\n\ndefault_job = \"check\"\n\n[jobs.check]\ncommand = [\"cargo\", \"check\", \"--all-features\"]\nneed_stdout = false\n\n[jobs.check-all]\ncommand = [\"cargo\", \"check\", \"--all-targets\", \"--all-features\"]\nneed_stdout = false\n\n[jobs.check-crossterm]\ncommand = [\"cargo\", \"check\", \"--all-targets\", \"--no-default-features\", \"--features\", \"crossterm\"]\nneed_stdout = false\n\n[jobs.check-termion]\ncommand = [\"cargo\", \"check\", \"--all-targets\", \"--no-default-features\", \"--features\", \"termion\"]\nneed_stdout = false\n\n[jobs.check-termwiz]\ncommand = [\"cargo\", \"check\", \"--all-targets\", \"--no-default-features\", \"--features\", \"termwiz\"]\nneed_stdout = false\n\n[jobs.clippy-all]\ncommand = [\"cargo\", \"xtask\", \"lint-clippy\"]\nneed_stdout = false\n\n[jobs.test]\ncommand = [\"cargo\", \"test\", \"--all-features\"]\nneed_stdout = true\n\n[jobs.test-unit]\ncommand = [\"cargo\", \"test\", \"--lib\", \"--all-features\"]\nneed_stdout = true\n\n[jobs.doc]\ncommand = [\n    \"cargo\",\n    \"+nightly\",\n    \"doc\",\n    \"-Zunstable-options\",\n    \"-Zrustdoc-scrape-examples\",\n    \"--all-features\",\n    \"--no-deps\",\n]\nenv.RUSTDOCFLAGS = \"--cfg docsrs\"\nneed_stdout = false\n\n# If the doc compiles, then it opens in your browser and bacon switches\n# to the previous job\n[jobs.doc-open]\ncommand = [\n    \"cargo\",\n    \"+nightly\",\n    \"doc\",\n    \"-Zunstable-options\",\n    \"-Zrustdoc-scrape-examples\",\n    \"--all-features\",\n    \"--no-deps\",\n    \"--open\",\n]\nenv.RUSTDOCFLAGS = \"--cfg docsrs\"\nneed_stdout = false\non_success = \"job:doc\" # so that we don't open the browser at each change\n\n[jobs.coverage]\ncommand = [\"cargo\", \"llvm-cov\", \"--lcov\", \"--output-path\", \"target/lcov.info\", \"--all-features\"]\n\n[jobs.coverage-unit-tests-only]\ncommand = [\n    \"cargo\",\n    \"llvm-cov\",\n    \"--lcov\",\n    \"--output-path\",\n    \"target/lcov.info\",\n    \"--lib\",\n    \"--all-features\",\n]\n\n[jobs.hack]\ncommand = [\n    \"cargo\",\n    \"hack\",\n    \"test\",\n    \"--lib\",\n    \"--each-feature\",\n    # \"--all-targets\",\n    \"--workspace\",\n]\n\n# You may define here keybindings that would be specific to\n# a project, for example a shortcut to launch a specific job.\n# Shortcuts to internal functions (scrolling, toggling, etc.)\n# should go in your personal global prefs.toml file instead.\n[keybindings]\nctrl-h = \"job:hack\"\nctrl-c = \"job:check-crossterm\"\nctrl-t = \"job:check-termion\"\nctrl-w = \"job:check-termwiz\"\nv = \"job:coverage\"\nctrl-v = \"job:coverage-unit-tests-only\"\nu = \"job:test-unit\"\nn = \"job:nextest\"\n"
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 5.4482421875,
          "content": "# git-cliff ~ configuration file\n# https://git-cliff.org/docs/configuration\n\n[remote.github]\nowner = \"ratatui\"\nrepo = \"ratatui\"\n\n[changelog]\n# changelog header\nheader = \"\"\"\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n<!-- ignore lint rules that are often triggered by content generated from commits / git-cliff -->\n<!-- markdownlint-disable line-length no-bare-urls ul-style emphasis-style -->\n\"\"\"\n# template for the changelog body\n# https://keats.github.io/tera/docs/#introduction\n# note that the - before / after the % controls whether whitespace is rendered between each line.\n# Getting this right so that the markdown renders with the correct number of lines between headings\n# code fences and list items is pretty finicky. Note also that the 4 backticks in the commit macro\n# is intentional as this escapes any backticks in the commit body.\nbody = \"\"\"\n{%- if not version %}\n## [unreleased]\n{% else -%}\n## [{{ version }}](https://github.com/ratatui/ratatui/releases/tag/{{ version }}) - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n{% endif -%}\n\n{% macro commit(commit) -%}\n- [{{ commit.id | truncate(length=7, end=\"\") }}]({{ \"https://github.com/ratatui/ratatui/commit/\" ~ commit.id }}) \\\n  *({{commit.scope | default(value = \"uncategorized\") | lower }})* {{ commit.message | upper_first | trim }}\\\n  {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif -%}\\\n  {% if commit.remote.pr_number %} in [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}){%- endif %}\\\n{%- if commit.breaking %} [**breaking**]{% endif %}\n{% endmacro -%}\n\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n### {{ group | striptags | trim | upper_first }}\n{% for commit in commits | filter(attribute=\"scope\") | sort(attribute=\"scope\") %}\n{{ self::commit(commit=commit) }}\n{%- endfor -%}\n{% for commit in commits %}\n{%- if not commit.scope %}\n{{ self::commit(commit=commit) }}\n{%- endif -%}\n{%- endfor -%}\n{%- endfor %}\n\n{% if github.contributors | filter(attribute=\"is_first_time\", value=true) | length != 0 %}\n### New Contributors\n{%- endif %}\\\n{% for contributor in github.contributors | filter(attribute=\"is_first_time\", value=true) %}\n* @{{ contributor.username }} made their first contribution\n{%- if contributor.pr_number %} in \\\n[#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \\\n{%- endif %}\n{%- endfor -%}\n\n{% if version %}\n{% if previous.version %}\n**Full Changelog**: {{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }}\n{% endif %}\n{% else -%}\n  {% raw %}\\n{% endraw %}\n{% endif %}\n\n{%- macro remote_url() -%}\nhttps://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\\\n{% endmacro %}\n\"\"\"\n\n\n# remove the leading and trailing whitespace from the template\ntrim = false\n# changelog footer\nfooter = \"\"\"\n<!-- generated by git-cliff -->\n\"\"\"\npostprocessors = [\n  { pattern = '<!-- Please read CONTRIBUTING.md before submitting any pull request. -->', replace = \"\" },\n  { pattern = '>---+\\n', replace = '' },\n  { pattern = ' +\\n', replace = \"\\n\" },\n]\n\n[git]\n# parse the commits based on https://www.conventionalcommits.org\nconventional_commits = true\n# filter out the commits that are not conventional\nfilter_unconventional = true\n# process each line of a commit as an individual commit\nsplit_commits = false\n# regex for preprocessing the commit messages\ncommit_preprocessors = [\n  { pattern = '\\((\\w+\\s)?#([0-9]+)\\)', replace = \"\" },\n  { pattern = '(better safe shared layout cache)', replace = \"perf(layout): ${1}\" },\n  { pattern = '(Clarify README.md)', replace = \"docs(readme): ${1}\" },\n  { pattern = '(Update README.md)', replace = \"docs(readme): ${1}\" },\n  { pattern = '(fix typos|Fix typos)', replace = \"fix: ${1}\" },\n]\n# regex for parsing and grouping commits\ncommit_parsers = [\n  { message = \"^feat\", group = \"<!-- 00 -->Features\" },\n  { message = \"^[fF]ix\", group = \"<!-- 01 -->Bug Fixes\" },\n  { message = \"^refactor\", group = \"<!-- 02 -->Refactor\" },\n  { message = \"^doc\", group = \"<!-- 03 -->Documentation\" },\n  { message = \"^perf\", group = \"<!-- 04 -->Performance\" },\n  { message = \"^style\", group = \"<!-- 05 -->Styling\" },\n  { message = \"^test\", group = \"<!-- 06 -->Testing\" },\n  { message = \"^chore\\\\(release\\\\): prepare for\", skip = true },\n  { message = \"^chore\\\\(pr\\\\)\", skip = true },\n  { message = \"^chore\\\\(pull\\\\)\", skip = true },\n  { message = \"^chore\\\\(deps\\\\)\", skip = true },\n  { message = \"^chore\\\\(changelog\\\\)\", skip = true },\n  { message = \"^[cC]hore\", group = \"<!-- 07 -->Miscellaneous Tasks\" },\n  { body = \".*security\", group = \"<!-- 08 -->Security\" },\n  { message = \"^build\", group = \"<!-- 09 -->Build\" },\n  { message = \"^ci\", group = \"<!-- 10 -->Continuous Integration\" },\n  { message = \"^revert\", group = \"<!-- 11 -->Reverted Commits\" },\n  # handle some old commits styles from pre 0.4\n  { message = \"^(Buffer|buffer|Frame|frame|Gauge|gauge|Paragraph|paragraph):\", group = \"<!-- 07 -->Miscellaneous Tasks\" },\n  { message = \"^\\\\[\", group = \"<!-- 07 -->Miscellaneous Tasks\" },\n]\n\n# protect breaking changes from being skipped due to matching a skipping commit_parser\nprotect_breaking_commits = false\n# filter out the commits that are not matched by commit parsers\nfilter_commits = false\n# glob pattern for matching git tags\ntag_pattern = \"v[0-9]*\"\n# regex for skipping tags\nskip_tags = \"v0.1.0-rc.1\"\n# regex for ignoring tags\nignore_tags = \"alpha\"\n# sort the tags topologically\ntopo_order = false\n# sort the commits inside sections by oldest/newest order\nsort_commits = \"newest\"\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.03515625,
          "content": "avoid-breaking-exported-api = false\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.4755859375,
          "content": "coverage: # https://docs.codecov.com/docs/codecovyml-reference#coverage\n  precision: 1 # e.g. 89.1%\n  round: down\n  range: 85..100 # https://docs.codecov.com/docs/coverage-configuration#section-range\n  status: # https://docs.codecov.com/docs/commit-status\n    project:\n      default:\n        threshold: 1% # Avoid false negatives\nignore:\n  - \"examples\"\n  - \"benches\"\ncomment: # https://docs.codecov.com/docs/pull-request-comments\n  # make the comments less noisy\n  require_changes: true\n"
        },
        {
          "name": "committed.toml",
          "type": "blob",
          "size": 0.6826171875,
          "content": "# configuration for https://github.com/crate-ci/committed\n\n# https://www.conventionalcommits.org\nstyle = \"conventional\"\n# disallow merge commits\nmerge_commit = false\n# subject is not required to be capitalized\nsubject_capitalized = false\n# subject should start with an imperative verb\nimperative_subject = true\n# subject should not end with a punctuation\nsubject_not_punctuated = true\n# disable line length\nline_length = 0\n# disable subject length\nsubject_length = 0\n# default allowed_types [ \"chore\", \"docs\", \"feat\", \"fix\", \"perf\", \"refactor\", \"style\", \"test\" ]\nallowed_types = [\n  \"build\",\n  \"chore\",\n  \"ci\",\n  \"docs\",\n  \"feat\",\n  \"fix\",\n  \"perf\",\n  \"refactor\",\n  \"revert\",\n  \"style\",\n  \"test\",\n]\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 1.0078125,
          "content": "# configuration for https://github.com/EmbarkStudios/cargo-deny\n\n[licenses]\nversion = 2\nconfidence-threshold = 0.8\nallow = [\n    \"Apache-2.0\",\n    \"BSD-2-Clause\",\n    \"BSD-3-Clause\",\n    \"ISC\",\n    \"MIT\",\n    \"OpenSSL\",\n    \"Unicode-3.0\",\n    \"Unicode-DFS-2016\",\n    \"WTFPL\",\n    \"Zlib\",\n]\n\n[advisories]\nversion = 2\n\n[bans]\nmultiple-versions = \"allow\"\n\n[sources]\nunknown-registry = \"deny\"\nunknown-git = \"warn\"\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n\n[[licenses.clarify]]\ncrate = \"ring\"\n# SPDX considers OpenSSL to encompass both the OpenSSL and SSLeay licenses\n# https://spdx.org/licenses/OpenSSL.html\n# ISC - Both BoringSSL and ring use this for their new files\n# MIT - \"Files in third_party/ have their own licenses, as described therein. The MIT\n# license, for third_party/fiat, which, unlike other third_party directories, is\n# compiled into non-test libraries, is included below.\"\n# OpenSSL - Obviously\nexpression = \"ISC AND MIT AND OpenSSL\"\nlicense-files = [{ path = \"LICENSE\", hash = 0xbd0eed23 }]\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui-crossterm",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui-termion",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui-termwiz",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui-widgets",
          "type": "tree",
          "content": null
        },
        {
          "name": "ratatui",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[toolchain]\nchannel = \"stable\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.2783203125,
          "content": "# configuration for https://rust-lang.github.io/rustfmt/\ncomment_width = 100\nformat_code_in_doc_comments = true\nformat_macro_matchers=true\ngroup_imports = \"StdExternalCrate\"\nimports_granularity = \"Crate\"\nnormalize_doc_attributes=true\nuse_field_init_shorthand=true\nwrap_comments = true\n"
        },
        {
          "name": "typos.toml",
          "type": "blob",
          "size": 0.2177734375,
          "content": "# configuration for https://github.com/crate-ci/typos\n\n[default.extend-words]\nratatui = \"ratatui\"\n\n[type.md]\nextend-ignore-re = [\n  \"\\\\[[[:xdigit:]]{7}\\\\]\\\\(https://github.com/ratatui/ratatui/commit/[[:xdigit:]]{40}\\\\)\",\n]\n"
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}