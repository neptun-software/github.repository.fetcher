{
  "metadata": {
    "timestamp": 1736709419657,
    "page": 23,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RustPython/RustPython",
      "stars": 19484,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cspell.json",
          "type": "blob",
          "size": 4.9609375,
          "content": "// See: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell\n{\n  \"version\": \"0.2\",\n  // language - current active spelling language\n  \"language\": \"en\",\n  // dictionaries - list of the names of the dictionaries to use\n  \"dictionaries\": [\n    \"en_US\",\n    \"softwareTerms\",\n    \"c\",\n    \"cpp\",\n    \"python\",\n    \"python-custom\",\n    \"rust\",\n    \"unix\",\n    \"posix\",\n    \"winapi\"\n  ],\n  // dictionaryDefinitions - this list defines any custom dictionaries to use\n  \"dictionaryDefinitions\": [],\n  \"ignorePaths\": [\n    \"**/__pycache__/**\",\n    \"Lib/**\"\n  ],\n  // words - list of words to be always considered correct\n  \"words\": [\n    // Rust\n    \"ahash\",\n    \"bidi\",\n    \"biguint\",\n    \"bindgen\",\n    \"bitflags\",\n    \"bstr\",\n    \"byteorder\",\n    \"chrono\",\n    \"consts\",\n    \"cstring\",\n    \"flate2\",\n    \"fract\",\n    \"hasher\",\n    \"idents\",\n    \"indexmap\",\n    \"insta\",\n    \"keccak\",\n    \"lalrpop\",\n    \"libc\",\n    \"libz\",\n    \"longlong\",\n    \"Manually\",\n    \"maplit\",\n    \"memmap\",\n    \"metas\",\n    \"modpow\",\n    \"nanos\",\n    \"objclass\",\n    \"peekable\",\n    \"powc\",\n    \"powf\",\n    \"prepended\",\n    \"punct\",\n    \"replacen\",\n    \"rsplitn\",\n    \"rustc\",\n    \"rustfmt\",\n    \"seekfrom\",\n    \"splitn\",\n    \"subsec\",\n    \"timsort\",\n    \"trai\",\n    \"ulonglong\",\n    \"unic\",\n    \"unistd\",\n    \"winapi\",\n    \"winsock\",\n    // Python\n    \"abstractmethods\",\n    \"aiter\",\n    \"anext\",\n    \"arrayiterator\",\n    \"arraytype\",\n    \"asend\",\n    \"athrow\",\n    \"basicsize\",\n    \"cformat\",\n    \"classcell\",\n    \"closesocket\",\n    \"codepoint\",\n    \"codepoints\",\n    \"cpython\",\n    \"decompressor\",\n    \"defaultaction\",\n    \"descr\",\n    \"dictcomp\",\n    \"dictitems\",\n    \"dictkeys\",\n    \"dictview\",\n    \"docstring\",\n    \"docstrings\",\n    \"dunder\",\n    \"eventmask\",\n    \"fdel\",\n    \"fget\",\n    \"fileencoding\",\n    \"fillchar\",\n    \"finallyhandler\",\n    \"frombytes\",\n    \"fromhex\",\n    \"fromunicode\",\n    \"fset\",\n    \"fspath\",\n    \"fstring\",\n    \"fstrings\",\n    \"genexpr\",\n    \"getattro\",\n    \"getformat\",\n    \"getnewargs\",\n    \"getweakrefcount\",\n    \"getweakrefs\",\n    \"hostnames\",\n    \"idiv\",\n    \"impls\",\n    \"infj\",\n    \"instancecheck\",\n    \"instanceof\",\n    \"isabstractmethod\",\n    \"itemiterator\",\n    \"itemsize\",\n    \"iternext\",\n    \"keyiterator\",\n    \"kwarg\",\n    \"kwargs\",\n    \"linearization\",\n    \"linearize\",\n    \"listcomp\",\n    \"mappingproxy\",\n    \"maxsplit\",\n    \"memoryview\",\n    \"memoryviewiterator\",\n    \"metaclass\",\n    \"metaclasses\",\n    \"metatype\",\n    \"mro\",\n    \"mros\",\n    \"nanj\",\n    \"ndigits\",\n    \"ndim\",\n    \"nonbytes\",\n    \"origname\",\n    \"posixsubprocess\",\n    \"pyexpat\",\n    \"PYTHONDEBUG\",\n    \"PYTHONHOME\",\n    \"PYTHONINSPECT\",\n    \"PYTHONOPTIMIZE\",\n    \"PYTHONPATH\",\n    \"PYTHONPATH\",\n    \"PYTHONVERBOSE\",\n    \"PYTHONWARNINGS\",\n    \"qualname\",\n    \"radd\",\n    \"rdiv\",\n    \"rdivmod\",\n    \"reconstructor\",\n    \"reversevalueiterator\",\n    \"rfloordiv\",\n    \"rlshift\",\n    \"rmod\",\n    \"rpow\",\n    \"rrshift\",\n    \"rsub\",\n    \"rtruediv\",\n    \"scproxy\",\n    \"setattro\",\n    \"setcomp\",\n    \"showwarnmsg\",\n    \"warnmsg\",\n    \"stacklevel\",\n    \"subclasscheck\",\n    \"subclasshook\",\n    \"unionable\",\n    \"unraisablehook\",\n    \"valueiterator\",\n    \"vararg\",\n    \"varargs\",\n    \"varnames\",\n    \"warningregistry\",\n    \"warnopts\",\n    \"weakproxy\",\n    \"xopts\",\n    // RustPython\n    \"baseclass\",\n    \"Bytecode\",\n    \"cfgs\",\n    \"codegen\",\n    \"dedentations\",\n    \"dedents\",\n    \"deduped\",\n    \"downcasted\",\n    \"dumpable\",\n    \"GetSet\",\n    \"internable\",\n    \"makeunicodedata\",\n    \"miri\",\n    \"notrace\",\n    \"pyarg\",\n    \"pyarg\",\n    \"pyargs\",\n    \"PyAttr\",\n    \"pyc\",\n    \"PyClass\",\n    \"PyClassMethod\",\n    \"PyException\",\n    \"PyFunction\",\n    \"pygetset\",\n    \"pyimpl\",\n    \"pymember\",\n    \"PyMethod\",\n    \"PyModule\",\n    \"pyname\",\n    \"pyobj\",\n    \"PyObject\",\n    \"pypayload\",\n    \"PyProperty\",\n    \"pyref\",\n    \"PyResult\",\n    \"pyslot\",\n    \"PyStaticMethod\",\n    \"pystr\",\n    \"pystruct\",\n    \"pystructseq\",\n    \"pytrace\",\n    \"reducelib\",\n    \"richcompare\",\n    \"RustPython\",\n    \"struc\",\n    \"tracebacks\",\n    \"typealiases\",\n    \"Unconstructible\",\n    \"unhashable\",\n    \"uninit\",\n    \"unraisable\",\n    \"wasi\",\n    \"zelf\",\n    // cpython\n    \"argtypes\",\n    \"asdl\",\n    \"asname\",\n    \"augassign\",\n    \"badsyntax\",\n    \"basetype\",\n    \"boolop\",\n    \"bxor\",\n    \"cellarg\",\n    \"cellvar\",\n    \"cellvars\",\n    \"cmpop\",\n    \"dictoffset\",\n    \"elts\",\n    \"excepthandler\",\n    \"finalbody\",\n    \"freevar\",\n    \"freevars\",\n    \"fromlist\",\n    \"heaptype\",\n    \"IMMUTABLETYPE\",\n    \"kwonlyarg\",\n    \"kwonlyargs\",\n    \"linearise\",\n    \"maxdepth\",\n    \"mult\",\n    \"nkwargs\",\n    \"orelse\",\n    \"patma\",\n    \"posonlyarg\",\n    \"posonlyargs\",\n    \"prec\",\n    \"stackdepth\",\n    \"unaryop\",\n    \"unparse\",\n    \"unparser\",\n    \"VARKEYWORDS\",\n    \"varkwarg\",\n    \"wbits\",\n    \"withitem\",\n    \"withs\"\n  ],\n  // flagWords - list of words to be always considered incorrect\n  \"flagWords\": [\n  ],\n  \"ignoreRegExpList\": [\n  ],\n  // languageSettings - allow for per programming language configuration settings.\n  \"languageSettings\": [\n    {\n      \"languageId\": \"python\",\n      \"locale\": \"en\"\n    }\n  ]\n}\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2392578125,
          "content": "**/target/\n**/*.rs.bk\n**/*.bytecode\n**/__pycache__/*\n**/*.pytest_cache\n.*sw*\n.repl_history.txt\n.vscode\nwasm-pack.log\n.idea/\nextra_tests/snippets/resources\n\nflame-graph.html\nflame.txt\nflamescope.json\n\n**/node_modules/\nwasm/**/dist/\nwasm/lib/pkg/\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.05078125,
          "content": "[flake8]\n# black's line length\nmax-line-length = 88\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2578125,
          "content": "Lib/**      linguist-vendored\nCargo.lock  linguist-generated -merge\n*.snap      linguist-generated -merge\nvm/src/stdlib/ast/gen.rs    linguist-generated -merge\nLib/*.py    text working-tree-encoding=UTF-8 eol=LF\n**/*.rs     text working-tree-encoding=UTF-8 eol=LF\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.283203125,
          "content": "/target\n/*/target\n**/*.rs.bk\n**/*.bytecode\n__pycache__\n**/*.pytest_cache\n.*sw*\n.repl_history.txt\n.vscode\nwasm-pack.log\n.idea/\n.envrc\n.python-version\n\nflame-graph.html\nflame.txt\nflamescope.json\n/wapm.lock\n/wapm_packages\n/.cargo/config\n\nextra_tests/snippets/resources\nextra_tests/not_impl.py\n"
        },
        {
          "name": ".gitpod.Dockerfile",
          "type": "blob",
          "size": 0.5791015625,
          "content": "FROM gitpod/workspace-full\n\nUSER gitpod\n\n# Update Rust to the latest version\nRUN rm -rf ~/.rustup && \\\n    export PATH=$HOME/.cargo/bin:$PATH && \\\n    rustup update stable && \\\n    rustup component add rls && \\\n    # Set up wasm-pack and wasm32-unknown-unknown for rustpython_wasm\n    curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh && \\\n    rustup target add wasm32-unknown-unknown\n\nRUN sudo apt-get -q update \\\n    && sudo apt-get install -yq \\\n        libpython3.6 \\\n        rust-lldb \\\n    && sudo rm -rf /var/lib/apt/lists/*\nENV RUST_LLDB=/usr/bin/lldb-8\n\nUSER root\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.1103515625,
          "content": "image:\n  file: .gitpod.Dockerfile\n\nvscode:\n  extensions:\n    - vadimcn.vscode-lldb@1.5.3:vTh/rWhvJ5nQpeAVsD20QA=="
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.30078125,
          "content": "#\n# This list is used by git-shortlog to aggregate contributions.  It is\n# necessary when either the author's full name is not always written\n# the same way, and/or the same author contributes from different\n# email addresses.\n#\n\nNoa <coolreader18@gmail.com> <33094578+coolreader18@users.noreply.github.com>\n"
        },
        {
          "name": ".theia",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 81.3935546875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"Inflector\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe438c63458706e03479442743baae6c88256498e6431708f6dfc520a26515d3\"\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"adler32\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aae1277d39aeec15cb388266ecc24b11c80469deae6067e17a1a7aa9e5c1f234\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86fdf8605db99b54d3cd748a44c6d04df638eb5dafb219b135d0149bd0db01f6\"\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"ascii\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d92bec98840b8f03a5ff5413de5293bfcd8bf96467cf5452609f939ec6f5de16\"\n\n[[package]]\nname = \"atomic\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d818003e740b63afc82337e3160717f4f63078720a810b7b903e70a5d1d2994\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blake2\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40723b8fb387abc38f4f4a37c09073622e41dd12327033091ef8950659e6dc0c\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94bbb0ad554ad961ddc5da507a12a29b14e4ae5bda06b19f575a3e6079d2e2ae\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bzip2\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdb116a6ef3f6c3698828873ad02c3014b3c85cadb88496095628e3ef1e347f8\"\ndependencies = [\n \"bzip2-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"bzip2-sys\"\nversion = \"0.1.11+1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"736a955f3fa7875102d57c82b8cac37ec45224a07fd32d58f9f7a186b6cd4cdc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"caseless\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b6fd507454086c8edfd769ca6ada439193cdb209c7681712ef6275cccbfe5d8\"\ndependencies = [\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07b1695e2c7e8fc85310cde85aeaab7e3097f593c91d209d3f9df76c928100f0\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags 1.3.2\",\n \"strsim\",\n \"textwrap 0.11.0\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"clipboard-win\"\nversion = \"5.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15efe7a882b08f34e38556b14f2fb3daa98769d06c7f0c1b076dfd0d983bc892\"\ndependencies = [\n \"error-code\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static 1.5.0\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"console_error_panic_hook\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06aeb73f470f66dcdbf7223caeebb85984942f22f1adb2a088cf9668146bbbc\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cranelift\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea1b0c164043c16a8ece6813eef609ac2262a32a0bb0f5ed6eecf5d7bfb79ba8\"\ndependencies = [\n \"cranelift-codegen\",\n \"cranelift-frontend\",\n]\n\n[[package]]\nname = \"cranelift-bforest\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52056f6d0584484b57fa6c1a65c1fcb15f3780d8b6a758426d9e3084169b2ddd\"\ndependencies = [\n \"cranelift-entity\",\n]\n\n[[package]]\nname = \"cranelift-codegen\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18fed94c8770dc25d01154c3ffa64ed0b3ba9d583736f305fed7beebe5d9cf74\"\ndependencies = [\n \"arrayvec\",\n \"bumpalo\",\n \"cranelift-bforest\",\n \"cranelift-codegen-meta\",\n \"cranelift-codegen-shared\",\n \"cranelift-entity\",\n \"cranelift-isle\",\n \"log\",\n \"regalloc2\",\n \"smallvec\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"cranelift-codegen-meta\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c451b81faf237d11c7e4f3165eeb6bac61112762c5cfe7b4c0fb7241474358f\"\ndependencies = [\n \"cranelift-codegen-shared\",\n]\n\n[[package]]\nname = \"cranelift-codegen-shared\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7c940133198426d26128f08be2b40b0bd117b84771fd36798969c4d712d81fc\"\n\n[[package]]\nname = \"cranelift-entity\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87a0f1b2fdc18776956370cf8d9b009ded3f855350c480c1c52142510961f352\"\n\n[[package]]\nname = \"cranelift-frontend\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34897538b36b216cc8dd324e73263596d51b8cf610da6498322838b2546baf8a\"\ndependencies = [\n \"cranelift-codegen\",\n \"log\",\n \"smallvec\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"cranelift-isle\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b2629a569fae540f16a76b70afcc87ad7decb38dc28fa6c648ac73b51e78470\"\n\n[[package]]\nname = \"cranelift-jit\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"625be33ce54cf906c408f5ad9d08caa6e2a09e52d05fd0bd1bd95b132bfbba73\"\ndependencies = [\n \"anyhow\",\n \"cranelift-codegen\",\n \"cranelift-entity\",\n \"cranelift-module\",\n \"cranelift-native\",\n \"libc\",\n \"log\",\n \"region\",\n \"target-lexicon\",\n \"windows-sys 0.36.1\",\n]\n\n[[package]]\nname = \"cranelift-module\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"883f8d42e07fd6b283941688f6c41a9e3b97fbf2b4ddcfb2756e675b86dc5edb\"\ndependencies = [\n \"anyhow\",\n \"cranelift-codegen\",\n]\n\n[[package]]\nname = \"cranelift-native\"\nversion = \"0.88.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20937dab4e14d3e225c5adfc9c7106bafd4ac669bdb43027b911ff794c6fb318\"\ndependencies = [\n \"cranelift-codegen\",\n \"libc\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b01d6de93b2b6c65e17c634a26653a29d107b3c98c607c765bf38d041531cd8f\"\ndependencies = [\n \"atty\",\n \"cast\",\n \"clap\",\n \"criterion-plot\",\n \"csv\",\n \"itertools 0.10.5\",\n \"lazy_static 1.5.0\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_cbor\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2673cc8207403546f45f5fd319a974b1e6983ad1a3ee7e6041650013be041876\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac574ff4d437a7b5ad237ef331c17ccca63c46479e5b5453eb8e10bb99a759fe\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f33878137e4dafd7fa914ad4e259e18a4e8e532b9617a2d0150262bf53abfce\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dns-lookup\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5766087c2235fec47fafa4cfecc81e494ee679d0fd4a59887ea0919bfb0e4fc\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"socket2\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"endian-type\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c34f04666d835ff5d62e058c3995147c06f42fe86ff053337632bca83e42702d\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a12e6657c4c97ebab115a42dcee77225f7f482cdd841cf7088c657a42e9e00e7\"\ndependencies = [\n \"atty\",\n \"log\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"error-code\"\nversion = \"3.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5d9305ccc6942a704f4335694ecd3de2ea531b114ac2d51f5f843750787a92f\"\n\n[[package]]\nname = \"exitcode\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de853764b47027c2e862a995c34978ffa63c1501f2e15f987ba11bd4f9bba193\"\n\n[[package]]\nname = \"fd-lock\"\nversion = \"4.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e5768da2206272c81ef0b5e951a41862938a6070da63bcea197899942d3b947\"\ndependencies = [\n \"cfg-if\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"flame\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc2706461e1ee94f55cab2ed2e3d34ae9536cfa830358ef80acff1a3dacab30\"\ndependencies = [\n \"lazy_static 0.2.11\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thread-id\",\n]\n\n[[package]]\nname = \"flamer\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36b732da54fd4ea34452f2431cf464ac7be94ca4b339c9cd3d3d12eb06fe7aab\"\ndependencies = [\n \"flame\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"flamescope\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8168cbad48fdda10be94de9c6319f9e8ac5d3cf0a1abda1864269dfcca3d302a\"\ndependencies = [\n \"flame\",\n \"indexmap\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"324a1be68054ef05ad64b861cc9eaf1d623d2d8cb25b4bf2cb9cdd902b4bf253\"\ndependencies = [\n \"crc32fast\",\n \"libz-sys\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"fxhash\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"gethostname\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1ebd34e35c46e00bb73e81363248d627782724609fe1b6396f553f68fe3862e\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"half\"\nversion = \"1.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b43ede17f21864e81be2fa654110bf1e793774238d86ef8555c37e6519c0403\"\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hexf-parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfa686283ad6dd069f105e5ab091b04c62850d3e4cf5d67debad1933f55023df\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b900aa2f7301e21c36462b170ee99994de34dff39a4a6a528e80e7376d07e5\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"insta\"\nversion = \"1.40.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6593a41c7a73841868772495db7dc1e8ecab43bb5c0b6da2059246c4b506ab60\"\ndependencies = [\n \"console\",\n \"lazy_static 1.5.0\",\n \"linked-hash-map\",\n \"similar\",\n]\n\n[[package]]\nname = \"is-macro\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2069faacbe981460232f880d26bf3c7634e322d49053aa48c27e3ae642f728f1\"\ndependencies = [\n \"Inflector\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"junction\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72bbdfd737a243da3dfc1f99ee8d6e166480f17ab4ac84d7c34aacd73fc7bd16\"\ndependencies = [\n \"scopeguard\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"keccak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecc2af9a1119c51f12a14607e783cb977bde58bc069ff0c3da1095e635d70654\"\ndependencies = [\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"lalrpop-util\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"507460a910eb7b32ee961886ff48539633b788a36b65692b95f225b844c82553\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lexical-parse-float\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"683b3a5ebd0130b8fb52ba0bdc718cc56815b6a097e28ae5a6997d0ad17dc05f\"\ndependencies = [\n \"lexical-parse-integer\",\n \"lexical-util\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"lexical-parse-integer\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d0994485ed0c312f6d965766754ea177d07f9c00c9b82a5ee62ed5b47945ee9\"\ndependencies = [\n \"lexical-util\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"lexical-util\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5255b9ff16ff898710eb9eb63cb39248ea8a5bb036bea8085b1a767ff6c4e3fc\"\ndependencies = [\n \"static_assertions\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.159\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"561d97a539a36e26a9a5fad1ea11a3039a67714694aaa379433e580854bc3dc5\"\n\n[[package]]\nname = \"libffi\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce826c243048e3d5cec441799724de52e2d42f820468431fc3fceee2341871e2\"\ndependencies = [\n \"libc\",\n \"libffi-sys\",\n]\n\n[[package]]\nname = \"libffi-sys\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f36115160c57e8529781b4183c2bb51fdc1f6d6d1ed345591d84be7703befb3c\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"libsqlite3-sys\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c10584274047cb335c23d3e61bcef8e323adae7c5c8c760540f73610177fc3f\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2d16453e800a8cf6dd2fc3eb4bc99b786a9b90c663b8559a5b1a041bf89e472\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lz4_flex\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75761162ae2b0e580d7e7c390558127e5f01b4194debd6221fd8c207fc80e3f5\"\ndependencies = [\n \"twox-hash\",\n]\n\n[[package]]\nname = \"mac_address\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8836fae9d0d4be2c8b4efcdd79e828a2faa058a90d005abf42f91cac5493a08e\"\ndependencies = [\n \"nix 0.28.0\",\n \"winapi\",\n]\n\n[[package]]\nname = \"mach\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b823e83b2affd8f40a9ee8c29dbc56404c1e34cd2710921f2801e2cf29527afa\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"malachite\"\nversion = \"0.4.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5616515d632967cd329b6f6db96be9a03ea0b3a49cdbc45b0016803dad8a77b7\"\ndependencies = [\n \"malachite-base\",\n \"malachite-nz\",\n \"malachite-q\",\n]\n\n[[package]]\nname = \"malachite-base\"\nversion = \"0.4.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46059721011b0458b7bd6d9179be5d0b60294281c23320c207adceaecc54d13b\"\ndependencies = [\n \"hashbrown\",\n \"itertools 0.11.0\",\n \"libm\",\n \"ryu\",\n]\n\n[[package]]\nname = \"malachite-bigint\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17703a19c80bbdd0b7919f0f104f3b0597f7de4fc4e90a477c15366a5ba03faa\"\ndependencies = [\n \"derive_more\",\n \"malachite\",\n \"num-integer\",\n \"num-traits\",\n \"paste\",\n]\n\n[[package]]\nname = \"malachite-nz\"\nversion = \"0.4.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1503b27e825cabd1c3d0ff1e95a39fb2ec9eab6fd3da6cfa41aec7091d273e78\"\ndependencies = [\n \"itertools 0.11.0\",\n \"libm\",\n \"malachite-base\",\n]\n\n[[package]]\nname = \"malachite-q\"\nversion = \"0.4.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a475503a70a3679dbe3b9b230a23622516742528ba614a7b2490f180ea9cb514\"\ndependencies = [\n \"itertools 0.11.0\",\n \"malachite-base\",\n \"malachite-nz\",\n]\n\n[[package]]\nname = \"maplit\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d\"\n\n[[package]]\nname = \"matches\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2532096657941c2fea9c289d370a250971c689d4f143798ff67113ec042024a5\"\n\n[[package]]\nname = \"md-5\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf\"\ndependencies = [\n \"cfg-if\",\n \"digest\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.5.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83faa42c0a078c393f6b29d5db232d8be22776a891f8f56e5284faee4a20b327\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mt19937\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12ca7f22ed370d5991a9caec16a83187e865bc8a532f889670337d5a5689e3a1\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"nibble_vec\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a5d83df9f36fe23f0c3648c6bbb8b0298bb5f1939c8f2704431371f4b84d43\"\ndependencies = [\n \"smallvec\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab2156c4fce2f8df6c499cc1c763e4394b7482525bf2a9701c9d79d215f519e4\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases 0.1.1\",\n \"libc\",\n \"memoffset\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases 0.2.1\",\n \"libc\",\n \"memoffset\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.3.2+3.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a211a18d945ef7e648cc6e0058f4c548ee46aab922ea203e0d30e966ea23647b\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"optional\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"978aa494585d3ca4ad74929863093e87cac9790d81fe7aba2b3dc2890643a0fc\"\n\n[[package]]\nname = \"page_size\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eebde548fbbf1ea81a99b128872779c437752fb99f217c45245e1a61dcd9edcd\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.5.5\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"pmutil\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52a40bc70c2c58040d2d8b167ba9a5ff59fc9dab7ad44771cfde3dcfde7a09c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d30538d42559de6b034bc76fd6dd4c38961b1ee5c6c56e3808c50128fdbc22ce\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"puruspe\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3804877ffeba468c806c2ad9057bbbae92e4b2c410c2f108baaa0042f241fa4c\"\n\n[[package]]\nname = \"pyo3\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00e89ce2565d6044ca31a3eb79a334c3a79a841120a98f64eea9f579564cb691\"\ndependencies = [\n \"cfg-if\",\n \"indoc\",\n \"libc\",\n \"memoffset\",\n \"once_cell\",\n \"portable-atomic\",\n \"pyo3-build-config\",\n \"pyo3-ffi\",\n \"pyo3-macros\",\n \"unindent\",\n]\n\n[[package]]\nname = \"pyo3-build-config\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8afbaf3abd7325e08f35ffb8deb5892046fcb2608b703db6a583a5ba4cea01e\"\ndependencies = [\n \"once_cell\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"pyo3-ffi\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec15a5ba277339d04763f4c23d85987a5b08cbb494860be141e6a10a8eb88022\"\ndependencies = [\n \"libc\",\n \"pyo3-build-config\",\n]\n\n[[package]]\nname = \"pyo3-macros\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15e0f01b5364bcfbb686a52fc4181d412b708a68ed20c330db9fc8d2c2bf5a43\"\ndependencies = [\n \"proc-macro2\",\n \"pyo3-macros-backend\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"pyo3-macros-backend\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a09b550200e1e5ed9176976d0060cbc2ea82dc8515da07885e7b8153a85caacb\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"pyo3-build-config\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"radix_trie\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c069c179fcdc6a2fe24d8d18305cf085fdbd4f922c041943e203685d6a1c58fd\"\ndependencies = [\n \"endian-type\",\n \"nibble_vec\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62871f2d65009c0256aed1b9cfeeb8ac272833c404e13d53d400cd0dad7a2ac0\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regalloc2\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d43a209257d978ef079f3d446331d0f1794f5e0fc19b306a199983857833a779\"\ndependencies = [\n \"fxhash\",\n \"log\",\n \"slice-group-by\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"region\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"877e54ea2adcd70d80e9179344c97f93ef0dffd6b03e1f4529e6e83ab2fa9ae0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"mach\",\n \"winapi\",\n]\n\n[[package]]\nname = \"result-like\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abf7172fef6a7d056b5c26bf6c826570267562d51697f4982ff3ba4aec68a9df\"\ndependencies = [\n \"result-like-derive\",\n]\n\n[[package]]\nname = \"result-like-derive\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d6574c02e894d66370cfc681e5d68fedbc9a548fb55b30a96b3f0ae22d0fe5\"\ndependencies = [\n \"pmutil\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustpython\"\nversion = \"0.4.0\"\ndependencies = [\n \"cfg-if\",\n \"clap\",\n \"criterion\",\n \"dirs-next\",\n \"env_logger\",\n \"flame\",\n \"flamescope\",\n \"libc\",\n \"log\",\n \"pyo3\",\n \"rustpython-compiler\",\n \"rustpython-parser\",\n \"rustpython-pylib\",\n \"rustpython-stdlib\",\n \"rustpython-vm\",\n \"rustyline\",\n]\n\n[[package]]\nname = \"rustpython-ast\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cdaf8ee5c1473b993b398c174641d3aa9da847af36e8d5eb8291930b72f31a5\"\ndependencies = [\n \"is-macro\",\n \"malachite-bigint\",\n \"rustpython-literal\",\n \"rustpython-parser-core\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"rustpython-codegen\"\nversion = \"0.4.0\"\ndependencies = [\n \"ahash\",\n \"bitflags 2.6.0\",\n \"indexmap\",\n \"insta\",\n \"itertools 0.11.0\",\n \"log\",\n \"num-complex\",\n \"num-traits\",\n \"rustpython-ast\",\n \"rustpython-compiler-core\",\n \"rustpython-parser\",\n \"rustpython-parser-core\",\n]\n\n[[package]]\nname = \"rustpython-common\"\nversion = \"0.4.0\"\ndependencies = [\n \"ascii\",\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"itertools 0.11.0\",\n \"libc\",\n \"lock_api\",\n \"malachite-base\",\n \"malachite-bigint\",\n \"malachite-q\",\n \"num-complex\",\n \"num-traits\",\n \"once_cell\",\n \"parking_lot\",\n \"radium\",\n \"rand\",\n \"rustpython-format\",\n \"siphasher\",\n \"volatile\",\n \"widestring\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustpython-compiler\"\nversion = \"0.4.0\"\ndependencies = [\n \"rustpython-codegen\",\n \"rustpython-compiler-core\",\n \"rustpython-parser\",\n]\n\n[[package]]\nname = \"rustpython-compiler-core\"\nversion = \"0.4.0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"itertools 0.11.0\",\n \"lz4_flex\",\n \"malachite-bigint\",\n \"num-complex\",\n \"rustpython-parser-core\",\n \"serde\",\n]\n\n[[package]]\nname = \"rustpython-derive\"\nversion = \"0.4.0\"\ndependencies = [\n \"rustpython-compiler\",\n \"rustpython-derive-impl\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"rustpython-derive-impl\"\nversion = \"0.4.0\"\ndependencies = [\n \"itertools 0.11.0\",\n \"maplit\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"rustpython-compiler-core\",\n \"rustpython-doc\",\n \"rustpython-parser-core\",\n \"syn 1.0.109\",\n \"syn-ext\",\n \"textwrap 0.15.2\",\n]\n\n[[package]]\nname = \"rustpython-doc\"\nversion = \"0.3.0\"\nsource = \"git+https://github.com/RustPython/__doc__?tag=0.3.0#8b62ce5d796d68a091969c9fa5406276cb483f79\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"rustpython-format\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0389039b132ad8e350552d771270ccd03186985696764bcee2239694e7839942\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"itertools 0.11.0\",\n \"malachite-bigint\",\n \"num-traits\",\n \"rustpython-literal\",\n]\n\n[[package]]\nname = \"rustpython-jit\"\nversion = \"0.4.0\"\ndependencies = [\n \"approx\",\n \"cranelift\",\n \"cranelift-jit\",\n \"cranelift-module\",\n \"libffi\",\n \"num-traits\",\n \"rustpython-compiler-core\",\n \"rustpython-derive\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"rustpython-literal\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8304be3cae00232a1721a911033e55877ca3810215f66798e964a2d8d22281d\"\ndependencies = [\n \"hexf-parse\",\n \"is-macro\",\n \"lexical-parse-float\",\n \"num-traits\",\n \"unic-ucd-category\",\n]\n\n[[package]]\nname = \"rustpython-parser\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"868f724daac0caf9bd36d38caf45819905193a901e8f1c983345a68e18fb2abb\"\ndependencies = [\n \"anyhow\",\n \"is-macro\",\n \"itertools 0.11.0\",\n \"lalrpop-util\",\n \"log\",\n \"malachite-bigint\",\n \"num-traits\",\n \"phf\",\n \"phf_codegen\",\n \"rustc-hash\",\n \"rustpython-ast\",\n \"rustpython-parser-core\",\n \"tiny-keccak\",\n \"unic-emoji-char\",\n \"unic-ucd-ident\",\n \"unicode_names2\",\n]\n\n[[package]]\nname = \"rustpython-parser-core\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4b6c12fa273825edc7bccd9a734f0ad5ba4b8a2f4da5ff7efe946f066d0f4ad\"\ndependencies = [\n \"is-macro\",\n \"memchr\",\n \"rustpython-parser-vendored\",\n]\n\n[[package]]\nname = \"rustpython-parser-vendored\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04fcea49a4630a3a5d940f4d514dc4f575ed63c14c3e3ed07146634aed7f67a6\"\ndependencies = [\n \"memchr\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"rustpython-pylib\"\nversion = \"0.4.0\"\ndependencies = [\n \"glob\",\n \"rustpython-compiler-core\",\n \"rustpython-derive\",\n]\n\n[[package]]\nname = \"rustpython-sre_engine\"\nversion = \"0.4.0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"num_enum\",\n \"optional\",\n]\n\n[[package]]\nname = \"rustpython-stdlib\"\nversion = \"0.4.0\"\ndependencies = [\n \"adler32\",\n \"ahash\",\n \"ascii\",\n \"base64\",\n \"blake2\",\n \"bzip2\",\n \"cfg-if\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"csv-core\",\n \"digest\",\n \"dns-lookup\",\n \"dyn-clone\",\n \"flate2\",\n \"foreign-types-shared\",\n \"gethostname\",\n \"hex\",\n \"indexmap\",\n \"itertools 0.11.0\",\n \"junction\",\n \"libc\",\n \"libsqlite3-sys\",\n \"libz-sys\",\n \"mac_address\",\n \"malachite-bigint\",\n \"md-5\",\n \"memchr\",\n \"memmap2\",\n \"mt19937\",\n \"nix 0.29.0\",\n \"num-complex\",\n \"num-integer\",\n \"num-traits\",\n \"num_enum\",\n \"once_cell\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"page_size\",\n \"parking_lot\",\n \"paste\",\n \"puruspe\",\n \"rand\",\n \"rand_core\",\n \"rustix\",\n \"rustpython-common\",\n \"rustpython-derive\",\n \"rustpython-vm\",\n \"schannel\",\n \"sha-1\",\n \"sha2\",\n \"sha3\",\n \"socket2\",\n \"system-configuration\",\n \"termios\",\n \"thread_local\",\n \"ucd\",\n \"unic-char-property\",\n \"unic-normal\",\n \"unic-ucd-age\",\n \"unic-ucd-bidi\",\n \"unic-ucd-category\",\n \"unic-ucd-ident\",\n \"unicode-casing\",\n \"unicode_names2\",\n \"uuid\",\n \"widestring\",\n \"winapi\",\n \"windows-sys 0.52.0\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"rustpython-vm\"\nversion = \"0.4.0\"\ndependencies = [\n \"ahash\",\n \"ascii\",\n \"bitflags 2.6.0\",\n \"bstr\",\n \"caseless\",\n \"cfg-if\",\n \"chrono\",\n \"crossbeam-utils\",\n \"exitcode\",\n \"flame\",\n \"flamer\",\n \"getrandom\",\n \"glob\",\n \"half 2.4.1\",\n \"hex\",\n \"indexmap\",\n \"is-macro\",\n \"itertools 0.11.0\",\n \"junction\",\n \"libc\",\n \"log\",\n \"malachite-bigint\",\n \"memchr\",\n \"memoffset\",\n \"nix 0.29.0\",\n \"num-complex\",\n \"num-integer\",\n \"num-traits\",\n \"num_cpus\",\n \"num_enum\",\n \"once_cell\",\n \"optional\",\n \"parking_lot\",\n \"paste\",\n \"rand\",\n \"result-like\",\n \"rustc_version\",\n \"rustix\",\n \"rustpython-ast\",\n \"rustpython-codegen\",\n \"rustpython-common\",\n \"rustpython-compiler\",\n \"rustpython-compiler-core\",\n \"rustpython-derive\",\n \"rustpython-format\",\n \"rustpython-jit\",\n \"rustpython-literal\",\n \"rustpython-parser\",\n \"rustpython-parser-core\",\n \"rustpython-sre_engine\",\n \"rustyline\",\n \"schannel\",\n \"serde\",\n \"static_assertions\",\n \"strum\",\n \"strum_macros\",\n \"thiserror\",\n \"thread_local\",\n \"timsort\",\n \"uname\",\n \"unic-ucd-bidi\",\n \"unic-ucd-category\",\n \"unic-ucd-ident\",\n \"unicode-casing\",\n \"unicode_names2\",\n \"wasm-bindgen\",\n \"which\",\n \"widestring\",\n \"windows\",\n \"windows-sys 0.52.0\",\n \"winreg\",\n]\n\n[[package]]\nname = \"rustpython_wasm\"\nversion = \"0.4.0\"\ndependencies = [\n \"console_error_panic_hook\",\n \"js-sys\",\n \"rustpython-common\",\n \"rustpython-parser\",\n \"rustpython-pylib\",\n \"rustpython-stdlib\",\n \"rustpython-vm\",\n \"serde\",\n \"serde-wasm-bindgen\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"955d28af4278de8121b7ebeb796b6a45735dc01436d898801014aced2773a3d6\"\n\n[[package]]\nname = \"rustyline\"\nversion = \"14.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7803e8936da37efd9b6d4478277f4b2b9bb5cdb37a113e8d63222e58da647e63\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"clipboard-win\",\n \"fd-lock\",\n \"home\",\n \"libc\",\n \"log\",\n \"memchr\",\n \"nix 0.28.0\",\n \"radix_trie\",\n \"unicode-segmentation\",\n \"unicode-width\",\n \"utf8parse\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9aaafd5a2b6e3d657ff009d82fbd630b6bd54dd4eb06f21693925cdf80f9b8b\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-wasm-bindgen\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"618365e8e586c22123d692b72a7d791d5ee697817b65a218cdf12a98870af0f7\"\ndependencies = [\n \"fnv\",\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"serde_cbor\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5\"\ndependencies = [\n \"half 1.8.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.128\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ff5456707a1de34e7e37f2a6fd3d3f808c318259cbd01ab6377795054b483d8\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha-1\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5058ada175748e33390e40e872bd0fe59a19f265d0158daa551c5a88a76009c\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha3\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75872d278a8f37ef87fa0ddbda7802605cb18344497949862c0d4dcb291eba60\"\ndependencies = [\n \"digest\",\n \"keccak\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slice-group-by\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"826167069c09b99d56f31e9ae5c99049e932a98c9dc2dac47645b08dbbf76ba7\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.77\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f35bcdf61fd8e7be6caf75f429fdca8beb3ed76584befb503b1569faee373ed\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn-ext\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b86cb2b68c5b3c078cac02588bc23f3c04bb828c5d3aedd17980876ec6a7be6\"\ndependencies = [\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1\"\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"termios\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"411c5bf740737c7918b8b1fe232dca4dc9f8e754b8ad5e20966814001ed0ac6b\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7b3e525a49ec206798b40326a44121291b530c963cfb01018f63e135bac543d\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d50af8abc119fb8bb6dbabcfa89656f46f84aa0ac7688088608076ad2b459a84\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08904e7672f5eb876eaaf87e0ce17857500934f4981c4a0ab2b4aa98baac7fc3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"thread-id\"\nversion = \"3.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fbf4c9d56b320106cd64fd024dadfa0be7cb4706725fc44a7d7ce952d820c1\"\ndependencies = [\n \"libc\",\n \"redox_syscall 0.1.57\",\n \"winapi\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"timsort\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"639ce8ef6d2ba56be0383a94dd13b92138d58de44c62618303bb798fa92bdc00\"\n\n[[package]]\nname = \"tiny-keccak\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237\"\ndependencies = [\n \"crunchy\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"twox-hash\"\nversion = \"1.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\"\ndependencies = [\n \"cfg-if\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe4fa6e588762366f1eb4991ce59ad1b93651d0b769dfb4e4d1c5c4b943d1159\"\n\n[[package]]\nname = \"uname\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b72f89f0ca32e4db1c04e2a72f5345d59796d4866a1ee0609084569f73683dc8\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"unic-char-property\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8c57a407d9b6fa02b4795eb81c5b6652060a15a7903ea981f3d723e6c0be221\"\ndependencies = [\n \"unic-char-range\",\n]\n\n[[package]]\nname = \"unic-char-range\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0398022d5f700414f6b899e10b8348231abf9173fa93144cbc1a43b9793c1fbc\"\n\n[[package]]\nname = \"unic-common\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80d7ff825a6a654ee85a63e80f92f054f904f21e7d12da4e22f9834a4aaa35bc\"\n\n[[package]]\nname = \"unic-emoji-char\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b07221e68897210270a38bde4babb655869637af0f69407f96053a34f76494d\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-normal\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f09d64d33589a94628bc2aeb037f35c2e25f3f049c7348b5aa5580b48e6bba62\"\ndependencies = [\n \"unic-ucd-normal\",\n]\n\n[[package]]\nname = \"unic-ucd-age\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8cfdfe71af46b871dc6af2c24fcd360e2f3392ee4c5111877f2947f311671c\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-bidi\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1d568b51222484e1f8209ce48caa6b430bf352962b877d592c29ab31fb53d8c\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-category\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b8d4591f5fcfe1bd4453baaf803c40e1b1e69ff8455c47620440b46efef91c0\"\ndependencies = [\n \"matches\",\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-hangul\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb1dc690e19010e1523edb9713224cba5ef55b54894fe33424439ec9a40c0054\"\ndependencies = [\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-ident\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e230a37c0381caa9219d67cf063aa3a375ffed5bf541a452db16e744bdab6987\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-normal\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86aed873b8202d22b13859dda5fe7c001d271412c31d411fd9b827e030569410\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-hangul\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-version\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96bd2f2237fe450fcd0a1d2f5f4e91711124f7857ba2e964247776ebeeb7b0c4\"\ndependencies = [\n \"unic-common\",\n]\n\n[[package]]\nname = \"unicode-casing\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"623f59e6af2a98bdafeb93fa277ac8e1e40440973001ca15cf4ae1541cd16d56\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode_names2\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1673eca9782c84de5f81b82e4109dcfb3611c8ba0d52930ec4a9478f547b2dd\"\ndependencies = [\n \"phf\",\n \"unicode_names2_generator\",\n]\n\n[[package]]\nname = \"unicode_names2_generator\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91e5b84611016120197efd7dc93ef76774f4e084cd73c9fb3ea4a86c570c56e\"\ndependencies = [\n \"getopts\",\n \"log\",\n \"phf_codegen\",\n \"rand\",\n]\n\n[[package]]\nname = \"unindent\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7de7d73e1754487cb58364ee906a499937a0dfabd86bcb980fa99ec8c8fa2ce\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314\"\ndependencies = [\n \"atomic\",\n \"getrandom\",\n \"rand\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"volatile\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8e76fae08f03f96e166d2dfda232190638c10e0383841252416f9cfe2ae60e6\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e9300f63a621e96ed275155c108eb6f843b6a26d053f122ab69724559dc8ed\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26fdeaafd9bd129f65e7c031593c24d62186301e0c72c8978fa1678be7d532c0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"6.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ee928febd44d98f2f459a4a79bd4d928591333a494a10a868418ac1b39cf1f\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7219d36b6eac893fa81e84ebe06485e7dcbb616177469b142df14f1f4deb1311\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e48a53791691ab099e5e2ad123536d0fff50652600abaf43bbf952894110d0be\"\ndependencies = [\n \"windows-core\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea04155a16a59f9eab786fe12a4a450e75cdb175f9e0d80da1e17db09f55b8d2\"\ndependencies = [\n \"windows_aarch64_msvc 0.36.1\",\n \"windows_i686_gnu 0.36.1\",\n \"windows_i686_msvc 0.36.1\",\n \"windows_x86_64_gnu 0.36.1\",\n \"windows_x86_64_msvc 0.36.1\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bb8c3fd39ade2d67e9874ac4f3db21f0d710bee00fe7cab16949ec184eeaa47\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"180e6ccf01daf4c426b846dfc66db1fc518f074baa793aa7d9b9aaeffad6a3b6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2e7917148b2812d1eeafaeb22a97e4813dfa60a3f8f78ebe204bcc88f12f024\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4dcd171b8776c41b97521e5da127a2d86ad280114807d0b2ab1e462bc764d9e1\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c811ca4a8c853ef420abd8592ba53ddbbac90410fab6903b3e79972a631f7680\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winreg\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a277a57398d4bfa075df44f501a17cfdf8542d224f0d36095a2adc7aee4ef0a5\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"xml-rs\"\nversion = \"0.8.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af4e2e2f7cba5a093896c1e150fbfe177d1883e7448200efb81d40b9d339ef26\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 6.4013671875,
          "content": "[package]\nname = \"rustpython\"\ndescription = \"A python interpreter written in rust.\"\ninclude = [\"LICENSE\", \"Cargo.toml\", \"src/**/*.rs\"]\nversion.workspace = true\nauthors.workspace = true\nedition.workspace = true\nrust-version.workspace = true\nrepository.workspace = true\nlicense.workspace = true\n\n[features]\ndefault = [\"threading\", \"stdlib\", \"zlib\", \"importlib\"]\nimportlib = [\"rustpython-vm/importlib\"]\nencodings = [\"rustpython-vm/encodings\"]\nstdlib = [\"rustpython-stdlib\", \"rustpython-pylib\", \"encodings\"]\nflame-it = [\"rustpython-vm/flame-it\", \"flame\", \"flamescope\"]\nfreeze-stdlib = [\"stdlib\", \"rustpython-vm/freeze-stdlib\", \"rustpython-pylib?/freeze-stdlib\"]\njit = [\"rustpython-vm/jit\"]\nthreading = [\"rustpython-vm/threading\", \"rustpython-stdlib/threading\"]\nzlib = [\"stdlib\", \"rustpython-stdlib/zlib\"]\nbz2 = [\"stdlib\", \"rustpython-stdlib/bz2\"]\nsqlite = [\"rustpython-stdlib/sqlite\"]\nssl = [\"rustpython-stdlib/ssl\"]\nssl-vendor = [\"ssl\", \"rustpython-stdlib/ssl-vendor\"]\n\n[dependencies]\nrustpython-compiler = { workspace = true }\nrustpython-pylib = { workspace = true, optional = true }\nrustpython-stdlib = { workspace = true, optional = true, features = [\"compiler\"] }\nrustpython-vm = { workspace = true, features = [\"compiler\"] }\nrustpython-parser = { workspace = true }\n\ncfg-if = { workspace = true }\nlog = { workspace = true }\nflame = { workspace = true, optional = true }\n\nclap = \"2.34\"\ndirs = { package = \"dirs-next\", version = \"2.0.0\" }\nenv_logger = { version = \"0.9.0\", default-features = false, features = [\"atty\", \"termcolor\"] }\nflamescope = { version = \"0.1.2\", optional = true }\n\n[target.'cfg(windows)'.dependencies]\nlibc = { workspace = true }\n\n[target.'cfg(not(target_arch = \"wasm32\"))'.dependencies]\nrustyline = { workspace = true }\n\n[dev-dependencies]\ncriterion = { version = \"0.3.5\", features = [\"html_reports\"] }\npyo3 = { version = \"0.22\", features = [\"auto-initialize\"] }\n\n[[bench]]\nname = \"execution\"\nharness = false\n\n[[bench]]\nname = \"microbenchmarks\"\nharness = false\n\n[[bin]]\nname = \"rustpython\"\npath = \"src/main.rs\"\n\n[profile.dev.package.\"*\"]\nopt-level = 3\n\n[profile.test]\nopt-level = 3\n# https://github.com/rust-lang/rust/issues/92869\n# lto = \"thin\"\n\n[profile.bench]\nlto = \"thin\"\ncodegen-units = 1\nopt-level = 3\n\n[profile.release]\nlto = \"thin\"\n\n[patch.crates-io]\n# REDOX START, Uncomment when you want to compile/check with redoxer\n# REDOX END\n\n# Used only on Windows to build the vcpkg dependencies\n[package.metadata.vcpkg]\ngit = \"https://github.com/microsoft/vcpkg\"\n# The revision of the vcpkg repository to use\n# https://github.com/microsoft/vcpkg/tags\nrev = \"2024.02.14\"\n\n[package.metadata.vcpkg.target]\nx86_64-pc-windows-msvc = { triplet = \"x64-windows-static-md\", dev-dependencies = [\"openssl\" ] }\n\n[workspace]\nresolver = \"2\"\nmembers = [\n    \"compiler\", \"compiler/core\", \"compiler/codegen\",\n    \".\", \"common\", \"derive\", \"jit\", \"vm\", \"vm/sre_engine\", \"pylib\", \"stdlib\", \"derive-impl\",\n    \"wasm/lib\",\n]\n\n[workspace.package]\nversion = \"0.4.0\"\nauthors = [\"RustPython Team\"]\nedition = \"2021\"\nrust-version = \"1.83.0\"\nrepository = \"https://github.com/RustPython/RustPython\"\nlicense = \"MIT\"\n\n[workspace.dependencies]\nrustpython-compiler-core = { path = \"compiler/core\", version = \"0.4.0\" }\nrustpython-compiler = { path = \"compiler\", version = \"0.4.0\" }\nrustpython-codegen = { path = \"compiler/codegen\", version = \"0.4.0\" }\nrustpython-common = { path = \"common\", version = \"0.4.0\" }\nrustpython-derive = { path = \"derive\", version = \"0.4.0\" }\nrustpython-derive-impl = { path = \"derive-impl\", version = \"0.4.0\" }\nrustpython-jit = { path = \"jit\", version = \"0.4.0\" }\nrustpython-vm = { path = \"vm\", default-features = false, version = \"0.4.0\" }\nrustpython-pylib = { path = \"pylib\", version = \"0.4.0\" }\nrustpython-stdlib = { path = \"stdlib\", default-features = false, version = \"0.4.0\" }\nrustpython-sre_engine = { path = \"vm/sre_engine\", version = \"0.4.0\" }\nrustpython-doc = { git = \"https://github.com/RustPython/__doc__\", tag = \"0.3.0\", version = \"0.3.0\" }\n\nrustpython-literal = { version = \"0.4.0\" }\nrustpython-parser-core = { version = \"0.4.0\" }\nrustpython-parser = { version = \"0.4.0\" }\nrustpython-ast = { version = \"0.4.0\" }\nrustpython-format= { version = \"0.4.0\" }\n# rustpython-literal = { git = \"https://github.com/RustPython/Parser.git\", version = \"0.4.0\", rev = \"00d2f1d1a7522ef9c85c10dfa5f0bb7178dee655\" }\n# rustpython-parser-core = { git = \"https://github.com/RustPython/Parser.git\", version = \"0.4.0\", rev = \"00d2f1d1a7522ef9c85c10dfa5f0bb7178dee655\" }\n# rustpython-parser = { git = \"https://github.com/RustPython/Parser.git\", version = \"0.4.0\", rev = \"00d2f1d1a7522ef9c85c10dfa5f0bb7178dee655\" }\n# rustpython-ast = { git = \"https://github.com/RustPython/Parser.git\", version = \"0.4.0\", rev = \"00d2f1d1a7522ef9c85c10dfa5f0bb7178dee655\" }\n# rustpython-format = { git = \"https://github.com/RustPython/Parser.git\", version = \"0.4.0\", rev = \"00d2f1d1a7522ef9c85c10dfa5f0bb7178dee655\" }\n# rustpython-literal = { path = \"../RustPython-parser/literal\" }\n# rustpython-parser-core = { path = \"../RustPython-parser/core\" }\n# rustpython-parser = { path = \"../RustPython-parser/parser\" }\n# rustpython-ast = { path = \"../RustPython-parser/ast\" }\n# rustpython-format = { path = \"../RustPython-parser/format\" }\n\nahash = \"0.8.11\"\nascii = \"1.0\"\nbitflags = \"2.4.1\"\nbstr = \"1\"\ncfg-if = \"1.0\"\nchrono = \"0.4.37\"\ncrossbeam-utils = \"0.8.19\"\nflame = \"0.2.2\"\ngetrandom = \"0.2.12\"\nglob = \"0.3\"\nhex = \"0.4.3\"\nindexmap = { version = \"2.2.6\", features = [\"std\"] }\ninsta = \"1.38.0\"\nitertools = \"0.11.0\"\nis-macro = \"0.3.0\"\njunction = \"1.0.0\"\nlibc = \"0.2.153\"\nlog = \"0.4.16\"\nnix = { version = \"0.29\", features = [\"fs\", \"user\", \"process\", \"term\", \"time\", \"signal\", \"ioctl\", \"socket\", \"sched\", \"zerocopy\", \"dir\", \"hostname\", \"net\", \"poll\"] }\nmalachite-bigint = \"0.2.0\"\nmalachite-q = \"0.4.4\"\nmalachite-base = \"0.4.4\"\nmemchr = \"2.7.2\"\nnum-complex = \"0.4.0\"\nnum-integer = \"0.1.44\"\nnum-traits = \"0.2\"\nnum_enum = { version = \"0.7\", default-features = false }\nonce_cell = \"1.19.0\"\nparking_lot = \"0.12.1\"\npaste = \"1.0.7\"\nrand = \"0.8.5\"\nrustix = { version = \"0.38\", features = [\"event\"] }\nrustyline = \"14.0.0\"\nserde = { version = \"1.0.133\", default-features = false }\nschannel = \"0.1.22\"\nstatic_assertions = \"1.1\"\nstrum = \"0.26\"\nstrum_macros = \"0.26\"\nsyn = \"1.0.109\"\nthiserror = \"1.0\"\nthread_local = \"1.1.4\"\nunicode_names2 = \"1.2.0\"\nwidestring = \"1.1.0\"\nwindows-sys = \"0.52.0\"\nwasm-bindgen = \"0.2.92\"\n\n# Lints\n\n[workspace.lints.rust]\nunsafe_code = \"allow\"\n\n[workspace.lints.clippy]\nperf = \"warn\"\nstyle = \"warn\"\ncomplexity = \"warn\"\nsuspicious = \"warn\"\ncorrectness = \"warn\"\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 8.263671875,
          "content": "# RustPython Development Guide and Tips\n\nRustPython attracts developers with interest and experience in Rust, Python,\nor WebAssembly. Whether you are familiar with Rust, Python, or \nWebAssembly, the goal of this Development Guide is to give you the basics to\nget set up for developing RustPython and contributing to this project. \n\nThe contents of the Development Guide include:\n\n- [Setting up a development environment](#setting-up-a-development-environment)\n- [Code style](#code-style)\n- [Testing](#testing)\n- [Profiling](#profiling)\n- [Code organization](#code-organization)\n- [Understanding internals](#understanding-internals)\n- [Questions](#questions)\n\n## Setting up a development environment\n\nRustPython requires the following:\n\n- Rust latest stable version (e.g 1.69.0 as of Apr 20 2023)\n    - To check Rust version: `rustc --version` \n    - If you have `rustup` on your system, enter to update to the latest\n      stable version: `rustup update stable`\n    - If you do not have Rust installed, use [rustup](https://rustup.rs/) to\n      do so.\n- CPython version 3.12 or higher\n    - CPython can be installed by your operating system's package manager,\n      from the [Python website](https://www.python.org/downloads/), or\n      using a third-party distribution, such as \n      [Anaconda](https://www.anaconda.com/distribution/).\n- [macOS] In case of libffi-sys compilation error, make sure autoconf, automake,\n   libtool are installed\n    - To install with [Homebrew](https://brew.sh), enter \n      `brew install autoconf automake libtool`\n- [Optional] The Python package, `pytest`, is used for testing Python code\n  snippets. To install, enter `python3 -m pip install pytest`.\n\n## Code style\n\nThe Rust code style used is the default\n[rustfmt](https://github.com/rust-lang/rustfmt) codestyle. Please format your\ncode accordingly, or run `cargo fmt` to autoformat it. We also use\n[clippy](https://github.com/rust-lang/rust-clippy) to lint Rust code, which\nyou can check yourself with `cargo clippy`.\n\nCustom Python code (i.e. code not copied from CPython's standard library) should\nfollow the [PEP 8](https://www.python.org/dev/peps/pep-0008/) style. We also use\n[ruff](https://beta.ruff.rs/docs/) to check Python code style.\n\nIn addition to language specific tools, [cspell](https://github.com/streetsidesoftware/cspell),\na code spell checker, is used in order to ensure correct spellings for code.\n\n## Testing\n\nTo test RustPython's functionality, a collection of Python snippets is located\nin the `extra_tests/snippets` directory and can be run using `pytest`:\n\n```shell\n$ cd extra_tests\n$ pytest -v\n```\n\nRust unit tests can be run with `cargo`:\n\n```shell\n$ cargo test --workspace --exclude rustpython_wasm\n```\n\nPython unit tests can be run by compiling RustPython and running the test module:\n\n```shell\n$ cargo run --release -- -m test\n```\n\nThere are a few test options that are especially useful:\n\n- `-j <n>` enables parallel testing (which is a lot faster), where `<n>` is the\nnumber of threads to be used, ideally the same as number of cores on your CPU.\nIf you don't know, `-j 4` or `-j 8` are good options.\n- `-v` enables verbose mode, adding additional information about the tests being\nrun.\n- `<test_name>` specifies a single test to run instead of running all tests.\n\nFor example, to run all tests in parallel:\n\n```shell\n$ cargo run --release -- -m test -j 4\n```\n\nTo run only `test_cmath` (located at `Lib/test/test_cmath`) verbosely:\n\n```shell\n$ cargo run --release -- -m test test_cmath -v\n```\n\n## Profiling\n\nTo profile RustPython, build it in `release` mode with the `flame-it` feature.\nThis will generate a file `flamescope.json`, which can be viewed at\nhttps://speedscope.app.\n\n```shell\n$ cargo run --release --features flame-it script.py\n$ cat flamescope.json\n{<json>}\n```\n\nYou can specify another file name other than the default by using the\n`--output-file` option to specify a file name (or `stdout` if you specify `-`).\nThe `--output-format` option determines the format of the output file.\nThe speedscope json format (default), text, or raw html can be passed. There\nexists a raw html viewer which is currently broken, and we welcome a PR to fix it.\n\n## Code organization\n\nUnderstanding a new codebase takes time. Here's a brief view of the\nrepository's structure:\n\n- `compiler/src`: python compilation to bytecode\n  - `core/src`: python bytecode representation in rust structures\n  - `parser/src`: python lexing, parsing and ast\n- `derive/src`: Rust language extensions and macros specific to rustpython\n- `Lib`: Carefully selected / copied files from CPython sourcecode. This is\n   the python side of the standard library.\n  - `test`: CPython test suite\n- `vm/src`: python virtual machine\n  - `builtins`: Builtin functions and types\n  - `stdlib`: Standard library parts implemented in rust.\n- `src`: using the other subcrates to bring rustpython to life.\n- `wasm`: Binary crate and resources for WebAssembly build\n- `extra_tests`: extra integration test snippets as a supplement to `Lib/test`\n\n## Understanding Internals\n\nThe RustPython workspace includes the `rustpython` top-level crate. The `Cargo.toml`\nfile in the root of the repo provide configuration of the crate and the\nimplementation is found in the `src` directory (specifically, `src/lib.rs`).\n\nThe top-level `rustpython` binary depends on several lower-level crates including:\n\n- `rustpython-parser` (implementation in `compiler/parser/src`)\n- `rustpython-compiler` (implementation in `compiler/src`)\n- `rustpython-vm` (implementation in `vm/src`)\n\nTogether, these crates provide the functions of a programming language and\nenable a line of code to go through a series of steps:\n\n- parse the line of source code into tokens\n- determine if the tokens are valid syntax\n- create an Abstract Syntax Tree (AST)\n- compile the AST into bytecode\n- execute the bytecode in the virtual machine (VM).\n\n### rustpython-parser\n\nThis crate contains the lexer and parser to convert a line of code to\nan Abstract Syntax Tree (AST):\n\n- Lexer: `compiler/parser/src/lexer.rs` converts Python source code into tokens\n- Parser: `compiler/parser/src/parser.rs` takes the tokens generated by the lexer and parses\n  the tokens into an AST (Abstract Syntax Tree) where the nodes of the syntax\n  tree are Rust structs and enums.\n  - The Parser relies on `LALRPOP`, a Rust parser generator framework. The\n    LALRPOP definition of Python's grammar is in `compiler/parser/src/python.lalrpop`.\n  - More information on parsers and a tutorial can be found in the \n    [LALRPOP book](https://lalrpop.github.io/lalrpop/).\n- AST: `compiler/ast/` implements in Rust the Python types and expressions\n  represented by the AST nodes.\n\n### rustpython-compiler\n\nThe `rustpython-compiler` crate's purpose is to transform the AST (Abstract Syntax\nTree) to bytecode. The implementation of the compiler is found in the\n`compiler/src` directory. The compiler implements Python's symbol table,\nast->bytecode compiler, and bytecode optimizer in Rust.\n\nImplementation of bytecode structure in Rust is found in the `compiler/core/src`\ndirectory. `compiler/core/src/bytecode.rs` contains the representation of\ninstructions and operations in Rust. Further information about Python's\nbytecode instructions can be found in the\n[Python documentation](https://docs.python.org/3/library/dis.html#bytecodes).\n\n### rustpython-vm\n\nThe `rustpython-vm` crate has the important job of running the virtual machine that\nexecutes Python's instructions. The `vm/src` directory contains code to\nimplement the read and evaluation loop that fetches and dispatches\ninstructions. This directory also contains the implementation of the\nPython Standard Library modules in Rust (`vm/src/stdlib`). In Python\neverything can be represented as an object. The `vm/src/builtins` directory holds\nthe Rust code used to represent different Python objects and their methods. The\ncore implementation of what a Python object is can be found in\n`vm/src/object/core.rs`.\n\n### Code generation\n\nThere are some code generations involved in building RustPython:\n\n- some part of the AST code is generated from `vm/src/stdlib/ast/gen.rs` to `compiler/ast/src/ast_gen.rs`.\n- the `__doc__` attributes are generated by the \n  [__doc__](https://github.com/RustPython/__doc__) project which is then included as the `rustpython-doc` crate.\n\n## Questions\n\nHave you tried these steps and have a question, please chat with us on\n[Discord](https://discord.gg/vru8NypEhv).\n"
        },
        {
          "name": "Dockerfile.bin",
          "type": "blob",
          "size": 0.287109375,
          "content": "FROM rust:latest as rust\n\nWORKDIR /rustpython\n\nCOPY . .\n\nRUN cargo build --release\n\nFROM debian:stable-slim\n\nCOPY --from=rust /rustpython/target/release/rustpython /usr/bin\nCOPY --from=rust /rustpython/Lib /usr/lib/rustpython\nENV RUSTPYTHONPATH /usr/lib/rustpython\n\nENTRYPOINT [ \"rustpython\" ]\n"
        },
        {
          "name": "Dockerfile.wasm",
          "type": "blob",
          "size": 0.6513671875,
          "content": "FROM rust:slim AS rust\n\nWORKDIR /rustpython\n\nUSER root\nENV USER root\n\n\nRUN apt-get update && apt-get install curl libssl-dev pkg-config -y && \\\n  curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n\nCOPY . .\n\nRUN cd wasm/lib/ && wasm-pack build --release\n\n\nFROM node:alpine AS node\n\nWORKDIR /rustpython-demo\n\nCOPY --from=rust /rustpython/wasm/lib/pkg rustpython_wasm\n\nCOPY wasm/demo .\n\nRUN npm install && npm run dist -- --env.noWasmPack --env.rustpythonPkg=rustpython_wasm\n\n\nFROM nginx:alpine\n\nCOPY --from=node /rustpython-demo/dist /usr/share/nginx/html\n# Add the WASM mime type\nRUN echo \"types { application/wasm wasm; }\" >>/etc/nginx/mime.types\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2020 RustPython Team\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE-logo",
          "type": "blob",
          "size": 18.2119140625,
          "content": "Attribution 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public:\n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution 4.0 International Public License\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution 4.0 International Public License (\"Public License\"). To the\nextent this Public License may be interpreted as a contract, You are\ngranted the Licensed Rights in consideration of Your acceptance of\nthese terms and conditions, and the Licensor grants You such rights in\nconsideration of benefits the Licensor receives from making the\nLicensed Material available under these terms and conditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  j. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  k. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part; and\n\n            b. produce, reproduce, and Share Adapted Material.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the “Licensor.” The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org."
        },
        {
          "name": "Lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0458984375,
          "content": "<img src=\"./logo.png\" width=\"125\" height=\"125\" align=\"right\" />\n\n# [RustPython](https://rustpython.github.io/)\n\nA Python-3 (CPython >= 3.12.0) Interpreter written in Rust :snake: :scream:\n:metal:.\n\n[![Build Status](https://github.com/RustPython/RustPython/workflows/CI/badge.svg)](https://github.com/RustPython/RustPython/actions?query=workflow%3ACI)\n[![codecov](https://codecov.io/gh/RustPython/RustPython/branch/main/graph/badge.svg)](https://codecov.io/gh/RustPython/RustPython)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n[![Contributors](https://img.shields.io/github/contributors/RustPython/RustPython.svg)](https://github.com/RustPython/RustPython/graphs/contributors)\n[![Discord Shield](https://discordapp.com/api/guilds/1043121930691149845/widget.png?style=shield)][discord]\n[![docs.rs](https://docs.rs/rustpython/badge.svg)](https://docs.rs/rustpython/)\n[![Crates.io](https://img.shields.io/crates/v/rustpython)](https://crates.io/crates/rustpython)\n[![dependency status](https://deps.rs/crate/rustpython/0.1.1/status.svg)](https://deps.rs/crate/rustpython/0.1.1)\n[![WAPM package](https://wapm.io/package/rustpython/badge.svg?style=flat)](https://wapm.io/package/rustpython)\n[![Open in Gitpod](https://img.shields.io/static/v1?label=Open%20in&message=Gitpod&color=1aa6e4&logo=gitpod)](https://gitpod.io#https://github.com/RustPython/RustPython)\n\n## Usage\n\n**Check out our [online demo](https://rustpython.github.io/demo/) running on WebAssembly.**\n\nRustPython requires Rust latest stable version (e.g 1.67.1 at February 7th 2023). If you don't\ncurrently have Rust installed on your system you can do so by following the instructions at [rustup.rs](https://rustup.rs/).\n\nTo check the version of Rust you're currently running, use `rustc --version`. If you wish to update,\n`rustup update stable` will update your Rust installation to the most recent stable release.\n\nTo build RustPython locally, first, clone the source code:\n\n```bash\ngit clone https://github.com/RustPython/RustPython\n```\n\nThen you can change into the RustPython directory and run the demo (Note: `--release` is\nneeded to prevent stack overflow on Windows):\n\n```bash\n$ cd RustPython\n$ cargo run --release demo_closures.py\nHello, RustPython!\n```\n\nOr use the interactive shell:\n\n```bash\n$ cargo run --release\nWelcome to rustpython\n>>>>> 2+2\n4\n```\n\nNOTE: For windows users, please set `RUSTPYTHONPATH` environment variable as `Lib` path in project directory.\n(e.g. When RustPython directory is `C:\\RustPython`, set `RUSTPYTHONPATH` as `C:\\RustPython\\Lib`)\n\nYou can also install and run RustPython with the following:\n\n```bash\n$ cargo install --git https://github.com/RustPython/RustPython rustpython\n$ rustpython\nWelcome to the magnificent Rust Python interpreter\n>>>>>\n```\n\nIf you'd like to make https requests, you can enable the `ssl` feature, which\nalso lets you install the `pip` package manager. Note that on Windows, you may\nneed to install OpenSSL, or you can enable the `ssl-vendor` feature instead,\nwhich compiles OpenSSL for you but requires a C compiler, perl, and `make`.\nOpenSSL version 3 is expected and tested in CI. Older versions may not work.\n\nOnce you've installed rustpython with SSL support, you can install pip by\nrunning:\n\n```bash\ncargo install --git https://github.com/RustPython/RustPython --features ssl\nrustpython --install-pip\n```\n\nYou can also install RustPython through the `conda` package manager, though\nthis isn't officially supported and may be out of date:\n\n```bash\nconda install rustpython -c conda-forge\nrustpython\n```\n\n### WASI\n\nYou can compile RustPython to a standalone WebAssembly WASI module so it can run anywhere.\n\nBuild\n\n```bash\ncargo build --target wasm32-wasip1 --no-default-features --features freeze-stdlib,stdlib --release\n```\n\nRun by wasmer\n\n```bash\nwasmer run --dir `pwd` -- target/wasm32-wasip1/release/rustpython.wasm `pwd`/extra_tests/snippets/stdlib_random.py\n```\n\nRun by wapm\n\n```bash\n$ wapm install rustpython\n$ wapm run rustpython\n>>>>> 2+2\n4\n```\n\n#### Building the WASI file\n\nYou can build the WebAssembly WASI file with:\n\n```bash\ncargo build --release --target wasm32-wasip1 --features=\"freeze-stdlib\"\n```\n\n> Note: we use the `freeze-stdlib` to include the standard library inside the binary. You also have to run once `rustup target add wasm32-wasip1`.\n\n### JIT (Just in time) compiler\n\nRustPython has a **very** experimental JIT compiler that compile python functions into native code.\n\n#### Building\n\nBy default the JIT compiler isn't enabled, it's enabled with the `jit` cargo feature.\n\n```bash\ncargo run --features jit\n```\n\nThis requires autoconf, automake, libtool, and clang to be installed.\n\n#### Using\n\nTo compile a function, call `__jit__()` on it.\n\n```python\ndef foo():\n    a = 5\n    return 10 + a\n\nfoo.__jit__()  # this will compile foo to native code and subsequent calls will execute that native code\nassert foo() == 15\n```\n\n## Embedding RustPython into your Rust Applications\n\nInterested in exposing Python scripting in an application written in Rust,\nperhaps to allow quickly tweaking logic where Rust's compile times would be inhibitive?\nThen `examples/hello_embed.rs` and `examples/mini_repl.rs` may be of some assistance.\n\n## Disclaimer\n\nRustPython is in development, and while the interpreter certainly can be used\nin interesting use cases like running Python in WASM and embedding into a Rust\nproject, do note that RustPython is not totally production-ready.\n\nContribution is more than welcome! See our contribution section for more\ninformation on this.\n\n## Conference videos\n\nCheckout those talks on conferences:\n\n- [FOSDEM 2019](https://www.youtube.com/watch?v=nJDY9ASuiLc)\n- [EuroPython 2018](https://www.youtube.com/watch?v=YMmio0JHy_Y)\n\n## Use cases\n\nAlthough RustPython is a fairly young project, a few people have used it to\nmake cool projects:\n\n- [GreptimeDB](https://github.com/GreptimeTeam/greptimedb): an open-source, cloud-native, distributed time-series database. Using RustPython for embedded scripting.\n- [pyckitup](https://github.com/pickitup247/pyckitup): a game engine written in\n  rust.\n- [Robot Rumble](https://github.com/robot-rumble/logic/): an arena-based AI competition platform\n- [Ruff](https://github.com/charliermarsh/ruff/): an extremely fast Python linter, written in Rust\n\n## Goals\n\n- Full Python-3 environment entirely in Rust (not CPython bindings)\n- A clean implementation without compatibility hacks\n\n## Documentation\n\nCurrently along with other areas of the project, documentation is still in an\nearly phase.\n\nYou can read the [online documentation](https://docs.rs/rustpython) for the\nlatest release, or the [user guide](https://rustpython.github.io/docs/).\n\nYou can also generate documentation locally by running:\n\n```shell\ncargo doc # Including documentation for all dependencies\ncargo doc --no-deps --all # Excluding all dependencies\n```\n\nDocumentation HTML files can then be found in the `target/doc` directory or you can append `--open` to the previous commands to\nhave the documentation open automatically on your default browser.\n\nFor a high level overview of the components, see the [architecture](architecture/architecture.md) document.\n\n## Contributing\n\nContributions are more than welcome, and in many cases we are happy to guide\ncontributors through PRs or on Discord. Please refer to the\n[development guide](DEVELOPMENT.md) as well for tips on developments.\n\nWith that in mind, please note this project is maintained by volunteers, some of\nthe best ways to get started are below:\n\nMost tasks are listed in the\n[issue tracker](https://github.com/RustPython/RustPython/issues). Check issues\nlabeled with [good first issue](https://github.com/RustPython/RustPython/issues?q=label%3A%22good+first+issue%22+is%3Aissue+is%3Aopen+) if you wish to start coding.\n\nTo enhance CPython compatibility, try to increase unittest coverage by checking this article: [How to contribute to RustPython by CPython unittest](https://rustpython.github.io/guideline/2020/04/04/how-to-contribute-by-cpython-unittest.html)\n\nAnother approach is to checkout the source code: builtin functions and object\nmethods are often the simplest and easiest way to contribute.\n\nYou can also simply run `./whats_left.py` to assist in finding any unimplemented\nmethod.\n\n## Compiling to WebAssembly\n\n[See this doc](wasm/README.md)\n\n## Community\n\n[![Discord Banner](https://discordapp.com/api/guilds/1043121930691149845/widget.png?style=banner2)][discord]\n\nChat with us on [Discord][discord].\n\n## Code of conduct\n\nOur code of conduct [can be found here](code-of-conduct.md).\n\n## Credit\n\nThe initial work was based on\n[windelbouwman/rspython](https://github.com/windelbouwman/rspython) and\n[shinglyu/RustPython](https://github.com/shinglyu/RustPython)\n\n[discord]: https://discord.gg/vru8NypEhv\n\n## Links\n\nThese are some useful links to related projects:\n\n- https://github.com/ProgVal/pythonvm-rust\n- https://github.com/shinglyu/RustPython\n- https://github.com/windelbouwman/rspython\n\n## License\n\nThis project is licensed under the MIT license. Please see the\n[LICENSE](LICENSE) file for more details.\n\nThe [project logo](logo.png) is licensed under the CC-BY-4.0\nlicense. Please see the [LICENSE-logo](LICENSE-logo) file\nfor more details.\n"
        },
        {
          "name": "architecture",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 3.28125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at windel.bouwman@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "compiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "crawl_sourcecode.py",
          "type": "blob",
          "size": 2.1591796875,
          "content": "\"\"\" This script can be used to test the equivalence in parsing between\nrustpython and cpython.\n\nUsage example:\n\n$ python crawl_sourcecode.py crawl_sourcecode.py > cpython.txt\n$ cargo run crawl_sourcecode.py crawl_sourcecode.py > rustpython.txt\n$ diff cpython.txt rustpython.txt\n\"\"\"\n\n\nimport ast\nimport sys\nimport symtable\nimport dis\n\nfilename = sys.argv[1]\nprint('Crawling file:', filename)\n\n\nwith open(filename, 'r') as f:\n    source = f.read()\n\nt = ast.parse(source)\nprint(t)\n\nshift = 3\ndef print_node(node, indent=0):\n    indents = ' ' * indent\n    if isinstance(node, ast.AST):\n        lineno = 'row={}'.format(node.lineno) if hasattr(node, 'lineno') else ''\n        print(indents, \"NODE\", node.__class__.__name__, lineno)\n        for field in node._fields:\n            print(indents,'-', field)\n            f = getattr(node, field)\n            if isinstance(f, list):\n                for f2 in f:\n                    print_node(f2, indent=indent+shift)\n            else:\n                print_node(f, indent=indent+shift)\n    else:\n        print(indents, 'OBJ', node)\n\nprint_node(t)\n\n# print(ast.dump(t))\nflag_names = [\n    'is_referenced',\n    'is_assigned',\n    'is_global',\n    'is_local',\n    'is_parameter',\n    'is_free',\n]\n\ndef print_table(table, indent=0):\n    indents = ' ' * indent\n    print(indents, 'table:', table.get_name())\n    print(indents, ' ', 'name:', table.get_name())\n    print(indents, ' ', 'type:', table.get_type())\n    print(indents, ' ', 'line:', table.get_lineno())\n    print(indents, ' ', 'identifiers:', table.get_identifiers())\n    print(indents, ' ', 'Syms:')\n    for sym in table.get_symbols():\n        flags = []\n        for flag_name in flag_names:\n            func = getattr(sym, flag_name)\n            if func():\n                flags.append(flag_name)\n        print(indents, '   sym:', sym.get_name(), 'flags:', ' '.join(flags))\n    if table.has_children():\n        print(indents, ' ', 'Child tables:')\n        for child in table.get_children():\n            print_table(child, indent=indent+shift)\n\ntable = symtable.symtable(source, 'a', 'exec')\nprint_table(table)\n\nprint()\nprint('======== dis.dis ========')\nprint()\nco = compile(source, filename, 'exec')\ndis.dis(co)\n"
        },
        {
          "name": "demo_closures.py",
          "type": "blob",
          "size": 0.11328125,
          "content": "\n\ndef foo(x):\n    def bar(z):\n        return z + x\n    return bar\n\nf = foo(9)\ng = foo(10)\n\nprint(f(2))\nprint(g(2))\n\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 11.021484375,
          "content": "# This template contains all of the possible sections and their default values\n\n# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# The values provided in this template are the default values that will be used\n# when any section or field is not specified in your own configuration\n\n# Root options\n\n# The graph table configures how the dependency graph is constructed and thus\n# which crates the checks are performed against\n[graph]\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n    # The triple can be any string, but only the target triples built in to\n    # rustc (as of 1.40) can be checked against actual config expressions\n    #\"x86_64-unknown-linux-musl\",\n    # You can also specify which target_features you promise are enabled for a\n    # particular target. target_features are currently not validated against\n    # the actual valid features supported by the target architecture.\n    #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n# When creating the dependency graph used as the source of truth when checks are\n# executed, this field can be used to prune crates from the graph, removing them\n# from the view of cargo-deny. This is an extremely heavy hammer, as if a crate\n# is pruned from the graph, all of its dependencies will also be pruned unless\n# they are connected to another crate in the graph that hasn't been pruned,\n# so it should be used with care. The identifiers are [Package ID Specifications]\n# (https://doc.rust-lang.org/cargo/reference/pkgid-spec.html)\n#exclude = []\n# If true, metadata will be collected with `--all-features`. Note that this can't\n# be toggled off if true, if you want to conditionally enable `--all-features` it\n# is recommended to pass `--all-features` on the cmd line instead\nall-features = false\n# If true, metadata will be collected with `--no-default-features`. The same\n# caveat with `all-features` applies\nno-default-features = false\n# If set, these feature will be enabled when collecting metadata. If `--features`\n# is specified on the cmd line they will take precedence over this option.\n#features = []\n\n# The output table provides options for how/if diagnostics are outputted\n[output]\n# When outputting inclusion graphs in diagnostics that include features, this\n# option can be used to specify the depth at which feature edges will be added.\n# This option is included since the graphs can be quite large and the addition\n# of features from the crate(s) to all of the graph roots can be far too verbose.\n# This option can be overridden via `--feature-depth` on the cmd line\nfeature-depth = 1\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\n# The path where the advisory databases are cloned/fetched into\n#db-path = \"$CARGO_HOME/advisory-dbs\"\n# The url(s) of the advisory databases to use\n#db-urls = [\"https://github.com/rustsec/advisory-db\"]\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = [\n    #\"RUSTSEC-0000-0000\",\n    #{ id = \"RUSTSEC-0000-0000\", reason = \"you can specify a reason the advisory is ignored\" },\n    #\"a-crate-that-is-yanked@0.1.1\", # you can also ignore yanked crate versions if you wish\n    #{ crate = \"a-crate-that-is-yanked@0.1.1\", reason = \"you can specify why you are ignoring the yanked crate\" },\n]\n# If this is true, then cargo deny will use the git executable to fetch advisory database.\n# If this is false, then it uses a built-in git library.\n# Setting this to true can be helpful if you have special authentication requirements that cargo-deny does not support.\n# See Git Authentication for more information about setting up git authentication.\n#git-fetch-with-cli = true\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"Apache-2.0 WITH LLVM-exception\",\n    \"BSL-1.0\",\n    \"LGPL-3.0\",\n    \"Zlib\",\n    \"Unicode-DFS-2016\",\n    \"CC0-1.0\",\n    \"BSD-2-Clause\",\n    \"BSD-3-Clause\",\n    \"Python-2.0.1\"\n]\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # Each entry is the crate and version constraint, and its specific allow\n    # list\n    #{ allow = [\"Zlib\"], crate = \"adler32\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n#[[licenses.clarify]]\n# The package spec the clarification applies to\n#crate = \"ring\"\n# The SPDX expression for the license requirements of the crate\n#expression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\n#license-files = [\n# Each entry is a crate relative path, and the (opaque) hash of its contents\n#{ path = \"LICENSE\", hash = 0xbd0eed23 }\n#]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries.\n# To see how to mark a crate as unpublished (to the official registry),\n# visit https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field.\nignore = false\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n    #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"warn\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# The default lint level for `default` features for crates that are members of\n# the workspace that is being checked. This can be overridden by allowing/denying\n# `default` on a crate-by-crate basis if desired.\nworkspace-default-features = \"allow\"\n# The default lint level for `default` features for external crates that are not\n# members of the workspace. This can be overridden by allowing/denying `default`\n# on a crate-by-crate basis if desired.\nexternal-default-features = \"allow\"\n# List of crates that are allowed. Use with care!\nallow = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is allowed\" },\n]\n# List of crates to deny\ndeny = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is banned\" },\n    # Wrapper crates can optionally be specified to allow the crate when it\n    # is a direct dependency of the otherwise banned crate\n    #{ crate = \"ansi_term@0.11.0\", wrappers = [\"this-crate-directly-depends-on-ansi_term\"] },\n]\n\n# List of features to allow/deny\n# Each entry the name of a crate and a version range. If version is\n# not specified, all versions will be matched.\n#[[bans.features]]\n#crate = \"reqwest\"\n# Features to not allow\n#deny = [\"json\"]\n# Features to allow\n#allow = [\n#    \"rustls\",\n#    \"__rustls\",\n#    \"__tls\",\n#    \"hyper-rustls\",\n#    \"rustls\",\n#    \"rustls-pemfile\",\n#    \"rustls-tls-webpki-roots\",\n#    \"tokio-rustls\",\n#    \"webpki-roots\",\n#]\n# If true, the allowed features must exactly match the enabled feature set. If\n# this is set there is no point setting `deny`\n#exact = true\n\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    \"windows_x86_64_msvc\",\n    \"windows_x86_64_gnullvm\",\n    \"windows_x86_64_gnu\",\n    \"windows_i686_msvc\",\n    \"windows_i686_gnu\",\n    \"windows_aarch64_msvc\",\n    \"windows_aarch64_gnullvm\",\n    \"windows-targets\",\n    \"windows-sys\",\n\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason why it can't be updated/removed\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite.\nskip-tree = [\n    #\"ansi_term@0.11.0\", # will be skipped along with _all_ of its direct and transitive dependencies\n    #{ crate = \"ansi_term@0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"warn\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = [\"https://github.com/RustPython/Parser.git\", \"https://github.com/RustPython/__doc__\"]\n"
        },
        {
          "name": "derive-impl",
          "type": "tree",
          "content": null
        },
        {
          "name": "derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jit",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 18.3427734375,
          "content": null
        },
        {
          "name": "pdc.sh",
          "type": "blob",
          "size": 1.935546875,
          "content": "\n# Pre Delivery Check - or PDC for short - runs all build and check steps.\n# The intention is to run all checks before delivering (or raising a PR or committing or what ever you want to use it for).\n#\n# PDC executes all of the configured actions in the given order and reports which of them failed, \n# without stopping in case of an fail. \n# The actions in the given version are the RustPython CI steps plus a debug build in advance. \n# So you can run all of the checks in advance with one command.\n#\n# If you want to customize it or adapt the checks, just add or remove it from/ to the ACTIONS\n\n# Preparation steps run before the first action is executed\n# Typically we clear here the python cache to prevent dirty\n# test results from cached python programs.\nPRE_GLOBAL=(\"clear_pycache\")\n\n# Postprocessing steps run after the last ACTION has finished\nPOST_GLOBAL=()\n\n# Preprocessing steps run before each action is executed\nPRE_ACT=()\n\n# Postprocessing steps run after each action is executed\nPOST_ACT=()\n\nACTIONS=(\"cargo build\" \"cargo build --release\" \"cargo fmt --all\" \"cargo clippy --all -- -Dwarnings\" \"cargo test --all\" \"cargo run --release -- -m test -v\" \"cd extra_tests\" \"pytest\" \"cd ..\")\n\n# Usually, there should be no need to adapt the remaining file, when adding or removing actions.\n\n# clears the python cache or RustPython\nclear_pycache() { find . -name __pycache__ -type d -exec rm -r {} \\; ; }\n\nRUSTPYTHONPATH=Lib\nexport RUSTPYTHONPATH\n\nACT_RES=0\nFAILS=()\n\nfor pre in \"${PRE_GLOBAL[@]}\"; do\n    $pre\ndone\n\nfor act in \"${ACTIONS[@]}\"; do\n\n    for pre in \"${PRE_ACTION[@]}\"; do\n        $pre\n    done\n\n\t$act\n\tif ! [ $? -eq  0 ]; then\n\t\tACT_RES=1\n\t\tFAILS+=(\"${act}\")\n\tfi\n\n    for pst in \"${POST_ACTION[@]}\"; do\n        $pst\n    done\ndone\n\nfor pst in \"${POST_GLOBAL[@]}\"; do\n    $pst\ndone\n\necho \necho\necho \"*********************\"\nif ! [ $ACT_RES -eq 0 ]; then\n\techo \"PDC failed\"\n\tfor el in \"${FAILS[@]}\"; do\n\t\techo \"     Fail ${el}\"\n\tdone\n\techo\nelse\n\techo \"PDC passed\"\nfi\n"
        },
        {
          "name": "pylib",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[toolchain]\nchannel = \"stable\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.0166015625,
          "content": "edition = \"2021\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stdlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm",
          "type": "tree",
          "content": null
        },
        {
          "name": "wapm.toml",
          "type": "blob",
          "size": 0.4169921875,
          "content": "[package]\nname = \"rustpython\"\nversion = \"0.4.0\"\ndescription = \"A Python-3 (CPython >= 3.5.0) Interpreter written in Rust 🐍 😱 🤘\"\nlicense-file = \"LICENSE\"\nreadme = \"README.md\"\nrepository = \"https://github.com/RustPython/RustPython\"\n\n[[module]]\nname = \"rustpython\"\nsource = \"target/wasm32-wasip1/release/rustpython.wasm\"\nabi = \"wasi\"\n\n[[command]]\nname = \"rustpython\"\nmodule = \"rustpython\"\n\n[fs]\n\"/lib/rustpython\" = \"Lib\"\n"
        },
        {
          "name": "wasm",
          "type": "tree",
          "content": null
        },
        {
          "name": "whats_left.py",
          "type": "blob",
          "size": 15.2138671875,
          "content": "#!/usr/bin/env -S python3 -I\n\n# This script generates Lib/snippets/whats_left_data.py with these variables defined:\n# expected_methods - a dictionary mapping builtin objects to their methods\n# cpymods - a dictionary mapping module names to their contents\n# libdir - the location of RustPython's Lib/ directory.\n\n#\n# TODO: include this:\n# which finds all modules it has available and\n# creates a Python dictionary mapping module names to their contents, which is\n# in turn used to generate a second Python script that also finds which modules\n# it has available and compares that against the first dictionary we generated.\n# We then run this second generated script with RustPython.\n\nimport argparse\nimport re\nimport os\nimport re\nimport sys\nimport json\nimport warnings\nimport inspect\nimport subprocess\nimport platform\nfrom pydoc import ModuleScanner\n\nif not sys.flags.isolated:\n    print(\"running without -I option.\")\n    print(\"python -I whats_left.py\")\n    exit(1)\n\nGENERATED_FILE = \"extra_tests/not_impl.py\"\n\nimplementation = platform.python_implementation()\nif implementation != \"CPython\":\n    sys.exit(f\"whats_left.py must be run under CPython, got {implementation} instead\")\nif sys.version_info[:2] < (3, 12):\n    sys.exit(f\"whats_left.py must be run under CPython 3.12 or newer, got {implementation} {sys.version} instead\")\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description=\"Process some integers.\")\n    parser.add_argument(\n        \"--signature\",\n        action=\"store_true\",\n        help=\"print functions whose signatures don't match CPython's\",\n    )\n    parser.add_argument(\n        \"--doc\",\n        action=\"store_true\",\n        help=\"print elements whose __doc__ don't match CPython's\",\n    )\n    parser.add_argument(\n        \"--json\",\n        action=\"store_true\",\n        help=\"print output as JSON (instead of line by line)\",\n    )\n\n    args = parser.parse_args()\n    return args\n\n\nargs = parse_args()\n\n\n# modules suggested for deprecation by PEP 594 (www.python.org/dev/peps/pep-0594/)\n# some of these might be implemented, but they are not a priority\nPEP_594_MODULES = {\n    \"aifc\",\n    \"asynchat\",\n    \"asyncore\",\n    \"audioop\",\n    \"binhex\",\n    \"cgi\",\n    \"cgitb\",\n    \"chunk\",\n    \"crypt\",\n    \"formatter\",\n    \"fpectl\",\n    \"imghdr\",\n    \"imp\",\n    \"macpath\",\n    \"msilib\",\n    \"nntplib\",\n    \"nis\",\n    \"ossaudiodev\",\n    \"parser\",\n    \"pipes\",\n    \"smtpd\",\n    \"sndhdr\",\n    \"spwd\",\n    \"sunau\",\n    \"telnetlib\",\n    \"uu\",\n    \"xdrlib\",\n}\n\n# CPython specific modules (mostly consisting of templates/tests)\nCPYTHON_SPECIFIC_MODS = {\n    'xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz'\n    '_testbuffer', '_testcapi', '_testimportmultiple', '_testinternalcapi', '_testmultiphase',\n}\n\nIGNORED_MODULES = {\"this\", \"antigravity\"} | PEP_594_MODULES | CPYTHON_SPECIFIC_MODS\n\nsys.path = [\n    path\n    for path in sys.path\n    if (\"site-packages\" not in path and \"dist-packages\" not in path)\n]\n\n\ndef attr_is_not_inherited(type_, attr):\n    \"\"\"\n    returns True if type_'s attr is not inherited from any of its base classes\n    \"\"\"\n    bases = type_.__mro__[1:]\n    return getattr(type_, attr) not in (getattr(base, attr, None) for base in bases)\n\n\ndef extra_info(obj):\n    if callable(obj) and not inspect._signature_is_builtin(obj):\n        doc = inspect.getdoc(obj)\n        try:\n            sig = str(inspect.signature(obj))\n            # remove function memory addresses\n            return {\n                \"sig\": re.sub(\" at 0x[0-9A-Fa-f]+\", \" at 0xdeadbeef\", sig),\n                \"doc\": doc,\n            }\n        except Exception as e:\n            exception = repr(e)\n            # CPython uses ' RustPython uses \"\n            if exception.replace('\"', \"'\").startswith(\"ValueError('no signature found\"):\n                return {\n                    \"sig\": \"ValueError('no signature found')\",\n                    \"doc\": doc,\n                }\n\n            return {\n                \"sig\": exception,\n                \"doc\": doc,\n            }\n\n    return {\n        \"sig\": None,\n        \"doc\": None,\n    }\n\n\ndef name_sort_key(name):\n    if name == \"builtins\":\n        return \"\"\n    if name[0] == \"_\":\n        return name[1:] + \"1\"\n    return name + \"2\"\n\n\ndef gen_methods():\n    types = [\n        bool,\n        bytearray,\n        bytes,\n        complex,\n        dict,\n        enumerate,\n        filter,\n        float,\n        frozenset,\n        int,\n        list,\n        map,\n        memoryview,\n        range,\n        set,\n        slice,\n        str,\n        super,\n        tuple,\n        object,\n        zip,\n        classmethod,\n        staticmethod,\n        property,\n        Exception,\n        BaseException,\n    ]\n    objects = [t.__name__ for t in types]\n    objects.append(\"type(None)\")\n\n    iters = [\n        \"type(bytearray().__iter__())\",\n        \"type(bytes().__iter__())\",\n        \"type(dict().__iter__())\",\n        \"type(dict().values().__iter__())\",\n        \"type(dict().items().__iter__())\",\n        \"type(dict().values())\",\n        \"type(dict().items())\",\n        \"type(set().__iter__())\",\n        \"type(list().__iter__())\",\n        \"type(range(0).__iter__())\",\n        \"type(str().__iter__())\",\n        \"type(tuple().__iter__())\",\n        \"type(memoryview(bytearray(b'0')).__iter__())\",\n    ]\n\n    methods = {}\n    for typ_code in objects + iters:\n        typ = eval(typ_code)\n        attrs = []\n        for attr in dir(typ):\n            if attr_is_not_inherited(typ, attr):\n                attrs.append((attr, extra_info(getattr(typ, attr))))\n        methods[typ.__name__] = (typ_code, extra_info(typ), attrs)\n\n    output = \"expected_methods = {\\n\"\n    for name in sorted(methods.keys(), key=name_sort_key):\n        typ_code, extra, attrs = methods[name]\n        output += f\" '{name}': ({typ_code}, {extra!r}, [\\n\"\n        for attr, attr_extra in attrs:\n            output += f\"    ({attr!r}, {attr_extra!r}),\\n\"\n        output += \" ]),\\n\"\n        if typ_code != objects[-1]:\n            output += \"\\n\"\n    output += \"}\\n\\n\"\n    return output\n\n\ndef scan_modules():\n    \"\"\"taken from the source code of help('modules')\n\n    https://github.com/python/cpython/blob/63298930fb531ba2bb4f23bc3b915dbf1e17e9e1/Lib/pydoc.py#L2178\"\"\"\n    modules = {}\n\n    def callback(path, modname, desc, modules=modules):\n        if modname and modname[-9:] == \".__init__\":\n            modname = modname[:-9] + \" (package)\"\n        if modname.find(\".\") < 0:\n            modules[modname] = 1\n\n    def onerror(modname):\n        callback(None, modname, None)\n\n    with warnings.catch_warnings():\n        # ignore warnings from importing deprecated modules\n        warnings.simplefilter(\"ignore\")\n        ModuleScanner().run(callback, onerror=onerror)\n    return list(modules.keys())\n\n\ndef import_module(module_name):\n    import io\n    from contextlib import redirect_stdout\n\n    # Importing modules causes ('Constant String', 2, None, 4) and\n    # \"Hello world!\" to be printed to stdout.\n    f = io.StringIO()\n    with warnings.catch_warnings(), redirect_stdout(f):\n        # ignore warnings caused by importing deprecated modules\n        warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n        try:\n            module = __import__(module_name)\n        except Exception as e:\n            return e\n    return module\n\n\ndef is_child(module, item):\n    import inspect\n\n    item_mod = inspect.getmodule(item)\n    return item_mod is module\n\n\ndef dir_of_mod_or_error(module_name, keep_other=True):\n    module = import_module(module_name)\n    item_names = sorted(set(dir(module)))\n    result = {}\n    for item_name in item_names:\n        item = getattr(module, item_name)\n        # don't repeat items imported from other modules\n        if keep_other or is_child(module, item) or inspect.getmodule(item) is None:\n            result[item_name] = extra_info(item)\n    return result\n\n\ndef gen_modules():\n    # check name because modules listed have side effects on import,\n    # e.g. printing something or opening a webpage\n    modules = {}\n    for mod_name in sorted(scan_modules(), key=name_sort_key):\n        if mod_name in IGNORED_MODULES:\n            continue\n        # when generating CPython list, ignore items defined by other modules\n        dir_result = dir_of_mod_or_error(mod_name, keep_other=False)\n        if isinstance(dir_result, Exception):\n            print(\n                f\"!!! {mod_name} skipped because {type(dir_result).__name__}: {str(dir_result)}\",\n                file=sys.stderr,\n            )\n            continue\n        modules[mod_name] = dir_result\n    return modules\n\n\noutput = \"\"\"\\\n# WARNING: THIS IS AN AUTOMATICALLY GENERATED FILE\n# EDIT extra_tests/not_impl_gen.sh, NOT THIS FILE.\n# RESULTS OF THIS TEST DEPEND ON THE CPYTHON\n# VERSION AND PYTHON ENVIRONMENT USED\n# TO RUN not_impl_mods_gen.py\n\n\"\"\"\n\noutput += gen_methods()\noutput += f\"\"\"\ncpymods = {gen_modules()!r}\nlibdir = {os.path.abspath(\"Lib/\").encode('utf8')!r}\n\n\"\"\"\n\n# Copy the source code of functions we will reuse in the generated script\nREUSED = [\n    attr_is_not_inherited,\n    extra_info,\n    dir_of_mod_or_error,\n    import_module,\n    is_child,\n]\nfor fn in REUSED:\n    output += \"\".join(inspect.getsourcelines(fn)[0]) + \"\\n\\n\"\n\n# Prevent missing variable linter errors from compare()\nexpected_methods = {}\ncpymods = {}\nlibdir = \"\"\n# This function holds the source code that will be run under RustPython\ndef compare():\n    import inspect\n    import io\n    import os\n    import re\n    import sys\n    import warnings\n    from contextlib import redirect_stdout\n    import json\n    import platform\n\n    def method_incompatibility_reason(typ, method_name, real_method_value):\n        has_method = hasattr(typ, method_name)\n        if not has_method:\n            return \"\"\n\n        is_inherited = not attr_is_not_inherited(typ, method_name)\n        if is_inherited:\n            return \"(inherited)\"\n\n        value = extra_info(getattr(typ, method_name))\n        if value != real_method_value:\n            return f\"{value} != {real_method_value}\"\n\n        return None\n\n    not_implementeds = {}\n    for name, (typ, real_value, methods) in expected_methods.items():\n        missing_methods = {}\n        for method, real_method_value in methods:\n            reason = method_incompatibility_reason(typ, method, real_method_value)\n            if reason is not None:\n                missing_methods[method] = reason\n        if missing_methods:\n            not_implementeds[name] = missing_methods\n\n    if platform.python_implementation() == \"CPython\":\n        if not_implementeds:\n            sys.exit(\"ERROR: CPython should have all the methods\")\n\n    mod_names = [\n        name.decode()\n        for name, ext in map(os.path.splitext, os.listdir(libdir))\n        if ext == b\".py\" or os.path.isdir(os.path.join(libdir, name))\n    ]\n    mod_names += list(sys.builtin_module_names)\n    # Remove easter egg modules\n    mod_names = sorted(set(mod_names) - {\"this\", \"antigravity\"})\n\n    rustpymods = {mod: dir_of_mod_or_error(mod) for mod in mod_names}\n\n    result = {\n        \"cpython_modules\": {},\n        \"implemented\": {},\n        \"not_implemented\": {},\n        \"failed_to_import\": {},\n        \"missing_items\": {},\n        \"mismatched_items\": {},\n        \"mismatched_doc_items\": {},\n    }\n    for modname, cpymod in cpymods.items():\n        rustpymod = rustpymods.get(modname)\n        if rustpymod is None:\n            result[\"not_implemented\"][modname] = None\n        elif isinstance(rustpymod, Exception):\n            result[\"failed_to_import\"][modname] = rustpymod.__class__.__name__ + str(rustpymod)\n        else:\n            implemented_items = sorted(set(cpymod) & set(rustpymod))\n            mod_missing_items = set(cpymod) - set(rustpymod)\n            mod_missing_items = sorted(\n                f\"{modname}.{item}\" for item in mod_missing_items\n            )\n            mod_mismatched_items = [\n                (f\"{modname}.{item}\", rustpymod[item][\"sig\"], cpymod[item][\"sig\"])\n                for item in implemented_items\n                if rustpymod[item][\"sig\"] != cpymod[item][\"sig\"]\n                and not isinstance(cpymod[item][\"sig\"], Exception)\n            ]\n            mod_mismatched_doc_items = [\n                (f\"{modname}.{item}\", rustpymod[item][\"doc\"], cpymod[item][\"doc\"])\n                for item in implemented_items\n                if rustpymod[item][\"doc\"] != cpymod[item][\"doc\"]\n            ]\n            if mod_missing_items or mod_mismatched_items:\n                if mod_missing_items:\n                    result[\"missing_items\"][modname] = mod_missing_items\n                if mod_mismatched_items:\n                    result[\"mismatched_items\"][modname] = mod_mismatched_items\n                if mod_mismatched_doc_items:\n                    result[\"mismatched_doc_items\"][modname] = mod_mismatched_doc_items\n            else:\n                result[\"implemented\"][modname] = None\n\n    result[\"cpython_modules\"] = cpymods\n    result[\"not_implementeds\"] = not_implementeds\n\n    print(json.dumps(result))\n\n\ndef remove_one_indent(s):\n    indent = \"    \"\n    return s[len(indent) :] if s.startswith(indent) else s\n\n\ncompare_src = inspect.getsourcelines(compare)[0][1:]\noutput += \"\".join(remove_one_indent(line) for line in compare_src)\n\nwith open(GENERATED_FILE, \"w\", encoding='utf-8') as f:\n    f.write(output + \"\\n\")\n\n\nsubprocess.run([\"cargo\", \"build\", \"--release\", \"--features=ssl\"], check=True)\nresult = subprocess.run(\n    [\"cargo\", \"run\", \"--release\", \"--features=ssl\", \"-q\", \"--\", GENERATED_FILE],\n    env={**os.environ.copy(), \"RUSTPYTHONPATH\": \"Lib\"},\n    text=True,\n    capture_output=True,\n)\n# The last line should be json output, the rest of the lines can contain noise\n# because importing certain modules can print stuff to stdout/stderr\nresult = json.loads(result.stdout.splitlines()[-1])\n\nif args.json:\n    print(json.dumps(result))\n    sys.exit()\n\n\n# missing entire modules\nprint(\"# modules\")\nfor modname in result[\"not_implemented\"]:\n    print(modname, \"(entire module)\")\nfor modname, exception in result[\"failed_to_import\"].items():\n    print(f\"{modname} (exists but not importable: {exception})\")\n\n# missing from builtins\nprint(\"\\n# builtin items\")\nfor module, missing_methods in result[\"not_implementeds\"].items():\n    for method, reason in missing_methods.items():\n        print(f\"{module}.{method}\" + (f\" {reason}\" if reason else \"\"))\n\n# missing from modules\nprint(\"\\n# stdlib items\")\nfor modname, missing in result[\"missing_items\"].items():\n    for item in missing:\n        print(item)\n\nif args.signature:\n    print(\"\\n# mismatching signatures (warnings)\")\n    for modname, mismatched in result[\"mismatched_items\"].items():\n        for i, (item, rustpy_value, cpython_value) in enumerate(mismatched):\n            if cpython_value and cpython_value.startswith(\"ValueError(\"):\n                continue  # these items will never match\n            if rustpy_value is None or rustpy_value.startswith(\"ValueError(\"):\n                rustpy_value = f\" {rustpy_value}\"\n            print(f\"{item}{rustpy_value}\")\n            if cpython_value is None:\n                cpython_value = f\" {cpython_value}\"\n            print(f\"{' ' * len(item)}{cpython_value}\")\n            if i < len(mismatched) - 1:\n                print()\n\nif args.doc:\n    print(\"\\n# mismatching `__doc__`s (warnings)\")\n    for modname, mismatched in result[\"mismatched_doc_items\"].items():\n        for (item, rustpy_doc, cpython_doc) in mismatched:\n            print(f\"{item} {repr(rustpy_doc)} != {repr(cpython_doc)}\")\n\n\nprint()\nprint(\"# summary\")\nfor error_type, modules in result.items():\n    print(\"# \", error_type, len(modules))\n"
        }
      ]
    }
  ]
}