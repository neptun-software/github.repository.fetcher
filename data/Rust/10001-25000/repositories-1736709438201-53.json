{
  "metadata": {
    "timestamp": 1736709438201,
    "page": 53,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fathyb/carbonyl",
      "stars": 14854,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": "/build\n!/build/browser\n/chromium\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": ".DS_Store\nnode_modules/\n\n/.ccache\n/.git_cache\n/.vscode\n/build\n/chromium/*\n!/chromium/.gclient\n!/chromium/depot_tools\n!/chromium/patches\n/packages/*/build\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1328125,
          "content": "[submodule \"chromium/depot_tools\"]\n\tpath = chromium/depot_tools\n\turl = https://chromium.googlesource.com/chromium/tools/depot_tools.git\n"
        },
        {
          "name": ".refloat",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 9.3466796875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d261e256854913907f67ed06efbc3338dfe6179796deefc1ff763fc1aee5535\"\n\n[[package]]\nname = \"carbonyl\"\nversion = \"0.0.3\"\ndependencies = [\n \"chrono\",\n \"libc\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b0a3d9ed01224b22057780a37bb8c5dbfe1be8ba48678e7bf57ec4b385411f\"\ndependencies = [\n \"iana-time-zone\",\n \"js-sys\",\n \"num-integer\",\n \"num-traits\",\n \"time\",\n \"wasm-bindgen\",\n \"winapi\",\n]\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5827cebf4670468b8772dd191856768aedcb1b0278a04f989f7766351917b9dc\"\n\n[[package]]\nname = \"cxx\"\nversion = \"1.0.88\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322296e2f2e5af4270b54df9e85a02ff037e271af20ba3e7fe1575515dc840b8\"\ndependencies = [\n \"cc\",\n \"cxxbridge-flags\",\n \"cxxbridge-macro\",\n \"link-cplusplus\",\n]\n\n[[package]]\nname = \"cxx-build\"\nversion = \"1.0.88\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"017a1385b05d631e7875b1f151c9f012d37b53491e2a87f65bff5c262b2111d8\"\ndependencies = [\n \"cc\",\n \"codespan-reporting\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"scratch\",\n \"syn\",\n]\n\n[[package]]\nname = \"cxxbridge-flags\"\nversion = \"1.0.88\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c26bbb078acf09bc1ecda02d4223f03bdd28bd4874edcb0379138efc499ce971\"\n\n[[package]]\nname = \"cxxbridge-macro\"\nversion = \"1.0.88\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"357f40d1f06a24b60ae1fe122542c1fb05d28d32acb2aed064e84bc2ad1e252e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.53\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64c122667b287044802d6ce17ee2ddf13207ed924c712de9a66a5814d5b64765\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"winapi\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0703ae284fc167426161c2e3f1da3ea71d94b21bedbcc9494e92b28e334e3dca\"\ndependencies = [\n \"cxx\",\n \"cxx-build\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49409df3e3bf0856b916e2ceaca09ee28e6871cf7d9ce97a692cacfdb2a25a47\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.139\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"201de327520df007757c1f0adce6e827fe8562fbc28bfd9c15571c66ca1f5f79\"\n\n[[package]]\nname = \"link-cplusplus\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecd207c9c713c34f95a097a5b029ac2ce6010530c7b49d7fea24d977dede04f5\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9\"\ndependencies = [\n \"autocfg\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f61fba1741ea2b3d6a1e3178721804bb716a68a6aeba1149b5d52e3d464ea66\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ef7d57beacfaf2d8aee5937dab7b7f28de3cb8b1828479bb5de2a7106f2bae2\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8856d8364d252a14d474036ea1358d63c9e6965c8e5c1885c18f73d70bff9c7b\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"scratch\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddccb15bcce173023b3fedd9436f882a0739b8dfb45e4f6b6002bee5929f61b2\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.107\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f4064b5b16e03ae50984a5a8ed5d4f8803e6bc1fd170a3cda91a1be4b18e3f5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b797afad3f312d1c66a56d11d0316f916356d11bd158fbc6ca6389ff6bf805a\"\ndependencies = [\n \"libc\",\n \"wasi\",\n \"winapi\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84a22b9f218b40614adcb3f4ff08b703773ad44fa9423e4e0d346d5db86e4ebc\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fdbf052a0783de01e944a6ce7a8cb939e295b1e7be835a1112c3b9a7f047a5a\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a143597ca7c7793eff794def352d41792a93c481eb1042423ff7ff72ba2c31f\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eaf9f5aceeec8be17c128b2e93e031fb8a4d469bb9c4ae2d7dc1888b26887268\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c8ffb332579b0557b52d268b91feab8df3615f265d5270fec2a8c95b17c1142\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"052be0f94026e6cbc75cdefc9bae13fd6052cdcaf532fa6c45e7ae33a1e6c810\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07bc0c051dc5f23e307b13285f9d75df86bfdf816c5721e573dec1f9b8aa193c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c38c045535d93ec4f0b4defec448e4291638ee608530863b1e2ba115d4fff7f\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.23046875,
          "content": "[package]\nname = \"carbonyl\"\nversion = \"0.0.3\"\nedition = \"2021\"\n\n[dependencies]\nlibc = \"0.2\"\nunicode-width = \"0.1.10\"\nunicode-segmentation = \"1.10.0\"\nchrono = \"0.4.23\"\n\n[lib]\nname = \"carbonyl\"\npath = \"src/lib.rs\"\ncrate-type = [\"cdylib\"]\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.361328125,
          "content": "FROM rust:1.67 AS cross-compile\n\nRUN apt-get update && \\\n    apt-get install -y \\\n        zip g++-aarch64-linux-gnu g++-x86-64-linux-gnu libc6-dev-arm64-cross libc6-dev-amd64-cross && \\\n    rustup target add aarch64-unknown-linux-gnu x86_64-unknown-linux-gnu && \\\n    rustup toolchain install stable-aarch64-unknown-linux-gnu stable-x86_64-unknown-linux-gnu && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV AR_AARCH64_UNKNOWN_LINUX_GNU=aarch64-linux-gnu-ar\nENV CC_AARCH64_UNKNOWN_LINUX_GNU=aarch64-linux-gnu-gcc\nENV CXX_AARCH64_UNKNOWN_LINUX_GNU=aarch64-linux-gnu-g++\nENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc\n\nENV AR_X86_64_UNKNOWN_LINUX_GNU=x86_64-linux-gnu-ar\nENV CC_X86_64_UNKNOWN_LINUX_GNU=x86_64-linux-gnu-gcc\nENV CXX_X86_64_UNKNOWN_LINUX_GNU=x86_64-linux-gnu-g++\nENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=x86_64-linux-gnu-gcc\n\nFROM debian:bullseye-slim\n\nRUN groupadd -r carbonyl && \\\n    useradd -r -g carbonyl carbonyl && \\\n    mkdir -p /carbonyl/data && \\\n    chown -R carbonyl:carbonyl /carbonyl && \\\n    apt-get update && \\\n    apt-get install -y libasound2 libexpat1 libfontconfig1 libnss3 && \\\n    rm -rf /var/lib/apt/lists/*\n\nUSER carbonyl\nVOLUME /carbonyl/data\nENV HOME=/carbonyl/data\n\nCOPY . /carbonyl\n\nRUN /carbonyl/carbonyl --version\n\nENTRYPOINT [\"/carbonyl/carbonyl\", \"--no-sandbox\", \"--disable-dev-shm-usage\", \"--user-data-dir=/carbonyl/data\"]\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 1.6630859375,
          "content": "use std::path::PathBuf;\n\n#[cfg(target_arch = \"x86_64\")]\nfn link_sysroot() {\n    let sysroot_path = PathBuf::from(\"./chromium/src/build/linux/debian_bullseye_amd64-sysroot\");\n\n    if sysroot_path.is_dir() {\n        println!(\"cargo:rustc-link-search=chromium/src/build/linux/debian_bullseye_amd64-sysroot/lib/x86_64-linux-gnu\");\n        println!(\"cargo:rustc-link-search=chromium/src/build/linux/debian_bullseye_amd64-sysroot/usr/lib/x86_64-linux-gnu\");\n\n        println!(\n            \"cargo:rustc-link-arg=--sysroot=./chromium/src/build/linux/debian_bullseye_amd64-sysroot\"\n        );\n    } else {\n        println!(\"cargo:warning={}\", \"x86_64 debian sysroot provided by chromium was not found!\");\n        println!(\"cargo:warning={}\", \"carbonyl may fail to link against a proper libc!\");\n    }\n}\n\n#[cfg(target_arch = \"x86\")]\nfn link_sysroot() {\n    let sysroot_path = PathBuf::from(\"./chromium/src/build/linux/debian_bullseye_i386-sysroot\");\n\n    if sysroot_path.is_dir() {\n        println!(\"cargo:rustc-link-search=chromium/src/build/linux/debian_bullseye_i386-sysroot/lib/i386-linux-gnu\");\n        println!(\"cargo:rustc-link-search=chromium/src/build/linux/debian_bullseye_i386-sysroot/usr/lib/i386-linux-gnu\");\n\n        println!(\n            \"cargo:rustc-link-arg=--sysroot=./chromium/src/build/linux/debian_bullseye_i386-sysroot\"\n        );\n    } else {\n        println!(\"cargo:warning={}\", \"x86 debian sysroot provided by chromium was not found!\");\n        println!(\"cargo:warning={}\", \"carbonyl may fail to link against a proper libc!\");\n    }\n}\n\n#[cfg(not(any(target_arch = \"x86_64\", target_arch = \"x86\")))]\nfn link_sysroot() {\n    // Intentionally left blank.\n}\n\nfn main() {\n    link_sysroot();\n}\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 3.015625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [0.0.3] - 2023-02-18\n\n### 🚀 Features\n\n- Add `--help` and `--version` ([#105](https://github.com/fathyb/carbonyl/issues/105))\n- Add logo and description to `--help` ([#106](https://github.com/fathyb/carbonyl/issues/106))\n- Use Cmd instead of Alt for navigation shortcuts ([#109](https://github.com/fathyb/carbonyl/issues/109))\n- Enable h.264 support ([#103](https://github.com/fathyb/carbonyl/issues/103))\n- Introduce quadrant rendering ([#120](https://github.com/fathyb/carbonyl/issues/120))\n\n### 🐛 Bug Fixes\n\n- Fix arguments parsing ([#108](https://github.com/fathyb/carbonyl/issues/108))\n- Fix missing module error on npm package ([#113](https://github.com/fathyb/carbonyl/issues/113))\n- Enable threaded compositing with bitmap mode\n- Fix idling CPU usage ([#126](https://github.com/fathyb/carbonyl/issues/126))\n- Package proper library in binaries ([#127](https://github.com/fathyb/carbonyl/issues/127))\n\n### 📖 Documentation\n\n- Update download links\n- Fix commit_preprocessors url ([#102](https://github.com/fathyb/carbonyl/issues/102))\n- Add `--rm` to Docker example ([#101](https://github.com/fathyb/carbonyl/issues/101))\n\n## [0.0.2] - 2023-02-09\n\n### 🚀 Features\n\n- Better true color detection\n- Linux support\n- Xterm title\n- Hide stderr unless crash\n- Add `--debug` to print stderr on exit ([#23](https://github.com/fathyb/carbonyl/issues/23))\n- Add navigation UI ([#86](https://github.com/fathyb/carbonyl/issues/86))\n- Handle terminal resize ([#87](https://github.com/fathyb/carbonyl/issues/87))\n\n### 🐛 Bug Fixes\n\n- Parser fixes\n- Properly enter tab and return keys\n- Fix some special characters ([#35](https://github.com/fathyb/carbonyl/issues/35))\n- Improve terminal size detection ([#36](https://github.com/fathyb/carbonyl/issues/36))\n- Allow working directories that contain spaces ([#63](https://github.com/fathyb/carbonyl/issues/63))\n- Do not use tags for checkout ([#64](https://github.com/fathyb/carbonyl/issues/64))\n- Do not checkout nacl ([#79](https://github.com/fathyb/carbonyl/issues/79))\n- Wrap zip files in carbonyl folder ([#88](https://github.com/fathyb/carbonyl/issues/88))\n- Fix WebGL support on Linux ([#90](https://github.com/fathyb/carbonyl/issues/90))\n- Fix initial freeze on Docker ([#91](https://github.com/fathyb/carbonyl/issues/91))\n\n### 📖 Documentation\n\n- Upload demo videos\n- Fix video layout\n- Fix a typo ([#1](https://github.com/fathyb/carbonyl/issues/1))\n- Fix a typo `ie.` -> `i.e.` ([#9](https://github.com/fathyb/carbonyl/issues/9))\n- Fix build instructions ([#15](https://github.com/fathyb/carbonyl/issues/15))\n- Add ascii logo\n- Add comparisons ([#34](https://github.com/fathyb/carbonyl/issues/34))\n- Add OS support ([#50](https://github.com/fathyb/carbonyl/issues/50))\n- Add download link\n- Fix linux download links\n- Document shared library\n- Fix a typo (`know` -> `known`) ([#71](https://github.com/fathyb/carbonyl/issues/71))\n- Add license\n\n### Build\n\n- Various build system fixes ([#20](https://github.com/fathyb/carbonyl/issues/20))\n\n"
        },
        {
          "name": "chromium",
          "type": "tree",
          "content": null
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 1.4248046875,
          "content": "[changelog]\nheader = \"\"\"\n# Changelog\\n\nAll notable changes to this project will be documented in this file.\\n\n\"\"\"\nbody = \"\"\"\n{% if version %}\\\n    ## [{{ version | trim_start_matches(pat=\"v\") }}] - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n{% else %}\\\n    ## [unreleased]\n{% endif %}\\\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | striptags | trim | upper_first }}\n    {% for commit in commits %}\n        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}\\\n            {%- if commit.links %} ({% for link in commit.links %}[{{link.text}}]({{link.href}}){% endfor -%}){% endif %}\\\n    {% endfor %}\n{% endfor %}\\n\n\"\"\"\ntrim = true\nfooter = \"\"\n\n[git]\nconventional_commits = true\nfilter_unconventional = true\nsplit_commits = false\ncommit_preprocessors = [\n    { pattern = \"#([0-9]+)\", replace = \"[#${1}](https://github.com/fathyb/carbonyl/issues/${1})\" }\n]\ncommit_parsers = [\n    { message = \"^feat\", group = \"<!-- 0 -->🚀 Features\" },\n    { message = \"^fix\", group = \"<!-- 1 -->🐛 Bug Fixes\" },\n    { message = \"^doc\", group = \"<!-- 2 -->📖 Documentation\" },\n    { message = \"^perf\", group = \"<!-- 3 -->⚡ Performance\"},\n    { message = \"^chore\", skip = true },\n    { body = \".*security\", group = \"<!-- 8 -->🔐 Security\"},\n]\nprotect_breaking_commits = false\nfilter_commits = false\ntag_pattern = \"v[0-9]*\"\nskip_tags = \"\"\nignore_tags = \"\"\ntopo_order = true\nsort_commits = \"oldest\"\n"
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 1.455078125,
          "content": "_Copyright © 2023, Fathy Boundjadj_\n_All rights reserved._\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the\n   names of its contributors may be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.07421875,
          "content": "{\n  \"name\": \"carbonyl\",\n  \"version\": \"0.0.3\",\n  \"license\": \"BSD-3-Clause\"\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 6.046875,
          "content": "<table align=\"center\">\n  <tbody>\n    <tr>\n      <td>\n        <p></p>\n        <pre>\n   O    O\n    \\  /\nO —— Cr —— O\n    /  \\\n   O    O</pre>\n      </td>\n      <td><h1>Carbonyl</h1></td>\n    </tr>\n  </tbody>\n</table>\n\nCarbonyl is a Chromium based browser built to run in a terminal. [Read the blog post](https://fathy.fr/carbonyl).\n\nIt supports pretty much all Web APIs including WebGL, WebGPU, audio and video playback, animations, etc..\n\nIt's snappy, starts in less than a second, runs at 60 FPS, and idles at 0% CPU usage. It does not require a window server (i.e. works in a safe-mode console), and even runs through SSH.\n\nCarbonyl originally started as [`html2svg`](https://github.com/fathyb/html2svg) and is now the runtime behind it.\n\n## Usage\n\n> Carbonyl on Linux without Docker requires the same dependencies as Chromium.\n\n### Docker\n\n```shell\n$ docker run --rm -ti fathyb/carbonyl https://youtube.com\n```\n\n### npm\n\n```console\n$ npm install --global carbonyl\n$ carbonyl https://github.com\n```\n\n### Binaries\n\n- [macOS amd64](https://github.com/fathyb/carbonyl/releases/download/v0.0.3/carbonyl.macos-amd64.zip)\n- [macOS arm64](https://github.com/fathyb/carbonyl/releases/download/v0.0.3/carbonyl.macos-arm64.zip)\n- [Linux amd64](https://github.com/fathyb/carbonyl/releases/download/v0.0.3/carbonyl.linux-amd64.zip)\n- [Linux arm64](https://github.com/fathyb/carbonyl/releases/download/v0.0.3/carbonyl.linux-arm64.zip)\n\n## Demo\n\n<table>\n  <tbody>\n    <tr>\n      <td>\n        <video src=\"https://user-images.githubusercontent.com/5746414/213682926-f1cc2de7-a38c-4125-9257-92faecfc7e24.mp4\">\n      </td>\n      <td>\n        <video src=\"https://user-images.githubusercontent.com/5746414/213682913-398d3d11-1af8-4ae6-a0cd-a7f878efd88b.mp4\">\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">\n        <video src=\"https://user-images.githubusercontent.com/5746414/213682918-d6396a4f-ee23-431d-828e-4ad6a00e690e.mp4\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## Known issues\n\n- Fullscreen mode not supported yet\n\n## Comparisons\n\n### Lynx\n\nLynx is the original terminal web browser, and the oldest one still maintained.\n\n#### Pros\n\n- When it understands a page, Lynx has the best layout, fully optimized for the terminal\n\n#### Cons\n\n> Some might sound like pluses, but Browsh and Carbonyl let you disable most of those if you'd like\n\n- Does not support a lot of modern web standards\n- Cannot run JavaScript/WebAssembly\n- Cannot view or play media (audio, video, DOOM)\n\n### Browsh\n\nBrowsh is the original \"normal browser into a terminal\" project. It starts Firefox in headless mode and connects to it through an automation protocol.\n\n#### Pro\n\n- It's easier to update the underlying browser: just update Firefox\n- This makes development easier: just install Firefox and compile the Go code in a few seconds\n- As of today, Browsh supports extensions while Carbonyl doesn't, although it's on our roadmap\n\n#### Cons\n\n- It runs slower and requires more resources than Carbonyl. 50x more CPU power is needed for the same content in average, that's because Carbonyl does not downscale or copy the window framebuffer, it natively renders to the terminal resolution.\n- It uses custom stylesheets to fix the layout, which is less reliable than Carbonyl's changes to its HTML engine (Blink).\n\n## Operating System Support\n\nAs far as tested, the operating systems under are supported:\n\n- Linux (Debian, Ubuntu and Arch tested)\n- MacOS\n- Windows 11 and WSL\n\n## Contributing\n\nCarbonyl is split in two parts: the \"core\" which is built into a shared library (`libcarbonyl`), and the \"runtime\" which dynamically loads the core (`carbonyl` executable).\n\nThe core is written in Rust and takes a few seconds to build from scratch. The runtime is a modified version of the Chromium headless shell and takes more than an hour to build from scratch.\n\nIf you're just making changes to the Rust code, build `libcarbonyl` and replace it in a release version of Carbonyl.\n\n### Core\n\n```console\n$ cargo build\n```\n\n### Runtime\n\nFew notes:\n\n- Building the runtime is almost the same as building Chromium with extra steps to patch and bundle the Rust library. Scripts in the `scripts/` directory are simple wrappers around `gn`, `ninja`, etc..\n- Building Chromium for arm64 on Linux requires an amd64 processor\n- Carbonyl is only tested on Linux and macOS, other platforms likely require code changes to Chromium\n- Chromium is huge and takes a long time to build, making your computer mostly unresponsive. An 8-core CPU such as an M1 Max or an i9 9900k with 10 Gbps fiber takes around ~1 hour to fetch and build. It requires around 100 GB of disk space.\n\n#### Fetch\n\n> Fetch Chromium's code.\n\n```console\n$ ./scripts/gclient.sh sync\n```\n\n#### Apply patches\n\n> Any changes made to Chromium will be reverted, make sure to save any changes you made.\n\n```console\n$ ./scripts/patches.sh apply\n```\n\n#### Configure\n\n```console\n$ ./scripts/gn.sh args out/Default\n```\n\n> `Default` is the target name, you can use multiple ones and pick any name you'd like, i.e.:\n>\n> ```console\n> $ ./scripts/gn.sh args out/release\n> $ ./scripts/gn.sh args out/debug\n> # or if you'd like to build a multi-platform image\n> $ ./scripts/gn.sh args out/arm64\n> $ ./scripts/gn.sh args out/amd64\n> ```\n\nWhen prompted, enter the following arguments:\n\n```gn\nimport(\"//carbonyl/src/browser/args.gn\")\n\n# uncomment this to build for arm64\n# target_cpu = \"arm64\"\n\n# comment this to disable ccache\ncc_wrapper = \"env CCACHE_SLOPPINESS=time_macros ccache\"\n\n# comment this for a debug build\nis_debug = false\nsymbol_level = 0\nis_official_build = true\n```\n\n#### Build binaries\n\n```console\n$ ./scripts/build.sh Default\n```\n\nThis should produce the following outputs:\n\n- `out/Default/headless_shell`: browser binary\n- `out/Default/icudtl.dat`\n- `out/Default/libEGL.so`\n- `out/Default/libGLESv2.so`\n- `out/Default/v8_context_snapshot.bin`\n\n#### Build Docker image\n\n```console\n# Build arm64 Docker image using binaries from the Default target\n$ ./scripts/docker-build.sh Default arm64\n# Build amd64 Docker image using binaries from the Default target\n$ ./scripts/docker-build.sh Default amd64\n```\n\n#### Run\n\n```\n$ ./scripts/run.sh Default https://wikipedia.org\n```\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}