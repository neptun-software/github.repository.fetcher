{
  "metadata": {
    "timestamp": 1736709435992,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-lang/book",
      "stars": 15536,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.068359375,
          "content": "# Ran dprint fmt on the repo\n3a30e4c1fbe641afc066b3af9eb01dcdf5ed8b24\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1298828125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto eol=lf\n*.docx binary\n*.odt binary\n*.png binary\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "book/\n*~\n.idea\n.DS_Store\ntarget\ntmp\n\n.nova\n.vscode\n.zed\n"
        },
        {
          "name": "2018-edition",
          "type": "tree",
          "content": null
        },
        {
          "name": "ADMIN_TASKS.md",
          "type": "blob",
          "size": 6.990234375,
          "content": "# Administrative Tasks\n\nThis documentation is for anyone managing the repo to remember how to do\noccasional maintenance tasks.\n\n## Update the `rustc` version\n\n- Delete your `target` directory, you're about to recompile everything anyway\n- Change the version number in `.github/workflows/main.yml`\n- Change the version number in `rust-toolchain`, which should change the\n  version you're using locally with `rustup`\n- Change the version number in `src/title-page.md`\n- Run `./tools/update-rustc.sh` (see its commented code for details on what it\n  does)\n- Inspect the changes (by looking at the files changed according to git) and\n  their effects (by looking at the files in `tmp/book-before` and\n  `tmp/book-after`) and commit them if they look good\n- Grep for `manual-regeneration` and follow the instructions in those places to\n  update output that cannot be generated by a script\n\n## Update the `edition` in all listings\n\nTo update the `edition = \"[year]\"` metadata in all the listings' `Cargo.toml`s,\nrun the `./tools/update-editions.sh` script and commit the changes.\n\n## Update the `edition` in mdBook config\n\nOpen `book.toml` and `nostarch/book.toml` and set the `edition` value in the\n`[rust]` table to the new edition.\n\n## Release a new version of the listings\n\nWe now make `.tar` files of complete projects containing every listing\navailable [as GitHub Releases](https://github.com/rust-lang/book/releases). To\ncreate a new release artifact, for example if there have been code changes due\nto edits or due to updating Rust and `rustfmt`, do the following:\n\n- Create a git tag for the release and push it to GitHub, or create a new tag\n  by going to the GitHub UI, [drafting a new release](https://github.com/rust-lang/book/releases/new), and entering a new\n  tag instead of selecting an existing tag\n- Run `cargo run --bin release_listings`, which will generate\n  `tmp/listings.tar.gz`\n- Upload `tmp/listings.tar.gz` in the GitHub UI for the draft release\n- Publish the release\n\n## Add a new listing\n\nTo facilitate the scripts that run `rustfmt` on all the listings, update the\noutput when the compiler is updated, and produce release artifacts containing\nfull projects for the listings, any listing beyond the most trivial should be\nextracted into a file. To do that:\n\n- Find where the new listing should go in the `listings` directory.\n  - There is one subdirectory for each chapter\n  - Numbered listings should use `listing-[chapter num]-[listing num]` for\n    their directory names.\n  - Listings without a number should start with `no-listing-` followed by a\n    number that indicates its position in the chapter relative to the other\n    listings without numbers in the chapter, then a short description that\n    someone could read to find the code they're looking for.\n  - Listings used only for displaying the output of the code (for example, when\n    we say \"if we had written x instead of y, we would get this compiler\n    error:\" but we don't actually show code x) should be named with\n    `output-only-` followed by a number that indicates its position in the\n    chapter relative to the other listings used only for output, then a short\n    description that authors or contributors could read to find the code\n    they're looking for.\n  - **Remember to adjust surrounding listing numbers as appropriate!**\n- Create a full Cargo project in that directory, either by using `cargo new` or\n  copying another listing as a starting point.\n- Add the code and any surrounding code needed to create a full working example.\n- If you only want to show part of the code in the file, use anchor comments\n  (`// ANCHOR: some_tag` and `// ANCHOR_END: some_tag`) to mark the parts of\n  the file you want to show.\n- For Rust code, use the `{{#rustdoc_include [filename:some_tag]}}` directive\n  within the code blocks in the text. The `rustdoc_include` directive gives the\n  code that doesn't get displayed to `rustdoc` for `mdbook test` purposes.\n- For anything else, use the `{{#include [filename:some_tag]}}` directive.\n- If you want to display the output of a command in the text as well, create an\n  `output.txt` file in the listing's directory as follows:\n  - Run the command, like `cargo run` or `cargo test`, and copy all of the\n    output.\n  - Create a new `output.txt` file with the first line `$ [the command you\n\t  ran]`.\n  - Paste the output you just copied.\n  - Run `./tools/update-rustc.sh`, which should perform some normalization on\n    the compiler output.\n  - Include the output in the text with the `{{#include [filename]}}` directive.\n  - Add and commit output.txt.\n- If you want to display output but for some reason it can't be generated by a\n  script (say, because of user input or external events like making a web\n  request), keep the output inline but make a comment that contains\n  `manual-regeneration` and instructions for manually updating the inline\n  output.\n- If you don't want this example to even be attempted to be formatted by\n  `rustfmt` (for example because the example doesn't parse on purpose), add a\n  `rustfmt-ignore` file in the listing's directory and the reason it's not\n  being formatted as the contents of that file (in case it's a rustfmt bug that\n  might get fixed someday).\n\n## See the effect of some change on the rendered book\n\nTo check, say, updating `mdbook` or changing the way files get included:\n\n- Generate a built book before the change you want to test by running `mdbook\n  build -d tmp/book-before`\n- Apply the changes you want to test and run `mdbook build -d tmp/book-after`\n- Run `./tools/megadiff.sh`\n- Files remaining in `tmp/book-before` and `tmp/book-after` have differences\n  you can manually inspect with your favorite diff viewing mechanism\n\n## Produce new markdown files for No Starch\n\n- Run `./tools/nostarch.sh`\n- Spot check the files that script created in the `nostarch` directory\n- Check them into git if you're starting a round of edits\n\n## Produce markdown from docx for diffing\n\n- Save the docx file to `tmp/chapterXX.docx`.\n- In Word, go to the review tab, choose \"Accept all changes and stop tracking\"\n- Save the docx again and close Word\n- Run `./tools/doc-to-md.sh`\n- This should write `nostarch/chapterXX.md`. Adjust the XSL in\n  `tools/doc-to-md.xsl` and run `./tools/doc-to-md.sh` again if needed.\n\n## Generate Graphviz dot\n\nWe're using [Graphviz](http://graphviz.org/) for some of the diagrams in the\nbook. The source for those files live in the `dot` directory. To turn a `dot`\nfile, for example, `dot/trpl04-01.dot` into an `svg`, run:\n\n```bash\n$ dot dot/trpl04-01.dot -Tsvg > src/img/trpl04-01.svg\n```\n\nIn the generated SVG, remove the width and the height attributes from the `svg`\nelement and set the `viewBox` attribute to `0.00 0.00 1000.00 1000.00` or other\nvalues that don't cut off the image.\n\n## Publish a preview to GitHub Pages\n\nWe sometimes publish to GitHub Pages for in-progress previews. The recommended\nflow for publishing is:\n\n- Install the `ghp-import` tool by running `pip install ghp-import` (or `pipx install ghp-import`, using [pipx][pipx]).\n- In the root, run `tools/generate-preview.sh`\n\n[pipx]: https://pipx.pypa.io/stable/#install-pipx\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.8486328125,
          "content": "# Contributing\n\nWe'd love your help! Thanks for caring about the book.\n\n## Where to Edit\n\nAll edits should be made in the `src` directory.\n\nThe `nostarch` directory contains snapshots for sending edits to the publishers\nof the print version. The snapshot files reflect what has been sent or not, so\nthey only get updated when edits are sent to No Starch. **Do not submit pull\nrequests changing files in the `nostarch` directory, they will be closed.**\n\nWe use [`rustfmt`][rustfmt] to apply standard formatting to Rust code in the\nrepo and [`dprint`][dprint] to apply standing formatting to the Markdown source\nand the non-Rust code in the project.\n\n[rustfmt]: https://github.com/rust-lang/rustfmt\n[dprint]: https://dprint.dev\n\nYou will normally have `rustfmt` installed if you have a Rust toolchain\ninstalled; if for some reason you do not have a copy of `rustfmt`, you can add\nit by running the following command:\n\n```sh\nrustup component add rustfmt\n```\n\nTo install `dprint`, you can run the following command:\n\n```sh\ncargo install dprint\n```\n\nOr follow the [instructions][install-dprint] on the `dprint` website.\n\n[install-dprint]: https://dprint.dev/install/\n\nTo format Rust code, you can run `rustfmt <path to file>`, and to format other\nfiles, you can pass `dprint <path to file>`. Many text editors also have native\nsupport or extensions for both `rustfmt` and `dprint`.\n\n## Checking for Fixes\n\nThe book rides the Rust release trains. Therefore, if you see a problem on\nhttps://doc.rust-lang.org/stable/book, it may already be fixed on the `main`\nbranch in this repo, but the fix hasn't gone through nightly -> beta -> stable\nyet. Please check the `main` branch in this repo before reporting an issue.\n\nLooking at the history for a particular file can also give more information on\nhow or whether an issue has been fixed or not if you're trying to figure that\nout.\n\nPlease also search open and closed issues and open and closed PRs before\nreporting a new issue or opening a new PR.\n\n## Licensing\n\nThis repository is under the same license as Rust itself, MIT/Apache2. You\ncan find the full text of each license in the `LICENSE-*` files in this\nrepository.\n\n## Code of Conduct\n\nThe Rust project has [a code of conduct](http://rust-lang.org/policies/code-of-conduct)\nthat governs all sub-projects, including this one. Please respect it!\n\n## Expectations\n\nBecause the book is [printed][nostarch], and because we want\nto keep the online version of the book close to the print version when\npossible, it may take longer than you're used to for us to address your issue\nor pull request.\n\n[nostarch]: https://nostarch.com/rust-programming-language-2nd-edition\n\nSo far, we've been doing a larger revision to coincide with [Rust Editions](https://doc.rust-lang.org/edition-guide/). Between those larger\nrevisions, we will only be correcting errors. If your issue or pull request\nisn't strictly fixing an error, it might sit until the next time that we're\nworking on a large revision: expect on the order of months or years. Thank you\nfor your patience!\n\n## Help wanted\n\nIf you're looking for ways to help that don't involve large amounts of\nreading or writing, check out the [open issues with the E-help-wanted\nlabel][help-wanted]. These might be small fixes to the text, Rust code,\nfrontend code, or shell scripts that would help us be more efficient or\nenhance the book in some way!\n\n[help-wanted]: https://github.com/rust-lang/book/issues?q=is%3Aopen+is%3Aissue+label%3AE-help-wanted\n\n## Translations\n\nWe'd love help translating the book! See the [Translations] label to join in\nefforts that are currently in progress. Open a new issue to start working on\na new language! We're waiting on [mdbook support] for multiple languages\nbefore we merge any in, but feel free to start!\n\n[Translations]: https://github.com/rust-lang/book/issues?q=is%3Aopen+is%3Aissue+label%3ATranslations\n[mdbook support]: https://github.com/rust-lang/mdBook/issues/5\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 0.2138671875,
          "content": "This repository is licensed under the Apache License, Version 2.0\n<LICENSE-APACHE or https://www.apache.org/licenses/LICENSE-2.0> or the MIT\nlicense <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your option.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 10.1962890625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf4b9d6a944f767f8e5e0db018570623c85f3d925ac718db4e06d0187adb21c1\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"docopt\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f3f119846c823f9eafcf953a8f6ffb6ed69bf6240883261a7f13b634579a51f\"\ndependencies = [\n \"lazy_static\",\n \"regex\",\n \"serde\",\n \"strsim\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f54427cfd1c7829e2a139fcefea601bf088ebca651d2bf53ebc600eac295dae\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.153\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8640c5d730cb13ebd907d8d04b52f55ac9a2eec55b440c8892f40d56c76c1d\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.80\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a56dea16b0a29e94408b9aa5e2940a4eedbd128a1ba20e8f7ae60fd3d465af0e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c117dbdfde9c8308975b6a18d71f3f385c89461f7b3fb054288ecf2a2058ba4c\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86b83b8b9847f9bf95ef68afb0b8e6cdb80f498442f5179a29fad448fcc1eaea\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adad44e29e4c806119491a7f06f03de4d1af22c3a680dd47f1e6e179439d1f56\"\n\n[[package]]\nname = \"rust-book-tools\"\nversion = \"0.0.1\"\ndependencies = [\n \"docopt\",\n \"flate2\",\n \"lazy_static\",\n \"regex\",\n \"serde\",\n \"tar\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.197\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.197\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.59\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a6531ffc7b071655e4ce2e04bd464c4830bb585a61cabb96cf808f05172615a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b16afcea1f22891c49a00c751c7b63b2233284064f11a200fc624137c51e2ddb\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d22af068fba1eb5edcb4aea19d382b2a3deb4c8f9d475c589b6ada9e0fd493ee\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"xattr\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da84f1a25939b27f6820d92aed108f83ff920fdf11a7b19366c27c4cda81d4f\"\ndependencies = [\n \"libc\",\n \"linux-raw-sys\",\n \"rustix\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.466796875,
          "content": "[workspace]\nmembers = [\"packages/tools\"]\ndefault-members = [\"packages/tools\"]\nresolver = \"2\"\nexclude = [\n    \"linkchecker\", # linkchecker is part of the CI workflow\n    \"listings\",    # these are intentionally distinct from the workspace\n    \"tmp\",         # listings are built here when updating output via tools/update-rustc.sh\n]\n\n[workspace.dependencies]\nwalkdir = \"2.3.1\"\ndocopt = \"1.1.0\"\nserde = \"1.0\"\nregex = \"1.3.3\"\nlazy_static = \"1.4.0\"\nflate2 = \"1.0.13\"\ntar = \"0.4.26\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2010 The Rust Project Developers\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0458984375,
          "content": "Copyright (c) 2010 The Rust Project Developers\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9990234375,
          "content": "# The Rust Programming Language\n\n![Build Status](https://github.com/rust-lang/book/workflows/CI/badge.svg)\n\nThis repository contains the source of \"The Rust Programming Language\" book.\n\n[The book is available in dead-tree form from No Starch Press][nostarch].\n\n[nostarch]: https://nostarch.com/rust-programming-language-2nd-edition\n\nYou can also read the book for free online. Please see the book as shipped with\nthe latest [stable], [beta], or [nightly] Rust releases. Be aware that issues\nin those versions may have been fixed in this repository already, as those\nreleases are updated less frequently.\n\n[stable]: https://doc.rust-lang.org/stable/book/\n[beta]: https://doc.rust-lang.org/beta/book/\n[nightly]: https://doc.rust-lang.org/nightly/book/\n\nSee the [releases] to download just the code of all the code listings that appear in the book.\n\n[releases]: https://github.com/rust-lang/book/releases\n\n## Requirements\n\nBuilding the book requires [mdBook], ideally the same version that\nrust-lang/rust uses in [this file][rust-mdbook]. To get it:\n\n[mdBook]: https://github.com/rust-lang/mdBook\n[rust-mdbook]: https://github.com/rust-lang/rust/blob/master/src/tools/rustbook/Cargo.toml\n\n```bash\n$ cargo install mdbook --locked --version <version_num>\n```\n\nThe book also uses two mdbook plugins which are part of this repository. If you\ndo not install them, you will see warnings when building and the output will not\nlook right, but you _will_ still be able to build the book. To use the plugins,\nyou should run:\n\n```bash\n$ cargo install --locked --path packages/mdbook-trpl\n```\n\n## Building\n\nTo build the book, type:\n\n```bash\n$ mdbook build\n```\n\nThe output will be in the `book` subdirectory. To check it out, open it in\nyour web browser.\n\n_Firefox:_\n\n```bash\n$ firefox book/index.html                       # Linux\n$ open -a \"Firefox\" book/index.html             # OS X\n$ Start-Process \"firefox.exe\" .\\book\\index.html # Windows (PowerShell)\n$ start firefox.exe .\\book\\index.html           # Windows (Cmd)\n```\n\n_Chrome:_\n\n```bash\n$ google-chrome book/index.html                 # Linux\n$ open -a \"Google Chrome\" book/index.html       # OS X\n$ Start-Process \"chrome.exe\" .\\book\\index.html  # Windows (PowerShell)\n$ start chrome.exe .\\book\\index.html            # Windows (Cmd)\n```\n\nTo run the tests:\n\n```bash\n$ cd packages/trpl\n$ mdbook test --library-path packages/trpl/target/debug/deps\n```\n\n## Contributing\n\nWe'd love your help! Please see [CONTRIBUTING.md][contrib] to learn about the\nkinds of contributions we're looking for.\n\n[contrib]: https://github.com/rust-lang/book/blob/main/CONTRIBUTING.md\n\nBecause the book is [printed][nostarch], and because we want\nto keep the online version of the book close to the print version when\npossible, it may take longer than you're used to for us to address your issue\nor pull request.\n\nSo far, we've been doing a larger revision to coincide with [Rust Editions](https://doc.rust-lang.org/edition-guide/). Between those larger\nrevisions, we will only be correcting errors. If your issue or pull request\nisn't strictly fixing an error, it might sit until the next time that we're\nworking on a large revision: expect on the order of months or years. Thank you\nfor your patience!\n\n### Translations\n\nWe'd love help translating the book! See the [Translations] label to join in\nefforts that are currently in progress. Open a new issue to start working on\na new language! We're waiting on [mdbook support] for multiple languages\nbefore we merge any in, but feel free to start!\n\n[Translations]: https://github.com/rust-lang/book/issues?q=is%3Aopen+is%3Aissue+label%3ATranslations\n[mdbook support]: https://github.com/rust-lang/mdBook/issues/5\n\n## Spellchecking\n\nTo scan source files for spelling errors, you can use the `spellcheck.sh`\nscript available in the `ci` directory. It needs a dictionary of valid words,\nwhich is provided in `ci/dictionary.txt`. If the script produces a false\npositive (say, you used the word `BTreeMap` which the script considers invalid),\nyou need to add this word to `ci/dictionary.txt` (keep the sorted order for\nconsistency).\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.5927734375,
          "content": "# In each chapter\n\n- [ ] Manual regeneration\n- [ ] Check for upstream changes from last snapshot\n- [ ] Propagate updated output to docx\n- [ ] Extract docx and check diff\n- [ ] Answer all comments\n- [ ] Check cross references\n- [ ] Check indentation of --snip--\n- [ ] Numbered lines, Gray out unchanged lines\n- [ ] Check line wrapping\n- [ ] Check for unneeded command/compiling/running output\n- [ ] Check println style and error messages\n- [ ] Add alt text to images\n- [ ] Index tags\n  - [ ] search for \"convention\" conventions:naming:of blah\n  - [ ] check for double spaces, spaces at the end of paragraphs\n"
        },
        {
          "name": "book.toml",
          "type": "blob",
          "size": 1.794921875,
          "content": "# Sync any changes to this *other than where explicitly specified* with the copy\n# in `nostarch/book.toml`!\n\n[book]\ntitle = \"The Rust Programming Language\"\nauthors = [\"Steve Klabnik\", \"Carol Nichols\", \"Chris Krycho\", \"Contributions from the Rust Community\"]\n\n[output.html]\nadditional-css = [\"ferris.css\", \"theme/2018-edition.css\", \"theme/semantic-notes.css\", \"theme/listing.css\"]\nadditional-js = [\"ferris.js\"]\ngit-repository-url = \"https://github.com/rust-lang/book\"\n\n[output.html.redirect]\n\"ch17-00-oop.html\" = \"ch18-00-oop.html\"\n\"ch17-01-what-is-oo.html\" = \"ch18-01-what-is-oo.html\"\n\"ch17-02-trait-objects.html\" = \"ch18-02-trait-objects.html\"\n\"ch17-03-oo-design-patterns.html\" = \"ch18-03-oo-design-patterns.html\"\n\"ch18-00-patterns.html\" = \"ch19-00-patterns.html\"\n\"ch18-01-all-the-places-for-patterns.html\" = \"ch19-01-all-the-places-for-patterns.html\"\n\"ch18-02-refutability.html\" = \"ch19-02-refutability.html\"\n\"ch18-03-pattern-syntax.html\" = \"ch19-03-pattern-syntax.html\"\n\"ch19-00-advanced-features.html\" = \"ch20-00-advanced-features.html\"\n\"ch19-01-unsafe-rust.html\" = \"ch20-01-unsafe-rust.html\"\n\"ch19-03-advanced-traits.html\" = \"ch20-03-advanced-traits.html\"\n\"ch19-04-advanced-types.html\" = \"ch20-04-advanced-types.html\"\n\"ch19-05-advanced-functions-and-closures.html\" = \"ch20-05-advanced-functions-and-closures.html\"\n\"ch19-06-macros.html\" = \"ch20-06-macros.html\"\n\"ch20-00-final-project-a-web-server.html\" = \"ch21-00-final-project-a-web-server.html\"\n\"ch20-01-single-threaded.html\" = \"ch21-01-single-threaded.html\"\n\"ch20-02-multithreaded.html\" = \"ch21-02-multithreaded.html\"\n\"ch20-03-graceful-shutdown-and-cleanup.html\" = \"ch21-03-graceful-shutdown-and-cleanup.html\"\n\n# Do not sync this preprocessor; it is for the HTML renderer only.\n[preprocessor.trpl-note]\n\n[preprocessor.trpl-listing]\noutput-mode = \"default\"\n\n[rust]\nedition = \"2021\"\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "dot",
          "type": "tree",
          "content": null
        },
        {
          "name": "dprint.jsonc",
          "type": "blob",
          "size": 0.9423828125,
          "content": "{\n  \"typescript\": {\n  },\n  \"json\": {\n  },\n  \"markdown\": {\n  },\n  \"malva\": {\n  },\n  \"excludes\": [\n    \"**/node_modules\",\n    \"**/*-lock.json\",\n    \"**/target\",\n    // We don’t to apply auto-formatting to this *yet*, at a minimum. It may be\n    // helpful as a way of replacing some of the manual formatting we do in both\n    // the nostarch script and the script for pulling data back over from docx,\n    // though, so we may *start* doing so in the future.\n    \"nostarch\",\n    // These should never change at this point\n    \"2018-edition\",\n    \"first-edition\",\n    \"second-edition\",\n    \"redirects\",\n    // has empty list items which look like headings to a formatter\n    \".github/ISSUE_TEMPLATE/bug_report.md\",\n  ],\n  \"plugins\": [\n    \"https://plugins.dprint.dev/typescript-0.93.3.wasm\",\n    \"https://plugins.dprint.dev/json-0.19.4.wasm\",\n    \"https://plugins.dprint.dev/markdown-0.17.8.wasm\",\n    \"https://plugins.dprint.dev/g-plane/malva-v0.11.0.wasm\",\n  ],\n}\n"
        },
        {
          "name": "ferris.css",
          "type": "blob",
          "size": 0.708984375,
          "content": "body.light .does_not_compile,\nbody.light .panics,\nbody.light .not_desired_behavior,\nbody.rust .does_not_compile,\nbody.rust .panics,\nbody.rust .not_desired_behavior {\n  background: #fff1f1;\n}\n\nbody.coal .does_not_compile,\nbody.coal .panics,\nbody.coal .not_desired_behavior,\nbody.navy .does_not_compile,\nbody.navy .panics,\nbody.navy .not_desired_behavior,\nbody.ayu .does_not_compile,\nbody.ayu .panics,\nbody.ayu .not_desired_behavior {\n  background: #501f21;\n}\n\n.ferris-container {\n  position: absolute;\n  z-index: 99;\n  right: 5px;\n  top: 30px;\n}\n\n.ferris {\n  vertical-align: top;\n  margin-left: 0.2em;\n  height: auto;\n}\n\n.ferris-large {\n  width: 4.5em;\n}\n\n.ferris-small {\n  width: 2.3em;\n}\n\n.ferris-explain {\n  width: 100px;\n}\n"
        },
        {
          "name": "ferris.js",
          "type": "blob",
          "size": 2.5166015625,
          "content": "// @ts-check\n\n/**\n * @typedef {{ attr: string, title: string }} FerrisType\n */\n\n/** @type {Array<FerrisType>} */\nconst FERRIS_TYPES = [\n  {\n    attr: \"does_not_compile\",\n    title: \"This code does not compile!\",\n  },\n  {\n    attr: \"panics\",\n    title: \"This code panics!\",\n  },\n  {\n    attr: \"not_desired_behavior\",\n    title: \"This code does not produce the desired behavior.\",\n  },\n];\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  for (let ferrisType of FERRIS_TYPES) {\n    attachFerrises(ferrisType);\n  }\n});\n\n/**\n * @param {FerrisType} type\n */\nfunction attachFerrises(type) {\n  let elements = document.getElementsByClassName(type.attr);\n\n  for (let codeBlock of elements) {\n    // Skip SVG etc.: in principle, these should never be attached to those, but\n    // this means if someone happens to have a browser extension which *is*\n    // attaching them, it will not break the code.\n    if (!(codeBlock instanceof HTMLElement)) {\n      continue;\n    }\n\n    let lines = codeBlock.innerText.replace(/\\n$/, \"\").split(/\\n/).length;\n\n    /** @type {'small' | 'large'} */\n    let size = lines < 4 ? \"small\" : \"large\";\n\n    let container = prepareFerrisContainer(codeBlock, size == \"small\");\n    if (!container) {\n      continue;\n    }\n\n    container.appendChild(createFerris(type, size));\n  }\n}\n\n/**\n * @param {HTMLElement} element - Code block element to attach a Ferris to.\n * @param {boolean} useButtons - Whether to attach to existing buttons.\n * @returns {Element | null} - The container element to use.\n */\nfunction prepareFerrisContainer(element, useButtons) {\n  let foundButtons = element.parentElement?.querySelector(\".buttons\");\n  if (useButtons && foundButtons) {\n    return foundButtons;\n  }\n\n  let div = document.createElement(\"div\");\n  div.classList.add(\"ferris-container\");\n\n  if (!element.parentElement) {\n    console.error(`Could not install Ferris on ${element}, which is missing a parent`);\n    return null;\n  }\n\n  element.parentElement.insertBefore(div, element);\n\n  return div;\n}\n\n/**\n * @param {FerrisType} type\n * @param {'small' | 'large'} size\n * @returns {HTMLAnchorElement} - The generated anchor element.\n */\nfunction createFerris(type, size) {\n  let a = document.createElement(\"a\");\n  a.setAttribute(\"href\", \"ch00-00-introduction.html#ferris\");\n  a.setAttribute(\"target\", \"_blank\");\n\n  let img = document.createElement(\"img\");\n  img.setAttribute(\"src\", \"img/ferris/\" + type.attr + \".svg\");\n  img.setAttribute(\"title\", type.title);\n  img.classList.add(\"ferris\");\n  img.classList.add(\"ferris-\" + size);\n\n  a.appendChild(img);\n\n  return a;\n}\n"
        },
        {
          "name": "first-edition",
          "type": "tree",
          "content": null
        },
        {
          "name": "listings",
          "type": "tree",
          "content": null
        },
        {
          "name": "nostarch",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "redirects",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.0048828125,
          "content": "1.82\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "max_width = 80\n"
        },
        {
          "name": "second-edition",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "style-guide.md",
          "type": "blob",
          "size": 1.4521484375,
          "content": "# Style Guide\n\n## Prose\n\n- Prefer title case for chapter/section headings, ex: `## Generating a Secret\n  Number` rather than `## Generating a secret number`.\n- Prefer italics over single quotes when calling out a term, ex: `is an\n  *associated function* of` rather than `is an ‘associated function’ of`.\n- When talking about a method in prose, DO NOT include the parentheses, ex:\n  `read_line` rather than `read_line()`.\n- Hard wrap at 80 chars\n- Prefer not mixing code and not-code in one word, ex: ``Remember when we wrote\n  `use std::io`?`` rather than ``Remember when we `use`d `std::io`?``\n\n## Code\n\n- Add the file name before markdown blocks to make it clear which file we're\n  talking about, when applicable.\n- When making changes to code, make it clear which parts of the code changed\n  and which stayed the same... not sure how to do this yet\n- Split up long lines as appropriate to keep them under 80 chars if possible\n- Use `bash` syntax highlighting for command line output code blocks\n\n## Links\n\nOnce all the scripts are done:\n\n- If a link shouldn't be printed, mark it to be ignored\n  - This includes all \"Chapter XX\" intra-book links, which _should_ be links\n    for the HTML version\n- Make intra-book links and stdlib API doc links relative so they work whether\n  the book is read offline or on docs.rust-lang.org\n- Use markdown links and keep in mind that they will be changed into `text at\n  *url*` in print, so word them in a way that it reads well in that format\n"
        },
        {
          "name": "theme",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}