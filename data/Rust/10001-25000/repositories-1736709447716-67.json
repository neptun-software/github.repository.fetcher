{
  "metadata": {
    "timestamp": 1736709447716,
    "page": 67,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eza-community/eza",
      "stars": 13508,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.033203125,
          "content": "if has nix; then\n  use flake .\nfi\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 1.2607421875,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n# This file contains a list of commits that are not likely what you\n# are looking for in a blame, such as mass reformatting or renaming.\n# You can set this file as a default ignore file for blame by running\n# the following command.\n#\n# $ git config blame.ignoreRevsFile .git-blame-ignore-revs\n#\n# To temporarily not use this file add\n# --ignore-revs-file=\"\"\n# to your blame command.\n#\n# The ignoreRevsFile can't be set globally due to blame failing if the file isn't present.\n# To not have to set the option in every repository it is needed in,\n# save the following script in your path with the name \"git-bblame\"\n# now you can run\n# $ git bblame $FILE\n# to use the .git-blame-ignore-revs file if it is present.\n#\n# #!/usr/bin/env bash\n# repo_root=$(git rev-parse --show-toplevel)\n# if [[ -e $repo_root/.git-blame-ignore-revs ]]; then\n#     git blame --ignore-revs-file=\"$repo_root/.git-blame-ignore-revs\" $@\n# else\n#     git blame $@\n# fi\n\n# treewide rustfmt https://github.com/eza-community/eza/pull/405\n0e06409b07f060e3afe1c099c4c54e6504847ee0\n\n# initial powertests https://github.com/eza-community/eza/pull/644/commits\n2273e29bc006baeb76795ae40c7b8b76f61c6f26\n4f949fc9bbb1e387b489ad841af56e7be448bef3\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.544921875,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n# Nix Flake stuff\nresult\n\n# Generated by nix-pre-commit-hooks\n/.pre-commit-config.yaml\n\n# Direnv\n.direnv\n\n# Rust stuff\ntarget\n\n# Vagrant stuff\n.vagrant\n*.log\n\n# Compiled artifacts\n# (see devtools/*-package-for-*.sh)\n/eza-linux-x86_64\n/eza-linux-x86_64-*.zip\n/eza-macos-x86_64\n/eza-macos-x86_64-*.zip\n/eza_*.deb\n/MD5SUMS\n/SHA1SUMS\n\n# Snap stuff\nparts\nprime\nstage\n*.snap\n\n# VHS testing stuff\nout.gif\ntests/tmp\n\n## Dynamically generated\ntests/test_dir\n\n# Miscenallous\n.idea\n"
        },
        {
          "name": ".pre-commit-config-non-nix.yaml",
          "type": "blob",
          "size": 0.517578125,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\nrepos:\n  - repo: local\n    hooks:\n      - id: rust-linting\n        name: Rust linting\n        description: Run rustfmt on included files\n        entry: cargo fmt --\n        types: [file, rust]\n        language: system\n      - id: rust-clippy\n        name: Rust clippy\n        description: Run clippy on included files\n        entry: cargo clippy --workspace --all-targets --all-features --\n        types: [file, rust]\n        language: system\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 47.3759765625,
          "content": "<!--\nSPDX-FileCopyrightText: 2024 Christina Sørensen\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n# Changelog\n\n## [0.20.16] - 2025-01-09\n\n### Features\n\n- Add brew icon for brewfile and brewfile.lock.json\n\n### Build\n\n- Update flake inputs 2025-01-08\n- Update cargo inputs 2025-01-08\n- Bump git2 from 0.19.0 to 0.20.0\n\n## [0.20.15] - 2025-01-02\n\n### Features\n\n- Add icons from nerd fonts 3.3.0 release & more\n- Add new icons, extensive list\n\n### Miscellaneous Tasks\n\n- Eza v0.20.15 changelogs, version bump\n\n### Build\n\n- We switch to our own fork of natord\n\n### Ci\n\n- Bump FreeBSD / NetBSD versions.\n\n## [0.20.14] - 2024-12-26\n\n### Bug Fixes\n\n- ...those pesky workflow targets\n- Remove separate bsd tests\n- Remove audit workflow\n\n### Features\n\n- Audit checks in main CI\n\n### Miscellaneous Tasks\n\n- Eza v0.20.14 changelogs, version bump\n\n### Refactor\n\n- Move eza, trycmd packages\n- Move BSD unit tests to main flow\n\n### Styling\n\n- Format workflows\n- Ci checks formatted\n\n### Build\n\n- Cargo 2024-12-25\n\n### Ci\n\n- Simplify\n- Let's just always run em'\n- Only run big checks on PRs to main\n- Faster flake checks... maybe?\n- Flakes on latest ubuntu\n- Only do no-merge-commits on PR\n\n## [0.20.13] - 2024-12-18\n\n### Bug Fixes\n\n- Pre-commit-hooks.nix trying to be too clever\n- Remove stray description (originally from `--decay-mode`)\n\n### Miscellaneous Tasks\n\n- Eza v0.20.13 changelogs, version bump\n\n### Build\n\n- Update crate deps Mon Dec 16\n- Update flake deps Mon Dec 16\n\n### Ci\n\n- Update to PRESENT DAY, PRESENT TIME\n\n## [0.20.12] - 2024-12-11\n\n### Bug Fixes\n\n- Add unicode-3.0 license\n- Use safe terminal_size_of\n- Use terminal_size_of with borrowed raw handle\n\n### Features\n\n- Move MSRV to 1.74 and deep bump cargo deps\n- Add Gleam lang icon\n\n### Miscellaneous Tasks\n\n- Eza v0.20.12 changelogs, version bump\n\n### Testing\n\n- Regen for 1.74\n\n### Build\n\n- Bump terminal_size from 0.3.0 to 0.4.1\n\n### Ci\n\n- Openbsd 7.4 -> 7.6\n\n## [0.20.11] - 2024-12-05\n\n### Bug Fixes\n\n- Bump libc from 0.2.165 to 0.2.167\n\n### Miscellaneous Tasks\n\n- Eza v0.20.11 changelogs, version bump\n\n## [0.20.10] - 2024-11-28\n\n### Bug Fixes\n\n- People dislike the phrasing \"maintained\" on hackernews\n\n### Miscellaneous Tasks\n\n- Eza v0.20.10 changelogs, version bump\n\n### Build\n\n- Bump libc from 0.2.164 to 0.2.165\n\n## [0.20.9] - 2024-11-21\n\n### Bug Fixes\n\n- Remove newline after doc comment of `regen` recipe\n\n### Miscellaneous Tasks\n\n- Eza v0.20.9 changelogs, version bump\n\n### Refactor\n\n- List all recipes by default\n- Group related recipes\n\n### Build\n\n- Bump libc from 0.2.162 to 0.2.164\n- Bump DeterminateSystems/nix-installer-action from 15 to 16\n\n## [0.20.8] - 2024-11-14\n\n### Bug Fixes\n\n- Cross-compiling by updating to libz-sys to 1.1.20\n\n### Miscellaneous Tasks\n\n- Eza v0.20.8 changelogs, version bump\n\n### Build\n\n- Bump palette from 0.7.5 to 0.7.6\n- Bump libc from 0.2.161 to 0.2.162\n- Bump serde from 1.0.214 to 1.0.215\n\n## [0.20.7] - 2024-11-07\n\n### Bug Fixes\n\n- Palette v0.7.6 -> v0.7.5\n\n### Miscellaneous Tasks\n\n- Update package.exclude list in Cargo.toml\n- Eza v0.20.7 changelogs, version bump\n\n### Build\n\n- Bump DeterminateSystems/nix-installer-action from 14 to 15\n- Bump serde_norway from 0.9.38 to 0.9.39\n- Bump trycmd from 0.15.7 to 0.15.8\n\n## [0.20.6] - 2024-10-31\n\n### Bug Fixes\n\n- Changelog spelling\n\n### Documentation\n\n- Fix typo `--get-repos-no-status` to `--git-repos-no-status`\n\n### Miscellaneous Tasks\n\n- Eza v0.20.6 changelogs, version bump\n\n### Build\n\n- Bump serde from 1.0.210 to 1.0.214\n\n## [0.20.5] - 2024-10-25\n\n### Bug Fixes\n\n- Ensure nested tree parts align under item name\n- Remove depricated `chrono` `from_timestamp_opt`\n\n### Miscellaneous Tasks\n\n- Update generated test files\n- Eza v0.20.5 changelogs, version bump\n\n### Build\n\n- Bump libc from 0.2.159 to 0.2.161\n- Chrono v0.4.34 -> v0.4.38\n\n## [0.20.4] - 2024-10-18\n\n### Bug Fixes\n\n- Filetype, coloring for executables and folder\n\n### Miscellaneous Tasks\n\n- Eza v0.20.4 changelogs, version bump\n\n## [0.20.3] - 2024-10-17\n\n### Bug Fixes\n\n- Git cliff docs issue\n\n### Miscellaneous Tasks\n\n- Eza v0.20.3 changelogs, version bump\n\n### Performance\n\n- Reuse filetype from DirEntry\n\n## [0.20.2] - 2024-10-09\n\n### Bug Fixes\n\n- Colors in old ms command prompt\n- Bring help text in line with available flags\n- Do not print parent filename with --absolute=on\n\n### Miscellaneous Tasks\n\n- Add fox installation option\n- Eza v0.20.2 changelogs, version bump\n\n### Build\n\n- Bump once_cell from 1.20.1 to 1.20.2\n\n## [0.20.1] - 2024-10-03\n\n### Bug Fixes\n\n- Release recipe\n- Support passing multiple options for generate-trycmd-test.sh\n- Move options into flags\n- Rustfmt errors\n\n### Documentation\n\n- Fix cross-references\n- Update file type colors\n- Document that exit 13 == permission denied\n\n### Features\n\n- Update just, add more formats\n- Recursively walk symlinks pointing at dirs\n- Add --follow-symlinks option\n- Add autocomplete for --follow-symlinks\n- Show directories last\n\n### Miscellaneous Tasks\n\n- Eza v0.20.1 changelogs, version bump\n\n### Testing\n\n- Add cases for -T and --follow-symlinks\n- Regenerate tests broken by line number changes\n\n### Build\n\n- Fix manual version\n- Bump once_cell from 1.19.0 to 1.20.1\n\n### Ci\n\n- Remove flakehub, flakestry publish\n\n## [0.20.0] - 2024-09-26\n\n### Bug Fixes\n\n- Flake trycmd bug\n- Pre-commit-hook taplo bug\n\n### Documentation\n\n- Add link to eza-themes repository in readme\n- Cargo install dir inaccurate\n- Add x-cmd method to install eza\n- Adding a testing infos file to guide everyone through tests\n\n### Features\n\n- Add `opml` file extension\n- Add a regen rule\n- [**breaking**] Relicensed to EUPL-1.2\n\n### Miscellaneous Tasks\n\n- Eza v0.20.0 changelogs, version bump\n\n### Refactor\n\n- Move some files to `.config`\n- Release scripts use `.config`\n- Relicense to EUPL-1.2\n\n### Styling\n\n- Switch to nixfmt rfc style, format tree\n- Remove blank line\n\n### Testing\n\n- Regenerate integration tests\n- Regenerate tests\n\n### Build\n\n- Darwin devShell resuse eza deps\n- Ensure flake inputs aren't duplicated'\n- Remove semnix deps\n- Bump flake lock 2024-09-26\n- Removed unused flake follows\n- Add cargo to devShell\n- Add clippy to devShell\n- Use toolchain in devShell\n- Bump libc from 0.2.158 to 0.2.159\n- Bump unicode-width from 0.1.13 to 0.2.0\n\n### Ci\n\n- Full nix3 command output in logs\n- Allow EUPL-1.2\n- Unblock windows\n\n## [0.19.4] - 2024-09-18\n\n### Bug Fixes\n\n- Remove non_alpha from percent encoding to fix hyprlinks\n\n### Features\n\n- Pass from serde_yaml to serde_norway\n\n### Miscellaneous Tasks\n\n- Eza v0.19.4 changelogs, version bump\n\n## [0.19.3] - 2024-09-12\n\n### Bug Fixes\n\n- Convert empty space to %20 when render hyperlinks\n- Split commit workflows and run no-merge-commits only on PRs\n- Correct naming of commit related workflows\n\n### Documentation\n\n- Better version bump commit summary\n\n### Features\n\n- Add no-merge-commits job to commits workflow\n\n### Miscellaneous Tasks\n\n- Rename justfile\n- Eza v0.19.3 changelogs, version bump\n\n### Refactor\n\n- Rename conventional-commits workflow to commits\n\n### Build\n\n- Bump DeterminateSystems/nix-installer-action from 13 to 14\n- Bump DeterminateSystems/flake-checker-action from 8 to 9\n- Bump actions/checkout from 3 to 4\n- Bump libc from 0.2.155 to 0.2.158\n- Bump nu-ansi-term from 0.50.0 to 0.50.1\n\n## [0.19.2] - 2024-09-05\n\n### Bug Fixes\n\n- Remove unnecessary map and make clippy happy\n- Adjust grid details for CI tests\n- Imports and merge conflicts\n- Rustfmt issues\n- Clippy issues\n- Revise UiStyles::plain to have no style at all\n- Pr reviews fixes for theme file\n- Selectively filter files when recursing #1101\n- Fix typo in FromOverride<FileKinds> impl\n- Add serde(default) to StyleOverride.foreground/background fields\n\n### Documentation\n\n- Add Flox to INSTALL.md\n- Add ic for icon color to colors man page\n- Add further documentation about theme file\n\n### Features\n\n- Add c++ module interfaces as source file types\n- Add icon field to UiStyles\n- Add ic key for UiStyles icon in set_exa\n- Add None as icon value in UiStyles.default_theme\n- Add icon function to FileNameColours trait\n- Implement FileNameColours.icon for Theme\n- Adjust FileName.paint to consider possible icon color\n- Begin implementation of config file\n- Allow writing default theme.yml file for eventual config file implementation\n- Theme file configuration base\n- Add IconOverrides struct and UiStyles.icon_overrides\n- Add icon_override function to FileNameColours trait\n- Implement FileNameColours.icon_override for Theme\n- Handle icon overrides in FileName.paint\n- Add example config for icon_overrides\n- Rename UiStyles.icon_override to icons and add Style field\n- Add shorthand aliases to StyleOverride variables\n- Add custom deserialize_color and use in StyleOverride\n- Outsource color_from_str function to make it testable\n\n### Miscellaneous Tasks\n\n- Release eza v0.19.2\n\n### Refactor\n\n- Simplify icon style setting in FileName.paint\n- Make every setting optional with override layer\n- Simplify sample theme.yml\n- Formatting for rustfmt macro\n\n### Styling\n\n- Fix clippy issue in FileName.paint\n- Apply rustfmt\n- Simplify from_str_radix calls to please clippy\n\n### Testing\n\n- Add unit tests for color_from_str function\n\n### Build\n\n- Bump windows-sys from 0.52.0 to 0.59.0\n\n### Ci\n\n- Allow MPL-2.0\n\n## [0.19.1] - 2024-08-28\n\n### Bug Fixes\n\n- FreeBSD build.\n- Typo\n\n### Miscellaneous Tasks\n\n- Release eza v0.19.1\n\n### Build\n\n- Bump uzers from 0.12.0 to 0.12.1\n\n## [0.19.0] - 2024-08-08\n\n### Bug Fixes\n\n- [**breaking**] Implement `EZA_GRID_ROWS` grid details view minimum rows threshold\n\n### Miscellaneous Tasks\n\n- Release eza v0.19.0\n\n## [0.18.24] - 2024-08-03\n\n### Bug Fixes\n\n- 1.80 breakage from time crate\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.24\n\n### Build\n\n- Bump time dependency\n\n## [0.18.23] - 2024-07-25\n\n### Bug Fixes\n\n- Disable broken freebsd tests\n\n### Documentation\n\n- Clear up confusion around ls\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.23\n\n### Build\n\n- Bump log from 0.4.21 to 0.4.22\n- Bump DeterminateSystems/nix-installer-action from 12 to 13\n- Bump plist from 1.6.1 to 1.7.0\n\n## [0.18.22] - 2024-07-18\n\n### Bug Fixes\n\n- Use NaiveDateTime::from_timestamp_opt instead of panicky From impl\n\n### Features\n\n- Add non-nix pre-commit rustfmt and clippy hooks\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.22\n\n### Ci\n\n- Bump FreeBSD version.\n\n## [0.18.21] - 2024-07-01\n\n### Bug Fixes\n\n- Fix missing line breaks in _eza\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.21\n\n## [0.18.20] - 2024-06-27\n\n### Features\n\n- Add --no-|show-symlinks flags for filtering output\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.20\n\n## [0.18.19] - 2024-06-20\n\n### Bug Fixes\n\n- Ship release binaries\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.19\n\n### Build\n\n- Bump git2 from 0.18.3 to 0.19.0\n\n## [0.18.18] - 2024-06-13\n\n### Features\n\n- Extend deny check in audit workflow to all\n- Add deny.toml and workflow file to audit workflow paths\n- Run on all features by default\n- Ask for shell and terminal in bug report template\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.18\n\n### Build\n\n- Bump unicode-width from 0.1.12 to 0.1.13\n- Bump DeterminateSystems/flake-checker-action from 7 to 8\n- Bump DeterminateSystems/nix-installer-action from 11 to 12\n\n## [0.18.17] - 2024-06-05\n\n### Features\n\n- Add icon for Nushell extension\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.17\n\n### Build\n\n- Bump trycmd from 0.15.1 to 0.15.2\n- Bump libc from 0.2.154 to 0.2.155\n\n## [0.18.16] - 2024-05-16\n\n### Bug Fixes\n\n- Change windows-only imports to be windows-only\n\n### Documentation\n\n- Replace decay with color-scale\n- Update INSTALL.md\n- Fix typo in `INSTALL.md`\n- Use 3 columns for packaging status badge\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.16\n\n### Build\n\n- Bump DeterminateSystems/flake-checker-action from 5 to 7\n- Bump DeterminateSystems/nix-installer-action from 10 to 11\n\n## [0.18.15] - 2024-05-09\n\n### Bug Fixes\n\n- Correct command for latest tag in deb-package.sh\n\n### Documentation\n\n- Add how to find man pages in terminal and online. Partly fixes #967\n- Correct heading levels in markdown\n- Move heading out of collapsed section\n- Add some keywords for benefit of ctrl-f\n\n### Features\n\n- Return to original commit at the end of deb-package.sh\n- Add optional tag argument to deb-package.sh\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.15\n\n## [0.18.14] - 2024-05-02\n\n### Features\n\n- Add icon for \"cron.minutely\" directory\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.14\n\n### Build\n\n- Bump uzers from 0.11.3 to 0.12.0\n- Bump libc from 0.2.153 to 0.2.154\n- Bump unicode-width from 0.1.11 to 0.1.12\n- Bump palette from 0.7.5 to 0.7.6\n\n## [0.18.13] - 2024-04-25\n\n### Features\n\n- Generate completion/manpage tarballs on release\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.13\n\n## [0.18.12] - 2024-04-22\n\n### Bug Fixes\n\n- Allow unused imports for freebsd\n- Checking for deref flag in file_name\n\n### Features\n\n- Add scheme filetype and icons\n\n## [0.18.11] - 2024-04-19\n\n### Bug Fixes\n\n- Fix clippy lints\n- Enable the rule only for NetBSD.\n- Build aarch64, arm without libgit2\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.11\n\n### Ci\n\n- Bump NetBSD version to 10.0\n\n## [0.18.10] - 2024-04-11\n\n### Bug Fixes\n\n- Bump trycmd from 0.15.0 to 0.15.1\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.10\n\n### Build\n\n- Bump nu-ansi-term from 0.49.0 to 0.50.0\n\n## [0.18.9] - 2024-03-27\n\n### Features\n\n- Switch out ansiterm crate for nu_ansi_term\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.9\n\n### Build\n\n- Bump DeterminateSystems/nix-installer-action from 9 to 10\n- Bump plist from 1.6.0 to 1.6.1\n- Bump rayon from 1.9.0 to 1.10.0\n- Bump git2 from 0.18.2 to 0.18.3\n\n## [0.18.8] - 2024-03-21\n\n### Bug Fixes\n\n- Avoid deprecation warnings\n- Rustfmt issues\n\n### Features\n\n- Add fennel lang icon and associations\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.8\n\n## [0.18.7] - 2024-03-14\n\n### Bug Fixes\n\n- Bugfix to resolve absolute paths that are not symlinks\n\n### Features\n\n- Add filetype and icon for .hh extension\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.7\n\n## [0.18.6] - 2024-03-06\n\n### Bug Fixes\n\n- NetBSD did not have fflagstostr and as such did not build properly\n- Fix total-size option\n- Add fortran to source filetypes\n- Fix absolute_path() for broken symlinks\n- Update line numbers in panic messages in tests\n\n### Features\n\n- Add filetype and icon for age\n- Adding icons for graphql extensions\n- Add nim icons\n- Use fsharp icon for fsproj files (similar to cs/csproj)\n- Add new icons, diverse selection\n- Adding more haskell related icons\n- Adding more icons for docker specific files\n- Adding more dockerfile icons\n- Add --absolute flag\n- Add shell completions for --absolute flag\n\n### Miscellaneous Tasks\n\n- Cleaning dirs\n- Release eza v0.18.6\n\n### Refactor\n\n- Port grid and grid-details to new uutils-term-grid\n\n### Testing\n\n- Add integration tests and powertests for --absolute flag\n- Add directory symlink to tests/itest/\n\n### Build\n\n- Bump log from 0.4.20 to 0.4.21\n- Bump rayon from 1.8.1 to 1.9.0\n\n### Ci\n\n- Add NetBSD to CI.\n- Fix warnings.\n- Add FreeBSD to CI.\n- Add OpenBSD to CI.\n\n## [0.18.5] - 2024-02-29\n\n### Bug Fixes\n\n- Bump palette from 0.7.4 to 0.7.5\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.5\n\n## [0.18.4] - 2024-02-22\n\n### Bug Fixes\n\n- Classification width should be taken into account with -F=auto\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.4\n\n### Build\n\n- Bump libc from 0.2.152 to 0.2.153\n- Bump chrono from 0.4.33 to 0.4.34\n- Bump trycmd from 0.14.20 to 0.15.0\n\n## [0.18.3] - 2024-02-15\n\n### Bug Fixes\n\n- Duplicates in shell completions\n\n### Documentation\n\n- Add target arch to deb PPA installation for strict apt environments\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.3\n\n### Performance\n\n- Do not pre-compute MountInfo to reduce readlink calls\n\n### Refactor\n\n- Use #[default] attribute instead of custom impl for enums\n\n## [0.18.2] - 2024-02-08\n\n### Bug Fixes\n\n- Update libgit2 to 1.7.2\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.2\n\n## [0.18.1] - 2024-02-08\n\n### Bug Fixes\n\n- Change shasum for main commit\n\n### Documentation\n\n- Add manual installation section\n\n### Miscellaneous Tasks\n\n- Release eza v0.18.1\n\n### Refactor\n\n- Replace scoped_threadpool with rayon\n\n### Build\n\n- Add empty rustfmt to ensure project specific settings\n- Bump libc from 0.2.151 to 0.2.152\n- Bump nick-fields/retry from 2 to 3\n- Bump palette from 0.7.3 to 0.7.4\n- Bump webiny/action-conventional-commits from 1.2.0 to 1.3.0\n\n## [0.18.0] - 2024-02-01\n\n### Features\n\n- [**breaking**] Add --classify=always,auto,never\n\n### Miscellaneous Tasks\n\n- Remove rustfmt config file that has a nightly only option in favor of rustfmt skip directive which is already in place\n- Fix small typo in pull request template\n- Release eza v0.18.0\n\n### Refactor\n\n- Change cast to coertion, remove rustfmt skip and clippy lint ignore directives\n\n### Testing\n\n- Regenerate classification related tests\n\n### Build\n\n- Change flake inputs\n\n## [0.17.3] - 2024-01-25\n\n### Bug Fixes\n\n- Remove version testing\n\n### Miscellaneous Tasks\n\n- Avoid `unwrap()` by changing filter-then-map to `filter_map`\n- Release eza v0.17.3\n\n### Build\n\n- Bump shlex from 1.2.0 to 1.3.0\n- Bump chrono from 0.4.31 to 0.4.33\n- Bump trycmd from 0.14.19 to 0.14.20\n\n## [0.17.2] - 2024-01-20\n\n### Bug Fixes\n\n- Crash using --git-repos on unreadable dir\n- Crash using --git-repos on unreadable dir\n\n### Miscellaneous Tasks\n\n- Release eza v0.17.2\n\n### Build\n\n- Add cargo-bump for releasing\n\n## [0.17.1] - 2024-01-11\n\n### Bug Fixes\n\n- Offset widths in grid mode with utf8 filenames\n- Format the code\n- Unformat the code where needed\n- Format the code correctly this time\n- Redo everything from scratch\n- Stack overflow when '-laaR' are used\n- Stack overflow when '-laaR' is used\n\n### Features\n\n- Add Fortran icons\n\n### Miscellaneous Tasks\n\n- Adding blake3 to checksums\n- Release eza v0.17.1\n\n### Testing\n\n- Regenerate version tests... and others\n- Updated tests to fit new features\n\n### Build\n\n- Add b3sum to devshell deps\n\n## [0.17.0] - 2023-12-13\n\n### Bug Fixes\n\n- Add color scale mode to the bash completions\n- Add color scale mode to the fish completions\n- Quote symbolic links correctly when their destinations contain spaces\n\n### Documentation\n\n- Modify documentation about custom time style\n\n### Features\n\n- Add BSD file flags\n- Add Windows file attributes\n- [**breaking**] Support different custom time style for non-recent/recent files\n\n### Miscellaneous Tasks\n\n- Release eza v0.17.0\n\n### Testing\n\n- Regen powertests\n- Regenerate\n- Add tests for non-recent/recent custom time style\n- Update powertest expected help message output\n\n### Build\n\n- Update `flake.lock`\n- Bump DeterminateSystems/nix-installer-action from 8 to 9\n- Bump once_cell from 1.18.0 to 1.19.0\n- Bump libc from 0.2.150 to 0.2.151\n\n### Ci\n\n- Remove labeler\n\n## [0.16.3] - 2023-12-07\n\n### Bug Fixes\n\n- Add bare git_repos fn if feature git is disabled\n- Fixing color of size unit\n- Color-scale broked size for colors\n\n### Miscellaneous Tasks\n\n- Release eza v0.16.3\n\n### Testing\n\n- Fix powertests post-release\n\n### Build\n\n- Bump percent-encoding from 2.3.0 to 2.3.1\n- Bump actions/labeler from 4 to 5\n\n## [0.16.2] - 2023-11-30\n\n### Bug Fixes\n\n- Calculate width correctly when using grid icons & classify\n- Fix the windows build\n\n### Miscellaneous Tasks\n\n- Release eza v0.16.2\n\n### Testing\n\n- Fix version tests\n\n### Build\n\n- Bump webiny/action-conventional-commits from 1.1.0 to 1.2.0\n- Bump DeterminateSystems/nix-installer-action from 7 to 8\n- Bump windows-sys from 0.48.0 to 0.52.0\n\n## [0.16.1] - 2023-11-23\n\n### Bug Fixes\n\n- Don't panic with todo!() on inaccessible dir\n- Don't panic if the btime of a file is Err\n- Lifetime annotations and manpage/shell completion nits\n- Reflow help\n\n### Features\n\n- Handle formatting and display of binary extended attributes.\n- Add netbsd and freebsd support for extended attributes\n\n### Miscellaneous Tasks\n\n- Update flake inputs\n- Release eza v0.16.1\n\n### Testing\n\n- Vars mocking\n- Display and meta options\n- Filtering and sorting\n- Long view options\n- Regenerate `--help` tests\n\n### Build\n\n- Sign release tags\n\n## [0.16.0] - 2023-11-16\n\n### Bug Fixes\n\n- Fix cross compilation\n- Snap requires a base\n- Move `--smart-group` to long view options\n- Colo[u]r-scale didn't have a base value\n- Fix snapcraft.yaml formatting\n\n### Documentation\n\n- Add comments for bzip variants\n- Added the fact that total-size is unix only\n\n### Features\n\n- Add some file extensions\n- Abort on panic (saving 0.1 M)\n- Add powertest\n\n### Miscellaneous Tasks\n\n- Ignore blame from #644\n- Stabilize powertest version\n- Release eza v0.16.0\n\n### Testing\n\n- Implements tests using the generated directory\n- Powertests using generated testdirs\n- Add hashed versions of powertests\n\n## [0.15.3] - 2023-11-09\n\n### Bug Fixes\n\n- Changed quote in --almost-all completion\n- [**breaking**] Remove Repo column when using --git-repos when no git repo\n- Reformat `help.rs`\n- Allow unused macro rule arms\n\n### Documentation\n\n- Improve CONTRIBUTING.md, README.md\n- Improve README.md\n- Introduce INSTALL.md\n\n### Features\n\n- Create EZA_ICONS_AUTO environment variable\n- Create EZA_ICONS_AUTO environment variable\n- Demo gif and gif generation recipe\n- Add ocaml icon filetypes\n- Add PRQL\n- Add `--color-scale`\n\n### Miscellaneous Tasks\n\n- Add to CODEOWNERS file to make sure I get ping'd on files being touched\n- Add myself to codeowners to watch modifications on parsing\n- Improve the PR template\n- Release eza v0.15.3\n\n### Refactor\n\n- Remove commented out test code\n- Finalize `decay` -> `color_scale`\n\n### Build\n\n- Refactor flake\n- Bump libc from 0.2.149 to 0.2.150\n- Bump DeterminateSystems/nix-installer-action from 4 to 7\n- Bump rustix from 0.38.13 to 0.38.21\n\n### Ci\n\n- Refactor pre-commit-hooks\n- Refactor publish workflow\n\n## [0.15.2] - 2023-11-02\n\n### Bug Fixes\n\n- Correct width when --no-quotes is used\n- Clippy lint and add option to grid-details\n- --smart-group only works for current user\n\n### Features\n\n- Add Typst to the recognized files\n\n### Miscellaneous Tasks\n\n- Release eza v0.15.2\n\n### Refactor\n\n- Replace `lazy_static` with `once_cell`\n- Replace plain values with TextColours\n\n### Testing\n\n- Added more content to the dir generator\n- Changed size of one of the files\n\n## [0.15.1] - 2023-10-26\n\n### Bug Fixes\n\n- Only store top-level recursive dir size\n- Changed windows methods\n- Underscored unused windows variables\n- Added device for filesystem to hashmap\n- Don’t display target’s size if we’re not dereferencing\n- Display offset for filenames with spaces\n- Fix clippy warnings\n- Fix doc-tests on RecursiveSize\n- Fix dead_code warnings on Windows\n\n### Documentation\n\n- Fix doc-tests formatting and address other documentation review requests\n\n### Features\n\n- Add a new filetype for source code files\n- Add a new icons for source code files and other files\n- Support for displaying blocksize on directories\n\n### Miscellaneous Tasks\n\n- Release eza v0.15.1\n\n### Refactor\n\n- Move total-size calculations to File\n- Add RecursiveSize type to simplify total-size calculation\n\n## [0.15.0] - 2023-10-19\n\n### Bug Fixes\n\n- Reenable debug symbols in debug builds\n- Fmt, windows, and nix fixes\n- Reverted autofmt changes\n- Updated match indents\n- Changed flag name\n- Clippy lint\n- Merge conflict with main\n\n### Documentation\n\n- Correct color option spellings\n- Added flag to readme\n- Added flag to man\n\n### Features\n\n- Add option --smart-group\n- Add completions, man for --smart-group\n- Added recursive directory parser\n- Added flag to completions\n- Add icons=always,auto,never. dont display icons in a tty|piped\n- Fix auto value for colors and icons + documentation\n- [**breaking**] Remove --no-icons in favor of --icons=always,auto,never. default is auto\n\n### Miscellaneous Tasks\n\n- Upgrade to uutils_term_grid from unmaintained term_grid\n- Release eza v0.15.0\n\n### Build\n\n- Bump DeterminateSystems/nix-installer-action from 5 to 6\n\n### Ci\n\n- Remove stalebot, is super annoying\n- Adjust test case to icons=auto (no icons should show due to tty)\n\n## [0.14.2] - 2023-10-12\n\n### Bug Fixes\n\n- Comment out redundant static musl build\n- Refactor sed command to build manpages\n- Update additional completions for help, almost-all, dereference\n- Fix zsh completions\n\n### Documentation\n\n- Add missing options to man page and CLI --help info\n\n### Features\n\n- Add missing nu shell completions\n- Adding the EZA_OVERRIDE_GIT env var\n\n### Miscellaneous Tasks\n\n- Release eza v0.14.2\n\n### Refactor\n\n- Use musl target for amd64 deb package\n- Directly use one \"big\" awk command\n\n### Styling\n\n- Remove trailing spaces and trailing line\n\n### Build\n\n- Bump libc from 0.2.148 to 0.2.149\n- Bump DeterminateSystems/nix-installer-action from 4 to 5\n\n## [0.14.1] - 2023-10-08\n\n### Bug Fixes\n\n- Replace left-over exa in fish completion\n- Diabling static linked binaries due to segfault\n- Make os error 13 fail loud\n- Root group not painted as expected when eza used by root\n- Adjust change width calculations for hyperlink and classify\n\n### Documentation\n\n- Correct CONTRIBUTING.md on commit message type\n- Fix typos\n- Add zsh with homebrew part to completions section\n- Installation on fedora updated\n\n### Features\n\n- Add basic nushell completion file\n- Add codeowner for nu completions\n- Readded musl static bin as it works\n\n### Miscellaneous Tasks\n\n- Release eza v0.14.1\n\n### Refactor\n\n- Align completions\n- Do not match for numbers and remove single-use fn\n- Consistent argument order\n\n### Testing\n\n- Classify-hyperlink test case for width 50\n- Move classify tests to local\n\n### Build\n\n- Bump trycmd from 0.14.17 to 0.14.19\n- Make checksums easier to copy-paste\n- Improve release automation\n- Fix version bump\n- Fix double echo\n- Automate gh release\n- Add `codegen-units = 1` and remove `opt-level = 3`\n- Add back `opt-level = 3`\n\n### Ci\n\n- Treat warnings as errors\n\n## [0.14.0] - 2023-10-02\n\n### Bug Fixes\n\n- Ignore refs for blame\n- Avoid unstable inner attributes\n- Merge conflict with main\n- Merge conflict with main\n- Fix manpage generation of default package\n- Changed dll icon\n- Changed readme and Added README icon\n- New R lang icon\n- README is sorted and formatted\n- Fix large_enum_variant warning with explanation\n- Query stdout terminal size to see if the output gose to a tty.\n- Use windows-specific API for terminal size query on windows\n- Add `windows-sys` dependency for targeting windows\n- Use `std::io::IsTerminal` to eliminate compatibility issue\n- Terminal size query should only check `stdout`\n- Prefix unused binding name with underscore\n\n### Documentation\n\n- Add completions + manpage for --no-quotes flag\n- Leave nix install instructions open-ended\n- Adding termux section\n- Leave nix install instructions open-ended\n- Added the new colors option to the man\n- Documenting custom time-style\n- Time-format supporting custom formats\n- Updated man to add new colors\n- Description of `--color` in README, manpage, and completions\n- Change `color` to `colo[u]r` in the option description.\n\n### Features\n\n- Add rustfmt.toml file to prevent flags.rs fmt on save\n- Add quotations around filenames with spaces. exa pr#1165\n- Replace hardcoded version by version variable\n- Add header to colors-explanation page\n- Revise man rule to use for loop and insert version\n- Adding the possibility to change git-repos colors\n- [**breaking**] Separated root from other users\n- New Rust icon\n- Added bdf,psf icons\n- Added lib icon\n- Added Contacts,Favorites icons\n- Added home icon\n- Added fdmdownload icon\n- Added statically linked binaries\n\n### Miscellaneous Tasks\n\n- Release 0.14.0\n\n### Refactor\n\n- Ignore options/flags.rs\n- Renamed and reintended some code\n- Reformatted a line\n\n### Styling\n\n- Format some parts correctly\n\n### Build\n\n- Bump unicode-width from 0.1.10 to 0.1.11\n- Bump git2 from 0.18.0 to 0.18.1\n- Temporarily disable aarch64-unknown-linux-gnu\n- Name static binaries\n\n## [0.13.1] - 2023-09-25\n\n### Bug Fixes\n\n- Typo `this` -> `that`\n- Don’t show color when color is disabled\n- Respect spec on Windows and make it for with Konsole\n- Major and minor device on MacOS\n- Linux uses u32 for major/minor device numbers\n- Error for missed semicolon\n- More than 3 bools in a struct\n- Enable rustfmt by removing .rustfmt.toml which disables it\n- Replace rustfmt::skip on expressions because experimental\n- Remove unnecessary rustfmt::skip's in windows code\n- Add src/options/flags.rs to rustfmt.excludes\n- Left-over merge conflict in src/output/table\n\n### Documentation\n\n- Update README.md\n- Update --mounts option to include MacOS\n- Documenting --only-files\n\n### Features\n\n- Add EXA_COLOR bindings for un-themed items\n- Add EZA_ environment variables with fallback to EXA_\n- Listing files only using '--only-files' flag\n- Add rustfmt check to unit-tests workflow\n\n### Miscellaneous Tasks\n\n- Add completion for --only-fies (zsh,fish)\n- Release 0.13.1\n\n### Refactor\n\n- Fix rustfmt issues and place skips where needed\n- Reorder unit-tests to fmt, clippy and tests\n\n### Styling\n\n- Formatted using treefmt\n- Fix clippy warning after rustfmt\n- Fix treefmt issues in options module\n- Reapply rustfmt after rebase from main\n\n### Testing\n\n- Add unit tests for new style abbreviations\n- Regen git_repos_no_status\n- Test for listing files only\n\n### Build\n\n- Bump actions/checkout from 2 to 4\n- Bump chrono from 0.4.30 to 0.4.31\n- Bump timeago from 0.4.1 to 0.4.2\n- Bump libc from 0.2.147 to 0.2.148\n- Bump terminal_size from 0.2.6 to 0.3.0\n\n### Ci\n\n- Added formatters to treefmt\n- Make various improvements\n- Only apply labels when opening a PR\n\n## [0.13.0] - 2023-09-18\n\n### Bug Fixes\n\n- Crate can't contain broken symlink\n- Remove executable flag from fish completion file\n- Use proc_mounts only on linux\n- Hotfix harmful documentation\n- Fix hyperlinks on Windows\n- Needless_borrow\n- Nix flake check also builds the package\n- [**breaking**] Change number_huge and unit_huge to match the man page short codes\n\n### Documentation\n\n- Added instructions to install completions of eza to the readme\n- Added cafkafk suggestions\n- Fix codeblocks in zsh completions\n- Update README.md\n- Add Winget install info\n- Link directly to space\n- Document new file type two letter codes in man page\n- Document filetypes theme and rename trait\n- Update deb instructions to use keyring\n- Fix chmod in deb installation instructions\n- Add potential gpg install to deb installation instructions\n- Add install instructions for Void Linux\n- Document dimmed and italic style codes\n- Document character style pairs in the code and match with man page\n- Documentation of 'sn' and 'sb' conflicted with later docs\n\n### Features\n\n- Add completion files in deb packaging script\n- Adds filtering for Windows hidden files\n- Make file types themeable\n- Lazy loading of a files extended attributes and absolute path\n\n### Miscellaneous Tasks\n\n- Augment gitter size in README\n- Release 0.13.0\n\n### Performance\n\n- Add criterion for benchmarking\n\n### Refactor\n\n- Refactor just in crossfile\n- DRY up justfile\n- Ignore missing MSVC docker image\n- Removed unused imports, mark mods as allow unused\n- Format code\n- Move ALL_MOUNTS to fs::mounts\n- Migrate ALL_MOUNTS from lazy_static to OnceLock\n- Rename FileType::Immediate to more obvious FileType::Build\n\n### Testing\n\n- Autogenerate testing dir\n- Stabalised unit-tests.yml\n- Autogenerate test dirs\n- Generate device files\n- Add unit tests that test both exa and ls style codes together\n- Address variable names\n\n### Build\n\n- Set optlevel to 3\n- Add musl binary for linux\n- Fix checksums\n- Add TODOs to targets\n\n### Ci\n\n- Add Winget Releaser workflow\n- Add nix Flake check to flake.yml\n- Removed nix build in favor of nix flake check\n- Include bash completion script in treefmt and fixed shellcheck formatting in completion script\n- Fix spelling attemps -> attempts\n\n## [0.12.0] - 2023-09-14\n\n### Bug Fixes\n\n- RUSTSEC-2020-0071\n- Expand `--all` help\n- Generalize gitignore to ignore all eza deb packages\n- Change trycmd config to use test/itest folder for testing\n- Revert to old apt install command suggestion and add hint\n- Canonicalize errors when the destination of a symbolic link is bad\n- Handle other canonicalize errors in hyperlinks and git\n- Fix windows build when canonicalize returns an error\n- Is_some_and is an unstable Rust feature until 1.70\n- Remove stray backslashes\n- Exit 13 on os error 13\n- Rewrite comment\n- Improve trace strings\n- Tracing typo\n- Revert \"Support for Windows Hidden Files\"\n- Shellcheck warnings\n- Revert \"Support for Windows Hidden Files\"\n- Shellcheck warnings\n\n### Documentation\n\n- Expand `--all` documentation\n- Add gentoo\n- Fix gentoo install\n- Add MacPorts install info\n- Add pthorpe92 gist\n- Add docs for --git-repos & --git-repos-no-status\n- Fix gpg armor flag for deb release in readme\n- Add scoop install info\n- Add Mac support for the --mount option in the man page\n- Add SAFETY comments to unsafe code blocks\n- Remove license from developemnt section\n- Update rust badge\n- Add better explanation of git repos + no status\n- Remove color specifications. change unknown git repo status to `~`\n- Fix missing color specification from man page\n- Add missing man page for debian release\n\n### Features\n\n- Add audit workflow\n- Add trycmd as dev-dependency\n- Add minimal trycmd binary\n- Add a few trycmd tests as example\n- Add apt installation workflow\n- Support --mount option on Mac\n- Support --mount option on Mac\n- Adds filtering on Windows hidden files\n- Document and change output for --git-repos\n- Add PERMISSION_DENIED exit code\n- Adds filtering on Windows hidden files\n- Adds filtering on Windows hidden files\n- Added shellcheck to treefmt\n- Adds filtering on Windows hidden files\n\n### Miscellaneous Tasks\n\n- Bump uzers to v0.11.3\n- Bump chrono from 0.4.27 to 0.4.30\n- Removal of xtests\n- Removal of vagrant\n- Remove deprecated devtools\n- [**breaking**] MSRV 1.70\n- Run spellcheck\n- Release 0.12.0\n\n### Refactor\n\n- Over-engineer deb-package.sh\n- Hide xtests folder\n- Split trycmd into tests for all, unix and windows\n- Limit unit-tests run on workflow change to unit-tests itself\n- Add tracing to various code parts\n- Make std::process::exit global\n- Moved generateTest.sh to devtools/\n- Renamed the file\n\n### Revert\n\n- \"Support for Windows Hidden Files\"\n\n### Styling\n\n- Remove TODO message on the absolute_path property\n- Fix shellcheck issues in deb-package.sh\n- Fix shellcheck issues in deb-package.sh\n- Fix shellcheck issues in deb-package.sh\n\n### Testing\n\n- Remove vhs from flake\n- Remove vhs-runner files\n- Dump trycmd from nix sandbox\n- Fix name of trydump\n- Add trycmd\n- Add nix feature\n- Add example long tests for sandbox\n- Set itests files to unix epoch\n- Set itest files to unix epoch\n- Refactor setting unix epoch\n- Auto discard old definitions\n- Fix test reference\n- Add long_all_nix.toml\n- Add long_blocksize_nix.toml\n- Add long_extended_nix.toml\n- Add long_git_nix.toml\n- Add long_git_repos_nix.toml\n- Add long_git_repos_no_status_nix.toml\n- Add long_grid_nix.toml\n- Add long_header_nix.toml\n- Add long_icons_nix.toml\n- Add long_octal_nix.toml\n- Add long_time_style_relative_nix.toml\n- Freeze nix tests\n- Fix trydump when no files to delete\n- Adding more content to test\n- Modified unix and all tests\n- Regenerate nix tests\n- Convert windows tests with new itest dir\n- Fixed windows tests being wrong\n- Added a test generator\n- Add more unix_tests\n- Fixed unix tests to remove any distro specific\n- Removed git test breaking on nix\n- Remove non-deterministic test\n\n### Build\n\n- Add compression, checksum gen for bin\n- Add deny.toml\n- Update flake.lock, cargo.lock\n- Remove org warnings\n- Remove itest\n- Update flake.lock\n- Add itest, idump\n- Make trycmd part of checks\n\n### Ci\n\n- Don't use nix feature on ci\n- Fix windows build\n- 1.65 -> 1.70\n- Enforce conventional commits\n- Enforce conventional commits\n\n### Doc\n\n- Remove xtests section from readme\n- Add deprecation warning to xtests/readme\n- Add deprecation warning to just xtest commands\n- Add deprecation warning to vagrantfile\n- Add guidelines for commit messages\n\n## [0.11.1] - 2023-09-11\n\n### Bug Fixes\n\n- Add vendored-libgit2 feature to git2 dependency\n- Filename escaping (last character lost sometimes, no hyperlink)\n- Build for Windows with chrono\n\n### Documentation\n\n- Explain vendored-libgit2\n- Add homebrew, misc fixes\n- Fix code of conduct link\n- Update archlinux\n- Remove broken dependabot link\n- Add informaton about lazy_static\n- Add star history\n- Add bright color options in man pages\n- Add bright color support in readme changelog\n\n### Features\n\n- Add highlighting of mounted directories (Linux only)\n- Mark `.git` as ignored, which hides it when using `--git-ignore`\n- Expose git2 feature vendored-libgit2\n- Add build commands to deb-package.sh\n- Add bright colour options, change punctuation default\n- Support the MSRV of Rust (1.65.0)\n- Use chrono crate to handle datetime-related features\n\n### Miscellaneous Tasks\n\n- Bump actions/checkout from 3 to 4\n- Release 0.11.1\n\n### Testing\n\n- Stabilize testing without sandbox\n- Disable gif rendering\n\n### Build\n\n- Add release binaries\n- Fix binary gen\n- Add armhf binary\n\n### Deps\n\n- Change ansi_term to ansiterm from rustadopt\n\n## [0.11.0] - 2023-09-04\n\n### Bug Fixes\n\n- Add windows implementation of is_empty_dir\n- Re-align `--git-ignore` in help message\n- Avoid direnv error if nix isn't installed\n\n### Documentation\n\n- Empty dir functions\n- Document is_empty_dir functions\n- Add function documentation for get_file_type and icon_for_file.\n\n### Features\n\n- Optimize checking for empty directories when a directory has subdirectories\n- Use perfect hash tables for file types and icons\n- Add backlog of icons from various exa pull requests and others\n- Add backlog of icons from various exa issues\n\n### Miscellaneous Tasks\n\n- Bump git2 from 0.17.2 to 0.18.0\n- Bump uzers from 0.11.1 to 0.11.2\n- Bump DeterminateSystems/flake-checker-action from 4 to 5\n- Bump DeterminateSystems/nix-installer-action from 3 to 4\n- Bump glob from 0.3.0 to 0.3.1\n- Bump actions/stale from 5 to 8\n- Bump terminal_size from 0.1.16 to 0.2.6\n- Bump timeago from 0.3.1 to 0.4.1\n- Release 0.11.0\n\n### Refactor\n\n- Use phf macros instead of codegen to create icon and filetype tables\n- Add constants for most of the commonly used icons\n- Add constants for the rest of icons used multiple times\n- Rename class FileExtension to FileTypeClassifier to better reflect the purpose\n- Move get_file_type to FileType enum\n\n### Styling\n\n- Is_empty_dir() was put between the unix size() and windows size()\n\n### Build\n\n- Use rust stable\n- Add unstable package\n- Disable clippy check 'unreadable_literal' in generated files\n\n## [0.10.9] - 2023-08-28\n\n### Bug Fixes\n\n- Respect git-repos flags\n\n### Documentation\n\n- Add badge for eza gitter/matrix room\n- Fix matrix link\n- Add ignored flags to readme\n- Add ignored flags to manual\n- Add ignored flags to help\n- Add ignored flags to xtest\n\n### Features\n\n- `--no-git` option\n\n### Miscellaneous Tasks\n\n- Add funding.yml\n- Release 0.10.9\n\n### Tree-wide\n\n- Fix Windows build\n\n### Build\n\n- Add convco to dev\n\n### Ci\n\n- Create flakehub-publish-tagged.yml\n- Add workflow_dispatch to flakehub-pub\n- Edit workflow_dispath\n- Refactor workflow_dispath\n- Refactor workflow_dispath\n- Remove broken dispatch\n- Add flakehub-backfill\n- Add codeowners\n- Add gierens as .deb codeowner\n- Add windows to CI\n\n## [0.10.8] - 2023-08-22\n\n### Bug Fixes\n\n- TextCell building of detailed grid view for  hyperlink and icon options\n- Block's Colours trait as for file sizes\n- --blocksize completion, new description\n- Option.views unit tests use --blocksize\n- Add missing colon before -w/--width\n- Replace exa by eza in help string\n- Change exa to eza in invalid option error\n- Add missing name section to eza_colors-explanation manpage\n- Replace exa by eza in .gitignore\n\n### Documentation\n\n- Update issue templates\n- Cafkafk -> eza-community\n\n### Features\n\n- Add git-ignored color/style option\n- Add `just` and `pandoc` to devShell bc they are necessary for man\n- Add `.envrc` so direnv automatically opens the nix dev environment\n- Match folder icon to reflect contents\n- Match folder icon to reflect contents\n- --blocksize completion, new description\n- Add script deb-package.sh\n\n### Miscellaneous Tasks\n\n- Bump git2 from 0.16.1 to 0.17.2\n- Bump unicode-width from 0.1.8 to 0.1.10\n- Bump libc from 0.2.93 to 0.2.147\n- Bump num_cpus from 1.13.0 to 1.16.0\n- Release 0.10.8\n\n### Refactor\n\n- Fs::fields::Blocks\n- File::blocks() name, revise calculation\n- Rendering Blocksize like file sizes\n- Rename Blocks column to Blocksize\n- Use -S/--blocksize and, var BLOCKSIZE\n- Unit tests for output.render.blocks\n- Flip if (as suggested/demanded by clippy)\n- Migrate to uzers lib\n\n### Build\n\n- Add charm to nix develop\n- Add tests/tmp to gitignore\n- Add initial tape\n- Add test runner sketch\n- Add test runner to justfile\n- Add out.gif to .gitignore\n- Add run_tests  NAME arg\n- Add reference main.txt\n- Add gen_test\n- Fix typo\n- Handle arbitrary NAMES\n- Remove commented out code\n- Fix code formatting\n- Add vhs-runner main function\n- Gen_test support automatic gen\n- Automatic tape detection\n- Add print_msg with ansi color\n- Slight documentation/refactor\n- Use ansi output on all output\n- Disable vhs publish ad\n- Add better tracing\n- Remove defective sed\n- Add color variables\n- Add eza-long test\n- Add itest testing dir\n- Add parallel runner\n\n### Ci\n\n- Help text in xtests\n- Nix flake check\n- Add labeler for flake\n- Add flake description\n\n### Deps\n\n- Change users depedency to uzers\n\n### Doc\n\n- Add git-ignore style/color information to manpage\n- --blocksize, new description\n- --blocksize, new description\n- --blocksize, new description\n- Add gpg public key for the deb repository\n- Add section about debian and ubuntu installation\n\n### Git\n\n- Add deb package to .gitignore\n\n## [0.10.7] - 2023-08-13\n\n### Bug Fixes\n\n- Respect GIT_CEILING_DIRECTORIES\n- MacOS flake support\n- Broken zsh completion syntax\n\n### Features\n\n- Add gitlab-ci.yml\n- Improve icon for Earthfile\n- Better.ps1, add .psd1, .psm1 icons\n- Replace .bat icon by windows cli icon\n- Use TeX icons and add .bib, .bst icon\n- Use Ocaml logo, add .mli, .mll, .mly\n- Add many more icons\n- Add -w/--width to help string\n- Add -w/--width to README\n- Add -w/--width to flags\n- Add -w/--width to manpage\n- Fish -w/--width\n- Zsh -w/--width\n\n### Miscellaneous Tasks\n\n- Add PR template\n- Bump log from 0.4.14 to 0.4.20\n- Release 0.10.7\n\n### Refactor\n\n- GIT_DIR handling\n- Turn unused var into value\n- Fix borrowed trait implements required\n- Simplify format strings\n- Consistent style\n- Clippy::explicit_auto_deref\n- Clippy::explicit_auto_deref\n- Clippy::redundant_else\n- Clippy::manual_map\n- Clippy::semicolon_if_nothing_returned\n- Clippy::extra_unused_lifetimes\n- Allow clippy::wildcard_in_or_patterns\n- Clippy::uninlined_format_args\n- Allow Colours::new call with self\n- Clippy::explicit_iter_loop\n- Clippy::uninlined_format_args\n- Clippy::needless_late_init\n- Clippy::useless_conversion\n- Clippy::implicit_clone\n- Clippy::uninlined_format_args\n- Clippy::into-iter-on-ref\n- Clippy::semicolon_if_nothing_returned\n- Clippy::into_iter_on_ref\n- Clippy::needless_lifetimes\n- Clippy::uninlined_format_args\n- Trivial clippy lints\n- Clippy::semicolon_if_nothing_returned\n- Clippy::semicolon_if_nothing_returned\n- Clippy::manual_let_else\n- Clippy::semicolon_if_nothing_returned\n- Clippy::semicolon_if_nothing_returned\n- Clippy::uninlined_format_args\n- Clippy::manual_let_else\n- Clippy::manual_let_else\n- Clippy::manual_let_else\n- Clippy::manual_let_else\n- Clippy::manual_let_else\n- Fix trivial cast\n- Clippy::needless-borrow\n- TerminalWidth::deduce to -w/--width\n\n### Ci\n\n- Create pull_request_template.md\n- Add clippy check\n- Add dependabot updater\n\n### Doc\n\n- Create SECURITY.md\n- Create CONTRIBUTING.md\n\n## [0.10.6] - 2023-08-07\n\n### Bug Fixes\n\n- Rename eza-colors-explanation\n- Exa -> eza in manpage\n\n### Documentation\n\n- Adding --git-repos to help.\n\n### Features\n\n- Use GIT_DIR env var to find the repo\n- Add color explanations\n\n### Miscellaneous Tasks\n\n- Release 0.10.6\n\n### Doc\n\n- Add aur, nixpkgs installation\n\n### Git\n\n- Use GIT_DIR env var to find the repo\n- Use open_from_env before discover\n\n## [0.10.5] - 2023-08-03\n\n### Bug Fixes\n\n- Output wraps in terminal\n- Respect icon spacing\n\n### Miscellaneous Tasks\n\n- Release 0.10.5\n\n## [0.10.4] - 2023-08-02\n\n### Bug Fixes\n\n- Syntax error\n\n### Features\n\n- Added \".out\" files for latex\n- Add changelog generation\n\n### Miscellaneous Tasks\n\n- Release 0.10.4\n\n## [0.10.3] - 2023-07-31\n\n### Bug Fixes\n\n- More JPG extensions\n- Add compression icon to .tXX files #930\n- Dereferencing linksfile size.\n- Dereferencing links users.\n- Dereferencing links groups.\n- Dereferencing links permissions.\n- Dereferencing links timestamps.\n- Add Svelte icon\n- Fish completion for -i/--inode option\n- Typo\n- Use eprintln instead\n- Use stderr on no timezone info\n- Bump openssl-src from 111.15.0+1.1.1k to 111.26.0+1.1.1u\n- Bump openssl-src from 111.15.0+1.1.1k to 111.26.0+1.1.1u\n- Changed bin name via cargo.toml\n- Change man pages to reffer to new binary name\n- Change completions to new binary name\n- Change completion file names\n- Change name to eza\n- Bump git2 from 0.13.20 to 0.16.1\n- Fixed grid bug\n- Fixed grid bug\n- Bump rust to 1.71.0\n- Take -a and -A equally serious\n- Changed default folder icon\n- Add clippy as part of the toolchain\n- Change license icon\n- Change gpg icons to keys\n- Add icon for ocaml (.ml extension)\n- Better license icon\n- Replace obsolete icons\n- Add Emacs icon for .el and org-mode for .org\n- Added icons for .rmeta\n- Add icon support for .mjs, .cjs, .mts, .cts files\n- Add webpack.config.cjs to immediate files list\n- .ipynb icon comment\n- Removed result\n- Update --version info\n- Sort is_immediate\n- Add flake, autoconf, cargo lock\n- Added trailing commas\n- Update snapscraft.yaml\n- Remove accidentally commited test files\n\n### Feat\n\n- Add JPF to image filetype\n\n### Features\n\n- Add support Typescript and ReasonML projects\n- New Icons and CLI argument to suppress icons\n- Add sty file\n- Add julia file extension icon\n- Add symlink dereferencing flag\n- Add -X/--dereference completions\n- Add -X/--dereference completions\n- Symlinks report their target's valid size\n- Update Cargo.toml to optimise binaries for size\n- Add status for git repos\n- Add selinux contexts support\n- Add -o shorcut to --octal-permissions\n- Hyperlink flag\n- Update Cargo.toml to optimise binaries for size \n- Add git-status-.* completions\n- Zsh add git-status-.* completions\n- Add git-status-.* completions\n- Add Zig module icons\n- Add icon for Vagrantfile\n- Add git icon to .gitignore_global file\n- Left align relative time\n- Add support for --time-style=relative\n- Add vim icon\n- Add justfile\n- Add pxm\n- Add compressed types\n- Add compressed icons\n\n### Fixup\n\n- Split prefix tests by property\n\n### Improve\n\n- Vim icon\n\n### Makefile\n\n- Be compatible with BSD and OS X\n\n### Miscellaneous Tasks\n\n- Update zoneinfo_compiled, datetime to 0.5\n- Update users to 0.10\n- PR feedback\n- Bump to v0.10.2\n- Bump to v0.10.3\n- Update cargo lock\n\n### Refactor\n\n- Use shorthand fields\n- Removed commented code\n- Sorted file types, color table\n\n### StatResult\n\n- :Path -> Dir\n\n### Styling\n\n- Add icon for reStructuredText (src) files\n\n### Testing\n\n- Change to /usr/bin/env bash\n\n### ToStr\n\n- :to_str -> ToString::to_string\n\n### Add\n\n- Mp2 audio format icon\n\n### Build\n\n- Use binary name only\n\n### Ci\n\n- Remove unused .github files\n- Remove unused .github files\n- Create unit-tests.yml\n- Create unit-tests.yml\n- Add trivial nix flake\n- Add treefmt, rust-toolchain, nixfmt\n- Add .#test, .#clippy, .#check\n- Add nix flake\n- Change branch\n- Bump rust to 1.71.0\n- Automatically mark issues/PRs stale\n- Run tests when building with nix\n- Moving actions to dtolnay's version\n- Update Cargo.toml\n- Create labeler.yml\n- Add snap to labeler.yml\n- Add filetype.rs autolabel\n\n### Details\n\n- `filter` is only used when recursing\n\n### Doc\n\n- Add -X/--dereference flag\n- Change name in README.md\n- Add `nix run` to readme\n- Fix flow issue\n- Fix typos\n- Add mandatory snowflake emoji\n- Document nix flake development\n- Document nix flakew\n- Update README.md\n- Update README.md\n- Update README.md\n- Update README.md\n- Update README.md\n- Readme change screenshot to eza\n- Add CoC badge to readme\n- Add CODE_OF_CONDUCT.md\n- Add crates.io badge, license badge\n- Fix links\n- Update README.md\n- Update README.md\n\n### Documentation\n\n- Add hint how to install exa on Android / Termux\n\n### Git-feature\n\n- Display if a file is updated but unmerged (conflicted)\n\n### Icons\n\n- Add Gentoo for .ebuild\n\n### Io\n\n- :Result -> IOResult\n\n### Src/main.rs\n\n- Remove clippy::unnested_or_patterns\n\n### Vagrant\n\n- Update apt before installing\n\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.4560546875,
          "content": "<!--\nSPDX-FileCopyrightText: 2014 Coraline Ada Ehmke\n\nSPDX-License-Identifier: CC-BY-4.0\n-->\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at:\n\nmatrix: @cafkafk:nixos.dev\n\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.4580078125,
          "content": "<!--\nSPDX-FileCopyrightText: 2023-2024 Christina Sørensen\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n# Contributing to eza\n\nIf you'd like to contribute to eza, there are several things you should make\nsure to familiarize yourself with first.\n\n- Code of conduct [Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md)\n- Requirement of conformance to [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\n- Requirement of conformance to [Semantic Versioning](https://semver.org/)\n- The [Security Policy](SECURITY.md)\n- [Free and Open Source (FOSS) software](https://www.gnu.org/philosophy/free-sw.en.html)\n\n## Hacking on eza\n\nIt is strongly recommended that you install Nix for hacking on eza. We leverage\nnix  as a way to easily test and distribute eza to many users, and it allows us\nto provide multiple tools easily for developers. Instead of having to install\neach dependency manually and setting up a development environment, Nix allows\nyou  to use the same environment as the devs use.\n\nTherefore, it is useful that you have a version of Nix installed with the\n\"experimental\" feature flakes enabled. Further, to make hacking on eza as easy\nas possible for yourself, you'd do yourself a favor to install\n[direnv](https://direnv.net/).\n\nWhen you enter the eza repository, if you have `direnv` installed, you'll be\nprompted to allow it with `direnv allow`. Doing this will save you from having\nto manually enter the development environment each time you open the folder. If\nyou don't have direnv installed however, you can run `nix develop` in a pinch,\nto enter the direnv.\n\nThe development environment includes basic checks of conformance to conventional\ncommits, cargo clippy lints, and much more.\n\nIt also contains a pre-commit-hook making it a lot easier not to make potential\nmistakes that will unnecessarily delay getting your PRs accepted. Most\nimportantly, it ensures your commits are conforming to conventional commits.\n\nSome useful commands include:\n- `nix flake check`: checks everything is correct.\n- `nix build`: build eza.\n- `nix build .#test`: runs eza's cargo tests\n- `nix build .#clippy`: runs clippy on eza\n- `nix fmt`: automatically formats your code as required by flake cheks and\n  pre-commit-hooks.nix\n- `just itest`: runs integration tests\n\n**For non-nix users,**\nThere are traditional `pre-commit` hooks, which you can install with your system package manager or\n`brew|pip install pre-commit`, and run `pre-commit install -c .pre-commit-config-non-nix.yaml` in the root of the repository.\nThen these hooks will run automatically when you commit.\n\nThe [just](https://github.com/casey/just) command runner can be used to run some\nhelpful development commands, in a manner similar to `make`.  Run `just --list`\nto get an overview of what’s available.\n\nTo compile the manual pages, you will need [pandoc](https://pandoc.org/), which\nthe nix flake should have installed for you.  The `just man` command will\ncompile the Markdown into manual pages, which it will place in the `target/man`\ndirectory.\n\neza depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain\nfeatures.  If you’re unable to compile libgit2, you can opt out of Git support\nby running `cargo build --no-default-features`. Again, the nix flake should\nhave taken care of this for you, if not, please file an issue.\n\nIf you intend to compile for musl, you will need to use the flag\n`vendored-openssl` if you want to get the Git feature working.  The full command\nis `cargo build --release --target=x86_64-unknown-linux-musl --features\nvendored-openssl,git`.\n\nIf you want more information on the tests please read:\n[testing on eza](https://github.com/eza-community/eza/blob/main/TESTING.md)\n\n## Creating a PR\n\nFirst, use the pull request template.\n\nPlease make sure that the thing you worked on... actually works. Make sure to\nalso add how you ensured this in the PR description. Further, it's expected\nthat you do your best to check for regressions.\n\nIf your PR introduces a flag, you MUST:\n- Add completions for bash, zsh, fish, nushell\n- Add documentation to the man page\n- Add your option to the help flag\n- Add your option to the README.md\n\nBefore submitting, you SHOULD have run `nix flake check` and ensured that all\nissues are addressed. For formatting issues, `nix fmt` will format the code for\nyou. Most clippy issues can be resolved with `cargo clippy --fix` (although it\nmight be educational to fix them yourself). If you have reuse issues, you can\nrun the following command to annotate your code:\n\nHere are the absolute basics:\n- your commit summary MUST follow conventional commits.\n- your commits SHOULD be separated into small, logical chunks.\n- reviewers may ask you to rebase your commits into more sensible chunks.\n- your PR will need to pass CI and local `cargo test`.\n- you may be asked to refactor parts of your code by reviewers.\n\nRemember that no one here is an employee, and treat everyone with respect, as\nthe code of conduct specifies. Also remember to be patient if it takes a while\nto get a response on your PR. Usually it doesn't, but there's only so many\nhours in a day, and if possible, there would be no delay. The delay alone is\nevidence of it's own necessity.\n\n## Commit Messages\nA common commit message contains at least a summary and reference with\nclosing action to the corresponding issue if any, and may also include a\ndescription and signature.\n\n### Summary\nFor you commit messages, please use the first line for a brief summary what\nthe commit changes. Try to stay within the 72 char limit and prepend what type\nof change. See the following list for some guidance:\n- feat: adds a new feature to eza\n- feat(zsh): adds something to zsh completion\n- refactor: revises parts of the code\n- docs(readme): revise the README\n- docs(man): revision of the man pages\n- fix: bugfix in the code base\n- fix(ci): bugfix in the continuous integration\n- ...\n\nNote that this list is not complete and there may be cases where a commit\ncould be characterized by different types, so just try to make your best\nguess. This spares the maintainers a lot of work when merging your PR.\n\n### Description\nIf you commit warrants it due to complexity or external information required\nto follow it, you should add a more detailed description of the changes,\nreasoning and also link external documentation if necessary. This description\nshould go two lines below the summary and except for links stay in the 80 char\nlimit.\n\n### Issue Reference\nIf the commit resolves an issue add: `Resolves: #abc` where `abc` is the issue\nnumber. In case of a bugfix you can also use `Fixes: #abc`.\n\n### Signature\nYou may add a signature at the end two lines below the description or\nissue reference.\n\n### Example\nHere is an example of a commit message for a breaking change that follows these rules:\n\n```\nfix(hyperlinks)!: TextCell building of detailed grid view, hyperlink, icon options\n\nThe hyperlink option adds an escape sequence which in the normal TextCell\ncreation also becomes part of the length calculation. This patch applies\nthe same logic the normal grid already did, by using the filenames bare\nwidth when a hyperlink is embedded. It also respects the ShowIcons\noption just like the normal grid view.\n\nBREAKING CHANGE: The style codes for huge file and units where\ndocumented to be `nt` and `ut` but the code was using `nh` and `uh`.\nThe code has been updated to match the documented style codes.\nEXA_COLORS using style codes `nh` and `uh` will need to be updated to\nuse `nt` and `ut`.\n\nResolves: #129\nRef: #473, #319\n\nCo-authored-by: 9glenda <plan9git@proton.me>\nSigned-off-by: Christina Sørensen <christina@cafkafk.com>\n```\n\n### Additional Examples\n\n- feat: add column selection\n- fix(output): fix width issue with columns\n- test(fs): add tests for filesystem metadata\n- feat!: breaking change / feat(config)!: implement config file\n- chore(deps): update dependencies\n\n### Commit types\n\n- build: Changes that affect the build system or external dependencies (example libgit2)\n- ci: Changes to CI configuration files and scripts (example scopes: Nix, Vagrant, Docker)\n- chore: Changes which do not change source code or tests (example: changes to the build process, auxiliary tools, libraries)\n- docs: Documentation, README, completions, manpage only\n- feat: A new feature\n- fix: A bug fix\n- perf: A code change that improves or addresses a performance issue\n- refactor: A code change that neither fixes a bug nor adds a feature\n- revert: Revert something\n- style: Changes that do not affect the meaning of the code (example: clippy)\n- test: Adding missing tests or correcting existing tests\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 50.9638671875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"ansi-width\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"219e3ce6f2611d83b51ec2098a12702112c29e57203a6b0a0929b2cddb486608\"\ndependencies = [\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"automod\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edf3ee19dbc0a46d740f6f0926bde8c50f02bdbc7b536842da28f6ac56513a8b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"by_address\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fa3c856b712db6612c019f14756e64e4bcea13337a6b33b696333a9eaa2d06\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"num-traits\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9560b07a799281c7e0958b9296854d6fafd4c5f31444a7e5bb1ad6dde5ccf1bd\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"874e0dd3eb68bf99058751ac9712f622e61e6f393a94f7128fa26e3f02f5c7cd\"\ndependencies = [\n \"anstyle\",\n \"clap_lex\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"content_inspector\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7bda66e858c683005a53a9a60c69a4aca7eeaa45d124526e389f7aec8e62f38\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"datetime\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c3f7a77f3e57fedf80e09136f2d8777ebf621207306f6d96d610af048354bc\"\ndependencies = [\n \"libc\",\n \"redox_syscall 0.1.57\",\n \"winapi\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"eza\"\nversion = \"0.20.16\"\ndependencies = [\n \"ansi-width\",\n \"backtrace\",\n \"chrono\",\n \"criterion\",\n \"dirs\",\n \"git2\",\n \"glob\",\n \"libc\",\n \"locale\",\n \"log\",\n \"natord-plus-plus\",\n \"nu-ansi-term\",\n \"number_prefix\",\n \"once_cell\",\n \"palette\",\n \"path-clean\",\n \"percent-encoding\",\n \"phf\",\n \"plist\",\n \"proc-mounts\",\n \"rayon\",\n \"serde\",\n \"serde_norway\",\n \"terminal_size\",\n \"timeago\",\n \"trycmd\",\n \"unicode-width 0.2.0\",\n \"uutils_term_grid\",\n \"uzers\",\n \"windows-sys 0.59.0\",\n \"zoneinfo_compiled\",\n]\n\n[[package]]\nname = \"fast-srgb8\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd2e7510819d6fbf51a5545c8f922716ecfb14df168a3242f7d33e0239efe6a1\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"git2\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fda788993cc341f69012feba8bf45c0ba4f3291fcc08e214b4d5a7332d88aff\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"libgit2-sys\",\n \"log\",\n \"openssl-sys\",\n \"url\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"humantime-serde\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57a3db5ea5923d99402c94e9feb261dc5ee9b4efa158b0315f788cf549cc200c\"\ndependencies = [\n \"humantime\",\n \"serde\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libgit2-sys\"\nversion = \"0.18.0+1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1a117465e7e1597e8febea8bb0c410f1c7fb93b1e1cddf34363f8390367ffec\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"openssl-sys\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"redox_syscall 0.5.8\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df9b68e50e6e0b26f672573834882eb57759f6db9b3be2ea3c35c91188bb4eaa\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d26c52dbd32dccf2d10cac7725f8eae5296885fb5703b261f7d0a0739ec807ab\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"locale\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fdbe492a9c0238da900a1165c42fc5067161ce292678a6fe80921f30fe307fd\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"natord-plus-plus\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"66f8ac0a79782d13e4ec2f955113676d786539965b3764e06fb4e107dcc3da64\"\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.50.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4a28e057d01f97e61255210fcff094d74ed0466038633e95017f5beb68e4399\"\ndependencies = [\n \"serde\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.4.1+3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"faa4eac4138c62414b5622d1b31c5c304f34b406b013c079c2bbc652fdd6678c\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"os_pipe\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ffd2b0a5634335b135d5728d84c5e0fd726954b87111f7506a61c502280d982\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"palette\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cbf71184cc5ecc2e4e1baccdb21026c20e5fc3dcf63028a086131b3ab00b6e6\"\ndependencies = [\n \"approx\",\n \"fast-srgb8\",\n \"palette_derive\",\n]\n\n[[package]]\nname = \"palette_derive\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5030daf005bface118c096f510ffb781fc28f9ab6a32ab224d8631be6851d30\"\ndependencies = [\n \"by_address\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"partition-identity\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa925f9becb532d758b0014b472c576869910929cf4c3f8054b386f19ab9e21\"\ndependencies = [\n \"thiserror\",\n]\n\n[[package]]\nname = \"path-clean\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17359afc20d7ab31fdb42bb844c8b3bb1dabd7dcf7e68428492da7f16966fcef\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd6780a80ae0c52cc120a26a1a42c1ae51b247a253e4e06113d23d2c2edd078\"\ndependencies = [\n \"phf_macros\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c80231409c20246a13fddb31776fb942c38553c51e871f8cbd687a4cfb5843d\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_macros\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f84ac04429c13a7ff43785d75ad27569f2951ce0ffd30a3321230db2fc727216\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67eabc2ef2a60eb7faa00097bd1ffdb5bd28e62bf39990626a582201b7a754e5\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cf17e9a1800f5f396bc67d193dc9411b59012a5876445ef450d449881e1016\"\ndependencies = [\n \"base64\",\n \"indexmap\",\n \"quick-xml\",\n \"time\",\n]\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proc-mounts\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d652f8435d0ab70bf4f3590a6a851d59604831a458086541b95238cc51ffcf2\"\ndependencies = [\n \"partition-identity\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d3a6e5838b60e0e8fa7a43f22ade549a37d61f8bdbe636d0d7816191de969c2\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a78891ee6bf2340288408954ac787aa063d8e8817e9f53abb37c695c6d834ef6\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_norway\"\nversion = \"0.9.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e408f29489b5fd500fab51ff1484fc859bb655f32c671f307dcd733b72e8168c\"\ndependencies = [\n \"indexmap\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml-norway\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"snapbox\"\nversion = \"0.6.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96dcfc4581e3355d70ac2ee14cfdf81dce3d85c85f1ed9e2c1d3013f53b3436b\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"content_inspector\",\n \"dunce\",\n \"filetime\",\n \"libc\",\n \"normalize-line-endings\",\n \"os_pipe\",\n \"similar\",\n \"snapbox-macros\",\n \"tempfile\",\n \"wait-timeout\",\n \"walkdir\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"snapbox-macros\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16569f53ca23a41bb6f62e0a5084aa1661f4814a67fa33696a79073e03a664af\"\ndependencies = [\n \"anstream\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a8a559c81686f576e8cd0290cd2a24a2a9ad80c98b3478856500fcbd7acd704\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"getrandom\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5352447f921fda68cf61b4101566c0bdb5104eff6804d0678e5227580ab6a4e9\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"timeago\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1710e589de0a76aaf295cd47a6699f6405737dbfd3cf2b75c92d000b548d0e6\"\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"trycmd\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"656073a28690a4b8dfd578d1df087826cf8fa53c8161dbd90130d092570a21e1\"\ndependencies = [\n \"anstream\",\n \"automod\",\n \"glob\",\n \"humantime\",\n \"humantime-serde\",\n \"rayon\",\n \"serde\",\n \"shlex\",\n \"snapbox\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"unsafe-libyaml-norway\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b39abd59bf32521c7f2301b52d05a6a2c975b6003521cbd0c6dc1582f0a22104\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uutils_term_grid\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f89defb4adb4ba5703a57abc879f96ddd6263a444cacc446db90bf2617f141fb\"\ndependencies = [\n \"ansi-width\",\n]\n\n[[package]]\nname = \"uzers\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4df81ff504e7d82ad53e95ed1ad5b72103c11253f39238bcc0235b90768a97dd\"\ndependencies = [\n \"libc\",\n \"log\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39281189af81c07ec09db316b302a3e67bf9bd7cbf6c820b50e35fee9c2fa980\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zoneinfo_compiled\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fbebe65e899530f43bd760b23fda8f141118f4db49952b02998cbd0907a5de\"\ndependencies = [\n \"byteorder\",\n \"datetime\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.5625,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n[package]\nname = \"eza\"\ndescription = \"A modern replacement for ls\"\nauthors = [\"Christina Sørensen <christina@cafkafk.com>\"]\ncategories = [\"command-line-utilities\"]\nedition = \"2021\"\nrust-version = \"1.74.0\"\nexclude = [\n  \"/docs/\",\n  \"/devtools/\",\n  \"/snap/\",\n  \"/tests/\",\n  \"/.config/\",\n  \"/.github/\",\n  \"/deb.asc\",\n  \"/deny.toml\",\n  \"/flake.*\",\n  \"/justfile\",\n  \"/powertest.yaml\",\n  \"/rust-toolchain.toml\",\n  \"/.envrc\",\n  \"/.gitignore\",\n  \"/.git-blame-ignore-revs\",\n  \"/.pre-commit-config-non-nix.yaml\",\n]\nreadme = \"README.md\"\nhomepage = \"https://github.com/eza-community/eza\"\nlicense = \"EUPL-1.2\"\nrepository = \"https://github.com/eza-community/eza\"\nversion = \"0.20.16\"\n\n\n[package.metadata.deb]\nlicense-file = [\"LICENCE\", \"4\"]\ndepends = \"$auto\"\nextended-description = \"\"\"\neza is a modern, maintained replacement for ls\n\"\"\"\nsection = \"utils\"\npriority = \"optional\"\nassets = [\n  [\n    \"target/release/eza\",\n    \"/usr/bin/eza\",\n    \"0755\",\n  ],\n  [\n    \"target/release/../man/eza.1\",\n    \"/usr/share/man/man1/eza.1\",\n    \"0644\",\n  ],\n  [\n    \"target/release/../man/eza_colors.5\",\n    \"/usr/share/man/man5/eza_colors.5\",\n    \"0644\",\n  ],\n  [\n    \"target/release/../man/eza_colors-explanation.5\",\n    \"/usr/share/man/man5/eza_colors-explanation.5\",\n    \"0644\",\n  ],\n  [\n    \"completions/bash/eza\",\n    \"/usr/share/bash-completion/completions/eza\",\n    \"0644\",\n  ],\n  [\n    \"completions/zsh/_eza\",\n    \"/usr/share/zsh/site-functions/_eza\",\n    \"0644\",\n  ],\n  [\n    \"completions/fish/eza.fish\",\n    \"/usr/share/fish/vendor_completions.d/eza.fish\",\n    \"0644\",\n  ],\n]\n\n\n[[bin]]\nname = \"eza\"\n\n\n[dependencies]\nrayon = \"1.10.0\"\nchrono = { version = \"0.4.34\", default-features = false, features = [\"clock\"] }\nnu-ansi-term = { version = \"0.50.1\", features = [\n  \"serde\",\n  \"derive_serde_style\",\n] }\nglob = \"0.3\"\nlibc = \"0.2\"\nlocale = \"0.2\"\nlog = \"0.4\"\nnatord-plus-plus = \"2.0\"\npath-clean = \"1.0.1\"\nnumber_prefix = \"0.4\"\npalette = { version = \"0.7.6\", default-features = false, features = [\"std\"] }\nonce_cell = \"1.20.2\"\npercent-encoding = \"2.3.1\"\nphf = { version = \"0.11.2\", features = [\"macros\"] }\nplist = { version = \"1.7.0\", default-features = false }\nuutils_term_grid = \"0.6.0\"\nterminal_size = \"0.4.1\"\ntimeago = { version = \"0.4.2\", default-features = false }\nunicode-width = \"0.2\"\nzoneinfo_compiled = \"0.5.1\"\nansi-width = \"0.1.0\"\nserde = { version = \"1.0.215\", features = [\"derive\"] }\ndirs = \"5.0.1\"\nserde_norway = \"0.9\"\nbacktrace = \"0.3\"\n\n[dependencies.git2]\nversion = \"0.20\"\noptional = true\ndefault-features = false\n\n[target.'cfg(target_os = \"linux\")'.dependencies]\nproc-mounts = \"0.3\"\n\n[target.'cfg(unix)'.dependencies]\nuzers = \"0.12.1\"\n\n[target.'cfg(target_os = \"windows\")'.dependencies]\nwindows-sys = { version = \"0.59.0\", features = [\n  \"Win32_System_Console\",\n  \"Win32_Foundation\",\n] }\n\n[build-dependencies]\nchrono = { version = \"0.4.34\", default-features = false, features = [\"clock\"] }\n\n[dev-dependencies]\ncriterion = { version = \"0.5.1\", features = [\"html_reports\"] }\ntrycmd = \"0.15\"\n\n[features]\ndefault = [\"git\"]\ngit = [\"git2\"]\nvendored-openssl = [\"git2/vendored-openssl\"]\nvendored-libgit2 = [\"git2/vendored-libgit2\"]\n# Should only be used inside of flake.nix\nnix = []\n# Should only be used inside of flake.nix locally (not on CI)\nnix-local = []\n# Should only be used inside of flake.nix\n# Shouldn't ever be used in CI (slow!)\npowertest = []\nnix-generated = []\n\n# use LTO for smaller binaries (that take longer to build)\n[profile.release]\nlto = true\nstrip = true\nopt-level = 3\ncodegen-units = 1\npanic = 'abort'\n\n[[bench]]\nname = \"my_benchmark\"\nharness = false\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 7.306640625,
          "content": "<!--\nSPDX-FileCopyrightText: 2023-2024 Christina Sørensen\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n# Installation\n\neza is available for Windows, macOS and Linux.\n\n### Cargo (crates.io)\n\n![Crates.io](https://img.shields.io/crates/v/eza?link=https%3A%2F%2Fcrates.io%2Fcrates%2Feza)\n\nIf you already have a Rust environment set up, you can use the `cargo install` command:\n\n    cargo install eza\n\nCargo will build the `eza` binary and place it in your `CARGO_INSTALL_ROOT`.\nFor more details on installation location see [the cargo\nbook](https://doc.rust-lang.org/cargo/commands/cargo-install.html#description).\n\n### Cargo (git)\n\nIf you already have a Rust environment set up, you can use the `cargo install` command in your local clone of the repo:\n\n    git clone https://github.com/eza-community/eza.git\n    cd eza\n    cargo install --path .\n\nCargo will build the `eza` binary and place it in `$HOME/.cargo`.\n\n### Arch Linux\n\n[![Arch Linux package](https://repology.org/badge/version-for-repo/arch/eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available in the [\\[extra\\]](https://archlinux.org/packages/extra/x86_64/eza/) repository of Arch Linux.\n\n```bash\npacman -S eza\n```\n\n### Debian and Ubuntu\n\nEza is available from [deb.gierens.de](http://deb.gierens.de). The GPG public\nkey is in this repo under [deb.asc](/deb.asc).\n\nFirst make sure you have the `gpg` command, and otherwise install it via:\n\n```bash\nsudo apt update\nsudo apt install -y gpg\n```\n\nThen install eza via:\n\n```bash\nsudo mkdir -p /etc/apt/keyrings\nwget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg\necho \"deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main\" | sudo tee /etc/apt/sources.list.d/gierens.list\nsudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list\nsudo apt update\nsudo apt install -y eza\n```\n_Note_: In strict apt environments, you may need to add the target: `echo \"deb [arch=amd64 signed-by=...` \n\n### Nix (Linux, MacOS)\n\n[![nixpkgs unstable package](https://repology.org/badge/version-for-repo/nix_unstable/eza.svg)](https://repology.org/project/eza/versions)\n\n> **Note**\n> Installing packages imperatively isn't idiomatic Nix, as this can lead to [many issues](https://stop-using-nix-env.privatevoid.net/).\n\nEza is available from [Nixpkgs](https://github.com/NixOS/nixpkgs) and from the\nflake in this repository.\n\nFor `nix profile` users:\n\n```shell\nnix profile install nixpkgs#eza\n```\n\nFor `nix-env` users:\n\n```shell\nnix-env -i eza\n```\n\n**Declarative Nix Installations**\n\n- Simple NixOS installation: [rfaulhaber/dotfiles](https://github.com/rfaulhaber/dotfiles/blob/a8d084d178efd0592b7ac02d34a450fb58913aca/nix/modules/programs/eza/default.nix#L15)\n- Using the flake via NixOS: [hallettj/home.nix](https://github.com/hallettj/home.nix/blob/a8388483e5d78e110be73c5af0e7f0e3ca8f8aa3/flake.nix#L19)\n- Using home-manager on NixOS: [Misterio77/nix-config](https://github.com/Misterio77/nix-config/blob/6867d66a2fe7899c608b9c8e5a8f9aee279d188b/home/misterio/features/cli/fish.nix#L6)\n\n### Gentoo\n\n[![Gentoo package](https://repology.org/badge/version-for-repo/gentoo/eza.svg)](https://repology.org/project/eza/versions)\n\nOn Gentoo, eza is available as a package [`sys-apps/eza`](https://packages.gentoo.org/packages/sys-apps/eza):\n\n```bash\nemerge --ask sys-apps/eza\n```\n\n### openSUSE\n\nEza is available at [openSUSE:Factory/eza](https://build.opensuse.org/package/show/openSUSE:Factory/eza):\n\n```bash\nzypper ar https://download.opensuse.org/tumbleweed/repo/oss/ factory-oss\nzypper in eza\n```\n\nThe preceding repository also contains the Bash, Fish, and Zsh completions.\n\n### Fedora\n\n[![Fedora package](https://repology.org/badge/version-for-repo/fedora_39/rust:eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available as the [eza](https://packages.fedoraproject.org/pkgs/rust-eza/eza/) package in the official Fedora repository.\n\n```bash\nsudo dnf install eza\n```\n\n### Void Linux\n\n[![Void Linux package](https://repology.org/badge/version-for-repo/void_x86_64/eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available as the [eza](https://github.com/void-linux/void-packages/tree/master/srcpkgs/eza) package in the official Void Linux repository.\n\n```bash\nsudo xbps-install eza\n```\n\n### Termux\n\nEza is available as the [eza](https://github.com/termux/termux-packages/tree/master/packages/eza) package in the official Termux repository.\n\n```bash\npkg install eza\n```\n\n### Manual (Linux)\n\nExample is for x86_64 GNU, replaces the file names if downloading for a different arch.\n\n```shell\nwget -c https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz -O - | tar xz\nsudo chmod +x eza\nsudo chown root:root eza\nsudo mv eza /usr/local/bin/eza\n```\n\nIf `exa` was installed before, replace it with `eza`:\n```shell\nsudo rm -f /usr/local/bin/exa\nsudo ln -s /usr/local/bin/eza /usr/local/bin/exa\n```\n\n### Brew (MacOS)\n\n[![Homebrew package](https://repology.org/badge/version-for-repo/homebrew/eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available from [Homebrew](https://formulae.brew.sh/formula/eza#default).\n\nTo install eza, run:\n\n```shell\nbrew install eza\n```\n\n### MacPorts (macOS)\n\n[![MacPorts port](https://repology.org/badge/version-for-repo/macports/eza.svg)](https://repology.org/project/eza/versions)\n\nOn macOS, eza is also available via [MacPorts](https://ports.macports.org/port/eza/).\n\nTo install eza, run:\n\n```shell\nsudo port install eza\n```\n\n### Winget (Windows)\n\n[![Windows package](https://repology.org/badge/version-for-repo/winget/eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available on Winget.\n\nTo install eza, run:\n\n```shell\nwinget install eza-community.eza\n```\n\n### Scoop (Windows)\n\n[![Windows package](https://repology.org/badge/version-for-repo/scoop/eza.svg)](https://repology.org/project/eza/versions)\n\nEza is available from [Scoop](https://scoop.sh/#/apps?q=eza&id=a52070d25f94bbcc884f80bef53eb47ed1268198).\n\nTo install eza, run:\n\n```shell\nscoop install eza\n```\n\n### Flox (Linux, macOS, Windows WSL)\n\nEza is available from [Flox](https://flox.dev).\n\nTo install eza, run:\n\n```shell\nflox install eza\n```\n\n### X-CMD (Linux, macOS, Windows WSL, Windows GitBash)\n\nEza is available from [x-cmd](https://www.x-cmd.com).\n\nTo install eza, run:\n\n```shell\nx env use eza\n# or\nx eza\n```\n\n### fox (Linux, macOS)\n\nEza is available from [fox](https://www.getfox.sh/).\n\nTo install eza, run:\n\n```shell\nfox install eza\n```\n\n### Completions\n\n#### For zsh:\n\n> **Note**\n> Change `~/.zshrc` to your preferred zsh config file.\n\n##### Clone the repository:\n\n```sh\ngit clone https://github.com/eza-community/eza.git\n```\n\n##### Add the completion path to your zsh configuration:\n\nReplace `<path_to_eza>` with the actual path where you cloned the `eza` repository.\n\n```sh\necho 'export FPATH=\"<path_to_eza>/completions/zsh:$FPATH\"' >> ~/.zshrc\n```\n\n##### Reload your zsh configuration:\n\n```sh\nsource ~/.zshrc\n```\n\n\n#### For zsh with homebrew:\n\nIn case zsh completions don't work out of the box with homebrew, add the\nfollowing to your `~/.zshrc`:\n\n```bash\nif type brew &>/dev/null; then\n    FPATH=\"$(brew --prefix)/share/zsh/site-functions:${FPATH}\"\n    autoload -Uz compinit\n    compinit\nfi\n```\n\nFor reference:\n- https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh\n- https://github.com/Homebrew/brew/issues/8984\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 13.46875,
          "content": "EUROPEAN UNION PUBLIC LICENCE v. 1.2\nEUPL © the European Union 2007, 2016\n\nThis European Union Public Licence (the ‘EUPL’) applies to the Work (as defined below) which is provided under the\nterms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such\nuse is covered by a right of the copyright holder of the Work).\nThe Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following\nnotice immediately following the copyright notice for the Work:\n                          Licensed under the EUPL\nor has expressed by any other means his willingness to license under the EUPL.\n\n1.Definitions\nIn this Licence, the following terms have the following meaning:\n— ‘The Licence’:this Licence.\n— ‘The Original Work’:the work or software distributed or communicated by the Licensor under this Licence, available\nas Source Code and also as Executable Code as the case may be.\n— ‘Derivative Works’:the works or software that could be created by the Licensee, based upon the Original Work or\nmodifications thereof. This Licence does not define the extent of modification or dependence on the Original Work\nrequired in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in\nthe country mentioned in Article 15.\n— ‘The Work’:the Original Work or its Derivative Works.\n— ‘The Source Code’:the human-readable form of the Work which is the most convenient for people to study and\nmodify.\n— ‘The Executable Code’:any code which has generally been compiled and which is meant to be interpreted by\na computer as a program.\n— ‘The Licensor’:the natural or legal person that distributes or communicates the Work under the Licence.\n— ‘Contributor(s)’:any natural or legal person who modifies the Work under the Licence, or otherwise contributes to\nthe creation of a Derivative Work.\n— ‘The Licensee’ or ‘You’:any natural or legal person who makes any usage of the Work under the terms of the\nLicence.\n— ‘Distribution’ or ‘Communication’:any act of selling, giving, lending, renting, distributing, communicating,\ntransmitting, or otherwise making available, online or offline, copies of the Work or providing access to its essential\nfunctionalities at the disposal of any other natural or legal person.\n\n2.Scope of the rights granted by the Licence\nThe Licensor hereby grants You a worldwide, royalty-free, non-exclusive, sublicensable licence to do the following, for\nthe duration of copyright vested in the Original Work:\n— use the Work in any circumstance and for all usage,\n— reproduce the Work,\n— modify the Work, and make Derivative Works based upon the Work,\n— communicate to the public, including the right to make available or display the Work or copies thereof to the public\nand perform publicly, as the case may be, the Work,\n— distribute the Work or copies thereof,\n— lend and rent the Work or copies thereof,\n— sublicense rights in the Work or copies thereof.\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the\napplicable law permits so.\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed\nby law in order to make effective the licence of the economic rights here above listed.\nThe Licensor grants to the Licensee royalty-free, non-exclusive usage rights to any patents held by the Licensor, to the\nextent necessary to make use of the rights granted on the Work under this Licence.\n\n3.Communication of the Source Code\nThe Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as\nExecutable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with\neach copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to\nthe Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to\ndistribute or communicate the Work.\n\n4.Limitations on copyright\nNothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the\nexclusive rights of the rights owners in the Work, of the exhaustion of those rights or of other applicable limitations\nthereto.\n\n5.Obligations of the Licensee\nThe grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those\nobligations are the following:\n\nAttribution right: The Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to\nthe Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the\nLicence with every copy of the Work he/she distributes or communicates. The Licensee must cause any Derivative Work\nto carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes or communicates copies of the Original Works or Derivative Works, this\nDistribution or Communication will be done under the terms of this Licence or of a later version of this Licence unless\nthe Original Work is expressly distributed only under this version of the Licence — for example by communicating\n‘EUPL v. 1.2 only’. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the\nWork or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes or Communicates Derivative Works or copies thereof based upon both\nthe Work and another work licensed under a Compatible Licence, this Distribution or Communication can be done\nunder the terms of this Compatible Licence. For the sake of this clause, ‘Compatible Licence’ refers to the licences listed\nin the appendix attached to this Licence. Should the Licensee's obligations under the Compatible Licence conflict with\nhis/her obligations under this Licence, the obligations of the Compatible Licence shall prevail.\n\nProvision of Source Code: When distributing or communicating copies of the Work, the Licensee will provide\na machine-readable copy of the Source Code or indicate a repository where this Source will be easily and freely available\nfor as long as the Licensee continues to distribute or communicate the Work.\nLegal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names\nof the Licensor, except as required for reasonable and customary use in describing the origin of the Work and\nreproducing the content of the copyright notice.\n\n6.Chain of Authorship\nThe original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or\nlicensed to him/her and that he/she has the power and authority to grant the Licence.\nEach Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or\nlicensed to him/her and that he/she has the power and authority to grant the Licence.\nEach time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions\nto the Work, under the terms of this Licence.\n\n7.Disclaimer of Warranty\nThe Work is a work in progress, which is continuously improved by numerous Contributors. It is not a finished work\nand may therefore contain defects or ‘bugs’ inherent to this type of development.\nFor the above reason, the Work is provided under the Licence on an ‘as is’ basis and without warranties of any kind\nconcerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or\nerrors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this\nLicence.\nThis disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work.\n\n8.Disclaimer of Liability\nExcept in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be\nliable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the\nWork, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss\nof data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However,\nthe Licensor will be liable under statutory product liability laws as far such laws apply to the Work.\n\n9.Additional agreements\nWhile distributing the Work, You may choose to conclude an additional agreement, defining obligations or services\nconsistent with this Licence. However, if accepting obligations, You may act only on your own behalf and on your sole\nresponsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by\nthe fact You have accepted any warranty or additional liability.\n\n10.Acceptance of the Licence\nThe provisions of this Licence can be accepted by clicking on an icon ‘I agree’ placed under the bottom of a window\ndisplaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of\napplicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms\nand conditions.\nSimilarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You\nby Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution\nor Communication by You of the Work or copies thereof.\n\n11.Information to the public\nIn case of any Distribution or Communication of the Work by means of electronic communication by You (for example,\nby offering to download the Work from a remote location) the distribution channel or media (for example, a website)\nmust at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence\nand the way it may be accessible, concluded, stored and reproduced by the Licensee.\n\n12.Termination of the Licence\nThe Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms\nof the Licence.\nSuch a termination will not terminate the licences of any person who has received the Work from the Licensee under\nthe Licence, provided such persons remain in full compliance with the Licence.\n\n13.Miscellaneous\nWithout prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the\nWork.\nIf any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or\nenforceability of the Licence as a whole. Such provision will be construed or reformed so as necessary to make it valid\nand enforceable.\nThe European Commission may publish other linguistic versions or new versions of this Licence or updated versions of\nthe Appendix, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence.\nNew versions of the Licence will be published with a unique version number.\nAll linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take\nadvantage of the linguistic version of their choice.\n\n14.Jurisdiction\nWithout prejudice to specific agreement between parties,\n— any litigation resulting from the interpretation of this License, arising between the European Union institutions,\nbodies, offices or agencies, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice\nof the European Union, as laid down in article 272 of the Treaty on the Functioning of the European Union,\n— any litigation arising between other parties and resulting from the interpretation of this License, will be subject to\nthe exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business.\n\n15.Applicable Law\nWithout prejudice to specific agreement between parties,\n— this Licence shall be governed by the law of the European Union Member State where the Licensor has his seat,\nresides or has his registered office,\n— this licence shall be governed by Belgian law if the Licensor has no seat, residence or registered office inside\na European Union Member State.\n\n\n                                                         Appendix\n\n‘Compatible Licences’ according to Article 5 EUPL are:\n— GNU General Public License (GPL) v. 2, v. 3\n— GNU Affero General Public License (AGPL) v. 3\n— Open Software License (OSL) v. 2.1, v. 3.0\n— Eclipse Public License (EPL) v. 1.0\n— CeCILL v. 2.0, v. 2.1\n— Mozilla Public Licence (MPL) v. 2\n— GNU Lesser General Public Licence (LGPL) v. 2.1, v. 3\n— Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for works other than software\n— European Union Public Licence (EUPL) v. 1.1, v. 1.2\n— Québec Free and Open-Source Licence — Reciprocity (LiLiQ-R) or Strong Reciprocity (LiLiQ-R+).\n\nThe European Commission may update this Appendix to later versions of the above licences without producing\na new version of the EUPL, as long as they provide the rights granted in Article 2 of this Licence and protect the\ncovered Source Code from exclusive appropriation.\nAll other changes or additions to this Appendix require the production of a new EUPL version.\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.6572265625,
          "content": "<!--\nSPDX-FileCopyrightText: 2023-2024 Christina Sørensen\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n<div align=\"center\">\n\n# eza\n\nA modern replacement for ls.\n\n<a href=\"https://matrix.to/#/#eza-community:gitter.im\"><img alt=\"Gitter\" src=\"https://img.shields.io/gitter/room/eza-community/eza?logo=element&link=https%3A%2F%2Fapp.gitter.im%2F%23%2Froom%2F%23eza%3Agitter.im&link=Gitter%20matrix%20room%20for%20Eza\" width=200></a>\n\n[![Built with Nix](https://img.shields.io/badge/Built_With-Nix-5277C3.svg?logo=nixos&labelColor=73C3D5)](https://nixos.org)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](CODE_OF_CONDUCT.md)\n\n[![Unit tests](https://github.com/eza-community/eza/actions/workflows/unit-tests.yml/badge.svg)](https://github.com/eza-community/eza/actions/workflows/unit-tests.yml)\n![Crates.io](https://img.shields.io/crates/v/eza?link=https%3A%2F%2Fcrates.io%2Fcrates%2Feza)\n![Crates.io](https://img.shields.io/crates/l/eza?link=https%3A%2F%2Fgithub.com%2Feza-community%2Feza%2Fblob%2Fmain%2FLICENCE)\n\n</div>\n\n![eza demo gif](docs/images/screenshots.png)\n\n---\n\n**eza** is a modern alternative for the venerable file-listing command-line program `ls` that ships with Unix and Linux operating systems, giving it more features and better defaults.\nIt uses colours to distinguish file types and metadata.\nIt knows about symlinks, extended attributes, and Git.\nAnd it’s **small**, **fast**, and just **one single binary**.\n\nBy deliberately making some decisions differently, eza attempts to be a more featureful, more user-friendly version of `ls`.\n\n---\n\n**eza** features not in exa (non-exhaustive):\n\n- Fixes [“The Grid Bug”](https://github.com/eza-community/eza/issues/66#issuecomment-1656758327) introduced in exa 2021.\n- Hyperlink support.\n- Mount point details.\n- Selinux context output.\n- Git repo status output.\n- Human readable relative dates.\n- Several security fixes.\n- Support for `bright` terminal colours.\n- Many smaller bug fixes/changes!\n- Configuration `theme.yml` file for customization of colors and icons.\n\n...and like, so much more that it became exhausting to update this all the time.\nLike seriously, we have a lot of good stuff.\n\n---\n\n<a id=\"try-it\">\n<h1>Try it!</h1>\n</a>\n\n### Nix ❄️\n\nIf you already have Nix setup with flake support, you can try out eza with the `nix run` command:\n\n    nix run github:eza-community/eza\n\nNix will build eza and run it.\n\nIf you want to pass arguments this way, use e.g. `nix run github:eza-community/eza -- -ol`.\n\n# Installation\n\neza is available for Windows, macOS and Linux. Platform and distribution\nspecific installation instructions can be found in [INSTALL.md](INSTALL.md).\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/eza.svg?columns=3)](https://repology.org/project/eza/versions)\n\n---\n\n<a id=\"options\">\n<h1>Command-line options</h1>\n</a>\n\neza’s options are almost, but not quite, entirely unlike `ls`’s. Quick overview:\n\n## Display options\n\n<details>\n<summary>Click to expand</summary>\n\n- **-1**, **--oneline**: display one entry per line\n- **-G**, **--grid**: display entries as a grid (default)\n- **-l**, **--long**: display extended details and attributes\n- **-R**, **--recurse**: recurse into directories\n- **-T**, **--tree**: recurse into directories as a tree\n- **-x**, **--across**: sort the grid across, rather than downwards\n- **-F**, **--classify=(when)**: display type indicator by file names (always, auto, never)\n- **--colo[u]r=(when)**: when to use terminal colours (always, auto, never)\n- **--colo[u]r-scale=(field)**: highlight levels of `field` distinctly(all, age, size)\n- **--color-scale-mode=(mode)**: use gradient or fixed colors in --color-scale. valid options are `fixed` or `gradient`\n- **--icons=(when)**: when to display icons (always, auto, never)\n- **--hyperlink**: display entries as hyperlinks\n- **--absolute=(mode)**: display entries with their absolute path (on, follow, off)\n- **-w**, **--width=(columns)**: set screen width in columns\n\n</details>\n\n## Filtering options\n\n<details>\n<summary>Click to expand</summary>\n\n- **-a**, **--all**: show hidden and 'dot' files\n- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **--group-directories-last**: list directories after other files\n- **-D**, **--only-dirs**: list only directories\n- **-f**, **--only-files**: list only files\n- **--no-symlinks**: don't show symbolic links\n- **--show-symlinks**: explicitly show links (with `--only-dirs`, `--only-files`, to show symlinks that match the filter)\n- **--git-ignore**: ignore files mentioned in `.gitignore`\n- **-I**, **--ignore-glob=(globs)**: glob patterns (pipe-separated) of files to ignore\n\nPass the `--all` option twice to also show the `.` and `..` directories.\n\n</details>\n\n## Long view options\n\n<details>\n<summary>Click to expand</summary>\n\nThese options are available when running with `--long` (`-l`):\n\n- **-b**, **--binary**: list file sizes with binary prefixes\n- **-B**, **--bytes**: list file sizes in bytes, without any prefixes\n- **-g**, **--group**: list each file’s group\n- **-h**, **--header**: add a header row to each column\n- **-H**, **--links**: list each file’s number of hard links\n- **-i**, **--inode**: list each file’s inode number\n- **-m**, **--modified**: use the modified timestamp field\n- **-M**, **--mounts**: Show mount details (Linux and MacOS only).\n- **-S**, **--blocksize**: show size of allocated file system blocks\n- **-t**, **--time=(field)**: which timestamp field to use\n- **-u**, **--accessed**: use the accessed timestamp field\n- **-U**, **--created**: use the created timestamp field\n- **-X**, **--dereference**: dereference symlinks for file information\n- **-Z**, **--context**: list each file’s security context\n- **-@**, **--extended**: list each file’s extended attributes and sizes\n- **--changed**: use the changed timestamp field\n- **--git**: list each file’s Git status, if tracked or ignored\n- **--git-repos**: list each directory’s Git status, if tracked\n- **--git-repos-no-status**: list whether a directory is a Git repository, but not its status (faster)\n- **--no-git**: suppress Git status (always overrides `--git`, `--git-repos`, `--git-repos-no-status`)\n- **--time-style**: how to format timestamps. valid timestamp styles are ‘`default`’, ‘`iso`’, ‘`long-iso`’, ‘`full-iso`’, ‘`relative`’, or a custom style ‘`+<FORMAT>`’ (E.g., ‘`+%Y-%m-%d %H:%M`’ => ‘`2023-09-30 13:00`’. For more specifications on the format string, see the _`eza(1)` manual page_ and [chrono documentation](https://docs.rs/chrono/latest/chrono/format/strftime/index.html).).\n- **--total-size**: show recursive directory size\n- **--no-permissions**: suppress the permissions field\n- **-o**, **--octal-permissions**: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n- **--stdin**: read file names from stdin\n\nSome of the options accept parameters:\n\n- Valid **--colo\\[u\\]r** options are **always**, **automatic** (or **auto** for short), and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, **full-iso**, and **relative**.\n\n\n\nSee the `man` pages for further documentation of usage. They are available\n- online [in the repo](https://github.com/eza-community/eza/tree/main/man)\n- in your terminal via `man eza`, as of version [`[0.18.13] - 2024-04-25`](https://github.com/eza-community/eza/blob/main/CHANGELOG.md#01813---2024-04-25)\n</details>\n\n\n## Custom Themes\n<details>\n<summary>Click to expand</summary>\n\n**Eza** has recently added support for a `theme.yml` file, where you can specify all of the existing theme-ing options\navailable for the `LS_COLORS` and `EXA_COLORS` environment variables, as well as the option to specify different icons\nfor different file types and extensions. Any existing environment variables set will continue to work and will take\nprecedence for backwards compatibility.\n\n#### **New** Pre-made themes\nCheck out the themes available in the official [eza-themes](https://github.com/eza-community/eza-themes) repository, or contribute your own.\n\nAn example theme file is available in `docs/theme.yml`, and needs to either be placed in a directory specified by the \nenvironment variable `EZA_CONFIG_DIR`, or will looked for by default in `$XDG_CONFIG_HOME/eza`.\n\nFull details are available on the [man page](https://github.com/eza-community/eza/tree/main/man/eza_colors-explanation.5.md) and an example theme file is included [here](https://github.com/eza-community/eza/tree/main/docs/theme.yml)\n\n</details>\n\n\n# Hacking on eza\n\nIf you wanna contribute to eza, firstly, you're expected to follow our \n[code of conduct](https://github.com/eza-community/eza/blob/main/CODE_OF_CONDUCT.md). \nAfter having understood the code of conduct, you can have a look at our\n[CONTRIBUTING.md](https://github.com/eza-community/eza/blob/main/CONTRIBUTING.md) \nfor more info about actual hacking.\n\n[![Star History Chart](https://api.star-history.com/svg?repos=eza-community/eza&type=Date)](https://star-history.com/#eza-community/eza&Date)\n"
        },
        {
          "name": "REUSE.toml",
          "type": "blob",
          "size": 2.0185546875,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n#\n# SPDX-License-Identifier: EUPL-1.2\n\nversion = 1\nSPDX-PackageName = \"eza\"\nSPDX-PackageSupplier = \"Christina Sørensen <christina@cafkafk.com>\"\n\n[[annotations]]\npath = \"flake.lock\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"Cargo.lock\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \".envrc\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"tests/**\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"completions/**\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"man/**\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"deb.asc\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"devtools/**\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \"docs/**\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \".github/**.md\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n# pre-commit-hooks.nix cause these to appear in commit check:(\n\n[[annotations]]\npath = \".cache/pre-commit/README\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \".cache/pre-commit/db.db\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n\n[[annotations]]\npath = \".gitconfig\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"2024 Christina Sørensen\"\nSPDX-License-Identifier = \"EUPL-1.2\"\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6298828125,
          "content": "<!--\nSPDX-FileCopyrightText: 2023-2024 Christina Sørensen\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n# Security Policy\n\n## Supported Versions\n\nThis section shows which versions of eza are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| latest    | :white_check_mark: |\n| < 0.10.6  | :x:                |\n\n## Reporting a Vulnerability\n\nPlease email all vulnerabilities to christina@cafkafk.com, with PGP encryption and signature, and ideally send along plaintext public key or instructions on where to find public key (keyserver etc.). \n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 0.93359375,
          "content": "<!--\nSPDX-FileCopyrightText: 2024 Christina Sørensen, Martin Fillon\nSPDX-FileContributor: Christina Sørensen\n\nSPDX-License-Identifier: EUPL-1.2\n-->\n# Testing eza\n\n## Running tests\n\nIn order to run the tests in eza you need:\n- [just](https://github.com/casey/just)\n- [nix](https://nixos.org)\n\nthen either run:\n- `just itest`\n- `nix build -L trycmd-local`\n\n## Modifying tests\n\nIn order to test your changes on eza, you will need to do one or multiple things in different cases.\nYou will need the additional tool\n- [powertest](https://github.com/eza-community/powertest)\n\nYou will also need to modify the `devtools/dir-generator.sh` file if you want to add some test cases\n\n### You added/modified an option\n\nPlease run `just regen` to regenerate powertesting. Then look into `tests/gen` or `tests/cmd` for any tests not passing\n\n### You changed the output of eza\n\nPlease run `nix build -L trydump` or `just idump`\nAnd lookout for any test no longer passing\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 4.021484375,
          "content": "// SPDX-FileCopyrightText: 2024 Christina Sørensen\n// SPDX-License-Identifier: EUPL-1.2\n//\n// SPDX-FileCopyrightText: 2023-2024 Christina Sørensen, eza contributors\n// SPDX-FileCopyrightText: 2014 Benjamin Sago\n// SPDX-License-Identifier: MIT\n/// The version string isn’t the simplest: we want to show the version,\n/// current Git hash, and compilation date when building *debug* versions, but\n/// just the version for *release* versions so the builds are reproducible.\n///\n/// This script generates the string from the environment variables that Cargo\n/// adds (http://doc.crates.io/environment-variables.html) and runs `git` to\n/// get the SHA1 hash. It then writes the string into a file, which exa then\n/// includes at build-time.\n///\n/// - https://stackoverflow.com/q/43753491/3484614\n/// - https://crates.io/crates/vergen\nuse std::env;\nuse std::fs::File;\nuse std::io::{self, Write};\nuse std::path::PathBuf;\n\nuse chrono::prelude::*;\n\n/// The build script entry point.\nfn main() -> io::Result<()> {\n    #![allow(clippy::write_with_newline)]\n\n    let tagline = \"eza - A modern, maintained replacement for ls\";\n    let url = \"https://github.com/eza-community/eza\";\n\n    let ver = if is_debug_build() {\n        format!(\n            \"{}\\nv{} \\\\1;31m(pre-release debug build!)\\\\0m\\n\\\\1;4;34m{}\\\\0m\",\n            tagline,\n            version_string(),\n            url\n        )\n    } else if is_development_version() {\n        format!(\n            \"{}\\nv{} [{}] built on {} \\\\1;31m(pre-release!)\\\\0m\\n\\\\1;4;34m{}\\\\0m\",\n            tagline,\n            version_string(),\n            git_hash(),\n            build_date(),\n            url\n        )\n    } else {\n        format!(\"{}\\nv{}\\n\\\\1;4;34m{}\\\\0m\", tagline, version_string(), url)\n    };\n\n    // We need to create these files in the Cargo output directory.\n    let out = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n    let path = &out.join(\"version_string.txt\");\n\n    // Bland version text\n    let mut f =\n        File::create(path).unwrap_or_else(|_| panic!(\"{}\", path.to_string_lossy().to_string()));\n    writeln!(f, \"{}\", strip_codes(&ver))?;\n\n    Ok(())\n}\n\n/// Removes escape codes from a string.\nfn strip_codes(input: &str) -> String {\n    input\n        .replace(\"\\\\0m\", \"\")\n        .replace(\"\\\\1;31m\", \"\")\n        .replace(\"\\\\1;4;34m\", \"\")\n}\n\n/// Retrieve the project’s current Git hash, as a string.\nfn git_hash() -> String {\n    use std::process::Command;\n\n    String::from_utf8_lossy(\n        &Command::new(\"git\")\n            .args([\"rev-parse\", \"--short\", \"HEAD\"])\n            .output()\n            .unwrap()\n            .stdout,\n    )\n    .trim()\n    .to_string()\n}\n\n/// Whether we should show pre-release info in the version string.\n///\n/// Both weekly releases and actual releases are --release releases,\n/// but actual releases will have a proper version number.\nfn is_development_version() -> bool {\n    cargo_version().ends_with(\"-pre\") || env::var(\"PROFILE\").unwrap() == \"debug\"\n}\n\n/// Whether we are building in debug mode.\nfn is_debug_build() -> bool {\n    env::var(\"PROFILE\").unwrap() == \"debug\"\n}\n\n/// Retrieves the [package] version in Cargo.toml as a string.\nfn cargo_version() -> String {\n    env::var(\"CARGO_PKG_VERSION\").unwrap()\n}\n\n/// Returns the version and build parameters string.\nfn version_string() -> String {\n    let mut ver = cargo_version();\n\n    let feats = nonstandard_features_string();\n    if !feats.is_empty() {\n        ver.push_str(&format!(\" [{}]\", &feats));\n    }\n\n    ver\n}\n\n/// Finds whether a feature is enabled by examining the Cargo variable.\nfn feature_enabled(name: &str) -> bool {\n    env::var(format!(\"CARGO_FEATURE_{}\", name))\n        .map(|e| !e.is_empty())\n        .unwrap_or(false)\n}\n\n/// A comma-separated list of non-standard feature choices.\nfn nonstandard_features_string() -> String {\n    let mut s = Vec::new();\n\n    if feature_enabled(\"GIT\") {\n        s.push(\"+git\");\n    } else {\n        s.push(\"-git\");\n    }\n\n    s.join(\", \")\n}\n\n/// Formats the current date as an ISO 8601 string.\nfn build_date() -> String {\n    let now = Local::now();\n    now.date_naive().format(\"%Y-%m-%d\").to_string()\n}\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "deb.asc",
          "type": "blob",
          "size": 1.63671875,
          "content": "-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGTejj8BEAC3Qdi6up8rkFvekeuZiGpuC5OTic+Nd/x6zacrtDKJwdVa6fw3\ntVydFW1ELcw33ifWDztvgENqvgMuhcB/lnoDnaAhK8nzT0l+r0gQ7JptPH+8XsZx\nPuIFRxgUkS6M45jrZApu/c3/PX3akiBuBnibd+sik72pVSi9pYm00I/yY/+u9Vvo\nu4vy/PG/y4Kp1+ewbVyOnaTQoiJXgqceUYqNfhShcN7dssa/Td6G0xPhS1XeQZ81\nQWwPNEzGWomGJ/igZPcm31qtIwcHXn3m8UZbCxUHHzseZ0hOOYqVSrSIj+U1RIma\nrmcbdAAi1wQei0P142/Gkq1fLdscrZPc0b0L8JbZnymAvg2WWE6SQ3/7Ux0Y9hc3\nwsXuiwU38Qg0EaDMSXyUKAbK+4/tuP9mbx4PyKuDUmjJnPTCvbJxe2kC8rdZrOgn\n4qbwHY7FCEBpG28VhV07dwueZcFC/VCqGrbmrJC7rl6avT5xpOIRslUTJGmifx3Z\n0hmL6rzTQz00FVNSXyxLnz1XYUTLm7QyzywTv8HTTfy5o21N2eOHqbMkBA9MJiic\nlnVSH1vCn/5rd+fwRQ/7yLKAdeUcRyxkdVWTUYDnVtQF199MAuXWv4nudjvS3046\nY9WpJGiZEi9PqeIxmYYHOZ/jYVF1RpMOyVnZhzRhn4Yy+uzJtUeW45nGyQARAQAB\ntDZTYW5kcm8tQWxlc3NpbyBHaWVyZW5zIChhcHRseSBrZXkpIDxzYW5kcm9AZ2ll\ncmVucy5kZT6JAk4EEwEKADgWIQQVSLyKS00miPmw2vfsKeIJDOP9QwUCZN6OPwIb\nLwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRDsKeIJDOP9Q26qEACkbm29cF5f\n7J95TAMOzNfjwfgEEPTZt9YUQxmYYlO3LGOShx/hogoWGhpw6qXQP0/lRlXcmNWD\n3J5rN+YmQSIYRP0VvOVJ/XYpgsoS90JwmukbJte4Wu1Goomh1dPv1z/ag4jToSzu\nfaSbwoUa46BmdRBOrOH/w/Ro7U6jLhH9saIivJfexksYeMprXahgoWsFGurl7mt0\nOaN3C6YSMkoJjpufCTfHKagBRT4ZYRw1JpTF+oap0VZgKtg33pnxVvSKdZJEY9BG\nsu47/eZM0bOCMll1upitF8TQ5DFING6+SRrmT8xAyUOCQBIid/9hBxX5mTYTjKW2\nZVteOkCowJwMwx134BffTMWMAMRw27Vxtuuugn6a9yd9pbK95aug62VpbvO8xWM+\nRocqeuQvh0Ii8kpH+sLjdpceMf1c01cYu97DjtdQ54FGtI4r1kOyh/BO7mI0omoJ\nhFunhQKKM8q1xUyIs3RvYALuM5VzEWCHwXBYdiNWYDVBC/sNje67A8SXXXjJLhcr\n9cCpJ5AUmkrLoQvgdewMpuIlmtPRbdv8hkmOUDPkD58AcDirvggXp63IiWlFYQ9C\nEoDLfUYQ6aJmw1fRI8/QsP3Q50aN6dkZRsDCcpxoNX9YzuU6+o1ha+ZNRpmfJvZg\nULP33eq15gJlsGrxo2HZ+f6w4pFFy4juDQ==\n=MX5x\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 10.833984375,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n[graph]\n# This template contains all of the possible sections and their default values\n\n# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# The values provided in this template are the default values that will be used\n# when any section or field is not specified in your own configuration\n\n# Root options\n\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n  # The triple can be any string, but only the target triples built in to\n  # rustc (as of 1.40) can be checked against actual config expressions\n  #{ triple = \"x86_64-unknown-linux-musl\" },\n  # You can also specify which target_features you promise are enabled for a\n  # particular target. target_features are currently not validated against\n  # the actual valid features supported by the target architecture.\n  #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n# When creating the dependency graph used as the source of truth when checks are\n# executed, this field can be used to prune crates from the graph, removing them\n# from the view of cargo-deny. This is an extremely heavy hammer, as if a crate\n# is pruned from the graph, all of its dependencies will also be pruned unless\n# they are connected to another crate in the graph that hasn't been pruned,\n# so it should be used with care. The identifiers are [Package ID Specifications]\n# (https://doc.rust-lang.org/cargo/reference/pkgid-spec.html)\n#exclude = []\n# If true, metadata will be collected with `--all-features`. Note that this can't\n# be toggled off if true, if you want to conditionally enable `--all-features` it\n# is recommended to pass `--all-features` on the cmd line instead\nall-features = true\n# If true, metadata will be collected with `--no-default-features`. The same\n# caveat with `all-features` applies\nno-default-features = false\n\n[output]\n# If set, these feature will be enabled when collecting metadata. If `--features`\n# is specified on the cmd line they will take precedence over this option.\n#features = []\n# When outputting inclusion graphs in diagnostics that include features, this\n# option can be used to specify the depth at which feature edges will be added.\n# This option is included since the graphs can be quite large and the addition\n# of features from the crate(s) to all of the graph roots can be far too verbose.\n# This option can be overridden via `--feature-depth` on the cmd line\nfeature-depth = 1\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\nversion = 2\n# The path where the advisory database is cloned/fetched into\ndb-path = \"~/.cargo/advisory-db\"\n# The url(s) of the advisory databases to use\ndb-urls = [\"https://github.com/rustsec/advisory-db\"]\n# The lint level for crates that have been yanked from their source registry\nyanked = \"warn\"\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = [\n  #\"RUSTSEC-0000-0000\",\n]\n# Threshold for security vulnerabilities, any vulnerability with a CVSS score\n# lower than the range specified will be ignored. Note that ignored advisories\n# will still output a note when they are encountered.\n# * None - CVSS Score 0.0\n# * Low - CVSS Score 0.1 - 3.9\n# * Medium - CVSS Score 4.0 - 6.9\n# * High - CVSS Score 7.0 - 8.9\n# * Critical - CVSS Score 9.0 - 10.0\n#severity-threshold =\n\n# If this is true, then cargo deny will use the git executable to fetch advisory database.\n# If this is false, then it uses a built-in git library.\n# Setting this to true can be helpful if you have special authentication requirements that cargo-deny does not support.\n# See Git Authentication for more information about setting up git authentication.\n#git-fetch-with-cli = true\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\nversion = 2\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n  \"EUPL-1.2\",\n  \"MIT\",\n  \"Unicode-DFS-2016\",\n  \"Apache-2.0\",\n  \"MPL-2.0\",\n  \"Unicode-3.0\",\n  #\"Apache-2.0 WITH LLVM-exception\",\n]\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n  # Each entry is the crate and version constraint, and its specific allow\n  # list\n  #{ allow = [\"Zlib\"], name = \"adler32\", version = \"*\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n#[[licenses.clarify]]\n# The name of the crate the clarification applies to\n#name = \"ring\"\n# The optional version constraint for the crate\n#version = \"*\"\n# The SPDX expression for the license requirements of the crate\n#expression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\n#license-files = [\n# Each entry is a crate relative path, and the (opaque) hash of its contents\n#{ path = \"LICENSE\", hash = 0xbd0eed23 }\n#]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries.\n# To see how to mark a crate as unpublished (to the official registry),\n# visit https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field.\nignore = false\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n  #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"warn\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# The default lint level for `default` features for crates that are members of\n# the workspace that is being checked. This can be overridden by allowing/denying\n# `default` on a crate-by-crate basis if desired.\nworkspace-default-features = \"allow\"\n# The default lint level for `default` features for external crates that are not\n# members of the workspace. This can be overridden by allowing/denying `default`\n# on a crate-by-crate basis if desired.\nexternal-default-features = \"allow\"\n# List of crates that are allowed. Use with care!\nallow = [\n  #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# List of crates to deny\ndeny = [\n  # Each entry the name of a crate and a version range. If version is\n  # not specified, all versions will be matched.\n  #{ name = \"ansi_term\", version = \"=0.11.0\" },\n  #\n  # Wrapper crates can optionally be specified to allow the crate when it\n  # is a direct dependency of the otherwise banned crate\n  #{ name = \"ansi_term\", version = \"=0.11.0\", wrappers = [] },\n]\n\n# List of features to allow/deny\n# Each entry the name of a crate and a version range. If version is\n# not specified, all versions will be matched.\n#[[bans.features]]\n#name = \"reqwest\"\n# Features to not allow\n#deny = [\"json\"]\n# Features to allow\n#allow = [\n#    \"rustls\",\n#    \"__rustls\",\n#    \"__tls\",\n#    \"hyper-rustls\",\n#    \"rustls\",\n#    \"rustls-pemfile\",\n#    \"rustls-tls-webpki-roots\",\n#    \"tokio-rustls\",\n#    \"webpki-roots\",\n#]\n# If true, the allowed features must exactly match the enabled feature set. If\n# this is set there is no point setting `deny`\n#exact = true\n\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n  #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite.\nskip-tree = [\n  #{ name = \"ansi_term\", version = \"=0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"warn\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = []\n\n[sources.allow-org]\n# 1 or more github.com organizations to allow git sources for\n# github = [\"\"]\n# # 1 or more gitlab.com organizations to allow git sources for\n# gitlab = [\"\"]\n# # 1 or more bitbucket.org organizations to allow git sources for\n# bitbucket = [\"\"]\n"
        },
        {
          "name": "devtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 5.8857421875,
          "content": "{\n  \"nodes\": {\n    \"advisory-db\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1735928634,\n        \"narHash\": \"sha256-Qg1vJOuEohAbdRmTTOLrbbGsyK9KRB54r3+aBuOMctM=\",\n        \"owner\": \"rustsec\",\n        \"repo\": \"advisory-db\",\n        \"rev\": \"63a2f39924f66ca89cf5761f299a8a244fe02543\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"rustsec\",\n        \"repo\": \"advisory-db\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-compat\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1696426674,\n        \"narHash\": \"sha256-kvjfFW7WAETZlt09AgDn1MrtKzP7t90Vf7vypd3OL1U=\",\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"rev\": \"0f9255e01c2351cc7d116c072cb317785dd33b33\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": [\n          \"systems\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1731533236,\n        \"narHash\": \"sha256-l0KFg5HjrsfsO/JpG+r7fRrqm12kzFHyUHqHCVpMMbI=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"11707dc2f618dd54ca8739b309ec4fc024de578b\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"gitignore\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"pre-commit-hooks\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1709087332,\n        \"narHash\": \"sha256-HG2cCnktfHsKV0s4XW83gU3F57gaTljL9KNSuG6bnQs=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"gitignore.nix\",\n        \"rev\": \"637db329424fd7e46cf4185293b9cc8c88c95394\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"gitignore.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"naersk\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1736269059,\n        \"narHash\": \"sha256-VaZlkrcfZOl85fz3o+GnNv+FkMG4RtnZA1eVa6v2TJs=\",\n        \"owner\": \"nix-community\",\n        \"repo\": \"naersk\",\n        \"rev\": \"38a563a865a0218d9f30f14333327aafc40eea75\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-community\",\n        \"repo\": \"naersk\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1736241350,\n        \"narHash\": \"sha256-CHd7yhaDigUuJyDeX0SADbTM9FXfiWaeNyY34FL1wQU=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"8c9fd3e564728e90829ee7dbac6edc972971cd0f\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixpkgs-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"powertest\": {\n      \"inputs\": {\n        \"flake-utils\": [\n          \"flake-utils\"\n        ],\n        \"naersk\": [\n          \"naersk\"\n        ],\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ],\n        \"rust-overlay\": [\n          \"rust-overlay\"\n        ],\n        \"treefmt-nix\": [\n          \"treefmt-nix\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1700124898,\n        \"narHash\": \"sha256-+5jKG/KmYOopvHwBAGu5iPVFqoug16Bkyk/InwB40tc=\",\n        \"owner\": \"eza-community\",\n        \"repo\": \"powertest\",\n        \"rev\": \"c7b7d3038036d24dd5c77286e69a3d4b119bae81\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"eza-community\",\n        \"repo\": \"powertest\",\n        \"type\": \"github\"\n      }\n    },\n    \"pre-commit-hooks\": {\n      \"inputs\": {\n        \"flake-compat\": \"flake-compat\",\n        \"gitignore\": \"gitignore\",\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1735882644,\n        \"narHash\": \"sha256-3FZAG+pGt3OElQjesCAWeMkQ7C/nB1oTHLRQ8ceP110=\",\n        \"owner\": \"cachix\",\n        \"repo\": \"pre-commit-hooks.nix\",\n        \"rev\": \"a5a961387e75ae44cc20f0a57ae463da5e959656\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"cachix\",\n        \"repo\": \"pre-commit-hooks.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"advisory-db\": \"advisory-db\",\n        \"flake-utils\": \"flake-utils\",\n        \"naersk\": \"naersk\",\n        \"nixpkgs\": \"nixpkgs\",\n        \"powertest\": \"powertest\",\n        \"pre-commit-hooks\": \"pre-commit-hooks\",\n        \"rust-overlay\": \"rust-overlay\",\n        \"systems\": \"systems\",\n        \"treefmt-nix\": \"treefmt-nix\"\n      }\n    },\n    \"rust-overlay\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1736303309,\n        \"narHash\": \"sha256-IKrk7RL+Q/2NC6+Ql6dwwCNZI6T6JH2grTdJaVWHF0A=\",\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"rev\": \"a0b81d4fa349d9af1765b0f0b4a899c13776f706\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    },\n    \"treefmt-nix\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1736154270,\n        \"narHash\": \"sha256-p2r8xhQZ3TYIEKBoiEhllKWQqWNJNoT9v64Vmg4q8Zw=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"treefmt-nix\",\n        \"rev\": \"13c913f5deb3a5c08bb810efd89dc8cb24dd968b\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"treefmt-nix\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 4.740234375,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n#\n# SPDX-FileCopyrightText: 2014-2024 Christina Sørensen, eza contributors\n# SPDX-License-Identifier: MIT\n{\n  description = \"eza: a modern, maintained replacement for ls\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n    systems.url = \"github:nix-systems/default\";\n\n    flake-utils = {\n      url = \"github:numtide/flake-utils\";\n      inputs = {\n        systems.follows = \"systems\";\n      };\n    };\n\n    naersk = {\n      url = \"github:nix-community/naersk\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n\n    rust-overlay = {\n      url = \"github:oxalica/rust-overlay\";\n      inputs = {\n        nixpkgs.follows = \"nixpkgs\";\n      };\n    };\n\n    treefmt-nix = {\n      url = \"github:numtide/treefmt-nix\";\n      inputs = {\n        nixpkgs.follows = \"nixpkgs\";\n      };\n    };\n\n    powertest = {\n      url = \"github:eza-community/powertest\";\n      inputs = {\n        nixpkgs.follows = \"nixpkgs\";\n        flake-utils.follows = \"flake-utils\";\n        naersk.follows = \"naersk\";\n        treefmt-nix.follows = \"treefmt-nix\";\n        rust-overlay.follows = \"rust-overlay\";\n      };\n    };\n\n    pre-commit-hooks = {\n      url = \"github:cachix/pre-commit-hooks.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n\n    advisory-db = {\n      url = \"github:rustsec/advisory-db\";\n      flake = false;\n    };\n  };\n  outputs =\n    {\n      self,\n      flake-utils,\n      naersk,\n      nixpkgs,\n      treefmt-nix,\n      rust-overlay,\n      powertest,\n      pre-commit-hooks,\n      ...\n    }:\n    flake-utils.lib.eachDefaultSystem (\n      system:\n      let\n        overlays = [ (import rust-overlay) ];\n\n        pkgs = (import nixpkgs) {\n          inherit system overlays;\n        };\n\n        toolchain = pkgs.rust-bin.fromRustupToolchainFile ./rust-toolchain.toml;\n\n        naersk' = pkgs.callPackage naersk {\n          cargo = toolchain;\n          rustc = toolchain;\n          clippy = toolchain;\n        };\n\n        treefmtEval = treefmt-nix.lib.evalModule pkgs .config/treefmt.nix;\n\n        darwinBuildInputs = pkgs.lib.optionals pkgs.stdenv.isDarwin [\n          pkgs.libiconv\n          pkgs.darwin.apple_sdk.frameworks.Security\n        ];\n\n        buildInputs = [ pkgs.zlib ] ++ darwinBuildInputs;\n      in\n      rec {\n        # For `nix fmt`\n        formatter = treefmtEval.config.build.wrapper;\n\n        packages = {\n          default = import ./nix/eza.nix { inherit pkgs naersk' buildInputs; };\n\n          check = naersk'.buildPackage {\n            inherit buildInputs;\n            src = ./.;\n            mode = \"check\";\n          };\n\n          test = naersk'.buildPackage {\n            inherit buildInputs;\n            src = ./.;\n            mode = \"test\";\n          };\n\n          clippy = naersk'.buildPackage {\n            inherit buildInputs;\n            src = ./.;\n            mode = \"clippy\";\n          };\n        } // (import ./nix/trycmd.nix { inherit pkgs naersk' buildInputs; });\n\n        devShells.default = pkgs.mkShell {\n          inherit (self.checks.${system}.pre-commit-check) shellHook;\n          nativeBuildInputs =\n            with pkgs;\n            [\n              # cargo\n              # clippy\n              rustup\n              toolchain\n              just\n              pandoc\n              convco\n              zip\n              reuse\n\n              # For releases\n              b3sum\n              cargo-bump\n\n              # For generating demo\n              vhs\n\n              powertest.packages.${pkgs.system}.default\n\n              cargo-hack\n              cargo-udeps\n              cargo-outdated\n            ]\n            ++ darwinBuildInputs;\n        };\n\n        checks = {\n          pre-commit-check =\n            let\n              toFilter = [\n                \"yamlfmt\"\n                \"nixfmt\"\n                \"taplo\"\n              ];\n              filterFn = n: _v: (!builtins.elem n toFilter);\n              treefmtFormatters = pkgs.lib.mapAttrs (_n: v: { inherit (v) enable; }) (\n                pkgs.lib.filterAttrs filterFn (import .config/treefmt.nix).programs\n              );\n            in\n            pre-commit-hooks.lib.${system}.run {\n              src = ./.;\n              hooks = treefmtFormatters // {\n                nixfmt-rfc-style.enable = true;\n                convco.enable = true;\n                reuse = {\n                  enable = true;\n                  name = \"reuse\";\n                  entry = with pkgs; \"${reuse}/bin/reuse lint\";\n                  pass_filenames = false;\n                };\n              };\n            };\n          formatting = treefmtEval.config.build.check self;\n          build = packages.check;\n          inherit (packages)\n            default\n            test\n            trycmd\n            ;\n          lint = packages.clippy;\n        };\n      }\n    );\n}\n"
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 10.0966796875,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n_default:\n    @just -l\n\nall: build test\nall-release: build-release test-release\n\n[group('house-keeping')]\ngenDemo:\n    fish_prompt=\"> \" fish_history=\"eza_history\" vhs < docs/tapes/demo.tape\n    nsxiv -a docs/images/demo.gif\n\n#----------#\n# building #\n#----------#\n\n# compile the exa binary\n[group('building')]\n@build:\n    cargo build\n\n# compile the exa binary (in release mode)\n[group('building')]\n@build-release:\n    cargo build --release --verbose\n\n# produce an HTML chart of compilation timings\n[group('building')]\n@build-time:\n    cargo +nightly clean\n    cargo +nightly build -Z timings\n\n# check that the exa binary can compile\n[group('building')]\n@check:\n    cargo check\n\n\n#---------------#\n# running tests #\n#---------------#\n\n# run unit tests\n[group('testing')]\n@test:\n    cargo test --workspace -- --quiet\n\n# run unit tests (in release mode)\n[group('testing')]\n@test-release:\n    cargo test --workspace --release --verbose\n\n#-----------------------#\n# code quality and misc #\n#-----------------------#\n\n# lint the code\n[group('house-keeping')]\n@clippy:\n    touch src/main.rs\n    cargo clippy\n\n# update dependency versions, and checks for outdated ones\n[group('house-keeping')]\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n    cargo outdated\n\n# list unused dependencies\n[group('house-keeping')]\n@unused-deps:\n    command -v cargo-udeps >/dev/null || (echo \"cargo-udeps not installed\" && exit 1)\n    cargo +nightly udeps\n\n# check that every combination of feature flags is successful\n[group('house-keeping')]\n@check-features:\n    command -v cargo-hack >/dev/null || (echo \"cargo-hack not installed\" && exit 1)\n    cargo hack check --feature-powerset\n\n# print versions of the necessary build tools\n[group('house-keeping')]\n@versions:\n    rustc --version\n    cargo --version\n\n\n#---------------#\n# documentation #\n#---------------#\n\n# build the man pages\n[group('documentation')]\n@man:\n    mkdir -p \"${CARGO_TARGET_DIR:-target}/man\"\n    version=$(awk 'BEGIN { FS = \"\\\"\" } ; /^version/ { print $2 ; exit }' Cargo.toml); \\\n    for page in eza.1 eza_colors.5 eza_colors-explanation.5; do \\\n        sed \"s/\\$version/v${version}/g\" \"man/${page}.md\" | pandoc --standalone -f markdown -t man > \"${CARGO_TARGET_DIR:-target}/man/${page}\"; \\\n    done;\n\n# build and preview the main man page (eza.1)\n[group('documentation')]\n@man-1-preview: man\n    man \"${CARGO_TARGET_DIR:-target}/man/eza.1\"\n\n# build and preview the colour configuration man page (eza_colors.5)\n[group('documentation')]\n@man-5-preview: man\n    man \"${CARGO_TARGET_DIR:-target}/man/eza_colors.5\"\n\n# build and preview the colour configuration man page (eza_colors.5)\n[group('documentation')]\n@man-5-explanations-preview: man\n    man \"${CARGO_TARGET_DIR:-target}/man/eza_colors-explanation.5\"\n\n#---------------#\n#    release    #\n#---------------#\n\nnew_version := \"$(convco version --bump)\"\n\n# If you're not cafkafk and she isn't dead, don't run this!\n#\n# usage: release major, release minor, release patch\n[group('release')]\nrelease:\n    cargo bump \"{{new_version}}\"\n    git cliff -c .config/cliff.toml -t \"{{new_version}}\" > CHANGELOG.md\n    cargo check\n    nix build -L ./#clippy\n    git checkout -b \"cafk-release-v{{new_version}}\"\n    git commit -asm \"chore: eza v{{new_version}} changelogs, version bump\"\n    git push\n    @echo \"waiting 10 seconds for github to catch up...\"\n    sleep 10\n    gh pr create --draft --title \"chore: release v{{new_version}}\" --body \"This PR was auto-generated by our lovely just file\" --reviewer cafkafk\n    @echo \"Now go review that and come back and run gh-release\"\n\n[group('release')]\n@gh-release:\n    git tag -d \"v{{new_version}}\" || echo \"tag not found, creating\";\n    git tag --sign -a \"v{{new_version}}\" -m \"auto generated by the justfile for eza v$(convco version)\"\n    just cross\n    just mangen\n    just completions\n    mkdir -p ./target/\"release-notes-$(convco version)\"\n    git cliff -c .config/cliff.toml -t \"v$(convco version)\" --current > ./target/\"release-notes-$(convco version)/RELEASE.md\"\n    just checksum >> ./target/\"release-notes-$(convco version)/RELEASE.md\"\n\n    git push origin \"v{{new_version}}\"\n    gh release create \"v$(convco version)\" --target \"$(git rev-parse HEAD)\" --title \"eza v$(convco version)\" -d -F ./target/\"release-notes-$(convco version)/RELEASE.md\" ./target/\"bin-$(convco version)\"/* ./target/\"man-$(convco version).tar.gz\" ./target/\"completions-$(convco version).tar.gz\"\n\n#----------------#\n#    binaries    #\n#----------------#\n\n[group('binaries')]\ntar BINARY TARGET:\n    tar czvf ./target/\"bin-$(convco version)\"/{{BINARY}}_{{TARGET}}.tar.gz -C ./target/{{TARGET}}/release/ ./{{BINARY}}\n\n[group('binaries')]\nzip BINARY TARGET:\n    zip -j ./target/\"bin-$(convco version)\"/{{BINARY}}_{{TARGET}}.zip ./target/{{TARGET}}/release/{{BINARY}}\n\n[group('binaries')]\ntar_static BINARY TARGET:\n    tar czvf ./target/\"bin-$(convco version)\"/{{BINARY}}_{{TARGET}}_static.tar.gz -C ./target/{{TARGET}}/release/ ./{{BINARY}}\n\n[group('binaries')]\nzip_static BINARY TARGET:\n    zip -j ./target/\"bin-$(convco version)\"/{{BINARY}}_{{TARGET}}_static.zip ./target/{{TARGET}}/release/{{BINARY}}\n\n[group('binaries')]\nbinary BINARY TARGET:\n    rustup target add {{TARGET}}\n    cross build --release --target {{TARGET}}\n    just tar {{BINARY}} {{TARGET}}\n    just zip {{BINARY}} {{TARGET}}\n\n[group('binaries')]\nbinary_static BINARY TARGET:\n    rustup target add {{TARGET}}\n    RUSTFLAGS='-C target-feature=+crt-static' cross build --release --target {{TARGET}}\n    just tar_static {{BINARY}} {{TARGET}}\n    just zip_static {{BINARY}} {{TARGET}}\n\n[group('binaries')]\nbinary_no_libgit BINARY TARGET:\n    rustup target add {{TARGET}}\n    cross build --no-default-features --release --target {{TARGET}}\n    just tar {{BINARY}} {{TARGET}}\n    just zip {{BINARY}} {{TARGET}}\n\n[group('binaries')]\nbinary_static_no_libgit BINARY TARGET:\n    rustup target add {{TARGET}}\n    RUSTFLAGS='-C target-feature=+crt-static' cross build --no-default-features --release --target {{TARGET}}\n    just tar_static {{BINARY}} {{TARGET}}\n    just zip_static {{BINARY}} {{TARGET}}\n\n[group('binaries')]\nchecksum:\n    @echo \"# Checksums\"\n    @echo \"## sha256sum\"\n    @echo '```'\n    @sha256sum ./target/\"bin-$(convco version)\"/*\n    @echo '```'\n    @echo \"## md5sum\"\n    @echo '```'\n    @md5sum ./target/\"bin-$(convco version)\"/*\n    @echo '```'\n    @echo \"## blake3sum\"\n    @echo '```'\n    @b3sum ./target/\"bin-$(convco version)\"/*\n    @echo '```'\n\nalias c := cross\n\n# Generate release binaries for EZA\n#\n# usage: cross\n[group('binaries')]\n@cross:\n    # Setup Output Directory\n    mkdir -p ./target/\"bin-$(convco version)\"\n\n    # Install Toolchains/Targets\n    rustup toolchain install stable\n\n    ## Linux\n    ### x86\n    just binary eza x86_64-unknown-linux-gnu\n    # just binary_static eza x86_64-unknown-linux-gnu\n    just binary eza x86_64-unknown-linux-musl\n    # just binary_static eza x86_64-unknown-linux-musl\n\n    ### aarch\n    just binary_no_libgit eza aarch64-unknown-linux-gnu\n    # BUG: just binary_static eza aarch64-unknown-linux-gnu\n\n    ### arm\n    just binary_no_libgit eza arm-unknown-linux-gnueabihf\n    # just binary_static eza arm-unknown-linux-gnueabihf\n\n    ## MacOS\n    # TODO: just binary eza x86_64-apple-darwin\n\n    ## Windows\n    ### x86\n    just binary eza.exe x86_64-pc-windows-gnu\n    # just binary_static eza.exe x86_64-pc-windows-gnu\n    # TODO: just binary eza.exe x86_64-pc-windows-gnullvm\n    # TODO: just binary eza.exe x86_64-pc-windows-msvc\n\n    # Generate Checksums\n    # TODO: moved to gh-release just checksum\n\n[group('documentation')]\n@mangen:\n    # Setup Output Directory\n    mkdir -p ./target/\"man-$(convco version)\"\n    pandoc --standalone -f markdown -t man man/eza.1.md > ./target/\"man-$(convco version)\"/eza.1\n    pandoc --standalone -f markdown -t man man/eza_colors.5.md > ./target/\"man-$(convco version)\"/eza_colors.5\n    pandoc --standalone -f markdown -t man man/eza_colors-explanation.5.md > ./target/\"man-$(convco version)\"/eza_colors-explanation.5\n    tar czvf ./target/\"man-$(convco version)\".tar.gz ./target/\"man-$(convco version)\"\n\n[group('documentation')]\n[group('binaries')]\n@completions:\n    # Setup Output Directory\n    mkdir -p ./target/\"completions-$(convco version)\"\n    cp completions/*/* ./target/\"completions-$(convco version)\"/\n    tar czvf ./target/\"completions-$(convco version)\".tar.gz ./target/\"completions-$(convco version)\"\n\n\n#---------------------#\n# Integration testing #\n#---------------------#\n\nalias gen := gen_test_dir\n\ntest_dir := \"tests/test_dir\"\n\n[group('testing')]\ngen_test_dir:\n    bash devtools/dir-generator.sh {{ test_dir }}\n\n# Runs integration tests in nix sandbox\n#\n# Required nix, likely won't work on windows.\n[group('testing')]\n@itest:\n    nix build -L ./#trycmd-local\n\n# Runs integration tests in nix sandbox, and dumps outputs.\n#\n# WARNING: this can cause loss of work\n[group('testing')]\n@idump:\n    rm ./tests/gen/*_nix.stderr -f || echo\n    rm ./tests/gen/*_nix.stdout -f || echo\n    rm ./tests/gen/*_unix.stderr -f || echo\n    rm ./tests/gen/*_unix.stdout -f || echo\n    rm ./tests/ptests/ptest_*.stderr -f || echo\n    rm ./tests/ptests/ptest_*.stdout -f || echo\n\n    nix build -L ./#trydump\n\n    find result/dump -type f \\( -name \"*.stdout\" -o -name \"*.stderr\" \\) -exec sh -c 'base=$(basename {}); if [ -e \"tests/gen/${base%.*}.toml\" ]; then cp {} tests/gen/; elif [ -e \"tests/cmd/${base%.*}.toml\" ]; then cp {} tests/cmd/; elif [ -e \"tests/ptests/${base%.*}.toml\" ]; then cp {} tests/ptests/; fi' \\;\n\n[group('testing')]\n@itest-gen:\n    nix build -L ./#trycmd\n\n# Fully re-generates the integration tests using powertest\n[group('testing')]\n@regen:\n    which powertest >&- 2>&- || (echo -e \"Powertest not installed. Please Clone the repo and run:\\n\\tcargo install --path . --locked\" && exit 1)\n    echo \"WARNING: this will delete all tests in tests/ptest\"\n    sleep 5\n    echo \"Deleting tests/ptests\"\n    rm -rf tests/ptests\n    echo \"Generating tests/ptests\"\n    powertest\n    nix build -L ./#trydump\n    find result/dump -type f \\( -name \"*.stdout\" -o -name \"*.stderr\" \\) -exec sh -c 'base=$(basename {}); if [ -e \"tests/ptests/${base%.*}.toml\" ]; then cp {} tests/ptests/; fi' \\;\n\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "powertest.yaml",
          "type": "blob",
          "size": 3.005859375,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\ndump_dir: tests/ptests\ndepth: 1\nbinary: eza\ngen_binary: target/debug/eza\nargs: tests/test_dir\ncommands:\n  ? - null # Meta options\n    - --help\n  :\n  ? - -v\n    - --version\n  :\n  ? - -1 # Display Options\n    - --oneline\n  :\n  ? - -l\n    - --long\n  :\n  ? - -G\n    - --grid\n  :\n  ? - -x\n    - --across\n  :\n  ? - -R\n    - --recurse\n  :\n  ? - -T\n    - --tree\n  :\n  ? - -X\n    - --dereference\n  :\n  ? - -F\n    - --classify\n  :\n  ? - -F\n    - --classify\n  : values:\n      - auto\n      - always\n      - never\n  ? - null\n    - --color\n  : values:\n      - auto\n      - always\n      - never\n  ? - null\n    - --colour\n  : values:\n      - auto\n      - always\n      - never\n  ? - null\n    - --icons\n  :\n  ? - null\n    - --icons\n  : values:\n      - auto\n      - always\n      - never\n  ? - null\n    - --no-quotes\n  :\n  ? - null\n    - --hyperlink\n  :\n  ? - null\n    - --absolute\n  : values:\n      - on\n      - follow\n      - off\n  ? - -w\n    - --width\n  : values:\n      - 15\n      - 30\n      - 200\n  ? - null\n    - --smart-group\n  :\n  ? - -a # Filtering and Sorting Options\n    - --all\n  :\n  ? - -A\n    - --almost-all\n  :\n  ? - -d\n    - --list-dirs\n  :\n  ? - -L\n    - --level\n  : prefix: --tree\n    values:\n      - 1\n      - 2\n      - 3\n      - 4\n      - 5\n  ? - -r\n    - --reverse\n  :\n  ? - -s\n    - --sort\n  : short: -s\n    long: time-style\n    prefix: -l\n    values:\n      #- accessed\n      - age\n      #- changed\n      #- created\n      - date\n      - Ext\n      - ext\n      - Extension\n      - extension\n      - Filename\n      - filename\n      - inode\n      - modified\n      - Name\n      - name\n      - newest\n      #- none seems non-deterministic\n      - oldest\n      - size\n      - time\n      - type\n  ? - null\n    - --group-directories-first\n  :\n  ? - null\n    - --group-directories-last\n  :\n  ? - -D\n    - --only-dirs\n  :\n  ? - -f\n    - --only-files\n  :\n  ? - -f\n    - --only-files\n  :\n  ? - -I # TODO: add more globs\n    - --ignore-glob\n  : prefix: -l\n    values:\n      - \"*.toml\"\n  ? - null\n    - --git-ignore\n  :\n  ? - -b # Long View Options\n    - --binary\n  :\n  ? - -B\n    - --bytes\n  :\n  ? - -g\n    - --group\n  :\n  ? - -h\n    - --header\n  :\n  ? - -H\n    - --links\n  :\n  ? - -i\n    - --inode\n  :\n  ? - -m\n    - --modified\n  :\n  ? - -M\n    - --mounts\n  :\n  ? - -n\n    - --numeric\n  :\n  ? - -S\n    - --blocksize\n  :\n  ? - -t\n    - --time\n  : prefix: -l\n    values:\n      - modified\n      #- accessed BROKEN\n      #- changed\n      #- created\n  ? - -u\n    - --accessed\n  :\n  ? - -U\n    - --created\n  :\n  ? - null\n    - --changed\n  :\n  ? - null\n    - --time-style\n  : long: time-style\n    values:\n      - default\n      - iso\n      - long-iso\n      - full-iso\n      - relative\n  ? - null\n    - --total-size\n  :\n  ? - null\n    - --no-permissions\n  :\n  ? - -o\n    - --octal-permissions\n  :\n  ? - null\n    - --no-filesize\n  :\n  ? - null\n    - --no-user\n  :\n  ? - null\n    - --git\n  :\n  ? - null\n    - --no-git\n  :\n  ? - null\n    - --git-repos\n  :\n  ? - -@\n    - --extended\n  :\n  ? - -Z\n    - --context\n  :\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.2275390625,
          "content": "# SPDX-FileCopyrightText: 2024 Christina Sørensen\n# SPDX-License-Identifier: EUPL-1.2\n[toolchain]\nchannel = \"1.74\"\ncomponents = [\n  \"rustfmt\",\n  \"rustc\",\n  \"rust-src\",\n  \"rust-analyzer\",\n  \"cargo\",\n  \"clippy\",\n]\nprofile = \"minimal\"\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}