{
  "metadata": {
    "timestamp": 1736709410277,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "casey/just",
      "stars": 23173,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.349609375,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\n# Text is UTF-8\ncharset = utf-8\n# Unix-style newlines\nend_of_line = lf\n# Newline ending every file\ninsert_final_newline = true\n# Soft tabs\nindent_style = space\n# Two-space indentation\nindent_size = 2\n# Trim trailing whitespace\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0078125,
          "content": "* -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.208984375,
          "content": ".DS_Store\n.idea\n/.vagrant\n/.vscode\n/README.html\n/book/en/build\n/book/en/src\n/book/zh/build\n/book/zh/src\n/fuzz/artifacts\n/fuzz/corpus\n/fuzz/target\n/man\n/target\n/test-utilities/Cargo.lock\n/test-utilities/target\n/tmp\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 127.5439453125,
          "content": "Changelog\n=========\n\n[1.38.0](https://github.com/casey/just/releases/tag/1.38.0) - 2024-12-10\n------------------------------------------------------------------------\n\n### Added\n- Add `[openbsd]` recipe attribute ([#2497](https://github.com/casey/just/pull/2497) by [vtamara](https://github.com/vtamara))\n- Add `[working-directory]` recipe attribute ([#2438](https://github.com/casey/just/pull/2438) by [bcheidemann](https://github.com/bcheidemann))\n- Add `--allow-missing` to ignore missing recipe and submodule errors ([#2460](https://github.com/casey/just/pull/2460) by [R3ZV](https://github.com/R3ZV))\n\n### Changed\n- Add snap package back to readme ([#2506](https://github.com/casey/just/pull/2506) by [casey](https://github.com/casey))\n- Forbid duplicate non-repeatable attributes ([#2483](https://github.com/casey/just/pull/2483) by [casey](https://github.com/casey))\n\n### Misc\n- Publish docs to GitHub pages on release only ([#2516](https://github.com/casey/just/pull/2516) by [casey](https://github.com/casey))\n- Note lack of support for string interpolation ([#2515](https://github.com/casey/just/pull/2515) by [casey](https://github.com/casey))\n- Embolden help text errors ([#2502](https://github.com/casey/just/pull/2502) by [casey](https://github.com/casey))\n- Style help text ([#2501](https://github.com/casey/just/pull/2501) by [casey](https://github.com/casey))\n- Add `--request` subcommand for testing ([#2498](https://github.com/casey/just/pull/2498) by [casey](https://github.com/casey))\n- [bin/forbid] Improve error message if ripgrep is missing ([#2493](https://github.com/casey/just/pull/2493) by [casey](https://github.com/casey))\n- Fix Rust 1.83 clippy warnings ([#2487](https://github.com/casey/just/pull/2487) by [casey](https://github.com/casey))\n- Refactor JSON tests ([#2484](https://github.com/casey/just/pull/2484) by [casey](https://github.com/casey))\n- Get `Config` from `ExecutionContext` instead of passing separately ([#2481](https://github.com/casey/just/pull/2481) by [casey](https://github.com/casey))\n- Don't write justfiles unchanged by formatting ([#2479](https://github.com/casey/just/pull/2479) by [casey](https://github.com/casey))\n\n[1.37.0](https://github.com/casey/just/releases/tag/1.37.0) - 2024-11-20\n------------------------------------------------------------------------\n\n### Added\n- Add `style()` function ([#2462](https://github.com/casey/just/pull/2462) by [casey](https://github.com/casey))\n- Terminal escape sequence constants ([#2461](https://github.com/casey/just/pull/2461) by [casey](https://github.com/casey))\n- Add `&&` and `||` operators ([#2444](https://github.com/casey/just/pull/2444) by [casey](https://github.com/casey))\n\n### Changed\n- Make recipe doc attribute override comment ([#2470](https://github.com/casey/just/pull/2470) by [casey](https://github.com/casey))\n- Don't export constants ([#2449](https://github.com/casey/just/pull/2449) by [casey](https://github.com/casey))\n- Allow duplicate imports ([#2437](https://github.com/casey/just/pull/2437) by [casey](https://github.com/casey))\n- Publish single SHA256SUM file with releases ([#2417](https://github.com/casey/just/pull/2417) by [casey](https://github.com/casey))\n- Mark recipes with private attribute as private in JSON dump ([#2415](https://github.com/casey/just/pull/2415) by [casey](https://github.com/casey))\n- Forbid invalid attributes on assignments ([#2412](https://github.com/casey/just/pull/2412) by [casey](https://github.com/casey))\n\n### Misc\n- Update `softprops/action-gh-release` ([#2471](https://github.com/casey/just/pull/2471) by [app/dependabot](https://github.com/app/dependabot))\n- Add `-g` to `rust-just` install instructions ([#2459](https://github.com/casey/just/pull/2459) by [gnpaone](https://github.com/gnpaone))\n- Change doc backtick color to cyan ([#2469](https://github.com/casey/just/pull/2469) by [casey](https://github.com/casey))\n- Note that `set shell` is not used for `[script]` recipes ([#2468](https://github.com/casey/just/pull/2468) by [iloveitaly](https://github.com/iloveitaly))\n- Replace `derivative` with `derive-where` ([#2465](https://github.com/casey/just/pull/2465) by [laniakea64](https://github.com/laniakea64))\n- Highlight backticks in docs when listing recipes ([#2423](https://github.com/casey/just/pull/2423) by [neunenak](https://github.com/neunenak))\n- Update setup-just version in README ([#2456](https://github.com/casey/just/pull/2456) by [Julian](https://github.com/Julian))\n- Fix shell function example in readme ([#2454](https://github.com/casey/just/pull/2454) by [casey](https://github.com/casey))\n- Update softprops/action-gh-release ([#2450](https://github.com/casey/just/pull/2450) by [app/dependabot](https://github.com/app/dependabot))\n- Use `justfile` instead of `mf` on invalid examples in readme ([#2447](https://github.com/casey/just/pull/2447) by [casey](https://github.com/casey))\n- Add advice on printing complex strings ([#2446](https://github.com/casey/just/pull/2446) by [casey](https://github.com/casey))\n- Document using functions in variable assignments ([#2431](https://github.com/casey/just/pull/2431) by [offby1](https://github.com/offby1))\n- Use prettier string comparison in tests ([#2435](https://github.com/casey/just/pull/2435) by [neunenak](https://github.com/neunenak))\n- Note `shell(…)` as an alternative to backticks ([#2430](https://github.com/casey/just/pull/2430) by [offby1](https://github.com/offby1))\n- Update nix package links ([#2441](https://github.com/casey/just/pull/2441) by [yunusey](https://github.com/yunusey))\n- Update README.中文.md ([#2424](https://github.com/casey/just/pull/2424) by [Jannchie](https://github.com/Jannchie))\n- Add Recipe::subsequents ([#2428](https://github.com/casey/just/pull/2428) by [casey](https://github.com/casey))\n- Add subsequents to grammar ([#2427](https://github.com/casey/just/pull/2427) by [casey](https://github.com/casey))\n- Document checking releases hashes  ([#2418](https://github.com/casey/just/pull/2418) by [casey](https://github.com/casey))\n- Show how to access positional arguments with powershell ([#2405](https://github.com/casey/just/pull/2405) by [casey](https://github.com/casey))\n- Use `-CommandWithArgs` instead of `-cwa` ([#2404](https://github.com/casey/just/pull/2404) by [casey](https://github.com/casey))\n- Document `-cwa` flag for PowerShell positional arguments ([#2403](https://github.com/casey/just/pull/2403) by [casey](https://github.com/casey))\n- Use `unwrap_or` when creating relative path in loader ([#2400](https://github.com/casey/just/pull/2400) by [casey](https://github.com/casey))\n\n[1.36.0](https://github.com/casey/just/releases/tag/1.36.0) - 2024-09-30\n------------------------------------------------------------------------\n\n### Changed\n- Allow default values to use earlier recipe arguments ([#2382](https://github.com/casey/just/pull/2382) by [casey](https://github.com/casey))\n\n### Added\n- Add `--one` flag to forbid multiple recipes from being invoked on the command line ([#2374](https://github.com/casey/just/pull/2374) by [casey](https://github.com/casey))\n- Allow including arbitrary characters in strings with `\\u{…}` ([#2360](https://github.com/casey/just/pull/2360) by [laniakea64](https://github.com/laniakea64))\n- Print recipe doc string when`--explain` flag  is passed ([#2319](https://github.com/casey/just/pull/2319) by [neunenak](https://github.com/neunenak))\n\n### Misc\n- Use unwrap_or_default() when getting default color and verbosity ([#2397](https://github.com/casey/just/pull/2397) by [casey](https://github.com/casey))\n- De-duplicate suggestion methods ([#2392](https://github.com/casey/just/pull/2392) by [neunenak](https://github.com/neunenak))\n- Refactor analyzer ([#2378](https://github.com/casey/just/pull/2378) by [neunenak](https://github.com/neunenak))\n- Use `console` codeblocks in readme ([#2388](https://github.com/casey/just/pull/2388) by [casey](https://github.com/casey))\n- Split packages table by platform ([#2385](https://github.com/casey/just/pull/2385) by [casey](https://github.com/casey))\n- Document npm package ([#2384](https://github.com/casey/just/pull/2384) by [casey](https://github.com/casey))\n- Add PyPI install instructions ([#2383](https://github.com/casey/just/pull/2383) by [casey](https://github.com/casey))\n- Remove alias shadows recipe error ([#2375](https://github.com/casey/just/pull/2375) by [neunenak](https://github.com/neunenak))\n- Name instead of number book chapter files ([#2372](https://github.com/casey/just/pull/2372) by [casey](https://github.com/casey))\n- Add groups to project justfile ([#2351](https://github.com/casey/just/pull/2351) by [neunenak](https://github.com/neunenak))\n- Document `\\u{...}` ([#2371](https://github.com/casey/just/pull/2371) by [laniakea64](https://github.com/laniakea64))\n- Remove old recipes from project justfile ([#2367](https://github.com/casey/just/pull/2367) by [casey](https://github.com/casey))\n- Document `--dotenv-path` in readme ([#2366](https://github.com/casey/just/pull/2366) by [willie](https://github.com/willie))\n- Remove ref-type crate ([#2364](https://github.com/casey/just/pull/2364) by [casey](https://github.com/casey))\n- Fix type names in redefinition error message ([#2353](https://github.com/casey/just/pull/2353) by [marcaddeo](https://github.com/marcaddeo))\n- Use relative in `.sha256sum` files ([#2358](https://github.com/casey/just/pull/2358) by [casey](https://github.com/casey))\n- Link to readme in CONTRIBUTING.md ([#2348](https://github.com/casey/just/pull/2348) by [casey](https://github.com/casey))\n- Fix clippy lints ([#2347](https://github.com/casey/just/pull/2347) by [casey](https://github.com/casey))\n- Simplify `Subcommand::run` ([#2336](https://github.com/casey/just/pull/2336) by [neunenak](https://github.com/neunenak))\n- Update module issue link in readme ([#2345](https://github.com/casey/just/pull/2345) by [casey](https://github.com/casey))\n- Add blank line between CI workflow jobs ([#2343](https://github.com/casey/just/pull/2343) by [casey](https://github.com/casey))\n- Color groups in `--list` output ([#2340](https://github.com/casey/just/pull/2340) by [casey](https://github.com/casey))\n- Refactor and document subcommand and search ([#2335](https://github.com/casey/just/pull/2335) by [neunenak](https://github.com/neunenak))\n- Document private variables ([#2331](https://github.com/casey/just/pull/2331) by [Jasha10](https://github.com/Jasha10))\n\n[1.35.0](https://github.com/casey/just/releases/tag/1.35.0) - 2024-08-28\n------------------------------------------------------------------------\n\n### Changed\n- Allow fallback with recipes in submodules ([#2329](https://github.com/casey/just/pull/2329) by [casey](https://github.com/casey))\n- Allow `[private]` attribute on assignments ([#2300](https://github.com/casey/just/pull/2300) by [adsnaider](https://github.com/adsnaider))\n\n### Misc\n- Generate `.sha256sum` files for release artifacts ([#2323](https://github.com/casey/just/pull/2323) by [twm](https://github.com/twm))\n- Clarify that subsequent dependencies run immediately after recipe ([#2326](https://github.com/casey/just/pull/2326) by [casey](https://github.com/casey))\n- Fix readme typo ([#2321](https://github.com/casey/just/pull/2321) by [arminius-smh](https://github.com/arminius-smh))\n- Remove Config::run ([#2320](https://github.com/casey/just/pull/2320) by [neunenak](https://github.com/neunenak))\n- Bump MSRV to 1.74 ([#2306](https://github.com/casey/just/pull/2306) by [casey](https://github.com/casey))\n- Remove logging ([#2305](https://github.com/casey/just/pull/2305) by [casey](https://github.com/casey))\n- Group commands under dedicated heading in `--help` output ([#2302](https://github.com/casey/just/pull/2302) by [casey](https://github.com/casey))\n- Fix readme typo ([#2297](https://github.com/casey/just/pull/2297) by [nyurik](https://github.com/nyurik))\n\n[1.34.0](https://github.com/casey/just/releases/tag/1.34.0) - 2024-08-02\n------------------------------------------------------------------------\n\n### Fixed\n- Make function paths relative to correct working directory ([#2294](https://github.com/casey/just/pull/2294) by [casey](https://github.com/casey))\n\n### Changed\n- Keep multi-line shebangs together ([#2276](https://github.com/casey/just/pull/2276) by [vkstrm](https://github.com/vkstrm))\n\n### Misc\n- Document `set working-directory` ([#2288](https://github.com/casey/just/pull/2288) by [nyurik](https://github.com/nyurik))\n- Fix readme typos ([#2289](https://github.com/casey/just/pull/2289) by [casey](https://github.com/casey))\n\n[1.33.0](https://github.com/casey/just/releases/tag/1.33.0) - 2024-07-30\n------------------------------------------------------------------------\n\n### Fixed\n- Use correct backtick and `shell()` expression working directory in submodules ([#2285](https://github.com/casey/just/pull/2285) by [casey](https://github.com/casey))\n\n### Added\n- Add `working-directory` setting ([#2283](https://github.com/casey/just/pull/2283) by [nyurik](https://github.com/nyurik))\n- Allow `[group]` attribute on submodules ([#2263](https://github.com/casey/just/pull/2263) by [jmwoliver](https://github.com/jmwoliver))\n- Allow empty `[script]` attribute and add `set script-interpreter` ([#2264](https://github.com/casey/just/pull/2264) by [casey](https://github.com/casey))\n\n### Misc\n- Document which attributes apply to which items ([#2282](https://github.com/casey/just/pull/2282) by [casey](https://github.com/casey))\n- Add missing productions ([#2280](https://github.com/casey/just/pull/2280) by [poliorcetics](https://github.com/poliorcetics))\n- Fix Rust 1.80.0 warnings ([#2281](https://github.com/casey/just/pull/2281) by [casey](https://github.com/casey))\n- Update softprops/action-gh-release ([#2269](https://github.com/casey/just/pull/2269) by [app/dependabot](https://github.com/app/dependabot))\n- Remove `(no group)` header before ungrouped recipes ([#2268](https://github.com/casey/just/pull/2268) by [casey](https://github.com/casey))\n- Document `script-interpreter` setting ([#2265](https://github.com/casey/just/pull/2265) by [casey](https://github.com/casey))\n- `set dotenv-path` does not override `set dotenv-filename` ([#2262](https://github.com/casey/just/pull/2262) by [casey](https://github.com/casey))\n\n[1.32.0](https://github.com/casey/just/releases/tag/1.32.0) - 2024-07-17\n------------------------------------------------------------------------\n\n### Added\n- Add unstable `[script(…)]` attribute ([#2259](https://github.com/casey/just/pull/2259) by [casey](https://github.com/casey))\n- Add `[extension: 'EXT']` attribute to set shebang recipe script file extension ([#2256](https://github.com/casey/just/pull/2256) by [casey](https://github.com/casey))\n- Suppress mod doc comment with empty `[doc]` attribute ([#2254](https://github.com/casey/just/pull/2254) by [casey](https://github.com/casey))\n- Allow `[doc]` annotation on modules ([#2247](https://github.com/casey/just/pull/2247) by [neunenak](https://github.com/neunenak))\n\n[1.31.0](https://github.com/casey/just/releases/tag/1.31.0) - 2024-07-14\n------------------------------------------------------------------------\n\n### Stabilized\n- Stabilize modules ([#2250](https://github.com/casey/just/pull/2250) by [casey](https://github.com/casey))\n\n### Added\n- Allow `mod` path to be directory containing module source ([#2238](https://github.com/casey/just/pull/2238) by [casey](https://github.com/casey))\n- Allow enabling unstable features with `set unstable` ([#2237](https://github.com/casey/just/pull/2237) by [casey](https://github.com/casey))\n- Allow abbreviating functions ending in `_directory` to `_dir` ([#2235](https://github.com/casey/just/pull/2235) by [casey](https://github.com/casey))\n\n### Fixed\n- Lexiclean search directory so `..` does not check the current directory ([#2236](https://github.com/casey/just/pull/2236) by [casey](https://github.com/casey))\n\n### Misc\n- Print space before submodules in `--list` with groups ([#2244](https://github.com/casey/just/pull/2244) by [casey](https://github.com/casey))\n\n[1.30.1](https://github.com/casey/just/releases/tag/1.30.1) - 2024-07-06\n------------------------------------------------------------------------\n\n### Fixed\n- Fix function argument count mismatch error message ([#2231](https://github.com/casey/just/pull/2231) by [casey](https://github.com/casey))\n\n[1.30.0](https://github.com/casey/just/releases/tag/1.30.0) - 2024-07-06\n------------------------------------------------------------------------\n\n### Fixed\n- Allow comments after `mod` statements ([#2201](https://github.com/casey/just/pull/2201) by [casey](https://github.com/casey))\n\n### Changed\n- Allow unstable features with `--summary` ([#2210](https://github.com/casey/just/pull/2210) by [casey](https://github.com/casey))\n- Don't analyze comments when `ignore-comments` is set ([#2180](https://github.com/casey/just/pull/2180) by [casey](https://github.com/casey))\n- List recipes by group in group justfile order with `just --list --unsorted` ([#2164](https://github.com/casey/just/pull/2164) by [casey](https://github.com/casey))\n- List groups in source order with `just --groups --unsorted` ([#2160](https://github.com/casey/just/pull/2160) by [casey](https://github.com/casey))\n\n### Added\n- Avoid `install` and add 32-bit arm targets to `install.sh` ([#2214](https://github.com/casey/just/pull/2214) by [CramBL](https://github.com/CramBL))\n- Give modules doc comments for `--list` ([#2199](https://github.com/casey/just/pull/2199) by [Spatenheinz](https://github.com/Spatenheinz))\n- Add `datetime()` and `datetime_utc()` functions ([#2167](https://github.com/casey/just/pull/2167) by [casey](https://github.com/casey))\n- Allow setting more command-line options with environment variables ([#2161](https://github.com/casey/just/pull/2161) by [casey](https://github.com/casey))\n\n### Library\n- Don't exit process in `run()` on argument parse error ([#2176](https://github.com/casey/just/pull/2176) by [casey](https://github.com/casey))\n- Allow passing command-line arguments into `run()` ([#2173](https://github.com/casey/just/pull/2173) by [casey](https://github.com/casey))\n- Ignore env_logger initialization errors ([#2170](https://github.com/casey/just/pull/2170) by [EnigmaCurry](https://github.com/EnigmaCurry))\n\n### Misc\n- Tweak readme ([#2227](https://github.com/casey/just/pull/2227) by [casey](https://github.com/casey))\n- Add development guide to readme ([#2226](https://github.com/casey/just/pull/2226) by [casey](https://github.com/casey))\n- Add shell-expanded string syntax to grammar ([#2223](https://github.com/casey/just/pull/2223) by [casey](https://github.com/casey))\n- Add recipe for testing bash completion script ([#2221](https://github.com/casey/just/pull/2221) by [casey](https://github.com/casey))\n- Fix use of `justfile_directory()` in readme ([#2219](https://github.com/casey/just/pull/2219) by [casey](https://github.com/casey))\n- Use default values for `--list-heading` and `--list-prefix` ([#2213](https://github.com/casey/just/pull/2213) by [casey](https://github.com/casey))\n- Use `clap::ValueParser` ([#2211](https://github.com/casey/just/pull/2211) by [neunenak](https://github.com/neunenak))\n- Document module doc comments in readme ([#2208](https://github.com/casey/just/pull/2208) by [casey](https://github.com/casey))\n- Use `-and` instead of `&&` in PowerShell completion script ([#2204](https://github.com/casey/just/pull/2204) by [casey](https://github.com/casey))\n- Fix readme formatting ([#2203](https://github.com/casey/just/pull/2203) by [casey](https://github.com/casey))\n- Link to justfiles on GitHub in readme ([#2198](https://github.com/casey/just/pull/2198) by [bukowa](https://github.com/bukowa))\n- Link to modules when first introduced in readme ([#2193](https://github.com/casey/just/pull/2193) by [casey](https://github.com/casey))\n- Update `softprops/action-gh-release` ([#2183](https://github.com/casey/just/pull/2183) by [app/dependabot](https://github.com/app/dependabot))\n- Document remote justfile workaround ([#2175](https://github.com/casey/just/pull/2175) by [casey](https://github.com/casey))\n- Document library interface ([#2174](https://github.com/casey/just/pull/2174) by [casey](https://github.com/casey))\n- Remove dependency on cradle ([#2169](https://github.com/casey/just/pull/2169) by [nc7s](https://github.com/nc7s))\n- Add note to readme about quoting paths on Windows ([#2166](https://github.com/casey/just/pull/2166) by [casey](https://github.com/casey))\n- Add missing changelog credits ([#2163](https://github.com/casey/just/pull/2163) by [casey](https://github.com/casey))\n- Credit myself in changelog ([#2162](https://github.com/casey/just/pull/2162) by [casey](https://github.com/casey))\n\n[1.29.1](https://github.com/casey/just/releases/tag/1.29.1) - 2024-06-14\n------------------------------------------------------------------------\n\n### Fixed\n- Fix unexport syntax conflicts ([#2158](https://github.com/casey/just/pull/2158) by [casey](https://github.com/casey))\n\n[1.29.0](https://github.com/casey/just/releases/tag/1.29.0) - 2024-06-13\n------------------------------------------------------------------------\n\n### Added\n- Add [positional-arguments] attribute ([#2151](https://github.com/casey/just/pull/2151) by [casey](https://github.com/casey))\n- Use `--justfile` in Fish shell completions ([#2148](https://github.com/casey/just/pull/2148) by [rubot](https://github.com/rubot))\n- Add `is_dependency()` function ([#2139](https://github.com/casey/just/pull/2139) by [neunenak](https://github.com/neunenak))\n- Allow printing nu completion script with `just --completions nushell` ([#2140](https://github.com/casey/just/pull/2140) by [casey](https://github.com/casey))\n- Add `[ATTRIBUTE: VALUE]` shorthand ([#2136](https://github.com/casey/just/pull/2136) by [neunenak](https://github.com/neunenak))\n- Allow unexporting environment variables ([#2098](https://github.com/casey/just/pull/2098) by [neunenak](https://github.com/neunenak))\n\n### Fixed\n- Load environment file from dotenv-path relative to working directory ([#2152](https://github.com/casey/just/pull/2152) by [casey](https://github.com/casey))\n- Fix `fzf` chooser preview with space-separated module paths ([#2141](https://github.com/casey/just/pull/2141) by [casey](https://github.com/casey))\n\n### Misc\n- Improve argument parsing and error handling for submodules ([#2154](https://github.com/casey/just/pull/2154) by [casey](https://github.com/casey))\n- Document shell expanded string defaults ([#2153](https://github.com/casey/just/pull/2153) by [casey](https://github.com/casey))\n- Test bare bash path in shebang on windows ([#2144](https://github.com/casey/just/pull/2144) by [casey](https://github.com/casey))\n- Test shell not found error messages ([#2145](https://github.com/casey/just/pull/2145) by [casey](https://github.com/casey))\n- Refactor evaluator ([#2138](https://github.com/casey/just/pull/2138) by [neunenak](https://github.com/neunenak))\n- Fix man page generation in release workflow ([#2132](https://github.com/casey/just/pull/2132) by [casey](https://github.com/casey))\n\n[1.28.0](https://github.com/casey/just/releases/tag/1.28.0) - 2024-06-05\n------------------------------------------------------------------------\n\n### Changed\n- Write shebang recipes to $XDG_RUNTIME_DIR ([#2128](https://github.com/casey/just/pull/2128) by [casey](https://github.com/casey))\n- Add `set dotenv-required` to require an environment file ([#2116](https://github.com/casey/just/pull/2116) by [casey](https://github.com/casey))\n- Don't display submodule recipes in `--list` ([#2112](https://github.com/casey/just/pull/2112) by [casey](https://github.com/casey))\n\n### Added\n- Allow listing recipes in submodules with `--list-submodules` ([#2113](https://github.com/casey/just/pull/2113) by [casey](https://github.com/casey))\n- Show recipes in submodules with `--show RECIPE::PATH` ([#2111](https://github.com/casey/just/pull/2111) by [casey](https://github.com/casey))\n- Add `--timestamp-format` ([#2106](https://github.com/casey/just/pull/2106) by [neunenak](https://github.com/neunenak))\n- Allow listing submodule recipes with `--list PATH` ([#2108](https://github.com/casey/just/pull/2108) by [casey](https://github.com/casey))\n- Print recipe command timestamps with `--timestamps` ([#2084](https://github.com/casey/just/pull/2084) by [neunenak](https://github.com/neunenak))\n- Add `module_file()` and `module_directory()` functions ([#2105](https://github.com/casey/just/pull/2105) by [casey](https://github.com/casey))\n\n### Fixed\n- Use space-separated recipe paths in `--choose` ([#2115](https://github.com/casey/just/pull/2115) by [casey](https://github.com/casey))\n- Fix bash completion for aliases ([#2104](https://github.com/casey/just/pull/2104) by [laniakea64](https://github.com/laniakea64))\n\n### Misc\n- Don't check in manpage ([#2130](https://github.com/casey/just/pull/2130) by [casey](https://github.com/casey))\n- Document default shell ([#2129](https://github.com/casey/just/pull/2129) by [casey](https://github.com/casey))\n- Remove duplicate section in Chinese readme ([#2127](https://github.com/casey/just/pull/2127) by [potterxu](https://github.com/potterxu))\n- Update Chinese readme ([#2124](https://github.com/casey/just/pull/2124) by [potterxu](https://github.com/potterxu))\n- Fix typo in readme ([#2122](https://github.com/casey/just/pull/2122) by [potterxu](https://github.com/potterxu))\n- Don't check in auto-generated completion scripts ([#2120](https://github.com/casey/just/pull/2120) by [casey](https://github.com/casey))\n- Document when dependencies run in readme ([#2103](https://github.com/casey/just/pull/2103) by [casey](https://github.com/casey))\n- Build aarch64-pc-windows-msvc release binaries ([#2100](https://github.com/casey/just/pull/2100) by [alshdavid](https://github.com/alshdavid))\n- Clarify that `dotenv-path`-given env file is required ([#2099](https://github.com/casey/just/pull/2099) by [casey](https://github.com/casey))\n- Print multi-line doc comments before recipe in `--list` ([#2090](https://github.com/casey/just/pull/2090) by [casey](https://github.com/casey))\n- List unsorted imported recipes by import depth and offset ([#2092](https://github.com/casey/just/pull/2092) by [casey](https://github.com/casey))\n- Update README.md ([#2091](https://github.com/casey/just/pull/2091) by [laniakea64](https://github.com/laniakea64))\n\n[1.27.0](https://github.com/casey/just/releases/tag/1.27.0) - 2024-05-25\n------------------------------------------------------------------------\n\n### Changed\n- Use cache dir for temporary files ([#2067](https://github.com/casey/just/pull/2067) by [casey](https://github.com/casey))\n\n### Added\n- Add `[doc]` attribute to set and suppress documentation comments ([#2050](https://github.com/casey/just/pull/2050) by [neunenak](https://github.com/neunenak))\n- Add source_file() and source_directory() functions ([#2088](https://github.com/casey/just/pull/2088) by [casey](https://github.com/casey))\n- Add recipe groups ([#1842](https://github.com/casey/just/pull/1842) by [neunenak](https://github.com/neunenak))\n- Add shell() function for running external commands ([#2047](https://github.com/casey/just/pull/2047) by [gyreas](https://github.com/gyreas))\n- Add `--global-justfile` flag ([#1846](https://github.com/casey/just/pull/1846) by [neunenak](https://github.com/neunenak))\n- Add shell-expanded strings ([#2055](https://github.com/casey/just/pull/2055) by [casey](https://github.com/casey))\n- Add `encode_uri_component` function ([#2052](https://github.com/casey/just/pull/2052) by [laniakea64](https://github.com/laniakea64))\n- Add `choose` function for generating random strings ([#2049](https://github.com/casey/just/pull/2049) by [laniakea64](https://github.com/laniakea64))\n- Add predefined constants ([#2054](https://github.com/casey/just/pull/2054) by [casey](https://github.com/casey))\n- Allow setting some command-line options with environment variables ([#2044](https://github.com/casey/just/pull/2044) by [neunenak](https://github.com/neunenak))\n- Add prepend() function ([#2045](https://github.com/casey/just/pull/2045) by [gyreas](https://github.com/gyreas))\n- Add append() function ([#2046](https://github.com/casey/just/pull/2046) by [gyreas](https://github.com/gyreas))\n- Add --man subcommand ([#2041](https://github.com/casey/just/pull/2041) by [casey](https://github.com/casey))\n- Make `dotenv-path` relative to working directory ([#2040](https://github.com/casey/just/pull/2040) by [casey](https://github.com/casey))\n- Add `assert` expression ([#1845](https://github.com/casey/just/pull/1845) by [de1iza](https://github.com/de1iza))\n- Add 'allow-duplicate-variables' setting ([#1922](https://github.com/casey/just/pull/1922) by [Mijago](https://github.com/Mijago))\n\n### Fixed\n- List modules in source order with `--unsorted` ([#2085](https://github.com/casey/just/pull/2085) by [casey](https://github.com/casey))\n- Show submodule recipes in --choose ([#2069](https://github.com/casey/just/pull/2069) by [casey](https://github.com/casey))\n- Allow multiple imports of the same file in different modules ([#2065](https://github.com/casey/just/pull/2065) by [casey](https://github.com/casey))\n- Fix submodule recipe listing indentation ([#2063](https://github.com/casey/just/pull/2063) by [casey](https://github.com/casey))\n- Pass command as first argument to `shell` ([#2061](https://github.com/casey/just/pull/2061) by [casey](https://github.com/casey))\n- Allow shell expanded strings in mod and import paths ([#2059](https://github.com/casey/just/pull/2059) by [casey](https://github.com/casey))\n- Run imported recipes in root justfile with correct working directory ([#2056](https://github.com/casey/just/pull/2056) by [casey](https://github.com/casey))\n- Fix output `\\r\\n` stripping ([#2035](https://github.com/casey/just/pull/2035) by [casey](https://github.com/casey))\n\n### Misc\n- Forbid whitespace in shell-expanded string prefixes ([#2083](https://github.com/casey/just/pull/2083) by [casey](https://github.com/casey))\n- Add Debian and Ubuntu install instructions to readme ([#2072](https://github.com/casey/just/pull/2072) by [casey](https://github.com/casey))\n- Remove snap installation instructions from readme ([#2070](https://github.com/casey/just/pull/2070) by [casey](https://github.com/casey))\n- Fallback to wget in install script if curl isn't available([#1913](https://github.com/casey/just/pull/1913) by [tgross35](https://github.com/tgross35))\n- Use std::io::IsTerminal instead of atty crate ([#2066](https://github.com/casey/just/pull/2066) by [casey](https://github.com/casey))\n- Improve `shell()` documentation ([#2060](https://github.com/casey/just/pull/2060) by [laniakea64](https://github.com/laniakea64))\n- Add bash completion for snap ([#2058](https://github.com/casey/just/pull/2058) by [albertodonato](https://github.com/albertodonato))\n- Refactor list subcommand ([#2062](https://github.com/casey/just/pull/2062) by [casey](https://github.com/casey))\n- Document working directory ([#2053](https://github.com/casey/just/pull/2053) by [casey](https://github.com/casey))\n- Replace FunctionContext with Evaluator ([#2048](https://github.com/casey/just/pull/2048) by [casey](https://github.com/casey))\n- Update clap to version 4 ([#1924](https://github.com/casey/just/pull/1924) by [poliorcetics](https://github.com/poliorcetics))\n- Cleanup ([#2026](https://github.com/casey/just/pull/2026) by [adamnemecek](https://github.com/adamnemecek))\n- Increase --list maximum alignable width from 30 to 50 ([#2039](https://github.com/casey/just/pull/2039) by [casey](https://github.com/casey))\n- Document using `env -S` ([#2038](https://github.com/casey/just/pull/2038) by [casey](https://github.com/casey))\n- Update line continuation documentation ([#1998](https://github.com/casey/just/pull/1998) by [laniakea64](https://github.com/laniakea64))\n- Add example using GNU parallel to run tasks in concurrently ([#1915](https://github.com/casey/just/pull/1915) by [amarao](https://github.com/amarao))\n- Placate clippy: use `clone_into` ([#2037](https://github.com/casey/just/pull/2037) by [casey](https://github.com/casey))\n- Use --command-color when printing shebang recipe commands ([#1911](https://github.com/casey/just/pull/1911) by [avi-cenna](https://github.com/avi-cenna))\n- Document how to use watchexec to re-run recipes when files change ([#2036](https://github.com/casey/just/pull/2036) by [casey](https://github.com/casey))\n- Update VS Code extensions in readme ([#2034](https://github.com/casey/just/pull/2034) by [casey](https://github.com/casey))\n- Add rust:just repology package table to readme ([#2032](https://github.com/casey/just/pull/2032) by [casey](https://github.com/casey))\n\n[1.26.0](https://github.com/casey/just/releases/tag/1.26.0) - 2024-05-13\n------------------------------------------------------------------------\n\n### Added\n- Add --no-aliases to hide aliases in --list ([#1961](https://github.com/casey/just/pull/1961) by [WJehee](https://github.com/WJehee))\n- Add -E as alias for --dotenv-path ([#1910](https://github.com/casey/just/pull/1910) by [amarao](https://github.com/amarao))\n\n### Misc\n- Update softprops/action-gh-release ([#2029](https://github.com/casey/just/pull/2029) by [app/dependabot](https://github.com/app/dependabot))\n- Update dependencies ([#1999](https://github.com/casey/just/pull/1999) by [neunenak](https://github.com/neunenak))\n- Bump peaceiris/actions-gh-pages to version 4 ([#2005](https://github.com/casey/just/pull/2005) by [app/dependabot](https://github.com/app/dependabot))\n- Clarify that janus operates on public justfiles only ([#2021](https://github.com/casey/just/pull/2021) by [casey](https://github.com/casey))\n- Fix Error::TmpdirIo error message ([#1987](https://github.com/casey/just/pull/1987) by [casey](https://github.com/casey))\n- Update softprops/action-gh-release ([#1973](https://github.com/casey/just/pull/1973) by [app/dependabot](https://github.com/app/dependabot))\n- Rename `delete` example recipe to `delete-all` ([#1966](https://github.com/casey/just/pull/1966) by [aarmn](https://github.com/aarmn))\n- Update softprops/action-gh-release ([#1954](https://github.com/casey/just/pull/1954) by [app/dependabot](https://github.com/app/dependabot))\n- Fix function name typo ([#1953](https://github.com/casey/just/pull/1953) by [racerole](https://github.com/racerole))\n\n[1.25.2](https://github.com/casey/just/releases/tag/1.25.2) - 2024-03-10\n------------------------------------------------------------------------\n\n- Unpin ctrlc ([#1951](https://github.com/casey/just/pull/1951) by [casey](https://github.com/casey))\n\n[1.25.1](https://github.com/casey/just/releases/tag/1.25.1) - 2024-03-09\n------------------------------------------------------------------------\n\n### Misc\n- Pin ctrlc to version 3.1.1 ([#1945](https://github.com/casey/just/pull/1945) by [casey](https://github.com/casey))\n- Fix AArch64 release build error ([#1942](https://github.com/casey/just/pull/1942) by [casey](https://github.com/casey))\n\n[1.25.0](https://github.com/casey/just/releases/tag/1.25.0) - 2024-03-07\n------------------------------------------------------------------------\n\n### Added\n- Add `blake3` and `blake3_file` functions ([#1860](https://github.com/casey/just/pull/1860) by [tgross35](https://github.com/tgross35))\n\n### Misc\n- Fix readme typo ([#1936](https://github.com/casey/just/pull/1936) by [Justintime50](https://github.com/Justintime50))\n- Use unwrap_or_default ([#1928](https://github.com/casey/just/pull/1928) by [casey](https://github.com/casey))\n- Set codegen-units to 1 reduce release binary size ([#1920](https://github.com/casey/just/pull/1920) by [amarao](https://github.com/amarao))\n- Document openSUSE package ([#1918](https://github.com/casey/just/pull/1918) by [sfalken](https://github.com/sfalken))\n- Fix install.sh shellcheck warnings ([#1912](https://github.com/casey/just/pull/1912) by [tgross35](https://github.com/tgross35))\n\n[1.24.0](https://github.com/casey/just/releases/tag/1.24.0) - 2024-02-11\n------------------------------------------------------------------------\n\n### Added\n- Support recipe paths containing `::` in Bash completion script ([#1863](https://github.com/casey/just/pull/1863) by [crdx](https://github.com/crdx))\n- Add function to canonicalize paths ([#1859](https://github.com/casey/just/pull/1859) by [casey](https://github.com/casey))\n\n### Misc\n- Document installing just on Github Actions in readme ([#1867](https://github.com/casey/just/pull/1867) by [cclauss](https://github.com/cclauss))\n- Use unlikely-to-be-set variable name in env tests ([#1882](https://github.com/casey/just/pull/1882) by [casey](https://github.com/casey))\n- Skip write_error test if running as root ([#1881](https://github.com/casey/just/pull/1881) by [casey](https://github.com/casey))\n- Convert run_shebang into integration test ([#1880](https://github.com/casey/just/pull/1880) by [casey](https://github.com/casey))\n- Install mdbook with cargo in CI workflow ([#1877](https://github.com/casey/just/pull/1877) by [casey](https://github.com/casey))\n- Remove deprecated actions-rs/toolchain ([#1874](https://github.com/casey/just/pull/1874) by [cclauss](https://github.com/cclauss))\n- Fix Gentoo package link ([#1875](https://github.com/casey/just/pull/1875) by [vozbu](https://github.com/vozbu))\n- Fix typos found by codespell ([#1872](https://github.com/casey/just/pull/1872) by [cclauss](https://github.com/cclauss))\n- Replace deprecated set-output command in Github Actions workflows ([#1869](https://github.com/casey/just/pull/1869) by [cclauss](https://github.com/cclauss))\n- Update `actions/checkout` and `softprops/action-gh-release` ([#1871](https://github.com/casey/just/pull/1871) by [app/dependabot](https://github.com/app/dependabot))\n- Keep GitHub Actions up to date with Dependabot ([#1868](https://github.com/casey/just/pull/1868) by [cclauss](https://github.com/cclauss))\n- Add contrib directory ([#1870](https://github.com/casey/just/pull/1870) by [casey](https://github.com/casey))\n- Fix install script ([#1844](https://github.com/casey/just/pull/1844) by [casey](https://github.com/casey))\n\n[1.23.0](https://github.com/casey/just/releases/tag/1.23.0) - 2024-01-12\n------------------------------------------------------------------------\n\n### Added\n- Allow setting custom confirm prompt ([#1834](https://github.com/casey/just/pull/1834) by [CramBL](https://github.com/CramBL))\n- Add `set quiet` and `[no-quiet]` ([#1704](https://github.com/casey/just/pull/1704) by [dharrigan](https://github.com/dharrigan))\n- Add `just_pid` function ([#1833](https://github.com/casey/just/pull/1833) by [Swordelf2](https://github.com/Swordelf2))\n- Add functions to return XDG base directories ([#1822](https://github.com/casey/just/pull/1822) by [tgross35](https://github.com/tgross35))\n- Add `--no-deps` to skip running recipe dependencies ([#1819](https://github.com/casey/just/pull/1819) by [ngharrington](https://github.com/ngharrington))\n\n### Fixed\n- Run imports in working directory of importer ([#1817](https://github.com/casey/just/pull/1817) by [casey](https://github.com/casey))\n\n### Misc\n- Include completion scripts in releases ([#1837](https://github.com/casey/just/pull/1837) by [casey](https://github.com/casey))\n- Tweak readme table formatting ([#1836](https://github.com/casey/just/pull/1836) by [casey](https://github.com/casey))\n- Don't abbreviate just in README ([#1831](https://github.com/casey/just/pull/1831) by [thled](https://github.com/thled))\n- Ignore [private] recipes in just --list ([#1816](https://github.com/casey/just/pull/1816) by [crdx](https://github.com/crdx))\n- Add a dash to tempdir prefix ([#1828](https://github.com/casey/just/pull/1828) by [casey](https://github.com/casey))\n\n[1.22.1](https://github.com/casey/just/releases/tag/1.22.1) - 2024-01-08\n------------------------------------------------------------------------\n\n### Fixed\n- Don't conflate recipes with the same name in different modules ([#1825](https://github.com/casey/just/pull/1825) by [casey](https://github.com/casey))\n\n### Misc\n- Clarify that UUID is version 4 ([#1821](https://github.com/casey/just/pull/1821) by [tgross35](https://github.com/tgross35))\n- Make sigil stripping from recipe lines less incomprehensible ([#1812](https://github.com/casey/just/pull/1812) by [casey](https://github.com/casey))\n- Refactor invalid path argument check ([#1811](https://github.com/casey/just/pull/1811) by [casey](https://github.com/casey))\n\n[1.22.0](https://github.com/casey/just/releases/tag/1.22.0) - 2023-12-31\n------------------------------------------------------------------------\n\n### Added\n- Recipes can be invoked with path syntax ([#1809](https://github.com/casey/just/pull/1809) by [casey](https://github.com/casey))\n- Add `--format` and `--initialize` as aliases for `--fmt` and `--init` ([#1802](https://github.com/casey/just/pull/1802) by [casey](https://github.com/casey))\n\n### Misc\n- Move table of contents pointer to right ([#1806](https://github.com/casey/just/pull/1806) by [casey](https://github.com/casey))\n\n[1.21.0](https://github.com/casey/just/releases/tag/1.21.0) - 2023-12-29\n------------------------------------------------------------------------\n\n### Added\n- Optional modules and imports ([#1797](https://github.com/casey/just/pull/1797) by [casey](https://github.com/casey))\n- Print submodule recipes in --summary ([#1794](https://github.com/casey/just/pull/1794) by [casey](https://github.com/casey))\n\n### Misc\n- Use box-drawing characters in error messages ([#1798](https://github.com/casey/just/pull/1798) by [casey](https://github.com/casey))\n- Use Self ([#1795](https://github.com/casey/just/pull/1795) by [casey](https://github.com/casey))\n\n[1.20.0](https://github.com/casey/just/releases/tag/1.20.0) - 2023-12-28\n------------------------------------------------------------------------\n\n### Added\n- Allow mod statements with path to source file ([#1786](https://github.com/casey/just/pull/1786) by [casey](https://github.com/casey))\n\n### Changed\n- Expand tilde in import and module paths ([#1792](https://github.com/casey/just/pull/1792) by [casey](https://github.com/casey))\n- Override imported recipes ([#1790](https://github.com/casey/just/pull/1790) by [casey](https://github.com/casey))\n- Run recipes with working directory set to submodule directory ([#1788](https://github.com/casey/just/pull/1788) by [casey](https://github.com/casey))\n\n### Misc\n- Document import override behavior ([#1791](https://github.com/casey/just/pull/1791) by [casey](https://github.com/casey))\n- Document submodule working directory ([#1789](https://github.com/casey/just/pull/1789) by [casey](https://github.com/casey))\n\n[1.19.0](https://github.com/casey/just/releases/tag/1.19.0) - 2023-12-27\n------------------------------------------------------------------------\n\n### Added\n- Add modules ([#1782](https://github.com/casey/just/pull/1782) by [casey](https://github.com/casey))\n\n[1.18.1](https://github.com/casey/just/releases/tag/1.18.1) - 2023-12-24\n------------------------------------------------------------------------\n\n### Added\n- Display a descriptive error for `!include` directives ([#1779](https://github.com/casey/just/pull/1779) by [casey](https://github.com/casey))\n\n[1.18.0](https://github.com/casey/just/releases/tag/1.18.0) - 2023-12-24\n------------------------------------------------------------------------\n\n### Added\n- Stabilize `!include path` as `import 'path'` ([#1771](https://github.com/casey/just/pull/1771) by [casey](https://github.com/casey))\n\n### Misc\n- Tweak readme ([#1775](https://github.com/casey/just/pull/1775) by [casey](https://github.com/casey))\n\n[1.17.0](https://github.com/casey/just/releases/tag/1.17.0) - 2023-12-20\n------------------------------------------------------------------------\n\n### Added\n- Add `[confirm]` attribute ([#1723](https://github.com/casey/just/pull/1723) by [Hwatwasthat](https://github.com/Hwatwasthat))\n\n### Changed\n- Don't default to included recipes ([#1740](https://github.com/casey/just/pull/1740) by [casey](https://github.com/casey))\n\n### Fixed\n- Pass justfile path to default chooser ([#1759](https://github.com/casey/just/pull/1759) by [Qeole](https://github.com/Qeole))\n- Pass `--unstable` and `--color always` to default chooser ([#1758](https://github.com/casey/just/pull/1758) by [Qeole](https://github.com/Qeole))\n\n### Misc\n- Update Gentoo package repository ([#1757](https://github.com/casey/just/pull/1757) by [paul-jewell](https://github.com/paul-jewell))\n- Fix readme header level ([#1752](https://github.com/casey/just/pull/1752) by [laniakea64](https://github.com/laniakea64))\n- Document line continuations ([#1751](https://github.com/casey/just/pull/1751) by [laniakea64](https://github.com/laniakea64))\n- List included recipes in load order ([#1745](https://github.com/casey/just/pull/1745) by [casey](https://github.com/casey))\n- Fix build badge in zh readme ([#1743](https://github.com/casey/just/pull/1743) by [chenrui333](https://github.com/chenrui333))\n- Rename Justfile::first → Justfile::default ([#1741](https://github.com/casey/just/pull/1741) by [casey](https://github.com/casey))\n- Add file paths to error messages ([#1737](https://github.com/casey/just/pull/1737) by [casey](https://github.com/casey))\n- Move !include processing into compiler ([#1618](https://github.com/casey/just/pull/1618) by [neunenak](https://github.com/neunenak))\n- Update Arch Linux package URL in readme ([#1733](https://github.com/casey/just/pull/1733) by [felixonmars](https://github.com/felixonmars))\n- Clarify that aliases can only be used on the command line ([#1726](https://github.com/casey/just/pull/1726) by [laniakea64](https://github.com/laniakea64))\n- Remove VALID_ALIAS_ATTRIBUTES array ([#1731](https://github.com/casey/just/pull/1731) by [casey](https://github.com/casey))\n- Fix justfile search link in Chinese docs ([#1730](https://github.com/casey/just/pull/1730) by [oluceps](https://github.com/oluceps))\n- Add example of Windows shebang handling ([#1709](https://github.com/casey/just/pull/1709) by [pfmoore](https://github.com/pfmoore))\n- Fix CI ([#1728](https://github.com/casey/just/pull/1728) by [casey](https://github.com/casey))\n\n[1.16.0](https://github.com/casey/just/releases/tag/1.16.0) - 2023-11-08\n------------------------------------------------------------------------\n\n### Added\n- Add ARMv6 release target ([#1715](https://github.com/casey/just/pull/1715) by [ragazenta](https://github.com/ragazenta))\n- Add `semver_matches` function ([#1713](https://github.com/casey/just/pull/1713) by [t3hmrman](https://github.com/t3hmrman))\n- Add `dotenv-filename` and `dotenv-path` settings ([#1692](https://github.com/casey/just/pull/1692) by [ltfourrier](https://github.com/ltfourrier))\n- Allow setting echoed recipe line color ([#1670](https://github.com/casey/just/pull/1670) by [avi-cenna](https://github.com/avi-cenna))\n\n### Fixed\n- Fix Fish completion script ([#1710](https://github.com/casey/just/pull/1710) by [l4zygreed](https://github.com/l4zygreed))\n\n### Misc\n- Fix readme typo ([#1717](https://github.com/casey/just/pull/1717) by [barraponto](https://github.com/barraponto))\n- Clean up error display ([#1699](https://github.com/casey/just/pull/1699) by [nyurik](https://github.com/nyurik))\n- Misc fixes ([#1700](https://github.com/casey/just/pull/1700) by [nyurik](https://github.com/nyurik))\n- Fix readme build badge ([#1697](https://github.com/casey/just/pull/1697) by [casey](https://github.com/casey))\n- Fix set tempdir grammar ([#1695](https://github.com/casey/just/pull/1695) by [casey](https://github.com/casey))\n- Add version to attributes ([#1694](https://github.com/casey/just/pull/1694) by [JoeyTeng](https://github.com/JoeyTeng))\n- Update README.md ([#1691](https://github.com/casey/just/pull/1691) by [laniakea64](https://github.com/laniakea64))\n\n\n[1.15.0](https://github.com/casey/just/releases/tag/1.15.0) - 2023-10-09\n------------------------------------------------------------------------\n\n### Added\n- Add Nushell completion script ([#1571](https://github.com/casey/just/pull/1571) by [presidento](https://github.com/presidento))\n- Allow unstable features to be enabled with environment variable ([#1588](https://github.com/casey/just/pull/1588) by [neunenak](https://github.com/neunenak))\n- Add num_cpus() function ([#1568](https://github.com/casey/just/pull/1568) by [schultetwin1](https://github.com/schultetwin1))\n- Allow escaping newlines ([#1551](https://github.com/casey/just/pull/1551) by [ids1024](https://github.com/ids1024))\n- Stabilize JSON dump format ([#1633](https://github.com/casey/just/pull/1633) by [casey](https://github.com/casey))\n- Add env() function ([#1613](https://github.com/casey/just/pull/1613) by [kykyi](https://github.com/kykyi))\n\n### Changed\n- Allow selecting multiple recipes with default chooser ([#1547](https://github.com/casey/just/pull/1547) by [fzdwx](https://github.com/fzdwx))\n\n### Misc\n- Don't recommend `vim-polyglot` in readme ([#1644](https://github.com/casey/just/pull/1644) by [laniakea64](https://github.com/laniakea64))\n- Note Micro support in readme ([#1316](https://github.com/casey/just/pull/1316) by [tomodachi94](https://github.com/tomodachi94))\n- Update Indentation Documentation ([#1600](https://github.com/casey/just/pull/1600) by [GinoMan](https://github.com/GinoMan))\n- Fix triple-quoted string example in readme ([#1620](https://github.com/casey/just/pull/1620) by [avi-cenna](https://github.com/avi-cenna))\n- README fix: the -d in `mktemp -d` is required to created folders. ([#1688](https://github.com/casey/just/pull/1688) by [gl-yziquel](https://github.com/gl-yziquel))\n- Placate clippy ([#1689](https://github.com/casey/just/pull/1689) by [casey](https://github.com/casey))\n- Fix README typos ([#1660](https://github.com/casey/just/pull/1660) by [akuhnregnier](https://github.com/akuhnregnier))\n- Document Windows Package Manager install instructions ([#1656](https://github.com/casey/just/pull/1656) by [casey](https://github.com/casey))\n- Test unpaired escaped carriage return error ([#1650](https://github.com/casey/just/pull/1650) by [casey](https://github.com/casey))\n- Avoid grep aliases in bash completions ([#1622](https://github.com/casey/just/pull/1622) by [BojanStipic](https://github.com/BojanStipic))\n- Clarify [unix] attribute in readme ([#1619](https://github.com/casey/just/pull/1619) by [neunenak](https://github.com/neunenak))\n- Add descriptions to fish recipe completions ([#1578](https://github.com/casey/just/pull/1578) by [patricksjackson](https://github.com/patricksjackson))\n- Add better documentation for --dump and --fmt ([#1603](https://github.com/casey/just/pull/1603) by [neunenak](https://github.com/neunenak))\n- Cleanup ([#1566](https://github.com/casey/just/pull/1566) by [nyurik](https://github.com/nyurik))\n- Document Helix editor support in readme ([#1604](https://github.com/casey/just/pull/1604) by [kenden](https://github.com/kenden))\n\n[1.14.0](https://github.com/casey/just/releases/tag/1.14.0) - 2023-06-02\n------------------------------------------------------------------------\n\n### Changed\n- Use `just --show` in default chooser ([#1539](https://github.com/casey/just/pull/1539) by [fzdwx](https://github.com/fzdwx))\n\n### Misc\n- Fix justfile search link ([#1607](https://github.com/casey/just/pull/1607) by [jbaber](https://github.com/jbaber))\n- Ignore clippy::let_underscore_untyped ([#1609](https://github.com/casey/just/pull/1609) by [casey](https://github.com/casey))\n- Link to private recipes section in readme ([#1542](https://github.com/casey/just/pull/1542) by [quad](https://github.com/quad))\n- Update README to reflect new attribute syntax ([#1538](https://github.com/casey/just/pull/1538) by [neunenak](https://github.com/neunenak))\n- Allow multiple attributes on one line ([#1537](https://github.com/casey/just/pull/1537) by [neunenak](https://github.com/neunenak))\n- Analyze and Compiler tweaks ([#1534](https://github.com/casey/just/pull/1534) by [neunenak](https://github.com/neunenak))\n- Downgrade to TLS 1.2 in install script ([#1536](https://github.com/casey/just/pull/1536) by [casey](https://github.com/casey))\n\n[1.13.0](https://github.com/casey/just/releases/tag/1.13.0) - 2023-01-24\n------------------------------------------------------------------------\n\n### Added\n- Add -n as a short flag for --for dry-run ([#1524](https://github.com/casey/just/pull/1524) by [maiha](https://github.com/maiha))\n- Add invocation_directory_native() ([#1507](https://github.com/casey/just/pull/1507) by [casey](https://github.com/casey))\n\n### Changed\n- Ignore additional search path arguments ([#1528](https://github.com/casey/just/pull/1528) by [neunenak](https://github.com/neunenak))\n- Only print fallback message when verbose ([#1510](https://github.com/casey/just/pull/1510) by [casey](https://github.com/casey))\n- Print format diff to stdout ([#1506](https://github.com/casey/just/pull/1506) by [casey](https://github.com/casey))\n\n### Fixed\n- Test passing dot as argument between justfiles ([#1530](https://github.com/casey/just/pull/1530) by [casey](https://github.com/casey))\n- Fix install script default directory ([#1525](https://github.com/casey/just/pull/1525) by [casey](https://github.com/casey))\n\n### Misc\n- Note that justfiles are order-insensitive ([#1529](https://github.com/casey/just/pull/1529) by [casey](https://github.com/casey))\n- Borrow Ast in Analyser ([#1527](https://github.com/casey/just/pull/1527) by [neunenak](https://github.com/neunenak))\n- Ignore chooser tests ([#1513](https://github.com/casey/just/pull/1513) by [casey](https://github.com/casey))\n- Put default setting values in backticks ([#1512](https://github.com/casey/just/pull/1512) by [s1ck](https://github.com/s1ck))\n- Use lowercase boolean literals in readme ([#1511](https://github.com/casey/just/pull/1511) by [s1ck](https://github.com/s1ck))\n- Document invocation_directory_native() ([#1508](https://github.com/casey/just/pull/1508) by [casey](https://github.com/casey))\n- Fix interrupt tests ([#1505](https://github.com/casey/just/pull/1505) by [casey](https://github.com/casey))\n\n[1.12.0](https://github.com/casey/just/releases/tag/1.12.0) - 2023-01-12\n------------------------------------------------------------------------\n\n### Added\n- Add `!include` directives ([#1470](https://github.com/casey/just/pull/1470) by [neunenak](https://github.com/neunenak))\n\n### Changed\n- Allow matching search path arguments ([#1475](https://github.com/casey/just/pull/1475) by [neunenak](https://github.com/neunenak))\n- Allow recipe parameters to shadow variables ([#1480](https://github.com/casey/just/pull/1480) by [casey](https://github.com/casey))\n\n### Misc\n- Remove --unstable from fallback example in readme ([#1502](https://github.com/casey/just/pull/1502) by [casey](https://github.com/casey))\n- Specify minimum rust version ([#1496](https://github.com/casey/just/pull/1496) by [benmoss](https://github.com/benmoss))\n- Note that install.sh may fail on GitHub actions ([#1499](https://github.com/casey/just/pull/1499) by [casey](https://github.com/casey))\n- Fix readme typo ([#1489](https://github.com/casey/just/pull/1489) by [auberisky](https://github.com/auberisky))\n- Update install script and readmes to use tls v1.3 ([#1481](https://github.com/casey/just/pull/1481) by [casey](https://github.com/casey))\n- Re-enable install.sh test on CI([#1478](https://github.com/casey/just/pull/1478) by [casey](https://github.com/casey))\n- Don't test install.sh on CI ([#1477](https://github.com/casey/just/pull/1477) by [casey](https://github.com/casey))\n- Update Chinese translation of readme ([#1476](https://github.com/casey/just/pull/1476) by [hustcer](https://github.com/hustcer))\n- Fix install.sh for Windows ([#1474](https://github.com/casey/just/pull/1474) by [bloodearnest](https://github.com/bloodearnest))\n\n[1.11.0](https://github.com/casey/just/releases/tag/1.11.0) - 2023-01-03\n------------------------------------------------------------------------\n\n### Added\n- Stabilize fallback ([#1471](https://github.com/casey/just/pull/1471) by [casey](https://github.com/casey))\n\n### Misc\n- Update Sublime syntax instructions ([#1455](https://github.com/casey/just/pull/1455) by [nk9](https://github.com/nk9))\n\n[1.10.0](https://github.com/casey/just/releases/tag/1.10.0) - 2023-01-01\n------------------------------------------------------------------------\n\n### Added\n- Allow private attribute on aliases ([#1434](https://github.com/casey/just/pull/1434) by [neunenak](https://github.com/neunenak))\n\n### Changed\n- Suppress --fmt --check diff if --quiet is passed ([#1457](https://github.com/casey/just/pull/1457) by [casey](https://github.com/casey))\n\n### Fixed\n- Format exported variadic parameters correctly ([#1451](https://github.com/casey/just/pull/1451) by [casey](https://github.com/casey))\n\n### Misc\n- Fix section title grammar ([#1466](https://github.com/casey/just/pull/1466) by [brettcannon](https://github.com/brettcannon))\n- Give pages job write permissions([#1464](https://github.com/casey/just/pull/1464) by [jsoref](https://github.com/jsoref))\n- Fix spelling ([#1463](https://github.com/casey/just/pull/1463) by [jsoref](https://github.com/jsoref))\n- Merge imports ([#1462](https://github.com/casey/just/pull/1462) by [casey](https://github.com/casey))\n- Add instructions for taiki-e/install-action ([#1459](https://github.com/casey/just/pull/1459) by [azzamsa](https://github.com/azzamsa))\n- Differentiate between shell and nushell example ([#1427](https://github.com/casey/just/pull/1427) by [Dialga](https://github.com/Dialga))\n- Link regex docs in readme ([#1454](https://github.com/casey/just/pull/1454) by [casey](https://github.com/casey))\n- Linkify changelog PRs and usernames ([#1440](https://github.com/casey/just/pull/1440) by [nk9](https://github.com/nk9))\n- Eliminate lazy_static ([#1442](https://github.com/casey/just/pull/1442) by [camsteffen](https://github.com/camsteffen))\n- Add attributes to sublime syntax file ([#1452](https://github.com/casey/just/pull/1452) by [crdx](https://github.com/crdx))\n- Fix homepage style ([#1453](https://github.com/casey/just/pull/1453) by [casey](https://github.com/casey))\n- Linkify homepage letters ([#1448](https://github.com/casey/just/pull/1448) by [nk9](https://github.com/nk9))\n- Use `just` in readme codeblocks ([#1447](https://github.com/casey/just/pull/1447) by [nicochatzi](https://github.com/nicochatzi))\n- Update MSRV in readme ([#1446](https://github.com/casey/just/pull/1446) by [casey](https://github.com/casey))\n- Merge CI workflows ([#1444](https://github.com/casey/just/pull/1444) by [casey](https://github.com/casey))\n- Use dotenvy instead of dotenv ([#1443](https://github.com/casey/just/pull/1443) by [mike-burns](https://github.com/mike-burns))\n- Update Chinese translation of readme ([#1428](https://github.com/casey/just/pull/1428) by [hustcer](https://github.com/hustcer))\n\n[1.9.0](https://github.com/casey/just/releases/tag/1.9.0) - 2022-11-25\n----------------------------------------------------------------------\n\n### Breaking Changes to Unstable Features\n- Change `fallback` setting default to false ([#1425](https://github.com/casey/just/pull/1425) by [casey](https://github.com/casey))\n\n### Added\n- Hide recipes with `[private]` attribute ([#1422](https://github.com/casey/just/pull/1422) by [casey](https://github.com/casey))\n- Add replace_regex function ([#1393](https://github.com/casey/just/pull/1393) by [miles170](https://github.com/miles170))\n- Add [no-cd] attribute ([#1400](https://github.com/casey/just/pull/1400) by [casey](https://github.com/casey))\n\n### Changed\n- Omit shebang lines on Windows ([#1417](https://github.com/casey/just/pull/1417) by [casey](https://github.com/casey))\n\n### Misc\n- Placate clippy ([#1423](https://github.com/casey/just/pull/1423) by [casey](https://github.com/casey))\n- Make include_shebang_line clearer ([#1418](https://github.com/casey/just/pull/1418) by [casey](https://github.com/casey))\n- Use more secure cURL options in install.sh ([#1416](https://github.com/casey/just/pull/1416) by [casey](https://github.com/casey))\n- Document how shebang recipes are executed ([#1412](https://github.com/casey/just/pull/1412) by [casey](https://github.com/casey))\n- Fix typo: regec → regex ([#1409](https://github.com/casey/just/pull/1409) by [casey](https://github.com/casey))\n- Use powershell.exe instead of pwsh.exe in readme ([#1394](https://github.com/casey/just/pull/1394) by [asdf8dfafjk](https://github.com/asdf8dfafjk))\n- Expand alternatives and prior art in readme ([#1401](https://github.com/casey/just/pull/1401) by [casey](https://github.com/casey))\n- Split up CI workflow ([#1399](https://github.com/casey/just/pull/1399) by [casey](https://github.com/casey))\n\n[1.8.0](https://github.com/casey/just/releases/tag/1.8.0) - 2022-11-02\n----------------------------------------------------------------------\n\n### Added\n- Add OS Configuration Attributes ([#1387](https://github.com/casey/just/pull/1387) by [casey](https://github.com/casey))\n\n### Misc\n- Link to sclu1034/vscode-just in readme ([#1396](https://github.com/casey/just/pull/1396) by [casey](https://github.com/casey))\n\n[1.7.0](https://github.com/casey/just/releases/tag/1.7.0) - 2022-10-26\n----------------------------------------------------------------------\n\n### Breaking Changes to Unstable Features\n- Make `fallback` setting default to true ([#1384](https://github.com/casey/just/pull/1384) by [casey](https://github.com/casey))\n\n### Added\n- Add more case-conversion functions ([#1383](https://github.com/casey/just/pull/1383) by [gVirtu](https://github.com/gVirtu))\n- Add `tempdir` setting ([#1369](https://github.com/casey/just/pull/1369) by [dmatos2012](https://github.com/dmatos2012))\n- Add [no-exit-message] recipe annotation ([#1354](https://github.com/casey/just/pull/1354) by [gokhanettin](https://github.com/gokhanettin))\n- Add `capitalize(s)` function ([#1375](https://github.com/casey/just/pull/1375) by [femnad](https://github.com/femnad))\n\n### Misc\n- Credit contributors in changelog ([#1385](https://github.com/casey/just/pull/1385) by [casey](https://github.com/casey))\n- Update asdf just plugin repository ([#1380](https://github.com/casey/just/pull/1380) by [kachick](https://github.com/kachick))\n- Prepend commit messages with `- ` in changelog ([#1379](https://github.com/casey/just/pull/1379) by [casey](https://github.com/casey))\n- Fail publish if `<sup>master</sup>` is found in README.md ([#1378](https://github.com/casey/just/pull/1378) by [casey](https://github.com/casey))\n- Use for loop in capitalize implementation ([#1377](https://github.com/casey/just/pull/1377) by [casey](https://github.com/casey))\n\n[1.6.0](https://github.com/casey/just/releases/tag/1.6.0) - 2022-10-19\n----------------------------------------------------------------------\n\n### Breaking Changes to Unstable Features\n- Require `set fallback := true` to enable recipe fallback ([#1368](https://github.com/casey/just/pull/1368) by [casey](https://github.com/casey))\n\n### Changed\n- Allow fallback with search directory ([#1348](https://github.com/casey/just/pull/1348) by [casey](https://github.com/casey))\n\n### Added\n- Don't evaluate comments ([#1358](https://github.com/casey/just/pull/1358) by [casey](https://github.com/casey))\n- Add skip-comments setting ([#1333](https://github.com/casey/just/pull/1333) by [neunenak](https://github.com/neunenak))\n- Allow bash completion to complete tasks in other directories ([#1303](https://github.com/casey/just/pull/1303) by [jpbochi](https://github.com/jpbochi))\n\n### Misc\n- Restore www/CNAME ([#1364](https://github.com/casey/just/pull/1364) by [casey](https://github.com/casey))\n- Improve book config ([#1363](https://github.com/casey/just/pull/1363) by [casey](https://github.com/casey))\n- Add kitchen sink justfile to test syntax highlighting ([#1362](https://github.com/casey/just/pull/1362) by [nk9](https://github.com/nk9))\n- Note version in which absolute path construction was added ([#1361](https://github.com/casey/just/pull/1361) by [casey](https://github.com/casey))\n- Inline setup and cleanup functions in completion script test ([#1352](https://github.com/casey/just/pull/1352) by [casey](https://github.com/casey))\n\n[1.5.0](https://github.com/casey/just/releases/tag/1.5.0) - 2022-9-11\n---------------------------------------------------------------------\n\n### Changed\n- Allow constructing absolute paths with `/` operator ([#1320](https://github.com/casey/just/pull/1320) by [erikkrieg](https://github.com/erikkrieg))\n\n### Misc\n- Allow fewer lints ([#1340](https://github.com/casey/just/pull/1340) by [casey](https://github.com/casey))\n- Fix issues reported by nightly clippy ([#1336](https://github.com/casey/just/pull/1336) by [neunenak](https://github.com/neunenak))\n- Refactor run.rs ([#1335](https://github.com/casey/just/pull/1335) by [neunenak](https://github.com/neunenak))\n- Allow comments on same line as settings ([#1339](https://github.com/casey/just/pull/1339) by [casey](https://github.com/casey))\n- Fix justfile env shebang on Linux ([#1330](https://github.com/casey/just/pull/1330) by [casey](https://github.com/casey))\n- Update Chinese translation of README.md ([#1325](https://github.com/casey/just/pull/1325) by [hustcer](https://github.com/hustcer))\n- Add additional settings to grammar ([#1321](https://github.com/casey/just/pull/1321) by [psibi](https://github.com/psibi))\n- Add an example of using a variable in a recipe parameter ([#1311](https://github.com/casey/just/pull/1311) by [papertigers](https://github.com/papertigers))\n\n[1.4.0](https://github.com/casey/just/releases/tag/1.4.0) - 2022-8-08\n---------------------------------------------------------------------\n\n### Fixed\n- Fix shell setting precedence ([#1306](https://github.com/casey/just/pull/1306) by [casey](https://github.com/casey))\n\n### Misc\n- Don't hardcode homebrew prefix ([#1295](https://github.com/casey/just/pull/1295) by [casey](https://github.com/casey))\n- Exclude files from cargo package ([#1283](https://github.com/casey/just/pull/1283) by [casey](https://github.com/casey))\n- Add usage note to default list recipe ([#1296](https://github.com/casey/just/pull/1296) by [jpbochi](https://github.com/jpbochi))\n- Add MPR/Prebuilt-MPR installation instructions to README.md ([#1280](https://github.com/casey/just/pull/1280) by [hwittenborn](https://github.com/hwittenborn))\n- Add make and makesure to readme ([#1299](https://github.com/casey/just/pull/1299) by [casey](https://github.com/casey))\n- Document how to configure zsh completions on MacOS ([#1285](https://github.com/casey/just/pull/1285) by [nk9](https://github.com/nk9))\n- Convert package table to HTML ([#1291](https://github.com/casey/just/pull/1291) by [casey](https://github.com/casey))\n\n[1.3.0](https://github.com/casey/just/releases/tag/1.3.0) - 2022-7-25\n---------------------------------------------------------------------\n\n### Added\n- Add `/` operator ([#1237](https://github.com/casey/just/pull/1237) by [casey](https://github.com/casey))\n\n### Fixed\n- Fix multibyte codepoint crash ([#1243](https://github.com/casey/just/pull/1243) by [casey](https://github.com/casey))\n\n### Misc\n- Update just-install reference on README.md ([#1275](https://github.com/casey/just/pull/1275) by [0xradical](https://github.com/0xradical))\n- Split Recipe::run into Recipe::{run_shebang,run_linewise} ([#1270](https://github.com/casey/just/pull/1270) by [casey](https://github.com/casey))\n- Add asdf package to readme([#1264](https://github.com/casey/just/pull/1264) by [jaacko-torus](https://github.com/jaacko-torus))\n- Add mdbook deps for build-book recipe ([#1259](https://github.com/casey/just/pull/1259) by [TopherIsSwell](https://github.com/TopherIsSwell))\n- Fix typo: argumant -> argument ([#1257](https://github.com/casey/just/pull/1257) by [kianmeng](https://github.com/kianmeng))\n- Improve error message if `if` is missing the `else` ([#1252](https://github.com/casey/just/pull/1252) by [nk9](https://github.com/nk9))\n- Explain how to pass arguments of a command to a dependency ([#1254](https://github.com/casey/just/pull/1254) by [heavelock](https://github.com/heavelock))\n- Update Chinese translation of README.md ([#1253](https://github.com/casey/just/pull/1253) by [hustcer](https://github.com/hustcer))\n- Improvements to Sublime syntax file ([#1250](https://github.com/casey/just/pull/1250) by [nk9](https://github.com/nk9))\n- Prevent unbounded recursion when parsing expressions ([#1248](https://github.com/casey/just/pull/1248) by [evanrichter](https://github.com/evanrichter))\n- Publish to snap store ([#1245](https://github.com/casey/just/pull/1245) by [casey](https://github.com/casey))\n- Restore fuzz test harness ([#1246](https://github.com/casey/just/pull/1246) by [evanrichter](https://github.com/evanrichter))\n- Add just-install to README file ([#1241](https://github.com/casey/just/pull/1241) by [brombal](https://github.com/brombal))\n- Fix dead readme link ([#1240](https://github.com/casey/just/pull/1240) by [wdroz](https://github.com/wdroz))\n- Do `use super::*;` instead of `use crate::common::*;` ([#1239](https://github.com/casey/just/pull/1239) by [casey](https://github.com/casey))\n- Fix readme punctuation ([#1235](https://github.com/casey/just/pull/1235) by [casey](https://github.com/casey))\n- Add argument splitting section to readme ([#1230](https://github.com/casey/just/pull/1230) by [casey](https://github.com/casey))\n- Add notes about environment variables to readme ([#1229](https://github.com/casey/just/pull/1229) by [casey](https://github.com/casey))\n- Fix book links ([#1227](https://github.com/casey/just/pull/1227) by [casey](https://github.com/casey))\n- Add nushell README.md ([#1224](https://github.com/casey/just/pull/1224) by [hustcer](https://github.com/hustcer))\n- Use absolute links in readme ([#1223](https://github.com/casey/just/pull/1223) by [casey](https://github.com/casey))\n- Copy changelog into manual ([#1222](https://github.com/casey/just/pull/1222) by [casey](https://github.com/casey))\n- Translate Chinese manual introduction and title ([#1220](https://github.com/casey/just/pull/1220) by [hustcer](https://github.com/hustcer))\n- Build Chinese language user manual ([#1219](https://github.com/casey/just/pull/1219) by [casey](https://github.com/casey))\n- Update Chinese translation of README.md ([#1218](https://github.com/casey/just/pull/1218) by [hustcer](https://github.com/hustcer))\n- Translate all of README.md into Chinese ([#1217](https://github.com/casey/just/pull/1217) by [hustcer](https://github.com/hustcer))\n- Translate all of features in README into Chinese ([#1215](https://github.com/casey/just/pull/1215) by [hustcer](https://github.com/hustcer))\n- Make link to examples directory absolute ([#1213](https://github.com/casey/just/pull/1213) by [casey](https://github.com/casey))\n- Translate part of features in README into Chinese ([#1211](https://github.com/casey/just/pull/1211) by [hustcer](https://github.com/hustcer))\n- Add JetBrains IDE plugin to readme ([#1209](https://github.com/casey/just/pull/1209) by [linux-china](https://github.com/linux-china))\n- Translate features chapter of readme to Chinese ([#1208](https://github.com/casey/just/pull/1208) by [hustcer](https://github.com/hustcer))\n\n[1.2.0](https://github.com/casey/just/releases/tag/1.2.0) - 2022-5-31\n---------------------------------------------------------------------\n\n### Added\n- Add `windows-shell` setting ([#1198](https://github.com/casey/just/pull/1198) by [casey](https://github.com/casey))\n- SHA-256 and UUID functions ([#1170](https://github.com/casey/just/pull/1170) by [mbodmer](https://github.com/mbodmer))\n\n### Misc\n- Translate editor support and quick start to Chinese ([#1206](https://github.com/casey/just/pull/1206) by [hustcer](https://github.com/hustcer))\n- Translate first section of readme into Chinese ([#1205](https://github.com/casey/just/pull/1205) by [hustcer](https://github.com/hustcer))\n- Fix a bunch of typos ([#1204](https://github.com/casey/just/pull/1204) by [casey](https://github.com/casey))\n- Remove cargo-limit usage from justfile ([#1199](https://github.com/casey/just/pull/1199) by [casey](https://github.com/casey))\n- Add nix package manager install instructions ([#1194](https://github.com/casey/just/pull/1194) by [risingBirdSong](https://github.com/risingBirdSong))\n- Fix broken link in readme ([#1183](https://github.com/casey/just/pull/1183) by [Vlad-Shcherbina](https://github.com/Vlad-Shcherbina))\n- Add screenshot to manual ([#1181](https://github.com/casey/just/pull/1181) by [casey](https://github.com/casey))\n- Style homepage ([#1180](https://github.com/casey/just/pull/1180) by [casey](https://github.com/casey))\n- Center readme ([#1178](https://github.com/casey/just/pull/1178) by [casey](https://github.com/casey))\n- Style and add links to homepage ([#1177](https://github.com/casey/just/pull/1177) by [casey](https://github.com/casey))\n- Fix readme badge links ([#1176](https://github.com/casey/just/pull/1176) by [casey](https://github.com/casey))\n- Generate book from readme ([#1155](https://github.com/casey/just/pull/1155) by [casey](https://github.com/casey))\n\n[1.1.3](https://github.com/casey/just/releases/tag/1.1.3) - 2022-5-3\n--------------------------------------------------------------------\n\n### Fixed\n- Skip duplicate recipe arguments ([#1174](https://github.com/casey/just/pull/1174) by [casey](https://github.com/casey))\n\n### Misc\n- Fix install script ([#1172](https://github.com/casey/just/pull/1172) by [casey](https://github.com/casey))\n- Document that `invocation_directory()` returns an absolute path ([#1162](https://github.com/casey/just/pull/1162) by [casey](https://github.com/casey))\n- Fix absolute_path documentation ([#1160](https://github.com/casey/just/pull/1160) by [casey](https://github.com/casey))\n- Add cross-platform justfile example ([#1152](https://github.com/casey/just/pull/1152) by [presidento](https://github.com/presidento))\n\n[1.1.2](https://github.com/casey/just/releases/tag/1.1.2) - 2022-3-30\n---------------------------------------------------------------------\n\n### Misc\n- Document indentation rules ([#1142](https://github.com/casey/just/pull/1142) by [casey](https://github.com/casey))\n- Remove stale link from readme ([#1141](https://github.com/casey/just/pull/1141) by [casey](https://github.com/casey))\n\n### Unstable\n- Search for missing recipes in parent directory justfiles ([#1149](https://github.com/casey/just/pull/1149) by [casey](https://github.com/casey))\n\n[1.1.1](https://github.com/casey/just/releases/tag/1.1.1) - 2022-3-22\n---------------------------------------------------------------------\n\n### Misc\n- Build MacOS ARM release binaries ([#1138](https://github.com/casey/just/pull/1138) by [casey](https://github.com/casey))\n- Upgrade Windows Actions runners to windows-latest ([#1137](https://github.com/casey/just/pull/1137) by [casey](https://github.com/casey))\n\n[1.1.0](https://github.com/casey/just/releases/tag/1.1.0) - 2022-3-10\n---------------------------------------------------------------------\n\n### Added\n- Add `error()` function ([#1118](https://github.com/casey/just/pull/1118) by [chamons](https://github.com/chamons))\n- Add `absolute_path` function ([#1121](https://github.com/casey/just/pull/1121) by [Laura7089](https://github.com/Laura7089))\n\n[1.0.1](https://github.com/casey/just/releases/tag/1.0.1) - 2022-2-28\n---------------------------------------------------------------------\n\n### Fixed\n- Make path_exists() relative to current directory ([#1122](https://github.com/casey/just/pull/1122) by [casey](https://github.com/casey))\n\n### Misc\n- Detail environment variable usage in readme ([#1086](https://github.com/casey/just/pull/1086) by [kenden](https://github.com/kenden))\n- Format --init justfile ([#1116](https://github.com/casey/just/pull/1116) by [TheLocehiliosan](https://github.com/TheLocehiliosan))\n- Add hint for Node.js script compatibility ([#1113](https://github.com/casey/just/pull/1113) by [casey](https://github.com/casey))\n\n[1.0.0](https://github.com/casey/just/releases/tag/1.0.0) - 2022-2-22\n---------------------------------------------------------------------\n\n### Added\n- Add path_exists() function ([#1106](https://github.com/casey/just/pull/1106) by [heavelock](https://github.com/heavelock))\n\n### Misc\n- Note that `pipefail` isn't normally set ([#1108](https://github.com/casey/just/pull/1108) by [casey](https://github.com/casey))\n\n[0.11.2](https://github.com/casey/just/releases/tag/0.11.2) - 2022-2-15\n-----------------------------------------------------------------------\n\n### Misc\n- Fix dotenv-load documentation ([#1104](https://github.com/casey/just/pull/1104) by [casey](https://github.com/casey))\n- Fixup broken release package script ([#1100](https://github.com/casey/just/pull/1100) by [lutostag](https://github.com/lutostag))\n\n[0.11.1](https://github.com/casey/just/releases/tag/0.11.1) - 2022-2-14\n-----------------------------------------------------------------------\n\n### Added\n- Allow duplicate recipes ([#1095](https://github.com/casey/just/pull/1095) by [lutostag](https://github.com/lutostag))\n\n### Misc\n- Add arrow pointing to table of contents button ([#1096](https://github.com/casey/just/pull/1096) by [casey](https://github.com/casey))\n- Improve readme ([#1093](https://github.com/casey/just/pull/1093) by [halostatue](https://github.com/halostatue))\n- Remove asciidoc readme ([#1092](https://github.com/casey/just/pull/1092) by [casey](https://github.com/casey))\n- Convert README.adoc to markdown ([#1091](https://github.com/casey/just/pull/1091) by [casey](https://github.com/casey))\n- Add choco package to README ([#1090](https://github.com/casey/just/pull/1090) by [michidk](https://github.com/michidk))\n\n[0.11.0](https://github.com/casey/just/releases/tag/0.11.0) - 2022-2-3\n----------------------------------------------------------------------\n\n### Breaking\n- Change dotenv-load default to false ([#1082](https://github.com/casey/just/pull/1082) by [casey](https://github.com/casey))\n\n[0.10.7](https://github.com/casey/just/releases/tag/0.10.7) - 2022-1-30\n-----------------------------------------------------------------------\n\n### Misc\n- Don't run tests in release workflow ([#1080](https://github.com/casey/just/pull/1080) by [casey](https://github.com/casey))\n- Fix windows chooser invocation error message test ([#1079](https://github.com/casey/just/pull/1079) by [casey](https://github.com/casey))\n- Remove call to sed in justfile ([#1078](https://github.com/casey/just/pull/1078) by [casey](https://github.com/casey))\n\n[0.10.6](https://github.com/casey/just/releases/tag/0.10.6) - 2022-1-29\n-----------------------------------------------------------------------\n\n### Added\n- Add windows-powershell setting ([#1057](https://github.com/casey/just/pull/1057) by [michidk](https://github.com/michidk))\n\n### Changed\n- Allow using `-` and `@` in any order ([#1063](https://github.com/casey/just/pull/1063) by [casey](https://github.com/casey))\n\n### Misc\n- Use `Context` suffix for snafu error contexts ([#1068](https://github.com/casey/just/pull/1068) by [casey](https://github.com/casey))\n- Upgrade snafu to 0.7 ([#1067](https://github.com/casey/just/pull/1067) by [shepmaster](https://github.com/shepmaster))\n- Mention \"$@\" in the README ([#1064](https://github.com/casey/just/pull/1064) by [mpdude](https://github.com/mpdude))\n- Note how to use PowerShell with CLI in readme ([#1056](https://github.com/casey/just/pull/1056) by [michidk](https://github.com/michidk))\n- Link to cheatsheet from readme ([#1053](https://github.com/casey/just/pull/1053) by [casey](https://github.com/casey))\n- Link to Homebrew installation docs in readme ([#1049](https://github.com/casey/just/pull/1049) by [michidk](https://github.com/michidk))\n- Workflow tweaks ([#1045](https://github.com/casey/just/pull/1045) by [casey](https://github.com/casey))\n- Push to correct origin in publish recipe ([#1044](https://github.com/casey/just/pull/1044) by [casey](https://github.com/casey))\n\n[0.10.5](https://github.com/casey/just/releases/tag/0.10.5) - 2021-12-4\n-----------------------------------------------------------------------\n\n### Changed\n- Use musl libc for ARM binaries ([#1037](https://github.com/casey/just/pull/1037) by [casey](https://github.com/casey))\n\n### Misc\n- Make completions work with Bash alias ([#1035](https://github.com/casey/just/pull/1035) by [kurtbuilds](https://github.com/kurtbuilds))\n- Run tests on PRs ([#1040](https://github.com/casey/just/pull/1040) by [casey](https://github.com/casey))\n- Improve GitHub Actions workflow triggers ([#1033](https://github.com/casey/just/pull/1033) by [casey](https://github.com/casey))\n- Publish from GitHub master branch instead of local master ([#1032](https://github.com/casey/just/pull/1032) by [casey](https://github.com/casey))\n\n[0.10.4](https://github.com/casey/just/releases/tag/0.10.4) - 2021-11-21\n------------------------------------------------------------------------\n\n### Added\n- Add `--dump-format json` ([#992](https://github.com/casey/just/pull/992) by [casey](https://github.com/casey))\n- Add `quote(s)` function for escaping strings ([#1022](https://github.com/casey/just/pull/1022) by [casey](https://github.com/casey))\n- fmt: check formatting with `--check` ([#1001](https://github.com/casey/just/pull/1001) by [hdhoang](https://github.com/hdhoang))\n\n### Misc\n- Refactor github actions ([#1028](https://github.com/casey/just/pull/1028) by [casey](https://github.com/casey))\n- Fix readme formatting ([#1030](https://github.com/casey/just/pull/1030) by [soenkehahn](https://github.com/soenkehahn))\n- Use ps1 extension for pwsh shebangs ([#1027](https://github.com/casey/just/pull/1027) by [dmringo](https://github.com/dmringo))\n- Ignore leading byte order mark in source files ([#1021](https://github.com/casey/just/pull/1021) by [casey](https://github.com/casey))\n- Add color to `just --fmt --check` diff ([#1015](https://github.com/casey/just/pull/1015) by [casey](https://github.com/casey))\n\n[0.10.3](https://github.com/casey/just/releases/tag/0.10.3) - 2021-10-30\n------------------------------------------------------------------------\n\n### Added\n- Add `trim_end(s)` and `trim_start(s)` functions ([#999](https://github.com/casey/just/pull/999) by [casey](https://github.com/casey))\n- Add more string manipulation functions ([#998](https://github.com/casey/just/pull/998) by [casey](https://github.com/casey))\n\n### Changed\n- Make `join` accept two or more arguments ([#1000](https://github.com/casey/just/pull/1000) by [casey](https://github.com/casey))\n\n### Misc\n- Add alternatives and prior art section to readme ([#1008](https://github.com/casey/just/pull/1008) by [casey](https://github.com/casey))\n- Fix readme `make`'s not correctly displayed ([#1007](https://github.com/casey/just/pull/1007) by [peter50216](https://github.com/peter50216))\n- Document the default recipe ([#1006](https://github.com/casey/just/pull/1006) by [casey](https://github.com/casey))\n- Document creating user justfile recipe aliases ([#1005](https://github.com/casey/just/pull/1005) by [casey](https://github.com/casey))\n- Fix readme typo ([#1004](https://github.com/casey/just/pull/1004) by [0xflotus](https://github.com/0xflotus))\n- Add packaging status table to readme ([#1003](https://github.com/casey/just/pull/1003) by [casey](https://github.com/casey))\n- Reword `sh` not found error messages ([#1002](https://github.com/casey/just/pull/1002) by [hdhoang](https://github.com/hdhoang))\n- Only pass +crt-static to cargo build ([#997](https://github.com/casey/just/pull/997) by [casey](https://github.com/casey))\n- Stop using tabs in justfile in editorconfig ([#996](https://github.com/casey/just/pull/996) by [casey](https://github.com/casey))\n- Use consistent rustflags formatting ([#994](https://github.com/casey/just/pull/994) by [casey](https://github.com/casey))\n- Use `cargo build` instead of `cargo rustc` ([#993](https://github.com/casey/just/pull/993) by [casey](https://github.com/casey))\n- Don't skip variables in variable iterator ([#991](https://github.com/casey/just/pull/991) by [casey](https://github.com/casey))\n- Remove deprecated equals error ([#985](https://github.com/casey/just/pull/985) by [casey](https://github.com/casey))\n\n[0.10.2](https://github.com/casey/just/releases/tag/0.10.2) - 2021-9-26\n-----------------------------------------------------------------------\n\n### Added\n- Implement regular expression match conditionals ([#970](https://github.com/casey/just/pull/970) by [casey](https://github.com/casey))\n\n### Misc\n- Add detailed instructions for installing prebuilt binaries ([#978](https://github.com/casey/just/pull/978) by [casey](https://github.com/casey))\n- Improve readme package table formatting ([#977](https://github.com/casey/just/pull/977) by [casey](https://github.com/casey))\n- Add conda package to README ([#976](https://github.com/casey/just/pull/976) by [kellpossible](https://github.com/kellpossible))\n- Change MSRV to 1.46.0 ([#968](https://github.com/casey/just/pull/968) by [casey](https://github.com/casey))\n- Use stable rustfmt instead of nightly ([#967](https://github.com/casey/just/pull/967) by [casey](https://github.com/casey))\n- Fix readme typo: FOO → WORLD ([#964](https://github.com/casey/just/pull/964) by [casey](https://github.com/casey))\n- Reword Emacs section in readme ([#962](https://github.com/casey/just/pull/962) by [casey](https://github.com/casey))\n- Mention justl mode for Emacs ([#961](https://github.com/casey/just/pull/961) by [psibi](https://github.com/psibi))\n\n[0.10.1](https://github.com/casey/just/releases/tag/0.10.1) - 2021-8-27\n-----------------------------------------------------------------------\n\n### Added\n- Add flags for specifying name and path to environment file ([#941](https://github.com/casey/just/pull/941) by [Celeo](https://github.com/Celeo))\n\n### Misc\n- Fix error message tests for Alpine Linux ([#956](https://github.com/casey/just/pull/956) by [casey](https://github.com/casey))\n- Bump `target` version to 2.0 ([#957](https://github.com/casey/just/pull/957) by [casey](https://github.com/casey))\n- Mention `tree-sitter-just` in readme ([#951](https://github.com/casey/just/pull/951) by [casey](https://github.com/casey))\n- Document release RSS feed in readme ([#950](https://github.com/casey/just/pull/950) by [casey](https://github.com/casey))\n- Add installation instructions for Gentoo Linux ([#946](https://github.com/casey/just/pull/946) by [dm9pZCAq](https://github.com/dm9pZCAq))\n- Make GitHub Actions instructions more prominent ([#944](https://github.com/casey/just/pull/944) by [casey](https://github.com/casey))\n- Wrap `--help` text to terminal width ([#940](https://github.com/casey/just/pull/940) by [casey](https://github.com/casey))\n- Add `.justfile` to sublime syntax file_extensions ([#938](https://github.com/casey/just/pull/938) by [casey](https://github.com/casey))\n- Suggest using `~/.global.justfile` instead of `~/.justfile` ([#937](https://github.com/casey/just/pull/937) by [casey](https://github.com/casey))\n- Update man page ([#935](https://github.com/casey/just/pull/935) by [casey](https://github.com/casey))\n\n[0.10.0](https://github.com/casey/just/releases/tag/0.10.0) - 2021-8-2\n----------------------------------------------------------------------\n\n### Changed\n- Warn if `.env` file is loaded in `dotenv-load` isn't explicitly set ([#925](https://github.com/casey/just/pull/925) by [casey](https://github.com/casey))\n\n### Added\n- Add `--changelog` subcommand ([#932](https://github.com/casey/just/pull/932) by [casey](https://github.com/casey))\n- Support `.justfile` as an alternative to `justfile` ([#931](https://github.com/casey/just/pull/931) by [casey](https://github.com/casey))\n\n### Misc\n- Use cargo-limit for all recipes ([#928](https://github.com/casey/just/pull/928) by [casey](https://github.com/casey))\n- Fix colors ([#927](https://github.com/casey/just/pull/927) by [casey](https://github.com/casey))\n- Use ColorDisplay trait to print objects to the terminal ([#926](https://github.com/casey/just/pull/926) by [casey](https://github.com/casey))\n- Deduplicate recipe parsing ([#923](https://github.com/casey/just/pull/923) by [casey](https://github.com/casey))\n- Move subcommand functions into Subcommand ([#918](https://github.com/casey/just/pull/918) by [casey](https://github.com/casey))\n- Check GitHub Actions workflow with actionlint ([#921](https://github.com/casey/just/pull/921) by [casey](https://github.com/casey))\n- Add loader and refactor errors ([#917](https://github.com/casey/just/pull/917) by [casey](https://github.com/casey))\n- Rename: Module → Ast ([#915](https://github.com/casey/just/pull/915) by [casey](https://github.com/casey))\n\n[0.9.9](https://github.com/casey/just/releases/tag/0.9.9) - 2021-7-22\n---------------------------------------------------------------------\n\n### Added\n- Add subsequent dependencies ([#820](https://github.com/casey/just/pull/820) by [casey](https://github.com/casey))\n- Implement `else if` chaining ([#910](https://github.com/casey/just/pull/910) by [casey](https://github.com/casey))\n\n### Fixed\n- Fix circular variable dependency error message ([#909](https://github.com/casey/just/pull/909) by [casey](https://github.com/casey))\n\n### Misc\n- Improve readme ([#904](https://github.com/casey/just/pull/904) by [mtsknn](https://github.com/mtsknn))\n- Add screenshot to readme ([#911](https://github.com/casey/just/pull/911) by [casey](https://github.com/casey))\n- Add install instructions for Fedora Linux ([#898](https://github.com/casey/just/pull/898) by [olivierlemasle](https://github.com/olivierlemasle))\n- Fix readme typos ([#903](https://github.com/casey/just/pull/903) by [rokf](https://github.com/rokf))\n- Actually fix release tagging and publish changelog with releases ([#901](https://github.com/casey/just/pull/901) by [casey](https://github.com/casey))\n- Fix broken prerelease tagging ([#900](https://github.com/casey/just/pull/900) by [casey](https://github.com/casey))\n- Use string value for ref-type check ([#897](https://github.com/casey/just/pull/897) by [casey](https://github.com/casey))\n\n[0.9.8](https://github.com/casey/just/releases/tag/0.9.8) - 2021-7-3\n--------------------------------------------------------------------\n\n### Misc\n- Fix changelog formatting ([#894](https://github.com/casey/just/pull/894) by [casey](https://github.com/casey))\n- Only run install script on CI for non-releases ([#895](https://github.com/casey/just/pull/895) by [casey](https://github.com/casey))\n\n[0.9.7](https://github.com/casey/just/releases/tag/0.9.7) - 2021-7-3\n--------------------------------------------------------------------\n\n### Added\n- Add string manipulation functions ([#888](https://github.com/casey/just/pull/888) by [terror](https://github.com/terror))\n\n### Misc\n- Remove test-utilities crate ([#892](https://github.com/casey/just/pull/892) by [casey](https://github.com/casey))\n- Remove outdated note in `Cargo.toml` ([#891](https://github.com/casey/just/pull/891) by [casey](https://github.com/casey))\n- Link to GitHub release pages in changelog ([#886](https://github.com/casey/just/pull/886) by [casey](https://github.com/casey))\n\n[0.9.6](https://github.com/casey/just/releases/tag/0.9.6) - 2021-6-24\n---------------------------------------------------------------------\n\n### Added\n- Add `clean` function for simplifying paths ([#883](https://github.com/casey/just/pull/883) by [casey](https://github.com/casey))\n- Add `join` function for joining paths ([#882](https://github.com/casey/just/pull/882) by [casey](https://github.com/casey))\n- Add path manipulation functions ([#872](https://github.com/casey/just/pull/872) by [TonioGela](https://github.com/TonioGela))\n\n### Misc\n- Add `file_extensions` to Sublime syntax file ([#878](https://github.com/casey/just/pull/878) by [Frederick888](https://github.com/Frederick888))\n- Document path manipulation functions in readme ([#877](https://github.com/casey/just/pull/877) by [casey](https://github.com/casey))\n\n[0.9.5](https://github.com/casey/just/releases/tag/0.9.5) - 2021-6-12\n---------------------------------------------------------------------\n\n### Added\n- Add `--unstable` flag ([#869](https://github.com/casey/just/pull/869) by [casey](https://github.com/casey))\n- Add Sublime Text syntax file ([#864](https://github.com/casey/just/pull/864) by [casey](https://github.com/casey))\n- Add `--fmt` subcommand ([#837](https://github.com/casey/just/pull/837) by [vglfr](https://github.com/vglfr))\n\n### Misc\n- Mention doniogela.dev/just/ in readme ([#866](https://github.com/casey/just/pull/866) by [casey](https://github.com/casey))\n- Mention that vim-just is now available from vim-polyglot ([#865](https://github.com/casey/just/pull/865) by [casey](https://github.com/casey))\n- Mention `--list-heading` newline behavior ([#860](https://github.com/casey/just/pull/860) by [casey](https://github.com/casey))\n- Check for `rg` in `bin/forbid` ([#859](https://github.com/casey/just/pull/859) by [casey](https://github.com/casey))\n- Document that variables are not exported to backticks in the same scope ([#856](https://github.com/casey/just/pull/856) by [casey](https://github.com/casey))\n- Remove `dotenv_load` from tests ([#853](https://github.com/casey/just/pull/853) by [casey](https://github.com/casey))\n- Remove `v` prefix from version ([#850](https://github.com/casey/just/pull/850) by [casey](https://github.com/casey))\n- Improve install script ([#847](https://github.com/casey/just/pull/847) by [casey](https://github.com/casey))\n- Move pages assets back to `docs` ([#846](https://github.com/casey/just/pull/846) by [casey](https://github.com/casey))\n- Move pages assets to `www` ([#845](https://github.com/casey/just/pull/845) by [casey](https://github.com/casey))\n\n[0.9.4](https://github.com/casey/just/releases/tag/v0.9.4) - 2021-5-27\n----------------------------------------------------------------------\n\n### Misc\n- Release `aarch64-unknown-linux-gnu` binaries ([#843](https://github.com/casey/just/pull/843) by [casey](https://github.com/casey))\n- Add `$` to non-default parameter grammar ([#839](https://github.com/casey/just/pull/839) by [casey](https://github.com/casey))\n- Add `$` to parameter grammar ([#838](https://github.com/casey/just/pull/838) by [NoahTheDuke](https://github.com/NoahTheDuke))\n- Fix readme links ([#836](https://github.com/casey/just/pull/836) by [casey](https://github.com/casey))\n- Add `vim-just` installation instructions to readme ([#835](https://github.com/casey/just/pull/835) by [casey](https://github.com/casey))\n- Refactor shebang handling ([#833](https://github.com/casey/just/pull/833) by [casey](https://github.com/casey))\n\n[0.9.3](https://github.com/casey/just/releases/tag/v0.9.3) - 2021-5-16\n----------------------------------------------------------------------\n\n### Added\n- Add shebang support for 'cmd.exe' ([#828](https://github.com/casey/just/pull/828) by [pansila](https://github.com/pansila))\n- Add `.exe` to powershell scripts ([#826](https://github.com/casey/just/pull/826) by [sigoden](https://github.com/sigoden))\n- Add the `--command` subcommand ([#824](https://github.com/casey/just/pull/824) by [casey](https://github.com/casey))\n\n### Fixed\n- Fix bang lexing and placate clippy ([#821](https://github.com/casey/just/pull/821) by [casey](https://github.com/casey))\n\n### Misc\n- Fixed missing close apostrophe in GRAMMAR.md ([#830](https://github.com/casey/just/pull/830) by [SOF3](https://github.com/SOF3))\n- Make 'else' keyword in grammar ([#829](https://github.com/casey/just/pull/829) by [SOF3](https://github.com/SOF3))\n- Add forbid script ([#827](https://github.com/casey/just/pull/827) by [casey](https://github.com/casey))\n- Remove `summary` feature ([#823](https://github.com/casey/just/pull/823) by [casey](https://github.com/casey))\n- Document that just is now in Arch official repo ([#814](https://github.com/casey/just/pull/814) by [svenstaro](https://github.com/svenstaro))\n- Fix changelog years ([#813](https://github.com/casey/just/pull/813) by [casey](https://github.com/casey))\n\n[0.9.2](https://github.com/casey/just/releases/tag/v0.9.2) - 2021-5-02\n----------------------------------------------------------------------\n\n### Fixed\n- Pass evaluated arguments as positional arguments ([#810](https://github.com/casey/just/pull/810) by [casey](https://github.com/casey))\n\n[0.9.1](https://github.com/casey/just/releases/tag/v0.9.1) - 2021-4-24\n----------------------------------------------------------------------\n\n### Added\n- Change `--eval` to print variable value only ([#806](https://github.com/casey/just/pull/806) by [casey](https://github.com/casey))\n- Add `positional-arguments` setting ([#804](https://github.com/casey/just/pull/804) by [casey](https://github.com/casey))\n- Allow filtering variables to evaluate ([#795](https://github.com/casey/just/pull/795) by [casey](https://github.com/casey))\n\n### Changed\n- Reform and improve string literals ([#793](https://github.com/casey/just/pull/793) by [casey](https://github.com/casey))\n- Allow evaluating justfiles with no recipes ([#794](https://github.com/casey/just/pull/794) by [casey](https://github.com/casey))\n- Unify string lexing ([#790](https://github.com/casey/just/pull/790) by [casey](https://github.com/casey))\n\n### Misc\n- Test multi-line strings in interpolation ([#789](https://github.com/casey/just/pull/789) by [casey](https://github.com/casey))\n- Add shell setting examples to README ([#787](https://github.com/casey/just/pull/787) by [casey](https://github.com/casey))\n- Disable .env warning for now ([#786](https://github.com/casey/just/pull/786) by [casey](https://github.com/casey))\n- Warn if `.env` file loaded and `dotenv-load` unset ([#784](https://github.com/casey/just/pull/784) by [casey](https://github.com/casey))\n\n[0.9.0](https://github.com/casey/just/releases/tag/v0.9.0) - 2021-3-28\n----------------------------------------------------------------------\n\n### Changed\n- Turn `=` deprecation warning into a hard error ([#780](https://github.com/casey/just/pull/780) by [casey](https://github.com/casey))\n\n[0.8.7](https://github.com/casey/just/releases/tag/v0.8.7) - 2021-3-28\n----------------------------------------------------------------------\n\n### Added\n- Add `dotenv-load` setting ([#778](https://github.com/casey/just/pull/778) by [casey](https://github.com/casey))\n\n### Misc\n- Change publish recipe to use stable rust ([#777](https://github.com/casey/just/pull/777) by [casey](https://github.com/casey))\n\n[0.8.6](https://github.com/casey/just/releases/tag/v0.8.6) - 2021-3-28\n----------------------------------------------------------------------\n\n### Added\n- Add just_executable() function ([#775](https://github.com/casey/just/pull/775) by [bew](https://github.com/bew))\n- Prefix parameters with `$` to export to environment ([#773](https://github.com/casey/just/pull/773) by [casey](https://github.com/casey))\n- Add `set export` to export all variables as environment variables ([#767](https://github.com/casey/just/pull/767) by [casey](https://github.com/casey))\n\n### Changed\n- Suppress all output to stderr when `--quiet` ([#771](https://github.com/casey/just/pull/771) by [casey](https://github.com/casey))\n\n### Misc\n- Improve chooser invocation error message ([#772](https://github.com/casey/just/pull/772) by [casey](https://github.com/casey))\n- De-emphasize cmd.exe in readme ([#768](https://github.com/casey/just/pull/768) by [casey](https://github.com/casey))\n- Fix warnings ([#770](https://github.com/casey/just/pull/770) by [casey](https://github.com/casey))\n\n[0.8.5](https://github.com/casey/just/releases/tag/v0.8.5) - 2021-3-24\n----------------------------------------------------------------------\n\n### Added\n- Allow escaping double braces with `{{{{` ([#765](https://github.com/casey/just/pull/765) by [casey](https://github.com/casey))\n\n### Misc\n- Reorganize readme to highlight editor support ([#764](https://github.com/casey/just/pull/764) by [casey](https://github.com/casey))\n- Add categories and keywords to Cargo manifest ([#763](https://github.com/casey/just/pull/763) by [casey](https://github.com/casey))\n- Fix command output in readme ([#760](https://github.com/casey/just/pull/760) by [vvv](https://github.com/vvv))\n- Note Emacs package `just-mode` in readme ([#759](https://github.com/casey/just/pull/759) by [leon-barrett](https://github.com/leon-barrett))\n- Note shebang line splitting inconsistency in readme ([#757](https://github.com/casey/just/pull/757) by [casey](https://github.com/casey))\n\n[0.8.4](https://github.com/casey/just/releases/tag/v0.8.4) - 2021-2-9\n---------------------------------------------------------------------\n\n### Added\n- Add options to control list formatting ([#753](https://github.com/casey/just/pull/753) by [casey](https://github.com/casey))\n\n### Misc\n- Document how to change the working directory in a recipe ([#752](https://github.com/casey/just/pull/752) by [casey](https://github.com/casey))\n- Implement `Default` for `Table` ([#748](https://github.com/casey/just/pull/748) by [casey](https://github.com/casey))\n- Add Alpine Linux package to readme ([#736](https://github.com/casey/just/pull/736) by [jirutka](https://github.com/jirutka))\n- Update to actions/cache@v2 ([#742](https://github.com/casey/just/pull/742) by [zyctree](https://github.com/zyctree))\n- Add link in readme to GitHub Action ([#729](https://github.com/casey/just/pull/729) by [rossmacarthur](https://github.com/rossmacarthur))\n- Add docs for justfile() and justfile_directory() ([#726](https://github.com/casey/just/pull/726) by [rminderhoud](https://github.com/rminderhoud))\n- Fix CI ([#727](https://github.com/casey/just/pull/727) by [casey](https://github.com/casey))\n- Improve readme ([#725](https://github.com/casey/just/pull/725) by [casey](https://github.com/casey))\n- Replace saythanks.io link with malto: link ([#723](https://github.com/casey/just/pull/723) by [casey](https://github.com/casey))\n- Update man page to v0.8.3 ([#720](https://github.com/casey/just/pull/720) by [casey](https://github.com/casey))\n\n[0.8.3](https://github.com/casey/just/releases/tag/v0.8.3) - 2020-10-27\n-----------------------------------------------------------------------\n\n### Added\n- Allow ignoring line endings inside delimiters ([#717](https://github.com/casey/just/pull/717) by [casey](https://github.com/casey))\n\n[0.8.2](https://github.com/casey/just/releases/tag/v0.8.2) - 2020-10-26\n-----------------------------------------------------------------------\n\n### Added\n- Add conditional expressions ([#714](https://github.com/casey/just/pull/714) by [casey](https://github.com/casey))\n\n### Fixed\n- Allow completing variables and recipes after `--set` in zsh completion script ([#697](https://github.com/casey/just/pull/697) by [heyrict](https://github.com/heyrict))\n\n### Misc\n- Add Parser::forbid ([#712](https://github.com/casey/just/pull/712) by [casey](https://github.com/casey))\n- Automatically track expected tokens while parsing ([#711](https://github.com/casey/just/pull/711) by [casey](https://github.com/casey))\n- Document feature flags in Cargo.toml ([#709](https://github.com/casey/just/pull/709) by [casey](https://github.com/casey))\n\n[0.8.1](https://github.com/casey/just/releases/tag/v0.8.1) - 2020-10-15\n-----------------------------------------------------------------------\n\n### Changed\n- Allow choosing multiple recipes to run ([#700](https://github.com/casey/just/pull/700) by [casey](https://github.com/casey))\n- Complete recipes in bash completion script ([#685](https://github.com/casey/just/pull/685) by [vikesh-raj](https://github.com/vikesh-raj))\n- Complete recipes names in PowerShell completion script ([#651](https://github.com/casey/just/pull/651) by [Insomniak47](https://github.com/Insomniak47))\n\n### Misc\n- Add FreeBSD port to readme ([#705](https://github.com/casey/just/pull/705) by [casey](https://github.com/casey))\n- Placate clippy ([#698](https://github.com/casey/just/pull/698) by [casey](https://github.com/casey))\n- Fix build fix ([#693](https://github.com/casey/just/pull/693) by [casey](https://github.com/casey))\n- Fix readme documentation for ignoring errors ([#692](https://github.com/casey/just/pull/692) by [kenden](https://github.com/kenden))\n\n[0.8.0](https://github.com/casey/just/releases/tag/v0.8.0) - 2020-10-3\n----------------------------------------------------------------------\n\n### Breaking\n- Allow suppressing failures with `-` prefix ([#687](https://github.com/casey/just/pull/687) by [iwillspeak](https://github.com/iwillspeak))\n\n### Misc\n- Document how to ignore errors with `-` in readme ([#690](https://github.com/casey/just/pull/690) by [casey](https://github.com/casey))\n- Install BSD Tar on GitHub Actions to fix CI errors ([#689](https://github.com/casey/just/pull/689) by [casey](https://github.com/casey))\n- Move separate quiet config value to verbosity ([#686](https://github.com/casey/just/pull/686) by [Celeo](https://github.com/Celeo))\n\n[0.7.3](https://github.com/casey/just/releases/tag/v0.7.3) - 2020-9-17\n----------------------------------------------------------------------\n\n### Added\n- Add the `--choose` subcommand ([#680](https://github.com/casey/just/pull/680) by [casey](https://github.com/casey))\n\n### Misc\n- Combine integration tests into single binary ([#679](https://github.com/casey/just/pull/679) by [casey](https://github.com/casey))\n- Document `--unsorted` flag in readme ([#672](https://github.com/casey/just/pull/672) by [casey](https://github.com/casey))\n\n[0.7.2](https://github.com/casey/just/releases/tag/v0.7.2) - 2020-8-23\n----------------------------------------------------------------------\n\n### Added\n- Add option to print recipes in source order ([#669](https://github.com/casey/just/pull/669) by [casey](https://github.com/casey))\n\n### Misc\n- Mention Linux, MacOS and Windows support in readme ([#666](https://github.com/casey/just/pull/666) by [casey](https://github.com/casey))\n- Add list highlighting nice features to readme ([#664](https://github.com/casey/just/pull/664) by [casey](https://github.com/casey))\n\n[0.7.1](https://github.com/casey/just/releases/tag/v0.7.1) - 2020-7-19\n----------------------------------------------------------------------\n\n### Fixed\n- Search for `.env` file from working directory ([#661](https://github.com/casey/just/pull/661) by [casey](https://github.com/casey))\n\n### Misc\n- Move link-time optimization config into `Cargo.toml` ([#658](https://github.com/casey/just/pull/658) by [casey](https://github.com/casey))\n\n[0.7.0](https://github.com/casey/just/releases/tag/v0.7.0) - 2020-7-16\n----------------------------------------------------------------------\n\n### Breaking\n- Skip `.env` items which are set in environment ([#656](https://github.com/casey/just/pull/656) by [casey](https://github.com/casey))\n\n### Misc\n- Mark tags that start with `v` as releases ([#654](https://github.com/casey/just/pull/654) by [casey](https://github.com/casey))\n\n[0.6.1](https://github.com/casey/just/releases/tag/v0.6.1) - 2020-6-28\n----------------------------------------------------------------------\n\n### Changed\n- Only use `cygpath` on shebang if it contains `/` ([#652](https://github.com/casey/just/pull/652) by [casey](https://github.com/casey))\n\n[0.6.0](https://github.com/casey/just/releases/tag/v0.6.0) - 2020-6-18\n----------------------------------------------------------------------\n\n### Changed\n- Ignore '@' returned from interpolation evaluation ([#636](https://github.com/casey/just/pull/636) by [rjsberry](https://github.com/rjsberry))\n- Strip leading spaces after line continuation ([#635](https://github.com/casey/just/pull/635) by [casey](https://github.com/casey))\n\n### Added\n- Add variadic parameters that accept zero or more arguments ([#645](https://github.com/casey/just/pull/645) by [rjsberry](https://github.com/rjsberry))\n\n### Misc\n- Clarify variadic parameter default values ([#646](https://github.com/casey/just/pull/646) by [rjsberry](https://github.com/rjsberry))\n- Add keybase example justfile  ([#640](https://github.com/casey/just/pull/640) by [blaggacao](https://github.com/blaggacao))\n- Strip trailing whitespace in `examples/pre-commit.just` ([#644](https://github.com/casey/just/pull/644) by [casey](https://github.com/casey))\n- Test that example justfiles successfully parse ([#643](https://github.com/casey/just/pull/643) by [casey](https://github.com/casey))\n- Link example justfiles in readme ([#641](https://github.com/casey/just/pull/641) by [casey](https://github.com/casey))\n- Add example justfile ([#639](https://github.com/casey/just/pull/639) by [blaggacao](https://github.com/blaggacao))\n- Document how to run recipes after another recipe ([#630](https://github.com/casey/just/pull/630) by [casey](https://github.com/casey))\n\n[0.5.11](https://github.com/casey/just/releases/tag/v0.5.11) - 2020-5-23\n------------------------------------------------------------------------\n\n### Added\n- Don't load `.env` file when `--no-dotenv` is passed ([#627](https://github.com/casey/just/pull/627) by [casey](https://github.com/casey))\n\n### Changed\n- Complete recipe names in fish completion script ([#625](https://github.com/casey/just/pull/625) by [tyehle](https://github.com/tyehle))\n- Suggest aliases for unknown recipes ([#624](https://github.com/casey/just/pull/624) by [Celeo](https://github.com/Celeo))\n\n[0.5.10](https://github.com/casey/just/releases/tag/v0.5.10) - 2020-3-18\n------------------------------------------------------------------------\n\n[0.5.9](https://github.com/casey/just/releases/tag/v0.5.9) - 2020-3-18\n----------------------------------------------------------------------\n\n### Added\n- Update zsh completion file ([#606](https://github.com/casey/just/pull/606) by [heyrict](https://github.com/heyrict))\n- Add `--variables` subcommand that prints variable names ([#608](https://github.com/casey/just/pull/608) by [casey](https://github.com/casey))\n- Add github pages site with improved install script ([#597](https://github.com/casey/just/pull/597) by [casey](https://github.com/casey))\n\n### Fixed\n- Don't require justfile to print completions ([#596](https://github.com/casey/just/pull/596) by [casey](https://github.com/casey))\n\n### Misc\n- Only build for linux on docs.rs ([#611](https://github.com/casey/just/pull/611) by [casey](https://github.com/casey))\n- Trim completions and ensure final newline ([#609](https://github.com/casey/just/pull/609) by [casey](https://github.com/casey))\n- Trigger build on pushes and pull requests ([#607](https://github.com/casey/just/pull/607) by [casey](https://github.com/casey))\n- Document behavior of `@` on shebang recipes ([#602](https://github.com/casey/just/pull/602) by [casey](https://github.com/casey))\n- Add `.nojekyll` file to github pages site ([#599](https://github.com/casey/just/pull/599) by [casey](https://github.com/casey))\n- Add `:` favicon ([#598](https://github.com/casey/just/pull/598) by [casey](https://github.com/casey))\n- Delete old CI configuration and update build badge ([#595](https://github.com/casey/just/pull/595) by [casey](https://github.com/casey))\n- Add download count badge to readme ([#594](https://github.com/casey/just/pull/594) by [casey](https://github.com/casey))\n- Wrap comments at 80 characters ([#593](https://github.com/casey/just/pull/593) by [casey](https://github.com/casey))\n- Use unstable rustfmt configuration options ([#592](https://github.com/casey/just/pull/592) by [casey](https://github.com/casey))\n\n[0.5.8](https://github.com/casey/just/releases/tag/v0.5.8) - 2020-1-28\n----------------------------------------------------------------------\n\n### Changed\n- Only use `cygpath` on windows if present ([#586](https://github.com/casey/just/pull/586) by [casey](https://github.com/casey))\n\n### Misc\n- Improve comments in justfile ([#588](https://github.com/casey/just/pull/588) by [casey](https://github.com/casey))\n- Remove unused dependencies ([#587](https://github.com/casey/just/pull/587) by [casey](https://github.com/casey))\n\n[0.5.7](https://github.com/casey/just/releases/tag/v0.5.7) - 2020-1-28\n----------------------------------------------------------------------\n\n### Misc\n- Don't include directories in release archive ([#583](https://github.com/casey/just/pull/583) by [casey](https://github.com/casey))\n\n[0.5.6](https://github.com/casey/just/releases/tag/v0.5.6) - 2020-1-28\n----------------------------------------------------------------------\n\n### Misc\n- Build and upload release artifacts from GitHub Actions ([#581](https://github.com/casey/just/pull/581) by [casey](https://github.com/casey))\n- List solus package in readme ([#579](https://github.com/casey/just/pull/579) by [casey](https://github.com/casey))\n- Expand use of GitHub Actions ([#580](https://github.com/casey/just/pull/580) by [casey](https://github.com/casey))\n- Fix readme typo: interpetation -> interpretation ([#578](https://github.com/casey/just/pull/578) by [Plommonsorbet](https://github.com/Plommonsorbet))\n\n[0.5.5](https://github.com/casey/just/releases/tag/v0.5.5) - 2020-1-15\n----------------------------------------------------------------------\n\n### Added\n- Generate shell completion scripts with `--completions` ([#572](https://github.com/casey/just/pull/572) by [casey](https://github.com/casey))\n\n### Misc\n- Check long lines and FIXME/TODO on CI ([#575](https://github.com/casey/just/pull/575) by [casey](https://github.com/casey))\n- Add additional continuous integration checks ([#574](https://github.com/casey/just/pull/574) by [casey](https://github.com/casey))\n\n[0.5.4](https://github.com/casey/just/releases/tag/v0.5.4) - 2019-12-25\n-----------------------------------------------------------------------\n\n### Added\n- Add `justfile_directory()` and `justfile()` ([#569](https://github.com/casey/just/pull/569) by [casey](https://github.com/casey))\n\n### Misc\n- Add table of package managers that include just to readme ([#568](https://github.com/casey/just/pull/568) by [casey](https://github.com/casey))\n- Remove yaourt AUR helper from readme ([#567](https://github.com/casey/just/pull/567) by [ky0n](https://github.com/ky0n))\n- Fix regression in error message color printing ([#566](https://github.com/casey/just/pull/566) by [casey](https://github.com/casey))\n- Reform indentation handling ([#565](https://github.com/casey/just/pull/565) by [casey](https://github.com/casey))\n- Update Cargo.lock with new version ([#564](https://github.com/casey/just/pull/564) by [casey](https://github.com/casey))\n\n[0.5.3](https://github.com/casey/just/releases/tag/v0.5.3) - 2019-12-11\n-----------------------------------------------------------------------\n\n### Misc\n- Assert that lexer advances over entire input ([#560](https://github.com/casey/just/pull/560) by [casey](https://github.com/casey))\n- Fix typo: `chracter` -> `character` ([#561](https://github.com/casey/just/pull/561) by [casey](https://github.com/casey))\n- Improve pre-publish check ([#562](https://github.com/casey/just/pull/562) by [casey](https://github.com/casey))\n\n[0.5.2](https://github.com/casey/just/releases/tag/v0.5.2) - 2019-12-7\n----------------------------------------------------------------------\n\n### Added\n- Add flags to set and clear shell arguments ([#551](https://github.com/casey/just/pull/551) by [casey](https://github.com/casey))\n- Allow passing arguments to dependencies ([#555](https://github.com/casey/just/pull/555) by [casey](https://github.com/casey))\n\n### Misc\n- Un-implement Deref for Table ([#546](https://github.com/casey/just/pull/546) by [casey](https://github.com/casey))\n- Resolve recipe dependencies ([#547](https://github.com/casey/just/pull/547) by [casey](https://github.com/casey))\n- Resolve alias targets ([#548](https://github.com/casey/just/pull/548) by [casey](https://github.com/casey))\n- Remove unnecessary type argument to Alias ([#549](https://github.com/casey/just/pull/549) by [casey](https://github.com/casey))\n- Resolve functions ([#550](https://github.com/casey/just/pull/550) by [casey](https://github.com/casey))\n- Reform scope and binding ([#556](https://github.com/casey/just/pull/556) by [casey](https://github.com/casey))\n\n[0.5.1](https://github.com/casey/just/releases/tag/v0.5.1) - 2019-11-20\n-----------------------------------------------------------------------\n\n### Added\n- Add `--init` subcommand ([#541](https://github.com/casey/just/pull/541) by [casey](https://github.com/casey))\n\n### Changed\n- Avoid fs::canonicalize ([#539](https://github.com/casey/just/pull/539) by [casey](https://github.com/casey))\n\n### Misc\n- Mention `set shell` as alternative to installing `sh` ([#533](https://github.com/casey/just/pull/533) by [casey](https://github.com/casey))\n- Refactor Compilation error to contain a Token ([#535](https://github.com/casey/just/pull/535) by [casey](https://github.com/casey))\n- Move lexer comment ([#536](https://github.com/casey/just/pull/536) by [casey](https://github.com/casey))\n- Add missing `--init` test ([#543](https://github.com/casey/just/pull/543) by [casey](https://github.com/casey))\n\n[0.5.0](https://github.com/casey/just/releases/tag/v0.5.0) - 2019-11-12\n-----------------------------------------------------------------------\n\n### Added\n\n- Add `set shell := [...]` to grammar ([#526](https://github.com/casey/just/pull/526) by [casey](https://github.com/casey))\n- Add `shell` setting ([#525](https://github.com/casey/just/pull/525) by [casey](https://github.com/casey))\n- Document settings in readme ([#527](https://github.com/casey/just/pull/527) by [casey](https://github.com/casey))\n\n### Changed\n- Reform positional argument parsing ([#523](https://github.com/casey/just/pull/523) by [casey](https://github.com/casey))\n- Highlight echoed recipe lines in bold by default ([#512](https://github.com/casey/just/pull/512) by [casey](https://github.com/casey))\n\n### Misc\n\n- Gargantuan refactor ([#522](https://github.com/casey/just/pull/522) by [casey](https://github.com/casey))\n- Move subcommand execution into Subcommand ([#514](https://github.com/casey/just/pull/514) by [casey](https://github.com/casey))\n- Move `cd` out of Config::from_matches ([#513](https://github.com/casey/just/pull/513) by [casey](https://github.com/casey))\n- Remove now-unnecessary borrow checker appeasement ([#511](https://github.com/casey/just/pull/511) by [casey](https://github.com/casey))\n- Reform Parser ([#509](https://github.com/casey/just/pull/509) by [casey](https://github.com/casey))\n- Note need to publish with nightly cargo ([#506](https://github.com/casey/just/pull/506) by [casey](https://github.com/casey))\n\n[0.4.5](https://github.com/casey/just/releases/tag/v0.4.5) - 2019-10-31\n-----------------------------------------------------------------------\n\n### User-visible\n\n### Changed\n- Display alias with `--show NAME` if one exists ([#466](https://github.com/casey/just/pull/466) by [casey](https://github.com/casey))\n\n### Documented\n- Document multi-line constructs (for/if/while) ([#453](https://github.com/casey/just/pull/453) by [casey](https://github.com/casey))\n- Generate man page with help2man ([#463](https://github.com/casey/just/pull/463) by [casey](https://github.com/casey))\n- Add context to deprecation warnings ([#473](https://github.com/casey/just/pull/473) by [casey](https://github.com/casey))\n- Improve messages for alias error messages ([#500](https://github.com/casey/just/pull/500) by [casey](https://github.com/casey))\n\n### Misc\n\n### Cleanup\n- Update deprecated rust range patterns and clippy config ([#450](https://github.com/casey/just/pull/450) by [light4](https://github.com/light4))\n- Make comments in common.rs lowercase ([#470](https://github.com/casey/just/pull/470) by [casey](https://github.com/casey))\n- Use `pub(crate)` instead of `pub` ([#471](https://github.com/casey/just/pull/471) by [casey](https://github.com/casey))\n- Hide summary functionality behind feature flag ([#472](https://github.com/casey/just/pull/472) by [casey](https://github.com/casey))\n- Fix `summary` feature conditional compilation ([#475](https://github.com/casey/just/pull/475) by [casey](https://github.com/casey))\n- Allow integration test cases to omit common values ([#480](https://github.com/casey/just/pull/480) by [casey](https://github.com/casey))\n- Add `unindent()` for nicer integration test strings ([#481](https://github.com/casey/just/pull/481) by [casey](https://github.com/casey))\n- Start pulling argument parsing out of run::run() ([#483](https://github.com/casey/just/pull/483) by [casey](https://github.com/casey))\n- Add explicit `Subcommand` enum ([#484](https://github.com/casey/just/pull/484) by [casey](https://github.com/casey))\n- Avoid using error code `1` in integration tests ([#486](https://github.com/casey/just/pull/486) by [casey](https://github.com/casey))\n- Use more indented strings in integration tests ([#489](https://github.com/casey/just/pull/489) by [casey](https://github.com/casey))\n- Refactor `run::run` and Config ([#490](https://github.com/casey/just/pull/490) by [casey](https://github.com/casey))\n- Remove `misc.rs` ([#491](https://github.com/casey/just/pull/491) by [casey](https://github.com/casey))\n- Remove unused `use` statements ([#497](https://github.com/casey/just/pull/497) by [casey](https://github.com/casey))\n- Refactor lexer tests ([#498](https://github.com/casey/just/pull/498) by [casey](https://github.com/casey))\n- Use constants instead of literals in arg parser ([#504](https://github.com/casey/just/pull/504) by [casey](https://github.com/casey))\n\n### Infrastructure\n- Add repository attribute to Cargo.toml ([#493](https://github.com/casey/just/pull/493) by [SOF3](https://github.com/SOF3))\n- Check minimal version compatibility before publishing ([#487](https://github.com/casey/just/pull/487) by [casey](https://github.com/casey))\n\n### Continuous Integration\n- Disable FreeBSD builds ([#474](https://github.com/casey/just/pull/474) by [casey](https://github.com/casey))\n- Use `bash` as shell for all integration tests ([#479](https://github.com/casey/just/pull/479) by [casey](https://github.com/casey))\n- Don't install `dash` on Travis ([#482](https://github.com/casey/just/pull/482) by [casey](https://github.com/casey))\n\n### Dependencies\n- Use `tempfile` crate instead of `tempdir` ([#455](https://github.com/casey/just/pull/455) by [NickeZ](https://github.com/NickeZ))\n- Bump clap dependency to 2.33.0 ([#458](https://github.com/casey/just/pull/458) by [NickeZ](https://github.com/NickeZ))\n- Minimize dependency version requirements ([#461](https://github.com/casey/just/pull/461) by [casey](https://github.com/casey))\n- Remove dependency on brev ([#462](https://github.com/casey/just/pull/462) by [casey](https://github.com/casey))\n- Update dependencies ([#501](https://github.com/casey/just/pull/501) by [casey](https://github.com/casey))\n\n[0.4.4](https://github.com/casey/just/releases/tag/v0.4.4) - 2019-06-02\n-----------------------------------------------------------------------\n\n### Changed\n- Ignore file name case while searching for justfile ([#436](https://github.com/casey/just/pull/436) by [shevtsiv](https://github.com/shevtsiv))\n\n### Added\n- Display alias target with `--show` ([#443](https://github.com/casey/just/pull/443) by [casey](https://github.com/casey))\n\n[0.4.3](https://github.com/casey/just/releases/tag/v0.4.3) - 2019-05-07\n-----------------------------------------------------------------------\n\n### Changed\n- Deprecate `=` in assignments, aliases, and exports in favor of `:=` ([#413](https://github.com/casey/just/pull/413) by [casey](https://github.com/casey))\n\n### Added\n- Pass stdin handle to backtick process ([#409](https://github.com/casey/just/pull/409) by [casey](https://github.com/casey))\n\n### Documented\n- Fix readme command line ([#411](https://github.com/casey/just/pull/411) by [casey](https://github.com/casey))\n- Typo: \"command equivelant\" -> \"command equivalent\" ([#418](https://github.com/casey/just/pull/418) by [casey](https://github.com/casey))\n- Mention Make’s “phony target” workaround in the comparison ([#421](https://github.com/casey/just/pull/421) by [roryokane](https://github.com/roryokane))\n- Add Void Linux install instructions to readme ([#423](https://github.com/casey/just/pull/423) by [casey](https://github.com/casey))\n\n### Cleaned up or Refactored\n- Remove stray source files ([#408](https://github.com/casey/just/pull/408) by [casey](https://github.com/casey))\n- Replace some calls to brev crate ([#410](https://github.com/casey/just/pull/410) by [casey](https://github.com/casey))\n- Lexer code deduplication and refactoring ([#414](https://github.com/casey/just/pull/414) by [casey](https://github.com/casey))\n- Refactor and rename test macros ([#415](https://github.com/casey/just/pull/415) by [casey](https://github.com/casey))\n- Move CompilationErrorKind into separate module ([#416](https://github.com/casey/just/pull/416) by [casey](https://github.com/casey))\n- Remove `write_token_error_context` ([#417](https://github.com/casey/just/pull/417) by [casey](https://github.com/casey))\n\n[0.4.2](https://github.com/casey/just/releases/tag/v0.4.2) - 2019-04-12\n-----------------------------------------------------------------------\n\n### Changed\n- Regex-based lexer replaced with much nicer character-at-a-time lexer ([#406](https://github.com/casey/just/pull/406) by [casey](https://github.com/casey))\n\n[0.4.1](https://github.com/casey/just/releases/tag/v0.4.1) - 2019-04-12\n-----------------------------------------------------------------------\n\n### Changed\n- Make summary function non-generic ([#404](https://github.com/casey/just/pull/404) by [casey](https://github.com/casey))\n\n[0.4.0](https://github.com/casey/just/releases/tag/v0.4.0) - 2019-04-12\n-----------------------------------------------------------------------\n\n### Added\n- Add recipe aliases ([#390](https://github.com/casey/just/pull/390) by [ryloric](https://github.com/ryloric))\n- Allow arbitrary expressions as default arguments ([#400](https://github.com/casey/just/pull/400) by [casey](https://github.com/casey))\n- Add justfile summaries ([#399](https://github.com/casey/just/pull/399) by [casey](https://github.com/casey))\n- Allow outer shebang lines so justfiles can be used as scripts ([#393](https://github.com/casey/just/pull/393) by [casey](https://github.com/casey))\n- Allow `--justfile` without `--working-directory` ([#392](https://github.com/casey/just/pull/392) by [smonami](https://github.com/smonami))\n- Add link to Chinese translation of readme by chinanf-boy ([#377](https://github.com/casey/just/pull/377) by [casey](https://github.com/casey))\n\n### Changed\n- Upgrade to Rust 2018 ([#394](https://github.com/casey/just/pull/394) by [casey](https://github.com/casey))\n- Format the codebase with rustfmt ([#346](https://github.com/casey/just/pull/346) by [casey](https://github.com/casey))\n\n[0.3.13](https://github.com/casey/just/releases/tag/v0.3.13) - 2018-11-06\n-------------------------------------------------------------------------\n\n### Added\n- Print recipe signature if missing arguments ([#369](https://github.com/casey/just/pull/369) by [ladysamantha](https://github.com/ladysamantha))\n- Add grandiloquent verbosity level that echos shebang recipes ([#348](https://github.com/casey/just/pull/348) by [casey](https://github.com/casey))\n- Wait for child processes to finish ([#345](https://github.com/casey/just/pull/345) by [casey](https://github.com/casey))\n- Improve invalid escape sequence error messages ([#328](https://github.com/casey/just/pull/328) by [casey](https://github.com/casey))\n\n### Fixed\n- Use PutBackN instead of PutBack in parser ([#364](https://github.com/casey/just/pull/364) by [casey](https://github.com/casey))\n\n[0.3.12](https://github.com/casey/just/releases/tag/v0.3.12) - 2018-06-19\n-------------------------------------------------------------------------\n\n### Added\n- Implemented invocation_directory function ([#323](https://github.com/casey/just/pull/323) by [casey](https://github.com/casey))\n\n[0.3.11](https://github.com/casey/just/releases/tag/v0.3.11) - 2018-05-6\n------------------------------------------------------------------------\n\n### Fixed\n- Fixed colors on windows ([#317](https://github.com/casey/just/pull/317) by [casey](https://github.com/casey))\n\n[0.3.10](https://github.com/casey/just/releases/tag/v0.3.10) - 2018-3-19\n------------------------------------------------------------------------\n\n### Added\n- Make .env vars available in env_var functions ([#310](https://github.com/casey/just/pull/310) by [casey](https://github.com/casey))\n\n[0.3.8](https://github.com/casey/just/releases/tag/v0.3.8) - 2018-3-5\n---------------------------------------------------------------------\n\n### Added\n- Add dotenv integration ([#306](https://github.com/casey/just/pull/306) by [casey](https://github.com/casey))\n\n[0.3.7](https://github.com/casey/just/releases/tag/v0.3.7) - 2017-12-11\n-----------------------------------------------------------------------\n\n### Fixed\n- Fix error if ! appears in comment ([#296](https://github.com/casey/just/pull/296) by [casey](https://github.com/casey))\n\n[0.3.6](https://github.com/casey/just/releases/tag/v0.3.6) - 2017-12-11\n-----------------------------------------------------------------------\n\n### Fixed\n- Lex CRLF line endings properly ([#292](https://github.com/casey/just/pull/292) by [casey](https://github.com/casey))\n\n[0.3.5](https://github.com/casey/just/releases/tag/v0.3.5) - 2017-12-11\n-----------------------------------------------------------------------\n\n### Added\n- Align doc-comments in `--list` output ([#273](https://github.com/casey/just/pull/273) by [casey](https://github.com/casey))\n- Add `arch()`, `os()`, and `os_family()` functions ([#277](https://github.com/casey/just/pull/277) by [casey](https://github.com/casey))\n- Add `env_var(key)` and `env_var_or_default(key, default)` functions ([#280](https://github.com/casey/just/pull/280) by [casey](https://github.com/casey))\n\n[0.3.4](https://github.com/casey/just/releases/tag/v0.3.4) - 2017-10-06\n-----------------------------------------------------------------------\n\n### Added\n- Do not evaluate backticks in assignments during dry runs ([#253](https://github.com/casey/just/pull/253) by [aoeu](https://github.com/aoeu))\n\n### Changed\n- Change license to CC0 going forward ([#270](https://github.com/casey/just/pull/270) by [casey](https://github.com/casey))\n\n[0.3.1](https://github.com/casey/just/releases/tag/v0.3.1) - 2017-10-06\n-----------------------------------------------------------------------\n\n### Added\n- Started keeping a changelog in CHANGELOG.md ([#220](https://github.com/casey/just/pull/220) by [casey](https://github.com/casey))\n- Recipes whose names begin with an underscore will not appear in `--list` or `--summary` ([#229](https://github.com/casey/just/pull/229) by [casey](https://github.com/casey))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3017578125,
          "content": "Contributing\n============\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you shall be licensed as in [LICENSE](LICENSE),\nwithout any additional terms or conditions.\n\nSee [the readme](README.md#contributing) for contribution workflow suggestions.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 35.5234375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blake3\"\nversion = \"1.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8ee0c1824c4dea5b5f81736aff91bae041d2c07ee1192bec91054e10e3e601e\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"cc\",\n \"cfg-if\",\n \"constant_time_eq\",\n \"memmap2\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a68f1f47cdf0ec8ee4b941b2eee2a80cb796db73118c0dd09ac63fbe405be22\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27f657647bcff5394bf56c7317665bbf790a137a50eaaa5c6bfbb9e27a518f2d\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9647a559c112175f17cf724dc72d3645680a883c58481332779192b0d8e7a01\"\ndependencies = [\n \"clap\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"clap_mangen\"\nversion = \"0.2.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbae9cbfdc5d4fa8711c09bd7b83f644cb48281ac35bf97af3e47b0675864bdf\"\ndependencies = [\n \"clap\",\n \"roff\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6\"\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"ctrlc\"\nversion = \"3.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90eeab0aa92f3f9b4e87f258c72b139c207d251f9cbc1080a0086b86a8870dd3\"\ndependencies = [\n \"nix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"derive-where\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62d671cc41a825ebabc75757b62d3d168c577f9149b2d49ece1dad1f72119d25\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"dotenvy\"\nversion = \"0.15.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b\"\n\n[[package]]\nname = \"edit-distance\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3f497e87b038c09a155dfd169faa5ec940d0644635555ef6bd464ac20e97397\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"executable-path\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ebc5a6d89e3c90b84e8f33c8737933dda8f1c106b5415900b38b9d433841478\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"generate-book\"\nversion = \"0.0.0\"\ndependencies = [\n \"pulldown-cmark\",\n \"pulldown-cmark-to-cmark\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"just\"\nversion = \"1.38.0\"\ndependencies = [\n \"ansi_term\",\n \"blake3\",\n \"camino\",\n \"chrono\",\n \"clap\",\n \"clap_complete\",\n \"clap_mangen\",\n \"ctrlc\",\n \"derive-where\",\n \"dirs\",\n \"dotenvy\",\n \"edit-distance\",\n \"executable-path\",\n \"heck\",\n \"lexiclean\",\n \"libc\",\n \"num_cpus\",\n \"once_cell\",\n \"percent-encoding\",\n \"pretty_assertions\",\n \"rand\",\n \"regex\",\n \"rustversion\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"shellexpand\",\n \"similar\",\n \"snafu\",\n \"strum\",\n \"target\",\n \"tempfile\",\n \"temptree\",\n \"typed-arena\",\n \"unicode-width 0.2.0\",\n \"uuid\",\n \"which\",\n]\n\n[[package]]\nname = \"lexiclean\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"441225017b106b9f902e97947a6d31e44ebcf274b91bdbfb51e5c477fcd468e5\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.168\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aaeb2981e0606ca11d79718f8bb01164f1d6ed75080182d3abf017e6d244b6d\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ae130e2f271fbc2ac3a40fb1d07180839cdbbe443c7a27e1e3c13c5cac0116d\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"pulldown-cmark\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57206b407293d2bcd3af849ce869d52068623f19e1b5ff8e8778e3309439682b\"\ndependencies = [\n \"bitflags\",\n \"getopts\",\n \"memchr\",\n \"unicase\",\n]\n\n[[package]]\nname = \"pulldown-cmark-to-cmark\"\nversion = \"10.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0194e6e1966c23cc5fd988714f85b18d548d773e81965413555d96569931833d\"\ndependencies = [\n \"pulldown-cmark\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"roff\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88f8660c1ff60292143c98d08fc6e2f654d722db50410e3f3797d40baaf9d8f3\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.133\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fceb2473b9166b2294ef05efcb65a3db80803f0b03ef86a5fc88a2b85ee377\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shellexpand\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da03fa3b94cc19e3ebfc88c4229c49d8f08cdbd1228870a45f0ffdf84988e14b\"\ndependencies = [\n \"dirs\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\ndependencies = [\n \"bstr\",\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"snafu\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"223891c85e2a29c3fe8fb900c1fae5e69c2e42415e3177752e8718475efa5019\"\ndependencies = [\n \"snafu-derive\",\n]\n\n[[package]]\nname = \"snafu-derive\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03c3c6b7927ffe7ecaa769ee0e3994da3b8cafc8f444578982c83ecb161af917\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"919d3b74a5dd0ccd15aeb8f93e7006bd9e14c295087c9896a110f490752bcf31\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"target\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e8f05f774b2db35bdad5a8237a90be1102669f8ea013fea9777b366d34ab145\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"temptree\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fda94d8251b40088cb769576f436da19ac1d1ae792c97d0afe1cadc890c8630\"\ndependencies = [\n \"tempfile\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5352447f921fda68cf61b4101566c0bdb5104eff6804d0678e5227580ab6a4e9\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"typed-arena\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6af6ae20167a9ece4bcb41af5b80f8a1f1df981f6391189ce00fd257af04126a\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e51b68083f157f853b6379db119d1c1be0e6e4dec98101079dec41f6f5cf6df\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"update-contributors\"\nversion = \"0.0.0\"\ndependencies = [\n \"regex\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"which\"\nversion = \"7.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9cad3279ade7346b96e38731a641d7343dd6a53d55083dd54eadfa5a1b38c6b\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.4189453125,
          "content": "[package]\nname = \"just\"\nversion = \"1.38.0\"\nauthors = [\"Casey Rodarmor <casey@rodarmor.com>\"]\nautotests = false\ncategories = [\"command-line-utilities\", \"development-tools\"]\ndescription = \"🤖 Just a command runner\"\nedition = \"2021\"\nexclude = [\"/book\", \"/icon.png\", \"/screenshot.png\", \"/www\"]\nhomepage = \"https://github.com/casey/just\"\nkeywords = [\"command-line\", \"task\", \"runner\", \"development\", \"utility\"]\nlicense = \"CC0-1.0\"\nreadme = \"crates-io-readme.md\"\nrepository = \"https://github.com/casey/just\"\nrust-version = \"1.74\"\n\n[workspace]\nmembers = [\".\", \"crates/*\"]\n\n[dependencies]\nansi_term = \"0.12.0\"\nblake3 = { version = \"1.5.0\", features = [\"rayon\", \"mmap\"] }\ncamino = \"1.0.4\"\nchrono = \"0.4.38\"\nclap = { version = \"4.0.0\", features = [\"derive\", \"env\", \"wrap_help\"] }\nclap_complete = \"4.0.0\"\nclap_mangen = \"0.2.20\"\nctrlc = { version = \"3.1.1\", features = [\"termination\"] }\nderive-where = \"1.2.7\"\ndirs = \"5.0.1\"\ndotenvy = \"0.15\"\nedit-distance = \"2.0.0\"\nheck = \"0.5.0\"\nlexiclean = \"0.0.1\"\nlibc = \"0.2.0\"\nnum_cpus = \"1.15.0\"\nonce_cell = \"1.19.0\"\npercent-encoding = \"2.3.1\"\nrand = \"0.8.5\"\nregex = \"1.10.4\"\nrustversion = \"1.0.18\"\nsemver = \"1.0.20\"\nserde = { version = \"1.0.130\", features = [\"derive\", \"rc\"] }\nserde_json = \"1.0.68\"\nsha2 = \"0.10\"\nshellexpand = \"3.1.0\"\nsimilar = { version = \"2.1.0\", features = [\"unicode\"] }\nsnafu = \"0.8.0\"\nstrum = { version = \"0.26.0\", features = [\"derive\"] }\ntarget = \"2.0.0\"\ntempfile = \"3.0.0\"\ntyped-arena = \"2.0.1\"\nunicode-width = \"0.2.0\"\nuuid = { version = \"1.0.0\", features = [\"v4\"] }\n\n[dev-dependencies]\nexecutable-path = \"1.0.0\"\npretty_assertions = \"1.0.0\"\ntemptree = \"0.2.0\"\nwhich = \"7.0.0\"\n\n[lints.rust]\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(fuzzing)'] }\n\n[lints.clippy]\nall = { level = \"deny\", priority = -1 }\nenum_glob_use = \"allow\"\nneedless_pass_by_value = \"allow\"\npedantic = { level = \"deny\", priority = -1 }\nsimilar_names = \"allow\"\nstruct_excessive_bools = \"allow\"\nstruct_field_names = \"allow\"\ntoo_many_arguments = \"allow\"\ntoo_many_lines = \"allow\"\nunnecessary_wraps = \"allow\"\nwildcard_imports = \"allow\"\n\n[lib]\ndoctest = false\n\n[[bin]]\npath = \"src/main.rs\"\nname = \"just\"\ntest = false\n\n# The public documentation is minimal and doesn't change between\n# platforms, so we only build them for linux on docs.rs to save\n# their build machines some cycles.\n[package.metadata.docs.rs]\ntargets = [\"x86_64-unknown-linux-gnu\"]\n\n[profile.release]\nlto = true\ncodegen-units = 1\n\n[[test]]\nname = \"integration\"\npath = \"tests/lib.rs\"\n"
        },
        {
          "name": "GRAMMAR.md",
          "type": "blob",
          "size": 3.896484375,
          "content": "justfile grammar\n================\n\nJustfiles are processed by a mildly context-sensitive tokenizer\nand a recursive descent parser. The grammar is LL(k), for an\nunknown but hopefully reasonable value of k.\n\ntokens\n------\n\n```\nBACKTICK            = `[^`]*`\nINDENTED_BACKTICK   = ```[^(```)]*```\nCOMMENT             = #([^!].*)?$\nDEDENT              = emitted when indentation decreases\nEOF                 = emitted at the end of the file\nINDENT              = emitted when indentation increases\nLINE                = emitted before a recipe line\nNAME                = [a-zA-Z_][a-zA-Z0-9_-]*\nNEWLINE             = \\n|\\r\\n\nRAW_STRING          = '[^']*'\nINDENTED_RAW_STRING = '''[^(''')]*'''\nSTRING              = \"[^\"]*\" # also processes \\n \\r \\t \\\" \\\\ escapes\nINDENTED_STRING     = \"\"\"[^(\"\"\")]*\"\"\" # also processes \\n \\r \\t \\\" \\\\ escapes\nLINE_PREFIX         = @-|-@|@|-\nTEXT                = recipe text, only matches in a recipe body\n```\n\ngrammar syntax\n--------------\n\n```\n|   alternation\n()  grouping\n_?  option (0 or 1 times)\n_*  repetition (0 or more times)\n_+  repetition (1 or more times)\n```\n\ngrammar\n-------\n\n```\njustfile      : item* EOF\n\nitem          : alias\n              | assignment\n              | eol\n              | export\n              | import\n              | module\n              | recipe\n              | set\n\neol           : NEWLINE\n              | COMMENT NEWLINE\n\nalias         : 'alias' NAME ':=' NAME eol\n\nassignment    : NAME ':=' expression eol\n\nexport        : 'export' assignment\n\nset           : 'set' setting eol\n\nsetting       : 'allow-duplicate-recipes' boolean?\n              | 'allow-duplicate-variables' boolean?\n              | 'dotenv-filename' ':=' string\n              | 'dotenv-load' boolean?\n              | 'dotenv-path' ':=' string\n              | 'dotenv-required' boolean?\n              | 'export' boolean?\n              | 'fallback' boolean?\n              | 'ignore-comments' boolean?\n              | 'positional-arguments' boolean?\n              | 'script-interpreter' ':=' string_list\n              | 'quiet' boolean?\n              | 'shell' ':=' string_list\n              | 'tempdir' ':=' string\n              | 'unstable' boolean?\n              | 'windows-powershell' boolean?\n              | 'windows-shell' ':=' string_list\n              | 'working-directory' ':=' string\n\nboolean       : ':=' ('true' | 'false')\n\nstring_list   : '[' string (',' string)* ','? ']'\n\nimport        : 'import' '?'? string? eol\n\nmodule        : 'mod' '?'? NAME string? eol\n\nexpression    : disjunct || expression\n              | disjunct\n\ndisjunct      : conjunct && disjunct\n              | conjunct\n\nconjunct      : 'if' condition '{' expression '}' 'else' '{' expression '}'\n              | 'assert' '(' condition ',' expression ')'\n              | '/' expression\n              | value '/' expression\n              | value '+' expression\n              | value\n\ncondition     : expression '==' expression\n              | expression '!=' expression\n              | expression '=~' expression\n\nvalue         : NAME '(' sequence? ')'\n              | BACKTICK\n              | INDENTED_BACKTICK\n              | NAME\n              | string\n              | '(' expression ')'\n\nstring        : 'x'? STRING\n              | 'x'? INDENTED_STRING\n              | 'x'? RAW_STRING\n              | 'x'? INDENTED_RAW_STRING\n\nsequence      : expression ',' sequence\n              | expression ','?\n\nrecipe        : attributes* '@'? NAME parameter* variadic? ':' dependencies eol body?\n\nattributes    : '[' attribute* ']' eol\n\nattribute     : NAME ( '(' string ')' )?\n\nparameter     : '$'? NAME\n              | '$'? NAME '=' value\n\nvariadic      : '*' parameter\n              | '+' parameter\n\ndependencies  : dependency* ('&&' dependency+)?\n\ndependency    : NAME\n              | '(' NAME expression* ')'\n\nbody          : INDENT line+ DEDENT\n\nline          : LINE LINE_PREFIX? (TEXT | interpolation)+ NEWLINE\n              | NEWLINE\n\ninterpolation : '{{' expression '}}'\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.8828125,
          "content": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 115.796875,
          "content": "<div align=right>Table of Contents↗️</div>\n\n<h1 align=center><code>just</code></h1>\n\n<div align=center>\n  <a href=https://crates.io/crates/just>\n    <img src=https://img.shields.io/crates/v/just.svg alt=\"crates.io version\">\n  </a>\n  <a href=https://github.com/casey/just/actions>\n    <img src=https://github.com/casey/just/actions/workflows/ci.yaml/badge.svg alt=\"build status\">\n  </a>\n  <a href=https://github.com/casey/just/releases>\n    <img src=https://img.shields.io/github/downloads/casey/just/total.svg alt=downloads>\n  </a>\n  <a href=https://discord.gg/ezYScXR>\n    <img src=https://img.shields.io/discord/695580069837406228?logo=discord alt=\"chat on discord\">\n  </a>\n  <a href=mailto:casey@rodarmor.com?subject=Thanks%20for%20Just!>\n    <img src=https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg alt=\"say thanks\">\n  </a>\n</div>\n<br>\n\n`just` is a handy way to save and run project-specific commands.\n\nThis readme is also available as a [book](https://just.systems/man/en/). The\nbook reflects the latest release, whereas the\n[readme on GitHub](https://github.com/casey/just/blob/master/README.md)\nreflects latest master.\n\n(中文文档在 [这里](https://github.com/casey/just/blob/master/README.中文.md),\n快看过来!)\n\nCommands, called recipes, are stored in a file called `justfile` with syntax\ninspired by `make`:\n\n![screenshot](https://raw.githubusercontent.com/casey/just/master/screenshot.png)\n\nYou can then run them with `just RECIPE`:\n\n```console\n$ just test-all\ncc *.c -o main\n./test --all\nYay, all your tests passed!\n```\n\n`just` has a ton of useful features, and many improvements over `make`:\n\n- `just` is a command runner, not a build system, so it avoids much of\n  [`make`'s complexity and idiosyncrasies](#what-are-the-idiosyncrasies-of-make-that-just-avoids).\n  No need for `.PHONY` recipes!\n\n- Linux, MacOS, Windows, and other reasonable unices are supported with no\n  additional dependencies. (Although if your system doesn't have an `sh`,\n  you'll need to [choose a different shell](#shell).)\n\n- Errors are specific and informative, and syntax errors are reported along\n  with their source context.\n\n- Recipes can accept [command line arguments](#recipe-parameters).\n\n- Wherever possible, errors are resolved statically. Unknown recipes and\n  circular dependencies are reported before anything runs.\n\n- `just` [loads `.env` files](#dotenv-settings), making it easy to populate\n  environment variables.\n\n- Recipes can be [listed from the command line](#listing-available-recipes).\n\n- Command line completion scripts are\n  [available for most popular shells](#shell-completion-scripts).\n\n- Recipes can be written in\n  [arbitrary languages](#shebang-recipes), like Python or NodeJS.\n\n- `just` can be invoked from any subdirectory, not just the directory that\n  contains the `justfile`.\n\n- And [much more](https://just.systems/man/en/)!\n\nIf you need help with `just` please feel free to open an issue or ping me on\n[Discord](https://discord.gg/ezYScXR). Feature requests and bug reports are\nalways welcome!\n\nInstallation\n------------\n\n### Prerequisites\n\n`just` should run on any system with a reasonable `sh`, including Linux, MacOS,\nand the BSDs.\n\nOn Windows, `just` works with the `sh` provided by\n[Git for Windows](https://git-scm.com),\n[GitHub Desktop](https://desktop.github.com), or\n[Cygwin](http://www.cygwin.com).\n\nIf you'd rather not install `sh`, you can use the `shell` setting to use the\nshell of your choice.\n\nLike PowerShell:\n\n```just\n# use PowerShell instead of sh:\nset shell := [\"powershell.exe\", \"-c\"]\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\n…or `cmd.exe`:\n\n```just\n# use cmd.exe instead of sh:\nset shell := [\"cmd.exe\", \"/c\"]\n\nlist:\n  dir\n```\n\nYou can also set the shell using command-line arguments. For example, to use\nPowerShell, launch `just` with `--shell powershell.exe --shell-arg -c`.\n\n(PowerShell is installed by default on Windows 7 SP1 and Windows Server 2008 R2\nS1 and later, and `cmd.exe` is quite fiddly, so PowerShell is recommended for\nmost Windows users.)\n\n### Packages\n\n#### Cross-platform\n\n<table>\n  <thead>\n    <tr>\n      <th>Package Manager</th>\n      <th>Package</th>\n      <th>Command</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=https://asdf-vm.com>asdf</a></td>\n      <td><a href=https://github.com/olofvndrhr/asdf-just>just</a></td>\n      <td>\n        <code>asdf plugin add just</code><br>\n        <code>asdf install just &lt;version&gt;</code>\n      </td>\n    </tr>\n    <tr>\n      <td><a href=https://www.rust-lang.org>Cargo</a></td>\n      <td><a href=https://crates.io/crates/just>just</a></td>\n      <td><code>cargo install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://docs.conda.io/projects/conda/en/latest/index.html>Conda</a></td>\n      <td><a href=https://anaconda.org/conda-forge/just>just</a></td>\n      <td><code>conda install -c conda-forge just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://brew.sh>Homebrew</a></td>\n      <td><a href=https://formulae.brew.sh/formula/just>just</a></td>\n      <td><code>brew install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://nixos.org/nix/>Nix</a></td>\n      <td><a href=https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/ju/just/package.nix>just</a></td>\n      <td><code>nix-env -iA nixpkgs.just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://www.npmjs.com/>npm</a></td>\n      <td><a href=https://www.npmjs.com/package/rust-just>rust-just</a></td>\n      <td><code>npm install -g rust-just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://pypi.org/>PyPI</a></td>\n      <td><a href=https://pypi.org/project/rust-just/>rust-just</a></td>\n      <td><code>pipx install rust-just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://snapcraft.io>Snap</a></td>\n      <td><a href=https://snapcraft.io/just>just</a></td>\n      <td><code>snap install --edge --classic just</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### BSD\n\n<table>\n  <thead>\n    <tr>\n      <th>Operating System</th>\n      <th>Package Manager</th>\n      <th>Package</th>\n      <th>Command</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=https://www.freebsd.org>FreeBSD</a></td>\n      <td><a href=https://www.freebsd.org/doc/handbook/pkgng-intro.html>pkg</a></td>\n      <td><a href=https://www.freshports.org/deskutils/just/>just</a></td>\n      <td><code>pkg install just</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### Linux\n\n<table>\n  <thead>\n    <tr>\n      <th>Operating System</th>\n      <th>Package Manager</th>\n      <th>Package</th>\n      <th>Command</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=https://alpinelinux.org>Alpine</a></td>\n      <td><a href=https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management>apk-tools</a></td>\n      <td><a href=https://pkgs.alpinelinux.org/package/edge/community/x86_64/just>just</a></td>\n      <td><code>apk add just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://www.archlinux.org>Arch</a></td>\n      <td><a href=https://wiki.archlinux.org/title/Pacman>pacman</a></td>\n      <td><a href=https://archlinux.org/packages/extra/x86_64/just/>just</a></td>\n      <td><code>pacman -S just</code></td>\n    </tr>\n    <tr>\n      <td>\n        <a href=https://debian.org>Debian 13 (unreleased)</a> and\n        <a href=https://ubuntu.com>Ubuntu 24.04</a> derivatives</td>\n      <td><a href=https://en.wikipedia.org/wiki/APT_(software)>apt</a></td>\n      <td><a href=https://packages.debian.org/trixie/just>just</a></td>\n      <td><code>apt install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://debian.org>Debian</a> and <a href=https://ubuntu.com>Ubuntu</a> derivatives</td>\n      <td><a href=https://mpr.makedeb.org>MPR</a></td>\n      <td><a href=https://mpr.makedeb.org/packages/just>just</a></td>\n      <td>\n        <code>git clone https://mpr.makedeb.org/just</code><br>\n        <code>cd just</code><br>\n        <code>makedeb -si</code>\n      </td>\n    </tr>\n    <tr>\n      <td><a href=https://debian.org>Debian</a> and <a href=https://ubuntu.com>Ubuntu</a> derivatives</td>\n      <td><a href=https://docs.makedeb.org/prebuilt-mpr>Prebuilt-MPR</a></td>\n      <td><a href=https://mpr.makedeb.org/packages/just>just</a></td>\n      <td>\n        <sup><b>You must have the <a href=https://docs.makedeb.org/prebuilt-mpr/getting-started/#setting-up-the-repository>Prebuilt-MPR set up</a> on your system in order to run this command.</b></sup><br>\n        <code>apt install just</code>\n      </td>\n    </tr>\n    <tr>\n      <td><a href=https://getfedora.org>Fedora</a></td>\n      <td><a href=https://dnf.readthedocs.io/en/latest/>DNF</a></td>\n      <td><a href=https://src.fedoraproject.org/rpms/rust-just>just</a></td>\n      <td><code>dnf install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://www.gentoo.org>Gentoo</a></td>\n      <td><a href=https://wiki.gentoo.org/wiki/Portage>Portage</a></td>\n      <td><a href=https://github.com/gentoo-mirror/guru/tree/master/dev-build/just>guru/dev-build/just</a></td>\n      <td>\n        <code>eselect repository enable guru</code><br>\n        <code>emerge --sync guru</code><br>\n        <code>emerge dev-build/just</code>\n      </td>\n    </tr>\n    <tr>\n      <td><a href=https://nixos.org/nixos/>NixOS</a></td>\n      <td><a href=https://nixos.org/nix/>Nix</a></td>\n      <td><a href=https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/ju/just/package.nix>just</a></td>\n      <td><code>nix-env -iA nixos.just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://opensuse.org>openSUSE</a></td>\n      <td><a href=https://en.opensuse.org/Portal:Zypper>Zypper</a></td>\n      <td><a href=https://build.opensuse.org/package/show/Base:System/just>just</a></td>\n      <td><code>zypper in just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://getsol.us>Solus</a></td>\n      <td><a href=https://getsol.us/articles/package-management/basics/en>eopkg</a></td>\n      <td><a href=https://dev.getsol.us/source/just/>just</a></td>\n      <td><code>eopkg install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://voidlinux.org>Void</a></td>\n      <td><a href=https://wiki.voidlinux.org/XBPS>XBPS</a></td>\n      <td><a href=https://github.com/void-linux/void-packages/blob/master/srcpkgs/just/template>just</a></td>\n      <td><code>xbps-install -S just</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### Windows\n\n<table>\n  <thead>\n    <tr>\n      <th>Package Manager</th>\n      <th>Package</th>\n      <th>Command</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=https://chocolatey.org>Chocolatey</a></td>\n      <td><a href=https://github.com/michidk/just-choco>just</a></td>\n      <td><code>choco install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://scoop.sh>Scoop</a></td>\n      <td><a href=https://github.com/ScoopInstaller/Main/blob/master/bucket/just.json>just</a></td>\n      <td><code>scoop install just</code></td>\n    </tr>\n    <tr>\n      <td><a href=https://learn.microsoft.com/en-us/windows/package-manager/>Windows Package Manager</a></td>\n      <td><a href=https://github.com/microsoft/winget-pkgs/tree/master/manifests/c/Casey/Just>Casey/Just</a></td>\n      <td><code>winget install --id Casey.Just --exact</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### macOS\n\n<table>\n  <thead>\n    <tr>\n      <th>Package Manager</th>\n      <th>Package</th>\n      <th>Command</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=https://www.macports.org>MacPorts</a></td>\n      <td><a href=https://ports.macports.org/port/just/summary>just</a></td>\n      <td><code>port install just</code></td>\n    </tr>\n  </tbody>\n</table>\n\n![just package version table](https://repology.org/badge/vertical-allrepos/just.svg)\n\n![rust:just package version table](https://repology.org/badge/vertical-allrepos/rust:just.svg)\n\n### Pre-Built Binaries\n\nPre-built binaries for Linux, MacOS, and Windows can be found on\n[the releases page](https://github.com/casey/just/releases).\n\nYou can use the following command on Linux, MacOS, or Windows to download the\nlatest release, just replace `DEST` with the directory where you'd like to put\n`just`:\n\n```console\ncurl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to DEST\n```\n\nFor example, to install `just` to `~/bin`:\n\n```console\n# create ~/bin\nmkdir -p ~/bin\n\n# download and extract just to ~/bin/just\ncurl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin\n\n# add `~/bin` to the paths that your shell searches for executables\n# this line should be added to your shells initialization file,\n# e.g. `~/.bashrc` or `~/.zshrc`\nexport PATH=\"$PATH:$HOME/bin\"\n\n# just should now be executable\njust --help\n```\n\nNote that `install.sh` may fail on GitHub Actions, or in other environments\nwhere many machines share IP addresses. `install.sh` calls GitHub APIs in order\nto determine the latest version of `just` to install, and those API calls are\nrate-limited on a per-IP basis. To make `install.sh` more reliable in such\ncircumstances, pass a specific tag to install with `--tag`.\n\n[Releases](https://github.com/casey/just/releases) include a `SHA256SUM` file\nwhich can be used to verify the integrity of pre-built binary archives.\n\nTo verify a release, download the pre-built binary archive along with the\n`SHA256SUM` file and run:\n\n```sh\nshasum --algorithm 256 --ignore-missing --check SHA256SUMS\n```\n\n### GitHub Actions\n\n`just` can be installed on GitHub Actions in a few ways.\n\nUsing package managers pre-installed on GitHub Actions runners on MacOS with\n`brew install just`, and on Windows with `choco install just`.\n\nWith [extractions/setup-just](https://github.com/extractions/setup-just):\n\n```yaml\n- uses: extractions/setup-just@v2\n  with:\n    just-version: 1.5.0  # optional semver specification, otherwise latest\n```\n\nOr with [taiki-e/install-action](https://github.com/taiki-e/install-action):\n\n```yaml\n- uses: taiki-e/install-action@just\n```\n\n### Release RSS Feed\n\nAn [RSS feed](https://en.wikipedia.org/wiki/RSS) of `just` releases is available [here](https://github.com/casey/just/releases.atom).\n\n### Node.js Installation\n\n[just-install](https://npmjs.com/package/just-install) can be used to automate\ninstallation of `just` in Node.js applications.\n\n`just` is a great, more robust alternative to npm scripts. If you want to\ninclude `just` in the dependencies of a Node.js application, `just-install`\nwill install a local, platform-specific binary as part of the `npm install`\ncommand. This removes the need for every developer to install `just`\nindependently using one of the processes mentioned above. After installation,\nthe `just` command will work in npm scripts or with npx. It's great for teams\nwho want to make the set up process for their project as easy as possible.\n\nFor more information, see the\n[just-install README file](https://github.com/brombal/just-install#readme).\n\nBackwards Compatibility\n-----------------------\n\nWith the release of version 1.0, `just` features a strong commitment to\nbackwards compatibility and stability.\n\nFuture releases will not introduce backwards incompatible changes that make\nexisting `justfile`s stop working, or break working invocations of the\ncommand-line interface.\n\nThis does not, however, preclude fixing outright bugs, even if doing so might\nbreak `justfiles` that rely on their behavior.\n\nThere will never be a `just` 2.0. Any desirable backwards-incompatible changes\nwill be opt-in on a per-`justfile` basis, so users may migrate at their\nleisure.\n\nFeatures that aren't yet ready for stabilization are marked as unstable and may\nbe changed or removed at any time. Using unstable features produces an error by\ndefault, which can be suppressed with by passing the `--unstable` flag,\n`set unstable`, or setting the environment variable `JUST_UNSTABLE`, to any\nvalue other than `false`, `0`, or the empty string.\n\nEditor Support\n--------------\n\n`justfile` syntax is close enough to `make` that you may want to tell your\neditor to use `make` syntax highlighting for `just`.\n\n### Vim and Neovim\n\n#### `vim-just`\n\nThe [vim-just](https://github.com/NoahTheDuke/vim-just) plugin provides syntax\nhighlighting for `justfile`s.\n\nInstall it with your favorite package manager, like\n[Plug](https://github.com/junegunn/vim-plug):\n\n```vim\ncall plug#begin()\n\nPlug 'NoahTheDuke/vim-just'\n\ncall plug#end()\n```\n\nOr with Vim's built-in package support:\n\n```console\nmkdir -p ~/.vim/pack/vendor/start\ncd ~/.vim/pack/vendor/start\ngit clone https://github.com/NoahTheDuke/vim-just.git\n```\n\n#### `tree-sitter-just`\n\n[tree-sitter-just](https://github.com/IndianBoy42/tree-sitter-just) is an\n[Nvim Treesitter](https://github.com/nvim-treesitter/nvim-treesitter) plugin\nfor Neovim.\n\n#### Makefile Syntax Highlighting\n\nVim's built-in makefile syntax highlighting isn't perfect for `justfile`s, but\nit's better than nothing. You can put the following in `~/.vim/filetype.vim`:\n\n```vimscript\nif exists(\"did_load_filetypes\")\n  finish\nendif\n\naugroup filetypedetect\n  au BufNewFile,BufRead justfile setf make\naugroup END\n```\n\nOr add the following to an individual `justfile` to enable `make` mode on a\nper-file basis:\n\n```text\n# vim: set ft=make :\n```\n\n### Emacs\n\n[just-mode](https://github.com/leon-barrett/just-mode.el) provides syntax\nhighlighting and automatic indentation of `justfile`s. It is available on\n[MELPA](https://melpa.org/) as [just-mode](https://melpa.org/#/just-mode).\n\n[justl](https://github.com/psibi/justl.el) provides commands for executing and\nlisting recipes.\n\nYou can add the following to an individual `justfile` to enable `make` mode on\na per-file basis:\n\n```text\n# Local Variables:\n# mode: makefile\n# End:\n```\n\n### Visual Studio Code\n\nAn extension for VS Code is [available here](https://github.com/nefrob/vscode-just).\n\nUnmaintained VS Code extensions include\n[skellock/vscode-just](https://github.com/skellock/vscode-just) and\n[sclu1034/vscode-just](https://github.com/sclu1034/vscode-just).\n\n### JetBrains IDEs\n\nA plugin for JetBrains IDEs by [linux_china](https://github.com/linux-china) is\n[available here](https://plugins.jetbrains.com/plugin/18658-just).\n\n### Kakoune\n\nKakoune supports `justfile` syntax highlighting out of the box, thanks to\nTeddyDD.\n\n### Helix\n\n[Helix](https://helix-editor.com/) supports `justfile` syntax highlighting\nout-of-the-box since version 23.05.\n\n### Sublime Text\n\nThe [Just package](https://github.com/nk9/just_sublime) by\n[nk9](https://github.com/nk9) with `just` syntax and some other tools is\navailable on [PackageControl](https://packagecontrol.io/packages/Just).\n\n### Micro\n\n[Micro](https://micro-editor.github.io/) supports Justfile syntax highlighting\nout of the box, thanks to [tomodachi94](https://github.com/tomodachi94).\n\n### Other Editors\n\nFeel free to send me the commands necessary to get syntax highlighting working\nin your editor of choice so that I may include them here.\n\nQuick Start\n-----------\n\nSee [the installation section](#installation) for how to install `just` on your\ncomputer. Try running `just --version` to make sure that it's installed\ncorrectly.\n\nFor an overview of the syntax, check out\n[this cheatsheet](https://cheatography.com/linux-china/cheat-sheets/justfile/).\n\nOnce `just` is installed and working, create a file named `justfile` in the\nroot of your project with the following contents:\n\n```just\nrecipe-name:\n  echo 'This is a recipe!'\n\n# this is a comment\nanother-recipe:\n  @echo 'This is another recipe.'\n```\n\nWhen you invoke `just` it looks for file `justfile` in the current directory\nand upwards, so you can invoke it from any subdirectory of your project.\n\nThe search for a `justfile` is case insensitive, so any case, like `Justfile`,\n`JUSTFILE`, or `JuStFiLe`, will work. `just` will also look for files with the\nname `.justfile`, in case you'd like to hide a `justfile`.\n\nRunning `just` with no arguments runs the first recipe in the `justfile`:\n\n```console\n$ just\necho 'This is a recipe!'\nThis is a recipe!\n```\n\nOne or more arguments specify the recipe(s) to run:\n\n```console\n$ just another-recipe\nThis is another recipe.\n```\n\n`just` prints each command to standard error before running it, which is why\n`echo 'This is a recipe!'` was printed. This is suppressed for lines starting\nwith `@`, which is why `echo 'This is another recipe.'` was not printed.\n\nRecipes stop running if a command fails. Here `cargo publish` will only run if\n`cargo test` succeeds:\n\n```just\npublish:\n  cargo test\n  # tests passed, time to publish!\n  cargo publish\n```\n\nRecipes can depend on other recipes. Here the `test` recipe depends on the\n`build` recipe, so `build` will run before `test`:\n\n```just\nbuild:\n  cc main.c foo.c bar.c -o main\n\ntest: build\n  ./test\n\nsloc:\n  @echo \"`wc -l *.c` lines of code\"\n```\n\n```console\n$ just test\ncc main.c foo.c bar.c -o main\n./test\ntesting… all tests passed!\n```\n\nRecipes without dependencies will run in the order they're given on the command\nline:\n\n```console\n$ just build sloc\ncc main.c foo.c bar.c -o main\n1337 lines of code\n```\n\nDependencies will always run first, even if they are passed after a recipe that\ndepends on them:\n\n```console\n$ just test build\ncc main.c foo.c bar.c -o main\n./test\ntesting… all tests passed!\n```\n\nExamples\n--------\n\nA variety of `justfile`s can be found in the\n[examples directory](https://github.com/casey/just/tree/master/examples) and on\n[GitHub](https://github.com/search?q=path%3A**%2Fjustfile&type=code).\n\nFeatures\n--------\n\n### The Default Recipe\n\nWhen `just` is invoked without a recipe, it runs the first recipe in the\n`justfile`. This recipe might be the most frequently run command in the\nproject, like running the tests:\n\n```just\ntest:\n  cargo test\n```\n\nYou can also use dependencies to run multiple recipes by default:\n\n```just\ndefault: lint build test\n\nbuild:\n  echo Building…\n\ntest:\n  echo Testing…\n\nlint:\n  echo Linting…\n```\n\nIf no recipe makes sense as the default recipe, you can add a recipe to the\nbeginning of your `justfile` that lists the available recipes:\n\n```just\ndefault:\n  just --list\n```\n\n### Listing Available Recipes\n\nRecipes can be listed in alphabetical order with `just --list`:\n\n```console\n$ just --list\nAvailable recipes:\n    build\n    test\n    deploy\n    lint\n```\n\nRecipes in [submodules](#modules1190) can be listed with `just --list PATH`,\nwhere `PATH` is a space- or `::`-separated module path:\n\n```\n$ cat justfile\nmod foo\n$ cat foo.just\nmod bar\n$ cat bar.just\nbaz:\n$ just foo bar\nAvailable recipes:\n    baz\n$ just foo::bar\nAvailable recipes:\n    baz\n```\n\n`just --summary` is more concise:\n\n```console\n$ just --summary\nbuild test deploy lint\n```\n\nPass `--unsorted` to print recipes in the order they appear in the `justfile`:\n\n```just\ntest:\n  echo 'Testing!'\n\nbuild:\n  echo 'Building!'\n```\n\n```console\n$ just --list --unsorted\nAvailable recipes:\n    test\n    build\n```\n\n```console\n$ just --summary --unsorted\ntest build\n```\n\nIf you'd like `just` to default to listing the recipes in the `justfile`, you\ncan use this as your default recipe:\n\n```just\ndefault:\n  @just --list\n```\n\nNote that you may need to add `--justfile {{justfile()}}` to the line above.\nWithout it, if you executed `just -f /some/distant/justfile -d .` or\n`just -f ./non-standard-justfile`, the plain `just --list` inside the recipe\nwould not necessarily use the file you provided. It would try to find a\njustfile in your current path, maybe even resulting in a `No justfile found`\nerror.\n\nThe heading text can be customized with `--list-heading`:\n\n```console\n$ just --list --list-heading $'Cool stuff…\\n'\nCool stuff…\n    test\n    build\n```\n\nAnd the indentation can be customized with `--list-prefix`:\n\n```console\n$ just --list --list-prefix ····\nAvailable recipes:\n····test\n····build\n```\n\nThe argument to `--list-heading` replaces both the heading and the newline\nfollowing it, so it should contain a newline if non-empty. It works this way so\nyou can suppress the heading line entirely by passing the empty string:\n\n```console\n$ just --list --list-heading ''\n    test\n    build\n```\n\n### Invoking Multiple Recipes\n\nMultiple recipes may be invoked on the command line at once:\n\n```just\nbuild:\n  make web\n\nserve:\n  python3 -m http.server -d out 8000\n```\n\n```console\n$ just build serve\nmake web\npython3 -m http.server -d out 8000\n```\n\nKeep in mind that recipes with parameters will swallow arguments, even if they\nmatch the names of other recipes:\n\n```just\nbuild project:\n  make {{project}}\n\nserve:\n  python3 -m http.server -d out 8000\n```\n\n```console\n$ just build serve\nmake: *** No rule to make target `serve'.  Stop.\n```\n\nThe `--one` flag can be used to restrict command-line invocations to a single\nrecipe:\n\n```console\n$ just --one build serve\nerror: Expected 1 command-line recipe invocation but found 2.\n```\n\n### Working Directory\n\nBy default, recipes run with the working directory set to the directory that\ncontains the `justfile`.\n\nThe `[no-cd]` attribute can be used to make recipes run with the working\ndirectory set to directory in which `just` was invoked.\n\n```just\n@foo:\n  pwd\n\n[no-cd]\n@bar:\n  pwd\n```\n\n```console\n$ cd subdir\n$ just foo\n/\n$ just bar\n/subdir\n```\n\nYou can override the working directory for all recipes with\n`set working-directory := '…'`:\n\n```just\nset working-directory := 'bar'\n\n@foo:\n  pwd\n```\n\n```console\n$ pwd\n/home/bob\n$ just foo\n/home/bob/bar\n```\n\nYou can override the working directory for a specific recipe with the\n`working-directory` attribute<sup>1.38.0</sup>:\n\n```just\n[working-directory: 'bar']\n@foo:\n  pwd\n```\n\n```console\n$ pwd\n/home/bob\n$ just foo\n/home/bob/bar\n```\n\nThe argument to the `working-directory` setting or `working-directory`\nattribute may be absolute or relative. If it is relative it is interpreted\nrelative to the default working directory.\n\n### Aliases\n\nAliases allow recipes to be invoked on the command line with alternative names:\n\n```just\nalias b := build\n\nbuild:\n  echo 'Building!'\n```\n\n```console\n$ just b\necho 'Building!'\nBuilding!\n```\n\n### Settings\n\nSettings control interpretation and execution. Each setting may be specified at\nmost once, anywhere in the `justfile`.\n\nFor example:\n\n```just\nset shell := [\"zsh\", \"-cu\"]\n\nfoo:\n  # this line will be run as `zsh -cu 'ls **/*.txt'`\n  ls **/*.txt\n```\n\n#### Table of Settings\n\n| Name | Value | Default | Description |\n|------|-------|---------|-------------|\n| `allow-duplicate-recipes` | boolean | `false` | Allow recipes appearing later in a `justfile` to override earlier recipes with the same name. |\n| `allow-duplicate-variables` | boolean | `false` | Allow variables appearing later in a `justfile` to override earlier variables with the same name. |\n| `dotenv-filename` | string | - | Load a `.env` file with a custom name, if present. |\n| `dotenv-load` | boolean | `false` | Load a `.env` file, if present. |\n| `dotenv-path` | string | - | Load a `.env` file from a custom path and error if not present. Overrides `dotenv-filename`. |\n| `dotenv-required` | boolean | `false` | Error if a `.env` file isn't found. |\n| `export` | boolean | `false` | Export all variables as environment variables. |\n| `fallback` | boolean | `false` | Search `justfile` in parent directory if the first recipe on the command line is not found. |\n| `ignore-comments` | boolean | `false` | Ignore recipe lines beginning with `#`. |\n| `positional-arguments` | boolean | `false` | Pass positional arguments. |\n| `quiet` | boolean | `false` | Disable echoing recipe lines before executing. |\n| `script-interpreter`<sup>1.33.0</sup> | `[COMMAND, ARGS…]` | `['sh', '-eu']` | Set command used to invoke recipes with empty `[script]` attribute. |\n| `shell` | `[COMMAND, ARGS…]` | - | Set command used to invoke recipes and evaluate backticks. |\n| `tempdir` | string | - | Create temporary directories in `tempdir` instead of the system default temporary directory. |\n| `unstable`<sup>1.31.0</sup> | boolean | `false` | Enable unstable features. |\n| `windows-powershell` | boolean | `false` | Use PowerShell on Windows as default shell. (Deprecated. Use `windows-shell` instead. |\n| `windows-shell` | `[COMMAND, ARGS…]` | - | Set the command used to invoke recipes and evaluate backticks. |\n| `working-directory`<sup>1.33.0</sup> | string | - | Set the working directory for recipes and backticks, relative to the default working directory. |\n\nBoolean settings can be written as:\n\n```justfile\nset NAME\n```\n\nWhich is equivalent to:\n\n```justfile\nset NAME := true\n```\n\n#### Allow Duplicate Recipes\n\nIf `allow-duplicate-recipes` is set to `true`, defining multiple recipes with\nthe same name is not an error and the last definition is used. Defaults to\n`false`.\n\n```just\nset allow-duplicate-recipes\n\n@foo:\n  echo foo\n\n@foo:\n  echo bar\n```\n\n```console\n$ just foo\nbar\n```\n\n#### Allow Duplicate Variables\n\nIf `allow-duplicate-variables` is set to `true`, defining multiple variables\nwith the same name is not an error and the last definition is used. Defaults to\n`false`.\n\n```just\nset allow-duplicate-variables\n\na := \"foo\"\na := \"bar\"\n\n@foo:\n  echo {{a}}\n```\n\n```console\n$ just foo\nbar\n```\n\n#### Dotenv Settings\n\nIf any of `dotenv-load`, `dotenv-filename`, `dotenv-path`, or `dotenv-required`\nare set, `just` will try to load environment variables from a file.\n\nIf `dotenv-path` is set, `just` will look for a file at the given path, which\nmay be absolute, or relative to the working directory.\n\nThe command-line option `--dotenv-path`, short form `-E`, can be used to set or\noverride `dotenv-path` at runtime.\n\nIf `dotenv-filename` is set `just` will look for a file at the given path,\nrelative to the working directory and each of its ancestors.\n\nIf `dotenv-filename` is not set, but `dotenv-load` or `dotenv-required` are\nset, just will look for a file named `.env`, relative to the working directory\nand each of its ancestors.\n\n`dotenv-filename` and `dotenv-path` are similar, but `dotenv-path` is only\nchecked relative to the working directory, whereas `dotenv-filename` is checked\nrelative to the working directory and each of its ancestors.\n\nIt is not an error if an environment file is not found, unless\n`dotenv-required` is set.\n\nThe loaded variables are environment variables, not `just` variables, and so\nmust be accessed using `$VARIABLE_NAME` in recipes and backticks.\n\nFor example, if your `.env` file contains:\n\n```console\n# a comment, will be ignored\nDATABASE_ADDRESS=localhost:6379\nSERVER_PORT=1337\n```\n\nAnd your `justfile` contains:\n\n```just\nset dotenv-load\n\nserve:\n  @echo \"Starting server with database $DATABASE_ADDRESS on port $SERVER_PORT…\"\n  ./server --database $DATABASE_ADDRESS --port $SERVER_PORT\n```\n\n`just serve` will output:\n\n```console\n$ just serve\nStarting server with database localhost:6379 on port 1337…\n./server --database $DATABASE_ADDRESS --port $SERVER_PORT\n```\n\n#### Export\n\nThe `export` setting causes all `just` variables to be exported as environment\nvariables. Defaults to `false`.\n\n```just\nset export\n\na := \"hello\"\n\n@foo b:\n  echo $a\n  echo $b\n```\n\n```console\n$ just foo goodbye\nhello\ngoodbye\n```\n\n#### Positional Arguments\n\nIf `positional-arguments` is `true`, recipe arguments will be passed as\npositional arguments to commands. For linewise recipes, argument `$0` will be\nthe name of the recipe.\n\nFor example, running this recipe:\n\n```just\nset positional-arguments\n\n@foo bar:\n  echo $0\n  echo $1\n```\n\nWill produce the following output:\n\n```console\n$ just foo hello\nfoo\nhello\n```\n\nWhen using an `sh`-compatible shell, such as `bash` or `zsh`, `$@` expands to\nthe positional arguments given to the recipe, starting from one. When used\nwithin double quotes as `\"$@\"`, arguments including whitespace will be passed\non as if they were double-quoted. That is, `\"$@\"` is equivalent to `\"$1\" \"$2\"`…\nWhen there are no positional parameters, `\"$@\"` and `$@` expand to nothing\n(i.e., they are removed).\n\nThis example recipe will print arguments one by one on separate lines:\n\n```just\nset positional-arguments\n\n@test *args='':\n  bash -c 'while (( \"$#\" )); do echo - $1; shift; done' -- \"$@\"\n```\n\nRunning it with _two_ arguments:\n\n```console\n$ just test foo \"bar baz\"\n- foo\n- bar baz\n```\n\nPositional arguments may also be turned on on a per-recipe basis with the\n`[positional-arguments]` attribute<sup>1.29.0</sup>:\n\n```just\n[positional-arguments]\n@foo bar:\n  echo $0\n  echo $1\n```\n\nNote that PowerShell does not handle positional arguments in the same way as\nother shells, so turning on positional arguments will likely break recipes that\nuse PowerShell.\n\nIf using PowerShell 7.4 or better, the `-CommandWithArgs` flag will make\npositional arguments work as expected:\n\n```just\nset shell := ['pwsh.exe', '-CommandWithArgs']\nset positional-arguments\n\nprint-args a b c:\n  Write-Output @($args[1..($args.Count - 1)])\n```\n\n#### Shell\n\nThe `shell` setting controls the command used to invoke recipe lines and\nbackticks. Shebang recipes are unaffected. The default shell is `sh -cu`.\n\n```just\n# use python3 to execute recipe lines and backticks\nset shell := [\"python3\", \"-c\"]\n\n# use print to capture result of evaluation\nfoos := `print(\"foo\" * 4)`\n\nfoo:\n  print(\"Snake snake snake snake.\")\n  print(\"{{foos}}\")\n```\n\n`just` passes the command to be executed as an argument. Many shells will need\nan additional flag, often `-c`, to make them evaluate the first argument.\n\n##### Windows Shell\n\n`just` uses `sh` on Windows by default. To use a different shell on Windows,\nuse `windows-shell`:\n\n```just\nset windows-shell := [\"powershell.exe\", \"-NoLogo\", \"-Command\"]\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\nSee\n[powershell.just](https://github.com/casey/just/blob/master/examples/powershell.just)\nfor a justfile that uses PowerShell on all platforms.\n\n##### Windows PowerShell\n\n*`set windows-powershell` uses the legacy `powershell.exe` binary, and is no\nlonger recommended. See the `windows-shell` setting above for a more flexible\nway to control which shell is used on Windows.*\n\n`just` uses `sh` on Windows by default. To use `powershell.exe` instead, set\n`windows-powershell` to true.\n\n```just\nset windows-powershell := true\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\n##### Python 3\n\n```just\nset shell := [\"python3\", \"-c\"]\n```\n\n##### Bash\n\n```just\nset shell := [\"bash\", \"-uc\"]\n```\n\n##### Z Shell\n\n```just\nset shell := [\"zsh\", \"-uc\"]\n```\n\n##### Fish\n\n```just\nset shell := [\"fish\", \"-c\"]\n```\n\n##### Nushell\n\n```just\nset shell := [\"nu\", \"-c\"]\n```\n\nIf you want to change the default table mode to `light`:\n\n```just\nset shell := ['nu', '-m', 'light', '-c']\n```\n\n*[Nushell](https://github.com/nushell/nushell) was written in Rust, and **has\ncross-platform support for Windows / macOS and Linux**.*\n\n### Documentation Comments\n\nComments immediately preceding a recipe will appear in `just --list`:\n\n```just\n# build stuff\nbuild:\n  ./bin/build\n\n# test stuff\ntest:\n  ./bin/test\n```\n\n```console\n$ just --list\nAvailable recipes:\n    build # build stuff\n    test # test stuff\n```\n\nThe `[doc]` attribute can be used to set or suppress a recipe's doc comment:\n\n```just\n# This comment won't appear\n[doc('Build stuff')]\nbuild:\n  ./bin/build\n\n# This one won't either\n[doc]\ntest:\n  ./bin/test\n```\n\n```console\n$ just --list\nAvailable recipes:\n    build # Build stuff\n    test\n```\n\n### Expressions and Substitutions\n\nVarious operators and function calls are supported in expressions, which may be\nused in assignments, default recipe arguments, and inside recipe body `{{…}}`\nsubstitutions.\n\n```just\ntmpdir  := `mktemp -d`\nversion := \"0.2.7\"\ntardir  := tmpdir / \"awesomesauce-\" + version\ntarball := tardir + \".tar.gz\"\nconfig  := quote(config_dir() / \".project-config\")\n\npublish:\n  rm -f {{tarball}}\n  mkdir {{tardir}}\n  cp README.md *.c {{ config }} {{tardir}}\n  tar zcvf {{tarball}} {{tardir}}\n  scp {{tarball}} me@server.com:release/\n  rm -rf {{tarball}} {{tardir}}\n```\n\n#### Concatenation\n\nThe `+` operator returns the left-hand argument concatenated with the\nright-hand argument:\n\n```just\nfoobar := 'foo' + 'bar'\n```\n\n#### Logical Operators\n\nThe logical operators `&&` and `||` can be used to coalesce string\nvalues<sup>1.37.0</sup>, similar to Python's `and` and `or`. These operators\nconsider the empty string `''` to be false, and all other strings to be true.\n\nThese operators are currently unstable.\n\nThe `&&` operator returns the empty string if the left-hand argument is the\nempty string, otherwise it returns the right-hand argument:\n\n```justfile\nfoo := '' && 'goodbye'      # ''\nbar := 'hello' && 'goodbye' # 'goodbye'\n```\n\nThe `||` operator returns the left-hand argument if it is non-empty, otherwise\nit returns the right-hand argument:\n\n```justfile\nfoo := '' || 'goodbye'      # 'goodbye'\nbar := 'hello' || 'goodbye' # 'hello'\n```\n\n#### Joining Paths\n\nThe `/` operator can be used to join two strings with a slash:\n\n```just\nfoo := \"a\" / \"b\"\n```\n\n```\n$ just --evaluate foo\na/b\n```\n\nNote that a `/` is added even if one is already present:\n\n```just\nfoo := \"a/\"\nbar := foo / \"b\"\n```\n\n```\n$ just --evaluate bar\na//b\n```\n\nAbsolute paths can also be constructed<sup>1.5.0</sup>:\n\n```just\nfoo := / \"b\"\n```\n\n```\n$ just --evaluate foo\n/b\n```\n\nThe `/` operator uses the `/` character, even on Windows. Thus, using the `/`\noperator should be avoided with paths that use universal naming convention\n(UNC), i.e., those that start with `\\?`, since forward slashes are not\nsupported with UNC paths.\n\n#### Escaping `{{`\n\nTo write a recipe containing `{{`, use `{{{{`:\n\n```just\nbraces:\n  echo 'I {{{{LOVE}} curly braces!'\n```\n\n(An unmatched `}}` is ignored, so it doesn't need to be escaped.)\n\nAnother option is to put all the text you'd like to escape inside of an\ninterpolation:\n\n```just\nbraces:\n  echo '{{'I {{LOVE}} curly braces!'}}'\n```\n\nYet another option is to use `{{ \"{{\" }}`:\n\n```just\nbraces:\n  echo 'I {{ \"{{\" }}LOVE}} curly braces!'\n```\n\n### Strings\n\n`'single'`, `\"double\"`, and `'''triple'''` quoted string literals are\nsupported. Unlike in recipe bodies, `{{…}}` interpolations are not supported\ninside strings.\n\nDouble-quoted strings support escape sequences:\n\n```just\ncarriage-return   := \"\\r\"\ndouble-quote      := \"\\\"\"\nnewline           := \"\\n\"\nno-newline        := \"\\\n\"\nslash             := \"\\\\\"\ntab               := \"\\t\"\nunicode-codepoint := \"\\u{1F916}\"\n```\n\n```console\n$ just --evaluate\n\"arriage-return   := \"\ndouble-quote      := \"\"\"\nnewline           := \"\n\"\nno-newline        := \"\"\nslash             := \"\\\"\ntab               := \"     \"\nunicode-codepoint := \"🤖\"\n```\n\nThe unicode character escape sequence `\\u{…}`<sup>1.36.0</sup> accepts up to\nsix hex digits.\n\nStrings may contain line breaks:\n\n```just\nsingle := '\nhello\n'\n\ndouble := \"\ngoodbye\n\"\n```\n\nSingle-quoted strings do not recognize escape sequences:\n\n```just\nescapes := '\\t\\n\\r\\\"\\\\'\n```\n\n```console\n$ just --evaluate\nescapes := \"\\t\\n\\r\\\"\\\\\"\n```\n\nIndented versions of both single- and double-quoted strings, delimited by\ntriple single- or double-quotes, are supported. Indented string lines are\nstripped of a leading line break, and leading whitespace common to all\nnon-blank lines:\n\n```just\n# this string will evaluate to `foo\\nbar\\n`\nx := '''\n  foo\n  bar\n'''\n\n# this string will evaluate to `abc\\n  wuv\\nxyz\\n`\ny := \"\"\"\n  abc\n    wuv\n  xyz\n\"\"\"\n```\n\nSimilar to unindented strings, indented double-quoted strings process escape\nsequences, and indented single-quoted strings ignore escape sequences. Escape\nsequence processing takes place after unindentation. The unindentation\nalgorithm does not take escape-sequence produced whitespace or newlines into\naccount.\n\nStrings prefixed with `x` are shell expanded<sup>1.27.0</sup>:\n\n```justfile\nfoobar := x'~/$FOO/${BAR}'\n```\n\n| Value | Replacement |\n|------|-------------|\n| `$VAR` | value of environment variable `VAR` |\n| `${VAR}` | value of environment variable `VAR` |\n| `${VAR:-DEFAULT}` | value of environment variable `VAR`, or `DEFAULT` if `VAR` is not set |\n| Leading `~` | path to current user's home directory |\n| Leading `~USER` | path to `USER`'s home directory |\n\nThis expansion is performed at compile time, so variables from `.env` files and\nexported `just` variables cannot be used. However, this allows shell expanded\nstrings to be used in places like settings and import paths, which cannot\ndepend on `just` variables and `.env` files.\n\n### Ignoring Errors\n\nNormally, if a command returns a non-zero exit status, execution will stop. To\ncontinue execution after a command, even if it fails, prefix the command with\n`-`:\n\n```just\nfoo:\n  -cat foo\n  echo 'Done!'\n```\n\n```console\n$ just foo\ncat foo\ncat: foo: No such file or directory\necho 'Done!'\nDone!\n```\n\n### Functions\n\n`just` provides many built-in functions for use in expressions, including\nrecipe body `{{…}}` substitutions, assignments, and default parameter values.\n\nAll functions ending in `_directory` can be abbreviated to `_dir`. So\n`home_directory()` can also be written as `home_dir()`. In addition,\n`invocation_directory_native()` can be abbreviated to\n`invocation_dir_native()`.\n\n#### System Information\n\n- `arch()` — Instruction set architecture. Possible values are: `\"aarch64\"`,\n  `\"arm\"`, `\"asmjs\"`, `\"hexagon\"`, `\"mips\"`, `\"msp430\"`, `\"powerpc\"`,\n  `\"powerpc64\"`, `\"s390x\"`, `\"sparc\"`, `\"wasm32\"`, `\"x86\"`, `\"x86_64\"`, and\n  `\"xcore\"`.\n- `num_cpus()`<sup>1.15.0</sup> - Number of logical CPUs.\n- `os()` — Operating system. Possible values are: `\"android\"`, `\"bitrig\"`,\n  `\"dragonfly\"`, `\"emscripten\"`, `\"freebsd\"`, `\"haiku\"`, `\"ios\"`, `\"linux\"`,\n  `\"macos\"`, `\"netbsd\"`, `\"openbsd\"`, `\"solaris\"`, and `\"windows\"`.\n- `os_family()` — Operating system family; possible values are: `\"unix\"` and\n  `\"windows\"`.\n\nFor example:\n\n```just\nsystem-info:\n  @echo \"This is an {{arch()}} machine\".\n```\n\n```console\n$ just system-info\nThis is an x86_64 machine\n```\n\nThe `os_family()` function can be used to create cross-platform `justfile`s\nthat work on various operating systems. For an example, see\n[cross-platform.just](https://github.com/casey/just/blob/master/examples/cross-platform.just)\nfile.\n\n#### External Commands\n\n- `shell(command, args...)`<sup>1.27.0</sup> returns the standard output of shell script\n  `command` with zero or more positional arguments `args`. The shell used to\n  interpret `command` is the same shell that is used to evaluate recipe lines,\n  and can be changed with `set shell := […]`.\n\n  `command` is passed as the first argument, so if the command is `'echo $@'`,\n  the full command line, with the default shell command `sh -cu` and `args`\n  `'foo'` and `'bar'` will be:\n\n  ```\n  'sh' '-cu' 'echo $@' 'echo $@' 'foo' 'bar'\n  ```\n\n  This is so that `$@` works as expected, and `$1` refers to the first\n  argument. `$@` does not include the first positional argument, which is\n  expected to be the name of the program being run.\n\n```just\n# arguments can be variables or expressions\nfile := '/sys/class/power_supply/BAT0/status'\nbat0stat := shell('cat $1', file)\n\n# commands can be variables or expressions\ncommand := 'wc -l'\noutput := shell(command + ' \"$1\"', 'main.c')\n\n# arguments referenced by the shell command must be used\nempty := shell('echo', 'foo')\nfull := shell('echo $1', 'foo')\nerror := shell('echo $1')\n```\n\n```just\n# Using python as the shell. Since `python -c` sets `sys.argv[0]` to `'-c'`,\n# the first \"real\" positional argument will be `sys.argv[2]`.\nset shell := [\"python3\", \"-c\"]\nolleh := shell('import sys; print(sys.argv[2][::-1])', 'hello')\n```\n\n#### Environment Variables\n\n- `env(key)`<sup>1.15.0</sup> — Retrieves the environment variable with name `key`, aborting\n  if it is not present.\n\n```just\nhome_dir := env('HOME')\n\ntest:\n  echo \"{{home_dir}}\"\n```\n\n```console\n$ just\n/home/user1\n```\n\n- `env(key, default)`<sup>1.15.0</sup> — Retrieves the environment variable with\n  name `key`, returning `default` if it is not present.\n- `env_var(key)` — Deprecated alias for `env(key)`.\n- `env_var_or_default(key, default)` — Deprecated alias for `env(key, default)`.\n\nA default can be substituted for an empty environment variable value with the\n`||` operator, currently unstable:\n\n```just\nset unstable\n\nfoo := env('FOO') || 'DEFAULT_VALUE'\n```\n\n#### Invocation Information\n\n- `is_dependency()` - Returns the string `true` if the current recipe is being\n  run as a dependency of another recipe, rather than being run directly,\n  otherwise returns the string `false`.\n\n#### Invocation Directory\n\n- `invocation_directory()` - Retrieves the absolute path to the current\n  directory when `just` was invoked, before  `just` changed it (chdir'd) prior\n  to executing commands. On Windows, `invocation_directory()` uses `cygpath` to\n  convert the invocation directory to a Cygwin-compatible `/`-separated path.\n  Use `invocation_directory_native()` to return the verbatim invocation\n  directory on all platforms.\n\nFor example, to call `rustfmt` on files just under the \"current directory\"\n(from the user/invoker's perspective), use the following rule:\n\n```just\nrustfmt:\n  find {{invocation_directory()}} -name \\*.rs -exec rustfmt {} \\;\n```\n\nAlternatively, if your command needs to be run from the current directory, you\ncould use (e.g.):\n\n```just\nbuild:\n  cd {{invocation_directory()}}; ./some_script_that_needs_to_be_run_from_here\n```\n\n- `invocation_directory_native()` - Retrieves the absolute path to the current\n  directory when `just` was invoked, before  `just` changed it (chdir'd) prior\n  to executing commands.\n\n#### Justfile and Justfile Directory\n\n- `justfile()` - Retrieves the path of the current `justfile`.\n\n- `justfile_directory()` - Retrieves the path of the parent directory of the\n  current `justfile`.\n\nFor example, to run a command relative to the location of the current\n`justfile`:\n\n```just\nscript:\n  {{justfile_directory()}}/scripts/some_script\n```\n\n#### Source and Source Directory\n\n- `source_file()`<sup>1.27.0</sup> - Retrieves the path of the current source file.\n\n- `source_directory()`<sup>1.27.0</sup> - Retrieves the path of the parent directory of the\n  current source file.\n\n`source_file()` and `source_directory()` behave the same as `justfile()` and\n`justfile_directory()` in the root `justfile`, but will return the path and\ndirectory, respectively, of the current `import` or `mod` source file when\ncalled from within an import or submodule.\n\n#### Just Executable\n\n- `just_executable()` - Absolute path to the `just` executable.\n\nFor example:\n\n```just\nexecutable:\n  @echo The executable is at: {{just_executable()}}\n```\n\n```console\n$ just\nThe executable is at: /bin/just\n```\n\n#### Just Process ID\n\n- `just_pid()` - Process ID of the `just` executable.\n\nFor example:\n\n```just\npid:\n  @echo The process ID is: {{ just_pid() }}\n```\n\n```console\n$ just\nThe process ID is: 420\n```\n\n#### String Manipulation\n\n- `append(suffix, s)`<sup>1.27.0</sup> Append `suffix` to whitespace-separated\n  strings in `s`. `append('/src', 'foo bar baz')` → `'foo/src bar/src baz/src'`\n- `prepend(prefix, s)`<sup>1.27.0</sup> Prepend `prefix` to\n  whitespace-separated strings in `s`. `prepend('src/', 'foo bar baz')` →\n  `'src/foo src/bar src/baz'`\n- `encode_uri_component(s)`<sup>1.27.0</sup> - Percent-encode characters in `s`\n  except `[A-Za-z0-9_.!~*'()-]`, matching the behavior of the\n  [JavaScript `encodeURIComponent` function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent).\n- `quote(s)` - Replace all single quotes with `'\\''` and prepend and append\n  single quotes to `s`. This is sufficient to escape special characters for\n  many shells, including most Bourne shell descendants.\n- `replace(s, from, to)` - Replace all occurrences of `from` in `s` to `to`.\n- `replace_regex(s, regex, replacement)` - Replace all occurrences of `regex`\n  in `s` to `replacement`. Regular expressions are provided by the\n  [Rust `regex` crate](https://docs.rs/regex/latest/regex/). See the\n  [syntax documentation](https://docs.rs/regex/latest/regex/#syntax) for usage\n  examples. Capture groups are supported. The `replacement` string uses\n  [Replacement string syntax](https://docs.rs/regex/latest/regex/struct.Regex.html#replacement-string-syntax).\n- `trim(s)` - Remove leading and trailing whitespace from `s`.\n- `trim_end(s)` - Remove trailing whitespace from `s`.\n- `trim_end_match(s, pat)` - Remove suffix of `s` matching `pat`.\n- `trim_end_matches(s, pat)` - Repeatedly remove suffixes of `s` matching\n  `pat`.\n- `trim_start(s)` - Remove leading whitespace from `s`.\n- `trim_start_match(s, pat)` - Remove prefix of `s` matching `pat`.\n- `trim_start_matches(s, pat)` - Repeatedly remove prefixes of `s` matching\n  `pat`.\n\n#### Case Conversion\n\n- `capitalize(s)`<sup>1.7.0</sup> - Convert first character of `s` to uppercase\n  and the rest to lowercase.\n- `kebabcase(s)`<sup>1.7.0</sup> - Convert `s` to `kebab-case`.\n- `lowercamelcase(s)`<sup>1.7.0</sup> - Convert `s` to `lowerCamelCase`.\n- `lowercase(s)` - Convert `s` to lowercase.\n- `shoutykebabcase(s)`<sup>1.7.0</sup> - Convert `s` to `SHOUTY-KEBAB-CASE`.\n- `shoutysnakecase(s)`<sup>1.7.0</sup> - Convert `s` to `SHOUTY_SNAKE_CASE`.\n- `snakecase(s)`<sup>1.7.0</sup> - Convert `s` to `snake_case`.\n- `titlecase(s)`<sup>1.7.0</sup> - Convert `s` to `Title Case`.\n- `uppercamelcase(s)`<sup>1.7.0</sup> - Convert `s` to `UpperCamelCase`.\n- `uppercase(s)` - Convert `s` to uppercase.\n\n#### Path Manipulation\n\n##### Fallible\n\n- `absolute_path(path)` - Absolute path to relative `path` in the working\n  directory. `absolute_path(\"./bar.txt\")` in directory `/foo` is\n  `/foo/bar.txt`.\n- `canonicalize(path)`<sup>1.24.0</sup> - Canonicalize `path` by resolving symlinks and removing\n  `.`, `..`, and extra `/`s where possible.\n- `extension(path)` - Extension of `path`. `extension(\"/foo/bar.txt\")` is\n  `txt`.\n- `file_name(path)` - File name of `path` with any leading directory components\n  removed. `file_name(\"/foo/bar.txt\")` is `bar.txt`.\n- `file_stem(path)` - File name of `path` without extension.\n  `file_stem(\"/foo/bar.txt\")` is `bar`.\n- `parent_directory(path)` - Parent directory of `path`.\n  `parent_directory(\"/foo/bar.txt\")` is `/foo`.\n- `without_extension(path)` - `path` without extension.\n  `without_extension(\"/foo/bar.txt\")` is `/foo/bar`.\n\nThese functions can fail, for example if a path does not have an extension,\nwhich will halt execution.\n\n##### Infallible\n\n- `clean(path)` - Simplify `path` by removing extra path separators,\n  intermediate `.` components, and `..` where possible. `clean(\"foo//bar\")` is\n  `foo/bar`, `clean(\"foo/..\")` is `.`, `clean(\"foo/./bar\")` is `foo/bar`.\n- `join(a, b…)` - *This function uses `/` on Unix and `\\` on Windows, which can\n  be lead to unwanted behavior. The `/` operator, e.g., `a / b`, which always\n  uses `/`, should be considered as a replacement unless `\\`s are specifically\n  desired on Windows.* Join path `a` with path `b`. `join(\"foo/bar\", \"baz\")` is\n  `foo/bar/baz`. Accepts two or more arguments.\n\n#### Filesystem Access\n\n- `path_exists(path)` - Returns `true` if the path points at an existing entity\n  and `false` otherwise. Traverses symbolic links, and returns `false` if the\n  path is inaccessible or points to a broken symlink.\n- `read(path)`<sup>master</sup> - Returns the content of file at `path` as\n  string.\n\n##### Error Reporting\n\n- `error(message)` - Abort execution and report error `message` to user.\n\n#### UUID and Hash Generation\n\n- `blake3(string)`<sup>1.25.0</sup> - Return [BLAKE3] hash of `string` as hexadecimal string.\n- `blake3_file(path)`<sup>1.25.0</sup> - Return [BLAKE3] hash of file at `path` as hexadecimal\n  string.\n- `sha256(string)` - Return the SHA-256 hash of `string` as hexadecimal string.\n- `sha256_file(path)` - Return SHA-256 hash of file at `path` as hexadecimal\n  string.\n- `uuid()` - Generate a random version 4 UUID.\n\n[BLAKE3]: https://github.com/BLAKE3-team/BLAKE3/\n\n#### Random\n\n- `choose(n, alphabet)`<sup>1.27.0</sup> - Generate a string of `n` randomly\n  selected characters from `alphabet`, which may not contain repeated\n  characters. For example, `choose('64', HEX)` will generate a random\n  64-character lowercase hex string.\n\n#### Datetime\n\n- `datetime(format)`<sup>1.30.0</sup> - Return local time with `format`.\n- `datetime_utc(format)`<sup>1.30.0</sup> - Return UTC time with `format`.\n\nThe arguments to `datetime` and `datetime_utc` are `strftime`-style format\nstrings, see the\n[`chrono` library docs](https://docs.rs/chrono/latest/chrono/format/strftime/index.html)\nfor details.\n\n#### Semantic Versions\n\n- `semver_matches(version, requirement)`<sup>1.16.0</sup> - Check whether a\n  [semantic `version`](https://semver.org), e.g., `\"0.1.0\"` matches a\n  `requirement`, e.g., `\">=0.1.0\"`, returning `\"true\"` if so and `\"false\"`\n  otherwise.\n\n#### Style\n\n- `style(name)`<sup>1.37.0</sup> - Return a named terminal display attribute\n  escape sequence used by `just`. Unlike terminal display attribute escape\n  sequence constants, which contain standard colors and styles, `style(name)`\n  returns an escape sequence used by `just` itself, and can be used to make\n  recipe output match `just`'s own output.\n\n  Recognized values for `name` are `'command'`, for echoed recipe lines,\n  `error`, and `warning`.\n\n  For example, to style an error message:\n\n  ```just\n  scary:\n    @echo '{{ style(\"error\") }}OH NO{{ NORMAL }}'\n  ```\n\n##### User Directories<sup>1.23.0</sup>\n\nThese functions return paths to user-specific directories for things like\nconfiguration, data, caches, executables, and the user's home directory.\n\nOn Unix, these functions follow the\n[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html).\n\nOn MacOS and Windows, these functions return the system-specified user-specific\ndirectories. For example, `cache_directory()` returns `~/Library/Caches` on\nMacOS and `{FOLDERID_LocalAppData}` on Windows.\n\nSee the [`dirs`](https://docs.rs/dirs/latest/dirs/index.html) crate for more\ndetails.\n\n- `cache_directory()` - The user-specific cache directory.\n- `config_directory()` - The user-specific configuration directory.\n- `config_local_directory()` - The local user-specific configuration directory.\n- `data_directory()` - The user-specific data directory.\n- `data_local_directory()` - The local user-specific data directory.\n- `executable_directory()` - The user-specific executable directory.\n- `home_directory()` - The user's home directory.\n\nIf you would like to use XDG base directories on all platforms you can use the\n`env(…)` function with the appropriate environment variable and fallback,\nalthough note that the XDG specification requires ignoring non-absolute paths,\nso for full compatibility with spec-compliant applications, you would need to\ndo:\n\n```just\nxdg_config_dir := if env('XDG_CONFIG_HOME', '') =~ '^/' {\n  env('XDG_CONFIG_HOME')\n} else {\n  home_directory() / '.config'\n}\n```\n\n### Constants\n\nA number of constants are predefined:\n\n| Name | Value |\n|------|-------------|\n| `HEX`<sup>1.27.0</sup> | `\"0123456789abcdef\"` |\n| `HEXLOWER`<sup>1.27.0</sup> | `\"0123456789abcdef\"` |\n| `HEXUPPER`<sup>1.27.0</sup> | `\"0123456789ABCDEF\"` |\n| `CLEAR`<sup>1.37.0</sup> | `\"\\ec\"` |\n| `NORMAL`<sup>1.37.0</sup> | `\"\\e[0m\"` |\n| `BOLD`<sup>1.37.0</sup> | `\"\\e[1m\"` |\n| `ITALIC`<sup>1.37.0</sup> | `\"\\e[3m\"` |\n| `UNDERLINE`<sup>1.37.0</sup> | `\"\\e[4m\"` |\n| `INVERT`<sup>1.37.0</sup> | `\"\\e[7m\"` |\n| `HIDE`<sup>1.37.0</sup> | `\"\\e[8m\"` |\n| `STRIKETHROUGH`<sup>1.37.0</sup> | `\"\\e[9m\"` |\n| `BLACK`<sup>1.37.0</sup> | `\"\\e[30m\"` |\n| `RED`<sup>1.37.0</sup> | `\"\\e[31m\"` |\n| `GREEN`<sup>1.37.0</sup> | `\"\\e[32m\"` |\n| `YELLOW`<sup>1.37.0</sup> | `\"\\e[33m\"` |\n| `BLUE`<sup>1.37.0</sup> | `\"\\e[34m\"` |\n| `MAGENTA`<sup>1.37.0</sup> | `\"\\e[35m\"` |\n| `CYAN`<sup>1.37.0</sup> | `\"\\e[36m\"` |\n| `WHITE`<sup>1.37.0</sup> | `\"\\e[37m\"` |\n| `BG_BLACK`<sup>1.37.0</sup> | `\"\\e[40m\"` |\n| `BG_RED`<sup>1.37.0</sup> | `\"\\e[41m\"` |\n| `BG_GREEN`<sup>1.37.0</sup> | `\"\\e[42m\"` |\n| `BG_YELLOW`<sup>1.37.0</sup> | `\"\\e[43m\"` |\n| `BG_BLUE`<sup>1.37.0</sup> | `\"\\e[44m\"` |\n| `BG_MAGENTA`<sup>1.37.0</sup> | `\"\\e[45m\"` |\n| `BG_CYAN`<sup>1.37.0</sup> | `\"\\e[46m\"` |\n| `BG_WHITE`<sup>1.37.0</sup> | `\"\\e[47m\"` |\n\n```just\n@foo:\n  echo {{HEX}}\n```\n\n```console\n$ just foo\n0123456789abcdef\n```\n\nConstants starting with `\\e` are\n[ANSI escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code).\n\n`CLEAR` clears the screen, similar to the `clear` command. The rest are of the\nform `\\e[Nm`, where `N` is an integer, and set terminal display attributes.\n\nTerminal display attribute escape sequences can be combined, for example text\nweight `BOLD`, text style `STRIKETHROUGH`, foreground color `CYAN`, and\nbackground color `BG_BLUE`. They should be followed by `NORMAL`, to reset the\nterminal back to normal.\n\nEscape sequences should be quoted, since `[` is treated as a special character\nby some shells.\n\n```just\n@foo:\n  echo '{{BOLD + STRIKETHROUGH + CYAN + BG_BLUE}}Hi!{{NORMAL}}'\n```\n\n### Attributes\n\nRecipes, `mod` statements, and aliases may be annotated with attributes that\nchange their behavior.\n\n| Name | Type | Description |\n|------|------|-------------|\n| `[confirm]`<sup>1.17.0</sup> | recipe | Require confirmation prior to executing recipe. |\n| `[confirm('PROMPT')]`<sup>1.23.0</sup> | recipe | Require confirmation prior to executing recipe with a custom prompt. |\n| `[doc('DOC')]`<sup>1.27.0</sup> | module, recipe | Set recipe or module's [documentation comment](#documentation-comments) to `DOC`. |\n| `[extension('EXT')]`<sup>1.32.0</sup> | recipe | Set shebang recipe script's file extension to `EXT`. `EXT` should include a period if one is desired. |\n| `[group('NAME')]`<sup>1.27.0</sup> | module, recipe | Put recipe or module in in [group](#groups) `NAME`. |\n| `[linux]`<sup>1.8.0</sup> | recipe | Enable recipe on Linux. |\n| `[macos]`<sup>1.8.0</sup> | recipe | Enable recipe on MacOS. |\n| `[no-cd]`<sup>1.9.0</sup> | recipe | Don't change directory before executing recipe. |\n| `[no-exit-message]`<sup>1.7.0</sup> | recipe | Don't print an error message if recipe fails. |\n| `[no-quiet]`<sup>1.23.0</sup> | recipe | Override globally quiet recipes and always echo out the recipe. |\n| `[openbsd]`<sup>1.38.0</sup> | recipe | Enable recipe on OpenBSD. |\n| `[positional-arguments]`<sup>1.29.0</sup> | recipe | Turn on [positional arguments](#positional-arguments) for this recipe. |\n| `[private]`<sup>1.10.0</sup> | alias, recipe | Make recipe, alias, or variable private. See [Private Recipes](#private-recipes). |\n| `[script]`<sup>1.33.0</sup> | recipe | Execute recipe as script. See [script recipes](#script-recipes) for more details. |\n| `[script(COMMAND)]`<sup>1.32.0</sup> | recipe | Execute recipe as a script interpreted by `COMMAND`. See [script recipes](#script-recipes) for more details. |\n| `[unix]`<sup>1.8.0</sup> | recipe | Enable recipe on Unixes. (Includes MacOS). |\n| `[windows]`<sup>1.8.0</sup> | recipe | Enable recipe on Windows. |\n| `[working-directory(PATH)]`<sup>1.38.0</sup> | recipe | Set recipe working directory. `PATH` may be relative or absolute. If relative, it is interpreted relative to the default working directory. |\n\nA recipe can have multiple attributes, either on multiple lines:\n\n```just\n[no-cd]\n[private]\nfoo:\n    echo \"foo\"\n```\n\nOr separated by commas on a single line<sup>1.14.0</sup>:\n\n```just\n[no-cd, private]\nfoo:\n    echo \"foo\"\n```\n\n#### Enabling and Disabling Recipes<sup>1.8.0</sup>\n\nThe `[linux]`, `[macos]`, `[unix]`, and `[windows]` attributes are\nconfiguration attributes. By default, recipes are always enabled. A recipe with\none or more configuration attributes will only be enabled when one or more of\nthose configurations is active.\n\nThis can be used to write `justfile`s that behave differently depending on\nwhich operating system they run on. The `run` recipe in this `justfile` will\ncompile and run `main.c`, using a different C compiler and using the correct\noutput binary name for that compiler depending on the operating system:\n\n```just\n[unix]\nrun:\n  cc main.c\n  ./a.out\n\n[windows]\nrun:\n  cl main.c\n  main.exe\n```\n\n#### Disabling Changing Directory<sup>1.9.0</sup>\n\n`just` normally executes recipes with the current directory set to the\ndirectory that contains the `justfile`. This can be disabled using the\n`[no-cd]` attribute. This can be used to create recipes which use paths\nrelative to the invocation directory, or which operate on the current\ndirectory.\n\nFor example, this `commit` recipe:\n\n```just\n[no-cd]\ncommit file:\n  git add {{file}}\n  git commit\n```\n\nCan be used with paths that are relative to the current directory, because\n`[no-cd]` prevents `just` from changing the current directory when executing\n`commit`.\n\n#### Requiring Confirmation for Recipes<sup>1.17.0</sup>\n\n`just` normally executes all recipes unless there is an error. The `[confirm]`\nattribute allows recipes require confirmation in the terminal prior to running.\nThis can be overridden by passing `--yes` to `just`, which will automatically\nconfirm any recipes marked by this attribute.\n\nRecipes dependent on a recipe that requires confirmation will not be run if the\nrelied upon recipe is not confirmed, as well as recipes passed after any recipe\nthat requires confirmation.\n\n```just\n[confirm]\ndelete-all:\n  rm -rf *\n```\n\n#### Custom Confirmation Prompt<sup>1.23.0</sup>\n\nThe default confirmation prompt can be overridden with `[confirm(PROMPT)]`:\n\n```just\n[confirm(\"Are you sure you want to delete everything?\")]\ndelete-everything:\n  rm -rf *\n```\n\n### Groups\n\nRecipes and modules may be annotated with a group name:\n\n```just\n[group('lint')]\njs-lint:\n    echo 'Running JS linter…'\n\n[group('rust recipes')]\n[group('lint')]\nrust-lint:\n    echo 'Running Rust linter…'\n\n[group('lint')]\ncpp-lint:\n  echo 'Running C++ linter…'\n\n# not in any group\nemail-everyone:\n    echo 'Sending mass email…'\n```\n\nRecipes are listed by group:\n\n```\n$ just --list\nAvailable recipes:\n    email-everyone # not in any group\n\n    [lint]\n    cpp-lint\n    js-lint\n    rust-lint\n\n    [rust recipes]\n    rust-lint\n```\n\n`just --list --unsorted` prints recipes in their justfile order within each group:\n\n```\n$ just --list --unsorted\nAvailable recipes:\n    (no group)\n    email-everyone # not in any group\n\n    [lint]\n    js-lint\n    rust-lint\n    cpp-lint\n\n    [rust recipes]\n    rust-lint\n```\n\nGroups can be listed with `--groups`:\n\n```\n$ just --groups\nRecipe groups:\n  lint\n  rust recipes\n```\n\nUse `just --groups --unsorted` to print groups in their justfile order.\n\n### Command Evaluation Using Backticks\n\nBackticks can be used to store the result of commands:\n\n```just\nlocalhost := `dumpinterfaces | cut -d: -f2 | sed 's/\\/.*//' | sed 's/ //g'`\n\nserve:\n  ./serve {{localhost}} 8080\n```\n\nIndented backticks, delimited by three backticks, are de-indented in the same\nmanner as indented strings:\n\n````just\n# This backtick evaluates the command `echo foo\\necho bar\\n`, which produces the value `foo\\nbar\\n`.\nstuff := ```\n    echo foo\n    echo bar\n  ```\n````\n\nSee the [Strings](#strings) section for details on unindenting.\n\nBackticks may not start with `#!`. This syntax is reserved for a future\nupgrade.\n\nThe [`shell(…)` function](#external-commands) provides a more general mechanism\nto invoke external commands, including the ability to execute the contents of a\nvariable as a command, and to pass arguments to a command.\n\n### Conditional Expressions\n\n`if`/`else` expressions evaluate different branches depending on if two\nexpressions evaluate to the same value:\n\n```just\nfoo := if \"2\" == \"2\" { \"Good!\" } else { \"1984\" }\n\nbar:\n  @echo \"{{foo}}\"\n```\n\n```console\n$ just bar\nGood!\n```\n\nIt is also possible to test for inequality:\n\n```just\nfoo := if \"hello\" != \"goodbye\" { \"xyz\" } else { \"abc\" }\n\nbar:\n  @echo {{foo}}\n```\n\n```console\n$ just bar\nxyz\n```\n\nAnd match against regular expressions:\n\n```just\nfoo := if \"hello\" =~ 'hel+o' { \"match\" } else { \"mismatch\" }\n\nbar:\n  @echo {{foo}}\n```\n\n```console\n$ just bar\nmatch\n```\n\nRegular expressions are provided by the\n[regex crate](https://github.com/rust-lang/regex), whose syntax is documented on\n[docs.rs](https://docs.rs/regex/1.5.4/regex/#syntax). Since regular expressions\ncommonly use backslash escape sequences, consider using single-quoted string\nliterals, which will pass slashes to the regex parser unmolested.\n\nConditional expressions short-circuit, which means they only evaluate one of\ntheir branches. This can be used to make sure that backtick expressions don't\nrun when they shouldn't.\n\n```just\nfoo := if env_var(\"RELEASE\") == \"true\" { `get-something-from-release-database` } else { \"dummy-value\" }\n```\n\nConditionals can be used inside of recipes:\n\n```just\nbar foo:\n  echo {{ if foo == \"bar\" { \"hello\" } else { \"goodbye\" } }}\n```\n\nNote the space after the final `}`! Without the space, the interpolation will\nbe prematurely closed.\n\nMultiple conditionals can be chained:\n\n```just\nfoo := if \"hello\" == \"goodbye\" {\n  \"xyz\"\n} else if \"a\" == \"a\" {\n  \"abc\"\n} else {\n  \"123\"\n}\n\nbar:\n  @echo {{foo}}\n```\n\n```console\n$ just bar\nabc\n```\n\n### Stopping execution with error\n\nExecution can be halted with the `error` function. For example:\n\n```just\nfoo := if \"hello\" == \"goodbye\" {\n  \"xyz\"\n} else if \"a\" == \"b\" {\n  \"abc\"\n} else {\n  error(\"123\")\n}\n```\n\nWhich produce the following error when run:\n\n```\nerror: Call to function `error` failed: 123\n   |\n16 |   error(\"123\")\n```\n\n### Setting Variables from the Command Line\n\nVariables can be overridden from the command line.\n\n```just\nos := \"linux\"\n\ntest: build\n  ./test --test {{os}}\n\nbuild:\n  ./build {{os}}\n```\n\n```console\n$ just\n./build linux\n./test --test linux\n```\n\nAny number of arguments of the form `NAME=VALUE` can be passed before recipes:\n\n```console\n$ just os=plan9\n./build plan9\n./test --test plan9\n```\n\nOr you can use the `--set` flag:\n\n```console\n$ just --set os bsd\n./build bsd\n./test --test bsd\n```\n\n### Getting and Setting Environment Variables\n\n#### Exporting `just` Variables\n\nAssignments prefixed with the `export` keyword will be exported to recipes as\nenvironment variables:\n\n```just\nexport RUST_BACKTRACE := \"1\"\n\ntest:\n  # will print a stack trace if it crashes\n  cargo test\n```\n\nParameters prefixed with a `$` will be exported as environment variables:\n\n```just\ntest $RUST_BACKTRACE=\"1\":\n  # will print a stack trace if it crashes\n  cargo test\n```\n\nExported variables and parameters are not exported to backticks in the same scope.\n\n```just\nexport WORLD := \"world\"\n# This backtick will fail with \"WORLD: unbound variable\"\nBAR := `echo hello $WORLD`\n```\n\n```just\n# Running `just a foo` will fail with \"A: unbound variable\"\na $A $B=`echo $A`:\n  echo $A $B\n```\n\nWhen [export](#export) is set, all `just` variables are exported as environment\nvariables.\n\n#### Unexporting Environment Variables<sup>1.29.0</sup>\n\nEnvironment variables can be unexported with the `unexport keyword`:\n\n```just\nunexport FOO\n\n@foo:\n  echo $FOO\n```\n\n```\n$ export FOO=bar\n$ just foo\nsh: FOO: unbound variable\n```\n\n#### Getting Environment Variables from the environment\n\nEnvironment variables from the environment are passed automatically to the\nrecipes.\n\n```just\nprint_home_folder:\n  echo \"HOME is: '${HOME}'\"\n```\n\n```console\n$ just\nHOME is '/home/myuser'\n```\n\n#### Setting `just` Variables from Environment Variables\n\nEnvironment variables can be propagated to `just` variables using the `env()` function.\nSee\n[environment-variables](#environment-variables).\n\n### Recipe Parameters\n\nRecipes may have parameters. Here recipe `build` has a parameter called\n`target`:\n\n```just\nbuild target:\n  @echo 'Building {{target}}…'\n  cd {{target}} && make\n```\n\nTo pass arguments on the command line, put them after the recipe name:\n\n```console\n$ just build my-awesome-project\nBuilding my-awesome-project…\ncd my-awesome-project && make\n```\n\nTo pass arguments to a dependency, put the dependency in parentheses along with\nthe arguments:\n\n```just\ndefault: (build \"main\")\n\nbuild target:\n  @echo 'Building {{target}}…'\n  cd {{target}} && make\n```\n\nVariables can also be passed as arguments to dependencies:\n\n```just\ntarget := \"main\"\n\n_build version:\n  @echo 'Building {{version}}…'\n  cd {{version}} && make\n\nbuild: (_build target)\n```\n\nA command's arguments can be passed to dependency by putting the dependency in\nparentheses along with the arguments:\n\n```just\nbuild target:\n  @echo \"Building {{target}}…\"\n\npush target: (build target)\n  @echo 'Pushing {{target}}…'\n```\n\nParameters may have default values:\n\n```just\ndefault := 'all'\n\ntest target tests=default:\n  @echo 'Testing {{target}}:{{tests}}…'\n  ./test --tests {{tests}} {{target}}\n```\n\nParameters with default values may be omitted:\n\n```console\n$ just test server\nTesting server:all…\n./test --tests all server\n```\n\nOr supplied:\n\n```console\n$ just test server unit\nTesting server:unit…\n./test --tests unit server\n```\n\nDefault values may be arbitrary expressions, but expressions containing the\n`+`, `&&`, `||`, or `/` operators must be parenthesized:\n\n```just\narch := \"wasm\"\n\ntest triple=(arch + \"-unknown-unknown\") input=(arch / \"input.dat\"):\n  ./test {{triple}}\n```\n\nThe last parameter of a recipe may be variadic, indicated with either a `+` or\na `*` before the argument name:\n\n```just\nbackup +FILES:\n  scp {{FILES}} me@server.com:\n```\n\nVariadic parameters prefixed with `+` accept _one or more_ arguments and expand\nto a string containing those arguments separated by spaces:\n\n```console\n$ just backup FAQ.md GRAMMAR.md\nscp FAQ.md GRAMMAR.md me@server.com:\nFAQ.md                  100% 1831     1.8KB/s   00:00\nGRAMMAR.md              100% 1666     1.6KB/s   00:00\n```\n\nVariadic parameters prefixed with `*` accept _zero or more_ arguments and\nexpand to a string containing those arguments separated by spaces, or an empty\nstring if no arguments are present:\n\n```just\ncommit MESSAGE *FLAGS:\n  git commit {{FLAGS}} -m \"{{MESSAGE}}\"\n```\n\nVariadic parameters can be assigned default values. These are overridden by\narguments passed on the command line:\n\n```just\ntest +FLAGS='-q':\n  cargo test {{FLAGS}}\n```\n\n`{{…}}` substitutions may need to be quoted if they contain spaces. For\nexample, if you have the following recipe:\n\n```just\nsearch QUERY:\n  lynx https://www.google.com/?q={{QUERY}}\n```\n\nAnd you type:\n\n```console\n$ just search \"cat toupee\"\n```\n\n`just` will run the command `lynx https://www.google.com/?q=cat toupee`, which\nwill get parsed by `sh` as `lynx`, `https://www.google.com/?q=cat`, and\n`toupee`, and not the intended `lynx` and `https://www.google.com/?q=cat toupee`.\n\nYou can fix this by adding quotes:\n\n```just\nsearch QUERY:\n  lynx 'https://www.google.com/?q={{QUERY}}'\n```\n\nParameters prefixed with a `$` will be exported as environment variables:\n\n```just\nfoo $bar:\n  echo $bar\n```\n\n### Dependencies\n\nDependencies run before recipes that depend on them:\n\n```just\na: b\n  @echo A\n\nb:\n  @echo B\n```\n\n```\n$ just a\nB\nA\n```\n\nIn a given invocation of `just`, a recipe with the same arguments will only run\nonce, regardless of how many times it appears in the command-line invocation,\nor how many times it appears as a dependency:\n\n```just\na:\n  @echo A\n\nb: a\n  @echo B\n\nc: a\n  @echo C\n```\n\n```\n$ just a a a a a\nA\n$ just b c\nA\nB\nC\n```\n\nMultiple recipes may depend on a recipe that performs some kind of setup, and\nwhen those recipes run, that setup will only be performed once:\n\n```just\nbuild:\n  cc main.c\n\ntest-foo: build\n  ./a.out --test foo\n\ntest-bar: build\n  ./a.out --test bar\n```\n\n```\n$ just test-foo test-bar\ncc main.c\n./a.out --test foo\n./a.out --test bar\n```\n\nRecipes in a given run are only skipped when they receive the same arguments:\n\n```just\nbuild:\n  cc main.c\n\ntest TEST: build\n  ./a.out --test {{TEST}}\n```\n\n```\n$ just test foo test bar\ncc main.c\n./a.out --test foo\n./a.out --test bar\n```\n\n#### Running Recipes at the End of a Recipe\n\nNormal dependencies of a recipes always run before a recipe starts. That is to\nsay, the dependee always runs before the depender. These dependencies are\ncalled \"prior dependencies\".\n\nA recipe can also have subsequent dependencies, which run immediately after the\nrecipe and are introduced with an `&&`:\n\n```just\na:\n  echo 'A!'\n\nb: a && c d\n  echo 'B!'\n\nc:\n  echo 'C!'\n\nd:\n  echo 'D!'\n```\n\n…running _b_ prints:\n\n```console\n$ just b\necho 'A!'\nA!\necho 'B!'\nB!\necho 'C!'\nC!\necho 'D!'\nD!\n```\n\n#### Running Recipes in the Middle of a Recipe\n\n`just` doesn't support running recipes in the middle of another recipe, but you\ncan call `just` recursively in the middle of a recipe. Given the following\n`justfile`:\n\n```just\na:\n  echo 'A!'\n\nb: a\n  echo 'B start!'\n  just c\n  echo 'B end!'\n\nc:\n  echo 'C!'\n```\n\n…running _b_ prints:\n\n```console\n$ just b\necho 'A!'\nA!\necho 'B start!'\nB start!\necho 'C!'\nC!\necho 'B end!'\nB end!\n```\n\nThis has limitations, since recipe `c` is run with an entirely new invocation\nof `just`: Assignments will be recalculated, dependencies might run twice, and\ncommand line arguments will not be propagated to the child `just` process.\n\n### Shebang Recipes\n\nRecipes that start with `#!` are called shebang recipes, and are executed by\nsaving the recipe body to a file and running it. This lets you write recipes in\ndifferent languages:\n\n```just\npolyglot: python js perl sh ruby nu\n\npython:\n  #!/usr/bin/env python3\n  print('Hello from python!')\n\njs:\n  #!/usr/bin/env node\n  console.log('Greetings from JavaScript!')\n\nperl:\n  #!/usr/bin/env perl\n  print \"Larry Wall says Hi!\\n\";\n\nsh:\n  #!/usr/bin/env sh\n  hello='Yo'\n  echo \"$hello from a shell script!\"\n\nnu:\n  #!/usr/bin/env nu\n  let hello = 'Hola'\n  echo $\"($hello) from a nushell script!\"\n\nruby:\n  #!/usr/bin/env ruby\n  puts \"Hello from ruby!\"\n```\n\n```console\n$ just polyglot\nHello from python!\nGreetings from JavaScript!\nLarry Wall says Hi!\nYo from a shell script!\nHola from a nushell script!\nHello from ruby!\n```\n\nOn Unix-like operating systems, including Linux and MacOS, shebang recipes are\nexecuted by saving the recipe body to a file in a temporary directory, marking\nthe file as executable, and executing it. The OS then parses the shebang line\ninto a command line and invokes it, including the path to the file. For\nexample, if a recipe starts with `#!/usr/bin/env bash`, the final command that\nthe OS runs will be something like `/usr/bin/env bash\n/tmp/PATH_TO_SAVED_RECIPE_BODY`.\n\nShebang line splitting is operating system dependent. When passing a command\nwith arguments, you may need to tell `env` to split them explicitly by using\nthe `-S` flag:\n\n```just\nrun:\n  #!/usr/bin/env -S bash -x\n  ls\n```\n\nWindows does not support shebang lines. On Windows, `just` splits the shebang\nline into a command and arguments, saves the recipe body to a file, and invokes\nthe split command and arguments, adding the path to the saved recipe body as\nthe final argument. For example, on Windows, if a recipe starts with `#! py`,\nthe final command the OS runs will be something like\n`py C:\\Temp\\PATH_TO_SAVED_RECIPE_BODY`.\n\n### Python Recipes with `uv`\n\n[`uv`](https://github.com/astral-sh/uv) is an excellent cross-platform python\nproject manager, written in Rust.\n\nUsing the `[script]` attribute and `script-interpreter` setting, `just` can\neasily be configured to run Python recipes with `uv`:\n\n```just\nset unstable\n\nset script-interpreter := ['uv', 'run', '--script']\n\n[script]\nhello:\n  print(\"Hello from Python!\")\n\n[script]\ngoodbye:\n  # /// script\n  # requires-python = \">=3.11\"\n  # dependencies=[\"sh\"]\n  # ///\n  import sh\n  print(sh.echo(\"Goodbye from Python!\"), end='')\n```\n\nOf course, a shebang also works:\n\n```just\nhello:\n  #!/usr/bin/env uv run --script\n  print(\"Hello from Python!\")\n```\n\n### Script Recipes\n\nRecipes with a `[script(COMMAND)]`<sup>1.32.0</sup> attribute are run as\nscripts interpreted by `COMMAND`. This avoids some of the issues with shebang\nrecipes, such as the use of `cygpath` on Windows, the need to use\n`/usr/bin/env`, and inconsistences in shebang line splitting across Unix OSs.\n\nRecipes with an empty `[script]` attribute are executed with the value of `set\nscript-interpreter := […]`<sup>1.33.0</sup>, defaulting to `sh -eu`, and *not*\nthe value of `set shell`.\n\nThe body of the recipe is evaluated, written to disk in the temporary\ndirectory, and run by passing its path as an argument to `COMMAND`.\n\nThe `[script(…)]` attribute is unstable, so you'll need to use `set unstable`,\nset the `JUST_UNSTABLE` environment variable, or pass `--unstable` on the\ncommand line.\n\n### Safer Bash Shebang Recipes\n\nIf you're writing a `bash` shebang recipe, consider adding `set -euxo\npipefail`:\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  hello='Yo'\n  echo \"$hello from Bash!\"\n```\n\nIt isn't strictly necessary, but `set -euxo pipefail` turns on a few useful\nfeatures that make `bash` shebang recipes behave more like normal, linewise\n`just` recipe:\n\n- `set -e` makes `bash` exit if a command fails.\n\n- `set -u` makes `bash` exit if a variable is undefined.\n\n- `set -x` makes `bash` print each script line before it's run.\n\n- `set -o pipefail` makes `bash` exit if a command in a pipeline fails. This is\n  `bash`-specific, so isn't turned on in normal linewise `just` recipes.\n\nTogether, these avoid a lot of shell scripting gotchas.\n\n#### Shebang Recipe Execution on Windows\n\nOn Windows, shebang interpreter paths containing a `/` are translated from\nUnix-style paths to Windows-style paths using `cygpath`, a utility that ships\nwith [Cygwin](http://www.cygwin.com).\n\nFor example, to execute this recipe on Windows:\n\n```just\necho:\n  #!/bin/sh\n  echo \"Hello!\"\n```\n\nThe interpreter path `/bin/sh` will be translated to a Windows-style path using\n`cygpath` before being executed.\n\nIf the interpreter path does not contain a `/` it will be executed without\nbeing translated. This is useful if `cygpath` is not available, or you wish to\npass a Windows-style path to the interpreter.\n\n### Setting Variables in a Recipe\n\nRecipe lines are interpreted by the shell, not `just`, so it's not possible to\nset `just` variables in the middle of a recipe:\n\n```justfile\nfoo:\n  x := \"hello\" # This doesn't work!\n  echo {{x}}\n```\n\nIt is possible to use shell variables, but there's another problem. Every\nrecipe line is run by a new shell instance, so variables set in one line won't\nbe set in the next:\n\n```just\nfoo:\n  x=hello && echo $x # This works!\n  y=bye\n  echo $y            # This doesn't, `y` is undefined here!\n```\n\nThe best way to work around this is to use a shebang recipe. Shebang recipe\nbodies are extracted and run as scripts, so a single shell instance will run\nthe whole thing:\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  x=hello\n  echo $x\n```\n\n### Sharing Environment Variables Between Recipes\n\nEach line of each recipe is executed by a fresh shell, so it is not possible to\nshare environment variables between recipes.\n\n#### Using Python Virtual Environments\n\nSome tools, like [Python's venv](https://docs.python.org/3/library/venv.html),\nrequire loading environment variables in order to work, making them challenging\nto use with `just`. As a workaround, you can execute the virtual environment\nbinaries directly:\n\n```just\nvenv:\n  [ -d foo ] || python3 -m venv foo\n\nrun: venv\n  ./foo/bin/python3 main.py\n```\n\n### Changing the Working Directory in a Recipe\n\nEach recipe line is executed by a new shell, so if you change the working\ndirectory on one line, it won't have an effect on later lines:\n\n```just\nfoo:\n  pwd    # This `pwd` will print the same directory…\n  cd bar\n  pwd    # …as this `pwd`!\n```\n\nThere are a couple ways around this. One is to call `cd` on the same line as\nthe command you want to run:\n\n```just\nfoo:\n  cd bar && pwd\n```\n\nThe other is to use a shebang recipe. Shebang recipe bodies are extracted and\nrun as scripts, so a single shell instance will run the whole thing, and thus a\n`cd` on one line will affect later lines, just like a shell script:\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  cd bar\n  pwd\n```\n\n### Indentation\n\nRecipe lines can be indented with spaces or tabs, but not a mix of both. All of\na recipe's lines must have the same type of indentation, but different recipes\nin the same `justfile` may use different indentation.\n\nEach recipe must be indented at least one level from the `recipe-name` but\nafter that may be further indented.\n\nHere's a justfile with a recipe indented with spaces, represented as `·`, and\ntabs, represented as `→`.\n\n```justfile\nset windows-shell := [\"pwsh\", \"-NoLogo\", \"-NoProfileLoadTime\", \"-Command\"]\n\nset ignore-comments\n\nlist-space directory:\n··#!pwsh\n··foreach ($item in $(Get-ChildItem {{directory}} )) {\n····echo $item.Name\n··}\n··echo \"\"\n\n# indentation nesting works even when newlines are escaped\nlist-tab directory:\n→ @foreach ($item in $(Get-ChildItem {{directory}} )) { \\\n→ → echo $item.Name \\\n→ }\n→ @echo \"\"\n```\n\n```pwsh\nPS > just list-space ~\nDesktop\nDocuments\nDownloads\n\nPS > just list-tab ~\nDesktop\nDocuments\nDownloads\n```\n\n### Multi-Line Constructs\n\nRecipes without an initial shebang are evaluated and run line-by-line, which\nmeans that multi-line constructs probably won't do what you want.\n\nFor example, with the following `justfile`:\n\n```justfile\nconditional:\n  if true; then\n    echo 'True!'\n  fi\n```\n\nThe extra leading whitespace before the second line of the `conditional` recipe\nwill produce a parse error:\n\n```console\n$ just conditional\nerror: Recipe line has extra leading whitespace\n  |\n3 |         echo 'True!'\n  |     ^^^^^^^^^^^^^^^^\n```\n\nTo work around this, you can write conditionals on one line, escape newlines\nwith slashes, or add a shebang to your recipe. Some examples of multi-line\nconstructs are provided for reference.\n\n#### `if` statements\n\n```just\nconditional:\n  if true; then echo 'True!'; fi\n```\n\n```just\nconditional:\n  if true; then \\\n    echo 'True!'; \\\n  fi\n```\n\n```just\nconditional:\n  #!/usr/bin/env sh\n  if true; then\n    echo 'True!'\n  fi\n```\n\n#### `for` loops\n\n```just\nfor:\n  for file in `ls .`; do echo $file; done\n```\n\n```just\nfor:\n  for file in `ls .`; do \\\n    echo $file; \\\n  done\n```\n\n```just\nfor:\n  #!/usr/bin/env sh\n  for file in `ls .`; do\n    echo $file\n  done\n```\n\n#### `while` loops\n\n```just\nwhile:\n  while `server-is-dead`; do ping -c 1 server; done\n```\n\n```just\nwhile:\n  while `server-is-dead`; do \\\n    ping -c 1 server; \\\n  done\n```\n\n```just\nwhile:\n  #!/usr/bin/env sh\n  while `server-is-dead`; do\n    ping -c 1 server\n  done\n```\n\n#### Outside Recipe Bodies\n\nParenthesized expressions can span multiple lines:\n\n```just\nabc := ('a' +\n        'b'\n         + 'c')\n\nabc2 := (\n  'a' +\n  'b' +\n  'c'\n)\n\nfoo param=('foo'\n      + 'bar'\n    ):\n  echo {{param}}\n\nbar: (foo\n        'Foo'\n     )\n  echo 'Bar!'\n```\n\nLines ending with a backslash continue on to the next line as if the lines were\njoined by whitespace<sup>1.15.0</sup>:\n\n```just\na := 'foo' + \\\n     'bar'\n\nfoo param1 \\\n  param2='foo' \\\n  *varparam='': dep1 \\\n                (dep2 'foo')\n  echo {{param1}} {{param2}} {{varparam}}\n\ndep1: \\\n    # this comment is not part of the recipe body\n  echo 'dep1'\n\ndep2 \\\n  param:\n    echo 'Dependency with parameter {{param}}'\n```\n\nBackslash line continuations can also be used in interpolations. The line\nfollowing the backslash must be indented.\n\n```just\nrecipe:\n  echo '{{ \\\n  \"This interpolation \" + \\\n    \"has a lot of text.\" \\\n  }}'\n  echo 'back to recipe body'\n```\n\n### Command Line Options\n\n`just` supports a number of useful command line options for listing, dumping,\nand debugging recipes and variables:\n\n```console\n$ just --list\nAvailable recipes:\n  js\n  perl\n  polyglot\n  python\n  ruby\n$ just --show perl\nperl:\n  #!/usr/bin/env perl\n  print \"Larry Wall says Hi!\\n\";\n$ just --show polyglot\npolyglot: python js perl sh ruby\n```\n\nSome command-line options can be set with environment variables. For example:\n\n```console\n$ export JUST_UNSTABLE=1\n$ just\n```\n\nIs equivalent to:\n\n```console\n$ just --unstable\n```\n\nConsult `just --help` to see which options can be set from environment\nvariables.\n\n### Private Recipes\n\nRecipes and aliases whose name starts with a `_` are omitted from `just --list`:\n\n```just\ntest: _test-helper\n  ./bin/test\n\n_test-helper:\n  ./bin/super-secret-test-helper-stuff\n```\n\n```console\n$ just --list\nAvailable recipes:\n    test\n```\n\nAnd from `just --summary`:\n\n```console\n$ just --summary\ntest\n```\n\nThe `[private]` attribute<sup>1.10.0</sup> may also be used to hide recipes or\naliases without needing to change the name:\n\n```just\n[private]\nfoo:\n\n[private]\nalias b := bar\n\nbar:\n```\n\n```console\n$ just --list\nAvailable recipes:\n    bar\n```\n\nThis is useful for helper recipes which are only meant to be used as\ndependencies of other recipes.\n\n### Quiet Recipes\n\nA recipe name may be prefixed with `@` to invert the meaning of `@` before each\nline:\n\n```just\n@quiet:\n  echo hello\n  echo goodbye\n  @# all done!\n```\n\nNow only the lines starting with `@` will be echoed:\n\n```console\n$ just quiet\nhello\ngoodbye\n# all done!\n```\n\nAll recipes in a Justfile can be made quiet with `set quiet`:\n\n```just\nset quiet\n\nfoo:\n  echo \"This is quiet\"\n\n@foo2:\n  echo \"This is also quiet\"\n```\n\nThe `[no-quiet]` attribute overrides this setting:\n\n```just\nset quiet\n\nfoo:\n  echo \"This is quiet\"\n\n[no-quiet]\nfoo2:\n  echo \"This is not quiet\"\n```\n\nShebang recipes are quiet by default:\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  echo 'Foo!'\n```\n\n```console\n$ just foo\nFoo!\n```\n\nAdding `@` to a shebang recipe name makes `just` print the recipe before\nexecuting it:\n\n```just\n@bar:\n  #!/usr/bin/env bash\n  echo 'Bar!'\n```\n\n```console\n$ just bar\n#!/usr/bin/env bash\necho 'Bar!'\nBar!\n```\n\n`just` normally prints error messages when a recipe line fails. These error\nmessages can be suppressed using the `[no-exit-message]`<sup>1.7.0</sup>\nattribute. You may find this especially useful with a recipe that wraps a tool:\n\n```just\ngit *args:\n    @git {{args}}\n```\n\n```console\n$ just git status\nfatal: not a git repository (or any of the parent directories): .git\nerror: Recipe `git` failed on line 2 with exit code 128\n```\n\nAdd the attribute to suppress the exit error message when the tool exits with a\nnon-zero code:\n\n```just\n[no-exit-message]\ngit *args:\n    @git {{args}}\n```\n\n```console\n$ just git status\nfatal: not a git repository (or any of the parent directories): .git\n```\n\n### Selecting Recipes to Run With an Interactive Chooser\n\nThe `--choose` subcommand makes `just` invoke a chooser to select which recipes\nto run. Choosers should read lines containing recipe names from standard input\nand print one or more of those names separated by spaces to standard output.\n\nBecause there is currently no way to run a recipe that requires arguments with\n`--choose`, such recipes will not be given to the chooser. Private recipes and\naliases are also skipped.\n\nThe chooser can be overridden with the `--chooser` flag. If `--chooser` is not\ngiven, then `just` first checks if `$JUST_CHOOSER` is set. If it isn't, then\nthe chooser defaults to `fzf`, a popular fuzzy finder.\n\nArguments can be included in the chooser, i.e. `fzf --exact`.\n\nThe chooser is invoked in the same way as recipe lines. For example, if the\nchooser is `fzf`, it will be invoked with `sh -cu 'fzf'`, and if the shell, or\nthe shell arguments are overridden, the chooser invocation will respect those\noverrides.\n\nIf you'd like `just` to default to selecting recipes with a chooser, you can\nuse this as your default recipe:\n\n```just\ndefault:\n  @just --choose\n```\n\n### Invoking `justfile`s in Other Directories\n\nIf the first argument passed to `just` contains a `/`, then the following\noccurs:\n\n1.  The argument is split at the last `/`.\n\n2.  The part before the last `/` is treated as a directory. `just` will start\n    its search for the `justfile` there, instead of in the current directory.\n\n3.  The part after the last slash is treated as a normal argument, or ignored\n    if it is empty.\n\nThis may seem a little strange, but it's useful if you wish to run a command in\na `justfile` that is in a subdirectory.\n\nFor example, if you are in a directory which contains a subdirectory named\n`foo`, which contains a `justfile` with the recipe `build`, which is also the\ndefault recipe, the following are all equivalent:\n\n```console\n$ (cd foo && just build)\n$ just foo/build\n$ just foo/\n```\n\nAdditional recipes after the first are sought in the same `justfile`. For\nexample, the following are both equivalent:\n\n```console\n$ just foo/a b\n$ (cd foo && just a b)\n```\n\nAnd will both invoke recipes `a` and `b` in `foo/justfile`.\n\n### Imports\n\nOne `justfile` can include the contents of another using `import` statements.\n\nIf you have the following `justfile`:\n\n```justfile\nimport 'foo/bar.just'\n\na: b\n  @echo A\n```\n\nAnd the following text in `foo/bar.just`:\n\n```just\nb:\n  @echo B\n```\n\n`foo/bar.just` will be included in `justfile` and recipe `b` will be defined:\n\n```console\n$ just b\nB\n$ just a\nB\nA\n```\n\nThe `import` path can be absolute or relative to the location of the justfile\ncontaining it. A leading `~/` in the import path is replaced with the current\nusers home directory.\n\nJustfiles are insensitive to order, so included files can reference variables\nand recipes defined after the `import` statement.\n\nImported files can themselves contain `import`s, which are processed\nrecursively.\n\n`allow-duplicate-recipes` and `allow-duplicate-variables` allow duplicate\nrecipes and variables, respectively, to override each other, instead of\nproducing an error.\n\nWithin a module, later definitions override earlier definitions:\n\n```just\nset allow-duplicate-recipes\n\nfoo:\n\nfoo:\n  echo 'yes'\n```\n\nWhen `import`s are involved, things unfortunately get much more complicated and\nhard to explain.\n\nShallower definitions always override deeper definitions, so recipes at the top\nlevel will override recipes in imports, and recipes in an import will override\nrecipes in an import which itself imports those recipes.\n\nWhen two duplicate definitions are imported and are at the same depth, the one\nfrom the earlier import will override the one from the later import.\n\nThis is because `just` uses a stack when processing imports, pushing imports\nonto the stack in source-order, and always processing the top of the stack\nnext, so earlier imports are actually handled later by the compiler.\n\nThis is definitely a bug, but since `just` has very strong backwards\ncompatibility guarantees and we take enormous pains not to break anyone's\n`justfile`, we have created issue #2540 to discuss whether or not we can\nactually fix it.\n\nImports may be made optional by putting a `?` after the `import` keyword:\n\n```just\nimport? 'foo/bar.just'\n```\n\nImporting the same source file multiple times is not an error<sup>1.37.0</sup>.\nThis allows importing multiple justfiles, for example `foo.just` and\n`bar.just`, which both import a third justfile containing shared recipes, for\nexample `baz.just`, without the duplicate import of `baz.just` being an error:\n\n```justfile\n# justfile\nimport 'foo.just'\nimport 'bar.just'\n```\n\n```justfile\n# foo.just\nimport 'baz.just'\nfoo: baz\n```\n\n```justfile\n# bar.just\nimport 'baz.just'\nbar: baz\n```\n\n```just\n# baz\nbaz:\n```\n\n### Modules<sup>1.19.0</sup>\n\nA `justfile` can declare modules using `mod` statements.\n\n`mod` statements were stabilized in `just`<sup>1.31.0</sup>. In earlier\nversions, you'll need to use the `--unstable` flag, `set unstable`, or set the\n`JUST_UNSTABLE` environment variable to use them.\n\nIf you have the following `justfile`:\n\n```justfile\nmod bar\n\na:\n  @echo A\n```\n\nAnd the following text in `bar.just`:\n\n```just\nb:\n  @echo B\n```\n\n`bar.just` will be included in `justfile` as a submodule. Recipes, aliases, and\nvariables defined in one submodule cannot be used in another, and each module\nuses its own settings.\n\nRecipes in submodules can be invoked as subcommands:\n\n```console\n$ just bar b\nB\n```\n\nOr with path syntax:\n\n```console\n$ just bar::b\nB\n```\n\nIf a module is named `foo`, just will search for the module file in `foo.just`,\n`foo/mod.just`, `foo/justfile`, and `foo/.justfile`. In the latter two cases,\nthe module file may have any capitalization.\n\nModule statements may be of the form:\n\n```justfile\nmod foo 'PATH'\n```\n\nWhich loads the module's source file from `PATH`, instead of from the usual\nlocations. A leading `~/` in `PATH` is replaced with the current user's home\ndirectory. `PATH` may point to the module source file itself, or to a directory\ncontaining the module source file with the name `mod.just`, `justfile`, or\n`.justfile`. In the latter two cases, the module file may have any\ncapitalization.\n\nEnvironment files are only loaded for the root justfile, and loaded environment\nvariables are available in submodules. Settings in submodules that affect\nenvironment file loading are ignored.\n\nRecipes in submodules without the `[no-cd]` attribute run with the working\ndirectory set to the directory containing the submodule source file.\n\n`justfile()` and `justfile_directory()` always return the path to the root\njustfile and the directory that contains it, even when called from submodule\nrecipes.\n\nModules may be made optional by putting a `?` after the `mod` keyword:\n\n```just\nmod? foo\n```\n\nMissing source files for optional modules do not produce an error.\n\nOptional modules with no source file do not conflict, so you can have multiple\nmod statements with the same name, but with different source file paths, as\nlong as at most one source file exists:\n\n```just\nmod? foo 'bar.just'\nmod? foo 'baz.just'\n```\n\nModules may be given doc comments which appear in `--list`\noutput<sup>1.30.0</sup>:\n\n```justfile\n# foo is a great module!\nmod foo\n```\n\n```console\n$ just --list\nAvailable recipes:\n    foo ... # foo is a great module!\n```\n\nModules are still missing a lot of features, for example, the ability to depend\non recipes and refer to variables in other modules. See the\n[module improvement tracking issue](https://github.com/casey/just/issues/2252)\nfor more information.\n\n### Hiding `justfile`s\n\n`just` looks for `justfile`s named `justfile` and `.justfile`, which can be\nused to keep a `justfile` hidden.\n\n### Just Scripts\n\nBy adding a shebang line to the top of a `justfile` and making it executable,\n`just` can be used as an interpreter for scripts:\n\n```console\n$ cat > script <<EOF\n#!/usr/bin/env just --justfile\n\nfoo:\n  echo foo\nEOF\n$ chmod +x script\n$ ./script foo\necho foo\nfoo\n```\n\nWhen a script with a shebang is executed, the system supplies the path to the\nscript as an argument to the command in the shebang. So, with a shebang of\n`#!/usr/bin/env just --justfile`, the command will be `/usr/bin/env just --justfile PATH_TO_SCRIPT`.\n\nWith the above shebang, `just` will change its working directory to the\nlocation of the script. If you'd rather leave the working directory unchanged,\nuse `#!/usr/bin/env just --working-directory . --justfile`.\n\nNote: Shebang line splitting is not consistent across operating systems. The\nprevious examples have only been tested on macOS. On Linux, you may need to\npass the `-S` flag to `env`:\n\n```just\n#!/usr/bin/env -S just --justfile\n\ndefault:\n  echo foo\n```\n\n### Formatting and dumping `justfile`s\n\nEach `justfile` has a canonical formatting with respect to whitespace and\nnewlines.\n\nYou can overwrite the current justfile with a canonically-formatted version\nusing the currently-unstable `--fmt` flag:\n\n```console\n$ cat justfile\n# A lot of blank lines\n\n\n\n\n\nsome-recipe:\n  echo \"foo\"\n$ just --fmt --unstable\n$ cat justfile\n# A lot of blank lines\n\nsome-recipe:\n    echo \"foo\"\n```\n\nInvoking `just --fmt --check --unstable` runs `--fmt` in check mode. Instead of\noverwriting the `justfile`, `just` will exit with an exit code of 0 if it is\nformatted correctly, and will exit with 1 and print a diff if it is not.\n\nYou can use the `--dump` command to output a formatted version of the\n`justfile` to stdout:\n\n```console\n$ just --dump > formatted-justfile\n```\n\nThe `--dump` command can be used with `--dump-format json` to print a JSON\nrepresentation of a `justfile`.\n\n### Fallback to parent `justfile`s\n\nIf a recipe is not found in a `justfile` and the `fallback` setting is set,\n`just` will look for `justfile`s in the parent directory and up, until it\nreaches the root directory. `just` will stop after it reaches a `justfile` in\nwhich the `fallback` setting is `false` or unset.\n\nAs an example, suppose the current directory contains this `justfile`:\n\n```just\nset fallback\nfoo:\n  echo foo\n```\n\nAnd the parent directory contains this `justfile`:\n\n```just\nbar:\n  echo bar\n```\n\n```console\n$ just bar\nTrying ../justfile\necho bar\nbar\n```\n\n### Avoiding Argument Splitting\n\nGiven this `justfile`:\n\n```just\nfoo argument:\n  touch {{argument}}\n```\n\nThe following command will create two files, `some` and `argument.txt`:\n\n```console\n$ just foo \"some argument.txt\"\n```\n\nThe user's shell will parse `\"some argument.txt\"` as a single argument, but\nwhen `just` replaces `touch {{argument}}` with `touch some argument.txt`, the\nquotes are not preserved, and `touch` will receive two arguments.\n\nThere are a few ways to avoid this: quoting, positional arguments, and exported\narguments.\n\n#### Quoting\n\nQuotes can be added around the `{{argument}}` interpolation:\n\n```just\nfoo argument:\n  touch '{{argument}}'\n```\n\nThis preserves `just`'s ability to catch variable name typos before running,\nfor example if you were to write `{{argument}}`, but will not do what you want\nif the value of `argument` contains single quotes.\n\n#### Positional Arguments\n\nThe `positional-arguments` setting causes all arguments to be passed as\npositional arguments, allowing them to be accessed with `$1`, `$2`, …, and\n`$@`, which can be then double-quoted to avoid further splitting by the shell:\n\n```just\nset positional-arguments\n\nfoo argument:\n  touch \"$1\"\n```\n\nThis defeats `just`'s ability to catch typos, for example if you type `$2`\ninstead of `$1`, but works for all possible values of `argument`, including\nthose with double quotes.\n\n#### Exported Arguments\n\nAll arguments are exported when the `export` setting is set:\n\n```just\nset export\n\nfoo argument:\n  touch \"$argument\"\n```\n\nOr individual arguments may be exported by prefixing them with `$`:\n\n```just\nfoo $argument:\n  touch \"$argument\"\n```\n\nThis defeats `just`'s ability to catch typos, for example if you type\n`$argument`, but works for all possible values of `argument`, including those\nwith double quotes.\n\n### Configuring the Shell\n\nThere are a number of ways to configure the shell for linewise recipes, which\nare the default when a recipe does not start with a `#!` shebang. Their\nprecedence, from highest to lowest, is:\n\n1. The `--shell` and `--shell-arg` command line options. Passing either of\n   these will cause `just` to ignore any settings in the current justfile.\n2. `set windows-shell := [...]`\n3. `set windows-powershell` (deprecated)\n4. `set shell := [...]`\n\nSince `set windows-shell` has higher precedence than `set shell`, you can use\n`set windows-shell` to pick a shell on Windows, and `set shell` to pick a shell\nfor all other platforms.\n\n### Timestamps\n\n`just` can print timestamps before each recipe commands:\n\n```just\nrecipe:\n  echo one\n  sleep 2\n  echo two\n```\n\n```\n$ just --timestamp recipe\n[07:28:46] echo one\none\n[07:28:46] sleep 2\n[07:28:48] echo two\ntwo\n```\n\nBy default, timestamps are formatted as `HH:MM:SS`. The format can be changed\nwith `--timestamp-format`:\n\n```\n$ just --timestamp recipe --timestamp-format '%H:%M:%S%.3f %Z'\n[07:32:11:.349 UTC] echo one\none\n[07:32:11:.350 UTC] sleep 2\n[07:32:13:.352 UTC] echo two\ntwo\n```\n\nThe argument to `--timestamp-format` is a `strftime`-style format string, see\nthe\n[`chrono` library docs](https://docs.rs/chrono/latest/chrono/format/strftime/index.html)\nfor details.\n\nChangelog\n---------\n\nA changelog for the latest release is available in\n[CHANGELOG.md](https://raw.githubusercontent.com/casey/just/master/CHANGELOG.md).\nChangelogs for previous releases are available on\n[the releases page](https://github.com/casey/just/releases). `just --changelog`\ncan also be used to make a `just` binary print its changelog.\n\nMiscellanea\n-----------\n\n### Re-running recipes when files change\n\n[`watchexec`](https://github.com/mattgreen/watchexec) can re-run any command\nwhen files change.\n\nTo re-run the recipe `foo` when any file changes:\n\n```console\nwatchexec just foo\n```\n\nSee `watchexec --help` for more info, including how to specify which files\nshould be watched for changes.\n\n### Running tasks in parallel\n\nGNU parallel can be used to run tasks concurrently:\n\n```just\nparallel:\n  #!/usr/bin/env -S parallel --shebang --ungroup --jobs {{ num_cpus() }}\n  echo task 1 start; sleep 3; echo task 1 done\n  echo task 2 start; sleep 3; echo task 2 done\n  echo task 3 start; sleep 3; echo task 3 done\n  echo task 4 start; sleep 3; echo task 4 done\n```\n\n### Shell Alias\n\nFor lightning-fast command running, put `alias j=just` in your shell's\nconfiguration file.\n\nIn `bash`, the aliased command may not keep the shell completion functionality\ndescribed in the next section. Add the following line to your `.bashrc` to use\nthe same completion function as `just` for your aliased command:\n\n```console\ncomplete -F _just -o bashdefault -o default j\n```\n\n### Shell Completion Scripts\n\nShell completion scripts for Bash, Elvish, Fish, Nushell, PowerShell, and Zsh\nare available [release archives](https://github.com/casey/just/releases).\n\nThe `just` binary can also generate the same completion scripts at runtime\nusing `just --completions SHELL`:\n\n```console\n$ just --completions zsh > just.zsh\n```\n\nPlease refer to your shell's documentation for how to install them.\n\n*macOS Note:* Recent versions of macOS use zsh as the default shell. If you use\nHomebrew to install `just`, it will automatically install the most recent copy\nof the zsh completion script in the Homebrew zsh directory, which the built-in\nversion of zsh doesn't know about by default. It's best to use this copy of the\nscript if possible, since it will be updated whenever you update `just` via\nHomebrew. Also, many other Homebrew packages use the same location for\ncompletion scripts, and the built-in zsh doesn't know about those either. To\ntake advantage of `just` completion in zsh in this scenario, you can set\n`fpath` to the Homebrew location before calling `compinit`. Note also that Oh\nMy Zsh runs `compinit` by default. So your `.zshrc` file could look like this:\n\n```zsh\n# Init Homebrew, which adds environment variables\neval \"$(brew shellenv)\"\n\nfpath=($HOMEBREW_PREFIX/share/zsh/site-functions $fpath)\n\n# Then choose one of these options:\n# 1. If you're using Oh My Zsh, you can initialize it here\n# source $ZSH/oh-my-zsh.sh\n\n# 2. Otherwise, run compinit yourself\n# autoload -U compinit\n# compinit\n```\n\n### Man Page\n\n`just` can print its own man page with `just --man`. Man pages are written in\n[`roff`](https://en.wikipedia.org/wiki/Roff_%28software%29), a venerable markup\nlanguage and one of the first practical applications of Unix. If you have\n[`groff`](https://www.gnu.org/software/groff/) installed you can view the man\npage with  `just --man | groff -mandoc -Tascii | less`.\n\n### Grammar\n\nA non-normative grammar of `justfile`s can be found in\n[GRAMMAR.md](https://github.com/casey/just/blob/master/GRAMMAR.md).\n\n### just.sh\n\nBefore `just` was a fancy Rust program it was a tiny shell script that called\n`make`. You can find the old version in\n[contrib/just.sh](https://github.com/casey/just/blob/master/contrib/just.sh).\n\n### Global and User `justfile`s\n\nIf you want some recipes to be available everywhere, you have a few options.\n\n#### Global Justfile\n\n`just --global-justfile`, or `just -g` for short, searches the following paths,\nin-order, for a justfile:\n\n- `$XDG_CONFIG_HOME/just/justfile`\n- `$HOME/.config/just/justfile`\n- `$HOME/justfile`\n- `$HOME/.justfile`\n\nYou can put recipes that are used across many projects in a global justfile to\neasily invoke them from any directory.\n\n#### User justfile tips\n\nYou can also adopt some of the following workflows. These tips assume you've\ncreated a `justfile` at `~/.user.justfile`, but you can put this `justfile`\nat any convenient path on your system.\n\n##### Recipe Aliases\n\nIf you want to call the recipes in `~/.user.justfile` by name, and don't mind\ncreating an alias for every recipe, add the following to your shell's\ninitialization script:\n\n```console\nfor recipe in `just --justfile ~/.user.justfile --summary`; do\n  alias $recipe=\"just --justfile ~/.user.justfile --working-directory . $recipe\"\ndone\n```\n\nNow, if you have a recipe called `foo` in `~/.user.justfile`, you can just type\n`foo` at the command line to run it.\n\nIt took me way too long to realize that you could create recipe aliases like\nthis. Notwithstanding my tardiness, I am very pleased to bring you this major\nadvance in `justfile` technology.\n\n##### Forwarding Alias\n\nIf you'd rather not create aliases for every recipe, you can create a single alias:\n\n```console\nalias .j='just --justfile ~/.user.justfile --working-directory .'\n```\n\nNow, if you have a recipe called `foo` in `~/.user.justfile`, you can just type\n`.j foo` at the command line to run it.\n\nI'm pretty sure that nobody actually uses this feature, but it's there.\n\n¯\\\\\\_(ツ)\\_/¯\n\n##### Customization\n\nYou can customize the above aliases with additional options. For example, if\nyou'd prefer to have the recipes in your `justfile` run in your home directory,\ninstead of the current directory:\n\n```console\nalias .j='just --justfile ~/.user.justfile --working-directory ~'\n```\n\n### Node.js `package.json` Script Compatibility\n\nThe following export statement gives `just` recipes access to local Node module\nbinaries, and makes `just` recipe commands behave more like `script` entries in\nNode.js `package.json` files:\n\n```just\nexport PATH := \"./node_modules/.bin:\" + env_var('PATH')\n```\n\n### Paths on Windows\n\nOn Windows, functions that return paths will return `\\`-separated paths. When\nnot using PowerShell or `cmd.exe` these paths should be quoted to prevent the\n`\\`s from being interpreted as character escapes:\n\n```just\nls:\n    echo '{{absolute_path(\".\")}}'\n```\n\n### Remote Justfiles\n\nIf you wish to include a `mod` or `import` source file in many `justfiles`\nwithout needing to duplicate it, you can use an optional `mod` or `import`,\nalong with a recipe to fetch the module source:\n\n```just\nimport? 'foo.just'\n\nfetch:\n  curl https://raw.githubusercontent.com/casey/just/master/justfile > foo.just\n```\n\nGiven the above `justfile`, after running `just fetch`, the recipes in\n`foo.just` will be available.\n\n### Printing Complex Strings\n\n`echo` can be used to print strings, but because it processes escape sequences,\nlike `\\n`, and different implementations of `echo` recognize different escape\nsequences, using `printf` is often a better choice.\n\n`printf` takes a C-style format string and any number of arguments, which are\ninterpolated into the format string.\n\nThis can be combined with indented, triple quoted strings to emulate shell\nheredocs.\n\nSubstitution complex strings into recipe bodies with `{…}` can also lead to\ntrouble as it may be split by the shell into multiple arguments depending on\nthe presence of whitespace and quotes. Exporting complex strings as environment\nvariables and referring to them with `\"$NAME\"`, note the double quotes, can\nalso help.\n\nPutting all this together, to print a string verbatim to standard output, with\nall its various escape sequences and quotes undisturbed:\n\n```just\nexport FOO := '''\n  a complicated string with\n  some dis\\tur\\bi\\ng escape sequences\n  and \"quotes\" of 'different' kinds\n'''\n\nbar:\n  printf %s \"$FOO\"\n```\n\n### Alternatives and Prior Art\n\nThere is no shortage of command runners! Some more or less similar alternatives\nto `just` include:\n\n- [make](https://en.wikipedia.org/wiki/Make_(software)): The Unix build tool\n  that inspired `just`. There are a few different modern day descendents of the\n  original `make`, including\n  [FreeBSD Make](https://www.freebsd.org/cgi/man.cgi?make(1)) and\n  [GNU Make](https://www.gnu.org/software/make/).\n- [task](https://github.com/go-task/task): A YAML-based command runner written\n  in Go.\n- [maid](https://github.com/egoist/maid): A Markdown-based command runner\n  written in JavaScript.\n- [microsoft/just](https://github.com/microsoft/just): A JavaScript-based\n  command runner written in JavaScript.\n- [cargo-make](https://github.com/sagiegurari/cargo-make): A command runner for\n  Rust projects.\n- [mmake](https://github.com/tj/mmake): A wrapper around `make` with a number\n  of improvements, including remote includes.\n- [robo](https://github.com/tj/robo): A YAML-based command runner written in\n  Go.\n- [mask](https://github.com/jakedeichert/mask): A Markdown-based command runner\n  written in Rust.\n- [makesure](https://github.com/xonixx/makesure): A simple and portable command\n  runner written in AWK and shell.\n- [haku](https://github.com/VladimirMarkelov/haku): A make-like command runner\n  written in Rust.\n\nContributing\n------------\n\n`just` welcomes your contributions! `just` is released under the maximally\npermissive\n[CC0](https://creativecommons.org/publicdomain/zero/1.0/legalcode.txt) public\ndomain dedication and fallback license, so your changes must also be released\nunder this license.\n\n### Getting Started\n\n`just` is written in Rust. Use\n[rustup](https://www.rust-lang.org/tools/install) to install a Rust toolchain.\n\n`just` is extensively tested. All new features must be covered by unit or\nintegration tests. Unit tests are under\n[src](https://github.com/casey/just/blob/master/src), live alongside the code\nbeing tested, and test code in isolation. Integration tests are in the [tests\ndirectory](https://github.com/casey/just/blob/master/tests) and test the `just`\nbinary from the outside by invoking `just` on a given `justfile` and set of\ncommand-line arguments, and checking the output.\n\nYou should write whichever type of tests are easiest to write for your feature\nwhile still providing good test coverage.\n\nUnit tests are useful for testing new Rust functions that are used internally\nand as an aid for development. A good example are the unit tests which cover\nthe\n[`unindent()` function](https://github.com/casey/just/blob/master/src/unindent.rs),\nused to unindent triple-quoted strings and backticks. `unindent()` has a bunch\nof tricky edge cases which are easy to exercise with unit tests that call\n`unindent()` directly.\n\nIntegration tests are useful for making sure that the final behavior of the\n`just` binary is correct. `unindent()` is also covered by integration tests\nwhich make sure that evaluating a triple-quoted string produces the correct\nunindented value. However, there are not integration tests for all possible\ncases. These are covered by faster, more concise unit tests that call\n`unindent()` directly.\n\nExisting integration tests are in two forms, those that use the `test!` macro\nand those that use the `Test` struct directly. The `test!` macro, while often\nconcise, is less flexible and harder to understand, so new tests should use the\n`Test` struct. The `Test` struct is a builder which allows for easily invoking\n`just` with a given `justfile`, arguments, and environment variables, and\nchecking the program's stdout, stderr, and exit code .\n\n### Contribution Workflow\n\n1. Make sure the feature is wanted. There should be an open issue about the\n   feature with a comment from [@casey](https://github.com/casey) saying that\n   it's a good idea or seems reasonable. If there isn't, open a new issue and\n   ask for feedback.\n\n   There are lots of good features which can't be merged, either because they\n   aren't backwards compatible, have an implementation which would\n   overcomplicate the codebase, or go against `just`'s design philosophy.\n\n2. Settle on the design of the feature. If the feature has multiple possible\n   implementations or syntaxes, make sure to nail down the details in the\n   issue.\n\n3. Clone `just` and start hacking. The best workflow is to have the code you're\n   working on in an editor alongside a job that re-runs tests whenever a file\n   changes. You can run such a job by installing\n   [cargo-watch](https://github.com/watchexec/cargo-watch) with `cargo install\n   cargo-watch` and running `just watch test`.\n\n4. Add a failing test for your feature. Most of the time this will be an\n   integration test which exercises the feature end-to-end. Look for an\n   appropriate file to put the test in in\n   [tests](https://github.com/casey/just/blob/master/tests), or add a new file\n   in [tests](https://github.com/casey/just/blob/master/tests) and add a `mod`\n   statement importing that file in\n   [tests/lib.rs](https://github.com/casey/just/blob/master/tests/lib.rs).\n\n5. Implement the feature.\n\n6. Run `just ci` to make sure that all tests, lints, and checks pass.\n\n7. Open a PR with the new code that is editable by maintainers. PRs often\n   require rebasing and minor tweaks. If the PR is not editable by maintainers,\n   each rebase and tweak will require a round trip of code review. Your PR may\n   be summarily closed if it is not editable by maintainers.\n\n8. Incorporate feedback.\n\n9. Enjoy the sweet feeling of your PR getting merged!\n\nFeel free to open a draft PR at any time for discussion and feedback.\n\n### Hints\n\nHere are some hints to get you started with specific kinds of new features,\nwhich you can use in addition to the contribution workflow above.\n\n#### Adding a New Attribute\n\n1. Write a new integration test in\n   [tests/attributes.rs](https://github.com/casey/just/blob/master/tests/attributes.rs).\n\n2. Add a new variant to the\n   [`Attribute`](https://github.com/casey/just/blob/master/src/attribute.rs)\n   enum.\n\n3. Implement the functionality of the new attribute.\n\n4. Run `just ci` to make sure that all tests pass.\n\n### Janus\n\n[Janus](https://github.com/casey/janus) is a tool for checking whether a change\nto `just` breaks or changes the interpretation of existing `justfile`s. It\ncollects and analyzes public `justfile`s on GitHub.\n\nBefore merging a particularly large or gruesome change, Janus should be run to\nmake sure that nothing breaks. Don't worry about running Janus yourself, Casey\nwill happily run it for you on changes that need it.\n\n### Minimum Supported Rust Version\n\nThe minimum supported Rust version, or MSRV, is current stable Rust. It may\nbuild on older versions of Rust, but this is not guaranteed.\n\n### New Releases\n\nNew releases of `just` are made frequently so that users quickly get access to\nnew features.\n\nRelease commit messages use the following template:\n\n```\nRelease x.y.z\n\n- Bump version: x.y.z → x.y.z\n- Update changelog\n- Update changelog contributor credits\n- Update dependencies\n- Update version references in readme\n```\n\nFrequently Asked Questions\n--------------------------\n\n### What are the idiosyncrasies of Make that Just avoids?\n\n`make` has some behaviors which are confusing, complicated, or make it\nunsuitable for use as a general command runner.\n\nOne example is that under some circumstances, `make` won't actually run the\ncommands in a recipe. For example, if you have a file called `test` and the\nfollowing makefile:\n\n```just\ntest:\n  ./test\n```\n\n`make` will refuse to run your tests:\n\n```console\n$ make test\nmake: `test' is up to date.\n```\n\n`make` assumes that the `test` recipe produces a file called `test`. Since this\nfile exists and the recipe has no other dependencies, `make` thinks that it\ndoesn't have anything to do and exits.\n\nTo be fair, this behavior is desirable when using `make` as a build system, but\nnot when using it as a command runner. You can disable this behavior for\nspecific targets using `make`'s built-in\n[`.PHONY` target name](https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html),\nbut the syntax is verbose and can be hard to remember. The explicit list of\nphony targets, written separately from the recipe definitions, also introduces\nthe risk of accidentally defining a new non-phony target. In `just`, all\nrecipes are treated as if they were phony.\n\nOther examples of `make`'s idiosyncrasies include the difference between `=`\nand `:=` in assignments, the confusing error messages that are produced if you\nmess up your makefile, needing `$$` to use environment variables in recipes,\nand incompatibilities between different flavors of `make`.\n\n### What's the relationship between Just and Cargo build scripts?\n\n[`cargo` build scripts](http://doc.crates.io/build-script.html) have a pretty\nspecific use, which is to control how `cargo` builds your Rust project. This\nmight include adding flags to `rustc` invocations, building an external\ndependency, or running some kind of codegen step.\n\n`just`, on the other hand, is for all the other miscellaneous commands you\nmight run as part of development. Things like running tests in different\nconfigurations, linting your code, pushing build artifacts to a server,\nremoving temporary files, and the like.\n\nAlso, although `just` is written in Rust, it can be used regardless of the\nlanguage or build system your project uses.\n\nFurther Ramblings\n-----------------\n\nI personally find it very useful to write a `justfile` for almost every\nproject, big or small.\n\nOn a big project with multiple contributors, it's very useful to have a file\nwith all the commands needed to work on the project close at hand.\n\nThere are probably different commands to test, build, lint, deploy, and the\nlike, and having them all in one place is useful and cuts down on the time you\nhave to spend telling people which commands to run and how to type them.\n\nAnd, with an easy place to put commands, it's likely that you'll come up with\nother useful things which are part of the project's collective wisdom, but\nwhich aren't written down anywhere, like the arcane commands needed for some\npart of your revision control workflow, to install all your project's\ndependencies, or all the random flags you might need to pass to the build\nsystem.\n\nSome ideas for recipes:\n\n- Deploying/publishing the project\n\n- Building in release mode vs debug mode\n\n- Running in debug mode or with logging enabled\n\n- Complex git workflows\n\n- Updating dependencies\n\n- Running different sets of tests, for example fast tests vs slow tests, or\n  running them with verbose output\n\n- Any complex set of commands that you really should write down somewhere, if\n  only to be able to remember them\n\nEven for small, personal projects it's nice to be able to remember commands by\nname instead of ^Reverse searching your shell history, and it's a huge boon to\nbe able to go into an old project written in a random language with a\nmysterious build system and know that all the commands you need to do whatever\nyou need to do are in the `justfile`, and that if you type `just` something\nuseful (or at least interesting!) will probably happen.\n\nFor ideas for recipes, check out\n[this project's `justfile`](https://github.com/casey/just/blob/master/justfile),\nor some of the\n`justfile`s\n[out in the wild](https://github.com/search?q=path%3A**%2Fjustfile&type=code).\n\nAnyways, I think that's about it for this incredibly long-winded README.\n\nI hope you enjoy using `just` and find great success and satisfaction in all\nyour computational endeavors!\n\n😸\n"
        },
        {
          "name": "README.中文.md",
          "type": "blob",
          "size": 75.0498046875,
          "content": "↖️ 目录\n\n<h1 align=\"center\"><code>just</code></h1>\n\n<div align=\"center\">\n  <a href=\"https://crates.io/crates/just\">\n    <img src=\"https://img.shields.io/crates/v/just.svg\" alt=\"crates.io version\">\n  </a>\n  <a href=\"https://github.com/casey/just/actions\">\n    <img src=\"https://github.com/casey/just/actions/workflows/ci.yaml/badge.svg\" alt=\"build status\">\n  </a>\n  <a href=\"https://github.com/casey/just/releases\">\n    <img src=\"https://img.shields.io/github/downloads/casey/just/total.svg\" alt=\"downloads\">\n  </a>\n  <a href=\"https://discord.gg/ezYScXR\">\n    <img src=\"https://img.shields.io/discord/695580069837406228?logo=discord\" alt=\"chat on discord\">\n  </a>\n  <a href=\"mailto:casey@rodarmor.com?subject=Thanks%20for%20Just!\">\n    <img src=\"https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\" alt=\"say thanks\">\n  </a>\n</div>\n<br>\n\n`just` 为您提供一种保存和运行项目特有命令的便捷方式。\n\n本指南同时也可以以 [书](https://just.systems/man/zh/) 的形式提供在线阅读。\n\n命令，在此也称为配方，存储在一个名为 `justfile` 的文件中，其语法受 `make` 启发：\n\n![screenshot](https://raw.githubusercontent.com/casey/just/master/screenshot.png)\n\n然后你可以用 `just RECIPE` 运行它们：\n\n```sh\n$ just test-all\ncc *.c -o main\n./test --all\nYay, all your tests passed!\n```\n\n`just` 有很多很棒的特性，而且相比 `make` 有很多改进：\n\n- `just` 是一个命令运行器，而不是一个构建系统，所以它避免了许多 [`make` 的复杂性和特异性](#just-避免了-make-的哪些特异性)。不需要 `.PHONY` 配方!\n\n- 支持 Linux、MacOS 和 Windows，而且无需额外的依赖。(尽管如果你的系统没有 `sh`，你需要 [选择一个不同的 Shell](#shell))。\n\n- 错误具体且富有参考价值，语法错误将会与产生它们的上下文一起被报告。\n\n- 配方可以接受 [命令行参数](#配方参数)。\n\n- 错误会尽可能被静态地解决。未知的配方和循环依赖关系会在运行之前被报告。\n\n- `just` 可以 [加载`.env`文件](#环境变量加载)，简化环境变量注入。\n\n- 配方可以在 [命令行中列出](#列出可用的配方)。\n\n- 命令行自动补全脚本 [支持大多数流行的 Shell](#shell-自动补全脚本)。\n\n- 配方可以用 [任意语言](#用其他语言书写配方) 编写，如 Python 或 NodeJS。\n\n- `just` 可以从任何子目录中调用，而不仅仅是包含 `justfile` 的目录。\n\n- 不仅如此，还有 [更多](https://just.systems/man/zh/)！\n\n如果你在使用 `just` 方面需要帮助，请随时创建一个 Issue 或在 [Discord](https://discord.gg/ezYScXR) 上与我联系。我们随时欢迎功能请求和错误报告！\n\n安装\n------------\n\n### 预备知识\n\n`just` 应该可以在任何有合适的 `sh` 的系统上运行，包括 Linux、MacOS 和 BSD。\n\n在 Windows 上，`just` 可以使用 [Git for Windows](https://git-scm.com)、[GitHub Desktop](https://desktop.github.com) 或 [Cygwin](http://www.cygwin.com) 所提供的 `sh`。\n\n如果你不愿意安装 `sh`，也可以使用 `shell` 设置来指定你要使用的 Shell。\n\n比如 PowerShell：\n\n```just\n# 使用 PowerShell 替代 sh:\nset shell := [\"powershell.exe\", \"-c\"]\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\n…或者 `cmd.exe`:\n\n```just\n# 使用 cmd.exe 替代 sh:\nset shell := [\"cmd.exe\", \"/c\"]\n\nlist:\n  dir\n```\n\n你也可以使用命令行参数来设置 Shell。例如，若要使用 PowerShell 也可以用 `--shell powershell.exe --shell-arg -c` 启动`just`。\n\n(PowerShell 默认安装在 Windows 7 SP1 和 Windows Server 2008 R2 S1 及更高版本上，而 `cmd.exe` 相当麻烦，所以 PowerShell 被推荐给大多数 Windows 用户)\n\n### 安装包\n\n<table>\n  <thead>\n    <tr>\n      <th>操作系统</th>\n      <th>包管理器</th>\n      <th>安装包</th>\n      <th>命令</th>\n    </tr>\n  </thead>\n  <tbody>\n  <tr>\n    <td><a href=\"https://forge.rust-lang.org/release/platform-support.html\">Various</a></td>\n    <td><a href=\"https://www.rust-lang.org\">Cargo</a></td>\n    <td><a href=\"https://crates.io/crates/just\">just</a></td>\n    <td><code>cargo install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\">Microsoft Windows</a></td>\n    <td><a href=\"https://scoop.sh\">Scoop</a></td>\n    <td><a href=\"https://github.com/ScoopInstaller/Main/blob/master/bucket/just.json\">just</a></td>\n    <td><code>scoop install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://docs.brew.sh/Installation\">Various</a></td>\n    <td><a href=\"https://brew.sh\">Homebrew</a></td>\n    <td><a href=\"https://formulae.brew.sh/formula/just\">just</a></td>\n    <td><code>brew install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://en.wikipedia.org/wiki/MacOS\">macOS</a></td>\n    <td><a href=\"https://www.macports.org\">MacPorts</a></td>\n    <td><a href=\"https://ports.macports.org/port/just/summary\">just</a></td>\n    <td><code>port install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://www.archlinux.org\">Arch Linux</a></td>\n    <td><a href=\"https://wiki.archlinux.org/title/Pacman\">pacman</a></td>\n    <td><a href=\"https://archlinux.org/packages/community/x86_64/just/\">just</a></td>\n    <td><code>pacman -S just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://nixos.org/download.html#download-nix\">Various</a></td>\n    <td><a href=\"https://nixos.org/nix/\">Nix</a></td>\n    <td><a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/ju/just/package.nix\">just</a></td>\n    <td><code>nix-env -iA nixpkgs.just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://nixos.org/nixos/\">NixOS</a></td>\n    <td><a href=\"https://nixos.org/nix/\">Nix</a></td>\n    <td><a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/ju/just/package.nix\">just</a></td>\n    <td><code>nix-env -iA nixos.just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://getsol.us\">Solus</a></td>\n    <td><a href=\"https://getsol.us/articles/package-management/basics/en\">eopkg</a></td>\n    <td><a href=\"https://dev.getsol.us/source/just/\">just</a></td>\n    <td><code>eopkg install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://voidlinux.org\">Void Linux</a></td>\n    <td><a href=\"https://wiki.voidlinux.org/XBPS\">XBPS</a></td>\n    <td><a href=\"https://github.com/void-linux/void-packages/blob/master/srcpkgs/just/template\">just</a></td>\n    <td><code>xbps-install -S just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://www.freebsd.org\">FreeBSD</a></td>\n    <td><a href=\"https://www.freebsd.org/doc/handbook/pkgng-intro.html\">pkg</a></td>\n    <td><a href=\"https://www.freshports.org/deskutils/just/\">just</a></td>\n    <td><code>pkg install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://alpinelinux.org\">Alpine Linux</a></td>\n    <td><a href=\"https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management\">apk-tools</a></td>\n    <td><a href=\"https://pkgs.alpinelinux.org/package/edge/community/x86_64/just\">just</a></td>\n    <td><code>apk add just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://getfedora.org\">Fedora Linux</a></td>\n    <td><a href=\"https://dnf.readthedocs.io/en/latest/\">DNF</a></td>\n    <td><a href=\"https://src.fedoraproject.org/rpms/rust-just\">just</a></td>\n    <td><code>dnf install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://www.gentoo.org\">Gentoo Linux</a></td>\n    <td><a href=\"https://wiki.gentoo.org/wiki/Portage\">Portage</a></td>\n    <td><a href=\"https://github.com/gentoo-mirror/guru/tree/master/sys-devel/just\">guru/sys-devel/just</a></td>\n    <td>\n      <code>eselect repository enable guru</code><br>\n      <code>emerge --sync guru</code><br>\n      <code>emerge sys-devel/just</code>\n    </td>\n  </tr>\n  <tr>\n    <td><a href=\"https://docs.conda.io/en/latest/miniconda.html#system-requirements\">Various</a></td>\n    <td><a href=\"https://docs.conda.io/projects/conda/en/latest/index.html\">Conda</a></td>\n    <td><a href=\"https://anaconda.org/conda-forge/just\">just</a></td>\n    <td><code>conda install -c conda-forge just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://en.wikipedia.org/wiki/Microsoft_Windows\">Microsoft Windows</a></td>\n    <td><a href=\"https://chocolatey.org\">Chocolatey</a></td>\n    <td><a href=\"https://github.com/michidk/just-choco\">just</a></td>\n    <td><code>choco install just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://snapcraft.io/docs/installing-snapd\">Various</a></td>\n    <td><a href=\"https://snapcraft.io\">Snap</a></td>\n    <td><a href=\"https://snapcraft.io/just\">just</a></td>\n    <td><code>snap install --edge --classic just</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"https://github.com/casey/just/releases\">Various</a></td>\n    <td><a href=\"https://asdf-vm.com\">asdf</a></td>\n    <td><a href=\"https://github.com/olofvndrhr/asdf-just\">just</a></td>\n    <td>\n      <code>asdf plugin add just</code><br>\n      <code>asdf install just &lt;version&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td><a href=\"https://packaging.python.org/tutorials/installing-packages\">Various</a></td>\n    <td><a href=\"https://pypi.org\">PyPI</a></td>\n    <td><a href=\"https://pypi.org/project/rust-just\">rust-just</a></td>\n    <td>\n      <code>pipx install rust-just</code><br>\n    </td>\n  </tr>\n  <tr>\n    <td><a href=\"https://docs.npmjs.com/packages-and-modules/getting-packages-from-the-registry\">Various</a></td>\n    <td><a href=\"https://www.npmjs.com\">npm</a></td>\n    <td><a href=\"https://www.npmjs.com/package/rust-just\">rust-just</a></td>\n    <td>\n      <code>npm install -g rust-just</code><br>\n    </td>\n  </tr>\n  <tr>\n    <td><a href=\"https://debian.org\">Debian</a> and <a href=\"https://ubuntu.com\">Ubuntu</a> derivatives</td>\n    <td><a href=\"https://mpr.makedeb.org\">MPR</a></td>\n    <td><a href=\"https://mpr.makedeb.org/packages/just\">just</a></td>\n    <td>\n      <code>git clone 'https://mpr.makedeb.org/just'</code><br>\n      <code>cd just</code><br>\n      <code>makedeb -si</code>\n    </td>\n  </tr>\n  <tr>\n    <td><a href=\"https://debian.org\">Debian</a> and <a href=\"https://ubuntu.com\">Ubuntu</a> derivatives</td>\n    <td><a href=\"https://docs.makedeb.org/prebuilt-mpr\">Prebuilt-MPR</a></td>\n    <td><a href=\"https://mpr.makedeb.org/packages/just\">just</a></td>\n    <td>\n      <sup><b>You must have the <a href=\"https://docs.makedeb.org/prebuilt-mpr/getting-started/#setting-up-the-repository\">Prebuilt-MPR set up</a> on your system in order to run this command.</b></sup><br>\n      <code>sudo apt install just</code>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n![package version table](https://repology.org/badge/vertical-allrepos/just.svg)\n\n### 预制二进制文件\n\nLinux、MacOS 和 Windows 的预制二进制文件可以在 [发布页](https://github.com/casey/just/releases) 上找到。\n\n你也可以在 Linux、MacOS 或 Windows 上使用下面的命令来下载最新的版本，只需将 `DEST` 替换为你想安装 `just` 的目录即可：\n\n```sh\ncurl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to DEST\n```\n\n例如，安装 `just` 到 `~/bin` 目录：\n\n```sh\n# 创建 ~/bin\nmkdir -p ~/bin\n\n# 下载并解压 just 到 ~/bin/just\ncurl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin\n\n# 在 Shell 搜索可执行文件的路径中添加`~/bin`\n# 这一行应该被添加到你的 Shell 初始化文件中，e.g. `~/.bashrc` 或者 `~/.zshrc`：\nexport PATH=\"$PATH:$HOME/bin\"\n\n# 现在 just 应该就可以执行了\njust --help\n```\n\n### GitHub Actions\n\n使用 [extractions/setup-just](https://github.com/extractions/setup-just):\n\n```yaml\n- uses: extractions/setup-just@v1\n  with:\n    just-version: 0.8 # optional semver specification, otherwise latest\n```\n\n使用 [taiki-e/install-action](https://github.com/taiki-e/install-action):\n\n```yaml\n- uses: taiki-e/install-action@just\n```\n\n### 发布 RSS 订阅\n\n`just` 的发布 [RSS 订阅](https://en.wikipedia.org/wiki/RSS) 可以在 [这里](https://github.com/casey/just/releases.atom) 找到。\n\n### Node.js 安装\n\n[just-install](https://npmjs.com/package/just-install) 可用于在 Node.js 应用程序中自动安装 `just`。\n\n`just` 是一个很赞的比 npm 脚本更强大的替代品。如果你想在 Node.js 应用程序的依赖中包含 `just`，可以通过 `just-install`，它将在本机安装一个针对特定平台的二进制文件作为 `npm install` 安装结果的一部分。这样就不需要每个开发者使用上述提到的步骤独立安装 `just`。安装后，`just` 命令将在 npm 脚本或 npx 中工作。这对那些想让项目的设置过程尽可能简单的团队来说是很有用的。\n\n想了解更多信息, 请查看 [just-install 说明文件](https://github.com/brombal/just-install#readme)。\n\n向后兼容性\n-----------------------\n\n随着 1.0 版本的发布，`just` 突出对向后兼容性和稳定性的强烈承诺。\n\n未来的版本将不会引入向后不兼容的变化，不会使现有的 `justfile` 停止工作，或破坏命令行界面的正常调用。\n\n然而，这并不排除修复全面的错误，即使这样做可能会破坏依赖其行为的 `justfiles`。\n\n永远不会有一个 `just` 2.0。任何理想的向后兼容的变化都是在每个 `justfile` 的基础上选择性加入的，所以用户可以在他们的闲暇时间进行迁移。\n\n还没有准备好稳定化的功能将在 `--unstable` 标志后被选择性启用。由 `--unstable` 启用的功能可能会在任何时候以不兼容的方式发生变化。\n\n编辑器支持\n--------------\n\n`justfile` 的语法与 `make` 非常接近，你可以让你的编辑器对 `just` 使用 `make` 语法高亮。\n\n### Vim 和 Neovim\n\n#### `vim-just`\n\n[vim-just](https://github.com/NoahTheDuke/vim-just) 插件可以为 vim 提供 `justfile` 语法高亮显示。\n\n你可以用你喜欢的软件包管理器安装它，如 [Plug](https://github.com/junegunn/vim-plug)：\n\n```vim\ncall plug#begin()\n\nPlug 'NoahTheDuke/vim-just'\n\ncall plug#end()\n```\n\n或者使用 Vim 的内置包支持：\n\n```sh\nmkdir -p ~/.vim/pack/vendor/start\ncd ~/.vim/pack/vendor/start\ngit clone https://github.com/NoahTheDuke/vim-just.git\n```\n\n#### `tree-sitter-just`\n\n[tree-sitter-just](https://github.com/IndianBoy42/tree-sitter-just) 是一个针对 Neovim 的 [Nvim Treesitter](https://github.com/nvim-treesitter/nvim-treesitter) 插件。\n\n#### Makefile 语法高亮\n\nVim 内置的 makefile 语法高亮对 `justfile` 来说并不完美，但总比没有好。你可以把以下内容放在 `~/.vim/filetype.vim` 中：\n\n```vimscript\nif exists(\"did_load_filetypes\")\n  finish\nendif\n\naugroup filetypedetect\n  au BufNewFile,BufRead justfile setf make\naugroup END\n```\n或者在单个 `justfile` 中添加以下内容，以在每个文件的基础上启用 `make` 模式：\n\n```text\n# vim: set ft=make :\n```\n\n### Emacs\n\n[just-mode](https://github.com/leon-barrett/just-mode.el) 可以为 `justfile` 提供语法高亮和自动缩进。它可以在 [MELPA](https://melpa.org/) 上通过 [just-mode](https://melpa.org/#/just-mode) 获得。\n\n[justl](https://github.com/psibi/justl.el) 提供了执行和列出配方的命令。\n\n你可以在一个单独的 `justfile` 中添加以下内容，以便对每个文件启用 `make` 模式：\n\n```text\n# Local Variables:\n# mode: makefile\n# End:\n```\n\n### Visual Studio Code\n\n由 [skellock](https://github.com/skellock) 为 VS Code 提供的扩展 [可在此获得](https://marketplace.visualstudio.com/items?itemName=skellock.just)（[仓库](https://github.com/skellock/vscode-just)），但是开发已经不活跃了。\n\n你可以通过运行以下命令来安装它：\n\n```sh\ncode --install-extension skellock.just\n```\n\n最近由 [sclu1034](https://github.com/sclu1034) 提供的一个更活跃的分叉可以在 [这里](https://github.com/sclu1034/vscode-just) 找到。\n\n### JetBrains IDEs\n\n由 [linux_china](https://github.com/linux-china) 为 JetBrains IDEs 提供的插件可 [由此获得](https://plugins.jetbrains.com/plugin/18658-just)。\n\n### Kakoune\n\nKakoune 已经内置支持 `justfile` 语法高亮，这要感谢 TeddyDD。\n\n### Sublime Text\n\n由 [nk9](https://github.com/nk9) 提供的 [Just 包](https://github.com/nk9/just_sublime) 支持 `just` 语法高亮，同时还有其它工具，这些可以在 [PackageControl](https://packagecontrol.io/packages/Just) 上找到。\n\n### 其它编辑器\n\n欢迎给我发送必要的命令，以便在你选择的编辑器中实现语法高亮，这样我就可以把它们放在这里。\n\n快速开始\n-----------\n\n参见 [安装部分](#安装) 了解如何在你的电脑上安装 `just`。试着运行 `just --version` 以确保它被正确安装。\n\n关于语法的概述，请查看这个 [速查表](https://cheatography.com/linux-china/cheat-sheets/justfile/)。\n\n一旦 `just` 安装完毕并开始工作，在你的项目根目录创建一个名为 `justfile` 的文件，内容如下：\n\n```just\nrecipe-name:\n  echo 'This is a recipe!'\n\n# 这是一行注释\nanother-recipe:\n  @echo 'This is another recipe.'\n```\n\n当你调用 `just` 时，它会在当前目录和父目录寻找文件 `justfile`，所以你可以从你项目的任何子目录中调用它。\n\n搜索 `justfile` 是不分大小写的，所以任何大小写，如 `Justfile`、`JUSTFILE` 或 `JuStFiLe` 都可以工作。`just` 也会寻找名字为 `.justfile` 的文件，以便你打算隐藏一个 `justfile`。\n\n运行 `just` 时未传参数，则运行 `justfile` 中的第一个配方：\n\n```sh\n$ just\necho 'This is a recipe!'\nThis is a recipe!\n```\n\n通过一个或多个参数指定要运行的配方：\n\n```sh\n$ just another-recipe\nThis is another recipe.\n```\n\n`just` 在运行每条命令前都会将其打印到标准错误中，这就是为什么 `echo 'This is a recipe!'` 被打印出来。对于以 `@` 开头的行，这将被抑制，这就是为什么 `echo 'This is another recipe.'` 没有被打印。\n\n如果一个命令失败，配方就会停止运行。这里 `cargo publish` 只有在 `cargo test` 成功后才会运行：\n\n```just\npublish:\n  cargo test\n  # 前面的测试通过才会执行 publish!\n  cargo publish\n```\n\n配方可以依赖其他配方。在这里，`test` 配方依赖于 `build` 配方，所以 `build` 将在 `test` 之前运行：\n\n```just\nbuild:\n  cc main.c foo.c bar.c -o main\n\ntest: build\n  ./test\n\nsloc:\n  @echo \"`wc -l *.c` lines of code\"\n```\n\n```sh\n$ just test\ncc main.c foo.c bar.c -o main\n./test\ntesting… all tests passed!\n```\n\n没有依赖关系的配方将按照命令行上给出的顺序运行：\n\n```sh\n$ just build sloc\ncc main.c foo.c bar.c -o main\n1337 lines of code\n```\n\n依赖项总是先运行，即使它们被放在依赖它们的配方之后：\n\n```sh\n$ just test build\ncc main.c foo.c bar.c -o main\n./test\ntesting… all tests passed!\n```\n\n示例\n--------\n\n在 [Examples 目录](https://github.com/casey/just/tree/master/examples) 中可以找到各种 `justfile` 的例子。\n\n特性介绍\n--------\n\n### 默认配方\n\n当 `just` 被调用而没有传入任何配方时，它会运行 `justfile` 中的第一个配方。这个配方可能是项目中最常运行的命令，比如运行测试：\n\n```just\ntest:\n  cargo test\n```\n\n你也可以使用依赖关系来默认运行多个配方：\n\n```just\ndefault: lint build test\n\nbuild:\n  echo Building…\n\ntest:\n  echo Testing…\n\nlint:\n  echo Linting…\n```\n\n在没有合适配方作为默认配方的情况下，你也可以在 `justfile` 的开头添加一个配方，用于列出可用的配方：\n\n```just\ndefault:\n  just --list\n```\n\n### 列出可用的配方\n\n可以用 `just --list` 按字母顺序列出配方：\n\n```sh\n$ just --list\nAvailable recipes:\n    build\n    test\n    deploy\n    lint\n```\n\n`just --summary` 以更简洁的形式列出配方：\n\n```sh\n$ just --summary\nbuild test deploy lint\n```\n\n传入 `--unsorted` 选项可以按照它们在 `justfile` 中出现的顺序打印配方：\n\n```just\ntest:\n  echo 'Testing!'\n\nbuild:\n  echo 'Building!'\n```\n\n```sh\n$ just --list --unsorted\nAvailable recipes:\n    test\n    build\n```\n\n```sh\n$ just --summary --unsorted\ntest build\n```\n\n如果你想让 `just` 默认列出 `justfile` 中的配方，你可以使用这个作为默认配方：\n\n```just\ndefault:\n  @just --list\n```\n\n请注意，你可能需要在上面这一行中添加 `--justfile {{justfile()}}`。没有它，如果你执行 `just -f /some/distant/justfile -d .` 或 `just -f ./non-standard-justfile` 配方中的普通 `just --list` 就不一定会使用你提供的文件，它将试图在你的当前路径中找到一个 `justfile`，甚至可能导致 `No justfile found` 的错误。\n\n标题文本可以用 `--list-heading` 来定制：\n\n```sh\n$ just --list --list-heading $'Cool stuff…\\n'\nCool stuff…\n    test\n    build\n```\n\n而缩进可以用 `--list-prefix` 来定制：\n\n```sh\n$ just --list --list-prefix ····\nAvailable recipes:\n····test\n····build\n```\n\n`--list-heading` 参数同时替换了标题和后面的换行，所以如果不是空的，应该包含一个换行。这样做是为了允许你通过传递空字符串来完全抑制标题行：\n\n```sh\n$ just --list --list-heading ''\n    test\n    build\n```\n\n### 别名\n\n别名允许你用其他名称来调用配方：\n\n```just\nalias b := build\n\nbuild:\n  echo 'Building!'\n```\n\n```sh\n$ just b\nbuild\necho 'Building!'\nBuilding!\n```\n\n### 设置\n\n设置控制解释和执行。每个设置最多可以指定一次，可以出现在 `justfile` 的任何地方。\n\n例如：\n\n```just\nset shell := [\"zsh\", \"-cu\"]\n\nfoo:\n  # this line will be run as `zsh -cu 'ls **/*.txt'`\n  ls **/*.txt\n```\n\n#### 设置一览表\n\n| 名称                        | 值                 | 默认  | 描述                                                                                    |\n| --------------------------- | ------------------ | ----- | --------------------------------------------------------------------------------------- |\n| `allow-duplicate-recipes`   | boolean            | False | 允许在 `justfile` 后面出现的配方覆盖之前的同名配方                                      |\n| `allow-duplicate-variables` | boolean            | False | 允许在 `justfile` 后面出现的变量覆盖之前的同名变量                                      |\n| `dotenv-filename`           | string             | -     | 如果有自定义名称的 `.env` 环境变量文件的话，则将其加载                                  |\n| `dotenv-load`               | boolean            | False | 如果有`.env` 环境变量文件的话，则将其加载                                               |\n| `dotenv-path`               | string             | -     | 从自定义路径中加载 `.env` 环境变量文件， 文件不存在将会报错。可以覆盖 `dotenv-filename` |\n| `dotenv-required`           | boolean            | False | 如果 `.env` 环境变量文件不存在的话，需要报错                                                         |\n| `export`                    | boolean            | False | 将所有变量导出为环境变量                                                                |\n| `fallback`                  | boolean            | False | 如果命令行中的第一个配方没有找到，则在父目录中搜索 `justfile`                           |\n| `ignore-comments`           | boolean            | False | 忽略以`#`开头的配方行                                                                   |\n| `positional-arguments`      | boolean            | False | 传递位置参数                                                                            |\n| `shell`                     | `[COMMAND, ARGS…]` | -     | 设置用于调用配方和评估反引号内包裹内容的命令                                            |\n| `tempdir`                   | string             | -     | 在 `tempdir` 位置创建临时目录，而不是系统默认的临时目录                                 |\n| `windows-powershell`        | boolean            | False | 在 Windows 上使用 PowerShell 作为默认 Shell(废弃，建议使用 `windows-shell`)             |\n| `windows-shell`             | `[COMMAND, ARGS…]` | -     | 设置用于调用配方和评估反引号内包裹内容的命令                                            |\n\nBool 类型设置可以写成：\n\n```justfile\nset NAME\n```\n\n这就相当于：\n\n```justfile\nset NAME := true\n```\n\n#### 允许重复的配方\n\n如果 `allow-duplicate-recipes` 被设置为 `true`，那么定义多个同名的配方就不会出错，而会使用最后的定义。默认为 `false`。\n\n```just\nset allow-duplicate-recipes\n\n@foo:\n  echo foo\n\n@foo:\n  echo bar\n```\n\n```sh\n$ just foo\nbar\n```\n\n#### 允许重复的变量\n如果 `allow-duplicate-variables` 被设置为 `true`，那么定义多个同名的变量将不会报错。默认为 `false`。\n\n```just\nset allow-duplicate-variables\n\na := \"foo\"\na := \"bar\"\n\n@foo:\n  echo $a\n```\n\n```sh\n$ just foo\nbar\n```\n\n#### 环境变量加载\n\n如果 `dotenv-load`, `dotenv-filename`, `dotenv-path`, or `dotenv-required`\n中任意一项被设置, `just` 会尝试从文件中加载环境变量\n\n如果设置了 `dotenv-path`, `just` 会在指定的路径下搜索文件，该路径可以是绝对路径，\n也可以是基于当前工作路径的相对路径\n\n如果设置了 `dotenv-filename`，`just` 会在指定的相对路径，以及其所有的上层目录中，搜索指定文件\n\n如果没有设置 `dotenv-filename`，但是设置了 `dotenv-load` 或 `dotenv-required`，\n`just` 会在当前工作路径，以及其所有的上层目录中，寻找名为 `.env` 的文件。\n\n`dotenv-filename` 和 `dotenv-path` 很相似，但是 `dotenv-path` 只会检查指定的目录\n而 `dotenv-filename` 会检查指定目录以及其所有的上层目录。\n\n如果没有找到环境变量文件也不会报错，除非设置了 `dotenv-required`。\n\n从文件中加载的变量是环境变量，而非 `just` 变量，所以在配方和反引号中需要必须通过 `$VARIABLE_NAME` 来调用。\n\n比如，如果你的 `.env` 文件包含以下内容：\n\n```sh\n# a comment, will be ignored\nDATABASE_ADDRESS=localhost:6379\nSERVER_PORT=1337\n```\n\n并且你的 `justfile` 包含：\n\n```just\nset dotenv-load\n\nserve:\n  @echo \"Starting server with database $DATABASE_ADDRESS on port $SERVER_PORT…\"\n  ./server --database $DATABASE_ADDRESS --port $SERVER_PORT\n```\n\n`just serve` 将会输出：\n\n```sh\n$ just serve\nStarting server with database localhost:6379 on port 1337…\n./server --database $DATABASE_ADDRESS --port $SERVER_PORT\n```\n\n#### 导出\n\n`export` 设置使所有 `just` 变量作为环境变量被导出。默认值为 `false`。\n\n```just\nset export\n\na := \"hello\"\n\n@foo b:\n  echo $a\n  echo $b\n```\n\n```sh\n$ just foo goodbye\nhello\ngoodbye\n```\n\n#### 位置参数\n\n如果 `positional-arguments` 为 `true`，配方参数将作为位置参数传递给命令。对于行式配方，参数 `$0` 将是配方的名称。\n\n例如，运行这个配方：\n\n```just\nset positional-arguments\n\n@foo bar:\n  echo $0\n  echo $1\n```\n\n将产生以下输出：\n\n```sh\n$ just foo hello\nfoo\nhello\n```\n\n当使用 `sh` 兼容的 Shell，如 `bash` 或 `zsh` 时，`$@` 会展开为传给配方的位置参数，从1开始。当在双引号内使用 `\"$@\"` 时，包括空白的参数将被传递，就像它们是双引号一样。也就是说，`\"$@\"` 相当于 `\"$1\" \"$2\"`......当没有位置参数时，`\"$@\"` 和 `$@` 将展开为空（即，它们被删除）。\n\n这个例子的配方将逐行打印参数：\n\n```just\nset positional-arguments\n\n@test *args='':\n  bash -c 'while (( \"$#\" )); do echo - $1; shift; done' -- \"$@\"\n```\n\n用 _两个_ 参数运行：\n\n```sh\n$ just test foo \"bar baz\"\n- foo\n- bar baz\n```\n\n#### Shell\n\n`shell` 设置控制用于调用执行配方代码行和反引号内指令的命令。Shebang 配方不受影响。\n\n```just\n# use python3 to execute recipe lines and backticks\nset shell := [\"python3\", \"-c\"]\n\n# use print to capture result of evaluation\nfoos := `print(\"foo\" * 4)`\n\nfoo:\n  print(\"Snake snake snake snake.\")\n  print(\"{{foos}}\")\n```\n\n`just` 把要执行的命令作为一个参数进行传递。许多 Shell 需要一个额外的标志，通常是 `-c`，以使它们评估执行第一个参数。\n\n##### Windows Shell\n\n`just` 在 Windows 上默认使用 `sh`。要在 Windows 上使用不同的 Shell，请使用`windows-shell`：\n\n```just\nset windows-shell := [\"powershell.exe\", \"-NoLogo\", \"-Command\"]\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\n参考 [powershell.just](https://github.com/casey/just/blob/master/examples/powershell.just) ，了解在所有平台上使用 PowerShell 的 justfile。\n\n##### Windows PowerShell\n\n*`set windows-powershell` 使用遗留的 `powershell.exe` 二进制文件，不再推荐。请参阅上面的 `windows-shell` 设置，以通过更灵活的方式来控制在 Windows 上使用哪个 Shell。*\n\n`just` 在 Windows 上默认使用 `sh`。要使用 `powershell.exe` 作为替代，请将 `windows-powershell` 设置为 `true`。\n\n```just\nset windows-powershell := true\n\nhello:\n  Write-Host \"Hello, world!\"\n```\n\n##### Python 3\n\n```just\nset shell := [\"python3\", \"-c\"]\n```\n\n##### Bash\n\n```just\nset shell := [\"bash\", \"-uc\"]\n```\n\n##### Z Shell\n\n```just\nset shell := [\"zsh\", \"-uc\"]\n```\n\n##### Fish\n\n```just\nset shell := [\"fish\", \"-c\"]\n```\n\n##### Nushell\n\n```just\nset shell := [\"nu\", \"-c\"]\n```\n\n如果你想设置默认的表格显示模式为 `light`:\n\n```just\nset shell := ['nu', '-m', 'light', '-c']\n```\n\n*[Nushell](https://github.com/nushell/nushell) 使用 Rust 开发并且具备良好的跨平台能力，**支持 Windows / macOS 和各种 Linux 发行版***\n\n### 文档注释\n\n紧接着配方前面的注释将出现在 `just --list` 中：\n\n```just\n# build stuff\nbuild:\n  ./bin/build\n\n# test stuff\ntest:\n  ./bin/test\n```\n\n```sh\n$ just --list\nAvailable recipes:\n    build # build stuff\n    test # test stuff\n```\n\n### 变量和替换\n\n支持在变量、字符串、拼接、路径连接和替换中使用 `{{…}}` ：\n\n```just\ntmpdir  := `mktemp -d`\nversion := \"0.2.7\"\ntardir  := tmpdir / \"awesomesauce-\" + version\ntarball := tardir + \".tar.gz\"\n\npublish:\n  rm -f {{tarball}}\n  mkdir {{tardir}}\n  cp README.md *.c {{tardir}}\n  tar zcvf {{tarball}} {{tardir}}\n  scp {{tarball}} me@server.com:release/\n  rm -rf {{tarball}} {{tardir}}\n```\n\n#### 路径拼接\n\n`/` 操作符可用于通过斜线连接两个字符串：\n\n```just\nfoo := \"a\" / \"b\"\n```\n\n```\n$ just --evaluate foo\na/b\n```\n\n请注意，即使已经有一个 `/`，也会添加一个 `/`：\n\n```just\nfoo := \"a/\"\nbar := foo / \"b\"\n```\n\n```\n$ just --evaluate bar\na//b\n```\n\n也可以构建绝对路径<sup>1.5.0</sup>:\n\n```just\nfoo := / \"b\"\n```\n\n```\n$ just --evaluate foo\n/b\n```\n\n`/` 操作符使用 `/` 字符，即使在 Windows 上也是如此。因此，在使用通用命名规则（UNC）的路径中应避免使用 `/` 操作符，即那些以 `\\?` 开头的路径，因为 UNC 路径不支持正斜线。\n\n#### 转义 `{{`\n\n想要写一个包含  `{{` 的配方，可以使用 `{{{{`：\n\n```just\nbraces:\n  echo 'I {{{{LOVE}} curly braces!'\n```\n\n(未匹配的 `}}` 会被忽略，所以不需要转义)\n\n另一个选择是把所有你想转义的文本都放在插值里面：\n\n```just\nbraces:\n  echo '{{'I {{LOVE}} curly braces!'}}'\n```\n\n然而，另一个选择是使用  `{{ \"{{\" }}`：\n\n```just\nbraces:\n  echo 'I {{ \"{{\" }}LOVE}} curly braces!'\n```\n\n### 字符串\n\n双引号字符串支持转义序列：\n\n```just\nstring-with-tab             := \"\\t\"\nstring-with-newline         := \"\\n\"\nstring-with-carriage-return := \"\\r\"\nstring-with-double-quote    := \"\\\"\"\nstring-with-slash           := \"\\\\\"\nstring-with-no-newline      := \"\\\n\"\n```\n\n```sh\n$ just --evaluate\n\"tring-with-carriage-return := \"\nstring-with-double-quote    := \"\"\"\nstring-with-newline         := \"\n\"\nstring-with-no-newline      := \"\"\nstring-with-slash           := \"\\\"\nstring-with-tab             := \"     \"\n```\n\n字符串可以包含换行符：\n\n```just\nsingle := '\nhello\n'\n\ndouble := \"\ngoodbye\n\"\n```\n\n单引号字符串不支持转义序列：\n\n```just\nescapes := '\\t\\n\\r\\\"\\\\'\n```\n\n```sh\n$ just --evaluate\nescapes := \"\\t\\n\\r\\\"\\\\\"\n```\n\n支持单引号和双引号字符串的缩进版本，以三个单引号或三个双引号为界。缩进的字符串行被删除了所有非空行所共有的前导空白：\n\n```just\n# 这个字符串执行结果为 `foo\\nbar\\n`\nx := '''\n  foo\n  bar\n'''\n\n# 这个字符串执行结果为 `abc\\n  wuv\\nbar\\n`\ny := \"\"\"\n  abc\n    wuv\n  xyz\n\"\"\"\n```\n\n与未缩进的字符串类似，缩进的双引号字符串处理转义序列，而缩进的单引号字符串则忽略转义序列。转义序列的处理是在取消缩进后进行的。取消缩进的算法不考虑转义序列产生的空白或换行。\n\n### 错误忽略\n\n通常情况下，如果一个命令返回一个非零的退出状态，将停止执行。要想在一个命令之后继续执行，即使它失败了，需要在命令前加上 `-`：\n\n```just\nfoo:\n  -cat foo\n  echo 'Done!'\n```\n\n```sh\n$ just foo\ncat foo\ncat: foo: No such file or directory\necho 'Done!'\nDone!\n```\n\n### 函数\n\n`just` 提供了一些内置函数，在编写配方时可能很有用。\n\n#### 系统信息\n\n- `arch()` — 指令集结构。可能的值是：`\"aarch64\"`, `\"arm\"`, `\"asmjs\"`, `\"hexagon\"`, `\"mips\"`, `\"msp430\"`, `\"powerpc\"`, `\"powerpc64\"`, `\"s390x\"`, `\"sparc\"`, `\"wasm32\"`, `\"x86\"`, `\"x86_64\"`, 和 `\"xcore\"`。\n- `os()` — 操作系统，可能的值是: `\"android\"`, `\"bitrig\"`, `\"dragonfly\"`, `\"emscripten\"`, `\"freebsd\"`, `\"haiku\"`, `\"ios\"`, `\"linux\"`, `\"macos\"`, `\"netbsd\"`, `\"openbsd\"`, `\"solaris\"`, 和 `\"windows\"`。\n- `os_family()` — 操作系统系列；可能的值是：`\"unix\"` 和 `\"windows\"`。\n\n例如：\n\n```just\nsystem-info:\n  @echo \"This is an {{arch()}} machine\".\n```\n\n```sh\n$ just system-info\nThis is an x86_64 machine\n```\n\n`os_family()` 函数可以用来创建跨平台的 `justfile`，使其可以在不同的操作系统上工作。一个例子，见 [cross-platform.just](https://github.com/casey/just/blob/master/examples/cross-platform.just) 文件。\n\n#### 环境变量\n\n- `env_var(key)` — 获取名称为 `key` 的环境变量，如果不存在则终止。\n\n```just\nhome_dir := env_var('HOME')\n\ntest:\n  echo \"{{home_dir}}\"\n```\n\n```sh\n$ just\n/home/user1\n```\n\n- `env_var_or_default(key, default)` — 获取名称为 `key` 的环境变量，如果不存在则返回 `default`。\n\n#### 调用目录\n\n- `invocation_directory()` - 获取 `just` 被调用时当前目录所对应的绝对路径，在 `just` 改变路径并执行相应命令前。\n\n例如，要对 \"当前目录\" 下的文件调用 `rustfmt`（从用户/调用者的角度看），使用以下规则：\n\n```just\nrustfmt:\n  find {{invocation_directory()}} -name \\*.rs -exec rustfmt {} \\;\n```\n\n另外，如果你的命令需要从当前目录运行，你可以使用如下方式：\n\n```just\nbuild:\n  cd {{invocation_directory()}}; ./some_script_that_needs_to_be_run_from_here\n```\n\n#### Justfile 和 Justfile 目录\n\n- `justfile()` - 取得当前 `justfile` 的路径。\n\n- `justfile_directory()` - 取得当前 `justfile` 文件父目录的路径。\n\n例如，运行一个相对于当前 `justfile` 位置的命令：\n\n```just\nscript:\n  ./{{justfile_directory()}}/scripts/some_script\n```\n\n#### Just 可执行程序\n\n- `just_executable()` - `just` 可执行文件的绝对路径。\n\n例如：\n\n```just\nexecutable:\n  @echo The executable is at: {{just_executable()}}\n```\n\n```sh\n$ just\nThe executable is at: /bin/just\n```\n\n#### 字符串处理\n\n- `quote(s)` - 用 `'\\''` 替换所有的单引号，并在 `s` 的首尾添加单引号。这足以为许多 Shell 转义特殊字符，包括大多数 Bourne Shell 的后代。\n- `replace(s, from, to)` - 将 `s` 中的所有 `from` 替换为 `to`。\n- `replace_regex(s, regex, replacement)` - 将 `s` 中所有的 `regex` 替换为 `replacement`。正则表达式由 [Rust `regex` 包](https://docs.rs/regex/latest/regex/) 提供。参见 [语法文档](https://docs.rs/regex/latest/regex/#syntax) 以了解使用示例。\n- `trim(s)` - 去掉 `s` 的首尾空格。\n- `trim_end(s)` - 去掉 `s` 的尾部空格。\n- `trim_end_match(s, pat)` - 删除与 `pat` 匹配的 `s` 的后缀。\n- `trim_end_matches(s, pat)` - 反复删除与 `pat` 匹配的 `s` 的后缀。\n- `trim_start(s)` - 去掉 `s` 的首部空格。\n- `trim_start_match(s, pat)` - 删除与 `pat` 匹配的 `s` 的前缀。\n- `trim_start_matches(s, pat)` - 反复删除与 `pat` 匹配的 `s` 的前缀。\n\n#### 大小写转换\n\n- `capitalize(s)`<sup>1.7.0</sup> - 将 `s` 的第一个字符转换成大写字母，其余的转换成小写字母。\n- `kebabcase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `kebab-case`。\n- `lowercamelcase(s)`<sup>1.7.0</sup> - 将 `s` 转换为小驼峰形式：`lowerCamelCase`。\n- `lowercase(s)` - 将 `s` 转换为全小写形式。\n- `shoutykebabcase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `SHOUTY-KEBAB-CASE`。\n- `shoutysnakecase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `SHOUTY_SNAKE_CASE`。\n- `snakecase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `snake_case`。\n- `titlecase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `Title Case`。\n- `uppercamelcase(s)`<sup>1.7.0</sup> - 将 `s` 转换为 `UpperCamelCase`。\n- `uppercase(s)` - 将 `s` 转换为大写形式。\n\n#### 路径操作\n\n##### 非可靠的\n\n- `absolute_path(path)` - 将当前工作目录中到相对路径 `path` 的路径转换为绝对路径。在 `/foo` 目录通过 `absolute_path(\"./bar.txt\")` 可以得到 `/foo/bar.txt`。\n- `extension(path)` - 获取 `path` 的扩展名。`extension(\"/foo/bar.txt\")` 结果为 `txt`。\n- `file_name(path)` - 获取 `path` 的文件名，去掉任何前面的目录部分。`file_name(\"/foo/bar.txt\")` 的结果为 `bar.txt`。\n- `file_stem(path)` - 获取 `path` 的文件名，不含扩展名。`file_stem(\"/foo/bar.txt\")` 的结果为 `bar`。\n- `parent_directory(path)` - 获取 `path` 的父目录。`parent_directory(\"/foo/bar.txt\")` 的结果为 `/foo`。\n- `without_extension(path)` - 获取 `path` 不含扩展名部分。`without_extension(\"/foo/bar.txt\")` 的结果为 `/foo/bar`。\n\n这些函数可能会失败，例如，如果一个路径没有扩展名，则将停止执行。\n\n##### 可靠的\n\n- `clean(path)` - 通过删除多余的路径分隔符、中间的 `.` 和 `..` 来简化 `path`。`clean(\"foo//bar\")` 结果为 `foo/bar`，`clean(\"foo/..\")` 为 `.`，`clean(\"foo/./bar\")` 结果为 `foo/bar`。\n- `join(a, b…)` - *这个函数在 Unix 上使用 `/`，在 Windows 上使用 `\\`，这可能会导致非预期的行为。`/` 操作符，例如，`a / b`，总是使用 `/`，应该被考虑作为替代，除非在 Windows 上特别指定需要 `\\`。* 将路径 `a` 和 路径 `b` 拼接在一起。`join(\"foo/bar\", \"baz\")` 结果为 `foo/bar/baz`。它接受两个或多个参数。\n\n#### 文件系统访问\n\n- `path_exists(path)` - 如果路径指向一个存在的文件或目录，则返回 `true`，否则返回 `false`。也会遍历符号链接，如果路径无法访问或指向一个无效的符号链接，则返回 `false`。\n\n##### 错误报告\n\n- `error(message)` - 终止执行并向用户报告错误 `message`。\n\n#### UUID 和哈希值生成\n\n- `sha256(string)` - 以十六进制字符串形式返回 `string` 的 SHA-256 哈希值。\n- `sha256_file(path)` - 以十六进制字符串形式返回 `path` 处的文件的 SHA-256 哈希值。\n- `uuid()` - 返回一个随机生成的 UUID。\n\n### 配方属性\n\n配方可以通过添加属性注释来改变其行为。\n\n\n| 名称                                | 描述                                   |\n| ----------------------------------- | -------------------------------------- |\n| `[no-cd]`<sup>1.9.0</sup>           | 在执行配方之前不要改变目录。           |\n| `[no-exit-message]`<sup>1.7.0</sup> | 如果配方执行失败，不要打印错误信息。   |\n| `[linux]`<sup>1.8.0</sup>           | 在Linux上启用配方。                    |\n| `[macos]`<sup>1.8.0</sup>           | 在MacOS上启用配方。                    |\n| `[unix]`<sup>1.8.0</sup>            | 在Unixes上启用配方。                   |\n| `[windows]`<sup>1.8.0</sup>         | 在Windows上启用配方。                  |\n| `[private]`<sup>1.10.0</sup>        | 参见 [私有配方](#私有配方). |\n\n#### 启用和禁用配方<sup>1.8.0</sup>\n\n`[linux]`, `[macos]`, `[unix]` 和 `[windows]` 属性是配置属性。默认情况下，配方总是被启用。一个带有一个或多个配置属性的配方只有在其中一个或多个配置处于激活状态时才会被启用。\n\n这可以用来编写因运行的操作系统不同，其行为也不同的 `justfile`。以下 `justfile` 中的 `run` 配方将编译和运行 `main.c`，并且根据操作系统的不同而使用不同的C编译器，同时使用正确的二进制产物名称：\n\n```just\n[unix]\nrun:\n  cc main.c\n  ./a.out\n\n[windows]\nrun:\n  cl main.c\n  main.exe\n```\n\n#### 禁用变更目录<sup>1.9.0</sup>\n\n`just` 通常在执行配方时将当前目录设置为包含 `justfile` 的目录，你可以通过 `[no-cd]` 属性来禁用此行为。这可以用来创建使用调用目录相对路径或者对当前目录进行操作的配方。\n\n例如这个 `commit` 配方：\n\n```just\n[no-cd]\ncommit file:\n  git add {{file}}\n  git commit\n```\n\n可以使用相对于当前目录的路径，因为 `[no-cd]` 可以防止 `just` 在执行 `commit` 配方时改变当前目录。\n\n### 使用反引号的命令求值\n\n反引号可以用来存储命令的求值结果：\n\n```just\nlocalhost := `dumpinterfaces | cut -d: -f2 | sed 's/\\/.*//' | sed 's/ //g'`\n\nserve:\n  ./serve {{localhost}} 8080\n```\n\n缩进的反引号，以三个反引号为界，与字符串缩进的方式一样，会被去掉缩进：\n\n````just\n# This backtick evaluates the command `echo foo\\necho bar\\n`, which produces the value `foo\\nbar\\n`.\nstuff := ```\n    echo foo\n    echo bar\n  ```\n````\n\n参见 [字符串](#字符串) 部分，了解去除缩进的细节。\n\n反引号内不能以 `#!` 开头。这种语法是为将来的升级而保留的。\n\n### 条件表达式\n\n`if` / `else` 表达式评估不同的分支，取决于两个表达式是否评估为相同的值：\n\n```just\nfoo := if \"2\" == \"2\" { \"Good!\" } else { \"1984\" }\n\nbar:\n  @echo \"{{foo}}\"\n```\n\n```sh\n$ just bar\nGood!\n```\n\n也可以用于测试不相等：\n\n```just\nfoo := if \"hello\" != \"goodbye\" { \"xyz\" } else { \"abc\" }\n\nbar:\n  @echo {{foo}}\n```\n\n```sh\n$ just bar\nxyz\n```\n\n还支持与正则表达式进行匹配：\n\n```just\nfoo := if \"hello\" =~ 'hel+o' { \"match\" } else { \"mismatch\" }\n\nbar:\n  @echo {{foo}}\n```\n\n```sh\n$ just bar\nmatch\n```\n\n正则表达式由 [Regex 包](https://github.com/rust-lang/regex) 提供，其语法在 [docs.rs](https://docs.rs/regex/1.5.4/regex/#syntax) 上有对应文档。由于正则表达式通常使用反斜线转义序列，请考虑使用单引号的字符串字面值，这将使斜线不受干扰地传递给正则分析器。\n\n条件表达式是短路的，这意味着它们只评估其中的一个分支。这可以用来确保反引号内的表达式在不应该运行的时候不会运行。\n\n```just\nfoo := if env_var(\"RELEASE\") == \"true\" { `get-something-from-release-database` } else { \"dummy-value\" }\n```\n\n条件语句也可以在配方中使用：\n\n```just\nbar foo:\n  echo {{ if foo == \"bar\" { \"hello\" } else { \"goodbye\" } }}\n```\n\n注意最后的 `}` 后面的空格! 没有这个空格，插值将被提前结束。\n\n多个条件语句可以被连起来：\n\n```just\nfoo := if \"hello\" == \"goodbye\" {\n  \"xyz\"\n} else if \"a\" == \"a\" {\n  \"abc\"\n} else {\n  \"123\"\n}\n\nbar:\n  @echo {{foo}}\n```\n\n```sh\n$ just bar\nabc\n```\n\n### 出现错误停止执行\n\n可以用 `error` 函数停止执行。比如：\n\n```just\nfoo := if \"hello\" == \"goodbye\" {\n  \"xyz\"\n} else if \"a\" == \"b\" {\n  \"abc\"\n} else {\n  error(\"123\")\n}\n```\n\n在运行时产生以下错误：\n\n```\nerror: Call to function `error` failed: 123\n   |\n16 |   error(\"123\")\n```\n\n### 从命令行设置变量\n\n变量可以从命令行进行覆盖。\n\n```just\nos := \"linux\"\n\ntest: build\n  ./test --test {{os}}\n\nbuild:\n  ./build {{os}}\n```\n\n```sh\n$ just\n./build linux\n./test --test linux\n```\n\n任何数量的 `NAME=VALUE` 形式的参数都可以在配方前传递：\n\n```sh\n$ just os=plan9\n./build plan9\n./test --test plan9\n```\n\n或者你可以使用 `--set` 标志：\n\n```sh\n$ just --set os bsd\n./build bsd\n./test --test bsd\n```\n\n### 获取和设置环境变量\n\n#### 导出 `just` 变量\n\n以 `export` 关键字为前缀的赋值将作为环境变量导出到配方中：\n\n```just\nexport RUST_BACKTRACE := \"1\"\n\ntest:\n  # 如果它崩溃了，将打印一个堆栈追踪\n  cargo test\n```\n\n以 `$` 为前缀的参数将被作为环境变量导出：\n\n```just\ntest $RUST_BACKTRACE=\"1\":\n  # 如果它崩溃了，将打印一个堆栈追踪\n  cargo test\n```\n\n导出的变量和参数不会被导出到同一作用域内反引号包裹的表达式里。\n\n```just\nexport WORLD := \"world\"\n# This backtick will fail with \"WORLD: unbound variable\"\nBAR := `echo hello $WORLD`\n```\n\n```just\n# Running `just a foo` will fail with \"A: unbound variable\"\na $A $B=`echo $A`:\n  echo $A $B\n```\n\n当 [export](#导出) 被设置时，所有的 `just` 变量都将作为环境变量被导出。\n\n#### 从环境中获取环境变量\n\n来自环境的环境变量会自动传递给配方：\n\n```just\nprint_home_folder:\n  echo \"HOME is: '${HOME}'\"\n```\n\n```sh\n$ just\nHOME is '/home/myuser'\n```\n\n#### 从 `.env` 文件加载环境变量\n\n如果 [dotenv-load](#环境变量加载) 被设置，`just` 将从 `.env` 文件中加载环境变量。该文件中的变量将作为环境变量提供给配方。参见 [环境变量集成](#环境变量加载) 以获得更多信息。\n\n#### 从环境变量中设置 `just` 变量\n\n环境变量可以通过函数 `env_var()` 和 `env_var_or_default()` 传入到 `just` 变量。\n参见 [environment-variables](#环境变量)。\n\n### 配方参数\n\n配方可以有参数。这里的配方 `build` 有一个参数叫 `target`:\n\n```just\nbuild target:\n  @echo 'Building {{target}}…'\n  cd {{target}} && make\n```\n\n要在命令行上传递参数，请把它们放在配方名称后面：\n\n```sh\n$ just build my-awesome-project\nBuilding my-awesome-project…\ncd my-awesome-project && make\n```\n\n要向依赖配方传递参数，请将依赖配方和参数一起放在括号里：\n\n```just\ndefault: (build \"main\")\n\nbuild target:\n  @echo 'Building {{target}}…'\n  cd {{target}} && make\n```\n\n变量也可以作为参数传递给依赖：\n\n```just\ntarget := \"main\"\n\n_build version:\n  @echo 'Building {{version}}…'\n  cd {{version}} && make\n\nbuild: (_build target)\n```\n\n命令的参数可以通过将依赖与参数一起放在括号中的方式传递给依赖：\n\n```just\nbuild target:\n  @echo \"Building {{target}}…\"\n\npush target: (build target)\n  @echo 'Pushing {{target}}…'\n```\n\n参数可以有默认值：\n\n```just\ndefault := 'all'\n\ntest target tests=default:\n  @echo 'Testing {{target}}:{{tests}}…'\n  ./test --tests {{tests}} {{target}}\n```\n\n有默认值的参数可以省略：\n\n```sh\n$ just test server\nTesting server:all…\n./test --tests all server\n```\n\n或者提供：\n\n```sh\n$ just test server unit\nTesting server:unit…\n./test --tests unit server\n```\n\n默认值可以是任意的表达式，但字符串或路径拼接必须放在括号内：\n\n```just\narch := \"wasm\"\n\ntest triple=(arch + \"-unknown-unknown\") input=(arch / \"input.dat\"):\n  ./test {{triple}}\n```\n\n配方的最后一个参数可以是变长的，在参数名称前用 `+` 或 `*` 表示：\n\n```just\nbackup +FILES:\n  scp {{FILES}} me@server.com:\n```\n\n以 `+` 为前缀的变长参数接受 _一个或多个_ 参数，并展开为一个包含这些参数的字符串，以空格分隔：\n\n```sh\n$ just backup FAQ.md GRAMMAR.md\nscp FAQ.md GRAMMAR.md me@server.com:\nFAQ.md                  100% 1831     1.8KB/s   00:00\nGRAMMAR.md              100% 1666     1.6KB/s   00:00\n```\n\n以 `*` 为前缀的变长参数接受 _0个或更多_ 参数，并展开为一个包含这些参数的字符串，以空格分隔，如果没有参数，则为空字符串：\n\n```just\ncommit MESSAGE *FLAGS:\n  git commit {{FLAGS}} -m \"{{MESSAGE}}\"\n```\n\n变长参数可以被分配默认值。这些参数被命令行上传递的参数所覆盖：\n\n```just\ntest +FLAGS='-q':\n  cargo test {{FLAGS}}\n```\n\n`{{…}}` 的替换可能需要加引号，如果它们包含空格。例如，如果你有以下配方：\n\n```just\nsearch QUERY:\n  lynx https://www.google.com/?q={{QUERY}}\n```\n\n然后你输入：\n\n```sh\n$ just search \"cat toupee\"\n```\n\n`just` 将运行 `lynx https://www.google.com/?q=cat toupee` 命令，这将被 `sh` 解析为`lynx`、`https://www.google.com/?q=cat` 和 `toupee`，而不是原来的 `lynx` 和 `https://www.google.com/?q=cat toupee`。\n\n你可以通过添加引号来解决这个问题：\n\n```just\nsearch QUERY:\n  lynx 'https://www.google.com/?q={{QUERY}}'\n```\n\n以 `$` 为前缀的参数将被作为环境变量导出：\n\n```just\nfoo $bar:\n  echo $bar\n```\n\n### 在配方的末尾运行配方\n\n一个配方的正常依赖总是在配方开始之前运行。也就是说，被依赖方总是在依赖方之前运行。这些依赖被称为 \"前期依赖\"。\n\n一个配方也可以有后续的依赖，它们在配方之后运行，用 `&&` 表示：\n\n```just\na:\n  echo 'A!'\n\nb: a && c d\n  echo 'B!'\n\nc:\n  echo 'C!'\n\nd:\n  echo 'D!'\n```\n\n…运行 _b_ 输出：\n\n```sh\n$ just b\necho 'A!'\nA!\necho 'B!'\nB!\necho 'C!'\nC!\necho 'D!'\nD!\n```\n\n### 在配方中间运行配方\n\n`just` 不支持在配方的中间运行另一个配方，但你可以在一个配方的中间递归调用 `just`。例如以下 `justfile`：\n\n```just\na:\n  echo 'A!'\n\nb: a\n  echo 'B start!'\n  just c\n  echo 'B end!'\n\nc:\n  echo 'C!'\n```\n\n…运行 _b_ 输出：\n\n```sh\n$ just b\necho 'A!'\nA!\necho 'B start!'\nB start!\necho 'C!'\nC!\necho 'B end!'\nB end!\n```\n\n这有局限性，因为配方 `c` 是以一个全新的 `just` 调用来运行的，赋值将被重新计算，依赖可能会运行两次，命令行参数不会被传入到子 `just` 进程。\n\n### 用其他语言书写配方\n\n以 `#!` 开头的配方被称为 Shebang 配方，它通过将配方主体保存到文件中并运行它来执行。这让你可以用不同的语言来编写配方：\n\n```just\npolyglot: python js perl sh ruby nu\n\npython:\n  #!/usr/bin/env python3\n  print('Hello from python!')\n\njs:\n  #!/usr/bin/env node\n  console.log('Greetings from JavaScript!')\n\nperl:\n  #!/usr/bin/env perl\n  print \"Larry Wall says Hi!\\n\";\n\nsh:\n  #!/usr/bin/env sh\n  hello='Yo'\n  echo \"$hello from a shell script!\"\n\nnu:\n  #!/usr/bin/env nu\n  let hello = 'Hola'\n  echo $\"($hello) from a nushell script!\"\n\nruby:\n  #!/usr/bin/env ruby\n  puts \"Hello from ruby!\"\n```\n\n```sh\n$ just polyglot\nHello from python!\nGreetings from JavaScript!\nLarry Wall says Hi!\nYo from a shell script!\nHola from a nushell script!\nHello from ruby!\n```\n\n在类似 Unix 的操作系统中，包括 Linux 和 MacOS，Shebang 配方的执行方式是将配方主体保存到临时目录下的一个文件中，将该文件标记为可执行文件，然后执行它。操作系统将 Shebang 行解析为一个命令行并调用它，包括文件的路径。例如，如果一个配方以 `#!/usr/bin/env bash` 开头，操作系统运行的最终命令将是 `/usr/bin/env bash /tmp/PATH_TO_SAVED_RECIPE_BODY` 之类。请记住，不同的操作系统对 Shebang 行的分割方式不同。\n\nWindows 不支持 Shebang 行。在 Windows 上，`just` 将 Shebang 行分割成命令和参数，将配方主体保存到一个文件中，并调用分割后的命令和参数，同时将保存的配方主体的路径作为最后一个参数。\n\n### 更加安全的 Bash Shebang 配方\n\n如果你正在写一个 `bash` Shebang 配方，考虑加入 `set -euxo pipefail`：\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  hello='Yo'\n  echo \"$hello from Bash!\"\n```\n\n严格意义上说这不是必须的，但是 `set -euxo pipefail` 开启了一些有用的功能，使 `bash` Shebang 配方的行为更像正常的、行式的 `just` 配方:\n\n- `set -e` 使 `bash` 在命令失败时退出。\n\n- `set -u` 使 `bash` 在变量未定义时退出。\n\n- `set -x` 使 `bash` 在运行前打印每一行脚本。\n\n- `set -o pipefail` 使 `bash` 在管道中的一个命令失败时退出。这是 `bash` 特有的，所以在普通的行式 `just` 配方中没有开启。\n\n这些措施共同避免了很多 Shell 脚本的问题。\n\n#### 在 Windows 上执行 Shebang 配方\n\n在 Windows 上，包含 `/` 的 Shebang 解释器路径通过 `cygpath` 从 Unix 风格的路径转换为 Windows 风格的路径，该工具随 [Cygwin](http://www.cygwin.com) 一起提供。\n\n例如，要在 Windows 上执行这个配方：\n\n```just\necho:\n  #!/bin/sh\n  echo \"Hello!\"\n```\n\n解释器路径 `/bin/sh` 在执行前将被 `cygpath` 翻译成 Windows 风格的路径。\n\n如果解释器路径不包含 `/`，它将被执行而不被翻译。这主要用于 `cygpath` 不可用或者你希望向解释器传递一个 Windows 风格的路径的情况下。\n\n### 在配方中设置变量\n\n配方代码行是由 Shell 解释的，而不是 `just`，所以不可能在配方中设置 `just` 变量：\n\n```mf\nfoo:\n  x := \"hello\" # This doesn't work!\n  echo {{x}}\n```\n\n使用 Shell 变量是可能的，但还有一个问题：每一行配方都由一个新的 Shell 实例运行，所以在一行中设置的变量不会在下一行中生效：\n\n```just\nfoo:\n  x=hello && echo $x # 这个没问题！\n  y=bye\n  echo $y            # 这个是有问题的, `y` 在此处未定义!\n```\n\n解决这个问题的最好方法是使用 Shebang 配方。Shebang 配方体被提取出来并作为脚本运行，所以一个 Shell 实例就可以运行整个配方体：\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  x=hello\n  echo $x\n```\n\n### 在配方之间共享环境变量\n\n每个配方的每一行都由一个新的shell执行，所以不可能在配方之间共享环境变量。\n\n#### 使用 Python 虚拟环境\n\n一些工具，像 [Python 的 venv](https://docs.python.org/3/library/venv.html)，需要加载环境变量才能工作，这使得它们在使用 `just` 时具有挑战性。作为一种变通方法，你可以直接执行虚拟环境二进制文件：\n\n```just\nvenv:\n  [ -d foo ] || python3 -m venv foo\n\nrun: venv\n  ./foo/bin/python3 main.py\n```\n\n### 改变配方中的工作目录\n\n每一行配方都由一个新的 Shell 执行，所以如果你在某一行改变了工作目录，对后面的行不会有影响：\n\n```just\nfoo:\n  pwd    # This `pwd` will print the same directory…\n  cd bar\n  pwd    # …as this `pwd`!\n```\n\n有几个方法可以解决这个问题。一个是在你想运行的命令的同一行调用 `cd`：\n\n```just\nfoo:\n  cd bar && pwd\n```\n\n另一种方法是使用 Shebang 配方。Shebang 配方体被提取并作为脚本运行，因此一个 Shell 实例将运行整个配方体，所以一行的 `pwd` 改变将影响后面的行，就像一个 Shell 脚本：\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  cd bar\n  pwd\n```\n\n### 缩进\n\n配方代码行可以用空格或制表符缩进，但不能两者混合使用。一个配方的所有行必须有相同的缩进，但同一 `justfile` 中的不同配方可以使用不同的缩进。\n\n### 多行结构\n\n没有初始 Shebang 的配方会被逐行评估和运行，这意味着多行结构可能不会像你预期的那样工作。\n\n例如对于下面的 `justfile`：\n\n```mf\nconditional:\n  if true; then\n    echo 'True!'\n  fi\n```\n\n在 `conditional` 配方的第二行前有额外的前导空格，会产生一个解析错误：\n\n```sh\n$ just conditional\nerror: Recipe line has extra leading whitespace\n  |\n3 |         echo 'True!'\n  |     ^^^^^^^^^^^^^^^^\n```\n\n为了解决这个问题，你可以在一行上写条件，用斜线转义换行，或者在你的配方中添加一个 Shebang。我们提供了一些多行结构的例子可供参考。\n\n#### `if` 语句\n\n```just\nconditional:\n  if true; then echo 'True!'; fi\n```\n\n```just\nconditional:\n  if true; then \\\n    echo 'True!'; \\\n  fi\n```\n\n```just\nconditional:\n  #!/usr/bin/env sh\n  if true; then\n    echo 'True!'\n  fi\n```\n\n#### `for` 循环\n\n```just\nfor:\n  for file in `ls .`; do echo $file; done\n```\n\n```just\nfor:\n  for file in `ls .`; do \\\n    echo $file; \\\n  done\n```\n\n```just\nfor:\n  #!/usr/bin/env sh\n  for file in `ls .`; do\n    echo $file\n  done\n```\n\n#### `while` 循环\n\n```just\nwhile:\n  while `server-is-dead`; do ping -c 1 server; done\n```\n\n```just\nwhile:\n  while `server-is-dead`; do \\\n    ping -c 1 server; \\\n  done\n```\n\n```just\nwhile:\n  #!/usr/bin/env sh\n  while `server-is-dead`; do\n    ping -c 1 server\n  done\n```\n\n### 命令行选项\n\n`just` 提供了一些有用的命令行选项，用于列出、Dump 和调试配方以及变量：\n\n```sh\n$ just --list\nAvailable recipes:\n  js\n  perl\n  polyglot\n  python\n  ruby\n$ just --show perl\nperl:\n  #!/usr/bin/env perl\n  print \"Larry Wall says Hi!\\n\";\n$ just --show polyglot\npolyglot: python js perl sh ruby\n```\n\n可以通过 `just --help` 命令查看所有选项。\n\n### 私有配方\n\n名字以 `_` 开头的配方和别名将在 `just --list` 中被忽略：\n\n```just\ntest: _test-helper\n  ./bin/test\n\n_test-helper:\n  ./bin/super-secret-test-helper-stuff\n```\n\n```sh\n$ just --list\nAvailable recipes:\n    test\n```\n\n`just --summary` 亦然：\n\n```sh\n$ just --summary\ntest\n```\n\n`[private]` 属性<sup>1.10.0</sup>也可用于隐藏配方，而不需要改变名称：\n\n```just\n[private]\nfoo:\n\n[private]\nalias b := bar\n\nbar:\n```\n\n```sh\n$ just --list\nAvailable recipes:\n    bar\n```\n\n这对那些只作为其他配方的依赖使用的辅助配方很有用。\n\n### 安静配方\n\n配方名称可在前面加上 `@`，可以在每行反转行首 `@` 的含义：\n\n```just\n@quiet:\n  echo hello\n  echo goodbye\n  @# all done!\n```\n\n现在只有以 `@` 开头的行才会被回显：\n\n```sh\n$ j quiet\nhello\ngoodbye\n# all done!\n```\n\nShebang 配方默认是安静的：\n\n```just\nfoo:\n  #!/usr/bin/env bash\n  echo 'Foo!'\n```\n\n```sh\n$ just foo\nFoo!\n```\n\n在 Shebang 配方名称前面添加 `@`，使 `just` 在执行配方前打印该配方：\n\n```just\n@bar:\n  #!/usr/bin/env bash\n  echo 'Bar!'\n```\n\n```sh\n$ just bar\n#!/usr/bin/env bash\necho 'Bar!'\nBar!\n```\n\n`just` 在配方行失败时通常会打印错误信息，这些错误信息可以通过 `[no-exit-message]`<sup>1.7.0</sup> 属性来抑制。你可能会发现这在包装工具的配方中特别有用：\n\n```just\ngit *args:\n    @git {{args}}\n```\n\n```sh\n$ just git status\nfatal: not a git repository (or any of the parent directories): .git\nerror: Recipe `git` failed on line 2 with exit code 128\n```\n\n添加属性，当工具以非零代码退出时抑制退出错误信息：\n\n```just\n[no-exit-message]\ngit *args:\n    @git {{args}}\n```\n\n```sh\n$ just git status\nfatal: not a git repository (or any of the parent directories): .git\n```\n\n### 通过交互式选择器选择要运行的配方\n\n`--choose` 子命令可以使 `just` 唤起一个选择器来让您选择要运行的配方。选择器应该从标准输入中读取包含配方名称的行，并将其中一个或多个用空格分隔的名称打印到标准输出。\n\n因为目前没有办法通过 `--choose` 运行一个需要传入参数的配方，所以这样的配方将不会在选择器中列出。另外，私有配方和别名也会被忽略。\n\n选择器可以用 `--chooser` 标志来覆写。如果 `--chooser` 没有给出，那么 `just` 首先检查 `$JUST_CHOOSER` 是否被设置。如果没有，那么将使用默认选择器 `fzf`，这是一个流行的模糊查找器。\n\n参数可以包含在选择器中，例如：`fzf --exact`。\n\n选择器的调用方式与配方行的调用方式相同。例如，如果选择器是 `fzf`，它将被通过 `sh -cu 'fzf'` 调用，如果 Shell 或 Shell 参数被覆写，选择器的调用将尊重这些覆写。\n\n如果你希望 `just` 默认用选择器来选择配方，你可以用这个作为你的默认配方：\n\n```just\ndefault:\n  @just --choose\n```\n\n### 在其他目录下调用 `justfile`\n\n如果传递给 `just` 的第一个参数包含 `/`，那么就会发生以下情况：\n\n1.  参数在最后的 `/` 处被分割；\n\n2.  最后一个 `/` 之前的部分将被视为一个目录。`just` 将从这里开始搜索 `justfile`，而不是在当前目录下；\n\n3.  最后一个斜线之后的部分被视为正常参数，如果是空的，则被忽略；\n\n这可能看起来有点奇怪，但如果你想在一个子目录下的 `justfile` 中运行一个命令，这很有用。\n\n例如，如果你在一个目录中，该目录包含一个名为 `foo` 的子目录，该目录包含一个 `justfile`，其配方为 `build`，也是默认的配方，以下都是等同的：\n\n```sh\n$ (cd foo && just build)\n$ just foo/build\n$ just foo/\n```\n\n### 隐藏 `justfile`\n\n`just` 会寻找名为 `justfile` 和 `.justfile` 的 `justfile`，因此你也可以使用隐藏的 `justfile`（即 `.justfile`）。\n\n### Just 脚本\n\n通过在 `justfile` 的顶部添加 Shebang 行并使其可执行，`just` 可以作为脚本的解释器使用：\n\n```sh\n$ cat > script <<EOF\n#!/usr/bin/env just --justfile\n\nfoo:\n  echo foo\nEOF\n$ chmod +x script\n$ ./script foo\necho foo\nfoo\n```\n\n当一个带有 Shebang 的脚本被执行时，系统会提供该脚本的路径作为 Shebang 中命令的参数。因此，如果 Shebang 是 `#!/usr/bin/env just --justfile`，对应的命令将是 `/usr/bin/env just --justfile PATH_TO_SCRIPT`。\n\n对于上面的命令，`just` 会把它的工作目录改为脚本的位置。如果你想让工作目录保持不变，可以使用 `#!/usr/bin/env just --working-directory . --justfile`。\n\n注意：Shebang 的行分隔在不同的操作系统中并不一致。前面的例子只在 macOS 上进行了测试。在 Linux 上，你可能需要向 `env` 传递 `-S` 标志：\n\n```just\n#!/usr/bin/env -S just --justfile\n\ndefault:\n  echo foo\n```\n\n### 将 `justfile` 转为JSON文件\n\n`--dump` 命令可以和 `--dump-format json` 一起使用，以打印一个 `justfile` 的JSON表示。JSON格式目前还不稳定，所以需要添加 `--unstable` 标志。\n\n### 回退到父 `justfile`\n\n如果在 `justfile` 中没有找到配方，并且设置了 `fallback`，`just` 将在父目录及其上级目录寻找`justfile`，直到到达根目录。`just` 在找到其中的 `fallback` 设置为`false` 或未设置的 `justfile` 时将停止。\n\n举个例子，假设当前目录包含这个 `justfile`：\n\n```just\nset fallback\nfoo:\n  echo foo\n```\n\n而父目录包含这个 `justfile`：\n\n```just\nbar:\n  echo bar\n```\n\n```sh\n$ just --unstable bar\nTrying ../justfile\necho bar\nbar\n```\n\n### 避免参数分割\n\n考虑这个 `justfile`:\n\n```just\nfoo argument:\n  touch {{argument}}\n```\n\n下面的命令将创建两个文件，`some` 和 `argument.txt`：\n\n```sh\n$ just foo \"some argument.txt\"\n```\n\n用户 Shell 会把 `\"some argument.txt\"` 解析为一个参数，但当 `just` 把 `touch {{argument}}` 替换为`touch some argument.txt` 时，引号没有被保留，`touch` 会收到两个参数。\n\n有几种方法可以避免这种情况：引号包裹、位置参数和导出参数。\n\n#### 引号包裹\n\n可以在 `{{argument}}` 的周围加上引号，进行插值：\n\n```just\nfoo argument:\n  touch '{{argument}}'\n```\n\n这保留了 `just` 在运行前捕捉变量名称拼写错误的能力，例如，如果你写成了 `{{argument}}`，但如果 `argument` 的值包含单引号，则不会如你的预期那样工作。\n\n#### 位置参数\n\n设置 `positional-arguments` 使所有参数作为位置参数传递，允许用 `$1`, `$2`, …, 和 `$@` 访问这些参数，然后可以用双引号避免被 Shell 进一步分割：\n\n```just\nset positional-arguments\n\nfoo argument:\n  touch \"$1\"\n```\n\n这就破坏了 `just` 捕捉拼写错误的能力，例如你输入了 `$2`，这对 `argument` 的所有可能的值都有效，包括那些带双引号的值。\n\n#### 导出参数\n\n当设置 `export` 时，所有参数都被导出：\n\n```just\nset export\n\nfoo argument:\n  touch \"$argument\"\n```\n\n或者可以通过在参数前加上 `$` 来导出单个参数：\n\n```just\nfoo $argument:\n  touch \"$argument\"\n```\n\n这就破坏了 `just` 捕捉拼写错误的能力，例如你输入 `$argumant`，但对 `argument` 的所有可能的值都有效，包括那些带双引号的。\n\n### 配置 Shell\n\n有许多方法可以为行式配方配置 Shell，当配方不以 `#！` Shebang 开头时，这些配方的 Shell 为默认的。它们的优先级，从高到低为：\n\n1. `--shell` 和 `--shell-arg` 命令行选项。传入这两个选项中的任何一个，都会使 `just` 忽略当前 justfile 中的任何设置\n2. `set windows-shell := [...]`\n3. `set windows-powershell` (废弃)\n4. `set shell := [...]`\n\n由于 `set windows-shell` 比 `set shell` 有更高的优先级，你可以用 `set windows-shell` 在 Windows 上选择一个 Shell，而 `set shell` 则为所有其他平台选择一个 Shell。\n\n更新日志\n---------\n\n最新版本的更新日志可以在 [CHANGELOG.md](https://raw.githubusercontent.com/casey/just/master/CHANGELOG.md) 中找到。以前版本的更新日志可在 [发布页](https://github.com/casey/just/releases) 找到。`just --changelog` 也可以用来使 `just` 二进制文件打印其更新日志。\n\n杂项\n-----------\n\n### 配套工具\n\n与 `just` 搭配得很好的工具包括：\n\n- [`watchexec`](https://github.com/mattgreen/watchexec) — 一个简单的工具，它监控一个路径，并在检测到修改时运行一个命令。\n\n### 并行运行任务\n\nGNU parallel 可以用来同时运行多个任务：\n\n```just\nparallel:\n  #!/usr/bin/env -S parallel --shebang --ungroup --jobs {{ num_cpus() }}\n  echo task 1 start; sleep 3; echo task 1 done\n  echo task 2 start; sleep 3; echo task 2 done\n  echo task 3 start; sleep 3; echo task 3 done\n  echo task 4 start; sleep 3; echo task 4 done\n```\n\n### Shell 别名\n\n为了快速运行命令, 可以把 `alias j=just` 放在你的 Shell 配置文件中。\n\n在 `bash` 中，别名的命令可能不会保留下一节中描述的 Shell 自动补全功能。可以在你的 `.bashrc` 中添加以下一行，以便在你的别名命令中使用与 `just` 相同的自动补全功能：\n\n```sh\ncomplete -F _just -o bashdefault -o default j\n```\n\n### Shell 自动补全脚本\n\nBash、Zsh、Fish、PowerShell 和 Elvish 的 Shell 自动补全脚本可以在 [自动补全](https://github.com/casey/just/tree/master/completions) 目录下找到。关于如何安装它们，请参考你的 Shell 文档。\n\n`just` 二进制文件也可以在运行时生成相同的自动补全脚本，使用 `--completions` 命令即可，如下：\n\n```sh\n$ just --completions zsh > just.zsh\n```\n\n*macOS 注意:* 最近版本的 macOS 使用 zsh 作为默认的 Shell。如果你使用 Homebrew 安装 `just`，它会自动安装 zsh 补全脚本的最新副本到 Homebrew zsh 目录下，而内置默认版本的 zsh 是不知道的。如果可能的话，最好使用这个脚本副本，因为当你通过 Homebrew 更新 `just` 时，它也会被更新。另外，许多其他的 Homebrew 软件包也使用相同位置的补全脚本，而内置的 zsh 也不知道这些。为了在这种情况下在 zsh 中使用 `just` 的补全，你可以在调用 `compinit` 之前将 `fpath` 设置为 Homebrew 的位置。还要注意，Oh My Zsh 默认会运行 `compinit`，所以你的 `.zshrc` 文件看起来像这样：\n\n```zsh\n# 启动Homebrew，添加环境变量\neval \"$(brew shellenv)\"\n\nfpath=($HOMEBREW_PREFIX/share/zsh/site-functions $fpath)\n\n# 然后从这些选项中选择一个:\n# 1. 如果你使用的是 Oh My Zsh，你可以在这里初始化它\n# source $ZSH/oh-my-zsh.sh\n\n# 2. 否则就自己运行 compinit\n# autoload -U compinit\n# compinit\n```\n\n### 语法\n\n在 [GRAMMAR.md](https://github.com/casey/just/blob/master/GRAMMAR.md) 中可以找到一个非正式的 `justfile` 语法说明。\n\n### just.sh\n\n在 `just` 成为一个精致的 Rust 程序之前，它是一个很小的 Shell 脚本，叫 `make`。你可以在 [contrib/just.sh](https://github.com/casey/just/blob/master/contrib/just.sh) 中找到旧版本。\n\n### 用户 `justfile`\n\n如果你想让一些配方在任何地方都能使用，你有几个选择。\n\n首先，在 `~/.user.justfile` 中创建一个带有一些配方的 `justfile`。\n\n#### 配方别名\n\n如果你想通过名称来调用 `~/.user.justfile` 中的配方，并且不介意为每个配方创建一个别名，可以在你的 Shell 初始化脚本中加入以下内容：\n\n```sh\nfor recipe in `just --justfile ~/.user.justfile --summary`; do\n  alias $recipe=\"just --justfile ~/.user.justfile --working-directory . $recipe\"\ndone\n```\n\n现在，如果你在 `~/.user.justfile` 里有一个叫 `foo` 的配方，你可以在命令行输入 `foo` 来运行它。\n\n我花了很长时间才意识到你可以像这样创建配方别名。尽管有点迟，但我很高兴给你带来这个 `justfile` 技术的重大进步。\n\n#### 别名转发\n\n如果你不想为每个配方创建别名，你可以创建一个别名：\n\n```sh\nalias .j='just --justfile ~/.user.justfile --working-directory .'\n```\n\n现在，如果你在 `~/.user.justfile` 里有一个叫 `foo` 的配方，你可以在命令行输入 `.j foo` 来运行它。\n\n我很确定没有人真正使用这个功能，但它确实存在。\n\n¯\\\\\\_(ツ)\\_/¯\n\n#### 定制化\n\n你可以用额外的选项来定制上述别名。例如，如果你想让你的 `justfile` 中的配方在你的主目录中运行，而不是在当前目录中运行：\n\n```sh\nalias .j='just --justfile ~/.user.justfile --working-directory ~'\n```\n\n### Node.js `package.json` 脚本兼容性\n\n下面的导出语句使 `just` 配方能够访问本地 Node 模块二进制文件，并使 `just` 配方命令的行为更像 Node.js `package.json` 文件中的 `script` 条目：\n\n```just\nexport PATH := \"./node_modules/.bin:\" + env_var('PATH')\n```\n\n### 替代方案\n\n现在并不缺少命令运行器！在这里，有一些或多或少比较类似于 `just` 的替代方案，包括：\n\n- [make](https://en.wikipedia.org/wiki/Make_(software)): 启发了 `just` 的 Unix 构建工具。最初的 `make` 有几个不同的现代后裔, 包括 [FreeBSD Make](https://www.freebsd.org/cgi/man.cgi?make(1)) 和 [GNU Make](https://www.gnu.org/software/make/)。\n- [task](https://github.com/go-task/task): 一个用 Go 编写的基于 YAML 的命令运行器。\n- [maid](https://github.com/egoist/maid): 一个用 JavaScript 编写的基于 Markdown 的命令运行器。\n- [microsoft/just](https://github.com/microsoft/just): 一个用 JavaScript 编写的基于 JavasScript 的命令运行器。\n- [cargo-make](https://github.com/sagiegurari/cargo-make): 一个用于 Rust 项目的命令运行器。\n- [mmake](https://github.com/tj/mmake): 一个针对 `make` 的包装器，有很多改进，包括远程包含。\n- [robo](https://github.com/tj/robo): 一个用 Go 编写的基于 YAML 的命令运行器。\n- [mask](https://github.com/jakedeichert/mask): 一个用 Rust 编写的基于 Markdown 的命令运行器。\n- [makesure](https://github.com/xonixx/makesure): 一个用 AWK 和 Shell 编写的简单而便携的命令运行器。\n- [haku](https://github.com/VladimirMarkelov/haku): 一个用 Rust 编写的类似 make 的命令运行器。\n\n贡献\n------------\n\n`just` 欢迎你的贡献! `just` 是在最大许可的 [CC0](https://creativecommons.org/publicdomain/zero/1.0/legalcode.txt) 公共领域奉献和后备许可下发布的，所以你的修改也必须在这个许可下发布。\n\n### Janus\n\n[Janus](https://github.com/casey/janus) 是一个收集和分析 `justfile` 的工具，可以确定新版本的 `just` 是否会破坏或改变现有 `justfile` 的解析。\n\n在合并一个特别大的或可怕的变化之前，应该运行 `Janus` 以确保没有任何破坏。不要担心自己运行 `Janus`，Casey 会很乐意在需要时为你运行它。\n\n### 最小支持的 Rust 版本\n\n最低支持的 Rust 版本，或 MSRV，是当前稳定的(current stable) Rust。它可能可以在旧版本的 Rust 上构建，但这并不保证。\n\n### 新版本\n\n`just` 会经常发布新版本，以便用户快速获得新功能。\n\n发布的提交信息使用如下模板：\n\n```\nRelease x.y.z\n\n- Bump version: x.y.z → x.y.z\n- Update changelog\n- Update changelog contributor credits\n- Update dependencies\n- Update man page\n- Update version references in readme\n```\n\n常见问题\n--------------------------\n\n### Just 避免了 Make 的哪些特异性？\n\n`make` 有一些行为令人感到困惑、复杂，或者使它不适合作为通用的命令运行器。\n\n一个例子是，在某些情况下，`make` 不会实际运行配方中的命令。例如，如果你有一个名为 `test` 的文件和以下 makefile：\n\n```just\ntest:\n  ./test\n```\n\n`make` 将会拒绝运行你的测试：\n\n```sh\n$ make test\nmake: `test' is up to date.\n```\n\n`make` 假定 `test` 配方产生一个名为 `test` 的文件。由于这个文件已经存在，而且由于配方没有其他依赖，`make` 认为它没有任何事情可做并退出。\n\n公平地说，当把 `make` 作为一个构建系统时，这种行为是可取的，但当把它作为一个命令运行器时就不可取了。你可以使用 `make` 内置的 [`.PHONY` 目标名称](https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html) 为特定的目标禁用这种行为，但其语法很冗长，而且很难记住。明确的虚假目标列表与配方定义分开写，也带来了意外定义新的非虚假目标的风险。在 `just` 中，所有的配方都被当作是虚假的。\n\n其他 `make` 特异行为的例子包括赋值中 `=` 和 `:=` 的区别；如果你弄乱了你的 makefile，将会产生混乱的错误信息；需要 `$$` 在配方中使用环境变量；以及不同口味的 `make` 之间的不相容性。\n\n### Just 和 Cargo 构建脚本之间有什么关系？\n\n[`cargo` 构建脚本](http://doc.crates.io/build-script.html) 有一个相当特定的用途，就是控制 `cargo` 如何构建你的 Rust 项目。这可能包括给 `rustc` 调用添加标志，构建外部依赖，或运行某种 codegen 步骤。\n\n另一方面，`just` 是用于你可能在开发中会运行的所有其他的杂项命令。比如在不同的配置下运行测试，对代码进行检查，将构建的产出推送到服务器，删除临时文件，等等。\n\n另外，尽管 `just` 是用 Rust 编写的，但它可以被用于任何语言或项目使用的构建系统。\n\n进一步漫谈\n-----------------\n\n我个人认为为几乎每个项目写一个 `justfile` 非常有用，无论大小。\n\n在一个有多个贡献者的大项目中，有一个包含项目工作所需的所有命令的文件是非常有用的，这样所有命令唾手可得。\n\n可能有不同的命令来测试、构建、检查、部署等等，把它们都放在一个地方是很方便的，可以减少你花在告诉人们要运行哪些命令和如何输入这些命令的时间。\n\n而且，有了一个容易放置命令的地方，你很可能会想出其他有用的东西，这些东西是项目集体智慧的一部分，但没有写在任何地方，比如修订控制工作流程的某些部分需要的神秘命令，安装你项目的所有依赖，或者所有你可能需要传递给构建系统的任意标志等。\n\n一些关于配方的想法：\n\n- 部署/发布项目\n\n- 在发布模式与调试模式下进行构建\n\n- 在调试模式下运行或启用日志记录功能\n\n- 复杂的 git 工作流程\n\n- 更新依赖\n\n- 运行不同的测试集，例如快速测试与慢速测试，或以更多输出模式运行它们\n\n- 任何复杂的命令集，你真的应该写下来，如果只是为了能够记住它们的话\n\n即使是小型的个人项目，能够通过名字记住命令，而不是通过 ^Reverse 搜索你的 Shell 历史，这也是一个巨大的福音，能够进入一个用任意语言编写的旧项目，并知道你需要用到的所有命令都在 `justfile` 中，如果你输入 `just`，就可能会输出一些有用的（或至少是有趣的！）信息。\n\n关于配方的想法，请查看 [这个项目的 `justfile`](https://github.com/casey/just/blob/master/justfile)，或一些 [在其他项目里](https://github.com/search?q=path%3A**%2Fjustfile&type=code) 的 `justfile`。\n\n总之，我想这个令人难以置信地啰嗦的 README 就到此为止了。\n\n我希望你喜欢使用 `just`，并在你所有的计算工作中找到巨大的成功和满足！\n\n😸\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.5,
          "content": "Vagrant.configure(2) do |config|\n  config.vm.box = 'debian/jessie64'\n\n  config.vm.provision \"shell\", inline: <<-EOS\n    apt-get -y update\n    apt-get install -y clang git vim curl\n  EOS\n\n  config.vm.provision \"shell\", privileged: false, inline: <<-EOS\n    curl https://sh.rustup.rs -sSf > install-rustup\n    chmod +x install-rustup\n    ./install-rustup -y\n    source ~/.cargo/env\n    rustup target add x86_64-unknown-linux-musl\n    cargo install -f just\n    git clone https://github.com/casey/just.git\n  EOS\nend\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "book",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.037109375,
          "content": "cognitive-complexity-threshold = 1337\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "crates-io-readme.md",
          "type": "blob",
          "size": 0.5712890625,
          "content": "`just` is a handy way to save and run project-specific commands.\n\nCommands are stored in a file called `justfile` or `Justfile` with syntax\ninspired by `make`:\n\n```make\nbuild:\n    cc *.c -o main\n\n# test everything\ntest-all: build\n    ./test --all\n\n# run a specific test\ntest TEST: build\n    ./test --test {{TEST}}\n```\n\n`just` produces detailed error messages and avoids `make`'s idiosyncrasies, so\ndebugging a justfile is easier and less surprising than debugging a makefile.\n\nIt works on all operating systems supported by Rust.\n\nRead more on [GitHub](https://github.com/casey/just).\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "icon.png",
          "type": "blob",
          "size": 53.2802734375,
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 4.599609375,
          "content": "#!/usr/bin/env -S just --justfile\n# ^ A shebang isn't required, but allows a justfile to be executed\n#   like a script, with `./justfile test`, for example.\n\nalias t := test\n\nlog := \"warn\"\n\nexport JUST_LOG := log\n\n[group: 'dev']\nwatch +args='test':\n  cargo watch --clear --exec '{{ args }}'\n\n[group: 'test']\ntest:\n  cargo test --all\n\n[group: 'check']\nci: forbid test build-book clippy\n  cargo fmt --all -- --check\n  cargo update --locked --package just\n\n[group: 'check']\nfuzz:\n  cargo +nightly fuzz run fuzz-compiler\n\n[group: 'misc']\nrun:\n  cargo run\n\n# only run tests matching `PATTERN`\n[group: 'test']\nfilter PATTERN:\n  cargo test {{PATTERN}}\n\n[group: 'misc']\nbuild:\n  cargo build\n\n[group: 'misc']\nfmt:\n  cargo fmt --all\n\n[group: 'check']\nshellcheck:\n  shellcheck www/install.sh\n\n[group: 'doc']\nman:\n  mkdir -p man\n  cargo run -- --man > man/just.1\n\n[group: 'doc']\nview-man: man\n  man man/just.1\n\n# add git log messages to changelog\n[group: 'release']\nupdate-changelog:\n  echo >> CHANGELOG.md\n  git log --pretty='format:- %s' >> CHANGELOG.md\n\n[group: 'release']\nupdate-contributors:\n  cargo run --release --package update-contributors\n\n[group: 'check']\noutdated:\n  cargo outdated -R\n\n[group: 'check']\nunused:\n  cargo +nightly udeps --workspace\n\n# publish current GitHub master branch\n[group: 'release']\npublish:\n  #!/usr/bin/env bash\n  set -euxo pipefail\n  rm -rf tmp/release\n  git clone git@github.com:casey/just.git tmp/release\n  cd tmp/release\n  ! grep '<sup>master</sup>' README.md\n  VERSION=`sed -En 's/version[[:space:]]*=[[:space:]]*\"([^\"]+)\"/\\1/p' Cargo.toml | head -1`\n  git tag -a $VERSION -m \"Release $VERSION\"\n  git push origin $VERSION\n  cargo publish\n  cd ../..\n  rm -rf tmp/release\n\n[group: 'release']\nreadme-version-notes:\n  grep '<sup>master</sup>' README.md\n\n# clean up feature branch BRANCH\n[group: 'dev']\ndone BRANCH=`git rev-parse --abbrev-ref HEAD`:\n  git checkout master\n  git diff --no-ext-diff --quiet --exit-code\n  git pull --rebase github master\n  git diff --no-ext-diff --quiet --exit-code {{BRANCH}}\n  git branch -D {{BRANCH}}\n\n# install just from crates.io\n[group: 'misc']\ninstall:\n  cargo install -f just\n\n# install development dependencies\n[group: 'dev']\ninstall-dev-deps:\n  rustup install nightly\n  rustup update nightly\n  cargo +nightly install cargo-fuzz\n  cargo install cargo-check\n  cargo install cargo-watch\n  cargo install mdbook mdbook-linkcheck\n\n# everyone's favorite animate paper clip\n[group: 'check']\nclippy:\n  cargo clippy --all --all-targets --all-features -- --deny warnings\n\n[group: 'check']\nforbid:\n  ./bin/forbid\n\n[group: 'dev']\nreplace FROM TO:\n  sd '{{FROM}}' '{{TO}}' src/*.rs\n\n[group: 'demo']\ntest-quine:\n  cargo run -- quine\n\n# make a quine, compile it, and verify it\n[group: 'demo']\nquine:\n  mkdir -p tmp\n  @echo '{{quine-text}}' > tmp/gen0.c\n  cc tmp/gen0.c -o tmp/gen0\n  ./tmp/gen0 > tmp/gen1.c\n  cc tmp/gen1.c -o tmp/gen1\n  ./tmp/gen1 > tmp/gen2.c\n  diff tmp/gen1.c tmp/gen2.c\n  rm -r tmp\n  @echo 'It was a quine!'\n\nquine-text := '\n  int printf(const char*, ...);\n\n  int main() {\n    char *s =\n      \"int printf(const char*, ...);\"\n      \"int main() {\"\n      \"   char *s = %c%s%c;\"\n      \"  printf(s, 34, s, 34);\"\n      \"  return 0;\"\n      \"}\";\n    printf(s, 34, s, 34);\n    return 0;\n  }\n'\n\n[group: 'test']\ntest-completions:\n  ./tests/completions/just.bash\n\n[group: 'check']\nbuild-book:\n  cargo run --package generate-book\n  mdbook build book/en\n  mdbook build book/zh\n\n[group: 'dev']\nprint-readme-constants-table:\n  cargo test constants::tests::readme_table -- --nocapture\n\n# run all polyglot recipes\n[group: 'demo']\npolyglot: _python _js _perl _sh _ruby\n\n_python:\n  #!/usr/bin/env python3\n  print('Hello from python!')\n\n_js:\n  #!/usr/bin/env node\n  console.log('Greetings from JavaScript!')\n\n_perl:\n  #!/usr/bin/env perl\n  print \"Larry Wall says Hi!\\n\";\n\n_sh:\n  #!/usr/bin/env sh\n  hello='Yo'\n  echo \"$hello from a shell script!\"\n\n_nu:\n  #!/usr/bin/env nu\n  let hellos = [\"Greetings\", \"Yo\", \"Howdy\"]\n  $hellos | each {|el| print $\"($el) from a nushell script!\" }\n\n_ruby:\n  #!/usr/bin/env ruby\n  puts \"Hello from ruby!\"\n\n# Print working directory, for demonstration purposes!\n[group: 'demo']\npwd:\n  echo {{invocation_directory()}}\n\n[group: 'test']\ntest-bash-completions:\n  rm -rf tmp\n  mkdir -p tmp/bin\n  cargo build\n  cp target/debug/just tmp/bin\n  ./tmp/bin/just --completions bash > tmp/just.bash\n  echo 'mod foo' > tmp/justfile\n  echo 'bar:' > tmp/foo.just\n  cd tmp && PATH=\"`realpath bin`:$PATH\" bash --init-file just.bash\n\n[group: 'test']\ntest-release-workflow:\n  -git tag -d test-release\n  -git push origin :test-release\n  git tag test-release\n  git push origin test-release\n\n# Local Variables:\n# mode: makefile\n# End:\n# vim: set ft=make :\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.125,
          "content": "edition = \"2018\"\nmax_width = 100\nnewline_style = \"Unix\"\ntab_spaces = 2\nuse_field_init_shorthand = true\nuse_try_shorthand = true\n"
        },
        {
          "name": "screenshot.png",
          "type": "blob",
          "size": 352.87890625,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}