{
  "metadata": {
    "timestamp": 1736709407260,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ajeetdsouza/zoxide",
      "stars": 24226,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.10546875,
          "content": "version = 1\n\n[[analyzers]]\nname = \"rust\"\n\n  [analyzers.meta]\n  msrv = \"stable\"\n\n[[analyzers]]\nname = \"shell\""
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.0078125,
          "content": "use nix\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.19921875,
          "content": "/contrib/completions/* eol=lf linguist-generated=true text\n/contrib/completions/README.md -eol -linguist-generated -text\n/init.fish eol=lf text\n/templates/*.txt eol=lf text\n/zoxide.plugin.zsh eol=lf text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1708984375,
          "content": "### Custom ###\n.vscode/\n\n### Rust ###\n# Compiled files and executables\ndebug/\ntarget/\ntarget_nix/\n\n# Backup files generated by rustfmt\n**/*.rs.bk\n\n### Python ###\n.mypy_cache/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.4384765625,
          "content": "<!-- markdownlint-disable-file MD024 -->\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.9.6] - 2024-09-19\n\n### Fixed\n\n- Fish: `builtin abbr` doesn't work on older versions.\n- Zsh: make `__zoxide_z_complete` available with `--no-cmd`.\n\n## [0.9.5] - 2024-09-13\n\n### Added\n\n- Zsh: improved `cd` completions.\n- Lazily delete excluded directories from the database.\n- Fish: detect infinite loop when using `alias cd=z`.\n- Installer: added flags for `--bin-dir`, `--man-dir`, `--arch`, and `--sudo`.\n- Nushell: support for v0.94.0+.\n- Bash/Fish/Zsh: support for `z -- dir` style queries.\n- Fish: improved Space-Tab completions.\n- Ksh: added support for the Korn shell.\n\n### Changed\n\n- fzf: removed `--select-1` from default options. The interactive selector will\n  now open up even if there is only one match.\n- Enforce that `$_ZO_DATA_DIR` is an absolute path.\n\n### Fixed\n\n- Zsh: Space-Tab completion repeating output multiple times when matching single\n  directory\n- Fish / Nushell / PowerShell: handle queries that look like args (e.g. `z -x`).\n- Elvish: `z -` now works as expected.\n- Fish: generated shell code avoids using aliased builtins.\n- Fish: `cd` command is now copied directly from\n  `$__fish_data_dir/functions/cd.fish`. This should minimize the chances of an\n  infinite loop when aliasing `cd=z`.\n- Symlinks not getting added to the database when `$_ZO_RESOLVE_SYMLINKS=0`.\n- Symlinked database files getting replaced instead of the actual files.\n\n## [0.9.4] - 2024-02-21\n\n### Changed\n\n- Zsh: improved Space-Tab completions.\n\n## [0.9.3] - 2024-02-13\n\n### Added\n\n- Nushell: support for v0.89.0.\n\n## [0.9.2] - 2023-08-04\n\n### Added\n\n- Short option `-a` for `zoxide query --all`.\n\n### Fixed\n\n- PowerShell: use `global` scope for variables / functions.\n\n## [0.9.1] - 2023-05-07\n\n### Added\n\n- Fish/Zsh: aliases on `__zoxide_z` will now use completions.\n- Nushell: support for v0.78.0.\n- Fish: plugin now works on older versions.\n- PowerShell: warn when PowerShell version is too old for `z -` and `z +`.\n- PowerShell: support for PWD hooks on all versions.\n\n### Fixed\n\n- Fish: not providing `cd` completions when there is a space in the path.\n- Bash/Fish/Zsh: providing `z` completions when the last argument starts with `z!`.\n- Bash/Fish/Zsh: attempting to `cd` when the last argument is `z!`.\n\n## [0.9.0] - 2023-01-08\n\n### Added\n\n- `edit` subcommand to adjust the scores of entries.\n\n### Fixed\n\n- Zsh: completions clashing with `zsh-autocomplete`.\n- Fzf: 'invalid option' on macOS.\n- PowerShell: handle UTF-8 encoding correctly.\n- Zsh: don't hide output from `chpwd` hooks.\n- Nushell: upgrade minimum supported version to v0.73.0.\n- Zsh: fix extra space in interactive completions when no match is found.\n- Fzf: various improvements, upgrade minimum supported version to v0.33.0.\n- Nushell: accidental redefinition of hooks when initialized twice.\n\n### Removed\n\n- `remove -i` subcommand: use `edit` instead.\n\n## [0.8.3] - 2022-09-02\n\n### Added\n\n- Nushell: support for `z -`.\n- Nushell: support for PWD hooks.\n\n### Changed\n\n- Fish: change fuzzy completion prefix to `z!`.\n- Zsh: allow `z` to navigate dirstack via `+n` and `-n`.\n- Fzf: improved preview window.\n\n### Fixed\n\n- Bash: double forward slash in completions.\n\n## [0.8.2] - 2022-06-26\n\n### Changed\n\n- Fzf: show preview window below results.\n\n### Fixed\n\n- Bash/Fish/POSIX/Zsh: paths on Cygwin.\n- Fish: completions not working on certain systems.\n- Bash: completions not escaping spaces correctly.\n\n## [0.8.1] - 2021-04-23\n\n### Changed\n\n- Manpages: moved to `man/man1/*.1`.\n- Replace `--no-aliases` with `--no-cmd`.\n- Elvish: upgrade minimum supported version to v0.18.0.\n- Nushell: upgrade minimum supported version to v0.61.0.\n\n### Fixed\n\n- Bash/Zsh: rename `_z` completion function to avoid conflicts with other shell\n  plugins.\n- Fzf: added `--keep-right` option by default, upgrade minimum supported version\n  to v0.21.0.\n- Bash: only enable completions on 4.4+.\n- Fzf: bypass `ls` alias in preview window.\n- Retain ownership of database file.\n- `zoxide query --interactive` should not conflict with `--score`.\n\n## [0.8.0] - 2021-12-25\n\n### Added\n\n- Zsh: completions for `z` command.\n\n### Changed\n\n- Fzf: better default options.\n- Fish: interactive completions are only triggered when the last argument is\n  empty.\n- PowerShell: installation instructions.\n\n### Fixed\n\n- PowerShell: use global scope for aliases.\n- Zsh: fix errors with `set -eu`.\n- Fzf: handle early selection.\n- PowerShell: correctly handle escape characters in paths.\n- Parse error on Cygwin/MSYS due to CRLF line endings.\n- Fzf: handle spaces correctly in preview window.\n- Bash: avoid initializing completions on older versions.\n- Fzf: avoid launching binary from current directory on Windows.\n\n## [0.7.9] - 2021-11-02\n\n### Changed\n\n- Bash/Fish: improved completions for `z` command.\n\n### Fixed\n\n- Fish: error erasing completions on older versions.\n- PowerShell: enable `--cmd cd` to replace the `cd` command.\n\n## [0.7.8] - 2021-10-21\n\n### Added\n\n- Auto-generated completions for [Fig](https://fig.io/).\n\n### Fixed\n\n- Compile error with `clap v3.0.0-beta.5`.\n\n## [0.7.7] - 2021-10-15\n\n### Fixed\n\n- PowerShell: hook not initializing correctly.\n\n## [0.7.6] - 2021-10-13\n\n### Changed\n\n- Nushell: upgrade minimum supported version to v0.37.0.\n\n### Fixed\n\n- Xonsh: error messages in `zi`.\n- Xonsh: configuration environment variables not being handled correctly.\n\n## [0.7.5] - 2021-09-09\n\n### Added\n\n- Bash/Elvish: completions for `z` command.\n\n### Changed\n\n- Nushell: upgrade minimum supported version to v0.36.0.\n- Nushell: easier installation instructions.\n\n### Fixed\n\n- Elvish: unable to `z` into directories by path.\n- Elvish: don't show traceback when `z` or `zi` fails.\n- Elvish: nested shells do not initialize correctly.\n\n## [0.7.4] - 2021-08-15\n\n### Fixed\n\n- Compile error with `clap v3.0.0-beta.4`.\n\n## [0.7.3] - 2021-08-05\n\n### Added\n\n- `zoxide add` and `zoxide remove` now accept multiple arguments.\n\n### Fixed\n\n- Nushell: errors on 0.33.0.\n- PowerShell: errors when initializing in `StrictMode`.\n- Bash/POSIX: remove conflicting alias definitions when initializing.\n- Bash: remove extra semicolon when setting `$PROMPT_COMMAND`.\n- Xonsh: use shell environment instead of `os.environ`.\n\n## [0.7.2] - 2021-06-10\n\n### Fixed\n\n- `zoxide -V` not printing version.\n\n## [0.7.1] - 2021-06-09\n\n### Added\n\n- Auto-generated shell completions.\n- `zoxide query --all` for listing deleted directories.\n- Lazy deletion for removed directories that have not been accessed in > 90\n  days.\n- Nushell: support for 0.32.0+.\n\n### Fixed\n\n- Nushell: avoid calling `__zoxide_hook` on non-filesystem subshells.\n- Fish: `alias cd=z` now works, but it must be done after calling `zoxide init`.\n- PowerShell: avoid calling `__zoxide_hook` on non-filesystem providers.\n- Fish: avoid calling `__zoxide_hook` in private mode.\n\n## [0.7.0] - 2021-05-02\n\n### Added\n\n- Manpages for all subcommands.\n- Default prompt for Nushell.\n\n### Changed\n\n- `zoxide remove -i` now accepts multiple selections.\n- `zoxide add` no longer accepts zero parameters.\n- `$_ZO_EXCLUDE_DIRS` now defaults to `\"$HOME\"`.\n- Binary releases now use `.zip` on Windows, `.tar.gz` otherwise.\n\n### Fixed\n\n- `cd -` on Fish shells.\n- `__zoxide_hook` no longer changes value of `$?` within `$PROMPT_COMMAND` on\n  Bash.\n\n### Removed\n\n- GitHub install script.\n- Release binaries built with `glibc`, use `musl` instead.\n\n## [0.6.0] - 2021-04-09\n\n### Added\n\n- Support for [Nushell](https://www.nushell.sh/).\n- Support for [Elvish](https://elv.sh/).\n\n### Changed\n\n- `z` now excludes the current directory from search results.\n\n### Fixed\n\n- Removed backtraces on Rust nightly.\n- Generated shell code avoids using aliased builtins.\n- Handle broken pipe errors gracefully when writing to streams.\n- NUL file appearing in working directory on Windows.\n- Accidental redefinition of hooks when initialized twice on some shells.\n- zoxide unable to find itself on Xonsh shells.\n\n### Removed\n\n- Aliases: `za`, `zq`, `zqi`, `zr`, `zri`. These are trivial aliases that can\n  easily be defined manually, and aren't very useful to most users.\n\n## [0.5.0] - 2020-10-30\n\n### Added\n\n- `$_ZO_EXCLUDE_DIRS` now supports globs.\n- `zoxide init` now defines `__zoxide_z*` functions that can be aliased as\n  needed.\n- Support for the [Xonsh](https://xon.sh/) shell.\n- `zoxide import` can now import from Autojump.\n\n### Changed\n\n- `zoxide init --no-aliases` no longer generates `z` or `zi`.\n\n### Fixed\n\n- Clobber conflicting alias definitions in Bash/Fish/Zsh/POSIX shells.\n\n### Removed\n\n- Deprecated PWD hooks for POSIX shells.\n- Lazy deletion for inaccessible directories.\n\n## [0.4.3] - 2020-07-04\n\n### Fixed\n\n- Bug in Fish init script.\n\n## [0.4.2] - 2020-07-03\n\n### Added\n\n- `$_ZO_FZF_OPTS` to specify custom options for `fzf`\n- `zoxide query --list` to list all matches\n- `zoxide query --score` to show score along with result\n\n### Changed\n\n- Increased default value of `$_ZO_MAXAGE` to `10000`.\n- Symlinks are treated as separate directories by default, this can be changed\n  by setting `_ZO_RESOLVE_SYMLINKS=1`.\n\n### Removed\n\n- Help menus for `z` and `zri`.\n- `zoxide remove -i` is replaced with `zri`.\n\n## [0.4.1] - 2020-05-25\n\n### Added\n\n- Support for PowerShell.\n\n### Removed\n\n- Backward compatibility with `v0.2.x` databases.\n- Support for paths with invalid UTF-8.\n\n## [0.4.0] - 2020-05-03\n\n### Added\n\n- Interactive mode for removing entries (`zoxide remove -i`).\n- Aliases for interactive `query` and `remove` (`zqi` and `zri` respectively).\n- PWD hooks for POSIX shells.\n\n### Changed\n\n- `zoxide remove` now throws an error if there was no match in the database.\n- Interactive mode in `zoxide` no longer errors out if `fzf` exits gracefully.\n- Canonicalize to regular paths instead of UNC paths on Windows.\n- `zoxide init` now uses PWD hooks by default for better performance.\n- `$_ZO_ECHO` now only works when set to `1`.\n- Using the `--z-cmd` flag now also renames the associated aliases.\n- The `--z-cmd` flag has been renamed to `--cmd`.\n- The `--no-define-aliases` flag has been renamed to `--no-aliases`.\n\n### Fixed\n\n- Fish no longer `cd`s to the user's home when no match is found.\n\n## [0.3.1] - 2020-04-03\n\n### Added\n\n- Version output displays `git` revision information.\n- `--z-cmd` flag for `zoxide init` to rename the `z` command to something else.\n\n### Changed\n\n- `zoxide query` output no longer has the `query:` prefix.\n\n### Fixed\n\n- Queries now also include checks for if the top level directory matches.\n\n## [0.3.0] - 2020-03-30\n\n### Added\n\n- Automatic migration from `v0.2.x` databases.\n- `$_ZO_EXCLUDE_DIRS` to prevent directories from being added to the database.\n- Support for POSIX-compliant shells.\n\n### Changed\n\n- Database location defaults to user's local data directory.\n- Database schema now includes a version number.\n- `migrate` subcommand renamed to `import`.\n\n### Fixed\n\n- Thread safety using unique tempfile names for each `zoxide` instance.\n- Incomprehensive \"could not allocate\" message on database corruption.\n\n## [0.2.2] - 2020-03-20\n\n### Fixed\n\n- Incorrect exit codes in `z` command on Fish.\n\n### Removed\n\n- File locks on database.\n\n## [0.2.1] - 2020-03-16\n\n### Added\n\n- `$_ZO_ECHO` to echo match before `cd`ing.\n- Minimal `ranger` plugin.\n- PWD hook to only update the database when the current directory is changed.\n- Support for Bash.\n- `migrate` subcommand to allow users to migrate from `z`.\n\n### Fixed\n\n- Interactive queries causing other open shells to hang.\n\n## [0.2.0] - 2020-03-11\n\n### Added\n\n- `init` subcommand to remove dependency on shell plugin managers.\n- Support for `z -` command to go to previous directory.\n- `Cargo.lock` for more reproducible builds.\n- Support for the Fish shell.\n\n### Fixed\n\n- `_zoxide_precmd` overriding other precmd hooks on Zsh.\n\n## [0.1.1] - 2020-03-08\n\n### Added\n\n- Install script for Linux/macOS users.\n- Aging algorithm to remove stale entries.\n\n### Changed\n\n- Database schema now uses `f64` values for rank instead of `i32`.\n\n### Fixed\n\n- Multiple hooks being added upon initializing `zoxide` multiple times.\n\n## [0.1.0] - 2020-03-05\n\n### Added\n\n- GitHub Actions pipeline to build and upload releases.\n- Add support for Zsh.\n\n[0.9.6]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.5...v0.9.6\n[0.9.5]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.4...v0.9.5\n[0.9.4]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.3...v0.9.4\n[0.9.3]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.2...v0.9.3\n[0.9.2]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.1...v0.9.2\n[0.9.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.9.0...v0.9.1\n[0.9.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.8.3...v0.9.0\n[0.8.3]: https://github.com/ajeetdsouza/zoxide/compare/v0.8.2...v0.8.3\n[0.8.2]: https://github.com/ajeetdsouza/zoxide/compare/v0.8.1...v0.8.2\n[0.8.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.8.0...v0.8.1\n[0.8.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.9...v0.8.0\n[0.7.9]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.8...v0.7.9\n[0.7.8]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.7...v0.7.8\n[0.7.7]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.6...v0.7.7\n[0.7.6]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.5...v0.7.6\n[0.7.5]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.4...v0.7.5\n[0.7.4]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.3...v0.7.4\n[0.7.3]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.2...v0.7.3\n[0.7.2]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.1...v0.7.2\n[0.7.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.7.0...v0.7.1\n[0.7.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.6.0...v0.7.0\n[0.6.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.5.0...v0.6.0\n[0.5.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.4.3...v0.5.0\n[0.4.3]: https://github.com/ajeetdsouza/zoxide/compare/v0.4.2...v0.4.3\n[0.4.2]: https://github.com/ajeetdsouza/zoxide/compare/v0.4.1...v0.4.2\n[0.4.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.4.0...v0.4.1\n[0.4.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.3.1...v0.4.0\n[0.3.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.3.0...v0.3.1\n[0.3.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.2.2...v0.3.0\n[0.2.2]: https://github.com/ajeetdsouza/zoxide/compare/v0.2.1...v0.2.2\n[0.2.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.2.0...v0.2.1\n[0.2.0]: https://github.com/ajeetdsouza/zoxide/compare/v0.1.1...v0.2.0\n[0.1.1]: https://github.com/ajeetdsouza/zoxide/compare/v0.1.0...v0.1.1\n[0.1.0]: https://github.com/ajeetdsouza/zoxide/commits/v0.1.0\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 29.30078125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"aliasable\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"250f629c0161ad8107cf89319e990051fae62832fd343083bea452d93e2205fd\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86fdf8605db99b54d3cd748a44c6d04df638eb5dafb219b135d0149bd0db01f6\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc1835b7f27878de8525dc71410b5a31cdcc5f230aed5ba5df968e09c201b23d\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"libc\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40723b8fb387abc38f4f4a37c09073622e41dd12327033091ef8950659e6dc0c\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e5a21b8495e732f1b3c364c9949b201ca7bae518c502c80256c96ad79eaf6ac\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8cf2dd12af7a047ad9d6da2b6b249759a22a7abc0f474c1dae1777afa4b21a73\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b378c786d3bde9442d2c6dd7e6080b2a818db2b96e30d6e7f1b6d224eb617d3\"\ndependencies = [\n \"clap\",\n]\n\n[[package]]\nname = \"clap_complete_fig\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d494102c8ff3951810c72baf96910b980fb065ca5d3101243e6a8dc19747c86b\"\ndependencies = [\n \"clap\",\n \"clap_complete\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"501d359d5f3dcaf6ecdeee48833ae73ec6e42723a1e52419c79abf9507eec0a0\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"color-print\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ee543c60ff3888934877a5671f45494dd27ed4ba25c6670b9a7576b7ed7a8c0\"\ndependencies = [\n \"color-print-proc-macro\",\n]\n\n[[package]]\nname = \"color-print-proc-macro\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77ff1a80c5f3cb1ca7c06ffdd71b6a6dd6d8f896c42141fbd43f50ed28dcdb93\"\ndependencies = [\n \"nom\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.158\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c44f8e672c00fe5308fa235f821cb4198414e1c77935c1ab6948d3fd78550e\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"once_map\"\nversion = \"0.4.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30c7f82d6d446dd295845094f3a76bcdc5e6183b66667334e169f019cd05e5a0\"\ndependencies = [\n \"ahash\",\n \"hashbrown\",\n \"parking_lot\",\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"ouroboros\"\nversion = \"0.18.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"944fa20996a25aded6b4795c6d63f10014a7a83f8be9828a11860b08c5fc4a67\"\ndependencies = [\n \"aliasable\",\n \"ouroboros_macro\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"ouroboros_macro\"\nversion = \"0.18.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39b0deead1528fd0e5947a8546a9642a9777c25f6e1e26f34c97b204bbb465bd\"\ndependencies = [\n \"heck 0.4.1\",\n \"itertools\",\n \"proc-macro2\",\n \"proc-macro2-diagnostics\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e9086cc7640c29a356d1a29fd134380bee9d8f79a17410aa76e7ad295f42c97\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae8177bee8e75d6846599c6b9ff679ed51e882816914eec639944d7c9aa11931\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41b740d195ed3166cd147c8047ec98db0e22ec019eb8eeb76d343b795304fb13\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proc-macro2-diagnostics\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af066a9c399a26e020ada66a034357a868728e72cd426f3adcd35f80d88d88c8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"version_check\",\n \"yansi\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0884ad60e090bf1345b93da0a5de8923c93884cd03f40dfcfddd3b4bee661853\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"rinja\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a73141aab0b35b30bb993f5c832b8c9211709563b8b95517713b7d00ebb063e\"\ndependencies = [\n \"itoa\",\n \"rinja_derive\",\n]\n\n[[package]]\nname = \"rinja_derive\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31b0baa0b963e94a919d0dcad5be1e2d30dcc0fdab93d9803ab4a019e188647c\"\ndependencies = [\n \"memchr\",\n \"mime\",\n \"mime_guess\",\n \"once_map\",\n \"proc-macro2\",\n \"quote\",\n \"rinja_parser\",\n \"rustc-hash\",\n \"syn\",\n]\n\n[[package]]\nname = \"rinja_parser\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27303ef1ee98bb4240e3dd417f26459061e068d331b7ad05576167da3ae59a4e\"\ndependencies = [\n \"memchr\",\n \"nom\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a2c585be59b6b5dd66a9d2084aa1d8bd52fbdb806eafdeffb52791147862035\"\ndependencies = [\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"825ea780781b15345a146be27eaefb05085e337e869bff01b4306a4fd4a9ad5a\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rstest_reuse\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3a8fb4672e840a587a66fc577a5491375df51ddb88f2a2c2a792598c326fe14\"\ndependencies = [\n \"quote\",\n \"rand\",\n \"syn\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"unicase\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"which\"\nversion = \"6.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ee928febd44d98f2f459a4a79bd4d928591333a494a10a868418ac1b39cf1f\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zoxide\"\nversion = \"0.9.6\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"bincode\",\n \"clap\",\n \"clap_complete\",\n \"clap_complete_fig\",\n \"color-print\",\n \"dirs\",\n \"dunce\",\n \"fastrand\",\n \"glob\",\n \"nix\",\n \"ouroboros\",\n \"rinja\",\n \"rstest\",\n \"rstest_reuse\",\n \"serde\",\n \"tempfile\",\n \"which\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.39453125,
          "content": "[package]\nauthors = [\"Ajeet D'Souza <98ajeet@gmail.com>\"]\ncategories = [\"command-line-utilities\", \"filesystem\"]\ndescription = \"A smarter cd command for your terminal\"\nedition = \"2021\"\nhomepage = \"https://github.com/ajeetdsouza/zoxide\"\nkeywords = [\"cli\", \"filesystem\", \"shell\", \"tool\", \"utility\"]\nlicense = \"MIT\"\nname = \"zoxide\"\nreadme = \"README.md\"\nrepository = \"https://github.com/ajeetdsouza/zoxide\"\nrust-version = \"1.74.1\"\nversion = \"0.9.6\"\n\n[badges]\nmaintenance = { status = \"actively-developed\" }\n\n[dependencies]\nanyhow = \"1.0.32\"\nbincode = \"1.3.1\"\nclap = { version = \"4.3.0\", features = [\"derive\"] }\ncolor-print = \"0.3.4\"\ndirs = \"5.0.0\"\ndunce = \"1.0.1\"\nfastrand = \"2.0.0\"\nglob = \"0.3.0\"\nouroboros = \"0.18.3\"\nrinja = { version = \"0.3.2\", default-features = false }\nserde = { version = \"1.0.116\", features = [\"derive\"] }\n\n[target.'cfg(unix)'.dependencies]\nnix = { version = \"0.29.0\", default-features = false, features = [\n    \"fs\",\n    \"user\",\n] }\n\n[target.'cfg(windows)'.dependencies]\nwhich = \"6.0.0\"\n\n[build-dependencies]\nclap = { version = \"4.3.0\", features = [\"derive\"] }\nclap_complete = \"4.3.0\"\nclap_complete_fig = \"4.3.0\"\ncolor-print = \"0.3.4\"\n\n[dev-dependencies]\nassert_cmd = \"2.0.0\"\nrstest = { version = \"0.23.0\", default-features = false }\nrstest_reuse = \"0.7.0\"\ntempfile = \"3.1.0\"\n\n[features]\ndefault = []\nnix-dev = []\n\n[profile.release]\ncodegen-units = 1\ndebug = 0\nlto = true\nstrip = true\n\n[package.metadata.deb]\nassets = [\n    [\n        \"target/release/zoxide\",\n        \"usr/bin/\",\n        \"755\",\n    ],\n    [\n        \"contrib/completions/zoxide.bash\",\n        \"usr/share/bash-completion/completions/zoxide\",\n        \"644\",\n    ],\n    [\n        \"contrib/completions/zoxide.fish\",\n        \"usr/share/fish/vendor_completions.d/\",\n        \"664\",\n    ],\n    [\n        \"contrib/completions/_zoxide\",\n        \"usr/share/zsh/vendor-completions/\",\n        \"644\",\n    ],\n    [\n        \"man/man1/*\",\n        \"usr/share/man/man1/\",\n        \"644\",\n    ],\n    [\n        \"README.md\",\n        \"usr/share/doc/zoxide/\",\n        \"644\",\n    ],\n    [\n        \"CHANGELOG.md\",\n        \"usr/share/doc/zoxide/\",\n        \"644\",\n    ],\n    [\n        \"LICENSE\",\n        \"usr/share/doc/zoxide/\",\n        \"644\",\n    ],\n]\nextended-description = \"\"\"\\\nzoxide is a smarter cd command, inspired by z and autojump. It remembers which \\\ndirectories you use most frequently, so you can \"jump\" to them in just a few \\\nkeystrokes.\"\"\"\npriority = \"optional\"\nsection = \"utils\"\n"
        },
        {
          "name": "Cross.toml",
          "type": "blob",
          "size": 0.046875,
          "content": "[build.env]\npassthrough = [\"CARGO_INCREMENTAL\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0283203125,
          "content": "Copyright 2020 Ajeet D'Souza\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.314453125,
          "content": "<!-- markdownlint-configure-file {\n  \"MD013\": {\n    \"code_blocks\": false,\n    \"tables\": false\n  },\n  \"MD033\": false,\n  \"MD041\": false\n} -->\n\n<div align=\"center\">\n\n<sup>Special thanks to:</sup>\n\n<div><img src=\"contrib/warp.png\" width=\"230\" alt=\"Warp\" /></div>\n<div><sup><b>Warp, the intelligent terminal</b></sup></div>\n<div><sup>Available for MacOS and Linux</sup></div>\n<div><sup>\n  Visit\n  <a href=\"https://www.warp.dev/?utm_source=github&utm_medium=referral&utm_campaign=zoxide_20231001\"><u>warp.dev</u></a>\n  to learn more.\n</sup></div>\n\n<hr />\n\n# zoxide\n\n[![crates.io][crates.io-badge]][crates.io]\n[![Downloads][downloads-badge]][releases]\n[![Built with Nix][builtwithnix-badge]][builtwithnix]\n\nzoxide is a **smarter cd command**, inspired by z and autojump.\n\nIt remembers which directories you use most frequently, so you can \"jump\" to\nthem in just a few keystrokes.<br />\nzoxide works on all major shells.\n\n[Getting started](#getting-started) •\n[Installation](#installation) •\n[Configuration](#configuration) •\n[Integrations](#third-party-integrations)\n\n</div>\n\n## Getting started\n\n![Tutorial][tutorial]\n\n```sh\nz foo              # cd into highest ranked directory matching foo\nz foo bar          # cd into highest ranked directory matching foo and bar\nz foo /            # cd into a subdirectory starting with foo\n\nz ~/foo            # z also works like a regular cd command\nz foo/             # cd into relative path\nz ..               # cd one level up\nz -                # cd into previous directory\n\nzi foo             # cd with interactive selection (using fzf)\n\nz foo<SPACE><TAB>  # show interactive completions (zoxide v0.8.0+, bash 4.4+/fish/zsh only)\n```\n\nRead more about the matching algorithm [here][algorithm-matching].\n\n## Installation\n\nzoxide can be installed in 4 easy steps:\n\n1. **Install binary**\n\n   zoxide runs on most major platforms. If your platform isn't listed below,\n   please [open an issue][issues].\n\n   <details>\n   <summary>Linux / WSL</summary>\n\n   > The recommended way to install zoxide is via the install script:\n   >\n   > ```sh\n   > curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh\n   > ```\n   >\n   > Or, you can use a package manager:\n   >\n   > | Distribution        | Repository              | Instructions                                                                                          |\n   > | ------------------- | ----------------------- | ----------------------------------------------------------------------------------------------------- |\n   > | **_Any_**           | **[crates.io]**         | `cargo install zoxide --locked`                                                                       |\n   > | _Any_               | [asdf]                  | `asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git` <br /> `asdf install zoxide latest` |\n   > | _Any_               | [conda-forge]           | `conda install -c conda-forge zoxide`                                                                 |\n   > | _Any_               | [guix]                  | `guix install zoxide`                                                                                 |\n   > | _Any_               | [Linuxbrew]             | `brew install zoxide`                                                                                 |\n   > | _Any_               | [nixpkgs]               | `nix-env -iA nixpkgs.zoxide`                                                                          |\n   > | AlmaLinux           |                         | `dnf install zoxide`                                                                                      |\n   > | Alpine Linux 3.13+  | [Alpine Linux Packages] | `apk add zoxide`                                                                                      |\n   > | Arch Linux          | [Arch Linux Extra]      | `pacman -S zoxide`                                                                                    |\n   > | CentOS Stream       |                         | `dnf install zoxide`                                                                                  |\n   > | ~Debian 11+~[^1]    | ~[Debian Packages]~     | ~`apt install zoxide`~                                                                                |\n   > | Devuan 4.0+         | [Devuan Packages]       | `apt install zoxide`                                                                                  |\n   > | Exherbo Linux       | [Exherbo packages]      | `cave resolve -x repository/rust` <br /> `cave resolve -x zoxide`                                     |\n   > | Fedora 32+          | [Fedora Packages]       | `dnf install zoxide`                                                                                  |\n   > | Gentoo              | [Gentoo Packages]       | `emerge app-shells/zoxide`                                                                            |\n   > | Manjaro             |                         | `pacman -S zoxide`                                                                                    |\n   > | openSUSE Tumbleweed | [openSUSE Factory]      | `zypper install zoxide`                                                                               |\n   > | ~Parrot OS~[^1]     |                         | ~`apt install zoxide`~                                                                                |\n   > | ~Raspbian 11+~[^1]  | ~[Raspbian Packages]~   | ~`apt install zoxide`~                                                                                |\n   > | RHEL 8+             |                         | `dnf install zoxide`                                                                                  |\n   > | Rhino Linux         | [Pacstall Packages]     | `pacstall -I zoxide-deb`                                                                              |\n   > | Rocky Linux         |                         | `dnf install zoxide`                                                                                  |\n   > | Slackware 15.0+     | [SlackBuilds]           | [Instructions][slackbuilds-howto]                                                                     |\n   > | Solus               | [Solus Packages]        | `eopkg install zoxide`                                                                                |\n   > | ~Ubuntu 21.04+~[^1] | ~[Ubuntu Packages]~     | ~`apt install zoxide`~                                                                                |\n   > | Void Linux          | [Void Linux Packages]   | `xbps-install -S zoxide`                                                                              |\n\n   </details>\n\n   <details>\n   <summary>macOS</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Repository      | Instructions                                                                                          |\n   > | --------------- | ----------------------------------------------------------------------------------------------------- |\n   > | **[crates.io]** | `cargo install zoxide --locked`                                                                       |\n   > | **[Homebrew]**  | `brew install zoxide`                                                                                 |\n   > | [asdf]          | `asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git` <br /> `asdf install zoxide latest` |\n   > | [conda-forge]   | `conda install -c conda-forge zoxide`                                                                 |\n   > | [MacPorts]      | `port install zoxide`                                                                                 |\n   > | [nixpkgs]       | `nix-env -iA nixpkgs.zoxide`                                                                          |\n   >\n   > Or, run this command in your terminal:\n   >\n   > ```sh\n   > curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Windows</summary>\n\n   > zoxide works with PowerShell, as well as shells running in Cygwin, Git\n   > Bash, and MSYS2.\n   >\n   > The recommended way to install zoxide is via `winget`:\n   >\n   > ```sh\n   > winget install ajeetdsouza.zoxide\n   > ```\n   >\n   > Or, you can use an alternative package manager:\n   >\n   > | Repository      | Instructions                          |\n   > | --------------- | ------------------------------------- |\n   > | **[crates.io]** | `cargo install zoxide --locked`       |\n   > | [Chocolatey]    | `choco install zoxide`                |\n   > | [conda-forge]   | `conda install -c conda-forge zoxide` |\n   > | [Scoop]         | `scoop install zoxide`                |\n   >\n   > If you're using Cygwin, Git Bash, or MSYS2, you can also use the install script:\n   >\n   > ```sh\n   > curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh\n   > ```\n\n   </details>\n\n   <details>\n   <summary>BSD</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Distribution  | Repository      | Instructions                    |\n   > | ------------- | --------------- | ------------------------------- |\n   > | **_Any_**     | **[crates.io]** | `cargo install zoxide --locked` |\n   > | DragonFly BSD | [DPorts]        | `pkg install zoxide`            |\n   > | FreeBSD       | [FreshPorts]    | `pkg install zoxide`            |\n   > | NetBSD        | [pkgsrc]        | `pkgin install zoxide`          |\n   >\n   > Or, run this command in your terminal:\n   >\n   > ```sh\n   > curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Android</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Repository | Instructions         |\n   > | ---------- | -------------------- |\n   > | [Termux]   | `pkg install zoxide` |\n   >\n   > Or, run this command in your terminal:\n   >\n   > ```sh\n   > curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash\n   > ```\n\n   </details>\n\n2. **Setup zoxide on your shell**\n\n   To start using zoxide, add it to your shell.\n\n   <details>\n   <summary>Bash</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (usually `~/.bashrc`):\n   >\n   > ```sh\n   > eval \"$(zoxide init bash)\"\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Elvish</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (usually `~/.elvish/rc.elv`):\n   >\n   > ```sh\n   > eval (zoxide init elvish | slurp)\n   > ```\n   >\n   > **Note**\n   > zoxide only supports elvish v0.18.0 and above.\n\n   </details>\n\n   <details>\n   <summary>Fish</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (usually\n   > `~/.config/fish/config.fish`):\n   >\n   > ```sh\n   > zoxide init fish | source\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Nushell</summary>\n\n   > Add this to the <ins>**end**</ins> of your env file (find it by running `$nu.env-path`\n   > in Nushell):\n   >\n   > ```sh\n   > zoxide init nushell | save -f ~/.zoxide.nu\n   > ```\n   >\n   > Now, add this to the <ins>**end**</ins> of your config file (find it by running\n   > `$nu.config-path` in Nushell):\n   >\n   > ```sh\n   > source ~/.zoxide.nu\n   > ```\n   >\n   > **Note**\n   > zoxide only supports Nushell v0.89.0+.\n\n   </details>\n\n   <details>\n   <summary>PowerShell</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (find it by running\n   > `echo $profile` in PowerShell):\n   >\n   > ```powershell\n   > Invoke-Expression (& { (zoxide init powershell | Out-String) })\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Xonsh</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (usually `~/.xonshrc`):\n   >\n   > ```python\n   > execx($(zoxide init xonsh), 'exec', __xonsh__.ctx, filename='zoxide')\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Zsh</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file (usually `~/.zshrc`):\n   >\n   > ```sh\n   > eval \"$(zoxide init zsh)\"\n   > ```\n   >\n   > For completions to work, the above line must be added _after_ `compinit` is\n   > called. You may have to rebuild your completions cache by running\n   > `rm ~/.zcompdump*; compinit`.\n\n   </details>\n\n   <details>\n   <summary>Any POSIX shell</summary>\n\n   > Add this to the <ins>**end**</ins> of your config file:\n   >\n   > ```sh\n   > eval \"$(zoxide init posix --hook prompt)\"\n   > ```\n\n   </details>\n\n3. **Install fzf** <sup>(optional)</sup>\n\n   [fzf] is a command-line fuzzy finder, used by zoxide for completions /\n   interactive selection. It can be installed from [here][fzf-installation].\n\n   > **Note**\n   > zoxide only supports fzf v0.33.0 and above.\n\n4. **Import your data** <sup>(optional)</sup>\n\n   If you currently use any of these plugins, you may want to import your data\n   into zoxide:\n\n   <details>\n   <summary>autojump</summary>\n\n   > Run this command in your terminal:\n   >\n   > ```sh\n   > zoxide import --from=autojump \"/path/to/autojump/db\"\n   > ```\n   >\n   > The path usually varies according to your system:\n   >\n   > | OS      | Path                                                                                 | Example                                                |\n   > | ------- | ------------------------------------------------------------------------------------ | ------------------------------------------------------ |\n   > | Linux   | `$XDG_DATA_HOME/autojump/autojump.txt` or `$HOME/.local/share/autojump/autojump.txt` | `/home/alice/.local/share/autojump/autojump.txt`       |\n   > | macOS   | `$HOME/Library/autojump/autojump.txt`                                                | `/Users/Alice/Library/autojump/autojump.txt`           |\n   > | Windows | `%APPDATA%\\autojump\\autojump.txt`                                                    | `C:\\Users\\Alice\\AppData\\Roaming\\autojump\\autojump.txt` |\n\n   </details>\n\n   <details>\n   <summary>fasd, z, z.lua, zsh-z</summary>\n\n   > Run this command in your terminal:\n   >\n   > ```sh\n   > zoxide import --from=z \"path/to/z/db\"\n   > ```\n   >\n   > The path usually varies according to your system:\n   >\n   > | Plugin           | Path                                                                                |\n   > | ---------------- | ----------------------------------------------------------------------------------- |\n   > | fasd             | `$_FASD_DATA` or `$HOME/.fasd`                                                      |\n   > | z (bash/zsh)     | `$_Z_DATA` or `$HOME/.z`                                                            |\n   > | z (fish)         | `$Z_DATA` or `$XDG_DATA_HOME/z/data` or `$HOME/.local/share/z/data`                 |\n   > | z.lua (bash/zsh) | `$_ZL_DATA` or `$HOME/.zlua`                                                        |\n   > | z.lua (fish)     | `$XDG_DATA_HOME/zlua/zlua.txt` or `$HOME/.local/share/zlua/zlua.txt` or `$_ZL_DATA` |\n   > | zsh-z            | `$ZSHZ_DATA` or `$_Z_DATA` or `$HOME/.z`                                            |\n\n   </details>\n\n   <details>\n   <summary>ZLocation</summary>\n\n   > Run this command in PowerShell:\n   >\n   > ```powershell\n   > $db = New-TemporaryFile\n   > (Get-ZLocation).GetEnumerator() | ForEach-Object { Write-Output ($_.Name+'|'+$_.Value+'|0') } | Out-File $db\n   > zoxide import --from=z $db\n   > ```\n\n   </details>\n\n## Configuration\n\n### Flags\n\nWhen calling `zoxide init`, the following flags are available:\n\n- `--cmd`\n  - Changes the prefix of the `z` and `zi` commands.\n  - `--cmd j` would change the commands to (`j`, `ji`).\n  - `--cmd cd` would replace the `cd` command.\n- `--hook <HOOK>`\n  - Changes how often zoxide increments a directory's score:\n    | Hook            | Description                       |\n    | --------------- | --------------------------------- |\n    | `none`          | Never                             |\n    | `prompt`        | At every shell prompt             |\n    | `pwd` (default) | Whenever the directory is changed |\n- `--no-cmd`\n  - Prevents zoxide from defining the `z` and `zi` commands.\n  - These functions will still be available in your shell as `__zoxide_z` and\n    `__zoxide_zi`, should you choose to redefine them.\n\n### Environment variables\n\nEnvironment variables[^2] can be used for configuration. They must be set before\n`zoxide init` is called.\n\n- `_ZO_DATA_DIR`\n  - Specifies the directory in which the database is stored.\n  - The default value varies across OSes:\n    | OS          | Path                                     | Example                                    |\n    | ----------- | ---------------------------------------- | ------------------------------------------ |\n    | Linux / BSD | `$XDG_DATA_HOME` or `$HOME/.local/share` | `/home/alice/.local/share`                 |\n    | macOS       | `$HOME/Library/Application Support`      | `/Users/Alice/Library/Application Support` |\n    | Windows     | `%LOCALAPPDATA%`                         | `C:\\Users\\Alice\\AppData\\Local`             |\n- `_ZO_ECHO`\n  - When set to 1, `z` will print the matched directory before navigating to\n    it.\n- `_ZO_EXCLUDE_DIRS`\n  - Excludes the specified directories from the database.\n  - This is provided as a list of [globs][glob], separated by OS-specific\n    characters:\n    | OS                  | Separator | Example                 |\n    | ------------------- | --------- | ----------------------- |\n    | Linux / macOS / BSD | `:`       | `$HOME:$HOME/private/*` |\n    | Windows             | `;`       | `$HOME;$HOME/private/*` |\n  - By default, this is set to `\"$HOME\"`.\n- `_ZO_FZF_OPTS`\n  - Custom options to pass to [fzf] during interactive selection. See\n    [`man fzf`][fzf-man] for the list of options.\n- `_ZO_MAXAGE`\n  - Configures the [aging algorithm][algorithm-aging], which limits the maximum\n    number of entries in the database.\n  - By default, this is set to 10000.\n- `_ZO_RESOLVE_SYMLINKS`\n  - When set to 1, `z` will resolve symlinks before adding directories to the\n    database.\n\n## Third-party integrations\n\n| Application           | Description                                  | Plugin                     |\n| --------------------- | -------------------------------------------- | -------------------------- |\n| [aerc]                | Email client                                 | Natively supported         |\n| [alfred]              | macOS launcher                               | [alfred-zoxide]            |\n| [clink]               | Improved cmd.exe for Windows                 | [clink-zoxide]             |\n| [emacs]               | Text editor                                  | [zoxide.el]                |\n| [felix]               | File manager                                 | Natively supported         |\n| [joshuto]             | File manager                                 | Natively supported         |\n| [lf]                  | File manager                                 | See the [wiki][lf-wiki]    |\n| [nnn]                 | File manager                                 | [nnn-autojump]             |\n| [ranger]              | File manager                                 | [ranger-zoxide]            |\n| [telescope.nvim]      | Fuzzy finder for Neovim                      | [telescope-zoxide]         |\n| [t]                   | `tmux` session manager                       | Natively supported         |\n| [tmux-session-wizard] | `tmux` session manager                       | Natively supported         |\n| [vim] / [neovim]      | Text editor                                  | [zoxide.vim]               |\n| [xplr]                | File manager                                 | [zoxide.xplr]              |\n| [xxh]                 | Transports shell configuration over SSH      | [xxh-plugin-prerun-zoxide] |\n| [yazi]                | File manager                                 | Natively supported         |\n| [zabb]                | Finds the shortest possible query for a path | Natively supported         |\n| [zsh-autocomplete]    | Realtime completions for zsh                 | Natively supported         |\n\n[^1]:\n    Debian / Ubuntu derivatives update their packages very slowly. If you're\n    using one of these distributions, consider using the install script instead.\n\n[^2]:\n    If you're not sure how to set an environment variable on your shell, check\n    out the [wiki][wiki-env].\n\n[aerc]: https://github.com/rjarry/aerc\n[alfred]: https://www.alfredapp.com/\n[alfred-zoxide]: https://github.com/yihou/alfred-zoxide\n[algorithm-aging]: https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#aging\n[algorithm-matching]: https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#matching\n[alpine linux packages]: https://pkgs.alpinelinux.org/packages?name=zoxide\n[arch linux extra]: https://archlinux.org/packages/extra/x86_64/zoxide/\n[asdf]: https://github.com/asdf-vm/asdf\n[builtwithnix-badge]: https://img.shields.io/badge/builtwith-nix-7d81f7?logo=nixos&logoColor=white&style=flat-square\n[builtwithnix]: https://builtwithnix.org/\n[chocolatey]: https://community.chocolatey.org/packages/zoxide\n[clink-zoxide]: https://github.com/shunsambongi/clink-zoxide\n[clink]: https://github.com/mridgers/clink\n[conda-forge]: https://anaconda.org/conda-forge/zoxide\n[crates.io-badge]: https://img.shields.io/crates/v/zoxide?logo=rust&logoColor=white&style=flat-square\n[crates.io]: https://crates.io/crates/zoxide\n[debian packages]: https://packages.debian.org/stable/admin/zoxide\n[exherbo packages]: https://gitlab.exherbo.org/exherbo/rust/-/tree/master/packages/sys-apps/zoxide\n[devuan packages]: https://pkginfo.devuan.org/cgi-bin/package-query.html?c=package&q=zoxide\n[downloads-badge]: https://img.shields.io/github/downloads/ajeetdsouza/zoxide/total?logo=github&logoColor=white&style=flat-square\n[dports]: https://github.com/DragonFlyBSD/DPorts/tree/master/sysutils/zoxide\n[emacs]: https://www.gnu.org/software/emacs/\n[fedora packages]: https://src.fedoraproject.org/rpms/rust-zoxide\n[felix]: https://github.com/kyoheiu/felix\n[freshports]: https://www.freshports.org/sysutils/zoxide/\n[fzf-installation]: https://github.com/junegunn/fzf#installation\n[fzf-man]: https://manpages.ubuntu.com/manpages/en/man1/fzf.1.html\n[fzf]: https://github.com/junegunn/fzf\n[gentoo packages]: https://packages.gentoo.org/packages/app-shells/zoxide\n[glob]: https://man7.org/linux/man-pages/man7/glob.7.html\n[guix]: https://packages.guix.gnu.org/packages/zoxide/\n[homebrew]: https://formulae.brew.sh/formula/zoxide\n[issues]: https://github.com/ajeetdsouza/zoxide/issues/new\n[joshuto]: https://github.com/kamiyaa/joshuto\n[lf]: https://github.com/gokcehan/lf\n[lf-wiki]: https://github.com/gokcehan/lf/wiki/Integrations#zoxide\n[linuxbrew]: https://formulae.brew.sh/formula-linux/zoxide\n[macports]: https://ports.macports.org/port/zoxide/summary\n[neovim]: https://github.com/neovim/neovim\n[nixpkgs]: https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/misc/zoxide/default.nix\n[nnn-autojump]: https://github.com/jarun/nnn/blob/master/plugins/autojump\n[nnn]: https://github.com/jarun/nnn\n[opensuse factory]: https://build.opensuse.org/package/show/openSUSE:Factory/zoxide\n[pacstall packages]: https://pacstall.dev/packages/zoxide-deb\n[pkgsrc]: https://pkgsrc.se/sysutils/zoxide\n[ranger-zoxide]: https://github.com/jchook/ranger-zoxide\n[ranger]: https://github.com/ranger/ranger\n[raspbian packages]: https://archive.raspbian.org/raspbian/pool/main/r/rust-zoxide/\n[releases]: https://github.com/ajeetdsouza/zoxide/releases\n[scoop]: https://github.com/ScoopInstaller/Main/tree/master/bucket/zoxide.json\n[slackbuilds]: https://slackbuilds.org/repository/15.0/system/zoxide/\n[slackbuilds-howto]: https://slackbuilds.org/howto/\n[solus packages]: https://github.com/getsolus/packages/tree/main/packages/z/zoxide/\n[t]: https://github.com/joshmedeski/t-smart-tmux-session-manager\n[telescope-zoxide]: https://github.com/jvgrootveld/telescope-zoxide\n[telescope.nvim]: https://github.com/nvim-telescope/telescope.nvim\n[termux]: https://github.com/termux/termux-packages/tree/master/packages/zoxide\n[tmux-session-wizard]: https://github.com/27medkamal/tmux-session-wizard\n[tutorial]: contrib/tutorial.webp\n[ubuntu packages]: https://packages.ubuntu.com/jammy/zoxide\n[vim]: https://github.com/vim/vim\n[void linux packages]: https://github.com/void-linux/void-packages/tree/master/srcpkgs/zoxide\n[wiki-env]: https://github.com/ajeetdsouza/zoxide/wiki/HOWTO:-set-environment-variables \"HOWTO: set environment variables\"\n[xplr]: https://github.com/sayanarijit/xplr\n[xxh-plugin-prerun-zoxide]: https://github.com/xxh/xxh-plugin-prerun-zoxide\n[xxh]: https://github.com/xxh/xxh\n[yazi]: https://github.com/sxyazi/yazi\n[zabb]: https://github.com/Mellbourn/zabb\n[zoxide.el]: https://gitlab.com/Vonfry/zoxide.el\n[zoxide.vim]: https://github.com/nanotee/zoxide.vim\n[zoxide.xplr]: https://github.com/sayanarijit/zoxide.xplr\n[zsh-autocomplete]: https://github.com/marlonrichert/zsh-autocomplete\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 1.1357421875,
          "content": "#[path = \"src/cmd/cmd.rs\"]\nmod cmd;\n\nuse std::{env, io};\n\nuse clap::CommandFactory;\nuse clap_complete::shells::{Bash, Elvish, Fish, PowerShell, Zsh};\nuse clap_complete_fig::Fig;\nuse cmd::Cmd;\n\nfn main() -> io::Result<()> {\n    // Since we are generating completions in the package directory, we need to\n    // set this so that Cargo doesn't rebuild every time.\n    println!(\"cargo:rerun-if-changed=build.rs\");\n    println!(\"cargo:rerun-if-changed=src/\");\n    println!(\"cargo:rerun-if-changed=templates/\");\n    println!(\"cargo:rerun-if-changed=tests/\");\n    generate_completions()\n}\n\nfn generate_completions() -> io::Result<()> {\n    const BIN_NAME: &str = env!(\"CARGO_PKG_NAME\");\n    const OUT_DIR: &str = \"contrib/completions\";\n    let cmd = &mut Cmd::command();\n\n    clap_complete::generate_to(Bash, cmd, BIN_NAME, OUT_DIR)?;\n    clap_complete::generate_to(Elvish, cmd, BIN_NAME, OUT_DIR)?;\n    clap_complete::generate_to(Fig, cmd, BIN_NAME, OUT_DIR)?;\n    clap_complete::generate_to(Fish, cmd, BIN_NAME, OUT_DIR)?;\n    clap_complete::generate_to(PowerShell, cmd, BIN_NAME, OUT_DIR)?;\n    clap_complete::generate_to(Zsh, cmd, BIN_NAME, OUT_DIR)?;\n\n    Ok(())\n}\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.fish",
          "type": "blob",
          "size": 0.15625,
          "content": "if command -sq zoxide\n    zoxide init fish | source\nelse\n    echo 'zoxide: command not found, please install it from https://github.com/ajeetdsouza/zoxide'\nend\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 13.35546875,
          "content": "#!/bin/sh\n# shellcheck shell=dash\n# shellcheck disable=SC3043 # Assume `local` extension\n\n# The official zoxide installer.\n#\n# It runs on Unix shells like {a,ba,da,k,z}sh. It uses the common `local`\n# extension. Note: Most shells limit `local` to 1 var per line, contra bash.\n\nmain() {\n    # The version of ksh93 that ships with many illumos systems does not support the \"local\"\n    # extension. Print a message rather than fail in subtle ways later on:\n    if [ \"${KSH_VERSION-}\" = 'Version JM 93t+ 2010-03-05' ]; then\n        err 'the installer does not work with this ksh93 version; please try bash'\n    fi\n\n    set -u\n\n    parse_args \"$@\"\n\n    local _arch\n    _arch=\"${ARCH:-$(ensure get_architecture)}\"\n    assert_nz \"${_arch}\" \"arch\"\n    echo \"Detected architecture: ${_arch}\"\n\n    local _bin_name\n    case \"${_arch}\" in\n    *windows*) _bin_name=\"zoxide.exe\" ;;\n    *) _bin_name=\"zoxide\" ;;\n    esac\n\n    # Create and enter a temporary directory.\n    local _tmp_dir\n    _tmp_dir=\"$(mktemp -d)\" || err \"mktemp: could not create temporary directory\"\n    cd \"${_tmp_dir}\" || err \"cd: failed to enter directory: ${_tmp_dir}\"\n\n    # Download and extract zoxide.\n    local _package\n    _package=\"$(ensure download_zoxide \"${_arch}\")\"\n    assert_nz \"${_package}\" \"package\"\n    echo \"Downloaded package: ${_package}\"\n    case \"${_package}\" in\n    *.tar.gz)\n        need_cmd tar\n        ensure tar -xf \"${_package}\"\n        ;;\n    *.zip)\n        need_cmd unzip\n        ensure unzip -oq \"${_package}\"\n        ;;\n    *)\n        err \"unsupported package format: ${_package}\"\n        ;;\n    esac\n\n    # Install binary.\n    ensure try_sudo mkdir -p -- \"${BIN_DIR}\"\n    ensure try_sudo cp -- \"${_bin_name}\" \"${BIN_DIR}/${_bin_name}\"\n    ensure try_sudo chmod +x \"${BIN_DIR}/${_bin_name}\"\n    echo \"Installed zoxide to ${BIN_DIR}\"\n\n    # Install manpages.\n    ensure try_sudo mkdir -p -- \"${MAN_DIR}/man1\"\n    ensure try_sudo cp -- \"man/man1/\"* \"${MAN_DIR}/man1/\"\n    echo \"Installed manpages to ${MAN_DIR}\"\n\n    # Print success message and check $PATH.\n    echo \"\"\n    echo \"zoxide is installed!\"\n    if ! echo \":${PATH}:\" | grep -Fq \":${BIN_DIR}:\"; then\n        echo \"Note: ${BIN_DIR} is not on your \\$PATH. zoxide will not work unless it is added to \\$PATH.\"\n    fi\n}\n\n# Parse the arguments passed and set variables accordingly.\nparse_args() {\n    BIN_DIR_DEFAULT=\"${HOME}/.local/bin\"\n    MAN_DIR_DEFAULT=\"${HOME}/.local/share/man\"\n    SUDO_DEFAULT=\"sudo\"\n\n    BIN_DIR=\"${BIN_DIR_DEFAULT}\"\n    MAN_DIR=\"${MAN_DIR_DEFAULT}\"\n    SUDO=\"${SUDO_DEFAULT}\"\n\n    while [ \"$#\" -gt 0 ]; do\n        case \"$1\" in\n        --arch) ARCH=\"$2\" && shift 2 ;;\n        --arch=*) ARCH=\"${1#*=}\" && shift 1 ;;\n        --bin-dir) BIN_DIR=\"$2\" && shift 2 ;;\n        --bin-dir=*) BIN_DIR=\"${1#*=}\" && shift 1 ;;\n        --man-dir) MAN_DIR=\"$2\" && shift 2 ;;\n        --man-dir=*) MAN_DIR=\"${1#*=}\" && shift 1 ;;\n        --sudo) SUDO=\"$2\" && shift 2 ;;\n        --sudo=*) SUDO=\"${1#*=}\" && shift 1 ;;\n        -h | --help) usage && exit 0 ;;\n        *) err \"Unknown option: $1\" ;;\n        esac\n    done\n}\n\nusage() {\n    # heredocs are not defined in POSIX.\n    local _text_heading _text_reset\n    _text_heading=\"$(tput bold || true 2>/dev/null)$(tput smul || true 2>/dev/null)\"\n    _text_reset=\"$(tput sgr0 || true 2>/dev/null)\"\n\n    local _arch\n    _arch=\"$(get_architecture || true)\"\n\n    echo \"\\\n${_text_heading}zoxide installer${_text_reset}\nAjeet D'Souza <98ajeet@gmail.com>\nhttps://github.com/ajeetdsouza/zoxide\n\nFetches and installs zoxide. If zoxide is already installed, it will be updated to the latest version.\n\n${_text_heading}Usage:${_text_reset}\n  install.sh [OPTIONS]\n\n${_text_heading}Options:${_text_reset}\n      --arch     Override the architecture identified by the installer [current: ${_arch}]\n      --bin-dir  Override the installation directory [default: ${BIN_DIR_DEFAULT}]\n      --man-dir  Override the manpage installation directory [default: ${MAN_DIR_DEFAULT}]\n      --sudo     Override the command used to elevate to root privileges [default: ${SUDO_DEFAULT}]\n  -h, --help     Print help\"\n}\n\ndownload_zoxide() {\n    local _arch=\"$1\"\n\n    if check_cmd curl; then\n        _dld=curl\n    elif check_cmd wget; then\n        _dld=wget\n    else\n        need_cmd 'curl or wget'\n    fi\n    need_cmd grep\n\n    local _releases_url=\"https://api.github.com/repos/ajeetdsouza/zoxide/releases/latest\"\n    local _releases\n    case \"${_dld}\" in\n    curl) _releases=\"$(curl -sL \"${_releases_url}\")\" ||\n        err \"curl: failed to download ${_releases_url}\" ;;\n    wget) _releases=\"$(wget -qO- \"${_releases_url}\")\" ||\n        err \"wget: failed to download ${_releases_url}\" ;;\n    *) err \"unsupported downloader: ${_dld}\" ;;\n    esac\n    (echo \"${_releases}\" | grep -q 'API rate limit exceeded') &&\n        err \"you have exceeded GitHub's API rate limit. Please try again later, or use a different installation method: https://github.com/ajeetdsouza/zoxide/#installation\"\n\n    local _package_url\n    _package_url=\"$(echo \"${_releases}\" | grep \"browser_download_url\" | cut -d '\"' -f 4 | grep -- \"${_arch}\")\" ||\n        err \"zoxide has not yet been packaged for your architecture (${_arch}), please file an issue: https://github.com/ajeetdsouza/zoxide/issues\"\n\n    local _ext\n    case \"${_package_url}\" in\n    *.tar.gz) _ext=\"tar.gz\" ;;\n    *.zip) _ext=\"zip\" ;;\n    *) err \"unsupported package format: ${_package_url}\" ;;\n    esac\n\n    local _package=\"zoxide.${_ext}\"\n    case \"${_dld}\" in\n    curl) _releases=\"$(curl -sLo \"${_package}\" \"${_package_url}\")\" || err \"curl: failed to download ${_package_url}\" ;;\n    wget) _releases=\"$(wget -qO \"${_package}\" \"${_package_url}\")\" || err \"wget: failed to download ${_package_url}\" ;;\n    *) err \"unsupported downloader: ${_dld}\" ;;\n    esac\n\n    echo \"${_package}\"\n}\n\ntry_sudo() {\n    if \"$@\" >/dev/null 2>&1; then\n        return 0\n    fi\n\n    need_sudo\n    \"${SUDO}\" \"$@\"\n}\n\nneed_sudo() {\n    if ! check_cmd \"${SUDO}\"; then\n        err \"\\\ncould not find the command \\`${SUDO}\\` needed to get permissions for install.\n\nIf you are on Windows, please run your shell as an administrator, then rerun this script.\nOtherwise, please run this script as root, or install \\`sudo\\`.\"\n    fi\n\n    if ! \"${SUDO}\" -v; then\n        err \"sudo permissions not granted, aborting installation\"\n    fi\n}\n\n# The below functions have been extracted with minor modifications from the\n# Rustup install script:\n#\n#   https://github.com/rust-lang/rustup/blob/4c1289b2c3f3702783900934a38d7c5f912af787/rustup-init.sh\n\nget_architecture() {\n    local _ostype _cputype _bitness _arch _clibtype\n    _ostype=\"$(uname -s)\"\n    _cputype=\"$(uname -m)\"\n    _clibtype=\"musl\"\n\n    if [ \"${_ostype}\" = Linux ]; then\n        if [ \"$(uname -o || true)\" = Android ]; then\n            _ostype=Android\n        fi\n    fi\n\n    if [ \"${_ostype}\" = Darwin ] && [ \"${_cputype}\" = i386 ]; then\n        # Darwin `uname -m` lies\n        if sysctl hw.optional.x86_64 | grep -q ': 1'; then\n            _cputype=x86_64\n        fi\n    fi\n\n    if [ \"${_ostype}\" = SunOS ]; then\n        # Both Solaris and illumos presently announce as \"SunOS\" in \"uname -s\"\n        # so use \"uname -o\" to disambiguate.  We use the full path to the\n        # system uname in case the user has coreutils uname first in PATH,\n        # which has historically sometimes printed the wrong value here.\n        if [ \"$(/usr/bin/uname -o || true)\" = illumos ]; then\n            _ostype=illumos\n        fi\n\n        # illumos systems have multi-arch userlands, and \"uname -m\" reports the\n        # machine hardware name; e.g., \"i86pc\" on both 32- and 64-bit x86\n        # systems.  Check for the native (widest) instruction set on the\n        # running kernel:\n        if [ \"${_cputype}\" = i86pc ]; then\n            _cputype=\"$(isainfo -n)\"\n        fi\n    fi\n\n    case \"${_ostype}\" in\n    Android)\n        _ostype=linux-android\n        ;;\n    Linux)\n        check_proc\n        _ostype=unknown-linux-${_clibtype}\n        _bitness=$(get_bitness)\n        ;;\n    FreeBSD)\n        _ostype=unknown-freebsd\n        ;;\n    NetBSD)\n        _ostype=unknown-netbsd\n        ;;\n    DragonFly)\n        _ostype=unknown-dragonfly\n        ;;\n    Darwin)\n        _ostype=apple-darwin\n        ;;\n    illumos)\n        _ostype=unknown-illumos\n        ;;\n    MINGW* | MSYS* | CYGWIN* | Windows_NT)\n        _ostype=pc-windows-msvc\n        ;;\n    *)\n        err \"unrecognized OS type: ${_ostype}\"\n        ;;\n    esac\n\n    case \"${_cputype}\" in\n    i386 | i486 | i686 | i786 | x86)\n        _cputype=i686\n        ;;\n    xscale | arm)\n        _cputype=arm\n        if [ \"${_ostype}\" = \"linux-android\" ]; then\n            _ostype=linux-androideabi\n        fi\n        ;;\n    armv6l)\n        _cputype=arm\n        if [ \"${_ostype}\" = \"linux-android\" ]; then\n            _ostype=linux-androideabi\n        else\n            _ostype=\"${_ostype}eabihf\"\n        fi\n        ;;\n    armv7l | armv8l)\n        _cputype=armv7\n        if [ \"${_ostype}\" = \"linux-android\" ]; then\n            _ostype=linux-androideabi\n        else\n            _ostype=\"${_ostype}eabihf\"\n        fi\n        ;;\n    aarch64 | arm64)\n        _cputype=aarch64\n        ;;\n    x86_64 | x86-64 | x64 | amd64)\n        _cputype=x86_64\n        ;;\n    mips)\n        _cputype=$(get_endianness mips '' el)\n        ;;\n    mips64)\n        if [ \"${_bitness}\" -eq 64 ]; then\n            # only n64 ABI is supported for now\n            _ostype=\"${_ostype}abi64\"\n            _cputype=$(get_endianness mips64 '' el)\n        fi\n        ;;\n    ppc)\n        _cputype=powerpc\n        ;;\n    ppc64)\n        _cputype=powerpc64\n        ;;\n    ppc64le)\n        _cputype=powerpc64le\n        ;;\n    s390x)\n        _cputype=s390x\n        ;;\n    riscv64)\n        _cputype=riscv64gc\n        ;;\n    *)\n        err \"unknown CPU type: ${_cputype}\"\n        ;;\n    esac\n\n    # Detect 64-bit linux with 32-bit userland\n    if [ \"${_ostype}\" = unknown-linux-musl ] && [ \"${_bitness}\" -eq 32 ]; then\n        case ${_cputype} in\n        x86_64)\n            # 32-bit executable for amd64 = x32\n            if is_host_amd64_elf; then {\n                err \"x32 userland is unsupported\"\n            }; else\n                _cputype=i686\n            fi\n            ;;\n        mips64)\n            _cputype=$(get_endianness mips '' el)\n            ;;\n        powerpc64)\n            _cputype=powerpc\n            ;;\n        aarch64)\n            _cputype=armv7\n            if [ \"${_ostype}\" = \"linux-android\" ]; then\n                _ostype=linux-androideabi\n            else\n                _ostype=\"${_ostype}eabihf\"\n            fi\n            ;;\n        riscv64gc)\n            err \"riscv64 with 32-bit userland unsupported\"\n            ;;\n        *) ;;\n        esac\n    fi\n\n    # Detect armv7 but without the CPU features Rust needs in that build,\n    # and fall back to arm.\n    # See https://github.com/rust-lang/rustup.rs/issues/587.\n    if [ \"${_ostype}\" = \"unknown-linux-musleabihf\" ] && [ \"${_cputype}\" = armv7 ]; then\n        if ensure grep '^Features' /proc/cpuinfo | grep -q -v neon; then\n            # At least one processor does not have NEON.\n            _cputype=arm\n        fi\n    fi\n\n    _arch=\"${_cputype}-${_ostype}\"\n    echo \"${_arch}\"\n}\n\nget_bitness() {\n    need_cmd head\n    # Architecture detection without dependencies beyond coreutils.\n    # ELF files start out \"\\x7fELF\", and the following byte is\n    #   0x01 for 32-bit and\n    #   0x02 for 64-bit.\n    # The printf builtin on some shells like dash only supports octal\n    # escape sequences, so we use those.\n    local _current_exe_head\n    _current_exe_head=$(head -c 5 /proc/self/exe)\n    if [ \"${_current_exe_head}\" = \"$(printf '\\177ELF\\001')\" ]; then\n        echo 32\n    elif [ \"${_current_exe_head}\" = \"$(printf '\\177ELF\\002')\" ]; then\n        echo 64\n    else\n        err \"unknown platform bitness\"\n    fi\n}\n\nget_endianness() {\n    local cputype=\"$1\"\n    local suffix_eb=\"$2\"\n    local suffix_el=\"$3\"\n\n    # detect endianness without od/hexdump, like get_bitness() does.\n    need_cmd head\n    need_cmd tail\n\n    local _current_exe_endianness\n    _current_exe_endianness=\"$(head -c 6 /proc/self/exe | tail -c 1)\"\n    if [ \"${_current_exe_endianness}\" = \"$(printf '\\001')\" ]; then\n        echo \"${cputype}${suffix_el}\"\n    elif [ \"${_current_exe_endianness}\" = \"$(printf '\\002')\" ]; then\n        echo \"${cputype}${suffix_eb}\"\n    else\n        err \"unknown platform endianness\"\n    fi\n}\n\nis_host_amd64_elf() {\n    need_cmd head\n    need_cmd tail\n    # ELF e_machine detection without dependencies beyond coreutils.\n    # Two-byte field at offset 0x12 indicates the CPU,\n    # but we're interested in it being 0x3E to indicate amd64, or not that.\n    local _current_exe_machine\n    _current_exe_machine=$(head -c 19 /proc/self/exe | tail -c 1)\n    [ \"${_current_exe_machine}\" = \"$(printf '\\076')\" ]\n}\n\ncheck_proc() {\n    # Check for /proc by looking for the /proc/self/exe link.\n    # This is only run on Linux.\n    if ! test -L /proc/self/exe; then\n        err \"unable to find /proc/self/exe. Is /proc mounted? Installation cannot proceed without /proc.\"\n    fi\n}\n\nneed_cmd() {\n    if ! check_cmd \"$1\"; then\n        err \"need '$1' (command not found)\"\n    fi\n}\n\ncheck_cmd() {\n    command -v -- \"$1\" >/dev/null 2>&1\n}\n\n# Run a command that should never fail. If the command fails execution\n# will immediately terminate with an error showing the failing\n# command.\nensure() {\n    if ! \"$@\"; then err \"command failed: $*\"; fi\n}\n\nassert_nz() {\n    if [ -z \"$1\" ]; then err \"found empty string: $2\"; fi\n}\n\nerr() {\n    echo \"Error: $1\" >&2\n    exit 1\n}\n\n# This is put in braces to ensure that the script does not run until it is\n# downloaded completely.\n{\n    main \"$@\" || exit 1\n}\n"
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 1.443359375,
          "content": "default:\n    @just --list\n\n[unix]\nfmt:\n    nix-shell --cores 0 --pure --run 'cargo-fmt --all'\n    nix-shell --cores 0 --pure --run 'nixfmt -- *.nix'\n    nix-shell --cores 0 --pure --run 'shfmt --indent=4 --language-dialect=posix --simplify --write *.sh'\n    nix-shell --cores 0 --pure --run 'yamlfmt -- .github/workflows/*.yml'\n\n[windows]\nfmt:\n    cargo +nightly fmt --all\n\n[unix]\nlint:\n    nix-shell --cores 0 --pure --run 'cargo-fmt --all --check'\n    nix-shell --cores 0 --pure --run 'cargo clippy --all-features --all-targets -- -Dwarnings'\n    nix-shell --cores 0 --pure --run 'cargo msrv verify'\n    nix-shell --cores 0 --pure --run 'cargo udeps --all-features --all-targets --workspace'\n    nix-shell --cores 0 --pure --run 'mandoc -man -Wall -Tlint -- man/man1/*.1'\n    nix-shell --cores 0 --pure --run 'markdownlint *.md'\n    nix-shell --cores 0 --pure --run 'nixfmt --check -- *.nix'\n    nix-shell --cores 0 --pure --run 'shellcheck --enable all *.sh'\n    nix-shell --cores 0 --pure --run 'shfmt --diff --indent=4 --language-dialect=posix --simplify *.sh'\n    nix-shell --cores 0 --pure --run 'yamlfmt -lint -- .github/workflows/*.yml'\n\n[windows]\nlint:\n    cargo +nightly fmt --all --check\n    cargo +stable clippy --all-features --all-targets -- -Dwarnings\n\n[unix]\ntest *args:\n    nix-shell --cores 0 --pure --run 'cargo nextest run --all-features --no-fail-fast --workspace {{args}}'\n\n[windows]\ntest *args:\n    cargo +stable test --no-fail-fast --workspace {{args}}\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.208984375,
          "content": "group_imports = \"StdExternalCrate\"\nimports_granularity = \"Module\"\nnewline_style = \"Native\"\nuse_field_init_shorthand = true\nuse_small_heuristics = \"Max\"\nuse_try_shorthand = true\nwrap_comments = true\nversion = \"Two\"\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 1.34375,
          "content": "let\n  pkgs = import (builtins.fetchTarball\n    \"https://github.com/NixOS/nixpkgs/archive/4d513ab5f170d66afa3387bdd718d41aa936ee9f.tar.gz\") {\n      overlays = [ rust ];\n    };\n  rust = import (builtins.fetchTarball\n    \"https://github.com/oxalica/rust-overlay/archive/ab150c7412db7bea5879ce2776718f53fba37aa2.tar.gz\");\n\n  rust-nightly =\n    pkgs.rust-bin.selectLatestNightlyWith (toolchain: toolchain.minimal);\n  cargo-udeps = pkgs.writeShellScriptBin \"cargo-udeps\" ''\n    export RUSTC=\"${rust-nightly}/bin/rustc\";\n    export CARGO=\"${rust-nightly}/bin/cargo\";\n    exec \"${pkgs.cargo-udeps}/bin/cargo-udeps\" \"$@\"\n  '';\nin pkgs.mkShell {\n  buildInputs = [\n    # Rust\n    (pkgs.rust-bin.selectLatestNightlyWith (toolchain: toolchain.rustfmt))\n    pkgs.rust-bin.stable.latest.default\n\n    # Shells\n    pkgs.bash\n    pkgs.dash\n    pkgs.elvish\n    pkgs.fish\n    pkgs.ksh\n    pkgs.nushell\n    pkgs.powershell\n    pkgs.xonsh\n    pkgs.zsh\n\n    # Tools\n    cargo-udeps\n    pkgs.cargo-msrv\n    pkgs.cargo-nextest\n    pkgs.cargo-udeps\n    pkgs.just\n    pkgs.mandoc\n    pkgs.nixfmt\n    pkgs.nodePackages.markdownlint-cli\n    pkgs.python3Packages.black\n    pkgs.python3Packages.mypy\n    pkgs.python3Packages.pylint\n    pkgs.shellcheck\n    pkgs.shfmt\n    pkgs.yamlfmt\n\n    # Dependencies\n    pkgs.cacert\n    pkgs.fzf\n    pkgs.git\n    pkgs.libiconv\n  ];\n\n  CARGO_TARGET_DIR = \"target_nix\";\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "zoxide.plugin.zsh",
          "type": "blob",
          "size": 0.1630859375,
          "content": "if (( $+commands[zoxide] )); then\n  eval \"$(zoxide init zsh)\"\nelse\n  echo 'zoxide: command not found, please install it from https://github.com/ajeetdsouza/zoxide'\nfi\n"
        }
      ]
    }
  ]
}