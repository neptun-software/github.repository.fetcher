{
  "metadata": {
    "timestamp": 1736709408695,
    "page": 5,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rome/tools",
      "stars": 23681,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "benchmark/node_modules\nbenchmark/target"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.328125,
          "content": "root = true\n\n[*]\nend_of_line = lf\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nindent_style = tab\nindent_size = 2\n\n# YAML doesn't support hard tabs ðŸ™ƒ\n# Templates that will be weird with hard tabs in the website editor\n[{**.yml,**.md,**.rs,**.mdx,justfile}]\nindent_style = space\n\n[*.rs]\nindent_size = 4\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.36328125,
          "content": "# This file lists revisions of large-scale formatting/style changes so that\n# they can be excluded from git blame results.\n#\n# To set this file as the default ignore file for git blame, run:\n#   $ git config blame.ignoreRevsFile .git-blame-ignore-revs\n\n# chore: switch from tabs to spaces (https://github.com/rome/tools/pull/1941)\n409979ff132efdcb1e9fec3526d641966fd3f2bf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.7333984375,
          "content": "* text=auto eol=lf\ncrates/rome_js_unicode_table/src/tables.rs linguist-generated=true text=auto eol=lf\n**/generated/* linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/analyzers.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/assists.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/semantic_analyzers.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/analyzers/*.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/assists/*.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/semantic_analyzers/*.rs linguist-generated=true text=auto eol=lf\ncrates/rome_js_analyze/src/registry.rs linguist-generated=true text=auto eol=lf\ncrates/rome_service/src/configuration/linter/rules.rs linguist-generated=true text=auto eol=lf\nnpm/backend-jsonrpc/src/workspace.ts linguist-generated=true text=auto eol=lf\nwebsite/src/pages/lint/rules/**/*.md linguist-generated=true text=auto eol=lf\nwebsite/src/components/generated/.astro linguist-generated=true text=auto eol=lf\nnpm/rome/configuration_schema.json linguist-generated=true text=auto eol=lf\neditors/vscode/configuration_schema.json linguist-generated=true text=auto eol=lf\ncrates/rome_service/src/configuration/parse/json/rules.rs linguist-generated=true text=auto eol=lf\n\n\ncrates/rome_js_formatter/tests/**/*.ts.prettier-snap linguist-language=TypeScript\ncrates/rome_js_formatter/tests/**/*.js.prettier-snap linguist-language=JavaScript\ncrates/rome_js_formatter/tests/**/*.ts.snap linguist-language=Markdown\ncrates/rome_js_formatter/tests/**/*.js.snap linguist-language=Markdown\ncrates/rome_cli/tests/**/*.snap linguist-language=Markdown\ncrates/rome_js_analyze/tests/specs/**/*.snap linguist-language=Markdown\n\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3798828125,
          "content": ".DS_Store\nProfile-*.json\n# Editor configuration\n.vscode\n.idea\n.vs\n# Release artifacts\n**/target\n# Ignore test files that contributors could create locally\n/test.*\n# Ignore third-party files\n**/node_modules\n**/dist\n**/build\nnpm/cli-*\n.pnpm-debug.log\n\n# https://github.com/nnethercote/dhat-rs output file\ndhat-heap.json\n\ncrates/rome_js_formatter/report.*\ncrates/rome_json_formatter/report.*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.375,
          "content": "[submodule \"xtask/coverage/test262\"]\n\tpath = xtask/coverage/test262\n\turl = https://github.com/tc39/test262.git\n\tshallow = true\n\n[submodule \"xtask/coverage/Typescript\"]\n\tpath = xtask/coverage/Typescript\n\turl = https://github.com/microsoft/Typescript\n\tshallow = true\n\n[submodule \"xtask/coverage/babel\"]\n\tpath = xtask/coverage/babel\n\turl = https://github.com/babel/babel\n\tshallow = true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 59.4951171875,
          "content": "# Rome changelog\n\n## [Unreleased]\n\n### CLI\n\n#### BREAKING CHANGES\n\n- The CLI now exists with an error then there's an error inside the configuration.\n\n\tPreviously, rome would raise warnings and continue the execution, by applying its defaults.\n\n\tThis wasn't ideal for users, because this could have created false positives in linting, or formatted\n\tcode with a configuration that wasn't the of the user.\n- The command `rome check` now shows formatter diagnostics when checking the code.\n\n\tThe presence of the diagnostics will result in an error code when the command finishes.\n\n\tThis is in line with semantic and behaviour meant for the command `rome check`.\n\n#### Other changes\n\n- Fix [#4670](https://github.com/rome/tools/issues/4670), don't crash at empty default export.\n- Fix [#4556](https://github.com/rome/tools/issues/4556), which correctly handles new lines in the\n`.gitignore` file across OS.\n- Add a new option to ignore unknown files `--files-ignore-unknown`:\n\n\t```shell\n\trome format ./src --files-ignore-unknown\n\t```\n\n\tDoing so, Rome won't emit diagnostics for files that doesn't know how to handle.\n- Add a new option `--no-errors-on-unmatched`:\n\n\t```shell\n\trome format ./src --no-errors-on-unmatched\n\t```\n\n\tRome won't exit with an error code in case no files were processed in the given paths.\n\n- Fixed the diagnostics emitted when running the `rome format` command;\n\n- Rome doesn't warn anymore when discovering (possibly infinite) symbolic links between directories.\n  This fixes [#4193](https://github.com/rome/tools/issues/4193) which resulted in incorrect warnings\n  when a single file or directory was pointed at by multiple symbolic links. Symbolic links to other\n  symbolic links do still trigger warnings if they are too deeply nested.\n\n### Configuration\n\n#### Other changes\n\n- Add a new option to ignore unknown files:\n\n\t```json\n\t{\n\t\t\"files\": {\n\t\t\t\"ignoreUnknown\": true\n\t\t}\n\t}\n\t```\n\tDoing so, Rome won't emit diagnostics for file that it doesn't know how to handle.\n\n- Add a new `\"javascript\"` option to support the unsafe/experimental\nparameter decorators:\n\n\t```json\n\t{\n\t\t\"javascript\": {\n\t\t\t\"parser\": {\n\t\t\t\t\"unsafeParameterDecoratorsEnabled\": true\n\t\t\t}\n\t\t}\n\t}\n\t```\n- Add a new `\"extends\"` option, useful to split the configuration file in\nmultiple files:\n\n  ```json\n  {\n    \"extends\": [\"../sharedFormatter.json\", \"linter.json\"]\n  }\n  ```\n\n  The resolution of the files is file system based, Rome doesn't know how to\n  resolve dependencies yet.\n\n- The commands `rome check` and `rome lint` now show the remaining diagnostics even when\n\t`--apply-safe` or `--apply-unsafe` are passed.\n\n- Fix the commands `rome check` and `rome lint`, they won't exit with an error code\nif no error diagnostics are emitted.\n\n- Add a new option `--error-on-warnings`, which instructs Rome to exit with an error code when warnings are emitted.\n\n  ```shell\n  rome check --error-on-wanrings ./src\n  ```\n\n- Add a configuration to enable parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n\n### Editors\n\n#### Other changes\n\n- The Rome LSP is now able to show diagnostics that belong to JSON lint rules.\n- Fix [#4564](https://github.com/rome/tools/issues/4564), now files too large don't emit errors.\n- The Rome LSP now sends client messages when files are ignored or too big.\n\n### Formatter\n\n- Add a new option called `--jsx-quote-style` to the formatter. This option allows you to choose between single and double quotes for JSX attributes. [#4486](https://github.com/rome/tools/issues/4486)\n\n- Add a new option called `--arrow-parentheses` to the formatter. This option allows you to set the parentheses style for arrow functions. [#4666](https://github.com/rome/tools/issues/4666)\n\n- The JSON formatter is now able to format `.json` files that have comments.\n\n### Linter\n\n- [`noDuplicateParameters`](https://docs.rome.tools/lint/rules/noduplicateparameters/): enhanced rule to manage constructor parameters.\n\n#### Removed rules\n\n- Remove `complexity/noExtraSemicolon` ([#4553](https://github.com/rome/tools/issues/4553))\n\n  The _Rome_ formatter takes care of removing extra semicolons.\n  Thus, there is no need for this rule.\n\n- Remove `useCamelCase`\n\n  Use [`useNamingConvention`](https://docs.rome.tools/lint/rules/useCamelCase/) instead.\n\n#### New rules\n\n- Add [`noFallthroughSwitchClause`](https://docs.rome.tools/lint/rules/noFallthroughSwitchClause/)\n\n- Add [`noGlobalIsFinite`](https://docs.rome.tools/lint/rules/noglobalisfinite/)\n\n  This rule recommends using `Number.isFinite` instead of the global and unsafe `isFinite` that attempts a type coercion.\n\n- Add [`noGlobalIsNan`](https://docs.rome.tools/lint/rules/noglobalisnan/)\n\n  This rule recommends using `Number.isNaN` instead of the global and unsafe `isNaN` that attempts a type coercion.\n\n- Add [`noUnsafeDeclarationMerging`](https://docs.rome.tools/lint/rules/noUnsafeDeclarationMerging/)\n\n  This rule disallows declaration merging between an interface and a class.\n\n- Add [`useArrowFunction`](https://docs.rome.tools/lint/rules/usearrowfunction/)\n\n  This rule proposes turning function expressions into arrow functions.\n  Function expressions that use `this` are ignored.\n\n- Add [`noDuplicateJsonKeys`](https://docs.rome.tools/lint/rules/noDuplicateJsonKeys/)\n\n\tThis rule disallow duplicate keys in a JSON object.\n\n- Add [`noVoid`](https://docs.rome.tools/lint/rules/novoid/)\n\n\tThis rules disallow the use of `void`.\n\n- Add [`noNonoctalDecimalEscape`](https://docs.rome.tools/lint/rules/nononoctaldecimalescape/)\n\n\tThis rule disallows `\\8` and `\\9` escape sequences in string literals.\n\n- Add [`noUselessEmptyExport`](https://docs.rome.tools/lint/rules/noUselessEmptyExport/)\n\n\tThis rule disallows useless `export {}`.\n\n- Add [`useIsArray`](https://docs.rome.tools/lint/rules/useIsArray/)\n\n  This rule proposes using `Array.isArray()` instead of `instanceof Array`.\n\n#### Promoted rules\n\nNew rules are promoted, please check [#4750](https://github.com/rome/tools/discussions/4750) for more details:\n\n- [`a11y/useHeadingContent`](https://docs.rome.tools/lint/rules/useHeadingContent/)\n- [`complexity/noForEach`](https://docs.rome.tools/lint/rules/noForEach/)\n- [`complexity/useLiteralKeys`](https://docs.rome.tools/lint/rules/useLiteralKeys/)\n- [`complexity/useSimpleNumberKeys`](https://docs.rome.tools/lint/rules/useSimpleNumberKeys/)\n- [`correctness/useIsNan`](https://docs.rome.tools/lint/rules/useIsNan/)\n- [`suspicious/noConsoleLog`](https://docs.rome.tools/lint/rules/noConsoleLog/)\n- [`suspicious/noDuplicateJsxProps`](https://docs.rome.tools/lint/rules/noDuplicateJsxProps/)\n\nThe following rules are now recommended:\n\n- [`noUselessFragments`](https://docs.rome.tools/lint/rules/noUselessFragments/)\n- [`noRedundantUseStrict`](https://docs.rome.tools/lint/rules/noRedundantUseStrict/)\n- [`useExponentiationOperator`](https://docs.rome.tools/lint/rules/useExponentiationOperator/)\n\n\n#### Other changes\n\n- Add new TypeScript globals (`AsyncDisposable`, `Awaited`, `DecoratorContext`, and others) [4643](https://github.com/rome/tools/issues/4643).\n\n- [`noRedeclare`](https://docs.rome.tools/lint/rules/noredeclare/): allow redeclare of index signatures are in different type members [#4478](https://github.com/rome/tools/issues/4478)\n\n- Improve [`noConsoleLog`](https://docs.rome.tools/lint/rules/noconsolelog/), [`noGlobalObjectCalls`](https://docs.rome.tools/lint/rules/noglobalobjectcalls/), [`useIsNan`](https://docs.rome.tools/lint/rules/useisnan/), and [`useNumericLiterals`](https://docs.rome.tools/lint/rules/usenumericliterals/) by handling `globalThis` and `window` namespaces.\n\n  For instance, the following code is now reported by `noConsoleLog`:\n\n  ```js\n  globalThis.console.log(\"log\")\n  ```\n\n- Fix a crash in the [`NoParameterAssign`](https://docs.rome.tools/lint/rules/noparameterassign/) rule that occurred when there was a bogus binding. [#4323](https://github.com/rome/tools/issues/4323)\n\n- Fix [`useExhaustiveDependencies`](https://docs.rome.tools/lint/rules/useexhaustivedependencies/) rule in the following cases [#4330](https://github.com/rome/tools/issues/4330)\n  - when the first argument of hooks is a named function\n  - inside an export default function\n  - for React.use* hooks\n\n- Fix [`noInvalidConstructorSuper`](https://docs.rome.tools/lint/rules/noinvalidconstructorsuper/) rule that erroneously reported generic parents [#4624](https://github.com/rome/tools/issues/4624).\n\n-  Fix [`noDuplicateCase`](https://docs.rome.tools/lint/rules/noDuplicateCase/) rule that erroneously reported as equals the strings literals `\"'\"` and `'\"'` [#4706](https://github.com/rome/tools/issues/4706).\n\n- Improve [`noInnerDeclarations`](https://docs.rome.tools/lint/rules/noInnerDeclarations/)\n\n  Now, the rule doesn't report false-positives about ambient _TypeScript_ declarations.\n  For example, the following code is no longer reported by the rule:\n\n  ```ts\n  declare var foo;\n  ```\n\n- Improve [`useEnumInitializers`](https://docs.rome.tools/lint/rules/useEnumInitializers/)\n\n  The rule now reports all uninitialized members of an enum in a single diagnostic.\n\n  Moreover, ambient enum declarations are now ignored.\n  This avoids reporting ambient enum declarations in _TypeScript_ declaration files.\n\n  ```ts\n  declare enum Weather {\n    Rainy,\n    Sunny,\n  }\n  ```\n\n- Relax [`noBannedTypes`](https://docs.rome.tools/lint/rules/nobannedtypes/) and improve documentation\n\n  The rule no longer reports a user type that reuses a banned type name.\n  The following code is now allowed:\n\n  ```ts\n  import { Number } from \"a-lib\";\n  declare const v: Number;\n  ```\n\n  The rule now allows the use of the type `{}` to denote a non-nullable generic type:\n\n  ```ts\n  function f<T extends {}>(x: T) {\n      assert(x != null);\n  }\n  ```\n\n  And in a type intersection for narrowing a type to its non-nullable equivalent type:\n\n  ```ts\n  type NonNullableMyType = MyType & {};\n  ```\n\n- Improve the diagnostic and the code action of [`useDefaultParameterLast`](https://docs.rome.tools/lint/rules/usedefaultparameterlast/).\n\n  The diagnostic now reports the last required parameter which should precede optional and default parameters.\n\n  The code action now removes any whitespace between the parameter name and its initialization.\n\n- Relax [noConfusingArrow](https://docs.rome.tools/lint/rules/noconfusingarrow/)\n\n  All arrow functions that enclose its parameter with parenthesis are allowed.\n  Thus, the following snippet no longer trigger the rule:\n\n  ```js\n  var x = (a) => 1 ? 2 : 3;\n  ```\n\n  The following snippet still triggers the rule:\n\n  ```js\n  var x = a => 1 ? 2 : 3;\n  ```\n\n- Relax [`useLiteralEnumMembers`](https://docs.rome.tools/lint/rules/useLiteralEnumMembers/)\n\n  Enum members that refers to previous enum members are now allowed.\n  This allows common pattern in enum flags like in the following example:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 1,\n    Write = 1 << 1,\n    All = Read | Write,\n  }\n  ```\n\n  Arbitrary numeric constant expressions are also allowed:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 2**0,\n    Write = 2**1,\n    All = Read | Write,\n  }\n  ```\n\n- Improve [useLiteralKeys](https://docs.rome.tools/lint/rules/useLiteralKeys/).\n\n  Now, the rule suggests simplifying computed properties to string literal properties:\n\n  ```diff\n  {\n  -  [\"1+1\"]: 2,\n  +  \"1+1\": 2,\n  }\n  ```\n\n  It also suggests simplifying string literal properties to static properties:\n\n  ```diff\n  {\n  -  \"a\": 0,\n  +  a: 0,\n  }\n  ```\n\n  These suggestions are made in object literals, classes, interfaces, and object types.\n\n- Improve [`noNewSymbol`](https://docs.rome.tools/lint/rules/noNewSymbol/).\n\n  The rule now handles cases where `Symbol` is namespaced with the global `globalThis` or `window`.\n\n- The rules [`useExhaustiveDependencies`](https://docs.rome.tools/lint/rules/useexhaustivedependencies/) and [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) accept a different shape of options\n\n  Old configuration\n\n  ```json\n  {\n  \t\"linter\": {\n  \t\t\"rules\": {\n  \t\t\t\"nursery\": {\n  \t\t\t\t\"useExhaustiveDependencies\": {\n  \t\t\t\t\t\"level\": \"error\",\n  \t\t\t\t\t\"options\": {\n  \t\t\t\t\t\t\"hooks\": [\n  \t\t\t\t\t\t\t[\"useMyEffect\", 0, 1]\n  \t\t\t\t\t\t]\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n  ```\n\n  New configuration\n\n  ```json\n  {\n  \t\"linter\": {\n  \t\t\"rules\": {\n  \t\t\t\"nursery\": {\n  \t\t\t\t\"useExhaustiveDependencies\": {\n  \t\t\t\t\t\"level\": \"error\",\n  \t\t\t\t\t\"options\": {\n  \t\t\t\t\t\t\"hooks\": [\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\t\"name\": \"useMyEffect\",\n  \t\t\t\t\t\t\t\t\"closureIndex\": 0,\n  \t\t\t\t\t\t\t\t\"dependenciesIndex\": 1\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t]\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n  ```\n\n- [noRedundantUseStrict](https://docs.rome.tools/lint/rules/noredundantusestrict/) check only `'use strict'` directive to resolve false positive diagnostics.\n\n  React introduce new directives, \"use client\" and \"use server\".\n  The rule raises false positive errors about these directives.\n\n- Fix false positive diagnostics ([#4483](https://github.com/rome/tools/issues/4483)) that  [`NoUnreachableSuper`](https://docs.rome.tools/lint/rules/nounreachablesuper/) caused to nested if statement.\n\n  The rule no longer reports `This constructor calls super() in a loop`\n  when using nested if statements in a constructor.\n\n- Fix [useHookAtTopLevel](https://docs.rome.tools/lint/rules/usehookattoplevel/) 's false positive diagnostics ([#4637](https://github.com/rome/tools/issues/4637))\n\n  The rule no longer reports false positive diagnostics when accessing properties directly from a hook and calling a hook inside function arguments.\n\n- Fix [noUselessFragments](https://docs.rome.tools/lint/rules/nouselessfragments/)'s panics when running `rome check --apply-unsafe` ([#4637](https://github.com/rome/tools/issues/4639))\n\n  This rule's code action emits an invalid AST, so I fixed using JsxString instead of JsStringLiteral\n\n- Fix [noUndeclaredVariables](https://docs.rome.tools/lint/rules/noundeclaredvariables/)'s false positive diagnostics ([#4675](https://github.com/rome/tools/issues/4675))\n\n  The semantic analyzer no longer handles `this` reference identifier.\n\n- Fix [noUnusedVariables](https://docs.rome.tools/lint/rules/nounusedvariables/)'s false positive diagnostics ([#4688](https://github.com/rome/tools/issues/4688))\n\n  The semantic analyzer handles ts export declaration clause correctly.\n\n### Parser\n\n- Add support for decorators in class method parameters, example:\n\n\t```js\n\tclass AppController {\n \t\tget(@Param() id) {}\n \t\t//\t^^^^^^^^ new supported syntax\n \t}\n\t```\n\n\tThis syntax is only supported via configuration, because it's a non-standard\n\tsyntax.\n\n\t```json\n\t{\n\t\t\"//\": \"rome.json file\",\n \t\t\"javascript\": {\n \t\t\t\"parser\": {\n\t\t\t\t\"unsafeParameterDecoratorsEnabled\": true\n \t\t\t}\n \t\t}\n \t}\n\t```\n- Add for parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n### VSCode\n\n### JavaScript APIs\n\n\n## 12.1.3\n\n### CLI\n\n#### Other changes\n\n- `rome lsp-proxy` should accept the global CLI options [#4505](https://github.com/rome/tools/issues/4505)\n- Enhance help descriptions\n- Accept the environment variable 'ROME_BINARY' to override the Rome binary\n\n### Configuration\n\n#### Other changes\n\n- Fix an issue where all the `nursery` were enabled when the `\"nursery\": {}` object\nwas defined [#4479](https://github.com/rome/tools/issues/4479)\n\n### Formatter\n\n### Linter\n\n#### Other changes\n\n- Fix false positive diagnostics ([#4483](https://github.com/rome/tools/issues/4483)) that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to returning call expressions of a hook.\n- Revert [#4359](https://github.com/rome/tools/issues/4359)\n\n### Parser\n\n#### Other changes\n\n- Revert [#4359](https://github.com/rome/tools/issues/4359)\n\n\n## 12.1.2\n\n### Configuration\n\n#### Other changes\n\n- Fix regression where a specific combination of configuration didn't load\nthe correct rules to apply [#4502](https://github.com/rome/tools/issues/4502)\n\n### Linter\n\n#### New rules\n- [`noUselessTypeConstraint`](https://docs.rome.tools/lint/rules/noUselessTypeConstraint/)\n\n#### Other changes\n\n- [`noInnerDeclarations`](https://docs.rome.tools/lint/rules/noinnerdeclarations/): allow function declarations in nested block inside an _ES module_ [#4492](https://github.com/rome/tools/issues/4492).\n- [`noInvalidConstructorSuper`](https://docs.rome.tools/lint/rules/noinvalidconstructorsuper/): recognize `extends` clauses that use static member access such as `extends mod.C` [#4499](https://github.com/rome/tools/issues/4499)\n\n## 12.1.1\n\n### CLI\n\n#### Other changes\n\n- Fix regression where the command `lsp-proxy` was renamed `lsp_proxy` [#4489](https://github.com/rome/tools/issues/4489)\n\n\n### Configuration\n\n#### Other changes\n\n- Fix an issue where Rome was loading incorrectly recommended rule [#4479](https://github.com/rome/tools/issues/4479) [#4488](https://github.com/rome/tools/issues/4488)\n\n### Linter\n\n#### Other changes\n\n- Fix an issue where the [`noAssignInExpressions`](https://docs.rome.tools/lint/rules/noassigninexpressions/) rule replaced the operator with an invalid token, which caused other lint rules to crash. [#4464](https://github.com/rome/tools/issues/4464)\n- Fix an issue that [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) rule did not correctly detect exports when a variable and an `interface` had the same name [#4468](https://github.com/rome/tools/pull/4468)\n\n## 12.1.0\n\n### CLI\n\n#### Other changes\n\n- Refactored the underling argument parsing logic. Changed the look and feel of the help\noutput. [#4405](https://github.com/rome/tools/pull/4405).\n- The command `rome check` can accept input from `stdin`.\n- Add the argument `--stdin-file-path` to use when running `rome check` via `stdin`.\n- Add the argument `--formatter-enabled` to the command `rome check` to control the formatter via CLI.\n- Add the argument `--linter-enabled` to the command `rome check` to control the linter via CLI.\n- Add the argument `--organize-imports-enabled` to the command `rome check` to control the import sorting via CLI.\n- Add new command `rome migrate` the transform the configuration file `rome.json`\n\twhen there are breaking changes.\n\n### Configuration\n\n- Add `vcs` property, to opt in the VCS integration:\n  - `vcs.enabled`, to enable or not the integration;\n  - `vcs.clientKind`, the supported clients;\n  - `vcs.useIgnoreFile`, to ignore the files/paths inside the file;\n  - `vcs.root`, an optional path to the root of the VCS;\n\n### Editors\n\n#### Other changes\n\n- Fix an issue where the VSCode extension duplicates text when using VSCode git utilities [#4338](https://github.com/rome/tools/issues/4338)\n- Remove code assists from being added to the code actions when apply fixes;\n- When requesting code actions, ignored files should not throw errors. Fixes [#4434](https://github.com/rome/tools/issues/4434)\n\n### Formatter\n\n#### Other changes\n\n- Fix an issue where formatting of JSX string literals property values were using incorrect quotes [#4054](https://github.com/rome/tools/issues/4054)\n- Changed import assertion grammar to the new import attribute assertion\n```diff\n- import \"module\" assert {}\n+ import \"module\" with {}\n```\n- Fix an issue where JSON formatter does not respect `lineWidth` for arrays [#4351](https://github.com/rome/tools/issues/4351)\n- Add support for decorators\n\n### Linter\n\n#### New rules\n\n- [`noConfusingArrow`](https://docs.rome.tools/lint/rules/noConfusingArrow/)\n- [`noRedundantRoles`](https://docs.rome.tools/lint/rules/noRedundantRoles/)\n- [`noNoninteractiveTabindex`](https://docs.rome.tools/lint/rules/noNoninteractiveTabindex/)\n- [`noAriaUnsupportedElements`](https://docs.rome.tools/lint/rules/noAriaUnsupportedElements/)\n- [`noConsoleLog`](https://docs.rome.tools/lint/rules/noConsoleLog/)\n- [`noForEach`](https://docs.rome.tools/lint/rules/noForEach/)\n- [`useLiteralKeys`](https://docs.rome.tools/lint/rules/useLiteralKeys/)\n- [`noConstantCondition`](https://docs.rome.tools/lint/rules/noConstantCondition/)\n- [`useGroupedTypeImport`](https://docs.rome.tools/lint/rules/useGroupedTypeImport/)\n- [`noUselessConstructor`](https://docs.rome.tools/lint/rules/noUselessConstructor/)\n- [`useLiteralEnumMembers`](https://docs.rome.tools/lint/rules/useLiteralEnumMembers/)\n- [`useHeadingContent`](https://docs.rome.tools/lint/rules/useHeadingContent/)\n- [`noAccumulatingSpread`](https://docs.rome.tools/lint/rules/noAccumulatingSpread/)\n- [`useSimpleNumberKeys`](https://docs.rome.tools/lint/rules/useSimpleNumberKeys/)\n\n\n#### Promoted rules\n\nNew rules are promoted, please check [#4431](https://github.com/rome/tools/pull/4431) for more details.\n\n- [lint/a11y/noNoninteractiveElementToInteractiveRole](https://docs.rome.tools/lint/rules/noNoninteractiveElementToInteractiveRole)\n- [lint/a11y/noRedundantAlt](https://docs.rome.tools/lint/rules/noRedundantAlt)\n- [lint/a11y/noSvgWithoutTitle](https://docs.rome.tools/lint/rules/noSvgWithoutTitle)\n- [lint/a11y/useAriaPropsForRole](https://docs.rome.tools/lint/rules/useAriaPropsForRole)\n- [lint/a11y/useIframeTitle](https://docs.rome.tools/lint/rules/useIframeTitle)\n- [lint/a11y/useMediaCaption](https://docs.rome.tools/lint/rules/useMediaCaption)\n- [lint/a11y/useValidAriaProps](https://docs.rome.tools/lint/rules/useValidAriaProps)\n- [lint/a11y/useValidLang](https://docs.rome.tools/lint/rules/useValidLang)\n- [lint/complexity/noExtraSemicolon](https://docs.rome.tools/lint/rules/noExtraSemicolon)\n- [lint/complexity/noUselessCatch](https://docs.rome.tools/lint/rules/noUselessCatch)\n- [lint/complexity/noUselessConstructor](https://docs.rome.tools/lint/rules/noUselessConstructor)\n- [lint/complexity/noUselessLabel](https://docs.rome.tools/lint/rules/noUselessLabel)\n- [lint/complexity/noUselessRename](https://docs.rome.tools/lint/rules/noUselessRename)\n- [lint/complexity/noUselessSwitchCase](https://docs.rome.tools/lint/rules/noUselessSwitchCase)\n- [lint/complexity/noWith](https://docs.rome.tools/lint/rules/noWith)\n- [lint/correctness/noGlobalObjectCalls](https://docs.rome.tools/lint/rules/noGlobalObjectCalls)\n- [lint/correctness/noInnerDeclarations](https://docs.rome.tools/lint/rules/noInnerDeclarations)\n- [lint/correctness/noInvalidConstructorSuper](https://docs.rome.tools/lint/rules/noInvalidConstructorSuper)\n- [lint/correctness/noSwitchDeclarations](https://docs.rome.tools/lint/rules/noSwitchDeclarations)\n- [lint/correctness/noUnreachableSuper](https://rome.tools/docs/lint/rules/noUnreachableSuper)\n- [lint/correctness/noUnsafeOptionalChaining](https://docs.rome.tools/lint/rules/noUnsafeOptionalChaining)\n- [lint/correctness/noUnusedLabels](https://docs.rome.tools/lint/rules/noUnusedLabels)\n- [lint/correctness/useYield](https://docs.rome.tools/lint/rules/useYield)\n- [lint/style/noCommaOperator](https://docs.rome.tools/lint/rules/noCommaOperator)\n- [lint/style/noInferrableTypes](https://docs.rome.tools/lint/rules/noInferrableTypes)\n- [lint/style/noNamespace](https://docs.rome.tools/lint/rules/noNamespace)\n- [lint/style/noParameterAssign](https://docs.rome.tools/lint/rules/noParameterAssign)\n- [lint/style/noParameterProperties](https://docs.rome.tools/lint/rules/noParameterProperties)\n- [lint/style/noRestrictedGlobals](https://docs.rome.tools/lint/rules/noRestrictedGlobals)\n- [lint/suspicious/noAssignInExpressions](https://docs.rome.tools/lint/rules/noAssignInExpressions)\n- [lint/suspicious/noClassAssign](https://docs.rome.tools/lint/rules/noClassAssign)\n- [lint/suspicious/noConfusingLabels](https://docs.rome.tools/lint/rules/noConfusingLabels)\n- [lint/suspicious/noDuplicateCase](https://docs.rome.tools/lint/rules/noDuplicateCase)\n- [lint/suspicious/noDuplicateClassMembers](https://docs.rome.tools/lint/rules/noDuplicateClassMembers)\n- [lint/suspicious/noPrototypeBuiltins](https://docs.rome.tools/lint/rules/noPrototypeBuiltins)\n- [lint/suspicious/noRedeclare](https://docs.rome.tools/lint/rules/noRedeclare)\n- [lint/suspicious/noSelfCompare](https://docs.rome.tools/lint/rules/noSelfCompare)\n- [lint/suspicious/useNamespaceKeyword](https://docs.rome.tools/lint/rules/useNamespaceKeyword)\n\nNote that, `noExtraSemicolons` and `noExtraLabels` are renamed to [`noExtraSemicolon`](https://docs.rome.tools/lint/rules/noextrasemicolon/) and [`noUselessLabel`](https://docs.rome.tools/lint/rules/nouselesslabel/).\n\n#### Other changes\n\n- Code actions are formatted using Rome's formatter. If the formatter is disabled,\n\tthe code action is not formatted.\n- Fixed an issue that [`useShorthandArrayType`](https://docs.rome.tools/lint/rules/useShorthandArrayType) rule did not handle nested ReadonlyArray types correctly and erroneously reported TsObjectType [#4354](https://github.com/rome/tools/issues/4353).\n- [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noUndeclaredVariables) detects globals based on the file type.\n- Fix an issue when [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) incorrectly identifies `AggregateError` as an undeclared variable. [#4365](https://github.com/rome/tools/issues/4365)\n- Fix an issue that `useLiteralKeys` rule doesn't ignore valid uses of square bracket notation. [#4370](https://github.com/rome/tools/issues/4370)\n- Fix [#4348](https://github.com/rome/tools/issues/4348) that caused [`noNonNullAssertion`](https://docs.rome.tools/lint/rules/nononnullassertion/) to emit incorrect code action\n- Fix [#4410](https://github.com/rome/tools/issues/4410) that caused [`useButtonType`](https://docs.rome.tools/lint/rules/usebuttontype/) to miss some cases\n- Fix false positive diagnostics that [`useCamelCase`](https://docs.rome.tools/lint/rules/usecamelcase/) caused to default exported components\n- Fix false positive diagnostics that [`useCamelCase`](https://docs.rome.tools/lint/rules/usecamelcase/) caused to private class members\n- Fix false positive diagnostics that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to arrow functions, export default functions and function expressions.\n- Fix false positive diagnostics that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to `as` or `satisfies` expression.\n- Fix false positive diagnostics that [`noHeadeScope`](https://docs.rome.tools/lint/rules/noheaderscope/) caused to custom components\n- Fix false negative diagnostics that [`noNoninteractiveElementToInteractiveRole`](https://docs.rome.tools/lint/rules/nononinteractiveelementtointeractiverole/) and [`noNoninteractiveTabindex`](https://docs.rome.tools/lint/rules/nononinteractivetabindex/) caused to non-interactive elements.\n\n\n### Parser\n\n#### Other changes\n\n- Allow module syntax in `cts` files\n- Changed import assertion grammar to the new import attribute assertion\n```diff\n- import \"module\" assert {}\n+ import \"module\" with {}\n```\n- Allow decorators before `export` and `export default`. [#4252](https://github.com/rome/tools/issues/4252)\n- Add support for Stage 3 decorators\n\n### VSCode\n\n- `requireConfiguration` is set to `true` by default\n\n## 12.0.0\n\n### CLI\n\n##### Breaking changes\n\n- Review how the traversal of the file system works. Now Rome won't navigate folders that are ignored.\n\tWhile this change is a bug fix, this could affect how the `ignore` entries are defined inside a project. We suggest to review them\n\tand make sure they still work.\n- `--apply-suggested` is now called `--apply-unsafe`\n- `rome check --apply` and `rome check --apply-unsafe` exits with non-zero code (error code)\nif there are still diagnostics to be addressed.\n\n##### Other changes\n\n- `rome check` now checks import statements. This is an experimental feature that needs to be\n\tenabled via configuration. Import can be sorted using `rome check --apply-unsafe`\n- Rome is able to auto discover the configuration file. If Rome doesn't fine a configuration in the\nworking directory, it will try to find one in the parent directories.\n- Add a new global options called `--config-path`. It tells Rome to try and discover a `rome.json` file\nin the given path.\n\t```shell\n\trome format --config-path=../../other/path/\n\trome check --config-path=../../other/path/\n\t```\n\n### Configuration\n\n#### Other changes\n\n- Rome now uses the internal JSON parser to validate the configuration file. This means Rome won't\n\texit anymore if there are issues with the `rome.json` file, instead it will apply its defaults\n\tto the sections that are incorrect.\n- Add `javascript.organizeImports`. This is an experimental feature and users need to opt-in.\n\n```json\n{\n  \"organizeImports\": {\n    \"enabled\": true,\n    \"ignore\": [\"trickyFile.js\"]\n  }\n}\n```\n- Add `linter.rules.all` and `linter.rules.[group].all`. These options allow to enable or disable **all**\nrules, or all rules for a **given group**. `all` and `recommended` can't be both `true`.\n\n\n```json\n{\n  \"linter\": {\n    \"rules\": {\n      \"all\": true,\n      \"style\" : {\n        \"all\": false\n      }\n    }\n  }\n}\n```\n\nThe previous example will enable all rules and disable all rules that belong to the `style` group.\n\n### Editors\n\n##### Other changes\n\n- Add support to display diagnostics for JSON files.\n- Add support to format JSON files.\n- Pull diagnostics when parsing a `rome.json` file.\n- Imports sorting is not applied for files that are not supported or ignored.\n\n### Formatter\n\n- Add support for JSON files\n- Add support for TypeScript 4.7\n- Add support for TypeScript 5.0\n\n### Linter\n\nNew rules are promoted, please check [#4239](https://github.com/rome/tools/pull/4239) for more\ndetails.\n- [lint/correctness/noUnsafeFinally](https://docs.rome.tools/lint/rules/noUnsafeFinally)\n- [lint/correctness/noConstructorReturn](https://docs.rome.tools/lint/rules/noConstructorReturn)\n- [lint/correctness/noPrecisionLoss](https://docs.rome.tools/lint/rules/noPrecisionLoss)\n- [lint/correctness/noVoidTypeReturn](https://docs.rome.tools/lint/rules/noVoidTypeReturn)\n- [lint/correctness/noStringCaseMismatch](https://docs.rome.tools/lint/rules/noStringCaseMismatch)\n- [lint/correctness/noSetterReturn](https://docs.rome.tools/lint/rules/noSetterReturn)\n- [lint/a11y/useHtmlLang](https://docs.rome.tools/lint/rules/useHtmlLang)\n- [lint/a11y/noDistractingElements](https://docs.rome.tools/lint/rules/noDistractingElements)\n- [lint/a11y/noHeaderScope](https://docs.rome.tools/lint/rules/noHeaderScope)\n- [lint/a11y/noAccessKey](https://docs.rome.tools/lint/rules/noAccessKey)\n- [lint/style/useExponentiationOperator](https://docs.rome.tools/lint/rules/useExponentiationOperator)\n- [lint/style/useNumericLiterals](https://docs.rome.tools/lint/rules/useNumericLiterals)\n- [lint/style/useDefaultParameterLast](https://docs.rome.tools/lint/rules/useDefaultParameterLast)\n- [lint/style/useConst](https://docs.rome.tools/lint/rules/useConst)\n- [lint/style/noVar](https://docs.rome.tools/lint/rules/noVar)\n- [lint/style/noNonNullAssertion](https://docs.rome.tools/lint/rules/noNonNullAssertion)\n- [lint/style/useEnumInitializers](https://docs.rome.tools/lint/rules/useEnumInitializers)\n- [lint/suspicious/noEmptyInterface](https://docs.rome.tools/lint/rules/noEmptyInterface)\n- [lint/suspicious/noExtraNonNullAssertion](https://docs.rome.tools/lint/rules/noExtraNonNullAssertion)\n- [lint/suspicious/noRedundantUseStrict](https://docs.rome.tools/lint/rules/noRedundantUseStrict)\n- [lint/suspicious/noConstEnum](https://docs.rome.tools/lint/rules/noConstEnum)\n- [lint/suspicious/useDefaultSwitchClauseLast](https://docs.rome.tools/lint/rules/useDefaultSwitchClauseLast)\n- [lint/suspicious/noDuplicateObjectKeys](https://docs.rome.tools/lint/rules/noDuplicateObjectKeys)\n\n\n### Parser\n\n- Support for TypeScript 4.7\n- Support for TypeScript 5.0\n\n### VSCode\n\n##### Other changes\n- Add a new option called `requireConfiguration`. Enabling this option will force Rome to require\na configuration file in your workspace/project. If Rome doesn't find a `rome.json` file, it won't\nemit diagnostics.\n\n## 11.0.0\n\n### CLI\n\n#### BREAKING CHANGES\n\n- the argument `--no-colors` has been removed, in favor of `--color=off`\n\n#### Other changes\n\n- The `init` command now adds the `$schema` property to the generated `rome.json` file\n  if `rome` is installed inside the `node_modules` folder. Follow [this guide](https://docs.rome.tools/configuration#schema) to add the `$schema` property\n  manually in a project with an existing `rome.json` file.\n- A new `--semicolons` option that configures if the formatter prints semicolons at the end of every statement (default) or at the beginning of statements when necessary to prevent ASI failures.\n- Rome exits with an error code if it doesn't process any file.\n- Fixed how the maximum number of diagnostics is calculated [#3869](https://github.com/rome/tools/pull/3869).\n  Rome now prints the total number of errors caused in the files.\n- Rome now traverses symbolic links and emits warnings if it detects loops, and continues processing the next file during the directory traversal.\n- You can force color output using the new global `--colors` option with the value `force`. Forcing color output can be useful if you spawn Rome as a subprocess.\n  Rome is spawned as a process;\n\n### Configuration\n\n- Added the JSON schema `$schema` property. The schema enables auto-completion by editors and...\n  auto-completion and descriptions of all fields of the configuration file.\n- Added a new `files.ignore` option where users can ignore files across tools.\n\n### Editors\n\n- We also publish Rome to [Open VSX](https://open-vsx.org/).\n- The extension now resolves the Rome version installed in the `node_modules` folder.\n- Fixed an issue where diagnostics were not updated after a change to the configuration file (#3724)[https://github.com/rome/tools/pull/3724]\n- The LSP emits a new action where the user can suppress a rule.\n- The extension now allows [sort imports](https://github.com/rome/tools/blob/main/editors/vscode/README.md#imports-sorting-experimental)\n\n### Formatter\n\n#### BREAKING CHANGES\n\n- Fixed incompatibility issues with Prettier [#3531](https://github.com/rome/tools/issues/3531)\n  - [#3686](https://github.com/rome/tools/pull/3686)\n  - [#3732](https://github.com/rome/tools/pull/3732)\n  - [#3842](https://github.com/rome/tools/pull/3842)\n- Fixed an issue where infinite parentheses were wrongly inserted [#3735](https://github.com/rome/tools/issues/3735)\n- Better formatting for `jestEach` templates\n\n#### Other changes\n\n- Added [support](https://docs.rome.tools/configuration/#javascriptformattersemicolon) for omitting semicolons.\n\n\n### Linter\n\n- Fixed false positives emitted by [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/) [#3668](https://github.com/rome/tools/issues/3668)\n- Fixed [`noArrayIndexKey`](https://docs.rome.tools/lint/rules/noarrayindexkey/) where some cases were not detected [#3670](https://github.com/rome/tools/issues/3670)\n- Fixed false positives emitted by [`noConstAssign`](https://docs.rome.tools/lint/rules/noconstassign/) [#3728](https://github.com/rome/tools/issues/3728)\n- Fixed false positives emitted by [`noShoutyConstants`](https://docs.rome.tools/lint/rules/noshoutyconstants/) [#3867](https://github.com/rome/tools/issues/3867)\n- Fixed false positives emitted by [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3779](https://github.com/rome/tools/issues/3779)\n- Fixed [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) where some cases were not detected [#3798](https://github.com/rome/tools/issues/3798)\n- Fixed [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) where types were incorrectly detected [#3669](https://github.com/rome/tools/issues/3669)\n\n#### Rules\n\nThe following rules have been stabilized:\n- `nursery/useFlatMap` -> `complexity/useFlatMap`\n- `nursery/useValidForDirection` -> `correctness/useValidForDirection`\n- `nursery/noExplicitAny` -> `suspicious/noExplicitAny`\n- `nursery/noConstAssign` -> `correctness/noConstAssign`\n\nThese rules are all recommended, so they will be enabled by default. You can simply remove those entries from your configuration file if you had enabled them manually from the `nursery` group.\n\nThe following rules have been renamed:\n- `a11y/useBlankTarget` -> `a11y/noBlankTarget`\n- `correctness/noMultipleSpacesInRegularExpressionLiterals` -> `complexity/noMultipleSpacesInRegularExpressionLiterals`\n- `style/useOptionalChain` -> `complexity/useOptionalChain`\n- `correctness/noUselessFragments` -> `complexity/noUselessFragments`\n- `correctness/noDelete` -> `performance/noDelete`\n- `correctness/useSingleCaseStatement` -> `style/useSingleCaseStatement`\n- `correctness/useWhile` -> `style/useWhile`\n- `correctness/noArguments` -> `style/noArguments`\n- `correctness/noAsyncPromiseExecutor` -> `suspicious/noAsyncPromiseExecutor`\n- `correctness/noCommentText` -> `suspicious/noCommentText`\n- `correctness/noCompareNegZero` -> `suspicious/noCompareNegZero`\n- `correctness/noDebugger` -> `suspicious/noDebugger`\n- `correctness/noDoubleEquals` -> `suspicious/noDoubleEquals`\n- `correctness/noShadowRestrictedNames` -> `suspicious/noShadowRestrictedNames`\n- `correctness/noSparseArray` -> `suspicious/noSparseArray`\n- `correctness/noUnsafeNegation` -> `suspicious/noUnsafeNegation`\n- `correctness/useValidTypeof` -> `suspicious/useValidTypeof`\n- `correctness/noArrayIndexKey` -> `suspicious/noArrayIndexKey`\n- `correctness/noCatchAssign` -> `suspicious/noCatchAssign`\n- `correctness/noDupeArgs` -> `suspicious/noDuplicateParameters`\n- `correctness/noFunctionAssign` -> `suspicious/noFunctionAssign`\n- `correctness/noImportAssign` -> `suspicious/noImportAssign`\n- `correctness/noLabelVar` -> `suspicious/noLabelVar`\n- `correctness/noRestrictedGlobals` -> `nursery/noRestrictedGlobals`\n- `nursery/noDupeKeys` -> `nursery/noDuplicateObjectKeys`\n\nIf you were not changing the severity level of any of these rules in your configuration file, or suppressing a diagnostic emitted by those rules using suppression comments, you do not have to do anything. But if you did, Rome will now emit diagnostics for the parts of your configuration or suppression comments you need to update.\n\nThe following rules are no longer recommended:\n- `style/noImplicitBoolean`\n- `style/noNegationElse`\n- `style/useBlockStatements`\n- `style/useShorthandArrayType`\n- `correctness/useSingleCaseStatement` / `style/useSingleCaseStatement`\n- `style/noShoutyConstants`\n\nThe styling decisions imposed by these rules were not deemed to be idiomatic enough in the JavaScript ecosystem to be enabled by default. If you do want to enforce those rules in your project, you will have to enable them manually in you configuration file:\n\n```json\n{\n  \"linter\": {\n    \"rules\": {\n        \"style\": {\n            \"useBlockStatements\": \"warn\"\n        }\n    }\n  }\n}\n```\n\nFinally, the following new rules have been introduced to the nursery group in this release:\n- [`nursery/noAccessKey`](https://docs.rome.tools/lint/rules/noAccessKey)\n- [`nursery/noConditionalAssignment`](https://docs.rome.tools/lint/rules/noConditionalAssignment)\n- [`nursery/noConstEnum`](https://docs.rome.tools/lint/rules/noConstEnum)\n- [`nursery/noConstructorReturn`](https://docs.rome.tools/lint/rules/noConstructorReturn)\n- [`nursery/noDistractingElements`](https://docs.rome.tools/lint/rules/noDistractingElements)\n- [`nursery/noDuplicateObjectKeys`](https://docs.rome.tools/lint/rules/noDuplicateObjectKeys)\n- [`nursery/noEmptyInterface`](https://docs.rome.tools/lint/rules/noEmptyInterface)\n- [`nursery/noExtraNonNullAssertion`](https://docs.rome.tools/lint/rules/noExtraNonNullAssertion)\n- [`nursery/noHeaderScope`](https://docs.rome.tools/lint/rules/noHeaderScope)\n- [`nursery/noNonNullAssertion`](https://docs.rome.tools/lint/rules/noNonNullAssertion)\n- [`nursery/noPrecisionLoss`](https://docs.rome.tools/lint/rules/noPrecisionLoss)\n- [`nursery/noRedundantUseStrict`](https://docs.rome.tools/lint/rules/noRedundantUseStrict)\n- [`nursery/noSetterReturn`](https://docs.rome.tools/lint/rules/noSetterReturn)\n- [`nursery/noStringCaseMismatch`](https://docs.rome.tools/lint/rules/noStringCaseMismatch)\n- [`nursery/noUnsafeFinally`](https://docs.rome.tools/lint/rules/noUnsafeFinally)\n- [`nursery/noVoidTypeReturn`](https://docs.rome.tools/lint/rules/noVoidTypeReturn)\n- [`nursery/useDefaultSwitchClauseLast`](https://docs.rome.tools/lint/rules/useDefaultSwitchClauseLast)\n- [`nursery/useNumericLiterals`](https://docs.rome.tools/lint/rules/useNumericLiterals)\n- [`nursery/useAriaPropTypes`](https://docs.rome.tools/lint/rules/useAriaPropTypes)\n- [`nursery/useAriaPropsForRole`](https://docs.rome.tools/lint/rules/useAriaPropsForRole)\n- [`nursery/noVar`](https://docs.rome.tools/lint/rules/noVar)\n- [`nursery/useConst`](https://docs.rome.tools/lint/rules/useConst)\n\nPlease give them a try by manually enabling them in your configuration and please share your feedback on the rule, diagnostics, and code fixes.\n\n### Parser\n\n- Added support for `JSON`;\n- Added support `satisfies` keyword;\n- Fixed parse for `async` used as label [#3612](https://github.com/rome/tools/issues/3612)\n- Fixed parse of `export default function` in `d.ts` files [#3485](https://github.com/rome/tools/issues/3485)\n- Improved the parsing of `await` in non-async contexts [#2479](https://github.com/rome/tools/issues/2479)\n\n### VSCode\n\n- Removed the \"preview\" label from the extension.\n- Improved logging when the extension can't connect to the server. [#3920](https://github.com/rome/tools/issues/3920)\n\n### JavaScript APIs\n\n#### Breaking change\n\n- The concept of `backend` has been removed, in favor of the concept of `distribution`.\n- Removed the possibility to connect to the daemon, for the time being.\n- The APIs are asynchronous anymore.\n\n#### Other changes\n\n- The package has been marked as unstable and in alpha state.\n\n## 10.0.1\n\n### CLI\n\n- Respect the formatter / linter `enabled` flag from configuration ([#3591](https://github.com/rome/tools/issues/3591))\n- Correctly account for diff diagnostics in the printed diagnostics count ([#3595](https://github.com/rome/tools/issues/3595))\n\n### Formatter\n\n- Do not insert a trailing comma in import expressions ([#3600](https://github.com/rome/tools/issues/3600))\n\n### Linter\n\n- Fixed false positives in [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/), [`noArrayIndexKey`](https://docs.rome.tools/lint/rules/noarrayindexkey/), [`noChildrenProp`](https://docs.rome.tools/lint/rules/nochildrenprop/), [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/), [`noVoidElementsWithChildren`](https://docs.rome.tools/lint/rules/novoidelementswithchildren/), [`noDangerouslySetInnerHtml`](https://docs.rome.tools/lint/rules/nodangerouslysetinnerhtml/), [`noDangerouslySetInnerHtmlWithChildren`](https://docs.rome.tools/lint/rules/nodangerouslysetinnerhtmlwithchildren/), `useValidAnchor`, [`noRenderReturnValue`](https://docs.rome.tools/lint/rules/norenderreturnvalue/), [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) and [`useKeyWithClickEvents`](https://docs.rome.tools/lint/rules/usekeywithclickevents/)\n([#3592](https://github.com/rome/tools/pull/3592), [#3619](https://github.com/rome/tools/pull/3619), [#3599](https://github.com/rome/tools/pull/3599), [#3626](https://github.com/rome/tools/pull/3626), [#3620](https://github.com/rome/tools/pull/3620) & [#3644](https://github.com/rome/tools/pull/3644))\n\n### Editors\n\n- Display the version of the language server in the status bar ([#3616](https://github.com/rome/tools/issues/3616))\n\n## 10.0.0\n\n### CLI\n\n- Added the new command `rome version`.\n- Added the new command `rome rage`.\n- Added the new command `rome lsp-proxy`.\n- Added the new option`--version` as an alias for `rome version`\n- Added a new argument `--files-max-size` to change the allowed size of files, in bytes.\n- Added a new argument `--formatter-enabled` to the command `rome ci`.\n- Added a new argument `--linter-enabled` to the command `rome ci`.\n- Added the new `format` option `--trailing-comma` to configure where to add trailing commas.\n- Correctly show the supported options for `rome ci`, closes [#3456](https://github.com/rome/tools/issues/3456).\n- Fixed the command `rome ci` command to run the linter even if the formatter is disabled, closes [#3495](https://github.com/rome/tools/issues/3495).\n- Fixed the messaging of some diagnostics, [#3460](https://github.com/rome/tools/pull/3460).\n\n### Configuration\n\n- Added `files.maxSize`, to change the allowed size of files, in bytes.\n\n### Diagnostics\n\n- Fix false positive for unknown lint rule in suppression comments during formatting [#3406](https://github.com/rome/tools/issues/3406).\n- Correctly handle empty lines when printing code diffs [#3375](https://github.com/rome/tools/issues/3375).\n\n\n### Formatter\n\n- Added the new trailing comma option that configures where to add trailing commas. Supports the values: `all`, `es5` and `none`; refer to the [documentation](https://rome.tools/docs/#javascriptformattertrailingcomma) to learn more.\n- Improved JSX formatting [#3499](https://github.com/rome/tools/issues/3499), [#3211](https://github.com/rome/tools/issues/3211), [#3377](https://github.com/rome/tools/issues/3377)\n- Better formatting of object destructing\n- Improved formatting of test calls\n- Fixed formatting of trailing comments in arrow functions\n\n### Linter\n\n- **BREAKING CHANGE**: some rules have been moved to new groups to better reflect their purpose. This may result in Rome failing to load your configuration or suppression comments that now refer to unknown rules. Please check out [#3471](https://github.com/rome/tools/pull/3471) to learn more about the affected rules.\n- Fixed issues in the [`noUnreachable`](https://docs.rome.tools/lint/rules/nounreachable/) rule\n- Fixed false positive cases for [`noNegationElse`](https://docs.rome.tools/lint/rules/nonegationelse/) [#3141](https://github.com/rome/tools/issues/3141)\n- Fixed false positive cases for [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3169](https://github.com/rome/tools/issues/3169)\n- Fixed an issue in our CFG [#3390](https://github.com/rome/tools/issues/3390)\n\n#### New rules\n\n- [`noAutoFocus`](https://rome.tools/docs/lint/rules/noAutoFocus/)\n- [`useAltText`](https://rome.tools/docs/lint/rules/useAltText/)\n- [`noBlankTarget`](https://rome.tools/docs/lint/rules/noBlankTarget/)\n- [`useAnchorContent`](https://rome.tools/docs/lint/rules/useAnchorContent/)\n- [`useKeyWithClickEvents`](https://rome.tools/docs/lint/rules/useKeyWithClickEvents/)\n- [`useKeyWithMouseEvents`](https://rome.tools/docs/lint/rules/useKeyWithMouseEvents/)\n- [`noPositiveTabIndex`](https://rome.tools/docs/lint/rules/noPositiveTabIndex/)\n- [`useValidAnchor`](https://rome.tools/docs/lint/rules/useValidAnchor/)\n- [`noRestrictedGlobals`](https://rome.tools/docs/lint/rules/noRestrictedGlobals/)\n- [`useSimplifiedBooleanExpression`](https://rome.tools/docs/lint/rules/useSimplifiedBooleanExpression/)\n- [`noInvalidConstructorSuper`](https://rome.tools/docs/lint/rules/noInvalidConstructorSuper/)\n- [`useValidForDirection`](https://rome.tools/docs/lint/rules/useValidForDirection/)\n- [`noConstAssign`](https://rome.tools/docs/lint/rules/noConstAssign/)\n- [`noExplicitAny`](https://rome.tools/docs/lint/rules/noExplicitAny/)\n- [`noBannedTypes`](https://rome.tools/docs/lint/rules/noBannedTypes/)\n- [`useMapFlat`](https://rome.tools/docs/lint/rules/useMapFlat/)\n- [`useExhaustiveDependencies`](https://rome.tools/docs/lint/rules/useExhaustiveDependencies/)\n\n### Parser\n\n- Improved messaging of diagnostics, using our new infrastructure\n- Fixed an issue where diagnostics couldn't be printed in WASM [#3349](https://github.com/rome/tools/pull/3349)\n- Allow arguments in d.ts files [#3388](https://github.com/rome/tools/issues/3388)\n- Fix parsing of less than in optional call chains [#3486](https://github.com/rome/tools/issues/3486)\n- Fixed a case where `export {\"a\"} from \"b\";` wasn't correctly parsed\n\n### VSCode\n\n- Make the \"rename\" command opt-in and use the VS Code provided \"rename\" feature that offers whole project renaming instead.\n- Added the new command `Restart LSP Server`\n- The LSP server is now able to listen to changes of `rome.json` and apply the new configuration\n\n\n\n## 0.10.1\n\n### CLI\n- Fixed a poor diagnostic that was emitted when navigating a symbolic symbol [#3329](https://github.com/rome/tools/issues/3329)\n- Added a size limit when inspecting files [#3330](https://github.com/rome/tools/issues/3330)\n\n### Diagnostics\n- Do not print tabs and spaces for unchanged lines [#3327](https://github.com/rome/tools/issues/3327)\n\n### VSCode\n- Fixed the calculation of text diffs inside the LSP [#3350](https://github.com/rome/tools/pull/3350)\n\n## 0.10.0\n\n### Core\n\n- Rome is now faster and uses less memory on macOS and Linux systems! [#3237](https://github.com/rome/tools/pull/3237)\n- We completely revamped our diagnostics! The new diagnostics allow us to give better information about the errors generated by Rome.\n- Greatly increased the performance of Rome's daemon, up to 300%! [#3151](https://github.com/rome/tools/pull/3151)\n\n### Configuration\n\nYou can now ignore folders and files using the Unix shell style patterns:\n\n```json\n{\n  \"formatter\": {\n    \"ignore\": [\"scripts/*.js\"]\n  },\n  \"linter\": {\n    \"ignore\": [\"src/**.test.{ts,js}\"]\n  }\n}\n```\n\n### Formatter\n\n- Completely revamped how the formatter handles comments and their placement inside the code [#3277](https://github.com/rome/tools/pull/3227)\n- Improved formatting of intersection and unions types [#3162](https://github.com/rome/tools/issues/3162)\n- Improved formatting of member chains [#3283](https://github.com/rome/tools/pull/3283)\n- Improved formatting of call arguments [#3290](https://github.com/rome/tools/pull/3290)\n\n### Linter\n\n- **BREAKING CHANGE**: This release changes the naming of the lint rule groups with the goal to make them language agnostic and avoid confusion among users and contributors.\nwere named after a language, and this caused confusion among users and contributors. Please\ncheck our [website](https://rome.tools/docs/lint/rules/) to know better about the new groups.\nThe new groups are heavily inspired from [`clippy`](https://github.com/rust-lang/rust-clippy#clippy)\n- Added a new group called `nursery`, this group incubates new rules that are being developed.\n- Added a new group called `style`, this group incubates rules that orbits around styling.\n- Added a new group called `correctness`, this group incubates rules that orbits catching possible bugs.\n- Fixed a code action for `useBlockStatements` [#3199](https://github.com/rome/tools/issues/3199)\n- Improved the rule `useCamelCase` [#3190](https://github.com/rome/tools/pull/3190) [#3210](https://github.com/rome/tools/pull/3210)\n- Fixed invalid code action for `useOptionalChain` [#3257](https://github.com/rome/tools/issues/3257)\n- Fixed bugs in [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3170](https://github.com/rome/tools/issues/3170), [#3316](https://github.com/rome/tools/pull/3316)\n\n#### New rules\n\n- [`useButtonType`](https://rome.tools/docs/lint/rules/useButtonType/)\n- [`noRenderReturnValue`](https://rome.tools/docs/lint/rules/noRenderReturnValue/)\n- [`noDangerouslySetInnerHtml`](https://rome.tools/docs/lint/rules/noDangerouslySetInnerHtml/)\n- [`useOptionalChain`](https://rome.tools/docs/lint/rules/useOptionalChain/)\n- [`useFragmentSyntax`](https://rome.tools/docs/lint/rules/useFragmentSyntax/)\n- [`noUselessFragments`](https://rome.tools/docs/lint/rules/noUselessFragments/)\n- [`noChildrenProp`](https://rome.tools/docs/lint/rules/noChildrenProp/)\n- [`noArrayIndexKey`](https://rome.tools/docs/lint/rules/noArrayIndexKey/)\n- [`noVoidElementsWithChildren`](https://rome.tools/docs/lint/rules/noVoidElementsWithChildren/)\n- [`noUndeclaredVariables`](https://rome.tools/docs/lint/rules/noUndeclaredVariables/)\n- [`noDangerouslySetInnerHtmlWithChildren`](https://rome.tools/docs/lint/rules/noDangerouslySetInnerHtmlWithChildren/)\n\n\n### Parser\n\n- Fixed an issue where the parser was _not_ emitting a diagnostic on a certain TypeScript syntax [#3115](https://github.com/rome/tools/issues/3115)\n\n### VSCode\n\n- The setting `lspBin` can be also expressed as **relative path**\n- The rules have been added to the configuration schema, allowing users to receive autocomplete\nwhen editing the `rome.json` for the [`rules`](https://rome.tools/#linterrulescorrectness) section\n\n\n## 0.9.2\n\n### CLI\n\n- Fixes an issue where arguments were not correctly picked up and applied to the formatter [#3175](https://github.com/rome/tools/issues/3175)\n\n## 0.9.1\n\n### CLI\n\n- Fixes a regression where the arguments passed via CLI were ignored [#3175](https://github.com/rome/tools/issues/3175)\n- Fixes a regression where the command `rome ci` was not correctly reading the configuration [#3167](https://github.com/rome/tools/issues/3167)\n\n### VSCode\n\n- Windows: fixes an issue where the extension could not load the configuration file [#3182](https://github.com/rome/tools/issues/3182)\n\n## 0.9.0\n\n### CLI\n\n- You can now format content from standard input when using the command `rome format`:\n```shell\necho \"function f() { return {} }\" | rome format --stdin-file-path example.js\n```\nthe argument  `--stdin-file-path` is mandatory when formatting from standard in. The path should represent a\nfile name with its extension.\n- Added `--apply-suggested` argument to the `rome check` command, to apply suggested and safe fixes.\nSuggested fixes should be considered **unstable** and applied with care.\n- Added the `rome start` and `rome stop` commands to control the Rome daemon server process.\n- Added the `--use-server` global flag to the command line to make the CLI connect to a running instance of the\nRome daemon server.\n\n### Configuration\n\n- **BREAKING CHANGE**: removed the second `\"rules\"` field from a field group.\n```diff\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"js\": {\n+        \"noDebugger\": \"off\"\n-        \"rules\": {\n-          \"noDebugger\": \"off\"\n-        },\n      }\n    }\n  }\n}\n```\n- fixed a problem that was incorrectly turning off rules in certain circumstances\n\n### Formatter\n\nSignificantly improved formatting and prettier compatibility of:\n\n* JSX [#3144](https://github.com/rome/tools/pull/3144)\n* Conditional expression and conditional types [#2427](https://github.com/rome/tools/issues/2427)\n* Function signatures [#2993](https://github.com/rome/tools/pull/2993), [#2990](https://github.com/rome/tools/pull/2990)\n* Return and throw statements [#2986](https://github.com/rome/tools/pull/2986)\n* Logical and binary expressions [#3079](https://github.com/rome/tools/pull/3079)\n* Templates [#3063](https://github.com/rome/tools/pull/3063)\n* Arrow expression chains [#3122](https://github.com/rome/tools/pull/3122)\n* Member expression assignments [#3061](https://github.com/rome/tools/pull/3061)\n* Array expressions [#3126](https://github.com/rome/tools/pull/3126)\n* Parenthesized expressions and types, including inserting parentheses to improve readability [#3057](https://github.com/rome/tools/pull/3057), [#3083](https://github.com/rome/tools/pull/3083), [#3108](https://github.com/rome/tools/pull/3108)\n* Doc comments [#3129](https://github.com/rome/tools/pull/3129)\n\n### Linter\n\n- Changed the default severity for recommended rules to \"error\". You can [change the severity in the rome.json](https://rome.tools/#configure-a-rule).\n- Added [`js/noExtraBooleanCast`](https://rome.tools/docs/lint/rules/noExtraBooleanCast/) lint rule.\n- Added [`js/noDupeArgs`](https://rome.tools/docs/lint/rules/noDupeArgs/) lint rule.\n- Added [`js/noShadowRestrictedNames`](https://rome.tools/docs/lint/rules/noShadowRestrictedNames/) lint rule.\n- Added `js/inlineVariable` code action.\n- Applied various stability fixes to the rule [`js/noUnusedVariables`](https://rome.tools/docs/lint/rules/noUnusedVariables/). [#3124](https://github.com/rome/tools/pull/3124) [#3060](https://github.com/rome/tools/pull/3060) [#3004](https://github.com/rome/tools/pull/3004)\n- Fixed how the suggestion is applied [`js/noNegationElse`](https://rome.tools/docs/lint/rules/noNegationElse/). [#2999](https://github.com/rome/tools/issues/2999)\n- Fixed a false positive in the rule [`js/noShoutyConstants`](https://rome.tools/docs/lint/rules/noShoutyConstants/). [#3077](https://github.com/rome/tools/issues/3077)\n- Fixed a false positive in the rule [`ts/useShorthandArrayType`](https://rome.tools/docs/lint/rules/useShorthandArrayType/). [#3111](https://github.com/rome/tools/issues/3111)\n\n### VSCode\n\n- fixed an issue where it wasn't possible to format newly created files [3006](https://github.com/rome/tools/issues/3006)\n- added a status bar [3139](https://github.com/rome/tools/pull/3139)\n\n## 0.8.0\n\n### CLI\n\n- Added `--max-diagnostics` argument to the command `rome check`.\n- The maximum number of diagnostics printed is now 20, use `--max-diagnostics` to change the default.\n- Added a new command `rome init`.\n\n### Configuration\n\n- You can create a configuration file called `rome.json` to customize Rome's default options.\nThis will work from both CLI and LSP.\n\n### Formatter\n\n- You can now use the configuration file `rome.json` to change Rome's defaults:\n\n  Example:\n  ```json\n  {\n    \"root\": true,\n    \"formatter\": {\n      \"indentStyle\": \"space\"\n    }\n  }\n  ```\n- Fixed some edge cases where the comment suppressions were not working as expected.\n\n### Linter\n\nThe linter is now marked as \"alpha\" and it can be used to lint code from the CLI and\nfrom the LSP.\n\n\n### VSCode\n\n- **BREAKING CHANGE**: Removed the majority of settings that were available in the extension, use the\nconfiguration file `rome.json` to change the Rome's defaults.\n- The extension now allows to rename variables;\n\n## 0.7.0\n\n### CLI\n\n- Added `--no-colors` argument.\n\n### Formatter\n\n- JSX and TSX are now formatted by default! Make sure to enable Rome as default formatter in the VSCode extension.\n- Improved the consistency of formatting of various statements:\n  - call arguments;\n  - object property members;\n  - variable declarations;\n  - object patterns;\n  - class property members;\n- Fixed a bunch of issues in the TypeScript formatting.\n\n### Linter\n\n- Added the new `--apply` argument to the `rome check` command;\n- New rules added to the linter, check the [website](https://rome.tools/docs/lint/rules/);\n\n## 0.6.1\n\nFixes a regression introduced in the `rome format` command ([#2670](https://github.com/rome/tools/issues/2670))\n\n## 0.6.0\n\n### Formatter\n\n- BREAKING CHANGES: the command `rome format --ci` has been removed, use `rome ci` instead.\n\n#### Improved the compatibility with Prettier (check [#2403](https://github.com/rome/tools/issues/2403) for more details)\n\n- TypeScript's formatting is better in line with what Prettier does.\n- Better formatting of string literals.\nRemoving unnecessary quotes in string literals and quotes from member names.\nCorrectly choose the correct quote based on quantity of quotes inside a literal:\n  ```js\n  // original code\n  let a = {\n    \"something\": 3\n  }\n  let b = \"cool isn\\'t it\";\n  let c = \"\\\"content\\\" ' \";\n\n  // formatted code\n  let a = {\n    something: 3\n  }\n  let b = \"cool isn't it\";\n  let c = '\"content\" \\' ';\n  ```\n- Better formatting of various statements\n- Improved the performance of the formatter an average of 20%-30%! Check the relevant\nPRs [1](https://github.com/rome/tools/pull/2456), [2](https://github.com/rome/tools/pull/2638), [3](https://github.com/rome/tools/pull/2612), [4](https://github.com/rome/tools/pull/2462), [5](https://github.com/rome/tools/pull/2634) if you're interested in what the team did.\n\nTo reach better compatibility with Prettier, the team had to revise the foundation of our printer,\nwhich caused some regressions around how comments are printed. These are known issues that we\nplan to close by next release.\n\n### Linter\n\nWe've built the foundation of our linter. At the moment is only opt-in, and it contains\nonly a bunch of rules. **Safe fixes are not enabled yet via CLI**.\n\nRefer to the [website](https://rome.tools/#linter) to learn how to start using it.\n\n## 0.5.0\n\n- BREAKING CHANGES: the `format` command doesn't write on disk by default. Now the command prints on terminal.\n\n    **Migration**: add the `--write` argument when calling `rome format`\n\n    ```shell\n    rome format --write\n    ```\n\n- Added a new option called `--quote-style` to the formatter. This option is also available on VSCode.\n\n## 0.4.0\n\nRome has been [rewritten in Rust](https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust)!\n\nThe great majority of the previous functionality won't work anymore, as we rewrote the whole software\nfrom scratch.\n\nRome, for now, exposes a new formatter that has been revisited and, is way faster compared to its former version!\n\nTo install it, use the `next` tag on `npm`:\n\n```shell\nnpm i rome@next\n```\n\nOr follow our [getting started](https://rome.tools/#getting-started) section for more details.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.67578125,
          "content": "# Contributor Covenant Code of Conduct\n\n**Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<conduct@rome.tools>.**\n\nThe following people have access to the above email address:\n\n- Sebastian McKenzie <sebmck@gmail.com> [GitHub](https://github.com/sebmck) [Twitter](https://twitter.com/sebmck)\n\nIn the event that your report includes one of the people mentioned above please\nfeel free to reach out to one of the other people listed instead.\n\nFollowed is an unmodified [Contributor Covenant Code of Conduct 2.0](https://www.contributor-covenant.org/).\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<conduct@rome.tools>.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.9794921875,
          "content": "# Contributing\n\nWe can use help in a bunch of areas and any help is appreciated. Our [GitHub issues](https://github.com/rome/tools/issues) serve as a place for any discussion, whether it's bug reports, questions, project direction etc. As the project grows this policy may change.\n\nOur [Discord server](https://discord.gg/rome) is open for help and more adhoc discussion. All activity on the Discord is still moderated and will be strictly enforced under the project's [Code of Conduct](./CODE_OF_CONDUCT.md).\n\n## Getting Started\n\nBuilding this project requires a `stable` Rust toolchain, which can be installed using [rustup](https://www.rust-lang.org/tools/install).\n\nClone the repository and navigate to the `tools` directory:\n```bash\ngit clone https://github.com/rome/tools\ncd tools\n```\nCompile all packages and dependencies:\n```bash\ncargo build\n```\nRome can be used via the `rome` bin in the `rome_cli` package:\n```bash\ncargo run --bin rome -- --help\n```\n\n## Install the required tools\n\nWe use [Just](https://just.systems/man/en/) to run scripts or tasks, to make our\nlife easier.\n\nYou can install `just` using cargo:\n\n```shell\ncargo install just\n```\n\nBut we **highly recommend** to [install it using an OS package manager](https://github.com/casey/just#packages),\nso you won't need to prefix the every command with `cargo`.\n\nOnce installed, run the following command install the required tools:\n\n```shell\njust install-tools\n```\n\nAnd you're good to go hack with Rome and Rust! ðŸš€\n\n## Testing\n\nTo run the tests, just run\n\n```shell\njust test\n```\n\nIf you want to test the tests for a single crate:\n\n```shell\njust test-crate rome_cli\n```\n\nIf you to run only the doctests, you would need to pass an argument to the command:\n```shell\njus test-doc\n```\n\nIn some crates, we use snapshot testing. The majority of snapshot testing is done using [`insta`](https://insta.rs).\n`insta` is already installed by the command `just install-tools`.\n\nWhen a snapshot test fails, you can run:\n- `cargo insta accept` to accept all the changes and update all the snapshots;\n- `cargo insta reject` to reject all the changes;\n- `cargo insta review` to review snapshots singularly;\n\n## Checks\n\nWhen you finished your work, and you are ready to **commit and open a PR**,\nrun the following command:\n\n```shell\njust ready\n```\n\nThis command will run the same commands of the CI: format, lint, tests and code generation.\nEventually everything should be \"green\" ðŸŸ¢ and commit all the code that was\ngenerated.\n\n## Language Server and VS Code Extension Development\n\nThe Rome language server is the binary crate `rome` which can be built using the command:\n\n```bash\ncargo build --bin rome\n```\nIf benchmarking the language server, be sure to build with the `--release` flag.\n\nThe VS Code extension can be installed from the [Marketplace](https://marketplace.visualstudio.com/items?itemName=rome.rome) and can be used with a development build of the language server by setting the `\"rome.lspBin\"` VS Code setting to the path of the binary:\n\n```json\n{\n  \"rome.lspBin\": \"/path/to/rome/target/debug/rome\"\n}\n```\n\nPlease note that Windows disallows modifying an executable while it's running,\nmeaning you won't be able to recompile the Rome binary once the extension was activated in your editor.\n\nThe server is spawned as a background daemon, and continues to run even after the editor is closed.\n\nTo stop the running daemon instance use the `rome stop` command, with the editor closed as the extension\nwill try to restart it otherwise.\n\nTo build the VS Code extension from source, navigate to the `editors/vscode` directory and run:\n\n```bash\nnpm install\nnpm run build\n```\n\nThis will create a `rome_lsp.vsix` which you can install into VS Code by running:\n\n```bash\nnpm run install-extension\n```\n\nThe `\"rome.lspBin\"` VS Code setting will still need to be set as described above.\n\nWhen the extension is running, it will connect to a daemon server - or it will bootstrap one.\n\nWhen you apply changes to the binary, you need to do two things:\n- compile the binary\n- kill the daemon process, so you can spawn a new server session\nwith the new changes\n\nWhen the daemon is running, it's possible to inspect its logs in the folder `rome-logs`, placed\nin the temporary folder of the operative system.\n\n\n### User files\n\nIf files specific to your local development environment should be ignored, please add these files to a global git ignore file rather than to a git ignore file within Rome.\n\nYou can find more information on this process [here](https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer).\n\n## Node.js development\n\nThe npm module npm/rome contains Rome's Node JS API that supports different backends:\n- `wasm-nodejs` (WebAssembly)\n- `backend-jsonrpc` (Connection to the daemon)\n\nFor testing and developing, you need to build these packages, following the steps:\n1. install [wasm-pack](https://rustwasm.github.io/wasm-pack/installer/) globally;\n2. run the `build` command inside the package `backend-jsonrpc`;\n3. run the `build` and `build:wasm-node-dev` commands inside the package `js-api` (folder `npm/js-api`);\n4. run `pnpm i` inside the package `js-api` (folder `npm/js-api`), this will link the WebAssembly bindings and the\nJSON-RPC bindings;\n\nThe tests are run against the compiled files, which means that you need to run the\n`build` command after you implemented features/bug fixes.\n\n## Website\n\nThe [Rome website](https://rome.tools/) is built with [Astro](https://astro.build). To start a development server you can run the following commands:\n\n```bash\ncd website\npnpm install\npnpm start\n```\n\n### Generated files\n\nIf you work on some parser and you create new nodes or modify existing ones, will need to run a command to update some files that are auto-generated.\n\n#### `cargo codegen grammar`\n\nThis command will update the syntax of the parsers.\n\nThe source is generated from the [`ungram` files](https://github.com/rome/tools/blob/main/xtask/codegen/js.ungram).\n\n#### `cargo codegen test`\n\n\nThis command will create new tests for your parser. We currently have a neat infrastructure\nwhere tests for parser are generated com inline comments found inside\nthe source code. Please read [the proper chapter for more information](#write-tests-for-a-parser)\n\nIt's strongly advised to **run this command before committing new changes**.\n\n#### `cargo codegen analyzer`\n\nThis command will detect linter rules declared in the `analyzers` and `assists` directories in `rome_analyze`, regenerate the index modules `analyzers.rs` and `assists.rs` to import these files, and update the registry builder function in `registry.rs` to include all these rules.\nIt will also regenerate the configuration of the rules.\n\n#### `cargo coverage`\n\nThis command will check and report parser conformance against different test suites.\nWe currently target the [Official ECMAScript Conformance Test Suite](https://github.com/tc39/test262) and\nthe [Typescript Test Suite](https://github.com/microsoft/TypeScript/tree/main/tests)\n\nThe test suites are included as git submodules and can be pulled using:\n```bash\ngit submodule update --init --recursive\n```\n\n## Commit messages\n\nInternally, the Rome team adheres as closely as possible to the [conventional commit specification](https://www.conventionalcommits.org/en/v1.0.0-beta.2/).\nThe following this convention encourages commit best-practices and facilitates commit-powered features like change log generation.\n\nThe following commit prefixes are supported:\n\n- `feat:`, a new feature\n- `fix:`, a bugfix\n- `docs:`, a documentation update\n- `test:`, a test update\n- `chore:`, project housekeeping\n- `perf:`, project performance\n- `refactor:`, refactor of the code without change in functionality\n\nBelow are examples of well-formatted commits:\n\n```\nfeat(compiler): implement parsing for new type of files\nfix: fix nasty unhandled error\ndocs: fix link to website page\ntest(lint): add more cases to handle invalid rules\n```\n\n### Creating pull requests\n\nWhen creating a new pull request, it's preferable to use a conventional commit-formatted title, as this title will be used as the default commit message on the squashed commit after merging.\n\nPlease use the template provided.\n\n#### Changelog\n\nIf the PR you're about to open is a bugfix/feature around Rome, you can add a new line to the `CHANGELOG.md`, but it's not mandatory.\n\nAt the top of the file you will see a `[Unreleased]` section. The headings divide the sections by \"feature\", make sure\nto add a new bullet point.\n\nHere's a sample of the headings:\n\n```markdown\n## [Unreleased]\n\n### CLI\n### Configuration\n### Editors\n### Formatter\n### Linter\n### Parser\n### VSCode\n### JavaScript APIs\n```\n\nWhen you edit a blank section:\n\n- If your PR adds a **breaking change**, create a new heading called `#### BREAKING CHANGES` and add\nbullet point that explains the breaking changes; provide a migration path if possible.\n- If your PR adds a new feature of a fix, create a new heading called `#### Other changes` and\nadd a bullet point that explains the fix or the new feature. Make sure that this new heading\nappears after the `#### BREAKING CHANGES` heading.\n\n##### Writing a changelog line\n\n- Use the present tense, e.g. \"Add new feature\", \"Fix edge case\".\n- If you fix a bug, please add the link to the issue, e.g. \"Fix edge case [#4444]()\".\n- Whenever applicable, add a code block to show your new changes. For example, for a new\nrule you might want to show an invalid case, for the formatter you might want to show\nhow the new formatting changes, and so on.\n\n#### Documentation\n\nIf your PR requires some update on the website (new features, breaking changes, etc.), you should create a new PR once the previous PR is successfully merged.\nWhen adding new features, the documentation should be part of a new PR, which will be merged right before the release.\n\n#### Magic comments\n\n- `!bench_parser` benchmarks the parser's runtime performance and writes a comment with the results;\n- `!bench_formatter` benchmarks the formatter runtime performance and writes a comment with the results;\n- `!bench_analyzer` benchmarks the analyzer runtime performance and writes a comment with the results;\n\n### Analyzers and lint rules\n\nTo know the technical details of how our analyzer works, how to create a rule and how to write tests, please check our [internal\ndocumentation page](https://rustdocs.rome.tools/rome_analyze/index.html)\n\n### JavaScript Parser\n\nTo know the technical details of how our JavaScript works and how to write test, please check our [internal\ndocumentation page](https://rustdocs.rome.tools/rome_js_parser/index.html)\n\n### Formatter\n\nTo know the technical details of how our formatter works and how to write test, please check our [internal\ndocumentation page](https://rustdocs.rome.tools/rome_js_formatter/index.html)\n\n### Versioning\n\nWe follow the specs suggested by [the official documentation](https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions):\n\nOdd minor versions are dedicated to pre-releases, e.g. `*.5.*` .\nEven minor versions are dedicated to official releases, e.g. `*.6.*`.\n\n### Playground\n\n- [run the playground locally](/website/playground/README.md)\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 78.23046875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a76fd60b23679b7d19bd066031410fb7e458ccc5e958eb5c325888ce4baedc97\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"ansi_rgb\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a730095eb14ee842a0f1e68504b85c8d4a19b1ef2ac2a9b4debf0ed982f9b08a\"\ndependencies = [\n \"rgb\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"224afbd727c3d6e4b90103ece64b8d1b67fbb1973b1046c2281eed3f3803f800\"\n\n[[package]]\nname = \"ascii_table\"\nversion = \"4.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75054ce561491263d7b80dc2f6f6c6f8cdfd0c7a7c17c5cf3b8117829fa72ae1\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b84f9ebcc6c1f5b8cb160f6990096a5c127f423fcb6e1ccc46c370cbdfb75dfc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"auto_impl\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a8c1df849285fbacd587de7818cc7d13be6cd2cbcd47a04fb1801b0e2706e33\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"233d376d6d185f2a3093e58f283f60f880315b6c60075b01f36b3b85154564ca\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\"\n\n[[package]]\nname = \"basic-toml\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c0de75129aa8d0cceaf750b89013f0e08804d6ec61416da787b35ad0d7cddf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"630be753d4e58660abd17930c71b647fe46c27ea6b63cc59e1e3851406972e42\"\n\n[[package]]\nname = \"bpaf\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"affa4185035a12636b90d7064d64fff3cca6ff5a2f65c3325a7eef0da2f272bb\"\ndependencies = [\n \"bpaf_derive\",\n]\n\n[[package]]\nname = \"bpaf_derive\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac88f5e10b620a207805c5a6f538a7777dc55e5469bbc0eec27e2bf75d5ee0f6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.15\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\ndependencies = [\n \"lazy_static\",\n \"memchr\",\n \"regex-automata\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ffdb39cb703212f3c11973452c2861b972f757b021158f3516ba10f2fa8b2c1\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d261e256854913907f67ed06efbc3338dfe6179796deefc1ff763fc1aee5535\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17febce684fd15d89027105661fec94afb475cb995fbc59d2865198446ba2eea\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b2fd2a0dcf38d7971e2194b6b6eebab45ae01067456a7fd93d5547a61b70be\"\n\n[[package]]\nname = \"case\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd6c0e7b807d60291f42f33f58480c0bfafe28ed08286446f45e463728cf9c1c\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f\"\ndependencies = [\n \"jobserver\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0c137568cc60b904a7724001b35ce2630fd00d5d84805fbb608ab89509d788f\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"346de753af073cc87b52b2083a506b38ac176a44cfb05497b622e27be899b369\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213030a2b5a4e0c0892b6652260cf6ccac84827b83a85a534e178e3906c4cf1b\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"3.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71655c45cb9845d3270c9d6df84ebe72b4dad3c2ba3f7023ad47c144e4e473a5\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"clap_lex\",\n \"indexmap\",\n \"textwrap\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5\"\ndependencies = [\n \"os_str_bytes\",\n]\n\n[[package]]\nname = \"colored\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3616f750b84d8f0de8a58bda93e08e2a81ad3f523089b05f1dffecab48c6cbd\"\ndependencies = [\n \"atty\",\n \"lazy_static\",\n \"winapi\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3d79fbe8970a77e3e34151cc13d3b3e248aa0faaecb9f6091fa07ebefe5ad60\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"unicode-width\",\n \"windows-sys 0.42.0\",\n]\n\n[[package]]\nname = \"console_error_panic_hook\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06aeb73f470f66dcdbf7223caeebb85984942f22f1adb2a088cf9668146bbbc\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"countme\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7704b5fdd17b18ae31c4c1da5a2e0305a2bf17b5249300a9ee9ed7b72114c636\"\ndependencies = [\n \"dashmap\",\n \"once_cell\",\n \"rustc-hash\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7c76e09c1aae2bc52b3d2f29e13c6572553b30c4aa1b8a49fd70de6412654cb\"\ndependencies = [\n \"anes\",\n \"atty\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"itertools\",\n \"lazy_static\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2801af0d36612ae591caa9568261fddce32ce6e08a7275ea334a06a4ad021a2c\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-epoch\",\n \"crossbeam-queue\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf2b3e8478797446514c91ef04bafcb59faba183e621ad488df88983cc14128c\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46bd5f3f85273295a9d14aedfb86f6aadbff6d8f5295c4a9edb08e819dcf5695\"\ndependencies = [\n \"autocfg\",\n \"cfg-if\",\n \"crossbeam-utils\",\n \"memoffset\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1cfb3ea8a53f37c40dea2c7bedcbd88bdfae54f5e2175d6ecaff1c988353add\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c063cd8cc95f5c377ed0d4b49a4b21f632396ff690e8470c29b3359b346984b\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"cuckoofilter\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b810a8449931679f64cd7eef1bbd0fa315801b6d5d9cdc1ace2804d6529eee18\"\ndependencies = [\n \"byteorder\",\n \"fnv\",\n \"rand 0.7.3\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"5.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"907076dfda823b0b36d2a1bb5f90c96660a5bbcd7729e10727f07858f22c4edc\"\ndependencies = [\n \"cfg-if\",\n \"hashbrown\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"dhat\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f2aaf837aaf456f6706cb46386ba8dffd4013a757e36f4ea05c20dd46b209a3\"\ndependencies = [\n \"backtrace\",\n \"lazy_static\",\n \"mintex\",\n \"parking_lot\",\n \"rustc-hash\",\n \"serde\",\n \"serde_json\",\n \"thousands\",\n]\n\n[[package]]\nname = \"dissimilar\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"210ec60ae7d710bed8683e333e9d2855a8a56a3e9892b38bad3bb0d4d29b0d5e\"\n\n[[package]]\nname = \"drop_bomb\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bda8e21c04aca2ae33ffc2fd8c23134f3cac46db123ba97bd9d3f3b8a4a85e1\"\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b0cf012f1230e43cd00ebb729c6bb58707ecfa8ad08b52ef3a4ccd2697fc30\"\n\n[[package]]\nname = \"either\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcaabb2fef8c910e7f4c7ce9f67a1283a1715879a7c230ca9d6d1ae31f16d91\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a19187fea3ac7e84da7dacf48de0c45d63c6a76f9490dae389aead16c243fce3\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f639046355ee4f37944e44f60642c6f3a7efa3cf6b78c78a0d989a8ce6c396a1\"\ndependencies = [\n \"errno-dragonfly\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"errno-dragonfly\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"expect-test\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d9eafeadd538e68fb28016364c9732d78e420b9ff8853fa5e4058861e9f8d3\"\ndependencies = [\n \"dissimilar\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fastbloom-rs\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03b67402145d0427ea3637c28fcdba7291aba2cdf88d51a316b685dcf41b8ab8\"\ndependencies = [\n \"cuckoofilter\",\n \"fastmurmur3\",\n \"xorfilter-rs\",\n]\n\n[[package]]\nname = \"fastmurmur3\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d922f481ae01f2a3f1fff7b9e0e789f18f0c755a38ec983a3e6f37762cdcc2a2\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be\"\ndependencies = [\n \"instant\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a3de6e8d11b22ff9edc6d916f890800597d60f8b2da1caf2955c274638d6412\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8a2db397cb1c8772f31494cb8917e48cd1e64f0fa7efac59fbd741a0a8ce841\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"flume\"\nversion = \"0.10.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577\"\ndependencies = [\n \"spin 0.9.5\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9c384f161156f5260c24a097c56119f9be8c798586aecc13afbcbe7b7e26bf8\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"fst\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ab85b9b05e3978cc9a9cf8fea7f01b494e1a09ed3037e16ba39edc7a29eb61a\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13e2792b0ff0340399d58445b88fd9770e3489eff258a4cbc1523418f12abf84\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e5317663a9089767a1ec00a487df42e0ca174b61b4483213ac24448e4664df5\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec90ff4d0fe1f57d600049061dc6bb68ed03c7d2fbd697274c41805dcb3f8608\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8de0a35a6ab97ec8869e32a2473f4b1324459e14c29275d14b10cb1fd19b50e\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfb8371b6fb2aeb2d280374607aeabfc99d95c72edfe51692e42d3d7f0d08531\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95a73af87da33b5acf53acfebdc339fe592ecf5357ac7c0a7734ab9d8c876a70\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f310820bb3e8cfd46c80db4d7fb8353e15dfff853a127158425f31e0be6c8364\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcf79a1bf610b10f42aea489289c5a2c478a786509693b80cd39c44ccd936366\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c1d6de3acfef38d2be4b1f543f553131788603495be83da675e180c8d6b7bd1\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi 0.9.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c05aeb6a22b8f62540c194aac980f2115af067bfe15a0734d7277a768d396b31\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.27.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0a93d233ebf96623465aad4046a8d3aa4da22d4f4beba5388838c8a434bbb4\"\n\n[[package]]\nname = \"git2\"\nversion = \"0.17.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b7905cdfe33d31a88bb2e8419ddd054451f5432d1da9eaf2ac7804ee1ea12d5\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"libgit2-sys\",\n \"log\",\n \"url\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"029d74589adefde59de1a0c4f4732695c32805624aec7b68d91503d4dba79afc\"\ndependencies = [\n \"aho-corasick\",\n \"bstr 1.3.0\",\n \"fnv\",\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93e3af942408868f6934a7b85134a3230832b9977cf66125df2f9edcfce4ddcc\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hdrhistogram\"\nversion = \"7.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f19b9f54f7c7f55e31401bb647626ce0cf0f67b0004982ce815b3ee72a02aa8\"\ndependencies = [\n \"byteorder\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee512640fe35acbfb4bb779db6f0d80704c2cacfa2e39b601ef3e3f47d1ae4c7\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"html-escape\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d1ad449764d627e22bfd7cd5e8868264fc9236e07c752972b4080cd351cb476\"\ndependencies = [\n \"utf8-width\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\"\n\n[[package]]\nname = \"humansize\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6cb51c9a029ddc91b07a787f1d86b53ccfa49b0e86688c946ebe8d3555685dd7\"\ndependencies = [\n \"libm\",\n]\n\n[[package]]\nname = \"iai\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71a816c97c42258aa5834d07590b718b4c9a598944cd39a52dc25b351185d678\"\n\n[[package]]\nname = \"idna\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e14ddfc70884202db2244c223200c204c2bda1bc6e0998d11b5e024d657209e6\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbe7873dab538a9a44ad79ede1faf5f30d49f9a5c883ddbab48bce81b64b7492\"\ndependencies = [\n \"globset\",\n \"lazy_static\",\n \"log\",\n \"memchr\",\n \"regex\",\n \"same-file\",\n \"thread_local\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown\",\n \"serde\",\n]\n\n[[package]]\nname = \"indicatif\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef509aa9bc73864d6756f0d34d35504af3cf0844373afe9b8669a5b8005a729\"\ndependencies = [\n \"console\",\n \"number_prefix\",\n \"portable-atomic\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.30.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28491f7753051e5704d4d0ae7860d45fae3238d7d235bc4289dcd45c48d3cec3\"\ndependencies = [\n \"console\",\n \"globset\",\n \"lazy_static\",\n \"linked-hash-map\",\n \"similar\",\n \"walkdir\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfa919a82ea574332e2de6e74b4c36e74d41982b335080fa59d4ef31be20fdf3\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"453ad9f582a441959e5f0d088b02ce04cfe8d51a8eaf077f12ac6d3e94164ca6\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"936cfd212a0155903bcbc060e316fb6cc7cbf2e1907329391ebadc1fe0ce77c2\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445dde2150c55e483f3d8416706b97ec8e8237c307e5b7b4b8dd15e6af2a0730\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"json_comments\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41ee439ee368ba4a77ac70d04f14015415af8600d6c894dc1f11bd79758c57d5\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.139\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"201de327520df007757c1f0adce6e827fe8562fbc28bfd9c15571c66ca1f5f79\"\n\n[[package]]\nname = \"libgit2-sys\"\nversion = \"0.15.1+1.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb4577bde8cdfc7d6a2a4bcb7b049598597de33ffd337276e9c7db6cd4a2cee7\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"348108ab3fba42ec82ff6e9564fc4ca0247bdccdc68dd8af9764bbc79c3c8ffb\"\n\n[[package]]\nname = \"libmimalloc-sys\"\nversion = \"0.1.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd8c7cbf8b89019683667e347572e6d55a7df7ea36b0c4ce69961b0cde67b174\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9702761c3935f8cc2f101793272e202c72b99da8f4224a19ddcf1279a6450bbf\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f051f77a7c8e6957c0696eac88f26b0117e54f52d3fc682ab19397a8812846a4\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"435011366fe56583b16cf956f9df0095b405b82d76425bc8981c0e22e60ec4df\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"lsp-types\"\nversion = \"0.94.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b63735a13a1f9cd4f4835223d828ed9c2e35c8c5e61837774399f558b6a1237\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"serde\",\n \"serde_json\",\n \"serde_repr\",\n \"url\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d61c719bcfbcf5d62b3a09efa6088de8c54bc0bfcd3ea7ae39fcc186108b8de1\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mimalloc\"\nversion = \"0.1.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dcb174b18635f7561a0c6c9fc2ce57218ac7523cf72c50af80e2d79ab8f3ba1\"\ndependencies = [\n \"libmimalloc-sys\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mintex\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd7c5ba1c3b5a23418d7bbf98c71c3d4946a0125002129231da8d6b723d559cb\"\ndependencies = [\n \"once_cell\",\n \"sys-info\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b9d9a46eff5b4ff64b45a9e316a6d1e0bc719ef429cbec4dc630684212bfdf9\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"natord\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308d96db8debc727c3fd9744aac51751243420e46edf401010908da7f8d5e57c\"\n\n[[package]]\nname = \"new_debug_unreachable\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54\"\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fac9e2da13b5eb447a6ce3d392f23a29d8694bff781bf03a16cd9ac8697593b\"\ndependencies = [\n \"hermit-abi 0.2.6\",\n \"libc\",\n]\n\n[[package]]\nname = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"object\"\nversion = \"0.30.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea86265d3d3dcb6a27fc51bd29a4bf387fae9d2986b823079d4986af253eb439\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.17.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7e5500299e16ebb147ae15a00a942af264cf3688f47923b8fc2cd5858f23ad3\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"os_str_bytes\"\nversion = \"6.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b7820b9daea5457c9f21c69448905d723fbd21136ccf521748f23fd49e723ee\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9069cbb9f99e3a5083476ccb29ceb1de18b9118cafa53e90c9551235de2b9521\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"478c572c3d73181ff3c2539045f6eb99e5491218eae919370993b890cdbdd98e\"\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad29a609b6bcd67fee905812e544992d216af9d755757c05ed2d0e15a74c6ecc\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"069bdb1e05adc7a8990dce9cc75370895fbe4e3d58b9b73bf1aee56359344a55\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0a7ae3ac2f1173085d398531c705756c94a4c56843785df85a60c1a0afac116\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ac9a59f73473f1b8d852421e59e64809f025994837ef743615c6d0c5b305160\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2538b639e642295546c50fcd545198c9d64ee2a38620a628724a3b266d5fbf97\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"193228616381fecdc1224c62e96946dfbc73ff4384fba576e052ff8c1bea8142\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a81d2759aae1dae668f783c308bc5c8ebd191ff4184aaa1b37f65a6ae5a56f\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26f6a7b87c2e435a3241addceeeff740ff8b7e76b74c13bf9acb17fa454ea00b\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b368fba921b0dce7e60f5e04ec15e565b3303972b42bcfde1d0713b881959eb\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proptest\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29f1b898011ce9595050a68e60f90bad083ff2987a695a42357134c8381fba70\"\ndependencies = [\n \"bit-set\",\n \"bitflags 1.3.2\",\n \"byteorder\",\n \"lazy_static\",\n \"num-traits\",\n \"quick-error 2.0.1\",\n \"rand 0.8.5\",\n \"rand_chacha 0.3.1\",\n \"rand_xorshift\",\n \"regex-syntax\",\n \"rusty-fork\",\n \"tempfile\",\n \"unarray\",\n]\n\n[[package]]\nname = \"pulldown-cmark\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d9cc634bc78768157b5cbfe988ffcd1dcba95cd2b2f03a88316c08c6d00ed63\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"memchr\",\n \"unicase\",\n]\n\n[[package]]\nname = \"qp-trie\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9569328cda9b68120dbbf855bac541eeb40c475d96a9a380cf8b5547bfe0c165\"\ndependencies = [\n \"new_debug_unreachable\",\n \"unreachable\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quick-error\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3\"\n\n[[package]]\nname = \"quickcheck\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"588f6378e4dd99458b60ec275b4477add41ce4fa9f64dcba6f15adccb19b50d6\"\ndependencies = [\n \"env_logger\",\n \"log\",\n \"rand 0.8.5\",\n]\n\n[[package]]\nname = \"quickcheck_macros\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b22a693222d716a9587786f37ac3f6b4faedb5b80c23914e7303ff5a1d8016e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03\"\ndependencies = [\n \"getrandom 0.1.16\",\n \"libc\",\n \"rand_chacha 0.2.2\",\n \"rand_core 0.5.1\",\n \"rand_hc\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha 0.3.1\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19\"\ndependencies = [\n \"getrandom 0.1.16\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom 0.2.8\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c\"\ndependencies = [\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rand_xorshift\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f\"\ndependencies = [\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d2df5196e37bcc87abebc0053e20787d73847bb33134a69841207dd0a47f03b\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b8f95bd6966f5c87776639160a66bd8ab9895d9d4ab01ddba9fc60661aebe8d\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n \"num_cpus\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48aaa5748ba571fb95cd2c85c09f629215d3a6ece942baa100950af03a34f733\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"456c603be3e8d448b072f410900c09faf164fbce2d480456f50eea6e25f9c848\"\n\n[[package]]\nname = \"retain_mut\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c31b5c4033f8fdde8700e4657be2c497e7288f01515be52168c631e2e4d4086\"\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20ec2d3e3fc7a92ced357df9cebd5a10b6fb2aa1ee797bf7e9ce2f17dffc8f59\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.16.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"once_cell\",\n \"spin 0.5.2\",\n \"untrusted\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"roaring\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef0fb5e826a8bde011ecae6a8539dd333884335c57ff0f003fbe27c25bbe8f71\"\ndependencies = [\n \"bytemuck\",\n \"byteorder\",\n \"retain_mut\",\n]\n\n[[package]]\nname = \"rome_analyze\"\nversion = \"0.0.0\"\ndependencies = [\n \"bitflags 2.3.3\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_rowan\",\n \"rustc-hash\",\n \"schemars\",\n \"serde\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_aria\"\nversion = \"0.0.0\"\ndependencies = [\n \"rome_aria_metadata\",\n]\n\n[[package]]\nname = \"rome_aria_metadata\"\nversion = \"0.0.0\"\ndependencies = [\n \"case\",\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"rome_cli\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"bpaf\",\n \"crossbeam\",\n \"dashmap\",\n \"hdrhistogram\",\n \"indexmap\",\n \"insta\",\n \"lazy_static\",\n \"libc\",\n \"mimalloc\",\n \"rayon\",\n \"rome_console\",\n \"rome_deserialize\",\n \"rome_diagnostics\",\n \"rome_flags\",\n \"rome_formatter\",\n \"rome_fs\",\n \"rome_js_formatter\",\n \"rome_json_formatter\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_lsp\",\n \"rome_migrate\",\n \"rome_rowan\",\n \"rome_service\",\n \"rome_text_edit\",\n \"rome_text_size\",\n \"serde\",\n \"serde_json\",\n \"tikv-jemallocator\",\n \"tokio\",\n \"tracing\",\n \"tracing-appender\",\n \"tracing-subscriber\",\n \"tracing-tree\",\n]\n\n[[package]]\nname = \"rome_console\"\nversion = \"0.0.1\"\ndependencies = [\n \"atty\",\n \"rome_markup\",\n \"rome_text_size\",\n \"schemars\",\n \"serde\",\n \"termcolor\",\n \"trybuild\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rome_control_flow\"\nversion = \"0.0.0\"\ndependencies = [\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_css_factory\"\nversion = \"0.0.0\"\ndependencies = [\n \"rome_css_syntax\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_css_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rome_console\",\n \"rome_css_factory\",\n \"rome_css_syntax\",\n \"rome_diagnostics\",\n \"rome_js_unicode_table\",\n \"rome_parser\",\n \"rome_rowan\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_css_syntax\"\nversion = \"0.0.1\"\ndependencies = [\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_deserialize\"\nversion = \"0.0.0\"\ndependencies = [\n \"indexmap\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_diagnostics\"\nversion = \"0.0.1\"\ndependencies = [\n \"backtrace\",\n \"bitflags 2.3.3\",\n \"bpaf\",\n \"rome_console\",\n \"rome_diagnostics_categories\",\n \"rome_diagnostics_macros\",\n \"rome_rowan\",\n \"rome_text_edit\",\n \"rome_text_size\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"termcolor\",\n \"trybuild\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rome_diagnostics_categories\"\nversion = \"0.0.1\"\ndependencies = [\n \"quote\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"rome_diagnostics_macros\"\nversion = \"0.0.1\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"rome_flags\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"rome_formatter\"\nversion = \"0.0.1\"\ndependencies = [\n \"cfg-if\",\n \"countme\",\n \"drop_bomb\",\n \"indexmap\",\n \"insta\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_rowan\",\n \"rustc-hash\",\n \"schemars\",\n \"serde\",\n \"tracing\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rome_formatter_test\"\nversion = \"0.1.0\"\ndependencies = [\n \"insta\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_formatter\",\n \"rome_fs\",\n \"rome_parser\",\n \"rome_rowan\",\n \"rome_service\",\n \"serde\",\n \"serde_json\",\n \"similar\",\n \"similar-asserts\",\n]\n\n[[package]]\nname = \"rome_fs\"\nversion = \"0.0.0\"\ndependencies = [\n \"crossbeam\",\n \"indexmap\",\n \"parking_lot\",\n \"rayon\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"schemars\",\n \"serde\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_js_analyze\"\nversion = \"0.0.0\"\ndependencies = [\n \"bpaf\",\n \"countme\",\n \"insta\",\n \"lazy_static\",\n \"natord\",\n \"roaring\",\n \"rome_analyze\",\n \"rome_aria\",\n \"rome_console\",\n \"rome_control_flow\",\n \"rome_deserialize\",\n \"rome_diagnostics\",\n \"rome_js_factory\",\n \"rome_js_parser\",\n \"rome_js_semantic\",\n \"rome_js_syntax\",\n \"rome_js_unicode_table\",\n \"rome_json_factory\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n \"rome_test_utils\",\n \"rome_text_edit\",\n \"rustc-hash\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"rome_js_factory\"\nversion = \"0.0.2\"\ndependencies = [\n \"rome_js_syntax\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_js_formatter\"\nversion = \"0.0.2\"\ndependencies = [\n \"cfg-if\",\n \"countme\",\n \"iai\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rome_deserialize\",\n \"rome_diagnostics\",\n \"rome_diagnostics_categories\",\n \"rome_formatter\",\n \"rome_formatter_test\",\n \"rome_fs\",\n \"rome_js_factory\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_json_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"rome_text_size\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n \"tracing\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rome_js_parser\"\nversion = \"0.0.2\"\ndependencies = [\n \"bitflags 2.3.3\",\n \"cfg-if\",\n \"drop_bomb\",\n \"expect-test\",\n \"indexmap\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_factory\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_js_unicode_table\",\n \"rome_parser\",\n \"rome_rowan\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_js_semantic\"\nversion = \"0.1.0\"\ndependencies = [\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_markup\",\n \"rome_rowan\",\n \"rust-lapper\",\n \"rustc-hash\",\n]\n\n[[package]]\nname = \"rome_js_syntax\"\nversion = \"0.0.2\"\ndependencies = [\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_factory\",\n \"rome_rowan\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"rome_js_transform\"\nversion = \"0.1.0\"\ndependencies = [\n \"insta\",\n \"lazy_static\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_factory\",\n \"rome_js_formatter\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_rowan\",\n \"rome_test_utils\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"rome_js_unicode_table\"\nversion = \"0.0.1\"\n\n[[package]]\nname = \"rome_json_analyze\"\nversion = \"0.0.0\"\ndependencies = [\n \"insta\",\n \"lazy_static\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_json_factory\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n \"rome_service\",\n \"rome_test_utils\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"rome_json_factory\"\nversion = \"0.0.1\"\ndependencies = [\n \"rome_json_syntax\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_json_formatter\"\nversion = \"0.0.1\"\ndependencies = [\n \"countme\",\n \"insta\",\n \"rome_diagnostics\",\n \"rome_formatter\",\n \"rome_formatter_test\",\n \"rome_fs\",\n \"rome_json_factory\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"rome_suppression\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"rome_json_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_unicode_table\",\n \"rome_json_factory\",\n \"rome_json_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_json_syntax\"\nversion = \"0.0.1\"\ndependencies = [\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_lsp\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"futures\",\n \"indexmap\",\n \"proptest\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_formatter\",\n \"rome_fs\",\n \"rome_js_formatter\",\n \"rome_rowan\",\n \"rome_service\",\n \"rome_text_edit\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"tower\",\n \"tower-lsp\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_markup\"\nversion = \"0.0.1\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"rome_migrate\"\nversion = \"0.1.0\"\ndependencies = [\n \"lazy_static\",\n \"rome_analyze\",\n \"rome_diagnostics\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"drop_bomb\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_rowan\"\nversion = \"0.0.1\"\ndependencies = [\n \"countme\",\n \"hashbrown\",\n \"iai\",\n \"memoffset\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rome_text_edit\",\n \"rome_text_size\",\n \"rustc-hash\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_service\"\nversion = \"0.0.0\"\ndependencies = [\n \"bpaf\",\n \"dashmap\",\n \"indexmap\",\n \"insta\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_deserialize\",\n \"rome_diagnostics\",\n \"rome_flags\",\n \"rome_formatter\",\n \"rome_fs\",\n \"rome_js_analyze\",\n \"rome_js_factory\",\n \"rome_js_formatter\",\n \"rome_js_parser\",\n \"rome_js_semantic\",\n \"rome_js_syntax\",\n \"rome_json_analyze\",\n \"rome_json_formatter\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"rome_text_edit\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rome_suppression\"\nversion = \"0.0.1\"\ndependencies = [\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_rowan\",\n]\n\n[[package]]\nname = \"rome_test_utils\"\nversion = \"0.1.0\"\ndependencies = [\n \"countme\",\n \"json_comments\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_deserialize\",\n \"rome_diagnostics\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n \"rome_service\",\n \"serde\",\n \"serde_json\",\n \"similar\",\n]\n\n[[package]]\nname = \"rome_text_edit\"\nversion = \"0.0.1\"\ndependencies = [\n \"rome_text_size\",\n \"schemars\",\n \"serde\",\n \"similar\",\n]\n\n[[package]]\nname = \"rome_text_size\"\nversion = \"0.0.1\"\ndependencies = [\n \"schemars\",\n \"serde\",\n \"serde_test\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"rome_wasm\"\nversion = \"0.0.0\"\ndependencies = [\n \"console_error_panic_hook\",\n \"js-sys\",\n \"quote\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_factory\",\n \"rome_js_formatter\",\n \"rome_rowan\",\n \"rome_service\",\n \"schemars\",\n \"serde\",\n \"serde-wasm-bindgen\",\n \"serde_json\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"rust-lapper\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee43d8e721ac803031dbab6a944b957b49a3b11eadbc099880c8aaaebf23ed27\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ef03e0a2b150c7a90d01faf6254c9c48a41e95fb2a8c2ac1c6f0d2b9aefc342\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.36.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd5c6ff11fecd55b40746d1995a02f2eb375bf8c00d192d521ee09f42bef37bc\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.20.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fff78fc74d175294f4e83b28343315ffcfb114b156f0185e9741cb5570f50e2f\"\ndependencies = [\n \"log\",\n \"ring\",\n \"sct\",\n \"webpki\",\n]\n\n[[package]]\nname = \"rusty-fork\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb3dcc6e454c328bb824492db107ab7c0ae8fcffe4ad210136ef014458c1bc4f\"\ndependencies = [\n \"fnv\",\n \"quick-error 1.2.3\",\n \"tempfile\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f91339c0467de62360649f8d3e185ca8de4224ff281f66000de5eb2a77a79041\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schemars\"\nversion = \"0.8.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02c613288622e5f0c3fdc5dbd4db1c5fbe752746b1d1a56a0630b78fd00de44f\"\ndependencies = [\n \"dyn-clone\",\n \"indexmap\",\n \"schemars_derive\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"schemars_derive\"\nversion = \"0.8.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"109da1e6b197438deb6db99952990c7f959572794b80ff93707d55a232545e7c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde_derive_internals\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n\n[[package]]\nname = \"sct\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e8c8cf938e98f769bc164923b06dce91cea1751522f46f8466461af04c9027d\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-wasm-bindgen\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3b4c031cd0d9014307d82b8abf653c0290fbdaeb4c02d00c63cf52f728628bf\"\ndependencies = [\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9735b638ccc51c28bf6914d90a2e9725b377144fc612c49a611fddd1b631d68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.15\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85bf8229e7920a9f636479437026331ce11aa132b4dde37d121944a44d6e5f3c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46266871c240a00b8f503b877622fe33430b3c7d963bdc0f2adc511e54a1eae3\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395627de918015623b32e7669714206363a7fc00382bf477e72c1f7533e8eafc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"serde_test\"\nversion = \"1.0.153\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cbe7389defd07773865f045d13c1070a9afdf1bc8736a06412ef98e2e7f8b38\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_yaml\"\nversion = \"0.9.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f82e6c8c047aa50a7328632d067bcae6ef38772a79e28daf32f735e0e4f3dd10\"\ndependencies = [\n \"indexmap\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"420acb44afdae038210c99e69aae24109f32f15500aa708e81d46c9f29d55fcf\"\ndependencies = [\n \"bstr 0.2.17\",\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"similar-asserts\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbf644ad016b75129f01a34a355dcb8d66a5bc803e417c7a77cc5d5ee9fa0f18\"\ndependencies = [\n \"console\",\n \"similar\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6528351c9bc8ab22353f9d776db39a20288e8d6c37ef8cfe3317cf875eecfc2d\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a507befe795404456341dfab10cef66ead4c041f62b8b11bbb92bffe5d0953e0\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dccf47db1b41fa1573ed27ccf5e08e3ca771cb994f776668c5ebda893b248fc\"\ndependencies = [\n \"lock_api\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a34fcf3e8b60f57e6a14301a2e916d323af98b0ea63c599441eec8558660c822\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sys-info\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b3a0d0aba8bf96a0e1ddfdc352fc53b3df7f39318c71854910c3c4b024ae52c\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af18f7ae1acd354b992402e9ec5864359d693cd8a79dcbef59f76891701c1e95\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"redox_syscall\",\n \"rustix\",\n \"windows-sys 0.42.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"tests_macros\"\nversion = \"0.0.0\"\ndependencies = [\n \"case\",\n \"globwalk\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d\"\n\n[[package]]\nname = \"thousands\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3bf63baf9f5039dadc247375c29eb13706706cfde997d0330d05aa63a77d8820\"\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tikv-jemalloc-sys\"\nversion = \"0.5.3+5.3.0-patched\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a678df20055b43e57ef8cddde41cdfda9a3c1a060b67f4c5836dfb1d78543ba8\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"tikv-jemallocator\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20612db8a13a6c06d57ec83953694185a367e16945f66565e8028d2c0bd76979\"\ndependencies = [\n \"libc\",\n \"tikv-jemalloc-sys\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd0cbfecb4d19b5ea75bb31ad904eb5b9fa13f21079c3b92017ebdf4999a5890\"\ndependencies = [\n \"itoa\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e153e1f1acaef8acc537e68b44906d2db6436e2b35ac2c6b42640fff91f00fd\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd80a657e71da814b8e5d60d3374fc6d35045062245d80224748ae522dd76f36\"\ndependencies = [\n \"time-core\",\n]\n\n[[package]]\nname = \"timing\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ef973380ab2960e2b4e49d552291930c217b947ee831f73000ebc5439074bf0\"\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.18.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e050c618355082ae5a89ec63bbf897225d5ffe84c7c4e036874e4d185a5044e\"\ndependencies = [\n \"bytes\",\n \"libc\",\n \"memchr\",\n \"mio\",\n \"num_cpus\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"winapi\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d266c00fde287f55d3f1c3e96c500c362a2b8c695076ec180f27918820bc6df8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f988a1a1adc2fb21f9c12aa96441da33a1728193ae0b95d2be22dbd17fcb4e5c\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0\"\n\n[[package]]\nname = \"tower-lsp\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b38fb0e6ce037835174256518aace3ca621c4f96383c56bb846cfc11b341910\"\ndependencies = [\n \"async-trait\",\n \"auto_impl\",\n \"bytes\",\n \"dashmap\",\n \"futures\",\n \"httparse\",\n \"lsp-types\",\n \"memchr\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"tokio-util\",\n \"tower\",\n \"tower-lsp-macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-lsp-macros\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34723c06344244474fdde365b76aebef8050bf6be61a935b91ee9ff7c4e91157\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8\"\ndependencies = [\n \"cfg-if\",\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-appender\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09d48f71a791638519505cefafe162606f706c25592e4bde4d97600c0195312e\"\ndependencies = [\n \"crossbeam-channel\",\n \"time\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4017f8f45139870ca7e672686113917c71c7a6e02d4924eda67186083c03081a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24eb03ba0eab1fd845050058ce5e616558e8f8d8fca633e6b163fe25c797213a\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ddad33d2d10b1ed7eb9d1f518a5674713876e97e5bb9b7345a7984fbb4f922\"\ndependencies = [\n \"lazy_static\",\n \"log\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6176eae26dd70d0c919749377897b54a9276bd7061339665dd68777926b5a70\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"tracing-tree\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"758e983ab7c54fee18403994507e7f212b9005e957ce7984996fac8d11facedb\"\ndependencies = [\n \"atty\",\n \"nu-ansi-term\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"trybuild\"\nversion = \"1.0.80\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"501dbdbb99861e4ab6b60eb6a7493956a9defb644fd034bc4a5ef27c693c8a3a\"\ndependencies = [\n \"basic-toml\",\n \"glob\",\n \"once_cell\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"unarray\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eaea85b334db583fe3274d12b4cd1880032beab409c0d774be044d4480ab9a94\"\n\n[[package]]\nname = \"ungrammar\"\nversion = \"1.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e5df347f0bf3ec1d670aad6ca5c6a1859cd9ea61d2113125794654ccced68f\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d54675592c1dbefd78cbd98db9bacd89886e1ca50692a0692baefffdeb92dd58\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5464a87b239f13a63a501f2701565754bae92d243d4bb7eb12f6d57d2269bf4\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b\"\n\n[[package]]\nname = \"unreachable\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\ndependencies = [\n \"void\",\n]\n\n[[package]]\nname = \"unsafe-libyaml\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad2024452afd3874bf539695e04af6732ba06517424dbf958fdb16a01f3bef6c\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"ureq\"\nversion = \"2.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"338b31dd1314f68f3aabf3ed57ab922df95ffcd902476ca7ba3c4ce7b908c46d\"\ndependencies = [\n \"base64\",\n \"flate2\",\n \"log\",\n \"once_cell\",\n \"rustls\",\n \"serde\",\n \"serde_json\",\n \"url\",\n \"webpki\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d68c799ae75762b8c3fe375feb6600ef5602c883c5d21eb51c09f22b83c4643\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf8-width\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5190c9442dcdaf0ddd50f37420417d219ae5261bbf5db120d0f9bab996c9cba1\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56\"\ndependencies = [\n \"same-file\",\n \"winapi\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.9.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.84\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31f8dcbc21f30d9b8f2ea926ecb58f6b91192c17e9d33594b3df58b2007ca53b\"\ndependencies = [\n \"cfg-if\",\n \"serde\",\n \"serde_json\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.84\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95ce90fd5bcc06af55a641a86428ee4229e44e07033963a2290a8e241607ccb9\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.84\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c21f77c0bedc37fd5dc21f897894a5ca01e7bb159884559461862ae90c0b4c5\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.84\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2aff81306fcac3c7515ad4e177f521b5c9a15f2b08f4e32d823066102f35a5f6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.84\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0046fef7e28c3804e5e38bfa31ea2a0f73905319b677e57ebe37e49358989b5d\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e33b99f4b23ba3eec1a53ac264e35a755f00e966e0065077d6027c0f575b0b97\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f095d78192e208183081cc07bc5515ef55216397af48b873e5edcd72637fa1bd\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.22.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c71e40d7d2c34a5106301fb632274ca37242cd0c9d3e64dbece371a40a2d87\"\ndependencies = [\n \"webpki\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a3e1820f08b8513f676f7ab6c1f99ff312fb97b553d30ff4dd86f9f15728aa7\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e2522491fbfcd58cc84d47aeb2958948c4b8982e9a2d8a2a35bbaed431390e7\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c9864e83243fdec7fc9c5444389dcbbfd258f745e7853198f365e3c4968a608\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c8b1b673ffc16c47a9ff48570a9d85e25d265735c503681332589af6253c6c7\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3887528ad530ba7bdbb1faa8275ec7a1155a45ffa57c37993960277145d640\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf4d1122317eddd6ff351aa852118a2418ad4214e6613a50e0191f7004372605\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1040f221285e17ebccbc2591ffdc2d44ee1f9186324dd3e84e99ac68d699c45\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"628bfdf232daa22b0d64fdb62b09fcc36bb01f05a3939e20ab73aaf9470d0463\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"447660ad36a13288b1db4d4248e857b510e8c3a225c822ba4fb748c0aafecffd\"\n\n[[package]]\nname = \"xorfilter-rs\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47f9da296a88b6bc150b896d17770a62d4dc6f63ecf0ed10a9c08a1cb3d12f24\"\n\n[[package]]\nname = \"xtask\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n]\n\n[[package]]\nname = \"xtask_bench\"\nversion = \"0.0.0\"\ndependencies = [\n \"ansi_rgb\",\n \"countme\",\n \"criterion\",\n \"dhat\",\n \"humansize\",\n \"itertools\",\n \"mimalloc\",\n \"pico-args\",\n \"regex\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_formatter\",\n \"rome_js_analyze\",\n \"rome_js_formatter\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_json_formatter\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"tikv-jemallocator\",\n \"timing\",\n \"ureq\",\n \"url\",\n \"xtask\",\n]\n\n[[package]]\nname = \"xtask_codegen\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"case\",\n \"filetime\",\n \"fs_extra\",\n \"git2\",\n \"pico-args\",\n \"proc-macro2\",\n \"pulldown-cmark\",\n \"quote\",\n \"rome_analyze\",\n \"rome_aria\",\n \"rome_cli\",\n \"rome_diagnostics\",\n \"rome_js_analyze\",\n \"rome_js_factory\",\n \"rome_js_formatter\",\n \"rome_js_syntax\",\n \"rome_json_analyze\",\n \"rome_json_formatter\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_rowan\",\n \"rome_service\",\n \"schemars\",\n \"serde_json\",\n \"ungrammar\",\n \"ureq\",\n \"walkdir\",\n \"xtask\",\n]\n\n[[package]]\nname = \"xtask_contributors\"\nversion = \"0.0.0\"\ndependencies = [\n \"html-escape\",\n \"pico-args\",\n \"serde\",\n \"serde_json\",\n \"ureq\",\n \"xtask\",\n]\n\n[[package]]\nname = \"xtask_coverage\"\nversion = \"0.0.0\"\ndependencies = [\n \"ascii_table\",\n \"atty\",\n \"backtrace\",\n \"colored\",\n \"indicatif\",\n \"once_cell\",\n \"pico-args\",\n \"regex\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_js_parser\",\n \"rome_js_semantic\",\n \"rome_js_syntax\",\n \"rome_parser\",\n \"rome_rowan\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"walkdir\",\n \"xtask\",\n \"yastl\",\n]\n\n[[package]]\nname = \"xtask_libs_bench\"\nversion = \"0.0.0\"\ndependencies = [\n \"case\",\n \"criterion\",\n \"fastbloom-rs\",\n \"fst\",\n \"iai\",\n \"memchr\",\n \"qp-trie\",\n \"regex\",\n \"rome_js_analyze\",\n]\n\n[[package]]\nname = \"xtask_lintdoc\"\nversion = \"0.0.0\"\ndependencies = [\n \"pulldown-cmark\",\n \"rome_analyze\",\n \"rome_console\",\n \"rome_diagnostics\",\n \"rome_formatter\",\n \"rome_js_analyze\",\n \"rome_js_parser\",\n \"rome_js_syntax\",\n \"rome_json_analyze\",\n \"rome_json_parser\",\n \"rome_json_syntax\",\n \"rome_service\",\n \"xtask\",\n]\n\n[[package]]\nname = \"yaml-rust\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85\"\ndependencies = [\n \"linked-hash-map\",\n]\n\n[[package]]\nname = \"yastl\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ca6c5a4d66c1a9ea261811cf4773c27343de7e5033e1b75ea3f297dc7db3c1a\"\ndependencies = [\n \"flume\",\n \"scopeguard\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 4.5673828125,
          "content": "[workspace]\n# Use the newer version of the cargo resolver\n# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions\nmembers = [\n  \"crates/*\",\n  \"xtask/bench\",\n  \"xtask/codegen\",\n  \"xtask/coverage\",\n  \"xtask/lintdoc\",\n  \"xtask/libs_bench\",\n  \"xtask/contributors\",\n]\nresolver = \"2\"\n\n[workspace.package]\nauthors    = [\"Rome Tools Developers and Contributors\"]\nedition    = \"2021\"\nhomepage   = \"https://rome.tools\"\nlicense    = \"MIT\"\nrepository = \"https://github.com/rome/tools\"\n\n[profile.release-with-debug]\ndebug    = true\ninherits = \"release\"\n\n[workspace.dependencies]\n# Internal crates\nrome_analyze                = { path = \"./crates/rome_analyze\" }\nrome_aria                   = { path = \"./crates/rome_aria\" }\nrome_aria_metadata          = { path = \"./crates/rome_aria_metadata\" }\nrome_cli                    = { path = \"./crates/rome_cli\" }\nrome_console                = { version = \"0.0.1\", path = \"./crates/rome_console\" }\nrome_control_flow           = { path = \"./crates/rome_control_flow\" }\nrome_css_factory            = { path = \"./crates/rome_css_factory\" }\nrome_css_parser             = { path = \"./crates/rome_css_parser\" }\nrome_css_syntax             = { path = \"./crates/rome_css_syntax\" }\nrome_deserialize            = { version = \"0.0.0\", path = \"./crates/rome_deserialize\" }\nrome_diagnostics            = { version = \"0.0.1\", path = \"./crates/rome_diagnostics\" }\nrome_diagnostics_categories = { version = \"0.0.1\", path = \"./crates/rome_diagnostics_categories\" }\nrome_diagnostics_macros     = { version = \"0.0.1\", path = \"./crates/rome_diagnostics_macros\" }\nrome_flags                  = { path = \"./crates/rome_flags\" }\nrome_formatter              = { version = \"0.0.1\", path = \"./crates/rome_formatter\" }\nrome_formatter_test         = { path = \"./crates/rome_formatter_test\" }\nrome_fs                     = { path = \"./crates/rome_fs\" }\nrome_js_analyze             = { path = \"./crates/rome_js_analyze\" }\nrome_js_factory             = { version = \"0.0.2\", path = \"./crates/rome_js_factory\" }\nrome_js_formatter           = { path = \"./crates/rome_js_formatter\" }\nrome_js_parser              = { path = \"./crates/rome_js_parser\" }\nrome_js_semantic            = { path = \"./crates/rome_js_semantic\" }\nrome_js_syntax              = { version = \"0.0.2\", path = \"./crates/rome_js_syntax\" }\nrome_js_unicode_table       = { version = \"0.0.1\", path = \"./crates/rome_js_unicode_table\" }\nrome_json_analyze           = { path = \"./crates/rome_json_analyze\" }\nrome_json_factory           = { version = \"0.0.1\", path = \"./crates/rome_json_factory\" }\nrome_json_formatter         = { path = \"./crates/rome_json_formatter\" }\nrome_json_parser            = { path = \"./crates/rome_json_parser\" }\nrome_json_syntax            = { version = \"0.0.1\", path = \"./crates/rome_json_syntax\" }\nrome_lsp                    = { path = \"./crates/rome_lsp\" }\nrome_markup                 = { version = \"0.0.1\", path = \"./crates/rome_markup\" }\nrome_migrate                = { path = \"./crates/rome_migrate\" }\nrome_parser                 = { version = \"0.0.1\", path = \"./crates/rome_parser\" }\nrome_rowan                  = { version = \"0.0.1\", path = \"./crates/rome_rowan\" }\nrome_service                = { path = \"./crates/rome_service\" }\nrome_suppression            = { version = \"0.0.1\", path = \"./crates/rome_suppression\" }\nrome_test_utils             = { path = \"./crates/rome_test_utils\" }\nrome_text_edit              = { version = \"0.0.1\", path = \"./crates/rome_text_edit\" }\nrome_text_size              = { version = \"0.0.1\", path = \"./crates/rome_text_size\" }\ntests_macros                = { path = \"./crates/tests_macros\" }\n\n# Crates needed in the workspace\nbitflags          = \"2.3.1\"\nbpaf              = { version = \"0.9.2\", features = [\"derive\"] }\ncountme           = \"3.0.1\"\ndashmap           = \"5.4.0\"\nindexmap          = \"1.9.3\"\ninsta             = \"1.29.0\"\nlazy_static       = \"1.4.0\"\nquickcheck        = \"1.0.3\"\nquickcheck_macros = \"1.0.0\"\nquote             = { version = \"1.0.28\" }\nrustc-hash        = \"1.1.0\"\nschemars          = { version = \"0.8.12\" }\nserde             = { version = \"1.0.163\", features = [\"derive\"], default-features = false }\nserde_json        = \"1.0.96\"\nsmallvec          = { version = \"1.10.0\", features = [\"union\", \"const_new\"] }\ntracing           = { version = \"0.1.37\", default-features = false, features = [\"std\"] }\n# pinning to version 1.18 to avoid multiple versions of windows-sys as dependency\ntokio = { version = \"~1.18.5\" }\n\n\n[profile.dev.package.rome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.test.package.rome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.release.package.rome_wasm]\ndebug     = false\nopt-level = 3\n"
        },
        {
          "name": "Dockerfile.benchmark",
          "type": "blob",
          "size": 0.3427734375,
          "content": "FROM rust:1.69.0\nWORKDIR /usr/src/\n\n# https://github.com/nodesource/distributions\nRUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && apt-get install -y nodejs\nRUN cargo install hyperfine\n\nCOPY Cargo.toml Cargo.lock ./\nCOPY ./crates ./crates\nCOPY ./xtask ./xtask\n\nWORKDIR /usr/src/benchmark\n\nCOPY ./benchmark .\n\nRUN npm ci\nRUN node run.js"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "MIT License\n\nCopyright (c) Rome Tools, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.01953125,
          "content": "./npm/rome/README.md"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.025390625,
          "content": "allow-dbg-in-tests = true\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "editors",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 2.7880859375,
          "content": "_default:\n  just --list -u\n\nalias f := format\nalias t := test\nalias r := ready\nalias l := lint\n\n\n# Installs the tools needed to develop with Rome\ninstall-tools:\n\tcargo install cargo-binstall\n\tcargo binstall cargo-insta cargo-nextest taplo-cli wasm-pack wasm-tools\n\n# Upgrades the tools needed to develop with Rome\nupgrade-tools:\n\tcargo install cargo-binstall --force\n\tcargo binstall cargo-insta cargo-nextest taplo-cli wasm-pack wasm-tools --force\n\n# Generate all files across crates and tools. You rarely want to use it locally.\ncodegen:\n  cargo codegen all\n  cargo codegen-configuration\n  just codegen-bindings\n  cargo format\n\n# Generates TypeScript types and JSON schema of the configuration\ncodegen-bindings:\n  cargo codegen-schema\n  cargo codegen-bindings\n\n# Generates code generated files for the linter\ncodegen-linter:\n  cargo codegen analyzer\n  cargo codegen-configuration\n  just codegen-bindings\n  cargo lintdoc\n\n# Generates the linter documentation and Rust documentation\ndocumentation:\n  cargo lintdoc\n  cargo documentation\n\n# Creates a new lint rule in the given path, with the given name. Name has to be camel case.\nnew-lintrule path rulename:\n  cargo run -p xtask_codegen -- newlintrule --path={{path}} --name={{rulename}}\n  just codegen-linter\n  just documentation\n\n# Promotes a rule from the nursery group to a new group\npromote-rule rulename group:\n\tcargo run -p xtask_codegen -- promoterule --rule={{rulename}} --group={{group}}\n\tjust codegen-linter\n\tjust documentation\n\t-cargo test -p rome_js_analyze -- {{snakecase(rulename)}}\n\tcargo insta accept\n\n\n# Format Rust files and TOML files\nformat:\n\tcargo format\n\ttaplo format\n\n\n\n[unix]\n_touch file:\n  touch {{file}}\n\n[windows]\n_touch file:\n  (gci {{file}}).LastWriteTime = Get-Date\n\n# Run tests of all crates\ntest:\n\tcargo nextest run --no-fail-fast\n\n# Run tests for the crate passed as argument e.g. just test-create rome_cli\ntest-crate name:\n\tcargo nextest run -E 'package({{name}})' --no-fail-fast\n\n# Run doc tests\ntest-doc:\n\tcargo test --doc\n\n# Tests a lint rule. The name of the rule needs to be camel case\ntest-lintrule name:\n  just _touch crates/rome_js_analyze/tests/spec_tests.rs\n  just _touch crates/rome_json_analyze/tests/spec_tests.rs\n  cargo test -p rome_js_analyze -- {{snakecase(name)}}\n  cargo test -p rome_json_analyze -- {{snakecase(name)}}\n\n# Tests a lint rule. The name of the rule needs to be camel case\ntest-transformation name:\n  just _touch crates/rome_js_transform/tests/spec_tests.rs\n  cargo test -p rome_js_transform -- {{snakecase(name)}}\n\n\n# Alias for `cargo lint`, it runs clippy on the whole codebase\nlint:\n\tcargo lint\n\n# When you finished coding, run this command to run the same commands in the CI.\nready:\n  git diff --exit-code --quiet\n  just codegen\n  just documentation\n  just format\n  just lint\n  just t\n  cargo test --doc\n  git diff --exit-code --quiet\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "[build]\nbase = \"website/\"\npublish = \"build/\"\n\n[context.production]\ncommand = \"./build-netlify.sh\"\n\n[context.deploy-preview]\ncommand = \"./build-netlify.sh preview\"\n"
        },
        {
          "name": "npm",
          "type": "tree",
          "content": null
        },
        {
          "name": "rfcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "rome.json",
          "type": "blob",
          "size": 0.3671875,
          "content": "{\n\t\"$schema\": \"./npm/rome/configuration_schema.json\",\n\t\"vcs\": {\n\t\t\"enabled\": true,\n\t\t\"clientKind\": \"git\",\n\t\t\"useIgnoreFile\": true\n\t},\n\t\"formatter\": {\n\t\t\"ignore\": [\n\t\t\t\"configuration-schema.json\"\n\t\t]\n\t},\n\t\"linter\": {\n\t\t\"enabled\": true,\n\t\t\"rules\": {\n\t\t\t\"recommended\": true,\n\t\t\t\"style\": {\n\t\t\t\t\"noNonNullAssertion\": \"off\"\n\t\t\t}\n\t\t}\n\t},\n\t\"organizeImports\": {\n\t\t\"enabled\": true\n\t}\n}\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.1923828125,
          "content": "[toolchain]\n# The default profile includes rustc, rust-std, cargo, rust-docs, rustfmt and clippy.\n# https://rust-lang.github.io/rustup/concepts/profiles.html\nprofile = \"default\"\nchannel = \"1.70.0\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "newline_style = \"Unix\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "taplo.toml",
          "type": "blob",
          "size": 0.1767578125,
          "content": "include = [\"Cargo.toml\", \"crates/**/Cargo.toml\", \".cargo/config.toml\"]\nexclude = [\"./benchmark/**/*.toml\"]\n\n[formatting]\nalign_entries = true\ncolumn_width = 120\nreorder_keys = true\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}