{
  "metadata": {
    "timestamp": 1736709409483,
    "page": 7,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "emilk/egui",
      "stars": 23337,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3115234375,
          "content": "* text=auto eol=lf\nCargo.lock linguist-generated=false\n*.png filter=lfs diff=lfs merge=lfs -text\n\n# Exclude some small files from LFS:\ncrates/eframe/data/* !filter !diff !merge text=auto eol=lf\ncrates/egui_demo_lib/data/* !filter !diff !merge text=auto eol=lf\ncrates/egui/assets/* !filter !diff !merge text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1748046875,
          "content": ".DS_Store\n**/target\n**/target_ra\n**/target_wasm\n**/tests/snapshots/**/*.diff.png\n**/tests/snapshots/**/*.new.png\n**/tests/snapshots/**/*.old.png\n/.*.json\n/.vscode\n/media/*\n.idea/\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.33203125,
          "content": "# https://github.com/crate-ci/typos\n# install:  cargo install typos-cli\n# run:      typos\n\n[default.extend-words]\nime = \"ime\"       # Input Method Editor\nnknown = \"nknown\" # part of @55nknown username\nro = \"ro\"         # read-only, also part of the username @Phen-Ro\n\n[files]\nextend-exclude = [\"web_demo/egui_demo_app.js\"] # auto-generated\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 2.423828125,
          "content": "# Architecture\nThis document describes how the crates that make up egui are all connected.\n\nAlso see [`CONTRIBUTING.md`](CONTRIBUTING.md) for what to do before opening a PR.\n\n\n## Crate overview\nThe crates in this repository are: `egui, emath, epaint, epaint_default_fonts, egui_extras, egui-winit, egui_glow, egui_demo_lib, egui_demo_app`.\n\n### `egui`: The main GUI library.\nExample code: `if ui.button(\"Click me\").clicked() { ‚Ä¶ }`\nThis is the crate where the bulk of the code is at. `egui` depends only on `emath` and `epaint`.\n\n### `emath`: minimal 2D math library\nExamples: `Vec2, Pos2, Rect, lerp, remap`\n\n### `epaint`\n2d shapes and text that can be turned into textured triangles.\n\nExample: `Shape::Circle { center, radius, fill, stroke }`\n\nDepends on `emath`. Also depends on `epaint_default_fonts` when the `default_fonts` feature is enabled.\n\n### `epaint_default_fonts`\nEmbedded fonts (using `include_bytes!()`) for use by `epaint` in selecting defaults.\n\nSince the font files themselves are licensed differently from the `epaint` source code, this simplifies licenses for callers who disable the default fonts.\n\n### `egui_extras`\nThis adds additional features on top of `egui`.\n\n### `egui-winit`\nThis crates provides bindings between [`egui`](https://github.com/emilk/egui) and [winit](https://crates.io/crates/winit).\n\nThe library translates winit events to egui, handled copy/paste, updates the cursor, open links clicked in egui, etc.\n\n### `egui_glow`\nPuts an egui app inside a native window on your laptop. Paints the triangles that egui outputs using [glow](https://github.com/grovesNL/glow).\n\n### `eframe`\n`eframe` is the official `egui` framework, built so you can compile the same app for either web or native.\n\nThe demo that you can see at <https://www.egui.rs> is using `eframe` to host the `egui`. The demo code is found in:\n\n### `egui_demo_lib`\nDepends on `egui`.\nThis contains a bunch of uses of `egui` and looks like the ui code you would write for an `egui` app.\n\n### `egui_demo_app`\nThin wrapper around `egui_demo_lib` so we can compile it to a web site or a native app executable.\nDepends on `egui_demo_lib` + `eframe`.\n\n### `egui_kittest`\nA test harness for egui based on [kittest](https://github.com/rerun/kittest) and [AccessKit](https://github.com/AccessKit/accesskit/).\n\n### Other integrations\n\nThere are also many great integrations for game engines such as `bevy` and `miniquad` which you can find at <https://github.com/emilk/egui#integrations>.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 115.3994140625,
          "content": "# egui changelog\nAll notable changes to the `egui` crate will be documented in this file.\n\nThis is just the changelog for the core `egui` crate. Every crate in this repository has their own changelog:\n* [`epaint` changelog](crates/epaint/CHANGELOG.md)\n* [`egui-winit` changelog](crates/egui-winit/CHANGELOG.md)\n* [`egui-wgpu` changelog](crates/egui-wgpu/CHANGELOG.md)\n* [`egui_kittest` changelog](crates/egui_kittest/CHANGELOG.md)\n* [`egui_glow` changelog](crates/egui_glow/CHANGELOG.md)\n* [`ecolor` changelog](crates/ecolor/CHANGELOG.md)\n* [`eframe` changelog](crates/eframe/CHANGELOG.md)\n\nThis file is updated upon each release.\nChanges since the last release can be found at <https://github.com/emilk/egui/compare/latest...HEAD> or by running the `scripts/generate_changelog.py` script.\n\n\n## 0.30.0 - 2024-12-16 - Modals and better layer support\n\n### ‚ú® Highlights\n* Add `Modal`, a popup that blocks input to the rest of the application ([#5358](https://github.com/emilk/egui/pull/5358) by [@lucasmerlin](https://github.com/lucasmerlin))\n* Improved support for transform layers ([#5465](https://github.com/emilk/egui/pull/5465), [#5468](https://github.com/emilk/egui/pull/5468), [#5429](https://github.com/emilk/egui/pull/5429))\n\n#### `egui_kittest`\nThis release welcomes a new crate to the family: [egui_kittest](https://github.com/emilk/egui/tree/master/crates/egui_kittest).\n`egui_kittest` is a testing framework for egui, allowing you to test both automation (simulated clicks and other events),\nand also do screenshot testing (useful for regression tests).\n`egui_kittest` is built using [`kittest`](https://github.com/rerun-io/kittest), which is a general GUI testing framework that aims to work with any Rust GUI (not just egui!).\n`kittest` uses the accessibility library [`AccessKit`](https://github.com/AccessKit/accesskit/) for automatation and to query the widget tree.\n\n`kittest` and `egui_kittest` are written by [@lucasmerlin](https://github.com/lucasmerlin).\n\nHere's a quick example of how to use `egui_kittest` to test a checkbox:\n\n```rust\nuse egui::accesskit::Toggled;\nuse egui_kittest::{Harness, kittest::Queryable};\n\nfn main() {\n    let mut checked = false;\n    let app = |ui: &mut egui::Ui| {\n        ui.checkbox(&mut checked, \"Check me!\");\n    };\n\n    let mut harness = egui_kittest::Harness::new_ui(app);\n\n    let checkbox = harness.get_by_label(\"Check me!\");\n    assert_eq!(checkbox.toggled(), Some(Toggled::False));\n    checkbox.click();\n\n    harness.run();\n\n    let checkbox = harness.get_by_label(\"Check me!\");\n    assert_eq!(checkbox.toggled(), Some(Toggled::True));\n\n    // You can even render the ui and do image snapshot tests\n    #[cfg(all(feature = \"wgpu\", feature = \"snapshot\"))]\n    harness.wgpu_snapshot(\"readme_example\");\n}\n```\n\n### ‚≠ê Added\n* Add `Modal` and `Memory::set_modal_layer` [#5358](https://github.com/emilk/egui/pull/5358) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Add `UiBuilder::layer_id` and remove `layer_id` from `Ui::new` [#5195](https://github.com/emilk/egui/pull/5195) by [@emilk](https://github.com/emilk)\n* Allow easier setting of background color for `TextEdit` [#5203](https://github.com/emilk/egui/pull/5203) by [@bircni](https://github.com/bircni)\n* Set `Response::intrinsic_size` for `TextEdit` [#5266](https://github.com/emilk/egui/pull/5266) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Expose center position in `MultiTouchInfo` [#5247](https://github.com/emilk/egui/pull/5247) by [@lucasmerlin](https://github.com/lucasmerlin)\n* `Context::add_font` [#5228](https://github.com/emilk/egui/pull/5228) by [@frederik-uni](https://github.com/frederik-uni)\n* Impl from `Box<str>` for `WidgetText`, `RichText` [#5309](https://github.com/emilk/egui/pull/5309) by [@dimtpap](https://github.com/dimtpap)\n* Add `Window::scroll_bar_visibility` [#5231](https://github.com/emilk/egui/pull/5231) by [@Zeenobit](https://github.com/Zeenobit)\n* Add `ComboBox::close_behavior` [#5305](https://github.com/emilk/egui/pull/5305) by [@avalsch](https://github.com/avalsch)\n* Add `painter.line()` [#5291](https://github.com/emilk/egui/pull/5291) by [@bircni](https://github.com/bircni)\n* Allow attaching custom user data to a screenshot command [#5416](https://github.com/emilk/egui/pull/5416) by [@emilk](https://github.com/emilk)\n* Add `Button::image_tint_follows_text_color` [#5430](https://github.com/emilk/egui/pull/5430) by [@emilk](https://github.com/emilk)\n* Consume escape keystroke when bailing out from a drag operation [#5433](https://github.com/emilk/egui/pull/5433) by [@abey79](https://github.com/abey79)\n* Add `Context::layer_transform_to_global` & `layer_transform_from_global` [#5465](https://github.com/emilk/egui/pull/5465) by [@emilk](https://github.com/emilk)\n\n### üîß Changed\n* Update MSRV to Rust 1.80 [#5421](https://github.com/emilk/egui/pull/5421), [#5457](https://github.com/emilk/egui/pull/5457) by [@emilk](https://github.com/emilk)\n* Expand max font atlas size from 8k to 16k [#5257](https://github.com/emilk/egui/pull/5257) by [@rustbasic](https://github.com/rustbasic)\n* Put font data into `Arc` to reduce memory consumption [#5276](https://github.com/emilk/egui/pull/5276) by [@StarStarJ](https://github.com/StarStarJ)\n* Move `egui::util::cache` to `egui::cache`; add `FramePublisher` [#5426](https://github.com/emilk/egui/pull/5426) by [@emilk](https://github.com/emilk)\n* Remove `Order::PanelResizeLine` [#5455](https://github.com/emilk/egui/pull/5455) by [@emilk](https://github.com/emilk)\n* Drag-and-drop: keep cursor set by user, if any [#5467](https://github.com/emilk/egui/pull/5467) by [@abey79](https://github.com/abey79)\n* Use `profiling` crate to support more profiler backends [#5150](https://github.com/emilk/egui/pull/5150) by [@teddemunnik](https://github.com/teddemunnik)\n* Improve hit-test of thin widgets, and widgets across layers [#5468](https://github.com/emilk/egui/pull/5468) by [@emilk](https://github.com/emilk)\n\n### üêõ Fixed\n* Update `ScrollArea` drag velocity when drag stopped [#5175](https://github.com/emilk/egui/pull/5175) by [@valadaptive](https://github.com/valadaptive)\n* Fix bug causing wrong-fire of `ViewportCommand::Visible` [#5244](https://github.com/emilk/egui/pull/5244) by [@rustbasic](https://github.com/rustbasic)\n* Fix: `Ui::new_child` does not consider the `sizing_pass` field of `UiBuilder` [#5262](https://github.com/emilk/egui/pull/5262) by [@zhatuokun](https://github.com/zhatuokun)\n* Fix Ctrl+Shift+Z redo shortcut [#5258](https://github.com/emilk/egui/pull/5258) by [@YgorSouza](https://github.com/YgorSouza)\n* Fix: `Window::default_pos` does not work [#5315](https://github.com/emilk/egui/pull/5315) by [@rustbasic](https://github.com/rustbasic)\n* Fix: `Sides` did not apply the layout position correctly [#5303](https://github.com/emilk/egui/pull/5303) by [@zhatuokun](https://github.com/zhatuokun)\n* Respect `Style::override_font_id` in `RichText` [#5310](https://github.com/emilk/egui/pull/5310) by [@MStarha](https://github.com/MStarha)\n* Fix disabled widgets \"eating\" focus [#5370](https://github.com/emilk/egui/pull/5370) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Fix cursor clipping in `TextEdit` inside a `ScrollArea` [#3660](https://github.com/emilk/egui/pull/3660) by [@juancampa](https://github.com/juancampa)\n* Make text cursor always appear on click  [#5420](https://github.com/emilk/egui/pull/5420) by [@juancampa](https://github.com/juancampa)\n* Fix `on_hover_text_at_pointer` for transformed layers [#5429](https://github.com/emilk/egui/pull/5429) by [@emilk](https://github.com/emilk)\n* Fix: don't interact with `Area` outside its `constrain_rect` [#5459](https://github.com/emilk/egui/pull/5459) by [@MScottMcBee](https://github.com/MScottMcBee)\n* Fix broken images on egui.rs (move from git lfs to normal git) [#5480](https://github.com/emilk/egui/pull/5480) by [@emilk](https://github.com/emilk)\n* Fix: `ui.new_child` should now respect `disabled` [#5483](https://github.com/emilk/egui/pull/5483) by [@emilk](https://github.com/emilk)\n* Fix zero-width strokes still affecting the feathering color of boxes [#5485](https://github.com/emilk/egui/pull/5485) by [@emilk](https://github.com/emilk)\n\n\n## 0.29.1 - 2024-10-01 - Bug fixes\n* Remove debug-assert triggered by `with_layer_id/dnd_drag_source` [#5191](https://github.com/emilk/egui/pull/5191) by [@emilk](https://github.com/emilk)\n* Fix id clash in `Ui::response` [#5192](https://github.com/emilk/egui/pull/5192) by [@emilk](https://github.com/emilk)\n* Do not round panel rectangles to pixel grid [#5196](https://github.com/emilk/egui/pull/5196) by [@emilk](https://github.com/emilk)\n\n\n## 0.29.0 - 2024-09-26 - Multipass, `UiBuilder`, & visual improvements\n### ‚ú® Highlights\nThis release adds initial support for multi-pass layout, which is a tool to circumvent [a common limitation of immediate mode](https://github.com/emilk/egui#layout).\nYou can use the new `UiBuilder::sizing_pass` ([#4969](https://github.com/emilk/egui/pull/4969)) to instruct the `Ui` and widgets to shrink to their minimum size, then store that size.\nThen call the new `Context::request_discard` ([#5059](https://github.com/emilk/egui/pull/5059)) to discard the visual output and do another _pass_ immediately after the current finishes.\nTogether, this allows more advanced layouts that is normally not possible in immediate mode.\nSo far this is only used by `egui::Grid` to hide the \"first-frame jitters\" that would sometimes happen before, but 3rd party libraries can also use it to do much more advanced things.\n\nThere is also a new `UiBuilder` for more flexible construction of `Ui`s ([#4969](https://github.com/emilk/egui/pull/4969)).\nBy specifying a `sense` for the `Ui` you can make it respond to clicks and drags, reading the result with the new `Ui::response` ([#5054](https://github.com/emilk/egui/pull/5054)).\nAmong other things, you can use this to create buttons that contain arbitrary widgets.\n\n0.29 also adds improve support for automatic switching between light and dark mode.\nYou can now set up a custom `Style` for both dark and light mode, and have egui follow the system preference ([#4744](https://github.com/emilk/egui/pull/4744) [#4860](https://github.com/emilk/egui/pull/4860)).\n\nThere also has been several small improvements to the look of egui:\n* Fix vertical centering of text (e.g. in buttons) ([#5117](https://github.com/emilk/egui/pull/5117))\n* Sharper rendering of lines and outlines ([#4943](https://github.com/emilk/egui/pull/4943))\n* Nicer looking text selection, especially in light mode ([#5017](https://github.com/emilk/egui/pull/5017))\n\n#### The new text selection\n<img width=\"198\" alt=\"New text selection in light mode\" src=\"https://github.com/user-attachments/assets/bd342946-299c-44ab-bc2d-2aa8ddbca8eb\">\n<img width=\"187\" alt=\"New text selection in dark mode\" src=\"https://github.com/user-attachments/assets/352bed32-5150-49b9-a9f9-c7679a0d30b2\">\n\n\n#### What text selection used to look like\n<img width=\"143\" alt=\"Old text selection in light mode\" src=\"https://github.com/user-attachments/assets/f3cbd798-cfed-4ad4-aa3a-d7480efcfa3c\">\n<img width=\"143\" alt=\"Old text selection in dark mode\" src=\"https://github.com/user-attachments/assets/9925d18d-da82-4a44-8a98-ea6857ecc14f\">\n\n### üß≥ Migration\n* `id_source` is now called `id_salt` everywhere ([#5025](https://github.com/emilk/egui/pull/5025))\n* `Ui::new` now takes a `UiBuilder` ([#4969](https://github.com/emilk/egui/pull/4969))\n* Deprecated (replaced with `UiBuilder`):\n\t* `ui.add_visible_ui`\n\t* `ui.allocate_ui_at_rect`\n\t* `ui.child_ui`\n\t* `ui.child_ui_with_id_source`\n\t* `ui.push_stack_info`\n\n### ‚≠ê Added\n* Create a `UiBuilder` for building `Ui`s [#4969](https://github.com/emilk/egui/pull/4969) by [@emilk](https://github.com/emilk)\n* Add `egui::Sides` for  adding UI on left and right sides [#5036](https://github.com/emilk/egui/pull/5036) by [@emilk](https://github.com/emilk)\n* Make light & dark visuals customizable when following the system theme [#4744](https://github.com/emilk/egui/pull/4744) [#4860](https://github.com/emilk/egui/pull/4860) by [@bash](https://github.com/bash)\n* Interactive `Ui`:s: add `UiBuilder::sense` and `Ui::response` [#5054](https://github.com/emilk/egui/pull/5054) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Add a menu button with text and image  [#4748](https://github.com/emilk/egui/pull/4748) by [@NicolasBircksZR](https://github.com/NicolasBircksZR)\n* Add `Ui::columns_const()` [#4764](https://github.com/emilk/egui/pull/4764) by [@v0x0g](https://github.com/v0x0g)\n* Add `Slider::max_decimals_opt` [#4953](https://github.com/emilk/egui/pull/4953) by [@bircni](https://github.com/bircni)\n* Add `Label::halign` [#4975](https://github.com/emilk/egui/pull/4975) by [@rustbasic](https://github.com/rustbasic)\n* Add `ui.shrink_clip_rect` [#5068](https://github.com/emilk/egui/pull/5068) by [@emilk](https://github.com/emilk)\n* Add `ScrollArea::scroll_bar_rect` [#5070](https://github.com/emilk/egui/pull/5070) by [@emilk](https://github.com/emilk)\n* Add `Options::input_options` for click-delay etc [#4942](https://github.com/emilk/egui/pull/4942) by [@girtsf](https://github.com/girtsf)\n* Add `WidgetType::RadioGroup` [#5081](https://github.com/emilk/egui/pull/5081) by [@bash](https://github.com/bash)\n* Add return value to `with_accessibility_parent` [#5083](https://github.com/emilk/egui/pull/5083) by [@bash](https://github.com/bash)\n* Add `Ui::with_visual_transform` [#5055](https://github.com/emilk/egui/pull/5055) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Make `Slider` and `DragValue` compatible with `NonZeroUsize` etc [#5105](https://github.com/emilk/egui/pull/5105) by [@emilk](https://github.com/emilk)\n* Add `Context::request_discard` for multi-pass layouts [#5059](https://github.com/emilk/egui/pull/5059) by [@emilk](https://github.com/emilk)\n* Add UI to modify `FontTweak` live [#5125](https://github.com/emilk/egui/pull/5125) by [@emilk](https://github.com/emilk)\n* Add `Response::intrinsic_size` to enable better layout in 3rd party crates [#5082](https://github.com/emilk/egui/pull/5082) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Add support for mipmap textures [#5146](https://github.com/emilk/egui/pull/5146) by [@nolanderc](https://github.com/nolanderc)\n* Add `DebugOptions::show_unaligned` [#5165](https://github.com/emilk/egui/pull/5165) by [@emilk](https://github.com/emilk)\n* Add `Slider::clamping` for precise clamp control [#5119](https://github.com/emilk/egui/pull/5119) by [@emilk](https://github.com/emilk)\n\n### üöÄ Performance\n* Optimize `Color32::from_rgba_unmultiplied` with LUT [#5088](https://github.com/emilk/egui/pull/5088) by [@YgorSouza](https://github.com/YgorSouza)\n\n### üîß Changed\n* Rename `id_source` to `id_salt` [#5025](https://github.com/emilk/egui/pull/5025) by [@bircni](https://github.com/bircni)\n* Avoid some `Id` clashes by seeding auto-ids with child id [#4840](https://github.com/emilk/egui/pull/4840) by [@ironpeak](https://github.com/ironpeak)\n* Nicer looking text selection, especially in light mode [#5017](https://github.com/emilk/egui/pull/5017) by [@emilk](https://github.com/emilk)\n* Fix blurry lines by aligning to pixel grid [#4943](https://github.com/emilk/egui/pull/4943) by [@juancampa](https://github.com/juancampa)\n* Center-align all text vertically [#5117](https://github.com/emilk/egui/pull/5117) by [@emilk](https://github.com/emilk)\n* Clamp margin values in `Margin::ui` [#4873](https://github.com/emilk/egui/pull/4873) by [@rustbasic](https://github.com/rustbasic)\n* Make `scroll_to_*` animations configurable [#4305](https://github.com/emilk/egui/pull/4305) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Update `Button` to correctly align contained image [#4891](https://github.com/emilk/egui/pull/4891) by [@PrimmR](https://github.com/PrimmR)\n* Deprecate `ahash` re-exports [#4979](https://github.com/emilk/egui/pull/4979) by [@oscargus](https://github.com/oscargus)\n* Fix: Ensures correct IME behavior when the text input area gains or loses focus [#4896](https://github.com/emilk/egui/pull/4896) by [@rustbasic](https://github.com/rustbasic)\n* Enable rustdoc `generate-link-to-definition` feature on docs.rs [#5030](https://github.com/emilk/egui/pull/5030) by [@GuillaumeGomez](https://github.com/GuillaumeGomez)\n* Make some `Memory` methods public [#5046](https://github.com/emilk/egui/pull/5046) by [@bircni](https://github.com/bircni)\n* Deprecate `ui.set_sizing_pass` [#5074](https://github.com/emilk/egui/pull/5074) by [@emilk](https://github.com/emilk)\n* Export module `egui::frame` [#5087](https://github.com/emilk/egui/pull/5087) by [@simgt](https://github.com/simgt)\n* Use `log` crate instead of `eprintln` & remove some unwraps [#5010](https://github.com/emilk/egui/pull/5010) by [@bircni](https://github.com/bircni)\n* Fix: `Event::Copy` and `Event::Cut` behave as if they select the entire text when there is no selection [#5115](https://github.com/emilk/egui/pull/5115) by [@rustbasic](https://github.com/rustbasic)\n\n### üêõ Fixed\n* Prevent text shrinking in tooltips; round wrap-width to integer [#5161](https://github.com/emilk/egui/pull/5161) by [@emilk](https://github.com/emilk)\n* Fix bug causing tooltips with dynamic content to shrink [#5168](https://github.com/emilk/egui/pull/5168) by [@emilk](https://github.com/emilk)\n* Remove some debug asserts [#4826](https://github.com/emilk/egui/pull/4826) by [@emilk](https://github.com/emilk)\n* Handle the IME event first in `TextEdit` to fix some bugs [#4794](https://github.com/emilk/egui/pull/4794) by [@rustbasic](https://github.com/rustbasic)\n* Slider: round to decimals after applying `step_by` [#4822](https://github.com/emilk/egui/pull/4822) by [@AurevoirXavier](https://github.com/AurevoirXavier)\n* Fix: hint text follows the alignment set on the `TextEdit` [#4889](https://github.com/emilk/egui/pull/4889) by [@PrimmR](https://github.com/PrimmR)\n* Request focus on a `TextEdit` when clicked [#4991](https://github.com/emilk/egui/pull/4991) by [@Zoxc](https://github.com/Zoxc)\n* Fix `Id` clash in `Frame` styling widget [#4967](https://github.com/emilk/egui/pull/4967) by [@YgorSouza](https://github.com/YgorSouza)\n* Prevent `ScrollArea` contents from exceeding the container size [#5006](https://github.com/emilk/egui/pull/5006) by [@DouglasDwyer](https://github.com/DouglasDwyer)\n* Fix bug in size calculation of truncated text [#5076](https://github.com/emilk/egui/pull/5076) by [@emilk](https://github.com/emilk)\n* Fix: Make sure `RawInput::take` clears all events, like it says it does [#5104](https://github.com/emilk/egui/pull/5104) by [@emilk](https://github.com/emilk)\n* Fix `DragValue` range clamping [#5118](https://github.com/emilk/egui/pull/5118) by [@emilk](https://github.com/emilk)\n* Fix: panic when dragging window between monitors of different pixels_per_point [#4868](https://github.com/emilk/egui/pull/4868) by [@rustbasic](https://github.com/rustbasic)\n\n\n## 0.28.1 - 2024-07-05 - Tooltip tweaks\n### ‚≠ê Added\n* Add `Image::uri()` [#4720](https://github.com/emilk/egui/pull/4720) by [@rustbasic](https://github.com/rustbasic)\n\n### üîß Changed\n* Better documentation for `Event::Zoom` [#4778](https://github.com/emilk/egui/pull/4778) by [@emilk](https://github.com/emilk)\n* Hide tooltips when scrolling [#4784](https://github.com/emilk/egui/pull/4784) by [@emilk](https://github.com/emilk)\n* Smoother animations [#4787](https://github.com/emilk/egui/pull/4787) by [@emilk](https://github.com/emilk)\n* Hide tooltip on click [#4789](https://github.com/emilk/egui/pull/4789) by [@emilk](https://github.com/emilk)\n\n### üêõ Fixed\n* Fix default height of top/bottom panels [#4779](https://github.com/emilk/egui/pull/4779) by [@emilk](https://github.com/emilk)\n* Show the innermost debug rectangle when pressing all modifier keys [#4782](https://github.com/emilk/egui/pull/4782) by [@emilk](https://github.com/emilk)\n* Fix occasional flickering of pointer-tooltips [#4788](https://github.com/emilk/egui/pull/4788) by [@emilk](https://github.com/emilk)\n\n\n## 0.28.0 - 2024-07-03 - Sizing pass, `UiStack` and GIF support\n### ‚ú® Highlights\n* Automatic sizing of menus/popups/tooltips with no jittering, using new _sizing pass_ [#4557](https://github.com/emilk/egui/pull/4557), [#4579](https://github.com/emilk/egui/pull/4579) by [@emilk](https://github.com/emilk)\n* Support interactive widgets in tooltips [#4596](https://github.com/emilk/egui/pull/4596) by [@emilk](https://github.com/emilk)\n* Add a `ui.stack()` with info about all ancestor `Ui`s, with optional tags [#4588](https://github.com/emilk/egui/pull/4588) by [@abey79](https://github.com/abey79), [#4617](https://github.com/emilk/egui/pull/4617) by [@emilk](https://github.com/emilk)\n* GIF support [#4620](https://github.com/emilk/egui/pull/4620) by [@JustFrederik](https://github.com/JustFrederik)\n* Blinking text cursor in `TextEdit` [#4279](https://github.com/emilk/egui/pull/4279) by [@emilk](https://github.com/emilk)\n\n### üß≥ Migration\n* Update MSRV to 1.76 ([#4411](https://github.com/emilk/egui/pull/4411))\n* The `wrap/truncate` functions on `Label/Button/ComboBox` no longer take bools as arguments. Use `.wrap_mode(‚Ä¶)` instead for more fine control ([#4556](https://github.com/emilk/egui/pull/4556))\n* `Style::wrap` has been deprecated in favor of `Style::wrap_mode` ([#4556](https://github.com/emilk/egui/pull/4556))\n* `Ui::new` and `ui.child_ui` now takes a new parameter for the `UiStack` ([#4588](https://github.com/emilk/egui/pull/4588))\n* The `extra_asserts` and `extra_debug_asserts` feature flags have been removed ([#4478](https://github.com/emilk/egui/pull/4478))\n* Remove `Event::Scroll` and handle it in egui. Use `Event::MouseWheel` instead ([#4524](https://github.com/emilk/egui/pull/4524))\n* `Event::Zoom` is no longer emitted on ctrl+scroll. Use `InputState::smooth_scroll_delta` instead ([#4524](https://github.com/emilk/egui/pull/4524))\n* `ui.set_enabled` and `set_visbile` have  been deprecated ([#4614](https://github.com/emilk/egui/pull/4614))\n* `DragValue::clamp_range` renamed to `range` (([#4728](https://github.com/emilk/egui/pull/4728))\n\n### ‚≠ê Added\n* Overload operators for `Rect + Margin`, `Rect - Margin` etc [#4277](https://github.com/emilk/egui/pull/4277) by [@emilk](https://github.com/emilk)\n* Add `Window::order` [#4301](https://github.com/emilk/egui/pull/4301) by [@alexparlett](https://github.com/alexparlett)\n* Add a way to specify Undoer settings and construct Undoers more easily [#4357](https://github.com/emilk/egui/pull/4357) by [@valadaptive](https://github.com/valadaptive)\n* Add xtask crate [#4293](https://github.com/emilk/egui/pull/4293) by [@YgorSouza](https://github.com/YgorSouza)\n* Add `ViewportCommand::RequestCut`, `RequestCopy` and `RequestPaste` to trigger clipboard actions [#4035](https://github.com/emilk/egui/pull/4035) by [@bu5hm4nn](https://github.com/bu5hm4nn)\n* Added ability to define colors at UV coordinates along a path [#4353](https://github.com/emilk/egui/pull/4353) by [@murl-digital](https://github.com/murl-digital)\n* Add a `Display` impl for `Vec2`, `Pos2`, and `Rect` [#4428](https://github.com/emilk/egui/pull/4428) by [@tgross35](https://github.com/tgross35)\n* Easing functions [#4630](https://github.com/emilk/egui/pull/4630) by [@emilk](https://github.com/emilk)\n* Add `Options::line_scroll_speed` and `scroll_zoom_speed` [#4532](https://github.com/emilk/egui/pull/4532) by [@emilk](https://github.com/emilk)\n* Add `TextEdit::hint_text_font` [#4517](https://github.com/emilk/egui/pull/4517) by [@zaaarf](https://github.com/zaaarf)\n* Add `Options::reduce_texture_memory` to free up RAM [#4431](https://github.com/emilk/egui/pull/4431) by [@varphone](https://github.com/varphone)\n* Add support for text truncation to `egui::Style` [#4556](https://github.com/emilk/egui/pull/4556) by [@abey79](https://github.com/abey79)\n* Add `Response::show_tooltip_ui` and `show_tooltip_text` [#4580](https://github.com/emilk/egui/pull/4580) by [@emilk](https://github.com/emilk)\n* Add `opacity` and `multiply_opacity` functions to `Ui` and `Painter` [#4586](https://github.com/emilk/egui/pull/4586) by [@emilk](https://github.com/emilk)\n* Add `Key::Quote` [#4683](https://github.com/emilk/egui/pull/4683) by [@mkeeter](https://github.com/mkeeter)\n* Improve backtraces when hovering widgets with modifiers pressed [#4696](https://github.com/emilk/egui/pull/4696) by [@emilk](https://github.com/emilk)\n* Add `PopupCloseBehavior` [#4636](https://github.com/emilk/egui/pull/4636) by [@Umatriz](https://github.com/Umatriz)\n* Add basic test for egui accesskit output [#4716](https://github.com/emilk/egui/pull/4716) by [@Wcubed](https://github.com/Wcubed)\n* Add `clamp_to_range` option to DragValue, rename `clamp_range` to `range` (deprecating the former) [#4728](https://github.com/emilk/egui/pull/4728) by [@Wumpf](https://github.com/Wumpf)\n* Add `Style::number_formatter` as the default used by `DragValue` [#4740](https://github.com/emilk/egui/pull/4740) by [@emilk](https://github.com/emilk)\n\n### üîß Changed\n* Improve the UI for changing the egui theme [#4257](https://github.com/emilk/egui/pull/4257) by [@emilk](https://github.com/emilk)\n* Change the resize cursor when you reach the resize limit [#4275](https://github.com/emilk/egui/pull/4275) by [@emilk](https://github.com/emilk)\n* Make `TextEdit` an atomic widget [#4276](https://github.com/emilk/egui/pull/4276) by [@emilk](https://github.com/emilk)\n* Rename `fn scroll2` to `fn scroll` [#4282](https://github.com/emilk/egui/pull/4282) by [@emilk](https://github.com/emilk)\n* Change `Frame::multiply_with_opacity` to multiply in gamma space [#4283](https://github.com/emilk/egui/pull/4283) by [@emilk](https://github.com/emilk)\n* Use parent `Ui`s style for popups [#4325](https://github.com/emilk/egui/pull/4325) by [@alexparlett](https://github.com/alexparlett)\n* Take `rounding` into account when using `Slider::trailing_fill` [#4308](https://github.com/emilk/egui/pull/4308) by [@rustbasic](https://github.com/rustbasic)\n* Allow users to create viewports larger than monitor on Windows & macOS [#4337](https://github.com/emilk/egui/pull/4337) by [@lopo12123](https://github.com/lopo12123)\n* Improve `ViewportBuilder::with_icon()` documentation [#4408](https://github.com/emilk/egui/pull/4408) by [@roccoblues](https://github.com/roccoblues)\n* `include_image!` now accepts expressions [#4521](https://github.com/emilk/egui/pull/4521) by [@YgorSouza](https://github.com/YgorSouza)\n* Remove scroll latency for smooth trackpads [#4526](https://github.com/emilk/egui/pull/4526) by [@emilk](https://github.com/emilk)\n* Smooth out zooming with discreet scroll wheel [#4530](https://github.com/emilk/egui/pull/4530) by [@emilk](https://github.com/emilk)\n* Make `TextEdit::return_key` optional [#4543](https://github.com/emilk/egui/pull/4543) by [@doonv](https://github.com/doonv)\n* Better spacing and sizes for (menu) buttons [#4558](https://github.com/emilk/egui/pull/4558) by [@emilk](https://github.com/emilk)\n* `ComboBox`: fix justified layout of popup if wider than parent button [#4570](https://github.com/emilk/egui/pull/4570) by [@emilk](https://github.com/emilk)\n* Make `Area` state public [#4576](https://github.com/emilk/egui/pull/4576) by [@emilk](https://github.com/emilk)\n* Don't persist `Area` size [#4749](https://github.com/emilk/egui/pull/4749) by [@emilk](https://github.com/emilk)\n* Round text galley sizes to nearest UI point size [#4578](https://github.com/emilk/egui/pull/4578) by [@emilk](https://github.com/emilk)\n* Once you have waited for a tooltip to show, show the next one right away [#4585](https://github.com/emilk/egui/pull/4585) by [@emilk](https://github.com/emilk)\n* Fade in windows, tooltips, popups, etc [#4587](https://github.com/emilk/egui/pull/4587) by [@emilk](https://github.com/emilk)\n* Make `egu::menu` types public [#4544](https://github.com/emilk/egui/pull/4544) by [@sor-ca](https://github.com/sor-ca)\n* The default constrain rect for `Area/Window` is now `ctx.screen_rect` [#4590](https://github.com/emilk/egui/pull/4590) by [@emilk](https://github.com/emilk)\n* Constrain `Area`s to screen by default [#4591](https://github.com/emilk/egui/pull/4591) by [@emilk](https://github.com/emilk)\n* `Grid`: set the `sizing_pass` flag during the initial sizing pass [#4612](https://github.com/emilk/egui/pull/4612) by [@emilk](https://github.com/emilk)\n* Remove special case for 0 in DragValue default formatter [#4639](https://github.com/emilk/egui/pull/4639) by [@YgorSouza](https://github.com/YgorSouza)\n* Abort drags when pressing escape key [#4678](https://github.com/emilk/egui/pull/4678) by [@emilk](https://github.com/emilk)\n* Allow setting a layer as a sublayer of another [#4690](https://github.com/emilk/egui/pull/4690) by [@YgorSouza](https://github.com/YgorSouza)\n* Close context menus with Escape [#4711](https://github.com/emilk/egui/pull/4711) by [@emilk](https://github.com/emilk)\n* Cancel DragValue edit if Escape is pressed [#4713](https://github.com/emilk/egui/pull/4713) by [@YgorSouza](https://github.com/YgorSouza)\n* The default parser for `DragValue` and `Slider` now ignores whitespace [#4739](https://github.com/emilk/egui/pull/4739) by [@emilk](https://github.com/emilk)\n* Disabled widgets are now also disabled in the accesskit output [#4750](https://github.com/emilk/egui/pull/4750) by [@Wcubed](https://github.com/Wcubed)\n* Make it easier to grab the handle of a floating scroll bar [#4754](https://github.com/emilk/egui/pull/4754) by [@emilk](https://github.com/emilk)\n* When debugging widget rects on hover, show width and height [#4762](https://github.com/emilk/egui/pull/4762) by [@emilk](https://github.com/emilk)\n* Make sure all tooltips close if you open a menu in the same layer [#4766](https://github.com/emilk/egui/pull/4766) by [@emilk](https://github.com/emilk)\n\n### üêõ Fixed\n* Fix wrong replacement function in deprecation notice of `drag_released*` [#4314](https://github.com/emilk/egui/pull/4314) by [@sornas](https://github.com/sornas)\n* Consider layer transform when positioning text agent [#4319](https://github.com/emilk/egui/pull/4319) by [@juancampa](https://github.com/juancampa)\n* Fix incorrect line breaks [#4377](https://github.com/emilk/egui/pull/4377) by [@juancampa](https://github.com/juancampa)\n* Fix `hex_color!` macro by re-exporting `color_hex` crate from `ecolor` [#4372](https://github.com/emilk/egui/pull/4372) by [@dataphract](https://github.com/dataphract)\n* Change `Ui::allocate_painter` to inherit properties from `Ui` [#4343](https://github.com/emilk/egui/pull/4343) by [@varphone](https://github.com/varphone)\n* Fix `Panel` incorrect size [#4351](https://github.com/emilk/egui/pull/4351) by [@zhatuokun](https://github.com/zhatuokun)\n* Improve IME support with new `Event::Ime` [#4358](https://github.com/emilk/egui/pull/4358) by [@rustbasic](https://github.com/rustbasic)\n* Disable interaction for `ScrollArea` and `Plot` when UI is disabled [#4457](https://github.com/emilk/egui/pull/4457) by [@varphone](https://github.com/varphone)\n* Don't panic when replacement glyph is not found [#4542](https://github.com/emilk/egui/pull/4542) by [@RyanBluth](https://github.com/RyanBluth)\n* Fix `Ui::scroll_with_delta` only scrolling if the `ScrollArea` is focused [#4303](https://github.com/emilk/egui/pull/4303) by [@lucasmerlin](https://github.com/lucasmerlin)\n* Handle tooltips so large that they cover the widget [#4623](https://github.com/emilk/egui/pull/4623) by [@emilk](https://github.com/emilk)\n* ScrollArea: Prevent drag interaction outside the area [#4611](https://github.com/emilk/egui/pull/4611) by [@s-nie](https://github.com/s-nie)\n* Fix buggy interaction with widgets outside of clip rect [#4675](https://github.com/emilk/egui/pull/4675) by [@emilk](https://github.com/emilk)\n* Make sure contents of a panel don't overflow [#4676](https://github.com/emilk/egui/pull/4676) by [@emilk](https://github.com/emilk)\n* Fix: `Response::hover_pos` returns incorrect positions with layer transforms [#4679](https://github.com/emilk/egui/pull/4679) by [@Creative0708](https://github.com/Creative0708)\n* Fix: Menu popups and tooltips don't respect layer transforms [#4708](https://github.com/emilk/egui/pull/4708) by [@Creative0708](https://github.com/Creative0708)\n* Bug fix: report latest area size in `Area::show` response [#4710](https://github.com/emilk/egui/pull/4710) by [@emilk](https://github.com/emilk)\n* Ensure `Window` scroll bars are at the window edges [#4733](https://github.com/emilk/egui/pull/4733) by [@emilk](https://github.com/emilk)\n* Prevent `TextEdit` widgets from sending fake primary clicks [#4751](https://github.com/emilk/egui/pull/4751) by [@Aliremu](https://github.com/Aliremu)\n* Fix text selection when there's multiple viewports [#4760](https://github.com/emilk/egui/pull/4760) by [@emilk](https://github.com/emilk)\n* Use correct cursor icons when resizing panels too wide or narrow [#4769](https://github.com/emilk/egui/pull/4769) by [@emilk](https://github.com/emilk)\n\n\n## 0.27.2 - 2024-04-02\n### üêõ Fixed\n* Fix tooltips for non-interactive widgets [#4291](https://github.com/emilk/egui/pull/4291)\n* Fix problem clicking the edge of a `TextEdit` [#4272](https://github.com/emilk/egui/pull/4272)\n* Fix: `Response::clicked_elsewhere` takes clip rect into account [#4274](https://github.com/emilk/egui/pull/4274)\n* Fix incorrect `Response::interact_rect` for `Area/Window` [#4273](https://github.com/emilk/egui/pull/4273)\n\n### ‚≠ê Added\n* Allow disabling animations on a `ScrollArea` [#4309](https://github.com/emilk/egui/pull/4309) (thanks [@lucasmerlin](https://github.com/lucasmerlin)!)\n\n\n## 0.27.1 - 2024-03-29\n### üêõ Fixed\n* Fix visual glitch on the right side of highly rounded rectangles [#4244](https://github.com/emilk/egui/pull/4244)\n* Prevent visual glitch when shadow blur width is very high [#4245](https://github.com/emilk/egui/pull/4245)\n* Fix `InputState::any_touches` and add `InputState::has_touch_screen` [#4247](https://github.com/emilk/egui/pull/4247)\n* Fix `Context::repaint_causes` returning no causes [#4248](https://github.com/emilk/egui/pull/4248)\n* Fix touch-and-hold to open context menu [#4249](https://github.com/emilk/egui/pull/4249)\n* Hide shortcut text on zoom buttons if `zoom_with_keyboard` is false [#4262](https://github.com/emilk/egui/pull/4262)\n\n### üîß Changed\n* Don't apply a clip rect to the contents of an `Area` or `Window` [#4258](https://github.com/emilk/egui/pull/4258)\n\n\n## 0.27.0 - 2024-03-26 - Nicer menus and new hit test logic\nThe hit test logic (what is the user clicking on?) has been completely rewritten, and should now be much more accurate and helpful.\nThe hit test and interaction logic is run at the start of the frame, using the widgets rects from the previous frame, but the latest mouse coordinates.\nIt enabled getting a `Response` for a widget _before_ creating it using `Context::read_response`.\nThis will in the future unlock more powerful widget styling options.\nThe new hit test also allows clicking slightly outside a button and still hit it, improving the support for touch screens.\n\nThe menus have also been improved so that they both act and feel better, with no change in API.\nIncluded in this is much nicer looking shadows, supporting an offset.\n\n<img width=\"580\" alt=\"Screenshot 2024-03-26 at 17 00 23\" src=\"https://github.com/emilk/egui/assets/1148717/f1eea39f-17a7-41ca-a983-ee142b04ef26\">\n\n\n### ‚ö†Ô∏è BREAKING\n* `Response::clicked*` and `Response::dragged*` may lock the `Context`, so don't call it from a `Context`-locking closure.\n* `Response::clicked_by` will no longer be true if clicked with keyboard. Use `Response::clicked` instead.\n* `Memory::focus` has been renamed `Memory::focused`\n* `Area::new` now takes an `Id` by argument [#4115](https://github.com/emilk/egui/pull/4115)\n* Change the definition of `clicked_by` [#4192](https://github.com/emilk/egui/pull/4192)\n\n### ‚ò∞ Menu related improvements\n* Add some distance between parent menu and submenu [#4230](https://github.com/emilk/egui/pull/4230)\n* Add `Area::sense` and improve hit-testing of buttons in menus [#4234](https://github.com/emilk/egui/pull/4234)\n* Improve logic for when submenus are kept open [#4166](https://github.com/emilk/egui/pull/4166)\n* Better align menus with the button that opened them [#4233](https://github.com/emilk/egui/pull/4233)\n* Hide hover UI when showing the context menu [#4138](https://github.com/emilk/egui/pull/4138) (thanks [@abey79](https://github.com/abey79)!)\n* CSS-like `Shadow` with offset, spread, and blur [#4232](https://github.com/emilk/egui/pull/4232)\n* On touch screens, press-and-hold equals a secondary click [#4195](https://github.com/emilk/egui/pull/4195)\n\n### ‚≠ê Added\n* Add with_taskbar to viewport builder [#3958](https://github.com/emilk/egui/pull/3958) (thanks [@AnotherNathan](https://github.com/AnotherNathan)!)\n* Add F21 to F35 key bindings [#4004](https://github.com/emilk/egui/pull/4004) (thanks [@oscargus](https://github.com/oscargus)!)\n* Add `Options::debug_paint_interactive_widgets` [#4018](https://github.com/emilk/egui/pull/4018)\n* Add `Ui::set_opacity` [#3965](https://github.com/emilk/egui/pull/3965) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Add `Response::paint_debug_info()` to make it easy to visualize a widget's id and state [#4056](https://github.com/emilk/egui/pull/4056) (thanks [@abey79](https://github.com/abey79)!)\n* Add layer transforms, interaction in layer [#3906](https://github.com/emilk/egui/pull/3906) (thanks [@Tweoss](https://github.com/Tweoss)!)\n* Add `ColorImage::from_gray_iter` [#3536](https://github.com/emilk/egui/pull/3536) (thanks [@wangxiaochuTHU](https://github.com/wangxiaochuTHU)!)\n* Add API for raw mouse motion [#4063](https://github.com/emilk/egui/pull/4063) (thanks [@GiantBlargg](https://github.com/GiantBlargg)!)\n* Add accessibility to `ProgressBar` and `Spinner` [#4139](https://github.com/emilk/egui/pull/4139) (thanks [@DataTriny](https://github.com/DataTriny)!)\n* Add x11 window type settings to viewport builder [#4175](https://github.com/emilk/egui/pull/4175) (thanks [@psethwick](https://github.com/psethwick)!)\n* Add an API for customizing the return key in TextEdit [#4085](https://github.com/emilk/egui/pull/4085) (thanks [@lemon-sh](https://github.com/lemon-sh)!)\n* Convenience `const fn` for `Margin`, `Rounding` and `Shadow` [#4080](https://github.com/emilk/egui/pull/4080) (thanks [@0Qwel](https://github.com/0Qwel)!)\n* Serde feature: add serde derives to input related structs [#4100](https://github.com/emilk/egui/pull/4100) (thanks [@gweisert](https://github.com/gweisert)!)\n* Give each menu `Area` an id distinct from the id of what was clicked  [#4114](https://github.com/emilk/egui/pull/4114)\n* `epaint`: Added `Shape::{scale,translate}` wrappers [#4090](https://github.com/emilk/egui/pull/4090) (thanks [@varphone](https://github.com/varphone)!)\n* A `Window` can now be resizable in only one direction [#4155](https://github.com/emilk/egui/pull/4155)\n* Add `EllipseShape` [#4122](https://github.com/emilk/egui/pull/4122) (thanks [@TheTacBanana](https://github.com/TheTacBanana)!)\n* Adjustable Slider rail height [#4092](https://github.com/emilk/egui/pull/4092) (thanks [@rustbasic](https://github.com/rustbasic)!)\n* Expose state override for `HeaderResponse` [#4200](https://github.com/emilk/egui/pull/4200) (thanks [@Zeenobit](https://github.com/Zeenobit)!)\n\n### üîß Changed\n* `TextEdit`: Change `margin` property to `egui::Margin` type [#3993](https://github.com/emilk/egui/pull/3993) (thanks [@bu5hm4nn](https://github.com/bu5hm4nn)!)\n* New widget interaction logic [#4026](https://github.com/emilk/egui/pull/4026)\n* `ui.dnd_drop_zone()` now returns `InnerResponse`. [#4079](https://github.com/emilk/egui/pull/4079) (thanks [@sowbug](https://github.com/sowbug)!)\n* Support interacting with the background of a `Ui` [#4074](https://github.com/emilk/egui/pull/4074)\n* Quickly animate scroll when calling `ui.scroll_to_cursor` etc  [#4119](https://github.com/emilk/egui/pull/4119)\n* Don't clear modifier state on focus change [#4157](https://github.com/emilk/egui/pull/4157) (thanks [@ming08108](https://github.com/ming08108)!)\n* Prevent `egui::Window` from becoming larger than viewport [#4199](https://github.com/emilk/egui/pull/4199) (thanks [@rustbasic](https://github.com/rustbasic)!)\n* Don't show URLs when hovering hyperlinks [#4218](https://github.com/emilk/egui/pull/4218)\n\n### üêõ Fixed\n* Fix incorrect handling of item spacing in `Window` title bar [#3995](https://github.com/emilk/egui/pull/3995) (thanks [@varphone](https://github.com/varphone)!)\n* Make `on_disabled_hover_ui` respect `tooltip_delay` [#4012](https://github.com/emilk/egui/pull/4012) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Fix `TextEdit` being too short whenever there is horizontal margin [#4005](https://github.com/emilk/egui/pull/4005) (thanks [@gweisert](https://github.com/gweisert)!)\n* Fix `Response::interact` and `Ui:interact_with_hovered` [#4013](https://github.com/emilk/egui/pull/4013)\n* Fix: `Response.interact_pointer_pos` is `Some` on click and drag released [#4014](https://github.com/emilk/egui/pull/4014)\n* Fix custom `Window` `Frame`s [#4009](https://github.com/emilk/egui/pull/4009) (thanks [@varphone](https://github.com/varphone)!)\n* Fix: images with background color now respects rounding [#4029](https://github.com/emilk/egui/pull/4029) (thanks [@vincent-sparks](https://github.com/vincent-sparks)!)\n* Fixed the incorrect display of the `Window` frame with a wide border or large rounding [#4032](https://github.com/emilk/egui/pull/4032) (thanks [@varphone](https://github.com/varphone)!)\n* TextEdit: fix crash when hitting SHIFT + TAB around non-ASCII text [#3984](https://github.com/emilk/egui/pull/3984) (thanks [@rustbasic](https://github.com/rustbasic)!)\n* Fix two `ScrollArea` bugs: leaking scroll target and broken animation to target offset [#4174](https://github.com/emilk/egui/pull/4174) (thanks [@abey79](https://github.com/abey79)!)\n* Fix bug in `Context::parent_viewport_id` [#4190](https://github.com/emilk/egui/pull/4190) (thanks [@rustbasic](https://github.com/rustbasic)!)\n* Remove unnecessary allocation in `RepaintCause::new` [#4146](https://github.com/emilk/egui/pull/4146) (thanks [@valsteen](https://github.com/valsteen)!)\n\n\n## 0.26.2 - 2024-02-14\n* Avoid interacting twice when not required [#4041](https://github.com/emilk/egui/pull/4041) (thanks [@abey79](https://github.com/abey79)!)\n\n\n## 0.26.1 - 2024-02-11\n* Fix `Window` title bar incorrect handling spacing [#3995](https://github.com/emilk/egui/pull/3995) (thanks [@varphone](https://github.com/varphone)!)\n* Make `on_disabled_hover_ui` respect `tooltip_delay` [#4012](https://github.com/emilk/egui/pull/4012) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Fix `TextEdit` being too short whenever there is horizontal margin [#4005](https://github.com/emilk/egui/pull/4005) (thanks [@gweisert](https://github.com/gweisert)!)\n* Fix `Response::interact` and `Ui:interact_with_hovered` [#4013](https://github.com/emilk/egui/pull/4013)\n* Fix: `Response.interact_pointer_pos` is `Some` on click and drag released [#4014](https://github.com/emilk/egui/pull/4014)\n* Fix custom `Window` `Frame`s [#4009](https://github.com/emilk/egui/pull/4009) (thanks [@varphone](https://github.com/varphone)!)\n\n\n## 0.26.0 - 2024-02-05 - Text selection in labels\n\n### ‚ö†Ô∏è BREAKING\n* Always set `response.hovered` to false when dragging another widget [#3860](https://github.com/emilk/egui/pull/3860)\n* `InputState::scroll_delta` has been replaced by `InputState::raw_scroll_delta` and `InputState::smooth_scroll_delta` [#3884](https://github.com/emilk/egui/pull/3884)\n* Improve `Response.dragged`, `drag_started` and `clicked` [#3888](https://github.com/emilk/egui/pull/3888)\n\n### ‚≠ê Added\n* Selectable text in Labels [#3814](https://github.com/emilk/egui/pull/3814) [#3870](https://github.com/emilk/egui/pull/3870)\n* Add some drag-and-drop-related APIs in `Response` and `Memory` [#3876](https://github.com/emilk/egui/pull/3876) (thanks [@abey79](https://github.com/abey79)!)\n* Add drag-and-drop APIs with payloads storage [#3887](https://github.com/emilk/egui/pull/3887)\n* `ComboBox`: add builder method for height [#3001](https://github.com/emilk/egui/pull/3001) (thanks [@hinto-janai](https://github.com/hinto-janai)!)\n* Add keys `?`, `/`, `|` [#3820](https://github.com/emilk/egui/pull/3820)\n* Add `Response::contains_pointer` [#3859](https://github.com/emilk/egui/pull/3859)\n* Add `Align2::anchor_size` [#3863](https://github.com/emilk/egui/pull/3863)\n* Add `Context::debug_text` [#3864](https://github.com/emilk/egui/pull/3864)\n* Allow read access to shapes added to painter this frame [#3866](https://github.com/emilk/egui/pull/3866) (thanks [@brunizzl](https://github.com/brunizzl)!)\n* Register callbacks with `Context::on_begin_frame` and `on_end_frame` [#3886](https://github.com/emilk/egui/pull/3886)\n* Improve `Frame` API to allow picking color until after adding content [#3889](https://github.com/emilk/egui/pull/3889)\n* Add opacity factor to `TextShape` [#3916](https://github.com/emilk/egui/pull/3916) (thanks [@StratusFearMe21](https://github.com/StratusFearMe21)!)\n* `Context::repaint_causes`: `file:line` of what caused a repaint [#3949](https://github.com/emilk/egui/pull/3949)\n* Add `TextureOptions::wrap_mode` [#3954](https://github.com/emilk/egui/pull/3954) (thanks [@CodedNil](https://github.com/CodedNil)!)\n* Add `Spacing::menu_width` [#3973](https://github.com/emilk/egui/pull/3973)\n\n### üîß Changed\n* Move text selection logic to own module [#3843](https://github.com/emilk/egui/pull/3843)\n* Smooth scrolling [#3884](https://github.com/emilk/egui/pull/3884)\n* Turn off text wrapping by default in combo-box popups [#3912](https://github.com/emilk/egui/pull/3912)\n* `Response.context_menu` now returns the response of the context menu, if open [#3904](https://github.com/emilk/egui/pull/3904) (thanks [@AufarZakiev](https://github.com/AufarZakiev)!)\n* Update to puffin 0.19 [#3940](https://github.com/emilk/egui/pull/3940)\n* Wait with showing tooltip until mouse has been still for 300ms [#3977](https://github.com/emilk/egui/pull/3977)\n\n### üêõ Fixed\n* Fix: dragging to above/below a `TextEdit` or `Label` will select text to begin/end [#3858](https://github.com/emilk/egui/pull/3858)\n* Fix clickable widgets blocking scrolling on touch screens [#3815](https://github.com/emilk/egui/pull/3815) (thanks [@lucasmerlin](https://github.com/lucasmerlin)!)\n* Fix `stable_dt` [#3832](https://github.com/emilk/egui/pull/3832)\n* Bug Fix : `Response::is_pointer_button_down_on` is now false the frame the button is released [#3833](https://github.com/emilk/egui/pull/3833) (thanks [@rustbasic](https://github.com/rustbasic)!)\n* Use runtime knowledge of OS for OS-specific text editing [#3840](https://github.com/emilk/egui/pull/3840)\n* Fix calling `request_repaint_after` every frame causing immediate repaint [#3978](https://github.com/emilk/egui/pull/3978)\n\n### üöÄ Performance\n* Niche-optimize `Id` so that `Option<Id>` is the same size as `Id` [#3932](https://github.com/emilk/egui/pull/3932)\n* Parallel tessellation with opt-in `rayon` feature [#3934](https://github.com/emilk/egui/pull/3934)\n\n\n\n## 0.25.0 - 2024-01-08 - Better keyboard input\n\n### ‚ö†Ô∏è BREAKING\n* Ignore extra SHIFT and ALT when matching modifiers [#3769](https://github.com/emilk/egui/pull/3769)\n* Replace `Key::PlusEquals` with `Key::Plus` and `Key::Equals` [#3769](https://github.com/emilk/egui/pull/3769)\n* Removed `WidgetTextGalley`, `WidgetTextJob`, `RichText::into_text_job`, `WidgetText::into_text_job` [#3727](https://github.com/emilk/egui/pull/3727)\n* Rename `TextBuffer::replace` to `replace_with` [#3751](https://github.com/emilk/egui/pull/3751)\n\n### ‚≠ê Added\n* Replace a special `Color32::PLACEHOLDER` with widget fallback color [#3727](https://github.com/emilk/egui/pull/3727)\n* Add `Key`s for `Cut` `Copy` `Paste` `[` `]` `,` `\\` `:` `.` `;` `+` `=`  [#3725](https://github.com/emilk/egui/pull/3725) [#3373](https://github.com/emilk/egui/pull/3373) [#3649](https://github.com/emilk/egui/pull/3649) [#3769](https://github.com/emilk/egui/pull/3769) (thanks [@MarijnS95](https://github.com/MarijnS95) and [@mkrueger](https://github.com/mkrueger)!)\n* Add `Key::from_name`, `Key::ALL` [#3649](https://github.com/emilk/egui/pull/3649)\n* Add `Event::Key::physical_key` [#3649](https://github.com/emilk/egui/pull/3649)\n* Add indeterminate state to checkbox [#3605](https://github.com/emilk/egui/pull/3605) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Add `Color32::from_hex` and `Color32::to_hex` [#3570](https://github.com/emilk/egui/pull/3570) [#3777](https://github.com/emilk/egui/pull/3777) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Add `DragValue`s for RGB(A) in the color picker [#2734](https://github.com/emilk/egui/pull/2734) (thanks [@IVAN-MK7](https://github.com/IVAN-MK7)!)\n* Add option to customize progress bar rounding [#2881](https://github.com/emilk/egui/pull/2881) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Add methods to load/store `TextEditState` undoer [#3479](https://github.com/emilk/egui/pull/3479) (thanks [@LoganDark](https://github.com/LoganDark)!)\n* `ScrollArea`: Add option to always scroll the only enabled direction [#3710](https://github.com/emilk/egui/pull/3710) (thanks [@untbu](https://github.com/untbu)!)\n\n### üîß Changed\n* `Grid` now follows `style.visuals.striped` if not explicitly overwritten [#3723](https://github.com/emilk/egui/pull/3723) (thanks [@Wcubed](https://github.com/Wcubed)!)\n* Allow arrow keys to move away focus from a Slider [#3641](https://github.com/emilk/egui/pull/3641) (thanks [@fornwall](https://github.com/fornwall)!)\n* Keep submenus open until another one is hovered [#3055](https://github.com/emilk/egui/pull/3055) (thanks [@DannyStoll1](https://github.com/DannyStoll1)!)\n* Highlight the header of the topmost `Window`, controlled by `Visuals.window_highlight_topmost` [#3515](https://github.com/emilk/egui/pull/3515) (thanks [@GuillaumeSchmid](https://github.com/GuillaumeSchmid)!)\n\n### üêõ Fixed\n* Derive `serde` `Serialize` and `Deserialize` for `KeyboardShortcut` [#3694](https://github.com/emilk/egui/pull/3694) (thanks [@zeozeozeo](https://github.com/zeozeozeo)!)\n* Fix `Window` positioning bug when bad `pivot` is stored in app data [#3721](https://github.com/emilk/egui/pull/3721) (thanks [@abey79](https://github.com/abey79)!)\n* Impl `Clone` for `Fonts` [#3737](https://github.com/emilk/egui/pull/3737)\n* Add missing `ResizeDirection::East` [#3749](https://github.com/emilk/egui/pull/3749) (thanks [@dbuch](https://github.com/dbuch)!)\n* Fix: don't open context menu on drag [#3767](https://github.com/emilk/egui/pull/3767)\n* Fix IME input of `CompositionEnd` without a `CompositionStart` [#3768](https://github.com/emilk/egui/pull/3768) (thanks [@FrankLeeC](https://github.com/FrankLeeC)!)\n* Fix: allow using the full Private Use Area for custom fonts [#3509](https://github.com/emilk/egui/pull/3509) (thanks [@varphone](https://github.com/varphone)!)\n* Fix: apply edited `DragValue` when it looses focus [#3776](https://github.com/emilk/egui/pull/3776)\n* Fix: Non-resizable `Area`s now ignore mouse input outside their bounds [#3039](https://github.com/emilk/egui/pull/3039) (thanks [@fleabitdev](https://github.com/fleabitdev)!)\n* Highlight submenu buttons when hovered and open [#3780](https://github.com/emilk/egui/pull/3780)\n* Invalidate font atlas on any change to `pixels_per_point`, not matter how small [#3698](https://github.com/emilk/egui/pull/3698) (thanks [@StarStarJ](https://github.com/StarStarJ)!)\n* Fix zoom-in shortcut (`Cmd +`) on non-English keyboards [#3769](https://github.com/emilk/egui/pull/3769)\n\n\n## 0.24.1 - 2023-11-30 - Bug fixes\n* Fix buggy text with multiple viewports on monitors with different scales [#3666](https://github.com/emilk/egui/pull/3666)\n\n\n## 0.24.0 - 2023-11-23 - Multi-viewport\n\n### ‚ú® Highlights\nYou can now spawn multiple native windows on supported backends (e.g. `eframe`), using [the new `viewport` API](https://docs.rs/egui/latest/egui/viewport/index.html) ([#3172](https://github.com/emilk/egui/pull/3172)).\n\nYou can easily zoom any egui app using Cmd+Plus, Cmd+Minus or Cmd+0, just like in a browser ([#3608](https://github.com/emilk/egui/pull/3608)).\n\nScrollbars are now hidden by default until you hover the `ScrollArea` ([#3539](https://github.com/emilk/egui/pull/3539)).\n\n### ‚≠ê Added\n* Multiple viewports/windows [#3172](https://github.com/emilk/egui/pull/3172) (thanks [@konkitoman](https://github.com/konkitoman)!)\n* Introduce global `zoom_factor` [#3608](https://github.com/emilk/egui/pull/3608)\n* Floating scroll bars [#3539](https://github.com/emilk/egui/pull/3539)\n* Add redo support to `Undoer` [#3478](https://github.com/emilk/egui/pull/3478) (thanks [@LoganDark](https://github.com/LoganDark)!)\n* Add `egui::Vec2b` [#3543](https://github.com/emilk/egui/pull/3543)\n* Add max `Window` size & other size helpers [#3537](https://github.com/emilk/egui/pull/3537) (thanks [@arduano](https://github.com/arduano)!)\n* Allow changing shape of slider handle [#3429](https://github.com/emilk/egui/pull/3429) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* `RawInput::viewports` contains a list of all viewports. Access the current one with `ctx.input(|i| i.viewport())`\n\n### üîß Changed\n* Replace `Id::null()` with `Id::NULL` [#3544](https://github.com/emilk/egui/pull/3544)\n* Update MSRV to Rust 1.72 [#3595](https://github.com/emilk/egui/pull/3595)\n* Update puffin to 0.18 [#3600](https://github.com/emilk/egui/pull/3600)\n\n### üêõ Fixed\n* Fix upside down slider in the vertical orientation [#3424](https://github.com/emilk/egui/pull/3424) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Make slider step account for range start [#3488](https://github.com/emilk/egui/pull/3488) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Fix rounding of `ImageButton` [#3531](https://github.com/emilk/egui/pull/3531) (thanks [@chriscate](https://github.com/chriscate)!)\n* Fix naming: `constraint_to` -> `constrain_to` [#3438](https://github.com/emilk/egui/pull/3438) (thanks [@rinde](https://github.com/rinde)!)\n* Fix Shift+Tab behavior when no widget is focused [#3498](https://github.com/emilk/egui/pull/3498) (thanks [@DataTriny](https://github.com/DataTriny)!)\n* Fix scroll not sticking when scrollbar is hidden [#3434](https://github.com/emilk/egui/pull/3434) (thanks [@LoganDark](https://github.com/LoganDark)!)\n* Add `#[inline]` to all builder-pattern functions [#3557](https://github.com/emilk/egui/pull/3557)\n* Properly reverse bool animation if value changes before it's finished [#3577](https://github.com/emilk/egui/pull/3577) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n\n\n### ‚ö†Ô∏è BREAKING\n* `egui::gui_zoom::zoom_with_keyboard_shortcuts` is gone, replaced with `Options::zoom_with_keyboard`, which is `true` by default\n* `Spacing::scroll_bar_X` has been moved to `Spacing::scroll_bar.X`\n* `Context::set_pixels_per_point` now calls `Context::set_zoom_level`, and it may make sense for you to call that directly instead\n* If you are using `eframe`, check out the breaking changes in [the `eframe` changelog](crates/eframe/CHANGELOG.md)\n\n#### For integrations\nThere are several changes relevant to integrations.\n\n* Added `crate::RawInput::viewports` with information about all active viewports\n* The repaint callback set by `Context::set_request_repaint_callback` now points to which viewport should be repainted\n* `Context::run` now returns a list of `ViewportOutput` in `FullOutput` which should result in their own independent windows\n* There is a new `Context::set_immediate_viewport_renderer` for setting up the immediate viewport integration\n* If you support viewports, you need to call `Context::set_embed_viewports(false)`, or all new viewports will be embedded (the default behavior)\n\n\n## 0.23.0 - 2023-09-27 - New image API\nThis release contains a simple and powerful image API:\n\n```rs\n// Load from web:\nui.image(\"https://www.example.com/some_image.png\");\n\n// Include image in the binary using `include_bytes`:\nui.image(egui::include_image!(\"../assets/ferris.svg\"));\n\n// With options:\nui.add(\n    egui::Image::new(\"file://path/to/image.jpg\")\n        .max_width(200.0)\n        .rounding(10.0),\n);\n```\n\nThe API is based on a plugin-system, where you can tell `egui` how to load the images, and from where.\n\n`egui_extras` comes with loaders for you, so all you need to do is add the following to your `Cargo.toml`:\n\n```toml\negui_extras = { version = \"0.23\", features = [\"all_loaders\"] }\nimage = { version = \"0.24\", features = [\"jpeg\", \"png\"] } # Add the types you want support for\n```\n\nAnd this to your code:\n\n```rs\negui_extras::install_image_loaders(egui_ctx);\n```\n\n### ‚ö†Ô∏è BREAKING\n* Update MSRV to Rust 1.70.0 [#3310](https://github.com/emilk/egui/pull/3310)\n* Break out plotting to own crate `egui_plot` [#3282](https://github.com/emilk/egui/pull/3282)\n\n### ‚≠ê Added\n* A new image API [#3297](https://github.com/emilk/egui/pull/3297) [#3315](https://github.com/emilk/egui/pull/3315) [#3328](https://github.com/emilk/egui/pull/3328) [#3338](https://github.com/emilk/egui/pull/3338) [#3342](https://github.com/emilk/egui/pull/3342) [#3343](https://github.com/emilk/egui/pull/3343) [#3402](https://github.com/emilk/egui/pull/3402) (thanks [@jprochazk](https://github.com/jprochazk)!)\n* Add option to truncate text at some width [#3244](https://github.com/emilk/egui/pull/3244)\n* Add control of line height and letter spacing [#3302](https://github.com/emilk/egui/pull/3302)\n* Support images with rounded corners [#3257](https://github.com/emilk/egui/pull/3257)\n* Change focused widget with arrow keys [#3272](https://github.com/emilk/egui/pull/3272) (thanks [@TimonPost](https://github.com/TimonPost)!)\n* Add opt-in `puffin` feature to egui [#3298](https://github.com/emilk/egui/pull/3298)\n* Add debug-option to show a callstack to the widget under the mouse and removed the `trace!` macro as this is more useful [#3391](https://github.com/emilk/egui/pull/3391)\n* Add `Context::open_url` and `Context::copy_text` [#3380](https://github.com/emilk/egui/pull/3380)\n* Add  `Area::constrain_to` and `Window::constrain_to` [#3396](https://github.com/emilk/egui/pull/3396)\n* Add `Memory::area_rect` [#3161](https://github.com/emilk/egui/pull/3161) (thanks [@tosti007](https://github.com/tosti007)!)\n* Add `Margin::expand_rect` and `shrink_rect` [#3214](https://github.com/emilk/egui/pull/3214)\n* Provide `into_inner()` for `egui::mutex::{Mutex, RwLock}` [#3110](https://github.com/emilk/egui/pull/3110) (thanks [@KmolYuan](https://github.com/KmolYuan)!)\n* Support multi-threaded Wasm [#3236](https://github.com/emilk/egui/pull/3236)\n* Change touch force to be `Option<f32>` instead of `f32` [#3240](https://github.com/emilk/egui/pull/3240) (thanks [@lucasmerlin](https://github.com/lucasmerlin)!)\n* Add option to always open hyperlink in a new browser tab [#3242](https://github.com/emilk/egui/pull/3242) (thanks [@FreddyFunk](https://github.com/FreddyFunk)!)\n* Add `Window::drag_to_scroll` [#3118](https://github.com/emilk/egui/pull/3118) (thanks [@KYovchevski](https://github.com/KYovchevski)!)\n* Add `CollapsingState::remove` to clear stored state [#3252](https://github.com/emilk/egui/pull/3252) (thanks [@dmackdev](https://github.com/dmackdev)!)\n* Add tooltip_delay option [#3245](https://github.com/emilk/egui/pull/3245) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Added `Context::is_context_menu_open()` [#3267](https://github.com/emilk/egui/pull/3267) (thanks [@dmlary](https://github.com/dmlary)!)\n* Add `mime` field to `DroppedFile` [#3273](https://github.com/emilk/egui/pull/3273) (thanks [@abey79](https://github.com/abey79)!)\n* Allow setting the progress bar height [#3183](https://github.com/emilk/egui/pull/3183) (thanks [@s-nie](https://github.com/s-nie)!)\n* Add `scroll_area::State::velocity` [#3300](https://github.com/emilk/egui/pull/3300) (thanks [@Barugon](https://github.com/Barugon)!)\n* Add `Visuals::interact_cursor` [#3312](https://github.com/emilk/egui/pull/3312) (thanks [@zkldi](https://github.com/zkldi)!)\n* Add method to `RichText` making it easier to construct layout jobs [#3319](https://github.com/emilk/egui/pull/3319) (thanks [@OmegaJak](https://github.com/OmegaJak)!)\n* Add `Context::style_mut` [#3359](https://github.com/emilk/egui/pull/3359)\n* `std::borrow::Cow<'_, str>` now implements `TextBuffer` [#3164](https://github.com/emilk/egui/pull/3164) (thanks [@burtonageo](https://github.com/burtonageo)!)\n\n### üîß Changed\n* Separate text cursor from selection visuals [#3181](https://github.com/emilk/egui/pull/3181) (thanks [@lampsitter](https://github.com/lampsitter)!)\n* `DragValue`: update value on each key press by default [#2880](https://github.com/emilk/egui/pull/2880) (thanks [@Barugon](https://github.com/Barugon)!)\n* Replace uses of `RangeInclusive<f32>` with `emath::Rangef` [#3221](https://github.com/emilk/egui/pull/3221)\n* Implement `Send + Sync` for `ColorPickerFn` and `Ui` (#3148) [#3233](https://github.com/emilk/egui/pull/3233) (thanks [@idanarye](https://github.com/idanarye)!)\n* Use the minus character instead of \"dash\" [#3271](https://github.com/emilk/egui/pull/3271)\n* Changing `menu_image_button` to use `ImageButton` builder [#3288](https://github.com/emilk/egui/pull/3288) (thanks [@v-kat](https://github.com/v-kat)!)\n* Prune old egui memory data when reaching some limit [#3299](https://github.com/emilk/egui/pull/3299)\n\n### üêõ Fixed\n* Fix TextEdit's character limit [#3173](https://github.com/emilk/egui/pull/3173) (thanks [@Serverator](https://github.com/Serverator)!)\n* Set the correct unicode character for \"ctrl\" shortcuts [#3186](https://github.com/emilk/egui/pull/3186) (thanks [@abey79](https://github.com/abey79)!)\n* Fix crash in `DragValue` when only setting `min_decimals` [#3231](https://github.com/emilk/egui/pull/3231)\n* Fix clipping issued with `ScrollArea` [#2860](https://github.com/emilk/egui/pull/2860) (thanks [@Barugon](https://github.com/Barugon)!)\n* Fix moving slider with arrow keys [#3354](https://github.com/emilk/egui/pull/3354)\n* Fix problems with tabs in text [#3355](https://github.com/emilk/egui/pull/3355)\n* Fix interaction with moved color-picker [#3395](https://github.com/emilk/egui/pull/3395)\n\n\n\n## 0.22.0 - 2023-05-23 - A plethora of small improvements\n### ‚≠ê Added\n* Scroll bar visibility options [#2729](https://github.com/emilk/egui/pull/2729) (thanks [@IVAN-MK7](https://github.com/IVAN-MK7)!)\n* Add `Grid::with_row_color` [#2519](https://github.com/emilk/egui/pull/2519) (thanks [@imgurbot12](https://github.com/imgurbot12)!)\n* Add raw mouse wheel event [#2782](https://github.com/emilk/egui/pull/2782) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Improved plot groups and bounds handling [#2410](https://github.com/emilk/egui/pull/2410) (thanks [@s-nie](https://github.com/s-nie)!)\n* Return plot transforms [#2935](https://github.com/emilk/egui/pull/2935)\n* Add `Pointer::is_decidedly_dragging` and `could_any_button_be_click` [#2979](https://github.com/emilk/egui/pull/2979)\n* Plot widget - allow disabling zoom and drag for x and y separately [#2901](https://github.com/emilk/egui/pull/2901) (thanks [@OmegaJak](https://github.com/OmegaJak)!)\n* Add character limit to `TextEdit` [#2816](https://github.com/emilk/egui/pull/2816) (thanks [@wzid](https://github.com/wzid)!)\n* Add `egui::Modifiers::contains` [#2989](https://github.com/emilk/egui/pull/2989) (thanks [@Wumpf](https://github.com/Wumpf)!)\n\n### üîß Changed\n* Improve vertical alignment of fonts [#2724](https://github.com/emilk/egui/pull/2724) (thanks [@lictex](https://github.com/lictex)!)\n* Transpose the value/satuation panel of the color picker [#2727](https://github.com/emilk/egui/pull/2727) (thanks [@IVAN-MK7](https://github.com/IVAN-MK7)!)\n* Replace `ComboBox::show_index` `String` with `Into<TextWidget>` [#2790](https://github.com/emilk/egui/pull/2790) (thanks [@tosti007](https://github.com/tosti007)!)\n* Replace `tracing` with `log` [#2928](https://github.com/emilk/egui/pull/2928)\n* Only show id clash warnings in debug builds by default [#2930](https://github.com/emilk/egui/pull/2930)\n* ‚ö†Ô∏è BREAKING: `Plot::link_axis` and `Plot::link_cursor` now take the name of the group [#2410](https://github.com/emilk/egui/pull/2410)\n\n### üêõ Fixed\n* Clear all keys and modifies on focus change, fixing \"stuck keys\" [#2933](https://github.com/emilk/egui/pull/2933)\n* Fix deadlock when using `show_blocking_widget` [#2753](https://github.com/emilk/egui/pull/2753) (thanks [@YgorSouza](https://github.com/YgorSouza)!)\n* Fix the OS check for windows [#2832](https://github.com/emilk/egui/pull/2832) (thanks [@jleibs](https://github.com/jleibs)!)\n* Fix scroll bars not appearing (#2826) [#2827](https://github.com/emilk/egui/pull/2827) (thanks [@lunixbochs](https://github.com/lunixbochs)!)\n* Fix UI `data()` read mutability [#2742](https://github.com/emilk/egui/pull/2742) (thanks [@IS2511](https://github.com/IS2511)!)\n* Menu State rect now uses menu frame rect instead of contents rect [#2886](https://github.com/emilk/egui/pull/2886) (thanks [@hats-np](https://github.com/hats-np)!)\n* Hide `Response::triple_clicked` in docs [#2867](https://github.com/emilk/egui/pull/2867) (thanks [@ccaven](https://github.com/ccaven)!)\n* `request_repaint_after` works even when called from background thread [#2939](https://github.com/emilk/egui/pull/2939)\n* Show alt key on Mac as `\"Option\"`, not `\"Alt\"` [#2981](https://github.com/emilk/egui/pull/2981) (thanks [@Wumpf](https://github.com/Wumpf)!)\n* Mention `store` in `TextEditState` doc comment [#2988](https://github.com/emilk/egui/pull/2988) (thanks [@fxdave](https://github.com/fxdave)!)\n* Fix typos [#2866](https://github.com/emilk/egui/pull/2866) (thanks [@fezjo](https://github.com/fezjo)!)\n\n\n### ‚ú® Examples\n* Fix resizable columns option in the table demo [#2780](https://github.com/emilk/egui/pull/2780) (thanks [@Bobo1239](https://github.com/Bobo1239)!)\n* Update serial window example [#2756](https://github.com/emilk/egui/pull/2756) (thanks [@c-git](https://github.com/c-git)!)\n* Demo app: use `enum` instead of strings for demo-selector anchor [#2781](https://github.com/emilk/egui/pull/2781) (thanks [@XyLyXyRR](https://github.com/XyLyXyRR)!)\n* Use `env_logger` in all examples [#2934](https://github.com/emilk/egui/pull/2934)\n* Rename `examples/user_attention/README.mg` to `README.md` [#2948](https://github.com/emilk/egui/pull/2948) (thanks [@MAlba124](https://github.com/MAlba124)!)\n* egui_demo_app: add some native window info [b5c24d6](https://github.com/emilk/egui/commit/b5c24d6ec83112440f1a807d5ec79241ea8b40fe)\n\n\n\n## 0.21.0 - 2023-02-08 - Deadlock fix and style customizability\n* ‚ö†Ô∏è BREAKING: `egui::Context` now use closures for locking ([#2625](https://github.com/emilk/egui/pull/2625)):\n  * `ctx.input().key_pressed(Key::A)` -> `ctx.input(|i| i.key_pressed(Key::A))`\n  * `ui.memory().toggle_popup(popup_id)` -> `ui.memory_mut(|mem| mem.toggle_popup(popup_id))`\n\n### ‚≠ê Added\n* Add `Response::drag_started_by` and `Response::drag_released_by` for convenience, similar to `dragged` and `dragged_by` ([#2507](https://github.com/emilk/egui/pull/2507)).\n* Add `PointerState::*_pressed` to check if the given button was pressed in this frame ([#2507](https://github.com/emilk/egui/pull/2507)).\n* `Event::Key` now has a `repeat` field that is set to `true` if the event was the result of a key-repeat ([#2435](https://github.com/emilk/egui/pull/2435)).\n* Add `Slider::drag_value_speed`, which lets you ask for finer precision when dragging the slider value rather than the actual slider.\n* Add `Memory::any_popup_open`, which returns true if any popup is currently open ([#2464](https://github.com/emilk/egui/pull/2464)).\n* Add `Plot::clamp_grid` to only show grid where there is data ([#2480](https://github.com/emilk/egui/pull/2480)).\n* Add `ScrollArea::drag_to_scroll` if you want to turn off that feature.\n* Add `Response::on_hover_and_drag_cursor`.\n* Add `Window::default_open` ([#2539](https://github.com/emilk/egui/pull/2539)).\n* Add `ProgressBar::fill` if you want to set the fill color manually. ([#2618](https://github.com/emilk/egui/pull/2618)).\n* Add `Button::rounding` to enable round buttons ([#2616](https://github.com/emilk/egui/pull/2616)).\n* Add `WidgetVisuals::optional_bg_color` - set it to `Color32::TRANSPARENT` to hide button backgrounds ([#2621](https://github.com/emilk/egui/pull/2621)).\n* Add `Context::screen_rect` and `Context::set_cursor_icon` ([#2625](https://github.com/emilk/egui/pull/2625)).\n* You can turn off the vertical line left of indented regions with `Visuals::indent_has_left_vline` ([#2636](https://github.com/emilk/egui/pull/2636)).\n* Add `Response.highlight` to highlight a widget ([#2632](https://github.com/emilk/egui/pull/2632)).\n* Add `Separator::grow` and `Separator::shrink` ([#2665](https://github.com/emilk/egui/pull/2665)).\n* Add `Slider::trailing_fill` for trailing color behind the circle like a `ProgressBar` ([#2660](https://github.com/emilk/egui/pull/2660)).\n\n### üîß Changed\n* Improved plot grid appearance ([#2412](https://github.com/emilk/egui/pull/2412)).\n* Improved the algorithm for picking the number of decimals to show when hovering values in the `Plot`.\n* Default `ComboBox` is now controlled with `Spacing::combo_width` ([#2621](https://github.com/emilk/egui/pull/2621)).\n* `DragValue` and `Slider` now use the proportional font ([#2638](https://github.com/emilk/egui/pull/2638)).\n* `ScrollArea` is less aggressive about clipping its contents ([#2665](https://github.com/emilk/egui/pull/2665)).\n* Updated to be compatible with a major breaking change in AccessKit that drastically reduces memory usage when accessibility is enabled ([#2678](https://github.com/emilk/egui/pull/2678)).\n* Improve `DragValue` behavior ([#2649](https://github.com/emilk/egui/pull/2649), [#2650](https://github.com/emilk/egui/pull/2650), [#2688](https://github.com/emilk/egui/pull/2688), [#2638](https://github.com/emilk/egui/pull/2638)).\n\n### üêõ Fixed\n* Trigger `PointerEvent::Released` for drags ([#2507](https://github.com/emilk/egui/pull/2507)).\n* Expose `TextEdit`'s multiline flag to AccessKit ([#2448](https://github.com/emilk/egui/pull/2448)).\n* Don't render `\\r` (Carriage Return) ([#2452](https://github.com/emilk/egui/pull/2452)).\n* The `button_padding` style option works closer as expected with image+text buttons now ([#2510](https://github.com/emilk/egui/pull/2510)).\n* Menus are now moved to fit on the screen.\n* Fix `Window::pivot` causing windows to move around ([#2694](https://github.com/emilk/egui/pull/2694)).\n\n\n## 0.20.1 - 2022-12-11 - Fix key-repeat\n### üîß Changed\n* `InputState`: all press functions again include key repeats (like in egui 0.19) ([#2429](https://github.com/emilk/egui/pull/2429)).\n* Improve the look of thin white lines ([#2437](https://github.com/emilk/egui/pull/2437)).\n\n### üêõ Fixed\n* Fix key-repeats for `TextEdit`, `Slider`s, etc ([#2429](https://github.com/emilk/egui/pull/2429)).\n\n\n## 0.20.0 - 2022-12-08 - AccessKit, prettier text, overlapping widgets\n* MSRV (Minimum Supported Rust Version) is now `1.65.0` ([#2314](https://github.com/emilk/egui/pull/2314)).\n* ‚ö†Ô∏è BREAKING: egui now expects integrations to do all color blending in gamma space ([#2071](https://github.com/emilk/egui/pull/2071)).\n* ‚ö†Ô∏è BREAKING: if you have overlapping interactive widgets, only the top widget (last added) will be interactive ([#2244](https://github.com/emilk/egui/pull/2244)).\n\n### ‚≠ê Added\n* Added helper functions for animating panels that collapse/expand ([#2190](https://github.com/emilk/egui/pull/2190)).\n* Added `Context::os/Context::set_os` to query/set what operating system egui believes it is running on ([#2202](https://github.com/emilk/egui/pull/2202)).\n* Added `Button::shortcut_text` for showing keyboard shortcuts in menu buttons ([#2202](https://github.com/emilk/egui/pull/2202)).\n* Added `egui::KeyboardShortcut` for showing keyboard shortcuts in menu buttons ([#2202](https://github.com/emilk/egui/pull/2202)).\n* Texture loading now takes a `TextureOptions` with minification and magnification filters ([#2224](https://github.com/emilk/egui/pull/2224)).\n* Added `Key::Minus` and `Key::Equals` ([#2239](https://github.com/emilk/egui/pull/2239)).\n* Added `egui::gui_zoom` module with helpers for scaling the whole GUI of an app ([#2239](https://github.com/emilk/egui/pull/2239)).\n* You can now put one interactive widget on top of another, and only one will get interaction at a time ([#2244](https://github.com/emilk/egui/pull/2244)).\n* Added `spacing.menu_margin` for customizing menu spacing ([#2036](https://github.com/emilk/egui/pull/2036))\n* Added possibility to enable text wrap for the selected text of `egui::ComboBox` ([#2272](https://github.com/emilk/egui/pull/2272))\n* Added `Area::constrain` and `Window::constrain` which constrains area to the screen bounds ([#2270](https://github.com/emilk/egui/pull/2270)).\n* Added `Area::pivot` and `Window::pivot` which controls what part of the window to position ([#2303](https://github.com/emilk/egui/pull/2303)).\n* Added support for [thin space](https://en.wikipedia.org/wiki/Thin_space).\n* Added optional integration with [AccessKit](https://accesskit.dev/) for implementing platform accessibility APIs ([#2294](https://github.com/emilk/egui/pull/2294)).\n* Added `panel_fill`, `window_fill` and `window_stroke` to `Visuals` for your theming pleasure ([#2406](https://github.com/emilk/egui/pull/2406)).\n* Plots:\n  * Allow linking plot cursors ([#1722](https://github.com/emilk/egui/pull/1722)).\n  * Added `Plot::auto_bounds_x/y` and `Plot::reset` ([#2029](https://github.com/emilk/egui/pull/2029)).\n  * Added `PlotUi::translate_bounds` ([#2145](https://github.com/emilk/egui/pull/2145)).\n  * Added `PlotUi::set_plot_bounds` ([#2320](https://github.com/emilk/egui/pull/2320)).\n  * Added `PlotUi::plot_secondary_clicked` ([#2318](https://github.com/emilk/egui/pull/2318)).\n\n### üîß Changed\n* Panels always have a separator line, but no stroke on other sides. Their spacing has also changed slightly ([#2261](https://github.com/emilk/egui/pull/2261)).\n* Tooltips are only shown when mouse pointer is still ([#2263](https://github.com/emilk/egui/pull/2263)).\n* Make it slightly easier to click buttons ([#2304](https://github.com/emilk/egui/pull/2304)).\n* `egui::color` has been renamed `egui::ecolor` ([#2399](https://github.com/emilk/egui/pull/2399)).\n\n### üêõ Fixed\n* ‚ö†Ô∏è BREAKING: Fix text being too small ([#2069](https://github.com/emilk/egui/pull/2069)).\n* Improve mixed CJK/Latin line-breaking ([#1986](https://github.com/emilk/egui/pull/1986)).\n* Improved text rendering ([#2071](https://github.com/emilk/egui/pull/2071)).\n* Constrain menu popups to the screen ([#2191](https://github.com/emilk/egui/pull/2191)).\n* Less jitter when calling `Context::set_pixels_per_point` ([#2239](https://github.com/emilk/egui/pull/2239)).\n* Fixed popups and color edit going outside the screen.\n* Fixed keyboard support in `DragValue` ([#2342](https://github.com/emilk/egui/pull/2342)).\n* If you nest `ScrollAreas` inside each other, the inner area will now move its scroll bar so it is always visible ([#2371](https://github.com/emilk/egui/pull/2371)).\n* Ignore key-repeats for `input.key_pressed` ([#2334](https://github.com/emilk/egui/pull/2334), [#2389](https://github.com/emilk/egui/pull/2389)).\n* Fixed issue with calling `set_pixels_per_point` each frame ([#2352](https://github.com/emilk/egui/pull/2352)).\n* Fix bug in `ScrollArea::show_rows` ([#2258](https://github.com/emilk/egui/pull/2258)).\n* Fix bug in `plot::Line::fill` ([#2275](https://github.com/emilk/egui/pull/2275)).\n* Only emit `changed` events in `radio_value` and `selectable_value` if the value actually changed ([#2343](https://github.com/emilk/egui/pull/2343)).\n* Fixed sizing bug in `Grid` ([#2384](https://github.com/emilk/egui/pull/2384)).\n* `ComboBox::width` now correctly sets the outer width ([#2406](https://github.com/emilk/egui/pull/2406)).\n\n\n## 0.19.0 - 2022-08-20\n### ‚≠ê Added\n* Added `*_released` & `*_clicked` methods for `PointerState` ([#1582](https://github.com/emilk/egui/pull/1582)).\n* Added `PointerButton::Extra1` and `PointerButton::Extra2` ([#1592](https://github.com/emilk/egui/pull/1592)).\n* Added `egui::hex_color!` to create `Color32`'s from hex strings under the `color-hex` feature ([#1596](https://github.com/emilk/egui/pull/1596)).\n* Optimized painting of filled circles (e.g. for scatter plots) by 10x or more ([#1616](https://github.com/emilk/egui/pull/1616)).\n* Added opt-in feature `deadlock_detection` to detect double-lock of mutexes on the same thread ([#1619](https://github.com/emilk/egui/pull/1619)).\n* Added `InputState::stable_dt`: a more stable estimate for the delta-time in reactive mode ([#1625](https://github.com/emilk/egui/pull/1625)).\n* You can now specify a texture filter for your textures ([#1636](https://github.com/emilk/egui/pull/1636)).\n* Added functions keys in `egui::Key` ([#1665](https://github.com/emilk/egui/pull/1665)).\n* Added support for using `PaintCallback` shapes with the WGPU backend ([#1684](https://github.com/emilk/egui/pull/1684)).\n* Added `Context::request_repaint_after` ([#1694](https://github.com/emilk/egui/pull/1694)).\n* `ctrl-h` now acts like backspace in `TextEdit` ([#1812](https://github.com/emilk/egui/pull/1812)).\n* Added `custom_formatter` method for `Slider` and `DragValue` ([#1851](https://github.com/emilk/egui/issues/1851)).\n* Added `RawInput::has_focus` which backends can set to indicate whether the UI as a whole has the keyboard focus ([#1859](https://github.com/emilk/egui/pull/1859)).\n* Added `PointerState::button_double_clicked()` and `PointerState::button_triple_clicked()` ([#1906](https://github.com/emilk/egui/issues/1906)).\n* Added `custom_formatter`, `binary`, `octal`, and `hexadecimal` to `DragValue` and `Slider` ([#1953](https://github.com/emilk/egui/issues/1953))\n\n### üîß Changed\n* MSRV (Minimum Supported Rust Version) is now `1.61.0` ([#1846](https://github.com/emilk/egui/pull/1846)).\n* `PaintCallback` shapes now require the whole callback to be put in an `Arc<dyn Any>` with the value being a backend-specific callback type ([#1684](https://github.com/emilk/egui/pull/1684)).\n* Replaced `needs_repaint` in `FullOutput` with `repaint_after`. Used to force repaint after the set duration in reactive mode ([#1694](https://github.com/emilk/egui/pull/1694)).\n* `Layout::left_to_right` and `Layout::right_to_left` now takes the vertical align as an argument. Previous default was `Align::Center`.\n* Improved ergonomics of adding plot items. All plot items that take a series of 2D coordinates can now be created directly from `Vec<[f64; 2]>`. The `Value` and `Values` types were removed in favor of `PlotPoint` and `PlotPoints` respectively ([#1816](https://github.com/emilk/egui/pull/1816)).\n* `TextBuffer` no longer needs to implement `AsRef<str>` ([#1824](https://github.com/emilk/egui/pull/1824)).\n\n### üêõ Fixed\n* Fixed `Response::changed` for `ui.toggle_value` ([#1573](https://github.com/emilk/egui/pull/1573)).\n* Fixed `ImageButton`'s changing background padding on hover ([#1595](https://github.com/emilk/egui/pull/1595)).\n* Fixed `Plot` auto-bounds bug ([#1599](https://github.com/emilk/egui/pull/1599)).\n* Fixed dead-lock when alt-tabbing while also showing a tooltip ([#1618](https://github.com/emilk/egui/pull/1618)).\n* Fixed `ScrollArea` scrolling when editing an unrelated `TextEdit` ([#1779](https://github.com/emilk/egui/pull/1779)).\n* Fixed `Slider` not always generating events on change ([#1854](https://github.com/emilk/egui/pull/1854)).\n* Fixed jitter of anchored windows for the first frame ([#1856](https://github.com/emilk/egui/pull/1856)).\n* Fixed focus behavior when pressing Tab in a UI with no focused widget ([#1861](https://github.com/emilk/egui/pull/1861)).\n* Fixed automatic plot bounds ([#1865](https://github.com/emilk/egui/pull/1865)).\n\n\n## 0.18.1 - 2022-05-01\n* Change `Shape::Callback` from `&dyn Any` to `&mut dyn Any` to support more backends.\n\n\n## 0.18.0 - 2022-04-30\n\n### ‚≠ê Added\n* Added `Shape::Callback` for backend-specific painting, [with an example](https://github.com/emilk/egui/tree/master/examples/custom_3d_glow) ([#1351](https://github.com/emilk/egui/pull/1351)).\n* Added `Frame::canvas` ([#1362](https://github.com/emilk/egui/pull/1362)).\n* `Context::request_repaint` will now wake up UI thread, if integrations has called `Context::set_request_repaint_callback` ([#1366](https://github.com/emilk/egui/pull/1366)).\n* Added `Plot::allow_scroll`, `Plot::allow_zoom` no longer affects scrolling ([#1382](https://github.com/emilk/egui/pull/1382)).\n* Added `Ui::push_id` to resolve id clashes ([#1374](https://github.com/emilk/egui/pull/1374)).\n* Added `ComboBox::icon` ([#1405](https://github.com/emilk/egui/pull/1405)).\n* Added `Ui::scroll_with_delta`.\n* Added `Frame::outer_margin`.\n* Added `Painter::hline` and `Painter::vline`.\n* Added `Link` and `ui.link` ([#1506](https://github.com/emilk/egui/pull/1506)).\n* Added triple-click support; triple-clicking a TextEdit field will select the whole paragraph ([#1512](https://github.com/emilk/egui/pull/1512)).\n* Added `Plot::x_grid_spacer` and `Plot::y_grid_spacer` for custom grid spacing ([#1180](https://github.com/emilk/egui/pull/1180)).\n* Added `Ui::spinner()` shortcut method ([#1494](https://github.com/emilk/egui/pull/1494)).\n* Added `CursorIcon`s for resizing columns, rows, and the eight cardinal directions.\n* Added `Ui::toggle_value`.\n* Added ability to add any widgets to the header of a collapsing region ([#1538](https://github.com/emilk/egui/pull/1538)).\n\n### üîß Changed\n* MSRV (Minimum Supported Rust Version) is now `1.60.0` ([#1467](https://github.com/emilk/egui/pull/1467)).\n* `ClippedMesh` has been replaced with `ClippedPrimitive` ([#1351](https://github.com/emilk/egui/pull/1351)).\n* Renamed `Frame::margin` to `Frame::inner_margin`.\n* Renamed `AlphaImage` to `FontImage` to discourage any other use for it ([#1412](https://github.com/emilk/egui/pull/1412)).\n* Warnings will be painted on screen when there is an `Id` clash for `Grid`, `Plot` or `ScrollArea` ([#1452](https://github.com/emilk/egui/pull/1452)).\n* `Checkbox` and `RadioButton` with an empty label (`\"\"`) will now take up much less space ([#1456](https://github.com/emilk/egui/pull/1456)).\n* Replaced `Memory::top_most_layer` with more flexible `Memory::layer_ids`.\n* Renamed the feature `convert_bytemuck` to `bytemuck` ([#1467](https://github.com/emilk/egui/pull/1467)).\n* Renamed the feature `serialize` to `serde` ([#1467](https://github.com/emilk/egui/pull/1467)).\n* Renamed `Painter::sub_region` to `Painter::with_clip_rect`.\n\n### üêõ Fixed\n* Fixed `ComboBox`es always being rendered left-aligned ([#1304](https://github.com/emilk/egui/pull/1304)).\n* Fixed ui code that could lead to a deadlock ([#1380](https://github.com/emilk/egui/pull/1380)).\n* Text is darker and more readable in bright mode ([#1412](https://github.com/emilk/egui/pull/1412)).\n* Fixed a lot of broken/missing doclinks  ([#1419](https://github.com/emilk/egui/pull/1419)).\n* Fixed `Ui::add_visible` sometimes leaving the `Ui` in a disabled state ([#1436](https://github.com/emilk/egui/issues/1436)).\n* Added line breaking rules for Japanese text ([#1498](https://github.com/emilk/egui/pull/1498)).\n\n### ‚ò¢Ô∏è Deprecated\n* Deprecated `CollapsingHeader::selectable` ([#1538](https://github.com/emilk/egui/pull/1538)).\n\n### üî• Removed\n* Removed the `single_threaded/multi_threaded` flags - egui is now always thread-safe ([#1390](https://github.com/emilk/egui/pull/1390)).\n\n### Contributors üôè\n* [4JX](https://github.com/4JX)\n* [a-liashenko](https://github.com/a-liashenko)\n* [ascclemens](https://github.com/ascclemens)\n* [awaken1ng](https://github.com/awaken1ng)\n* [bigfarts](https://github.com/bigfarts)\n* [bobyclaws](https://github.com/bobyclaws)\n* [Bromeon](https://github.com/Bromeon)\n* [cloudhead](https://github.com/cloudhead)\n* [collin-kemper](https://github.com/collin-kemper)\n* [cpterry](https://github.com/cpterry)\n* [dbuch](https://github.com/dbuch)\n* [DusterTheFirst](https://github.com/DusterTheFirst)\n* [Edgeworth ](https://github.com/Edgeworth )\n* [elwerene](https://github.com/elwerene)\n* [follower](https://github.com/follower)\n* [Friz64](https://github.com/Friz64)\n* [Hunter522 ](https://github.com/Hunter522 )\n* [Jake-Shadle](https://github.com/Jake-Shadle)\n* [jean-airoldie ](https://github.com/jean-airoldie )\n* [JelNiSlaw](https://github.com/JelNiSlaw)\n* [juancampa](https://github.com/juancampa)\n* [LU15W1R7H](https://github.com/LU15W1R7H)\n* [mbillingr](https://github.com/mbillingr)\n* [nicklasmoeller](https://github.com/nicklasmoeller)\n* [rukai](https://github.com/rukai)\n* [tami5](https://github.com/tami5)\n* [Titaniumtown](https://github.com/Titaniumtown)\n* [trevyn](https://github.com/trevyn)\n* [waynr](https://github.com/waynr)\n* [zam-5 ](https://github.com/zam-5 )\n\n\n## 0.17.0 - 2022-02-22 - Improved font selection and image handling\n\n### ‚≠ê Added\n* Much improved font selection ([#1154](https://github.com/emilk/egui/pull/1154)):\n  * You can now select any font size and family using `RichText::size` amd `RichText::family` and the new `FontId`.\n  * Easily change text styles with `Style::text_styles`.\n  * Added `Ui::text_style_height`.\n  * Added `TextStyle::resolve`.\n  * Made the v-align and scale of user fonts tweakable ([#1241](https://github.com/emilk/egui/pull/1027)).\n* Plot:\n  * Added `Plot::x_axis_formatter` and `Plot::y_axis_formatter` for custom axis labels ([#1130](https://github.com/emilk/egui/pull/1130)).\n  * Added `Plot::allow_boxed_zoom()`, `Plot::boxed_zoom_pointer()` for boxed zooming on plots ([#1188](https://github.com/emilk/egui/pull/1188)).\n  * Added plot pointer coordinates with `Plot::coordinates_formatter` ([#1235](https://github.com/emilk/egui/pull/1235)).\n  * Added linked axis support for plots via `plot::LinkedAxisGroup` ([#1184](https://github.com/emilk/egui/pull/1184)).\n* `Context::load_texture` to convert an image into a texture which can be displayed using e.g. `ui.image(texture, size)` ([#1110](https://github.com/emilk/egui/pull/1110)).\n* `Ui::input_mut` to modify how subsequent widgets see the `InputState` and a convenience method `InputState::consume_key` for shortcuts or hotkeys ([#1212](https://github.com/emilk/egui/pull/1212)).\n* Added `Ui::add_visible` and `Ui::add_visible_ui`.\n* Added `CollapsingHeader::icon` to override the default open/close icon using a custom function. ([1147](https://github.com/emilk/egui/pull/1147)).\n* Added `ui.data()`, `ctx.data()`, `ctx.options()` and `ctx.tessellation_options()` ([#1175](https://github.com/emilk/egui/pull/1175)).\n* Added `Response::on_hover_text_at_pointer` as a convenience akin to `Response::on_hover_text` ([1179](https://github.com/emilk/egui/pull/1179)).\n* Opt-in dependency on `tracing` crate for logging warnings ([#1192](https://github.com/emilk/egui/pull/1192)).\n* Added `ui.weak(text)`.\n* Added `Slider::step_by` ([1225](https://github.com/emilk/egui/pull/1225)).\n* Added `Context::move_to_top` and `Context::top_most_layer` for managing the layer on the top ([#1242](https://github.com/emilk/egui/pull/1242)).\n* Support a subset of macOS' emacs input field keybindings in `TextEdit` ([#1243](https://github.com/emilk/egui/pull/1243)).\n* Added ability to scroll a UI into view without specifying an alignment ([1247](https://github.com/emilk/egui/pull/1247)).\n* Added `Ui::scroll_to_rect` ([1252](https://github.com/emilk/egui/pull/1252)).\n\n### üîß Changed\n* ‚ö†Ô∏è `Context::input` and `Ui::input` now locks a mutex. This can lead to a dead-lock is used in an `if let` binding!\n  * `if let Some(pos) = ui.input().pointer.latest_pos()` and similar must now be rewritten on two lines.\n  * Search for this problem in your code using the regex `if let .*input`.\n* Better contrast in the default light mode style ([#1238](https://github.com/emilk/egui/pull/1238)).\n* Renamed `CtxRef` to `Context` ([#1050](https://github.com/emilk/egui/pull/1050)).\n* `Context` can now be cloned and stored between frames ([#1050](https://github.com/emilk/egui/pull/1050)).\n* Renamed `Ui::visible` to `Ui::is_visible`.\n* Split `Event::Text` into `Event::Text` and `Event::Paste` ([#1058](https://github.com/emilk/egui/pull/1058)).\n* Replaced `Style::body_text_style` with more generic `Style::text_styles` ([#1154](https://github.com/emilk/egui/pull/1154)).\n* `TextStyle` is no longer `Copy` ([#1154](https://github.com/emilk/egui/pull/1154)).\n* Replaced `TextEdit::text_style` with `TextEdit::font` ([#1154](https://github.com/emilk/egui/pull/1154)).\n* `Plot::highlight` now takes a `bool` argument ([#1159](https://github.com/emilk/egui/pull/1159)).\n* `ScrollArea::show` now returns a `ScrollAreaOutput`, so you might need to add `.inner` after the call to it ([#1166](https://github.com/emilk/egui/pull/1166)).\n* Replaced `corner_radius: f32` with `rounding: Rounding`, allowing per-corner rounding settings ([#1206](https://github.com/emilk/egui/pull/1206)).\n* Replaced Frame's `margin: Vec2` with `margin: Margin`, allowing for different margins on opposing sides ([#1219](https://github.com/emilk/egui/pull/1219)).\n* Renamed `Plot::custom_label_func` to `Plot::label_formatter` ([#1235](https://github.com/emilk/egui/pull/1235)).\n* `Areas::layer_id_at` ignores non-interatable layers (i.e. Tooltips) ([#1240](https://github.com/emilk/egui/pull/1240)).\n* `ScrollArea`s will not shrink below a certain minimum size, set by `min_scrolled_width/min_scrolled_height` ([1255](https://github.com/emilk/egui/pull/1255)).\n* For integrations:\n  * `Output` has now been renamed `PlatformOutput` and `Context::run` now returns the new `FullOutput` ([#1292](https://github.com/emilk/egui/pull/1292)).\n  * `FontImage` has been replaced by `TexturesDelta` (found in `FullOutput`), describing what textures were loaded and freed each frame ([#1110](https://github.com/emilk/egui/pull/1110)).\n  * The painter must support partial texture updates ([#1149](https://github.com/emilk/egui/pull/1149)).\n  * Added `RawInput::max_texture_side` which should be filled in with e.g. `GL_MAX_TEXTURE_SIZE` ([#1154](https://github.com/emilk/egui/pull/1154)).\n\n### üêõ Fixed\n* Plot `Orientation` was not public, although fields using this type were ([#1130](https://github.com/emilk/egui/pull/1130)).\n* Context menus now respects the theme ([#1043](https://github.com/emilk/egui/pull/1043)).\n* Calling `Context::set_pixels_per_point` before the first frame will now work.\n* Tooltips that don't fit the window don't flicker anymore ([#1240](https://github.com/emilk/egui/pull/1240)).\n* Scroll areas now follow text cursor ([#1252](https://github.com/emilk/egui/pull/1252)).\n* Slider: correctly respond with drag and focus events when interacting with the value directly ([1270](https://github.com/emilk/egui/pull/1270)).\n\n### Contributors üôè\n* [4JX](https://github.com/4JX)\n* [55nknown](https://github.com/55nknown)\n* [AlanRace](https://github.com/AlanRace)\n* [a-liashenko](https://github.com/a-liashenko)\n* [awaken1ng](https://github.com/awaken1ng)\n* [BctfN0HUK7Yg](https://github.com/BctfN0HUK7Yg)\n* [Bromeon](https://github.com/Bromeon)\n* [cat-state](https://github.com/cat)\n* [danielkeller](https://github.com/danielkeller)\n* [dvec](https://github.com/dvec)\n* [Friz64](https://github.com/Friz64)\n* [Gordon01](https://github.com/Gordon01)\n* [HackerFoo](https://github.com/HackerFoo)\n* [juancampa](https://github.com/juancampa)\n* [justinj](https://github.com/justinj)\n* [lampsitter](https://github.com/lampsitter)\n* [LordMZTE](https://github.com/LordMZTE)\n* [manuel-i](https://github.com/manuel)\n* [Mingun](https://github.com/Mingun)\n* [niklaskorz](https://github.com/niklaskorz)\n* [nongiach](https://github.com/nongiach)\n* [parasyte](https://github.com/parasyte)\n* [psiphi75](https://github.com/psiphi75)\n* [s-nie](https://github.com/s)\n* [t18b219k](https://github.com/t18b219k)\n* [terhechte](https://github.com/terhechte)\n* [xudesheng](https://github.com/xudesheng)\n* [yusdacra](https://github.com/yusdacra)\n\n\n## 0.16.1 - 2021-12-31 - Add back `CtxRef::begin_frame,end_frame`\n\n### ‚≠ê Added\n* Added back `CtxRef::begin_frame,end_frame` as an alternative to `CtxRef::run`.\n\n\n## 0.16.0 - 2021-12-29 - Context menus and rich text\n\n### ‚≠ê Added\n* Added context menus: See `Ui::menu_button` and `Response::context_menu` ([#543](https://github.com/emilk/egui/pull/543)).\n* Most widgets containing text (`Label`, `Button` etc) now supports rich text ([#855](https://github.com/emilk/egui/pull/855)).\n* Plots:\n  * Added bar charts and box plots ([#863](https://github.com/emilk/egui/pull/863)).\n  * You can now query information about the plot (e.g. get the mouse position in plot coordinates, or the plot\n    bounds) while adding items. `Plot` ([#766](https://github.com/emilk/egui/pull/766) and\n    [#892](https://github.com/emilk/egui/pull/892)).\n* You can now read and write the cursor of a `TextEdit` ([#848](https://github.com/emilk/egui/pull/848)).\n* When using a custom font you can now specify a font index ([#873](https://github.com/emilk/egui/pull/873)).\n* Added vertical sliders with `Slider::new(‚Ä¶).vertical()` ([#875](https://github.com/emilk/egui/pull/875)).\n* Added `Button::image_and_text` ([#832](https://github.com/emilk/egui/pull/832)).\n* Added `CollapsingHeader::open` to control if it is open or collapsed ([#1006](https://github.com/emilk/egui/pull/1006)).\n* Added `egui::widgets::color_picker::color_picker_color32` to show the color picker.\n\n### üîß Changed\n* MSRV (Minimum Supported Rust Version) is now `1.56.0`.\n* `ui.add(Button::new(\"‚Ä¶\").text_color(‚Ä¶))` is now `ui.button(RichText::new(\"‚Ä¶\").color(‚Ä¶))` (same for `Label` )([#855](https://github.com/emilk/egui/pull/855)).\n* Plots now provide a `show` method that has to be used to add items to and show the plot ([#766](https://github.com/emilk/egui/pull/766)).\n* `menu::menu(ui, ...)` is now `ui.menu_button(...)` ([#543](https://github.com/emilk/egui/pull/543))\n* Replaced `CtxRef::begin_frame` and `end_frame` with `CtxRef::run` ([#872](https://github.com/emilk/egui/pull/872)).\n* Replaced `scroll_delta` and `zoom_delta` in `RawInput` with `Event::Scroll` and `Event::Zoom`.\n* Unified the four `Memory` data buckets (`data`, `data_temp`, `id_data` and `id_data_temp`) into a single `Memory::data`, with a new interface ([#836](https://github.com/emilk/egui/pull/836)).\n* Replaced `Ui::__test` with `egui::__run_test_ui` ([#872](https://github.com/emilk/egui/pull/872)).\n\n### üêõ Fixed\n* Fixed `ComboBox` and other popups getting clipped to parent window ([#885](https://github.com/emilk/egui/pull/885)).\n* The color picker is now better at keeping the same hue even when saturation goes to zero ([#886](https://github.com/emilk/egui/pull/886)).\n\n### üî• Removed\n* Removed `egui::math` (use `egui::emath` instead).\n* Removed `egui::paint` (use `egui::epaint` instead).\n\n### Contributors üôè\n* [5225225](https://github.com/5225225): [#849](https://github.com/emilk/egui/pull/849).\n* [aevyrie](https://github.com/aevyrie): [#966](https://github.com/emilk/egui/pull/966).\n* [B-Reif](https://github.com/B-Reif): [#875](https://github.com/emilk/egui/pull/875).\n* [Bromeon](https://github.com/Bromeon): [#863](https://github.com/emilk/egui/pull/863), [#918](https://github.com/emilk/egui/pull/918).\n* [d10sfan](https://github.com/d10sfan): [#832](https://github.com/emilk/egui/pull/832).\n* [EmbersArc](https://github.com/EmbersArc): [#766](https://github.com/emilk/egui/pull/766), [#892](https://github.com/emilk/egui/pull/892).\n* [Hperigo](https://github.com/Hperigo): [#905](https://github.com/emilk/egui/pull/905).\n* [isegal](https://github.com/isegal): [#934](https://github.com/emilk/egui/pull/934).\n* [mankinskin](https://github.com/mankinskin): [#543](https://github.com/emilk/egui/pull/543).\n* [niladic](https://github.com/niladic): [#499](https://github.com/emilk/egui/pull/499), [#863](https://github.com/emilk/egui/pull/863).\n* [singalen](https://github.com/singalen): [#973](https://github.com/emilk/egui/pull/973).\n* [sumibi-yakitori](https://github.com/sumibi-yakitori): [#830](https://github.com/emilk/egui/pull/830), [#870](https://github.com/emilk/egui/pull/870).\n* [t18b219k](https://github.com/t18b219k): [#868](https://github.com/emilk/egui/pull/868), [#888](https://github.com/emilk/egui/pull/888).\n\n\n## 0.15.0 - 2021-10-24 - Syntax highlighting and hscroll\n\n<img src=\"media/egui-0.15-code-editor.gif\">\n\n### ‚≠ê Added\n* Added horizontal scrolling support to `ScrollArea` and `Window` (opt-in).\n* `TextEdit::layouter`: Add custom text layout for e.g. syntax highlighting or WYSIWYG.\n* `Fonts::layout_job`: New text layout engine allowing mixing fonts, colors and styles, with underlining and strikethrough.\n* Added `ui.add_enabled(bool, widget)` to easily add a possibly disabled widget.\n* Added `ui.add_enabled_ui(bool, |ui| ‚Ä¶)` to create a possibly disabled UI section.\n* Added feature `\"serialize\"` separately from `\"persistence\"`.\n* Added `egui::widgets::global_dark_light_mode_buttons` to easily add buttons for switching the egui theme.\n* `TextEdit` can now be used to show text which can be selected and copied, but not edited.\n* Added `Memory::caches` for caching things from one frame to the next.\n\n### üîß Changed\n* Change the default monospace font to [Hack](https://github.com/source-foundry/Hack).\n* Label text will now be centered, right-aligned and/or justified based on the layout of the `Ui` it is in.\n* `Hyperlink` will now word-wrap just like a `Label`.\n* All `Ui`s must now have a finite `max_rect`.\n  * Deprecated: `max_rect_finite`, `available_size_before_wrap_finite` and `available_rect_before_wrap_finite`.\n* `Painter`/`Fonts`: text layout now expect a color when creating a `Galley`. You may override that color with `Painter::galley_with_color`.\n* MSRV (Minimum Supported Rust Version) is now `1.54.0`.\n* By default, `DragValue`s no longer show a tooltip when hovered. Change with `Style::explanation_tooltips`.\n* Smaller and nicer color picker.\n* `ScrollArea` will auto-shrink to content size unless told otherwise using `ScrollArea::auto_shrink`.\n* By default, `Slider`'s `clamp_to_range` is set to true.\n* Renamed `TextEdit::enabled` to `TextEdit::interactive`.\n* `ui.label` (and friends) now take `impl ToString` as argument instead of `impl Into<Label>`.\n\n### üêõ Fixed\n* Fixed wrongly sized multiline `TextEdit` in justified layouts.\n* Fixed clip rectangle of windows that don't fit the central area.\n* Show tooltips above widgets on touch screens.\n* Fixed popups sometimes getting clipped by panels.\n\n### üî• Removed\n* Replace `Button::enabled` with `ui.add_enabled`.\n\n### Contributors üôè\n* [AlexApps99](https://github.com/AlexApps99)\n* [baysmith](https://github.com/baysmith)\n* [bpostlethwaite](https://github.com/bpostlethwaite)\n* [cwfitzgerald](https://github.com/cwfitzgerald)\n* [DrOptix](https://github.com/DrOptix)\n* [JerzySpendel](https://github.com/JerzySpendel)\n* [NiceneNerd](https://github.com/NiceneNerd)\n* [parasyte](https://github.com/parasyte)\n* [spersson](https://github.com/spersson)\n* [Stock84-dev](https://github.com/Stock84-dev)\n* [sumibi-yakitori](https://github.com/sumibi-yakitori)\n* [t18b219k](https://github.com/t18b219k)\n* [TobTobXX](https://github.com/TobTobXX)\n* [zu1k](https://github.com/zu1k)\n\n\n## 0.14.2 - 2021-08-28 - Window resize fix\n\n### üêõ Fixed\n* Fixed window resize bug introduced in `0.14.1`.\n\n\n## 0.14.1 - 2021-08-28 - Layout bug fixes\n\n### ‚≠ê Added\n* Added `Ui::horizontal_top`.\n\n### üêõ Fixed\n* Fixed `set_width/set_min_width/set_height/set_min_height/expand_to_include_x/expand_to_include_y`.\n* Make minimum grid column width propagate properly.\n* Make sure `TextEdit` contents expand to fill width if applicable.\n* `ProgressBar`: add a minimum width and fix for having it in an infinite layout.\n* Fixed sometimes not being able to click inside a combo box or popup menu.\n\n\n## 0.14.0 - 2021-08-24 - Ui panels and bug fixes\n\n### ‚≠ê Added\n* Panels can now be added to any `Ui`.\n* Plot:\n  * [Line styles](https://github.com/emilk/egui/pull/482).\n  * Added `show_background` and `show_axes` methods to `Plot`.\n* [Progress bar](https://github.com/emilk/egui/pull/519).\n* `Grid::num_columns`: allow the last column to take up the rest of the space of the parent `Ui`.\n* Added an API for dropping files into egui (see `RawInput`).\n* `CollapsingHeader` can now optionally be selectable.\n\n### üîß Changed\n* A single-line `TextEdit` will now clip text that doesn't fit in it, and scroll.\n* Return closure return value from `Area::show`, `ComboBox::show_ui`, `ComboBox::combo_box_with_label`, `Window::show`, `popup::*`, `menu::menu`.\n* Only move/resize windows with primary mouse button.\n* Tooltips are now moved to not cover the widget they are attached to.\n\n### üêõ Fixed\n* Fixed custom font definitions getting replaced when `pixels_per_point` is changed.\n* Fixed `lost_focus` for `TextEdit`.\n* Clicking the edge of a menu button will now properly open the menu.\n* Fixed hover detection close to an `Area`.\n* Fixed case where `Plot`'s `min_auto_bounds` could be ignored after the first call to `Plot::ui`.\n* Fixed slow startup when using large font files.\n\n### Contributors üôè\n* [barrowsys](https://github.com/barrowsys)\n* [EmbersArc](https://github.com/EmbersArc)\n* [gents83](https://github.com/gents83 )\n* [lucaspoffo](https://github.com/lucaspoffo)\n* [mankinskin](https://github.com/mankinskin)\n* [mental32](https://github.com/mental32)\n* [mitchmindtree](https://github.com/mitchmindtree)\n* [parasyte](https://github.com/parasyte)\n* [rekka](https://github.com/rekka)\n* [zu1k](https://github.com/zu1k)\n\n\n## 0.13.1 - 2021-06-28 - Plot fixes\n\n### ‚≠ê Added\n* Plot: you can now set the stroke of a `HLine/VLine`.\n\n### üîß Changed\n* `Plot::new` now takes an `id_source: impl Hash` instead of a `name: impl ToString`. Functionally it is the same.\n\n\n## 0.13.0 - 2021-06-24 - Better panels, plots and new visual style\n\n### ‚≠ê Added\n* Plot:\n  * [More plot items: Arrows, Polygons, Text, Images](https://github.com/emilk/egui/pull/471).\n  * [Plot legend improvements](https://github.com/emilk/egui/pull/410).\n  * [Line markers for plots](https://github.com/emilk/egui/pull/363).\n* Panels:\n  * Added right and bottom panels (`SidePanel::right` and `Panel::bottom`).\n  * Panels can now be resized.\n  * Added an option to overwrite frame of a `Panel`.\n* [Improve accessibility / screen reader](https://github.com/emilk/egui/pull/412).\n* Added `ScrollArea::show_rows` for efficient scrolling of huge UI:s.\n* Added `ScrollArea::enable_scrolling` to allow freezing scrolling when editing TextEdit widgets within it\n* Added `Ui::set_visible` as a way to hide widgets.\n* Added `Style::override_text_style` to easily change the text style of everything in a `Ui` (or globally).\n* You can now change `TextStyle` on checkboxes, radio buttons and `SelectableLabel`.\n* Added support for [cint](https://crates.io/crates/cint) under `cint` feature.\n* Added features `extra_asserts` and `extra_debug_asserts` to enable additional checks.\n* `TextEdit` now supports edits on a generic buffer using `TextBuffer`.\n* Added `Context::set_debug_on_hover` and `egui::trace!(ui)`\n\n### üîß Changed\n* Minimum Rust version is now 1.51 (used to be 1.52)\n* [Tweaked the default visuals style](https://github.com/emilk/egui/pull/450).\n* Plot: Renamed `Curve` to `Line`.\n* `TopPanel::top` is now `TopBottomPanel::top`.\n* `SidePanel::left` no longer takes the default width by argument, but by a builder call.\n* `SidePanel::left` is resizable by default.\n\n### üêõ Fixed\n* Fixed uneven lettering on non-integral device scales (\"extortion lettering\").\n* Fixed invisible scroll bar when native window is too narrow for egui.\n\n\n## 0.12.0 - 2021-05-10 - Multitouch, user memory, window pivots, and improved plots\n\n### ‚≠ê Added\n* Added anchors to windows and areas so you can put a window in e.g. the top right corner.\n* Make labels interactive with `Label::sense(Sense::click())`.\n* Added `Response::request_focus` and `Response::surrender_focus`.\n* Added `TextEdit::code_editor` (VERY basic).\n* [Pan and zoom plots](https://github.com/emilk/egui/pull/317).\n* [Add plot legends](https://github.com/emilk/egui/pull/349).\n* [Users can now store custom state in `egui::Memory`](https://github.com/emilk/egui/pull/257).\n* Added `Response::on_disabled_hover_text` to show tooltip for disabled widgets.\n* Zoom input: ctrl-scroll and (on `eframe` web) trackpad-pinch gesture.\n* Support for raw [multi touch](https://github.com/emilk/egui/pull/306) events,\n  enabling zoom, rotate, and more. Works with `eframe` web on mobile devices,\n  and should work with `egui_glium` for certain touch devices/screens.\n* Added (optional) compatibility with [mint](https://docs.rs/mint).\n\n### üîß Changed\n* Make `Memory::has_focus` public (again).\n* `Plot` must now be given a name that is unique within its scope.\n* Tab only selects labels if the `screen_reader` option is turned on.\n* Renamed `ui.wrap` to `ui.scope`.\n\n### üêõ Fixed\n* Fixed [defocus-bug on touch screens](https://github.com/emilk/egui/issues/288).\n* Fixed bug with the layout of wide `DragValue`s.\n\n### üî• Removed\n* Moved experimental markup language to `egui_demo_lib`\n\n\n## 0.11.0 - 2021-04-05 - Optimization, screen reader & new layout logic\n\n### ‚≠ê Added\n* You can now give focus to any clickable widget with tab/shift-tab.\n  * Use space or enter to click the selected widget.\n  * Use arrow keys to adjust sliders and `DragValue`s.\n* egui will now output events when widgets gain keyboard focus.\n  * This can be hooked up to a screen reader to aid the visually impaired\n* Added the option to restrict the dragging bounds of `Window` and `Area` to a specified area using `drag_bounds(rect)`.\n* Added support for small and raised text.\n* Added `ui.set_row_height`.\n* Added `DebugOptions::show_widgets` to debug layouting by hovering widgets.\n* Added `ComboBox` to more easily customize combo boxes.\n* Added `Slider::new` and `DragValue::new` to replace old type-specific constructors.\n* Added `TextEdit::password` to hide input characters.\n\n### üîß Changed\n* `ui.advance_cursor` is now called `ui.add_space`.\n* `kb_focus` is now just called `focus`.\n\n### üêõ Fixed\n* Fixed some bugs related to centered layouts.\n* Fixed secondary-click to open a menu.\n* [Fix panic for zero-range sliders and zero-speed drag values](https://github.com/emilk/egui/pull/216).\n* Fixed false id clash error for wrapping text.\n* Fixed bug that would close a popup (e.g. the color picker) when clicking inside of it.\n\n### ‚ò¢Ô∏è Deprecated\n* Deprecated `combo_box_with_label` in favor of new `ComboBox`.\n* Deprecated type-specific constructors for `Slider` and `DragValue` (`Slider::f32`, `DragValue::usize` etc).\n\n\n## 0.10.0 - 2021-02-28 - Plot and polish\n\n<img src=\"media/egui-0.10-plot.gif\" width=\"50%\">\n\n### ‚≠ê Added\n* Added `egui::plot::Plot` to plot some 2D data.\n* Added `Ui::hyperlink_to(label, url)`.\n* Sliders can now have a value prefix and suffix (e.g. the suffix `\"¬∞\"` works like a unit).\n* `Context::set_pixels_per_point` to control the scale of the UI.\n* Added `Response::changed()` to query if e.g. a slider was dragged, text was entered or a checkbox was clicked.\n* Added support for all integers in `DragValue` and `Slider` (except 128-bit).\n\n### üîß Changed\n* Improve the positioning of tooltips.\n* Only show tooltips if mouse is still.\n* `Slider` will now show the value display by default, unless turned off with `.show_value(false)`.\n* The `Slider` value is now a `DragValue` which when dragged can pick values outside of the slider range (unless `clamp_to_range` is set).\n\n\n## 0.9.0 - 2021-02-07 - Light Mode and much more\n\n<img src=\"media/0.9.0-disabled.gif\" width=\"50%\">\n\n### ‚≠ê Added\n* Added support for secondary and middle mouse buttons.\n* Added `Label` methods for code, strong, strikethrough, underline and italics.\n* Added `ui.group(|ui| { ‚Ä¶ })` to visually group some widgets within a frame.\n* Added `Ui` helpers for doing manual layout (`ui.put`, `ui.allocate_ui_at_rect` and more).\n* Added `ui.set_enabled(false)` to disable all widgets in a `Ui` (grayed out and non-interactive).\n* Added `TextEdit::hint_text` for showing a weak hint text when empty.\n* `egui::popup::popup_below_widget`: show a popup area below another widget.\n* Added `Slider::clamp_to_range(bool)`: if set, clamp the incoming and outgoing values to the slider range.\n* Add: `ui.spacing()`, `ui.spacing_mut()`, `ui.visuals()`, `ui.visuals_mut()`.\n* Add: `ctx.set_visuals()`.\n* You can now control text wrapping with `Style::wrap`.\n* Added `Grid::max_col_width`.\n\n### üîß Changed\n* Text will now wrap at newlines, spaces, dashes, punctuation or in the middle of a words if necessary, in that order of priority.\n* Widgets will now always line break at `\\n` characters.\n* Widgets will now more intelligently choose whether or not to wrap text.\n* `mouse` has been renamed `pointer` everywhere (to make it clear it includes touches too).\n* Most parts of `Response` are now methods, so `if ui.button(\"‚Ä¶\").clicked {` is now `if ui.button(\"‚Ä¶\").clicked() {`.\n* `Response::active` is now gone. You can use `response.dragged()` or `response.clicked()` instead.\n* Backend: pointer (mouse/touch) position and buttons are now passed to egui in the event stream.\n* `DragValue::range` is now called `clamp_range` and also clamps incoming values.\n* Renamed `Triangles` to `Mesh`.\n* The tessellator now wraps the clip rectangle and mesh in `struct ClippedMesh(Rect, Mesh)`.\n* `Mesh::split_to_u16` now returns a 16-bit indexed `Mesh16`.\n\n### üêõ Fixed\n* It is now possible to click widgets even when FPS is very low.\n* Tessellator: handle sharp path corners better (switch to bevel instead of miter joints for > 90¬∞).\n\n\n## 0.8.0 - 2021-01-17 - Grid layout & new visual style\n\n<img src=\"media/widget_gallery_0.8.0.gif\" width=\"50%\">\n\n### ‚≠ê Added\n* Added a simple grid layout (`Grid`).\n* Added `ui.allocate_at_least` and `ui.allocate_exact_size`.\n* Added function `InputState::key_down`.\n* Added `Window::current_pos` to position a window.\n\n### üîß Changed\n* New simpler and sleeker look!\n* Renamed `PaintCmd` to `Shape`.\n* Replace tuple `(Rect, Shape)` with tuple-struct `ClippedShape`.\n* Renamed feature `\"serde\"` to `\"persistence\"`.\n* Break out the modules `math` and `paint` into separate crates `emath` and `epaint`.\n\n### üêõ Fixed\n* Fixed a bug that would sometimes trigger a \"Mismatching panels\" panic in debug builds.\n* `Image` and `ImageButton` will no longer stretch to fill a justified layout.\n\n\n## 0.7.0 - 2021-01-04\n\n### ‚≠ê Added\n* Added `ui.scroll_to_cursor` and `response.scroll_to_me` ([#81](https://github.com/emilk/egui/pull/81) by [lucaspoffo](https://github.com/lucaspoffo)).\n* Added `window.id(‚Ä¶)` and `area.id(‚Ä¶)` for overriding the default `Id`.\n\n### üîß Changed\n* Renamed `Srgba` to `Color32`.\n* All color constructors now starts with `from_`, e.g. `Color32::from_rgb`.\n* Renamed `FontFamily::VariableWidth` to `FontFamily::Proportional`.\n* Removed `pixels_per_point` from `FontDefinitions`.\n\n### üêõ Fixed\n* `RepaintSignal` now implements `Sync` so it can be sent to a background thread.\n* `TextEdit` widgets are now slightly larger to accommodate their frames.\n\n### ‚ò¢Ô∏è Deprecated\n* Deprecated `color::srgba`.\n\n\n## 0.6.0 - 2020-12-26\n\n### ‚≠ê Added\n* Turn off `Window` title bars with `window.title_bar(false)`.\n* `ImageButton` - `ui.add(ImageButton::new(‚Ä¶))`.\n* `ui.vertical_centered` and `ui.vertical_centered_justified`.\n* `ui.allocate_painter` helper.\n* Mouse-over explanation to duplicate ID warning.\n* You can now easily constrain egui to a portion of the screen using `RawInput::screen_rect`.\n* You can now control the minimum and maixumum number of decimals to show in a `Slider` or `DragValue`.\n* Added `egui::math::Rot2`: rotation helper.\n* `Response` now contains the `Id` of the widget it pertains to.\n* `ui.allocate_response` that allocates space and checks for interactions.\n* Added `response.interact(sense)`, e.g. to check for clicks on labels.\n\n### üîß Changed\n* `ui.allocate_space` now returns an `(Id, Rect)` tuple.\n* `Arc<Context>` has been replaced with `CtxRef` everywhere.\n* Slight tweak of the default `Style` and font sizes.\n* `SidePanel::left` and `TopPanel::top` now takes `impl Hash` as first argument.\n* A `Window` may now cover an existing `CentralPanel`.\n* `ui.image` now takes `impl Into<Vec2>` as a `size` argument.\n* Made some more fields of `RawInput` optional.\n* `Slider` and `DragValue` uses fewer decimals by default. See the full precision by hovering over the value.\n* `egui::App`: added `fn name(&self)` and `fn clear_color(&self)`.\n* Combo boxes has scroll bars when needed.\n* Expand `Window` + `Resize` containers to be large enough for last frames content\n* `ui.columns`: Columns now defaults to justified top-to-down layouts.\n* Renamed `Sense::nothing()` to  `Sense::hover()`.\n* Replaced `parking_lot` dependency with `atomic_refcell` by default.\n\n### üêõ Fixed\n* The background for `CentralPanel` will now cover unused space too.\n* `ui.columns`: Improve allocated size estimation.\n\n### ‚ò¢Ô∏è Deprecated\n* `RawInput::screen_size` - use `RawInput::screen_rect` instead.\n* left/centered/right column functions on `Ui`.\n* `ui.interact_hover` and `ui.hovered`.\n\n\n## 0.5.0 - 2020-12-13\n\n### ‚≠ê Added\n* Emoji support: 1216 different emojis that work in any text.\n  * The Demo app comes with a Font Book to explore the available glyphs.\n* `ui.horizontal_wrapped(|ui| ‚Ä¶)`: Add widgets on a row but wrap at `max_size`.\n* `ui.horizontal_wrapped_for_text`: Like `ui.horizontal_wrapped`, but with spacing made for embedding text.\n* `ui.horizontal_for_text`: Like `ui.horizontal`, but with spacing made for embedding text.\n* `egui::Layout` now supports justified layouts where contents is _also_ centered, right-aligned, etc.\n* `ui.allocate_ui(size, |ui| ‚Ä¶)`: Easily create a child-`Ui` of a given size.\n* `SelectableLabel` (`ui.selectable_label` and `ui.selectable_value`): A text-button that can be selected.\n* `ui.small_button`: A smaller button that looks good embedded in text.\n* `ui.drag_angle_tau`: For those who want to specify angles as fractions of œÑ (a full turn).\n* Added `Resize::id_source` and `ScrollArea::id_source` to let the user avoid Id clashes.\n\n### üîß Changed\n* New default font: [Ubuntu-Light](https://fonts.google.com/specimen/Ubuntu).\n* Make it simpler to override fonts in `FontDefinitions`.\n* Remove minimum button width.\n* Refactor `egui::Layout` substantially, changing its interface.\n* Calling `on_hover_text`/`on_hover_ui` multiple times will stack tooltips underneath the previous ones.\n* Text wrapping on labels, buttons, checkboxes and radio buttons is now based on the layout.\n\n### üî• Removed\n\n* Removed the `label!` macro.\n\n\n## 0.4.0 - 2020-11-28\n\n### ‚≠ê Added\n* `TextEdit` improvements:\n  * Much improved text editing, with better navigation and selection.\n  * Move focus between `TextEdit` widgets with tab and shift-tab.\n  * Undo edtis in a `TextEdit`.\n  * You can now check if a `TextEdit` lost keyboard focus with `response.lost_focus`.\n  * Added `ui.text_edit_singleline` and `ui.text_edit_multiline`.\n* You can now debug why your `Ui` is unexpectedly wide with `ui.style_mut().debug.show_expand_width = true;`\n\n### üîß Changed\n* Pressing enter in a single-line `TextEdit` will now surrender keyboard focus for it.\n* You must now be explicit when creating a `TextEdit` if you want it to be singeline or multiline.\n* Improved automatic `Id` generation, making `Id` clashes less likely.\n* egui now requires modifier key state from the integration\n* Added, renamed and removed some keys in the `Key` enum.\n* Fixed incorrect text wrapping width on radio buttons\n\n### üêõ Fixed\n* Fixed bug where a lost widget could still retain keyboard focus.\n\n\n## 0.3.0 - 2020-11-07\n\n### ‚≠ê Added\n* Panels: you can now create panels using `SidePanel`, `TopPanel` and `CentralPanel`.\n* You can now override the default egui fonts.\n* Added ability to override text color with `visuals.override_text_color`.\n* The demo now includes a simple drag-and-drop example.\n* The demo app now has a slider to scale all of egui.\n\n### üîß Changed\n* `ui.horizontal(‚Ä¶)` etc returns `Response`.\n* Refactored the interface for `egui::app::App`.\n* Windows are now constrained to the screen.\n* `Context::begin_frame()` no longer returns a `Ui`. Instead put your widgets into a `SidePanel`, `TopPanel`, `CentralPanel`, `Window` or `Area`.\n* `Context::end_frame()` now returns shapes that need to be converted to triangles with `Context::tessellate()`.\n* Anti-aliasing is now off by default in debug builds.\n\n### üî• Removed\n* You can no longer throw windows.\n\n### üêõ Fixed\n* Fixed a bug where some regions would slowly grow for non-integral scales (`pixels_per_point`).\n\n\n## 0.2.0 - 2020-10-10\n\n* Color picker\n* Unicode characters in labels (limited by [what the default font supports](https://fonts.google.com/specimen/Comfortaa#glyphs))\n* Simple drop-down combo box menu\n* Logarithmic sliders\n* Optimization: coarse culling in the tessellator\n* CHANGED: switch argument order of `ui.checkbox` and `ui.radio`\n\n\n## 0.1.4 - 2020-09-08\n\nThis is when I started the CHANGELOG.md, after almost two years of development. Better late than never.\n\n* Widgets: label, text button, hyperlink, checkbox, radio button, slider, draggable value, text editing\n* Layouts: horizontal, vertical, columns\n* Text input: very basic, multiline, copy/paste\n* Windows: move, resize, name, minimize and close. Automatically sized and positioned.\n* Regions: resizing, vertical scrolling, collapsing headers (sections)\n* Rendering: Anti-aliased rendering of lines, circles, text and convex polygons.\n* Tooltips on hover\n\n\n## Earlier:\n\n* 2020-08-10: renamed the project to \"egui\"\n* 2020-05-30: first release on crates.io (0.1.0)\n* 2020-04-01: serious work starts (pandemic project)\n* 2019-03-12: gave a talk about what would later become egui: https://www.youtube.com/watch?v=-pmwLHw5Gbs\n* 2018-12-23: [initial commit](https://github.com/emilk/egui/commit/856bbf4dae4a69693a0324da34e8b0dd3754dfdf)\n* 2018-11-04: started tinkering on a train\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.0576171875,
          "content": "/crates/egui_kittest @lucasmerlin\n/crates/egui-wgpu @Wumpf\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3857421875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[the egui discord](https://discord.gg/JFcEma9bJq).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.890625,
          "content": "# Contribution Guidelines\n\n## Introduction\n\n`egui` has been an on-and-off weekend project of mine since late 2018. I am grateful to any help I can get, but bear in mind that sometimes I can be slow to respond because I am busy with other things!\n\n/ Emil\n\n## How to contribute to egui\nYou want to contribute to egui, but don't know how? First of all: thank you! I created a special issue just for that: <https://github.com/emilk/egui/issues/3742>. But make sure you still read this file first :)\n\n## Discussion\n\nYou can ask questions, share screenshots and more at [GitHub Discussions](https://github.com/emilk/egui/discussions).\n\nThere is an `egui` discord at <https://discord.gg/vbuv9Xan65>.\n\n\n## Filing an issue\n\n[Issues](https://github.com/emilk/egui/issues) are for bug reports and feature requests. Issues are not for asking questions (use [Discussions](https://github.com/emilk/egui/discussions) or [Discord](https://discord.gg/vbuv9Xan65) for that).\n\nAlways make sure there is not already a similar issue to the one you are creating.\n\nIf you are filing a bug, please provide a way to reproduce it.\n\n\n## Making a PR\n\nFor small things, just go ahead an open a PR. For bigger things, please file an issue first (or find an existing one) and announce that you plan to work on something. That way we will avoid having several people doing double work, and you might get useful feedback on the issue before you start working.\n\nBrowse through [`ARCHITECTURE.md`](ARCHITECTURE.md) to get a sense of how all pieces connects.\n\nYou can test your code locally by running `./scripts/check.sh`.\nThere are snapshots test that might need to be updated.\nRun the tests with `UPDATE_SNAPSHOTS=true cargo test --workspace --all-features` to update all of them.\nFor more info about the tests see [egui_kittest](./crates/egui_kittest/README.md).\n\nWe use [git-lfs](https://git-lfs.com/) to store big files in the repository.\nMake sure you have it installed (running `git lfs ls-files` from the repository root should list some files).\nDon't forget to run `git lfs install` after installing the git-lfs binary.\nYou need to add any .png images to `git lfs`.\nIf the CI complains about this, make sure you run `git add --renormalize .`.\n\nIf you see an `InvalidSignature` error when running snapshot tests, it's probably a problem related to git-lfs.\n\nWhen you have something that works, open a draft PR. You may get some helpful feedback early!\nWhen you feel the PR is ready to go, do a self-review of the code, and then open it for review.\n\nDon't worry about having many small commits in the PR - they will be squashed to one commit once merged.\n\nPlease keep pull requests small and focused. The smaller it is, the more likely it is to get merged.\n\n## PR review\n\nMost PR reviews are done by me, Emil, but I very much appreciate any help I can get reviewing PRs!\n\nIt is very easy to add complexity to a project, but remember that each line of code added is code that needs to be maintained in perpetuity, so we have a high bar on what get merged!\n\nWhen reviewing, we look for:\n* The PR title and description should be helpful\n* Breaking changes are documented in the PR description\n* The code should be readable\n* The code should have helpful docstrings\n* The code should follow the [Code Style](CONTRIBUTING.md#code-style)\n\nNote that each new egui release have some breaking changes, so we don't mind having a few of those in a PR. Of course, we still try to avoid them if we can, and if we can't we try to first deprecate old code using the `#[deprecated]` attribute.\n\n## Creating an integration for egui\n\nSee <https://docs.rs/egui/latest/egui/#integrating-with-egui> for how to write your own egui integration.\n\nIf you make an integration for `egui` for some engine or renderer, please share it with the world!\nMake a PR to add it as a link to [`README.md`](README.md#integrations) so others can easily find it.\n\n\n## Testing the web viewer\n* Build with `scripts/build_demo_web.sh`\n* Host with `scripts/start_server.sh`\n* Open <http://localhost:8765/index.html>\n\n\n## Code Style\nWhile using an immediate mode gui is simple, implementing one is a lot more tricky. There are many subtle corner-case you need to think through. The `egui` source code is a bit messy, partially because it is still evolving.\n\n* Read some code before writing your own\n* Leave the code cleaner than how you found it\n* Write idiomatic rust\n* Follow the [Rust API Guidelines](https://rust-lang.github.io/api-guidelines/)\n* Add blank lines around all `fn`, `struct`, `enum`, etc\n* `// Comment like this.` and not `//like this`\n* Use `TODO` instead of `FIXME`\n* Add your github handle to the `TODO`:s you write, e.g: `TODO(emilk): clean this up`\n* Avoid `unsafe`\n* Avoid `unwrap` and any other code that can cause panics\n* Use good names for everything\n* Add docstrings to types, `struct` fields and all `pub fn`\n* Add some example code (doc-tests)\n* Before making a function longer, consider adding a helper function\n* If you are only using it in one function, put the `use` statement in that function. This improves locality, making it easier to read and move the code\n* When importing a `trait` to use it's trait methods, do this: `use Trait as _;`. That lets the reader know why you imported it, even though it seems unused\n* Avoid double negatives\n* Flip `if !condition {} else {}`\n* Sets of things should be lexicographically sorted (e.g. crate dependencies in `Cargo.toml`)\n* Put each type in their own file, unless they are trivial (e.g. a `struct` with no `impl`)\n* Break the above rules when it makes sense\n\n\n### Good:\n``` rust\n/// The name of the thing.\npub fn name(&self) -> &str {\n    &self.name\n}\n\nfn foo(&self) {\n    // TODO(emilk): this can be optimized\n}\n```\n\n### Bad:\n``` rust\n//gets the name\npub fn get_name(&self) -> &str {\n    &self.name\n}\nfn foo(&self) {\n    //FIXME: this can be optimized\n}\n```\n\n### Coordinate system\nThe left-top corner of the screen is `(0.0, 0.0)`,\nwith `Vec2::X` increasing to the right and `Vec2::Y` increasing downwards.\n\n`egui` uses logical _points_ as its coordinate system.\nThose related to physical _pixels_ by the `pixels_per_point` scale factor.\nFor example, a high-dpi screen can have `pixels_per_point = 2.0`,\nmeaning there are two physical screen pixels for each logical point.\n\nAngles are in radians, and are measured clockwise from the X-axis, which has angle=0.\n\n\n### Avoid `unwrap`, `expect` etc.\nThe code should never panic or crash, which means that any instance of `unwrap` or `expect` is a potential time-bomb. Even if you structured your code to make them impossible, any reader will have to read the code very carefully to prove to themselves that an `unwrap` won't panic. Often you can instead rewrite your code so as to avoid it. The same goes for indexing into a slice (which will panic on out-of-bounds) - it is often preferable to use `.get()`.\n\nFor instance:\n\n``` rust\nlet first = if vec.is_empty() {\n    return;\n} else {\n    vec[0]\n};\n```\ncan be better written as:\n\n``` rust\nlet Some(first) = vec.first() else {\n    return;\n};\n```\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 126.9482421875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"ab_glyph\"\nversion = \"0.2.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec3672c180e71eeaaac3a541fbbc5f5ad4def8b747c595ad30d674e43049f7b0\"\ndependencies = [\n \"ab_glyph_rasterizer\",\n \"owned_ttf_parser\",\n]\n\n[[package]]\nname = \"ab_glyph_rasterizer\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c71b1793ee61086797f5c80b6efa2b8ffa6d5dd703f118545808a7f2e27f7046\"\n\n[[package]]\nname = \"accesskit\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45c97bb3cc1dacbdc6d1147040fc61309590d3e1ab5efd92a8a09c7a2e07284c\"\ndependencies = [\n \"enumn\",\n \"serde\",\n]\n\n[[package]]\nname = \"accesskit_atspi_common\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03db49d2948db6875c69a1ef17816efa8e3d9f36c7cd79e467d8562a6695662b\"\ndependencies = [\n \"accesskit\",\n \"accesskit_consumer\",\n \"atspi-common\",\n \"serde\",\n \"thiserror\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"accesskit_consumer\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa3a17950ce0d911f132387777b9b3d05eddafb59b773ccaa53fceefaeb0228e\"\ndependencies = [\n \"accesskit\",\n \"immutable-chunkmap\",\n]\n\n[[package]]\nname = \"accesskit_macos\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8d94b7544775dddce398e2500a8b3cc2be3655190879071ce6a9e5610195be4\"\ndependencies = [\n \"accesskit\",\n \"accesskit_consumer\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"accesskit_unix\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a88d913b144104dd825f75db1b82c63d754b01c53c2f9b7545dcdfae63bb0ed\"\ndependencies = [\n \"accesskit\",\n \"accesskit_atspi_common\",\n \"async-channel\",\n \"async-executor\",\n \"async-task\",\n \"atspi\",\n \"futures-lite\",\n \"futures-util\",\n \"serde\",\n \"zbus 4.4.0\",\n]\n\n[[package]]\nname = \"accesskit_windows\"\nversion = \"0.24.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0aaa870a5d047338f03707706141f22c98c20e79d5403bf3c9b195549e6cdeea\"\ndependencies = [\n \"accesskit\",\n \"accesskit_consumer\",\n \"paste\",\n \"static_assertions\",\n \"windows\",\n \"windows-core 0.58.0\",\n]\n\n[[package]]\nname = \"accesskit_winit\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3555a67a9bb208f620cfc3746f1502d1512f0ffbdb19c6901aa90b111aa56ec5\"\ndependencies = [\n \"accesskit\",\n \"accesskit_macos\",\n \"accesskit_unix\",\n \"accesskit_windows\",\n \"raw-window-handle 0.6.2\",\n \"winit\",\n]\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"serde\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"\n\n[[package]]\nname = \"android-activity\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef6978589202a00cd7e118380c448a08b6ed394c3a8df3a430d0898e3a42d046\"\ndependencies = [\n \"android-properties\",\n \"bitflags 2.6.0\",\n \"cc\",\n \"cesu8\",\n \"jni\",\n \"jni-sys\",\n \"libc\",\n \"log\",\n \"ndk\",\n \"ndk-context\",\n \"ndk-sys 0.6.0+11769913\",\n \"num_enum\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"android-properties\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc7eb209b1518d6bb87b283c20095f5228ecda460da70b44f0802523dea6da04\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_log-sys\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ecc8056bf6ab9892dcd53216c83d1597487d7dacac16c8df6b877d127df9937\"\n\n[[package]]\nname = \"android_logger\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b07e8e73d720a1f2e4b6014766e6039fd2e96a4fa44e2a78d0e1fa2ff49826\"\ndependencies = [\n \"android_log-sys\",\n \"env_filter\",\n \"log\",\n]\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8365de52b16c035ff4fcafe0092ba9390540e3e352870ac09933bebcaa2c8c56\"\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74f37166d7d48a0284b99dd824694c26119c700b53bf0d1540cdb147dbdaaf13\"\n\n[[package]]\nname = \"arboard\"\nversion = \"3.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df099ccb16cd014ff054ac1bf392c67feeef57164b05c42f037cd40f5d4357f4\"\ndependencies = [\n \"clipboard-win\",\n \"core-graphics\",\n \"image\",\n \"log\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"parking_lot\",\n \"windows-sys 0.48.0\",\n \"x11rb\",\n]\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"as-raw-xcb-connection\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"175571dd1d178ced59193a6fc02dde1b972eb0bc56c892cde9beeceac5bf0f6b\"\n\n[[package]]\nname = \"ash\"\nversion = \"0.38.0+1.3.281\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bb44936d800fea8f016d7f2311c6a4f97aebd5dc86f09906139ec848cf3a46f\"\ndependencies = [\n \"libloading\",\n]\n\n[[package]]\nname = \"ashpd\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9c39d707614dbcc6bed00015539f488d8e3fe3e66ed60961efc0c90f4b380b3\"\ndependencies = [\n \"async-fs\",\n \"async-net\",\n \"enumflags2\",\n \"futures-channel\",\n \"futures-util\",\n \"rand\",\n \"raw-window-handle 0.6.2\",\n \"serde\",\n \"serde_repr\",\n \"url\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-protocols\",\n \"zbus 5.1.1\",\n]\n\n[[package]]\nname = \"async-broadcast\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20cd0e2e25ea8e5f7e9df04578dc6cf5c83577fd09b1a46aaf5c85e1c33f2a7e\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-fs\"\nversion = \"2.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebcd09b382f40fcd159c2d695175b2ae620ffa5f3bd6f664131efff4e8b9e04a\"\ndependencies = [\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"444b0228950ee6501b3568d3c93bf1176a1fdbc3b758dcd9475046d30f4dc7e8\"\ndependencies = [\n \"async-lock\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-net\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b948000fad4873c1c9339d60f2623323a0cfd3816e5181033c6a5cb68b2accf7\"\ndependencies = [\n \"async-io\",\n \"blocking\",\n \"futures-lite\",\n]\n\n[[package]]\nname = \"async-process\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63255f1dc2381611000436537bbedfe83183faa303a5a0edaf191edef06526bb\"\ndependencies = [\n \"async-channel\",\n \"async-io\",\n \"async-lock\",\n \"async-signal\",\n \"async-task\",\n \"blocking\",\n \"cfg-if\",\n \"event-listener\",\n \"futures-lite\",\n \"rustix\",\n \"tracing\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"async-signal\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3\"\ndependencies = [\n \"async-io\",\n \"async-lock\",\n \"atomic-waker\",\n \"cfg-if\",\n \"futures-core\",\n \"futures-io\",\n \"rustix\",\n \"signal-hook-registry\",\n \"slab\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"atspi\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be534b16650e35237bb1ed189ba2aab86ce65e88cc84c66f4935ba38575cecbf\"\ndependencies = [\n \"atspi-common\",\n \"atspi-connection\",\n \"atspi-proxies\",\n]\n\n[[package]]\nname = \"atspi-common\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1909ed2dc01d0a17505d89311d192518507e8a056a48148e3598fef5e7bb6ba7\"\ndependencies = [\n \"enumflags2\",\n \"serde\",\n \"static_assertions\",\n \"zbus 4.4.0\",\n \"zbus-lockstep\",\n \"zbus-lockstep-macros\",\n \"zbus_names 3.0.0\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"atspi-connection\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"430c5960624a4baaa511c9c0fcc2218e3b58f5dbcc47e6190cafee344b873333\"\ndependencies = [\n \"atspi-common\",\n \"atspi-proxies\",\n \"futures-lite\",\n \"zbus 4.4.0\",\n]\n\n[[package]]\nname = \"atspi-proxies\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e6c5de3e524cf967569722446bcd458d5032348554d9a17d7d72b041ab7496\"\ndependencies = [\n \"atspi-common\",\n \"serde\",\n \"zbus 4.4.0\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec 0.6.3\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08807e080ed7f9d5433fa9b275196cfc35414f66a0c79d864dc51a0d825231a3\"\ndependencies = [\n \"bit-vec 0.8.0\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e764a1d40d510daf35e07be9eb06e75770908c27d411ee6c92109c9840eaaf7\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d8c1fef690941d3e7788d328517591fecc684c084084702d6ff1641e993699a\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"block2\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c132eebf10f5cad5289222520a4a058514204aed6d791f1cf4fe8088b82d15f\"\ndependencies = [\n \"objc2\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8334215b81e418a0a7bdb8ef0849474f40bb10c8b71f1c4ed315cff49f32494d\"\ndependencies = [\n \"bytemuck_derive\",\n]\n\n[[package]]\nname = \"bytemuck_derive\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bcfcc3cd946cb52f0bbfdbbcfa2f4e24f75ebb6c0e1002f7c25904fada18b9ec\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"byteorder-lite\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f1fe948ff07f4bd06c30984e69f5b4899c516a3ef74f34df92a2df2ab535495\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"calloop\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b99da2f8558ca23c71f4fd15dc57c906239752dd27ff3c00a1d56b685b7cbfec\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"log\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"calloop-wayland-source\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95a66a987056935f7efce4ab5668920b5d0dac4a7c99991a67395f13702ddd20\"\ndependencies = [\n \"calloop\",\n \"rustix\",\n \"wayland-backend\",\n \"wayland-client\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2e7962b54006dcfcc61cb72735f4d89bb97061dd6a7ed882ec6b8ee53714c6f\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cesu8\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"cgl\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ced0551234e87afee12411d535648dd89d2e7f34c78b753395567aff3d447ff\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"cint\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a0e87cdf78571d9fbeff16861c37a006cd718d2433dc6d5b80beaae367d899a\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97f376d85a664d5837dbae44bf546e6477a679ff6610010f17276f686d867e8\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19bc80abd44e4bed93ca373a0704ccbd1b710dc5749406201bb018272808dc54\"\ndependencies = [\n \"anstyle\",\n \"clap_lex\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"clipboard-win\"\nversion = \"5.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15efe7a882b08f34e38556b14f2fb3daa98769d06c7f0c1b076dfd0d983bc892\"\ndependencies = [\n \"error-code\",\n]\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"color-hex\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecdffb913a326b6c642290a0d0ec8e8d6597291acdc07cc4c9cb4b3635d44cf9\"\n\n[[package]]\nname = \"color_quant\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b\"\n\n[[package]]\nname = \"colored\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf2150cce219b664a8a70df7a1f933836724b503f8a413af9365b4dcc4d90b8\"\ndependencies = [\n \"lazy_static\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd\"\ndependencies = [\n \"bytes\",\n \"memchr\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"confirm_exit\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"core-graphics\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c07782be35f9e1140080c6b96f0d44b739e2278479f64e02fdab4e32dfd8b081\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"core-graphics-types\",\n \"foreign-types\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-graphics-types\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45390e6114f68f718cc7a830514a96f903cccd70d02a8f6d9f643ac4ba45afaf\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"libc\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"cursor-icon\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96a6ac251f4a2aca6b3f91340350eab87ae57c3f127ffeb585e92bd336717991\"\n\n[[package]]\nname = \"custom_3d_glow\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"custom_font\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"custom_font_style\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"custom_keypad\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_extras\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"custom_style\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_demo_lib\",\n \"egui_extras\",\n \"env_logger\",\n \"image\",\n]\n\n[[package]]\nname = \"custom_window_frame\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"data-url\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c297a1c74b71ae29df00c3e22dd9534821d60eb9af5a0192823fa2acea70c2a\"\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"dify\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11217d469eafa3b809ad84651eb9797ccbb440b4a916d5d85cb1b994e89787f6\"\ndependencies = [\n \"anyhow\",\n \"colored\",\n \"getopts\",\n \"image\",\n \"rayon\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"directories\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a49173b84e034382284f27f1af4dcbbd231ffa358c0fe316541a7337f376a35\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"dispatch\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd0c93bb4b0c6d9b77f4435b0ae98c24d17f1c45b2ff844c6151a07256ca923b\"\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dlib\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"330c60081dcc4c72131f8eb70510f1ac07223e5d4163db481a04a0befcffa412\"\ndependencies = [\n \"libloading\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"downcast-rs\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75b325c5dbd37f80359721ad39aca5a29fb04c89279657cffdda8736d0c0b9d2\"\n\n[[package]]\nname = \"dpi\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f25c0e292a7ca6d6498557ff1df68f32c99850012b6ea401cf8daf771f22ff53\"\n\n[[package]]\nname = \"ecolor\"\nversion = \"0.30.0\"\ndependencies = [\n \"bytemuck\",\n \"cint\",\n \"color-hex\",\n \"document-features\",\n \"emath\",\n \"serde\",\n]\n\n[[package]]\nname = \"eframe\"\nversion = \"0.30.0\"\ndependencies = [\n \"ahash\",\n \"bytemuck\",\n \"directories\",\n \"document-features\",\n \"egui\",\n \"egui-wgpu\",\n \"egui-winit\",\n \"egui_glow\",\n \"glow 0.16.0\",\n \"glutin\",\n \"glutin-winit\",\n \"home\",\n \"image\",\n \"js-sys\",\n \"log\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"parking_lot\",\n \"percent-encoding\",\n \"pollster 0.4.0\",\n \"profiling\",\n \"raw-window-handle 0.6.2\",\n \"ron\",\n \"serde\",\n \"static_assertions\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"web-time\",\n \"wgpu\",\n \"winapi\",\n \"windows-sys 0.59.0\",\n \"winit\",\n]\n\n[[package]]\nname = \"egui\"\nversion = \"0.30.0\"\ndependencies = [\n \"accesskit\",\n \"ahash\",\n \"backtrace\",\n \"bitflags 2.6.0\",\n \"document-features\",\n \"emath\",\n \"epaint\",\n \"log\",\n \"nohash-hasher\",\n \"profiling\",\n \"ron\",\n \"serde\",\n]\n\n[[package]]\nname = \"egui-wgpu\"\nversion = \"0.30.0\"\ndependencies = [\n \"ahash\",\n \"bytemuck\",\n \"document-features\",\n \"egui\",\n \"epaint\",\n \"log\",\n \"profiling\",\n \"thiserror\",\n \"type-map\",\n \"web-time\",\n \"wgpu\",\n \"winit\",\n]\n\n[[package]]\nname = \"egui-winit\"\nversion = \"0.30.0\"\ndependencies = [\n \"accesskit_winit\",\n \"ahash\",\n \"arboard\",\n \"bytemuck\",\n \"document-features\",\n \"egui\",\n \"log\",\n \"profiling\",\n \"raw-window-handle 0.6.2\",\n \"serde\",\n \"smithay-clipboard\",\n \"wayland-cursor\",\n \"web-time\",\n \"webbrowser\",\n \"winit\",\n]\n\n[[package]]\nname = \"egui_demo_app\"\nversion = \"0.30.0\"\ndependencies = [\n \"bytemuck\",\n \"chrono\",\n \"eframe\",\n \"egui\",\n \"egui_demo_lib\",\n \"egui_extras\",\n \"egui_kittest\",\n \"ehttp\",\n \"env_logger\",\n \"image\",\n \"log\",\n \"poll-promise\",\n \"profiling\",\n \"puffin\",\n \"puffin_http\",\n \"rfd\",\n \"serde\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"wgpu\",\n]\n\n[[package]]\nname = \"egui_demo_lib\"\nversion = \"0.30.0\"\ndependencies = [\n \"chrono\",\n \"criterion\",\n \"document-features\",\n \"egui\",\n \"egui_extras\",\n \"egui_kittest\",\n \"serde\",\n \"unicode_names2\",\n]\n\n[[package]]\nname = \"egui_extras\"\nversion = \"0.30.0\"\ndependencies = [\n \"ahash\",\n \"chrono\",\n \"document-features\",\n \"egui\",\n \"ehttp\",\n \"enum-map\",\n \"image\",\n \"log\",\n \"mime_guess2\",\n \"profiling\",\n \"resvg\",\n \"serde\",\n \"syntect\",\n]\n\n[[package]]\nname = \"egui_glow\"\nversion = \"0.30.0\"\ndependencies = [\n \"ahash\",\n \"bytemuck\",\n \"document-features\",\n \"egui\",\n \"egui-winit\",\n \"glow 0.16.0\",\n \"glutin\",\n \"glutin-winit\",\n \"log\",\n \"memoffset\",\n \"profiling\",\n \"wasm-bindgen\",\n \"web-sys\",\n \"winit\",\n]\n\n[[package]]\nname = \"egui_kittest\"\nversion = \"0.30.0\"\ndependencies = [\n \"dify\",\n \"document-features\",\n \"eframe\",\n \"egui\",\n \"egui-wgpu\",\n \"image\",\n \"kittest\",\n \"pollster 0.4.0\",\n \"wgpu\",\n]\n\n[[package]]\nname = \"ehttp\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59a81c221a1e4dad06cb9c9deb19aea1193a5eea084e8cd42d869068132bf876\"\ndependencies = [\n \"document-features\",\n \"js-sys\",\n \"ureq\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"emath\"\nversion = \"0.30.0\"\ndependencies = [\n \"bytemuck\",\n \"document-features\",\n \"mint\",\n \"serde\",\n]\n\n[[package]]\nname = \"endi\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3d8a32ae18130a3c84dd492d4215c3d913c3b07c6b63c2eb3eb7ff1101ab7bf\"\n\n[[package]]\nname = \"enum-map\"\nversion = \"2.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6866f3bfdf8207509a033af1a75a7b08abda06bbaaeae6669323fd5a097df2e9\"\ndependencies = [\n \"enum-map-derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"enum-map-derive\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f282cfdfe92516eb26c2af8589c274c7c17681f5ecc03c18255fe741c6aa64eb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"enumflags2\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d232db7f5956f3f14313dc2f87985c58bd2c695ce124c8cdd984e08e15ac133d\"\ndependencies = [\n \"enumflags2_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"enumflags2_derive\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0d48a183585823424a4ce1aa132d174a6a81bd540895822eb4c8373a8e49e8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"enumn\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f9ed6b3789237c8a0c1c505af1c7eb2c560df6186f01b098c3a1064ea532f38\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f2c92ceda6ceec50f43169f9ee8424fe2db276791afde7b2cd8bc084cb376ab\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"epaint\"\nversion = \"0.30.0\"\ndependencies = [\n \"ab_glyph\",\n \"ahash\",\n \"backtrace\",\n \"bytemuck\",\n \"criterion\",\n \"document-features\",\n \"ecolor\",\n \"emath\",\n \"epaint_default_fonts\",\n \"log\",\n \"nohash-hasher\",\n \"parking_lot\",\n \"profiling\",\n \"rayon\",\n \"serde\",\n]\n\n[[package]]\nname = \"epaint_default_fonts\"\nversion = \"0.30.0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"error-code\"\nversion = \"3.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5d9305ccc6942a704f4335694ecd3de2ea531b114ac2d51f5f843750787a92f\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1\"\ndependencies = [\n \"event-listener\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fancy-regex\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b95f7c0680e4142284cf8b22c14a476e87d61b004a3a0861872b32ef7ead40a2\"\ndependencies = [\n \"bit-set 0.5.3\",\n \"regex\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"fdeflate\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07c6f4c64c1d33a3111c4466f7365ebdcc37c5bd1ea0d62aae2e3d722aacbedb\"\ndependencies = [\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"file_dialog\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n \"rfd\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1b589b4dc103969ad3cf85c950899926ec64300a1a46d76c03a6072957036f0\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d737d9aa519fb7b749cbc3b962edcf310a8dd1f4b67c91c4f83975dbdd17d965\"\ndependencies = [\n \"foreign-types-macros\",\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-macros\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a5c6c585bc94aaf2c7b51dd4c2ba22680844aba4c687be581871a6f518c5742\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa9a19cbb55df58761df49b23516a86d432839add4af60fc256da840f66ed35b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f1fa2f9765705486b33fd2acf1577f8ec449c2ba1f318ae5447697b7c08d210\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"gethostname\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0176e0459c2e4a1fe232f984bca6890e681076abb9934f6cea7c326f3fc47818\"\ndependencies = [\n \"libc\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gif\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fb2d69b19215e18bb912fa30f7ce15846e301408695e44e0ef719f1da9e19f2\"\ndependencies = [\n \"color_quant\",\n \"weezl\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"gl_generator\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a95dfc23a2b4a9a2f5ab41d194f8bfda3cabec42af4e39f08c339eb2a0c124d\"\ndependencies = [\n \"khronos_api\",\n \"log\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"glow\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d51fa363f025f5c111e03f13eda21162faeacb6911fe8caa0c0349f9cf0c4483\"\ndependencies = [\n \"js-sys\",\n \"slotmap\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"glow\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5e5ea60d70410161c8bf5da3fdfeaa1c72ed2c15f8bbb9d19fe3a4fad085f08\"\ndependencies = [\n \"js-sys\",\n \"slotmap\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"glutin\"\nversion = \"0.32.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec69412a0bf07ea7607e638b415447857a808846c2b685a43c8aa18bc6d5e499\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg_aliases 0.2.1\",\n \"cgl\",\n \"core-foundation\",\n \"dispatch\",\n \"glutin_egl_sys\",\n \"glutin_glx_sys\",\n \"glutin_wgl_sys\",\n \"libloading\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"once_cell\",\n \"raw-window-handle 0.6.2\",\n \"wayland-sys\",\n \"windows-sys 0.52.0\",\n \"x11-dl\",\n]\n\n[[package]]\nname = \"glutin-winit\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85edca7075f8fc728f28cb8fbb111a96c3b89e930574369e3e9c27eb75d3788f\"\ndependencies = [\n \"cfg_aliases 0.2.1\",\n \"glutin\",\n \"raw-window-handle 0.6.2\",\n \"winit\",\n]\n\n[[package]]\nname = \"glutin_egl_sys\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cae99fff4d2850dbe6fb8c1fa8e4fead5525bab715beaacfccf3fb994e01c827\"\ndependencies = [\n \"gl_generator\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"glutin_glx_sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c2b2d3918e76e18e08796b55eb64e8fe6ec67d5a6b2e2a7e2edce224ad24c63\"\ndependencies = [\n \"gl_generator\",\n \"x11-dl\",\n]\n\n[[package]]\nname = \"glutin_wgl_sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a4e1951bbd9434a81aa496fe59ccc2235af3820d27b85f9314e279609211e2c\"\ndependencies = [\n \"gl_generator\",\n]\n\n[[package]]\nname = \"gpu-alloc\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbcd2dba93594b227a1f57ee09b8b9da8892c34d55aa332e034a228d0fe6a171\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gpu-alloc-types\",\n]\n\n[[package]]\nname = \"gpu-alloc-types\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98ff03b468aa837d70984d55f5d3f846f6ec31fe34bbb97c4f85219caeee1ca4\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"gpu-allocator\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c151a2a5ef800297b4e79efa4f4bec035c5f51d5ae587287c9b952bdf734cacd\"\ndependencies = [\n \"log\",\n \"presser\",\n \"thiserror\",\n \"windows\",\n]\n\n[[package]]\nname = \"gpu-descriptor\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c08c1f623a8d0b722b8b99f821eb0ba672a1618f0d3b16ddbee1cedd2dd8557\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gpu-descriptor-types\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"gpu-descriptor-types\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdf242682df893b86f33a73828fb09ca4b2d3bb6cc95249707fc684d27484b91\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hello_android\"\nversion = \"0.1.0\"\ndependencies = [\n \"android_logger\",\n \"eframe\",\n \"egui_extras\",\n \"log\",\n \"winit\",\n]\n\n[[package]]\nname = \"hello_world\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_extras\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"hello_world_par\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n \"winit\",\n]\n\n[[package]]\nname = \"hello_world_simple\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hexf-parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfa686283ad6dd069f105e5ab091b04c62850d3e4cf5d67debad1933f55023df\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"image\"\nversion = \"0.25.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc144d44a31d753b02ce64093d532f55ff8dc4ebf2ffb8a63c0dda691385acae\"\ndependencies = [\n \"bytemuck\",\n \"byteorder-lite\",\n \"color_quant\",\n \"gif\",\n \"image-webp\",\n \"num-traits\",\n \"png\",\n \"tiff\",\n \"zune-core\",\n \"zune-jpeg\",\n]\n\n[[package]]\nname = \"image-webp\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e031e8e3d94711a9ccb5d6ea357439ef3dcbed361798bd4071dc4d9793fbe22f\"\ndependencies = [\n \"byteorder-lite\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"images\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_extras\",\n \"env_logger\",\n \"image\",\n]\n\n[[package]]\nname = \"imagesize\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"029d73f573d8e8d63e6d5020011d3255b28c3ba85d6cf870a07184ed23de9284\"\n\n[[package]]\nname = \"immutable-chunkmap\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12f97096f508d54f8f8ab8957862eee2ccd628847b6217af1a335e1c44dee578\"\ndependencies = [\n \"arrayvec\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b900aa2f7301e21c36462b170ee99994de34dff39a4a6a528e80e7376d07e5\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"jni\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a87aa2bb7d2af34197c04845522473242e1aa17c12f4935d5856491a7fb8c97\"\ndependencies = [\n \"cesu8\",\n \"cfg-if\",\n \"combine\",\n \"jni-sys\",\n \"log\",\n \"thiserror\",\n \"walkdir\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"jni-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"jpeg-decoder\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5d4a7da358eff58addd2877a45865158f0d78c911d43a5784ceb7bbf52833b0\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"keyboard_events\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"khronos-egl\"\nversion = \"6.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6aae1df220ece3c0ada96b8153459b67eebe9ae9212258bb0134ae60416fdf76\"\ndependencies = [\n \"libc\",\n \"libloading\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"khronos_api\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2db585e1d738fc771bf08a151420d3ed193d9d895a36df7f6f8a9456b911ddc\"\n\n[[package]]\nname = \"kittest\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f659954571a3c132356bd15c25f0dcf14d270a28ec5c58797adc2f432831bed5\"\ndependencies = [\n \"accesskit\",\n \"accesskit_consumer\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"kurbo\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd85a5776cd9500c2e2059c8c76c3b01528566b7fcbaf8098b55a33fc298849b\"\ndependencies = [\n \"arrayvec\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.161\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9489c2807c139ffd9c1794f4af0ebe86a828db53ecdc7fea2111d0fed085d1\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4979f22fdb869068da03c9f7528f8297c6fd2606bc3a4affe42e6a823fdb8da4\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall 0.5.7\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lz4_flex\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75761162ae2b0e580d7e7c390558127e5f01b4194debd6221fd8c207fc80e3f5\"\n\n[[package]]\nname = \"malloc_buf\"\nversion = \"0.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62bb907fe88d54d8d9ce32a3cceab4218ed2f6b7d35617cafe9adf84e43919cb\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"metal\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ecfd3296f8c56b7c1f6fbac3c71cefa9d78ce009850c45000015f206dc7fa21\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block\",\n \"core-graphics-types\",\n \"foreign-types\",\n \"log\",\n \"objc\",\n \"paste\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess2\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25a3333bb1609500601edc766a39b4c1772874a4ce26022f4d866854dc020c41\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"mint\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e53debba6bda7a793e5f99b8dacf19e626084f525f7829104ba9898f367d85ff\"\n\n[[package]]\nname = \"multiple_viewports\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"naga\"\nversion = \"23.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d5941e45a15b53aad4375eedf02033adb7a28931eedc31117faffa52e6a857e\"\ndependencies = [\n \"arrayvec\",\n \"bit-set 0.8.0\",\n \"bitflags 2.6.0\",\n \"cfg_aliases 0.1.1\",\n \"codespan-reporting\",\n \"hexf-parse\",\n \"indexmap\",\n \"log\",\n \"rustc-hash\",\n \"spirv\",\n \"termcolor\",\n \"thiserror\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"ndk\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3f42e7bbe13d351b6bead8286a43aac9534b82bd3cc43e47037f012ebfd62d4\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"jni-sys\",\n \"log\",\n \"ndk-sys 0.6.0+11769913\",\n \"num_enum\",\n \"raw-window-handle 0.6.2\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"ndk-context\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27b02d87554356db9e9a873add8782d4ea6e3e58ea071a9adb9a2e8ddb884a8b\"\n\n[[package]]\nname = \"ndk-sys\"\nversion = \"0.5.0+25.2.9519653\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c196769dd60fd4f363e11d948139556a344e79d451aeb2fa2fd040738ef7691\"\ndependencies = [\n \"jni-sys\",\n]\n\n[[package]]\nname = \"ndk-sys\"\nversion = \"0.6.0+11769913\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee6cda3051665f1fb8d9e08fc35c96d5a244fb1be711a03b71118828afc9a873\"\ndependencies = [\n \"jni-sys\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases 0.2.1\",\n \"libc\",\n \"memoffset\",\n]\n\n[[package]]\nname = \"nohash-hasher\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bf50223579dc7cdcfb3bfcacf7069ff68243f8c363f62ffa99cf000a6b9c451\"\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"objc\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915b1b472bc21c53464d6c8461c9d3af805ba1ef837e1cac254428f4a77177b1\"\ndependencies = [\n \"malloc_buf\",\n]\n\n[[package]]\nname = \"objc-sys\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb91bdd390c7ce1a8607f35f3ca7151b65afc0ff5ff3b34fa350f7d7c7e4310\"\n\n[[package]]\nname = \"objc2\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46a785d4eeff09c14c487497c162e92766fbb3e4059a71840cecc03d9a50b804\"\ndependencies = [\n \"objc-sys\",\n \"objc2-encode\",\n]\n\n[[package]]\nname = \"objc2-app-kit\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4e89ad9e3d7d297152b17d39ed92cd50ca8063a89a9fa569046d41568891eff\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"libc\",\n \"objc2\",\n \"objc2-core-data\",\n \"objc2-core-image\",\n \"objc2-foundation\",\n \"objc2-quartz-core\",\n]\n\n[[package]]\nname = \"objc2-cloud-kit\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74dd3b56391c7a0596a295029734d3c1c5e7e510a4cb30245f8221ccea96b009\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-core-location\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-contacts\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5ff520e9c33812fd374d8deecef01d4a840e7b41862d849513de77e44aa4889\"\ndependencies = [\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-core-data\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"617fbf49e071c178c0b24c080767db52958f716d9eabdf0890523aeae54773ef\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-core-image\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55260963a527c99f1819c4f8e3b47fe04f9650694ef348ffd2227e8196d34c80\"\ndependencies = [\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n \"objc2-metal\",\n]\n\n[[package]]\nname = \"objc2-core-location\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"000cfee34e683244f284252ee206a27953279d370e309649dc3ee317b37e5781\"\ndependencies = [\n \"block2\",\n \"objc2\",\n \"objc2-contacts\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-encode\"\nversion = \"4.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7891e71393cd1f227313c9379a26a584ff3d7e6e7159e988851f0934c993f0f8\"\n\n[[package]]\nname = \"objc2-foundation\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ee638a5da3799329310ad4cfa62fbf045d5f56e3ef5ba4149e7452dcf89d5a8\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"dispatch\",\n \"libc\",\n \"objc2\",\n]\n\n[[package]]\nname = \"objc2-link-presentation\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1a1ae721c5e35be65f01a03b6d2ac13a54cb4fa70d8a5da293d7b0020261398\"\ndependencies = [\n \"block2\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-metal\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd0cba1276f6023976a406a14ffa85e1fdd19df6b0f737b063b95f6c8c7aadd6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-quartz-core\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e42bee7bff906b14b167da2bac5efe6b6a07e6f7c0a21a7308d40c960242dc7a\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n \"objc2-metal\",\n]\n\n[[package]]\nname = \"objc2-symbols\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a684efe3dec1b305badae1a28f6555f6ddd3bb2c2267896782858d5a78404dc\"\ndependencies = [\n \"objc2\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-ui-kit\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8bb46798b20cd6b91cbd113524c490f1686f4c4e8f49502431415f3512e2b6f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-cloud-kit\",\n \"objc2-core-data\",\n \"objc2-core-image\",\n \"objc2-core-location\",\n \"objc2-foundation\",\n \"objc2-link-presentation\",\n \"objc2-quartz-core\",\n \"objc2-symbols\",\n \"objc2-uniform-type-identifiers\",\n \"objc2-user-notifications\",\n]\n\n[[package]]\nname = \"objc2-uniform-type-identifiers\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44fa5f9748dbfe1ca6c0b79ad20725a11eca7c2218bceb4b005cb1be26273bfe\"\ndependencies = [\n \"block2\",\n \"objc2\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"objc2-user-notifications\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76cfcbf642358e8689af64cee815d139339f3ed8ad05103ed5eaf73db8d84cb3\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block2\",\n \"objc2\",\n \"objc2-core-location\",\n \"objc2-foundation\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"orbclient\"\nversion = \"0.3.48\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba0b26cec2e24f08ed8bb31519a9333140a6599b867dac464bb150bdb796fd43\"\ndependencies = [\n \"libredox\",\n]\n\n[[package]]\nname = \"ordered-stream\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aa2b01e1d916879f73a53d01d1d6cee68adbb31d6d9177a8cfce093cced1d50\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"owned_ttf_parser\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec719bbf3b2a81c109a4e20b1f129b5566b7dce654bc3872f6a05abf82b2c4\"\ndependencies = [\n \"ttf-parser\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.5.7\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be57f64e946e500c8ee36ef6331845d40a93055567ec57e8fae13efd33759b95\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c0f5fad0874fc7abcd4d750e76917eaebbecaa2c20bde22e1dbeeba8beb758c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cf17e9a1800f5f396bc67d193dc9411b59012a5876445ef450d449881e1016\"\ndependencies = [\n \"base64 0.22.1\",\n \"indexmap\",\n \"quick-xml 0.32.0\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"png\"\nversion = \"0.17.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52f9d46a34a05a6a57566bc2bfae066ef07585a6e3fa30fbbdff5936380623f0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"crc32fast\",\n \"fdeflate\",\n \"flate2\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"poll-promise\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6a58fecbf9da8965bcdb20ce4fd29788d1acee68ddbb64f0ba1b81bccdb7df\"\ndependencies = [\n \"document-features\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc2790cd301dec6cd3b7a025e4815cf825724a51c98dccfe6a3e55f05ffb6511\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"pollster\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22686f4785f02a4fcc856d3b3bb19bf6c8160d103f7a99cc258bddd0251dc7f2\"\n\n[[package]]\nname = \"pollster\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f3a9f18d041e6d0e102a0a46750538147e5e8992d3b4873aaafee2520b00ce3\"\n\n[[package]]\nname = \"popups\"\nversion = \"0.30.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"presser\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8cf8e6a8aa66ce33f63993ffc4ea4271eb5b0530a9002db8455ea6050c77bfa\"\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"profiling\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afbdc74edc00b6f6a218ca6a5364d6226a259d4b8ea1af4a0ea063f27e179f4d\"\ndependencies = [\n \"profiling-procmacros\",\n \"puffin\",\n]\n\n[[package]]\nname = \"profiling-procmacros\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a65f2e60fbf1063868558d69c6beacf412dc755f9fc020f514b7955fc914fe30\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"puffin\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa9dae7b05c02ec1a6bc9bcf20d8bc64a7dcbf57934107902a872014899b741f\"\ndependencies = [\n \"anyhow\",\n \"bincode\",\n \"byteorder\",\n \"cfg-if\",\n \"itertools\",\n \"lz4_flex\",\n \"once_cell\",\n \"parking_lot\",\n \"serde\",\n]\n\n[[package]]\nname = \"puffin_http\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"739a3c7f56604713b553d7addd7718c226e88d598979ae3450320800bd0e9810\"\ndependencies = [\n \"anyhow\",\n \"crossbeam-channel\",\n \"log\",\n \"parking_lot\",\n \"puffin\",\n]\n\n[[package]]\nname = \"puffin_profiler\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n \"log\",\n \"profiling\",\n \"puffin\",\n \"puffin_http\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3\"\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.30.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eff6510e86862b57b210fd8cbe8ed3f0d7d600b9c2863cd4549a2e033c66e956\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d3a6e5838b60e0e8fa7a43f22ade549a37d61f8bdbe636d0d7816191de969c2\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.36.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7649a7b4df05aed9ea7ec6f628c67c9953a43869b8bc50929569b2999d443fe\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"range-alloc\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8a99fddc9f0ba0a85884b8d14e3592853e787d581ca1816c91349b10e4eeab\"\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2ff9a1f06a88b01621b7ae906ef0211290d1c8a168a15542486a8f61c0833b9\"\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20675572f6f24e9e76ef639bc5552774ed45f1c30e2951e1e99c59888861c539\"\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"rctree\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b42e27ef78c35d3998403c1d26f3efd9e135d3e5121b0a4845cc5cc27547f4f\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"renderdoc-sys\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b30a45b0cd0bcca8037f3d0dc3421eaf95327a17cad11964fb8179b4fc4832\"\n\n[[package]]\nname = \"resvg\"\nversion = \"0.37.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cadccb3d99a9efb8e5e00c16fbb732cbe400db2ec7fc004697ee7d97d86cf1f4\"\ndependencies = [\n \"log\",\n \"pico-args\",\n \"rgb\",\n \"svgtypes\",\n \"tiny-skia\",\n \"usvg\",\n]\n\n[[package]]\nname = \"rfd\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f6f80a9b882647d9014673ca9925d30ffc9750f2eed2b4490e189eaebd01e8\"\ndependencies = [\n \"ashpd\",\n \"block2\",\n \"js-sys\",\n \"log\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"pollster 0.3.0\",\n \"raw-window-handle 0.6.2\",\n \"urlencoding\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57397d16646700483b67d2dd6511d79318f9d057fdbd21a4066aeac8b41d310a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ron\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94\"\ndependencies = [\n \"base64 0.21.7\",\n \"bitflags 2.6.0\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"roxmltree\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cd14fd5e3b777a7422cca79358c57a8f6e3a703d9ac187448d0daf220c2407f\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa260229e6538e52293eeb577aabd09945a09d6d9cc0fc550ed7529056c2e32a\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9cc1d47e243d655ace55ed38201c19ae02c148ae56412ab8750e8f0166ab7f\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"screenshot\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n \"image\",\n]\n\n[[package]]\nname = \"sctk-adwaita\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6277f0217056f77f1d8f49f2950ac6c278c0d607c45f5ee99328d792ede24ec\"\ndependencies = [\n \"ab_glyph\",\n \"log\",\n \"memmap2\",\n \"smithay-client-toolkit\",\n \"tiny-skia\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.214\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55c3193aca71c12ad7890f1785d2b73e1b9f63a0bbc353c08ef26fe03fc56b5\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.214\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de523f781f095e28fa605cdce0f8307e451cc0fd14e2eb4cd2e98a355b147766\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.132\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d726bfaff4b320266d395898905d0eba0345aae23b54aee3a737e260fd46db03\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serial_windows\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n \"log\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"simplecss\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a11be7c62927d9427e9f40f3444d5499d868648e2edbc4e2116de69e7ec0e89d\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slotmap\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"smithay-client-toolkit\"\nversion = \"0.19.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3457dea1f0eb631b4034d61d4d8c32074caa6cd1ab2d59f2327bd8461e2c0016\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"calloop\",\n \"calloop-wayland-source\",\n \"cursor-icon\",\n \"libc\",\n \"log\",\n \"memmap2\",\n \"rustix\",\n \"thiserror\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-csd-frame\",\n \"wayland-cursor\",\n \"wayland-protocols\",\n \"wayland-protocols-wlr\",\n \"wayland-scanner\",\n \"xkeysym\",\n]\n\n[[package]]\nname = \"smithay-clipboard\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc8216eec463674a0e90f29e0ae41a4db573ec5b56b1c6c1c71615d249b6d846\"\ndependencies = [\n \"libc\",\n \"smithay-client-toolkit\",\n \"wayland-backend\",\n]\n\n[[package]]\nname = \"smol_str\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd538fb6910ac1099850255cf94a94df6551fbdd602454387d0adb2d1ca6dead\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"spirv\"\nversion = \"0.3.0+sdk-1.3.268.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eda41003dc44290527a59b13432d4a0379379fa074b70174882adfbdfd917844\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strict-num\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6637bab7722d379c8b41ba849228d680cc12d0a45ba1fa2b48f2a30577a06731\"\ndependencies = [\n \"float-cmp\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"svgtypes\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e44e288cd960318917cbd540340968b90becc8bc81f171345d706e7a89d9d70\"\ndependencies = [\n \"kurbo\",\n \"siphasher\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89275301d38033efb81a6e60e3497e734dfcc62571f2854bf4b16690398824c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"syntect\"\nversion = \"5.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"874dcfa363995604333cf947ae9f751ca3af4522c60886774c4963943b4746b1\"\ndependencies = [\n \"bincode\",\n \"bitflags 1.3.2\",\n \"fancy-regex\",\n \"flate2\",\n \"fnv\",\n \"once_cell\",\n \"plist\",\n \"regex-syntax\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thiserror\",\n \"walkdir\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f2c9fc62d0beef6951ccffd757e241266a2c833136efbe35af6cd2567dca5b\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"test_egui_extras_compilation\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_extras\",\n]\n\n[[package]]\nname = \"test_inline_glow_paint\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"test_size_pass\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"test_ui_stack\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"egui_extras\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"test_viewports\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d171f59dbaa811dbbb1aee1e73db92ec2b122911a48e1390dfe327a821ddede\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b08be0f17bd307950653ce45db00cd31200d82b624b36e181337d9c7d92765b5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tiff\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba1310fcea54c6a9a4fd1aad794ecc02c31682f6bfbecdf460bf19533eed1e3e\"\ndependencies = [\n \"flate2\",\n \"jpeg-decoder\",\n \"weezl\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tiny-skia\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83d13394d44dae3207b52a326c0c85a8bf87f1541f23b0d143811088497b09ab\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"bytemuck\",\n \"cfg-if\",\n \"log\",\n \"png\",\n \"tiny-skia-path\",\n]\n\n[[package]]\nname = \"tiny-skia-path\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9e7fc0c2e86a30b117d0462aa261b72b7a99b7ebd7deb3a14ceda95c5bdc93\"\ndependencies = [\n \"arrayref\",\n \"bytemuck\",\n \"strict-num\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"ttf-parser\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5902c5d130972a0000f60860bfbf46f7ca3db5391eddfedd1b8728bd9dc96c0e\"\n\n[[package]]\nname = \"type-map\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"deb68604048ff8fa93347f02441e4487594adc20bb8a084f9e564d2b827a0a9f\"\ndependencies = [\n \"rustc-hash\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uds_windows\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89daebc3e6fd160ac4aa9fc8b3bf71e1f74fbf92367ae71fb83a037e8bf164b9\"\ndependencies = [\n \"memoffset\",\n \"tempfile\",\n \"winapi\",\n]\n\n[[package]]\nname = \"unicase\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e51b68083f157f853b6379db119d1c1be0e6e4dec98101079dec41f6f5cf6df\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"unicode_names2\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"446c96c6dd42604779487f0a981060717156648c1706aa1f464677f03c6cc059\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"ureq\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b74fc6b57825be3373f7054754755f03ac3a8f5d70015ccad699ba2029956f4a\"\ndependencies = [\n \"base64 0.22.1\",\n \"flate2\",\n \"log\",\n \"once_cell\",\n \"rustls\",\n \"rustls-pki-types\",\n \"url\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"urlencoding\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da\"\n\n[[package]]\nname = \"user_attention\"\nversion = \"0.1.0\"\ndependencies = [\n \"eframe\",\n \"env_logger\",\n]\n\n[[package]]\nname = \"usvg\"\nversion = \"0.37.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b0a51b72ab80ca511d126b77feeeb4fb1e972764653e61feac30adc161a756\"\ndependencies = [\n \"base64 0.21.7\",\n \"log\",\n \"pico-args\",\n \"usvg-parser\",\n \"usvg-tree\",\n \"xmlwriter\",\n]\n\n[[package]]\nname = \"usvg-parser\"\nversion = \"0.37.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bd4e3c291f45d152929a31f0f6c819245e2921bfd01e7bd91201a9af39a2bdc\"\ndependencies = [\n \"data-url\",\n \"flate2\",\n \"imagesize\",\n \"kurbo\",\n \"log\",\n \"roxmltree\",\n \"simplecss\",\n \"siphasher\",\n \"svgtypes\",\n \"usvg-tree\",\n]\n\n[[package]]\nname = \"usvg-tree\"\nversion = \"0.37.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ee3d202ebdb97a6215604b8f5b4d6ef9024efd623cf2e373a6416ba976ec7d3\"\ndependencies = [\n \"rctree\",\n \"strict-num\",\n \"svgtypes\",\n \"tiny-skia-path\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"wayland-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"056535ced7a150d45159d3a8dc30f91a2e2d588ca0b23f70e56033622b8016f6\"\ndependencies = [\n \"cc\",\n \"downcast-rs\",\n \"rustix\",\n \"scoped-tls\",\n \"smallvec\",\n \"wayland-sys\",\n]\n\n[[package]]\nname = \"wayland-client\"\nversion = \"0.31.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b66249d3fc69f76fd74c82cc319300faa554e9d865dab1f7cd66cc20db10b280\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"rustix\",\n \"wayland-backend\",\n \"wayland-scanner\",\n]\n\n[[package]]\nname = \"wayland-csd-frame\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"625c5029dbd43d25e6aa9615e88b829a5cad13b2819c4ae129fdbb7c31ab4c7e\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cursor-icon\",\n \"wayland-backend\",\n]\n\n[[package]]\nname = \"wayland-cursor\"\nversion = \"0.31.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32b08bc3aafdb0035e7fe0fdf17ba0c09c268732707dca4ae098f60cb28c9e4c\"\ndependencies = [\n \"rustix\",\n \"wayland-client\",\n \"xcursor\",\n]\n\n[[package]]\nname = \"wayland-protocols\"\nversion = \"0.32.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cd0ade57c4e6e9a8952741325c30bf82f4246885dca8bf561898b86d0c1f58e\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-scanner\",\n]\n\n[[package]]\nname = \"wayland-protocols-plasma\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b31cab548ee68c7eb155517f2212049dc151f7cd7910c2b66abfd31c3ee12bd\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-protocols\",\n \"wayland-scanner\",\n]\n\n[[package]]\nname = \"wayland-protocols-wlr\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"782e12f6cd923c3c316130d56205ebab53f55d6666b7faddfad36cecaeeb4022\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-protocols\",\n \"wayland-scanner\",\n]\n\n[[package]]\nname = \"wayland-scanner\"\nversion = \"0.31.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"597f2001b2e5fc1121e3d5b9791d3e78f05ba6bfa4641053846248e3a13661c3\"\ndependencies = [\n \"proc-macro2\",\n \"quick-xml 0.36.2\",\n \"quote\",\n]\n\n[[package]]\nname = \"wayland-sys\"\nversion = \"0.31.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"efa8ac0d8e8ed3e3b5c9fc92c7881406a268e11555abe36493efabe649a29e09\"\ndependencies = [\n \"dlib\",\n \"log\",\n \"once_cell\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webbrowser\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b6f804e41d0852e16d2eaee61c7e4f7d3e8ffdb7b8ed85886aeb0791fe9fcd\"\ndependencies = [\n \"core-foundation\",\n \"home\",\n \"jni\",\n \"log\",\n \"ndk-context\",\n \"objc\",\n \"raw-window-handle 0.5.2\",\n \"url\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"841c67bff177718f1d4dfefde8d8f0e78f9b6589319ba88312f567fc5841a958\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"weezl\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53a85b86a771b1c87058196170769dd264f66c0782acf1ae6cc51bfd64b39082\"\n\n[[package]]\nname = \"wgpu\"\nversion = \"23.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80f70000db37c469ea9d67defdc13024ddf9a5f1b89cb2941b812ad7cde1735a\"\ndependencies = [\n \"arrayvec\",\n \"cfg_aliases 0.1.1\",\n \"document-features\",\n \"js-sys\",\n \"log\",\n \"naga\",\n \"parking_lot\",\n \"profiling\",\n \"raw-window-handle 0.6.2\",\n \"smallvec\",\n \"static_assertions\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"wgpu-core\",\n \"wgpu-hal\",\n \"wgpu-types\",\n]\n\n[[package]]\nname = \"wgpu-core\"\nversion = \"23.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d63c3c478de8e7e01786479919c8769f62a22eec16788d8c2ac77ce2c132778a\"\ndependencies = [\n \"arrayvec\",\n \"bit-vec 0.8.0\",\n \"bitflags 2.6.0\",\n \"cfg_aliases 0.1.1\",\n \"document-features\",\n \"indexmap\",\n \"log\",\n \"naga\",\n \"once_cell\",\n \"parking_lot\",\n \"profiling\",\n \"raw-window-handle 0.6.2\",\n \"rustc-hash\",\n \"smallvec\",\n \"thiserror\",\n \"wgpu-hal\",\n \"wgpu-types\",\n]\n\n[[package]]\nname = \"wgpu-hal\"\nversion = \"23.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89364b8a0b211adc7b16aeaf1bd5ad4a919c1154b44c9ce27838213ba05fd821\"\ndependencies = [\n \"android_system_properties\",\n \"arrayvec\",\n \"ash\",\n \"bit-set 0.8.0\",\n \"bitflags 2.6.0\",\n \"block\",\n \"bytemuck\",\n \"cfg_aliases 0.1.1\",\n \"core-graphics-types\",\n \"glow 0.14.2\",\n \"glutin_wgl_sys\",\n \"gpu-alloc\",\n \"gpu-allocator\",\n \"gpu-descriptor\",\n \"js-sys\",\n \"khronos-egl\",\n \"libc\",\n \"libloading\",\n \"log\",\n \"metal\",\n \"naga\",\n \"ndk-sys 0.5.0+25.2.9519653\",\n \"objc\",\n \"once_cell\",\n \"parking_lot\",\n \"profiling\",\n \"range-alloc\",\n \"raw-window-handle 0.6.2\",\n \"renderdoc-sys\",\n \"rustc-hash\",\n \"smallvec\",\n \"thiserror\",\n \"wasm-bindgen\",\n \"web-sys\",\n \"wgpu-types\",\n \"windows\",\n \"windows-core 0.58.0\",\n]\n\n[[package]]\nname = \"wgpu-types\"\nversion = \"23.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"610f6ff27778148c31093f3b03abc4840f9636d58d597ca2f5977433acfe0068\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"js-sys\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd04d41d93c4992d421894c18c8b43496aa748dd4c081bac0dc93eb0489272b6\"\ndependencies = [\n \"windows-core 0.58.0\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba6d44ec8c2591c134257ce647b7ea6b20335bf6379a27dac5f1641fcf59f99\"\ndependencies = [\n \"windows-implement\",\n \"windows-interface\",\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bbd5b46c938e506ecbce286b6628a02171d56153ba733b6c741fc627ec9579b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053c4c462dc91d3b1504c6fe5a726dd15e216ba718e84a0e46a88fbe5ded3515\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\ndependencies = [\n \"windows-targets 0.42.2\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.2\",\n \"windows_aarch64_msvc 0.42.2\",\n \"windows_i686_gnu 0.42.2\",\n \"windows_i686_msvc 0.42.2\",\n \"windows_x86_64_gnu 0.42.2\",\n \"windows_x86_64_gnullvm 0.42.2\",\n \"windows_x86_64_msvc 0.42.2\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winit\"\nversion = \"0.30.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dba50bc8ef4b6f1a75c9274fb95aa9a8f63fbc66c56f391bd85cf68d51e7b1a3\"\ndependencies = [\n \"ahash\",\n \"android-activity\",\n \"atomic-waker\",\n \"bitflags 2.6.0\",\n \"block2\",\n \"bytemuck\",\n \"calloop\",\n \"cfg_aliases 0.2.1\",\n \"concurrent-queue\",\n \"core-foundation\",\n \"core-graphics\",\n \"cursor-icon\",\n \"dpi\",\n \"js-sys\",\n \"libc\",\n \"memmap2\",\n \"ndk\",\n \"objc2\",\n \"objc2-app-kit\",\n \"objc2-foundation\",\n \"objc2-ui-kit\",\n \"orbclient\",\n \"percent-encoding\",\n \"pin-project\",\n \"raw-window-handle 0.6.2\",\n \"redox_syscall 0.4.1\",\n \"rustix\",\n \"sctk-adwaita\",\n \"smithay-client-toolkit\",\n \"smol_str\",\n \"tracing\",\n \"unicode-segmentation\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"wayland-backend\",\n \"wayland-client\",\n \"wayland-protocols\",\n \"wayland-protocols-plasma\",\n \"web-sys\",\n \"web-time\",\n \"windows-sys 0.52.0\",\n \"x11-dl\",\n \"x11rb\",\n \"xkbcommon-dl\",\n]\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"x11-dl\"\nversion = \"2.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38735924fedd5314a6e548792904ed8c6de6636285cb9fec04d5b1db85c1516f\"\ndependencies = [\n \"libc\",\n \"once_cell\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"x11rb\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d91ffca73ee7f68ce055750bf9f6eca0780b8c85eff9bc046a3b0da41755e12\"\ndependencies = [\n \"as-raw-xcb-connection\",\n \"gethostname\",\n \"libc\",\n \"libloading\",\n \"once_cell\",\n \"rustix\",\n \"x11rb-protocol\",\n]\n\n[[package]]\nname = \"x11rb-protocol\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec107c4503ea0b4a98ef47356329af139c0a4f7750e621cf2973cd3385ebcb3d\"\n\n[[package]]\nname = \"xcursor\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ef33da6b1660b4ddbfb3aef0ade110c8b8a781a3b6382fa5f2b5b040fd55f61\"\n\n[[package]]\nname = \"xdg-home\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec1cdab258fb55c0da61328dc52c8764709b249011b2cad0454c72f0bf10a1f6\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"xkbcommon-dl\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d039de8032a9a8856a6be89cea3e5d12fdd82306ab7c94d74e6deab2460651c5\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"dlib\",\n \"log\",\n \"once_cell\",\n \"xkeysym\",\n]\n\n[[package]]\nname = \"xkeysym\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9cc00251562a284751c9973bace760d86c0276c471b4be569fe6b068ee97a56\"\n\n[[package]]\nname = \"xml-rs\"\nversion = \"0.8.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af4e2e2f7cba5a093896c1e150fbfe177d1883e7448200efb81d40b9d339ef26\"\n\n[[package]]\nname = \"xmlwriter\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec7a2a501ed189703dba8b08142f057e887dfc4b2cc4db2d343ac6376ba3e0b9\"\n\n[[package]]\nname = \"xtask\"\nversion = \"0.30.0\"\n\n[[package]]\nname = \"yaml-rust\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85\"\ndependencies = [\n \"linked-hash-map\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zbus\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb97012beadd29e654708a0fdb4c84bc046f537aecfde2c3ee0a9e4b4d48c725\"\ndependencies = [\n \"async-broadcast\",\n \"async-executor\",\n \"async-fs\",\n \"async-io\",\n \"async-lock\",\n \"async-process\",\n \"async-recursion\",\n \"async-task\",\n \"async-trait\",\n \"blocking\",\n \"enumflags2\",\n \"event-listener\",\n \"futures-core\",\n \"futures-sink\",\n \"futures-util\",\n \"hex\",\n \"nix\",\n \"ordered-stream\",\n \"rand\",\n \"serde\",\n \"serde_repr\",\n \"sha1\",\n \"static_assertions\",\n \"tracing\",\n \"uds_windows\",\n \"windows-sys 0.52.0\",\n \"xdg-home\",\n \"zbus_macros 4.4.0\",\n \"zbus_names 3.0.0\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"zbus\"\nversion = \"5.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1162094dc63b1629fcc44150bcceeaa80798cd28bcbe7fa987b65a034c258608\"\ndependencies = [\n \"async-broadcast\",\n \"async-executor\",\n \"async-fs\",\n \"async-io\",\n \"async-lock\",\n \"async-process\",\n \"async-recursion\",\n \"async-task\",\n \"async-trait\",\n \"blocking\",\n \"enumflags2\",\n \"event-listener\",\n \"futures-core\",\n \"futures-util\",\n \"hex\",\n \"nix\",\n \"ordered-stream\",\n \"serde\",\n \"serde_repr\",\n \"static_assertions\",\n \"tracing\",\n \"uds_windows\",\n \"windows-sys 0.59.0\",\n \"winnow\",\n \"xdg-home\",\n \"zbus_macros 5.1.1\",\n \"zbus_names 4.1.0\",\n \"zvariant 5.1.0\",\n]\n\n[[package]]\nname = \"zbus-lockstep\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca2c5dceb099bddaade154055c926bb8ae507a18756ba1d8963fd7b51d8ed1d\"\ndependencies = [\n \"zbus_xml\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"zbus-lockstep-macros\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"709ab20fc57cb22af85be7b360239563209258430bccf38d8b979c5a2ae3ecce\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zbus-lockstep\",\n \"zbus_xml\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"zbus_macros\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"267db9407081e90bbfa46d841d3cbc60f59c0351838c4bc65199ecd79ab1983e\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zvariant_utils 2.1.0\",\n]\n\n[[package]]\nname = \"zbus_macros\"\nversion = \"5.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cd2dcdce3e2727f7d74b7e33b5a89539b3cc31049562137faf7ae4eb86cd16d\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zbus_names 4.1.0\",\n \"zvariant 5.1.0\",\n \"zvariant_utils 3.0.2\",\n]\n\n[[package]]\nname = \"zbus_names\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b9b1fef7d021261cc16cba64c351d291b715febe0fa10dc3a443ac5a5022e6c\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"zbus_names\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"856b7a38811f71846fd47856ceee8bccaec8399ff53fb370247e66081ace647b\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n \"winnow\",\n \"zvariant 5.1.0\",\n]\n\n[[package]]\nname = \"zbus_xml\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab3f374552b954f6abb4bd6ce979e6c9b38fb9d0cd7cc68a7d796e70c9f3a233\"\ndependencies = [\n \"quick-xml 0.30.0\",\n \"serde\",\n \"static_assertions\",\n \"zbus_names 3.0.0\",\n \"zvariant 4.2.0\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zune-core\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f423a2c17029964870cfaabb1f13dfab7d092a62a29a89264f4d36990ca414a\"\n\n[[package]]\nname = \"zune-jpeg\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16099418600b4d8f028622f73ff6e3deaabdff330fb9a2a131dea781ee8b0768\"\ndependencies = [\n \"zune-core\",\n]\n\n[[package]]\nname = \"zvariant\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2084290ab9a1c471c38fc524945837734fbf124487e105daec2bb57fd48c81fe\"\ndependencies = [\n \"endi\",\n \"enumflags2\",\n \"serde\",\n \"static_assertions\",\n \"zvariant_derive 4.2.0\",\n]\n\n[[package]]\nname = \"zvariant\"\nversion = \"5.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1200ee6ac32f1e5a312e455a949a4794855515d34f9909f4a3e082d14e1a56f\"\ndependencies = [\n \"endi\",\n \"enumflags2\",\n \"serde\",\n \"static_assertions\",\n \"url\",\n \"winnow\",\n \"zvariant_derive 5.1.0\",\n \"zvariant_utils 3.0.2\",\n]\n\n[[package]]\nname = \"zvariant_derive\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73e2ba546bda683a90652bac4a279bc146adad1386f25379cf73200d2002c449\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zvariant_utils 2.1.0\",\n]\n\n[[package]]\nname = \"zvariant_derive\"\nversion = \"5.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"687e3b97fae6c9104fbbd36c73d27d149abf04fb874e2efbd84838763daa8916\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zvariant_utils 3.0.2\",\n]\n\n[[package]]\nname = \"zvariant_utils\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c51bcff7cc3dbb5055396bcf774748c3dab426b4b8659046963523cee4808340\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zvariant_utils\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20d1d011a38f12360e5fcccceeff5e2c42a8eb7f27f0dcba97a0862ede05c9c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"static_assertions\",\n \"syn\",\n \"winnow\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 9.5927734375,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"crates/ecolor\",\n    \"crates/egui_demo_app\",\n    \"crates/egui_demo_lib\",\n    \"crates/egui_extras\",\n    \"crates/egui_glow\",\n    \"crates/egui_kittest\",\n    \"crates/egui-wgpu\",\n    \"crates/egui-winit\",\n    \"crates/egui\",\n    \"crates/emath\",\n    \"crates/epaint\",\n    \"crates/epaint_default_fonts\",\n\n    \"examples/*\",\n    \"tests/*\",\n\n    \"xtask\",\n]\n\n[workspace.package]\nedition = \"2021\"\nlicense = \"MIT OR Apache-2.0\"\nrust-version = \"1.80\"\nversion = \"0.30.0\"\n\n\n[profile.release]\n# lto = true # VERY slightly smaller wasm\n# opt-level = 's' # 10-20% smaller wasm compared to `opt-level = 3`\n# opt-level = 1 # very slow and big wasm. Don't do this.\nopt-level = 2 # fast and small wasm, basically same as `opt-level = 's'`\n# opt-level = 3 # unnecessarily large wasm for no performance gain\n\n# debug = true # include debug symbols, useful when profiling wasm\n\npanic = \"abort\" # This leads to better optimizations and smaller binaries (and is the default in Wasm anyways).\n\n\n[profile.dev]\n# Can't leave this on by default, because it breaks the Windows build. Related: https://github.com/rust-lang/cargo/issues/4897\n# split-debuginfo = \"unpacked\" # faster debug builds on mac\n# opt-level = 1                # Make debug builds run faster\n\n# panic = \"abort\" leads to better optimizations and smaller binaries (and is the default in Wasm anyways),\n# but it also means backtraces don't work with the `backtrace` library (https://github.com/rust-lang/backtrace-rs/issues/397).\n# egui has a feature where if you hold down all modifiers keys on your keyboard and hover any UI widget,\n# you will see the backtrace to that widget, and we don't want to break that feature in dev builds.\n\n[profile.dev.package.\"*\"]\n# Optimize all dependencies even in debug builds (does not affect workspace packages):\nopt-level = 2\n\n\n[workspace.dependencies]\nemath = { version = \"0.30.0\", path = \"crates/emath\", default-features = false }\necolor = { version = \"0.30.0\", path = \"crates/ecolor\", default-features = false }\nepaint = { version = \"0.30.0\", path = \"crates/epaint\", default-features = false }\nepaint_default_fonts = { version = \"0.30.0\", path = \"crates/epaint_default_fonts\" }\negui = { version = \"0.30.0\", path = \"crates/egui\", default-features = false }\negui-winit = { version = \"0.30.0\", path = \"crates/egui-winit\", default-features = false }\negui_extras = { version = \"0.30.0\", path = \"crates/egui_extras\", default-features = false }\negui-wgpu = { version = \"0.30.0\", path = \"crates/egui-wgpu\", default-features = false }\negui_demo_lib = { version = \"0.30.0\", path = \"crates/egui_demo_lib\", default-features = false }\negui_glow = { version = \"0.30.0\", path = \"crates/egui_glow\", default-features = false }\negui_kittest = { version = \"0.30.0\", path = \"crates/egui_kittest\", default-features = false }\neframe = { version = \"0.30.0\", path = \"crates/eframe\", default-features = false }\n\nahash = { version = \"0.8.11\", default-features = false, features = [\n    \"no-rng\", # we don't need DOS-protection, so we let users opt-in to it instead\n    \"std\",\n] }\nbacktrace = \"0.3\"\nbitflags = \"2.6\"\nbytemuck = \"1.7.2\"\ncriterion = { version = \"0.5.1\", default-features = false }\ndify = { version = \"0.7\", default-features = false }\ndocument-features = \"0.2.10\"\nglow = \"0.16\"\nglutin = { version = \"0.32.0\", default-features = false }\nglutin-winit = { version = \"0.5.0\", default-features = false }\nhome = \"0.5.9\"\nimage = { version = \"0.25\", default-features = false }\nkittest = { version = \"0.1\" }\nlog = { version = \"0.4\", features = [\"std\"] }\nnohash-hasher = \"0.2\"\nparking_lot = \"0.12\"\npollster = \"0.4\"\nprofiling = { version = \"1.0.16\", default-features = false }\npuffin = \"0.19\"\npuffin_http = \"0.16\"\nraw-window-handle = \"0.6.0\"\nron = \"0.8\"\nserde = { version = \"1\", features = [\"derive\"] }\nthiserror = \"1.0.37\"\ntype-map = \"0.5.0\"\nwasm-bindgen = \"0.2\"\nwasm-bindgen-futures = \"0.4\"\nweb-sys = \"0.3.70\"\nweb-time = \"1.1.0\" # Timekeeping for native and web\nwgpu = { version = \"23.0.0\", default-features = false }\nwindows-sys = \"0.59\"\nwinit = { version = \"0.30.7\", default-features = false }\n\n[workspace.lints.rust]\nunsafe_code = \"deny\"\n\nelided_lifetimes_in_paths = \"warn\"\nfuture_incompatible = { level = \"warn\", priority = -1 }\nnonstandard_style = { level = \"warn\", priority = -1 }\nrust_2018_idioms = { level = \"warn\", priority = -1 }\nrust_2021_prelude_collisions = \"warn\"\nsemicolon_in_expressions_from_macros = \"warn\"\ntrivial_numeric_casts = \"warn\"\nunsafe_op_in_unsafe_fn = \"warn\"                         # `unsafe_op_in_unsafe_fn` may become the default in future Rust versions: https://github.com/rust-lang/rust/issues/71668\nunused_extern_crates = \"warn\"\nunused_import_braces = \"warn\"\nunused_lifetimes = \"warn\"\n\ntrivial_casts = \"allow\"\nunused_qualifications = \"allow\"\n\n[workspace.lints.rustdoc]\nall = \"warn\"\nmissing_crate_level_docs = \"warn\"\nbroken_intra_doc_links = \"warn\"\n\n# See also clippy.toml\n[workspace.lints.clippy]\nas_ptr_cast_mut = \"warn\"\nawait_holding_lock = \"warn\"\nbool_to_int_with_if = \"warn\"\nchar_lit_as_u8 = \"warn\"\nchecked_conversions = \"warn\"\nclear_with_drain = \"warn\"\ncloned_instead_of_copied = \"warn\"\ndbg_macro = \"warn\"\ndebug_assert_with_mut_call = \"warn\"\nderive_partial_eq_without_eq = \"warn\"\ndisallowed_macros = \"warn\"                  # See clippy.toml\ndisallowed_methods = \"warn\"                 # See clippy.toml\ndisallowed_names = \"warn\"                   # See clippy.toml\ndisallowed_script_idents = \"warn\"           # See clippy.toml\ndisallowed_types = \"warn\"                   # See clippy.toml\ndoc_link_with_quotes = \"warn\"\ndoc_markdown = \"warn\"\nempty_enum = \"warn\"\nempty_enum_variants_with_brackets = \"warn\"\nenum_glob_use = \"warn\"\nequatable_if_let = \"warn\"\nexit = \"warn\"\nexpl_impl_clone_on_copy = \"warn\"\nexplicit_deref_methods = \"warn\"\nexplicit_into_iter_loop = \"warn\"\nexplicit_iter_loop = \"warn\"\nfallible_impl_from = \"warn\"\nfilter_map_next = \"warn\"\nflat_map_option = \"warn\"\nfloat_cmp_const = \"warn\"\nfn_params_excessive_bools = \"warn\"\nfn_to_numeric_cast_any = \"warn\"\nfrom_iter_instead_of_collect = \"warn\"\nget_unwrap = \"warn\"\nif_let_mutex = \"warn\"\nimplicit_clone = \"warn\"\nimplied_bounds_in_impls = \"warn\"\nimprecise_flops = \"warn\"\nindex_refutable_slice = \"warn\"\ninefficient_to_string = \"warn\"\ninfinite_loop = \"warn\"\ninto_iter_without_iter = \"warn\"\ninvalid_upcast_comparisons = \"warn\"\niter_filter_is_ok = \"warn\"\niter_filter_is_some = \"warn\"\niter_not_returning_iterator = \"warn\"\niter_on_empty_collections = \"warn\"\niter_on_single_items = \"warn\"\niter_without_into_iter = \"warn\"\nlarge_digit_groups = \"warn\"\nlarge_include_file = \"warn\"\nlarge_stack_arrays = \"warn\"\nlarge_stack_frames = \"warn\"\nlarge_types_passed_by_value = \"warn\"\nlet_unit_value = \"warn\"\nlinkedlist = \"warn\"\nlossy_float_literal = \"warn\"\nmacro_use_imports = \"warn\"\nmanual_assert = \"warn\"\nmanual_clamp = \"warn\"\nmanual_instant_elapsed = \"warn\"\nmanual_is_variant_and = \"warn\"\nmanual_let_else = \"warn\"\nmanual_ok_or = \"warn\"\nmanual_string_new = \"warn\"\nmap_err_ignore = \"warn\"\nmap_flatten = \"warn\"\nmap_unwrap_or = \"warn\"\nmatch_bool = \"warn\"\nmatch_on_vec_items = \"warn\"\nmatch_same_arms = \"warn\"\nmatch_wild_err_arm = \"warn\"\nmatch_wildcard_for_single_variants = \"warn\"\nmem_forget = \"warn\"\nmismatched_target_os = \"warn\"\nmismatching_type_param_order = \"warn\"\nmissing_enforced_import_renames = \"warn\"\nmissing_errors_doc = \"warn\"\nmissing_safety_doc = \"warn\"\nmixed_attributes_style = \"warn\"\nmut_mut = \"warn\"\nmutex_integer = \"warn\"\nneedless_borrow = \"warn\"\nneedless_continue = \"warn\"\nneedless_for_each = \"warn\"\nneedless_pass_by_ref_mut = \"warn\"\nneedless_pass_by_value = \"warn\"\nnegative_feature_names = \"warn\"\nnonstandard_macro_braces = \"warn\"\noption_as_ref_cloned = \"warn\"\noption_option = \"warn\"\npath_buf_push_overwrite = \"warn\"\nprint_stderr = \"warn\"\nptr_as_ptr = \"warn\"\nptr_cast_constness = \"warn\"\npub_underscore_fields = \"warn\"\npub_without_shorthand = \"warn\"\nrc_mutex = \"warn\"\nreadonly_write_lock = \"warn\"\nredundant_type_annotations = \"warn\"\nref_as_ptr = \"warn\"\nref_option_ref = \"warn\"\nref_patterns = \"warn\"\nrest_pat_in_fully_bound_structs = \"warn\"\nsame_functions_in_if_condition = \"warn\"\nsemicolon_if_nothing_returned = \"warn\"\nsingle_char_pattern = \"warn\"\nsingle_match_else = \"warn\"\nstr_split_at_newline = \"warn\"\nstr_to_string = \"warn\"\nstring_add = \"warn\"\nstring_add_assign = \"warn\"\nstring_lit_as_bytes = \"warn\"\nstring_lit_chars_any = \"warn\"\nstring_to_string = \"warn\"\nsuspicious_command_arg_space = \"warn\"\nsuspicious_xor_used_as_pow = \"warn\"\ntodo = \"warn\"\ntrailing_empty_array = \"warn\"\ntrait_duplication_in_bounds = \"warn\"\ntuple_array_conversions = \"warn\"\nunchecked_duration_subtraction = \"warn\"\nundocumented_unsafe_blocks = \"warn\"\nunimplemented = \"warn\"\nuninhabited_references = \"warn\"\nuninlined_format_args = \"warn\"\nunnecessary_box_returns = \"warn\"\nunnecessary_safety_doc = \"warn\"\nunnecessary_struct_initialization = \"warn\"\nunnecessary_wraps = \"warn\"\nunnested_or_patterns = \"warn\"\nunused_peekable = \"warn\"\nunused_rounding = \"warn\"\nunused_self = \"warn\"\nuse_self = \"warn\"\nuseless_transmute = \"warn\"\nverbose_file_reads = \"warn\"\nwildcard_dependencies = \"warn\"\nzero_sized_map_values = \"warn\"\n\n\n# TODO(emilk): maybe enable more of these lints?\niter_over_hash_type = \"allow\"\nmissing_assert_message = \"allow\"\nshould_panic_without_expect = \"allow\"\ntoo_many_lines = \"allow\"\nunwrap_used = \"allow\"                 # TODO(emilk): We really wanna warn on this one\n\n# These are meh:\nassigning_clones = \"allow\"            # No please\nlet_underscore_must_use = \"allow\"\nlet_underscore_untyped = \"allow\"\nmanual_range_contains = \"allow\"       # this one is just worse imho\nself_named_module_files = \"allow\"     # Disabled waiting on https://github.com/rust-lang/rust-clippy/issues/9602\nsignificant_drop_tightening = \"allow\" # Too many false positives\nwildcard_imports = \"allow\"            # `use crate::*` is useful to avoid merge conflicts when adding/removing imports\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.595703125,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.06640625,
          "content": "Copyright (c) 2018-2021 Emil Ernerfeldt <emil.ernerfeldt@gmail.com>\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.416015625,
          "content": "# üñå egui: an easy-to-use GUI in pure Rust\n\n[<img alt=\"github\" src=\"https://img.shields.io/badge/github-emilk/egui-8da0cb?logo=github\" height=\"20\">](https://github.com/emilk/egui)\n[![Latest version](https://img.shields.io/crates/v/egui.svg)](https://crates.io/crates/egui)\n[![Documentation](https://docs.rs/egui/badge.svg)](https://docs.rs/egui)\n[![unsafe forbidden](https://img.shields.io/badge/unsafe-forbidden-success.svg)](https://github.com/rust-secure-code/safety-dance/)\n[![Build Status](https://github.com/emilk/egui/workflows/CI/badge.svg)](https://github.com/emilk/egui/actions?workflow=CI)\n[![MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/emilk/egui/blob/master/LICENSE-MIT)\n[![Apache](https://img.shields.io/badge/license-Apache-blue.svg)](https://github.com/emilk/egui/blob/master/LICENSE-APACHE)\n[![Discord](https://img.shields.io/discord/900275882684477440?label=egui%20discord)](https://discord.gg/JFcEma9bJq)\n\n\n<div align=\"center\">\n<a href=\"https://www.rerun.io/\"><img src=\"media/rerun_io_logo.png\" width=\"250\"></a>\n\negui development is sponsored by [Rerun](https://www.rerun.io/), a startup building<br>\nan SDK for visualizing streams of multimodal data.\n</div>\n\n---\n\nüëâ [Click to run the web demo](https://www.egui.rs/#demo) üëà\n\negui (pronounced \"e-gooey\") is a simple, fast, and highly portable immediate mode GUI library for Rust. egui runs on the web, natively, and [in your favorite game engine](#integrations).\n\negui aims to be the easiest-to-use Rust GUI library, and the simplest way to make a web app in Rust.\n\negui can be used anywhere you can draw textured triangles, which means you can easily integrate it into your game engine of choice.\n\n[`eframe`](https://github.com/emilk/egui/tree/master/crates/eframe) is the official egui framework, which supports writing apps for Web, Linux, Mac, Windows, and Android.\n\n\n## Example\n\n``` rust\nui.heading(\"My egui Application\");\nui.horizontal(|ui| {\n    ui.label(\"Your name: \");\n    ui.text_edit_singleline(&mut name);\n});\nui.add(egui::Slider::new(&mut age, 0..=120).text(\"age\"));\nif ui.button(\"Increment\").clicked() {\n    age += 1;\n}\nui.label(format!(\"Hello '{name}', age {age}\"));\nui.image(egui::include_image!(\"ferris.png\"));\n```\n\n<img alt=\"Dark mode\" src=\"media/demo.gif\"> &nbsp; &nbsp; <img alt=\"Light mode\" src=\"media/demo_light_mode.png\" height=\"278\">\n\n## Sections:\n\n* [Example](#example)\n* [Quick start](#quick-start)\n* [Demo](#demo)\n* [Goals](#goals)\n* [State / features](#state)\n* [Dependencies](#dependencies)\n* [Who is egui for?](#who-is-egui-for)\n* [Integrations](#integrations)\n* [Why immediate mode](#why-immediate-mode)\n* [FAQ](#faq)\n* [Other](#other)\n* [Credits](#credits)\n\n([egui ÁöÑ‰∏≠ÊñáÁøªËØëÊñáÊ°£ / chinese translation](https://github.com/Re-Ch-Love/egui-doc-cn/blob/main/README_zh-hans.md))\n\n\n## Quick start\n\nThere are simple examples in [the `examples/` folder](https://github.com/emilk/egui/blob/master/examples/). If you want to write a web app, then go to <https://github.com/emilk/eframe_template/> and follow the instructions. The official docs are at <https://docs.rs/egui>. For inspiration and more examples, check out the [the egui web demo](https://www.egui.rs/#demo) and follow the links in it to its source code.\n\nIf you want to integrate egui into an existing engine, go to the [Integrations](#integrations) section.\n\nIf you have questions, use [GitHub Discussions](https://github.com/emilk/egui/discussions). There is also [an egui discord server](https://discord.gg/JFcEma9bJq). If you want to contribute to egui, please read the [Contributing Guidelines](https://github.com/emilk/egui/blob/master/CONTRIBUTING.md).\n\n## Demo\n\n[Click to run egui web demo](https://www.egui.rs/#demo) (works in any browser with Wasm and WebGL support). Uses [`eframe`](https://github.com/emilk/egui/tree/master/crates/eframe).\n\nTo test the demo app locally, run `cargo run --release -p egui_demo_app`.\n\nThe native backend is [`egui_glow`](https://github.com/emilk/egui/tree/master/crates/egui_glow) (using [`glow`](https://crates.io/crates/glow)) and should work out-of-the-box on Mac and Windows, but on Linux you need to first run:\n\n`sudo apt-get install -y libclang-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev`\n\nOn Fedora Rawhide you need to run:\n\n`dnf install clang clang-devel clang-tools-extra libxkbcommon-devel pkg-config openssl-devel libxcb-devel gtk3-devel atk fontconfig-devel`\n\n**NOTE**: This is just for the demo app - egui itself is completely platform agnostic!\n\n## Goals\n\n* The easiest to use GUI library\n* Responsive: target 60 Hz in debug build\n* Friendly: difficult to make mistakes, and shouldn't panic\n* Portable: the same code works on the web and as a native app\n* Easy to integrate into any environment\n* A simple 2D graphics API for custom painting ([`epaint`](https://docs.rs/epaint)).\n* Pure immediate mode: no callbacks\n* Extensible: [easy to write your own widgets for egui](https://github.com/emilk/egui/blob/master/crates/egui_demo_lib/src/demo/toggle_switch.rs)\n* Modular: You should be able to use small parts of egui and combine them in new ways\n* Safe: there is no `unsafe` code in egui\n* Minimal dependencies\n\negui is *not* a framework. egui is a library you call into, not an environment you program for.\n\n**NOTE**: egui does not claim to have reached all these goals yet! egui is still work in progress.\n\n### Non-goals\n\n* Become the most powerful GUI library\n* Native looking interface\n\n## State\n\negui is in active development. It works well for what it does, but it lacks many features and the interfaces are still in flux. New releases will have breaking changes.\n\nStill, egui can be used to create professional looking applications, like [the Rerun Viewer](https://app.rerun.io/).\n\n### Features\n\n* Widgets: label, text button, hyperlink, checkbox, radio button, slider, draggable value, text editing, color picker, spinner\n* Images\n* Layouts: horizontal, vertical, columns, automatic wrapping\n* Text editing: multiline, copy/paste, undo, emoji supports\n* Windows: move, resize, name, minimize and close. Automatically sized and positioned.\n* Regions: resizing, vertical scrolling, collapsing headers (sections), panels\n* Rendering: Anti-aliased rendering of lines, circles, text and convex polygons.\n* Tooltips on hover\n* Accessibility via [AccessKit](https://accesskit.dev/)\n* Label text selection\n* And more!\n\nCheck out the [3rd party egui crates wiki](https://github.com/emilk/egui/wiki/3rd-party-egui-crates) for even more \nwidgets and features, maintained by the community.\n\n<img src=\"media/widget_gallery_0.23.gif\" width=\"50%\">\n\nLight Theme:\n\n<img src=\"media/widget_gallery_0.23_light.png\" width=\"50%\">\n\n\n## Dependencies\n`egui` has a minimal set of default dependencies:\n\n* [`ab_glyph`](https://crates.io/crates/ab_glyph)\n* [`ahash`](https://crates.io/crates/ahash)\n* [`bitflags`](https://crates.io/crates/bitflags)\n* [`nohash-hasher`](https://crates.io/crates/nohash-hasher)\n* [`parking_lot`](https://crates.io/crates/parking_lot)\n\nHeavier dependencies are kept out of `egui`, even as opt-in.\nNo code that isn't fully Wasm-friendly is part of `egui`.\n\nTo load images into `egui` you can use the official [`egui_extras`](https://github.com/emilk/egui/tree/master/crates/egui_extras) crate.\n\n[`eframe`](https://github.com/emilk/egui/tree/master/crates/eframe) on the other hand has a lot of dependencies, including [`winit`](https://crates.io/crates/winit), [`image`](https://crates.io/crates/image), graphics crates, clipboard crates, etc,\n\n## Who is egui for?\n\negui aims to be the best choice when you want a simple way to create a GUI, or you want to add a GUI to a game engine.\n\nIf you are not using Rust, egui is not for you. If you want a GUI that looks native, egui is not for you. If you want something that doesn't break when you upgrade it, egui isn't for you (yet).\n\nBut if you are writing something interactive in Rust that needs a simple GUI, egui may be for you.\n\n\n## Integrations\n\negui is built to be easy to integrate into any existing game engine or platform you are working on.\negui itself doesn't know or care on what OS it is running or how to render things to the screen - that is the job of the egui integration.\n\nAn integration needs to do the following each frame:\n\n* **Input**: Gather input (mouse, touches, keyboard, screen size, etc) and give it to egui\n* Call into the application GUI code\n* **Output**: Handle egui output (cursor changes, paste, texture allocations, ‚Ä¶)\n* **Painting**: Render the triangle mesh egui produces (see [OpenGL example](https://github.com/emilk/egui/blob/master/crates/egui_glow/src/painter.rs))\n\n### Official integrations\n\nThese are the official egui integrations:\n\n* [`eframe`](https://github.com/emilk/egui/tree/master/crates/eframe) for compiling the same app to web/wasm and desktop/native. Uses `egui-winit` and `egui_glow` or `egui-wgpu`\n* [`egui_glow`](https://github.com/emilk/egui/tree/master/crates/egui_glow) for rendering egui with [glow](https://github.com/grovesNL/glow) on native and web, and for making native apps\n* [`egui-wgpu`](https://github.com/emilk/egui/tree/master/crates/egui-wgpu) for [wgpu](https://crates.io/crates/wgpu) (WebGPU API)\n* [`egui-winit`](https://github.com/emilk/egui/tree/master/crates/egui-winit) for integrating with [winit](https://github.com/rust-windowing/winit)\n\n### 3rd party integrations\n\nCheck the wiki to find [3rd party integrations](https://github.com/emilk/egui/wiki/3rd-party-integrations) \nand [egui crates](https://github.com/emilk/egui/wiki/3rd-party-egui-crates).\n\n### Writing your own egui integration\nMissing an integration for the thing you're working on? Create one, it's easy!\nSee <https://docs.rs/egui/latest/egui/#integrating-with-egui>.\n\n\n## Why immediate mode\n\n`egui` is an [immediate mode GUI library](https://en.wikipedia.org/wiki/Immediate_mode_GUI), as opposed to a *retained mode* GUI library. The difference between retained mode and immediate mode is best illustrated with the example of a button: In a retained GUI you create a button, add it to some UI and install some on-click handler (callback). The button is retained in the UI, and to change the text on it you need to store some sort of reference to it. By contrast, in immediate mode you show the button and interact with it immediately, and you do so every frame (e.g. 60 times per second). This means there is no need for any on-click handler, nor to store any reference to it. In `egui` this looks like this: `if ui.button(\"Save file\").clicked() { save(file); }`.\n\nA more detailed description of immediate mode can be found [in the `egui` docs](https://docs.rs/egui/latest/egui/#understanding-immediate-mode).\n\nThere are advantages and disadvantages to both systems.\n\nThe short of it is this: immediate mode GUI libraries are easier to use, but less powerful.\n\n### Advantages of immediate mode\n#### Usability\nThe main advantage of immediate mode is that the application code becomes vastly simpler:\n\n* You never need to have any on-click handlers and callbacks that disrupts your code flow.\n* You don't have to worry about a lingering callback calling something that is gone.\n* Your GUI code can easily live in a simple function (no need for an object just for the UI).\n* You don't have to worry about app state and GUI state being out-of-sync (i.e. the GUI showing something outdated), because the GUI isn't storing any state - it is showing the latest state *immediately*.\n\nIn other words, a whole lot of code, complexity and bugs are gone, and you can focus your time on something more interesting than writing GUI code.\n\n### Disadvantages of immediate mode\n\n#### Layout\nThe main disadvantage of immediate mode is it makes layout more difficult. Say you want to show a small dialog window in the center of the screen. To position the window correctly the GUI library must first know the size of it. To know the size of the window the GUI library must first layout the contents of the window. In retained mode this is easy: the GUI library does the window layout, positions the window, then checks for interaction (\"was the OK button clicked?\").\n\nIn immediate mode you run into a paradox: to know the size of the window, we must do the layout, but the layout code also checks for interaction (\"was the OK button clicked?\") and so it needs to know the window position *before* showing the window contents. This means we must decide where to show the window *before* we know its size!\n\nThis is a fundamental shortcoming of immediate mode GUIs, and any attempt to resolve it comes with its own downsides.\n\nOne workaround is to store the size and use it the next frame. This produces a frame-delay for the correct layout, producing occasional flickering the first frame something shows up. `egui` does this for some things such as windows and grid layouts.\n\nThe \"first-frame jitter\" can be covered up with an extra _pass_, which egui supports via `Context::request_discard`.\nThe downside of this is the added CPU cost of a second pass, so egui only does this in very rare circumstances (the majority of frames are single-pass).\n\nFor \"atomic\" widgets (e.g. a button) `egui` knows the size before showing it, so centering buttons, labels etc is possible in `egui` without any special workarounds.\n\nSee [this issue](https://github.com/emilk/egui/issues/4378) for more.\n\n#### CPU usage\nSince an immediate mode GUI does a full layout each frame, the layout code needs to be quick. If you have a very complex GUI this can tax the CPU. In particular, having a very large UI in a scroll area (with very long scrollback) can be slow, as the content needs to be laid out each frame.\n\nIf you design the GUI with this in mind and refrain from huge scroll areas (or only lay out the part that is in view) then the performance hit is generally pretty small. For most cases you can expect `egui` to take up 1-2 ms per frame, but `egui` still has a lot of room for optimization (it's not something I've focused on yet). `egui` only repaints when there is interaction (e.g. mouse movement) or an animation, so if your app is idle, no CPU is wasted.\n\nIf your GUI is highly interactive, then immediate mode may actually be more performant compared to retained mode. Go to any web page and resize the browser window, and you'll notice that the browser is very slow to do the layout and eats a lot of CPU doing it. Resize a window in `egui` by contrast, and you'll get smooth 60 FPS at no extra CPU cost.\n\n\n#### IDs\nThere are some GUI state that you want the GUI library to retain, even in an immediate mode library such as `egui`. This includes position and sizes of windows and how far the user has scrolled in some UI. In these cases you need to provide `egui` with a seed of a unique identifier (unique within the parent UI). For instance: by default `egui` uses the window titles as unique IDs to store window positions. If you want two windows with the same name (or one window with a dynamic name) you must provide some other ID source to `egui` (some unique integer or string).\n\n`egui` also needs to track which widget is being interacted with (e.g. which slider is being dragged). `egui` uses unique IDs for this as well, but in this case the IDs are automatically generated, so there is no need for the user to worry about it. In particular, having two buttons with the same name is no problem (this is in contrast with [`Dear ImGui`](https://github.com/ocornut/imgui)).\n\nOverall, ID handling is a rare inconvenience, and not a big disadvantage.\n\n\n## FAQ\n\nAlso see [GitHub Discussions](https://github.com/emilk/egui/discussions/categories/q-a).\n\n### Can I use `egui` with non-latin characters?\nYes! But you need to install your own font (`.ttf` or `.otf`) using [`Context::set_fonts`](https://docs.rs/egui/latest/egui/struct.Context.html#method.set_fonts).\n\n### Can I customize the look of egui?\nYes! You can customize the colors, spacing, fonts and sizes of everything using `Context::set_style`.\n\nThis is not yet as powerful as say CSS, [but this is going to improve](https://github.com/emilk/egui/issues/3284).\n\nHere is an example (from https://github.com/a-liashenko/TinyPomodoro):\n\n<img src=\"media/pompodoro-skin.png\" width=\"50%\">\n\n### How do I use egui with `async`?\nIf you call `.await` in your GUI code, the UI will freeze, which is very bad UX. Instead, keep the GUI thread non-blocking and communicate with any concurrent tasks (`async` tasks or other threads) with something like:\n* Channels (e.g. [`std::sync::mpsc::channel`](https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html)). Make sure to use [`try_recv`](https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.try_recv) so you don't block the gui thread!\n* `Arc<Mutex<Value>>` (background thread sets a value; GUI thread reads it)\n* [`poll_promise::Promise`](https://docs.rs/poll-promise)\n* [`eventuals::Eventual`](https://docs.rs/eventuals/latest/eventuals/struct.Eventual.html)\n* [`tokio::sync::watch::channel`](https://docs.rs/tokio/latest/tokio/sync/watch/fn.channel.html)\n\n### How do I create a file dialog?\n\nThe async version of [rfd](https://docs.rs/rfd/latest/rfd/) supports both native and Wasm. See example app here https://github.com/woelper/egui_pick_file which also has a demo available via [gitub pages](https://woelper.github.io/egui_pick_file/).\n\n### What about accessibility, such as screen readers?\negui includes optional support for [AccessKit](https://accesskit.dev/), which currently implements the native accessibility APIs on Windows and macOS. This feature is enabled by default in eframe. For platforms that AccessKit doesn't yet support, including web, there is an experimental built-in screen reader; in [the web demo](https://www.egui.rs/#demo) you can enable it in the \"Backend\" tab.\n\nThe original discussion of accessibility in egui is at <https://github.com/emilk/egui/issues/167>. Now that AccessKit support is merged, providing a strong foundation for future accessibility work, please open new issues on specific accessibility problems.\n\n### What is the difference between [egui](https://docs.rs/egui) and [eframe](https://github.com/emilk/egui/tree/master/crates/eframe)?\n\n`egui` is a 2D user interface library for laying out and interacting with buttons, sliders, etc.\n`egui` has no idea if it is running on the web or natively, and does not know how to collect input or show things on screen.\nThat is the job of *the integration* or *backend*.\n\nIt is common to use `egui` from a game engine (using e.g. [`bevy_egui`](https://docs.rs/bevy_egui)),\nbut you can also use `egui` stand-alone using `eframe`. `eframe` has integration for web and native, and handles input and rendering.\nThe _frame_ in `eframe` stands both for the frame in which your egui app resides and also for \"framework\" (`eframe` is a framework, `egui` is a library).\n\n### How do I render 3D stuff in an egui area?\nThere are multiple ways to combine egui with 3D. The simplest way is to use a 3D library and have egui sit on top of the 3D view. See for instance [`bevy_egui`](https://github.com/mvlabat/bevy_egui) or [`three-d`](https://github.com/asny/three-d).\n\nIf you want to embed 3D into an egui view there are two options:\n\n#### `Shape::Callback`\nExample:\n* <https://github.com/emilk/egui/blob/master/examples/custom_3d_glow/src/main.rs>\n\n`Shape::Callback` will call your code when egui gets painted, to show anything using whatever the background rendering context is. When using [`eframe`](https://github.com/emilk/egui/tree/master/crates/eframe) this will be [`glow`](https://github.com/grovesNL/glow). Other integrations will give you other rendering contexts, if they support `Shape::Callback` at all.\n\n#### Render-to-texture\nYou can also render your 3D scene to a texture and display it using [`ui.image(‚Ä¶)`](https://docs.rs/egui/latest/egui/struct.Ui.html#method.image). You first need to convert the native texture to an [`egui::TextureId`](https://docs.rs/egui/latest/egui/enum.TextureId.html), and how to do this depends on the integration you use.\n\nExamples:\n* Using [`egui-miniquad`]( https://github.com/not-fl3/egui-miniquad): https://github.com/not-fl3/egui-miniquad/blob/master/examples/render_to_egui_image.rs\n\n\n## Other\n\n### Conventions and design choices\n\nAll coordinates are in screen space coordinates, with (0, 0) in the top left corner\n\nAll coordinates are in logical \"points\" which may consist of many physical pixels.\n\nAll colors have premultiplied alpha, unless otherwise stated.\n\negui uses the builder pattern for construction widgets. For instance: `ui.add(Label::new(\"Hello\").text_color(RED));` I am not a big fan of the builder pattern (it is quite verbose both in implementation and in use) but until Rust has named, default arguments it is the best we can do. To alleviate some of the verbosity there are common-case helper functions, like `ui.label(\"Hello\");`.\n\nInstead of using matching `begin/end` style function calls (which can be error prone) egui prefers to use `FnOnce` closures passed to a wrapping function. Lambdas are a bit ugly though, so I'd like to find a nicer solution to this. More discussion of this at <https://github.com/emilk/egui/issues/1004#issuecomment-1001650754>.\n\negui uses a single `RwLock` for short-time locks on each access of `Context` data. This is to leave implementation simple and transactional and allow users to run their UI logic in parallel. Instead of creating mutex guards, egui uses closures passed to a wrapping function, e.g. `ctx.input(|i| i.key_down(Key::A))`. This is to make it less likely that a user would accidentally double-lock the `Context`, which would lead to a deadlock.\n\n### Inspiration\n\nThe one and only [Dear ImGui](https://github.com/ocornut/imgui) is a great Immediate Mode GUI for C++ which works with many backends. That library revolutionized how I think about GUI code and turned GUI programming from something I hated to do to something I now enjoy.\n\n### Name\n\nThe name of the library and the project is \"egui\" and pronounced as \"e-gooey\". Please don't write it as \"EGUI\".\n\nThe library was originally called \"Emigui\", but was renamed to \"egui\" in 2020.\n\n## Credits\n\negui author and maintainer: Emil Ernerfeldt ([@emilk](https://github.com/emilk)).\n\nNotable contributions by:\n\n* [@n2](https://github.com/n2): [Mobile web input and IME support](https://github.com/emilk/egui/pull/253)\n* [@optozorax](https://github.com/optozorax): [Arbitrary widget data storage](https://github.com/emilk/egui/pull/257)\n* [@quadruple-output](https://github.com/quadruple-output): [Multitouch](https://github.com/emilk/egui/pull/306)\n* [@EmbersArc](https://github.com/EmbersArc): [Plots](https://github.com/emilk/egui/pulls?q=+is%3Apr+author%3AEmbersArc)\n* [@AsmPrgmC3](https://github.com/AsmPrgmC3): [Proper sRGBA blending for web](https://github.com/emilk/egui/pull/650)\n* [@AlexApps99](https://github.com/AlexApps99): [`egui_glow`](https://github.com/emilk/egui/pull/685)\n* [@mankinskin](https://github.com/mankinskin): [Context menus](https://github.com/emilk/egui/pull/543)\n* [@t18b219k](https://github.com/t18b219k): [Port glow painter to web](https://github.com/emilk/egui/pull/868)\n* [@danielkeller](https://github.com/danielkeller): [`Context` refactor](https://github.com/emilk/egui/pull/1050)\n* [@MaximOsipenko](https://github.com/MaximOsipenko): [`Context` lock refactor](https://github.com/emilk/egui/pull/2625)\n* [@mwcampbell](https://github.com/mwcampbell): [AccessKit](https://github.com/AccessKit/accesskit) [integration](https://github.com/emilk/egui/pull/2294)\n* [@hasenbanck](https://github.com/hasenbanck), [@s-nie](https://github.com/s-nie), [@Wumpf](https://github.com/Wumpf): [`egui-wgpu`](https://github.com/emilk/egui/tree/master/crates/egui-wgpu)\n* [@jprochazk](https://github.com/jprochazk): [egui image API](https://github.com/emilk/egui/issues/3291)\n* And [many more](https://github.com/emilk/egui/graphs/contributors?type=a).\n\negui is licensed under [MIT](LICENSE-MIT) OR [Apache-2.0](LICENSE-APACHE).\n\n* The flattening algorithm for the cubic bezier curve and quadratic bezier curve is from [lyon_geom](https://docs.rs/lyon_geom/latest/lyon_geom/)\n\nDefault fonts:\n\n* `emoji-icon-font.ttf`: [Copyright (c) 2014 John Slegers](https://github.com/jslegers/emoji-icon-font) , MIT License\n* `Hack-Regular.ttf`: <https://github.com/source-foundry/Hack>, [MIT Licence](https://github.com/source-foundry/Hack/blob/master/LICENSE.md)\n* `NotoEmoji-Regular.ttf`: [google.com/get/noto](https://google.com/get/noto), [SIL Open Font License](https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL)\n* `Ubuntu-Light.ttf` by [Dalton Maag](http://www.daltonmaag.com/): [Ubuntu font licence](https://ubuntu.com/legal/font-licence)\n\n---\n\n<div align=\"center\">\n<a href=\"https://www.rerun.io/\"><img src=\"media/rerun_io_logo.png\" width=\"440\"></a>\n\negui development is sponsored by [Rerun](https://www.rerun.io/), a startup building<br>\nan SDK for visualizing streams of multimodal data.\n</div>\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 4.7958984375,
          "content": "# Releases\n## Cadence\nWe don't have a regular cadence, but there is usually a new major release every two months or so.\n\nOften a major release is followed by one or two patch releases within a week or two.\n\n## Versioning\nAll crates under the [`crates/`](crates/) folder are published in lock-step, with the same version number. This means that we won't publish a new breaking change of a single crate without also publishing all other crates. This also means we sometimes do a new release of a crate even though there are no changes to that crate.\n\nThe only exception to this are patch releases, where we sometimes only patch a single crate.\n\nThe egui version in egui `master` is always the version of the last published crates. This is so that users can easily patch their egui crates to egui `master` if they want to.\n\n## Governance\nReleases are generally done by [emilk](https://github.com/emilk/), but the [rerun-io](https://github.com/rerun-io/) organization (where emilk is CTO) also has publish rights to all the crates.\n\n\n## Rust version policy\nOur Minimum Supported Rust Version (MSRV) is always _at least_ two minor release behind the latest Rust version. This means users of egui aren't forced to update to the very latest Rust version.\n\nWe don't update the MSRV in a patch release, unless we really, really need to.\n\n\n# Release process\n## Patch release\n* [ ] Make a branch off of the latest release\n* [ ] cherry-pick what you want to release\n* [ ] run `cargo semver-checks`\n\n## Optional polish before a major release\n* [ ] improve the demo a bit\n* [ ] see if you can make web demo WASM smaller\n* [ ] `./scripts/docs.sh`: read and improve documentation of new stuff\n* [ ] `cargo update`\n* [ ] `cargo outdated` (or manually look for outdated crates in each `Cargo.toml`)\n\n## Release testing\n* [ ] `cargo r -p egui_demo_app` and click around for while\n* [ ] `./scripts/build_demo_web.sh --release -g`\n  - check frame-rate and wasm size\n  - test on mobile\n  - test on chromium\n  - check the in-browser profiler\n* [ ] check the color test\n* [ ] update `eframe_template` and test\n* [ ] update `egui_plot` and test\n* [ ] update `egui_tiles` and test\n* [ ] test with Rerun\n* [ ] `./scripts/check.sh`\n* [ ] check that CI is green\n\n## Preparation\n* [ ] run `scripts/generate_example_screenshots.sh` if needed\n* [ ] write a short release note that fits in a tweet\n* [ ] record gif for `CHANGELOG.md` release note (and later twitter post)\n* [ ] update changelogs using `scripts/generate_changelog.py --version 0.x.0 --write`\n* [ ] bump version numbers in workspace `Cargo.toml`\n\n## Actual release\nI usually do this all on the `master` branch, but doing it in a release branch is also fine, as long as you remember to merge it into `master` later.\n\n* [ ] Run `typos`\n* [ ] `git commit -m 'Release 0.x.0 - summary'`\n* [ ] `cargo publish` (see below)\n* [ ] `git tag -a 0.x.0 -m 'Release 0.x.0 - summary'`\n* [ ] `git pull --tags ; git tag -d latest && git tag -a latest -m 'Latest release' && git push --tags origin latest --force ; git push --tags`\n* [ ] merge release PR or push to `master`\n* [ ] check that CI is green\n* [ ] do a GitHub release: https://github.com/emilk/egui/releases/new\n  * Follow the format of the last release\n* [ ] wait for documentation to build: https://docs.rs/releases/queue\n\n###  `cargo publish`:\n```\n(cd crates/emath                && cargo publish --quiet)  &&  echo \"‚úÖ emath\"\n(cd crates/ecolor               && cargo publish --quiet)  &&  echo \"‚úÖ ecolor\"\n(cd crates/epaint_default_fonts && cargo publish --quiet)  &&  echo \"‚úÖ epaint_default_fonts\"\n(cd crates/epaint               && cargo publish --quiet)  &&  echo \"‚úÖ epaint\"\n(cd crates/egui                 && cargo publish --quiet)  &&  echo \"‚úÖ egui\"\n(cd crates/egui-winit           && cargo publish --quiet)  &&  echo \"‚úÖ egui-winit\"\n(cd crates/egui-wgpu            && cargo publish --quiet)  &&  echo \"‚úÖ egui-wgpu\"\n(cd crates/egui_kittest         && cargo publish --quiet)  &&  echo \"‚úÖ egui_kittest\"\n(cd crates/egui_extras          && cargo publish --quiet)  &&  echo \"‚úÖ egui_extras\"\n(cd crates/egui_demo_lib        && cargo publish --quiet)  &&  echo \"‚úÖ egui_demo_lib\"\n(cd crates/egui_glow            && cargo publish --quiet)  &&  echo \"‚úÖ egui_glow\"\n(cd crates/eframe               && cargo publish --quiet)  &&  echo \"‚úÖ eframe\"\n```\n\n## Announcements\n* [ ] [twitter](https://x.com/ernerfeldt/status/1772665412225823105)\n* [ ] egui discord\n* [ ] [r/rust](https://www.reddit.com/r/rust/comments/1bocr5s/announcing_egui_027_with_improved_menus_and/)\n* [ ] [r/programming](https://www.reddit.com/r/programming/comments/1bocsf6/announcing_egui_027_an_easytouse_crossplatform/)\n* [ ] [This Week in Rust](https://github.com/rust-lang/this-week-in-rust/pull/5167)\n\n## After release\n* [ ] publish new `eframe_template`\n* [ ] publish new `egui_plot`\n* [ ] publish new `egui_table`\n* [ ] publish new `egui_tiles`\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 2.89453125,
          "content": "# There is also a scripts/clippy_wasm/clippy.toml which forbids some methods that are not available in wasm.\n\n# -----------------------------------------------------------------------------\n# Section identical to scripts/clippy_wasm/clippy.toml:\n\nmsrv = \"1.80\"\n\nallow-unwrap-in-tests = true\n\n# https://doc.rust-lang.org/nightly/clippy/lint_configuration.html#avoid-breaking-exported-api\n# We want suggestions, even if it changes public API.\navoid-breaking-exported-api = false\n\nmax-fn-params-bools = 2 # TODO(emilk): decrease this to 1\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#/large_include_file\nmax-include-file-size = 1000000\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#/type_complexity\ntype-complexity-threshold = 350\n\n# -----------------------------------------------------------------------------\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_macros\ndisallowed-macros = [\n    'dbg',\n    'std::unimplemented',\n\n    # TODO(emilk): consider forbidding these to encourage the use of proper log stream, and then explicitly allow legitimate uses\n    # 'std::eprint',\n    # 'std::eprintln',\n    # 'std::print',\n    # 'std::println',\n]\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_methods\ndisallowed-methods = [\n    \"std::env::temp_dir\", # Use the tempdir crate instead\n\n    # There are many things that aren't allowed on wasm,\n    # but we cannot disable them all here (because of e.g. https://github.com/rust-lang/rust-clippy/issues/10406)\n    # so we do that in `clipppy_wasm.toml` instead.\n\n    \"std::thread::spawn\", # Use `std::thread::Builder` and name the thread\n\n    \"sha1::Digest::new\", # SHA1 is cryptographically broken\n\n    \"std::panic::catch_unwind\", # We compile with `panic = \"abort\"`\n]\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_names\ndisallowed-names = []\n\n# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_types\ndisallowed-types = [\n    # Use the faster & simpler non-poisonable primitives in `parking_lot` instead\n    \"std::sync::Mutex\",\n    \"std::sync::RwLock\",\n    \"std::sync::Condvar\",\n    # \"std::sync::Once\",  # enabled for now as the `log_once` macro uses it internally\n\n    \"ring::digest::SHA1_FOR_LEGACY_USE_ONLY\", # SHA1 is cryptographically broken\n\n    \"winit::dpi::LogicalSize\",     # We do our own pixels<->point conversion, taking `egui_ctx.zoom_factor` into account\n    \"winit::dpi::LogicalPosition\", # We do our own pixels<->point conversion, taking `egui_ctx.zoom_factor` into account\n]\n\n# -----------------------------------------------------------------------------\n\n# Allow-list of words for markdown in docstrings https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown\ndoc-valid-idents = [\n    # You must also update the same list in `scripts/clippy_wasm/clippy.toml`!\n    \"AccessKit\",\n    \"WebGL\",\n    \"WebGL1\",\n    \"WebGL2\",\n    \"WebGPU\",\n    \"VirtualBox\",\n    \"..\",\n]\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 4.6328125,
          "content": "# Copied from https://github.com/rerun-io/rerun_template\n#\n# https://github.com/EmbarkStudios/cargo-deny\n#\n# cargo-deny checks our dependency tree for copy-left licenses,\n# duplicate dependencies, and rustsec advisories (https://rustsec.org/advisories).\n#\n# Install: `cargo install cargo-deny`\n# Check: `cargo deny check`.\n\n\n# Note: running just `cargo deny check` without a `--target` can result in\n# false positives due to https://github.com/EmbarkStudios/cargo-deny/issues/324\n[graph]\ntargets = [\n  { triple = \"aarch64-apple-darwin\" },\n  { triple = \"i686-pc-windows-gnu\" },\n  { triple = \"i686-pc-windows-msvc\" },\n  { triple = \"i686-unknown-linux-gnu\" },\n  { triple = \"wasm32-unknown-unknown\" },\n  { triple = \"x86_64-apple-darwin\" },\n  { triple = \"x86_64-pc-windows-gnu\" },\n  { triple = \"x86_64-pc-windows-msvc\" },\n  { triple = \"x86_64-unknown-linux-gnu\" },\n  { triple = \"x86_64-unknown-linux-musl\" },\n  { triple = \"x86_64-unknown-redox\" },\n]\nall-features = true\n\n\n[advisories]\nversion = 2\nignore = [\n  \"RUSTSEC-2024-0320\", # unmaintaines yaml-rust pulled in by syntect\n]\n\n[bans]\nmultiple-versions = \"deny\"\nwildcards = \"deny\"\ndeny = [\n  { name = \"cmake\", reason = \"It has hurt me too much\" },\n  { name = \"openssl-sys\", reason = \"Use rustls\" },\n  { name = \"openssl\", reason = \"Use rustls\" },\n]\n\nskip = [\n  { name = \"base64\" },         # Pretty small\n  { name = \"bit-set\" },        # wgpu's naga depends on 0.8, syntect's (used by egui_extras) fancy-regex depends on 0.5\n  { name = \"bit-vec\" },        # dependency of bit-set in turn, different between 0.6 and 0.5\n  { name = \"bitflags\" },       # old 1.0 version via glutin, png, spirv, ‚Ä¶\n  { name = \"cfg_aliases\" },    # old version via wgpu\n  { name = \"event-listener\" }, # TODO(emilk): rustls pulls in two versions of this üò≠\n  { name = \"futures-lite\" },   # old version via accesskit_unix and zbus\n  { name = \"glow\" },           # old version via wgpu\n  { name = \"memoffset\" },      # tiny dependency\n  { name = \"ndk-sys\" },        # old version via wgpu, winit uses newer version\n  { name = \"quick-xml\" },      # old version via wayland-scanner\n  { name = \"redox_syscall\" },  # old version via winit\n  { name = \"time\" },           # old version pulled in by unmaintianed crate 'chrono'\n  { name = \"windows-core\" },   # Chrono pulls in 0.51, accesskit uses 0.58.0\n  { name = \"windows-sys\" },    # glutin pulls in 0.52.0, accesskit pulls in 0.59.0, rfd pulls 0.48, webbrowser pulls 0.45.0 (via jni)\n]\nskip-tree = [\n  { name = \"criterion\" },     # dev-dependency\n  { name = \"foreign-types\" }, # small crate. Old version via core-graphics (winit).\n  { name = \"rfd\" },           # example dependency\n]\n\n\n[licenses]\nversion = 2\nprivate = { ignore = true }\nconfidence-threshold = 0.93 # We want really high confidence when inferring licenses from text\nallow = [\n  \"Apache-2.0 WITH LLVM-exception\", # https://spdx.org/licenses/LLVM-exception.html\n  \"Apache-2.0\",                     # https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)\n  \"BSD-2-Clause\",                   # https://tldrlegal.com/license/bsd-2-clause-license-(freebsd)\n  \"BSD-3-Clause\",                   # https://tldrlegal.com/license/bsd-3-clause-license-(revised)\n  \"BSL-1.0\",                        # https://tldrlegal.com/license/boost-software-license-1.0-explained\n  \"CC0-1.0\",                        # https://creativecommons.org/publicdomain/zero/1.0/\n  \"ISC\",                            # https://www.tldrlegal.com/license/isc-license\n  \"LicenseRef-UFL-1.0\",             # no official SPDX, see https://github.com/emilk/egui/issues/2321\n  \"MIT-0\",                          # https://choosealicense.com/licenses/mit-0/\n  \"MIT\",                            # https://tldrlegal.com/license/mit-license\n  \"MPL-2.0\",                        # https://www.mozilla.org/en-US/MPL/2.0/FAQ/ - see Q11. Used by webpki-roots on Linux.\n  \"OFL-1.1\",                        # https://spdx.org/licenses/OFL-1.1.html\n  \"OpenSSL\",                        # https://www.openssl.org/source/license.html - used on Linux\n  \"Unicode-3.0\",                    # https://www.unicode.org/license.txt\n  \"Unicode-DFS-2016\",               # https://spdx.org/licenses/Unicode-DFS-2016.html\n  \"Zlib\",                           # https://tldrlegal.com/license/zlib-libpng-license-(zlib)\n]\nexceptions = []\n\n[[licenses.clarify]]\nname = \"webpki\"\nexpression = \"ISC\"\nlicense-files = [{ path = \"LICENSE\", hash = 0x001c7e6c }]\n\n[[licenses.clarify]]\nname = \"ring\"\nexpression = \"MIT AND ISC AND OpenSSL\"\nlicense-files = [{ path = \"LICENSE\", hash = 0xbd0eed23 }]\n\n\n[sources]\nunknown-registry = \"deny\"\nunknown-git = \"deny\"\n\nallow-git = [\n  \"https://github.com/rerun-io/kittest\", # TODO(lucasmerlin): remove this once the kittest crate is published\"\n]\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.408203125,
          "content": "# If you see this, run \"rustup self update\" to get rustup 1.23 or newer.\n\n# NOTE: above comment is for older `rustup` (before TOML support was added),\n# which will treat the first line as the toolchain name, and therefore show it\n# to the user in the error, instead of \"error: invalid channel name '[toolchain]'\".\n\n[toolchain]\nchannel = \"1.80.0\"\ncomponents = [\"rustfmt\", \"clippy\"]\ntargets = [\"wasm32-unknown-unknown\"]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "web_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}