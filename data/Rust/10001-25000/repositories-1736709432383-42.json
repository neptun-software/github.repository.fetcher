{
  "metadata": {
    "timestamp": 1736709432383,
    "page": 42,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "biomejs/biome",
      "stars": 16366,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "benchmark/node_modules\nbenchmark/target"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3359375,
          "content": "root = true\n\n[*]\nend_of_line = lf\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nindent_style = tab\nindent_size = 2\n\n# YAML doesn't support hard tabs 🙃\n# Templates that will be weird with hard tabs in the website editor\n[{**.yml,**.md,**.rs,**.mdx,justfile,**.json}]\nindent_style = space\n\n[*.rs]\nindent_size = 4\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.36328125,
          "content": "# This file lists revisions of large-scale formatting/style changes so that\n# they can be excluded from git blame results.\n#\n# To set this file as the default ignore file for git blame, run:\n#   $ git config blame.ignoreRevsFile .git-blame-ignore-revs\n\n# chore: switch from tabs to spaces (https://github.com/rome/tools/pull/1941)\n409979ff132efdcb1e9fec3526d641966fd3f2bf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 3.33984375,
          "content": "# Generated files, sorted alphabetically.\n* text=auto eol=lf\n**/generated/* linguist-generated=true text=auto eol=lf\n/crates/biome_cli/src/execute/migrate/eslint_any_rule_to_biome.rs linguist-generated=true text=auto eol=lf\n/crates/biome_configuration/src/generated.rs linguist-generated=true text=auto eol=lf\n/crates/biome_configuration/src/analyzer/linter/rules.rs linguist-generated=true text=auto eol=lf\n/crates/biome_configuration/src/analyzer/assists/actions.rs linguist-generated=true text=auto eol=lf\n/crates/biome_configuration/src/analyzer/parse/rules.rs linguist-generated=true text=auto eol=lf\n# GraphQL\n/crates/biome_graphql_analyze/src/{lint,assists,syntax}.rs linguist-generated=true text=auto eol=lf\n/crates/biome_graphql_analyze/src/{lint,assists,syntax}/*.rs linguist-generated=true text=auto eol=lf\n/crates/biome_graphql_analyze/src/options.rs linguist-generated=true text=auto eol=lf\n/crates/biome_graphql_analyze/src/registry.rs linguist-generated=true text=auto eol=lf\n# CSS\n/crates/biome_css_analyze/src/{lint,assists,syntax}.rs linguist-generated=true text=auto eol=lf\n/crates/biome_css_analyze/src/{lint,assists,syntax}/*.rs linguist-generated=true text=auto eol=lf\n/crates/biome_css_analyze/src/options.rs linguist-generated=true text=auto eol=lf\n/crates/biome_css_analyze/src/registry.rs linguist-generated=true text=auto eol=lf\n# JSON\n/crates/biome_json_analyze/src/{lint,assists,syntax}.rs linguist-generated=true text=auto eol=lf\n/crates/biome_json_analyze/src/{lint,assists,syntax}/*.rs linguist-generated=true text=auto eol=lf\n/crates/biome_js_analyze/src/options.rs linguist-generated=true text=auto eol=lf\n/crates/biome_js_analyze/src/registry.rs linguist-generated=true text=auto eol=lf\n# JS\n/crates/biome_js_analyze/src/{lint,assists,syntax}.rs linguist-generated=true text=auto eol=lf\n/crates/biome_js_analyze/src/{lint,assists,syntax}/*.rs linguist-generated=true text=auto eol=lf\n/crates/biome_js_analyze/src/options.rs linguist-generated=true text=auto eol=lf\n/crates/biome_js_analyze/src/registry.rs linguist-generated=true text=auto eol=lf\n# Grit\n/crates/biome_grit_patterns/src/grit_target_language/*/constants.rs linguist-generated=true text=auto eol=lf\n\n# Other\n/crates/biome_unicode_table/src/tables.rs linguist-generated=true text=auto eol=lf\n/packages/@biomejs/backend-jsonrpc/src/workspace.ts linguist-generated=true text=auto eol=lf\n/packages/@biomejs/biome/configuration_schema.json linguist-generated=true text=auto eol=lf\npnpm-lock.yaml linguist-generated=true text=auto eol=lf\n\n# Files with the language manually specified, sorted alphabetically.\n/crates/biome_cli/tests/**/*.snap linguist-language=Markdown\n/crates/biome_js_analyze/tests/specs/**/*.snap linguist-language=Markdown\n/crates/biome_css_formatter/tests/**/*.css.prettier-snap linguist-language=CSS\n/crates/biome_css_formatter/tests/**/*.css.snap linguist-language=Markdown\n/crates/biome_graphql_formatter/tests/**/*.css.prettier-snap linguist-language=GraphQL\n/crates/biome_graphql_formatter/tests/**/*.css.snap linguist-language=Markdown\n/crates/biome_js_formatter/tests/**/*.ts.prettier-snap linguist-language=TypeScript\n/crates/biome_js_formatter/tests/**/*.js.prettier-snap linguist-language=JavaScript\n/crates/biome_js_formatter/tests/**/*.ts.snap linguist-language=Markdown\n/crates/biome_js_formatter/tests/**/*.js.snap linguist-language=Markdown\nDockerfile.benchmark linguist-language=Dockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7822265625,
          "content": ".DS_Store\nProfile-*.json\n# Editor configuration\n.vscode/*\n.idea\n.vs\n# Release artifacts\n**/target\n# Ignore test files that contributors could create locally\n**/test.*\n# Ignore third-party files\n**/node_modules\n**/dist\n**/build\n.pnpm-debug.log\n.vercel\n\n# https://github.com/nnethercote/dhat-rs output file\ndhat-heap.json\n\n/crates/biome_css_formatter/report.*\n/crates/biome_graphql_formatter/report.*\n/crates/biome_js_formatter/report.*\n/crates/biome_json_formatter/report.*\n/crates/biome_json_formatter/report_incompatible.*\n\n# don't ignore any files inside prettier test specs\n!/crates/biome_js_formatter/tests/specs/prettier/**/*\n!/crates/biome_json_formatter/tests/specs/prettier/**/*\n!/crates/biome_css_formatter/tests/specs/prettier/**/*\n!/crates/biome_graphql_formatter/tests/specs/prettier/**/*\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 251.021484375,
          "content": "# Biome changelog\n\nThis project follows [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\nDue to the nature of Biome as a toolchain,\nit can be unclear what changes are considered major, minor, or patch.\nRead our [guidelines to categorize a change](https://biomejs.dev/internals/versioning).\n\nNew entries must be placed in a section entitled `Unreleased`.\nRead\nour [guidelines for writing a good changelog entry](https://github.com/biomejs/biome/blob/main/CONTRIBUTING.md#changelog).\n\n## Unreleased\n\n- Fix [#4323](https://github.com/biomejs/biome/issues/4258), where `lint/a11y/useSemanticElement` accidentally showed recommendations for `role=\"searchbox\"` instead of `role=\"search\"`\n\n### Analyzer\n\n#### Bug fixes\n\n- Fix CSS parser case error, `@-moz-document url-prefix(https://example.com)` and `@-moz-document domain(example.com)` are now valid. Contributed by @eryue0220\n- Fix [#4258](https://github.com/biomejs/biome/issues/4258), where fixed css parse error with @-moz-document url-prefix(). Contributed by @eryue0220\n\n### CLI\n\n#### Bug fixes\n\n- Don't parse the files that don't end with the json extension as JSON files in the `.vscode` directory ([#4391](https://github.com/biomejs/biome/issues/4391)). Contributed by @Conaclos\n\n- `biome migrate eslint` now correctly resolves scoped package named `eslint-config` with a path.\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now correctly handles shared ESLint configuration that don't follow the ESLint naming convention ([#4528](https://github.com/biomejs/biome/issues/4528)).\n\n  ESLint recommends that a package that exports a shared configuration be prefixed with `eslint-config-` or simply named `eslint-config`.\n  This is only a recommendation.\n  Packages that export shared configurations can have arbitrary names.\n  Biome is now able to load any package.\n\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now correctly handles ESLint configuration with `null` values in file lists ([#4740](https://github.com/biomejs/biome/issues/4740)).\n  Contributed by @Conaclos\n\n- Fix [#4202](https://github.com/biomejs/biome/issues/4202), where the formatting of the test function was different from prettier. Contributed by @mdm317\n\n### Configuration\n\n### Editors\n\n### Formatter\n\n- Fix [#4413](https://github.com/biomejs/biome/issues/4413), where the GraphQL formatter adds a new line at the start of block comments on Windows. Contributed by @vohoanglong0107\n\n### Bug fixes\n\n- Fix [#4121](https://github.com/biomejs/biome/issues/4326), don't ident a CSS selector when has leading comments. Contributed by @fireairforce\n\n- Fix [#4334](https://github.com/biomejs/biome/issues/4334), don't insert trailing comma on type import statement. Contributed by @fireairforce\n\n- Fix [#3229](https://github.com/biomejs/biome/issues/3229), where Biome wasn't idempotent when block comments were placed inside compound selectors. Contributed by @ematipico\n\n- Fix [#4026](https://github.com/biomejs/biome/issues/4026), don't move comments in `grid-template`. Contributed by @fireairforce\n\n- Fix [#4533](https://github.com/biomejs/biome/issues/4533), don't throw error when pseudeo class after a webkit scrollbar pseudeo element.\n\n  The follow code will not report:\n\n  ```css\n  ::-webkit-scrollbar-thumb:hover {}\n  ```\n\n  Contributed by @fireairforce\n\n- Fix [#4575](https://github.com/biomejs/biome/issues/4575), don't wrap selector identation after css comments. Contributed by @fireairforce\n\n- Fix [#4553](https://github.com/biomejs/biome/issues/4553), `noUselessFragments` fix result has invalid syntax for JSX attribute, the follow code will fix:\n\n  ```jsx\n  <Suspense fallback={<><span>Loading...</span></>}>\n\t  {children}\n  </Suspense>;\n  ```\n\n  it will fix as:\n\n  ```jsx\n  <Suspense fallback={<span>Loading...</span>}>\n\t  {children}\n  </Suspense>;\n  ```\n\n- `noDuplicateProperties` now throws lint errors properly when we use `@supports` (fix [#4756](https://github.com/biomejs/biome/issues/4756)) Contributed by @mehm8128\n\n- Fix [#4719](https://github.com/biomejs/biome/issues/4719), `bracketSameLine` now performs as expected when a comment is placed before the last JSX attribute. Contributed by @bushuai\n\n### JavaScript APIs\n\n### Linter\n\n#### New features\n\n- Add [noUselessUndefined](https://biomejs.dev/linter/rules/no-useless-undefined/). Contributed by @unvalley\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) accepts a new option `match` ([#4105](https://github.com/biomejs/biome/issues/4105)).\n\n  You can now validate filenames with a regular expression.\n  For instance, you can allow filenames to start with `%`:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"style\": {\n          \"useFilenamingConvention\": {\n            \"level\": \"warn\",\n            \"options\": {\n                \"match\": \"%?(.+?)[.](.+)\",\n                \"filenameCases\": [\"camelCase\"]\n            }\n          }\n        }\n      }\n    }\n  }\n  ```\n\n  If the regular expression captures strings, the first capture is considered to be the name of the file, and the second one to be the extensions (dot-separated values).\n  The name of the file and the extensions are checked against `filenameCases`.\n  Given the previous configuration, the filename `%index.d.ts` is valid because the first capture `index` is in `camelCase` and the second capture `d.ts` include dot-separated values in `lowercase`.\n  On the other hand, `%Index.d.ts` is not valid because the first capture `Index` is in `PascalCase`.\n\n  Note that specifying `match` disallows any exceptions that are handled by the rule by default.\n  For example, the previous configuration doesn't allow filenames to be prefixed with underscores,\n  a period or a plus sign.\n  You need to include them in the regular expression if you still want to allow these exceptions.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) and [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention) `match` options now accept case-insensitive and case-sensitive groups.\n\n  By default, the regular expression in `match` is case-sensitive.\n  You can now make it case-insensitive by using a case-insensitive group `(?i:)`.\n  For example, the regular expression `(?i:a)` matches `a` and `A`.\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now provides the `checkTypes` option ([#3998](https://github.com/biomejs/biome/issues/3998)).\n\n  `noUndeclaredVariables` is inspired by the [no-undef ESLint rule](https://eslint.org/docs/latest/rules/no-undef). It reports all references that are not bound to any declarations within a module.\n  Node.js, JavaScript and TypeScript globals are ignored.\n  Biome provides the `javascript.globals` option to list additional globals that should be ignored by the rule.\n\n  In TypeScript projects, developers often use global declaration files to declare global types.\n  Biome is currently unable to detect these global types.\n  This creates many false positives for `noUndeclaredVariables`.\n\n  TypeScript is better suited to perform this kind of check.\n  As proof of this, TypeScript ESLint doesn't provide any rule that extends the `no-undef` ESLint rule.\n\n  This is why we introduce today a new option `checkTypes` which, when it is set to `false`, ignores undeclared type references.\n  Given the following configuration...\n\n  ```json\n  {\n      \"linter\": {\n          \"rules\": {\n              \"correctness\": {\n                  \"noUndeclaredVariables\": {\n                      \"level\": \"error\",\n                      \"options\": { \"checkTypes\": false }\n                  }\n              }\n          }\n      }\n  }\n  ```\n\n  ... `UndeclaredType` is not reported by the rule.\n\n  ```ts\n  export default function(): UndeclaredType {}\n  ```\n\n  We plan to turn off the option by default in Biome 2.0\n  Also, this will bring the Biome rule closer to the [no-undef ESLint rule](https://eslint.org/docs/latest/rules/no-undef).\n\n  Contributed by @Conaclos\n\n- Add [noGlobalDirnameFilename](https://biomejs.dev/linter/rules/no-global-dirname-filename/). Contributed by @unvalley\n\n- [noForEach](https://biomejs.dev/linter/rules/no-for-each/) now provides a new option `validIdentifiers` ([#3351](https://github.com/biomejs/biome/issues/3351)) to specify which variable names are allowed to call `forEach`.\n\n  Identifiers containing dots (e.g., \"lib._\") or empty strings are not allowed. Invalid configurations will produce a diagnostic warning.\n\n  ```json\n  {\n\t\t\"linter\": {\n\t\t\t\"rules\": {\n\t\t\t\t\"complexity\": {\n\t\t\t\t\t\"noForEach\": {\n\t\t\t\t\t\t\"level\": \"error\",\n\t\t\t\t\t\t\"options\": {\n\t\t\t\t\t\t\t\"allowedIdentifiers\": [\"Effect\", \"_\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n  ```\n\n  Contributed by @lucasweng\n\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) now supports wildcards in the `function` option.\n\n  ```json\n  {\n      \"linter\": {\n          \"rules\": {\n              \"nursery\": {\n                  \"useSortedClasses\": {\n                      \"level\": \"warn\",\n                      \"options\": {\n                          \"functions\": [\"tw.*\"]\n                      }\n                  }\n              }\n          }\n      }\n  }\n  ```\n\n  This allows the rule to handle class sorting for tagged template literals like `` tw.div`...` ``, used in libraries such as [twin.macro](https://github.com/ben-rogerson/twin.macro) and [react-twc](https://github.com/gregberge/twc).\n\n#### Enhancements\n\n- `useExportType` and `useImportType` now ignore TypeScript declaration files ([#4416](https://github.com/biomejs/biome/pull/4416)). Contributed by @Conaclos\n- [useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/) now provides a code fix.\n\n  ```diff\n  - const xs = new Array();\n  + const xs = [];\n  ```\n\n  The code fix is currently marked as unsafe.\n  We plan to make it safe in a future release of Biome.\n\n  Contributed by @Conaclos\n\n- `noUnusedImports` now reports empty named imports and suggests its removal ([#3574](https://github.com/biomejs/biome/issues/3574)).\n\n  The rule now suggests the removal of empty named imports such as:\n\n  ```diff\n  - import {} from \"mod\";\n  ```\n\n  Contributed by @Conaclos\n\n- `noUnusedImports` now keeps comments separated from the import with a blank line ([#3401](https://github.com/biomejs/biome/issues/3401)).\n\n  Here is an example:\n\n  ```diff\n    // Orphan comment\n\n  - // Header comment\n  - import {} from \"mod\";\n  ```\n\n  Contributed by @Conaclos\n\n- `useValidTypeof` now accepts comparisons with variables.\n\n  Previously, the rule required to compare a `typeof` expression against another `typeof` expression or a valid string literal.\n  We now accept more cases, notably comparison against a variable:\n\n  ```js\n  if (typeof foo === bar) {\n    // ...\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property/) now accepts more known CSS properties ([#4549](https://github.com/biomejs/biome/issues/4549)).\n\n  ```diff\n  - ['anchor-default', 'anchor-scroll', 'inset-area', 'position-animation', 'position-fallback', 'position-fallback-bounds', 'position-try-options']\n  + ['anchor-scope', 'interpolate-size', 'line-fit-edge', 'masonry', 'masonry-auto-tracks', 'masonry-direction', 'masonry-fill', 'masonry-flow', 'masonry-slack', 'masonry-template-areas', 'masonry-template-tracks', 'position-anchor', 'position-area', 'position-try-fallbacks', 'position-visibility', 'scroll-start-target', 'text-box', 'view-transition-class', 'view-transition-group']\n  ```\n\n  This change replaces deprecated properties, improving CSS validation.\n\n  Contributed by @lucasweng\n\n#### Bug fixes\n\n- [noControlCharactersInRegex](https://biomejs.dev/linter/rules/no-control-characters-in-regex) no longer panics when it encounters an unterminated unicode escape sequence ([#4565](https://github.com/biomejs/biome/issues/4565)). Contributed by @Conaclos\n\n- [useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/) now reports all expressions using the `Array` constructors.\n\n  Previously, the rule reported only use of the `Array` constructor in expressions statements.\n\n  ```js\n  // This was reported\n  new Array();\n  // This was not reported\n  const xs = new Array();\n  ```\n\n  Contributed by @Conaclos\n\n- [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/) now preserves directives ([#4530](https://github.com/biomejs/biome/issues/4530)).\n\n  Previously the rule removed the directives when a function expression was turned into an arrow function.\n  The rule now correctly keeps the directives.\n\n  ```diff\n  - const withDirective = function () {\n  + const withDirective = () => {\n\t    \"use server\";\n\t    return 0;\n    }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) is now able to bind read of value to a type-only import in ambient contexts ([#4526](https://github.com/biomejs/biome/issues/4526)).\n\n  In the following code, `A` is now correctly bound to the type-only import.\n  Previously, `A` was reported as an undeclared variable.\n\n  ```ts\n  import type { A } from \"mod\";\n\n  declare class B extends A {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer reports top-level variables in a global declaration file as unused. Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) no longer suggests renaming top-level variables in a global declaration file. Contributed by @Conaclos\n\n- [noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class/) no longer panics on malformed escape sequences that end with a multi-byte character ([#4587](https://github.com/biomejs/biome/issues/4587)). Contributed by @Conaclos\n\n- [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports/) no longer reports used values imported as types in an external module ([#3895])(https://github.com/biomejs/biome/issues/3895). Contributed by @Conaclos\n\n- Fixed a panic related to bogus import statements in `useExhaustiveDependencies` ([#4568](https://github.com/biomejs/biome/issues/4568)) Contributed by @dyc3\n\n- Fixed `useSortedClasses` false positive and Supplementary test case ([#3394](https://github.com/biomejs/biome/issues/3394)) Contributed by @hangaoke1\n- [noLabelWithoutControl](https://biomejs.dev/linter/rules/no-label-without-control/) detects button tags as input ([#4511])(https://github.com/biomejs/biome/issues/4511). Contributed by @unvalley\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) now handles `JsxAttributeInitializerClause`, ensuring that fragments inside expressions like `<A b=<></> />` are preserved. ([#4208](https://github.com/biomejs/biome/issues/4208)). Contributed by @MaxtuneLee\n\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) now suggests code fixes that match the JSX quote style of the formatter ([#4855](https://github.com/biomejs/biome/issues/4855)). Contributed by @lucasweng\n\n### Parser\n\n#### Bug fixes\n\n- Fix [#4317](https://github.com/biomejs/biome/issues/4317), setter parameter can contain a trailing comma, the following example will now parsed correctly:\n\n  ```js\n  export class DummyClass {\n    set input(\n      value: string,\n    ) {}\n  }\n  ```\n\n  Contributed by @fireairforce\n\n- Fix [#3836](https://github.com/biomejs/biome/issues/3836), css parser allow multiple semicolons after a declaration, the following example will now parsed correctly:\n\n  ```css\n  .foo {\n    color: red;;\n  }\n  ```\n\n  Contributed by @fireairforce\n\n- Fix [#342](https://github.com/biomejs/biome/issues/342), js parser handle unterminated `JSX_STRING_LITERAL` properly\n\n  ```jsx\n  function Comp() {\n    return (\n        <a rel=\"\n  ```\n- Fix [#342](https://github.com/biomejs/biome/issues/342), js parser is no longer progressing for an invalid object\n  member name:\n\n  ```js\n  ({\n    params: { [paramName: string]: number } = {}\n  })\n  ```\n\n  Contributed by @denbezrukov\n\n- Fix [#342](https://github.com/biomejs/biome/issues/342), \"expected a declaration as guaranteed by is_at_ts_declare_statement\" error for declare interface:\n\n  ```ts\n  declare interface\n  ```\n\n  Contributed by @denbezrukov\n\n- Don't panic when a multi-byte character is found in a unicode escape sequence ([#4564](https://github.com/biomejs/biome/issues/4564)). Contributed by @Conaclos\n\n- Don't panic when a declare statement is followed by an unexpected token.([#4562](https://github.com/biomejs/biome/issues/4562)). Contributed by @fireairforce\n## v1.9.4 (2024-10-17)\n\n### Analyzer\n\n#### Bug fixes\n\n- Implement [GraphQL suppression action](https://github.com/biomejs/biome/pull/4312). Contributed by @vohoanglong0107\n\n- Improved the message for unused suppression comments. Contributed by @dyc3\n\n- Fix [#4228](https://github.com/biomejs/biome/issues/4228), where the rule `a11y/noInteractiveElementToNoninteractiveRole` incorrectly reports a `role` for non-interactive elements. Contributed by @eryue0220\n\n- `noSuspiciousSemicolonInJsx` now catches suspicious semicolons in React fragments. Contributed by @vasucp1207\n\n- The syntax rule `noTypeOnlyImportAttributes` now ignores `.cts` files ([#4361](https://github.com/biomejs/biome/issues/4361)).\n\n  Since TypeScript 5.3, type-only imports can be associated to an import attribute in CommonJS-enabled files.\n  See the [TypeScript docs](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-3.html#stable-support-resolution-mode-in-import-types).\n\n  The following code is no longer reported as a syntax error:\n\n  ```cts\n  import type { TypeFromRequire } from \"pkg\" with {\n      \"resolution-mode\": \"require\"\n  };\n  ```\n\n  Note that this is only allowed in files ending with the `cts` extension.\n\n  Contributed by @Conaclos\n\n### CLI\n\n#### Enhancements\n\n- The `--summary` reporter now reports parsing diagnostics too. Contributed by @ematipico\n\n- Improved performance of GritQL queries by roughly 25-30%. Contributed by @arendjr\n\n### Configuration\n\n#### Bug fixes\n\n- Fix an issue where the JSON schema marked lint rules options as mandatory. Contributed by @ematipico\n\n### Editors\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#4121](https://github.com/biomejs/biome/issues/4121). Respect line width when printing multiline strings. Contributed by @ah-yu\n- Fix [#4384](https://github.com/biomejs/biome/issues/4384). Keep `@charset` dobule quote under any situation for css syntax rule. Contributed by @fireairforce\n\n### JavaScript APIs\n\n### Linter\n\n#### New features\n\n- Add [useGuardForIn](https://biomejs.dev/linter/rules/use-guard-for-in/). Contributed by @fireairforce\n- Add [noDocumentCookie](https://biomejs.dev/linter/rules/no-document-cookie/). Contributed by @tunamaguro\n- Add [noDocumentImportInPage](https://biomejs.dev/linter/rules/no-document-import-in-page/). Contributed by @kaioduarte\n- Add [noDuplicateProperties](https://biomejs.dev/linter/rules/no-duplicate-properties/). Contributed by @togami2864\n- Add [noHeadElement](https://biomejs.dev/linter/rules/no-head-element/). Contributed by @kaioduarte\n- Add [noHeadImportInDocument](https://biomejs.dev/linter/rules/no-head-import-in-document/). Contributed by @kaioduarte\n- Add [noImgElement](https://biomejs.dev/linter/rules/no-img-element/). Contributed by @kaioduarte\n- Add [noUnknownTypeSelector](https://biomejs.dev/linter/rules/no-unknown-type-selector/). Contributed by @Kazuhiro-Mimaki\n- Add [useAtIndex](https://biomejs.dev/linter/rules/use-at-index/). Contributed by @GunseiKPaseri\n- Add [noUselessStringRaw](https://biomejs.dev/linter/rules/no-useless-string-raw/). Contributed by @fireairforce\n- Add [nursery/useCollapsedIf](https://biomejs.dev/linter/rules/use-collapsed-if/). Contributed by @siketyan\n- Add [useGoogleFontDisplay](https://biomejs.dev/linter/rules/use-google-font-display/). Contributed by @kaioduarte\n- Add [useExportsLast](https://biomejs.dev/linter/rules/use-exports-last/). Contributed by @tommymorgan\n\n#### Bug Fixes\n\n- Biome no longer crashes when it encounters a string that contain a multibyte character ([#4181](https://github.com/biomejs/biome/issues/4181)).\n\n  This fixes a regression introduced in Biome 1.9.3\n  The regression affected the following linter rules:\n\n  - `nursery/useSortedClasses`\n  - `nursery/useTrimStartEnd`\n  - `style/useTemplate`\n  - `suspicious/noMisleadingCharacterClass`\n\n  Contributed by @Conaclos\n\n- Fix [#4190](https://github.com/biomejs/biome/issues/4190), where the rule `noMissingVarFunction` wrongly reported a variable as missing when used inside a `var()`  function that was a newline. Contributed by @ematipico\n\n- Fix [#4041](https://github.com/biomejs/biome/issues/4041). Now the rule `useSortedClasses` won't be triggered if `className` is composed only by inlined variables. Contributed by @ematipico\n\n- [useImportType](https://biomejs.dev/linter/rules/use-import-type/) and [useExportType](https://biomejs.dev/linter/rules/use-export-type/) now report useless inline type qualifiers ([#4178](https://github.com/biomejs/biome/issues/4178)).\n\n  The following fix is now proposed:\n\n  ```diff\n  - import type { type A, B } from \"\";\n  + import type { A, B } from \"\";\n\n  - export type { type C, D };\n  + export type { C, D };\n  ```\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) now reports ungrouped `export from`.\n\n  The following fix is now proposed:\n\n  ```diff\n  - export { type A, type B } from \"\";\n  + export type { A, B } from \"\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noVoidTypeReturn](https://biomejs.dev/linter/rules/no-void-type-return/) now accepts `void` expressions in return position ([#4173](https://github.com/biomejs/biome/issues/4173)).\n\n  The following code is now accepted:\n\n  ```ts\n  function f(): void {\n    return void 0;\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) now correctly handles fragments containing HTML escapes (e.g. `&nbsp;`) inside expression escapes `{ ... }` ([#4059](https://github.com/biomejs/biome/issues/4059)).\n\n  The following code is no longer reported:\n\n  ```jsx\n  function Component() {\n    return (\n      <div key={index}>{line || <>&nbsp;</>}</div>\n    )\n  }\n  ```\n\n  Contributed by @fireairforce\n\n- [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) and [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer reports a parameter as unused when another parameter has a constructor type with the same parameter name ([#4227](https://github.com/biomejs/biome/issues/4227)).\n\n  In the following code, the `name` parameter is no longer reported as unused.\n\n  ```ts\n  export class Foo {\n    bar(name: string, _class: new (name: string) => any) {\n      return name\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now accepts dependency names with dots. Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now correctly handles renamed exports ([#4254](https://github.com/biomejs/biome/issues/4254)).\n\n  The rule allows the filename to be named as one of the exports of the module.\n  For instance, the file containing the following export can be named `Button`.\n\n  ```js\n  class Button {}\n  export { Button }\n  ```\n\n  The rule now correctly handles the renaming of an export.\n  For example, the file containing the following export can only be named `Button`.\n  Previously the rule expected the file to be named `A`.\n\n  ```js\n  class A {}\n  export { A as Button }\n  ```\n\n  Contributed by @Conaclos\n\n- [useConsistentMemberAccessibility](https://biomejs.dev/linter/rules/use-consistent-member-accessibility/) now ignore private class members such as `#property` ([#4276](https://github.com/biomejs/biome/issues/4276)). Contributed by @Conaclos\n\n- [noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function/) correctly handles `calc-size` function ([#4212](https://github.com/biomejs/biome/issues/4212)).\n\n   The following code `calc-size` is no longer reported as unknown:\n\n   ```css\n   .a { height: calc-size(0px); }\n   ```\n\n   Contributed by @fireairforce\n\n - [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now allows configuring conventions for readonly index signatures.\n\n  Contributed by @sepruko\n\n- [noDuplicateCustomProperties](https://biomejs.dev/linter/rules/no-duplicate-custom-properties/) now correctly handles custom properties and ignores non-custom properties.\n  Previously, the rule incorrectly reported duplicates for all properties, including non-custom ones. Contributed by @togami2864\n\n### Parser\n\n#### Bug Fixes\n\n- The CSS parser now accepts more emoji in identifiers ([#3627](https://github.com/biomejs/biome/issues/3627#issuecomment-2392388022)).\n\n  Browsers accept more emoji than the standard allows.\n  Biome now accepts these additional emojis.\n\n  The following code is now correctly parsed:\n\n  ```css\n  p {\n    --✨-color: red;\n    color: var(--✨-color);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Add support for parsing typescript's `resolution-mode` in Import Types([#2115](https://github.com/biomejs/biome/issues/2115))\n\n  ```ts\n  export type Fs = typeof import('fs', { with: { 'resolution-mode': 'import' } });\n  export type TypeFromRequire =\n    import(\"pkg\", { with: { \"resolution-mode\": \"require\" } }).TypeFromRequire;\n  export type TypeFromImport =\n    import(\"pkg\", { with: { \"resolution-mode\": \"import\" } }).TypeFromImport;\n  ```\n\n  Contributed by @fireairforce\n\n## v1.9.3 (2024-10-01)\n\n### CLI\n\n#### New features\n\n- GritQL queries that match functions or methods will now match async functions or methods as well.\n\n  If this is not what you want, you can capture the `async` keyword (or its absence) in a metavariable and assert its emptiness:\n\n  ```grit\n  $async function foo() {} where $async <: .\n  ```\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#4077](https://github.com/biomejs/biome/issues/4077): Grit queries no longer need to match the statement's trailing semicolon. Contributed by @arendjr\n\n- Fix [#4102](https://github.com/biomejs/biome/issues/4102). Now the CLI command `lint` doesn't exit with an error code when using `--write`/`--fix`. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n- Fix [#4125](https://github.com/biomejs/biome/issues/4125), where `noLabelWithoutControl` options where incorrectly marked as mandatory. Contributed by @ematipico\n\n### Editors\n\n- Fix a case where CSS files weren't correctly linted using the default configuration. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#4116](https://github.com/biomejs/biome/issues/4116). Unify LSP code action kinds. Contributed by @vitallium\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3924](https://github.com/biomejs/biome/issues/3924) where GraphQL formatter panics in block comments with empty line. Contributed by @vohoanglong0107\n- Fix [#3364](https://github.com/biomejs/biome/issues/3364) where the `useSelfClosingElements` rule forces the `script` tag to be self-closing. Previously, this rule applies to all elements and cannot be disabled for native HTML elements.\n\n  Now, this rule accepts a `ignoreHtmlElements` option, which when set to `true`, ignores native HTML elements and allows them to be non-self-closing.\n\n  Contributed by @abidjappie\n\n- Fix a case where raw values inside `url()` functions weren't properly trimmed.\n  ```diff\n  .value {\n  -  background: url(\n  -   whitespace-around-string\n  -  );\n  + background: url(whitespace-around-string);\n  }\n  ```\n  Contributed by @ematipico\n\n- Fixed [#4076](https://github.com/biomejs/biome/issues/4076), where a media query wasn't correctly formatted:\n  ```diff\n  .class {\n  -  @media (1024px <= width <=1280px) {\n  +  @media (1024px <= width <= 1280px) {\n     color: red;\n     }\n  }\n  ```\n  Contributed by @blaze-d83\n\n### JavaScript API\n\n#### Bug fixes\n\n- Fix [#3881](https://github.com/biomejs/biome/issues/3881), by updating the APIs to use the latest WASM changes. Contributed by @ematipico\n\n### Linter\n\n#### New features\n\n- Add [noDescendingSpecificity](https://biomejs.dev/linter/rules/no-descending-specificity/). Contributed by @tunamaguro\n\n- Add [noNestedTernary](https://biomejs.dev/linter/rules/no-nested-ternary/). Contributed by @kaykdm\n\n- Add [noTemplateCurlyInString](https://biomejs.dev/linter/rules/no-template-curly-in-string/). Contributed by @fireairforce\n\n- Add [noOctalEscape](https://biomejs.dev/linter/rules/no-octal-escape/). Contributed by @fireairforce\n\n#### Enhancements\n\n- Add an option `reportUnnecessaryDependencies` to [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/).\n\n  Defaults to true. When set to false, errors will be suppressed for React hooks that declare dependencies but do not use them.\n\n  Contributed by @simon-paris\n\n- Add an option `reportMissingDependenciesArray` to [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/). Contributed by @simon-paris\n\n#### Bug fixes\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) no longer panics on regexes with incomplete escape sequences. Contributed by @Conaclos\n\n- [noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class/) no longer reports issues outside of character classes.\n\n  The following code is no longer reported:\n\n  ```js\n  /[a-z]👍/;\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) no longer reports Node.js builtin modules as undeclared dependencies.\n\n  The rule no longer reports the following code:\n\n  ```js\n  import * as fs from \"fs\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer panics when suggesting the renaming of a variable at the start of a file ([#4114](https://github.com/biomejs/biome/issues/4114)). Contributed by @Conaclos\n\n- [noUselessEscapeInRegex](https://biomejs.dev/linter/rules/no-useless-escape-in-regex/) no longer panics on regexes that start with an empty character class. Contributed by @Conaclos\n\n- [noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/) no longer panics when it encounters malformed code. Contributed by @Conaclos\n\n- [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) no longer reports unused parameters inside an object pattern with a rest parameter.\n\n  In the following code, the rule no longer reports `a` as unused.\n\n  ```js\n  function f({ a, ...rest }) {\n    return rest;\n  }\n  ```\n\n  This matches the behavior of [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/).\n\n  Contributed by @Conaclos\n\n- [useButtonType](https://biomejs.dev/linter/rules/use-button-type/) no longer reports dynamically created button with a valid type ([#4072](https://github.com/biomejs/biome/issues/4072)).\n\n  The following code is no longer reported:\n\n  ```js\n  React.createElement(\"button\", { type: \"button\" }, \"foo\")\n  ```\n\n  Contributed by @Conaclos\n\n- [useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/) now ignores elements with the `img` role ([#3994](https://github.com/biomejs/biome/issues/3994)).\n\n  [MDN recommends](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role) using `role=\"img\"` for grouping images or creating an image from other elements.\n  The following code is no longer reported:\n\n  ```jsx\n  <div role=\"img\" aria-label=\"That cat is so cute\">\n    <p>&#x1F408; &#x1F602;</p>\n  </div>\n  ```\n\n  Contributed by @Conaclos\n\n- [useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/) now ignores `alert` and `alertdialog` roles ([#3858](https://github.com/biomejs/biome/issues/3858)). Contributed by @Conaclos\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) don't create invaild JSX code when Fragments children contains JSX Expression and in a LogicalExpression. Contributed by @fireairforce\n\n### Parser\n\n#### Bug fixes\n\n- Forbid undefined as type name for typescript parser. Contributed by @fireairforce\n\n## v1.9.2 (2024-09-19)\n\n### CLI\n\n#### New features\n\n- Added support for custom GritQL definitions, including:\n  - Pattern and predicate definitions: https://docs.grit.io/guides/patterns\n  - Function definitions: https://docs.grit.io/language/functions#function-definitions\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#3917](https://github.com/biomejs/biome/issues/3917), where the fixed files were incorrectly computed. Contributed by @ematipico\n- Fixed an issue that caused GritQL `contains` queries to report false positives when the matched\n  node appeared inside a sibling node. Contributed by @arendjr\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#3923](https://github.com/biomejs/biome/issues/3923). Now the `.editorconfig` is correctly parsed by the LSP, and the options are correctly applied to files when formatting is triggered.\n  Plus, the Biome LSP now watches for any change to the `.editorconfig`, and updates the formatting settings.\n- Reduced the number of log files generated by the LSP server. Now the maximum number of logs saved on disk is **seven**. Contributed by @ematipico\n- Fix the code actions capabilities available in the LSP Biome server. Before, the LSP was using the default capabilities, which resulted in pulling code actions even when they were disabled by the editor.\n\n  This means that the code actions are pulled by the client **only** when the editor enables `quickfix.biome`, `source.organizeImports.biome` and `source.fixAll.biome`.\n\n  Now, if you enable `organizeImports.enabled: true` in the `biome.json`, and then you configure your editor with the following code action `source.organizeImports.biome: false`, the editor **won't** sort the imports.\n\n  Contributed by @ematipico\n\n### Linter\n\n#### New features\n\n- Add [nursery/noMissingVarFunction](https://biomejs.dev/linter/rules/no-missing-var-function). Contributed by @michellocana\n- Add [nursery/useComponentExportOnlyModules](https://biomejs.dev/linter/rules/use-component-export-only-modules). Use this rule in React projects to enforce a code styling that fits React Refresh. Contributed by @GunseiKPaseri\n\n#### Bug fixes\n\n- [noLabelWithoutControl](https://biomejs.dev/linter/rules/no-label-without-control/) now accept JSX expression as label value ([#3875](https://github.com/biomejs/biome/issues/3875)). Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) no longer suggests names with a disallowed case ([#3952](https://github.com/biomejs/biome/issues/3952)). Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now recognizes file names starting with ASCII digits as lowercase ([#3952](https://github.com/biomejs/biome/issues/3952)).\n\n  Thus, `2024-09-17-filename`, `2024_09_17_filename` and `20240917FileName` are in `kebab-case`, `snake_case`, and `camelCase` respectively.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now applies the configured formats to the file extensions ([#3650](https://github.com/biomejs/biome/discussions/3650)). Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- [useStrictMode](https://biomejs.dev/linter/rules/use-strict-mode/) now reports Script files with some directives, but without the `use strict` directive. Contributed by @Conaclos\n\n- The CSS parser now accepts the characters U+FFDCF and U+FFFD in identifiers. Contributed by @Conaclos\n\n## v1.9.1 (2024-09-15)\n\n### CLI\n\n#### Bug fixes\n\n- `useEditorConfig` now loads the editorconfig when running `biome ci` [#3864](https://github.com/biomejs/biome/issues/3864). Contributed by @dyc3\n\n### Editors\n\n#### Bug fixes\n\n- Revert [#3731](https://github.com/biomejs/biome/pull/3731) to fix broken quick fixes and code actions. Contributed by @nhedger\n\n### Linter\n\n#### New Features\n\n- Add [nursery/noProcessEnv](https://biomejs.dev/linter/rules/no-process-env/). Contributed by @unvalley\n\n#### Bug fixes\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now ignores `@/` imports and recognizes type imports from Definitely Typed and `bun` imports. Contributed by @Conaclos\n\n## v1.9.0 (2024-09-12)\n\n### Analyzer\n\n- Implement the [semantic model for CSS](https://github.com/biomejs/biome/pull/3546). Contributed by @togami2864\n\n### CLI\n\n#### New features\n\n- Add `--graphql-linter-enabled` option, to control whether the linter should be enabled or not for GraphQL files. Contributed by @ematipico\n\n- New EXPERIMENTAL `search` command. The search command allows you to search a Biome project using [GritQL syntax](https://biomejs.dev/reference/gritql).\n\n  GritQL is a powerful language that lets you do _structural_ searches on your codebase. This means that trivia such as whitespace or even the type of strings quotes used will be ignored in your search query. It also has many features for querying the structure of your code, making it much more elegant for searching code than regular expressions.\n\n  While we believe this command may already be useful to users in some situations (especially when integrated in the IDE extensions!), we also had an ulterior motive for adding this command: We intend to utilize GritQL for our plugin efforts, and by allowing our users to try it out in a first iteration, we hope to gain insight in the type of queries you want to do, as well as the bugs we need to focus on.\n\n  For now, the `search` command is explicitly marked as EXPERIMENTAL, since many bugs remain. Keep this in mind when you try it out, and please [let us know](https://github.com/biomejs/biome/issues) your issues!\n\n  Note: GritQL escapes code snippets using backticks, but most shells interpret backticks as command invocations. To avoid this, it's best to put _single quotes_ around your Grit queries.\n\n  ```shell\n  biome search '`console.log($message)`' # find all `console.log` invocations\n  ```\n\n  Contributed by @arendjr and @BackupMiles\n\n- The option `--max-diagnostics` now accept a `none` value, which lifts the limit of diagnostics shown. Contributed by @ematipico\n  - Add a new reporter `--reporter=gitlab`, that emits diagnostics for using the [GitLab Code Quality report](https://docs.gitlab.com/ee/ci/testing/code_quality.html#implement-a-custom-tool).\n\n    ```json\n    [\n      {\n        \"description\": \"Use === instead of ==. == is only allowed when comparing against `null`\",\n        \"check_name\": \"lint/suspicious/noDoubleEquals\",\n        \"fingerprint\": \"6143155163249580709\",\n        \"severity\": \"critical\",\n        \"location\": {\n          \"path\": \"main.ts\",\n          \"lines\": {\n            \"begin\": 4\n          }\n        }\n      }\n    ]\n    ```\n\n    Contributed by @NiclasvanEyk\n\n- Add new options to the `lsp-proxy` and `start` commands:\n  - `--log-path`: a directory where to store the daemon logs. The commands also accepts the environment variable `BIOME_LOG_PATH`.\n  - `--log-prefix-name`: a prefix that's added to the file name of the logs. It defaults to `server.log`. The commands also accepts the environment variable `BIOME_LOG_PREFIX_NAME`.\n\n  @Contributed by @ematipico\n\n#### Enhancements\n\n- When a `--reporter` is provided, and it's different from the default one, the value provided by via `--max-diagnostics` is ignored and **the limit is lifted**. Contributed by @ematipico\n\n- `biome init` now generates a new config file with more options set.\n  This change intends to improve discoverability of the options and to set the more commonly used options to their default values.\n  Contributed by @Conaclos\n\n- The `--verbose` flag now reports the list of files that were evaluated, and the list of files that were fixed.\n  The **evaluated** files are the those files that can be handled by Biome, files that are ignored, don't have an extension or have an extension that Biome can't evaluate are excluded by this list.\n  The **fixed** files are those files that were handled by Biome and *changed*. Files that stays the same after the process are excluded from this list.\n\n  ```shell\n   VERBOSE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    ℹ Files processed:\n\n    - biome/biome.json\n    - biome/packages/@biomejs/cli-win32-arm64/package.json\n    - biome/packages/tailwindcss-config-analyzer/package.json\n\n   VERBOSE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    ℹ Files fixed:\n\n    - biome/biome/packages/tailwindcss-config-analyzer/src/generate-tailwind-preset.ts\n  ```\n\n  Contributed by @ematipico\n\n- Allow passing `nursery` to the `--only` and `--skip` filters.\n\n  The `--only` option allows you to run a given rule or rule group.\n  The `--skip` option allows you to skip the execution of a given group or a given rule.\n\n  Previously, it was not possible to pass `nursery`.\n  This restriction is now removed, as it may make sense to skip the nursery rules that a project has enabled.\n\n  Contributed by @Conaclos\n\n- The CLI now returns an error code when calling a command in `stdin` mode, and the contents of the files aren't fixed. For example, the following example will result in an error code of `1` because the `lint` command triggers some lint rules:\n\n  ```shell\n  echo \"let x = 1\" | biome lint --stdin-file-path=stdin.js\n  ```\n\n  Contributed by @ematipico\n\n#### Bug fixes\n\n- `biome lint --write` now takes `--only` and `--skip` into account ([#3470](https://github.com/biomejs/biome/issues/3470)). Contributed by @Conaclos\n\n- Fix [#3368](https://github.com/biomejs/biome/issues/3368), now the reporter `github` tracks the diagnostics that belong to formatting and organize imports. Contributed by @ematipico\n\n- Fix [#3545](https://github.com/biomejs/biome/issues/3545), display a warning, 'Avoid using unnecessary Fragment,' when a Fragment contains only one child element that is placed on a new line. Contributed by @satojin219\n\n- Migrating from Prettier or ESLint no longer overwrite the `overrides` field from the configuration ([#3544](https://github.com/biomejs/biome/issues/3544)). Contributed by @Conaclos\n\n- Fix JSX expressions for `noAriaHiddenOnFocusable` ([#3708](https://github.com/biomejs/biome/pull/3708)). Contributed by @anthonyshew\n\n- Fix edge case for `<canvas>` elements that use `role=\"img\"` ([#3728](https://github.com/biomejs/biome/pull/3728)). Contributed by @anthonyshew\n\n- Fix [#3633](https://github.com/biomejs/biome/issues/3633), where diagnostics where incorrectly printed if the code has errors. Contributed by @ematipico\n\n- Allow `aria-label` on heading to prevent `useHeadingContent` diagnostic ([#3767](https://github.com/biomejs/biome/pull/3767)). Contributed by @anthonyshew\n\n- Fix edge case [#3791](https://github.com/biomejs/biome/issues/3791) for rule `noFocusedTests` being used with non-string-like expressions ([#3793](https://github.com/biomejs/biome/pull/3793)). Contributed by @h-a-n-a\n\n- Fix optional ARIA properties for `role=\"separator\"` in `useAriaPropsForRole` ([#3856](https://github.com/biomejs/biome/pull/3856)). Contributed by @anthonyshew\n\n### Configuration\n\n- Add support for loading configuration from `.editorconfig` files ([#1724](https://github.com/biomejs/biome/issues/1724)).\n\n  Configuration supplied in `.editorconfig` will be overridden by the configuration in `biome.json`. Support is disabled by default and can be enabled by adding the following to your formatter configuration in `biome.json`:\n\n  ```json\n  {\n    \"formatter\": {\n      \"useEditorconfig\": true\n    }\n  }\n  ```\n\n  Contributed by @dyc3\n\n- `overrides` from an extended configuration is now merged with the `overrides` of the extension.\n\n  Given the following shared configuration `biome.shared.json`:\n\n  ```json5\n  {\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.json\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  and the following configuration:\n\n  ```json5\n  {\n    \"extends\": [\"./biome.shared.json\"],\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.ts\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  Previously, the `overrides` from `biome.shared.json` was overwritten.\n  It is now merged and results in the following configuration:\n\n  ```json5\n  {\n    \"extends\": [\"./biome.shared.json\"],\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.json\"],\n        // ...\n      },\n      {\n        \"include\": [\"**/*.ts\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  Contributed by @Conaclos\n\n### Editors\n\n- Fix [#3577](https://github.com/biomejs/biome/issues/3577), where the update of the configuration file was resulting in the creation of a new internal project. Contributed by @ematipico\n\n- Fix [#3696](https://github.com/biomejs/biome/issues/3696), where `biome.jsonc` was incorrectly parsed with incorrect options. Contributed by @ematipico\n\n### Formatter\n\n- The CSS formatter is enabled by default. Which means that you don't need to opt-in anymore using the configuration file `biome.json`:\n\n  ```diff\n  {\n  -  \"css\": {\n  -    \"formatter\": {\n  -      \"enabled\": true\n  -    }\n  -  }\n  }\n  ```\n\n  Contributed by @ematipico\n\n- Add parentheses for nullcoalescing in ternaries.\n\n  This change aligns on [Prettier 3.3.3](https://github.com/prettier/prettier/blob/main/CHANGELOG.md#333).\n  This adds clarity to operator precedence.\n\n  ```diff\n  - foo ? bar ?? foo : baz;\n  + foo ? (bar ?? foo) : baz;\n  ```\n\n  Contributed by @Conaclos\n\n- Keep the parentheses around `infer ... extends` declarations in type unions and type intersections ([#3419](https://github.com/biomejs/biome/issues/3419)). Contributed by @Conaclos\n\n- Keep parentheses around a `yield` expression inside a type assertion.\n\n  Previously, Biome removed parentheses around some expressions that require them inside a type assertion.\n  For example, in the following code, Biome now preserves the parentheses.\n\n  ```ts\n  function* f() {\n    return <T>(yield 0);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Remove parentheses around expressions that don't need them inside a decorator.\n\n  Biome now matches Prettier in the following cases:\n\n  ```diff\n    class {\n  -   @(decorator)\n  +   @decorator\n      method() {}\n    },\n    class {\n  -   @(decorator())\n  +   @decorator()\n      method() {}\n    },\n    class {\n      @(decorator?.())\n      method() {}\n    },\n  ```\n\n  Contributed by @Conaclos\n\n- Keep parentheses around objects preceded with a `@satisfies` comment.\n\n  In the following example, parentheses are no longer removed.\n\n  ```ts\n  export const PROPS = /** @satisfies {Record<string, string>} */ ({\n    prop: 0,\n  });\n  ```\n\n  Contributed by @Conaclos\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\n\nThe following CSS rules are promoted:\n\n- [a11y/useGenericFontNames](https://biomejs.dev/linter/rules/use-generic-font-names/)\n- [correctness/noInvalidDirectionInLinearGradient](https://biomejs.dev/linter/rules/no-invalid-direction-in-linear-gradient/)\n- [correctness/noInvalidGridAreas](https://biomejs.dev/linter/rules/no-invalid-grid-areas/)\n- [correctness/noInvalidPositionAtImportRule](https://biomejs.dev/linter/rules/no-invalid-position-at-import-rule/)\n- [correctness/noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function/)\n- [correctness/noUnknownMediaFeatureName](https://biomejs.dev/linter/rules/no-unknown-media-feature-name/)\n- [correctness/noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property/)\n- [correctness/noUnknownUnit](https://biomejs.dev/linter/rules/no-unknown-unit/)\n- [correctness/noUnmatchableAnbSelector](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector/)\n- [suspicious/noDuplicateAtImportRules](https://biomejs.dev/linter/rules/no-duplicate-at-import-rules/)\n- [suspicious/noDuplicateFontNames](https://biomejs.dev/linter/rules/no-duplicate-font-names/)\n- [suspicious/noDuplicateSelectorsKeyframeBlock](https://biomejs.dev/linter/rules/no-duplicate-selectors-keyframe-block/)\n- [suspicious/noEmptyBlock](https://biomejs.dev/linter/rules/no-empty-block/)\n- [suspicious/noImportantInKeyframe](https://biomejs.dev/linter/rules/no-important-in-keyframe/)\n- [suspicious/noShorthandPropertyOverrides](https://biomejs.dev/linter/rules/no-shorthand-property-overrides/)\n\nThe following JavaScript rules are promoted:\n\n- [a11y/noLabelWithoutControl](https://biomejs.dev/linter/rules/no-label-without-control/)\n- [a11y/useFocusableInteractive](https://biomejs.dev/linter/rules/use-focusable-interactive/)\n- [a11y/useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/)\n- [complexity/noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/)\n- [complexity/noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/)\n- [complexity/useDateNow](https://biomejs.dev/linter/rules/use-date-now/)\n- [correctness/noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/)\n- [correctness/noInvalidBuiltinInstantiation](https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation/)\n- [correctness/noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/)\n- [correctness/useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/)\n- [performance/useTopLevelRegex](https://biomejs.dev/linter/rules/use-top-level-regex/)\n- [style/noDoneCallback](https://biomejs.dev/linter/rules/no-done-callback/)\n- [style/noYodaExpression](https://biomejs.dev/linter/rules/no-yoda-expression/)\n- [style/useConsistentBuiltinInstantiation](https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation/)\n- [style/useDefaultSwitchClause](https://biomejs.dev/linter/rules/use-default-switch-clause/)\n- [style/useExplicitLengthCheck](https://biomejs.dev/linter/rules/use-explicit-length-check/)\n- [style/useThrowNewError](https://biomejs.dev/linter/rules/use-throw-new-error/)\n- [style/useThrowOnlyError](https://biomejs.dev/linter/rules/use-throw-only-error/)\n- [suspicious/noConsole](https://biomejs.dev/linter/rules/no-console/)\n- [suspicious/noEvolvingTypes](https://biomejs.dev/linter/rules/no-evolving-types/)\n- [suspicious/noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/)\n- [suspicious/noReactSpecificProps](https://biomejs.dev/linter/rules/no-react-specific-props/)\n- [suspicious/useErrorMessage](https://biomejs.dev/linter/rules/use-error-message/)\n- [suspicious/useNumberToFixedDigitsArgument](https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument/)\n\n#### Deprecated rules\n\n- `correctness/noInvalidNewBuiltin` is deprecated. Use [correctness/noInvalidBuiltinInstantiation](https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation/) instead.\n- `style/useSingleCaseStatement` is deprecated. Use [correctness/noSwitchDeclarations](https://biomejs.dev/linter/rules/no-switch-declarations/) instead.\n- `suspicious/noConsoleLog` is deprecated. Use [suspicious/noConsole](https://biomejs.dev/linter/rules/no-console/) instead.\n\n#### New features\n\n- Implement [css suppression action](https://github.com/biomejs/biome/issues/3278). Contributed by @togami2864\n\n- Add support for GraphQL linting. Contributed by @ematipico\n\n- Add [nursery/noCommonJs](https://biomejs.dev/linter/rules/no-common-js/). Contributed by @minht11\n\n- Add [nursery/noDuplicateCustomProperties](https://biomejs.dev/linter/rules/no-duplicate-custom-properties/). Contributed by @chansuke\n\n- Add [nursery/noEnum](https://biomejs.dev/linter/rules/no-enum/). Contributed by @nickfla1\n\n- Add [nursery/noDynamicNamespaceImportAccess](https://biomejs.dev/linter/no-dynamic-namespace-import-access/). Contributed by @minht11\n\n- Add [nursery/noIrregularWhitespace](https://biomejs.dev/linter/rules/no-irregular-whitespace). Contributed by @michellocana\n\n- Add [nursery/noRestrictedTypes](https://biomejs.dev/linter/no-restricted-types/). Contributed by @minht11\n\n- Add [nursery/noSecrets](https://biomejs.dev/linter/rules/no-secrets/). Contributed by @SaadBazaz\n\n- Add [nursery/noUselessEscapeInRegex](https://biomejs.dev/linter/rules/no-useless-escape-in-regex/). Contributed by @Conaclos\n\n- Add [nursery/noValueAtRule](https://biomejs.dev/linter/rules/no-value-at-rule/). Contributed by @rishabh3112\n\n- Add [nursery/useAriaPropsSupportedByRole](https://biomejs.dev/linter/rules/use-aria-props-supported-by-role/). Contributed by @ryo-ebata\n\n- Add [nursery/useConsistentMemberAccessibility](https://biomejs.dev/linter/rules/use-consistent-member-accessibility/). Contributed by @seitarof\n\n- Add [nursery/useStrictMode](https://biomejs.dev/linter/rules/use-strict-mode/). Contributed by @ematipico\n\n- Add [nursery/useTrimStartEnd](https://biomejs.dev/linter/rules/use-trim-start-end/). Contributed by @chansuke\n\n- Add [nursery/noIrregularWhitespace](https://biomejs.dev/linter/rules/no-irreguluar-whitespace/). Contributed by @DerTimonius\n\n#### Enhancements\n\n- Rename `nursery/noUnknownSelectorPseudoElement` to `nursery/noUnknownPseudoElement`. Contributed by @togami2864\n\n- The CSS linter is now enabled by default. Which means that you don't need to opt-in anymore using the configuration file `biome.json`:\n\n  ```diff\n  {\n  -  \"css\": {\n  -    \"linter\": {\n  -      \"enabled\": true\n  -    }\n  -  }\n  }\n  ```\n\n  Contributed by @ematipico\n\n- The JavaScript linter recognizes TypeScript 5.5 and 5.6 globals. Contributed by @Conaclos\n\n- [noBlankTarget](https://biomejs.dev/linter/rules/no-blank-target/) now supports an array of allowed domains.\n\n  The following configuration allows `example.com` and `example.org` as blank targets.\n\n  ```json\n  \"linter\": {\n    \"rules\": {\n      \"a11y\": {\n        \"noBlankTarget\": {\n        \"level\": \"error\",\n          \"options\": {\n             \"allowDomains\": [\"example.com\", \"example.org\"]\n            }\n          }\n        }\n      }\n    }\n  ```\n\n  Contributed by @Jayllyz\n\n- [noConsole](https://biomejs.dev/linter/rules/no-console/) now accepts an option that specifies some allowed calls on `console`. Contributed by @Conaclos\n\n- Add an `ignoreNull` option for [noDoubleEquals](https://biomejs.dev/linter/rules/no-double-equals/).\n\n  By default the rule allows loose comparisons against `null`.\n  The option `ignoreNull` can be set to `false` for reporting loose comparison against `null`.\n\n  Contributed by @peaBerberian.\n\n- [noDuplicateObjectKeys](https://biomejs.dev/linter/rules/no-duplicate-object-keys/) now works for JSON and JSONC files. Contributed by @ematipico\n\n- [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) now reports direct use of an enum member before its declaration.\n\n  In the following code, `A` is reported as use before its declaration.\n\n  ```ts\n  enum E {\n    B = A << 1,\n    A = 1,\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/) now ignores imports of a package which has the same name as a Node.js module. Contributed by @Conaclos\n\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/) now ignores type-only imports ([#1674](https://github.com/biomejs/biome/issues/1674)).\n\n  The rule no longer reports type-only imports such as:\n\n  ```ts\n  import type assert from \"assert\";\n  import type * as assert2 from \"assert\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/) no longer reports `\"use strict\"` directives when the `package.json` marks explicitly the file as a script using the field `\"type\": \"commonjs\"`. Contributed by @ematipico\n\n- [noStaticOnlyClass](https://biomejs.dev/linter/rules/no-static-only-class/) no longer reports a class that extends another class ([#3612](https://github.com/biomejs/biome/issues/3612)). Contributed by @errmayank\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no longer reports a direct reference to an enum member ([#2974](https://github.com/biomejs/biome/issues/2974)).\n\n  In the following code, the `A` reference is no longer reported as an undeclared variable.\n\n  ```ts\n  enum E {\n    A = 1,\n    B = A << 1,\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) recognized Svelte 5 runes in Svelte components and svelte files.\n\n  Svelte 5 introduced runes.\n  The rule now recognizes Svelte 5 runes in files ending with the `.svelte`, `.svelte.js` or `.svelte.ts` extensions.\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) now checks TypeScript declaration files.\n\n  This allows to report a type that is unused because it isn't exported.\n  Global declarations files (declarations files without exports and imports) are still ignored.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now supports [unicase](https://en.wikipedia.org/wiki/Unicase) letters.\n\n  [unicase](https://en.wikipedia.org/wiki/Unicase) letters have a single case: they are neither uppercase nor lowercase.\n  Biome now accepts filenames in unicase.\n  For example, the filename `안녕하세요` is now accepted.\n\n  We still reject a name that mixes unicase characters with lowercase or uppercase characters.\n  For example, the filename `A안녕하세요` is rejected.\n\n  This change also fixes [#3353](https://github.com/biomejs/biome/issues/3353).\n  Filenames consisting only of numbers are now accepted.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now supports Next.js/Nuxt/Astro dynamic routes ([#3465](https://github.com/biomejs/biome/issues/3465)).\n\n  [Next.js](https://nextjs.org/docs/pages/building-your-application/routing/dynamic-routes#catch-all-segments), [SolidStart](https://docs.solidjs.com/solid-start/building-your-application/routing#renaming-index), [Nuxt](https://nuxt.com/docs/guide/directory-structure/server#catch-all-route), and [Astro](https://docs.astro.build/en/guides/routing/#rest-parameters) support dynamic routes such as `[...slug].js` and `[[...slug]].js`.\n\n  Biome now recognizes this syntax. `slug` must contain only alphanumeric characters.\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) no longer reports empty `export` ([#3535](https://github.com/biomejs/biome/issues/3535)).\n\n  An empty `export {}` allows you to force TypeScript to consider a file with no imports and exports as an EcmaScript module.\n  While `export type {}` is valid, it is more common to use `export {}`.\n  Users may find it confusing that the linter asks them to convert it to `export type {}`.\n  Also, a bundler should be able to remove `export {}` as well as `export type {}`.\n  So it is not so useful to report `export {}`.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) now corretcly handle `\\u` escapes in unicode-aware regexes.\n\n  Previously, the rule didn't consider regex with the `v` flags as unicode-aware regexes.\n  Moreover, `\\uhhhh` was not handled in unicode-aware regexes.\n\n  Contributed by @Conaclos\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) now reports control characters and escape sequence of control characters in string regexes. Contributed by @Conaclos\n\n- `noExcessiveNestedTestSuites`: fix an edge case where the rule would alert on heavily nested zod schemas. Contributed by @dyc3\n\n- `noExtraNonNullAssertion` no longer reports a single non-null assertion enclosed in parentheses ([#3352](https://github.com/biomejs/biome/issues/3352)). Contributed by @Conaclos\n\n- [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals/) now correctly provides a code fix when Unicode characters are used. Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer report redeclartions for lexically scoped function declarations [#3664](https://github.com/biomejs/biome/issues/3664).\n\n  In JavaScript strict mode, function declarations are lexically scoped:\n  they cannot be accessed outside the block where they are declared.\n\n  In non-strict mode, function declarations are hoisted to the top of the enclosing function or global scope.\n\n  Previously Biome always hoisted function declarations.\n  It now takes into account whether the code is in strict or non strict mode.\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now ignores self package imports.\n\n  Given teh following `package.json`:\n\n  ```json\n  {\n    \"name\": \"my-package\",\n    \"main\": \"index.js\"\n  }\n  ```\n\n  The following import is no longer reported by the rule:\n\n  ```js\n  import * as mod from \"my-package\";\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [[#3149](https://github.com/biomejs/biome/issues/3149)] crashes that occurred when applying the `noUselessFragments` unsafe fixes in certain scenarios. Contributed by @unvalley\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer reports a variable named as the function expression where it is declared. Contributed by @Conaclos\n\n- `useAdjacentOverloadSignatures` no longer reports a `#private` class member and a public class member that share the same name ([#3309](https://github.com/biomejs/biome/issues/3309)).\n\n  The following code is no longer reported:\n\n  ```js\n  class C {\n    #f() {}\n    g() {}\n    f() {}\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [useAltText](https://www.biomejs.dev/linter/rules/use-alt-text) n olonger requests alt text for elements hidden from assistive technologies ([#3316](https://github.com/biomejs/biome/issues/3316)). Contributed by @robintown\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts applying custom convention on abstract classes. Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) no longer suggests an empty fix when a name doesn't match strict Pascal case ([#3561](https://github.com/biomejs/biome/issues/3561)).\n\n  Previously the following code led `useNamingConvention` to suggest an empty fix.\n  The rule no longer provides a fix for this case.\n\n  ```ts\n  type AAb = any\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) no longer provides fixes for global TypeScript declaration files.\n\n  Global TypeScript declaration files have no epxorts and no imports.\n  All the declared types are available in all files of the project.\n  Thus, it is not safe to propose renaming only in the declaration file.\n\n  Contributed by @Conaclos\n\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) lint error with Template literals ([#3394](https://github.com/biomejs/biome/issues/3394)). Contributed by @hangaoke1\n\n- [useValidAriaValues](https://biomejs.dev/linter/rules/use-valid-aria-values/) now correctly check property types ([3748](https://github.com/biomejs/biome/issues/3748)).\n\n  Properties that expect a string now accept arbitrary text.\n  An identifiers can now be made up of any characters except ASCII whitespace.\n  An identifier list can now be separated by any ASCII whitespace.\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Enhancements\n\n- The JSON parser now allows comments in `turbo.json` and `jest.config.json`. Contributed by @Netail and @Conaclos\n\n- The JSON parser now allows comments in files with the `.json` extension under the `.vscode` and `.zed` directories.\n\n  Biome recognizes are well known JSON files that allows comments and/or trailing commas.\n  Previously, Biome did not recognize JSON files under the `.vscode` and the `.zed` directories as JSON files that allow comments.\n  You had to configure Biome to recognize them:\n\n  ```json\n  {\n    \"overrides\": [\n      {\n        \"include\": [\"**/.vscode/*.json\", \"**/.zed/*.json\"],\n        \"json\": { \"parser\": { \"allowComments\": true } }\n      }\n    ]\n  }\n  ```\n\n  This override is no longer needed!\n  Note that JSON files under the `.vscode` and the `.zed` directories don't accept trailing commas.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- The CSS parser now accepts emoji in identifiers ([3627](https://github.com/biomejs/biome/issues/3627)).\n\n  The following code is now correctly parsed:\n\n  ```css\n  p {\n    --🥔-color: red;\n    color: var(--🥔-color);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#3287](https://github.com/biomejs/biome/issues/3287) nested selectors with pseudo-classes. Contributed by @denbezrukov\n\n- Fix [#3349](https://github.com/biomejs/biome/issues/3349) allow CSS multiple ampersand support. Contributed by @denbezrukov\n\n  ```css\n  .class {\n    && {\n      color: red;\n    }\n  }\n  ```\n\n- Fix [#3410](https://github.com/biomejs/biome/issues/3410) by correctly parsing break statements containing keywords.\n  ```js\n  out: while (true) {\n    break out;\n  }\n  ```\n  Contributed by @ah-yu\n\n- Fix [#3464](https://github.com/biomejs/biome/issues/3464) by enabling JSX in `.vue` files that use the `lang='jsx'` or `lang='tsx'` attribute. Contributed by @ematipico\n\n\n## v1.8.3 (2024-06-27)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3104](https://github.com/biomejs/biome/issues/3104) by suppressing node warnings when using `biome migrate`. Contributed by @SuperchupuDev\n\n- Force colors to be off when using the GitHub reporter to properly create annotations in GitHub actions ([#3148](https://github.com/biomejs/biome/issues/3148)). Contributed by @Sec-ant\n\n### Parser\n\n#### Bug fixes\n\n- Implement [CSS unicode range](https://github.com/biomejs/biome/pull/3251). Contributed by @denbezrukov\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3184](https://github.com/biomejs/biome/issues/3184) CSS formatter converts custom identifiers to lowercase. Contributed by @denbezrukov\n- Fix [#3256](https://github.com/biomejs/biome/issues/3256) constant crashes when editing css files #3256. Contributed by @denbezrukov\n\n### Linter\n\n#### New features\n\n- Add `nursery/useDeprecatedReason` rule. Contributed by @vohoanglong0107.\n- Add [nursery/noExportedImports](https://biomejs.dev/linter/rules/no-exported-imports/). Contributed by @Conaclos\n\n#### Enhancements\n\n- Implement [suggestedExtensions option](https://github.com/biomejs/biome/pull/3274) for `useImportExtensions` rule. Contributed by @drdaemos\n\n#### Bug fixes\n\n- `useConsistentArrayType` and `useShorthandArrayType` now ignore `Array` in the `extends` and `implements` clauses. Fix [#3247](https://github.com/biomejs/biome/issues/3247). Contributed by @Conaclos\n- Fixes [#3066](https://github.com/biomejs/biome/issues/3066) by taking into account the dependencies declared in the `package.json`. Contributed by @ematipico\n- The code action of the `useArrowFunction` rule now preserves a trailing comma when there is only a single type parameter in the arrow function and JSX is enabled. Fixes [#3292](https://github.com/biomejs/biome/issues/3292). Contributed by @Sec-ant\n\n#### Enhancements\n- Enhance tailwind sorting lint rule [#1274](https://github.com/biomejs/biome/issues/1274) with variant support.\n\n  Every preconfigured variant is assigned a `weight` that concurs on establishing the output sorting order.\n  Since nesting variants on the same utility class is possible, the resulting `weight` is the Bitwise XOR of all the variants weight for that class.\n  Dynamic variants (e.g. `has-[.custom-class]`, `group-[:checked]`) are also supported and they take the `weight` of their base variant name the custom value attached (e.g. `has-[.custom-class]` takes `has` weight).\n  Arbitrary variants (e.g. `[&nth-child(2)]`) don't have a weight assigned and they are placed after every known variant.\n  Classes with the same amount of arbitrary variants follow lexicographical order. The class that has the highest number of nested arbitrary variants is placed last.\n  Screen variants (e.g. `sm:`, `max-md:`, `min-lg:`) are not supported yet.\n\n  Contributed by @lutaok\n\n## v1.8.2 (2024-06-20)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3201](https://github.com/biomejs/biome/issues/3201) by correctly injecting the source code of the file when printing the diagnostics. Contributed by @ematipico\n- Fix [#3179](https://github.com/biomejs/biome/issues/3179) where comma separators are not correctly removed after running `biome migrate` and thus choke the parser. Contributed by @Sec-ant\n- Fix [#3232](https://github.com/biomejs/biome/issues/3232) by correctly using the colors set by the user. Contributed by @ematipico\n\n#### Enhancement\n\n- Reword the reporter message `No fixes needed` to `No fixes applied`.\n\n  The former message is misleading when there're still errors or warnings in the files that should be taken care of manually. For example:\n\n  ```block\n  Checked 2 files in <TIME>. No fixes needed.\n  Found 2 errors.\n  ```\n\n  The new message suits better in these cases.\n\n  Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Don't conceal previous overrides ([#3176](https://github.com/biomejs/biome/issues/3176)).\n\n  Previously, each override inherited the unset configuration of the base configuration.\n  This means that setting a configuration in an override can be concealed by a subsequent override that inherits of the value from the base configuration.\n\n  For example, in the next example, `noDebugger` was disabled for the `index.js` file.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"suspicious\": { \"noDebugger\": \"off\" }\n      }\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"index.js\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": { \"noDebugger\": \"warn\" }\n          }\n        }\n      }, {\n        \"include\": [\"index.js\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": { \"noDoubleEquals\": \"off\" }\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n  The rule is now correctly enabled for the `index.js` file.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3103](https://github.com/biomejs/biome/issues/3103) by correctly resolving CSS formatter options. Contributed by @ah-yu\n- Fix [#3192](https://github.com/biomejs/biome/issues/3192) don't add an extra whitespace within :has. Contributed by @denbezrukov\n\n### JavaScript APIs\n\n#### Bug fixes\n\n- Fix a regression introduced by the release of `v1.8.0`\n\n### Linter\n\n#### New features\n\n- Add [nursery/noSubstr](https://biomejs.dev/linter/rules/no-substr/). Contributed by @chansuke\n\n- Add [nursery/useConsistentCurlyBraces](https://biomejs.dev/linter/rules/use-consistent-curly-braces/). Contributed by @dyc3\n\n- Add [nursery/useValidAutocomplete](https://biomejs.dev/linter/rules/use-valid-autocomplete/). Contributed by @unvalley\n\n#### Enhancements\n\n- Add a code action for [noUselessCatch](https://biomejs.dev/linter/rules/no-useless-catch/). Contributed by @chansuke\n\n#### Bug fixes\n\n- Add [nursery/noShorthandPropertyOverrides](https://biomejs.dev/linter/rules/no-shorthand-property-overrides). [#2958](https://github.com/biomejs/biome/issues/2958) Contributed by @neokidev\n- Fix [[#3084](https://github.com/biomejs/biome/issues/3084)] false positive by correctly recognize parenthesized return statement. Contributed by @unvalley\n- [useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/) now suggests a correct fix for `import '.'` and `import './.'`. Contributed by @minht11\n- Fix [useDateNow](https://biomejs.dev/linter/rules/use-date-now/) false positive when new Date object has arguments `new Date(0).getTime()`. Contributed by @minht11.\n- The [`noUnmatchableAnbSelector`](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector/) rule is now able to catch unmatchable `an+b` selectors like `0n+0` or `-0n+0`. Contributed by @Sec-ant.\n- The [`useHookAtTopLevel`](https://biomejs.dev/linter/rules/use-hook-at-top-level/) rule now recognizes properties named as hooks like `foo.useFoo()`. Contributed by @ksnyder9801\n- Fix [#3092](https://github.com/biomejs/biome/issues/3092), prevent warning for `Custom properties (--*)`. Contributed by @chansuke\n- Fix a false positive in the [`useLiteralKeys`](https://biomejs.dev/linter/rules/use-literal-keys/) rule. ([#3160](https://github.com/biomejs/biome/issues/3160))\n\n  This rule now ignores the following kind of computed member name:\n\n  ```js\n  const a = {\n    [`line1\n    line2`]: true,\n  };\n  ```\n\n  Contributed by @Sec-ant\n\n- The [noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property/) rule now ignores the `composes` property often used in css modules. [#3000](https://github.com/biomejs/biome/issues/3000) Contributed by @chansuke\n\n- Fix false positives of the [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) rule.\n\n  The component itself is considered stable when it is used recursively inside a hook closure defined inside of it:\n\n  ```jsx\n  import { useMemo } from \"react\";\n\n  function MyRecursiveComponent() {\n    // MyRecursiveComponent is stable, we don't need to add it to the dependencies list.\n    const children = useMemo(() => <MyRecursiveComponent />, []);\n    return <div>{children}</div>;\n  }\n  ```\n\n  Also, `export default function` and `export default class` are considered stable now because they can only appear at the top level of a module.\n\n  Contributed by @Sec-ant\n\n- Fix missing `withDefaults` macro in vue files for globals variables. Contributed by @Shyam-Chen\n\n### Parser\n\n#### Bug fixes\n\n- Fix CSS modules settings mapping. Contributed by @denbezrukov\n\n## v1.8.1 (2024-06-10)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3069](https://github.com/biomejs/biome/issues/3069), prevent overwriting paths when using `--staged` or `--changed` options. Contributed by @unvalley\n- Fix a case where the file link inside a diagnostic wasn't correctly displayed inside a terminal run by VSCode. Contributed by @uncenter\n\n### Configuration\n\n#### Bug fixes\n\n- Fix [#3067](https://github.com/biomejs/biome/issues/3067), by assigning the correct default value to `indentWidth`. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n- Fix the bug where whitespace after the & character in CSS nesting was incorrectly trimmed, ensuring proper targeting of child classes [#3061](https://github.com/biomejs/biome/issues/3061). Contributed by @denbezrukov\n- Fix [#3068](https://github.com/biomejs/biome/issues/3068) where the CSS formatter was inadvertently converting variable declarations and function calls to lowercase. Contributed by @denbezrukov\n- Fix the formatting of CSS grid layout properties. Contributed by @denbezrukov\n\n### Linter\n\n#### New features\n\n- Add [noUnknownPseudoClass](https://biomejs.dev/linter/rules/no-unknown-pseudo-class/). Contributed by  @tunamaguro\n\n#### Bug fixes\n\n- The `noEmptyBlock` css lint rule now treats empty blocks containing comments as valid ones. Contributed by @Sec-ant\n\n- [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) no longer reports quoted member names ([#3085](https://github.com/biomejs/biome/issues/3085)).\n\n  Previously [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) reported quoted member names that can be unquoted.\n  For example, the rule suggested the following fix:\n\n  ```diff\n  - const x = { \"prop\": 0 };\n  + const x = { prop: 0 };\n  ```\n\n  This conflicted with the option [quoteProperties](https://biomejs.dev/reference/configuration/#javascriptformatterquoteproperties) of our formatter.\n\n  The rule now ignores quoted member names.\n\n  Contributed by @Conaclos\n\n- [noEmptyInterface](https://biomejs.dev/linter/rules/no-empty-interface/) now ignores empty interfaces in ambient modules ([#3110](https://github.com/biomejs/biome/issues/3110)). Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) and [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) no longer report the parameters of a constructor type ([#3135](https://github.com/biomejs/biome/issues/3135)).\n\n  Previously, `arg` was reported as unused in a constructor type like:\n\n  ```ts\n  export type Classlike = new (arg: unknown) => string;\n  ```\n\n  Contributed by @Conaclos\n\n- [noStringCaseMismatch](https://biomejs.dev/linter/rules/no-string-case-mismatch/) now ignores escape sequences ([#3134](https://github.com/biomejs/biome/issues/3134)).\n\n  The following code is no longer reported by the rule:\n\n  ```js\n  s.toUpperCase() === \"\\u001b\";\n  ```\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- Implemented CSS Unknown At-Rule parsing, allowing the parser to gracefully handle unsupported or unrecognized CSS at-rules. Contributed by @denbezrukov\n- Fix [#3055](https://github.com/biomejs/biome/issues/3055) CSS: Layout using named grid lines is now correctly parsed. Contributed by @denbezrukov\n- Fix [#3091](https://github.com/biomejs/biome/issues/3091). Allows the parser to handle nested style rules and at-rules properly, enhancing the parser's compatibility with the CSS Nesting Module. Contributed by @denbezrukov\n\n## 1.8.0 (2024-06-04)\n\n### Analyzer\n\n#### New features\n\n- Allow suppression comments to suppress individual instances of rules. This is\n  used for the lint rule `useExhaustiveDependencies`, which is now able to\n  suppress specific dependencies. Fixes #2509. Contributed by @arendjr\n\n#### Enhancements\n\n- Assume `Astro` object is always a global when processing `.astro` files. Contributed by @minht11\n- Assume Vue compiler macros are globals when processing `.vue` files. ([#2771](https://github.com/biomejs/biome/pull/2771)) Contributed by @dyc3\n\n### CLI\n\n#### New features\n\n- New `clean` command. Use this new command to clean after the `biome-logs` directory, and remove all the log files.\n\n  ```shell\n  biome clean\n  ```\n\n- Add two new options `--only` and `--skip` to the command `biome lint` ([#58](https://github.com/biomejs/biome/issues/58)).\n\n  The `--only` option allows you to run a given rule or rule group,\n  For example, the following command runs only the `style/useNamingConvention` and `style/noInferrableTypes` rules.\n  If the rule is disabled in the configuration, then its severity level is set to `error` for a recommended rule or `warn` otherwise.\n\n  ```shell\n  biome lint --only=style/useNamingConvention --only=style/noInferrableTypes\n  ```\n\n  Passing a group does not change the severity level of the rules in the group.\n  All the disabled rules in the group will remain disabled.\n  To ensure that the group is run, the `recommended` field of the group is enabled.\n  The `nursery` group cannot be passed, as no rules are enabled by default in the nursery group.\n\n  The `--skip` option allows you to skip the execution of a given group or a given rule.\n  For example, the following command skips the `style` group and the `suspicious/noExplicitAny` rule.\n\n  ```shell\n  biome lint --skip=style --skip=suspicious/noExplicitAny\n  ```\n\n  You can also use `--only` and `--skip` together. `--skip` overrides `--only`.\n  The following command executes only the rules from the `style` group, but the `style/useNamingConvention` rule.\n\n  ```shell\n  biome lint --only=style --skip=style/useNamingConvention\n  ```\n\n  These options are compatible with other options such as `--write` (previously `--apply`), and `--reporter`.\n\n  Contributed by @Conaclos\n\n- Add new command `biome clean`. Use this command to purge all the logs emitted by the Biome daemon. This command is really useful, because the Biome daemon tends\n  log many files and contents during its lifecycle. This means that if your editor is open for hours (or even days), the `biome-logs` folder could become quite heavy. Contributed by @ematipico\n\n- Add support for formatting and linting CSS files from the CLI. These operations are **opt-in** for the time being.\n\n  If you don't have a configuration file, you can enable these features with `--css-formatter-enabled` and `--css-linter-enabled`:\n\n  ```shell\n  biome check --css-formatter-enabled=true --css-linter-enabled=true ./\n  ```\n  Contributed by @ematipico\n\n- Add new CLI options to control the CSS formatting. Check the [CLI reference page](https://biomejs.dev/reference/cli/) for more details. Contributed by @ematipico\n\n- Add new options `--write`, `--fix` (alias of `--write`) and `--unsafe` to the command `biome lint` and `biome check`.\n  Add a new option `--fix` (alias of `--write`) to the command `biome format` and `biome migrate`.\n\n  ```shell\n  biome <lint|check> --<write|fix> [--unsafe]\n  biome format --<write|fix>\n  biome migrate --<write|fix>\n  ```\n\n  The `biome <lint|check> --<write|fix>` has the same behavior as `biome <lint|check> --apply`.\n  The `biome <lint|check> --<write|fix> --unsafe` has the same behavior as `biome <lint|check> --apply-unsafe`.\n  The `biome format --fix` has the same behavior as `biome format --write`.\n  The `biome migrate --fix` has the same behavior as `biome migrate --write`.\n\n  This change allows these commands to write modifications in the same options.\n  With this change, the `--apply` and `--apply-unsafe` options are deprecated.\n\n  Contributed by @unvalley\n\n#### Enhancements\n\n- Biome now executes commands (lint, format, check and ci) on the working directory by default. [#2266](https://github.com/biomejs/biome/issues/2266) Contributed by @unvalley\n\n  ```diff\n  - biome check .\n  + biome check    # You can run the command without the path\n  ```\n\n- `biome migrate eslint` now tries to convert ESLint ignore patterns into Biome ignore patterns.\n\n  ESLint uses [gitignore patterns](https://git-scm.com/docs/gitignore#_pattern_format).\n  Biome now tries to convert these patterns into Biome ignore patterns.\n\n  For example, the gitignore pattern `/src` is a relative path to the file in which it appears.\n  Biome now recognizes this and translates this pattern to `./src`.\n\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now supports the `eslintIgnore` field in `package.json`.\n\n  ESLint allows the use of `package.json` as an ESLint configuration file.\n  ESLint supports two fields: `eslintConfig` and `eslintIgnore`.\n  Biome only supported the former. It now supports both.\n\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now propagates NodeJS errors to the user.\n\n  This will help users to identify why Biome is unable to load some ESLint configurations.\n\n  Contributed by @Conaclos\n\n- Add a new `--reporter` called `summary`. This reporter will print diagnostics in a different way, based on the tools (formatter, linter, etc.) that are executed.\n  Import sorting and formatter shows the name of the files that require formatting. Instead, the linter will group the number of rules triggered and the number of errors/warnings:\n\n  ```\n  Formatter ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  The following files needs to be formatted:\n  main.ts\n  index.ts\n\n  Organize Imports ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  The following files needs to have their imports sorted:\n  main.ts\n  index.ts\n\n  Analyzer ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  Some analyzer rules were triggered\n\n  Rule Name                                               Diagnostics\n  lint/suspicious/noImplicitAnyLet                        12 (12 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noDoubleEquals                          8 (8 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noRedeclare                             12 (12 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noDebugger                              20 (20 error(s), 0 warning(s), 0 info(s))\n  ```\n  Contributed by @ematipico\n\n- `biome ci` now enforces printing the output using colours. If you were previously using `--colors=force`, you can remove it because it's automatically set. Contributed by @ematipico\n- Add a new `--reporter` called `github`. This reporter will print diagnostics using [GitHub workflow commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#about-workflow-commands):\n\n  ```\n  ::error title=lint/suspicious/noDoubleEquals,file=main.ts,line=4,endLine=4,col=3,endColumn=5::Use === instead of ==\n  ::error title=lint/suspicious/noDebugger,file=main.ts,line=6,endLine=6,col=1,endColumn=9::This is an unexpected use of the debugger statement.\n  ::error title=lint/nursery/noEvolvingAny,file=main.ts,line=8,endLine=8,col=5,endColumn=6::This variable's type is not allowed to evolve implicitly, leading to potential any types.\n  ```\n  Contributed by @ematipico\n- Add a new `--reporter` called `junit`. This reporter will print diagnostics using [GitHub workflow commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#about-workflow-commands):\n\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <testsuites name=\"Biome\" tests=\"16\" failures=\"16\" errors=\"20\" time=\"<TIME>\">\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.suspicious.noDoubleEquals\" line=\"4\" column=\"3\">\n            <failure message=\"Use === instead of ==. == is only allowed when comparing against `null`\">line 3, col 2, Use === instead of ==. == is only allowed when comparing against `null`</failure>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.suspicious.noDebugger\" line=\"6\" column=\"1\">\n            <failure message=\"This is an unexpected use of the debugger statement.\">line 5, col 0, This is an unexpected use of the debugger statement.</failure>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.nursery.noEvolvingAny\" line=\"8\" column=\"5\">\n            <failure message=\"This variable&apos;s type is not allowed to evolve implicitly, leading to potential any types.\">line 7, col 4, This variable&apos;s type is not allowed to evolve implicitly, leading to potential any types.</failure>\n        </testcase>\n    </testsuite>\n  </testsuites>\n  ```\n  Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix  [#3024](https://github.com/biomejs/biome/issues/3024), where running `biome init` would create `biome.json` even if `biome.jsonc` already exists.  Contributed by @minht11\n\n### Configuration\n\n#### New features\n\n- Add an rule option `fix` to override the code fix kind of a rule ([#2882](https://github.com/biomejs/biome/issues/2882)).\n\n  A rule can provide a safe or an **unsafe** code **action**.\n  You can now tune the kind of code actions thanks to the `fix` option.\n  This rule option takes a value among:\n\n  - `none`: the rule no longer emits code actions.\n  - `safe`: the rule emits safe code action.\n  - `unsafe`: the rule emits unsafe code action.\n\n  The following configuration disables the code actions of `noUnusedVariables`, makes the emitted code actions of `style/useConst` and `style/useTemplate` unsafe and safe respectively.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"correctness\": {\n          \"noUnusedVariables\": {\n            \"level\": \"error\",\n            \"fix\": \"none\"\n          },\n          \"style\": {\n            \"useConst\": {\n              \"level\": \"warn\",\n              \"fix\": \"unsafe\"\n            },\n            \"useTemplate\": {\n              \"level\": \"warn\",\n              \"fix\": \"safe\"\n            }\n          }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Add option `javascript.linter.enabled` to control the linter for JavaScript (and its super languages) files. Contributed by @ematipico\n- Add option `json.linter.enabled` to control the linter for JSON (and its super languages) files. Contributed by @ematipico\n- Add option `css.linter.enabled` to control the linter for CSS (and its super languages) files. Contributed by @ematipico\n- Add option `css.formatter`, to control the formatter options for CSS (and its super languages) files. Contributed by @ematipico\n- You can now change the severity of lint rules down to `\"info\"`. The `\"info\"` severity doesn't emit error codes, and it isn't affected by other options like `--error-on-warnings`:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"suspicious\": {\n          \"noDebugger\": \"info\"\n        }\n      }\n    }\n  }\n  ```\n  Contributed by @ematipico\n\n#### Enhancements\n\n- The `javascript.formatter.trailingComma` option is deprecated and renamed to `javascript.formatter.trailingCommas`. The corresponding CLI option `--trailing-comma` is also deprecated and renamed to `--trailing-commas`. Details can be checked in [#2492](https://github.com/biomejs/biome/pull/2492). Contributed by @Sec-ant\n\n#### Bug fixes\n\n- Fix a bug where if the formatter was disabled at the language level, it could be erroneously enabled by an\n  override that did not specify the formatter section [#2924](https://github.com/biomejs/biome/issues/2924). Contributed by @dyc3\n- Fix [#2990](https://github.com/biomejs/biome/issues/2990), now Biome doesn't add a trailing comma when formatting `biome.json`. Contributed by @dyc3\n\n### Editors\n\n#### New features\n\n- Add support for LSP Workspaces\n\n#### Enhancements\n\n- The LSP doesn't crash anymore when the configuration file contains errors. If the configuration contains errors, Biome now shows a pop-up to the user, and it will only parse files using the default configuration.\n  Formatting and linting is disabled until the configuration file is fixed. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fixes [#2781](https://github.com/biomejs/biome/issues/2781), by correctly computing the configuration to apply to a specific file. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2470](https://github.com/biomejs/biome/issues/2470) by avoid introducing linebreaks in single line string interpolations. Contributed by @ah-yu\n- Resolve deadlocks by narrowing the scope of locks. Contributed by @mechairoi\n- Fix [#2782](https://github.com/biomejs/biome/issues/2782) by computing the enabled rules by taking the override settings into consideration. Contributed by @ematipico\n- Fix [https://github.com/biomejs/biome/issues/2877] by correctly handling line terminators in JSX string. Contributed by @ah-yu\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group. Once stable, we promote them to a stable group. The following rules are promoted:\n\n- [useImportRestrictions](https://biomejs.dev/linter/rules/use-import-restrictions/)\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/)\n- [useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/)\n- [noConstantMathMinMaxClamp](https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp/)\n- [noFlatMapIdentity](https://biomejs.dev/linter/rules/no-flat-map-identity/)\n\n#### New features\n\n- Add [nursery/useDateNow](https://biomejs.dev/linter/rules/use-date-now/). Contributed by @minht11\n- Add [nursery/useErrorMessage](https://biomejs.dev/linter/rules/use-error-message/). Contributed by @minht11\n- Add [nursery/useThrowOnlyError](https://biomejs.dev/linter/rules/use-throw-only-error/). Contributed by @minht11\n- Add [nursery/useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/). Contributed by @minht11\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now supports an option to enforce custom conventions ([#1900](https://github.com/biomejs/biome/issues/1900)).\n\n  For example, you can enforce the use of a prefix for private class members:\n\n  ```json\n  {\n  \t\"linter\": {\n  \t\t\"rules\": {\n  \t\t\t\"style\": {\n  \t\t\t\t\"useNamingConvention\": {\n  \t\t\t\t\t\"level\": \"error\",\n  \t\t\t\t\t\"options\": {\n  \t\t\t\t\t\t\"conventions\": [\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\t\"selector\": {\n  \t\t\t\t\t\t\t\t\t\"kind\": \"classMember\",\n  \t\t\t\t\t\t\t\t\t\"modifiers\": [\"private\"]\n  \t\t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t\t\"match\": \"_(.*)\",\n                  \"formats\": [\"camelCase\"]\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t]\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n  ```\n\n  Please, find more details in the [rule documentation](https://biomejs.dev/linter/rules/use-naming-convention/#options).\n\n  Contributed by @Conaclos\n\n- Add [nursery/useNumberToFixedDigitsArgument](https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument/).\n  Contributed by @minht11\n\n- Add [nursery/useThrowNewError](https://biomejs.dev/linter/rules/use-throw-new-error/).\n  Contributed by @minht11\n- Add [nursery/useTopLevelRegex](https://biomejs.dev/linter/rules/use-top-level-regex), which enforces defining regular expressions at the top level of a module. [#2148](https://github.com/biomejs/biome/issues/2148) Contributed by @dyc3.\n- Add [nursery/noCssEmptyBlock](https://biomejs.dev/linter/rules/no-css-empty-block). [#2513](https://github.com/biomejs/biome/pull/2513) Contributed by @togami2864\n- Add [nursery/noDuplicateAtImportRules](https://biomejs.dev/linter/rules/no-duplicate-at-import-rules). [#2658](https://github.com/biomejs/biome/pull/2658) Contributed by @DerTimonius\n- Add [nursery/noDuplicateFontNames](https://biomejs.dev/linter/rules/no-duplicate-font-names). [#2308](https://github.com/biomejs/biome/pull/2308) Contributed by @togami2864\n- Add [nursery/noDuplicateSelectorsKeyframeBlock](https://biomejs.dev/linter/rules/no-duplicate-selectors-keyframe-block). [#2534](https://github.com/biomejs/biome/pull/2534) Contributed by @isnakode\n- Add [nursery/noImportantInKeyframe](https://biomejs.dev/linter/rules/no-important-in-keyframe). [#2542](https://github.com/biomejs/biome/pull/2542) Contributed by @isnakode\n- Add [nursery/noInvalidPositionAtImportRule](https://biomejs.dev/linter/rules/no-invalid-position-at-import-rule). [#2717](https://github.com/biomejs/biome/issues/2717) Contributed by @t-shiratori\n- Add [nursery/noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function). [#2570](https://github.com/biomejs/biome/pull/2570) Contributed by @neokidev\n- Add [nursery/noUnknownMediaFeatureName](https://biomejs.dev/linter/rules/no-unknown-media-feature-name). [#2751](https://github.com/biomejs/biome/issues/2751) Contributed by @Kazuhiro-Mimaki\n- Add [nursery/noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property). [#2755](https://github.com/biomejs/biome/pull/2755) Contributed by @chansuke\n- Add [nursery/noUnknownPseudoElement](https://biomejs.dev/linter/rules/no-unknown-selector-pseudo-element). [#2655](https://github.com/biomejs/biome/issues/2655) Contributed by @keita-hino\n- Add [nursery/noUnknownUnit](https://biomejs.dev/linter/rules/no-unknown-unit). [#2535](https://github.com/biomejs/biome/issues/2535) Contributed by @neokidev\n- Add [nursery/noUnmatchableAnbSelector](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector). [#2706](https://github.com/biomejs/biome/issues/2706) Contributed by @togami2864\n- Add [nursery/useGenericFontNames](https://biomejs.dev/linter/rules/use-generic-font-names). [#2573](https://github.com/biomejs/biome/pull/2573) Contributed by @togami2864\n- Add [nursery/noYodaExpression](https://biomejs.dev/linter/rules/no-yoda-expression/). Contributed by @michellocana\n- Add [nursery/noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) Contributed by @printfn\n- Add [nursery/UseSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/). Contributed by @fujiyamaorange\n\n#### Enhancements\n\n- Add a code action for [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/) and improve the diagnostics.\n\n  The rule now suggests using `undefined` instead of `void` in confusing places.\n  The diagnosis is also clearer.\n\n  Contributed by @Conaclos\n- Improve code action for [nursery/noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/) to handle comments.\n\n  The rule now places inline comments after the declaration statement, instead of removing them.\n  The code action is now safe to apply.\n\n  Contributed by @lutaok\n\n- Make [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) report duplicate dependencies. Contributed by @tunamaguro\n\n- Rename `noEvolvingAny` into `noEvolvingTypes` ([#48](https://github.com/biomejs/website/issues/48)). Contributed by @Conaclos\n\n#### Bug fixes\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) and [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) now correctly handle import namespaces ([#2796](https://github.com/biomejs/biome/issues/2796)).\n\n  Previously, Biome bound unqualified type to import namespaces.\n  Import namespaces can only be used as qualified names in a type (ambient) context.\n\n  ```ts\n  // Unused import\n  import * as Ns1 from \"\";\n  // This doesn't reference the import namespace `Ns1`\n  type T1 = Ns1; // Undeclared variable `Ns1`\n\n  // Unused import\n  import type * as Ns2 from \"\";\n  // This doesn't reference the import namespace `Ns2`\n  type T2 = Ns2; // Undeclared variable `Ns2`\n\n  import type * as Ns3 from \"\";\n  // This references the import namespace because it is a qualified name.\n  type T3 = Ns3.Inner;\n  // This also references the import namespace.\n  export type { Ns3 }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now correctly handle ambient computed member names ([#2975](https://github.com/biomejs/biome/issues/2975)).\n\n  A constant can be imported as a type and used in a computed member name of a member signature.\n  Previously, Biome was unable to bind the value imported as a type to the computed member name.\n\n  ```ts\n  import type { NAME } from \"./constants.js\";\n  type X = { [NAME]: number };\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now ignores `this` in JSX components ([#2636](https://github.com/biomejs/biome/issues/2636)).\n\n  The rule no longer reports `this` as undeclared in following code.\n\n  ```jsx\n  import { Component } from 'react';\n\n  export class MyComponent extends Component {\n    render() {\n      return <this.foo />\n    }\n  }\n  ```\n\n  Contributed by @printfn and @Conaclos\n\n- `useJsxKeyInIterable` now handles more cases involving fragments. See the snippets below. Contributed by @dyc3\n```jsx\n// valid\n[].map((item) => {\n\treturn <>{item.condition ? <div key={item.id} /> : <div key={item.id}>foo</div>}</>;\n});\n\n// invalid\n[].map((item) => {\n\treturn <>{item.condition ? <div /> : <div>foo</div>}</>;\n});\n```\n- `noExcessiveNestedTestSuites` no longer erroneously alerts on `describe` calls that are not invoking the global `describe` function. [#2599](https://github.com/biomejs/biome/issues/2599) Contributed by @dyc3\n```js\n// now valid\nz.object({})\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('');\n```\n- `noEmptyBlockStatements` no longer reports empty constructors using typescript parameter properties. [#3005](https://github.com/biomejs/biome/issues/3005) Contributed by @dyc3\n- `noEmptyBlockStatements` no longer reports empty private or protected constructors. Contributed by @dyc3\n\n- [noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test/) rule no longer treats files with in-source testing as test files https://github.com/biomejs/biome/issues/2859. Contributed by @ah-yu\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) now keeps leading and trailing spaces when applying the code action inside template literals:\n\n  ```\n  i Unsafe fix: Sort the classes.\n\n    1 1 │   <>\n    2   │ - → <div·class={`${variable}·px-2·foo·p-4·bar`}/>\n      2 │ + → <div·class={`${variable}·foo·bar·p-4·px-2`}/>\n    3 3 │   \t<div class={`px-2 foo p-4 bar ${variable}`}/>\n    4 4 │   </>\n  ```\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) is correctly triggered when running `biome ci`. Contributed by @ematipico\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer panics when a certain combination of characters is typed. Contributed by @ematipico\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no logger alerts on `arguments` object in a function scope. Contributed by @ah-yu\n### Parser\n\n#### Enhancements\n\n- `lang=\"tsx\"` is now supported in Vue Single File Components. [#2765](https://github.com/biomejs/biome/issues/2765) Contributed by @dyc3\n\n#### Bug fixes\n\n- The `const` modifier for type parameters is now accepted for TypeScript `new` signatures ([#2825](https://github.com/biomejs/biome/issues/2825)).\n\n  The following code is now correctly parsed:\n\n  ```ts\n  interface I {\n    new<const T>(x: T): T\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Some invalid TypeScript syntax caused the Biome parser to crash.\n\n  The following invalid syntax no longer causes the Biome parser to crash:\n\n  ```ts\n  declare using x: null;\n  declare qwait using x: null;\n  ```\n\n  Contributed by @Conaclos\n\n## 1.7.3 (2024-05-06)\n\n### CLI\n\n#### Bug fixes\n\n- The [stdin-file-path](https://biomejs.dev/guides/integrate-in-editor/#use-stdin) option now works correctly for Astro/Svelte/Vue files ([#2686](https://github.com/biomejs/biome/pull/2686))\n\n  Fix [#2225](https://github.com/biomejs/biome/issues/2225) where lint output become empty for Vue files.\n\n  Contributed by @tasshi-me\n\n- `biome migrate eslint` now correctly resolve `@scope/eslint-config` ([#2705](https://github.com/biomejs/biome/issues/2705)). Contributed by @Conaclos\n\n### Linter\n\n#### New features\n\n- Add [nursery/noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/).\n- Add [nursery/useExplicitLengthCheck](https://biomejs.dev/linter/rules/use-explicit-length-check/). Contributed by @minht11\n\n- `useExhaustiveDependencies` now recognizes (some) dependencies that change on\n  every render ([#2374](https://github.com/biomejs/biome/issues/2374)).\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- [noBlankTarget](https://biomejs.dev/linter/rules/no-blank-target/) no longer hangs when applying a code fix ([#2675](https://github.com/biomejs/biome/issues/2675)).\n\n  Previously, the following code made Biome hangs when applying a code fix.\n\n  ```jsx\n  <a href=\"https://example.com\" rel=\"\" target=\"_blank\"></a>\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer panics on conditional type ([#2659](https://github.com/biomejs/biome/issues/2659)).\n\n  This is a regression introduced by [#2394](https://github.com/biomejs/biome/issues/2394).\n  This regression makes `noRedeclare` panics on every conditional types with `infer` bindings.\n\n  Contributed by @Conaclos\n\n- [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels/) and [noConfusingLabels](https://biomejs.dev/linter/rules/no-confusing-labels/) now ignore svelte reactive statements ([#2571](https://github.com/biomejs/biome/issues/2571)).\n\n  The rules now ignore reactive Svelte blocks in Svelte components.\n\n  ```svelte\n  <script>\n  $: { /* reactive block */ }\n  </script>\n  ```\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) no longer removes leading comments ([#2685](https://github.com/biomejs/biome/issues/2685)).\n\n  Previously, `useExportType` removed leading comments when it factorized the `type` qualifier.\n  It now provides a code fix that preserves the leading comments:\n\n  ```diff\n  - export {\n  + export type {\n      /**leading comment*/\n  -   type T\n  +   T\n    }\n  ```\n\n  Contributed by @Conaclos\n\n- [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable/) no longer reports false positive when iterating on non-jsx items ([#2590](https://github.com/biomejs/biome/issues/2590)).\n\n  The following snipet of code no longer triggers the rule:\n\n  ```jsx\n  <>{data.reduce((total, next) => total + next, 0)}</>\n  ```\n\n  Contributed by @dyc3\n\n- Fix typo by renaming `useConsistentBuiltinInstatiation` to `useConsistentBuiltinInstantiation`\n  Contributed by @minht11\n- Fix the rule `useSingleCaseStatement` including `break` statements when counting the number of statements in a `switch` statement (#2696)\n\n\n## 1.7.2 (2024-04-30)\n\n### Analyzer\n\n#### Bug fixes\n\n- Import sorting now ignores side effect imports ([#817](https://github.com/biomejs/biome/issues/817)).\n\n  A side effect import consists now in its own group.\n  This ensures that side effect imports are not reordered.\n\n  Here is an example of how imports are now sorted:\n\n  ```diff\n    import \"z\"\n  - import { D } from \"d\";\n    import { C } from \"c\";\n  + import { D } from \"d\";\n    import \"y\"\n    import \"x\"\n  - import { B } from \"b\";\n    import { A } from \"a\";\n  + import { B } from \"b\";\n    import \"w\"\n  ```\n\n  Contributed by @Conaclos\n\n- Import sorting now adds spaces where needed ([#1665](https://github.com/biomejs/biome/issues/1665))\n  Contributed by @Conaclos\n\n### CLI\n\n#### Bug fixes\n\n- `biome migrate eslint` now handles cyclic references.\n\n  Some plugins and configurations export objects with cyclic references.\n  This causes `biome migrate eslint` to fail or ignore them.\n  These edge cases are now handled correctly.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### Bug fixes\n\n- Correctly handle placement of comments inside named import clauses. [#2566](https://github.com/biomejs/biome/pull/2566). Contributed by @ah-yu\n\n### Linter\n\n#### New features\n\n- Add [nursery/noReactSpecificProps](https://biomejs.dev/linter/rules/no-react-specific-props/).\n  Contributed by @marvin-j97\n\n- Add [noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/).\n  Contributed by @lutaok\n\n- Add [nursery/useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/).\n  Contributed by @Kazuhiro-Mimaki\n\n- Add [nursery/useConsistentBuiltinInstatiation](https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation/).\n  Contributed by @minht11\n\n- Add [nursery/useDefaultSwitchClause](https://biomejs.dev/linter/rules/use-default-switch-clause/).\n  Contributed by @michellocana\n\n#### Bug fixes\n\n- [noDuplicateJsonKeys](https://biomejs.dev/linter/rules/no-duplicate-json-keys/) no longer crashes when a JSON file contains an unterminated string ([#2357](https://github.com/biomejs/biome/issues/2357)).\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) now reports redeclarations of parameters in a functions body ([#2394](https://github.com/biomejs/biome/issues/2394)).\n\n  The rule was unable to detect redeclarations of a parameter or a type parameter in the function body.\n  The following two redeclarations are now reported:\n\n  ```ts\n  function f<T>(a) {\n    type T = number; // redeclaration\n    const a = 0; // redeclaration\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer reports overloads in object types ([#2608](https://github.com/biomejs/biome/issues/2608)).\n\n  The rule no longer report redeclarations in the following code:\n\n  ```ts\n  type Overloads = {\n    ({ a }: { a: number }): number,\n    ({ a }: { a: string }): string,\n  };\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) now merge default function export declarations and types ([#2372](https://github.com/biomejs/biome/issues/2372)).\n\n  The following code is no longer reported as a redeclaration:\n\n  ```ts\n  interface Foo {}\n  export default function Foo() {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no longer reports variable-only and type-only exports ([#2637](https://github.com/biomejs/biome/issues/2637)).\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer crash Biome when encountering a malformed conditional type ([#1695](https://github.com/biomejs/biome/issues/1695)).\n  Contributed by @Conaclos\n\n- [useConst](https://biomejs.dev/linter/rules/use-const/) now ignores a variable that is read before its assignment.\n\n  Previously, the rule reported the following example:\n\n  ```js\n  let x;\n  x; // read\n  x = 0; // write\n  ```\n\n  It is now correctly ignored.\n\n  Contributed by @Conaclos\n\n- [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type/) now suggests correct code fixes when parentheses are required ([#2595](https://github.com/biomejs/biome/issues/2595)).\n\n  Previously, the rule didn't add parentheses when they were needed.\n  It now adds parentheses when the function signature is inside an array, a union, or an intersection.\n\n  ```diff\n  - type Union = { (): number } | string;\n  + type Union = (() => number) | string;\n  ```\n\n  Contributed by @Conaclos\n\n- [useTemplate](https://biomejs.dev/linter/rules/use-template/) now correctly escapes strings ([#2580](https://github.com/biomejs/biome/issues/2580)).\n\n  Previously, the rule didn't correctly escape characters preceded by an escaped character.\n\n  Contributed by @Conaclos\n\n- [noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/) now allow these matchers\n\n  - `expect.any()`\n  - `expect.anything()`\n  - `expect.closeTo`\n  - `expect.arrayContaining`\n  - `expect.objectContaining`\n  - `expect.stringContaining`\n  - `expect.stringMatching`\n  - `expect.extend`\n  - `expect.addEqualityTesters`\n  - `expect.addSnapshotSerializer`\n\n  Contributed by @fujiyamaorange\n\n### Parser\n\n#### Bug fixes\n\n- The language parsers no longer panic on unterminated strings followed by a newline and a space ([#2606](https://github.com/biomejs/biome/issues/2606), [#2410](https://github.com/biomejs/biome/issues/2410)).\n\n  The following example is now parsed without making Biome panics:\n\n  ```\n  \"\n   \"\n  ```\n\n  Contributed by @Conaclos\n\n\n## 1.7.1 (2024-04-22)\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#2403](https://github.com/biomejs/biome/issues/2403) by printing the errors in the client console. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Add parentheses for the return expression that has leading multiline comments. [#2504](https://github.com/biomejs/biome/pull/2504). Contributed by @ah-yu\n\n- Correctly format dangling comments of continue statements. [#2555](https://github.com/biomejs/biome/pull/2555). Contributed by @ah-yu\n\n- Prevent comments from being eaten by the formatter [#2578](https://github.com/biomejs/biome/pull/2578). Now the comments won't be eaten for the following code:\n  ```js\n  console.log((a,b/* comment */));\n  ```\n  Contributed by @ah-yu\n\n- Correctly format nested union type to avoid reformatting issue. [#2628](https://github.com/biomejs/biome/pull/2628). Contributed by @ah-yu\n\n### Linter\n\n#### Bug fixes\n\n- Fix case where `jsxRuntime` wasn't being respected by `useImportType` rule ([#2473](https://github.com/biomejs/biome/issues/2473)).Contributed by @arendjr\n- Fix [#2460](https://github.com/biomejs/biome/issues/2460), where the rule `noUselessFragments` was crashing the linter in some cases. Now cases like these are correctly handled:\n  ```jsx\n  callFunction(<>{bar}</>)\n  ```\n  Contributed by @ematipico\n- Fix [#2366](https://github.com/biomejs/biome/issues/2366), where `noDuplicateJsonKeys` incorrectly computed the kes to highlight. Contributed by @ematipico\n#### Enhancements\n\n- The rule `noMisplacedAssertions` now considers valid calling `expect` inside `waitFor`:\n  ```js\n  import { waitFor } from '@testing-library/react';\n\n  await waitFor(() => {\n    expect(111).toBe(222);\n  });\n  ```\n  Contributed by @ematipico\n\n\n## 1.7.0 (2024-04-15)\n\n### Analyzer\n\n#### Bug fixes\n\n- Now Biome can detect the script language in Svelte and Vue script blocks more reliably ([#2245](https://github.com/biomejs/biome/issues/2245)). Contributed by @Sec-ant\n\n- `useExhaustiveDependencies` no longer reports recursive calls as missing\n  dependencies ([#2361](https://github.com/biomejs/biome/issues/2361)).\n  Contributed by @arendjr\n\n- `useExhaustiveDependencies` correctly reports missing dependencies declared\n  using function declarations ([#2362](https://github.com/biomejs/biome/issues/2362)).\n  Contributed by @arendjr\n\n- Biome now can handle `.svelte` and `.vue` files with `CRLF` as the end-of-line sequence. Contributed by @Sec-ant\n\n- `noMisplacedAssertion` no longer reports method calls by `describe`, `test`, `it` objects (e.g. `test.each([])()`) ([#2443](https://github.com/biomejs/biome/issues/2443)). Contributed by @unvalley.\n\n- Biome now can handle `.vue` files with [generic components](https://vuejs.org/api/sfc-script-setup#generics) ([#2456](https://github.com/biomejs/biome/issues/2456)).\n  ```vue\n  <script generic=\"T extends Record<string, any>\" lang=\"ts\" setup>\n  //...\n  </script>\n  ```\n  Contributed by @Sec-ant\n\n#### Enhancements\n\n- Complete the well-known file lists for JSON-like files. Trailing commas are allowed in `.jsonc` files by default. Some well-known files like `tsconfig.json` and `.babelrc` don't use the `.jsonc` extension but still allow comments and trailing commas. While others, such as `.eslintrc.json`, only allow comments. Biome is able to identify these files and adjusts the `json.parser.allowTrailingCommas` option accordingly to ensure they are correctly parsed. Contributed by @Sec-ant\n\n- Fix dedent logic inconsistent with prettier where the indent-style is space and the indent-width is not 2. Contributed by @mdm317\n\n### CLI\n\n#### New features\n\n- Add a command to migrate from ESLint\n\n  `biome migrate eslint` allows you to migrate an ESLint configuration to Biome.\n  The command supports [legacy ESLint configurations](https://eslint.org/docs/latest/use/configure/configuration-files) and [new flat ESLint configurations](https://eslint.org/docs/latest/use/configure/configuration-files-new).\n  Legacy ESLint configurations using the YAML format are not supported.\n\n  When loading a legacy ESLint configuration, Biome resolves the `extends` field.\n  It resolves both shared configurations and plugin presets!\n  To do this, it invokes _Node.js_.\n\n  Biome relies on the metadata of its rules to determine the [equivalent rule of an ESLint rule](https://biomejs.dev/linter/rules-sources/).\n  A Biome rule is either inspired or roughly identical to an ESLint rules.\n  By default, inspired and nursery rules are excluded from the migration.\n  You can use the CLI flags `--include-inspired` and `--include-nursery` to migrate them as well.\n\n  Note that this is a best-effort approach.\n  You are not guaranteed to get the same behavior as ESLint.\n\n  Given the following ESLint configuration:\n\n  ```json\n  {\n        \"ignore_patterns\": [\"**/*.test.js\"],\n        \"globals\": { \"var2\": \"readonly\" },\n        \"rules\": {\n            \"eqeqeq\": \"error\"\n        },\n        \"overrides\": [{\n            \"files\": [\"lib/*.js\"],\n            \"rules\": {\n              \"default-param-last\": \"off\"\n            }\n        }]\n  }\n  ```\n\n  `biome migrate eslint --write` changes the Biome configuration as follows:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"recommended\": false,\n        \"suspicious\": {\n          \"noDoubleEquals\": \"error\"\n        }\n      }\n    },\n    \"javascript\": { \"globals\": [\"var2\"] },\n    \"overrides\": [{\n      \"include\": [\"lib/*.js\"],\n      \"linter\": {\n        \"rules\": {\n          \"style\": {\n            \"useDefaultParameterLast\": \"off\"\n          }\n        }\n      }\n    }]\n  }\n  ```\n\n  Also, if the working directory contains `.eslintignore`, then Biome migrates the glob patterns.\n  Nested `.eslintignore` in subdirectories and negated glob patterns are not supported.\n\n  If you find any issue, please don't hesitate to report them.\n\n  Contributed by @Conaclos\n\n- Added two new options to customise the emitted output of the CLI: `--reporter=json` and `--reporter=json-pretty`. With `--reporter=json`, the diagnostics and the\n  summary will be printed in the **terminal** in JSON format. With `--reporter=json-pretty`, you can print the same information, but formatted using the same options of your configuration.\n\n  NOTE: the shape of the JSON is considered experimental, and the shape of the JSON might change in the future.\n\n  <details>\n  <summary>Example of output when running `biome format` command</summary>\n  ```json\n  {\n    \"summary\": {\n      \"changed\": 0,\n      \"unchanged\": 1,\n      \"errors\": 1,\n      \"warnings\": 0,\n      \"skipped\": 0,\n      \"suggestedFixesSkipped\": 0,\n      \"diagnosticsNotPrinted\": 0\n    },\n    \"diagnostics\": [\n      {\n        \"category\": \"format\",\n        \"severity\": \"error\",\n        \"description\": \"Formatter would have printed the following content:\",\n        \"message\": [\n          {\n            \"elements\": [],\n            \"content\": \"Formatter would have printed the following content:\"\n          }\n        ],\n        \"advices\": {\n          \"advices\": [\n            {\n              \"diff\": {\n                \"dictionary\": \"  statement();\\n\",\n                \"ops\": [\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"equal\": { \"range\": [2, 12] } } },\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"equal\": { \"range\": [12, 13] } } },\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"insert\": { \"range\": [13, 15] } } }\n                ]\n              }\n            }\n          ]\n        },\n        \"verboseAdvices\": { \"advices\": [] },\n        \"location\": {\n          \"path\": { \"file\": \"format.js\" },\n          \"span\": null,\n          \"sourceCode\": null\n        },\n        \"tags\": [],\n        \"source\": null\n      }\n    ],\n    \"command\": \"format\"\n  }\n  ```\n  </details>\n\n- Added new `--staged` flag to the `check`, `format` and `lint` subcommands.\n\n  This new option allows users to apply the command _only_ to the files that are staged (the\n  ones that will be committed), which can be very useful to simplify writing git hook scripts\n  such as `pre-commit`. Contributed by @castarco\n\n#### Enhancements\n\n- Improve support of `.prettierignore` when migrating from Prettier\n\n  Now, Biome translates most of the glob patterns in `.prettierignore` to the equivalent Biome ignore pattern.\n  Only negated glob patterns are not supported.\n\n  Contributed by @Conaclos\n\n- Support JavaScript configuration files when migrating from Prettier\n\n  `biome migrate prettier` is now able to migrate Prettier configuration files\n  ending with `js`, `mjs`, or `cjs` extensions.\n  To do this, Biome invokes Node.js.\n\n  Also, embedded Prettier configurations in `package.json` are now supported.\n\n  Contributed by @Conaclos\n\n- Support `overrides` field in Prettier configuration files when migrating from Prettier.\n  Contributed by @Conaclos\n\n- Support passing a file path to the `--config-path` flag or the `BIOME_CONFIG_PATH` environment variable.\n\n  Now you can pass a `.json`/`.jsonc` file path with any filename to the `--config-path` flag or the\n  `BIOME_CONFIG_PATH` environment variable. This will disable the configuration auto-resolution and Biome\n  will try to read the configuration from the said file path ([#2265](https://github.com/biomejs/biome/issues/2265)).\n\n  ```shell\n  biome format --config-path=../biome.json ./src\n  ```\n\n  Contributed by @Sec-ant\n\n#### Bug fixes\n\n- Biome now tags the diagnostics emitted by `organizeImports` and `formatter` with correct severity levels, so they will be properly filtered by the flag `--diagnostic-level` ([#2288](https://github.com/biomejs/biome/issues/2288)). Contributed by @Sec-ant\n\n- Biome now correctly filters out files that are not present in the current directory when using the `--changed` flag [#1996](https://github.com/biomejs/biome/issues/1996). Contributed by @castarco\n\n- Biome now skips traversing `fifo` or `socket` files ([#2311](https://github.com/biomejs/biome/issues/2311)). Contributed by @Sec-ant\n\n- Biome now resolves configuration files exported from external libraries in `extends` from the working directory (CLI) or project root (LSP). This is the documented behavior and previous resolution behavior is considered as a bug ([#2231](https://github.com/biomejs/biome/issues/2231)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Now setting group level `all` to `false` can disable recommended rules from that group when top level `recommended` is `true` or unset. Contributed by @Sec-ant\n\n- Biome configuration files can correctly extends `.jsonc` configuration files now ([#2279](https://github.com/biomejs/biome/issues/2279)). Contributed by @Sec-ant\n\n- Fixed the JSON schema for React hooks configuration ([#2396](https://github.com/biomejs/biome/issues/2396)). Contributed by @arendjr\n\n#### Enhancements\n\n- Biome now displays the location of a parsing error for its configuration file ([#1627](https://github.com/biomejs/biome/issues/1627)).\n\n  Previously, when Biome encountered a parsing error in its configuration file,\n  it didn't indicate the location of the error.\n  It now displays the name of the configuration file and the range where the error occurred.\n\n  Contributed by @Conaclos\n\n- `options` is no longer required for rules without any options ([#2313](https://github.com/biomejs/biome/issues/2313)).\n\n  Previously, the JSON schema required to set `options` to `null` when an object is used to set the diagnostic level of a rule without any option.\n  However, if `options` is set to `null`, Biome emits an error.\n\n  The schema is now fixed and it no longer requires specifying `options`.\n  This makes the following configuration valid:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"style\": {\n          \"noDefaultExport\": {\n            \"level\": \"off\"\n          }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n### Editors\n\n#### Bug fixes\n\n- Biome extension is now able to parse the JSX syntax in files that associated with the `javascript` [language identifier](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentItem). This is an ad hoc fix, because [in the React world, `.js` files are allowed to include JSX syntax](https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904), and these files are often associated with the `javascript` language identifier in most of the editors. Plus, [some editor extensions](https://github.com/michaelgmcd/vscode-language-babel/blob/8b3a472748ad07c99dc022b66795c9eb46be4ccb/package.json#L63-L80) will also associate `.jsx` files with the `javascript` language identifier. Relative links: [discussion](https://github.com/biomejs/biome/discussions/838#discussioncomment-9047539), [#2085](https://github.com/biomejs/biome/issues/2085). Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2291](https://github.com/biomejs/biome/issues/2291) by correctly handle comment placement for JSX spread attributes and JSX spread children. Contributed by @ah-yu\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [complecity/noExcessiveNestedTestSuites](https://biomejs.dev/linter/rules/no-excessive-nested-test-suites)\n- [complexity/noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary)\n- [correctness/useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable)\n- [performance/noBarrelFile](https://biomejs.dev/linter/rules/no-barrel-file/)\n- [performance/noReExportAll](https://biomejs.dev/linter/rules/no-re-export-all/)\n- [style/noNamespaceImport](https://biomejs.dev/linter/rules/no-namespace-import/)\n- [style/useNodeAssertStrict](https://biomejs.dev/linter/rules/use-node-assert-strict/)\n- [suspicious/noDuplicateTestHooks](https://biomejs.dev/linter/rules/no-duplicate-test-hooks/)\n- [suspicious/noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test/)\n- [suspicious/noFocusedTests](https://biomejs.dev/linter/rules/no-focused-tests/)\n- [suspicious/noSkippedTests](https://biomejs.dev/linter/rules/no-skipped-tests/)\n- [suspicious/noSuspiciousSemicolonInJsx](https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx)\n\n#### New features\n\n- Add a new option `jsxRuntime` to the `javascript` configuration. When set to `reactClassic`, the [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) and [useImportType](https://biomejs.dev/linter/rules/use-import-type) rules use this information to make exceptions for the React global that is required by the React Classic JSX transform.\n\n  This is only necessary for React users who haven't upgraded to the [new JSX transform](https://legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html).\n\n  Contributed by @Conaclos and @arendjr\n\n- Implement [#2043](https://github.com/biomejs/biome/issues/2043): The React rule [`useExhaustiveDependencies`](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) is now also compatible with Preact hooks imported from `preact/hooks` or `preact/compat`. Contributed by @arendjr\n\n- Add rule [noFlatMapIdentity](https://biomejs.dev/linter/rules/no-flat-map-identity) to disallow unnecessary callback use on `flatMap`. Contributed by @isnakode\n\n- Add rule [noConstantMathMinMaxClamp](https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp), which disallows using `Math.min` and `Math.max` to clamp a value where the result itself is constant. Contributed by @mgomulak\n\n#### Enhancements\n\n- [style/useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention/) now allows prefixing a filename with `+` ([#2341](https://github.com/biomejs/biome/issues/2341)).\n\n  This is a convention used by [Sveltekit](https://kit.svelte.dev/docs/routing#page) and [Vike](https://vike.dev/route).\n\n  Contributed by @Conaclos\n\n- [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts `PascalCase` for local and top-level variables.\n\n  This allows supporting local variables that hold a component or a regular class.\n  The following code is now accepted:\n\n  ```tsx\n  function loadComponent() {\n    const Component = getComponent();\n    return <Component />;\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [complexity/useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) no longer report computed properties named `__proto__` ([#2430](https://github.com/biomejs/biome/issues/2430)).\n\n  In JavaScript, `{[\"__proto__\"]: null}` and `{__proto__: null}` have not the same semantic.\n  The first code set a regular property to `null`.\n  The second one set the prototype of the object to `null`.\n  See the [MDN Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto) for more details.\n\n  The rule now ignores computed properties named `__proto__`.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Lint rules `useNodejsImportProtocol`, `useNodeAssertStrict`, `noRestrictedImports`, `noNodejsModules` will no longer check `declare module` statements anymore. Contributed by @Sec-ant\n\n- [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts any case for variables from object destructuring ([#2332](https://github.com/biomejs/biome/issues/2332)).\n\n  The following name is now ignored:\n\n  ```js\n  const { Strange_Style } = obj;\n  ```\n\n  Previously, the rule renamed this variable. This led to a runtime error.\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- Fixed an issue when Unicode surrogate pairs were encoded in JavaScript strings\n  using an escape sequence ([#2384](https://github.com/biomejs/biome/issues/2384)).\n  Contributed by @arendjr\n\n\n## 1.6.4 (2024-04-03)\n\n### Analyzer\n\n#### Bug fixes\n\n- An operator with no spaces around in a binary expression no longer breaks the js analyzer ([#2243](https://github.com/biomejs/biome/issues/2243)). Contributed by @Sec-ant\n\n### CLI\n\n#### Bug fixes\n\n- Fix the printed error count ([#2048](https://github.com/biomejs/biome/issues/2048)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Correctly calculate enabled rules in lint rule groups. Now a specific rule belonging to a group can be enabled even if its group-level preset option `recommended` or `all` is `false` ([#2191](https://github.com/biomejs/biome/issues/2191)). Contributed by @Sec-ant\n\n### Editors\n\n#### Bug fixes\n\n- Fix the unexpected code deletion and repetition when `quickfix.biome` is enabled and some `import`-related rules are applied ([#2222](https://github.com/biomejs/biome/issues/2222), [#688](https://github.com/biomejs/biome/issues/688), [#1015](https://github.com/biomejs/biome/issues/1015)). Contributed by @Sec-ant\n\n### Linter\n\n#### New features\n\n- Add [nursery/noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/). COntributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#2211](https://github.com/biomejs/biome/issues/2211). noChildrenProp should work fine when children pass as a prop in a new line. Contributed by @fireairforce\n\n- Fix [#2248](https://github.com/biomejs/biome/issues/2248). `lint/a11y/useButtonType` should not trigger when button element with spread attribute. Contributed by @fireairforce\n\n- Fix [#2216](https://github.com/biomejs/biome/issues/2216). `lint/style/useNamingConvention` should not ignore JSX Component name binding. Contributed by @fireairforce\n\n#### Enhancements\n\n- Add support for object property members in the rule `useSortedClasses`. Contributed by @ematipico\n\n### Parser\n\n- The parser doesn't throw any error when the frontmatter of `.astro` files contains an illegal return:\n\n  ```astro\n  ---\n  const condition = true;\n  if (condition) {\n    return \"Something\";\n  }\n  ---\n  <div></div>\n  ```\n  Contributed by @ematipico\n\n## 1.6.3 (2024-03-25)\n\n### CLI\n\n#### Bug fixes\n\n- Fix configuration resolution. Biome is now able to correctly find the `biome.jsonc` configuration file when `--config-path` is explicitly set ([#2164](https://github.com/biomejs/biome/issues/2164)). Contributed by @Sec-ant\n\n- JavaScript/TypeScript files of different variants (`.ts`, `.js`, `.tsx`, `.jsx`) in a single workspace now have stable formatting behaviors when running the CLI command in paths of different nested levels or in different operating systems ([#2080](https://github.com/biomejs/biome/issues/2080), [#2109](https://github.com/biomejs/biome/issues/2109)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Complete the documentation and overrides support for options `formatter.lineEnding`, `[language].formatter.lineEnding`, `formatter.attributePosition` and `javascript.formatter.attributePosition`. Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2172](https://github.com/biomejs/biome/issues/2172) by breaking long object destructuring patterns. Contributed by @ah-yu\n\n### Linter\n\n#### New features\n\n- Add rule [noEvolvingTypes](https://biomejs.dev/linter/rules/no-evolving-any) to disallow variables from evolving into `any` type through reassignments. Contributed by @fujiyamaorange\n\n#### Enhancements\n\n- Rename `noSemicolonInJsx` to `noSuspiciousSemicolonInJsx`. Contributed by @fujiyamaorange\n\n### LSP\n\n#### Bug fixes\n\n- Quickfix action no longer autofixes lint rule errors on save when `linter` is disabled ([#2161](https://github.com/biomejs/biome/issues/2161)). Contributed by @Sec-ant\n- Range formatting for Astro/Svelte/Vue doesn't place code out of place, especially when formatting on paste is enabled. Contributed by @ematipico\n\n## 1.6.2 (2024-03-22)\n\n### Analyzer\n\n#### Bug fixes\n\n- The `noSuperWithoutExtends` rule now allows for calling `super()` in derived class constructors of class expressions ([#2108](https://github.com/biomejs/biome/issues/2108)). Contributed by @Sec-ant\n\n- Fix discrepancies on file source detection. Allow module syntax in `.cts` files ([#2114](https://github.com/biomejs/biome/issues/2114)). Contributed by @Sec-ant\n\n### CLI\n\n#### Bug fixes\n\n- Fixes [#2131](https://github.com/biomejs/biome/issues/2131), where folders were incorrectly ignored when running the command `check`. Now folders are correctly ignored based on their command. Contributed by @ematipico\n\n- Smoother handling of `\"endOfLine\": \"auto\"` in prettier migration: falling back to `\"lf\"` ([#2145](https://github.com/biomejs/biome/pull/2145)). Contributed by @eMerzh\n\n### Configuration\n\n#### Bug fixes\n\n- Fix enabled rules calculation. The precendence of individual rules, `all` and `recommend` presets in top-level and group-level configs is now correctly respected. More details can be seen in ([#2072](https://github.com/biomejs/biome/pull/2072)) ([#2028](https://github.com/biomejs/biome/issues/2028)). Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1661](https://github.com/biomejs/biome/issues/1661). Now nested conditionals are aligned with Prettier's logic, and won't contain mixed spaces and tabs. Contributed by @ematipico\n\n### JavaScript APIs\n\n#### Enhancements\n\n- Support applying lint fixes when calling the `lintContent` method of the `Biome` class ([#1956](https://github.com/biomejs/biome/pull/1956)). Contributed by @mnahkies\n\n### Linter\n\n#### New features\n\n- Add [nursery/noDuplicateElseIf](https://biomejs.dev/linter/rules/no-duplicate-else-if/). COntributed by @mdm317\n\n#### Bug fixes\n\n- Rule `noUndeclaredDependencies` now also validates `peerDependencies` and `optionalDependencies` ([#2122](https://github.com/biomejs/biome/issues/2122)). Contributed by @Sec-ant\n\n- Rule `noUndeclaredDependencies` won't check `declare module` statements anymore ([#2123](https://github.com/biomejs/biome/issues/2123)). Contributed by @Sec-ant\n\n- Fix [#1925](https://github.com/biomejs/biome/issues/1925). The fix for `useOptionalChain` would sometimes suggest an incorrect fix that discarded optional chaining operators on the left-hand side of logical expressions. These are now preserved. Contributed by @arendjr\n\n- Rule `noUndeclaredVariables` now also checks for worker globals ([#2121](https://github.com/biomejs/biome/issues/2121)). Contributed by @Sec-ant\n\n### LSP\n\n#### Bug fixes\n\n- Correctly parse `.jsonc` files. Contributed by @Sec-ant\n\n- Correctly resolve external `extends` configs. Contributed by @Sec-ant\n\n## 1.6.1 (2024-03-12)\n\n### CLI\n\n#### Bug fixes\n\n- CLI is now able to automatically search and resolve `biome.jsonc` ([#2008](https://github.com/biomejs/biome/issues/2008)). Contributed by @Sec-ant\n- Fix a false positive where some files were counted as \"fixed\" even though they weren't modified. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n\n- `json.formatter.trailingCommas` option now works in `overrides` ([#2009](https://github.com/biomejs/biome/issues/2009)). Contributed by @Sec-ant\n\n### Linter\n\n#### New features\n\n- Add rule [noDoneCallback](https://biomejs.dev/linter/rules/no-done-callback), this rule checks the function parameter of hooks & tests\n  for use of the done argument, suggesting you return a promise instead. Contributed by @vasucp1207\n\n  ```js\n  beforeEach(done => {\n    // ...\n  });\n  ```\n\n#### Bug fixes\n\n- [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable) now recognizes function bodies wrapped in parentheses ([#2011](https://github.com/biomejs/biome/issues/2011)). Contributed by @Sec-ant\n\n- [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type) now preserves type parameters of generic interfaces when applying fixes ([#2015](https://github.com/biomejs/biome/issues/2015)). Contributed by @Sec-ant\n\n- Code fixes of [useImportType](https://biomejs.dev/linter/rules/use-import-type) and [useExportType](https://biomejs.dev/linter/rules/use-export-type) now handle multiline statements ([#2041](https://github.com/biomejs/biome/issues/2041)). Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) no longer reports type parameter and parameter with identical names ([#1992](https://github.com/biomejs/biome/issues/1992)).\n\n  The following code is no longer reported:\n\n  ```ts\n  function f<a>(a: a) {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) now reports duplicate type parameters in a same declaration.\n\n  The following type parameters are now reported as a redeclaration:\n\n  ```ts\n  function f<T, T>() {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now recognizes imports of subpath exports.\n\n  E.g., the following import statements no longer report errors if `@mui/material` and `tailwindcss` are installed as dependencies:\n\n  ```ts\n  import Button from \"@mui/material/Button\";\n  import { fontFamily } from \"tailwindcss/defaultTheme\";\n  ```\n\n  Contributed by @Sec-ant\n\n### Parser\n\n#### Bug fixes\n\n- JavaScript lexer is now able to lex regular expression literals with escaped non-ascii chars ([#1941](https://github.com/biomejs/biome/issues/1941)).\n\n  Contributed by @Sec-ant\n\n## 1.6.0 (2024-03-08)\n\n### Analyzer\n\n#### New features\n\n- Add partial for `.astro` files. Biome is able to sort imports inside the frontmatter of the Astro files. Contributed\n  by @ematipico\n\n  ```diff\n  ---\n  - import { getLocale } from \"astro:i18n\";\n  - import { Code } from \"astro:components\";\n  + import { Code } from \"astro:components\";\n  + import { getLocale } from \"astro:i18n\";\n  ---\n\n  <div></div>\n  ```\n- Add partial for `.vue` files. Biome is able to sort imports inside the script block of Vue files. Contributed by\n  @nhedger\n\n  ```diff\n  <script setup lang=\"ts\">\n  - import Button from \"./components/Button.vue\";\n  - import * as vueUse from \"vue-use\";\n  + import * as vueUse from \"vue-use\";\n  + import Button from \"./components/Button.vue\";\n  </script/>\n\n  <template></template>\n  ```\n\n- Add partial for `.svelte` files. Biome is able to sort imports inside the script block of Svelte files. Contributed by\n  @ematipico\n\n  ```diff\n  <script setup lang=\"ts\">\n  - import Button from \"./components/Button.svelte\";\n  - import * as svelteUse from \"svelte-use\";\n  + import * as svelteUse from \"svelte-use\";\n  + import Button from \"./components/Button.svelte\";\n  </script/>\n\n  <div></div>\n  ```\n\n- The analyzer now **infers** the correct quote from `javascript.formatter.quoteStyle`, if set. This means that code fixes suggested by the analyzer will use the same quote of the formatter. Contributed by @ematipico\n\n#### Enhancements\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) ignores unused rest spread siblings.\n\n  The following code is now valid:\n\n  ```js\n  const { a, ...rest } = { a: 0, b: 1 };\n  console.log(rest);\n  ```\n\n  Contributed by @ah-yu\n\n- Fix [#1931](https://github.com/biomejs/biome/issues/1931). Built-in React hooks such as\n  `useEffect()` can now be validated by the\n  [`useExhaustiveDependendies`](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/), even\n  when they're not being imported from the React library. To do so, simply configure them like\n  any other user-provided hooks.\n\n  Contributed by @arendjr\n\n- Implemented [#1128](https://github.com/biomejs/biome/issues/1128). User-provided React hooks can\n  now be configured to track stable results. For example:\n\n  ```json\n  \"useExhaustiveDependencies\": {\n      \"level\": \"error\",\n      \"options\": {\n          \"hooks\": [{\n              \"name\": \"useMyState\",\n              \"stableResult\": [\n                  1\n              ]\n          }]\n      }\n  }\n  ```\n\n  This will allow the following to be validated:\n\n  ```js\n  const [myState, setMyState] = useMyState();\n  const toggleMyState = useCallback(() => {\n    setMyState(!myState);\n  }, [myState]); // Only `myState` needs to be specified here.\n  ```\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#1748](https://github.com/biomejs/biome/issues/1748). Now for the following case we won't provide an unsafe fix\n  for the `noNonNullAssertion` rule:\n\n  ```ts\n  x[y.z!];\n  ```\n\n  Contributed by @ah-yu\n\n- Imports that contain the protocol `:` are now sorted after the `npm:` modules, and before the `URL` modules.\n  Contributed by @ematipico\n\n  ```diff\n  import express from \"npm:express\";\n  - import Component from \"./component.js\"\n  - import { sortBy } from \"virtual:utils\";\n  + import { sortBy } from \"virtual:utils\";\n  + import Component from \"./component.js\"\n  ```\n\n- Fix [#1081](https://github.com/biomejs/biome/issues/1081). The `useAwait` rule does not report `for await...of`.\n  Contributed by @unvalley\n\n- Fix [#1827](https://github.com/biomejs/biome/issues/1827) by properly analyzing nested `try-finally` statements. Contributed by @ah-yu\n\n- Fix [#1924](https://github.com/biomejs/biome/issues/1924) Use the correct export name to sort in the import clause. Contributed by @ah-yu\n- Fix [#1805](https://github.com/biomejs/biome/issues/1805) fix formatting arrow function which has conditional expression body  Contributed by @mdm317\n\n- Fix [#1781](https://github.com/biomejs/biome/issues/1781) by avoiding the retrieval of the entire static member expression for the reference if the static member expression does not start with the reference. Contributed by @ah-yu\n\n### CLI\n\n#### New features\n\n- Add a new command `biome migrate prettier`. The command will read the file `.prettierrc`/`prettier.json`\n  and `.prettierignore` and map its configuration to Biome's one.\n  Due to the different nature of `.prettierignore` globs and Biome's globs, it's **highly** advised to make sure that\n  those still work under Biome.\n\n- Now the file name printed in the diagnostics is clickable. If you run the CLI from your editor, you can <kbd>\n  Ctrl</kbd>/<kbd title=\"Cmd\">⌘</kbd> + Click on the file name, and the editor will open said file. If row and columns\n  are specified e.g. `file.js:32:7`, the editor will set the cursor right in that position. Contributed by @ematipico\n\n- Add an option `--linter` to `biome rage`. The option needs to check Biome linter configuration. Contributed by\n  @seitarof\n\n- Add an option `--formatter` to `biome rage`. The option needs to check Biome formatter configuration. Contributed by\n  @seitarof\n- The CLI now consistently reports the number of files tha were changed, out of the total files that were analysed. Contributed by @ematipico\n- The CLI now consistently shows the number of errors and warnings emitted. Contributed by @ematipico\n\n#### Bug fixes\n\n- Don't process files under an ignored directory.\n\n  Previously, Biome processed all files in the traversed hierarchy,\n  even the files under an ignored directory.\n  Now, it completely skips the content of ignored directories.\n\n  For now, directories cannot be ignored using `files.include` in the configuration file.\n  This is a known limitation that we want to address in a future release.\n\n  For instance, if you have a project with a folder `src` and a folder `test`,\n  the following configuration doesn't completely ignore `test`.\n\n  ```json\n  {\n    \"files\": {\n      \"include\": [\"src\"]\n    }\n  }\n  ```\n\n  Biome will traverse `test`,\n  however all files of the directory are correctly ignored.\n  This can result in file system errors,\n  if Biome encounters dangling symbolic links or files with higher permissions.\n\n  To avoid traversing the `test` directory,\n  you should ignore the directory using `ignore`:\n\n  ```json\n  {\n    \"files\": {\n      \"include\": [\"src\"],\n      \"ignore\": [\"test\"]\n    }\n  }\n  ```\n\n- Fix [#1508](https://github.com/biomejs/biome/issues/1508) by excluding deleted files from being processed. Contributed\n  by @ematipico\n\n- Fix [#1173](https://github.com/biomejs/biome/issues/1173). Fix the formatting of a single instruction with commented\n  in a control flow body to ensure consistency. Contributed by @mdm317\n\n- Fix overriding of `javascript.globals`. Contributed by @arendjr\n- Fix a bug where syntax rules weren't run when pulling the diagnostics. Now Biome will emit more parsing diagnostics,\n  e.g.\n  ```\n  check.js:1:17 parse/noDuplicatePrivateClassMembers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × Duplicate private class member \"#foo\"\n\n    > 1 │ class A { #foo; #foo }\n        │                 ^^^^\n\n  ```\n  Contributed by @ematipico\n\n- Fix [#1774](https://github.com/biomejs/biome/issues/1774) by taking into account the option `--no-errors-on-unmatched` when running the CLI using `--changed`. Contributed by @antogyn\n\n#### Enhancements\n\n- Removed a superfluous diagnostic that was printed during the linting/check phase of a file:\n\n  ```\n  test.js check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × The file contains diagnostics that needs to be addressed.\n  ```\n  Contributed by @ematipico\n- The command `format` now emits parsing diagnostics if there are any, and it will terminate with a non-zero exit code. Contributed by @ematipico\n\n### Configuration\n\n#### New features\n\n- Add the ability to resolve the configuration files defined inside `extends` from the `node_modules/` directory.\n\n  If you want to resolve a configuration file that matches the specifier `@org/configs/biome`, then your `package.json`\n  file must look this:\n\n  ```json\n  {\n    \"name\": \"@org/configs\",\n    \"exports\": {\n      \"./biome\": \"./biome.json\"\n    }\n  }\n  ```\n\n  And the `biome.json` file that \"imports\" said configuration, will look like this:\n  ```json\n  {\n    \"extends\": \"@org/configs/biome\"\n  }\n  ```\n  Read the [documentation](https://biomejs.dev/guides/how-biome-works#the-extends-option) to better understand how it\n  works, expectations and restrictions.\n\n### Editors\n\n#### Bug fixes\n\n- Fix a regression where ignored files where formatted in the editor. Contributed by @ematipico\n- Fix a bug where syntax rules weren't run when pulling the diagnostics. Now Biome will emit more parsing diagnostics,\n  e.g.\n  ```\n  check.js:1:17 parse/noDuplicatePrivateClassMembers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × Duplicate private class member \"#foo\"\n\n    > 1 │ class A { #foo; #foo }\n        │                 ^^^^\n\n  ```\n  Contributed by @ematipico\n\n### Formatter\n\n#### New features\n\n- Biome now allows to format the `package.json` file. This is now the default behaviour and users can remove their\n  workarounds.\n  If you rely on other tools to format `package.json`, you'll have to ignore it via configuration. Contributed by\n  @pattrickrice\n- New formatter option `attributePosition` that have similar behavior as\n  Prettier `singleAttributePerLine` [#1706](https://github.com/biomejs/biome/issues/1706). Contributed by @octoshikari\n- Add partial for `.astro` files. Biome is able to format the frontmatter of the Astro files. Contributed by @ematipico\n\n  ```diff\n  ---\n  - statement ( );\n  + statement();\n  ---\n\n  <div></div>\n  ```\n- Add partial for `.vue` files. Biome is able to format the script block of Vue files. Contributed by @nhedger\n\n  ```diff\n  <script setup lang=\"ts\">\n  - statement ( );\n  + statement();\n  </script/>\n\n  <template></template>\n  ```\n\n- Add partial for `.svelte` files. Biome is able to format the script block of Svelte files. Contributed by @ematipico\n\n  ```diff\n  <script setup lang=\"ts\">\n  - statement ( );\n  + statement();\n  </script/>\n\n  <div></div>\n  ```\n\n#### Enhancements\n\n- `composer.json`, `deno.json`, `jsconfig.json`, `package.json` and `tsconfig.json` are no longer protected files.\n\n  This means that you can now format them.\n\n  If you want to ignore these files, you can use the [files.ignore](https://biomejs.dev/reference/configuration/#filesignore) configuration:\n\n  ```json\n  {\n    \"files\": {\n      \"ignore\": [\n        \"composer.json\",\n        \"jsconfig.json\",\n        \"package.json\",\n        \"tsconfig.json\",\n        \"typescript.json\",\n        \"deno.json\",\n        \"deno.jsonc\"\n      ]\n    }\n  }\n  ```\n\n  The following files are still protected, and thus ignored:\n\n  - `composer.lock`\n  - `npm-shrinkwrap.json`\n  - `package-lock.json`\n  - `yarn.lock`\n\n   Contributed by @pattrickrice and @Conaclos\n\n#### Bug fixes\n\n- Fix [#1039](https://github.com/biomejs/biome/issues/1039). Check unicode width instead of number of bytes when\n  checking if regex expression is a simple argument.\n\n  This no longer breaks.\n\n  ```js\n  s(/🚀🚀/).s().s();\n  ```\n\n   Contributed by @kalleep\n\n- Fix [#1218](https://github.com/biomejs/biome/issues/1218), by correctly preserving empty lines in member chains.\n  Contributed by @ah-yu\n- Fix [#1659](https://github.com/biomejs/biome/issues/1659) and [#1662](https://github.com/biomejs/biome/issues/1662), by correctly taking into account the leading comma inside the formatter options. Contributed by @ematipico\n\n- Fix [#1934](https://github.com/biomejs/biome/pull/1934). Fix invalid formatting of long arrow function for AsNeeded arrow parens Contributed by @fireairforce\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [complexity/noEmptyTypeParameters](https://biomejs.dev/linter/rules/no-empty-type-parameters)\n- [complexity/noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements)\n- [correctness/noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration)\n- [correctness/noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\n- [correctness/noUnusedPrivateClassMembers](https://biomejs.dev/linter/rules/no-unused-private-class-members)\n- [security/noGlobalEval](https://biomejs.dev/linter/rules/no-global-eval)\n- [style/useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type)\n- [style/useExportType](https://biomejs.dev/linter/rules/use-export-type)\n- [style/useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention)\n- [style/useForOf](https://biomejs.dev/linter/rules/use-for-of)\n- [style/useImportType](https://biomejs.dev/linter/rules/use-import-type)\n- [style/useNodejsImportProtocol](https://biomejs.dev/linter/rules/use-nodejs-import-protocol)\n- [style/useNumberNamespace](https://biomejs.dev/linter/rules/use-number-namespace)\n- [style/useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type)\n- [suspicious/noEmptyBlockStatements](https://biomejs.dev/linter/rules/no-empty-block-statements)\n- [suspicious/noGlobalAssign](https://biomejs.dev/linter/rules/no-global-assign)\n- [suspicious/noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class)\n- [suspicious/noThenProperty](https://biomejs.dev/linter/rules/no-then-property)\n- [suspicious/useAwait](https://biomejs.dev/linter/rules/use-await)\n\nAdditionally, the following rules are now recommended:\n\n- [suspicious/noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant)\n- [suspicious/noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign)\n\n#### Removed rules\n\n- Remove `nursery/useGroupedTypeImport`. The rule [style/useImportType](https://biomejs.dev/linter/rules/use-import-type) covers the behavior of this rule.\n\n  Note that removing a nursery rule is not considered a breaking change according to our [semantic versioning](https://biomejs.dev/internals/versioning).\n\n  Contributed by @Conaclos\n\n#### New features\n\n- Add the rule [noSkippedTests](https://biomejs.dev/linter/rules/no-skipped-tests), to disallow skipped tests:\n\n  ```js\n  describe.skip(\"test\", () => {});\n  it.skip(\"test\", () => {});\n  ```\n  Contributed by @ematipico\n\n- Add the rule [noFocusedTests](https://biomejs.dev/linter/rules/no-focused-tests), to disallow skipped tests:\n\n  ```js\n  describe.only(\"test\", () => {});\n  it.only(\"test\", () => {});\n  ```\n  Contributed by @ematipico\n\n- Add rule [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes), to sort CSS utility classes:\n\n  ```diff\n  - <div class=\"px-2 foo p-4 bar\" />\n  + <div class=\"foo bar p-4 px-2\" />\n  ```\n  Contributed by @DaniGuardiola\n\n- Add rule [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies), to detect the use of\n  dependencies that aren't present in the `package.json`.\n\n  The rule ignores imports using a protocol such as `node:`, `bun:`, `jsr:`, `https:`.\n\n  Contributed by @ematipico and @Conaclos\n\n- Add rule [noNamespaceImport](https://biomejs.dev/linter/rules/no-namespace-import), to report namespace imports:\n\n  ```js\n  import * as foo from \"foo\";\n  ```\n  Contributed by @unvalley\n- Add partial support for `.astro` files. Biome is able to lint and fix the frontmatter of the Astro files. Contributed\n  by @ematipico\n\n  ```diff\n  ---\n  - delete a.b\n  + a.b = undefined\n  ---\n\n  <div></div>\n  ```\n\n- Add partial support for `.vue` files. Biome is able to lint and fix the script block of the Vue files.\n\n  ```diff\n  <script setup lang=\"ts\">\n  - delete a.b\n  + a.b = undefined\n  <script>\n\n  <template></template>\n  ```\n\n  Contributed by @nhedger\n\n- Add rule [useNodeAssertStrict](https://biomejs.dev/linter/rules/use-node-assert-strict), which promotes the use\n  of `node:assert/strict` over `node:assert`. Contributed by @ematipico\n\n- Add rule [noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test) which disallows `export` or `modules.exports` in files\n  containing test. Contributed by @ah-yu\n\n- Add rule [noSemicolonInJsx](https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx/) to detect possible wrong semicolons inside JSX elements.\n\n  ```jsx\n  const Component = () => {\n    return (\n      <div>\n        <div />;\n      </div>\n    );\n  }\n  ```\n\n  Contributed by @fujiyamaorange\n- Add rule [noBarrelFile](https://biomejs.dev/linter/rules/no-barrel-file), to report the usage of barrel file:\n\n  ```js\n  export * from \"foo\";\n  ```\n  Contributed by @togami2864\n\n- Add rule [noReExportAll](https://biomejs.dev/linter/rules/no-re-export-all/) that report `export * from \"mod\"`.\n  Contributed by @mdm317\n\n- Add rule [noExcessiveNestedTestSuites](https://biomejs.dev/linter/rules/no-excessive-nested-test-suites/).\n  Contributed by @vasucp1207\n\n- Add rule [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable/).\n  Contributed by @vohoanglong0107\n\n#### Enhancements\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) now rule not triggered for jsx attributes when\n   the fragment child is simple text.\n\n  ```js\n  export function SomeComponent() {\n    return <div x-some-prop={<>Foo</>} />;\n  }\n  ```\n\n   Also fixes code action when the fragment child is of type `JsxExpressionChild`.\n\n  ```js\n  <>\n    <Hello leftIcon={<>{provider?.icon}</>} />\n    {<>{provider?.icon}</>}\n    <>{provider?.icon}</>\n  </>\n  ```\n\n  Contributed by @vasucp1207\n\n- [noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary) now provides unsafe code fixes. Contributed by\n  @vasucp1207\n\n- [noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant) now provides\n  unsafe code fixes and handle numbers without leading zero and numbers with digit separators.\n\n  The following numbers are now reported as approximated constants.\n\n  ```js\n  3.14_15; // PI\n  .4342; // LOG10E\n  ```\n\n  Contributed by @Conaclos\n\n- [noPrecisionLoss](https://biomejs.dev/linter/rules/no-precision-loss) no longer reports number with extra zeros.\n\n  The following numbers are now valid.\n\n  ```js\n  .1230000000000000000000000;\n  1230000000000000000000000.0;\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention) now\n  supports [unicase](https://en.wikipedia.org/wiki/Unicase)\n  letters ([#1786](https://github.com/biomejs/biome/issues/1786)).\n\n  [unicase](https://en.wikipedia.org/wiki/Unicase) letters have a single case: they are neither uppercase nor lowercase.\n  Previously, Biome reported names in unicase as invalid.\n  It now accepts a name in unicase everywhere.\n\n  The following code is now accepted:\n\n  ```js\n  const 안녕하세요 = { 안녕하세요: 0 };\n  ```\n\n  We still reject a name that mixes unicase characters with lowercase or uppercase characters:\n  The following names are rejected:\n\n  ```js\n  const A안녕하세요 = { a안녕하세요: 0 };\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention)\n  and [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now provides a new option `requireAscii` to require identifiers to\n  be in ASCII.\n\n  To avoid any breaking change, this option is turned off by default.\n  We intend to turn it on in the next major release of Biome (Biome 2.0).\n\n  Set the `requireAscii` rule option to `true` to require identifiers to be in ASCII.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"style\": {\n          \"useNamingConvention\": { \"options\": { \"requireAscii\": false } }\n        },\n        \"nursery\": {\n          \"useFilenamingConvention\": { \"options\": { \"requireAscii\": false } }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) no longer reports unused imports.\n\n  We now have a dedicated rule for reporting unused imports:\n  [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Fix missing link in [noStaticOnlyClass](https://biomejs.dev/linter/rules/no-static-only-class) documentation.\n  Contributed by @yndajas\n\n- [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type) no longer reports valid use of the void\n  type in conditional types ([#1812](https://github.com/biomejs/biome/issues/1812)).\n\n  The rule no longer reports the following code:\n\n  ```ts\n  type Conditional<T> = T extends void ? Record<string, never> : T\n  ```\n\n  Contributed by @lucasweng\n\n- [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) no longer reports\n  valid use of binding patterns ([#1648](https://github.com/biomejs/biome/issues/1648)).\n\n  The rule no longer reports the following code:\n\n  ```js\n  const { a = 0, b = a } = {};\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) no longer reports used binding\n  patterns ([#1652](https://github.com/biomejs/biome/issues/1652)).\n\n  The rule no longer reports `a` as unused the following code:\n\n  ```js\n  const { a = 0, b = a } = {};\n  export { b };\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#1651](https://github.com/biomejs/biome/issues/1651). [noVar](https://biomejs.dev/linter/rules/no-var/) now\n  ignores TsGlobalDeclaration. Contributed by @vasucp1207\n\n- Fix [#1640](https://github.com/biomejs/biome/issues/1640). [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers) code action now generates valid code when last member has a comment but no comma. Contributed by @kalleep\n\n- Fix [#1653](https://github.com/biomejs/biome/issues/1653). Handle a shorthand value in `useForOf` to avoid the false-positive case. Contributed by @togami2864\n\n- Fix [#1656](https://github.com/biomejs/biome/issues/1656). [useOptionalChain](https://biomejs.dev/linter/rules/use-optional-chain/) code action now correctly handles logical and chains where methods with the same name are invoked with different arguments:\n\n  ```diff\n  - tags && tags.includes('a') && tags.includes('b')\n  + tags?.includes('a') && tags.includes('b')\n  ```\n\n  Contributed by @lucasweng\n\n- Fix [#1704](https://github.com/biomejs/biome/issues/1704). Convert `/` to escaped slash `\\/` to avoid parsing error in\n  the result of autofix. Contributed by @togami2864\n\n- Fix[#1697](https://github.com/biomejs/biome/issues/1697). Preserve leading trivia in autofix of suppression rules.\n  Contributed by @togami2864\n\n- Fix [#603](https://github.com/biomejs/biome/issues/603). Trim trailing whitespace to avoid double insertion.\n  Contributed by @togami2864\n\n- Fix [#1765](https://github.com/biomejs/biome/issues/1765). Now the rule `noDelete` doesn't trigger when deleting a\n  dataset:\n  ```js\n  delete element.dataset.prop;\n  ```\n  Contributed by @ematipico\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention)\n  and [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now reject identifiers with consecutive delimiters.\n\n  The following name is now invalid because it includes two underscores:\n\n  ```js\n  export const MY__CONSTANT = 0;\n  ```\n\n  Note that we still allow consecutive leading and consecutive trailing underscores.\n\n  Contributed by @Conaclos\n\n- Fix [#1932](https://github.com/biomejs/biome/issues/1932) Allow redeclaration of type parameters in different declarations.\n  Contributed by @keita-hino\n\n- Fix [#1945](https://github.com/biomejs/biome/issues/1945) Allow constructor with default parameters in `noUselessConstructor`\n\n- Fix [#1982](https://github.com/biomejs/biome/issues/1982) Change to iterate over the module item lists and ignore .d.ts files. Contributed by @togami2864\n\n### Parser\n\n#### Bug fixes\n\n- Fix [#1728](https://github.com/biomejs/biome/issues/1728). Correctly parse the global declaration when the `{` token\n  is on the line following the `global` keyword.\n\n  Now the following code is correctly parsed:\n\n  ```ts\n  declare global\n  { }\n\n  declare module foo {\n    global\n    { }\n  }\n  ```\n\n  Contributed by @ah-yu\n\n- Fix [#1730](https://github.com/biomejs/biome/issues/1730). Correctly parse `delete` expressions with operands that are\n  not simple member expressions.\n\n  ```js\n  delete(a.b);\n  delete console.log(1);\n  delete(() => {});\n  ```\n\n  Contributed by @printfn\n\n### Website\n\n#### Bug fixes\n\n- Fix [#1981](https://github.com/biomejs/biome/issues/1981). Identify TypeScript definition files by their file path within the playground. Contributed by @ah-yu\n\n## 1.5.3 (2024-01-22)\n\n### LSP\n\n#### Bug fixes\n\n- Fix [#1584](https://github.com/biomejs/biome/issues/1584). Ensure the LSP only registers the formatter once.\n  Contributed by @nhedger\n\n- Fix [#1589](https://github.com/biomejs/biome/issues/1589). Fix invalid formatting of own line comments when they were\n  at the end of an import/export list. Contributed by @spanishpear\n\n### Configuration\n\n#### Bug fixes\n\n- Override correctly the recommended preset ([#1349](https://github.com/biomejs/biome/issues/1349)).\n\n  Previously, if unspecified, Biome turned on the recommended preset in overrides.\n  This resulted in reporting diagnostics with a severity level set to `off`.\n  This in turn caused Biome to fail.\n\n  Now Biome won't switch on the recommended preset in `overrides` unless told to do so.\n\n  Contributed by @Conaclos\n\n- Don't format **ignored** files that are well-known JSONC files when `files.ignoreUnknown` is\n  enabled ([#1607](https://github.com/biomejs/biome/issues/1607)).\n\n  Previously, Biome always formatted files that are known to be JSONC files (e.g. `.eslintrc`)\n  when `files.ignoreUnknown` was enabled.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### New features\n\n- Add option `json.formatter.trailingCommas`, to provide a better control over the trailing comma in JSON/JSONC files. Its default value is `\"none\"`.\n\n#### Bug fixes\n\n- Fix [#1178](https://github.com/biomejs/biome/issues/1178), where the line ending option wasn't correctly applied.\n  Contributed by @ematipico\n- Fix [#1571](https://github.com/biomejs/biome/issues/1571). Fix invalid formatting of nested multiline comments.\n  Contributed by @ah-yu\n\n### Linter\n\n#### Bug fixes\n\n-\nFix [#1575](https://github.com/biomejs/biome/issues/1575). [noArrayIndexKey](https://biomejs.dev/linter/rules/no-array-index-key/)\nnow captures array index value inside template literals and with string concatination. Contributed by @vasucp1207\n\n- Linter rules that inspect regexes now handle multibyte characters\n  correctly ([#1522](https://github.com/biomejs/biome/issues/1522)).\n\n  Previously, [noMisleadingCharacterClass](https://biomejs.dev/linter/no-misleading-character-class), [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/no-multiple-spaces-in-regular-expression-literals),\n  and [noEmptyCharacterClassInRegex](https://biomejs.dev/linter/no-empty-character-class-in-regex) made Biome errors on\n  multi-bytes characters.\n  Multibyte characters are now handled correctly.\n\n  The following code no longer raises an internal error:\n\n  ```js\n  // Cyrillic characters\n  /[\\u200E\\u2066-\\u2069]/gu;\n  ```\n\n  Contributed by @Conaclos\n\n- [useExhaustiveDependencies](https://biomejs.dev/linter/use-exhaustive-dependencies) no longer made Biome errors in\n  code TypeScript import equal declarations ([#1194](https://github.com/biomejs/biome/issues/1194)). Contributed by\n  @Conaclos\n\n- Fix typo in the diagnostic of [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules). Contributed by\n  @huseeiin\n\n### Parser\n\n#### Bug fixes\n\n- Accept the `const` modifier for type parameter in method type\n  signature ([#1624](https://github.com/biomejs/biome/issues/1624)).\n\n  The following code is now correctly parsed:\n\n  ```ts\n  type Foo = {\n    <const T>();\n    method<const T>();\n  };\n  ```\n\n  Contributed by @magic-akari\n\n- Correctly parse type arguments in expression([#1184](https://github.com/biomejs/biome/issues/1184)).\n\n  The following code is now correctly parsed in typescript:\n\n  ```ts\n  0 < (0 >= 1);\n  ```\n\n  Contributed by @ah-yu\n\n### Website\n\n#### New\n\n- Add a [page that maps the Biome rule to its source](https://biomejs.dev/linter/rules-sources/). Contributed by\n  @ematipico\n\n#### Fixes\n\n- Generate Open Graph images based on the linked page. Contributed by @ematipico\n\n- Fix examples of the [git hook page](https://biomejs.dev/recipes/git-hooks/). Contributed by @9renpoto, @lmauromb, and\n  @Conaclos\n\n- Fix dead and erroneous hyperlinks. Contributed by @Sec-ant and Conaclos\n\n## 1.5.2 (2024-01-15)\n\n### CLI\n\n### Bug fixes\n\n- Fix [#1512](https://github.com/biomejs/biome/issues/1512) by skipping verbose diagnostics from the count. Contributed\n  by @ematipico\n\n- Correctly handle cascading `include` and `ignore`.\n\n  Previously Biome incorrectly included files that were included at tool level and ignored at global level.\n  In the following example, `file.js` was formatted when it should have been ignored.\n  Now, Biome correctly ignores the directory `./src/sub/`.\n\n  ```shell\n  ❯ tree src\n    src\n    └── sub\n        └── file.js\n\n  ❯ cat biome.json\n    {\n      \"files\": { \"ignore\": [\"./src/sub/\"] },\n      \"formatter\": { \"include\": [\"./src\"] }\n    }\n  ```\n\n  Contributed by @Conaclos\n\n- Don't emit verbose warnings when a protected file is ignored.\n\n  Some files, such as `package.json` and `tsconfig.json`,\n  are [protected](https://biomejs.dev/guides/how-biome-works/#protected-files).\n  Biome emits a verbose warning when it encounters a protected file.\n\n  Previously, Biome emitted this verbose warning even if the file was ignored by the configuration.\n  Now, it doesn't emit verbose warnings for protected files that are ignored.\n\n  Contributed by @Conaclos\n\n- `overrides` no longer affect which files are ignored. Contributed by @Conaclos\n\n- The file `biome.json` can't be ignored anymore. Contributed by @ematipico\n\n- Fix [#1541](https://github.com/biomejs/biome/issues/1541) where the content of protected files wasn't returned\n  to `stdout`. Contributed by @ematipico\n\n- Don't handle CSS files, the formatter isn't ready yet. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n\n- Fix [1440](https://github.com/biomejs/biome/issues/1440), a case where `extends` and `overrides` weren't correctly\n  emitting the final configuration. Contributed by @arendjr\n\n- Correctly handle `include` when `ignore` is set (#1468). Contributed by @Conaclos\n\n  Previously, Biome ignored `include` if `ignore` was set.\n  Now, Biome check both `include` and `ignore`.\n  A file is processed if it is included and not ignored.\n  If `include` is not set all files are considered included.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix placement of comments before `*` token in generator methods with\n  decorators. [#1537](https://github.com/biomejs/biome/pull/1537) Contributed by @ah-yu\n\n- Fix [#1406](https://github.com/biomejs/biome/issues/1406). Ensure comments before the `async` keyword are placed\n  before it. Contributed by @ah-yu\n\n- Fix [#1172](https://github.com/biomejs/biome/issues/1172). Fix placement of line comment after function expression\n  parentheses, they are now attached to first statement in body. Contributed by @kalleep\n\n- Fix [#1511](https://github.com/biomejs/biome/issues/1511) that made the JavaScript formatter crash. Contributed\n  @Conaclos\n\n### Linter\n\n#### Enhancements\n\n- Add an unsafe code fix for [noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/). Contributed by\n  @vasucp1207\n\n- [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function) no longer reports function in `extends`\n  clauses or in a `new` expression. Contributed by @Conaclos\n\n  These cases require the presence of a prototype.\n\n- Add dependency variable names on error message when useExhaustiveDependencies rule shows errors. Contributed by\n  @mehm8128\n\n#### Bug fixes\n\n- The fix of [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function) now adds parentheses around the\n  arrow function in more cases where it is needed ([#1524](https://github.com/biomejs/biome/issues/1524)).\n\n  A function expression doesn't need parentheses in most expressions where it can appear.\n  This is not the case with the arrow function.\n  We previously added parentheses when the function appears in a call or member expression.\n  We now add parentheses in binary-like expressions and other cases where they are needed, hopefully covering all cases.\n\n  Previously:\n\n  ```diff\n  - f = f ?? function() {};\n  + f = f ?? () => {};\n  ```\n\n  Now:\n\n  ```diff\n  - f = f ?? function() {};\n  + f = f ?? (() => {});\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#1514](https://github.com/biomejs/biome/issues/1514). Fix autofix suggestion to avoid the syntax error\n  in `no_useless_fragments`. Contributed by @togami2864\n\n## 1.5.1 (2024-01-10)\n\n### CLI\n\n#### Bug fixes\n\n- The diagnostics `files/missingHandler` are now shown only when the option `--verbose` is passed. Contributed by\n  @ematipico\n- The diagnostics for protected files are now shown only when the option `--verbose` is passed. Contributed by\n  @ematipico\n- Fix [#1465](https://github.com/biomejs/biome/issues/1465), by taking in consideration the workspace folder when\n  matching a pattern. Contributed by @ematipico\n- Fix [#1465](https://github.com/biomejs/biome/issues/1465), by correctly process globs that contain file names.\n  Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1170](https://github.com/biomejs/biome/issues/1170). Fix placement of comments inside default switch clause. Now\n  all line comments that have a preceding node will keep their position. Contributed by @kalleep\n\n### Linter\n\n#### Bug fixes\n\n-\nFix [#1335](https://github.com/biomejs/biome/issues/1335). [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)\nnow ignores code action on component props when the fragment is empty. Contributed by @vasucp1207\n\n- [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type) was accidentally placed in\n  the `style` rule group instead of the `nursery` group. It is now correctly placed under `nursery`.\n\n-\nFix [#1483](https://github.com/biomejs/biome/issues/1483). [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type)\nnow correctly handles its option. Contributed by @Conaclos\n\n-\nFix [#1502](https://github.com/biomejs/biome/issues/1502). [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function)\nnow correctly handle functions that return a (comma) sequence expression. Contributed by @Conaclos\n\nPreviously the rule made an erroneous suggestion:\n\n```diff\n- f(function() { return 0, 1; }, \"\");\n+ f(() => 0, 1, \"\")\n```\n\nNow, the rule wraps any comma sequence between parentheses:\n\n```diff\n- f(function() { return 0, 1; }, \"\");\n+ f(() => (0, 1), \"\")\n```\n\n-\nFix [#1473](https://github.com/biomejs/biome/issues/1473): [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/)\nnow correctly handles React components and hooks that are nested inside other functions. Contributed by @arendjr\n\n## 1.5.0 (2024-01-08)\n\nBiome now scores 97% compatibility with Prettier and features more than 180 linter rules.\n\n### Analyzer\n\n### CLI\n\n#### New features\n\n- Biome now shows a diagnostic when it encounters a protected file. Contributed by @ematipico\n\n- The command `biome migrate` now updates the `$schema` if there's an outdated version.\n\n- The CLI now takes in consideration the `.gitignore` in the home directory of the user, if it exists. Contributed by\n  @ematipico\n- The `biome ci` command is now able to\n  print [GitHub Workflow Commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions)\n  when there are diagnostics in our code. Contributed by @nikeee\n  This **might** require setting the proper permissions on your GitHub action:\n  ```yaml\n  permissions:\n    pull-requests: write\n  ```\n- The commands `format`, `lint`, `check` and `ci` now accept two new arguments: `--changed` and `--since`. Use these\n  options with the VCS integration\n  is enabled to process only the files that were changed. Contributed by @simonxabris\n\n  ```shell\n  biome format --write --changed\n  ```\n\n- Introduced a new command called `biome explain`, which has the capability to display documentation for lint rules.\n  Contributed by @kalleep\n- You can use the command `biome explain` to print the documentation of lint rules. Contributed by @kalleep\n  ```shell\n  biome explain noDebugger\n  biome explain useAltText\n  ```\n- You can use the command `biome explain` to print the directory where daemon logs are stored. Contributed by @ematipico\n  ```shell\n  biome explain daemon-logs\n  ```\n- Removed the hard coded limit of 200 printable diagnostics. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#1247](https://github.com/biomejs/biome/issues/1247), Biome now prints a **warning** diagnostic if it encounters\n  files that can't handle. Contributed by @ematipico\n\n  You can ignore unknown file types using\n  the [`files.ignoreUnknown`](https://biomejs.dev/reference/configuration/#filesignoreunknown) configuration\n  in `biome.json`:\n\n  ```jsonc\n  {\n    \"files\": {\n      \"ignoreUnknown\": true\n    }\n  }\n  ```\n\n  Or the `--files-ignore-unknown` CLI option:\n\n  ```shell\n  biome format --files-ignore-unknown=true --write .\n  ```\n\n- Fix [#709](https://github.com/biomejs/biome/issues/709) and [#805](https://github.com/biomejs/biome/issues/805) by\n  correctly parsing `.gitignore` files. Contributed by @ematipico\n\n- Fix [#1117](https://github.com/biomejs/biome/issues/1117) by correctly respecting the matching. Contributed by\n  @ematipico\n\n- Fix [#691](https://github.com/biomejs/biome/issues/691) and [#1190](https://github.com/biomejs/biome/issues/1190), by\n  correctly apply the configuration when\n  computing [`overrides` configuration](https://biomejs.dev/reference/configuration/#overrides). Contributed by\n  @ematipico\n\n### Configuration\n\n#### New features\n\n- Users can specify _git ignore patterns_ inside `ignore` and `include` properties, for example it's possible to **allow\n  list** globs of files using the `!` character:\n\n  ```jsonc\n  {\n    \"files\": {\n      \"ignore\": [\n        \"node_modules/**\",\n        \"!**/dist/**\" // this is now accepted and allow files inside the `dist` folder\n      ]\n    }\n  }\n  ```\n\n### Editors\n\n#### New features\n\n- The LSP registers formatting without the need of using dynamic capabilities from the client.\n\n  This brings formatting services to the editors that don't support or have limited support for dynamic capabilities.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1169](https://github.com/biomejs/biome/issues/1169). Account for escaped strings when computing layout for\n  assignments. Contributed by @kalleep\n- Fix [#851](https://github.com/biomejs/biome/issues/851). Allow regular function expressions to group and break as call\n  arguments, just like arrow function expressions. [#1003](https://github.com/biomejs/biome/issues/1003) Contributed by\n  @faultyserver\n- Fix [#914](https://github.com/biomejs/biome/issues/914). Only parenthesize type-casted function expressions as default\n  exports. [#1023](https://github.com/biomejs/biome/issues/1023) Contributed by @faultyserver\n- Fix [#1112](https://github.com/biomejs/biome/issues/1112). Break block bodies in case clauses onto their own lines and\n  preserve trailing fallthrough comments. [#1035](https://github.com/biomejs/biome/pull/1035) Contributed by\n  @faultyserver\n- Fix `RemoveSoftLinesBuffer` behavior to also removed conditional expanded content, ensuring no accidental, unused line\n  breaks are included [#1032](https://github.com/biomejs/biome/pull/1032) Contributed by @faultyserver\n- Fix [#1024](https://github.com/biomejs/biome/issues/1024). Allow JSX expressions to nestle in arrow\n  chains [#1033](https://github.com/biomejs/biome/pull/1033) Contributed by @faultyserver\n- Fix incorrect breaking on the left side of assignments by always using fluid\n  assignment. [#1021](https://github.com/biomejs/biome/pull/1021) Contributed by @faultyserver\n- Fix breaking strategy for nested object patterns in function\n  parameters [#1054](https://github.com/biomejs/biome/pull/1054) Contributed by @faultyserver\n- Fix over-indention of arrow chain expressions by simplifying the way each chain is\n  grouped [#1036](https://github.com/biomejs/biome/pull/1036), [#1136](https://github.com/biomejs/biome/pull/1136),\n  and [#1162](https://github.com/biomejs/biome/pull/1162) Contributed by @faultyserver.\n- Fix \"simple\" checks for calls and member expressions to correctly handle array accesses, complex arguments to\n  single-argument function calls, and multiple-argument function\n  calls. [#1057](https://github.com/biomejs/biome/pull/1057) Contributed by @faultyserver\n- Fix text wrapping and empty line handling for JSX Text elements to match Prettier's\n  behavior. [#1075](https://github.com/biomejs/biome/pull/1075) Contributed by @faultyserver\n- Fix leading comments in concisely-printed arrays to prevent unwanted line\n  breaks. [#1135](https://github.com/biomejs/biome/pull/1135) Contributed by @faultyserver\n- Fix `best_fitting` and interned elements preventing expansion propagation from sibling\n  elements. [#1141](https://github.com/biomejs/biome/pull/1141) Contributed by @faultyserver\n- Fix heuristic for grouping function parameters when type parameters with constraints are\n  present. [#1153](https://github.com/biomejs/biome/pull/1153). Contributed by @faultyserver.\n- Fix binary-ish and type annotation handling for grouping call arguments in function expressions and call\n  signatures. [#1152](https://github.com/biomejs/biome/pull/1152)\n  and [#1160](https://github.com/biomejs/biome/pull/1160) Contributed by @faultyserver\n- Fix handling of nestled JSDoc comments to preserve behavior for\n  overloads. [#1195](https://github.com/biomejs/biome/pull/1195) Contributed by @faultyserver\n- Fix [#1208](https://github.com/biomejs/biome/issues/1208). Fix extraction of inner types when checking for simple type\n  annotations in call arguments. [#1195](https://github.com/biomejs/biome/pull/1195) Contributed by @faultyserver\n\n- Fix [#1220](https://github.com/biomejs/biome/issues/1220). Avoid duplicating comments in type unions for mapped, empty\n  object, and empty tuple types. [#1240](https://github.com/biomejs/biome/pull/1240) Contributed by @faultyserver\n\n- Fix [#1356](https://github.com/biomejs/biome/issues/1356). Ensure `if_group_fits_on_line` content is always written\n  in `RemoveSoftLinesBuffer`s. [#1357](https://github.com/biomejs/biome/pull/1357) Contributed by @faultyserver\n\n- Fix [#1171](https://github.com/biomejs/biome/issues/1171). Correctly format empty statement with comment inside arrow\n  body when used as single argument in call expression. Contributed by @kalleep\n\n- Fix [#1106](https://github.com/biomejs/biome/issues/1106). Fix invalid formatting of single bindings when Arrow\n  Parentheses is set to \"AsNeeded\" and the expression breaks over multiple\n  lines. [#1449](https://github.com/biomejs/biome/pull/1449) Contributed by @faultyserver\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [a11y/noAriaHiddenOnFocusable](https://www.biomejs.dev/linter/rules/no-aria-hidden-on-focusable)\n- [a11y/useValidAriaRole](https://www.biomejs.dev/linter/rules/use-valid-aria-role)\n- [complexity/useRegexLiterals](https://www.biomejs.dev/linter/rules/use-regex-literals)\n- [suspicious/noImplicitAnyLet](https://www.biomejs.dev/linter/rules/no-implicit-any-let)\n- [style/noDefaultExport](https://www.biomejs.dev/linter/rules/no-default-export)\n\n#### New features\n\n- Add [useExportType](https://biomejs.dev/linter/rules/use-export-type) that enforces the use of type-only exports for\n  types. Contributed by @Conaclos\n\n  ```diff\n    interface A {}\n    interface B {}\n    class C {}\n\n  - export type { A, C }\n  + export { type A, C }\n\n  - export { type B }\n  + export type { B }\n  ```\n\n- Add [useImportType](https://biomejs.dev/linter/rules/use-import-type) that enforces the use of type-only imports for\n  types. Contributed by @Conaclos\n\n  ```diff\n  - import { A, B } from \"./mod.js\";\n  + import { type A, B } from \"mod\";\n    let a: A;\n    const b: B = new B();\n  ```\n\n  Also, the rule groups type-only imports:\n\n  ```diff\n  - import { type A, type B } from \"./mod.js\";\n  + import type { A, B } from \"./mod.js\";\n  ```\n\n- Add [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention), that enforces naming\n  conventions for JavaScript and TypeScript filenames. Contributed by @Conaclos\n\n  By default, the rule requires that a filename be in `camelCase`, `kebab-case`, `snake_case`, or matches the name of\n  an `export` in the file.\n  The rule provides options to restrict the allowed cases.\n\n- Add [useNodejsImportProtocol](https://biomejs.dev/linter/rules/use-nodejs-import-protocol) that enforces the use of\n  the `node:` protocol when importing _Node.js_ modules. Contributed by @2-NOW, @vasucp1207, and @Conaclos\n\n  ```diff\n  - import fs from \"fs\";\n  + import fs from \"node:fs\";\n  ```\n\n- Add [useNumberNamespace](https://biomejs.dev/linter/rules/use-number-namespace) that enforces the use of the `Number`\n  properties instead of the global ones.\n\n  ```diff\n  - parseInt;\n  + Number.parseInt;\n  - - Infinity;\n  + Number.NEGATIVE_INFINITY;\n  ```\n\n- Add [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type) that enforces using\n  function types instead of object type with call signatures. Contributed by @emab, @ImBIOS, and @seitarof\n\n  ```diff\n  - interface Example {\n  -   (): string;\n  - }\n  + type Example = () => string\n\n```\n\n- Add [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules), that disallows the use of _Node.js_ modules. Contributed by @anonrig, @ematipico, and @Conaclos\n\n- Add [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) that reports variables and function parameters used before their declaration. Contributed by @Conaclos\n\n  ```js\n  function f() {\n    console.log(c); // Use of `c` before its declaration.\n    const c = 0;\n  }\n  ```\n\n- Add [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type) that enforces the use of a\n  consistent syntax for array types. Contributed by @eryue0220\n\n  This rule will replace [useShorthandArrayType](https://biomejs.dev/linter/rules/use-shorthand-array-type).\n  It provides an option to choose between the shorthand or the generic syntax.\n\n- Add [noEmptyTypeParameters](https://biomejs.dev/linter/rules/no-empty-type-parameters) that ensures that any type\n  parameter list has at least one type parameter. Contributed by @togami2864\n\n  This will report the following empty type parameter lists:\n\n  ```ts\n  interface Foo<> {}\n  //           ^^\n  type Bar<> = {};\n  //      ^^\n  ```\n\n- Add [noGlobalEval](https://biomejs.dev/linter/rules/no-global-eval) that reports any use of the global `eval`.\n  Contributed by @you-5805\n\n- Add [noGlobalAssign](https://biomejs.dev/linter/rules/no-global-assign) that reports assignment to global variables.\n  Contributed by @chansuke\n\n  ```js\n  Object = {}; // report assignment to `Object`.\n  ```\n\n- Add [noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class) that disallows\n  characters made with multiple code points in character class. Contributed by @togami2864\n\n- Add [noThenProperty](https://biomejs.dev/linter/rules/no-then-property) that disallows the use of `then` as property\n  name. Adding a `then` property makes an object _thenable_ that can lead to errors with Promises. Contributed by\n  @togami2864\n\n- Add [noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary) that disallows conditional expressions (\n  ternaries) when simpler alternatives exist.\n\n  ```js\n  var a = x ? true : true; // this could be simplified to `x`\n  ```\n\n#### Enhancements\n\n- [noEmptyInterface](https://biomejs.dev/linter/rules/no-empty-interface) ignores empty interfaces that extend a type.\n  Address [#959](https://github.com/biomejs/biome/issues/959) and [#1157](https://github.com/biomejs/biome/issues/1157).\n  Contributed by @Conaclos\n\n  This allows supporting interface augmentation in external modules as demonstrated in the following example:\n\n  ```ts\n  interface Extension {\n    metadata: unknown;\n  }\n\n  declare module \"@external/module\" {\n    // Empty interface that extends a type.\n    export interface ExistingInterface extends Extension {}\n  }\n  ```\n\n- Preserve more comments in the code fix\n  of [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator). Contributed by @Conaclos\n\n  The rule now preserves comments that follow the (optional) trailing comma.\n\n  For example, the rule now suggests the following code fix:\n\n  ```diff\n  - Math.pow(\n  -    a, // a\n  -    2, // 2\n  -  );\n  +\n  +    a ** // a\n  +    2 // 2\n  +\n  ```\n\n- `<svg>` element is now considered as a non-interactive HTML\n  element ([#1095](https://github.com/biomejs/biome/issues/1095)). Contributed by @chansuke\n\n  This affects the following rules:\n  - [noAriaHiddenOnFocusable](https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable)\n  - [noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\n  - [noNoninteractiveElementToInteractiveRole](https://biomejs.dev/linter/rules/no-noninteractive-element-to-interactive-role)\n  - [noNoninteractiveTabindex](https://biomejs.dev/linter/rules/no-noninteractive-tabindex)\n  - [useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n\n- [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals/)\n  has a safe code fix. Contributed by @Conaclos\n\n- [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/) ignores expressions that use `new.target`.\n  Contributed by @Conaclos\n\n- [noForEach](https://biomejs.dev/linter/rules/no-for-each) now reports only calls that use a callback with `0` or `1`\n  parameter. Address [#547](https://github.com/biomejs/biome/issues/547). Contributed by @Conaclos\n\n#### Bug fixes\n\n-\nFix [#1061](https://github.com/biomejs/biome/issues/1061). [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare)\nno longer reports overloads of `export default function`. Contributed by @Conaclos\n\nThe following code is no longer reported:\n\n```ts\nexport default function(a: boolean): boolean;\nexport default function(a: number): number;\nexport default function(a: number | boolean): number | boolean {\n  return a;\n}\n```\n\n-\nFix [#651](https://github.com/biomejs/biome/issues/651), [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nno longer reports out of scope dependencies. Contributed by @kalleep\n\nThe following code is no longer reported:\n```ts\nlet outer = false;\n\nconst Component = ({}) => {\n  useEffect(() => {\n    outer = true;\n  }, []);\n}\n```\n\n-\nFix [#1191](https://github.com/biomejs/biome/issues/1191). [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\nnow preserve comments of the `else` clause. Contributed by @Conaclos\n\nFor example, the rule suggested the following fix:\n\n```diff\n  function f(x) {\n    if (x <0) {\n      return 0;\n    }\n-   // Comment\n-   else {\n      return x;\n-   }\n  }\n```\n\nNow the rule suggests a fix that preserves the comment of the `else` clause:\n\n```diff\n  function f(x) {\n    if (x <0) {\n      return 0;\n    }\n    // Comment\n-   else {\n      return x;\n-   }\n  }\n```\n\n-\nFix [#1383](https://github.com/biomejs/biome/issues/1383). [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\nnow accepts the `void` type in type parameter lists.\n\nThe rule no longer reports the following code:\n\n```ts\nf<void>();\n```\n\n-\nFix [#728](https://github.com/biomejs/biome/issues/728). [useSingleVarDeclarator](https://biomejs.dev/linter/rules/use-single-var-declarator)\nno longer outputs invalid code. Contributed by @Conaclos\n\n-\nFix [#1167](https://github.com/biomejs/biome/issues/1167). [useValidAriaProps](https://biomejs.dev/linter/rules/use-valid-aria-props)\nno longer reports `aria-atomic` as invalid. Contributed by @unvalley\n\n-\nFix [#1192](https://github.com/biomejs/biome/issues/1192). [useTemplate](https://biomejs.dev/linter/rules/use-template/)\nnow correctly handles parenthesized expressions and respects type coercions. Contributed by @n-gude\n\nThese cases are now properly handled:\n\n```js\n\"a\" + (1 + 2) // `a${1 + 2}`\n```\n\n```js\n1 + (2 + \"a\") // `${1}${2}a`\n```\n\n-\nFix [#1456](https://github.com/biomejs/biome/issues/1456). [useTemplate](https://biomejs.dev/linter/rules/use-template/)\nnow reports expressions with an interpolated template literal and non-string expressions. Contributed by @n-gude\n\nThe following code is now reported:\n\n```js\n`a${1}` + 2;\n```\n\n-\nFix [#1436](https://github.com/biomejs/biome/issues/1436). [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/)\nnow applies a correct fix when a function expression is used in a call expression or a member access. Contributed by\n@Conaclos\n\nFor example, the rule proposed the following fix:\n\n```diff\n- const called = function() {}();\n+ const called = () => {}();\n```\n\nIt now proposes a fix that adds the needed parentheses:\n\n```diff\n- const called = function() {}();\n+ const called = (() => {})();\n```\n\n-\nFix [#696](https://github.com/biomejs/biome/issues/696). [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level)\nnow correctly detects early returns before the calls to the hook.\n\n- The code fix of [noUselessTypeCOnstraint](https://biomejs.dev/linter/rules/no-useless-type-constraint) now adds a\n  trailing comma when needed to disambiguate a type parameter list from a JSX element. COntributed by @Conaclos\n\n-\nFix [#578](https://github.com/biomejs/biome/issues/578). [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nnow correctly recognizes hooks namespaced under the `React` namespace. Contributed by @XiNiHa\n\n-\nFix [#910](https://github.com/biomejs/biome/issues/910). [noSvgWithoutTitle](https://biomejs.dev/linter/rules/no-svg-without-title)\nnow ignores `<svg>` element with `aria-hidden=\"true\"`. COntributed by @vasucp1207\n\n### Parser\n\n#### BREAKING CHANGES\n\n- The representation of imports has been simplified. Contributed by @Conaclos\n\n  The new representation is closer to the ECMAScript standard.\n  It provides a single way of representing a namespace import such as `import * as ns from \"\"`.\n  It rules out some invalid states that was previously representable.\n  For example, it is no longer possible to represent a combined import with a `type` qualifier such\n  as `import type D, { N } from \"\"`.\n\n  See [#1163](https://github.com/biomejs/biome/pull/1163) for more details.\n\n#### New features\n\n- Imports and exports with both an _import attribute_ and a `type` qualifier are now reported as parse errors.\n\n  ```ts\n  import type A from \"mod\" with { type: \"json\" };\n  //     ^^^^              ^^^^^^^^^^^^^^^^^^^^^\n  //     parse error\n  ```\n\n#### Bug fixes\n\n- Fix [#1077](https://github.com/biomejs/biome/issues/1077) where parenthesized identifiers in conditional expression\n  were being parsed as arrow expressions. Contributed by @kalleep\n\n  These cases are now properly parsed:\n\n  _JavaScript_:\n\n  ```javascript\n    a ? (b) : a => {};\n  ```\n\n  _TypeScript_:\n\n  ```ts\n    a ? (b) : a => {};\n  ```\n\n  _JSX_:\n\n  ```jsx\n    bar ? (foo) : (<a>{() => {}}</a>);\n  ```\n\n- Allow empty type parameter lists for interfaces and type\n  aliases ([#1237](https://github.com/biomejs/biome/issues/1237)). COntributed by @togami2864\n\n  _TypeScript_ allows interface declarations and type aliases to have empty type parameter lists.\n  Previously Biome didn't handle this edge case.\n  Now, it correctly parses this syntax:\n\n  ```ts\n  interface Foo<> {}\n  type Bar<> = {};\n  ```\n\n### Crates\n\n#### BREAKING CHANGES\n\n- Rename the `biome_js_unicode_table` crate\n  to `biome_unicode_table` ([#1302](https://github.com/biomejs/biome/issues/1302)). COntributed by @chansuke\n\n## 1.4.1 (2023-11-30)\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#933](https://github.com/biomejs/biome/issues/933). Some files are properly ignored in the LSP too.\n  E.g. `package.json`, `tsconfig.json`, etc.\n- Fix [#1394](https://github.com/biomejs/biome/issues/1394), by inferring the language extension from the internal saved\n  files. Now newly created files JavaScript correctly show diagnostics.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix some accidental line breaks when printing array expressions within arrow functions and other long\n  lines [#917](https://github.com/biomejs/biome/pull/917). Contributed by @faultyserver\n\n- Match Prettier's breaking strategy for `ArrowChain` layouts [#934](https://github.com/biomejs/biome/pull/934).\n  Contributed by @faultyserver\n\n- Fix double-printing of leading comments in arrow chain expressions [#951](https://github.com/biomejs/biome/pull/951).\n  Contributed by @faultyserver\n\n### Linter\n\n#### Bug fixes\n\n- Fix [#910](https://github.com/biomejs/biome/issues/910), where the rule `noSvgWithoutTitle` should skip elements that\n  have `aria-hidden` attributes. Contributed by @vasucp1207\n\n#### New features\n\n- Add [useForOf](https://biomejs.dev/linter/rules/use-for-of) rule.\n  The rule recommends a for-of loop when the loop index is only used to read from an array that is being iterated.\n  Contributed by @victor-teles\n\n#### Enhancement\n\n- Address [#924](https://github.com/biomejs/biome/issues/924)\n  and [#920](https://github.com/biomejs/biome/issues/920). [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\n  now ignores `else` clauses that follow at least one `if` statement that doesn't break early. Contributed by @Conaclos\n\n  For example, the following code is no longer reported by the rule:\n\n  ```js\n  function f(x) {\n      if (x < 0) {\n        // this `if` doesn't break early.\n      } else if (x > 0) {\n          return x;\n      } else {\n          // This `else` block was previously reported as useless.\n      }\n  }\n  ```\n\n#### Bug fixes\n\n-\nFix [#918](https://github.com/biomejs/biome/issues/918). [useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys)\nno longer repports false positive on comments. Contributed by @kalleep\n\n- Fix [#953](https://github.com/biomejs/biome/issues/953). [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare)\n  no longer reports type parameters with the same name in different mapped types as redeclarations. Contributed by\n  @Conaclos\n\n-\nFix [#608](https://github.com/biomejs/biome/issues/608). [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nno longer repports missing dependencies for React hooks without dependency array. Contributed by @kalleep\n\n### Parser\n\n## 1.4.0 (2023-11-27)\n\n### CLI\n\n- Remove the CLI options from the `lsp-proxy`, as they were never meant to be passed to that command. Contributed by\n  @ematipico\n\n- Add option `--config-path` to `lsp-proxy` and `start` commands. It's now possible to tell the Daemon server to\n  load `biome.json` from a custom path. Contributed by @ematipico\n\n- Add option `--diagnostic-level`. It lets users control the level of diagnostics printed by the CLI. Possible values\n  are: `\"info\"`, `\"warn\"`, and `\"hint\"`. Contributed by @simonxabris\n\n- Add option `--line-feed` to the `format` command. Contributed by @SuperchupuDev\n\n- Add option `--bracket-same-line` to the `format` command. Contributed by @faultyserver\n\n- Add option `--bracket-spacing` to the `format` command. Contributed by @faultyserver\n\n#### Bug fixes\n\n- Fix the command `format`, now it returns a non-zero exit code when if there pending diffs. Contributed by @ematipico\n\n### Formatter\n\n#### New features\n\n- Add the configuration [`formatter.lineFeed`](https://biomejs.dev/reference/configuration/#formatterlineending). It\n  allows changing the type of line endings. Contributed by @SuperchupuDev\n\n- Add the\n  configuration [`javascript.formatter.bracketSameLine`](https://biomejs.dev/reference/configuration/#formatterbracketsameline).\n  It allows controlling whether ending `>` of a multi-line _JSX_ element should be on the last attribute line or\n  not. [#627](https://github.com/biomejs/biome/issues/627). Contributed by @faultyserver\n\n- Add the\n  configuration [`javascript.formatter.bracketSpacing`](https://biomejs.dev/reference/configuration/#formatterbracketspacing).\n  It allows controlling whether spaces are inserted around the brackets of object\n  literals. [#627](https://github.com/biomejs/biome/issues/627). Contributed by @faultyserver\n\n#### Bug fixes\n\n- Fix [#832](https://github.com/biomejs/biome/issues/832), the formatter no longer keeps an unnecessary trailing comma\n  in type parameter lists. Contributed by @Conaclos\n\n  ```diff\n  - class A<T,> {}\n  + class A<T> {}\n  ```\n\n- Fix [#301](https://github.com/biomejs/biome/issues/301), the formatter should not break before the `in` keyword.\n  Contributed by @ematipico\n\n### Linter\n\n#### Promoted rules\n\n- [a11y/noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\n- [complexity/noThisInStatic](https://biomejs.dev/linter/rules/no-this-in-static)\n- [complexity/useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function)\n- [correctness/noEmptyCharacterClassInRegex](https://biomejs.dev/linter/rules/no-empty-character-class-in-regex)\n- [correctness/noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin)\n- [style/noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\n- [style/useAsConstAssertion](https://biomejs.dev/linter/rules/use-as-const-assertion)\n- [style/useShorthandAssign](https://biomejs.dev/linter/rules/use-shorthand-assign)\n- [suspicious/noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant)\n- [suspicious/noMisleadingInstantiator](https://biomejs.dev/linter/rules/no-misleading-instantiator)\n- [suspicious/noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign)\n\nThe following rules are now recommended:\n\n- [a11y/noAccessKey](https://biomejs.dev/linter/rules/no-access-key)\n- [a11y/useHeadingContent](https://biomejs.dev/linter/rules/use-heading-content)\n- [complexity/useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys)\n\nThe following rules are now deprecated:\n\n- [correctness/noNewSymbol](https://biomejs.dev/linter/rules/no-new-symbol)\n  The rule is replaced by [correctness/noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin)\n\n#### New features\n\n- Add [noDefaultExport](https://biomejs.dev/linter/rules/no-default-export) which disallows `export default`.\n  Contributed by @Conaclos\n\n- Add [noAriaHiddenOnFocusable](https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable) which reports hidden and\n  focusable elements. Contributed by @vasucp1207\n\n- Add [noImplicitAnyLet](https://biomejs.dev/linter/rules/no-implicit-any-let) that reports variables declared\n  with `let` and without initialization and type annotation. Contributed by @TaKO8Ki and @b4s36t4\n\n- Add [useAwait](https://biomejs.dev/linter/rules/use-await) that reports `async` functions that don't use an `await`\n  expression.\n\n- Add [useValidAriaRole](https://biomejs.dev/linter/rules/use-valid-aria-role). Contributed by @vasucp1207\n\n- Add [useRegexLiterals](https://biomejs.dev/linter/rules/use-regex-literals) that suggests turning call to the regex\n  constructor into regex literals. COntributed by @Yuiki\n\n#### Enhancements\n\n- Add an unsafe code fix\n  for [a11y/useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n\n#### Bug fixes\n\n- Fix [#639](https://github.com/biomejs/biome/issues/639) by ignoring unused TypeScript's mapped key. Contributed by\n  @Conaclos\n\n- Fix [#565](https://github.com/biomejs/biome/issues/565) by handling several `infer` with the same name in extends\n  clauses of TypeScript's conditional types. Contributed by @Conaclos\n\n-\nFix [#653](https://github.com/biomejs/biome/issues/653). [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\nnow correctly removes the entire line where the unused `import` is. Contributed by @Conaclos\n\n- Fix [#607](https://github.com/biomejs/biome/issues/609) `useExhaustiveDependencies`, ignore optional chaining,\n  Contributed by @msdlisper\n\n- Fix [#676](https://github.com/biomejs/biome/issues/676), by using the correct node for the `\"noreferrer\"` when\n  applying the code action. Contributed by @ematipico\n\n- Fix [#455](https://github.com/biomejs/biome/issues/455). The CLI can now print complex emojis to the console\n  correctly.\n\n-\nFix [#727](https://github.com/biomejs/biome/issues/727). [noInferrableTypes](https://biomejs.dev/linter/rules/no-inferrable-types)\nnow correctly keeps type annotations when the initialization expression is `null`. Contributed by @Conaclos\n\n-\nFix [#784](https://github.com/biomejs/biome/issues/784), [noSvgWithoutTitle](https://biomejs.dev/linter/rules/no-svg-without-title)\nfixes false-positives to `aria-label` and reports svg's role attribute is implicit. Contributed by @unvalley\n\n- Fix [#834](https://github.com/biomejs/biome/issues/834) that\n  made [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) reports block\n  statements of switch clauses. Contributed by @vasucp1207\n\n- Fix [#783](https://github.com/biomejs/biome/issues/834) that\n  made [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) reports block\n  statements of `try-catch` structures. Contributed by @hougesen\n\n- Fix [#69](https://github.com/biomejs/biome/issues/69) that\n  made [correctness/noUnnecessaryContinue](https://biomejs.dev/linter/rules/no-unnecessary-continue) incorrectly reports\n  a `continue` used to break a switch clause. Contributed by @TaKO8Ki\n\n- Fix [#664](https://github.com/biomejs/biome/issues/664) by improving the diagnostic\n  of [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention) when double capital are\n  detected in strict camel case mode. Contributed by @vasucp1207\n\n- Fix [#643](https://github.com/biomejs/biome/issues/643) that erroneously parsed the option\n  of [complexity/useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-naming-convention). Contributed by\n  @arendjr\n\n### Parser\n\n#### Bug fixes\n\n- Fix [#846](https://github.com/biomejs/biome/issues/846) that erroneously parsed `<const T,>() => {}` as a JSX tag\n  instead of an arrow function when both TypeScript and JSX are enabled.\n\n### VSCode\n\n## 1.3.3 (2023-10-31)\n\n### Analyzer\n\n#### Bug fixes\n\n- Fix [#604](https://github.com/biomejs/biome/issues/604) which\n  made [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type) report false positives when\n  the `void` type is used in a generic type parameter. Contributed by @unvalley\n\n### CLI\n\n#### Bug fixes\n\n- Fix how `overrides` behave. Now `ignore` and `include` apply or not the override pattern, so they override each other.\n  Now the options inside `overrides` override the top-level options.\n- Bootstrap the logger only when needed. Contributed by @ematipico\n- Fix how `overrides` are run. The properties `ignore` and `include` have different semantics and only apply/not apply\n  an override. Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#592](https://github.com/biomejs/biome/issues/592), by changing binary resolution in the IntelliJ plugin.\n  Contributed by @Joshuabaker2\n\n### Formatter\n\n#### Bug fixes\n\n- Apply the correct layout when the right hand of an assignment expression is an `await` expression or a yield\n  expression. Contributed by @ematipico\n\n- Fix [#303](https://github.com/biomejs/biome/issues/303), where nested arrow functions didn't break. Contributed by\n  @victor-teles\n\n### Linter\n\n#### New features\n\n- Add [noUnusedPrivateClassMembers](https://biomejs.dev/linter/rules/no-unused-private-class-members) rule. The rule\n  disallow unused private class members. Contributed by @victor-teles\n\n#### Bug fixes\n\n- Fix [#175](https://github.com/biomejs/biome/issues/175) which\n  made [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) report index signatures using the name of a variable\n  in the parent scope.\n\n- Fix [#557](https://github.com/biomejs/biome/issues/557) which\n  made [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) report imported types used in `typeof`\n  expression. Contributed by @Conaclos\n\n- Fix [#576](https://github.com/biomejs/biome/issues/576) by removing some erroneous logic\n  in [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/). Contributed by @ematipico\n\n- Fix [#861](https://github.com/biomejs/biome/issues/861) that\n  made [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) always reports the parameter of a\n  non-parenthesize arrow function as unused.\n\n- Fix [#595](https://github.com/biomejs/biome/issues/595) by updating unsafe-apply logic to avoid unexpected errors\n  in [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/). Contributed by @nissy-dev\n\n- Fix [#591](https://github.com/biomejs/biome/issues/591) which\n  made [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) report type parameters with identical names but in\n  different method signatures. Contributed by @Conaclos\n\n- Support more a11y roles and fix some methods for a11y lint rules Contributed @nissy-dev\n\n- Fix [#609](https://github.com/biomejs/biome/issues/609) `useExhaustiveDependencies`, by removing `useContext`, `useId`\n  and `useSyncExternalStore` from the known hooks. Contributed by @msdlisper\n\n- Fix `useExhaustiveDependencies`, by removing `useContext`, `useId` and `useSyncExternalStore` from the known hooks.\n  Contributed by @msdlisper\n\n- Fix [#871](https://github.com/biomejs/biome/issues/871) and [#610](https://github.com/biomejs/biome/issues/610).\n  Now `useHookAtTopLevel` correctly handles nested functions. Contributed by @arendjr\n\n- The options of the rule `useHookAtTopLevel` are deprecated and will be removed in Biome 2.0. The rule now determines\n  the hooks using the naming convention set by React.\n\n  ```diff\n  {\n    \"linter\": {\n      \"rules\": {\n        \"correctness\": {\n  +        \"useHookAtTopLevel\": \"error\",\n  -        \"useHookAtTopLevel\": {\n  -          \"level\": \"error\",\n  -          \"options\": {\n  -            \"hooks\": [\n  -              {\n  -                \"name\": \"useLocation\",\n  -                \"closureIndex\": 0,\n  -                \"dependenciesIndex\": 1\n  -              },\n  -              { \"name\": \"useQuery\", \"closureIndex\": 1, \"dependenciesIndex\": 0 }\n  -            ]\n  -          }\n  -        }\n        }\n      }\n    }\n  }\n  ```\n\n### Parser\n\n#### Enhancements\n\n- Support RegExp v flag. Contributed by @nissy-dev\n- Improve error messages. Contributed by @ematipico\n\n## 1.3.1 (2023-10-20)\n\n### CLI\n\n#### Bug fixes\n\n- Fix `rage` command, now it doesn't print info about running servers. Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#552](https://github.com/biomejs/biome/issues/552), where the formatter isn't correctly triggered in Windows\n  systems. Contributed by @victor-teles\n\n### Linter\n\n#### New features\n\n- Add [noThisInStatic](https://biomejs.dev/linter/rules/no-this-in-static) rule. Contributed by @ditorodev and @Conaclos\n\n#### Bug fixes\n\n- Fix [#548](https://github.com/biomejs/biome/issues/548) which\n  made [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign) panic.\n\n- Fix [#555](https://github.com/biomejs/biome/issues/555), by correctly map `globals` into the workspace.\n\n## 1.3.0 (2023-10-19)\n\n### Analyzer\n\n#### Enhancements\n\n- Import sorting is safe to apply now, and it will be applied when running `check --apply` instead\n  of `check --apply-unsafe`.\n\n- Import sorting now handles Bun imports `bun:<name>`, absolute path imports `/<path>`,\n  and [Node's subpath imports `#<name>`](https://nodejs.org/api/packages.html#subpath-imports).\n  See [our documentation](https://biomejs.dev/analyzer/) for more details. Contributed by @Conaclos\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#319](https://github.com/biomejs/biome/issues/319). The command `biome lint` now shows the correct options.\n  Contributed by @ematipico\n- Fix [#312](https://github.com/biomejs/biome/issues/312). Running `biome --version` now exits with status code `0`\n  instead of `1`. Contributed by @nhedger\n- Fix a bug where the `extends` functionality doesn't carry over `organizeImports.ignore`. Contributed by @ematipico\n- The CLI now returns the original content when using `stdin` and the original content doesn't change. Contributed by\n  @ematipico\n\n#### New features\n\n- Add support for `BIOME_BINARY` environment variable to override the location of the binary. Contributed by @ematipico\n- Add option `--indent-width`, and deprecated the option `--indent-size`. Contributed by @ematipico\n- Add option `--javascript-formatter-indent-width`, and deprecated the option `--javascript-formatter-indent-size`.\n  Contributed by @ematipico\n- Add option `--json-formatter-indent-width`, and deprecated the option `--json-formatter-indent-size`. Contributed by\n  @ematipico\n- Add option `--daemon-logs` to `biome rage`. The option is required to view Biome daemon server logs. Contributed by\n  @unvalley\n- Add support for logging. By default, Biome doesn't log anything other than diagnostics. Logging can be enabled with\n  the new option `--log-level`:\n\n  ```shell\n  biome format --log-level=info ./src\n  ```\n  There are four different levels of logging, from the most verbose to the least verbose: `debug`, `info`, `warn`\n  and `error`. Here's how an `INFO` log will look like:\n\n  ```\n  2023-10-05T08:27:01.954727Z  INFO  Analyze file ./website/src/playground/components/Resizable.tsx\n    at crates/biome_service/src/file_handlers/javascript.rs:298 on biome::worker_5\n    in Pulling diagnostics with categories: RuleCategories(SYNTAX)\n    in Processes formatting with path: \"./website/src/playground/components/Resizable.tsx\"\n    in Process check with path: \"./website/src/playground/components/Resizable.tsx\"\n  ```\n\n  You can customize how the log will look like with a new option `--log-kind`. The supported kinds\n  are: `pretty`, `compact` and `json`.\n\n  `pretty` is the default logging. Here's how a `compact` log will look like:\n\n  ```\n  2023-10-05T08:29:04.864247Z  INFO biome::worker_2 Process check:Processes linting:Pulling diagnostics: crates/biome_service/src/file_handlers/javascript.rs: Analyze file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\" categories=RuleCategories(LINT)\n  2023-10-05T08:29:04.864290Z  INFO biome::worker_7 Process check:Processes formatting: crates/biome_service/src/file_handlers/javascript.rs: Format file ./website/src/playground/components/Tabs.tsx path=\"./website/src/playground/components/Tabs.tsx\" path=\"./website/src/playground/components/Tabs.tsx\"\n  2023-10-05T08:29:04.879332Z  INFO biome::worker_2 Process check:Processes formatting:Pulling diagnostics: crates/biome_service/src/file_handlers/javascript.rs: Analyze file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\" categories=RuleCategories(SYNTAX)\n  2023-10-05T08:29:04.879383Z  INFO biome::worker_2 Process check:Processes formatting: crates/biome_service/src/file_handlers/javascript.rs: Format file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\"\n  ```\n\n#### Enhancements\n\n- Deprecated the environment variable `ROME_BINARY`. Use `BIOME_BINARY` instead. Contributed by @ematipico\n- Biome doesn't check anymore the presence of the `.git` folder when VCS support is enabled. Contributed by @ematipico\n- `biome rage` doesn't print the logs of the daemon, use `biome rage --daemon-logs` to print them. Contributed by\n  @unvalley\n\n### Configuration\n\n#### New features\n\n- Add option `formatter.indentWidth`, and deprecated the option `formatter.indentSize`. Contributed by @ematipico\n- Add option `javascript.formatter.indentWidth`, and deprecated the option `javascript.formatter.indentSize`.\n  Contributed by @ematipico\n- Add option `json.formatter.indentWidth`, and deprecated the option `json.formatter.indentSize`. Contributed by\n  @ematipico\n- Add option `include` to multiple sections of the configuration\n  - `files.include`;\n  - `formatter.include`;\n  - `linter.include`;\n  - `organizeImports.include`;\n    When `include` and `ignore` are both specified, `ignore` takes **precedence** over `include`\n- Add option `overrides`, where users can modify the behaviour of the tools for certain files or paths.\n\n  For example, it's possible to modify the formatter `lineWidth`, and even `quoteStyle` for certain files that are\n  included in glob path `generated/**`:\n\n  ```json\n  {\n    \"formatter\": {\n      \"lineWidth\": 100\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"generated/**\"],\n        \"formatter\": {\n          \"lineWidth\": 160\n        },\n        \"javascript\": {\n          \"formatter\": {\n            \"quoteStyle\": \"single\"\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n  Or, you can disable certain rules for certain path, and disable the linter for other paths:\n\n  ```json\n  {\n    \"linter\": {\n      \"enabled\": true,\n      \"rules\": {\n        \"recommended\": true\n      }\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"lib/**\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": {\n              \"noDebugger\": \"off\"\n            }\n          }\n        }\n      },\n      {\n        \"include\": [\"shims/**\"],\n        \"linter\": {\n          \"enabled\": false\n        }\n      }\n    ]\n  }\n  ```\n\n### Bug fixes\n\n- Fix [#343](https://github.com/biomejs/biome/issues/343), `extends` was incorrectly applied to the `biome.json` file.\n  Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#404](https://github.com/biomejs/biome/issues/404). Biome intellij plugin now works on Windows. Contributed by\n  @victor-teles\n\n- Fix [#402](https://github.com/biomejs/biome/issues/402). Biome `format` on intellij plugin now recognize biome.json.\n  Contributed by @victor-teles\n\n### Formatter\n\n#### Enhancements\n\n- Use `OnceCell` for the Memoized memory because that's what the `RefCell<Option>` implemented. Contributed by\n  @denbezrukov\n\n### Linter\n\n#### Promoted rules\n\n- [complexity/noExcessiveCognitiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity)\n- [complexity/noVoid](https://biomejs.dev/linter/rules/no-void)\n- [correctness/useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\n- [correctness/useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level)\n- [performance/noAccumulatingSpread](https://biomejs.dev/linter/rules/no-accumulating-spread)\n- [style/useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if)\n- [suspicious/noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\n- [suspicious/noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause)\n- [suspicious/noGlobalIsFinite](https://biomejs.dev/linter/rules/no-global-is-finite)\n- [suspicious/noGlobalIsNan](https://biomejs.dev/linter/rules/no-global-is-nan)\n- [suspicious/useIsArray](https://biomejs.dev/linter/rules/use-is-array)\n\nThe following rules are now recommended:\n\n- [noAccumulatingSpread](https://biomejs.dev/linter/rules/)\n- [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\n- [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause)\n- [noForEach](https://biomejs.dev/linter/rules/no-for-each)\n\n#### New features\n\n- Add [noEmptyCharacterClassInRegex](https://biomejs.dev/linter/rules/no-empty-character-class-in-regex) rule. The rule\n  reports empty character classes and empty negated character classes in regular expression literals. Contributed by\n  @Conaclos\n\n- Add [noMisleadingInstantiator](https://biomejs.dev/linter/rules/no-misleading-instantiator) rule. The rule reports the\n  misleading use of the `new` and `constructor` methods. Contributed by @unvalley\n\n- Add [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else) rule.\n  The rule reports `else` clauses that can be omitted because their `if` branches break.\n  Contributed by @Conaclos\n\n- Add [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) rule.\n  The rule reports unused imports and suggests removing them.\n  Contributed by @Conaclos\n\n  [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) reports also unused imports, but don't\n  suggest their removal.\n  Once [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) stabilized,\n  [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) will not report unused imports.\n\n- Add [useShorthandAssign](https://biomejs.dev/linter/rules/use-shorthand-assign) rule.\n  The rule enforce use of shorthand operators that combine variable assignment and some simple mathematical operations.\n  For example, x = x + 4 can be shortened to x += 4.\n  Contributed by @victor-teles\n\n- Add [useAsConstAssertion](https://biomejs.dev/linter/rules/use-as-const-assertion) rule.\n  The rule enforce use of `as const` assertion to infer literal types.\n  Contributed by @unvalley\n\n- Add [noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign) rule.\n  The rule reports shorthand assigns when variable appears on both sides. For example `x += x + b`\n  Contributed by @victor-teles\n- Add [noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant/) rule.\n  Contributed by @nikeee\n\n-\nAdd [noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\nrule. The rule enforces the non-interactive ARIA roles are not assigned to interactive HTML elements. Contributed by\n@nissy-dev\n\n- Add [useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n  rule. The rule enforces that `tabIndex` is assigned to non-interactive HTML elements with `aria-activedescendant`.\n  Contributed by @nissy-dev\n\n- Add [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) rule.\n  The rule reports standalone blocks that don't include any lexical scoped declaration.\n  Contributed by @emab\n\n- Add [noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin) rule.\n  The rule reports use of `new` on `Symbol` and `BigInt`. Contributed by @lucasweng\n\n#### Enhancements\n\n- The following rules have now safe code fixes:\n\n  - [noNegationElse](https://biomejs.dev/linter/rules/no-negation-else)\n  - [noUselessLabel](https://biomejs.dev/linter/rules/no-useless-label)\n  - [noUselessTypeConstraint](https://biomejs.dev/linter/rules/no-useless-type-constraint)\n  - [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels)\n  - [useConst](https://biomejs.dev/linter/rules/use-const)\n  - [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers)\n  - [useWhile](https://biomejs.dev/linter/rules/use-while)\n\n- [noAccumulatingSpread](https://biomejs.dev/linter/rules/no-accumulating-spread) makes more check in order to reduce\n  potential false positives. Contributed by @Vivalldi\n\n- [noConstAssign](https://biomejs.dev/linter/rules/no-const-assign) now provides an unsafe code fix that\n  replaces `const` with `let`. Contributed by @vasucp1207\n\n- [noExcessiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity) default complexity\n  threshold is now `15`. Contributed by @arendjr\n\n- [noPositiveTabindexValue](https://biomejs.dev/linter/rules/no-positive-tabindex) now provides an unsafe code fix that\n  set to `0` the tab index. Contributed by @vasucp1207\n\n- [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels) no longer reports unbreakable labeled statements.\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) now reports unused TypeScript's type\n  parameters. Contributed by @Conaclos\n\n- [useAnchorContent](https://biomejs.dev/linter/rules/use-anchor-content) now provides an unsafe code fix that removes\n  the `aria-hidden`` attribute. Contributed by @vasucp1207\n\n- [useValidAriaProps](https://biomejs.dev/linter/rules/use-valid-aria-props) now provides an unsafe code fix that\n  removes invalid properties. Contributed by @vasucp1207\n\n- `noExcessiveComplexity` was renamed to `noExcessiveCognitiveComplexity`\n\n#### Bug fixes\n\n-\nFix [#294](https://github.com/biomejs/biome/issues/294). [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/)\nno longer reports false positives for return types. Contributed by @b4s36t4\n\n-\nFix [#313](https://github.com/biomejs/biome/issues/313). [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/)\nnow keeps leading comments.\n\n-\nFix [#383](https://github.com/biomejs/biome/issues/383). [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals)\nnow provides correct code fixes when consecutive spaces are followed by a quantifier. Contributed by @Conaclos\n\n-\nFix [#397](https://github.com/biomejs/biome/issues/397). [useNumericLiterals](https://biomejs.dev/linter/rules/use-numeric-literals)\nnow provides correct code fixes for signed numbers. Contributed by @Conaclos\n\n- Fix [452](https://github.com/biomejs/biome/pull/452). The linter panicked when it met a malformed regex (a regex not\n  ending with a slash).\n\n- Fix [#104](https://github.com/biomejs/biome/issues/104). We now correctly handle types and values with the same name.\n\n- Fix [#243](https://github.com/biomejs/biome/issues/243) a false positive case where the incorrect scope was defined\n  for the `infer` type in rule [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/).\n  Contributed by @denbezrukov\n\n- Fix [#322](ttps://github.com/biomejs/biome/issues/322),\n  now [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/) correctly handles literals inside call\n  expressions.\n\n- Changed how [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/) behaves. The rule is not triggered\n  anymore on function calls. Contributed by @ematipico\n\n### Parser\n\n- Enhance diagnostic for infer type handling in the parser. The 'infer' keyword can only be utilized within the '\n  extends' clause of a conditional type. Using it outside this context will result in an error. Ensure that any type\n  declarations using 'infer' are correctly placed within the conditional type structure to avoid parsing issues.\n  Contributed by @denbezrukov\n- Add support for parsing trailing commas inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowTrailingCommas\": true\n      }\n    }\n  }\n  ```\n\n  Contributed by @nissy-dev\n\n### VSCode\n\n## 1.2.2 (2023-09-16)\n\n### CLI\n\n#### Bug fixes\n\n- Fix a condition where import sorting wasn't applied when running `biome check --apply`\n\n## 1.2.1 (2023-09-15)\n\n### Configuration\n\n- Fix an edge case where the formatter language configuration wasn't picked.\n- Fix the configuration schema, where `json.formatter` properties weren't transformed in camel case.\n\n## 1.2.0 (2023-09-15)\n\n### CLI\n\n#### New features\n\n- Add new options to customize the behaviour the formatter based on the language of the file\n  - `--json-formatter-enabled`\n  - `--json-formatter-indent-style`\n  - `--json-formatter-indent-size`\n  - `--json-formatter-line-width`\n  - `--javascript-formatter-enabled`\n  - `--javascript-formatter-indent-style`\n  - `--javascript-formatter-indent-size`\n  - `--javascript-formatter-line-width`\n\n#### Bug fixes\n\n- Fix a bug where `--errors-on-warning` didn't work when running `biome ci` command.\n\n### Configuration\n\n#### New features\n\n- Add new options to customize the behaviour of the formatter based on the language of the file\n  - `json.formatter.enabled`\n  - `json.formatter.indentStyle`\n  - `json.formatter.indentSize`\n  - `json.formatter.lineWidth`\n  - `javascript.formatter.enabled`\n  - `javascript.formatter.indentStyle`\n  - `javascript.formatter.indentSize`\n  - `javascript.formatter.lineWidth`\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [a11y/noAriaUnsupportedElements](https://www.biomejs.dev/linter/rules/no-aria-unsupported-elements/)\n- [a11y/noNoninteractiveTabindex](https://www.biomejs.dev/linter/rules/no-noninteractive-tabindex/)\n- [a11y/noRedundantRoles](https://www.biomejs.dev/linter/rules/no-redundant-roles/)\n- [a11y/useValidAriaValues](https://www.biomejs.dev/linter/rules/use-valid-aria-values/)\n- [complexity/noBannedTypes](https://www.biomejs.dev/linter/rules/no-banned-types)\n- [complexity/noStaticOnlyClass](https://www.biomejs.dev/linter/rules/no-static-only-class)\n- [complexity/noUselessEmptyExport](https://www.biomejs.dev/linter/rules/no-useless-empty-export)\n- [complexity/noUselessThisAlias](https://www.biomejs.dev/linter/rules/no-useless-this-alias)\n- [correctness/noConstantCondition](https://www.biomejs.dev/linter/rules/no-constant-condition)\n- [correctness/noNonoctalDecimalEscape](https://www.biomejs.dev/linter/rules/no-nonoctal-decimal-escape)\n- [correctness/noSelfAssign](https://www.biomejs.dev/linter/rules/no-self-assign)\n- [style/useLiteralEnumMembers](https://www.biomejs.dev/linter/rules/use-literal-enum-members)\n- [style/useNamingConvention](https://www.biomejs.dev/linter/rules/use-naming-convention)\n- [suspicious/noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex)\n- [suspicious/noUnsafeDeclarationMerging](https://www.biomejs.dev/linter/rules/no-unsafe-declaration-merging)\n- [suspicious/useGetterReturn](https://www.biomejs.dev/linter/rules/use-getter-return)\n\n#### New rules\n\n- Add [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/) rule. The rule reports the unusual\n  use of the `void` type. Contributed by @shulandmimi\n\n#### Removed rules\n\n- Remove `noConfusingArrow`\n\n  Code formatters, such as prettier and Biome, always adds parentheses around the parameter or the body of an arrow\n  function.\n  This makes the rule useless.\n\n  Contributed by @Conaclos\n\n#### Enhancements\n\n- [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause/) now relies on control flow\n  analysis to report most of the switch clause fallthrough. Contributed by @Conaclos\n\n- [noAssignInExpressions](https://biomejs.dev/linter/rules/no-assign-in-expressions/) no longer suggest code fixes. Most\n  of the time the suggestion didn't match users' expectations. Contributed by @Conaclos\n\n- [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) no longer emits safe code fixes.\n  Contributed by @Conaclos\n\n  All code fixes are now emitted as unsafe code fixes.\n  Removing a constructor can change the behavior of a program.\n\n- [useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if/) now only provides safe code fixes.\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) now reports more cases.\n\n  The rule is now able to ignore self-writes.\n  For example, the rule reports the following unused variable:\n\n  ```js\n  let a = 0;\n  a++;\n  a += 1;\n  ```\n\n  The rule is also capable of detecting an unused declaration that uses itself.\n  For example, the rule reports the following unused interface:\n\n  ```ts\n  interface I {\n    instance(): I\n  }\n  ```\n\n  Finally, the rule now ignores all _TypeScript_ declaration files,\n  including [global declaration files](https://www.typescriptlang.org/docs/handbook/declaration-files/templates/global-d-ts.html).\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Fix [#182](https://github.com/biomejs/biome/issues/182),\n  making [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) retains optional chaining. Contributed by\n  @denbezrukov\n\n- Fix [#168](https://github.com/biomejs/biome/issues/168),\n  fix [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies) false positive case when\n  stable hook is on a new line. Contributed by @denbezrukov\n\n- Fix [#137](https://github.com/biomejs/biome/issues/137),\n  fix [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) false positive case with TypeScript module\n  declaration:\n\n  ```typescript\n  declare module '*.gif' {\n      const src: string;\n  }\n\n  declare module '*.bmp' {\n      const src: string;\n  }\n  ```\n  Contributed by @denbezrukov\n\n- Fix [#258](https://github.com/biomejs/biome/issues/258),\n  fix [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) the case where the rule removing an\n  assignment. Contributed by @denbezrukov\n- Fix [#266](https://github.com/biomejs/biome/issues/266), where `complexity/useLiteralKeys` emitted a code action with\n  an invalid AST. Contributed by @ematipico\n\n\n- Fix [#105](https://github.com/biomejs/biome/issues/105), removing false positives reported\n  by [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/).\n\n  The rule no longer reports the following used variable:\n\n  ```js\n  const a = f(() => a);\n  ```\n\n  Contributed by @Conaclos\n\n### VSCode\n\n#### Enhancements\n\n- Improve server binary resolution when using certain package managers, notably pnpm.\n\n  The new strategy is to point to `node_modules/.bin/biome` path,\n  which is consistent for all package managers.\n\n## 1.1.2 (2023-09-07)\n\n### Editors\n\n#### Bug fixes\n\n- Fix a case where an empty JSON file would cause the LSP server to crash. Contributed by @ematipico\n\n### Linter\n\n#### Enhancements\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts import namespaces in\n  _PascalCase_ and rejects export namespaces in _CONSTANT\\_CASE_.\n\n  The following code is now valid:\n\n  ```js\n  import * as React from \"react\";\n  ```\n\n  And the following code is now invalid:\n\n  ```js\n  export * as MY_NAMESPACE from \"./lib.js\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) now ignores decorated classes and\n  decorated parameters. The rule now gives suggestions instead of safe fixes when parameters are annotated with types.\n  Contributed by @Conaclos\n\n## 1.1.1 (2023-09-07)\n\n### Analyzer\n\n#### Bug fixes\n\n- The diagnostic for `// rome-ignore` suppression comment should not be a warning. A warning could block the CI, marking\n  a gradual migration difficult. The code action that changes `// rome-ignore` to `// biome-ignore` is disabled as\n  consequence. Contributed by @ematipico\n\n## 1.1.0 (2023-09-06)\n\n### Analyzer\n\n#### Enhancements\n\n- Add a code action to replace `rome-ignore` with `biome-ignore`. Use `biome check --apply-unsafe` to update all the\n  comments. The action is not bulletproof, and it might generate unwanted code, that's why it's unsafe action.\n  Contributed by @ematipico\n\n### CLI\n\n#### Enhancements\n\n- Biome now reports a diagnostics when a `rome.json` file is found.\n- `biome migrate --write` creates `biome.json` from `rome.json`, but it won't delete the `rome.json` file. Contributed\n  by @ematipico\n\n#### Bug fixes\n\n- Biome uses `biome.json` first, then it attempts to use `rome.json`.\n- Fix a case where Biome couldn't compute correctly the ignored files when the VSC integration is enabled. Contributed\n  by @ematipico\n\n### Configuration\n\n### Editors\n\n#### Bug fixes\n\n- The LSP now uses its own socket and won't rely on Biome's socket. This fixes some cases where users were seeing\n  multiple servers in the `rage` output.\n\n### Formatter\n\n#### Enhancements\n\n- You can use `// biome-ignore` as suppression comment.\n- The `// rome-ignore` suppression is deprecated.\n\n### JavaScript APIs\n\n### Linter\n\n#### New features\n\n- Add [useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if/) rule. This new rule requires merging\n  an `else` and an `if`, if the `if` statement is the only statement in the `else` block. Contributed by @n-gude\n\n#### Enhancements\n\n- [useTemplate](https://biomejs.dev/linter/rules/use-template/) now reports all string concatenations.\n\n  Previously, the rule ignored concatenation of a value and a newline or a backquote.\n  For example, the following concatenation was not reported:\n\n  ```js\n  v + \"\\n\";\n  \"`\" + v + \"`\";\n  ```\n\n  The rule now reports these cases and suggests the following code fixes:\n\n  ```diff\n  - v + \"\\n\";\n  + `${v}\\n`;\n  - v + \"`\";\n  + `\\`${v}\\``;\n  ```\n\n  Contributed by @Conaclos\n\n- [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/) suggests better code fixes.\n\n  The rule now preserves any comment preceding the exponent,\n  and it preserves any parenthesis around the base or the exponent.\n  It also adds spaces around the exponentiation operator `**`,\n  and always adds parentheses for pre- and post-updates.\n\n  ```diff\n  - Math.pow(a++, /**/ (2))\n  + (a++) ** /**/ (2)\n  ```\n\n  Contributed by @Conaclos\n\n- You can use `// biome-ignore` as suppression comment.\n\n- The `// rome-ignore` suppression is deprecated.\n\n#### Bug fixes\n\n- Fix [#80](https://github.com/biomejs/biome/issues/95),\n  making [noDuplicateJsxProps](https://biomejs.dev/linter/rules/no-duplicate-jsx-props/) case-insensitive.\n\n  Some frameworks, such as Material UI, rely on the case-sensitivity of JSX properties.\n  For\n  example, [TextField has two properties with the same name, but distinct cases](https://mui.com/material-ui/api/text-field/#TextField-prop-inputProps):\n\n  ```jsx\n  <TextField inputLabelProps=\"\" InputLabelProps=\"\"></TextField>\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#138](https://github.com/biomejs/biome/issues/138)\n\n  [noCommaOperator](https://biomejs.dev/linter/rules/no-comma-operator/) now correctly ignores all use of comma\n  operators inside the update part of a `for` loop.\n  The following code is now correctly ignored:\n\n  ```js\n  for (\n    let i = 0, j = 1, k = 2;\n    i < 100;\n    i++, j++, k++\n  ) {}\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [rome#4713](https://github.com/rome/tools/issues/4713).\n\n  Previously, [useTemplate](https://biomejs.dev/linter/rules/use-template/) made the following suggestion:\n\n  ```diff\n  - a + b + \"px\"\n  + `${a}${b}px`\n  ```\n\n  This breaks code where `a` and `b` are numbers.\n\n  Now, the rule makes the following suggestion:\n\n  ```diff\n  - a + b + \"px\"\n  + `${a + b}px`\n   ```\n\n  Contributed by @Conaclos\n\n- Fix [rome#4109](https://github.com/rome/tools/issues/4109)\n\n  Previously, [useTemplate](https://biomejs.dev/linter/rules/use-template/) suggested an invalid code fix when a leading\n  or trailing single-line comment was present:\n\n  ```diff\n    // leading comment\n  - 1 /* inner comment */ + \"+\" + 2 // trailing comment\n  + `${// leading comment\n  + 1 /* inner comment */}+${2 //trailing comment}` // trailing comment\n  ```\n\n  Now, the rule correctly handles this case:\n\n  ```diff\n    // leading comment\n  - 1 + \"+\" + 2 // trailing comment\n  + `${1}+${2}` // trailing comment\n  ```\n\n  As a sideeffect, the rule also suggests the removal of any inner comments.\n\n  Contributed by @Conaclos\n\n- Fix [rome#3850](https://github.com/rome/tools/issues/3850)\n\n  Previously [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/) suggested\n  invalid code in a specific edge case:\n\n  ```diff\n  - 1 +Math.pow(++a, 2)\n  + 1 +++a**2\n  ```\n\n  Now, the rule properly adds parentheses:\n\n  ```diff\n  - 1 +Math.pow(++a, 2)\n  + 1 +(++a) ** 2\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#106](https://github.com/biomejs/biome/issues/106)\n\n  [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now correctly recognizes some\n  TypeScript types such as `Uppercase`.\n\n  Contributed by @Conaclos\n\n- Fix [rome#4616](https://github.com/rome/tools/issues/4616)\n\n  Previously [noUnreachableSuper](https://biomejs.dev/linter/rules/no-unreachable-super/) reported valid codes with\n  complex nesting of control flow structures.\n\n  Contributed by @Conaclos\n\n## 1.0.0 (2023-08-28)\n\n### Analyzer\n\n#### BREAKING CHANGES\n\n- The organize imports feature now groups import statements by \"distance\".\n\n  Modules \"farther\" from the user are put on the top, and modules \"closer\" to the user are placed on the bottom.\n  Check the [documentation](https://biomejs.dev/analyzer/) for more information about it.\n\n- The organize imports tool is enabled by default. If you don't want to use it, you need to disable it explicitly:\n\n  ```json\n  {\n    \"organizeImports\": {\n      \"enabled\": false\n    }\n  }\n  ```\n\n### CLI\n\n#### BREAKING CHANGES\n\n- The CLI now exists with an error when there's an error inside the configuration.\n\n  Previously, biome would raise warnings and continue the execution by applying its defaults.\n\n  This could have been better for users because this could have created false positives in linting or formatted\n  code with a configuration that wasn't the user's.\n\n- The command `biome check` now shows formatter diagnostics when checking the code.\n\n  The diagnostics presence will result in an error code when the command finishes.\n\n  This aligns with semantic and behaviour meant for the command `biome check`.\n\n- `init` command emits a `biome.json` file;\n\n#### Other changes\n\n- Fix [#4670](https://github.com/rome/tools/issues/4670), don't crash at empty default export.\n\n- Fix [#4556](https://github.com/rome/tools/issues/4556), which correctly handles new lines in the\n  `.gitignore` file across OS.\n\n- Add a new option to ignore unknown files `--files-ignore-unknown`:\n\n    ```shell\n    biome format --files-ignore-unknown ./src\n    ```\n\n  Doing so, Biome won't emit diagnostics for files that doesn't know how to handle.\n\n- Add the new option `--no-errors-on-unmatched`:\n\n    ```shell\n    biome format --no-errors-on-unmatched ./src\n    ```\n\n  Biome doesn't exit with an error code if no files were processed in the given paths.\n\n- Fix the diagnostics emitted when running the `biome format` command.\n\n- Biome no longer warns when discovering (possibly infinite) symbolic links between directories.\n\n  This fixes [#4193](https://github.com/rome/tools/issues/4193) which resulted in incorrect warnings\n  when a single file or directory was pointed at by multiple symbolic links. Symbolic links to other\n  symbolic links do still trigger warnings if they are too deeply nested.\n\n- Introduced a new command called `biome lint`, which will only run lint rules against the code base.\n\n- Biome recognizes known files as \"JSON files with comments allowed\":\n\n  - `typescript.json`;\n  - `tsconfig.json`;\n  - `jsconfig.json`;\n  - `tslint.json`;\n  - `babel.config.json`;\n  - `.babelrc.json`;\n  - `.ember-cli`;\n  - `typedoc.json`;\n  - `.eslintrc.json`;\n  - `.eslintrc`;\n  - `.jsfmtrc`;\n  - `.jshintrc`;\n  - `.swcrc`;\n  - `.hintrc`;\n  - `.babelrc`;\n- Add support for `biome.json`;\n\n### Configuration\n\n#### Other changes\n\n- Add a new option to ignore unknown files:\n\n    ```json\n    {\n       \"files\": {\n          \"ignoreUnknown\": true\n       }\n    }\n    ```\n  Doing so, Biome won't emit diagnostics for file that it doesn't know how to handle.\n\n- Add a new `\"javascript\"` option to support the unsafe/experimental parameter decorators:\n\n    ```json\n    {\n       \"javascript\": {\n          \"parser\": {\n             \"unsafeParameterDecoratorsEnabled\": true\n          }\n       }\n    }\n    ```\n\n- Add a new `\"extends\"` option, useful to split the configuration file in multiple files:\n\n  ```json\n  {\n    \"extends\": [\"../sharedFormatter.json\", \"linter.json\"]\n  }\n  ```\n\n  The resolution of the files is file system based, Biome doesn't know how to\n  resolve dependencies yet.\n\n- The commands `biome check` and `biome lint` now show the remaining diagnostics even when\n  `--apply-safe` or `--apply-unsafe` are passed.\n\n- Fix the commands `biome check` and `biome lint`,\n  they won't exit with an error code if no error diagnostics are emitted.\n\n- Add a new option `--error-on-warnings`,\n  which instructs Biome to exit with an error code when warnings are emitted.\n\n  ```shell\n  biome check --error-on-warnings ./src\n  ```\n\n- Add a configuration to enable parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n\n### Editors\n\n#### Other changes\n\n- The Biome LSP can now show diagnostics belonging to JSON lint rules.\n\n- The Biome LSP no longer applies unsafe quickfixes on-save when `editor.codeActionsOnSave.quickfix.biome` is enabled.\n\n- Fix [#4564](https://github.com/rome/tools/issues/4564); files too large don't emit errors.\n\n- The Biome LSP sends client messages when files are ignored or too big.\n\n### Formatter\n\n- Add a new option called `--jsx-quote-style`.\n\n  This option lets you choose between single and double quotes for JSX attributes.\n\n- Add the option `--arrow-parentheses`.\n\n  This option allows setting the parentheses style for arrow functions.\n\n- The _JSON_ formatter can now format `.json` files with comments.\n\n### Linter\n\n#### Removed rules\n\n- Remove `complexity/noExtraSemicolon` ([#4553](https://github.com/rome/tools/issues/4553))\n\n  The _Biome_ formatter takes care of removing extra semicolons.\n  Thus, there is no need for this rule.\n\n- Remove `useCamelCase`\n\n  Use [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) instead.\n\n#### New rules\n\n- Add [noExcessiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity/)\n\n- Add [useImportRestrictions](https://biomejs.dev/linter/rules/use-import-restrictions/)\n\n- Add [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause/)\n\n- Add [noGlobalIsFinite](https://biomejs.dev/linter/rules/no-global-is-finite/)\n\n  This rule recommends using `Number.isFinite` instead of the global and unsafe `isFinite` that attempts a type\n  coercion.\n\n- Add [noGlobalIsNan](https://biomejs.dev/linter/rules/no-global-is-nan/)\n\n  This rule recommends using `Number.isNaN` instead of the global and unsafe `isNaN` that attempts a type coercion.\n\n- Add [noUnsafeDeclarationMerging](https://biomejs.dev/linter/rules/no-unsafe-declaration-merging/)\n\n  This rule disallows declaration merging between an interface and a class.\n\n- Add [noUselessThisAlias](https://biomejs.dev/linter/rules/no-useless-this-alias/)\n\n  This rule disallows useless aliasing of `this` in arrow functions.\n\n- Add [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/)\n\n  This rule proposes turning function expressions into arrow functions.\n  Function expressions that use `this` are ignored.\n\n- Add [noDuplicateJsonKeys](https://biomejs.dev/linter/rules/no-duplicate-json-keys/)\n\n  This rule disallow duplicate keys in a JSON object.\n\n- Add [noVoid](https://biomejs.dev/linter/rules/no-void/)\n\n  This rule disallows the use of `void`.\n\n- Add [noNonoctalDecimalEscape](https://biomejs.dev/linter/rules/no-nonoctal-decimal-escape/)\n\n  This rule disallows `\\8` and `\\9` escape sequences in string literals.\n\n- Add [noUselessEmptyExport](https://biomejs.dev/linter/rules/no-useless-empty-export/)\n\n  This rule disallows useless `export {}`.\n\n- Add [useIsArray](https://biomejs.dev/linter/rules/use-is-array/)\n\n  This rule proposes using `Array.isArray()` instead of `instanceof Array`.\n\n- Add [useGetterReturn](https://biomejs.dev/linter/rules/use-getter-return/)\n\n  This rule enforces the presence of non-empty return statements in getters.\n  This makes the following code incorrect:\n\n  ```js\n  class Person {\n      get firstName() {}\n  }\n  ```\n\n#### Promoted rules\n\nNew rules are promoted, please check [#4750](https://github.com/rome/tools/discussions/4750) for more details:\n\n- [a11y/useHeadingContent](https://biomejs.dev/linter/rules/use-heading-content/)\n- [complexity/noForEach](https://biomejs.dev/linter/rules/no-for-each/)\n- [complexity/useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/)\n- [complexity/useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys/)\n- [correctness/useIsNan](https://biomejs.dev/linter/rules/use-is-nan/)\n- [suspicious/noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/)\n- [suspicious/noDuplicateJsxProps](https://biomejs.dev/linter/rules/no-duplicate-jsx-props/)\n\nThe following rules are now recommended:\n\n**- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/)\n- [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/)**\n\n#### Other changes\n\n- Add new TypeScript globals (`AsyncDisposable`, `Awaited`, `DecoratorContext`, and\n  others) [4643](https://github.com/rome/tools/issues/4643).\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/): allow redeclare of index signatures are in different\n  type members [#4478](https://github.com/rome/tools/issues/4478)\n\n-\nImprove [noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/), [noGlobalObjectCalls](https://biomejs.dev/linter/rules/no-global-object-calls/), [useIsNan](https://biomejs.dev/linter/rules/use-is-nan/),\nand [useNumericLiterals](https://biomejs.dev/linter/rules/use-numeric-literals/) by handling `globalThis` and `window`\nnamespaces.\n\nFor instance, the following code is now reported by `noConsoleLog`:\n\n```js\nglobalThis.console.log(\"log\")\n```\n\n- Improve [noDuplicateParameters](https://biomejs.dev/linter/rules/no-duplicate-parameters/) to manage constructor\n  parameters.\n\n- Improve [noInnerDeclarations](https://biomejs.dev/linter/rules/no-inner-declarations/)\n\n  Now, the rule doesn't report false-positives about ambient _TypeScript_ declarations.\n  For example, the following code is no longer reported by the rule:\n\n  ```ts\n  declare var foo;\n  ```\n\n- Improve [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers/)\n\n  The rule now reports all uninitialized members of an enum in a single diagnostic.\n\n  Moreover, ambient enum declarations are now ignored.\n  This avoids reporting ambient enum declarations in _TypeScript_ declaration files.\n\n  ```ts\n  declare enum Weather {\n    Rainy,\n    Sunny,\n  }\n  ```\n\n- Relax [noBannedTypes](https://biomejs.dev/linter/rules/no-banned-types/) and improve documentation\n\n  The rule no longer reports a user type that reuses a banned type name.\n  The following code is now allowed:\n\n  ```ts\n  import { Number } from \"a-lib\";\n  declare const v: Number;\n  ```\n\n  The rule now allows the use of the type `{}` to denote a non-nullable generic type:\n\n  ```ts\n  function f<T extends {}>(x: T) {\n      assert(x != null);\n  }\n  ```\n\n  And in a type intersection for narrowing a type to its non-nullable equivalent type:\n\n  ```ts\n  type NonNullableMyType = MyType & {};\n  ```\n\n- Improve [noConstantCondition](https://biomejs.dev/linter/rules/no-constant-condition/)\n\n  The rule now allows `while(true)`.\n  This recognizes a common pattern in the web community:\n\n  ```js\n  while (true) {\n    if (cond) {\n      break;\n    }\n  }\n  ```\n\n- Improve the diagnostic and the code action\n  of [useDefaultParameterLast](https://biomejs.dev/linter/rules/use-default-parameter-last/).\n\n  The diagnostic now reports the last required parameter which should precede optional and default parameters.\n\n  The code action now removes any whitespace between the parameter name and its initialization.\n\n- Relax `noConfusingArrow`\n\n  All arrow functions that enclose its parameter with parenthesis are allowed.\n  Thus, the following snippet no longer trigger the rule:\n\n  ```js\n  var x = (a) => 1 ? 2 : 3;\n  ```\n\n  The following snippet still triggers the rule:\n\n  ```js\n  var x = a => 1 ? 2 : 3;\n  ```\n\n- Relax [useLiteralEnumMembers](https://biomejs.dev/linter/rules/use-literal-enum-members/)\n\n  Enum members that refer to previous enum members are now allowed.\n  This allows a common pattern in enum flags like in the following example:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 1,\n    Write = 1 << 1,\n    All = Read | Write,\n  }\n  ```\n\n  Arbitrary numeric constant expressions are also allowed:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 2**0,\n    Write = 2**1,\n    All = Read | Write,\n  }\n  ```\n\n- Improve [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/).\n\n  Now, the rule suggests simplifying computed properties to string literal properties:\n\n  ```diff\n  {\n  -  [\"1+1\"]: 2,\n  +  \"1+1\": 2,\n  }\n  ```\n\n  It also suggests simplifying string literal properties to static properties:\n\n  ```diff\n  {\n  -  \"a\": 0,\n  +  a: 0,\n  }\n  ```\n\n  These suggestions are made in object literals, classes, interfaces, and object types.\n\n- Improve [noNewSymbol](https://biomejs.dev/linter/rules/no-new-symbol/).\n\n  The rule now handles cases where `Symbol` is namespaced with the global `globalThis` or `window`.\n\n- The rules [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/)\n  and [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/) accept a different shape of options\n\n  Old configuration:\n\n  ```json\n  {\n    \"linter\": {\n       \"rules\": {\n          \"nursery\": {\n             \"useExhaustiveDependencies\": {\n                \"level\": \"error\",\n                \"options\": {\n                   \"hooks\": [\n                      [\"useMyEffect\", 0, 1]\n                   ]\n                }\n             }\n          }\n       }\n    }\n  }\n  ```\n\n  New configuration:\n\n  ```json\n  {\n    \"linter\": {\n       \"rules\": {\n          \"nursery\": {\n             \"useExhaustiveDependencies\": {\n                \"level\": \"error\",\n                \"options\": {\n                   \"hooks\": [\n                      {\n                         \"name\": \"useMyEffect\",\n                         \"closureIndex\": 0,\n                         \"dependenciesIndex\": 1\n                      }\n                   ]\n                }\n             }\n          }\n       }\n    }\n  }\n  ```\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/) check only `'use strict'` directive\n  to resolve false positive diagnostics.\n\n  React introduced new directives, \"use client\" and \"use server\".\n  The rule raises false positive errors about these directives.\n\n- Fix a crash in the [NoParameterAssign](https://biomejs.dev/linter/rules/no-parameter-assign/) rule that occurred when\n  there was a bogus binding. [#4323](https://github.com/rome/tools/issues/4323)\n\n- Fix [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) in the following\n  cases [#4330](https://github.com/rome/tools/issues/4330):\n\n  - when the first argument of hooks is a named function\n  - inside an export default function\n  - for `React.use` hooks\n\n- Fix [noInvalidConstructorSuper](https://biomejs.dev/linter/rules/no-invalid-constructor-super/) that erroneously\n  reported generic parents [#4624](https://github.com/rome/tools/issues/4624).\n\n- Fix [noDuplicateCase](https://biomejs.dev/linter/rules/no-duplicate-case/) that erroneously reported as equals the\n  strings literals `\"'\"` and `'\"'` [#4706](https://github.com/rome/tools/issues/4706).\n\n- Fix [NoUnreachableSuper](https://biomejs.dev/linter/rules/no-unreachable-super/)'s false positive\n  diagnostics ([#4483](https://github.com/rome/tools/issues/4483)) caused to nested if statement.\n\n  The rule no longer reports `This constructor calls super() in a loop`\n  when using nested if statements in a constructor.\n\n- Fix [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/)'s false positive\n  diagnostics ([#4637](https://github.com/rome/tools/issues/4637))\n\n  The rule no longer reports false positive diagnostics when accessing properties directly from a hook and calling a\n  hook inside function arguments.\n\n- Fix [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) which erroneously reported\n  constructors with default parameters [rome#4781](https://github.com/rome/tools/issues/4781)\n\n- Fix [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)'s panics when\n  running `biome check --apply-unsafe` ([#4637](https://github.com/rome/tools/issues/4639))\n\n  This rule's code action emits an invalid AST, so I fixed using JsxString instead of JsStringLiteral\n\n- Fix [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/)'s false positive\n  diagnostics ([#4675](https://github.com/rome/tools/issues/4675))\n\n  The semantic analyzer no longer handles `this` reference identifier.\n\n- Fix [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/)'s false positive\n  diagnostics ([#4688](https://github.com/rome/tools/issues/4688))\n\n  The semantic analyzer handles ts export declaration clause correctly.\n\n### Parser\n\n- Add support for decorators in class method parameters, example:\n\n    ```js\n    class AppController {\n       get(@Param() id) {}\n       // ^^^^^^^^ new supported syntax\n    }\n    ```\n\n  This syntax is only supported via configuration, because it's a non-standard syntax.\n\n    ```json\n    {\n       \"javascript\": {\n          \"parser\": {\n             \"unsafeParameterDecoratorsEnabled\": true\n          }\n       }\n    }\n    ```\n- Add support for parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n- Add support for the new `using` syntax\n\n  ```js\n  const using = resource.lock();\n  ```\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.8076171875,
          "content": "# Contributor Covenant Code of Conduct\n\n**Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<biomejs@googlegroups.com>.**\n\nIn the event that your report includes one of the people mentioned above please\nfeel free to reach out to one of the other people listed instead.\n\nFollowed is an unmodified [Contributor Covenant Code of Conduct 2.1](https://www.contributor-covenant.org/version/2/1/code_of_conduct/).\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[INSERT CONTACT METHOD].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 18.5673828125,
          "content": "# 🚀 Contributing\n\nWe can use help in a bunch of areas and any help is greatly appreciated!\n\n## Table of Contents\n\n- [🚀 Contributing](#-contributing)\n  - [Table of Contents](#table-of-contents)\n  - [Asking questions, making proposals](#asking-questions-making-proposals)\n  - [Reporting bugs](#reporting-bugs)\n  - [Getting Started](#getting-started)\n  - [Install the required tools](#install-the-required-tools)\n  - [Testing](#testing)\n    - [Debugging](#debugging)\n  - [Debug binaries](#debug-binaries)\n  - [Production binaries](#production-binaries)\n  - [Checks](#checks)\n  - [Crates development](#crates-development)\n    - [Create new crates](#create-new-crates)\n    - [Analyzers and lint rules](#analyzers-and-lint-rules)\n    - [Parser](#parser)\n    - [Formatter](#formatter)\n  - [Crate dependencies](#crate-dependencies)\n  - [Node.js development](#nodejs-development)\n    - [Translations](#translations)\n  - [Commit messages](#commit-messages)\n  - [Creating pull requests](#creating-pull-requests)\n    - [Changelog](#changelog)\n      - [Writing a changelog line](#writing-a-changelog-line)\n    - [Documentation](#documentation)\n    - [Versioning](#versioning)\n  - [Releasing](#releasing)\n  - [Resources](#resources)\n  - [Current Members](#current-members)\n    - [Lead team](#lead-team)\n    - [Core Contributors team](#core-contributors-team)\n    - [Maintainers team](#maintainers-team)\n    - [Past Maintainers](#past-maintainers)\n\n## Asking questions, making proposals\n\nIf you have any questions, proposals, or feedbacks, open a [GitHub discussion](https://github.com/biomejs/biome/discussions).\nMake sure your comment adds value: [don't post a comment just to get attention](https://jacobtomlinson.dev/posts/2022/dont-be-that-open-source-user-dont-be-me/).\n\nOur [Discord server](https://biomejs.dev/chat) is open for help and more ad-hoc discussion.\nAll activity on the Discord is still moderated and will be strictly enforced under the project's [Code of Conduct](./CODE_OF_CONDUCT.md).\n\nRemember that we are doing this project on our own time.\nWe are humans: we like support, and we expect kindness :)\n\n## Reporting bugs\n\nOur [GitHub issues](https://github.com/biomejs/biome/issues/) serve as a place for submitting bugs.\nMake sure that the bugs is not reported yet and is not fixed in the main branch.\nYou can test on the main branch, thanks to the [playground](https://biomejs.dev/playground/).\n\nAlternatively, you can use our official [CodeSandbox template](https://codesandbox.io/p/sandbox/biome-starter-cbs-rky6zq).\n\n## Getting Started\n\nBuilding this project requires a `stable` Rust toolchain, which can be installed using [rustup](https://www.rust-lang.org/tools/install).\n\nClone the repository and navigate to the `tools` directory:\n\n```bash\ngit clone https://github.com/biomejs/biome\ncd biome\n```\n\nYou can use cargo to run Biome CLI in development mode:\n\n```bash\n# This is like running \"biome --help\"\ncargo biome-cli-dev --help\n```\n\n## Install the required tools\n\nWe use [Just](https://just.systems/man/en/) to run scripts and tasks, to make our life easier.\n\nYou can install `just` using cargo:\n\n```shell\ncargo install just\n```\n\nBut we **highly recommend** to [install it using an OS package manager](https://github.com/casey/just#packages),  so you won't need to prefix every command with `cargo`.\n\nOnce installed, run the following command install the required tools:\n\n```shell\njust install-tools\n```\n\nThis command will install:\n- `cargo-binstall`, to install binary extensions for `cargo`.\n- `cargo-insta`, a `cargo` extension to manage snapshot testing inside the repository.\n- `taplo-cli`, a small tool for formatting TOML files.\n- `wasm-pack` and `wasm-tools` for managing the WASM build of Biome.\n\nAnd you're good to go hack with Biome and Rust! 🚀\n\n## Testing\n\nYou can either use `cargo` or `just` to run tests. For simplicity and running tests real quick, use `cargo`.\n\nWith `cargo`, you can run tests with using the `test` command:\n\n```shell\n# run tests\ncargo test\n\n# or use the shortcut\ncargo t\n```\n\nIf you run `cargo t` from the root, it will run **all** tests of the whole repository. If you're inside a crate folder, `cargo` will run **tests of that crate**:\n\n```shell\ncd crates/biome_cli\n\n# it will run only the tests of the `biome_cli` crate\ncargo t\n```\n\nYou can run **a single test** with cargo by passing the test name after the `test` command:\n\n```shell\ncd crates/biome_js_formatter\n\ncargo t quick_test\n```\n\nThis will run the `quick_test` test inside he `biome_js_formatter` crate. You should see an output similar to this:\n\n```shell\nrunning 1 test\ntest quick_test::quick_test ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 224 filtered out; finished in 0.02s\n```\n\nYou can also use `just` for running tests. With `just`, the scripts will use the same test runner we use in the CI.\n\n```shell\njust test\n```\n\nIf you want to test the tests for a single crate:\n\n```shell\njust test-crate biome_cli\n```\n\nRust has a concept of **doctest**. A doc test is a doc comment that runs some code. Usually, it looks something like this:\n\n```rust\n/// I am a doc test\n/// ```\n/// assert_eq!(true, true) // this is a doc test, and the assertion must pass\n/// ```\nfn some_fn() {\n\n}\n```\nThe code inside the code blocks is **run** during the testing phase.\n\nTo run only the doctest, you can run the command:\n\n```shell\njust test-doc\n```\n\nIn some crates, we use snapshot testing. The majority of snapshot testing is done using [`insta`](https://insta.rs). `insta` is already installed by the command `just install-tools`.\n\nWhen a snapshot test fails, you can run:\n\n- `cargo insta accept` to accept all the changes and update all the snapshots;\n- `cargo insta reject` to reject all the changes;\n- `cargo insta review` to review snapshots singularly.\n\n### Debugging\n\nSometimes you want to debug something when running tests. Like `console.log`, in JavaScript, in Rust you can use the macro `dbg!()` to print something during debugging something. Then, pass the option `--show-output` to `cargo`:\n\n```rust\nfn some_function() -> &'static str {\n    let some_variable = \"some_variable\";\n    dbg!(&some_variable);\n    some_variable\n}\n#[test]\nfn test_some_function() {\n    let result = some_function();\n    assert_eq!(result, \"some_variable\")\n}\n```\n\n```shell\ncargo t test_some_function --show-output\n```\n\n## Debug binaries\n\nCreating a development binary is very useful in case you need to triage a reproduction, and you require more information like logging, trace logs, etc.\n\nAdditionally, you can use this binary when you need to debug issues related to LSP clients.\n\nFrom the root of the repository, run the following command:\n\n```shell\ncargo build --bin biome\n```\n`cargo` will create a binary called `biome` in the `target/debug/` directory.\n\nIf you're debugging a CLI reproduction, copy the `biome` binary inside the root of the reproduction, and change any script that uses the npm package to use the binary instead:\n\n```diff\n{\n  \"scripts\": {\n-    \"lint\": \"biome lint\",\n+    \"lint\": \"./biome lint\"\n  }\n}\n```\n\nIf you're debugging an LSP reproduction, make sure that the client allows to use custom binary, like VSCode and Zed. Provide an absolute URL to the binary that was emitted.\n\n```json\n{\n  \"biome.lspBin\": \"/Users/john/www/biome/target/debug/biome\"\n}\n```\n\n## Production binaries\n\n_Usually_, the easiest way to create a production build is to use the `--release` flag, **however** Biome requires an environment variable called `BIOME_VERSION` to generate different code at compile time.\n\nWhen you provide a `BIOME_VERSION` that is _different_ from `0.0.0`, the build will turn off all the nursery rules that are recommended. The value of `BIOME_VERSION` doesn't matter, as long as it's different from `0.0.0`. This means that you'll have to provide a command similar to this:\n\n```shell\nBIOME_VERSION=0.0.1 cargo build --bin biome --release\n```\n\n## Checks\n\nWhen you finished your work, and you are ready to **commit and open a PR**, there are few other\nthings you would need to run and check:\n- `just f` (alias for `just format`), formats Rust and TOML files.\n- `just l` (alias for `just lint`), run the linter for the whole project.\n- Code generation. The code generation of the repository is spread in the different parts of the code base. Sometimes is needed and sometime it isn't:\n  - run `just gen-lint` when you're working on the **linter**;\n  - run `just gen-bindings` in case you worked around the **workspace**.\n\n> [!NOTE]\n> You can run `just ready` as well, although it's a command that runs the codegen of the whole repository, which will take some time\n\n## Crates development\n\n### Create new crates\n\nIf you happen to create a new _crate_ inside the workspace, use the command `just new-crate`, e.g.:\n\n```shell\njust new-crate biome_new_crate\n```\n\nWhere `biome_new_crate` is going to be the name of the new crate. This script takes care of adding the correct template for the `Cargo.toml` file, and it adds the crate\nto the `knope.toml` file, which we use for changelog generation.\n\n### Analyzers and lint rules\n\nTo know the technical details of how our analyzer works, how to create a rule and how to write tests, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_analyze/CONTRIBUTING.md)\n\n### Parser\n\nTo know the technical details of how our parser works and how to write test, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_parser/CONTRIBUTING.md)\n\n### Formatter\n\nTo know the technical details of how our formatter works and how to write test, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_formatter/CONTRIBUTING.md)\n\n\n## Crate dependencies\n\n[Workspace dependencies](https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table) are used, and many dependencies are defined in Cargo.toml in the root.\n\nInternal crates are loaded with `workspace = true` for each crate. About `dev-dependencies`, we use [path dependencies](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-path-dependencies) to avoid requiring the published version of these crates.\n\n## Node.js development\n\nThe npm module `packages/@biomejs/biome` contains Biome's Node.js API that supports different backends:\n\n- `wasm-nodejs` (WebAssembly)\n- `backend-jsonrpc` (Connection to the daemon)\n\nFor testing and developing, you need to build these packages, following the steps:\n\n1. install pnpm via [corepack](https://nodejs.org/api/corepack.html) by running `corepack enable`;\n2. install [wasm-pack](https://rustwasm.github.io/wasm-pack/installer/) globally;\n3. run `pnpm --filter \"@biomejs/backend-jsonrpc\" build`;\n4. run the `pnpm --filter \"@biomejs/js-api\" build:wasm-dev` and `pnpm --filter \"@biomejs/js-api\" build` commands;\n5. run `pnpm i --filter \"@biomejs/js-api\" --frozen-lockfile` to link the WebAssembly bindings and the JSON-RPC bindings\n\nThe tests are run against the compiled files, which means that you need to run the\n`build` script after you implemented features/bug fixes.\n\n### Translations\n\nFor more information on how to help with translation, please see the [translation contribution guidelines for our docs](https://github.com/biomejs/website/blob/main/TRANSLATIONS.md).\n\n## Commit messages\n\nInternally, the Biome team adheres as closely as possible to the [conventional commit specification](https://www.conventionalcommits.org/en/v1.0.0-beta.2/).\nThe following this convention encourages commit best-practices and facilitates commit-powered features like change log generation.\n\nThe following commit prefixes are supported:\n\n- `build:`, a change that affects the build system or external dependencies\n- `chore:`, project housekeeping\n- `ci:`, a change that affects CI\n- `docs:`, a documentation update\n- `feat:`, a new feature\n- `fix:`, a bugfix\n- `perf:`, project performance\n- `refactor:`, refactor of the code without change in functionality\n- `release:`, release of a new version\n- `revert:`, revert a previous change\n- `test:`, a test update\n\nBelow are examples of well-formatted commits:\n\n```txt\nfeat(compiler): implement parsing for new type of files\nfix: fix nasty unhandled error\ndocs: fix link to website page\ntest(lint): add more cases to handle invalid rules\n```\n\nWe are using [action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) to lint the titles of pull requests. If the 'Lint Pull Request Titles' workflow fails, please correct the title.\n\n## Creating pull requests\n\nWhen creating a new pull request, it's preferable to use a conventional commit-formatted title, as this title will be used as the default commit message on the squashed commit after merging.\nSee the [dedicated section](#commit-messages) about conventional commit format.\n\nPlease use the template provided.\n\n### Changelog\n\nIf the PR you're about to open is a bugfix/feature visible to Biome users, you CAN add a new bullet point to [CHANGELOG.md](./CHANGELOG.md). Although **not required**, we appreciate the effort.\n\nAt the top of the file you will see a `Unreleased` section.\nThe headings divide the sections by \"scope\"; you should be able to identify the scope that belongs to your change. If the change belongs to multiple scopes, you can copy the same sentence under those scopes.\n\nHere's a sample of the headings:\n\n```markdown\n## Unreleased\n\n### Analyzer\n\n### CLI\n\n### Configuration\n\n### Editors\n\n### Formatter\n\n### JavaScript APIs\n\n### Linter\n\n### Parser\n```\n\nWhen you edit a blank section:\n\n- If your PR adds a **breaking change**, create a new heading called `#### BREAKING CHANGES` and add\n  bullet point that explains the breaking changes; provide a migration path if possible.\n  Read [how we version Biome](https://biomejs.dev/internals/versioning/) to determine if your change is breaking. A breaking change results in a major release.\n- If your PR adds a new feature, enhances an existing feature, or fixes a bug, create a new heading called `#### New features`, `#### Enhancements`, or `#### Bug fixes`. Ultimately, add a bullet point that explains the change.\n\nMake sure that the created subsections are ordered in the following order:\n\n```md\n#### BREAKING CHANGES\n\n#### New features\n\n#### Enhancements\n\n#### Bug fixes\n```\n\n#### Writing a changelog line\n\n- Use the present tense, e.g. \"Add new feature\", \"Fix edge case\".\n- If you fix a bug, please add the link to the issue, e.g. \"Fix edge case [#4444]()\".\n- You can add a mention `@user` for every contributor of the change.\n- Whenever applicable, add a code block to show your new changes. For example, for a new\n  rule you might want to show an invalid case, for the formatter you might want to show\n  how the new formatting changes, and so on.\n\nIf in doubt, take a look to existing changelog lines.\n\n### Documentation\n\nIf your PR requires some update on the website (new features, breaking changes, etc.), you should create a new PR once the previous PR is successfully merged.\nWhen adding new features, the documentation should be part of a new PR, which will be merged right before the release.\n\n### Versioning\n\nWe follow the specs suggested by [the official documentation](https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions):\n\nOdd minor versions are dedicated to pre-releases, e.g. `*.5.*` .\nEven minor versions are dedicated to official releases, e.g. `*.6.*`.\n\n## Releasing\n\nWhen releasing a new version of a Biome, follow these steps:\n\n1. [ ] Add a [changelog](./CHANGELOG.md) entry for every Pull Request that lacks one.\n   You can filter [merged PRs that don't update the changelog](https://github.com/biomejs/biome/pulls?q=is%3Apr+is%3Amerged+-label%3AA-Changelog).\n   Read our [guidelines for editing the changelog](#changelog).\n\n1. [ ] Based on the [changelog](./CHANGELOG.md), determine which version number to use.\n   See our [versioning guide](https://biomejs.dev/internals/versioning/) for more details.\n\n1. [ ] Rename `Unreleased` to `<version> (iso-date)` in the [changelog](./CHANGELOG.md).\n\n1. [ ] Update `version` in [Biome's `package.json`](./packages/@biomejs/biome/package.json) if applicable.\n\n1. [ ] **Update to the same `version` in all crates** if you publish crates. (`Cargo.toml` and `crates/**/Cargo.toml`)\n\n1. [ ] Linter rules have a `version` metadata directly defined in their implementation.\n   This field is set to `next` for newly created rules.\n   This field must be updated to the new version.\n\n1. [ ] Once the PR is merged, the CI will trigger the `Release: *` workflows. Once these workflows finish compiling the final artefact, **they need to be approved manually**.\n\n1. [ ] Open a new PR in the [website repository](https://github.com/biomejs/website) to update the website with the new version number:\n   `BIOME_VERSION=<version> pnpm run codegen:all`.\n   This will also copy the configuration schema in the right place.\n\n## Resources\n\nWe have several resources explaining about Biome. They will help you understand the project and codebase.\n\n- [Rust Dublin October 2023 - Biome - YouTube](https://youtu.be/stxiUYmHn0s?si=C9cMsc93nNrZa-r1)\n- [Rome, a Modern Toolchain! by Emanuele Stoppa - GitNation](https://portal.gitnation.org/contents/rome-a-modern-toolchain)\n- [How to create a lint rule in Biome](https://www.youtube.com/watch?v=zfzMO3nW_Wo&t=343s)\n\n## Current Members\n\nMembers are listed in alphabetical order. Members are free to use the full name, GitHub handle, or any other nickname they wish to be addressed. Members are free to disclose their pronouns.\n\n### Lead team\n\n- [Arend van Beelen @arendjr](https://github.com/arendjr)\n- [Emanuele Stoppa @ematipico](https://github.com/ematipico)\n- [Victorien Elvinger @Conaclos](https://github.com/Conaclos)\n\n### Core Contributors team\n\n- [Carson McManus @dyc3](https://github.com/dyc3)\n- [Denis Bezrukov @denbezrukov](https://github.com/denbezrukov)\n- [Hiroki Ihoriya @unvalley](https://github.com/unvalley)\n- [Jon Egeland @faultyserver](https://github.com/faultyserver)\n- [Nicolas Hedger @nhedger](https://github.com/nhedger)\n- [Ze-Zheng Wu @Sec-ant](https://github.com/Sec-ant)\n\n### Maintainers team\n\n- [Dani Guardiola @DaniGuardiola](https://github.com/DaniGuardiola)\n- [Justinas Delinda @minht11](https://github.com/minht11)\n- [Madeline Gurriarán @SuperchupuDev](https://github.com/SuperchupuDev)\n- [Vasu Singh @vasucp1207](https://github.com/vasucp1207)\n- [Vo Hoang Long @vohoanglong0107](https://github.com/vohoanglong0107)\n- [Yagiz Nizipli @anonrig](https://github.com/anonrig)\n- [Yoshiaki Togami @togami2864](https://github.com/togami2864)\n- [Yusuke Abe @chansuke](https://github.com/chansuke)\n- [Zheyu Zhang @ah-yu](https://github.com/ah-yu)\n- [zoomdong @fireairforce](https://github.com/fireairforce)\n\n### Past Maintainers\n\n- [Daiki Nishikawa @nissy-dev](https://github.com/nissy-dev) (Core contributor)\n- [Takayuki Maeda @TaKO8Ki](https://github.com/TaKO8Ki) (Maintainer)\n- [Victor Teles @victor-teles](https://github.com/victor-teles) (Maintainer)\n\n\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 110.119140625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5fb1d8e4442bd405fdfd1dacb42792696b0cf9cb15882e5d097b742a676d375\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"ansi_rgb\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a730095eb14ee842a0f1e68504b85c8d4a19b1ef2ac2a9b4debf0ed982f9b08a\"\ndependencies = [\n \"rgb\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15c4c2c83f81532e5845a733998b6971faca23490340a418e9b72a3ec9de12ea\"\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"ascii_table\"\nversion = \"4.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb7e515f68a8667f957e85c7d59639fe1fa2e0b06c3c2394869b73a404e52ed\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b84f9ebcc6c1f5b8cb160f6990096a5c127f423fcb6e1ccc46c370cbdfb75dfc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"auto_impl\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a8c1df849285fbacd587de7818cc7d13be6cd2cbcd47a04fb1801b0e2706e33\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide 0.8.0\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9475866fec1451be56a3c2400fd081ff546538961565ccb5b7142cbd22bc7a51\"\n\n[[package]]\nname = \"biome_analyze\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_rowan\",\n \"enumflags2\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_aria\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_aria_metadata\",\n]\n\n[[package]]\nname = \"biome_aria_metadata\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_string_case\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"biome_cli\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"biome_analyze\",\n \"biome_configuration\",\n \"biome_console\",\n \"biome_css_formatter\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_flags\",\n \"biome_formatter\",\n \"biome_fs\",\n \"biome_js_analyze\",\n \"biome_js_formatter\",\n \"biome_json_formatter\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_lsp\",\n \"biome_migrate\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_text_edit\",\n \"bpaf\",\n \"crossbeam\",\n \"dashmap 6.1.0\",\n \"hdrhistogram\",\n \"indexmap 2.7.0\",\n \"insta\",\n \"libc\",\n \"mimalloc\",\n \"path-absolutize\",\n \"quick-junit\",\n \"rayon\",\n \"regex\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tikv-jemallocator\",\n \"tokio\",\n \"tracing\",\n \"tracing-appender\",\n \"tracing-subscriber\",\n \"tracing-tree\",\n]\n\n[[package]]\nname = \"biome_configuration\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_analyze\",\n \"biome_console\",\n \"biome_css_analyze\",\n \"biome_css_syntax\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_flags\",\n \"biome_formatter\",\n \"biome_graphql_analyze\",\n \"biome_graphql_syntax\",\n \"biome_html_syntax\",\n \"biome_js_analyze\",\n \"biome_js_formatter\",\n \"biome_js_syntax\",\n \"biome_json_analyze\",\n \"biome_json_formatter\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"bpaf\",\n \"indexmap 2.7.0\",\n \"insta\",\n \"oxc_resolver\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"serde_ini\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"biome_console\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_markup\",\n \"biome_text_size\",\n \"schemars\",\n \"serde\",\n \"termcolor\",\n \"trybuild\",\n \"unicode-segmentation\",\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"biome_control_flow\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_rowan\",\n \"rustc-hash 2.1.0\",\n]\n\n[[package]]\nname = \"biome_css_analyze\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_analyze\",\n \"biome_console\",\n \"biome_css_parser\",\n \"biome_css_semantic\",\n \"biome_css_syntax\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"biome_suppression\",\n \"biome_test_utils\",\n \"insta\",\n \"regex\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_css_factory\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_css_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_css_formatter\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_configuration\",\n \"biome_css_parser\",\n \"biome_css_syntax\",\n \"biome_diagnostics\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_string_case\",\n \"biome_suppression\",\n \"countme\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_css_parser\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_configuration\",\n \"biome_console\",\n \"biome_css_factory\",\n \"biome_css_syntax\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_fs\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_test_utils\",\n \"biome_unicode_table\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_css_semantic\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_css_parser\",\n \"biome_css_syntax\",\n \"biome_rowan\",\n \"rustc-hash 2.1.0\",\n]\n\n[[package]]\nname = \"biome_css_syntax\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_rowan\",\n \"biome_string_case\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_deserialize\"\nversion = \"0.6.0\"\ndependencies = [\n \"biome_console\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"enumflags2\",\n \"indexmap 2.7.0\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"biome_deserialize_macros\"\nversion = \"0.6.0\"\ndependencies = [\n \"biome_string_case\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"biome_diagnostics\"\nversion = \"0.5.7\"\ndependencies = [\n \"backtrace\",\n \"biome_console\",\n \"biome_diagnostics_categories\",\n \"biome_diagnostics_macros\",\n \"biome_rowan\",\n \"biome_text_edit\",\n \"biome_text_size\",\n \"bpaf\",\n \"enumflags2\",\n \"insta\",\n \"oxc_resolver\",\n \"schemars\",\n \"serde\",\n \"serde_ini\",\n \"serde_json\",\n \"termcolor\",\n \"trybuild\",\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"biome_diagnostics_categories\"\nversion = \"0.5.7\"\ndependencies = [\n \"quote\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_diagnostics_macros\"\nversion = \"0.5.7\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"biome_flags\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_console\",\n]\n\n[[package]]\nname = \"biome_formatter\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"cfg-if\",\n \"countme\",\n \"drop_bomb\",\n \"indexmap 2.7.0\",\n \"insta\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"tracing\",\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"biome_formatter_test\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_configuration\",\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_formatter\",\n \"biome_fs\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"insta\",\n \"serde\",\n \"serde_json\",\n \"similar\",\n \"similar-asserts\",\n]\n\n[[package]]\nname = \"biome_fs\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_diagnostics\",\n \"crossbeam\",\n \"directories\",\n \"enumflags2\",\n \"indexmap 2.7.0\",\n \"oxc_resolver\",\n \"parking_lot\",\n \"rayon\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_glob\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_deserialize\",\n \"biome_text_size\",\n \"globset\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_graphql_analyze\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_analyze\",\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_graphql_factory\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"biome_suppression\",\n \"biome_test_utils\",\n \"insta\",\n \"schemars\",\n \"serde\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_graphql_factory\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_graphql_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_graphql_formatter\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_configuration\",\n \"biome_diagnostics\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_suppression\",\n \"countme\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_graphql_parser\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_graphql_factory\",\n \"biome_graphql_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_unicode_table\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tests_macros\",\n \"tracing\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"biome_graphql_semantic\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_rowan\",\n \"rustc-hash 2.1.0\",\n]\n\n[[package]]\nname = \"biome_graphql_syntax\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_rowan\",\n \"biome_string_case\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_grit_factory\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_grit_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_grit_formatter\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_configuration\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_grit_factory\",\n \"biome_grit_parser\",\n \"biome_grit_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"countme\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_grit_parser\"\nversion = \"0.1.0\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_grit_factory\",\n \"biome_grit_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tests_macros\",\n \"tracing\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"biome_grit_patterns\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_grit_parser\",\n \"biome_grit_syntax\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"biome_test_utils\",\n \"grit-pattern-matcher\",\n \"grit-util\",\n \"insta\",\n \"path-absolutize\",\n \"rand 0.8.5\",\n \"regex\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_grit_syntax\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_rowan\",\n \"biome_string_case\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_html_factory\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_html_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_html_formatter\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_diagnostics_categories\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_html_parser\",\n \"biome_html_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_suppression\",\n \"countme\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_html_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_html_factory\",\n \"biome_html_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_test_utils\",\n \"biome_unicode_table\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_html_syntax\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_rowan\",\n \"biome_string_case\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_js_analyze\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_analyze\",\n \"biome_aria\",\n \"biome_aria_metadata\",\n \"biome_console\",\n \"biome_control_flow\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_glob\",\n \"biome_js_factory\",\n \"biome_js_parser\",\n \"biome_js_semantic\",\n \"biome_js_syntax\",\n \"biome_project\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"biome_suppression\",\n \"biome_test_utils\",\n \"biome_unicode_table\",\n \"bitvec\",\n \"enumflags2\",\n \"globset\",\n \"insta\",\n \"natord\",\n \"regex\",\n \"roaring\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"smallvec\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_js_factory\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_js_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_js_formatter\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics_categories\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_js_factory\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_string_case\",\n \"biome_suppression\",\n \"biome_text_size\",\n \"biome_unicode_table\",\n \"countme\",\n \"quickcheck\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tests_macros\",\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"biome_js_parser\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_configuration\",\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_fs\",\n \"biome_js_factory\",\n \"biome_js_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_test_utils\",\n \"biome_unicode_table\",\n \"drop_bomb\",\n \"enumflags2\",\n \"indexmap 2.7.0\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_js_semantic\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_rowan\",\n \"rust-lapper\",\n \"rustc-hash 2.1.0\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"biome_js_syntax\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_aria\",\n \"biome_aria_metadata\",\n \"biome_js_factory\",\n \"biome_js_parser\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"enumflags2\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_js_transform\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_analyze\",\n \"biome_diagnostics\",\n \"biome_js_factory\",\n \"biome_js_formatter\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_rowan\",\n \"biome_test_utils\",\n \"insta\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_json_analyze\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_analyze\",\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_json_factory\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"biome_test_utils\",\n \"insta\",\n \"natord\",\n \"rustc-hash 2.1.0\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_json_factory\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_json_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_json_formatter\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_formatter\",\n \"biome_formatter_test\",\n \"biome_fs\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_suppression\",\n \"countme\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_json_parser\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_json_factory\",\n \"biome_json_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_unicode_table\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tests_macros\",\n \"tracing\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"biome_json_syntax\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_rowan\",\n \"biome_string_case\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_lsp\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"biome_analyze\",\n \"biome_configuration\",\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_fs\",\n \"biome_lsp_converters\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_text_edit\",\n \"futures\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"tower\",\n \"tower-lsp\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_lsp_converters\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"biome_rowan\",\n \"rustc-hash 2.1.0\",\n \"tower\",\n \"tower-lsp\",\n]\n\n[[package]]\nname = \"biome_markdown_factory\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_markdown_syntax\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_markdown_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_markdown_factory\",\n \"biome_markdown_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_test_utils\",\n \"biome_unicode_table\",\n \"insta\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tests_macros\",\n \"tracing\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"biome_markdown_syntax\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_rowan\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"biome_markup\"\nversion = \"0.5.7\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"biome_migrate\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_analyze\",\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_json_analyze\",\n \"biome_json_factory\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"biome_test_utils\",\n \"insta\",\n \"rustc-hash 2.1.0\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_parser\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_rowan\",\n \"biome_unicode_table\",\n \"drop_bomb\",\n \"enumflags2\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"biome_project\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_text_size\",\n \"insta\",\n \"node-semver\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"tests_macros\",\n]\n\n[[package]]\nname = \"biome_rowan\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_text_edit\",\n \"biome_text_size\",\n \"countme\",\n \"hashbrown 0.14.5\",\n \"iai\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"serde_json\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_service\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_analyze\",\n \"biome_configuration\",\n \"biome_console\",\n \"biome_css_analyze\",\n \"biome_css_formatter\",\n \"biome_css_parser\",\n \"biome_css_syntax\",\n \"biome_deserialize\",\n \"biome_deserialize_macros\",\n \"biome_diagnostics\",\n \"biome_flags\",\n \"biome_formatter\",\n \"biome_fs\",\n \"biome_graphql_analyze\",\n \"biome_graphql_formatter\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_grit_formatter\",\n \"biome_grit_parser\",\n \"biome_grit_patterns\",\n \"biome_grit_syntax\",\n \"biome_html_formatter\",\n \"biome_html_parser\",\n \"biome_html_syntax\",\n \"biome_js_analyze\",\n \"biome_js_factory\",\n \"biome_js_formatter\",\n \"biome_js_parser\",\n \"biome_js_semantic\",\n \"biome_js_syntax\",\n \"biome_json_analyze\",\n \"biome_json_formatter\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_parser\",\n \"biome_project\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"biome_text_edit\",\n \"bpaf\",\n \"dashmap 6.1.0\",\n \"enumflags2\",\n \"getrandom 0.2.15\",\n \"ignore\",\n \"indexmap 2.7.0\",\n \"insta\",\n \"oxc_resolver\",\n \"regex\",\n \"rustc-hash 2.1.0\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"slotmap\",\n \"smallvec\",\n \"tests_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_string_case\"\nversion = \"0.5.7\"\n\n[[package]]\nname = \"biome_suppression\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_rowan\",\n]\n\n[[package]]\nname = \"biome_syntax_codegen\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"biome_string_case\",\n \"biome_ungrammar\",\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"biome_test_utils\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_analyze\",\n \"biome_configuration\",\n \"biome_console\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_json_parser\",\n \"biome_project\",\n \"biome_rowan\",\n \"biome_service\",\n \"countme\",\n \"json_comments\",\n \"serde_json\",\n \"similar\",\n]\n\n[[package]]\nname = \"biome_text_edit\"\nversion = \"0.5.7\"\ndependencies = [\n \"biome_text_size\",\n \"schemars\",\n \"serde\",\n \"similar\",\n]\n\n[[package]]\nname = \"biome_text_size\"\nversion = \"0.5.7\"\ndependencies = [\n \"schemars\",\n \"serde\",\n \"serde_test\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"biome_ungrammar\"\nversion = \"0.3.1\"\n\n[[package]]\nname = \"biome_unicode_table\"\nversion = \"0.5.7\"\n\n[[package]]\nname = \"biome_wasm\"\nversion = \"1.7.3\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_js_factory\",\n \"biome_js_formatter\",\n \"biome_rowan\",\n \"biome_service\",\n \"console_error_panic_hook\",\n \"js-sys\",\n \"quote\",\n \"serde\",\n \"serde-wasm-bindgen\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"biome_yaml_factory\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_rowan\",\n \"biome_yaml_syntax\",\n]\n\n[[package]]\nname = \"biome_yaml_parser\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_unicode_table\",\n \"biome_yaml_syntax\",\n \"quickcheck\",\n \"quickcheck_macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"biome_yaml_syntax\"\nversion = \"0.0.1\"\ndependencies = [\n \"biome_rowan\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bitvec\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c\"\ndependencies = [\n \"funty\",\n \"radium\",\n \"tap\",\n \"wyz\",\n]\n\n[[package]]\nname = \"bpaf\"\nversion = \"0.9.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50fd5174866dc2fa2ddc96e8fb800852d37f064f32a45c7b7c2f8fa2c64c77fa\"\ndependencies = [\n \"bpaf_derive\",\n \"owo-colors\",\n \"supports-color\",\n]\n\n[[package]]\nname = \"bpaf_derive\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf95d9c7e6aba67f8fc07761091e93254677f4db9e27197adecebc7039a58722\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"542f33a8835a0884b006a0c3df3dadd99c0c3f296ed26c2fdc8028e01ad6230c\"\ndependencies = [\n \"memchr\",\n \"regex-automata 0.4.8\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d261e256854913907f67ed06efbc3338dfe6179796deefc1ff763fc1aee5535\"\n\n[[package]]\nname = \"bytecount\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1e5f035d16fc623ae5f74981db80a439803888314e3a555fd6f04acd51a3205\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b236fc92302c97ed75b38da1f4917b5cdda4984745740f153a5d3059e48d725e\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b2fd2a0dcf38d7971e2194b6b6eebab45ae01067456a7fd93d5547a61b70be\"\n\n[[package]]\nname = \"case\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd6c0e7b807d60291f42f33f58480c0bfafe28ed08286446f45e463728cf9c1c\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.98\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41c270e7540d725e65ac7f1b212ac8ce349719624d7bcff99f8e2e488e8cf03f\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0c137568cc60b904a7724001b35ce2630fd00d5d84805fbb608ab89509d788f\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"346de753af073cc87b52b2083a506b38ac176a44cfb05497b622e27be899b369\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213030a2b5a4e0c0892b6652260cf6ccac84827b83a85a534e178e3906c4cf1b\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d5f1946157a96594eb2d2c10eb7ad9a2b27518cb3000209dec700c35df9197d\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78116e32a042dd73c2901f0dc30790d20ff3447f3e3472fad359e8c3d282bcd6\"\ndependencies = [\n \"anstyle\",\n \"clap_lex\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd7cc57abe963c6d3b9d8be5b06ba7c8957a930305ca90304f24ef040aa6f961\"\n\n[[package]]\nname = \"codspeed\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"450a0e9df9df1c154156f4344f99d8f6f6e69d0fc4de96ef6e2e68b2ec3bce97\"\ndependencies = [\n \"colored\",\n \"libc\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"codspeed-criterion-compat\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eb1a6cb9c20e177fde58cdef97c1c7c9264eb1424fe45c4fccedc2fb078a569\"\ndependencies = [\n \"codspeed\",\n \"colored\",\n \"criterion\",\n]\n\n[[package]]\nname = \"colored\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"117725a109d387c937a1533ce01b450cbde6b88abceea8473c4d7a85853cda3c\"\ndependencies = [\n \"lazy_static\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3d79fbe8970a77e3e34151cc13d3b3e248aa0faaecb9f6091fa07ebefe5ad60\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"unicode-width 0.1.12\",\n \"windows-sys 0.42.0\",\n]\n\n[[package]]\nname = \"console_error_panic_hook\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06aeb73f470f66dcdbf7223caeebb85984942f22f1adb2a088cf9668146bbbc\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"countme\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7704b5fdd17b18ae31c4c1da5a2e0305a2bf17b5249300a9ee9ed7b72114c636\"\ndependencies = [\n \"dashmap 5.5.3\",\n \"once_cell\",\n \"rustc-hash 1.1.0\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1137cd7e7fc0fb5d3c5a8678be38ec56e819125d8d7907411fe24ccb943faca8\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-epoch\",\n \"crossbeam-queue\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"cuckoofilter\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b810a8449931679f64cd7eef1bbd0fa315801b6d5d9cdc1ace2804d6529eee18\"\ndependencies = [\n \"byteorder\",\n \"fnv\",\n \"rand 0.7.3\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"5.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\"\ndependencies = [\n \"cfg-if\",\n \"hashbrown 0.14.5\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"6.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5041cc499144891f3790297212f32a74fb938e5136a14943f338ef9e0ae276cf\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n \"hashbrown 0.14.5\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_builder\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f59169f400d8087f238c5c0c7db6a28af18681717f3b623227d92f397e938c7\"\ndependencies = [\n \"derive_builder_macro\",\n]\n\n[[package]]\nname = \"derive_builder_core\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4ec317cc3e7ef0928b0ca6e4a634a4d6c001672ae210438cf114a83e56b018d\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"derive_builder_macro\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870368c3fb35b8031abb378861d4460f573b92238ec2152c927a21f77e3e0127\"\ndependencies = [\n \"derive_builder_core\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"directories\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a49173b84e034382284f27f1af4dcbbd231ffa358c0fe316541a7337f376a35\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"drop_bomb\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bda8e21c04aca2ae33ffc2fd8c23134f3cac46db123ba97bd9d3f3b8a4a85e1\"\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b0cf012f1230e43cd00ebb729c6bb58707ecfa8ad08b52ef3a4ccd2697fc30\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"elsa\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d98e71ae4df57d214182a2e5cb90230c0192c6ddfcaa05c36453d46a54713e10\"\ndependencies = [\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"enumflags2\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d232db7f5956f3f14313dc2f87985c58bd2c695ce124c8cdd984e08e15ac133d\"\ndependencies = [\n \"enumflags2_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"enumflags2_derive\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0d48a183585823424a4ce1aa132d174a6a81bd540895822eb4c8373a8e49e8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a19187fea3ac7e84da7dacf48de0c45d63c6a76f9490dae389aead16c243fce3\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b30f669a7961ef1631673d2766cc92f52d64f7ef354d4fe0ddfd30ed52f0f4f\"\ndependencies = [\n \"errno-dragonfly\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"errno-dragonfly\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"fastbloom-rs\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c60b772aabac65774c8bc41a7b6af6011fab470edd1af3e4c50ce49a4d537cc7\"\ndependencies = [\n \"cuckoofilter\",\n \"fastmurmur3\",\n \"xorfilter-rs\",\n \"xxhash-rust\",\n]\n\n[[package]]\nname = \"fastmurmur3\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d7e9bc68be4cdabbb8938140b01a8b5bc1191937f2c7e7ecc2fcebbe2d749df\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8a2db397cb1c8772f31494cb8917e48cd1e64f0fa7efac59fbd741a0a8ce841\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide 0.6.2\",\n]\n\n[[package]]\nname = \"flume\"\nversion = \"0.10.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fst\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ab85b9b05e3978cc9a9cf8fea7f01b494e1a09ed3037e16ba39edc7a29eb61a\"\n\n[[package]]\nname = \"funty\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi 0.9.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32085ea23f3234fc7846555e85283ba4de91e21016dc0455a16286d87a292d64\"\n\n[[package]]\nname = \"git2\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b903b73e45dc0c6c596f2d37eccece7c1c8bb6e4407b001096387c63d0d93724\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"libgit2-sys\",\n \"log\",\n \"url\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15f1ce686646e7f1e19bf7d5533fe443a45dbfb990e00629110797578b42fb19\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata 0.4.8\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf760ebf69878d9fd8f110c89703d90ce35095324d1f1edcb595c63945ee757\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"grit-pattern-matcher\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8430b130e086a1764789402b34685336f2e3f6ec37cd188535bede892f88e65b\"\ndependencies = [\n \"elsa\",\n \"grit-util\",\n \"itertools\",\n \"rand 0.8.5\",\n \"regex\",\n]\n\n[[package]]\nname = \"grit-util\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"99b005c4c15ce0c47022554c41a01fe2441d3622e586a82614a6fe681833d5d4\"\ndependencies = [\n \"derive_builder\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"thiserror 1.0.63\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e087f84d4f86bf4b218b927129862374b72199ae7d8657835f1e89000eea4fb\"\n\n[[package]]\nname = \"hdrhistogram\"\nversion = \"7.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"765c9198f173dd59ce26ff9f95ef0aafd0a0fe01fb9d72841bc5066a4c06511d\"\ndependencies = [\n \"byteorder\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"httparse\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\"\n\n[[package]]\nname = \"iai\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71a816c97c42258aa5834d07590b718b4c9a598944cd39a52dc25b351185d678\"\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d89fd380afde86567dfba715db065673989d6253f42b88179abd3eae47bda4b\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata 0.4.8\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.0\",\n \"serde\",\n]\n\n[[package]]\nname = \"indicatif\"\nversion = \"0.17.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf675b85ed934d3c67b5c5469701eec7db22689d0a2139d856e0925fa28b281\"\ndependencies = [\n \"console\",\n \"number_prefix\",\n \"portable-atomic\",\n \"unicode-segmentation\",\n \"unicode-width 0.2.0\",\n \"web-time\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513e4067e16e69ed1db5ab56048ed65db32d10ba5fc1217f5393f8f17d8b5a5\"\ndependencies = [\n \"console\",\n \"globset\",\n \"linked-hash-map\",\n \"once_cell\",\n \"similar\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfa919a82ea574332e2de6e74b4c36e74d41982b335080fa59d4ef31be20fdf3\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adcf93614601c8129ddf72e2d5633df827ba6551541c6d8c59520a371475be1f\"\ndependencies = [\n \"hermit-abi\",\n \"io-lifetimes\",\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"is_ci\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"616cde7c720bb2bb5824a224687d8f77bfd38922027f01d825cd7453be5099fb\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"453ad9f582a441959e5f0d088b02ce04cfe8d51a8eaf077f12ac6d3e94164ca6\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2b099aaa34a9751c5bf0878add70444e1ed2dd73f347be99003d4577277de6e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"json-strip-comments\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3d129799327c8f80861e467c59b825ba24c277dba6ad0d71a141dc98f9e04ee\"\n\n[[package]]\nname = \"json_comments\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dbbfed4e59ba9750e15ba154fdfd9329cee16ff3df539c2666b70f58cc32105\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libgit2-sys\"\nversion = \"0.17.0+1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10472326a8a6477c3c20a64547b0059e4b0d086869eee31e6d7da728a8eb7224\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libmimalloc-sys\"\nversion = \"0.1.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23aa6811d3bd4deb8a84dde645f943476d13b248d818edcf8ce0b2f37f036b44\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85c833ca1e66078851dba29046874e38f08b2c883700aa29a03ddd3b23814ee8\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9702761c3935f8cc2f101793272e202c72b99da8f4224a19ddcf1279a6450bbf\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"643cb0b8d4fcc284004d5fd0d67ccf61dfffadb7f75e1e71bc420f4688a3a704\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"lsp-types\"\nversion = \"0.94.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c66bfd44a06ae10647fe3f8214762e9369fd4248df1350924b4ef9e770a85ea1\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"serde\",\n \"serde_json\",\n \"serde_repr\",\n \"url\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miette\"\nversion = \"5.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59bb584eaeeab6bd0226ccf3509a69d7936d148cf3d036ad350abe35e8c6856e\"\ndependencies = [\n \"miette-derive\",\n \"once_cell\",\n \"thiserror 1.0.63\",\n \"unicode-width 0.1.12\",\n]\n\n[[package]]\nname = \"miette-derive\"\nversion = \"5.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49e7bc1560b95a3c4a25d03de42fe76ca718ab92d1a22a55b9b4cf67b3ae635c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"mimalloc\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68914350ae34959d83f732418d51e2427a794055d0b9529f48259ac07af65633\"\ndependencies = [\n \"libmimalloc-sys\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4569e456d394deccd22ce1c1913e6ea0e54519f577285001215d33557431afe4\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"natord\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308d96db8debc727c3fd9744aac51751243420e46edf401010908da7f8d5e57c\"\n\n[[package]]\nname = \"new_debug_unreachable\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54\"\n\n[[package]]\nname = \"newtype-uuid\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c8781e2ef64806278a55ad223f0bc875772fd40e1fe6e73e8adbf027817229d\"\ndependencies = [\n \"uuid\",\n]\n\n[[package]]\nname = \"node-semver\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84f390c1756333538f2aed01cf280a56bc683e199b9804a504df6e7320d40116\"\ndependencies = [\n \"bytecount\",\n \"miette\",\n \"nom\",\n \"serde\",\n \"thiserror 1.0.63\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.50.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd2800e1520bdc966782168a627aa5d1ad92e33b984bf7c7615d31280c83ff14\"\ndependencies = [\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"object\"\nversion = \"0.36.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"576dfe1fc8f9df304abb159d767a29d0476f7750fbf8aa7ad07816004a207434\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"3.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f\"\n\n[[package]]\nname = \"oxc_resolver\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bed381b6ab4bbfebfc7a011ad43b110ace8d201d02a39c0e09855f16b8f3f741\"\ndependencies = [\n \"cfg-if\",\n \"dashmap 6.1.0\",\n \"indexmap 2.7.0\",\n \"json-strip-comments\",\n \"once_cell\",\n \"rustc-hash 2.1.0\",\n \"serde\",\n \"serde_json\",\n \"simdutf8\",\n \"thiserror 1.0.63\",\n \"tracing\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"path-absolutize\"\nversion = \"3.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4af381fe79fa195b4909485d99f73a80792331df0625188e707854f0b3383f5\"\ndependencies = [\n \"path-dedot\",\n]\n\n[[package]]\nname = \"path-dedot\"\nversion = \"3.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07ba0ad7e047712414213ff67533e6dd477af0a4e1d14fb52343e53d30ea9397\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad29a609b6bcd67fee905812e544992d216af9d755757c05ed2d0e15a74c6ecc\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"069bdb1e05adc7a8990dce9cc75370895fbe4e3d58b9b73bf1aee56359344a55\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ac9a59f73473f1b8d852421e59e64809f025994837ef743615c6d0c5b305160\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2538b639e642295546c50fcd545198c9d64ee2a38620a628724a3b266d5fbf97\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"193228616381fecdc1224c62e96946dfbc73ff4384fba576e052ff8c1bea8142\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a81d2759aae1dae668f783c308bc5c8ebd191ff4184aaa1b37f65a6ae5a56f\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7170ef9988bc169ba16dd36a7fa041e5c4cbeb6a35b76d4c03daded371eae7c0\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64d1ec885c64d0457d564db4ec299b2dae3f9c02808b8ad9c3a089c591b18033\"\ndependencies = [\n \"proc-macro2\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"pulldown-cmark\"\nversion = \"0.12.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f86ba2052aebccc42cbbb3ed234b8b13ce76f75c3551a303cb2bcffcff12bb14\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"getopts\",\n \"memchr\",\n \"pulldown-cmark-escape\",\n \"unicase\",\n]\n\n[[package]]\nname = \"pulldown-cmark-escape\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"007d8adb5ddab6f8e3f491ac63566a7d5002cc7ed73901f72057943fa71ae1ae\"\n\n[[package]]\nname = \"qp-trie\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ec628a7d1fc2c5f5a551eb34e01e08df62d55203640959a79a9a2859c797a97\"\ndependencies = [\n \"new_debug_unreachable\",\n \"unreachable\",\n]\n\n[[package]]\nname = \"quick-junit\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ed1a693391a16317257103ad06a88c6529ac640846021da7c435a06fffdacd7\"\ndependencies = [\n \"chrono\",\n \"indexmap 2.7.0\",\n \"newtype-uuid\",\n \"quick-xml\",\n \"strip-ansi-escapes\",\n \"thiserror 2.0.3\",\n \"uuid\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.37.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f22f29bdff3987b4d8632ef95fd6424ec7e4e0a57e2f4fc63e489e75357f6a03\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quickcheck\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"588f6378e4dd99458b60ec275b4477add41ce4fa9f64dcba6f15adccb19b50d6\"\ndependencies = [\n \"env_logger\",\n \"log\",\n \"rand 0.8.5\",\n]\n\n[[package]]\nname = \"quickcheck_macros\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b22a693222d716a9587786f37ac3f6b4faedb5b80c23914e7303ff5a1d8016e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03\"\ndependencies = [\n \"getrandom 0.1.16\",\n \"libc\",\n \"rand_chacha 0.2.2\",\n \"rand_core 0.5.1\",\n \"rand_hc\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha 0.3.1\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19\"\ndependencies = [\n \"getrandom 0.1.16\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom 0.2.15\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c\"\ndependencies = [\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a18479200779601e498ada4e8c1e1f50e3ee19deb0259c25825a98b5603b2cb4\"\ndependencies = [\n \"getrandom 0.2.15\",\n \"libredox\",\n \"thiserror 1.0.63\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.8\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.28\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"456c603be3e8d448b072f410900c09faf164fbce2d480456f50eea6e25f9c848\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"result\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"194d8e591e405d1eecf28819740abed6d719d1a2db87fc0bcdedee9a26d55560\"\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20ec2d3e3fc7a92ced357df9cebd5a10b6fb2aa1ee797bf7e9ce2f17dffc8f59\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom 0.2.15\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"roaring\"\nversion = \"0.10.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41589aba99537475bf697f2118357cad1c31590c5a1b9f6d9fc4ad6d07503661\"\ndependencies = [\n \"bytemuck\",\n \"byteorder\",\n]\n\n[[package]]\nname = \"rules_check\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"biome_analyze\",\n \"biome_configuration\",\n \"biome_console\",\n \"biome_css_analyze\",\n \"biome_css_parser\",\n \"biome_css_syntax\",\n \"biome_deserialize\",\n \"biome_diagnostics\",\n \"biome_fs\",\n \"biome_graphql_analyze\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_js_analyze\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_json_analyze\",\n \"biome_json_factory\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"biome_service\",\n \"pulldown-cmark\",\n]\n\n[[package]]\nname = \"rust-lapper\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee43d8e721ac803031dbab6a944b957b49a3b11eadbc099880c8aaaebf23ed27\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fb8039b3032c191086b10f11f319a6e99e1e82889c5cc6046f515c9db1d497\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.37.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2aae838e49b3d63e9274e1c01833cc8139d3fec468c3b84688c628f44b1ae11d\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"934b404430bb06b3fae2cba809eb45a1ab1aecd64491213d7c3301b88393f8d1\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f91339c0467de62360649f8d3e185ca8de4224ff281f66000de5eb2a77a79041\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schemars\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09c024468a378b7e36765cd36702b7a90cc3cba11654f6685c8f233408e89e92\"\ndependencies = [\n \"dyn-clone\",\n \"indexmap 1.9.3\",\n \"indexmap 2.7.0\",\n \"schemars_derive\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"schemars_derive\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1eee588578aff73f856ab961cd2f79e36bc45d7ded33a7562adba4667aecc0e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde_derive_internals\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-wasm-bindgen\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8302e169f0eddcc139c70f139d19d6467353af16f9fce27e8c30158036a1e16b\"\ndependencies = [\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"330f01ce65a3a5fe59a60c82f3c9a024b573b8a6e875bd233fe5f934e71d54e3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"serde_ini\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb236687e2bb073a7521c021949be944641e671b8505a94069ca37b656c81139\"\ndependencies = [\n \"result\",\n \"serde\",\n \"void\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.134\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395627de918015623b32e7669714206363a7fc00382bf477e72c1f7533e8eafc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_test\"\nversion = \"1.0.177\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f901ee573cab6b3060453d2d5f0bae4e6d628c23c0a962ff9b5f1d7c8d4f1ed\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_yaml\"\nversion = \"0.9.34+deprecated\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8b1a1a2ebf674015cc02edccce75287f1a0130d394307b36743c2f5d504b47\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simdutf8\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f27f6278552951f1f2b8cf9da965d10969b2efdea95a6ec47987ab46edfe263a\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\ndependencies = [\n \"bstr\",\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"similar-asserts\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe85670573cd6f0fa97940f26e7e6601213c3b0555246c24234131f88c5709e\"\ndependencies = [\n \"console\",\n \"similar\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6528351c9bc8ab22353f9d776db39a20288e8d6c37ef8cfe3317cf875eecfc2d\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slotmap\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a\"\ndependencies = [\n \"serde\",\n \"version_check\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05ffd9c0a93b7543e062e759284fcf5f5e3b098501104bfbdde4d404db792871\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\ndependencies = [\n \"lock_api\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strip-ansi-escapes\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55ff8ef943b384c414f54aefa961dd2bd853add74ec75e7ac74cf91dba62bcfa\"\ndependencies = [\n \"vte\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\"\n\n[[package]]\nname = \"supports-color\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6398cde53adc3c4557306a96ce67b302968513830a77a95b2b17305d9719a89\"\ndependencies = [\n \"is-terminal\",\n \"is_ci\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"tap\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369\"\n\n[[package]]\nname = \"target-triple\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42a4d50cdb458045afc8131fd91b64904da29548bcb63c7236e0844936c13078\"\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"tests_macros\"\nversion = \"0.0.0\"\ndependencies = [\n \"biome_string_case\",\n \"case\",\n \"globwalk\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl 1.0.63\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa\"\ndependencies = [\n \"thiserror-impl 2.0.3\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tikv-jemalloc-sys\"\nversion = \"0.6.0+5.3.0-1-ge13ca993e8ccb9ba9847cc330696e02839f328f7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd3c60906412afa9c2b5b5a48ca6a5abe5736aec9eb48ad05037a677e52e4e2d\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"tikv-jemallocator\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cec5ff18518d81584f477e9bfdf957f5bb0979b0bac3af4ca30b5b3ae2d2865\"\ndependencies = [\n \"libc\",\n \"tikv-jemalloc-sys\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f988a1a1adc2fb21f9c12aa96441da33a1728193ae0b95d2be22dbd17fcb4e5c\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9dd1545e8208b4a5af1aa9bbd0b4cf7e9ea08fabc5d0a5c67fcaafa17433aa3\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3328d4f68a705b2a4498da1d580585d39a6510f98318a2cec3018a7ec61ddef\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0\"\n\n[[package]]\nname = \"tower-lsp\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4ba052b54a6627628d9b3c34c176e7eda8359b7da9acd497b9f20998d118508\"\ndependencies = [\n \"async-trait\",\n \"auto_impl\",\n \"bytes\",\n \"dashmap 5.5.3\",\n \"futures\",\n \"httparse\",\n \"lsp-types\",\n \"memchr\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"tokio-util\",\n \"tower\",\n \"tower-lsp-macros\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-lsp-macros\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84fd902d4e0b9a4b27f2f440108dc034e1758628a9b702f8ec61ad66355422fa\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-appender\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3566e8ce28cc0a3fe42519fc80e6b4c943cc4c8cef275620eb8dac2d3d4e06cf\"\ndependencies = [\n \"crossbeam-channel\",\n \"thiserror 1.0.63\",\n \"time\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-serde\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"704b1aeb7be0d0a84fc9828cae51dab5970fee5088f83d1dd7ee6f6246fc6ff1\"\ndependencies = [\n \"serde\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term 0.46.0\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-serde\",\n]\n\n[[package]]\nname = \"tracing-tree\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f459ca79f1b0d5f71c54ddfde6debfc59c8b6eeb46808ae492077f739dc7b49c\"\ndependencies = [\n \"nu-ansi-term 0.50.0\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"trybuild\"\nversion = \"1.0.101\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8dcd332a5496c026f1e14b7f3d2b7bd98e509660c04239c58b0ba38a12daded4\"\ndependencies = [\n \"glob\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"target-triple\",\n \"termcolor\",\n \"toml\",\n]\n\n[[package]]\nname = \"unicase\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-bom\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eec5d1121208364f6793f7d2e222bf75a915c19557537745b195b253dd64217\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5464a87b239f13a63a501f2701565754bae92d243d4bb7eb12f6d57d2269bf4\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68f5e5f3158ecfd4b8ff6fe086db7c8467a2dfdac97fe420f2b7c4aa97af66d6\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"unreachable\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\ndependencies = [\n \"void\",\n]\n\n[[package]]\nname = \"unsafe-libyaml\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"673aac59facbab8a9007c7f6108d11f63b603f7cabff99fabf650fea5c32b861\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"ureq\"\nversion = \"2.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02d1a66277ed75f640d608235660df48c8e3c19f3b4edb6a263315626cc3c01d\"\ndependencies = [\n \"base64\",\n \"flate2\",\n \"log\",\n \"once_cell\",\n \"rustls\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"url\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d157f1b96d14500ffdc1f10ba712e780825526c03d9a49b4d0324b0d9113ada\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"vte\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5022b5fbf9407086c180e9557be968742d839e68346af7792b8592489732197\"\ndependencies = [\n \"utf8parse\",\n \"vte_generate_state_changes\",\n]\n\n[[package]]\nname = \"vte_generate_state_changes\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d257817081c7dffcdbab24b9e62d2def62e2ff7d00b1c20062551e6cccc145ff\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.9.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"serde\",\n \"serde_json\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e33b99f4b23ba3eec1a53ac264e35a755f00e966e0065077d6027c0f575b0b97\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3de34ae270483955a94f4b21bdaaeb83d508bb84a01435f393818edb0012009\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a3e1820f08b8513f676f7ab6c1f99ff312fb97b553d30ff4dd86f9f15728aa7\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.1\",\n \"windows_aarch64_msvc 0.42.1\",\n \"windows_i686_gnu 0.42.1\",\n \"windows_i686_msvc 0.42.1\",\n \"windows_x86_64_gnu 0.42.1\",\n \"windows_x86_64_gnullvm 0.42.1\",\n \"windows_x86_64_msvc 0.42.1\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\ndependencies = [\n \"windows-targets 0.42.1\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e2522491fbfcd58cc84d47aeb2958948c4b8982e9a2d8a2a35bbaed431390e7\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.1\",\n \"windows_aarch64_msvc 0.42.1\",\n \"windows_i686_gnu 0.42.1\",\n \"windows_i686_msvc 0.42.1\",\n \"windows_x86_64_gnu 0.42.1\",\n \"windows_x86_64_gnullvm 0.42.1\",\n \"windows_x86_64_msvc 0.42.1\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c9864e83243fdec7fc9c5444389dcbbfd258f745e7853198f365e3c4968a608\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c8b1b673ffc16c47a9ff48570a9d85e25d265735c503681332589af6253c6c7\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3887528ad530ba7bdbb1faa8275ec7a1155a45ffa57c37993960277145d640\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf4d1122317eddd6ff351aa852118a2418ad4214e6613a50e0191f7004372605\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1040f221285e17ebccbc2591ffdc2d44ee1f9186324dd3e84e99ac68d699c45\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"628bfdf232daa22b0d64fdb62b09fcc36bb01f05a3939e20ab73aaf9470d0463\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"447660ad36a13288b1db4d4248e857b510e8c3a225c822ba4fb748c0aafecffd\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14b9415ee827af173ebb3f15f9083df5a122eb93572ec28741fb153356ea2578\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"wyz\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed\"\ndependencies = [\n \"tap\",\n]\n\n[[package]]\nname = \"xorfilter-rs\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47f9da296a88b6bc150b896d17770a62d4dc6f63ecf0ed10a9c08a1cb3d12f24\"\n\n[[package]]\nname = \"xtask\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n]\n\n[[package]]\nname = \"xtask_bench\"\nversion = \"0.0.0\"\ndependencies = [\n \"ansi_rgb\",\n \"biome_analyze\",\n \"biome_css_analyze\",\n \"biome_css_formatter\",\n \"biome_css_parser\",\n \"biome_css_syntax\",\n \"biome_diagnostics\",\n \"biome_formatter\",\n \"biome_graphql_formatter\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_grit_patterns\",\n \"biome_js_analyze\",\n \"biome_js_formatter\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_json_formatter\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"codspeed-criterion-compat\",\n \"criterion\",\n \"mimalloc\",\n \"tikv-jemallocator\",\n \"ureq\",\n \"url\",\n]\n\n[[package]]\nname = \"xtask_codegen\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"biome_analyze\",\n \"biome_cli\",\n \"biome_configuration\",\n \"biome_css_analyze\",\n \"biome_css_syntax\",\n \"biome_diagnostics\",\n \"biome_graphql_analyze\",\n \"biome_graphql_parser\",\n \"biome_graphql_syntax\",\n \"biome_js_analyze\",\n \"biome_js_factory\",\n \"biome_js_formatter\",\n \"biome_js_parser\",\n \"biome_js_syntax\",\n \"biome_json_analyze\",\n \"biome_json_formatter\",\n \"biome_json_parser\",\n \"biome_json_syntax\",\n \"biome_rowan\",\n \"biome_service\",\n \"biome_string_case\",\n \"biome_ungrammar\",\n \"bpaf\",\n \"git2\",\n \"proc-macro2\",\n \"pulldown-cmark\",\n \"quote\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"ureq\",\n \"xtask\",\n]\n\n[[package]]\nname = \"xtask_coverage\"\nversion = \"0.0.0\"\ndependencies = [\n \"ascii_table\",\n \"backtrace\",\n \"biome_console\",\n \"biome_diagnostics\",\n \"biome_js_parser\",\n \"biome_js_semantic\",\n \"biome_js_syntax\",\n \"biome_parser\",\n \"biome_rowan\",\n \"biome_string_case\",\n \"colored\",\n \"indicatif\",\n \"pico-args\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"walkdir\",\n \"xtask\",\n \"yastl\",\n]\n\n[[package]]\nname = \"xtask_libs_bench\"\nversion = \"0.0.0\"\ndependencies = [\n \"criterion\",\n \"fastbloom-rs\",\n \"fst\",\n \"iai\",\n \"memchr\",\n \"qp-trie\",\n \"regex\",\n]\n\n[[package]]\nname = \"xxhash-rust\"\nversion = \"0.8.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"927da81e25be1e1a2901d59b81b37dd2efd1fc9c9345a55007f09bf5a2d3ee03\"\n\n[[package]]\nname = \"yastl\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ca6c5a4d66c1a9ea261811cf4773c27343de7e5033e1b75ea3f297dc7db3c1a\"\ndependencies = [\n \"flume\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c5b1314b079b0930c31e3af543d8ee1757b1951ae1e1565ec704403a7240ca5\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cc31741b18cb6f1d5ff12f5b7523e3d6eb0852bbbad19d73905511d9849b95\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91ec111ce797d0e0784a1116d0ddcdbea84322cd79e5d5ad173daeba4f93ab55\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ea7b4a3637ea8669cedf0f1fd5c286a17f3de97b8dd5a70a6c167a1730e63a5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"525b4ec142c6b68a2d10f01f7bbf6755599ca3f81ea53b8431b7dd348f5fdb2d\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.87\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 11.12109375,
          "content": "[workspace]\n# Use the newer version of the cargo resolver\n# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions\nmembers  = [\"crates/*\", \"xtask/bench\", \"xtask/codegen\", \"xtask/coverage\", \"xtask/libs_bench\", \"xtask/rules_check\"]\nresolver = \"2\"\n\n[workspace.lints.rust]\nabsolute_paths_not_starting_with_crate = \"warn\"\ndead_code                              = \"warn\"\ntrivial_numeric_casts                  = \"warn\"\nunused_import_braces                   = \"warn\"\nunused_lifetimes                       = \"warn\"\nunused_macro_rules                     = \"warn\"\n\n[workspace.lints.clippy]\nallow_attributes        = \"deny\"\ncargo_common_metadata   = \"allow\"\nempty_docs              = \"allow\" # there are some false positives inside biome_wasm\nmultiple_crate_versions = \"allow\"\n\n# pedantic\nassigning_clones             = \"warn\"\nchecked_conversions          = \"warn\"\ncloned_instead_of_copied     = \"warn\"\ncopy_iterator                = \"warn\"\ndbg_macro                    = \"warn\"\ndoc_link_with_quotes         = \"warn\"\nempty_enum                   = \"warn\"\nexpl_impl_clone_on_copy      = \"warn\"\nexplicit_into_iter_loop      = \"warn\"\nfilter_map_next              = \"warn\"\nflat_map_option              = \"warn\"\nfn_params_excessive_bools    = \"warn\"\nfrom_iter_instead_of_collect = \"warn\"\nimplicit_clone               = \"warn\"\nimplicit_hasher              = \"warn\"\nindex_refutable_slice        = \"warn\"\ninefficient_to_string        = \"warn\"\ninvalid_upcast_comparisons   = \"warn\"\niter_filter_is_ok            = \"warn\"\niter_not_returning_iterator  = \"warn\"\nlarge_stack_arrays           = \"warn\"\nlarge_types_passed_by_value  = \"warn\"\nmacro_use_imports            = \"warn\"\nmanual_is_variant_and        = \"warn\"\nmanual_ok_or                 = \"warn\"\nmanual_string_new            = \"warn\"\nmap_flatten                  = \"warn\"\nmap_unwrap_or                = \"warn\"\nmismatching_type_param_order = \"warn\"\nmut_mut                      = \"warn\"\nnaive_bytecount              = \"warn\"\nneedless_bitwise_bool        = \"warn\"\nneedless_continue            = \"warn\"\nneedless_for_each            = \"warn\"\nno_effect_underscore_binding = \"warn\"\noption_as_ref_cloned         = \"warn\"\nref_binding_to_reference     = \"warn\"\nref_option_ref               = \"warn\"\nsingle_char_pattern          = \"warn\"\nstable_sort_primitive        = \"warn\"\nstr_split_at_newline         = \"warn\"\nunnecessary_box_returns      = \"warn\"\nunnecessary_join             = \"warn\"\nunnested_or_patterns         = \"warn\"\nunreadable_literal           = \"warn\"\nverbose_bit_mask             = \"warn\"\nzero_sized_map_values        = \"warn\"\n\n# restriction\ncfg_not_test                      = \"warn\"\nempty_drop                        = \"warn\"\nempty_enum_variants_with_brackets = \"warn\"\nfloat_cmp_const                   = \"warn\"\nget_unwrap                        = \"warn\"\ninfinite_loop                     = \"warn\"\nlossy_float_literal               = \"warn\"\nrc_buffer                         = \"warn\"\nrc_mutex                          = \"warn\"\nrest_pat_in_fully_bound_structs   = \"warn\"\nstring_lit_chars_any              = \"warn\"\nverbose_file_reads                = \"warn\"\n# https://github.com/rustwasm/wasm-bindgen/issues/3944\n#mem_forget                      = \"warn\"\n\n[workspace.package]\nauthors    = [\"Biome Developers and Contributors\"]\ncategories = [\"development-tools\", \"web-programming\"]\nedition    = \"2021\"\nhomepage   = \"https://biomejs.dev/\"\nkeywords   = [\"parser\", \"linter\", \"formatter\"]\nlicense    = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/biomejs/biome\"\n\n[profile.release-with-debug]\ndebug    = true\ninherits = \"release\"\n\n[workspace.dependencies]\n# publish\nbiome_analyze                = { version = \"0.5.7\", path = \"./crates/biome_analyze\" }\nbiome_aria                   = { version = \"0.5.7\", path = \"./crates/biome_aria\" }\nbiome_aria_metadata          = { version = \"0.5.7\", path = \"./crates/biome_aria_metadata\" }\nbiome_console                = { version = \"0.5.7\", path = \"./crates/biome_console\" }\nbiome_control_flow           = { version = \"0.5.7\", path = \"./crates/biome_control_flow\" }\nbiome_css_analyze            = { version = \"0.5.7\", path = \"./crates/biome_css_analyze\" }\nbiome_css_factory            = { version = \"0.5.7\", path = \"./crates/biome_css_factory\" }\nbiome_css_formatter          = { version = \"0.5.7\", path = \"./crates/biome_css_formatter\" }\nbiome_css_parser             = { version = \"0.5.7\", path = \"./crates/biome_css_parser\" }\nbiome_css_semantic           = { version = \"0.0.0\", path = \"./crates/biome_css_semantic\" }\nbiome_css_syntax             = { version = \"0.5.7\", path = \"./crates/biome_css_syntax\" }\nbiome_deserialize            = { version = \"0.6.0\", path = \"./crates/biome_deserialize\" }\nbiome_deserialize_macros     = { version = \"0.6.0\", path = \"./crates/biome_deserialize_macros\" }\nbiome_diagnostics            = { version = \"0.5.7\", path = \"./crates/biome_diagnostics\" }\nbiome_diagnostics_categories = { version = \"0.5.7\", path = \"./crates/biome_diagnostics_categories\" }\nbiome_diagnostics_macros     = { version = \"0.5.7\", path = \"./crates/biome_diagnostics_macros\" }\nbiome_formatter              = { version = \"0.5.7\", path = \"./crates/biome_formatter\" }\nbiome_fs                     = { version = \"0.5.7\", path = \"./crates/biome_fs\" }\nbiome_glob                   = { version = \"0.1.0\", path = \"./crates/biome_glob\" }\nbiome_graphql_analyze        = { version = \"0.0.1\", path = \"./crates/biome_graphql_analyze\" }\nbiome_graphql_factory        = { version = \"0.1.0\", path = \"./crates/biome_graphql_factory\" }\nbiome_graphql_formatter      = { version = \"0.1.0\", path = \"./crates/biome_graphql_formatter\" }\nbiome_graphql_parser         = { version = \"0.1.0\", path = \"./crates/biome_graphql_parser\" }\nbiome_graphql_semantic       = { version = \"0.0.0\", path = \"./crates/biome_graphql_semantic\" }\nbiome_graphql_syntax         = { version = \"0.1.0\", path = \"./crates/biome_graphql_syntax\" }\nbiome_grit_factory           = { version = \"0.5.7\", path = \"./crates/biome_grit_factory\" }\nbiome_grit_formatter         = { version = \"0.0.0\", path = \"./crates/biome_grit_formatter\" }\nbiome_grit_parser            = { version = \"0.1.0\", path = \"./crates/biome_grit_parser\" }\nbiome_grit_patterns          = { version = \"0.0.1\", path = \"./crates/biome_grit_patterns\" }\nbiome_grit_syntax            = { version = \"0.5.7\", path = \"./crates/biome_grit_syntax\" }\nbiome_html_factory           = { version = \"0.5.7\", path = \"./crates/biome_html_factory\" }\nbiome_html_formatter         = { version = \"0.0.0\", path = \"./crates/biome_html_formatter\" }\nbiome_html_parser            = { version = \"0.0.1\", path = \"./crates/biome_html_parser\" }\nbiome_html_syntax            = { version = \"0.5.7\", path = \"./crates/biome_html_syntax\" }\nbiome_js_analyze             = { version = \"0.5.7\", path = \"./crates/biome_js_analyze\" }\nbiome_js_factory             = { version = \"0.5.7\", path = \"./crates/biome_js_factory\" }\nbiome_js_formatter           = { version = \"0.5.7\", path = \"./crates/biome_js_formatter\" }\nbiome_js_parser              = { version = \"0.5.7\", path = \"./crates/biome_js_parser\" }\nbiome_js_semantic            = { version = \"0.5.7\", path = \"./crates/biome_js_semantic\" }\nbiome_js_syntax              = { version = \"0.5.7\", path = \"./crates/biome_js_syntax\" }\nbiome_json_analyze           = { version = \"0.5.7\", path = \"./crates/biome_json_analyze\" }\nbiome_json_factory           = { version = \"0.5.7\", path = \"./crates/biome_json_factory\" }\nbiome_json_formatter         = { version = \"0.5.7\", path = \"./crates/biome_json_formatter\" }\nbiome_json_parser            = { version = \"0.5.7\", path = \"./crates/biome_json_parser\" }\nbiome_json_syntax            = { version = \"0.5.7\", path = \"./crates/biome_json_syntax\" }\nbiome_lsp_converters         = { version = \"0.1.0\", path = \"./crates/biome_lsp_converters\" }\nbiome_markdown_factory       = { version = \"0.0.1\", path = \"./crates/biome_markdown_factory\" }\nbiome_markdown_parser        = { version = \"0.0.1\", path = \"./crates/biome_markdown_parser\" }\nbiome_markdown_syntax        = { version = \"0.0.1\", path = \"./crates/biome_markdown_syntax\" }\nbiome_ungrammar              = { version = \"0.3.1\", path = \"./crates/biome_ungrammar\" }\nbiome_yaml_factory           = { version = \"0.0.1\", path = \"./crates/biome_yaml_factory\" }\nbiome_yaml_parser            = { version = \"0.0.1\", path = \"./crates/biome_yaml_parser\" }\nbiome_yaml_syntax            = { version = \"0.0.1\", path = \"./crates/biome_yaml_syntax\" }\n\nbiome_markup        = { version = \"0.5.7\", path = \"./crates/biome_markup\" }\nbiome_parser        = { version = \"0.5.7\", path = \"./crates/biome_parser\" }\nbiome_project       = { version = \"0.5.7\", path = \"./crates/biome_project\" }\nbiome_rowan         = { version = \"0.5.7\", path = \"./crates/biome_rowan\" }\nbiome_string_case   = { version = \"0.5.7\", path = \"./crates/biome_string_case\" }\nbiome_suppression   = { version = \"0.5.7\", path = \"./crates/biome_suppression\" }\nbiome_text_edit     = { version = \"0.5.7\", path = \"./crates/biome_text_edit\" }\nbiome_text_size     = { version = \"0.5.7\", path = \"./crates/biome_text_size\" }\nbiome_unicode_table = { version = \"0.5.7\", path = \"./crates/biome_unicode_table\" }\n\n# not publish\nbiome_cli            = { path = \"./crates/biome_cli\" }\nbiome_configuration  = { path = \"./crates/biome_configuration\" }\nbiome_flags          = { path = \"./crates/biome_flags\" }\nbiome_formatter_test = { path = \"./crates/biome_formatter_test\" }\nbiome_lsp            = { path = \"./crates/biome_lsp\" }\nbiome_migrate        = { path = \"./crates/biome_migrate\" }\nbiome_service        = { path = \"./crates/biome_service\" }\nbiome_test_utils     = { path = \"./crates/biome_test_utils\" }\ntests_macros         = { path = \"./crates/tests_macros\" }\n\n# Crates needed in the workspace\nanyhow             = \"1.0.95\"\nbpaf               = { version = \"0.9.15\", features = [\"derive\"] }\ncountme            = \"3.0.1\"\ncrossbeam          = \"0.8.4\"\ndashmap            = \"6.1.0\"\nenumflags2         = \"0.7.10\"\ngetrandom          = \"0.2.15\"\nglobset            = \"0.4.15\"\nignore             = \"0.4.23\"\nindexmap           = { version = \"2.7.0\", features = [\"serde\"] }\ninsta              = \"1.42.0\"\nnatord             = \"1.0.9\"\noxc_resolver       = \"3.0.3\"\nproc-macro2        = \"1.0.86\"\nquickcheck         = \"1.0.3\"\nquickcheck_macros  = \"1.0.0\"\nquote              = \"1.0.38\"\nrayon              = \"1.10.0\"\nregex              = \"1.11.1\"\nrustc-hash         = \"2.1.0\"\nschemars           = { version = \"0.8.21\", features = [\"indexmap2\", \"smallvec\"] }\nserde              = { version = \"1.0.217\", features = [\"derive\"] }\nserde_ini          = \"0.2.0\"\nserde_json         = \"1.0.134\"\nsimilar            = \"2.6.0\"\nslotmap            = \"1.0.7\"\nsmallvec           = { version = \"1.13.2\", features = [\"union\", \"const_new\", \"serde\"] }\nsyn                = \"1.0.109\"\ntermcolor          = \"1.4.1\"\ntokio              = \"1.42.0\"\ntracing            = { version = \"0.1.41\", default-features = false, features = [\"std\"] }\ntracing-subscriber = \"0.3.19\"\nunicode-bom        = \"2.0.3\"\nunicode-width      = \"0.1.12\"\n[profile.dev.package.biome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.test.package.biome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.release.package.biome_wasm]\ndebug     = false\nopt-level = 3\n\n#[patch.crates-io]\n#grit-pattern-matcher = { path = \"../gritql/crates/grit-pattern-matcher\" }\n#grit-util            = { path = \"../gritql/crates/grit-util\" }\n"
        },
        {
          "name": "Dockerfile.benchmark",
          "type": "blob",
          "size": 0.4501953125,
          "content": "FROM rust:1.83.0@sha256:a45bf1f5d9af0a23b26703b3500d70af1abff7f984a7abef5a104b42c02a292b\nWORKDIR /usr/src/\n\n# https://github.com/nodesource/distributions\nRUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && apt-get install -y nodejs\nRUN cargo install hyperfine\n\nCOPY Cargo.toml Cargo.lock ./\nCOPY ./crates ./crates\nCOPY ./xtask ./xtask\n\nWORKDIR /usr/src/benchmark\n\nCOPY ./benchmark .\n\nRUN npm ci\nRUN node bench.js formatter\nRUN node bench.js linter\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 21.876953125,
          "content": "# Governance\n\nThis document outlines the governance model for Biome.\n\nIt describes various parts of how the project is managed as well as accepted practices for day-to-day operation:\n\n- [Contributor Model](#contributor-model)\n- [Project Direction](#project-direction)\n- [Code Review](#code-review)\n- [Financial Contributions](#financial-contributions)\n- [Moderation](#moderation)\n\n## Contributor Model\n\nAll members must follow the [Code of Conduct](CODE_OF_CONDUCT.md). Consequences for member violations are detailed in [Moderation](#moderation).\n\n### Lead\n\nLeads are the owners of the organisation.\n\nLeads have additional privileges over core contributors. Leads control and maintain sensitive project assets and act as tiebreakers in the event of disagreements. In case of disagreements, only **one** lead must be involved in the resolution.\n\nThese assets and responsibilities are but are not limited to:\n- Access to social accounts\n- Administration privileges of the [Biome Discord server][discord]\n- Administration privileges of the [Biome GitHub org][gh-org]\n- Website accesses (hosting platform, domain name, etc.)\n- Access to sensitive emails, such as the CoC email\n\nAlso:\n- Ability to vote for new leads\n- Onboard new [core contributors](#core-contributor) and new leads;\n- Takes part in [project decisions](#project-direction-and-planning)\n\nThe ownership of assets is only sometimes evenly distributed among all the leads.\n\n#### Lead nomination\n\nLeads may only be self-nominated. Being a lead only adds burden to a core contributor: more rights to be held accountable with, and more responsibilities.\n\nWhen nominating a lead, a new thread in the `#leads` channel with a case of why the person should join as [core contributor](#core-contributor) has to be created.\n\n`#leads` is a private channel available only to people who have the `Lead` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a lead if all the other leads vote in favour.\n\nIf vote is successful, the lead will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have yet to meet. Details of the discussion - for example, those who objected to the nomination - will not be disclosed.\n\n### Core Contributor\n\nCore Contributors are outstanding [maintainers](#maintainer), are ambassadors of Biome organisation and lead by example the community.\n\n- Push access to the [Biome GitHub org][gh-org], this includes all repositories\n- `Core contributor` status on the [Biome Discord server][discord]\n- Takes part in [project decisions](#project-direction-and-planning)\n- Ability to [vote](#maintainer-nomination) on new maintainers and [vote](#core-contributor-nomination) on new core contributors\n- Onboard new [maintainers](#maintainer)\n- Assign [pledges to issues](#bounties).\n\n#### Core contributor nomination\n\nOnly [maintainers](#maintainer) can be nominated to be core contributors.\n\nCore contributors may either be nominated by another, [Core contributor](#core-contributor), or [lead](#lead).\n\nWhen nominating a core contributor, a new **private** thread in the `#core-contributors` channel has to be created, with a case and [their contributions](#contributions) of why the person should join as [core contributor](#core-contributor).\n\n`#core-contributors` is a private channel available only to people who have the `Core contributor` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a [core contributor](#core-contributor) if:\n- receive at least a positive vote from a [lead](#lead);\n- more than 70% of positive votes across the members of the Core contributors team;\n\nVoting requirements may change in the future based on the amount of people involved in the vote.\n\nA core contributor can be self-nominated. They will have to message a [lead maintainer](#lead) privately and present a case. Then, the lead can:\n- reject the nomination in place, provide reasons why and possibly some suggestions for the future; the lead\n- initiate a voting session among the core contributors;\n\nWhen the verdict is reached, the thread will be deleted, and a [lead](#lead) will reach out to the nominee.\n\nIf vote is successful, the core member will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have yet to meet. Details of the discussion - for example, those who objected to the nomination - will not be disclosed.\n\n### Maintainer\n\nMaintainers are those with a history of consistent contributions, including but not limited to pull requests, project management, or support. These privileges include:\n\n- Push access to some of the repositories of the [Biome GitHub org][gh-org]\n- `Maintainer` status on the [Biome Discord server][discord]\n- Ability to [vote](#voting) on project decisions\n- Ability to [vote](#maintainer-nomination) on new maintainers\n\n#### Maintainer nomination\n\nMaintainers may either be nominated by another [maintainer](#maintainer), [Core contributor](#core-contributor), [lead](#lead).\n\nWhen nominating a new maintainer, a new **private** thread in the `#maintainers` channel has to be created, provide a link to the history of the [person's contributions](#contributions) to the project and a brief explanation of why the person should join as [maintainer](#maintainer).\n\n`#maintainers` is a private channel available only to people who have the `maintainer` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a [maintainer](#maintainer) if:\n- reaches more than 50% of positive votes among the people who have voting rights;\n- if the voting session ends with 50%, the Leads will take the decision;\n\nA maintainer can be self-nominated. They will have to message a [lead maintainer](#lead) privately with links to their contributions to the project. Then, the lead can:\n- reject the nomination in place, provide reasons why and possibly some suggestions for the future;\n- initiate a voting session among the maintainers;\n\nWhen the verdict is reached, the thread will be deleted, and a [core contributor](#core-contributor) or [lead](#lead) will reach out to the nominee.\n\nIf vote is successful, the person reaching out will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have not met. Details of the discussion, such as the names of those who objected the nomination, will not be disclosed.\n\n### Voting Rules\n\n- The voting sessions are run in Discord, so Maintainers and Core Contributors are expected to have an account.\n- Members are required to vote.\n- Members may abstain from a vote.\n- Members who do not vote within three days will automatically abstain.\n- Leads may reduce the three days automatic abstain for urgent decisions.\n- Leads reserve the right to veto approval with a publicly disclosed reason.\n- It's highly suggested to pair the vote with a reason of the vote, e.g. \"I vote in favour because that person writes good code\". These reasons will be collected and brought up to the nominee at the end of the voting phase.\n\n### Ownership\n\nOne or more people can own certain parts of the codebase. This process is informal, and inclusion could result from substantial contributions or delegation by other members. A maintainer's responsibility is to identify the relevant owners and ensure there's an understanding when it comes to code review.\n\n### Inactivity\n\nThere aren't strict requirements and expectations around activity for core contributors and maintainers; although long periods of inactivity must be communicated to the team.\n\nInactive core contributors or maintainers may have voting and access rights removed and status removed, and given them the _Past maintainer_ status. A core contributor or maintainer may request their voting rights and status back upon sufficient activity.\n\n> [!NOTE]\n> The definition of \"long periods\", and how long an individual needs to stay inactive in order to have their voting rights removed have yet to be decided.\n\n### Contributions\n\nContributions to the project aren't only limited to code. Contributions come in different forms and ways:\n- Documentation\n- Code to all the repositories of the [GitHub org][gh-org]\n- Support in primary channels of the organization, e.g. GitHub and Discord\n- Support in secondary channels, e.g. StackOverflow, etc.\n- Website;\n\n## Project Direction\n\nProject direction and planning is a shared responsibility amongst members. Core contributors are responsible for dictating high-level goals and the project scope that should be adhered to.\n\n### Roadmap\n\nLeads may create a roadmap document to share with the community once the core contributors have set the project's goals.\n\nRoadmaps don't provide dates or deadlines; they only reflect what the core contributors decide to work on and how to spend the resources.\n\nThe span of a roadmap should cover one year, but it might vary.\n\n## Code review\n\nWe have a reasonably liberal approach to code review and merging. We value quick iteration and low development friction, which comes with great responsibility. Reverting code is easy, so landing code should be just as easy. Because of this, Biome will have discrete releases rather than rolling releases that are automatically published.\n\n- If you own a particular area, you can merge it without any review despite PR size.\n- If there are comments or suggestions after a PR is merged after the fact, allow yourself time to address them in a follow-up PR. If you don't respond in a reasonable timeframe, then create an issue to track.\n- Ensure that the PR summary is detailed, listing steps you took to verify the rationale and relevant issues and people involved in any prior discussion.\n- Ensure that PRs contain adequate tests and code comments for a future contributor to derive intent and modify your code safely.\n- You are welcome to the repos for your WIP branches. If you don't use your own fork, prepend the name of the branch with your github handle, e.g. `<handle>/experiment-code` Branches that have more than four months of inactivity will be pruned.\n- If you add a new feature, ensure it has been discussed or approved on GitHub or Discord.\n- If necessary, identify potential owners for PR review and approval.\n- All code must go through Pull Requests (PR) and pass status checks before being merged. If a PR is merged that breaks `main` due to the branch not being up-to-date, then it should either be reverted or a quick fix merged as a separate PR.\n- If a PR is against code you have previously committed and is either small changes, bug fixes, or refactors, then you're free to merge it without any review. However, if you need more confidence in your changes, you can wait for approval from another maintainer or core contributor.\n\n## Financial Contributions\n\nThere are three ways to fund Biome and its development: sponsorship, funded bounties, and paid\ncontracts. We strongly prefer and recommend sponsorship, but are willing to facilitate both bounties\nand contracting under some conditions.\n\n### Sponsorship\n\nSponsorship is the first and foremost way of making financial contributions to Biome. Sponsorship can be\ndone through a one-time donation, or through recurring donations. We offer incentives for certain levels of recurring donations.\n\nTo learn more about sponsorship incentives, or to make a donation, please visit our [Open Collective page](https://opencollective.com/biome).\nYou can also sponsor the project through [GitHub](https://github.com/sponsors/biomejs).\n\n### Community-Funded Bounties\n\nBounties are the second approach towards funding Biome development. Unlike a sponsorship, bounties are directed towards the implementation of a specific feature. Compared to sponsorship, bounties come with a few risks, both for Biome as a project and for the people or entities offering and collecting the bounty. To minimize these risks, we only sanction bounties under the following conditions:\n\n- Bounties must be pledged through Polar.sh on an issue that is opened in our issue tracker.\n  - Unless otherwise specified, Biome reserves 30% of the payment amount, meaning contributors receive 70% of the pledged amount.\n  - The commission charged by Polar.sh is split accordingly.\n  - We reserve the right to decide on a different split in the future.\n- Bounties cannot be opened for bug fixes. Users who wish to see bugs fixed are advised to consider [sponsorship](#sponsorship) instead, in order to give the project a better long-term ability to fix bugs as well.\n- If an issue in our issue tracker is not yet open for pledges, the person who wishes to pledge should indicate their desire in the comments of the issue, or do so through the `Community > #funding` channel on Discord. A [Core Contributor](#core-contributor) can then **accept** or **reject** the request for the bounty. Reasons for rejection include, but are not limited to:\n  - Implementation of the task would conflict with the project direction or [its values](https://biomejs.dev/internals/philosophy/).\n  - Implementation of the task is (currently) technically infeasible.\n  - The suggested pledge is deemed inappropriate for the amount of work involved.\n- The person making the pledge acknowledges their pledge does not come with a guarantee of work done.\n- A task is only completed when a Biome maintainer merges the pull request that closes the task. The person trying to complete the task is responsible for addressing review comments to make sure the work meets the quality standards of the Biome project.\n- There is a 6 month expiration on pledges, as managed by Polar.sh.\n- Terms and conditions of Polar.sh apply to all pledges.\n  - For the FAQ, please see: https://docs.polar.sh/maintainers/faq/\n  - For the legal terms, please see: https://polar.sh/legal/terms\n- If you are receiving money as part of a bounty, please consider whether you need to pay taxes in your country. Core contributors and Maintainers aren't obligated to give tax advice over the money received.\n\n### Project-Funded Bounties\n\nIn some cases, Biome funds bounties on its own issues in order to further the project goals as laid out in its [roadmap](#roadmap). Because Biome is the one funding these issues, it also means **100% of the pledged amount will go to the contributor completing the task**. Project-Funded Bounties have the same conditions applied to them as [Community-Funded Bounties](#community-funded-bounties). But given that these issues are funded using money that ultimately comes from our sponsors, we have additional restrictions in place:\n\n- Implementation of the task funded by Biome must advance our [roadmap](#roadmap) or help with essential infrastructure.\n  - The task description must include a clear rationale for why this task is eligible for funding.\n- To avoid paying a commission on our own bounties, we do not assign funds through Polar.sh. Instead, we ask contributors to take the money directly from our Open Collective account upon completion of the task.\n  - Unfortunately, this means Project-Funded Bounties can only be assigned to [Core Contributors](#core-contributor) at this moment since they have access to our Open Collective account.\n\nAdditionally, there is a strict process for assigning Project-Funded Bounties:\n\n- To request Biome funding for a task, a request with a clear rationale must be made in the `Community > #funding` channel on Discord.\n  - To make sure our Core Contributors don't have to worry about overlooking Biome-funding-related decisions, requests made on GitHub issues are not sufficient for a funding request.\n- If no Core Contributor raises objections within three (3) days, then any Core Contributor can assign the pledge to the issue and assign the requester to it.\n  - The waiting period is optional if a Lead approves the request.\n  - If an objection is raised, the request is put on hold until a Lead makes the final decision.\n- There is a maximum amount of issues with pledges someone can have assigned to them. The limit is 2 for core contributors, and 1 for anyone else. By limiting the amount of issues with pledges that someone can have assigned, we make sure the bounties remain available for others to pick up.\n\n### Paid Contracting\n\nCore Contributors may enter freelance contracts with clients to work on Biome. Such contracts are\nbetween the contributor and their client, so they fall mostly outside the responsibility of the\nBiome project. Nevertheless, we can explicitly endorse such contracts under the following\nconditions:\n\n- Core Contributors that are open to contracts may be advertised on the project website if they\n  please.\n- Clients that hire a Core Contributor to work on Biome for an extended period (3 months or more)\n  are eligible to the same benefits as a project sponsor. Their sponsorship benefits will be based\n  on the monthly fee paid to the Core Contributor.\n- If the work that is expected to be delivered does not contribute to Biome's last-published\n  roadmap, Biome asks for a 30% fee over the total gross amount, excluding VAT, earned through the\n  contract. This is to cover review, project upkeep and continued maintenance of the functionality\n  after merging.\n  - For work that directly benefits the Biome roadmap, no such fee is required. For work that partly\n    or indirectly benefits the roadmap, a customized fee may be negotiated.\n  - If the last-published roadmap is more than 12 months old, the Core Contributor is asked to\n    consult with the Core team about alignment with the project goals.\n  - Fee negotiation may happen either publically in the `Community > #funding` channel, or privately\n    in the `Core > #core-team` channel.\n  - Custom fees require the approval of at least one Lead.\n- The work may not conflict with the project direction or\n  [its values](https://biomejs.dev/internals/philosophy/).\n- When a Core Contributor starts or ends a paid contract, it should be announced in the\n  `Core > #core-team` channel.\n- Biome and its members cannot be held responsible for the performance of any individual\n  contributor. We may help clients who are interested in hiring a Biome contributor for a contract\n  to get in contact with them, but we cannot guarantee their performance. It is the client's\n  responsibility to do due diligence and determine whether the contributor is suitable for the\n  assigned contract.\n\n### Fund Allocation\n\n**Funds will be allocated for project-specific services**:\n  - Domain registrations\n  - Website hosting\n  - Password manager to manage secrets and passwords among Lead members\n\nAdditionally, we may use funds for assigning [Project-Funded Bounties](#project-funded-bounties).\n\n#### Expenses\n\nCore contributors are allowed to claim expenses related to conferences where they talk about Biome, or Biome workshops that they run. Expenses that can be claimed include, but are not limited to: trip (plane, train, etc.), meals, transport, parking.\n  - The person will have to provide proof of attendance (badge, video, etc.);\n  - Expenses will have to be uploaded via the open collective website.\n  - Only the expenses that are afforded in the days of the workspace/conference are accepted:\n    - If a conference lasts multiple days and the member decides to attend *both* days, and the member speaks only the first day, only the expenses of the first day should be taken in consideration. In this example, if the member booked three nights in a hotel to attend these two days, the expense should be divided by 3  - three nights - and only expense 2 days: night before the conference, plus the night of the day the member speaks.\n    - If a conference lasts one day and the member decides to make their performance longer, all the expenses afforded in the other days won't be accepted. Only 2 nights of accommodation are accepted.\n\nExpenses must be approved by at least one [Lead](#lead). In the presence of one single Lead, the Lead will ask one Core Contributor to fact-check the honesty of expenses, and leave a comment in the Open Collective expense page. In case of multiple leads, the Lead submitting the expense must seek the approval of at least one other Lead.\n\n> [!NOTE]\n> Other usage of funds has yet to be decided.\n\n## Moderation\n\nOutlined below is the process for Code of Conduct violation reviews.\n\n### Reporting\n\nAnyone may report a violation. Violations can be reported in the following ways:\n\n- In private, via <biomejs@googlegroups.com> which is listed in the [Code of Conduct](./CODE_OF_CONDUCT.md). All core contributors monitor this email address.\n- In private, via email to one or more core contributors.\n- In private, via direct message to a core contributor on [Discord server][discord].\n- In public, via a GitHub comment (mentioning `@biomejs/core-contributors`).\n- In public, via the project [Discord server][discord].\n\n### Who gets involved?\n\nEach report will be assigned reviewers. These will initially be all project [core contributors](#core-contributors-team).\n\nIn the event of any conflict of interest - e.g. core contributors who are personally connected to a situation they must immediately recuse themselves.\n\nAt the reporter's request and if deemed appropriate by the reviewers, another neutral third party may be involved in the review and decision process.\n\n### Review\n\nIf a report doesn't contain enough information, the reviewers will strive to obtain all relevant data before acting.\n\nThe reviewers will then review the incident and determine, to the best of their ability:\n\n- What happened.\n- Whether this event constitutes a Code of Conduct violation.\n- Who, if anyone, was involved in the violation.\n- Whether this is an ongoing situation.\n\nThe reviewers should aim to have a resolution agreed very rapidly; if they have not decided within a week, they will inform the parties of the planned date.\n\n### Resolution\n\nThe reviewers will determine responses based on the information gathered and the potential consequences. It may include:\n\n- Taking no further action\n- Issuing a reprimand (private or public)\n- Asking for an apology (private or public)\n- Permanent ban from the GitHub org and Discord server\n- Revoked contributor or moderator status\n\n[gh-org]: https://github.com/biomejs\n[discord]: https://biomejs.dev/chat\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.603515625,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright (c) 2023 Biome Developers and Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.146484375,
          "content": "MIT License\n\nCopyright (c) 2023-present Biome Developers and Contributors.\nCopyright (c) 2020-2023 Rome Tools is Rome Tools, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.0341796875,
          "content": "./packages/@biomejs/biome/README.md"
        },
        {
          "name": "ROME_CHANGELOG.md",
          "type": "blob",
          "size": 45.123046875,
          "content": "# Rome changelog\n\nBiome is a fork of [Rome Tools](https://github.com/rome/tools).\nThis CHANGELOG describes all released of Rome Tools.\n\nAll releases of Biome are described in its own [CHANGELOG](./CHANGELOG.md).\n\n## 12.1.3\n\n### CLI\n\n#### Other changes\n\n- `rome lsp-proxy` should accept the global CLI options [#4505](https://github.com/rome/tools/issues/4505)\n- Enhance help descriptions\n- Accept the environment variable 'ROME_BINARY' to override the Rome binary\n\n### Configuration\n\n#### Other changes\n\n- Fix an issue where all the `nursery` were enabled when the `\"nursery\": {}` object\nwas defined [#4479](https://github.com/rome/tools/issues/4479)\n\n### Formatter\n\n### Linter\n\n#### Other changes\n\n- Fix false positive diagnostics ([#4483](https://github.com/rome/tools/issues/4483)) that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to returning call expressions of a hook.\n- Revert [#4359](https://github.com/rome/tools/issues/4359)\n\n### Parser\n\n#### Other changes\n\n- Revert [#4359](https://github.com/rome/tools/issues/4359)\n\n\n## 12.1.2\n\n### Configuration\n\n#### Other changes\n\n- Fix regression where a specific combination of configuration didn't load\nthe correct rules to apply [#4502](https://github.com/rome/tools/issues/4502)\n\n### Linter\n\n#### New rules\n- [`noUselessTypeConstraint`](https://docs.rome.tools/lint/rules/noUselessTypeConstraint/)\n\n#### Other changes\n\n- [`noInnerDeclarations`](https://docs.rome.tools/lint/rules/noinnerdeclarations/): allow function declarations in nested block inside an _ES module_ [#4492](https://github.com/rome/tools/issues/4492).\n- [`noInvalidConstructorSuper`](https://docs.rome.tools/lint/rules/noinvalidconstructorsuper/): recognize `extends` clauses that use static member access such as `extends mod.C` [#4499](https://github.com/rome/tools/issues/4499)\n\n## 12.1.1\n\n### CLI\n\n#### Other changes\n\n- Fix regression where the command `lsp-proxy` was renamed `lsp_proxy` [#4489](https://github.com/rome/tools/issues/4489)\n\n\n### Configuration\n\n#### Other changes\n\n- Fix an issue where Rome was loading incorrectly recommended rule [#4479](https://github.com/rome/tools/issues/4479) [#4488](https://github.com/rome/tools/issues/4488)\n\n### Linter\n\n#### Other changes\n\n- Fix an issue where the [`noAssignInExpressions`](https://docs.rome.tools/lint/rules/noassigninexpressions/) rule replaced the operator with an invalid token, which caused other lint rules to crash. [#4464](https://github.com/rome/tools/issues/4464)\n- Fix an issue that [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) rule did not correctly detect exports when a variable and an `interface` had the same name [#4468](https://github.com/rome/tools/pull/4468)\n\n## 12.1.0\n\n### CLI\n\n#### Other changes\n\n- Refactored the underling argument parsing logic. Changed the look and feel of the help\noutput. [#4405](https://github.com/rome/tools/pull/4405).\n- The command `rome check` can accept input from `stdin`.\n- Add the argument `--stdin-file-path` to use when running `rome check` via `stdin`.\n- Add the argument `--formatter-enabled` to the command `rome check` to control the formatter via CLI.\n- Add the argument `--linter-enabled` to the command `rome check` to control the linter via CLI.\n- Add the argument `--organize-imports-enabled` to the command `rome check` to control the import sorting via CLI.\n- Add new command `rome migrate` the transform the configuration file `rome.json`\n\twhen there are breaking changes.\n\n### Configuration\n\n- Add `vcs` property, to opt in the VCS integration:\n  - `vcs.enabled`, to enable or not the integration;\n  - `vcs.clientKind`, the supported clients;\n  - `vcs.useIgnoreFile`, to ignore the files/paths inside the file;\n  - `vcs.root`, an optional path to the root of the VCS;\n\n### Editors\n\n#### Other changes\n\n- Fix an issue where the VSCode extension duplicates text when using VSCode git utilities [#4338](https://github.com/rome/tools/issues/4338)\n- Remove code assists from being added to the code actions when apply fixes;\n- When requesting code actions, ignored files should not throw errors. Fixes [#4434](https://github.com/rome/tools/issues/4434)\n\n### Formatter\n\n#### Other changes\n\n- Fix an issue where formatting of JSX string literals property values were using incorrect quotes [#4054](https://github.com/rome/tools/issues/4054)\n- Changed import assertion grammar to the new import attribute assertion\n```diff\n- import \"module\" assert {}\n+ import \"module\" with {}\n```\n- Fix an issue where JSON formatter does not respect `lineWidth` for arrays [#4351](https://github.com/rome/tools/issues/4351)\n- Add support for decorators\n\n### Linter\n\n#### New rules\n\n- [`noConfusingArrow`](https://docs.rome.tools/lint/rules/noConfusingArrow/)\n- [`noRedundantRoles`](https://docs.rome.tools/lint/rules/noRedundantRoles/)\n- [`noNoninteractiveTabindex`](https://docs.rome.tools/lint/rules/noNoninteractiveTabindex/)\n- [`noAriaUnsupportedElements`](https://docs.rome.tools/lint/rules/noAriaUnsupportedElements/)\n- [`noConsoleLog`](https://docs.rome.tools/lint/rules/noConsoleLog/)\n- [`noForEach`](https://docs.rome.tools/lint/rules/noForEach/)\n- [`useLiteralKeys`](https://docs.rome.tools/lint/rules/useLiteralKeys/)\n- [`noConstantCondition`](https://docs.rome.tools/lint/rules/noConstantCondition/)\n- [`useGroupedTypeImport`](https://docs.rome.tools/lint/rules/useGroupedTypeImport/)\n- [`noUselessConstructor`](https://docs.rome.tools/lint/rules/noUselessConstructor/)\n- [`useLiteralEnumMembers`](https://docs.rome.tools/lint/rules/useLiteralEnumMembers/)\n- [`useHeadingContent`](https://docs.rome.tools/lint/rules/useHeadingContent/)\n- [`noAccumulatingSpread`](https://docs.rome.tools/lint/rules/noAccumulatingSpread/)\n- [`useSimpleNumberKeys`](https://docs.rome.tools/lint/rules/useSimpleNumberKeys/)\n\n\n#### Promoted rules\n\nNew rules are promoted, please check [#4431](https://github.com/rome/tools/pull/4431) for more details.\n\n- [lint/a11y/noNoninteractiveElementToInteractiveRole](https://docs.rome.tools/lint/rules/noNoninteractiveElementToInteractiveRole)\n- [lint/a11y/noRedundantAlt](https://docs.rome.tools/lint/rules/noRedundantAlt)\n- [lint/a11y/noSvgWithoutTitle](https://docs.rome.tools/lint/rules/noSvgWithoutTitle)\n- [lint/a11y/useAriaPropsForRole](https://docs.rome.tools/lint/rules/useAriaPropsForRole)\n- [lint/a11y/useIframeTitle](https://docs.rome.tools/lint/rules/useIframeTitle)\n- [lint/a11y/useMediaCaption](https://docs.rome.tools/lint/rules/useMediaCaption)\n- [lint/a11y/useValidAriaProps](https://docs.rome.tools/lint/rules/useValidAriaProps)\n- [lint/a11y/useValidLang](https://docs.rome.tools/lint/rules/useValidLang)\n- [lint/complexity/noExtraSemicolon](https://docs.rome.tools/lint/rules/noExtraSemicolon)\n- [lint/complexity/noUselessCatch](https://docs.rome.tools/lint/rules/noUselessCatch)\n- [lint/complexity/noUselessConstructor](https://docs.rome.tools/lint/rules/noUselessConstructor)\n- [lint/complexity/noUselessLabel](https://docs.rome.tools/lint/rules/noUselessLabel)\n- [lint/complexity/noUselessRename](https://docs.rome.tools/lint/rules/noUselessRename)\n- [lint/complexity/noUselessSwitchCase](https://docs.rome.tools/lint/rules/noUselessSwitchCase)\n- [lint/complexity/noWith](https://docs.rome.tools/lint/rules/noWith)\n- [lint/correctness/noGlobalObjectCalls](https://docs.rome.tools/lint/rules/noGlobalObjectCalls)\n- [lint/correctness/noInnerDeclarations](https://docs.rome.tools/lint/rules/noInnerDeclarations)\n- [lint/correctness/noInvalidConstructorSuper](https://docs.rome.tools/lint/rules/noInvalidConstructorSuper)\n- [lint/correctness/noSwitchDeclarations](https://docs.rome.tools/lint/rules/noSwitchDeclarations)\n- [lint/correctness/noUnreachableSuper](https://rome.tools/docs/lint/rules/noUnreachableSuper)\n- [lint/correctness/noUnsafeOptionalChaining](https://docs.rome.tools/lint/rules/noUnsafeOptionalChaining)\n- [lint/correctness/noUnusedLabels](https://docs.rome.tools/lint/rules/noUnusedLabels)\n- [lint/correctness/useYield](https://docs.rome.tools/lint/rules/useYield)\n- [lint/style/noCommaOperator](https://docs.rome.tools/lint/rules/noCommaOperator)\n- [lint/style/noInferrableTypes](https://docs.rome.tools/lint/rules/noInferrableTypes)\n- [lint/style/noNamespace](https://docs.rome.tools/lint/rules/noNamespace)\n- [lint/style/noParameterAssign](https://docs.rome.tools/lint/rules/noParameterAssign)\n- [lint/style/noParameterProperties](https://docs.rome.tools/lint/rules/noParameterProperties)\n- [lint/style/noRestrictedGlobals](https://docs.rome.tools/lint/rules/noRestrictedGlobals)\n- [lint/suspicious/noAssignInExpressions](https://docs.rome.tools/lint/rules/noAssignInExpressions)\n- [lint/suspicious/noClassAssign](https://docs.rome.tools/lint/rules/noClassAssign)\n- [lint/suspicious/noConfusingLabels](https://docs.rome.tools/lint/rules/noConfusingLabels)\n- [lint/suspicious/noDuplicateCase](https://docs.rome.tools/lint/rules/noDuplicateCase)\n- [lint/suspicious/noDuplicateClassMembers](https://docs.rome.tools/lint/rules/noDuplicateClassMembers)\n- [lint/suspicious/noPrototypeBuiltins](https://docs.rome.tools/lint/rules/noPrototypeBuiltins)\n- [lint/suspicious/noRedeclare](https://docs.rome.tools/lint/rules/noRedeclare)\n- [lint/suspicious/noSelfCompare](https://docs.rome.tools/lint/rules/noSelfCompare)\n- [lint/suspicious/useNamespaceKeyword](https://docs.rome.tools/lint/rules/useNamespaceKeyword)\n\nNote that, `noExtraSemicolons` and `noExtraLabels` are renamed to [`noExtraSemicolon`](https://docs.rome.tools/lint/rules/noextrasemicolon/) and [`noUselessLabel`](https://docs.rome.tools/lint/rules/nouselesslabel/).\n\n#### Other changes\n\n- Code actions are formatted using Rome's formatter. If the formatter is disabled,\n\tthe code action is not formatted.\n- Fixed an issue that [`useShorthandArrayType`](https://docs.rome.tools/lint/rules/useShorthandArrayType) rule did not handle nested ReadonlyArray types correctly and erroneously reported TsObjectType [#4354](https://github.com/rome/tools/issues/4353).\n- [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noUndeclaredVariables) detects globals based on the file type.\n- Fix an issue when [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) incorrectly identifies `AggregateError` as an undeclared variable. [#4365](https://github.com/rome/tools/issues/4365)\n- Fix an issue that `useLiteralKeys` rule doesn't ignore valid uses of square bracket notation. [#4370](https://github.com/rome/tools/issues/4370)\n- Fix [#4348](https://github.com/rome/tools/issues/4348) that caused [`noNonNullAssertion`](https://docs.rome.tools/lint/rules/nononnullassertion/) to emit incorrect code action\n- Fix [#4410](https://github.com/rome/tools/issues/4410) that caused [`useButtonType`](https://docs.rome.tools/lint/rules/usebuttontype/) to miss some cases\n- Fix false positive diagnostics that [`useCamelCase`](https://docs.rome.tools/lint/rules/usecamelcase/) caused to default exported components\n- Fix false positive diagnostics that [`useCamelCase`](https://docs.rome.tools/lint/rules/usecamelcase/) caused to private class members\n- Fix false positive diagnostics that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to arrow functions, export default functions and function expressions.\n- Fix false positive diagnostics that [`useHookAtTopLevel`](https://docs.rome.tools/lint/rules/usehookattoplevel/) caused to `as` or `satisfies` expression.\n- Fix false positive diagnostics that [`noHeadeScope`](https://docs.rome.tools/lint/rules/noheaderscope/) caused to custom components\n- Fix false negative diagnostics that [`noNoninteractiveElementToInteractiveRole`](https://docs.rome.tools/lint/rules/nononinteractiveelementtointeractiverole/) and [`noNoninteractiveTabindex`](https://docs.rome.tools/lint/rules/nononinteractivetabindex/) caused to non-interactive elements.\n\n\n### Parser\n\n#### Other changes\n\n- Allow module syntax in `cts` files\n- Changed import assertion grammar to the new import attribute assertion\n```diff\n- import \"module\" assert {}\n+ import \"module\" with {}\n```\n- Allow decorators before `export` and `export default`. [#4252](https://github.com/rome/tools/issues/4252)\n- Add support for Stage 3 decorators\n\n### VSCode\n\n- `requireConfiguration` is set to `true` by default\n\n## 12.0.0\n\n### CLI\n\n##### Breaking changes\n\n- Review how the traversal of the file system works. Now Rome won't navigate folders that are ignored.\n\tWhile this change is a bug fix, this could affect how the `ignore` entries are defined inside a project. We suggest to review them\n\tand make sure they still work.\n- `--apply-suggested` is now called `--apply-unsafe`\n- `rome check --apply` and `rome check --apply-unsafe` exits with non-zero code (error code)\nif there are still diagnostics to be addressed.\n\n##### Other changes\n\n- `rome check` now checks import statements. This is an experimental feature that needs to be\n\tenabled via configuration. Import can be sorted using `rome check --apply-unsafe`\n- Rome is able to auto discover the configuration file. If Rome doesn't fine a configuration in the\nworking directory, it will try to find one in the parent directories.\n- Add a new global options called `--config-path`. It tells Rome to try and discover a `rome.json` file\nin the given path.\n\t```shell\n\trome format --config-path=../../other/path/\n\trome check --config-path=../../other/path/\n\t```\n\n### Configuration\n\n#### Other changes\n\n- Rome now uses the internal JSON parser to validate the configuration file. This means Rome won't\n\texit anymore if there are issues with the `rome.json` file, instead it will apply its defaults\n\tto the sections that are incorrect.\n- Add `javascript.organizeImports`. This is an experimental feature and users need to opt-in.\n\n```json\n{\n  \"organizeImports\": {\n    \"enabled\": true,\n    \"ignore\": [\"trickyFile.js\"]\n  }\n}\n```\n- Add `linter.rules.all` and `linter.rules.[group].all`. These options allow to enable or disable **all**\nrules, or all rules for a **given group**. `all` and `recommended` can't be both `true`.\n\n\n```json\n{\n  \"linter\": {\n    \"rules\": {\n      \"all\": true,\n      \"style\" : {\n        \"all\": false\n      }\n    }\n  }\n}\n```\n\nThe previous example will enable all rules and disable all rules that belong to the `style` group.\n\n### Editors\n\n##### Other changes\n\n- Add support to display diagnostics for JSON files.\n- Add support to format JSON files.\n- Pull diagnostics when parsing a `rome.json` file.\n- Imports sorting is not applied for files that are not supported or ignored.\n\n### Formatter\n\n- Add support for JSON files\n- Add support for TypeScript 4.7\n- Add support for TypeScript 5.0\n\n### Linter\n\nNew rules are promoted, please check [#4239](https://github.com/rome/tools/pull/4239) for more\ndetails.\n- [lint/correctness/noUnsafeFinally](https://docs.rome.tools/lint/rules/noUnsafeFinally)\n- [lint/correctness/noConstructorReturn](https://docs.rome.tools/lint/rules/noConstructorReturn)\n- [lint/correctness/noPrecisionLoss](https://docs.rome.tools/lint/rules/noPrecisionLoss)\n- [lint/correctness/noVoidTypeReturn](https://docs.rome.tools/lint/rules/noVoidTypeReturn)\n- [lint/correctness/noStringCaseMismatch](https://docs.rome.tools/lint/rules/noStringCaseMismatch)\n- [lint/correctness/noSetterReturn](https://docs.rome.tools/lint/rules/noSetterReturn)\n- [lint/a11y/useHtmlLang](https://docs.rome.tools/lint/rules/useHtmlLang)\n- [lint/a11y/noDistractingElements](https://docs.rome.tools/lint/rules/noDistractingElements)\n- [lint/a11y/noHeaderScope](https://docs.rome.tools/lint/rules/noHeaderScope)\n- [lint/a11y/noAccessKey](https://docs.rome.tools/lint/rules/noAccessKey)\n- [lint/style/useExponentiationOperator](https://docs.rome.tools/lint/rules/useExponentiationOperator)\n- [lint/style/useNumericLiterals](https://docs.rome.tools/lint/rules/useNumericLiterals)\n- [lint/style/useDefaultParameterLast](https://docs.rome.tools/lint/rules/useDefaultParameterLast)\n- [lint/style/useConst](https://docs.rome.tools/lint/rules/useConst)\n- [lint/style/noVar](https://docs.rome.tools/lint/rules/noVar)\n- [lint/style/noNonNullAssertion](https://docs.rome.tools/lint/rules/noNonNullAssertion)\n- [lint/style/useEnumInitializers](https://docs.rome.tools/lint/rules/useEnumInitializers)\n- [lint/suspicious/noEmptyInterface](https://docs.rome.tools/lint/rules/noEmptyInterface)\n- [lint/suspicious/noExtraNonNullAssertion](https://docs.rome.tools/lint/rules/noExtraNonNullAssertion)\n- [lint/suspicious/noRedundantUseStrict](https://docs.rome.tools/lint/rules/noRedundantUseStrict)\n- [lint/suspicious/noConstEnum](https://docs.rome.tools/lint/rules/noConstEnum)\n- [lint/suspicious/useDefaultSwitchClauseLast](https://docs.rome.tools/lint/rules/useDefaultSwitchClauseLast)\n- [lint/suspicious/noDuplicateObjectKeys](https://docs.rome.tools/lint/rules/noDuplicateObjectKeys)\n\n\n### Parser\n\n- Support for TypeScript 4.7\n- Support for TypeScript 5.0\n\n### VSCode\n\n##### Other changes\n- Add a new option called `requireConfiguration`. Enabling this option will force Rome to require\na configuration file in your workspace/project. If Rome doesn't find a `rome.json` file, it won't\nemit diagnostics.\n\n## 11.0.0\n\n### CLI\n\n#### BREAKING CHANGES\n\n- the argument `--no-colors` has been removed, in favor of `--color=off`\n\n#### Other changes\n\n- The `init` command now adds the `$schema` property to the generated `rome.json` file\n  if `rome` is installed inside the `node_modules` folder. Follow [this guide](https://docs.rome.tools/configuration#schema) to add the `$schema` property\n  manually in a project with an existing `rome.json` file.\n- A new `--semicolons` option that configures if the formatter prints semicolons at the end of every statement (default) or at the beginning of statements when necessary to prevent ASI failures.\n- Rome exits with an error code if it doesn't process any file.\n- Fixed how the maximum number of diagnostics is calculated [#3869](https://github.com/rome/tools/pull/3869).\n  Rome now prints the total number of errors caused in the files.\n- Rome now traverses symbolic links and emits warnings if it detects loops, and continues processing the next file during the directory traversal.\n- You can force color output using the new global `--colors` option with the value `force`. Forcing color output can be useful if you spawn Rome as a subprocess.\n  Rome is spawned as a process;\n\n### Configuration\n\n- Added the JSON schema `$schema` property. The schema enables auto-completion by editors and...\n  auto-completion and descriptions of all fields of the configuration file.\n- Added a new `files.ignore` option where users can ignore files across tools.\n\n### Editors\n\n- We also publish Rome to [Open VSX](https://open-vsx.org/).\n- The extension now resolves the Rome version installed in the `node_modules` folder.\n- Fixed an issue where diagnostics were not updated after a change to the configuration file (#3724)[https://github.com/rome/tools/pull/3724]\n- The LSP emits a new action where the user can suppress a rule.\n- The extension now allows [sort imports](https://github.com/rome/tools/blob/main/editors/vscode/README.md#imports-sorting-experimental)\n\n### Formatter\n\n#### BREAKING CHANGES\n\n- Fixed incompatibility issues with Prettier [#3531](https://github.com/rome/tools/issues/3531)\n  - [#3686](https://github.com/rome/tools/pull/3686)\n  - [#3732](https://github.com/rome/tools/pull/3732)\n  - [#3842](https://github.com/rome/tools/pull/3842)\n- Fixed an issue where infinite parentheses were wrongly inserted [#3735](https://github.com/rome/tools/issues/3735)\n- Better formatting for `jestEach` templates\n\n#### Other changes\n\n- Added [support](https://docs.rome.tools/configuration/#javascriptformattersemicolon) for omitting semicolons.\n\n\n### Linter\n\n- Fixed false positives emitted by [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/) [#3668](https://github.com/rome/tools/issues/3668)\n- Fixed [`noArrayIndexKey`](https://docs.rome.tools/lint/rules/noarrayindexkey/) where some cases were not detected [#3670](https://github.com/rome/tools/issues/3670)\n- Fixed false positives emitted by [`noConstAssign`](https://docs.rome.tools/lint/rules/noconstassign/) [#3728](https://github.com/rome/tools/issues/3728)\n- Fixed false positives emitted by [`noShoutyConstants`](https://docs.rome.tools/lint/rules/noshoutyconstants/) [#3867](https://github.com/rome/tools/issues/3867)\n- Fixed false positives emitted by [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3779](https://github.com/rome/tools/issues/3779)\n- Fixed [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) where some cases were not detected [#3798](https://github.com/rome/tools/issues/3798)\n- Fixed [`noUndeclaredVariables`](https://docs.rome.tools/lint/rules/noundeclaredvariables/) where types were incorrectly detected [#3669](https://github.com/rome/tools/issues/3669)\n\n#### Rules\n\nThe following rules have been stabilized:\n- `nursery/useFlatMap` -> `complexity/useFlatMap`\n- `nursery/useValidForDirection` -> `correctness/useValidForDirection`\n- `nursery/noExplicitAny` -> `suspicious/noExplicitAny`\n- `nursery/noConstAssign` -> `correctness/noConstAssign`\n\nThese rules are all recommended, so they will be enabled by default. You can simply remove those entries from your configuration file if you had enabled them manually from the `nursery` group.\n\nThe following rules have been renamed:\n- `a11y/useBlankTarget` -> `a11y/noBlankTarget`\n- `correctness/noMultipleSpacesInRegularExpressionLiterals` -> `complexity/noMultipleSpacesInRegularExpressionLiterals`\n- `style/useOptionalChain` -> `complexity/useOptionalChain`\n- `correctness/noUselessFragments` -> `complexity/noUselessFragments`\n- `correctness/noDelete` -> `performance/noDelete`\n- `correctness/useSingleCaseStatement` -> `style/useSingleCaseStatement`\n- `correctness/useWhile` -> `style/useWhile`\n- `correctness/noArguments` -> `style/noArguments`\n- `correctness/noAsyncPromiseExecutor` -> `suspicious/noAsyncPromiseExecutor`\n- `correctness/noCommentText` -> `suspicious/noCommentText`\n- `correctness/noCompareNegZero` -> `suspicious/noCompareNegZero`\n- `correctness/noDebugger` -> `suspicious/noDebugger`\n- `correctness/noDoubleEquals` -> `suspicious/noDoubleEquals`\n- `correctness/noShadowRestrictedNames` -> `suspicious/noShadowRestrictedNames`\n- `correctness/noSparseArray` -> `suspicious/noSparseArray`\n- `correctness/noUnsafeNegation` -> `suspicious/noUnsafeNegation`\n- `correctness/useValidTypeof` -> `suspicious/useValidTypeof`\n- `correctness/noArrayIndexKey` -> `suspicious/noArrayIndexKey`\n- `correctness/noCatchAssign` -> `suspicious/noCatchAssign`\n- `correctness/noDupeArgs` -> `suspicious/noDuplicateParameters`\n- `correctness/noFunctionAssign` -> `suspicious/noFunctionAssign`\n- `correctness/noImportAssign` -> `suspicious/noImportAssign`\n- `correctness/noLabelVar` -> `suspicious/noLabelVar`\n- `correctness/noRestrictedGlobals` -> `nursery/noRestrictedGlobals`\n- `nursery/noDupeKeys` -> `nursery/noDuplicateObjectKeys`\n\nIf you were not changing the severity level of any of these rules in your configuration file, or suppressing a diagnostic emitted by those rules using suppression comments, you do not have to do anything. But if you did, Rome will now emit diagnostics for the parts of your configuration or suppression comments you need to update.\n\nThe following rules are no longer recommended:\n- `style/noImplicitBoolean`\n- `style/noNegationElse`\n- `style/useBlockStatements`\n- `style/useShorthandArrayType`\n- `correctness/useSingleCaseStatement` / `style/useSingleCaseStatement`\n- `style/noShoutyConstants`\n\nThe styling decisions imposed by these rules were not deemed to be idiomatic enough in the JavaScript ecosystem to be enabled by default. If you do want to enforce those rules in your project, you will have to enable them manually in you configuration file:\n\n```json\n{\n  \"linter\": {\n    \"rules\": {\n        \"style\": {\n            \"useBlockStatements\": \"warn\"\n        }\n    }\n  }\n}\n```\n\nFinally, the following new rules have been introduced to the nursery group in this release:\n- [`nursery/noAccessKey`](https://docs.rome.tools/lint/rules/noAccessKey)\n- [`nursery/noConditionalAssignment`](https://docs.rome.tools/lint/rules/noConditionalAssignment)\n- [`nursery/noConstEnum`](https://docs.rome.tools/lint/rules/noConstEnum)\n- [`nursery/noConstructorReturn`](https://docs.rome.tools/lint/rules/noConstructorReturn)\n- [`nursery/noDistractingElements`](https://docs.rome.tools/lint/rules/noDistractingElements)\n- [`nursery/noDuplicateObjectKeys`](https://docs.rome.tools/lint/rules/noDuplicateObjectKeys)\n- [`nursery/noEmptyInterface`](https://docs.rome.tools/lint/rules/noEmptyInterface)\n- [`nursery/noExtraNonNullAssertion`](https://docs.rome.tools/lint/rules/noExtraNonNullAssertion)\n- [`nursery/noHeaderScope`](https://docs.rome.tools/lint/rules/noHeaderScope)\n- [`nursery/noNonNullAssertion`](https://docs.rome.tools/lint/rules/noNonNullAssertion)\n- [`nursery/noPrecisionLoss`](https://docs.rome.tools/lint/rules/noPrecisionLoss)\n- [`nursery/noRedundantUseStrict`](https://docs.rome.tools/lint/rules/noRedundantUseStrict)\n- [`nursery/noSetterReturn`](https://docs.rome.tools/lint/rules/noSetterReturn)\n- [`nursery/noStringCaseMismatch`](https://docs.rome.tools/lint/rules/noStringCaseMismatch)\n- [`nursery/noUnsafeFinally`](https://docs.rome.tools/lint/rules/noUnsafeFinally)\n- [`nursery/noVoidTypeReturn`](https://docs.rome.tools/lint/rules/noVoidTypeReturn)\n- [`nursery/useDefaultSwitchClauseLast`](https://docs.rome.tools/lint/rules/useDefaultSwitchClauseLast)\n- [`nursery/useNumericLiterals`](https://docs.rome.tools/lint/rules/useNumericLiterals)\n- [`nursery/useAriaPropTypes`](https://docs.rome.tools/lint/rules/useAriaPropTypes)\n- [`nursery/useAriaPropsForRole`](https://docs.rome.tools/lint/rules/useAriaPropsForRole)\n- [`nursery/noVar`](https://docs.rome.tools/lint/rules/noVar)\n- [`nursery/useConst`](https://docs.rome.tools/lint/rules/useConst)\n\nPlease give them a try by manually enabling them in your configuration and please share your feedback on the rule, diagnostics, and code fixes.\n\n### Parser\n\n- Added support for `JSON`;\n- Added support `satisfies` keyword;\n- Fixed parse for `async` used as label [#3612](https://github.com/rome/tools/issues/3612)\n- Fixed parse of `export default function` in `d.ts` files [#3485](https://github.com/rome/tools/issues/3485)\n- Improved the parsing of `await` in non-async contexts [#2479](https://github.com/rome/tools/issues/2479)\n\n### VSCode\n\n- Removed the \"preview\" label from the extension.\n- Improved logging when the extension can't connect to the server. [#3920](https://github.com/rome/tools/issues/3920)\n\n### JavaScript APIs\n\n#### Breaking change\n\n- The concept of `backend` has been removed, in favor of the concept of `distribution`.\n- Removed the possibility to connect to the daemon, for the time being.\n- The APIs are asynchronous anymore.\n\n#### Other changes\n\n- The package has been marked as unstable and in alpha state.\n\n## 10.0.1\n\n### CLI\n\n- Respect the formatter / linter `enabled` flag from configuration ([#3591](https://github.com/rome/tools/issues/3591))\n- Correctly account for diff diagnostics in the printed diagnostics count ([#3595](https://github.com/rome/tools/issues/3595))\n\n### Formatter\n\n- Do not insert a trailing comma in import expressions ([#3600](https://github.com/rome/tools/issues/3600))\n\n### Linter\n\n- Fixed false positives in [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/), [`noArrayIndexKey`](https://docs.rome.tools/lint/rules/noarrayindexkey/), [`noChildrenProp`](https://docs.rome.tools/lint/rules/nochildrenprop/), [`noUselessFragments`](https://docs.rome.tools/lint/rules/nouselessfragments/), [`noVoidElementsWithChildren`](https://docs.rome.tools/lint/rules/novoidelementswithchildren/), [`noDangerouslySetInnerHtml`](https://docs.rome.tools/lint/rules/nodangerouslysetinnerhtml/), [`noDangerouslySetInnerHtmlWithChildren`](https://docs.rome.tools/lint/rules/nodangerouslysetinnerhtmlwithchildren/), `useValidAnchor`, [`noRenderReturnValue`](https://docs.rome.tools/lint/rules/norenderreturnvalue/), [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) and [`useKeyWithClickEvents`](https://docs.rome.tools/lint/rules/usekeywithclickevents/)\n([#3592](https://github.com/rome/tools/pull/3592), [#3619](https://github.com/rome/tools/pull/3619), [#3599](https://github.com/rome/tools/pull/3599), [#3626](https://github.com/rome/tools/pull/3626), [#3620](https://github.com/rome/tools/pull/3620) & [#3644](https://github.com/rome/tools/pull/3644))\n\n### Editors\n\n- Display the version of the language server in the status bar ([#3616](https://github.com/rome/tools/issues/3616))\n\n## 10.0.0\n\n### CLI\n\n- Added the new command `rome version`.\n- Added the new command `rome rage`.\n- Added the new command `rome lsp-proxy`.\n- Added the new option`--version` as an alias for `rome version`\n- Added a new argument `--files-max-size` to change the allowed size of files, in bytes.\n- Added a new argument `--formatter-enabled` to the command `rome ci`.\n- Added a new argument `--linter-enabled` to the command `rome ci`.\n- Added the new `format` option `--trailing-comma` to configure where to add trailing commas.\n- Correctly show the supported options for `rome ci`, closes [#3456](https://github.com/rome/tools/issues/3456).\n- Fixed the command `rome ci` command to run the linter even if the formatter is disabled, closes [#3495](https://github.com/rome/tools/issues/3495).\n- Fixed the messaging of some diagnostics, [#3460](https://github.com/rome/tools/pull/3460).\n\n### Configuration\n\n- Added `files.maxSize`, to change the allowed size of files, in bytes.\n\n### Diagnostics\n\n- Fix false positive for unknown lint rule in suppression comments during formatting [#3406](https://github.com/rome/tools/issues/3406).\n- Correctly handle empty lines when printing code diffs [#3375](https://github.com/rome/tools/issues/3375).\n\n\n### Formatter\n\n- Added the new trailing comma option that configures where to add trailing commas. Supports the values: `all`, `es5` and `none`; refer to the [documentation](https://rome.tools/docs/#javascriptformattertrailingcomma) to learn more.\n- Improved JSX formatting [#3499](https://github.com/rome/tools/issues/3499), [#3211](https://github.com/rome/tools/issues/3211), [#3377](https://github.com/rome/tools/issues/3377)\n- Better formatting of object destructing\n- Improved formatting of test calls\n- Fixed formatting of trailing comments in arrow functions\n\n### Linter\n\n- **BREAKING CHANGE**: some rules have been moved to new groups to better reflect their purpose. This may result in Rome failing to load your configuration or suppression comments that now refer to unknown rules. Please check out [#3471](https://github.com/rome/tools/pull/3471) to learn more about the affected rules.\n- Fixed issues in the [`noUnreachable`](https://docs.rome.tools/lint/rules/nounreachable/) rule\n- Fixed false positive cases for [`noNegationElse`](https://docs.rome.tools/lint/rules/nonegationelse/) [#3141](https://github.com/rome/tools/issues/3141)\n- Fixed false positive cases for [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3169](https://github.com/rome/tools/issues/3169)\n- Fixed an issue in our CFG [#3390](https://github.com/rome/tools/issues/3390)\n\n#### New rules\n\n- [`noAutoFocus`](https://rome.tools/docs/lint/rules/noAutoFocus/)\n- [`useAltText`](https://rome.tools/docs/lint/rules/useAltText/)\n- [`noBlankTarget`](https://rome.tools/docs/lint/rules/noBlankTarget/)\n- [`useAnchorContent`](https://rome.tools/docs/lint/rules/useAnchorContent/)\n- [`useKeyWithClickEvents`](https://rome.tools/docs/lint/rules/useKeyWithClickEvents/)\n- [`useKeyWithMouseEvents`](https://rome.tools/docs/lint/rules/useKeyWithMouseEvents/)\n- [`noPositiveTabIndex`](https://rome.tools/docs/lint/rules/noPositiveTabIndex/)\n- [`useValidAnchor`](https://rome.tools/docs/lint/rules/useValidAnchor/)\n- [`noRestrictedGlobals`](https://rome.tools/docs/lint/rules/noRestrictedGlobals/)\n- [`useSimplifiedBooleanExpression`](https://rome.tools/docs/lint/rules/useSimplifiedBooleanExpression/)\n- [`noInvalidConstructorSuper`](https://rome.tools/docs/lint/rules/noInvalidConstructorSuper/)\n- [`useValidForDirection`](https://rome.tools/docs/lint/rules/useValidForDirection/)\n- [`noConstAssign`](https://rome.tools/docs/lint/rules/noConstAssign/)\n- [`noExplicitAny`](https://rome.tools/docs/lint/rules/noExplicitAny/)\n- [`noBannedTypes`](https://rome.tools/docs/lint/rules/noBannedTypes/)\n- [`useMapFlat`](https://rome.tools/docs/lint/rules/useMapFlat/)\n- [`useExhaustiveDependencies`](https://rome.tools/docs/lint/rules/useExhaustiveDependencies/)\n\n### Parser\n\n- Improved messaging of diagnostics, using our new infrastructure\n- Fixed an issue where diagnostics couldn't be printed in WASM [#3349](https://github.com/rome/tools/pull/3349)\n- Allow arguments in d.ts files [#3388](https://github.com/rome/tools/issues/3388)\n- Fix parsing of less than in optional call chains [#3486](https://github.com/rome/tools/issues/3486)\n- Fixed a case where `export {\"a\"} from \"b\";` wasn't correctly parsed\n\n### VSCode\n\n- Make the \"rename\" command opt-in and use the VS Code provided \"rename\" feature that offers whole project renaming instead.\n- Added the new command `Restart LSP Server`\n- The LSP server is now able to listen to changes of `rome.json` and apply the new configuration\n\n\n\n## 0.10.1\n\n### CLI\n- Fixed a poor diagnostic that was emitted when navigating a symbolic symbol [#3329](https://github.com/rome/tools/issues/3329)\n- Added a size limit when inspecting files [#3330](https://github.com/rome/tools/issues/3330)\n\n### Diagnostics\n- Do not print tabs and spaces for unchanged lines [#3327](https://github.com/rome/tools/issues/3327)\n\n### VSCode\n- Fixed the calculation of text diffs inside the LSP [#3350](https://github.com/rome/tools/pull/3350)\n\n## 0.10.0\n\n### Core\n\n- Rome is now faster and uses less memory on macOS and Linux systems! [#3237](https://github.com/rome/tools/pull/3237)\n- We completely revamped our diagnostics! The new diagnostics allow us to give better information about the errors generated by Rome.\n- Greatly increased the performance of Rome's daemon, up to 300%! [#3151](https://github.com/rome/tools/pull/3151)\n\n### Configuration\n\nYou can now ignore folders and files using the Unix shell style patterns:\n\n```json\n{\n  \"formatter\": {\n    \"ignore\": [\"scripts/*.js\"]\n  },\n  \"linter\": {\n    \"ignore\": [\"src/**.test.{ts,js}\"]\n  }\n}\n```\n\n### Formatter\n\n- Completely revamped how the formatter handles comments and their placement inside the code [#3277](https://github.com/rome/tools/pull/3227)\n- Improved formatting of intersection and unions types [#3162](https://github.com/rome/tools/issues/3162)\n- Improved formatting of member chains [#3283](https://github.com/rome/tools/pull/3283)\n- Improved formatting of call arguments [#3290](https://github.com/rome/tools/pull/3290)\n\n### Linter\n\n- **BREAKING CHANGE**: This release changes the naming of the lint rule groups with the goal to make them language agnostic and avoid confusion among users and contributors.\nwere named after a language, and this caused confusion among users and contributors. Please\ncheck our [website](https://rome.tools/docs/lint/rules/) to know better about the new groups.\nThe new groups are heavily inspired from [`clippy`](https://github.com/rust-lang/rust-clippy#clippy)\n- Added a new group called `nursery`, this group incubates new rules that are being developed.\n- Added a new group called `style`, this group incubates rules that orbits around styling.\n- Added a new group called `correctness`, this group incubates rules that orbits catching possible bugs.\n- Fixed a code action for `useBlockStatements` [#3199](https://github.com/rome/tools/issues/3199)\n- Improved the rule `useCamelCase` [#3190](https://github.com/rome/tools/pull/3190) [#3210](https://github.com/rome/tools/pull/3210)\n- Fixed invalid code action for `useOptionalChain` [#3257](https://github.com/rome/tools/issues/3257)\n- Fixed bugs in [`noUnusedVariables`](https://docs.rome.tools/lint/rules/nounusedvariables/) [#3170](https://github.com/rome/tools/issues/3170), [#3316](https://github.com/rome/tools/pull/3316)\n\n#### New rules\n\n- [`useButtonType`](https://rome.tools/docs/lint/rules/useButtonType/)\n- [`noRenderReturnValue`](https://rome.tools/docs/lint/rules/noRenderReturnValue/)\n- [`noDangerouslySetInnerHtml`](https://rome.tools/docs/lint/rules/noDangerouslySetInnerHtml/)\n- [`useOptionalChain`](https://rome.tools/docs/lint/rules/useOptionalChain/)\n- [`useFragmentSyntax`](https://rome.tools/docs/lint/rules/useFragmentSyntax/)\n- [`noUselessFragments`](https://rome.tools/docs/lint/rules/noUselessFragments/)\n- [`noChildrenProp`](https://rome.tools/docs/lint/rules/noChildrenProp/)\n- [`noArrayIndexKey`](https://rome.tools/docs/lint/rules/noArrayIndexKey/)\n- [`noVoidElementsWithChildren`](https://rome.tools/docs/lint/rules/noVoidElementsWithChildren/)\n- [`noUndeclaredVariables`](https://rome.tools/docs/lint/rules/noUndeclaredVariables/)\n- [`noDangerouslySetInnerHtmlWithChildren`](https://rome.tools/docs/lint/rules/noDangerouslySetInnerHtmlWithChildren/)\n\n\n### Parser\n\n- Fixed an issue where the parser was _not_ emitting a diagnostic on a certain TypeScript syntax [#3115](https://github.com/rome/tools/issues/3115)\n\n### VSCode\n\n- The setting `lspBin` can be also expressed as **relative path**\n- The rules have been added to the configuration schema, allowing users to receive autocomplete\nwhen editing the `rome.json` for the [`rules`](https://rome.tools/#linterrulescorrectness) section\n\n\n## 0.9.2\n\n### CLI\n\n- Fixes an issue where arguments were not correctly picked up and applied to the formatter [#3175](https://github.com/rome/tools/issues/3175)\n\n## 0.9.1\n\n### CLI\n\n- Fixes a regression where the arguments passed via CLI were ignored [#3175](https://github.com/rome/tools/issues/3175)\n- Fixes a regression where the command `rome ci` was not correctly reading the configuration [#3167](https://github.com/rome/tools/issues/3167)\n\n### VSCode\n\n- Windows: fixes an issue where the extension could not load the configuration file [#3182](https://github.com/rome/tools/issues/3182)\n\n## 0.9.0\n\n### CLI\n\n- You can now format content from standard input when using the command `rome format`:\n```shell\necho \"function f() { return {} }\" | rome format --stdin-file-path example.js\n```\nthe argument  `--stdin-file-path` is mandatory when formatting from standard in. The path should represent a\nfile name with its extension.\n- Added `--apply-suggested` argument to the `rome check` command, to apply suggested and safe fixes.\nSuggested fixes should be considered **unstable** and applied with care.\n- Added the `rome start` and `rome stop` commands to control the Rome daemon server process.\n- Added the `--use-server` global flag to the command line to make the CLI connect to a running instance of the\nRome daemon server.\n\n### Configuration\n\n- **BREAKING CHANGE**: removed the second `\"rules\"` field from a field group.\n```diff\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"js\": {\n+        \"noDebugger\": \"off\"\n-        \"rules\": {\n-          \"noDebugger\": \"off\"\n-        },\n      }\n    }\n  }\n}\n```\n- fixed a problem that was incorrectly turning off rules in certain circumstances\n\n### Formatter\n\nSignificantly improved formatting and prettier compatibility of:\n\n* JSX [#3144](https://github.com/rome/tools/pull/3144)\n* Conditional expression and conditional types [#2427](https://github.com/rome/tools/issues/2427)\n* Function signatures [#2993](https://github.com/rome/tools/pull/2993), [#2990](https://github.com/rome/tools/pull/2990)\n* Return and throw statements [#2986](https://github.com/rome/tools/pull/2986)\n* Logical and binary expressions [#3079](https://github.com/rome/tools/pull/3079)\n* Templates [#3063](https://github.com/rome/tools/pull/3063)\n* Arrow expression chains [#3122](https://github.com/rome/tools/pull/3122)\n* Member expression assignments [#3061](https://github.com/rome/tools/pull/3061)\n* Array expressions [#3126](https://github.com/rome/tools/pull/3126)\n* Parenthesized expressions and types, including inserting parentheses to improve readability [#3057](https://github.com/rome/tools/pull/3057), [#3083](https://github.com/rome/tools/pull/3083), [#3108](https://github.com/rome/tools/pull/3108)\n* Doc comments [#3129](https://github.com/rome/tools/pull/3129)\n\n### Linter\n\n- Changed the default severity for recommended rules to \"error\". You can [change the severity in the rome.json](https://rome.tools/#configure-a-rule).\n- Added [`js/noExtraBooleanCast`](https://rome.tools/docs/lint/rules/noExtraBooleanCast/) lint rule.\n- Added [`js/noDupeArgs`](https://rome.tools/docs/lint/rules/noDupeArgs/) lint rule.\n- Added [`js/noShadowRestrictedNames`](https://rome.tools/docs/lint/rules/noShadowRestrictedNames/) lint rule.\n- Added `js/inlineVariable` code action.\n- Applied various stability fixes to the rule [`js/noUnusedVariables`](https://rome.tools/docs/lint/rules/noUnusedVariables/). [#3124](https://github.com/rome/tools/pull/3124) [#3060](https://github.com/rome/tools/pull/3060) [#3004](https://github.com/rome/tools/pull/3004)\n- Fixed how the suggestion is applied [`js/noNegationElse`](https://rome.tools/docs/lint/rules/noNegationElse/). [#2999](https://github.com/rome/tools/issues/2999)\n- Fixed a false positive in the rule [`js/noShoutyConstants`](https://rome.tools/docs/lint/rules/noShoutyConstants/). [#3077](https://github.com/rome/tools/issues/3077)\n- Fixed a false positive in the rule [`ts/useShorthandArrayType`](https://rome.tools/docs/lint/rules/useShorthandArrayType/). [#3111](https://github.com/rome/tools/issues/3111)\n\n### VSCode\n\n- fixed an issue where it wasn't possible to format newly created files [3006](https://github.com/rome/tools/issues/3006)\n- added a status bar [3139](https://github.com/rome/tools/pull/3139)\n\n## 0.8.0\n\n### CLI\n\n- Added `--max-diagnostics` argument to the command `rome check`.\n- The maximum number of diagnostics printed is now 20, use `--max-diagnostics` to change the default.\n- Added a new command `rome init`.\n\n### Configuration\n\n- You can create a configuration file called `rome.json` to customize Rome's default options.\nThis will work from both CLI and LSP.\n\n### Formatter\n\n- You can now use the configuration file `rome.json` to change Rome's defaults:\n\n  Example:\n  ```json\n  {\n    \"root\": true,\n    \"formatter\": {\n      \"indentStyle\": \"space\"\n    }\n  }\n  ```\n- Fixed some edge cases where the comment suppressions were not working as expected.\n\n### Linter\n\nThe linter is now marked as \"alpha\" and it can be used to lint code from the CLI and\nfrom the LSP.\n\n\n### VSCode\n\n- **BREAKING CHANGE**: Removed the majority of settings that were available in the extension, use the\nconfiguration file `rome.json` to change the Rome's defaults.\n- The extension now allows to rename variables;\n\n## 0.7.0\n\n### CLI\n\n- Added `--no-colors` argument.\n\n### Formatter\n\n- JSX and TSX are now formatted by default! Make sure to enable Rome as default formatter in the VSCode extension.\n- Improved the consistency of formatting of various statements:\n  - call arguments;\n  - object property members;\n  - variable declarations;\n  - object patterns;\n  - class property members;\n- Fixed a bunch of issues in the TypeScript formatting.\n\n### Linter\n\n- Added the new `--apply` argument to the `rome check` command;\n- New rules added to the linter, check the [website](https://rome.tools/docs/lint/rules/);\n\n## 0.6.1\n\nFixes a regression introduced in the `rome format` command ([#2670](https://github.com/rome/tools/issues/2670))\n\n## 0.6.0\n\n### Formatter\n\n- BREAKING CHANGES: the command `rome format --ci` has been removed, use `rome ci` instead.\n\n#### Improved the compatibility with Prettier (check [#2403](https://github.com/rome/tools/issues/2403) for more details)\n\n- TypeScript's formatting is better in line with what Prettier does.\n- Better formatting of string literals.\nRemoving unnecessary quotes in string literals and quotes from member names.\nCorrectly choose the correct quote based on quantity of quotes inside a literal:\n  ```js\n  // original code\n  let a = {\n    \"something\": 3\n  }\n  let b = \"cool isn\\'t it\";\n  let c = \"\\\"content\\\" ' \";\n\n  // formatted code\n  let a = {\n    something: 3\n  }\n  let b = \"cool isn't it\";\n  let c = '\"content\" \\' ';\n  ```\n- Better formatting of various statements\n- Improved the performance of the formatter an average of 20%-30%! Check the relevant\nPRs [1](https://github.com/rome/tools/pull/2456), [2](https://github.com/rome/tools/pull/2638), [3](https://github.com/rome/tools/pull/2612), [4](https://github.com/rome/tools/pull/2462), [5](https://github.com/rome/tools/pull/2634) if you're interested in what the team did.\n\nTo reach better compatibility with Prettier, the team had to revise the foundation of our printer,\nwhich caused some regressions around how comments are printed. These are known issues that we\nplan to close by next release.\n\n### Linter\n\nWe've built the foundation of our linter. At the moment is only opt-in, and it contains\nonly a bunch of rules. **Safe fixes are not enabled yet via CLI**.\n\nRefer to the [website](https://rome.tools/#linter) to learn how to start using it.\n\n## 0.5.0\n\n- BREAKING CHANGES: the `format` command doesn't write on disk by default. Now the command prints on terminal.\n\n    **Migration**: add the `--write` argument when calling `rome format`\n\n    ```shell\n    rome format --write\n    ```\n\n- Added a new option called `--quote-style` to the formatter. This option is also available on VSCode.\n\n## 0.4.0\n\nRome has been [rewritten in Rust](https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust)!\n\nThe great majority of the previous functionality won't work anymore, as we rewrote the whole software\nfrom scratch.\n\nRome, for now, exposes a new formatter that has been revisited and, is way faster compared to its former version!\n\nTo install it, use the `next` tag on `npm`:\n\n```shell\nnpm i rome@next\n```\n\nOr follow our [getting started](https://rome.tools/#getting-started) section for more details.\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "biome.json",
          "type": "blob",
          "size": 1.2431640625,
          "content": "{\n  \"$schema\": \"./packages/@biomejs/biome/configuration_schema.json\",\n  \"assists\": {\n    \"enabled\": true,\n    \"ignore\": [\n      \"./packages/@biomejs/biome/configuration_schema.json\"\n    ],\n    \"actions\": {\n      \"source\": {\n        \"useSortedKeys\": \"off\"\n      }\n    }\n  },\n  \"css\": {\n    \"linter\": {\n      \"enabled\": true\n    }\n  },\n  \"files\": {\n    \"ignore\": [\n      \"crates/**\",\n      \"dist/**\",\n      \".astro/**\",\n      \"assets/**\",\n      \"packages/@biomejs/backend-jsonrpc/src/workspace.ts\",\n      \"public/**\",\n      \"**/__snapshots__\",\n      \"**/undefined/**\",\n      \"_fonts/**\",\n      \"packages/@biomejs/wasm-*\",\n      \"benchmark/target/**\"\n    ],\n    \"include\": [\n      \"packages/aria-data/*.js\",\n      \"packages/@biomejs/**\",\n      \"packages/tailwindcss-config-analyzer/**\",\n      \"benchmark/**\"\n    ]\n  },\n  \"formatter\": {\n    \"ignore\": [\n      \"configuration_schema.json\"\n    ]\n  },\n  \"json\": {\n    \"formatter\": {\n      \"indentStyle\": \"space\",\n      \"lineWidth\": 1\n    }\n  },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true,\n      \"style\": {\n        \"noNonNullAssertion\": \"off\"\n      }\n    }\n  },\n  \"organizeImports\": {\n    \"enabled\": true\n  },\n  \"vcs\": {\n    \"clientKind\": \"git\",\n    \"enabled\": true,\n    \"useIgnoreFile\": true\n  }\n}\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.4951171875,
          "content": "allow-dbg-in-tests = true\n\ndisallowed-methods = [\n  { path = \"str::to_ascii_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrOnlyExtension::to_ascii_lowercase_cow` instead.\" },\n  { path = \"std::ffi::OsStr::to_ascii_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrLikeExtension::to_ascii_lowercase_cow` instead.\" },\n  { path = \"str::to_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrOnlyExtension::to_lowercase_cow` instead.\" },\n]"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 4.953125,
          "content": "_default:\n  just --list -u\n\nalias f := format\nalias t := test\nalias r := ready\nalias l := lint\nalias qt := test-quick\n\n\n# Installs the tools needed to develop\ninstall-tools:\n\tcargo install cargo-binstall\n\tcargo binstall cargo-insta taplo-cli wasm-pack wasm-tools knope\n\n# Upgrades the tools needed to develop\nupgrade-tools:\n\tcargo install cargo-binstall --force\n\tcargo binstall cargo-insta taplo-cli wasm-pack wasm-tools knope --force\n\n# Generate all files across crates and tools. You rarely want to use it locally.\ngen-all:\n  cargo run -p xtask_codegen -- all\n  cargo codegen-configuration\n  cargo codegen-migrate\n  just gen-bindings\n  just format\n\n# Generates TypeScript types and JSON schema of the configuration\ngen-bindings:\n  cargo codegen-schema\n  cargo codegen-bindings\n\n# Generates code generated files for the linter\ngen-lint:\n  cargo run -p xtask_codegen -- analyzer\n  cargo codegen-configuration\n  cargo codegen-migrate\n  just gen-bindings\n  cargo run -p rules_check\n  just format\n\n# Generates the initial files for all formatter crates\ngen-formatter:\n  cargo run -p xtask_codegen -- formatter\n\n# Generates the Tailwind CSS preset for utility class sorting (requires Bun)\ngen-tw:\n  bun packages/tailwindcss-config-analyzer/src/generate-tailwind-preset.ts\n\n# Generates the code of the grammars available in Biome\ngen-grammar *args='':\n    cargo run -p xtask_codegen -- grammar {{args}}\n\n# Generates the linter documentation and Rust documentation\ndocumentation:\n  RUSTDOCFLAGS='-D warnings' cargo documentation\n\n# Creates a new js lint rule with the given name. Name has to be camel case.\nnew-js-lintrule rulename:\n  cargo run -p xtask_codegen -- new-lintrule --kind=js --category=lint --name={{rulename}}\n  just gen-lint\n  just documentation\n\n# Creates a new js assist rule with the given name. Name has to be camel case.\nnew-js-assistrule rulename:\n  cargo run -p xtask_codegen -- new-lintrule --kind=js --category=assist --name={{rulename}}\n  just gen-lint\n  just documentation\n\n# Creates a new json assist rule with the given name. Name has to be camel case.\nnew-json-assistrule rulename:\n  cargo run -p xtask_codegen -- new-lintrule --kind=json --category=assist --name={{rulename}}\n  just gen-lint\n  just documentation\n\n# Creates a new css lint rule with the given name. Name has to be camel case.\nnew-css-lintrule rulename:\n  cargo run -p xtask_codegen -- new-lintrule --kind=css --category=lint --name={{rulename}}\n  just gen-lint\n\n# Creates a new graphql lint rule with the given name. Name has to be camel case.\nnew-graphql-lintrule rulename:\n  cargo run -p xtask_codegen -- new-lintrule --kind=graphql --category=lint --name={{rulename}}\n  just gen-lint\n\n\n# Promotes a rule from the nursery group to a new group\npromote-rule rulename group:\n\tcargo run -p xtask_codegen -- promote-rule --name={{rulename}} --group={{group}}\n\tjust gen-lint\n\tjust documentation\n\t-cargo test -p biome_js_analyze -- {{snakecase(rulename)}}\n\tcargo insta accept\n\n\n# Format Rust files and TOML files\nformat:\n\tcargo format\n\ttaplo format\n\n[unix]\n_touch file:\n  touch {{file}}\n\n[windows]\n_touch file:\n  (gci {{file}}).LastWriteTime = Get-Date\n\n# Run tests of all crates\ntest:\n\tcargo test run --no-fail-fast\n\n# Run tests for the crate passed as argument e.g. just test-create biome_cli\ntest-crate name:\n\tcargo test run -p {{name}} --no-fail-fast\n\n# Run doc tests\ntest-doc:\n\tcargo test --doc\n\n# Tests a lint rule. The name of the rule needs to be camel case\ntest-lintrule name:\n  just _touch crates/biome_js_analyze/tests/spec_tests.rs\n  just _touch crates/biome_json_analyze/tests/spec_tests.rs\n  just _touch crates/biome_css_analyze/tests/spec_tests.rs\n  just _touch crates/biome_graphql_analyze/tests/spec_tests.rs\n  cargo test -p biome_js_analyze -- {{snakecase(name)}} --show-output\n  cargo test -p biome_json_analyze -- {{snakecase(name)}} --show-output\n  cargo test -p biome_css_analyze -- {{snakecase(name)}} --show-output\n  cargo test -p biome_graphql_analyze -- {{snakecase(name)}} --show-output\n\n# Tests a lint rule. The name of the rule needs to be camel case\ntest-transformation name:\n  just _touch crates/biome_js_transform/tests/spec_tests.rs\n  cargo test -p biome_js_transform -- {{snakecase(name)}} --show-output\n\n# Run the quick_test for the given package.\ntest-quick package:\n  cargo test -p {{package}} --test quick_test -- quick_test --nocapture --ignored\n\n\n# Alias for `cargo lint`, it runs clippy on the whole codebase\nlint:\n  cargo lint\n\n# When you finished coding, run this command to run the same commands in the CI.\nready:\n  git diff --exit-code --quiet\n  just gen-all\n  just documentation\n  #just format # format is already run in `just gen-all`\n  just lint\n  just test\n  just test-doc\n  git diff --exit-code --quiet\n\n# Creates a new crate\nnew-crate name:\n  cargo new --lib crates/{{snakecase(name)}}\n  cargo run -p xtask_codegen -- new-crate --name={{snakecase(name)}}\n\n# Creates a new changeset for the final changelog\nnew-changeset:\n    knope document-change\n\n# Dry-run of the release\ndry-run-release *args='':\n    knope release --dry-run {{args}}\n"
        },
        {
          "name": "knope.toml",
          "type": "blob",
          "size": 11.572265625,
          "content": "## npm packages\n[packages.cli]\nchangelog = \"CHANGELOG.md\"\nversioned_files = [\n  \"packages/@biomejs/biome/package.json\",\n  # Platform binaries\n  \"packages/@biomejs/cli-darwin-arm64/package.json\",\n  \"packages/@biomejs/cli-darwin-x64/package.json\",\n  \"packages/@biomejs/cli-linux-arm64/package.json\",\n  \"packages/@biomejs/cli-linux-arm64-musl/package.json\",\n  \"packages/@biomejs/cli-linux-x64/package.json\",\n  \"packages/@biomejs/cli-linux-x64-musl/package.json\",\n  \"packages/@biomejs/cli-win32-arm64/package.json\",\n  \"packages/@biomejs/cli-win32-x64/package.json\",\n  \"packages/@biomejs/cli-win32-x64/package.json\",\n  # WASM\n  \"packages/@biomejs/wasm-web/package.json\",\n  \"packages/@biomejs/wasm-bundler/package.json\",\n  \"packages/@biomejs/wasm-nodejs/package.json\",\n  \"crates/biome_wasm/Cargo.toml\",\n  # JSON RPC\n  \"packages/@biomejs/backend-jsonrpc/package.json\",\n]\n\n\n# Special crate. This is the main binary that we are going to release.\n[packages.biome_cli]\nversioned_files = [\"crates/biome_cli/Cargo.toml\"]\n# Artifact names\n[[packages.biome_cli.assets]]\nname = \"biome-win32-x64.tgz\"\npath = \"dist/biome-win32-x64.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-win32-arm64.tgz\"\npath = \"dist/biome-win32-arm64.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-linux-x64.tgz\"\npath = \"dist/biome-linux-x64.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-linux-arm64.tgz\"\npath = \"dist/biome-linux-arm64.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-linux-x64-musl.tgz\"\npath = \"dist/biome-linux-x64-musl.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-linux-arm64-musl.tgz\"\npath = \"dist/biome-linux-arm64-musl.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-darwin-x64.tgz\"\npath = \"dist/biome-darwin-x64.tgz\"\n[[packages.biome_cli.assets]]\nname = \"biome-darwin-arm64.tgz\"\npath = \"dist/biome-darwin-arm64.tgz\"\n\n## Rust crates. DO NOT CHANGE!\n[packages.biome_analyze]\nchangelog       = \"crates/biome_analyze/CHANGELOG.md\"\nversioned_files = [\"crates/biome_analyze/Cargo.toml\"]\n[packages.biome_aria]\nchangelog       = \"crates/biome_aria/CHANGELOG.md\"\nversioned_files = [\"crates/biome_aria/Cargo.toml\"]\n[packages.biome_aria_metadata]\nchangelog       = \"crates/biome_aria_metadata/CHANGELOG.md\"\nversioned_files = [\"crates/biome_aria_metadata/Cargo.toml\"]\n[packages.biome_console]\nchangelog       = \"crates/biome_console/CHANGELOG.md\"\nversioned_files = [\"crates/biome_console/Cargo.toml\"]\n[packages.biome_control_flow]\nchangelog       = \"crates/biome_control_flow/CHANGELOG.md\"\nversioned_files = [\"crates/biome_control_flow/Cargo.toml\"]\n[packages.biome_css_factory]\nchangelog       = \"crates/biome_css_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_css_factory/Cargo.toml\"]\n[packages.biome_css_formatter]\nchangelog       = \"crates/biome_css_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_css_formatter/Cargo.toml\"]\n[packages.biome_css_parser]\nchangelog       = \"crates/biome_css_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_css_parser/Cargo.toml\"]\n[packages.biome_css_syntax]\nchangelog       = \"crates/biome_css_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_css_syntax/Cargo.toml\"]\n[packages.biome_deserialize]\nchangelog       = \"crates/biome_deserialize/CHANGELOG.md\"\nversioned_files = [\"crates/biome_deserialize/Cargo.toml\"]\n[packages.biome_deserialize_macros]\nchangelog       = \"crates/biome_deserialize_macros/CHANGELOG.md\"\nversioned_files = [\"crates/biome_deserialize_macros/Cargo.toml\"]\n[packages.biome_diagnostics]\nchangelog       = \"crates/biome_diagnostics/CHANGELOG.md\"\nversioned_files = [\"crates/biome_diagnostics/Cargo.toml\"]\n[packages.biome_diagnostics_categories]\nchangelog       = \"crates/biome_diagnostics_categories/CHANGELOG.md\"\nversioned_files = [\"crates/biome_diagnostics_categories/Cargo.toml\"]\n[packages.biome_diagnostics_macros]\nchangelog       = \"crates/biome_diagnostics_macros/CHANGELOG.md\"\nversioned_files = [\"crates/biome_diagnostics_macros/Cargo.toml\"]\n[packages.biome_formatter]\nchangelog       = \"crates/biome_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_formatter/Cargo.toml\"]\n[packages.biome_fs]\nchangelog       = \"crates/biome_fs/CHANGELOG.md\"\nversioned_files = [\"crates/biome_fs/Cargo.toml\"]\n[packages.biome_grit_factory]\nchangelog       = \"crates/biome_grit_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_grit_factory/Cargo.toml\"]\n[packages.biome_grit_parser]\nchangelog       = \"crates/biome_grit_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_grit_parser/Cargo.toml\"]\n[packages.biome_grit_syntax]\nchangelog       = \"crates/biome_grit_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_grit_syntax/Cargo.toml\"]\n[packages.biome_html_factory]\nchangelog       = \"crates/biome_html_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_html_factory/Cargo.toml\"]\n[packages.biome_html_syntax]\nchangelog       = \"crates/biome_html_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_html_syntax/Cargo.toml\"]\n[packages.biome_js_analyze]\nchangelog       = \"crates/biome_js_analyze/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_analyze/Cargo.toml\"]\n[packages.biome_js_factory]\nchangelog       = \"crates/biome_js_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_factory/Cargo.toml\"]\n[packages.biome_js_formatter]\nchangelog       = \"crates/biome_js_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_formatter/Cargo.toml\"]\n[packages.biome_js_parser]\nchangelog       = \"crates/biome_js_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_parser/Cargo.toml\"]\n[packages.biome_js_semantic]\nchangelog       = \"crates/biome_js_semantic/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_semantic/Cargo.toml\"]\n[packages.biome_js_syntax]\nchangelog       = \"crates/biome_js_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_syntax/Cargo.toml\"]\n[packages.biome_js_transform]\nchangelog       = \"crates/biome_js_transform/CHANGELOG.md\"\nversioned_files = [\"crates/biome_js_transform/Cargo.toml\"]\n[packages.biome_json_analyze]\nchangelog       = \"crates/biome_json_analyze/CHANGELOG.md\"\nversioned_files = [\"crates/biome_json_analyze/Cargo.toml\"]\n[packages.biome_json_factory]\nchangelog       = \"crates/biome_json_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_json_factory/Cargo.toml\"]\n[packages.biome_json_formatter]\nchangelog       = \"crates/biome_json_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_json_formatter/Cargo.toml\"]\n[packages.biome_json_parser]\nchangelog       = \"crates/biome_json_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_json_parser/Cargo.toml\"]\n[packages.biome_json_syntax]\nchangelog       = \"crates/biome_json_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_json_syntax/Cargo.toml\"]\n[packages.biome_lsp_converters]\nchangelog       = \"crates/biome_lsp_converters/CHANGELOG.md\"\nversioned_files = [\"crates/biome_lsp_converters/Cargo.toml\"]\n[packages.biome_markup]\nchangelog       = \"crates/biome_markup/CHANGELOG.md\"\nversioned_files = [\"crates/biome_markup/Cargo.toml\"]\n[packages.biome_parser]\nchangelog       = \"crates/biome_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_parser/Cargo.toml\"]\n[packages.biome_project]\nchangelog       = \"crates/biome_project/CHANGELOG.md\"\nversioned_files = [\"crates/biome_project/Cargo.toml\"]\n[packages.biome_rowan]\nchangelog       = \"crates/biome_rowan/CHANGELOG.md\"\nversioned_files = [\"crates/biome_rowan/Cargo.toml\"]\n[packages.biome_suppression]\nchangelog       = \"crates/biome_suppression/CHANGELOG.md\"\nversioned_files = [\"crates/biome_suppression/Cargo.toml\"]\n[packages.biome_text_edit]\nchangelog       = \"crates/biome_text_edit/CHANGELOG.md\"\nversioned_files = [\"crates/biome_text_edit/Cargo.toml\"]\n[packages.biome_text_size]\nchangelog       = \"crates/biome_text_size/CHANGELOG.md\"\nversioned_files = [\"crates/biome_text_size/Cargo.toml\"]\n[packages.biome_unicode_table]\nchangelog       = \"crates/biome_unicode_table/CHANGELOG.md\"\nversioned_files = [\"crates/biome_unicode_table/Cargo.toml\"]\n[packages.biome_string_case]\nchangelog       = \"crates/biome_string_case/CHANGELOG.md\"\nversioned_files = [\"crates/biome_string_case/Cargo.toml\"]\n[packages.biome_graphql_syntax]\nchangelog       = \"crates/biome_graphql_syntax/CHANGELOG.md\"\nversioned_files = [\"crates/biome_graphql_syntax/Cargo.toml\"]\n[packages.biome_graphql_factory]\nchangelog       = \"crates/biome_graphql_factory/CHANGELOG.md\"\nversioned_files = [\"crates/biome_graphql_factory/Cargo.toml\"]\n[packages.biome_html_parser]\nchangelog       = \"crates/biome_html_parser/CHANGELOG.md\"\nversioned_files = [\"crates/biome_html_parser/Cargo.toml\"]\n[packages.biome_configuration]\nchangelog       = \"crates/biome_configuration/CHANGELOG.md\"\nversioned_files = [\"crates/biome_configuration/Cargo.toml\"]\n\n[packages.biome_grit_formatter]\nchangelog       = \"crates/biome_grit_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_grit_formatter/Cargo.toml\"]\n\n[packages.biome_graphql_formatter]\nchangelog       = \"crates/biome_graphql_formatter/CHANGELOG.md\"\nversioned_files = [\"crates/biome_graphql_formatter/Cargo.toml\"]\n\n[packages.biome_graphql_analyze]\nchangelog       = \"crates/biome_graphql_analyze/CHANGELOG.md\"\nversioned_files = [\"crates/biome_graphql_analyze/Cargo.toml\"]\n\n[packages.biome_graphql_semantic]\nchangelog       = \"crates/biome_graphql_semantic/CHANGELOG.md\"\nversioned_files = [\"crates/biome_graphql_semantic/Cargo.toml\"]\n\n[packages.biome_css_semantic]\nchangelog       = \"crates/biome_css_semantic/CHANGELOG.md\"\nversioned_files = [\"crates/biome_css_semantic/Cargo.toml\"]\n\n[packages.biome_glob]\nchangelog       = \"crates/biome_glob/CHANGELOG.md\"\nversioned_files = [\"crates/biome_glob/Cargo.toml\"]\n\n[packages.biome_syntax_codegen]\nchangelog       = \"crates/biome_syntax_codegen/CHANGELOG.md\"\nversioned_files = [\"crates/biome_syntax_codegen/Cargo.toml\"]\n\n## End of crates. DO NOT CHANGE!\n\n# Workflow to create a changeset\n[[workflows]]\nname = \"document-change\"\n\n[[workflows.steps]]\ntype = \"CreateChangeFile\"\n# end-workflow\n\n# Workflow that creates a PR via GitHub actions. This PR will contain all the changes for a release: changelogs, version numbers, etc.\n# Refernce: https://knope.tech/recipes/1-preview-releases-with-pull-requests/#prepare-release-workflow\n[[workflows]]\nname = \"prepare-release\"\n[[workflows.steps]]\ncommand = \"git switch -c release/automated-ci\"\ntype    = \"Command\"\n\n[[workflows.steps]]\ntype = \"PrepareRelease\"\n# we have been following conventional commits, although inside the monorepo it's difficult to define scopes\nignore_conventional_commits = true\n\n[[workflows.steps]]\ntype = \"Command\"\n# Workaround to update the lock files\n# https://github.com/knope-dev/knope/issues/162\ncommand = \"cargo update -w\"\n\n[[workflows.steps]]\ntype = \"Command\"\n# WARNING: if you change this message, remember to update the `prepare_release.yml` too, because it uses this message\ncommand = \"git commit -m \\\"chore: prepare release\\\"\"\n\n[[workflows.steps]]\n# WARNING: if you change the name of the branch, update `prepare_release.yml` too\ncommand = \"git push --force-with-lease --set-upstream origin release/automated-ci\"\ntype    = \"Command\"\n\n[[workflows.steps]]\nbase = \"main\"\ntype = \"CreatePullRequest\"\n\n[workflows.steps.title]\ntemplate = \"chore: prepare release\"\n\n[workflows.steps.body]\ntemplate = \"This PR was automatically created via workflow. Merging it will create a new release of the Biome packages and crates.\"\n# end-workflow\n\n# The release workflow that will run in CI. It is triggered when the prepare-release PR is merged\n[[workflows]]\nname = \"release\"\n\n[[workflows.steps]]\n# The script will add most up-to-date optional dependencies to the manifest of @biomejs/biome and @biomejs/backend-jsonrpc\ncommand = \"node scripts/generate-packages.mjs\"\ntype    = \"Command\"\n\n[[workflows.steps]]\ntype = \"Release\"\n\n# GitHub related information. `owner` is the name of the org, `repo` is the name of the repository where the actions run\n[github]\nowner = \"biomejs\"\nrepo  = \"biome\"\n# end-workflow\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3623046875,
          "content": "{\n  \"name\": \"@biomejs/monorepo\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"check:apply\": \"cargo biome-cli-dev check --fix --unsafe\",\n    \"check\": \"cargo biome-cli-dev check\",\n    \"ci\": \"cargo biome-cli-dev ci\"\n  },\n  \"keywords\": [],\n  \"author\": \"Biome Developers and Contributors\",\n  \"license\": \"MIT OR Apache-2.0\",\n  \"packageManager\": \"pnpm@9.15.3\"\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 95.9345703125,
          "content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .: {}\n\n  benchmark:\n    devDependencies:\n      '@typescript-eslint/eslint-plugin':\n        specifier: 8.19.1\n        version: 8.19.1(@typescript-eslint/parser@8.3.0(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2))(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)\n      dprint:\n        specifier: 0.48.0\n        version: 0.48.0\n      eslint:\n        specifier: 9.17.0\n        version: 9.17.0(jiti@1.21.6)\n      prettier:\n        specifier: 3.3.3\n        version: 3.3.3\n\n  crates/biome_formatter_test/src/prettier:\n    dependencies:\n      prettier:\n        specifier: 3.3.3\n        version: 3.3.3\n\n  packages/@biomejs/backend-jsonrpc:\n    optionalDependencies:\n      '@biomejs/cli-darwin-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-darwin-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-arm64-musl':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-x64-musl':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-win32-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-win32-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n    devDependencies:\n      '@types/node':\n        specifier: 20.17.12\n        version: 20.17.12\n      typescript:\n        specifier: 5.7.2\n        version: 5.7.2\n      vite:\n        specifier: 5.4.11\n        version: 5.4.11(@types/node@20.17.12)\n      vitest:\n        specifier: 1.6.0\n        version: 1.6.0(@types/node@20.17.12)(happy-dom@15.11.7)\n\n  packages/@biomejs/biome:\n    optionalDependencies:\n      '@biomejs/cli-darwin-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-darwin-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-arm64-musl':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-linux-x64-musl':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-win32-arm64':\n        specifier: 1.9.4\n        version: 1.9.4\n      '@biomejs/cli-win32-x64':\n        specifier: 1.9.4\n        version: 1.9.4\n\n  packages/@biomejs/cli-darwin-arm64: {}\n\n  packages/@biomejs/cli-darwin-x64: {}\n\n  packages/@biomejs/cli-linux-arm64: {}\n\n  packages/@biomejs/cli-linux-arm64-musl: {}\n\n  packages/@biomejs/cli-linux-x64: {}\n\n  packages/@biomejs/cli-linux-x64-musl: {}\n\n  packages/@biomejs/cli-win32-arm64: {}\n\n  packages/@biomejs/cli-win32-x64: {}\n\n  packages/@biomejs/js-api:\n    devDependencies:\n      '@biomejs/wasm-bundler':\n        specifier: link:../wasm-bundler\n        version: link:../wasm-bundler\n      '@biomejs/wasm-nodejs':\n        specifier: link:../wasm-nodejs\n        version: link:../wasm-nodejs\n      '@biomejs/wasm-web':\n        specifier: link:../wasm-web\n        version: link:../wasm-web\n      typescript:\n        specifier: 5.7.2\n        version: 5.7.2\n      vite:\n        specifier: 5.4.11\n        version: 5.4.11(@types/node@20.17.12)\n      vitest:\n        specifier: 1.6.0\n        version: 1.6.0(@types/node@20.17.12)(happy-dom@15.11.7)\n\n  packages/@biomejs/wasm-bundler: {}\n\n  packages/@biomejs/wasm-nodejs: {}\n\n  packages/@biomejs/wasm-web: {}\n\n  packages/aria-data:\n    dependencies:\n      happy-dom:\n        specifier: ^15.11.7\n        version: 15.11.7\n\n  packages/tailwindcss-config-analyzer:\n    dependencies:\n      tailwindcss:\n        specifier: ^3.4.17\n        version: 3.4.17\n    devDependencies:\n      '@types/bun':\n        specifier: 1.1.14\n        version: 1.1.14\n      read-package-up:\n        specifier: 11.0.0\n        version: 11.0.0\n      typescript:\n        specifier: 5.7.2\n        version: 5.7.2\n\npackages:\n\n  '@alloc/quick-lru@5.2.0':\n    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}\n    engines: {node: '>=10'}\n\n  '@babel/code-frame@7.23.5':\n    resolution: {integrity: sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-identifier@7.22.20':\n    resolution: {integrity: sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/highlight@7.23.4':\n    resolution: {integrity: sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A==}\n    engines: {node: '>=6.9.0'}\n\n  '@biomejs/cli-darwin-arm64@1.9.4':\n    resolution: {integrity: sha512-bFBsPWrNvkdKrNCYeAp+xo2HecOGPAy9WyNyB/jKnnedgzl4W4Hb9ZMzYNbf8dMCGmUdSavlYHiR01QaYR58cw==}\n    engines: {node: '>=14.21.3'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@biomejs/cli-darwin-x64@1.9.4':\n    resolution: {integrity: sha512-ngYBh/+bEedqkSevPVhLP4QfVPCpb+4BBe2p7Xs32dBgs7rh9nY2AIYUL6BgLw1JVXV8GlpKmb/hNiuIxfPfZg==}\n    engines: {node: '>=14.21.3'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@biomejs/cli-linux-arm64-musl@1.9.4':\n    resolution: {integrity: sha512-v665Ct9WCRjGa8+kTr0CzApU0+XXtRgwmzIf1SeKSGAv+2scAlW6JR5PMFo6FzqqZ64Po79cKODKf3/AAmECqA==}\n    engines: {node: '>=14.21.3'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@biomejs/cli-linux-arm64@1.9.4':\n    resolution: {integrity: sha512-fJIW0+LYujdjUgJJuwesP4EjIBl/N/TcOX3IvIHJQNsAqvV2CHIogsmA94BPG6jZATS4Hi+xv4SkBBQSt1N4/g==}\n    engines: {node: '>=14.21.3'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@biomejs/cli-linux-x64-musl@1.9.4':\n    resolution: {integrity: sha512-gEhi/jSBhZ2m6wjV530Yy8+fNqG8PAinM3oV7CyO+6c3CEh16Eizm21uHVsyVBEB6RIM8JHIl6AGYCv6Q6Q9Tg==}\n    engines: {node: '>=14.21.3'}\n    cpu: [x64]\n    os: [linux]\n\n  '@biomejs/cli-linux-x64@1.9.4':\n    resolution: {integrity: sha512-lRCJv/Vi3Vlwmbd6K+oQ0KhLHMAysN8lXoCI7XeHlxaajk06u7G+UsFSO01NAs5iYuWKmVZjmiOzJ0OJmGsMwg==}\n    engines: {node: '>=14.21.3'}\n    cpu: [x64]\n    os: [linux]\n\n  '@biomejs/cli-win32-arm64@1.9.4':\n    resolution: {integrity: sha512-tlbhLk+WXZmgwoIKwHIHEBZUwxml7bRJgk0X2sPyNR3S93cdRq6XulAZRQJ17FYGGzWne0fgrXBKpl7l4M87Hg==}\n    engines: {node: '>=14.21.3'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@biomejs/cli-win32-x64@1.9.4':\n    resolution: {integrity: sha512-8Y5wMhVIPaWe6jw2H+KlEm4wP/f7EW3810ZLmDlrEEy5KvBsb9ECEfu/kMWD484ijfQ8+nIi0giMgu9g1UAuuA==}\n    engines: {node: '>=14.21.3'}\n    cpu: [x64]\n    os: [win32]\n\n  '@dprint/darwin-arm64@0.48.0':\n    resolution: {integrity: sha512-LJ+02WB1PDIUqobfwxBVMz0cUByXsZ6izFTC9tHR+BDt+qWfoZpCn5r/zpAVSkVlA5LzGHKLVNJrwKwaTnAiVA==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@dprint/darwin-x64@0.48.0':\n    resolution: {integrity: sha512-OxfLbitoNvFMVucauJ2DvEaJpnxyyhXWC2M56f2AX8lkZSsHrdMHtklqxHz3cBGVPpcCXjLPRC139ynwmqtjIA==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@dprint/linux-arm64-glibc@0.48.0':\n    resolution: {integrity: sha512-VMeyorjMXE9NrksmyOJ0zJRGxT7r7kDBBxshCxW+U1xgW+FqR8oE25RZaeDZZPDzUHapAly4ILZqjExLzAWVpw==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@dprint/linux-arm64-musl@0.48.0':\n    resolution: {integrity: sha512-1BUHQKEngrZv8F6wq2SVxdokyeUoHFXjz0xbYGwctlFPzXAVNLpDy9FROXsfIKmxZ0NsRqEpatETLmubtvWtcA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@dprint/linux-riscv64-glibc@0.48.0':\n    resolution: {integrity: sha512-c8LktisPGbygyFf9wUg0trbAQDApawU017iPQXkZnGcV4QoCeGkFjnY8vltIKyy5DeP5gIp12KjlaT/wogMPkw==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@dprint/linux-x64-glibc@0.48.0':\n    resolution: {integrity: sha512-Am8rp4FqmkO4aFdmwxk+82g2csxPLTPIlNq0Fa9AZReU15yta3Pq0Pg4AXFq+KSso5L4WGmt09ciCitK5gmdOg==}\n    cpu: [x64]\n    os: [linux]\n\n  '@dprint/linux-x64-musl@0.48.0':\n    resolution: {integrity: sha512-0nzrZXOvblM/H4GVffNJ7YZn/Y4F/i+DNDZRT1hQmKuTQurB7a2MBJ91OpooLIWJoSn4q40crwM1Po4xnNXrdg==}\n    cpu: [x64]\n    os: [linux]\n\n  '@dprint/win32-arm64@0.48.0':\n    resolution: {integrity: sha512-bRcGLbhKEXmP7iXDir/vU6DqkA3XaMqBM6P2ACCJMHd+XKWsz3VJzZMn5hFWZ+oZpxUsS3Mg2RcgH5xVjaawgA==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@dprint/win32-x64@0.48.0':\n    resolution: {integrity: sha512-9JOKWWngo5vPBFxJgFogAS4rfFC2GaB9Yew6JZbRBUik7j5Num2muuw5p1tMYnl2NUBdS2W4EgsSLM3uUDyhBQ==}\n    cpu: [x64]\n    os: [win32]\n\n  '@esbuild/aix-ppc64@0.21.5':\n    resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/android-arm64@0.21.5':\n    resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm@0.21.5':\n    resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-x64@0.21.5':\n    resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/darwin-arm64@0.21.5':\n    resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.21.5':\n    resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/freebsd-arm64@0.21.5':\n    resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.21.5':\n    resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/linux-arm64@0.21.5':\n    resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.21.5':\n    resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.21.5':\n    resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.21.5':\n    resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}\n    engines: {node: '>=12'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.21.5':\n    resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}\n    engines: {node: '>=12'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.21.5':\n    resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.21.5':\n    resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}\n    engines: {node: '>=12'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.21.5':\n    resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}\n    engines: {node: '>=12'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.21.5':\n    resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/netbsd-x64@0.21.5':\n    resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/openbsd-x64@0.21.5':\n    resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/sunos-x64@0.21.5':\n    resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/win32-arm64@0.21.5':\n    resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.21.5':\n    resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.21.5':\n    resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [win32]\n\n  '@eslint-community/eslint-utils@4.4.0':\n    resolution: {integrity: sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n\n  '@eslint-community/regexpp@4.12.1':\n    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  '@eslint/config-array@0.19.0':\n    resolution: {integrity: sha512-zdHg2FPIFNKPdcHWtiNT+jEFCHYVplAXRDlQDyqy0zGx/q2parwh7brGJSiTxRk/TSMkbM//zt/f5CHgyTyaSQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.9.0':\n    resolution: {integrity: sha512-7ATR9F0e4W85D/0w7cU0SNj7qkAexMG+bAHEZOjo9akvGuhHE2m7umzWzfnpa0XAg5Kxc1BWmtPMV67jJ+9VUg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/eslintrc@3.2.0':\n    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/js@9.17.0':\n    resolution: {integrity: sha512-Sxc4hqcs1kTu0iID3kcZDW3JHq2a77HO9P8CP6YEA/FpH3Ll8UXE2r/86Rz9YJLKme39S9vU5OWNjC6Xl0Cr3w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/object-schema@2.1.4':\n    resolution: {integrity: sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/plugin-kit@0.2.3':\n    resolution: {integrity: sha512-2b/g5hRmpbb1o4GnTZax9N9m0FXzz9OV42ZzI4rDDMDuHUqigAiQCEWChBWCY4ztAGVRjoWT19v0yMmc5/L5kA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@humanfs/core@0.19.1':\n    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanfs/node@0.16.6':\n    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanwhocodes/module-importer@1.0.1':\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n\n  '@humanwhocodes/retry@0.3.1':\n    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}\n    engines: {node: '>=18.18'}\n\n  '@humanwhocodes/retry@0.4.1':\n    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}\n    engines: {node: '>=18.18'}\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@jest/schemas@29.6.3':\n    resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}\n    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n\n  '@jridgewell/gen-mapping@0.3.5':\n    resolution: {integrity: sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@rollup/rollup-android-arm-eabi@4.23.0':\n    resolution: {integrity: sha512-8OR+Ok3SGEMsAZispLx8jruuXw0HVF16k+ub2eNXKHDmdxL4cf9NlNpAzhlOhNyXzKDEJuFeq0nZm+XlNb1IFw==}\n    cpu: [arm]\n    os: [android]\n\n  '@rollup/rollup-android-arm64@4.23.0':\n    resolution: {integrity: sha512-rEFtX1nP8gqmLmPZsXRMoLVNB5JBwOzIAk/XAcEPuKrPa2nPJ+DuGGpfQUR0XjRm8KjHfTZLpWbKXkA5BoFL3w==}\n    cpu: [arm64]\n    os: [android]\n\n  '@rollup/rollup-darwin-arm64@4.23.0':\n    resolution: {integrity: sha512-ZbqlMkJRMMPeapfaU4drYHns7Q5MIxjM/QeOO62qQZGPh9XWziap+NF9fsqPHT0KzEL6HaPspC7sOwpgyA3J9g==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@rollup/rollup-darwin-x64@4.23.0':\n    resolution: {integrity: sha512-PfmgQp78xx5rBCgn2oYPQ1rQTtOaQCna0kRaBlc5w7RlA3TDGGo7m3XaptgitUZ54US9915i7KeVPHoy3/W8tA==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.23.0':\n    resolution: {integrity: sha512-WAeZfAAPus56eQgBioezXRRzArAjWJGjNo/M+BHZygUcs9EePIuGI1Wfc6U/Ki+tMW17FFGvhCfYnfcKPh18SA==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm-musleabihf@4.23.0':\n    resolution: {integrity: sha512-v7PGcp1O5XKZxKX8phTXtmJDVpE20Ub1eF6w9iMmI3qrrPak6yR9/5eeq7ziLMrMTjppkkskXyxnmm00HdtXjA==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-gnu@4.23.0':\n    resolution: {integrity: sha512-nAbWsDZ9UkU6xQiXEyXBNHAKbzSAi95H3gTStJq9UGiS1v+YVXwRHcQOQEF/3CHuhX5BVhShKoeOf6Q/1M+Zhg==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-musl@4.23.0':\n    resolution: {integrity: sha512-5QT/Di5FbGNPaVw8hHO1wETunwkPuZBIu6W+5GNArlKHD9fkMHy7vS8zGHJk38oObXfWdsuLMogD4sBySLJ54g==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.23.0':\n    resolution: {integrity: sha512-Sefl6vPyn5axzCsO13r1sHLcmPuiSOrKIImnq34CBurntcJ+lkQgAaTt/9JkgGmaZJ+OkaHmAJl4Bfd0DmdtOQ==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@rollup/rollup-linux-riscv64-gnu@4.23.0':\n    resolution: {integrity: sha512-o4QI2KU/QbP7ZExMse6ULotdV3oJUYMrdx3rBZCgUF3ur3gJPfe8Fuasn6tia16c5kZBBw0aTmaUygad6VB/hQ==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@rollup/rollup-linux-s390x-gnu@4.23.0':\n    resolution: {integrity: sha512-+bxqx+V/D4FGrpXzPGKp/SEZIZ8cIW3K7wOtcJAoCrmXvzRtmdUhYNbgd+RztLzfDEfA2WtKj5F4tcbNPuqgeg==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-gnu@4.23.0':\n    resolution: {integrity: sha512-I/eXsdVoCKtSgK9OwyQKPAfricWKUMNCwJKtatRYMmDo5N859tbO3UsBw5kT3dU1n6ZcM1JDzPRSGhAUkxfLxw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-musl@4.23.0':\n    resolution: {integrity: sha512-4ZoDZy5ShLbbe1KPSafbFh1vbl0asTVfkABC7eWqIs01+66ncM82YJxV2VtV3YVJTqq2P8HMx3DCoRSWB/N3rw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-win32-arm64-msvc@4.23.0':\n    resolution: {integrity: sha512-+5Ky8dhft4STaOEbZu3/NU4QIyYssKO+r1cD3FzuusA0vO5gso15on7qGzKdNXnc1gOrsgCqZjRw1w+zL4y4hQ==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@rollup/rollup-win32-ia32-msvc@4.23.0':\n    resolution: {integrity: sha512-0SPJk4cPZQhq9qA1UhIRumSE3+JJIBBjtlGl5PNC///BoaByckNZd53rOYD0glpTkYFBQSt7AkMeLVPfx65+BQ==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@rollup/rollup-win32-x64-msvc@4.23.0':\n    resolution: {integrity: sha512-lqCK5GQC8fNo0+JvTSxcG7YB1UKYp8yrNLhsArlvPWN+16ovSZgoehlVHg6X0sSWPUkpjRBR5TuR12ZugowZ4g==}\n    cpu: [x64]\n    os: [win32]\n\n  '@sinclair/typebox@0.27.8':\n    resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}\n\n  '@types/bun@1.1.14':\n    resolution: {integrity: sha512-opVYiFGtO2af0dnWBdZWlioLBoxSdDO5qokaazLhq8XQtGZbY4pY3/JxY8Zdf/hEwGubbp7ErZXoN1+h2yesxA==}\n\n  '@types/estree@1.0.6':\n    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n\n  '@types/json-schema@7.0.15':\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n\n  '@types/node@20.12.12':\n    resolution: {integrity: sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw==}\n\n  '@types/node@20.17.12':\n    resolution: {integrity: sha512-vo/wmBgMIiEA23A/knMfn/cf37VnuF52nZh5ZoW0GWt4e4sxNquibrMRJ7UQsA06+MBx9r/H1jsI9grYjQCQlw==}\n\n  '@types/normalize-package-data@2.4.4':\n    resolution: {integrity: sha512-37i+OaWTh9qeK4LSHPsyRC7NahnGotNuZvjLSgcPzblpHB3rrCJxAOgI5gCdKm7coonsaX1Of0ILiTcnZjbfxA==}\n\n  '@types/ws@8.5.10':\n    resolution: {integrity: sha512-vmQSUcfalpIq0R9q7uTo2lXs6eGIpt9wtnLdMv9LVpIjCA/+ufZRozlVoVelIYixx1ugCBKDhn89vnsEGOCx9A==}\n\n  '@typescript-eslint/eslint-plugin@8.19.1':\n    resolution: {integrity: sha512-tJzcVyvvb9h/PB96g30MpxACd9IrunT7GF9wfA9/0TJ1LxGOJx1TdPzSbBBnNED7K9Ka8ybJsnEpiXPktolTLg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/parser@8.3.0':\n    resolution: {integrity: sha512-h53RhVyLu6AtpUzVCYLPhZGL5jzTD9fZL+SYf/+hYOx2bDkyQXztXSc4tbvKYHzfMXExMLiL9CWqJmVz6+78IQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/scope-manager@8.19.1':\n    resolution: {integrity: sha512-60L9KIuN/xgmsINzonOcMDSB8p82h95hoBfSBtXuO4jlR1R9L1xSkmVZKgCPVfavDlXihh4ARNjXhh1gGnLC7Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/scope-manager@8.3.0':\n    resolution: {integrity: sha512-mz2X8WcN2nVu5Hodku+IR8GgCOl4C0G/Z1ruaWN4dgec64kDBabuXyPAr+/RgJtumv8EEkqIzf3X2U5DUKB2eg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/type-utils@8.19.1':\n    resolution: {integrity: sha512-Rp7k9lhDKBMRJB/nM9Ksp1zs4796wVNyihG9/TU9R6KCJDNkQbc2EOKjrBtLYh3396ZdpXLtr/MkaSEmNMtykw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/types@8.19.1':\n    resolution: {integrity: sha512-JBVHMLj7B1K1v1051ZaMMgLW4Q/jre5qGK0Ew6UgXz1Rqh+/xPzV1aW581OM00X6iOfyr1be+QyW8LOUf19BbA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/types@8.3.0':\n    resolution: {integrity: sha512-y6sSEeK+facMaAyixM36dQ5NVXTnKWunfD1Ft4xraYqxP0lC0POJmIaL/mw72CUMqjY9qfyVfXafMeaUj0noWw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/typescript-estree@8.19.1':\n    resolution: {integrity: sha512-jk/TZwSMJlxlNnqhy0Eod1PNEvCkpY6MXOXE/WLlblZ6ibb32i2We4uByoKPv1d0OD2xebDv4hbs3fm11SMw8Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/typescript-estree@8.3.0':\n    resolution: {integrity: sha512-Mq7FTHl0R36EmWlCJWojIC1qn/ZWo2YiWYc1XVtasJ7FIgjo0MVv9rZWXEE7IK2CGrtwe1dVOxWwqXUdNgfRCA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/utils@8.19.1':\n    resolution: {integrity: sha512-IxG5gLO0Ne+KaUc8iW1A+XuKLd63o4wlbI1Zp692n1xojCl/THvgIKXJXBZixTh5dd5+yTJ/VXH7GJaaw21qXA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/visitor-keys@8.19.1':\n    resolution: {integrity: sha512-fzmjU8CHK853V/avYZAvuVut3ZTfwN5YtMaoi+X9Y9MA9keaWNHC3zEQ9zvyX/7Hj+5JkNyK1l7TOR2hevHB6Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/visitor-keys@8.3.0':\n    resolution: {integrity: sha512-RmZwrTbQ9QveF15m/Cl28n0LXD6ea2CjkhH5rQ55ewz3H24w+AMCJHPVYaZ8/0HoG8Z3cLLFFycRXxeO2tz9FA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@vitest/expect@1.6.0':\n    resolution: {integrity: sha512-ixEvFVQjycy/oNgHjqsL6AZCDduC+tflRluaHIzKIsdbzkLn2U/iBnVeJwB6HsIjQBdfMR8Z0tRxKUsvFJEeWQ==}\n\n  '@vitest/runner@1.6.0':\n    resolution: {integrity: sha512-P4xgwPjwesuBiHisAVz/LSSZtDjOTPYZVmNAnpHHSR6ONrf8eCJOFRvUwdHn30F5M1fxhqtl7QZQUk2dprIXAg==}\n\n  '@vitest/snapshot@1.6.0':\n    resolution: {integrity: sha512-+Hx43f8Chus+DCmygqqfetcAZrDJwvTj0ymqjQq4CvmpKFSTVteEOBzCusu1x2tt4OJcvBflyHUE0DZSLgEMtQ==}\n\n  '@vitest/spy@1.6.0':\n    resolution: {integrity: sha512-leUTap6B/cqi/bQkXUu6bQV5TZPx7pmMBKBQiI0rJA8c3pB56ZsaTbREnF7CJfmvAS4V2cXIBAh/3rVwrrCYgw==}\n\n  '@vitest/utils@1.6.0':\n    resolution: {integrity: sha512-21cPiuGMoMZwiOHa2i4LXkMkMkCGzA+MVFV70jRwHo95dL4x/ts5GZhML1QWuy7yfp3WzK3lRvZi3JnXTYqrBw==}\n\n  acorn-jsx@5.3.2:\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n\n  acorn-walk@8.3.4:\n    resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}\n    engines: {node: '>=0.4.0'}\n\n  acorn@8.12.1:\n    resolution: {integrity: sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  acorn@8.14.0:\n    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.0.1:\n    resolution: {integrity: sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@3.2.1:\n    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}\n    engines: {node: '>=4'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@5.2.0:\n    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}\n    engines: {node: '>=10'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  any-promise@1.3.0:\n    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@5.0.2:\n    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}\n\n  argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n\n  assertion-error@1.1.0:\n    resolution: {integrity: sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  binary-extensions@2.2.0:\n    resolution: {integrity: sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==}\n    engines: {node: '>=8'}\n\n  brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n\n  brace-expansion@2.0.1:\n    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  bun-types@1.1.37:\n    resolution: {integrity: sha512-C65lv6eBr3LPJWFZ2gswyrGZ82ljnH8flVE03xeXxKhi2ZGtFiO4isRKTKnitbSqtRAcaqYSR6djt1whI66AbA==}\n\n  cac@6.7.14:\n    resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}\n    engines: {node: '>=8'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  camelcase-css@2.0.1:\n    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}\n    engines: {node: '>= 6'}\n\n  chai@4.5.0:\n    resolution: {integrity: sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==}\n    engines: {node: '>=4'}\n\n  chalk@2.4.2:\n    resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n    engines: {node: '>=4'}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  check-error@1.0.3:\n    resolution: {integrity: sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  color-convert@1.9.3:\n    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.3:\n    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  commander@4.1.1:\n    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}\n    engines: {node: '>= 6'}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  confbox@0.1.7:\n    resolution: {integrity: sha512-uJcB/FKZtBMCJpK8MQji6bJHgu1tixKPxRLeGkNzBoOZzpnZUJm0jm2/sBDWcuBx1dYgxV4JU+g5hmNxCyAmdA==}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  cssesc@3.0.0:\n    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  debug@4.3.6:\n    resolution: {integrity: sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.3.7:\n    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  deep-eql@4.1.4:\n    resolution: {integrity: sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==}\n    engines: {node: '>=6'}\n\n  deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n\n  didyoumean@1.2.2:\n    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}\n\n  diff-sequences@29.6.3:\n    resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}\n    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n\n  dlv@1.1.3:\n    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}\n\n  dprint@0.48.0:\n    resolution: {integrity: sha512-dmCrYTiubcsQklTLUimlO+p8wWgMtZBjpPVsOGiw4kPX7Dn41vwyE1R4qA8Px4xHgQtcX7WP9mJujF4C8vISIw==}\n    hasBin: true\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  entities@4.5.0:\n    resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}\n    engines: {node: '>=0.12'}\n\n  esbuild@0.21.5:\n    resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}\n    engines: {node: '>=12'}\n    hasBin: true\n\n  escape-string-regexp@1.0.5:\n    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}\n    engines: {node: '>=0.8.0'}\n\n  escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n\n  eslint-scope@8.2.0:\n    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  eslint-visitor-keys@4.2.0:\n    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint@9.17.0:\n    resolution: {integrity: sha512-evtlNcpJg+cZLcnVKwsai8fExnqjGPicK7gnUtlNuzu+Fv9bI0aLpND5T44VLQtoMEnI57LoXO9XAkIXwohKrA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    hasBin: true\n    peerDependencies:\n      jiti: '*'\n    peerDependenciesMeta:\n      jiti:\n        optional: true\n\n  espree@10.3.0:\n    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  esquery@1.6.0:\n    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}\n    engines: {node: '>=0.10'}\n\n  esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n\n  estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n\n  estree-walker@3.0.3:\n    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}\n\n  esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n\n  execa@8.0.1:\n    resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}\n    engines: {node: '>=16.17'}\n\n  fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n\n  fast-glob@3.3.2:\n    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}\n    engines: {node: '>=8.6.0'}\n\n  fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n\n  fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n\n  fastq@1.17.1:\n    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}\n\n  file-entry-cache@8.0.0:\n    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}\n    engines: {node: '>=16.0.0'}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  find-up-simple@1.0.0:\n    resolution: {integrity: sha512-q7Us7kcjj2VMePAa02hDAF6d+MzsdsAWEwYyOpwUtlerRBkOEPBCRZrAV4XfcSN8fHAgaD0hP7miwoay6DCprw==}\n    engines: {node: '>=18'}\n\n  find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n\n  flat-cache@4.0.1:\n    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}\n    engines: {node: '>=16'}\n\n  flatted@3.3.1:\n    resolution: {integrity: sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==}\n\n  foreground-child@3.1.1:\n    resolution: {integrity: sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==}\n    engines: {node: '>=14'}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  get-func-name@2.0.2:\n    resolution: {integrity: sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==}\n\n  get-stream@8.0.1:\n    resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}\n    engines: {node: '>=16'}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.3.10:\n    resolution: {integrity: sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  globals@14.0.0:\n    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}\n    engines: {node: '>=18'}\n\n  graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n\n  happy-dom@15.11.7:\n    resolution: {integrity: sha512-KyrFvnl+J9US63TEzwoiJOQzZBJY7KgBushJA8X61DMbNsH+2ONkDuLDnCnwUiPTF42tLoEmrPyoqbenVA5zrg==}\n    engines: {node: '>=18.0.0'}\n\n  has-flag@3.0.0:\n    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}\n    engines: {node: '>=4'}\n\n  has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  hosted-git-info@7.0.1:\n    resolution: {integrity: sha512-+K84LB1DYwMHoHSgaOY/Jfhw3ucPmSET5v98Ke/HdNSw4a0UktWzyW1mjhjpuxxTqOOsfWT/7iVshHmVZ4IpOA==}\n    engines: {node: ^16.14.0 || >=18.0.0}\n\n  human-signals@5.0.0:\n    resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}\n    engines: {node: '>=16.17.0'}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  import-fresh@3.3.0:\n    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}\n    engines: {node: '>=6'}\n\n  imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n\n  index-to-position@0.1.2:\n    resolution: {integrity: sha512-MWDKS3AS1bGCHLBA2VLImJz42f7bJh8wQsTGCzI3j519/CASStoDONUBVz2I/VID0MpiX3SGSnbOD2xUalbE5g==}\n    engines: {node: '>=18'}\n\n  is-binary-path@2.1.0:\n    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n    engines: {node: '>=8'}\n\n  is-core-module@2.13.1:\n    resolution: {integrity: sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-stream@3.0.0:\n    resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  jackspeak@2.3.6:\n    resolution: {integrity: sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==}\n    engines: {node: '>=14'}\n\n  jiti@1.21.6:\n    resolution: {integrity: sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  js-tokens@9.0.0:\n    resolution: {integrity: sha512-WriZw1luRMlmV3LGJaR6QOJjWwgLUTf89OwT2lUOyjX2dJGBwgmIkbcz+7WFZjrZM635JOIR517++e/67CP9dQ==}\n\n  js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n\n  json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n\n  json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n\n  json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n\n  keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n\n  levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  lines-and-columns@1.2.4:\n    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}\n\n  local-pkg@0.5.0:\n    resolution: {integrity: sha512-ok6z3qlYyCDS4ZEU27HaU6x/xZa9Whf8jD4ptH5UZTQYZVYeb9bnZ3ojVhiJNLiXK1Hfc0GNbLXcmZ5plLDDBg==}\n    engines: {node: '>=14'}\n\n  locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n\n  lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n\n  loupe@2.3.7:\n    resolution: {integrity: sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==}\n\n  lru-cache@10.2.0:\n    resolution: {integrity: sha512-2bIM8x+VAf6JT4bKAljS1qUWgMsqZRPGJS6FSahIMPVvctcNhyVp7AJu7quxOW9jwkryBReKZY5tY5JYv2n/7Q==}\n    engines: {node: 14 || >=16.14}\n\n  lru-cache@6.0.0:\n    resolution: {integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==}\n    engines: {node: '>=10'}\n\n  magic-string@0.30.11:\n    resolution: {integrity: sha512-+Wri9p0QHMy+545hKww7YAu5NyzF8iomPL/RQazugQ9+Ez4Ic3mERMd8ZTX5rfK944j+560ZJi8iAwgak1Ac7A==}\n\n  merge-stream@2.0.0:\n    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  mimic-fn@4.0.0:\n    resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}\n    engines: {node: '>=12'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minipass@7.0.4:\n    resolution: {integrity: sha512-jYofLM5Dam9279rdkWzqHozUo4ybjdZmCsDHePy5V/PbBcVMiSZR97gmAy45aqi8CK1lG2ECd356FU86avfwUQ==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  mlly@1.7.1:\n    resolution: {integrity: sha512-rrVRZRELyQzrIUAVMHxP97kv+G786pHmOKzuFII8zDYahFBS7qnHh2AlYSl1GAHhaMPCz6/oHjVMcfFYgFYHgA==}\n\n  ms@2.1.2:\n    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  mz@2.7.0:\n    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}\n\n  nanoid@3.3.7:\n    resolution: {integrity: sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n\n  normalize-package-data@6.0.0:\n    resolution: {integrity: sha512-UL7ELRVxYBHBgYEtZCXjxuD5vPxnmvMGq0jp/dGPKKrN7tfsBh2IY7TlJ15WWwdjRWD3RJbnsygUurTK3xkPkg==}\n    engines: {node: ^16.14.0 || >=18.0.0}\n\n  normalize-path@3.0.0:\n    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}\n    engines: {node: '>=0.10.0'}\n\n  npm-run-path@5.3.0:\n    resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-hash@3.0.0:\n    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}\n    engines: {node: '>= 6'}\n\n  onetime@6.0.0:\n    resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}\n    engines: {node: '>=12'}\n\n  optionator@0.9.4:\n    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}\n    engines: {node: '>= 0.8.0'}\n\n  p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n\n  p-limit@5.0.0:\n    resolution: {integrity: sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==}\n    engines: {node: '>=18'}\n\n  p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n\n  parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n\n  parse-json@8.1.0:\n    resolution: {integrity: sha512-rum1bPifK5SSar35Z6EKZuYPJx85pkNaFrxBK3mwdfSJ1/WKbYrjoW/zTPSjRRamfmVX1ACBIdFAO0VRErW/EA==}\n    engines: {node: '>=18'}\n\n  path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-key@4.0.0:\n    resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}\n    engines: {node: '>=12'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.10.1:\n    resolution: {integrity: sha512-MkhCqzzBEpPvxxQ71Md0b1Kk51W01lrYvlMzSUaIzNsODdd7mqhiimSZlr+VegAz5Z6Vzt9Xg2ttE//XBhH3EQ==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  pathe@1.1.2:\n    resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}\n\n  pathval@1.1.1:\n    resolution: {integrity: sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==}\n\n  picocolors@1.0.0:\n    resolution: {integrity: sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  pify@2.3.0:\n    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}\n    engines: {node: '>=0.10.0'}\n\n  pirates@4.0.6:\n    resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}\n    engines: {node: '>= 6'}\n\n  pkg-types@1.2.0:\n    resolution: {integrity: sha512-+ifYuSSqOQ8CqP4MbZA5hDpb97n3E8SVWdJe+Wms9kj745lmd3b7EZJiqvmLwAlmRfjrI7Hi5z3kdBJ93lFNPA==}\n\n  postcss-import@15.1.0:\n    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}\n    engines: {node: '>=14.0.0'}\n    peerDependencies:\n      postcss: ^8.0.0\n\n  postcss-js@4.0.1:\n    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}\n    engines: {node: ^12 || ^14 || >= 16}\n    peerDependencies:\n      postcss: ^8.4.21\n\n  postcss-load-config@4.0.2:\n    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}\n    engines: {node: '>= 14'}\n    peerDependencies:\n      postcss: '>=8.0.9'\n      ts-node: '>=9.0.0'\n    peerDependenciesMeta:\n      postcss:\n        optional: true\n      ts-node:\n        optional: true\n\n  postcss-nested@6.2.0:\n    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}\n    engines: {node: '>=12.0'}\n    peerDependencies:\n      postcss: ^8.2.14\n\n  postcss-selector-parser@6.1.2:\n    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}\n    engines: {node: '>=4'}\n\n  postcss-value-parser@4.2.0:\n    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}\n\n  postcss@8.4.47:\n    resolution: {integrity: sha512-56rxCq7G/XfB4EkXq9Egn5GCqugWvDFjafDOThIdMBsI15iqPqR5r15TfSr1YPYeEI19YeaXMCbY6u88Y76GLQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n\n  prettier@3.3.3:\n    resolution: {integrity: sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==}\n    engines: {node: '>=14'}\n    hasBin: true\n\n  pretty-format@29.7.0:\n    resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}\n    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n\n  punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  react-is@18.3.1:\n    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}\n\n  read-cache@1.0.0:\n    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}\n\n  read-package-up@11.0.0:\n    resolution: {integrity: sha512-MbgfoNPANMdb4oRBNg5eqLbB2t2r+o5Ua1pNt8BqGp4I0FJZhuVSOj3PaBPni4azWuSzEdNn2evevzVmEk1ohQ==}\n    engines: {node: '>=18'}\n\n  read-pkg@9.0.1:\n    resolution: {integrity: sha512-9viLL4/n1BJUCT1NXVTdS1jtm80yDEgR5T4yCelII49Mbj0v1rZdKqj7zCiYdbB0CuCgdrvHcNogAKTFPBocFA==}\n    engines: {node: '>=18'}\n\n  readdirp@3.6.0:\n    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n    engines: {node: '>=8.10.0'}\n\n  resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n\n  resolve@1.22.8:\n    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}\n    hasBin: true\n\n  reusify@1.0.4:\n    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  rollup@4.23.0:\n    resolution: {integrity: sha512-vXB4IT9/KLDrS2WRXmY22sVB2wTsTwkpxjB8Q3mnakTENcYw3FRmfdYDy/acNmls+lHmDazgrRjK/yQ6hQAtwA==}\n    engines: {node: '>=18.0.0', npm: '>=8.0.0'}\n    hasBin: true\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  semver@7.6.0:\n    resolution: {integrity: sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  siginfo@2.0.0:\n    resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  spdx-correct@3.2.0:\n    resolution: {integrity: sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==}\n\n  spdx-exceptions@2.5.0:\n    resolution: {integrity: sha512-PiU42r+xO4UbUS1buo3LPJkjlO7430Xn5SVAhdpzzsPHsjbYVflnnFdATgabnLude+Cqu25p6N+g2lw/PFsa4w==}\n\n  spdx-expression-parse@3.0.1:\n    resolution: {integrity: sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==}\n\n  spdx-license-ids@3.0.17:\n    resolution: {integrity: sha512-sh8PWc/ftMqAAdFiBu6Fy6JUOYjqDJBJvIhpfDMyHrr0Rbp5liZqd4TjtQ/RgfLjKFZb+LMx5hpml5qOWy0qvg==}\n\n  stackback@0.0.2:\n    resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}\n\n  std-env@3.7.0:\n    resolution: {integrity: sha512-JPbdCEQLj1w5GilpiHAx3qJvFndqybBysA3qUOnznweH4QbNYUsW/ea8QzSrnh0vNsezMMw5bcVool8lM0gwzg==}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  strip-final-newline@3.0.0:\n    resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}\n    engines: {node: '>=12'}\n\n  strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n\n  strip-literal@2.1.0:\n    resolution: {integrity: sha512-Op+UycaUt/8FbN/Z2TWPBLge3jWrP3xj10f3fnYxf052bKuS3EKs1ZQcVGjnEMdsNVAM+plXRdmjrZ/KgG3Skw==}\n\n  sucrase@3.35.0:\n    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  supports-color@5.5.0:\n    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}\n    engines: {node: '>=4'}\n\n  supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tailwindcss@3.4.17:\n    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}\n    engines: {node: '>=14.0.0'}\n    hasBin: true\n\n  thenify-all@1.6.0:\n    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}\n    engines: {node: '>=0.8'}\n\n  thenify@3.3.1:\n    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}\n\n  tinybench@2.9.0:\n    resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}\n\n  tinypool@0.8.4:\n    resolution: {integrity: sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==}\n    engines: {node: '>=14.0.0'}\n\n  tinyspy@2.2.1:\n    resolution: {integrity: sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==}\n    engines: {node: '>=14.0.0'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-api-utils@1.4.0:\n    resolution: {integrity: sha512-032cPxaEKwM+GT3vA5JXNzIaizx388rhsSW79vGRNGXfRRAdEAn2mvk36PvK5HnOchyWZ7afLEXqYCvPCrzuzQ==}\n    engines: {node: '>=16'}\n    peerDependencies:\n      typescript: '>=4.2.0'\n\n  ts-api-utils@2.0.0:\n    resolution: {integrity: sha512-xCt/TOAc+EOHS1XPnijD3/yzpH6qg2xppZO1YDqGoVsNXfQfzHpOdNuXwrwOU8u4ITXJyDCTyt8w5g1sZv9ynQ==}\n    engines: {node: '>=18.12'}\n    peerDependencies:\n      typescript: '>=4.8.4'\n\n  ts-interface-checker@0.1.13:\n    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}\n\n  type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n\n  type-detect@4.1.0:\n    resolution: {integrity: sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==}\n    engines: {node: '>=4'}\n\n  type-fest@4.12.0:\n    resolution: {integrity: sha512-5Y2/pp2wtJk8o08G0CMkuFPCO354FGwk/vbidxrdhRGZfd0tFnb4Qb8anp9XxXriwBgVPjdWbKpGl4J9lJY2jQ==}\n    engines: {node: '>=16'}\n\n  typescript@5.7.2:\n    resolution: {integrity: sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  ufo@1.5.4:\n    resolution: {integrity: sha512-UsUk3byDzKd04EyoZ7U4DOlxQaD14JUKQl6/P7wiX4FNvUfm3XL246n9W5AmqwW5RSFJ27NAuM0iLscAOYUiGQ==}\n\n  undici-types@5.26.5:\n    resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}\n\n  undici-types@6.19.8:\n    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}\n\n  unicorn-magic@0.1.0:\n    resolution: {integrity: sha512-lRfVq8fE8gz6QMBuDM6a+LO3IAzTi05H6gCVaUpir2E1Rwpo4ZUog45KpNXKC/Mn3Yb9UDuHumeFTo9iV/D9FQ==}\n    engines: {node: '>=18'}\n\n  uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n\n  util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n\n  validate-npm-package-license@3.0.4:\n    resolution: {integrity: sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==}\n\n  vite-node@1.6.0:\n    resolution: {integrity: sha512-de6HJgzC+TFzOu0NTC4RAIsyf/DY/ibWDYQUcuEA84EMHhcefTUGkjFHKKEJhQN4A+6I0u++kr3l36ZF2d7XRw==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n\n  vite@5.4.11:\n    resolution: {integrity: sha512-c7jFQRklXua0mTzneGW9QVyxFjUgwcihC4bXEtujIo2ouWCe1Ajt/amn2PCxYnhYfd5k09JX3SB7OYWFKYqj8Q==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@types/node': ^18.0.0 || >=20.0.0\n      less: '*'\n      lightningcss: ^1.21.0\n      sass: '*'\n      sass-embedded: '*'\n      stylus: '*'\n      sugarss: '*'\n      terser: ^5.4.0\n    peerDependenciesMeta:\n      '@types/node':\n        optional: true\n      less:\n        optional: true\n      lightningcss:\n        optional: true\n      sass:\n        optional: true\n      sass-embedded:\n        optional: true\n      stylus:\n        optional: true\n      sugarss:\n        optional: true\n      terser:\n        optional: true\n\n  vitest@1.6.0:\n    resolution: {integrity: sha512-H5r/dN06swuFnzNFhq/dnz37bPXnq8xB2xB5JOVk8K09rUtoeNN+LHWkoQ0A/i3hvbUKKcCei9KpbxqHMLhLLA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@edge-runtime/vm': '*'\n      '@types/node': ^18.0.0 || >=20.0.0\n      '@vitest/browser': 1.6.0\n      '@vitest/ui': 1.6.0\n      happy-dom: '*'\n      jsdom: '*'\n    peerDependenciesMeta:\n      '@edge-runtime/vm':\n        optional: true\n      '@types/node':\n        optional: true\n      '@vitest/browser':\n        optional: true\n      '@vitest/ui':\n        optional: true\n      happy-dom:\n        optional: true\n      jsdom:\n        optional: true\n\n  webidl-conversions@7.0.0:\n    resolution: {integrity: sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==}\n    engines: {node: '>=12'}\n\n  whatwg-mimetype@3.0.0:\n    resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}\n    engines: {node: '>=12'}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  why-is-node-running@2.3.0:\n    resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}\n    engines: {node: '>=8'}\n    hasBin: true\n\n  word-wrap@1.2.5:\n    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}\n    engines: {node: '>=0.10.0'}\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  yallist@4.0.0:\n    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}\n\n  yaml@2.4.1:\n    resolution: {integrity: sha512-pIXzoImaqmfOrL7teGUBt/T7ZDnyeGBWyXQBvOVhLkWLN37GXv8NMLK406UY6dS51JfcQHsmcW5cJ441bHg6Lg==}\n    engines: {node: '>= 14'}\n    hasBin: true\n\n  yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n\n  yocto-queue@1.1.1:\n    resolution: {integrity: sha512-b4JR1PFR10y1mKjhHY9LaGo6tmrgjit7hxVIeAmyMw3jegXR4dhYqLaQF5zMXZxY7tLpMyJeLjr1C4rLmkVe8g==}\n    engines: {node: '>=12.20'}\n\nsnapshots:\n\n  '@alloc/quick-lru@5.2.0': {}\n\n  '@babel/code-frame@7.23.5':\n    dependencies:\n      '@babel/highlight': 7.23.4\n      chalk: 2.4.2\n\n  '@babel/helper-validator-identifier@7.22.20': {}\n\n  '@babel/highlight@7.23.4':\n    dependencies:\n      '@babel/helper-validator-identifier': 7.22.20\n      chalk: 2.4.2\n      js-tokens: 4.0.0\n\n  '@biomejs/cli-darwin-arm64@1.9.4':\n    optional: true\n\n  '@biomejs/cli-darwin-x64@1.9.4':\n    optional: true\n\n  '@biomejs/cli-linux-arm64-musl@1.9.4':\n    optional: true\n\n  '@biomejs/cli-linux-arm64@1.9.4':\n    optional: true\n\n  '@biomejs/cli-linux-x64-musl@1.9.4':\n    optional: true\n\n  '@biomejs/cli-linux-x64@1.9.4':\n    optional: true\n\n  '@biomejs/cli-win32-arm64@1.9.4':\n    optional: true\n\n  '@biomejs/cli-win32-x64@1.9.4':\n    optional: true\n\n  '@dprint/darwin-arm64@0.48.0':\n    optional: true\n\n  '@dprint/darwin-x64@0.48.0':\n    optional: true\n\n  '@dprint/linux-arm64-glibc@0.48.0':\n    optional: true\n\n  '@dprint/linux-arm64-musl@0.48.0':\n    optional: true\n\n  '@dprint/linux-riscv64-glibc@0.48.0':\n    optional: true\n\n  '@dprint/linux-x64-glibc@0.48.0':\n    optional: true\n\n  '@dprint/linux-x64-musl@0.48.0':\n    optional: true\n\n  '@dprint/win32-arm64@0.48.0':\n    optional: true\n\n  '@dprint/win32-x64@0.48.0':\n    optional: true\n\n  '@esbuild/aix-ppc64@0.21.5':\n    optional: true\n\n  '@esbuild/android-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/android-arm@0.21.5':\n    optional: true\n\n  '@esbuild/android-x64@0.21.5':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/darwin-x64@0.21.5':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-arm@0.21.5':\n    optional: true\n\n  '@esbuild/linux-ia32@0.21.5':\n    optional: true\n\n  '@esbuild/linux-loong64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.21.5':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-s390x@0.21.5':\n    optional: true\n\n  '@esbuild/linux-x64@0.21.5':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/sunos-x64@0.21.5':\n    optional: true\n\n  '@esbuild/win32-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/win32-ia32@0.21.5':\n    optional: true\n\n  '@esbuild/win32-x64@0.21.5':\n    optional: true\n\n  '@eslint-community/eslint-utils@4.4.0(eslint@9.17.0(jiti@1.21.6))':\n    dependencies:\n      eslint: 9.17.0(jiti@1.21.6)\n      eslint-visitor-keys: 3.4.3\n\n  '@eslint-community/regexpp@4.12.1': {}\n\n  '@eslint/config-array@0.19.0':\n    dependencies:\n      '@eslint/object-schema': 2.1.4\n      debug: 4.3.7\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/core@0.9.0': {}\n\n  '@eslint/eslintrc@3.2.0':\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.3.7\n      espree: 10.3.0\n      globals: 14.0.0\n      ignore: 5.3.2\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/js@9.17.0': {}\n\n  '@eslint/object-schema@2.1.4': {}\n\n  '@eslint/plugin-kit@0.2.3':\n    dependencies:\n      levn: 0.4.1\n\n  '@humanfs/core@0.19.1': {}\n\n  '@humanfs/node@0.16.6':\n    dependencies:\n      '@humanfs/core': 0.19.1\n      '@humanwhocodes/retry': 0.3.1\n\n  '@humanwhocodes/module-importer@1.0.1': {}\n\n  '@humanwhocodes/retry@0.3.1': {}\n\n  '@humanwhocodes/retry@0.4.1': {}\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@jest/schemas@29.6.3':\n    dependencies:\n      '@sinclair/typebox': 0.27.8\n\n  '@jridgewell/gen-mapping@0.3.5':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.17.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@rollup/rollup-android-arm-eabi@4.23.0':\n    optional: true\n\n  '@rollup/rollup-android-arm64@4.23.0':\n    optional: true\n\n  '@rollup/rollup-darwin-arm64@4.23.0':\n    optional: true\n\n  '@rollup/rollup-darwin-x64@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-musleabihf@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-gnu@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-musl@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-riscv64-gnu@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-s390x-gnu@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-gnu@4.23.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-musl@4.23.0':\n    optional: true\n\n  '@rollup/rollup-win32-arm64-msvc@4.23.0':\n    optional: true\n\n  '@rollup/rollup-win32-ia32-msvc@4.23.0':\n    optional: true\n\n  '@rollup/rollup-win32-x64-msvc@4.23.0':\n    optional: true\n\n  '@sinclair/typebox@0.27.8': {}\n\n  '@types/bun@1.1.14':\n    dependencies:\n      bun-types: 1.1.37\n\n  '@types/estree@1.0.6': {}\n\n  '@types/json-schema@7.0.15': {}\n\n  '@types/node@20.12.12':\n    dependencies:\n      undici-types: 5.26.5\n\n  '@types/node@20.17.12':\n    dependencies:\n      undici-types: 6.19.8\n\n  '@types/normalize-package-data@2.4.4': {}\n\n  '@types/ws@8.5.10':\n    dependencies:\n      '@types/node': 20.17.12\n\n  '@typescript-eslint/eslint-plugin@8.19.1(@typescript-eslint/parser@8.3.0(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2))(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)':\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      '@typescript-eslint/parser': 8.3.0(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)\n      '@typescript-eslint/scope-manager': 8.19.1\n      '@typescript-eslint/type-utils': 8.19.1(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)\n      '@typescript-eslint/utils': 8.19.1(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)\n      '@typescript-eslint/visitor-keys': 8.19.1\n      eslint: 9.17.0(jiti@1.21.6)\n      graphemer: 1.4.0\n      ignore: 5.3.2\n      natural-compare: 1.4.0\n      ts-api-utils: 2.0.0(typescript@5.7.2)\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/parser@8.3.0(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)':\n    dependencies:\n      '@typescript-eslint/scope-manager': 8.3.0\n      '@typescript-eslint/types': 8.3.0\n      '@typescript-eslint/typescript-estree': 8.3.0(typescript@5.7.2)\n      '@typescript-eslint/visitor-keys': 8.3.0\n      debug: 4.3.7\n      eslint: 9.17.0(jiti@1.21.6)\n    optionalDependencies:\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/scope-manager@8.19.1':\n    dependencies:\n      '@typescript-eslint/types': 8.19.1\n      '@typescript-eslint/visitor-keys': 8.19.1\n\n  '@typescript-eslint/scope-manager@8.3.0':\n    dependencies:\n      '@typescript-eslint/types': 8.3.0\n      '@typescript-eslint/visitor-keys': 8.3.0\n\n  '@typescript-eslint/type-utils@8.19.1(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)':\n    dependencies:\n      '@typescript-eslint/typescript-estree': 8.19.1(typescript@5.7.2)\n      '@typescript-eslint/utils': 8.19.1(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)\n      debug: 4.3.7\n      eslint: 9.17.0(jiti@1.21.6)\n      ts-api-utils: 2.0.0(typescript@5.7.2)\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/types@8.19.1': {}\n\n  '@typescript-eslint/types@8.3.0': {}\n\n  '@typescript-eslint/typescript-estree@8.19.1(typescript@5.7.2)':\n    dependencies:\n      '@typescript-eslint/types': 8.19.1\n      '@typescript-eslint/visitor-keys': 8.19.1\n      debug: 4.3.7\n      fast-glob: 3.3.2\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 2.0.0(typescript@5.7.2)\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/typescript-estree@8.3.0(typescript@5.7.2)':\n    dependencies:\n      '@typescript-eslint/types': 8.3.0\n      '@typescript-eslint/visitor-keys': 8.3.0\n      debug: 4.3.7\n      fast-glob: 3.3.2\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 1.4.0(typescript@5.7.2)\n    optionalDependencies:\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/utils@8.19.1(eslint@9.17.0(jiti@1.21.6))(typescript@5.7.2)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.0(eslint@9.17.0(jiti@1.21.6))\n      '@typescript-eslint/scope-manager': 8.19.1\n      '@typescript-eslint/types': 8.19.1\n      '@typescript-eslint/typescript-estree': 8.19.1(typescript@5.7.2)\n      eslint: 9.17.0(jiti@1.21.6)\n      typescript: 5.7.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/visitor-keys@8.19.1':\n    dependencies:\n      '@typescript-eslint/types': 8.19.1\n      eslint-visitor-keys: 4.2.0\n\n  '@typescript-eslint/visitor-keys@8.3.0':\n    dependencies:\n      '@typescript-eslint/types': 8.3.0\n      eslint-visitor-keys: 3.4.3\n\n  '@vitest/expect@1.6.0':\n    dependencies:\n      '@vitest/spy': 1.6.0\n      '@vitest/utils': 1.6.0\n      chai: 4.5.0\n\n  '@vitest/runner@1.6.0':\n    dependencies:\n      '@vitest/utils': 1.6.0\n      p-limit: 5.0.0\n      pathe: 1.1.2\n\n  '@vitest/snapshot@1.6.0':\n    dependencies:\n      magic-string: 0.30.11\n      pathe: 1.1.2\n      pretty-format: 29.7.0\n\n  '@vitest/spy@1.6.0':\n    dependencies:\n      tinyspy: 2.2.1\n\n  '@vitest/utils@1.6.0':\n    dependencies:\n      diff-sequences: 29.6.3\n      estree-walker: 3.0.3\n      loupe: 2.3.7\n      pretty-format: 29.7.0\n\n  acorn-jsx@5.3.2(acorn@8.14.0):\n    dependencies:\n      acorn: 8.14.0\n\n  acorn-walk@8.3.4:\n    dependencies:\n      acorn: 8.12.1\n\n  acorn@8.12.1: {}\n\n  acorn@8.14.0: {}\n\n  ajv@6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.0.1: {}\n\n  ansi-styles@3.2.1:\n    dependencies:\n      color-convert: 1.9.3\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@5.2.0: {}\n\n  ansi-styles@6.2.1: {}\n\n  any-promise@1.3.0: {}\n\n  anymatch@3.1.3:\n    dependencies:\n      normalize-path: 3.0.0\n      picomatch: 2.3.1\n\n  arg@5.0.2: {}\n\n  argparse@2.0.1: {}\n\n  assertion-error@1.1.0: {}\n\n  balanced-match@1.0.2: {}\n\n  binary-extensions@2.2.0: {}\n\n  brace-expansion@1.1.11:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n\n  brace-expansion@2.0.1:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  bun-types@1.1.37:\n    dependencies:\n      '@types/node': 20.12.12\n      '@types/ws': 8.5.10\n\n  cac@6.7.14: {}\n\n  callsites@3.1.0: {}\n\n  camelcase-css@2.0.1: {}\n\n  chai@4.5.0:\n    dependencies:\n      assertion-error: 1.1.0\n      check-error: 1.0.3\n      deep-eql: 4.1.4\n      get-func-name: 2.0.2\n      loupe: 2.3.7\n      pathval: 1.1.1\n      type-detect: 4.1.0\n\n  chalk@2.4.2:\n    dependencies:\n      ansi-styles: 3.2.1\n      escape-string-regexp: 1.0.5\n      supports-color: 5.5.0\n\n  chalk@4.1.2:\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n\n  check-error@1.0.3:\n    dependencies:\n      get-func-name: 2.0.2\n\n  chokidar@3.6.0:\n    dependencies:\n      anymatch: 3.1.3\n      braces: 3.0.3\n      glob-parent: 5.1.2\n      is-binary-path: 2.1.0\n      is-glob: 4.0.3\n      normalize-path: 3.0.0\n      readdirp: 3.6.0\n    optionalDependencies:\n      fsevents: 2.3.3\n\n  color-convert@1.9.3:\n    dependencies:\n      color-name: 1.1.3\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.3: {}\n\n  color-name@1.1.4: {}\n\n  commander@4.1.1: {}\n\n  concat-map@0.0.1: {}\n\n  confbox@0.1.7: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cssesc@3.0.0: {}\n\n  debug@4.3.6:\n    dependencies:\n      ms: 2.1.2\n\n  debug@4.3.7:\n    dependencies:\n      ms: 2.1.3\n\n  deep-eql@4.1.4:\n    dependencies:\n      type-detect: 4.1.0\n\n  deep-is@0.1.4: {}\n\n  didyoumean@1.2.2: {}\n\n  diff-sequences@29.6.3: {}\n\n  dlv@1.1.3: {}\n\n  dprint@0.48.0:\n    optionalDependencies:\n      '@dprint/darwin-arm64': 0.48.0\n      '@dprint/darwin-x64': 0.48.0\n      '@dprint/linux-arm64-glibc': 0.48.0\n      '@dprint/linux-arm64-musl': 0.48.0\n      '@dprint/linux-riscv64-glibc': 0.48.0\n      '@dprint/linux-x64-glibc': 0.48.0\n      '@dprint/linux-x64-musl': 0.48.0\n      '@dprint/win32-arm64': 0.48.0\n      '@dprint/win32-x64': 0.48.0\n\n  eastasianwidth@0.2.0: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  entities@4.5.0: {}\n\n  esbuild@0.21.5:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.21.5\n      '@esbuild/android-arm': 0.21.5\n      '@esbuild/android-arm64': 0.21.5\n      '@esbuild/android-x64': 0.21.5\n      '@esbuild/darwin-arm64': 0.21.5\n      '@esbuild/darwin-x64': 0.21.5\n      '@esbuild/freebsd-arm64': 0.21.5\n      '@esbuild/freebsd-x64': 0.21.5\n      '@esbuild/linux-arm': 0.21.5\n      '@esbuild/linux-arm64': 0.21.5\n      '@esbuild/linux-ia32': 0.21.5\n      '@esbuild/linux-loong64': 0.21.5\n      '@esbuild/linux-mips64el': 0.21.5\n      '@esbuild/linux-ppc64': 0.21.5\n      '@esbuild/linux-riscv64': 0.21.5\n      '@esbuild/linux-s390x': 0.21.5\n      '@esbuild/linux-x64': 0.21.5\n      '@esbuild/netbsd-x64': 0.21.5\n      '@esbuild/openbsd-x64': 0.21.5\n      '@esbuild/sunos-x64': 0.21.5\n      '@esbuild/win32-arm64': 0.21.5\n      '@esbuild/win32-ia32': 0.21.5\n      '@esbuild/win32-x64': 0.21.5\n\n  escape-string-regexp@1.0.5: {}\n\n  escape-string-regexp@4.0.0: {}\n\n  eslint-scope@8.2.0:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n\n  eslint-visitor-keys@3.4.3: {}\n\n  eslint-visitor-keys@4.2.0: {}\n\n  eslint@9.17.0(jiti@1.21.6):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.0(eslint@9.17.0(jiti@1.21.6))\n      '@eslint-community/regexpp': 4.12.1\n      '@eslint/config-array': 0.19.0\n      '@eslint/core': 0.9.0\n      '@eslint/eslintrc': 3.2.0\n      '@eslint/js': 9.17.0\n      '@eslint/plugin-kit': 0.2.3\n      '@humanfs/node': 0.16.6\n      '@humanwhocodes/module-importer': 1.0.1\n      '@humanwhocodes/retry': 0.4.1\n      '@types/estree': 1.0.6\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.6\n      debug: 4.3.7\n      escape-string-regexp: 4.0.0\n      eslint-scope: 8.2.0\n      eslint-visitor-keys: 4.2.0\n      espree: 10.3.0\n      esquery: 1.6.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 8.0.0\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      ignore: 5.3.2\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      json-stable-stringify-without-jsonify: 1.0.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.4\n    optionalDependencies:\n      jiti: 1.21.6\n    transitivePeerDependencies:\n      - supports-color\n\n  espree@10.3.0:\n    dependencies:\n      acorn: 8.14.0\n      acorn-jsx: 5.3.2(acorn@8.14.0)\n      eslint-visitor-keys: 4.2.0\n\n  esquery@1.6.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  esrecurse@4.3.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  estraverse@5.3.0: {}\n\n  estree-walker@3.0.3:\n    dependencies:\n      '@types/estree': 1.0.6\n\n  esutils@2.0.3: {}\n\n  execa@8.0.1:\n    dependencies:\n      cross-spawn: 7.0.6\n      get-stream: 8.0.1\n      human-signals: 5.0.0\n      is-stream: 3.0.0\n      merge-stream: 2.0.0\n      npm-run-path: 5.3.0\n      onetime: 6.0.0\n      signal-exit: 4.1.0\n      strip-final-newline: 3.0.0\n\n  fast-deep-equal@3.1.3: {}\n\n  fast-glob@3.3.2:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fast-json-stable-stringify@2.1.0: {}\n\n  fast-levenshtein@2.0.6: {}\n\n  fastq@1.17.1:\n    dependencies:\n      reusify: 1.0.4\n\n  file-entry-cache@8.0.0:\n    dependencies:\n      flat-cache: 4.0.1\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  find-up-simple@1.0.0: {}\n\n  find-up@5.0.0:\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n\n  flat-cache@4.0.1:\n    dependencies:\n      flatted: 3.3.1\n      keyv: 4.5.4\n\n  flatted@3.3.1: {}\n\n  foreground-child@3.1.1:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  get-func-name@2.0.2: {}\n\n  get-stream@8.0.1: {}\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.3.10:\n    dependencies:\n      foreground-child: 3.1.1\n      jackspeak: 2.3.6\n      minimatch: 9.0.5\n      minipass: 7.0.4\n      path-scurry: 1.10.1\n\n  globals@14.0.0: {}\n\n  graphemer@1.4.0: {}\n\n  happy-dom@15.11.7:\n    dependencies:\n      entities: 4.5.0\n      webidl-conversions: 7.0.0\n      whatwg-mimetype: 3.0.0\n\n  has-flag@3.0.0: {}\n\n  has-flag@4.0.0: {}\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  hosted-git-info@7.0.1:\n    dependencies:\n      lru-cache: 10.2.0\n\n  human-signals@5.0.0: {}\n\n  ignore@5.3.2: {}\n\n  import-fresh@3.3.0:\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n\n  imurmurhash@0.1.4: {}\n\n  index-to-position@0.1.2: {}\n\n  is-binary-path@2.1.0:\n    dependencies:\n      binary-extensions: 2.2.0\n\n  is-core-module@2.13.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-number@7.0.0: {}\n\n  is-stream@3.0.0: {}\n\n  isexe@2.0.0: {}\n\n  jackspeak@2.3.6:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@1.21.6: {}\n\n  js-tokens@4.0.0: {}\n\n  js-tokens@9.0.0: {}\n\n  js-yaml@4.1.0:\n    dependencies:\n      argparse: 2.0.1\n\n  json-buffer@3.0.1: {}\n\n  json-schema-traverse@0.4.1: {}\n\n  json-stable-stringify-without-jsonify@1.0.1: {}\n\n  keyv@4.5.4:\n    dependencies:\n      json-buffer: 3.0.1\n\n  levn@0.4.1:\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n\n  lilconfig@3.1.3: {}\n\n  lines-and-columns@1.2.4: {}\n\n  local-pkg@0.5.0:\n    dependencies:\n      mlly: 1.7.1\n      pkg-types: 1.2.0\n\n  locate-path@6.0.0:\n    dependencies:\n      p-locate: 5.0.0\n\n  lodash.merge@4.6.2: {}\n\n  loupe@2.3.7:\n    dependencies:\n      get-func-name: 2.0.2\n\n  lru-cache@10.2.0: {}\n\n  lru-cache@6.0.0:\n    dependencies:\n      yallist: 4.0.0\n\n  magic-string@0.30.11:\n    dependencies:\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  merge-stream@2.0.0: {}\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  mimic-fn@4.0.0: {}\n\n  minimatch@3.1.2:\n    dependencies:\n      brace-expansion: 1.1.11\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.1\n\n  minipass@7.0.4: {}\n\n  mlly@1.7.1:\n    dependencies:\n      acorn: 8.14.0\n      pathe: 1.1.2\n      pkg-types: 1.2.0\n      ufo: 1.5.4\n\n  ms@2.1.2: {}\n\n  ms@2.1.3: {}\n\n  mz@2.7.0:\n    dependencies:\n      any-promise: 1.3.0\n      object-assign: 4.1.1\n      thenify-all: 1.6.0\n\n  nanoid@3.3.7: {}\n\n  natural-compare@1.4.0: {}\n\n  normalize-package-data@6.0.0:\n    dependencies:\n      hosted-git-info: 7.0.1\n      is-core-module: 2.13.1\n      semver: 7.6.0\n      validate-npm-package-license: 3.0.4\n\n  normalize-path@3.0.0: {}\n\n  npm-run-path@5.3.0:\n    dependencies:\n      path-key: 4.0.0\n\n  object-assign@4.1.1: {}\n\n  object-hash@3.0.0: {}\n\n  onetime@6.0.0:\n    dependencies:\n      mimic-fn: 4.0.0\n\n  optionator@0.9.4:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n      word-wrap: 1.2.5\n\n  p-limit@3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n\n  p-limit@5.0.0:\n    dependencies:\n      yocto-queue: 1.1.1\n\n  p-locate@5.0.0:\n    dependencies:\n      p-limit: 3.1.0\n\n  parent-module@1.0.1:\n    dependencies:\n      callsites: 3.1.0\n\n  parse-json@8.1.0:\n    dependencies:\n      '@babel/code-frame': 7.23.5\n      index-to-position: 0.1.2\n      type-fest: 4.12.0\n\n  path-exists@4.0.0: {}\n\n  path-key@3.1.1: {}\n\n  path-key@4.0.0: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.10.1:\n    dependencies:\n      lru-cache: 10.2.0\n      minipass: 7.0.4\n\n  pathe@1.1.2: {}\n\n  pathval@1.1.1: {}\n\n  picocolors@1.0.0: {}\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  pify@2.3.0: {}\n\n  pirates@4.0.6: {}\n\n  pkg-types@1.2.0:\n    dependencies:\n      confbox: 0.1.7\n      mlly: 1.7.1\n      pathe: 1.1.2\n\n  postcss-import@15.1.0(postcss@8.4.47):\n    dependencies:\n      postcss: 8.4.47\n      postcss-value-parser: 4.2.0\n      read-cache: 1.0.0\n      resolve: 1.22.8\n\n  postcss-js@4.0.1(postcss@8.4.47):\n    dependencies:\n      camelcase-css: 2.0.1\n      postcss: 8.4.47\n\n  postcss-load-config@4.0.2(postcss@8.4.47):\n    dependencies:\n      lilconfig: 3.1.3\n      yaml: 2.4.1\n    optionalDependencies:\n      postcss: 8.4.47\n\n  postcss-nested@6.2.0(postcss@8.4.47):\n    dependencies:\n      postcss: 8.4.47\n      postcss-selector-parser: 6.1.2\n\n  postcss-selector-parser@6.1.2:\n    dependencies:\n      cssesc: 3.0.0\n      util-deprecate: 1.0.2\n\n  postcss-value-parser@4.2.0: {}\n\n  postcss@8.4.47:\n    dependencies:\n      nanoid: 3.3.7\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prelude-ls@1.2.1: {}\n\n  prettier@3.3.3: {}\n\n  pretty-format@29.7.0:\n    dependencies:\n      '@jest/schemas': 29.6.3\n      ansi-styles: 5.2.0\n      react-is: 18.3.1\n\n  punycode@2.3.1: {}\n\n  queue-microtask@1.2.3: {}\n\n  react-is@18.3.1: {}\n\n  read-cache@1.0.0:\n    dependencies:\n      pify: 2.3.0\n\n  read-package-up@11.0.0:\n    dependencies:\n      find-up-simple: 1.0.0\n      read-pkg: 9.0.1\n      type-fest: 4.12.0\n\n  read-pkg@9.0.1:\n    dependencies:\n      '@types/normalize-package-data': 2.4.4\n      normalize-package-data: 6.0.0\n      parse-json: 8.1.0\n      type-fest: 4.12.0\n      unicorn-magic: 0.1.0\n\n  readdirp@3.6.0:\n    dependencies:\n      picomatch: 2.3.1\n\n  resolve-from@4.0.0: {}\n\n  resolve@1.22.8:\n    dependencies:\n      is-core-module: 2.13.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.0.4: {}\n\n  rollup@4.23.0:\n    dependencies:\n      '@types/estree': 1.0.6\n    optionalDependencies:\n      '@rollup/rollup-android-arm-eabi': 4.23.0\n      '@rollup/rollup-android-arm64': 4.23.0\n      '@rollup/rollup-darwin-arm64': 4.23.0\n      '@rollup/rollup-darwin-x64': 4.23.0\n      '@rollup/rollup-linux-arm-gnueabihf': 4.23.0\n      '@rollup/rollup-linux-arm-musleabihf': 4.23.0\n      '@rollup/rollup-linux-arm64-gnu': 4.23.0\n      '@rollup/rollup-linux-arm64-musl': 4.23.0\n      '@rollup/rollup-linux-powerpc64le-gnu': 4.23.0\n      '@rollup/rollup-linux-riscv64-gnu': 4.23.0\n      '@rollup/rollup-linux-s390x-gnu': 4.23.0\n      '@rollup/rollup-linux-x64-gnu': 4.23.0\n      '@rollup/rollup-linux-x64-musl': 4.23.0\n      '@rollup/rollup-win32-arm64-msvc': 4.23.0\n      '@rollup/rollup-win32-ia32-msvc': 4.23.0\n      '@rollup/rollup-win32-x64-msvc': 4.23.0\n      fsevents: 2.3.3\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  semver@7.6.0:\n    dependencies:\n      lru-cache: 6.0.0\n\n  semver@7.6.3: {}\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  siginfo@2.0.0: {}\n\n  signal-exit@4.1.0: {}\n\n  source-map-js@1.2.1: {}\n\n  spdx-correct@3.2.0:\n    dependencies:\n      spdx-expression-parse: 3.0.1\n      spdx-license-ids: 3.0.17\n\n  spdx-exceptions@2.5.0: {}\n\n  spdx-expression-parse@3.0.1:\n    dependencies:\n      spdx-exceptions: 2.5.0\n      spdx-license-ids: 3.0.17\n\n  spdx-license-ids@3.0.17: {}\n\n  stackback@0.0.2: {}\n\n  std-env@3.7.0: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.0.1\n\n  strip-final-newline@3.0.0: {}\n\n  strip-json-comments@3.1.1: {}\n\n  strip-literal@2.1.0:\n    dependencies:\n      js-tokens: 9.0.0\n\n  sucrase@3.35.0:\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.5\n      commander: 4.1.1\n      glob: 10.3.10\n      lines-and-columns: 1.2.4\n      mz: 2.7.0\n      pirates: 4.0.6\n      ts-interface-checker: 0.1.13\n\n  supports-color@5.5.0:\n    dependencies:\n      has-flag: 3.0.0\n\n  supports-color@7.2.0:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tailwindcss@3.4.17:\n    dependencies:\n      '@alloc/quick-lru': 5.2.0\n      arg: 5.0.2\n      chokidar: 3.6.0\n      didyoumean: 1.2.2\n      dlv: 1.1.3\n      fast-glob: 3.3.2\n      glob-parent: 6.0.2\n      is-glob: 4.0.3\n      jiti: 1.21.6\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n      normalize-path: 3.0.0\n      object-hash: 3.0.0\n      picocolors: 1.1.1\n      postcss: 8.4.47\n      postcss-import: 15.1.0(postcss@8.4.47)\n      postcss-js: 4.0.1(postcss@8.4.47)\n      postcss-load-config: 4.0.2(postcss@8.4.47)\n      postcss-nested: 6.2.0(postcss@8.4.47)\n      postcss-selector-parser: 6.1.2\n      resolve: 1.22.8\n      sucrase: 3.35.0\n    transitivePeerDependencies:\n      - ts-node\n\n  thenify-all@1.6.0:\n    dependencies:\n      thenify: 3.3.1\n\n  thenify@3.3.1:\n    dependencies:\n      any-promise: 1.3.0\n\n  tinybench@2.9.0: {}\n\n  tinypool@0.8.4: {}\n\n  tinyspy@2.2.1: {}\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-api-utils@1.4.0(typescript@5.7.2):\n    dependencies:\n      typescript: 5.7.2\n\n  ts-api-utils@2.0.0(typescript@5.7.2):\n    dependencies:\n      typescript: 5.7.2\n\n  ts-interface-checker@0.1.13: {}\n\n  type-check@0.4.0:\n    dependencies:\n      prelude-ls: 1.2.1\n\n  type-detect@4.1.0: {}\n\n  type-fest@4.12.0: {}\n\n  typescript@5.7.2: {}\n\n  ufo@1.5.4: {}\n\n  undici-types@5.26.5: {}\n\n  undici-types@6.19.8: {}\n\n  unicorn-magic@0.1.0: {}\n\n  uri-js@4.4.1:\n    dependencies:\n      punycode: 2.3.1\n\n  util-deprecate@1.0.2: {}\n\n  validate-npm-package-license@3.0.4:\n    dependencies:\n      spdx-correct: 3.2.0\n      spdx-expression-parse: 3.0.1\n\n  vite-node@1.6.0(@types/node@20.17.12):\n    dependencies:\n      cac: 6.7.14\n      debug: 4.3.7\n      pathe: 1.1.2\n      picocolors: 1.0.0\n      vite: 5.4.11(@types/node@20.17.12)\n    transitivePeerDependencies:\n      - '@types/node'\n      - less\n      - lightningcss\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n\n  vite@5.4.11(@types/node@20.17.12):\n    dependencies:\n      esbuild: 0.21.5\n      postcss: 8.4.47\n      rollup: 4.23.0\n    optionalDependencies:\n      '@types/node': 20.17.12\n      fsevents: 2.3.3\n\n  vitest@1.6.0(@types/node@20.17.12)(happy-dom@15.11.7):\n    dependencies:\n      '@vitest/expect': 1.6.0\n      '@vitest/runner': 1.6.0\n      '@vitest/snapshot': 1.6.0\n      '@vitest/spy': 1.6.0\n      '@vitest/utils': 1.6.0\n      acorn-walk: 8.3.4\n      chai: 4.5.0\n      debug: 4.3.6\n      execa: 8.0.1\n      local-pkg: 0.5.0\n      magic-string: 0.30.11\n      pathe: 1.1.2\n      picocolors: 1.0.0\n      std-env: 3.7.0\n      strip-literal: 2.1.0\n      tinybench: 2.9.0\n      tinypool: 0.8.4\n      vite: 5.4.11(@types/node@20.17.12)\n      vite-node: 1.6.0(@types/node@20.17.12)\n      why-is-node-running: 2.3.0\n    optionalDependencies:\n      '@types/node': 20.17.12\n      happy-dom: 15.11.7\n    transitivePeerDependencies:\n      - less\n      - lightningcss\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n\n  webidl-conversions@7.0.0: {}\n\n  whatwg-mimetype@3.0.0: {}\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  why-is-node-running@2.3.0:\n    dependencies:\n      siginfo: 2.0.0\n      stackback: 0.0.2\n\n  word-wrap@1.2.5: {}\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  yallist@4.0.0: {}\n\n  yaml@2.4.1: {}\n\n  yocto-queue@0.1.0: {}\n\n  yocto-queue@1.1.1: {}\n"
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.1630859375,
          "content": "packages:\n  - \"packages/aria-data\"\n  - \"packages/tailwindcss-config-analyzer\"\n  - \"crates/biome_formatter_test/src/prettier\"\n  - \"benchmark\"\n  - \"packages/@biomejs/*\"\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.1923828125,
          "content": "[toolchain]\n# The default profile includes rustc, rust-std, cargo, rust-docs, rustfmt and clippy.\n# https://rust-lang.github.io/rustup/concepts/profiles.html\nprofile = \"default\"\nchannel = \"1.82.0\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "newline_style = \"Unix\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "taplo.toml",
          "type": "blob",
          "size": 0.208984375,
          "content": "include = [\"Cargo.toml\", \"crates/**/Cargo.toml\", \".cargo/config.toml\", \"xtask/**/*.toml\", \"knope.toml\"]\nexclude = [\"./benchmark/**/*.toml\"]\n\n[formatting]\nalign_entries = true\ncolumn_width = 120\nreorder_keys = true\n"
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}