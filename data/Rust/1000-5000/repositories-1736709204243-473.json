{
  "metadata": {
    "timestamp": 1736709204243,
    "page": 473,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trishume/syntect",
      "stars": 1960,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.060546875,
          "content": "# initial cargo fmt\ncc41c3803b20b79147fa606f950658bc12e50dc2 \n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.6591796875,
          "content": "# Sublime Text\n\n#                                       tabs indentation,         no trailing\n*.stTheme                     eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n#                                       spaces indentation,      no trailing\n*.sublime-color-scheme        eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=4\n*.hidden-color-scheme         eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=4\n*.sublime-settings            eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=4\n*.sublime-syntax              eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=2\n*.sublime-theme               eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=4\n\n# TextMate\n\n#                                       tabs indentation,         no trailing\n*.tmLanguage                  eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n*.hidden-tmLanguage           eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n*.tmPreferences               eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n*.tmTheme                     eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n*.hidden-tmTheme              eol=lf    whitespace=-tab-in-indent,trailing-space,tabwidth=4\n\n# syntect\n\ntestdata/*                              linguist-vendored\n\n# General\n\n#                                       spaces indentation,      no trailing\n*.md                          eol=lf    whitespace=tab-in-indent,trailing-space,tabwidth=4\n#                             binary\n*.png                         binary\n*.tex                                   diff=tex\n*.pdf                         binary    diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.14453125,
          "content": "# macOS\n.DS_Store\nThumbs.db\n\n# Windows\n[Dd]esktop.ini\n\n# cargo\ntarget/\n\n# IDEA\n.idea/\n*.iml\n\n# Sublime Text\n*.sublime-workspace\n\n# VS Code\n.vscode/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.546875,
          "content": "[submodule \"testdata/Packages\"]\n\tbranch = st3 # TODO: this line should be removed once st4 functionality has been implemented\n\tpath = testdata/Packages\n\turl = https://github.com/sublimehq/Packages\n[submodule \"testdata/InspiredGitHub.tmtheme\"]\n\tpath = testdata/InspiredGitHub.tmtheme\n\turl = https://github.com/sethlopezme/InspiredGitHub.tmtheme.git\n[submodule \"testdata/Solarized\"]\n\tpath = testdata/Solarized\n\turl = https://github.com/braver/Solarized.git\n[submodule \"testdata/spacegray\"]\n\tpath = testdata/spacegray\n\turl = https://github.com/kkga/spacegray.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 17.1337890625,
          "content": "# Changelog\n\n## [Version 5.2.0](https://github.com/trishume/syntect/compare/v5.1.0...v5.2.0) (2024-02-07)\n\n### Improvements\n\n- Eliminate syntect library's dependency on serde's \"derive\" feature. Increases build parallelism.\n- Add parsing of gutterSettings.\n\n### Dependencies\n\n- Update `regex-syntax` to 0.8.\n\n## [Version 5.1.0](https://github.com/trishume/syntect/compare/v5.0.0...v5.1.0) (2023-08-01)\n\n### Improvements\n\n- Fix how `syntect::util::split_at()` handles multi-byte characters\n- Allow case insensitive search for .tmtheme paths\n- impl `PartialEq` for `Theme`\n\n### Dependencies\n\n- Upgrade `fancy-regex` to 0.11\n- Upgrade `regex-syntax` to 0.7\n- Replace `lazy_static` with `once_cell`\n\n### Other\n\n- Change MSRV policy to \"last three stable versions\"\n- Make `Debug` impl of `syntect::highlighting::Color` less verbose\n\n## [Version 5.0.0](https://github.com/trishume/syntect/compare/v4.6.0...v5.0.0) (2022-05-03)\n\nBreaking changes\n\n- Lazy-load syntaxes to significantly improve startup time. This changes the binary format of syntax dump files.\n- Remove `ContextId::new()` from public API to support lazy-loading of syntaxes\n- Rename `HighlightLines::highlight()` to `HighlightLines::highlight_line()` to make it clear that the function takes one line at a time\n- Make `plist` dependency (used for loading themes) optional via new `plist-load` feature\n- Remove obsolete `dump-load-rs` and `dump-create-rs` features that has been identical to `dump-load` and `dump-create` for two years\n- Remove deprecated items `ThemeSettings::highlight_foreground`, `ThemeSettings::selection_background`, `ClassedHTMLGenerator::new`, `ClassedHTMLGenerator::parse_html_for_line`, `html::css_for_theme`, `html::tokens_to_classed_html` and `html::tokens_to_classed_spans`\n- Mark all error enums as `#[non_exhaustive]`\n- These functions have been changed to return a `Result` to allow propagation of errors:\n  - `html::ClassedHTMLGenerator::parse_html_for_line_which_includes_newline`\n  - `html::append_highlighted_html_for_styled_line`\n  - `html::css_for_theme_with_class_style`\n  - `html::highlighted_html_for_string`\n  - `html::line_tokens_to_classed_spans`\n  - `html::styled_line_to_highlighted_html`\n  - `parsing::ParseState::parse_line`\n  - `parsing::ScopeStack::apply`\n  - `parsing::ScopeStack::apply_with_hook`\n  - `parsing::syntax_definition::Context::match_at`\n  - `parsing::syntax_definition::ContextReference::id`\n  - `parsing::syntax_definition::ContextReference::resolve`\n\nOther changes\n\n- Fall back to `Plain Text` if a referenced syntax is missing\n- Add support for `hidden_file_extensions` key in syntaxes.\n- Implement `Error` and `Display` for all error enums by using `thiserror`\n- Replace `lazycell` with `once_cell` to fix crash on lazy initialization\n- Add `ScopeRangeIterator`\n- Add CI check for Minimum Supported Rust Version. This is currently Rust 1.53.\n- Make looking up a syntax by extension use case-insensitive comparison\n- Make `from_dump_file()` ~15% faster\n- Blend alpha value on converting colors to ANSI color sequences\n- Fix sample code in documentation to avoid double newlines\n- Fix lots of build warnings and lints\n- Add Criterion benchmarks for a whole syntect pipeline and for `from_dump_file()`\n\n## [Version 4.7.1](https://github.com/trishume/syntect/compare/v4.7.0...v4.7.1) (2022-01-03)\n\nThis version was yanked from crates.io due to a semver violation issue.\n\n## [Version 4.7.0](https://github.com/trishume/syntect/compare/v4.6.0...v4.7.0) (2021-12-25)\n\nThis version was yanked from crates.io due to a semver violation issue.\n\n## [Version 4.6.0](https://github.com/trishume/syntect/compare/v4.5.0...v4.6.0) (2021-08-01)\n\n- Add `html::line_tokens_to_classed_spans` to also take a mutable ScopeStack, deprecate `tokens_to_classed_spans`, to avoid panics and incorrect highlighting.\n- Derive Hash for Color and Style\n- Add `find_unlinked_contexts` to `SyntaxSet`\n- Add `syntaxes` method to `SyntaxSetBuilder`\n- Bump `fancy-regex` to v0.7 and `yaml-rust` to v0.4.5\n\n## [Version 4.5.0](https://github.com/trishume/syntect/compare/v4.4.0...v4.5.0) (2020-12-09)\n\n- Added a new function for producing classed HTML which handles newlines correctly and deprecated old one. [#307](https://github.com/trishume/syntect/pull/307)\n\n## [Version 4.4.0](https://github.com/trishume/syntect/compare/v4.3.0...v4.4.0) (2020-08-19)\n\n- Errors are now `Send + Sync + 'static` [#304](https://github.com/trishume/syntect/pull/304)\n\n## [Version 4.3.0](https://github.com/trishume/syntect/compare/v4.2.0...v4.3.0) (2020-08-01)\n\n- Fixes unnecesary dependency of the `html` feature on the `assets` feature. [#300](https://github.com/trishume/syntect/pull/300)\n- Adds ability to add prefixes to `html` module CSS class names. [#296](https://github.com/trishume/syntect/pull/296)\n\n## [Version 4.2.0](https://github.com/trishume/syntect/compare/v4.1.1...v4.2.0) (2020-04-20)\n\n- Updates to new versions of `onig` and `plist`. The new `onig` version doesn't require `bindgen` thus making compilation easier. [#293](https://github.com/trishume/syntect/pull/293)\n\n## [Version 4.1.1](https://github.com/trishume/syntect/compare/v4.1.0...v4.1.1) (2020-04-20)\n\n- Properly handle backreferences in included contexts [#288](https://github.com/trishume/syntect/pull/288)\n\n## [Version 4.1.0](https://github.com/trishume/syntect/compare/v4.0.0...v4.1.0) (2020-03-30)\n\n- Make sure errors implement `Send` [#285](https://github.com/trishume/syntect/pull/285)\n- Fix errors to not use the deprecated `description()` [#286](https://github.com/trishume/syntect/pull/286)\n\nThanks @sharkdp for the bug fixes! Bumping second part of semver since `Send` is adding functionality (back).\n\n## [Version 4.0.0](https://github.com/trishume/syntect/compare/v3.3.0...v4.0.0) (2020-03-29)\n\n### Headline feature: pure-Rust `fancy-regex` engine option\n\nUsers can now opt in to a pure-Rust regex engine using Cargo features, making\ncompilation easier in general. People experiencing difficulty compiling for\nWindows and Wasm should try switching to `fancy-regex`. Note this currently\napproximately halves highlighting speed.\n\nSee the Readme and [#270](https://github.com/trishume/syntect/pull/270) for details.\nThanks to @robinst for implementing this!\n\n### Other changes\n\n- Ability to generate CSS for a theme for use with classed HTML generation (won't always be correct) [#274](https://github.com/trishume/syntect/pull/274/files)\n- Don't generate empty spans in classed HTML [#276](https://github.com/trishume/syntect/pull/276)\n- Miscellaneous dependency bumps and cleanup\n\n### Breaking changes and upgrading\n\nUpgrading should cause no errors for nearly all users. Users using more unusual APIs may have a small amount of tweaking to do.\n\n- If you use `default-features = false` you may need to update your features to choose a regex engine\n- A bunch of technically public APIs that I don't know if anyone uses changed due to the regex engine refactor, common uses shouldn't break\n\n## [Version 3.3.0](https://github.com/trishume/syntect/compare/v3.2.1...v3.3.0) (2019-09-22)\n\n> Bug fixes and new utilities\n\n- Fixes multiple bugs\n- Add RangedHighlightIterator\n- Add `as_latex_escaped` util\n\n## [Version 3.2.1](https://github.com/trishume/syntect/compare/v3.2.0...v3.2.1) (2019-08-10)\n\n- Bump onig dependency\n- inconsequential patches\n\n## [Version 3.2.0](https://github.com/trishume/syntect/compare/v3.1.0...v3.2.0) (2019-03-09)\n\n- Actually make `tokens_to_classed_spans` public like intended\n\n## [Version 3.1.0](https://github.com/trishume/syntect/compare/v3.0.2...v3.1.0) (2019-02-24)\n\n> Metadata and new classed HTML generation\n\n- Add support for loading metadata ([#223](https://github.com/trishume/syntect/pull/223) [#225](https://github.com/trishume/syntect/pull/225) [#230](https://github.com/trishume/syntect/pull/230))\n- Improve support for generating classed HTML and fix a bug, old function is deprecated because it's impossible to use correctly ([#235](https://github.com/trishume/syntect/pull/235))\n- Update `plist` to `v0.4` and `pretty_assertions` to `v0.6` ([#232](https://github.com/trishume/syntect/pull/232) [#236](https://github.com/trishume/syntect/pull/236))\n\n## [Version 3.0.2](https://github.com/trishume/syntect/compare/v3.0.1...v3.0.2) (2018-11-11)\n\n> Bug fixes\n\n- Fix application of multiple `with_prototype`s ([#220](https://github.com/trishume/syntect/pull/220), fixes [#160](https://github.com/trishume/syntect/issues/160), [#178](https://github.com/trishume/syntect/issues/178), ASP highlighting)\n- Fix prototype marking logic ([#221](https://github.com/trishume/syntect/pull/221), fixes [#219](https://github.com/trishume/syntect/issues/219))\n\n## [Version 3.0.1](https://github.com/trishume/syntect/compare/v3.0.0...v3.0.1) (2018-10-16)\n\n> Minor bug fixes\n\n- Fix a bug with syntaxes that used captures in lookarounds ([#176](https://github.com/trishume/syntect/issues/176) [#215](https://github.com/trishume/syntect/pull/215))\n- Fix the precedence order of syntaxes to match Sublime ([#217](https://github.com/trishume/syntect/pull/217) [#216](https://github.com/trishume/syntect/pull/216))\n\n## [Version 3.0.0](https://github.com/trishume/syntect/compare/v2.1.0...v3.0.0) (2018-10-09)\n\n> Breaking changes and major new features\n\nThis is a major release with multiple breaking API changes, although upgrading shouldn't be too difficult. It fixes bugs and comes with some nice new features.\n\n### Breaking changes and upgrading\n\n- The `SyntaxSet` API has been revamped to use a builder and an arena of contexts. See [example usage](https://github.com/trishume/syntect/blob/51208d35a6d98c07468fbe044d5c6f37eb129205/examples/gendata.rs#L25-L28).\n- Many functions now need to be passed the `SyntaxSet` that goes with the rest of their arguments because of this new arena.\n- Filename added to `LoadingError::ParseSyntax`\n- Many functions in the `html` module now take the `newlines` version of syntaxes.\n  - These methods have also been renamed, partially so that code that needs updating doesn't break without a compile error.\n  - The HTML they output also treats newlines slightly differently and I think more correctly but uglier when you look at the HTML.\n\n#### Breaking rename upgrade guide\n\n- `SyntaxSet::add_syntax -> SyntaxSetBuilder::add`\n- `SyntaxSet::load_syntaxes -> SyntaxSetBuilder::add_from_folder`\n- `SyntaxSet::load_plain_text_syntax -> SyntaxSetBuilder::add_plain_text_syntax`\n- `html::highlighted_snippet_for_string -> html::highlighted_html_for_string`: also change to `newlines` `SyntaxSet`\n- `html::highlighted_snippet_for_file -> html::highlighted_html_for_file`: also change to `newlines` `SyntaxSet`\n- `html::styles_to_coloured_html -> html::styled_line_to_highlighted_html`: also change to `newlines` `SyntaxSet`\n- `html::start_coloured_html_snippet -> html::start_highlighted_html_snippet`: return type also changed\n\n### Major changes and new features\n\n- Use arena for contexts ([#182](https://github.com/trishume/syntect/pull/182) [#186](https://github.com/trishume/syntect/pull/186) [#187](https://github.com/trishume/syntect/pull/187) [#190](https://github.com/trishume/syntect/pull/190) [#195](https://github.com/trishume/syntect/pull/195)): This makes the code cleaner, enables use of syntaxes from multiple threads, and prevents accidental misuse.\n  - This involves a new `SyntaxSetBuilder` API for constructing new `SyntaxSet`s\n  - See the revamped [parsyncat example](https://github.com/trishume/syntect/blob/51208d35a6d98c07468fbe044d5c6f37eb129205/examples/parsyncat.rs).\n- Encourage use of newlines ([#197](https://github.com/trishume/syntect/pull/197) [#207](https://github.com/trishume/syntect/pull/207) [#196](https://github.com/trishume/syntect/issues/196)): The `nonewlines` mode is often buggy so we made it easier to use the `newlines` mode.\n  - Added a `LinesWithEndings` utility for iterating over the lines of a string with `\\n` characters.\n  - Reengineer the `html` module to use `newlines` syntaxes.\n- Add helpers for modifying highlighted lines ([#198](https://github.com/trishume/syntect/pull/198)): For use cases like highlighting a piece of text in a blog code snippet or debugger. This allows you to reach into the highlighted spans and add styles.\n  - Check out `split_at` and `modify_range` in the `util` module.\n- New `ThemeSet::add_from_folder` function ([#200](https://github.com/trishume/syntect/pull/200)): For modifying existing theme sets.\n\n### Bug Fixes\n\n- Improve nonewlines regex rewriting: [#212](https://github.com/trishume/syntect/pull/212) [#211](https://github.com/trishume/syntect/issues/211)\n- Reengineer theme application to match Sublime: [#209](https://github.com/trishume/syntect/pull/209)\n- Also mark contexts referenced by name as \"no prototype\" (same as ST): [#180](https://github.com/trishume/syntect/pull/180)\n- keep with_prototype when switching contexts with `set`: [#177](https://github.com/trishume/syntect/pull/177) [#166](https://github.com/trishume/syntect/pull/166)\n- Fix unused import warning: [#174](https://github.com/trishume/syntect/pull/174)\n- Ignore trailing dots in selectors: [#173](https://github.com/trishume/syntect/pull/173)\n- Fix `embed` to not include prototypes: [#172](https://github.com/trishume/syntect/pull/172) [#160](https://github.com/trishume/syntect/issues/160)\n\n### Upgraded dependencies\n\n- plist: `0.2 -> 0.3`\n- regex: `0.2 -> 1.0`\n- onig: `3.2.1 -> 4.1`\n\n## [Version 2.1.0](https://github.com/trishume/syntect/compare/v2.0.1...v2.1.0) (2018-05-31)\n\n> Regex checking and plain file names\n\n* Check regexes compile upon loading from YAML (There's technically a small breaking change here if you match on the previously unused regex error, but I don't think anyone does)\n* Can detect the correct syntax on full file names like `CMakeLists.txt`\n* Make `nonewlines` mode marginally less buggy (still prefer using `newlines` mode)\n* Better error types\n* Better examples and tests\n\n## [Version 2.0.1](https://github.com/trishume/syntect/compare/v2.0.0...v2.0.1) (2018-04-28)\n\n> More robust parsing\n\n* Parsing now abandons a regex after reaching a recursion depth limit instead of taking forever\n* Loop detection better matches Sublime Text\n* Parsing is faster!\n* Dependency upgrades\n* Other minor tweaks\n\nThanks to [@robinst](https://github.com/ronbinst) for the headline features of this release!\n\n## [Version 2.0.0](https://github.com/trishume/syntect/compare/v1.8.2...v2.0.0) (2018-01-02)\n\n> Breaking Changes and New Stuff\n\n### Breaking changes\n\n* The `static-onig` feature was removed, static linking is now the default\n* Font styles and color constants now use associated consts because of bitflags upgrade\n* `SyntaxDefinition::load_from_str` now has an extra parameter\n\n### Other notable changes\n\n* Support for new `embed` syntax, see [#124](https://github.com/trishume/syntect/issues/124)\n* Updates to many dependencies\n* Updated dumps\n* More compact HTML output\n\n## [Version 1.8.2](https://github.com/trishume/syntect/compare/v1.8.0...v1.8.2) (2017-11-11)\n\n> New Inspired GitHub and libonig\n\n## [Version 1.8.0](https://github.com/trishume/syntect/compare/v1.7.3...v1.8.0) (2017-10-14)\n\n> Update bitflags & packages\n\nThis release changes how the constants for `FontStyle` and `Color`, relying on the new associated consts feature in `Rust 1.20`. The old constants are still available but are deprecated and will be removed in `v2.0`.\n\nPackages were also updated to newer versions.\n\n## [Version 1.7.3](https://github.com/trishume/syntect/compare/v1.7.2...v1.7.3) (2017-09-15)\n\n> Enable comparison of parse states\n\nFixes comparisons of parse states so they are fast and don't recurse infinitely. Thanks [@raphlinus](https://github.com/raphlinus)\n\n## [Version 1.7.2](https://github.com/trishume/syntect/compare/v1.7.0...v1.7.2) (2017-09-05)\n\n> Bug fixes and package updates\n\n* Fixes [#101](https://github.com/trishume/syntect/issues/101), which caused some syntaxes like PHP to behave incorrectly.\n* Updates Packages with new syntax versions\n* Adds new handy flags to the `syncat` example\n\n## [Version 1.7.0](https://github.com/trishume/syntect/compare/v1.6.0...v1.7.0) (2017-06-30)\n\n> Pure Rust dump loading / creation features\n\n## [Version 1.6.0](https://github.com/trishume/syntect/compare/v1.5.0...v1.6.0) (2017-06-21)\n\n> Helper methods and more theme attributes\n\n## [Version 1.5.0](https://github.com/trishume/syntect/compare/v1.4.0...v1.5.0) (2017-05-31)\n\n> Highlighting stacks\n\nSmall release, adds a convenience method for highlighting an entire stack, and derives some more things on `Scope`.\n\n## [Version 1.4.0](https://github.com/trishume/syntect/compare/v1.3.0...v1.4.0) (2017-05-25)\n\n> Serde and optional parsing\n\nThis release switches the dump format from `rustc-serialize` to `Serde`, anyone using custom dumps will have to update them.\n\nIt also makes the parsing part of the library optional behind a feature flag, anyone not using the default feature flags probably will want to add the `parsing` flag.\n\n## [Version 1.3.0](https://github.com/trishume/syntect/tree/v1.3.0) (2017-04-05)\n\n> Bug fixes, tests, updates and feature flags\n\n* Syntax tests: there is a new `syntest` example for running Sublime Text syntax tests\n* Bug fixes: there's a ton of bugs fixed in this release, mostly found via the syntax tests. These mostly affected certain syntaxes which pushed/set multiple contexts at once.\n* Updated packages: The Sublime packages have been updated to the latest version\n* Feature flags: there's now Cargo feature flags for disabling some parts of syntect if you don't want unnecessary binary and dependency bloat.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 28.2734375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-manifest\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf6ff49a028a52bf61913e19f5ba3b9bd34145cc97eb1649865576c8f06b408d\"\ndependencies = [\n \"serde\",\n \"thiserror\",\n \"toml\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e35af189006b9c0f00a064685c727031e3ed2d8020f7ba284d78cc2671bd36ea\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0cf6e91fde44c773c6ee7ec6bba798504641a8bc2eb7e37a04ffbf4dfaa55a\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"bitflags\",\n \"textwrap\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b01d6de93b2b6c65e17c634a26653a29d107b3c98c607c765bf38d041531cd8f\"\ndependencies = [\n \"atty\",\n \"cast\",\n \"clap\",\n \"criterion-plot\",\n \"csv\",\n \"itertools\",\n \"lazy_static\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_cbor\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2673cc8207403546f45f5fd319a974b1e6983ad1a3ee7e6041650013be041876\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdc4883a9c96732e4733212c01447ebd805833b7275a73ca3ee080fd77afdaf\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ctor\"\nversion = \"0.1.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d2301688392eb071b0bf1a37be05c469d3cc4dbbd95df672fe28ab021e6a096\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"difference\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n\n[[package]]\nname = \"dissimilar\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59f8e79d1fbf76bdfbde321e902714bf6c49df88a7dda6fc682fc2979226962d\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"expect-test\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63af43ff4431e848fb47472a920f14fa71c24de13255a5692e93d4e90302acb0\"\ndependencies = [\n \"dissimilar\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fancy-regex\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b95f7c0680e4142284cf8b22c14a476e87d61b004a3a0861872b32ef7ead40a2\"\ndependencies = [\n \"bit-set\",\n \"regex\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b43ede17f21864e81be2fa654110bf1e793774238d86ef8555c37e6519c0403\"\n\n[[package]]\nname = \"hashbag\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98f494b2060b2a8f5e63379e1e487258e014cee1b1725a735816c0107a2e9d93\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6ea2a48c204030ee31a7d7fc72c93294c92fe87ecb1789881c9543516e1a0d\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"onig\"\nversion = \"6.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c4b31c8722ad9171c6d77d3557db078cab2bd50afcc9d09c8b315c59df8ca4f\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"once_cell\",\n \"onig_sys\",\n]\n\n[[package]]\nname = \"onig_sys\"\nversion = \"69.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b829e3d7e9cc74c7e315ee8edb185bf4190da5acde74afd7fc59c35b1f086e7\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"output_vt100\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"628223faebab4e3e40667ee0b2336d34a5b960ff60ea743ddfdbcf7770bcfb66\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cf17e9a1800f5f396bc67d193dc9411b59012a5876445ef450d449881e1016\"\ndependencies = [\n \"base64\",\n \"indexmap\",\n \"quick-xml\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f81e1644e1b54f5a68959a29aa86cde704219254669da328ecfdf6a1f09d427\"\ndependencies = [\n \"ansi_term\",\n \"ctor\",\n \"difference\",\n \"output_vt100\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60946a68e5f9d28b0dc1c21bb8a97ee7d018a8b322fa57838ba31cc878e22d99\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"public-api\"\nversion = \"0.33.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b759eeee807ac96096fce568abeb9ef8d23db7be771a65252b1e5093fe7938c4\"\ndependencies = [\n \"hashbag\",\n \"rustdoc-types\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d3a6e5838b60e0e8fa7a43f22ade549a37d61f8bdbe636d0d7816191de969c2\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustdoc-json\"\nversion = \"0.8.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21e727474edad247ba206da91e5d3f76c0ff4a4ddac1fb7bba508df49101388\"\ndependencies = [\n \"cargo-manifest\",\n \"cargo_metadata\",\n \"serde\",\n \"thiserror\",\n \"toml\",\n]\n\n[[package]]\nname = \"rustdoc-types\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc646f09069d689083b975698bdac4edb96c2f0e7d270b701760814b886bb224\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"rustup-toolchain\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24f509a60a1eccc275d92e13e8146f8eaac8ce3547081512d99787ee44ba8edf\"\ndependencies = [\n \"thiserror\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_cbor\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5\"\ndependencies = [\n \"half\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.96\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d5d0adab1ae378d7f53bdebc67a39f1f151407ef230f0ce2883572f5d8985c80\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syntect\"\nversion = \"5.2.0\"\ndependencies = [\n \"bincode\",\n \"bitflags\",\n \"criterion\",\n \"expect-test\",\n \"fancy-regex\",\n \"flate2\",\n \"fnv\",\n \"getopts\",\n \"once_cell\",\n \"onig\",\n \"plist\",\n \"pretty_assertions\",\n \"public-api\",\n \"rayon\",\n \"regex\",\n \"regex-syntax\",\n \"rustdoc-json\",\n \"rustup-toolchain\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thiserror\",\n \"walkdir\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.96\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.96\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.96\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8d71a593cc5c42ad7876e2c1fda56f314f3754c084128833e64f1345ff8a03a\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"yaml-rust\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85\"\ndependencies = [\n \"linked-hash-map\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.7568359375,
          "content": "[package]\nname = \"syntect\"\ndescription = \"library for high quality syntax highlighting and code intelligence using Sublime Text's grammars\"\ndocumentation = \"https://docs.rs/syntect\"\nrepository = \"https://github.com/trishume/syntect\"\nkeywords = [\"syntax\", \"highlighting\", \"highlighter\", \"colouring\", \"parsing\"]\ncategories = [\"parser-implementations\", \"parsing\", \"text-processing\"]\nreadme = \"Readme.md\"\nlicense = \"MIT\"\nversion = \"5.2.0\" # remember to update html_root_url\nauthors = [\"Tristan Hume <tristan@thume.ca>\"]\nedition = \"2021\"\nexclude = [\n    \"testdata/*\",\n    \"/scripts/*\",\n    \"/Makefile\",\n    \"/codecov.yml\"\n]\n\n[dependencies]\nyaml-rust = { version = \"0.4.5\", optional = true }\nonig = { version = \"6.0\", optional = true, default-features = false }\nfancy-regex = { version = \"0.11\", optional = true }\nwalkdir = \"2.0\"\nregex-syntax = { version = \"0.8\", optional = true }\nbitflags = \"1.0.4\"\nplist = { version = \"1.3\", optional = true }\nbincode = { version = \"1.0\", optional = true }\nflate2 = { version = \"1.0\", optional = true }\nfnv = { version = \"1.0\", optional = true }\nserde = \"1.0\"\nserde_derive = \"1.0\"\nserde_json = \"1.0\"\nonce_cell = \"1.8\"\nthiserror = \"1.0\"\n\n[dev-dependencies]\ncriterion = { version = \"0.3\", features = [ \"html_reports\" ] }\nrayon = \"1.0.0\"\nregex = \"1.0\"\ngetopts = \"0.2\"\npretty_assertions = \"0.6\"\nrustup-toolchain = \"0.1.5\"\nrustdoc-json = \"0.8.8\"\npublic-api = \"0.33.1\"\nexpect-test = \"1.4.1\"\n\n[features]\n\n# Dump loading using flate2\ndump-load = [\"flate2\", \"bincode\"]\n# Dump creation using flate2\ndump-create = [\"flate2\", \"bincode\"]\n\nregex-fancy = [\"fancy-regex\"]\nregex-onig = [\"onig\"]\n\nparsing = [\"regex-syntax\", \"fnv\", \"dump-create\", \"dump-load\"]\n\n# Support for .tmPreferenes metadata files (indentation, comment syntax, etc)\nmetadata = [\"parsing\", \"plist-load\"]\n\n# Enables inclusion of the default syntax packages.\ndefault-syntaxes = [\"parsing\", \"dump-load\"]\n# Enables inclusion of the default theme packages.\ndefault-themes = [\"dump-load\"]\n\nhtml = [\"parsing\"]\n# Support for parsing .tmTheme files and .tmPreferences files\nplist-load = [\"plist\"]\n# Support for parsing .sublime-syntax files\nyaml-load = [\"yaml-rust\", \"parsing\"]\n\ndefault-onig = [\"parsing\", \"default-syntaxes\", \"default-themes\", \"html\", \"plist-load\", \"yaml-load\", \"dump-load\", \"dump-create\", \"regex-onig\"]\n# In order to switch to the fancy-regex engine, disable default features then add the default-fancy feature\ndefault-fancy = [\"parsing\", \"default-syntaxes\", \"default-themes\", \"html\", \"plist-load\", \"yaml-load\", \"dump-load\", \"dump-create\", \"regex-fancy\"]\ndefault = [\"default-onig\"]\n\n# [profile.release]\n# debug = true\n\n[lib]\nbench = false\n\n[[bench]]\nname = \"highlighting\"\nharness = false\n\n[[bench]]\nname = \"load_and_highlight\"\nharness = false\n\n[[bench]]\nname = \"loading\"\nharness = false\n\n[[bench]]\nname = \"parsing\"\nharness = false\n"
        },
        {
          "name": "DESIGN.md",
          "type": "blob",
          "size": 5.2275390625,
          "content": "# Optimization/Design notes\n\nThis is my scratch pad for optimization ideas. Some of this I will implement, some I have implemented, some are just speculative.\n\n# Scopes\n\n## Representation ideas:\n\n- Normal arrays of strings\n- array of 32-bit or 64-bit atoms (maybe using Servo's atom library)\n- Atoms packed into one or two u64s\n  - fast equality checking\n  - potentially fast prefix checking\n  - needs unsafe code\n\n## Potential packings:\n\n- variable width atoms, either 7 bits and a tag bit for top 128 or 13 bits and 3 tagging bits for rest\n  - can fit all but 33 of the scopes present\n- tagged pointer (taking advantage of alignment), either a pointer to a slow path, or the first 4 bits set then a packed representation, one of others mentioned\n- 6 10-bit atoms referencing unique things by position (see by-position stats below)\n- 5 11-bit atoms and one 8-bit one for the first atom (2^11 = 2048, 2^8 = 256), one remaining bit for tag marker\n\n## Stats:\n\n- 7000 scopes referenced in sublime, 3537 unique ones, all stats after this are based on non-unique data\n- all but 33 scopes in default packages could fit in 64 with combination 8bit or 16bit atom encoding\n- there are only 1219 unique atoms in the default package set\n- the top 128 atoms make up ~90% of all unique atoms referenced in syntax files\n- there are 26 unique first atoms, 145 unique last atoms\n- every position (1st atom, 2nd atom, ...) has under 878 possibilities, only 2nd,3rd and 4th have >256\n- 99.8% of scopes have 6 or fewer atoms, 97% have 5 or fewer, 70% have 4 or fewer\n  - for unique scopes: {2=>81, 4=>1752, 3=>621, 5=>935, 7=>8, 6=>140} ----> 95% of uniques <= 6\n  - for non-unique scopes: {2=>125, 4=>3383, 3=>1505, 5=>1891, 7=>9, 6=>202}\n\n# Checking prefix\n\noperation: `fn extent_matched(potential_prefix: Scope, s: Scope) -> u8`\nidea: any differences are beyond the length of the prefix.\nfigure this out by xor and then ctz/clz then a compare to the length (however that works).\n\n```bash\nXXXXYYYY00000000 # prefix\nXXXXYYYYZZZZ0000 # testee\n00000000ZZZZ0000 # = xored\n\nXXXXYYYYQQQQ0000 # non-prefix\nXXXXYYYYZZZZ0000 # testee\n00000000GGGG0000 # = xored\n\nXXXXQQQQ00000000 # non-prefix\nXXXXYYYYZZZZ0000 # testee\n0000BBBBZZZZ0000 # = xored\n```\n\n# Parsing\n\n* Problem: need to reduce number of regex search calls\n* Solution: cache better\n\n## Stats\n\n```bash\n# On stats branch\n$cargo run --release --example syncat testdata/jquery.js | grep cmiss | wc -l\n     Running `target/release/examples/syncat testdata/jquery.js`\n   61266\n$cargo run --release --example syncat testdata/jquery.js | grep ptoken | wc -l\n   Compiling syntect v0.1.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n     Running `target/release/examples/syncat testdata/jquery.js`\n   98714\n$wc -l testdata/jquery.js\n    9210 testdata/jquery.js\n$cargo run --release --example syncat testdata/jquery.js | grep cclear | wc -l\n   Compiling syntect v0.1.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n     Running `target/release/examples/syncat testdata/jquery.js`\n   71302\n$cargo run --release --example syncat testdata/jquery.js | grep freshcachetoken | wc -l\n    Compiling syntect v0.1.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n      Running `target/release/examples/syncat testdata/jquery.js`\n   80512\n# On stats-2 branch\n$cargo run --example syncat testdata/jquery.js | grep cachehit | wc -l\n     Running `target/debug/examples/syncat testdata/jquery.js`\n  527774\n$cargo run --example syncat testdata/jquery.js | grep regsearch | wc -l\n     Running `target/debug/examples/syncat testdata/jquery.js`\n 2862948\n$cargo run --example syncat testdata/jquery.js | grep regmatch | wc -l\n   Compiling syntect v0.6.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n     Running `target/debug/examples/syncat testdata/jquery.js`\n  296127\n$cargo run --example syncat testdata/jquery.js | grep leastmatch | wc -l\n   Compiling syntect v0.6.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n     Running `target/debug/examples/syncat testdata/jquery.js`\n  137842\n# With search caching\n$cargo run --example syncat testdata/jquery.js | grep searchcached | wc -l\n   Compiling syntect v0.6.0 (file:///Users/tristan/Box/Dev/Projects/syntect)\n     Running `target/debug/examples/syncat testdata/jquery.js`\n 2440527\n$cargo run --example syncat testdata/jquery.js | grep regsearch | wc -l\n     Running `target/debug/examples/syncat testdata/jquery.js`\n  950195\n```\n\nAverage unique regexes per line is 87.58, average non-unique is regsearch/lines = 317\n\nIdeally we should have only a couple fresh cache searches per line, not `~10` like the stats show (freshcachetoken/linecount).\n\nIn a fantabulous world these stats mean a possible 10x speed improvement, but since caching does have a cost and we can't always cache it likely will be nice but not that high.\n\n## Issues\n\n- Stack transitions always bust cache, even when for example JS just pushes another group\n- Doesn't cache actual matches, only if it matched or not\n\n## Attacks\n\n- cache based on actual context, only search if it is a prototype we haven't searched before\n  - hash maps based on casting RC ref to pointer and hashing? (there is a Hash impl for pointers)\n- for new searches, store matched regexes for context in BTreeMap like textmate\n  - for subsequent tokens in same context, just pop off btreemap and re-search if before curpos\n- cache per Regex\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.08984375,
          "content": "MIT License\n\nCopyright (c) 2017 Tristan Hume, Keith Hall, Google Inc and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.7900390625,
          "content": "SUBMODULES = testdata/Packages/.git\n\ninfo:\n\t$(info Targets)\n\t$(info -----------------------------------------------------------------------)\n\t$(info assets      | generate default theme packs and syntax)\n\t$(info - OTHER TARGETS -------------------------------------------------------)\n\t$(info themes      | generate default theme pack)\n\t$(info packs       | generate default syntax pack)\n\t$(info syntest     | run syntax test summary)\n\n\n$(SUBMODULES):\n\tgit submodule update --init --recursive\n\nassets: packs themes\n\npacks: $(SUBMODULES)\n\tcargo run --features=metadata --example gendata -- synpack testdata/Packages assets/default_newlines.packdump assets/default_nonewlines.packdump assets/default_metadata.packdump testdata/DefaultPackage\n\nthemes: $(SUBMODULES)\n\tcargo run --example gendata -- themepack testdata assets/default.themedump\n\nsyntest: $(SUBMODULES)\n\t@echo Tip: Run make update-known-failures to update the known failures file.\n\tcargo run --release --example syntest -- testdata/Packages testdata/Packages --summary | diff -U 1000000 testdata/known_syntest_failures.txt -\n\t@echo No new failures!\n\nsyntest-fancy: $(SUBMODULES)\n\t@echo Tip: Run make update-known-failures to update the known failures file.\n\tcargo run --features default-fancy --no-default-features --release --example syntest -- testdata/Packages testdata/Packages --summary | diff -U 1000000 testdata/known_syntest_failures_fancy.txt -\n\t@echo No new failures!\n\nupdate-known-failures: $(SUBMODULES)\n\tcargo run --release --example syntest -- testdata/Packages testdata/Packages --summary | tee testdata/known_syntest_failures.txt\n\nupdate-known-failures-fancy: $(SUBMODULES)\n\tcargo run --features default-fancy --no-default-features --release --example syntest -- testdata/Packages testdata/Packages --summary | tee testdata/known_syntest_failures_fancy.txt\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 18.5517578125,
          "content": "# syntect\n\n[![Crates.io](https://img.shields.io/crates/v/syntect.svg?maxAge=2591000)](https://crates.io/crates/syntect)\n[![Documentation](https://docs.rs/syntect/badge.svg)](https://docs.rs/syntect)\n[![Crates.io](https://img.shields.io/crates/l/syntect.svg?maxAge=2591000)]()\n[![Build Status](https://github.com/trishume/syntect/actions/workflows/CI.yml/badge.svg)](https://github.com/trishume/syntect/actions)\n[![codecov](https://codecov.io/gh/trishume/syntect/branch/master/graph/badge.svg)](https://codecov.io/gh/trishume/syntect)\n\n`syntect` is a syntax highlighting library for Rust that uses [Sublime Text syntax definitions](http://www.sublimetext.com/docs/3/syntax.html#include-syntax).\nIt aims to be a good solution for any Rust project that needs syntax highlighting, including deep integration with text editors written in Rust.\nIt's used in production by at least two companies, and by [many open source projects](#projects-using-syntect).\n\nIf you are writing a text editor (or something else needing highlighting) in Rust and this library doesn't fit your needs, I consider that a bug and you should file an issue or email me.\nI consider this project mostly complete, I still maintain it and review PRs, but it's not under heavy development.\n\n## Important Links\n\n- API docs with examples: <https://docs.rs/syntect>\n- [Changelogs and upgrade notes for past releases](https://github.com/trishume/syntect/releases)\n\n## Getting Started\n\n`syntect` is [available on crates.io](https://crates.io/crates/syntect). You can install it by adding this line to your `Cargo.toml`:\n\n```toml\nsyntect = \"5.0\"\n```\n\nAfter that take a look at the [documentation](https://docs.rs/syntect) and the [examples](https://github.com/trishume/syntect/tree/master/examples).\n\nIf you've cloned this repository, be sure to run\n\n```bash\ngit submodule update --init\n```\n\nto fetch all the required dependencies for running the tests.\n\n## Features/Goals\n\n- [x] Work with many languages (accomplished through using existing grammar formats)\n- [x] Highlight super quickly, faster than nearly all text editors\n- [x] Include easy to use API for basic cases\n- [x] API allows use in fancy text editors with piece tables and incremental re-highlighting and the like.\n- [x] Expose internals of the parsing process so text editors can do things like cache parse states and use semantic info for code intelligence\n- [x] High quality highlighting, supporting things like heredocs and complex syntaxes (like Rust's).\n- [x] Include a compressed dump of all the default syntax definitions in the library binary so users don't have to manage a folder of syntaxes.\n- [x] Well documented, I've tried to add a useful documentation comment to everything that isn't utterly self explanatory.\n- [x] Built-in output to coloured HTML `<pre>` tags or 24-bit colour ANSI terminal escape sequences.\n- [x] Nearly complete compatibility with Sublime Text 3, including lots of edge cases. Passes nearly all of Sublime's syntax tests, see [issue 59](https://github.com/trishume/syntect/issues/59).\n- [x] Load up quickly, currently in around 23ms but could potentially be even faster.\n\n## Screenshots\n\nThere's currently an example program called `syncat` that prints one of the source files using hard-coded themes and syntaxes using 24-bit terminal escape sequences supported by many newer terminals.\nThese screenshots don't look as good as they could for two reasons:\nfirst the sRGB colours aren't corrected properly, and second the Rust syntax definition uses some fancy labels that these themes don't have highlighting for.\n\n![Nested languages](http://i.imgur.com/bByxb1E.png)\n![Base 16 Ocean Dark](http://i.imgur.com/CwiPOwZ.png)\n![Solarized Light](http://i.imgur.com/l3zcO4J.png)\n![InspiredGithub](http://i.imgur.com/a7U1r2j.png)\n\n## Example Code\n\nPrints highlighted lines of a string to the terminal.\nSee the [easy](https://docs.rs/syntect/latest/syntect/easy/index.html) and [html](https://docs.rs/syntect/latest/syntect/html/index.html) module docs for more basic use case examples.\n\n```rust\nuse syntect::easy::HighlightLines;\nuse syntect::parsing::SyntaxSet;\nuse syntect::highlighting::{ThemeSet, Style};\nuse syntect::util::{as_24_bit_terminal_escaped, LinesWithEndings};\n\n// Load these once at the start of your program\nlet ps = SyntaxSet::load_defaults_newlines();\nlet ts = ThemeSet::load_defaults();\n\nlet syntax = ps.find_syntax_by_extension(\"rs\").unwrap();\nlet mut h = HighlightLines::new(syntax, &ts.themes[\"base16-ocean.dark\"]);\nlet s = \"pub struct Wow { hi: u64 }\\nfn blah() -> u64 {}\";\nfor line in LinesWithEndings::from(s) {\n    let ranges: Vec<(Style, &str)> = h.highlight_line(line, &ps).unwrap();\n    let escaped = as_24_bit_terminal_escaped(&ranges[..], true);\n    print!(\"{}\", escaped);\n}\n```\n\n## Performance\n\nCurrently `syntect` is one of the faster syntax highlighting engines, but not the fastest. The following perf features are done:\n\n- [x] Pre-link references between languages (e.g `<script>` tags) so there are no tree traversal string lookups in the hot-path\n- [x] Compact binary representation of scopes to allow quickly passing and copying them around\n- [x] Determine if a scope is a prefix of another scope using bit manipulation in only a few instructions\n- [x] Cache regex matches to reduce number of times oniguruma is asked to search a line\n- [x] Accelerate scope lookups to reduce how much selector matching has to be done to highlight a list of scope operations\n- [x] Lazily compile regexes so startup time isn't taken compiling a thousand regexes for Actionscript that nobody will use\n- [ ] Optionally use the fancy-regex crate. Unfortunately this isn't yet faster than oniguruma on our benchmarks but it might be in the future.\n\nThe current perf numbers are below.\nThese numbers may get better if more of the things above are implemented, but they're better than many other text editors.\nAll measurements were taken on a mid 2012 15\" retina Macbook Pro, my new 2019 Macbook takes about 70% of these times.\n\n- Highlighting 9200 lines/247kb of jQuery 2.1 takes 600ms. For comparison:\n    - Textmate 2, Spacemacs and Visual Studio Code all take around 2ish seconds (measured by hand with a stopwatch, hence approximate).\n    - Atom takes 6 seconds\n    - Sublime Text 3 dev build takes `98ms` (highlighting only, takes `~200ms` click to pixels), despite having a super fancy javascript syntax definition.\n    - Vim is instantaneous but that isn't a fair comparison since vim's highlighting is far more basic than the other editors.\n      Compare [vim's grammar](https://github.com/vim/vim/blob/master/runtime/syntax/javascript.vim) to [Sublime's](https://github.com/sublimehq/Packages/blob/master/JavaScript/JavaScript.sublime-syntax).\n    - These comparisons aren't totally fair, except the one to Sublime Text since that is using the same theme and the same complex definition for ES6 syntax.\n- Simple syntaxes are faster, JS is one of the most complex.\n  It only takes 34ms to highlight a 1700 line 62kb XML file or 50,000 lines/sec.\n- `~138ms` to load and link all the syntax definitions in the default Sublime package set.\n    - but only `~23ms` to load and link all the syntax definitions from an internal pre-made binary dump with lazy regex compilation.\n- `~1.9ms` to parse and highlight the 30 line 791 character `testdata/highlight_test.erb` file. This works out to around 16,000 lines/second or 422 kilobytes/second.\n- `~250ms` end to end for `syncat` to start, load the definitions, highlight the test file and shut down.\n  This is mostly spent loading.\n\n## Feature Flags\n\nSyntect makes heavy use of [cargo features](http://doc.crates.io/manifest.html#the-features-section), to support users who require only a subset of functionality.\nIn particular, it is possible to use the highlighting component of syntect without the parser (for instance when hand-rolling a higher performance parser for a particular language), by adding `default-features = false` to the syntect entry in your `Cargo.toml`.\n\nFor more information on available features, see the features section in `Cargo.toml`.\n\n## Pure Rust `fancy-regex` mode, without `onig`\n\nSince 4.0 `syntect` offers an alternative pure-rust regex engine based on the [fancy-regex](https://github.com/fancy-regex/fancy-regex) engine which extends the awesome [regex crate](https://github.com/rust-lang/regex) with support for fancier regex features that Sublime syntaxes need like lookaheads.\n\nThe advantage of `fancy-regex` is that it does not require the [onig crate](https://github.com/rust-onig/rust-onig) which requires building and linking the Oniguruma C library. Many users experience difficulty building the `onig` crate, especially on Windows and Webassembly.\n\nAs far as our tests can tell this new engine is just as correct, but it hasn't been tested as extensively in production. It also currently seems to be about **half the speed** of the default Oniguruma engine, although further testing and optimization (perhaps by you!) may eventually see it surpass Oniguruma's speed and become the default.\n\nTo use the fancy-regex engine with syntect, add it to your `Cargo.toml` like so:\n\n```toml\nsyntect = { version = \"4.2\", default-features = false, features = [\"default-fancy\"]}\n```\n\nIf you want to run examples with the fancy-regex engine you can use a command line like the following:\n\n```bash\ncargo run --features default-fancy --no-default-features --release --example syncat testdata/highlight_test.erb\n```\n\nDue to the way Cargo features work, if any crate you depend on depends on `syntect` without enabling `fancy-regex` then you'll get the default `onig` mode.\n\n**Note:** The `fancy-regex` engine is *absurdly* slow in debug mode, because the regex engine (the main hot spot of highlighting) is now in Rust instead of C that's always built with optimizations. Consider using release mode or `onig` when testing.\n\n## Caching\n\nBecause `syntect`'s API exposes internal cacheable data structures, there is a caching strategy that text editors can use that allows the text on screen to be re-rendered instantaneously regardless of the file size when a change is made after the initial highlight.\n\nBasically, on the initial parse every 1000 lines or so copy the parse state into a side-buffer for that line.\nWhen a change is made to the text, because of the way Sublime Text grammars work (and languages in general), only the highlighting after that change can be affected.\nThus when a change is made to the text, search backwards in the parse state cache for the last state before the edit, then kick off a background task to start re-highlighting from there.\nOnce the background task highlights past the end of the current editor viewport, render the new changes and continue re-highlighting the rest of the file in the background.\n\nThis way from the time the edit happens to the time the new colouring gets rendered in the worst case only `999+length of viewport` lines must be re-highlighted.\nGiven the speed of `syntect` even with a long file and the most complicated syntax and theme this should take less than 100ms.\nThis is enough to re-highlight on every key-stroke of the world's fastest typist *in the worst possible case*.\nAnd you can reduce this asymptotically to the length of the viewport by caching parse states more often, at the cost of more memory.\n\nAny time the file is changed the latest cached state is found, the cache is cleared after that point, and a background job is started.\nAny already running jobs are stopped because they would be working on old state. This way you can just have one thread dedicated to highlighting that is always doing the most up-to-date work, or sleeping.\n\n## Parallelizing\n\nSince 3.0, `syntect` can be used to do parsing/highlighting in parallel.\n`SyntaxSet` is both `Send` and `Sync` and so can easily be used from multiple threads.\nIt is also `Clone`, which means you can construct a syntax set and then clone it to use for other threads if you prefer.\n\nCompared to older versions, there's nothing preventing the serialization of a `SyntaxSet` either.\nSo you can directly deserialize a fully linked `SyntaxSet` and start using it for parsing/highlighting.\nBefore, it was always necessary to do linking first.\n\nIt is worth mentioning that regex compilation is done lazily only when the regexes are actually needed.\nOnce a regex has been compiled, the compiled version is used for all threads after that.\nNote that this is done using interior mutability, so if multiple threads happen to encounter the same uncompiled regex at the same time, compiling might happen multiple times.\nAfter that, one of the compiled regexes will be used.\nWhen a `SyntaxSet` is cloned, the regexes in the cloned set will need to be recompiled currently.\n\nFor adding parallelism to a previously single-threaded program, the recommended thread pooling is [`rayon`](https://github.com/nikomatsakis/rayon).\nHowever, if you're working in an already-threaded context where there might be more threads than you want (such as writing a handler for an Iron request), the recommendation is to force all highlighting to be done within a fixed-size thread pool using [`rust-scoped-pool`](https://github.com/reem/rust-scoped-pool).\nAn example of the former is in `examples/parsyncat.rs`.\n\n## Examples Available\n\nThere's a number of examples of programs that use `syntect` in the `examples` folder and some code outside the repo:\n\n- `syncat` prints a highlighted file to the terminal using 24-bit colour ANSI escape codes.\n  It demonstrates a simple file highlighting workflow.\n- `synhtml` prints an HTML file that will display the highlighted code.\n  Demonstrates how syntect could be used by web servers and static site generators.\n- `synstats` collects a bunch of statistics about the code in a folder.\n  Includes basic things like line count but also fancier things like number of functions.\n  Demonstrates how `syntect` can be used for code analysis as well as highlighting, as well as how to use the APIs to parse out the semantic tokenization.\n- [`faiyels`](https://github.com/trishume/faiyels) is a little code minimap visualizer I wrote that uses `syntect` for highlighting.\n- `parsyncat` is like `syncat`, but accepts multiple files and highlights them in parallel.\n  It demonstrates how to use `syntect` from multiple threads.\n\nHere's that stats that `synstats` extracts from `syntect`'s codebase (not including examples and test data) as of [this commit](https://github.com/trishume/syntect/commit/10baa6888f84ea4ae35c746526302a8ff4956eb1):\n\n```text\n################## Stats ###################\nFile count:                               19\nTotal characters:                     155504\n\nFunction count:                          165\nType count (structs, enums, classes):     64\n\nCode lines (traditional SLOC):          2960\nTotal lines (w/ comments & blanks):     4011\nComment lines (comment but no code):     736\nBlank lines (lines-blank-comment):       315\n\nLines with a documentation comment:      646\nTotal words written in doc comments:    4734\nTotal words written in all comments:    5145\nCharacters of comment:                 41099\n```\n\n## Projects using Syntect\n\nBelow is a list of projects using Syntect, in approximate order by how long they've been using `syntect` (feel free to send PRs to add to this list):\n\n- [bat](https://github.com/sharkdp/bat), a `cat(1)` clone, uses `syntect` for syntax highlighting.\n- [Bolt](https://github.com/hiro-codes/bolt), a desktop application for building and testing APIs, uses `syntect` for syntax highlighting. \n- [catmark](https://github.com/bestouff/catmark), a console markdown printer, uses `syntect` for code blocks.\n- [Cobalt](https://github.com/cobalt-org/cobalt.rs), a static site generator that uses `syntect` for highlighting code snippets.\n- [crowbook](https://github.com/lise-henry/crowbook), a Markdown book generator, uses `syntect` for code blocks.\n- [delta](https://github.com/dandavison/delta), a syntax-highlighting pager for Git.\n- [Docket](https://github.com/iwillspeak/docket), a documentation site generator that uses `syntect` for highlighting.\n- [hors](https://github.com/WindSoilder/hors), instant coding answers via command line, uses `syntect` for highlighting code blocks.\n- [mdcat](https://github.com/lunaryorn/mdcat), a console markdown printer, uses `syntect` for code blocks.\n- [Scribe](https://github.com/jmacdonald/scribe), a Rust text editor framework which uses `syntect` for highlighting.\n- [syntect_server](https://github.com/sourcegraph/syntect_server), an HTTP server for syntax highlighting.\n- [tokio-cassandra](https://github.com/nhellwig/tokio-cassandra), CQL shell in Rust, uses `syntect` for shell colouring.\n- [xi-editor](https://github.com/google/xi-editor), a text editor in Rust which uses `syntect` for highlighting.\n- [Zola](https://github.com/getzola/zola), a static site generator that uses `syntect` for highlighting code snippets.\n- [The Way](https://github.com/out-of-cheese-error/the-way), a code snippets manager for your terminal that uses `syntect`for highlighting.\n- [Broot](https://github.com/Canop/broot), a terminal file manager, uses `syntect` for file previews.\n- [Rusty Slider](https://ollej.github.io/rusty-slider/), a markdown slideshow presentation application, uses `syntect` for code blocks.\n- [Typst](https://github.com/typst/typst), a typesetting system and LaTeX alternative, uses `syntect` for highlighting code blocks.\n- [bingus-blog](https://git.slonk.ing/slonk/bingus-blog), a blog software written in Rust, uses `syntect` for fenced code blocks.\n- [BugStalker](https://github.com/godzie44/BugStalker/), modern debugger for Linux x86-64. Written in Rust for Rust programs.\n- [Yazi](https://github.com/sxyazi/yazi), blazing fast terminal file manager based on async I/O, uses `syntect` for text file previews.\n- [CodeSnap.nvim](https://github.com/mistricky/codesnap.nvim), snapshot plugin for Neovim, that uses `syntect` for code syntax highlighting.\n\n\n## License and Acknowledgements\n\nThanks to [Robin Stocker](https://github.com/robinst), [Keith Hall](https://github.com/keith-hall) and [Martin Nordholts](https://github.com/Enselic) for making awesome substantial contributions of the most important impressive improvements `syntect` has had post-`v1.0`!\nThey deserve lots of credit for where `syntect` is today. For example @robinst implemented [fancy-regex support](https://github.com/trishume/syntect/pull/270) and [a massive refactor](https://github.com/trishume/syntect/pull/182) to enable parallel highlighting using an arena. @keith-hall found and fixed many bugs and [implemented Sublime syntax test support](https://github.com/trishume/syntect/pull/44).\n\nThanks to [Textmate 2](https://github.com/textmate/textmate) and @defuz's [sublimate](https://github.com/defuz/sublimate) for the existing open source code I used as inspiration and in the case of sublimate's `tmTheme` loader, copy-pasted.\nAll code (including defuz's sublimate code) is released under the MIT license.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0703125,
          "content": "# Make codecov not add verbose comments to pull requests\ncomment: false\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}