{
  "metadata": {
    "timestamp": 1736709012185,
    "page": 84,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ivanceras/svgbob",
      "stars": 3926,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0859375,
          "content": "target/\n*.sw*\n*.bk\n.DS_Store\npublic/\nparts/\nprime/\nsnap/\n**/out/*\nstage/\n*.snap*\n*.tar*\n"
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.078125,
          "content": "language: rust\nrust:\n- nightly\n\nscript:\n- cd svgbob \n- cargo build\n- cargo test\n"
        },
        {
          "name": "Architecture.md",
          "type": "blob",
          "size": 28.83203125,
          "content": "# Svgbob Architecture and Design phases\n\nSvgbob creates an svg drawing based on the input ascii art diagrams.\nIt achieves this by creating a corresponding fragment for each character, and then this little fragments\nare then merged to form lines and arcs. The lines and arcs are then endorsed into high level shapes such as rect, circles.\n\n### Name inspiration:\n- svg for svg document and drawing.\n- bob for Alice and Bob as common characters in most diagrams\n   Bob Ross - a painter who like to draws happy little trees.\n\n### Library used\n- [nalgebra](https://www.nalgebra.org/) and [parry2d](https://parry.rs/) for geometric function calculations such as calculating whether lines are intersecting, collinear. Computing the clipping of lines and boxes.\n- [pom](https://github.com/J-F-Liu/pom) for parsing the styling directives(Legend) at the bottom of the document\n- [sauron](https://github.com/ivanceras/sauron) for building the svg document object tree.\n\n\n### **Iterations, re-architecture rewrites**\n\n####  Phase 1\nExploding if statements. This was in elm\n   [fullcode](https://github.com/ivanceras/elm-examples/blob/master/elm-bot-lines/Grid.elm)\n\n```elm\ngetElement x y model =\n    let\n        char = get x y model\n    in\n        case char of\n            Just char ->\n                if isVertical char\n                    && not (isNeighbor left isAlphaNumeric)\n                    && not (isNeighbor right isAlphaNumeric) then\n                    Just Vertical\n                else if isHorizontal char\n                    && not (isNeighbor left isAlphaNumeric)\n                    && not (isNeighbor right isAlphaNumeric) then\n                    Just Horizontal\n                else if isIntersection char then\n                    let\n                        isVerticalJunctionLeft =\n                            isNeighbor top isVertical\n                            && isNeighbor(bottomOf  x y model) isVertical\n                            && isNeighbor(leftOf  x y model) isHorizontal\n\n                        isVerticalJunctionRight =\n                            isNeighbor top isVertical\n                            && isNeighbor bottom isVertical\n                            && isNeighbor right isHorizontal\n\n                        isHorizontalJunctionTop =\n                            isNeighbor left isHorizontal\n                            && isNeighbor right isHorizontal\n                            && isNeighbor top isVertical\n\n                        isHorizontalJunctionBot =\n                            isNeighbor left isHorizontal\n                            && isNeighbor right isHorizontal\n                             && isNeighbor bottom isVertical\n\n                        isTopLeftIntersection =\n                            isNeighbor bottom isVertical && isNeighbor right isHorizontal\n\n                        isTopRightIntersection =\n                            isNeighbor bottom isVertical && isNeighbor left isHorizontal\n\n                        isBottomRightIntersection =\n                            isNeighbor top isVertical && isNeighbor left isHorizontal\n\n                        isBottomLeftIntersection =\n                            isNeighbor top isVertical && isNeighbor right isHorizontal\n\n                        isCrossIntersection =\n                            isNeighbor top isVertical\n                            && isNeighbor bottom isVertical\n                            && isNeighbor left isHorizontal\n                            && isNeighbor right isHorizontal\n\n    ...  200 more lines...\n\n```\nThough elm is fast, but if you throw a lot of conditional branching to it, it will slow it down.\nAt least I don't get to have runtime errors here if it was written in js.\nAdding an edgecase is just appending a new if else statement at the bottom of the statements.\n\n**Pros:** Very simple design. Just if statements and return the appropriate shape the character will take form\n    Adding edge case behaviour is just appending an `else if` to the nearest conditional(`if`) behavior.\n\n**Caveats:** The fragments/drawing elements are named. Naming is hard, we can not name all of them. Consistency is broken.\n\n\n\n\n#### Phase2:\nNow in rust. The character behavior is stored in a `Vec<(condition, drawing_elements)>`\nThis is already close to the current architecture.\n\n  **Improvements:**\n   - Runs a lot faster than elm. Converting the code from elm to rust, accelerate my learning of the usage of functional programming in rust.\n   - Consumed elements, if certain group of elements matches a higher level shapes, those elements are consumed/remove from the grid to\n   avoid generating additional drawing elements when iterated with the rest of the characters in the grid.\n\n\n```rust\n    //get the paths in the location x,y\n    //if non path, then see if it can return a text path\n    fn get_elements(&self, x:isize, y:isize, settings: &Settings) -> Option<Vec<Element>>{\n        ...\n        //common path lines\n        let vertical = Element::solid_line(center_top, center_bottom);\n        let horizontal = Element::solid_line(mid_left, mid_right);\n        let slant_left = Element::solid_line(high_left, low_right);\n        let slant_right = Element::solid_line(low_left, high_right);\n        let low_horizontal = Element::solid_line(low_left, low_right);\n\n\n        let match_list: Vec<(bool, Vec<Element>)> =\n            vec![\n                /*\n                      .-\n                      |\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(bottom, is_vertical),\n                 vec![cxdy_cxey.clone(), arc_excy_cxdy.clone()]\n                ),\n                /*\n                      -.\n                       |\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(bottom, is_vertical),\n                 vec![cxdy_cxey.clone(), arc_cxdy_axcy.clone()]\n                ),\n                /*\n                     |\n                     '-\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(top, is_vertical),\n                 vec![cxay_cxby.clone(), arc_cxby_excy.clone()]\n                ),\n                /*\n                     |\n                    -'\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(top, is_vertical),\n                 vec![cxay_cxby.clone(), arc_axcy_cxby.clone()]\n                ),\n                /*\n                    .-\n                   /\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(bottom_left, is_slant_right),\n                 vec![axey_bxdy.clone(), arc_excy_bxdy.clone()]\n                ),\n                /*\n                   -.\n                     \\\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(bottom_right, is_slant_left),\n                 vec![exey_dxdy.clone(), arc_dxdy_axcy.clone()]\n                ),\n                /*\n                   -.\n                   /\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(bottom_left, is_slant_right),\n                 vec![axey_bxdy.clone(), arc_bxdy_axcy.clone()]\n                ),\n                /*\n                   .-\n                    \\\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(bottom_right, is_slant_left),\n                 vec![exey_dxdy.clone(), arc_excy_dxdy.clone()]\n                ),\n                /*\n                   \\\n                    '-\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(top_left, is_slant_left),\n                 vec![axay_bxby.clone(), arc_bxby_excy.clone()]\n                ),\n                /*\n                     /\n                    '-\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(right, is_horizontal)\n                 && self.is_char(top_right, is_slant_right),\n                 vec![dxby_exay.clone(), arc_dxby_excy.clone()]\n                ),\n                /*\n                    \\\n                    -'\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(top_left, is_slant_left),\n                 vec![axay_bxby.clone(), arc_axcy_bxby.clone()]\n                ),\n                /*\n                      /\n                    -'\n                */\n                (self.is_char(this, is_round)\n                 && self.is_char(left, is_horizontal)\n                 && self.is_char(top_right, is_slant_right),\n                 vec![dxby_exay.clone(), arc_axcy_dxby.clone()]\n                ),\n            ]\n```\n\n```rust\n\n        // Circle 12\n        //        _\n        //      .' '.\n        //     (  +  )\n        //      `._.'\n        if self.in_left(3).is('(')\n            && self.in_right(3).is(')')\n            && self.in_top(2).is('_')\n            && self.bottom().is('_')\n            && self.top().in_left(2).any(\",.\")\n            && self.top_left().is('\\'')\n            && self.top_right().any(\"`'\")\n            && self.top().in_right(2).is('.')\n            && self.bottom().in_left(2).any(\"`'\")\n            && self.bottom_left().is('.')\n            && self.bottom_right().any(\".,\")\n            && self.bottom().in_right(2).is('\\'')\n        {\n            elm.push(open_circle(m, 12));\n            consumed.extend(vec![\n                left3(),\n                right3(),\n                top2(),\n                bottom(),\n                top_left2(),\n                top_left(),\n                top_right(),\n                top_right2(),\n                bottom_left2(),\n                bottom_left(),\n                bottom_right(),\n                bottom_right2(),\n            ]);\n        }\n```\n**Caveats:**\n    - Merging of small fragments requires checking against all the other fragments of the entire grid. Runtime complexity is at least O(n^2)\n    - Endorsing to shapes requires a lot of if statement comparisons and every cell is checked even for cell that has only a few elements that couldn't form into a certain shapes is tested.\n    - Processing high level stage and low level fragment stage is one execution.\n    - Drawing elements are still named.\n\n\n\n\n#### Phase 3:\nAttempts to add a signal strength to characters depending on their\nneighboring character whether they should connect or not. This makes the dynamic behavior flexible\nbut the control flow is not very intuitive.\n\n - Strong + Strong should connect\n - Medium + Medium connects\n - Medium + Weak may connect\n - Weak + Weak should not connect.\n\n```rust\n\n    /// get the characteristic of a character\n    /// it's behavior and the intended behavior\n    ///\n    ///    ┌─┬─┬─┬─┬─┐\n    ///    │a│b│c│d│e│\n    ///    ├─┼─┼─┼─┼─┤\n    ///    │f│g│h│i│j│\n    ///    ├─┼─┼─┼─┼─┤\n    ///    │k│l│m│n│o│\n    ///    ├─┼─┼─┼─┼─┤\n    ///    │p│q│r│s│t│\n    ///    ├─┼─┼─┼─┼─┤\n    ///    │u│v│w│x│y│\n    ///    └─┴─┴─┴─┴─┘\n    ///\n    fn get_characteristic(&self) -> Option<Characteristic> {\n        ///////////////////////////\n        //\n        // ., dot or period and comma\n        //\n        ///////////////////////////\n        if self.any(\".,\") {\n            Some(Characteristic {\n                is_static: false,\n                intensify: vec![\n                    //  -.  +.\n                    (\n                        K,\n                        Condition {\n                            loc: left(),\n                            can: ConnectTo(O, Medium),\n                        },\n                    ),\n                    //  .-  .+\n                    (\n                        O,\n                        Condition {\n                            loc: right(),\n                            can: ConnectTo(K, Medium),\n                        },\n                    ),\n                    //  _.\n                    (\n                        U,\n                        Condition {\n                            loc: left(),\n                            can: ConnectTo(Y, Strong),\n                        },\n                    ),\n                    //  ._\n                    (\n                        Y,\n                        Condition {\n                            loc: right(),\n                            can: ConnectTo(U, Strong),\n                        },\n                    ),\n                    //      .\n                    //     /\n                    (\n                        U,\n                        Condition {\n                            loc: bottom_left(),\n                            can: ConnectTo(E, Strong),\n                        },\n                    ),\n                    //      /    only for / else   _\n                    //     .                        .   will connect\n                    (\n                        E,\n                        Condition {\n                            loc: top_right(),\n                            can: IsStrongAll(vec![E, U]),\n                        },\n                    ),\n                    //      .\n                    //       \\\n                    (\n                        Y,\n                        Condition {\n                            loc: bottom_right(),\n                            can: ConnectTo(A, Strong),\n                        },\n                    ),\n                    ...\n                ],\n                intended_behavior: vec![\n                    //     .-\n                    //    /\n                    (vec![O, U], vec![arc(o, q, 4), line(q, u)]),\n                    //     .-\n                    //      \\\n                    (vec![O, Y], vec![arc(o, s, 4), line(s, y)]),\n                    //     -.\n                    //       \\\n                    (vec![K, Y], vec![arc(s, k, 4), line(s, y)]),\n                    //     -.\n                    //     /\n                    (vec![K, U], vec![line(u, q), arc(q, k, 2)]),\n                    //       /\n                    //      .\n                    //     /\n                    (vec![U, E], vec![line(u, e)]),\n                    //     \\\n                    //      .\n                    //       \\\n                    ...\n                ],\n                properties: vec![\n                    (O, Weak, vec![arc(o, r, 2)]),\n                    (K, Weak, vec![arc(r, k, 2)]),\n                    (W, Medium, vec![line(r, w)]),\n                    (U, Weak, vec![line(q, u)]),\n                    (Y, Weak, vec![line(s, y)]),\n                    (A, Weak, vec![line(m, a)]),\n                    (E, Weak, vec![line(m, e)]),\n                    (F, Weak, vec![line(m, f)]),\n                    (J, Weak, vec![line(m, j)]),\n                ],\n            })\n        }\n```\n\n**Pros:**\n - Characters are assigned with certain properties. This allows similar characters such as dash(-) and line drawing (-) to have the same behavior\n     without explicitly coding for each of those variations.\n\n\n#### Phase 4.\n\n**Improvements:**\n- Uses of Buffers\n   - StringBuffer, input strings are slices into rows and columns\n   - CellBuffer, which cells contains which character.\n   - FragmentBuffer, which cell contains what fragments(drawing elements)\n   - PropertyBuffer, what is the property of each cell based on the the character it contains.\n\nPropertyBuffer is calculated only once for each character, so the succeeding lookup should not waste execution time to recompute.\n\n\n**How the fragments are conceived based on a character?**\n\n**Neighbor character:** There are 8 neighbors of a character and each character on the input is checked against this 8 neighbor for appropriate drawing element\n\n```bob\n  +---------+  +------+  +--------+\n  |  TopLeft|  | Top  |  |TopRight|\n  +---------+  +------+  +--------+\n  +---------+  +------+  +--------+\n  |  Left   |  |(char)|  | Right  |\n  +---------+  +------+  +--------+\n +----------+  +------+  +-----------+\n |BottomLeft|  |Bottom|  |BottomRight|\n +----------+  +------+  +-----------+\n```\n\n**Character Grid:** a 5x5 grid which covers the most significant points for a character to be converted into drawing elements.\n\nCharacter grid: / is the line connecting E to U. Dash is connecting K to O, etc.\n```bob\n\n  0 1 2 3 4           B C D\n 0┌─┬─┬─┬─┐        A┌─┬─┬─┬─┐E\n 1├─┼─┼─┼─┤         │ │ │ │ │\n 2├─┼─┼─┼─┤        F├─G─H─I─┤J\n 3├─┼─┼─┼─┤         │ │ │ │ │\n 4├─┼─┼─┼─┤        K├─L─M─N─┤O\n 5├─┼─┼─┼─┤         │ │ │ │ │\n 6├─┼─┼─┼─┤        P├─Q─R─S─┤T\n 7├─┼─┼─┼─┤         │ │ │ │ │\n 8└─┴─┴─┴─┘        U└─┴─┴─┴─┘Y\n                      V W X\n\n```\nThese fragments are processed such as merging collinear lines that are touching their endpoints.\n\n```bob\n\n+--------------+        +------------+         +----------------+          +-----------------+\n| StringBuffer |------> | CellBuffer |-------->| FragmentBuffer |--------->|   Svg drawing   |\n+--------------+        +------------+         +----------------+          +-----------------+\n                              \\                                                           ^\n                               \\    +-------+                                            /\n                                `-->| Spans |                                           /\n                                    +-------+                                          /\n                                      \\                                               /\n                                       \\    +---------------+    .----------------.  /\n                                        `-->|Contact groups |---/ endorse shapes /--'\n                                            +---------------+  '----------------'\n```\n\n- **Optimizations.**\n    - Usage of span and contact groups.\n       Span group together that are neighbors. Contact groups group together fragments\n       that are touching together. Cells don't need to be checked against other cells\n       when they are far from each other. Merging of fragments such as lines into longer\n       lines needs to interact only elements that are within its group.\n- Endorsing group of fragments into higher level shapes.\n    - rect, rounded rect, circles, arcs are higher level shapes that are from small fragment components: arc,lines,\n\n- **Tagging shapes.**\n    Text inside of a shape with the pattern \"{\", <ident> \"}\" will become a tag of the enclosing shape.\n    At the DOM level, the shape is an svg dom element such as: rect,circle,path and the tag is the element `class`\n    which you can use css to apply a style to the element. The legend part at the bottom of the document is parsed\n    and converted into css which is then appended to the svg document.\n\n```rust\n\n    ///\n    ///      0 1 2 3 4           B C D\n    ///     0┌─┬─┬─┬─┐        A┌─┬─┬─┬─┐E\n    ///     1├─┼─┼─┼─┤         │ │ │ │ │\n    ///     2├─┼─┼─┼─┤        F├─G─H─I─┤J\n    ///     3├─┼─┼─┼─┤         │ │ │ │ │\n    ///     4├─┼─┼─┼─┤        K├─L─M─N─┤O\n    ///     5├─┼─┼─┼─┤         │ │ │ │ │\n    ///     6├─┼─┼─┼─┤        P├─Q─R─S─┤T\n    ///     7├─┼─┼─┼─┤         │ │ │ │ │\n    ///     8└─┴─┴─┴─┘        U└─┴─┴─┴─┘Y\n    ///                          V W X\n    pub static ref ASCII_PROPERTIES: BTreeMap<char, Property> = {\n\n            ...\n\n            vec![\n\n            //////////////////////\n            // dot period .\n            //////////////////////\n            (\n                '.',\n                vec![\n                    (Medium, vec![line(m,w)]), // connects down\n                    (Weak, vec![line(m,k)]), // connects left\n                    (Weak, vec![line(m,o)]), // connects right\n                ],\n                Arc::new(\n                        move|top_left, top, top_right, left, right, bottom_left, bottom, bottom_right| {\n                        vec![\n                            // .\n                            // |\n                            (bottom.line_strongly_overlap(c,h), vec![line(r,w)]),\n                            //   .\n                            //  / \\\n                            (bottom_left.line_strongly_overlap(e,i) && bottom_right.line_strongly_overlap(a,g), vec![line(m,u), line(m,y)]),\n                            //  .-\n                            //  |\n                            (right.line_overlap(k,l) && bottom.line_overlap(c,h), vec![arc(o,r,unit2), line(r,w)]),\n                            //   .-\n                            //  |\n                            (right.line_overlap(k,l) && bottom_left.line_overlap(c,h), vec![arc(m,cell.bottom_left().c(),unit4), line(m,o)]),\n                            // -.\n                            //  |\n                            (left.line_overlap(n,o) && bottom.line_overlap(c,h), vec![arc(r,k,unit2), line(r,w)]),\n                            // -.\n                            //   |\n                            //  exemption that bottom right is not a backquote\n                            (!bottom_right.is('`') && left.line_overlap(n,o) && bottom_right.line_overlap(c,h), vec![arc(cell.bottom_right().c(),m,unit4), line(k,m)]),\n                            //     .-\n                            //    /\n                            (right.line_overlap(k,l) && bottom_left.line_overlap(e,i), vec![arc(o, q, unit4), line(q, u)]),\n                            //     .-\n                            //      \\\n                            (right.line_overlap(k,l) && bottom_right.line_overlap(a,g) , vec![arc(o, s, between1_2), line(s, y)]),\n                            //     -.\n                            //       \\\n                            (left.line_overlap(n,o) && bottom_right.line_overlap(a,g), vec![arc(s, k, unit4), line(s, y)]),\n                            //     -.\n                            //     /\n                            (left.line_overlap(n,o) && bottom_left.line_overlap(e,i), vec![arc(q, k, between1_2), line(u, q)]),\n\n                            ...\n                        ]}\n                    )\n            ),\n```\n\n#### **Endorse to higher level shapes**\n\n```rust\n\n    /// First phase of endorsing to shapes, in this case, rects and rounded_rects\n    ///\n    /// This function is calling on endorse methods that is applicable\n    /// to fragments that are touching, to be promoted to a shape.\n    /// These includes: rect, roundedrect,\n    fn endorse_rects(groups: Vec<Contacts>) -> (Vec<Fragment>, Vec<Contacts>) {\n        let mut fragments = vec![];\n        let mut un_endorsed_rect: Vec<Contacts> = vec![];\n        for group in groups {\n            if let Some(fragment) = is_rect(group) {\n                fragments.push(fragment);\n            } else {\n                un_endorsed_rect.push(group);\n            }\n        }\n        (fragments, un_endorsed_rect)\n    }\n\n    ...\n\n    /// group of fragments can be check if they form:\n    /// - rectangle\n    fn is_rect(fragments: &Vec<Fragment>) -> bool {\n        if fragments.len() == 4 {\n            let parallels = parallel_aabb_group(fragments);\n            if parallels.len() == 2 {\n                let (a1, a2) = parallels[0];\n                let (b1, b2) = parallels[1];\n                let line_a1 = fragments[a1].as_line();\n                let line_b1 = fragments[b1].as_line();\n                let line_a2 = fragments[a2].as_line();\n                let line_b2 = fragments[b2].as_line();\n                line_a1.is_touching_aabb_perpendicular(line_b1)\n                    && line_a2.is_touching_aabb_perpendicular(line_b2)\n            } else {\n                false\n            }\n        } else {\n            false\n        }\n    }\n\n    ...\n\n    /// [X](Done) TODO: search only the subset of contacts that matches the circle.\n    /// if it is a subset then the circle is matched and the non-matching ones are returned\n    pub fn endorse_circle(search: &Vec<Contacts>) -> Option<(&Circle, Vec<usize>)> {\n        FRAGMENTS_CIRCLE.iter().rev().find_map(|(contacts, circle)| {\n            let (matched, unmatched) = is_subset_of(contacts, search);\n            if matched { Some((circle, unmatched)) } else { None }\n        })\n    }\n\n    ...\n\n    /// This function is calling on endorse algorithm on fragments that\n    /// are neighbors, but not necessarily touching to be promoted to a shape.\n    /// These includes: circle, arc, and line with arrow heads.\n    fn endorse_circles_and_arcs(groups: Vec<Contacts>) -> (Vec<Fragment>, Vec<Contacts>) {\n        let mut fragments = vec![];\n        let mut un_endorsed_circles: Vec<Contacts> = vec![];\n        if let Some((circle, unmatched)) = circle_map::endorse_circle(&groups) {\n            fragments.push(circle.clone().into());\n            for um in unmatched {\n                un_endorsed_circles.push(groups[um].clone());\n            }\n        } else if let Some(arc) = circle_map::endorse_arc(&groups) {\n            fragments.push(arc.clone().into());\n        } else {\n            un_endorsed_circles.extend(groups)\n        }\n        (fragments, un_endorsed_circles)\n    }\n```\n\n```rust\n\n    //   ascii art,  Center Cell, Center Point, radius\n    pub static ref CIRCLE_MAP: Vec<(&'static str, Cell, Point, f32)> =\n        vec![\n            // CIRCLE_1\n            //center 0,0,o, radius = 0.5\n            (r#\"\n            ()\n            \"#, Cell::new(0,0), Cell::new(0,0).o(), 0.5),\n\n            ...\n\n            // CIRCLE_4\n            //center: 2,1,m radius: 2.0\n            (r#\"\n             ,-.\n            (   )\n             `-'\n            \"#, Cell::new(2,1), Cell::new(2,1).m(), 2.0),\n\n\n            // CIRCLE_12\n            //center:6,3,m radius: 6.0\n            (r#\"\n                _____\n              ,'     `.\n             /         \\\n            (           )\n             \\         /\n              `._____.'\n            \"#, Cell::new(6,3), Cell::new(6,3).m(), 6.0),\n\n            // CIRCLE_17\n            //center: 8,4,o radius: 8.5\n            (r#\"\n                .--------.\n              ,'          `.\n             /              \\\n            |                |\n            |                |\n            |                |\n             \\              /\n              `.          .'\n                `--------'\n            \"#, Cell::new(8,4), Cell::new(8,4).o(), 8.5),\n\n\n            ...\n\n            // CIRCLE_20\n            // center: 10,5,m radius: 10\n            (r#\"\n                _.-'''''''-._\n              ,'             `.\n             /                 \\\n            .                   .\n            |                   |\n            |                   |\n            |                   |\n             \\                 /\n              `._           _.'\n                 '-.......-'\n            \"#, Cell::new(10,5), Cell::new(10,5).m(), 10.0),\n        ];\n\n```\n\n#### Flexibility:\n- Adding behaviours and edge-cases is still simple\n- Due to the grouping of spans and contacts, it is now more efficient to check whether a combination\n    of fragments can be endorsed into a high level shapes.\n- Behavior can be coded according to the properties of their neighboring characters,\n    and/or can also specify that a neighbor should match a specific character. (ie: neighboring character top should be a caret `^`, then this is the behavior)\n\n#### Modular:\n-  Adding more shapes it can endorse to, such as in the circle map is merely putting the ascii art\nto right next to the existing ones, as oppused to the multiple if-statements in Phase 2\n- Adding endorse code to certain shapes is merely describing the filter rules on the combination of the fragments\n\n#### Extensiblity:\n- Since the new architecture is now implemented through the use of Buffers. It opens to a lot of possible improvements.\n- Shapes are now properly endorsed, which can be styled with css standard. Which means, users can add crazy css-animation to the shapes.\n- Making the cell buffer as a canvas. Meaning you can draw lines and shapes on it, while the system will try to match\n    the closest character appropriate to the input shape. A possibility of generating an ascii drawing from svg diagrams.\n    The reverse of the functionality of svgbob.\n\n#### Adaption of svgbob\n- As archlinux [package](https://aur.archlinux.org/packages/svgbob-git/)\n- As diagram module for [asciidoctor](https://asciidoctor.org/docs/asciidoctor-diagram/)\n- [Asciigrid](https://gitlab.com/mbarkhau/asciigrid/)\n- [kroki.io](https://kroki.io/)\n\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 38.443359375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45862d1c77f2228b9e10bc609d5bc203d86ebc9b87ad8d5d5167a6c9abf739d9\"\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"axum\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf\"\ndependencies = [\n \"async-trait\",\n \"axum-core\",\n \"bitflags 1.3.2\",\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"itoa\",\n \"matchit\",\n \"memchr\",\n \"mime\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustversion\",\n \"serde\",\n \"serde_json\",\n \"serde_path_to_error\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"tokio\",\n \"tower\",\n \"tower-layer\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"axum-core\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c\"\ndependencies = [\n \"async-trait\",\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"mime\",\n \"rustversion\",\n \"tower-layer\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a68f1f47cdf0ec8ee4b941b2eee2a80cb796db73118c0dd09ac63fbe405be22\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8334215b81e418a0a7bdb8ef0849474f40bb10c8b71f1c4ed315cff49f32494d\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags 1.3.2\",\n \"strsim\",\n \"textwrap\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"derive-where\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62d671cc41a825ebabc75757b62d3d168c577f9149b2d49ece1dad1f72119d25\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"downcast-rs\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75b325c5dbd37f80359721ad39aca5a29fb04c89279657cffdda8736d0c0b9d2\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a9bfc1af68b1726ea47d3d5109de126281def866b33970e10fbab11b5dafab3\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"http\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\"\ndependencies = [\n \"bytes\",\n \"http\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"hyper\"\nversion = \"0.14.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c08302e8fa335b151b788c775ff56e7a03ae64ff85c548ee820fecb70356e85\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n \"want\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.1\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"433bfe06b8c75da9b2e3fbea6e5329ff87748f0b144ef75306e674c3f6f7c13f\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8355be11b20d696c8f18f6cc018c4e372165b1fa8126cef092399c9951984ffa\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"longest-increasing-subsequence\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3bd0dd2cd90571056fdb71f6275fada10131182f84899f4b2a916e565d81d86\"\n\n[[package]]\nname = \"matchit\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94\"\n\n[[package]]\nname = \"matrixmultiply\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9380b911e3e96d10c1f415da0876389aaf1b56759054eeb0de7df940c456ba1a\"\ndependencies = [\n \"autocfg\",\n \"rawpointer\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"wasi\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"nalgebra\"\nversion = \"0.32.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5c17de023a86f59ed79891b2e5d5a94c705dbe904a5b5c9c952ea6221b03e4\"\ndependencies = [\n \"approx\",\n \"matrixmultiply\",\n \"nalgebra-macros\",\n \"num-complex\",\n \"num-rational\",\n \"num-traits\",\n \"simba\",\n \"typenum\",\n]\n\n[[package]]\nname = \"nalgebra-macros\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"254a5372af8fc138e36684761d3c0cdb758a4410e938babcff1c860ce14ddbfc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-derive\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"parry2d\"\nversion = \"0.13.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fd94bf962ead112f14223469aac6f76e3c24e2c399e348f638924498b238c56\"\ndependencies = [\n \"approx\",\n \"arrayvec\",\n \"bitflags 1.3.2\",\n \"downcast-rs\",\n \"either\",\n \"nalgebra\",\n \"num-derive\",\n \"num-traits\",\n \"rustc-hash\",\n \"simba\",\n \"slab\",\n \"smallvec\",\n \"spade\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_macros\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_macros\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3444646e286606587e49f3bcf1679b8cef1dc2c5ecc29ddacaffc305180d464b\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be57f64e946e500c8ee36ef6331845d40a93055567ec57e8fae13efd33759b95\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c0f5fad0874fc7abcd4d750e76917eaebbecaa2c20bde22e1dbeeba8beb758c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pom\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c972d8f86e943ad532d0b04e8965a749ad1d18bb981a9c7b3ae72fe7fd7744b\"\ndependencies = [\n \"bstr\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proc-macro2-diagnostics\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af066a9c399a26e020ada66a034357a868728e72cd426f3adcd35f80d88d88c8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"version_check\",\n \"yansi\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\n\n[[package]]\nname = \"rawpointer\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60a357793950651c4ed0f3f52338f53b2f809f32d83a07f72909fa13e4c6c1e3\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\n\n[[package]]\nname = \"robust\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf4a6aa5f6d6888f39e980649f3ad6b666acdce1d78e95b8a2cb076e687ae30\"\n\n[[package]]\nname = \"rstml\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe542870b8f59dd45ad11d382e5339c9a1047cde059be136a7016095bbdefa77\"\ndependencies = [\n \"proc-macro2\",\n \"proc-macro2-diagnostics\",\n \"quote\",\n \"syn\",\n \"syn_derive\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"safe_arch\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3460605018fdc9612bce72735cba0d27efbcd9904780d44c7e3a9948f96148a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"sauron\"\nversion = \"0.61.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ae1e6099fdd837e98f78b1365637aaf81e737a9441058b0c6a5f7cb1ec69f21\"\ndependencies = [\n \"sauron-core\",\n \"sauron-macro\",\n]\n\n[[package]]\nname = \"sauron-core\"\nversion = \"0.61.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af4146cee7056509846bad75dc3ee5d49af3eb22725723a2ebada4977a309888\"\ndependencies = [\n \"cfg-if\",\n \"derive-where\",\n \"doc-comment\",\n \"futures\",\n \"indexmap\",\n \"js-sys\",\n \"log\",\n \"longest-increasing-subsequence\",\n \"once_cell\",\n \"phf\",\n \"serde-wasm-bindgen\",\n \"thiserror\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"sauron-macro\"\nversion = \"0.61.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd37ab91758f25ea92a216dfed0e2f9103bdf7357d3af148b744cb8941e19d28\"\ndependencies = [\n \"once_cell\",\n \"phf\",\n \"proc-macro2\",\n \"quote\",\n \"rstml\",\n \"sauron-core\",\n \"syn\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-wasm-bindgen\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3b143e2833c57ab9ad3ea280d21fd34e285a42837aeb0ee301f4f41890fa00e\"\ndependencies = [\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.133\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fceb2473b9166b2294ef05efcb65a3db80803f0b03ef86a5fc88a2b85ee377\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_path_to_error\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af99884400da37c88f5e9146b7f1fd0fbcae8f6eec4e9da38b67d05486f814a6\"\ndependencies = [\n \"itoa\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simba\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"061507c94fc6ab4ba1c9a0305018408e312e17c041eb63bef8aa726fa33aceae\"\ndependencies = [\n \"approx\",\n \"num-complex\",\n \"num-traits\",\n \"paste\",\n \"wide\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"spade\"\nversion = \"2.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93f5ef1f863aca7d1d7dda7ccfc36a0a4279bd6d3c375176e5e0712e25cb4889\"\ndependencies = [\n \"hashbrown 0.14.5\",\n \"num-traits\",\n \"robust\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"svgbob\"\nversion = \"0.7.3\"\ndependencies = [\n \"indexmap\",\n \"itertools\",\n \"log\",\n \"nalgebra\",\n \"once_cell\",\n \"parry2d\",\n \"pom\",\n \"sauron\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"svgbob_cli\"\nversion = \"0.7.3\"\ndependencies = [\n \"clap\",\n \"svgbob\",\n]\n\n[[package]]\nname = \"svgbob_server\"\nversion = \"0.7.3\"\ndependencies = [\n \"axum\",\n \"svgbob\",\n \"tokio\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn_derive\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1329189c02ff984e9736652b1631330da25eaa6bc639089ed4915d25446cbe7b\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160\"\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"parking_lot\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e\"\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"wide\"\nversion = \"0.7.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b828f995bf1e9622031f8009f8481a85406ce1f4d4588ff746d872043e855690\"\ndependencies = [\n \"bytemuck\",\n \"safe_arch\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.173828125,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"crates/svgbob\",\n    \"crates/svgbob_cli\",\n    \"crates/svgbob_server\",\n]\n\n[profile.release]\nopt-level = 3\nlto = true\ncodegen-units = 1\n\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 7.08203125,
          "content": "# Changelog\n\n## 0.7.2\n- update to sauron 0.60\n- fix: [issue#89](https://github.com/ivanceras/svgbob/issues/89)\n- fix: due to changes in sauron jss\n- local develop branch usually uses local dep version\n- Merge pull request #99 from deining/bump-workflow-actions\n- Merge pull request #101 from Neo-J-A/master\n- use the latest published sauron crate\n- update axum in svgbob server\n- refactor: organize `circle_map`, show the map at the top most\n- chore: replace `lazy_static` with once_cell::Lazy\n- update dep `itertools` and `indexmap`\n- chore: update `nalgebra` 0.30 -> 0.32, `parry2d` 0.8 -> 0.13\n- chore: use the published sauron 0.57.0 version\n- ix: update to newest version of sauron\n- fix: follow the rust conventions for svg tags and attributes\n- update to new version of sauron\n- fix imports due to changes in newest sauron\n- feat: Added `stroke_color` option to CLI\n\n## 0.7.1\n- Fix: the legend css should also be under `.svgbob` namespace for it to take effect\n- Fix: the overly thick marker width of big_open circle letter `O` with stroke-width:1 instead of 2.\n\n## 0.7.0\n- feat: **Breaking** make all the styles be contained under a .svgbob class, in order to prevent the other svg elements from clashing with other svg elements in the document outside of svgbob svg\n   - Fixes [Issue #100](https://github.com/ivanceras/svgbob/issues/100)\n- feat: remove multiple Polygon tag for arrow characters\n- refactor: remove is_shared_x and is_shared_y since it is not used\n- refactor: change the names of the circle according to their index instead of their diameter\n- feat: implement THREE_QUARTERS_ARC circles, you can now draw circles 3/4 through\n   ![svgbob-circles](https://user-images.githubusercontent.com/7972655/232184480-b20bc2c3-10f7-4467-8598-ef497122e3c9.png)\n- feat: remove merge_line_with_polygon as it is buggy as well\n- feat: improve endorse function to use re_endorse\n- feat: use the old algorithmn for adding multiple fragments, remove buggy code for merging line and marker_line\n- refactor: give a name to the cells in the half arc first\n- disable merge_marker_line since it is buggy\n- refactor: use index_map for the Circle span to preserve the order of the circles being inserted\n- feat: fix and improve spans for HALF_ARC_SPAN\n- fix: localize points to bottom_half and right_half of HALF_ARCS\n- improvement on the HALF ARC span, extracted from the circle_art instead of assembling it from the QUARTER_ARCS\n- refactor: use correct names of variables\n- fix: remove panicking in the fragment_span merge\n- refactor: convert group_recursive into using Merge trait\n- convert into_<..> methods to impl From\n- refactor: improve second_pass_merge\n- breaking: remove settings from the low-level function calls\n- refactor: improve the code by unifying the algorithmn of merging objects using the Merge trait\n- feat: add a trait Merge to unify common algorithmns for merging fragments\n- feat: add re_endorse function for retrying re-endorsing the rest of the fragments into possible shapes\n- feat: add dynamic behavior for asterisk with horizontal dashes\n- feat: add a new function which returns regular fragments and touching fragments\n- feat: use FragmentSpan for most fragments\n- refactor: move the functions to their modules\n- feat: make fragment buffer contains the original char\n- feat: add a function to test bounding cells for contacts\n- feat: add FragmentSpan\n- feat: add a method to check if a cell hits a span\n- feat: rename intersects_bounds to is_bounded and checking must be all cells are inside the bounds specified\n- feature: add intersect_bounds method for Span\n\n## 0.6.7\n- bump dep sauron to 0.50.5\n\n## 0.6.6\n- bump dep sauron to 0.45.0\n\n## 0.6.5\n- added svgbob_server package for serving svgbob in a rest api call\n- bump dep sauron to 0.44.0\n\n## 0.6.4\n\n- simplify circle art\n- improve the implementation of quarter arc making them consistent and work correctly.\n\n## 0.6.3\n- move Settings to the top level of this crate\n\n## 0.6.2\n- Reorganize directory structure, update to sauron 0.43.4\n- reexport nalgebra, add logging on points ord\n\n## 0.6.1\n- Improve code readability on view by using arrays instead of vec\n- Modify the algorithm for endorse such that circles and arcs are matched by their ascii art rather than their computed fragments, this way, it can intersect with other fragments\n\n## 0.6.0\n- Update to sauron 0.41.0\n- Fix jss\n## 0.5.5\n- issue#38\n- Add test for issue#38 and remove panicking code due to char boundary error\n\n## 0.5.4\n- Update sauron version to `0.40`\n- Use `sauron::jss` macro to simplify creating a css from settings\n- Add a compressed variant to the generated svg\n- Add a little arrowed arc in unicode map\n- Use the `parry2d` as a new new of the old library `ncollide2d`\n\n# 0.5.3\n- Update to the lastest version of `nalgebra` and `ncollide2d`.\n- Add a public function for Rect fragment to determine whether it is using a rounded rectangle or not\n\n# 0.5.2\n- overhaul circle map algorithm calculating centers and radius based on the circle art(number of cells occupied horizontally), specified edge_case, and offset from top cell to the circle_radius\n\n# 0.5.1\n- Improve implementation of is_intersecting\n- Include circle in intersection test\n- Add a function to return regular shapes such as circle and rect, this will be used for testing hit, which fragment is hit\n- Initial implementation for testing hit/intersection AABB to any fragment\n- refactor group_node_and_fragments to clearly group the fragments first, as this will be used to test for fragment hit test\n\n# 0.5.0\n- All the changes in 0.5.0-alpha.* is now on this version.\n\n## 0.5.0-alpha.12\n- Adds a parameter in the Settings to specify whether or not Arrow heads will merge with lines. The default value is false, hence the arrow heads will be rendered as polygons instead of a marker to a line\n    - Improve polygons for arrow, open circles, filled_circles, squares and diamonds\n    - Pass the settings to merge functions, so the user can opt to chose whether or not to allow mergin_line_with_shapes\n- Add DIAMETER_CIRCLE lookup and addition circle art.\n- Add a function to convert ascii to svg with an override size\n- Add default implementation for StringBuffer\n\n## 0.5.0-alpha.11\n- Reinstated double quote escaping of text that are not meant to be interpreted as drawing element\n- Fix merging of polygons and lines, arrows and lines, circles and lines.\n- Disabled merging of marker_line to any other shape for now.\n\n## 0.5.0-alpha.4\n- update to sauron `0.24.0`\n\n## 0.5.0-alpha.3\n- remove local paths\n- update to sauron `0.23.0`\n\n## 0.5.0-alpha.2\n-  re-export `sauron::Node`\n\n## 0.5.0-alpha.1\n- Expose the with-dom feature in svgbob, this is to allow usage of the generated node readily usable as is in sauron projects, provided they uses the same version of sauron library\n- Make functions that return Node<()> into a return generics Node<MSG> to allow usage of Node<MSG> generics in sauron apps\n- Fix the behaviour of merging line and polygon tags, the direction of the arrow is now correct and only dealing with line that is in the same direction of the arrow marker\n- Merging line with arrow and heading with opposite direction is not yet dealth\n\n## 0.5.0-alpha.0\n- rewrite core architecture to support shape tagging and styling\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0849609375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 Jovansonlee B. Cesar\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.603515625,
          "content": "# Svgbob\n\n<a href=\"https://crates.io/crates/svgbob\"><img src=\"https://img.shields.io/crates/v/svgbob.svg\" alt=\"svgbob’s current version badge\" title=\"svgbob’s current version badge\"></a>\n[![Documentation](https://docs.rs/svgbob/badge.svg)](https://docs.rs/svgbob/)\n[![Test Status](https://img.shields.io/github/actions/workflow/status/ivanceras/svgbob/rust.yml?branch=master&event=push&label=test)](https://github.com/ivanceras/svgbob/actions)\n[![License](https://img.shields.io/crates/l/svgbob.svg)](https://github.com/ivanceras/svgbob/blob/master/LICENSE)\n\n\nSvgbob can create a nice graphical representation of your text diagrams.\n\nSvgbob provides a cli which takes text as an input and creates an svg image as an output.\n\n[**Demo**](https://ivanceras.github.io/svgbob-editor/)\n\n\n![Screenshot from 2024-11-20 19-27-42](https://github.com/user-attachments/assets/d882e4ae-4c2a-474f-a1d2-3e50536cb222)\n\n[Specification](https://ivanceras.github.io/content/Svgbob/Specification.html)\n\n<a href=\"https://liberapay.com/ivanceras/donate\"><img alt=\"Donate using Liberapay\" src=\"https://liberapay.com/assets/widgets/donate.svg\"></a>\n\n## Used by:\n\n- [google/comprehensive-rust](https://github.com/google/comprehensive-rust) via [markdown-svgbob](https://github.com/boozook/mdbook-svgbob)\n- [asciidoctor](https://docs.asciidoctor.org/diagram-extension/latest/diagram_types/svgbob/)\n- [discourse](https://meta.discourse.org/t/discourse-svgbob/223573)\n- [typst/bob-draw](https://typst.app/universe/package/bob-draw/)\n- [zola](https://zola.discourse.group/t/diagramming-tool-integrations-plantuml-svgbob-graphviz-etc/269)\n- [kroki](https://kroki.io/)\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 2.259765625,
          "content": "## TODO\n- [x] detect rectangles\n- [x] detect whether used as text or used as graphs (if any of the 8 has no get character then it is used as text)\n- [ ] complete the specs\n- [ ] ~~Make the string literal escape work multiline~~ Impractical\n- [x] Make a swap out interface.\n      - useful for detecting broken lines such as - - - and replace it with ~~~~~. This way\n        it will be easier to process by the fragment emitter\n     - [ ] Fix broken line implementation\n- [ ] Group traced elements together, then reduce as needed\n- [x] Add `#` as square start marker for lines\n- [x] Support for geometric shapes https://en.wikipedia.org/wiki/Geometric_Shapes\n- [x] Add enhance circle, detect circles then enhance it.\n- [ ] Add test cases\n- [X] Re-implement the escape string with double quotes.\n- [ ] Use perfect hashmap [phf](https://crates.io/crates/phf) to efficiently build the maps(unicode_map, circle_map, ascii_map) at compile time.\n- [ ] Fix the double arrow issue\n        When there is 2 arrows in the middle of a line `---->>-------` or `----<<----`\n- [X] Clean the project enforce deny warnings.\n- [~] Fix a bug where an escaped text has whitespaces, the whitespaces are gone.\n    - ~~This is a rendering bug in the browser where spaces are compressed into narrow widths~~\n- [X] Revise calculation of Circle and Arc center by basing on the number of chars/width\n- [ ] Add more circle art, dynamically created\n    - use `ito-canvas`\n- [~] Enhance quarter arc to be able to merge 2 or 3 quarters to form bigger arcs\n    - [X] Quarter circle arcs\n    - [X] Half circle arcs\n    - [ ] 3/4 circle arcs\n- [ ] Support for pills, elongated ovals\n- [X] Update to library to latest version\n    - nalgebra\n    - ncollide2d -> parry2d\n- [X] Make the top-level directory a workspace and put svgbob and cli into packages/\n- [X] Make a trait for the merging algorithms\n    - [X] merge_recursive\n    - [X] first_pass_merge\n    - [X] second_pass_merge\n- [ ] Try again to endorse the span of the grouped fragments that are in the same span\n    but not reduces into a single shape\n- [ ] Move the modules into flat structure as possible rather than deep\n- [ ] Make use of dot canvas for circles that are larger than radius 10.\n- [ ] Use `jss` and json syntax for the legen to allow more flexibility with layered class names.\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 8.4306640625,
          "content": "# This template contains all of the possible sections and their default values\n\n# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# The values provided in this template are the default values that will be used\n# when any section or field is not specified in your own configuration\n\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n    # The triple can be any string, but only the target triples built in to\n    # rustc (as of 1.40) can be checked against actual config expressions\n    #{ triple = \"x86_64-unknown-linux-musl\" },\n    # You can also specify which target_features you promise are enabled for a\n    # particular target. target_features are currently not validated against\n    # the actual valid features supported by the target architecture.\n    #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\n# The path where the advisory database is cloned/fetched into\ndb-path = \"~/.cargo/advisory-db\"\n# The url of the advisory database to use\ndb-url = \"https://github.com/rustsec/advisory-db\"\n# The lint level for security vulnerabilities\nvulnerability = \"deny\"\n# The lint level for unmaintained crates\nunmaintained = \"warn\"\n# The lint level for crates that have been yanked from their source registry\nyanked = \"warn\"\n# The lint level for crates with security notices. Note that as of\n# 2019-12-17 there are no security notice advisories in\n# https://github.com/rustsec/advisory-db\nnotice = \"warn\"\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = [\n    #\"RUSTSEC-0000-0000\",\n]\n# Threshold for security vulnerabilities, any vulnerability with a CVSS score\n# lower than the range specified will be ignored. Note that ignored advisories\n# will still output a note when they are encountered.\n# * None - CVSS Score 0.0\n# * Low - CVSS Score 0.1 - 3.9\n# * Medium - CVSS Score 4.0 - 6.9\n# * High - CVSS Score 7.0 - 8.9\n# * Critical - CVSS Score 9.0 - 10.0\n#severity-threshold =\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# The lint level for crates which do not have a detectable license\nunlicensed = \"deny\"\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.7 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"BSD-3-Clause\",\n    \"BSD-2-Clause\",\n    \"ISC\",\n]\n# List of explicitly disallowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.7 short identifier (+ optional exception)].\ndeny = [\n    #\"Nokia\",\n]\n# Lint level for licenses considered copyleft\ncopyleft = \"warn\"\n# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses\n# * both - The license will be approved if it is both OSI-approved *AND* FSF\n# * either - The license will be approved if it is either OSI-approved *OR* FSF\n# * osi-only - The license will be approved if is OSI-approved *AND NOT* FSF\n# * fsf-only - The license will be approved if is FSF *AND NOT* OSI-approved\n# * neither - This predicate is ignored and the default lint level is used\nallow-osi-fsf-free = \"neither\"\n# Lint level used when no other predicates are matched\n# 1. License isn't in the allow or deny lists\n# 2. License isn't copyleft\n# 3. License isn't OSI/FSF, or allow-osi-fsf-free = \"neither\"\ndefault = \"deny\"\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # Each entry is the crate and version constraint, and its specific allow\n    # list\n    #{ allow = [\"Zlib\"], name = \"adler32\", version = \"*\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n#[[licenses.clarify]]\n# The name of the crate the clarification applies to\n#name = \"ring\"\n# THe optional version constraint for the crate\n#version = \"*\"\n# The SPDX expression for the license requirements of the crate\n#expression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\n#license-files = [\n    # Each entry is a crate relative path, and the (opaque) hash of its contents\n    #{ path = \"LICENSE\", hash = 0xbd0eed23 }\n#]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries\nignore = false\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n    #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"warn\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# List of crates that are allowed. Use with care!\nallow = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# List of crates to deny\ndeny = [\n    # Each entry the name of a crate and a version range. If version is\n    # not specified, all versions will be matched.\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite\nskip-tree = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"warn\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = []\n"
        },
        {
          "name": "snapcraft",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}