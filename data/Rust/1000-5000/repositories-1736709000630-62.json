{
  "metadata": {
    "timestamp": 1736709000630,
    "page": 62,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hickory-dns/hickory-dns",
      "stars": 4178,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.310546875,
          "content": "codecov:\n  require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: 60..80\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"reach,diff,flags,files,footer\"\n  behavior: default\n  require_changes: no\n  after_n_builds: 13\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2490234375,
          "content": ".vscode/\n.idea/\n\n*.swp\n\n# Compiled files\n*.o\n*.so\n*.rlib\n*.dll\n.DS_Store\n\n# Executables\n*.exe\n\n# Generated by Cargo\n/target\n**/target\n\n*.rs.bk\n.rls.toml\nrls/**\n\n# ignore fuzzing corpus\nfuzz/artifacts/**\nfuzz/corpus/**\n*~\n\n# Code coverage output\n/coverage\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.03515625,
          "content": "{\n\t\"MD013\": false,\n\t\"MD024\": false\n}"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.1162109375,
          "content": "edition = \"2018\"\n# use_try_shorthand = true\n# error_on_line_overflow = false\n# error_on_line_overflow_comments = false\n"
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 2.96875,
          "content": "# Architecture of Hickory DNS\n\nThe Hickory DNS libraries are built from the ground up to be asynchronous. This project grew from first using non-blocking IO interfaces (before Futures 0.1 or async/await had landed in Rust). There are some artifacts of this history sporadically left around the project. Please feel free to submit PRs that clean up areas that still have hand-written Futures based state-machines. Additionally, much of the project was written by @bluejekyll while he learned the Rust languageâ€“this means that there may be patterns or missing common implementations in places where he didn't know better. Feel free to clean that up if you feel open to submitting a PR.\n\n## Layout\n\nMost of the project is in the form of crates. The crates are all individually published to crates.io.\n\nThe project has these high-level crates (to be used as dependencies in other projects):\n\n- **[hickory-resolver](crates/resolver)** - implements a stub-resolver with support for CNAME chasing and other things, abstract over runtimes (Tokio supported by default)\n- **[async-std-resolver](crates/async-std-resolver)** - an abstraction of hickory-resolver using the async-std runtime\n- **[hickory-client](crates/client)** - a bare-bones client crate, most useful for dynamic DNS updates\n- **[hickory-server](crates/server)** - implements support for hosted Authorities of various types\n- **tokio-resolver** - (under consideration, currently Tokio support is directly in hickory-resolver)\n\nLow-level crates supporting the above high-level crates:\n\n- **[hickory-proto](crates/proto)** - the lowest level crate, implements the basics of DNS\n\nBinaries:\n\n- **[hickory-dns](bin/)** - server binary, `hickory-dns`, for hosting authorities, zones, and/or setting up a forwarder\n- **[hickory-util](util/)** - helpful utilities, e.g. `resolve` for a CLI resolver, as well as some DNSSEC utilities\n\nOld and Outdated crates:\n\n- **[trust-dns-*](https://github.com/bluejekyll/trust-dns/tree/v0.23.1/)** - removed in favor of features in hickory-proto, crate in [v0.24.0](https://github.com/hickory-dns/hickory-dns/tree/v0.24.0)\n- **[trust-dns-rustls](https://github.com/bluejekyll/trust-dns/tree/v0.21.0/crates/rustls)** - removed in favor of features in hickory-proto, crate in [v0.21.0](https://github.com/hickory-dns/hickory-dns/tree/v0.21.0)\n- **[trust-dns-openssl](https://github.com/bluejekyll/trust-dns/tree/v0.21.0/crates/openssl)** - removed in favor of features in hickory-proto, crate in [v0.21.0](https://github.com/hickory-dns/trust-dns/tree/v0.21.0)\n- **[trust-dns-native-tls](https://github.com/bluejekyll/trust-dns/tree/v0.21.0/crates/native-tls)** - removed in favor of features in hickory-proto, crate in [v0.21.0](https://github.com/hickory-dns/trust-dns/tree/v0.21.0)\n- **[trust-dns-https](https://github.com/bluejekyll/trust-dns/tree/v0.21.0/crates/https)** - removed in favor of features in hickory-proto, crate in [v0.21.0](https://github.com/hickory-dns/trust-dns/tree/v0.21.0)\n\n## TBD\n\nMore on general patterns used in each library\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 81.5703125,
          "content": "# Change Log: Hickory DNS (formerly, Trust-DNS)\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](https://semver.org/).\n\nAll notes should be prepended with the location of the change, e.g. `(proto)` or `(resolver)`.\n\n## 0.25.0-alpha.4\n\n* ci: stop blocking on the platform matrix jobs by @djc in https://github.com/hickory-dns/hickory-dns/pull/2563\n* feat: Implement Round Robin server selection for DNS lookups by @hingbong in https://github.com/hickory-dns/hickory-dns/pull/2557\n* resolver: make ForwarderAuthority generic by @Stormshield-robinc in https://github.com/hickory-dns/hickory-dns/pull/2568\n* Replace DnsResponse::new() constructor by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2573\n* fix key tag collision issue in zone signer by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2556\n* CI: Check hickory-proto with WASI preview 1 by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2575\n* resolver NameServerPool tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2567\n* More modularization of DNSSEC crypto code by @djc in https://github.com/hickory-dns/hickory-dns/pull/2566\n* Start untangling rustls ClientConfig setup by @djc in https://github.com/hickory-dns/hickory-dns/pull/2569\n* dns: improve error message when Cargo feature is missing by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2580\n* Fix dns-over-openssl by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2584\n* util: Fix building with rustls_native_certs only by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2585\n* Switch DnsLru from lru-cache to moka by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2576\n* Clean up references to AsyncClient by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2588\n* Dnssec insecure delegations by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2546\n* Extend dig timeout in bad referral tests by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2594\n* server: Fix compilation of recursor authority without DNSSEC by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2586\n* Add cargo-all-features configuration by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2587\n* Remove redundant cache insert in resolve_cnames() by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2596\n* Update default logging filter to match all crates by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2597\n* Update READMEs by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2591\n* Run cargo check-all-features in CI by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2592\n* Coverage improvements by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2599\n* Update url in fuzzer lockfile by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2607\n* Box the query in ProtoErrorKind::Nsec by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2610\n* Update semver-compatible dependencies & bump MSRV by @djc in https://github.com/hickory-dns/hickory-dns/pull/2617\n* Redirect output of command to clean up test output by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2611\n* Don't send DAU/DHU options in responses by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2614\n* Conformance: tests for handling of TC=1 responses by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2609\n* build(deps): bump codecov/codecov-action from 4 to 5 by @dependabot in https://github.com/hickory-dns/hickory-dns/pull/2582\n* Simplify PublicKey trait by @djc in https://github.com/hickory-dns/hickory-dns/pull/2616\n* bump idna to 1.0 and url to 2.5 by @zh-jq in https://github.com/hickory-dns/hickory-dns/pull/2564\n* Document suggested rust-analyzer configuration by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2606\n* Drop privileges on Unix-family platforms by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2598\n* proto: apply timeout to TLS/QUIC/H3 handshake phase by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2583\n* Update authority documentation by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2623\n* Remove mention of Subject Public Key Info in docs by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2624\n* Update copied documentation by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2625\n* Don't implicitly enable DNSSEC when DoT is enabled by @djc in https://github.com/hickory-dns/hickory-dns/pull/2615\n* Timeout tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2620\n* accept idle timeouts for TLS and HTTPS futures by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2622\n\n## 0.25.0-alpha.3\n\n* util: add a newline between records in resolve report by @bluejekyll in https://github.com/hickory-dns/hickory-dns/pull/2347\n* proto: make time dependency optional by @djc in https://github.com/hickory-dns/hickory-dns/pull/2349\n* Manifest cleanup by @djc in https://github.com/hickory-dns/hickory-dns/pull/2351\n* Add marcus0x62 as a code owner by @djc in https://github.com/hickory-dns/hickory-dns/pull/2350\n* fix the bad label compression from original query by @bluejekyll in https://github.com/hickory-dns/hickory-dns/pull/2352\n* Remove mentions of Makefile.toml in CONTRIBUTING.md by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2356\n* Fix extra length prefix in unknown SVCB parameter by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2354\n* Fix copied comment by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2355\n* Explicitly limit H2 support to rustls by @djc in https://github.com/hickory-dns/hickory-dns/pull/2366\n* Fix panic in NSEC3 hash function by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2368\n* Make AsyncResolver take hosts file into account by @hch12907 in https://github.com/hickory-dns/hickory-dns/pull/2149\n* Update dependencies by @djc in https://github.com/hickory-dns/hickory-dns/pull/2374\n* Fix warning in Dockerfile by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2370\n* Fix stdout handling during hickory startup by @justahero in https://github.com/hickory-dns/hickory-dns/pull/2361\n* Increase validation log level by @justahero in https://github.com/hickory-dns/hickory-dns/pull/2360\n* Revert \"Fix stdout handling during hickory startup\" by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2376\n* ci: trigger workflows for merge queue branches by @djc in https://github.com/hickory-dns/hickory-dns/pull/2378\n* Fix CAA parameter value validation by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2373\n* Trivariant LookupControlFlow type to allow authorities to decline to respond to a query by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2160\n* Conformance test cleanup by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2371\n* use a \"test\" TLD in conformance tests by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2359\n* Strict parsing of configuration files by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2375\n* Use container names, not IDs, in \"explore\" example by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2372\n* trust_anchor::Parser: accept records without TTL field by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2384\n* dns-test: add helper to pause and inspect a unit test's containers by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2362\n* dns-test: write logs to file by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2377\n* Change domain name used in 'explore' example by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2386\n* Fix Issue #2306 / infinite recursion in ns_pool_for_zone by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2332\n* dns-test: bump unbound to 1.21.0 by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2387\n* [RFC] (temporarily) add tests that rely on public DNS infrastructure by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2385\n* DNSSEC validation fixes by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2392\n* proto: simplify verify_dnskey_rrset() by @djc in https://github.com/hickory-dns/hickory-dns/pull/2397\n* proto: simplify verify_dnskey_rrset() some more by @djc in https://github.com/hickory-dns/hickory-dns/pull/2398\n* proto: replace Borrow<Name> impl for LowerName with Deref by @djc in https://github.com/hickory-dns/hickory-dns/pull/2394\n* Add support for CNAME records to dns-test by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2338\n* Add \"do not query\" configuration to recursor by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2369\n* conformance: test resolver with query about unsigned zone by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2380\n* dns-test: parse multiple EDE codes by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2381\n* CI: fix conformance tests by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2405\n* Forwarder: fix NXDOMAIN status code and allow it to forward SOA records by @hch12907 in https://github.com/hickory-dns/hickory-dns/pull/2379\n* dnssec: validate DS records by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2396\n* build(deps): bump rustls-native-certs from 0.7.2 to 0.7.3 by @dependabot in https://github.com/hickory-dns/hickory-dns/pull/2407\n* ensure DNSKEY is validated with a KSK by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2399\n* Add method and test cases to randomize ASCII alpha case in Name labels by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2403\n* conformance/dns: add bad referral scenarios by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2410\n* conformance: test against deprecated algorithms by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2413\n* Add NSEC3 support to `hickory-server` by @pvdrz in https://github.com/hickory-dns/hickory-dns/pull/2391\n* Fix semantic merge conflict by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2414\n* Use u32 internally when randomizing case of labels by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2416\n* Store invalid CAA property value as Value::Unknown by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2418\n* Encode and decode CAA issuer name as ASCII only by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2419\n* Ignore escaped dots when determining FQDN status by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2420\n* conformance: DS of child's ZSK in parent zone by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2409\n* fix key tag calculation in dns-test and semantic merge conflict in conformance test by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2427\n* conformance: use `push_label` API and update variable names by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2408\n* Fix corruption of signature expiration in flaky test by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2426\n* Update semver-compatible dependencies by @djc in https://github.com/hickory-dns/hickory-dns/pull/2442\n* Clean up server features by @djc in https://github.com/hickory-dns/hickory-dns/pull/2441\n* Clean other target directories in `just clean` by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2446\n* Stop using pseudo-TTYs with Docker by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2439\n* dnssec: report Insecure outcome as NOERROR+AD=0 by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2438\n* CAA: Preserve reserved flags by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2434\n* NSEC3 validation by @listochkin in https://github.com/hickory-dns/hickory-dns/pull/2313\n* Fix dns-over-openssl compilation and CI coverage by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2449\n* Unify integration tests by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2448\n* treat zone as Insecure if all DNSKEY algorithms are unsupported by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2443\n* Minor recursor tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2450\n* Set up tracing subscriber in various tests by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2453\n* CNAME resolution support for the recursor. by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2339\n* Extract tracing-subscriber setup to new crate by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2454\n* implement rfc4398 CERT record type by @zsdsys in https://github.com/hickory-dns/hickory-dns/pull/2417\n* SignSettings: rm use_dnssec field by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2451\n* build(deps): bump enum-as-inner from 0.6.0 to 0.6.1 by @dependabot in https://github.com/hickory-dns/hickory-dns/pull/2460\n* Update semver-compatible dependencies by @djc in https://github.com/hickory-dns/hickory-dns/pull/2463\n* Kill quad9 tests by @djc in https://github.com/hickory-dns/hickory-dns/pull/2467\n* Move RuntimeProvider into proto by @djc in https://github.com/hickory-dns/hickory-dns/pull/2464\n* Catalog cleanup in preparation for the chained authority. by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2461\n* add hickory-server to the info and debug log line configs by @bluejekyll in https://github.com/hickory-dns/hickory-dns/pull/2469\n* server: avoid wrapping Arc in Box by @djc in https://github.com/hickory-dns/hickory-dns/pull/2471\n* conformance: unsigned leaf zone; other zones use NSEC by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2436\n* Regenerate test certificates by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2475\n* proto: use RuntimeProvider to connect TCP by @djc in https://github.com/hickory-dns/hickory-dns/pull/2472\n* proto: change RecordSet::new() to take owned Name by @djc in https://github.com/hickory-dns/hickory-dns/pull/2473\n* fix compilation failed by @hingbong in https://github.com/hickory-dns/hickory-dns/pull/2476\n* Allow changing URI paths for DNS-over-HTTPS by @hch12907 in https://github.com/hickory-dns/hickory-dns/pull/2470\n* conformance: add NSEC & NSEC3 tests by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2437\n* Chained authority implementation by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2161\n* Remove unneeded vecs in ForwardNSData and wrap in an Arc by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2482\n* Config tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2480\n* Fix two issues with the config integration test by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2484\n* Listen on IPv6 by default by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2478\n* build(deps): bump once_cell from 1.19.0 to 1.20.1 by @dependabot in https://github.com/hickory-dns/hickory-dns/pull/2483\n* Remove workaround in clippy justfile target by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2485\n* Move StoreConfig to bin crate by @djc in https://github.com/hickory-dns/hickory-dns/pull/2486\n* Update windows.rs to use crate::proto::xfer::Protocol by @zsdsys in https://github.com/hickory-dns/hickory-dns/pull/2488\n* Add resolver/recursor configuration to avoid udp ports by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2487\n* Disable client_tests::test_nsec3_query_name_is_soa_name by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2492\n* Take advantage of match ergonomics by @djc in https://github.com/hickory-dns/hickory-dns/pull/2490\n* Blocklist authority by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2162\n* Update deps (futures-util and once_cell) by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2496\n* Use custom serde visitor to fix store error messages by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2495\n* Update semver-compatible dependencies by @djc in https://github.com/hickory-dns/hickory-dns/pull/2497\n* Docs: resolver no longer returns background future by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2504\n* proto: leverage simpler PEM reading API by @djc in https://github.com/hickory-dns/hickory-dns/pull/2505\n* Update the NSEC/NSEC3 Truth Table to correctly log responses with NSEC and NSEC3 records by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2506\n* Switch to using doc_auto_cfg by @djc in https://github.com/hickory-dns/hickory-dns/pull/2507\n* State that `hickory-server` supports NSEC3 by @pvdrz in https://github.com/hickory-dns/hickory-dns/pull/2512\n* Resolver cleanups by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2513\n* Propagate NX domain and no record found errors by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2502\n* Replace TryParseIp trait with IntoName::to_ip() by @djc in https://github.com/hickory-dns/hickory-dns/pull/2509\n* Clean up rustdoc warnings by @djc in https://github.com/hickory-dns/hickory-dns/pull/2508\n* DNSSEC tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2517\n* Kill the sync Resolver by @djc in https://github.com/hickory-dns/hickory-dns/pull/2515\n* Use async client for sig0 compatibility tests by @djc in https://github.com/hickory-dns/hickory-dns/pull/2518\n* Add justfile target to export lcov file by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2520\n* client: remove synchronous API by @djc in https://github.com/hickory-dns/hickory-dns/pull/2521\n* tests: restore shorter timeout window in test by @djc in https://github.com/hickory-dns/hickory-dns/pull/2528\n* Conformance dnslib support by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2523\n* Conformance support for multiple zones on a nameserver by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2525\n* Simplify socket address literals by @djc in https://github.com/hickory-dns/hickory-dns/pull/2527\n* Add caching policy configuration to recursor by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2524\n* Recursor builder tweaks by @djc in https://github.com/hickory-dns/hickory-dns/pull/2529\n* Add resource limits for DNSKEY, DS, and RRSIG validation by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2533\n* conformance: zone that lacks DS in parent zone by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2388\n* Skip copying configuration file for dnslib by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2537\n* Add resolver logging to bad_txid test by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2536\n* Recursor recursion improvements by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2522\n* CI: Remove continue-on-error from steps by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2538\n* Conformance dig timeout by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2540\n* Make error modules private by @djc in https://github.com/hickory-dns/hickory-dns/pull/2530\n* Start cleaning up DNSSEC API by @djc in https://github.com/hickory-dns/hickory-dns/pull/2534\n* ci: don't build benchmarks, only check them by @djc in https://github.com/hickory-dns/hickory-dns/pull/2542\n* Fix NSEC3 validation bug for covering records by @pvdrz in https://github.com/hickory-dns/hickory-dns/pull/2543\n* justfile: fix the conformance-ignored task by @japaric in https://github.com/hickory-dns/hickory-dns/pull/2535\n* Clarify `KeyPair` type by @djc in https://github.com/hickory-dns/hickory-dns/pull/2541\n* Recursor CNAME resource limit improvements by @marcus0x62 in https://github.com/hickory-dns/hickory-dns/pull/2531\n* Update hashbrown by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2547\n* Check in fuzzer target lock file by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2552\n* Recursor: Create DnsResponse with consistent buffer by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2553\n* proto: encode EDNS flags in a separate type by @djc in https://github.com/hickory-dns/hickory-dns/pull/2549\n* fix windows build, ResolveError changed to ResolveResult by @zsdsys in https://github.com/hickory-dns/hickory-dns/pull/2548\n* Recursor: set RD=0 in queries to nameservers by @divergentdave in https://github.com/hickory-dns/hickory-dns/pull/2551\n* recursor: use async/await for RecursorDnsHandle implementation by @djc in https://github.com/hickory-dns/hickory-dns/pull/2554\n\n## 0.25.0\n\n### Fixed\n\n- (build) Suppress implicit features from optional dependencies #2337 by djc\n- (recursor) Fix SOA referrals #2331 by marcus0x62\n- (all) Update OpenSSL to fix security issue #2316 by justahero\n- (recursor) fix DNSSEC validation of NS somedomain.com. #2300 by japaric\n- (recursor) DnssecDnsHandle: do not recurse infinitely when query DS . fails #2271 by japaric\n- (recursor) answer with SERVFAIL when DNSSEC validation fails #2286 by japaric\n- (tests) Assert status for every NSEC3 test #2254 by pvdrz\n- (tests) dns-test: make unit tests use the checked out version of this repo #2268 by japaric\n- (tests) just: warn when the index is dirty and DNS_TEST_SUBJECT=hickory #2267 by japaric\n- (recursor) strip dnssec records on cache hit #2245 by japaric\n- (build) make just to compile bind #2248 by sabify\n- (recursor) send DS queries to the parent zone #2203 by japaric\n- (docs) add RFC2931 SIG(0) as supported #2216 by bluejekyll\n- (recursor) respect DO bit in incoming queries #2196 by japaric\n- (docs) doc: fix misc typos in md files #2198 by divagant-martian\n- (test) update ip of example.com #2187 by situ2001\n- (all) Update mio to 0.8.11 to fix RUSTSEC-2024-0019 #2166 by marcus0x62\n- (proto) Fix formatting issue in crates/proto/src/op/message.rs #2165 by marcus0x62\n- (proto) fix internal representation of OPT #2151 by esensar\n- (proto) ECH service parameter key corrected from  \"echconfig\" to \"ech\" #2183 by cpu\n- (proto) SVCB/HTTPS record parsing fixes (quoted values, arbitrary numeric keys, lists containing delim) #2183 by cpu\n\n### Changed\n\n- (resolver) only retry I/O errors over TCP #2336 by lrouquette\n- (proto) Simplify TBS construction API #2335 by djc\n- (recursor) take is_subzone() arguments as &Name #2334 by djc\n- (proto) Use SerialNumber type for signature timestamps #2318 by justahero\n- (recursor) Improve recursor logic by eliminating redundant NS requests and adding recursor support for NS referrals. #2325 by marcus0x62\n- (resolver) Return error when no nameservers in resolv.conf #2327 by dav1do\n- (resolver) Make QuicSocketBinder as public as RuntimeProvider #2328 by mokeyish\n- (resolver) Make sure Lookup futures are Sync #2326 by djc\n- (server) leave query/opt in truncated msg #2307 by leshow\n- (tests) justfile: use --locked to stick with Cargo.lock dependencies #2323 by djc\n- (proto) Allow to modify a RRSIG record before signing #2315 by justahero\n- (all) Bump MSRV to 1.70 #2322 by djc\n- (recursor) Adjust TTL of RRSIG + RR during validation #2311 by justahero\n- (resolver) avoid moving self in read_hosts_confï¼ˆreading from multiple filesï¼‰#2314 by mokeyish\n- (tests) dns-test: cache target directory across docker build invocations #2305 by japaric\n- (server) empty the answer section when DNSSEC validation fails #2304 by japaric\n- (tests) Adjust timestamps to pass unbound validation result #2303 by justahero\n- (recursor) validating recursor: return answer from cache #2297 by japaric\n- (proto) DnssecDnsHandle: also update the RRSIG's proof #2293 by japaric\n- (recursor) put tokio::test behind cfg attribute #2291 by japaric\n- (resolver) Refactor start method in Resolver #2281 by justahero\n- (server) improved server binary, added config validation and control over protocols #2247 by sabify\n- (tests) dns-test: use non-deprecated algorithm (RSASHA256) #2258 by japaric\n- (recursor) Recursor::resolve: reject queries with relative domain names #2246\n- (tests) CI: also run hickory unit tests when only /conformance changes #2269 by japaric\n- (all) Upgrade to rustls 0.23, quinn 0.11, etc #2217 by djc\n- (proto) DnssecDnsHandle: check RRSIG validity as per RFC4035 #2213 by japaric\n- (proto) NextRandomUdpSocket: fall back to port 0 if no port was found #2260 by Luap99\n- (tests) dns-test: do not run docker network create in parallel #2265 by japaric\n- (resolver) DnsLru: cache RRSIG records together with the record they cover #2239 by japaric\n- (proto) dns-test: make NameServer's FQDN more stable #2235 by japaric\n- (proto) refactor the Resource data structure #2231 by japaric\n- (tests) Add just recipes to clean leftover containers and networks #2232 by pvdrz\n- (tests) ci: pin nightly version #2224 by japaric\n- (server) cargo: Enable LTO on release build #2141 by jpds\n- (resolver) Retry tcp on udp io errors #2215 by bluejekyll\n- (recursor) tweaks for security awareness #2208 by djc\n- (all) address new clippy lint assigning-clones #2205 by divagant-martian\n- (proto) error: wrap io::Error in Arc for clone #2181 by cpu\n- (resolver) err for dns-over-rustls w/o roots #2179 by cpu\n- (resolver) Forward hickory-dns's root cert features to hickory-resolver #2153 by hch12907\n- (proto) Better DNSSEC proofs #2084 by bluejekyll\n- (proto) update version for http/h2/h3 #2138 by zh-jq\n- (server) Use cargo environment variables for path to executable #2130 by sjbronner\n- (proto) Only DNSKEY zone keys are allowed to match DS RR #2131 by justahero\n- (docs) Fix a typo in crate description #2132 by wiktor-k\n- (all) Gate tests on required features #2114 by alexanderkjall\n- (resolver) Fixup lookup docs #2123 by bluejekyll\n- (proto) when comparing IP addresses for UDP, only check IP and Port #2124 by bluejekyll\n- (recursor) Recursor: make nameserver and record cache sizes configurable #2117 by marcus0x62\n- (proto) Validate response query section #2118 by marcus0x62\n- (proto) Increase source port entropy in UDP client #2116 by marcus0x62\n- (all) get(0) to first() and zerocopy package updates to fix clippy and cargo audit errors #2121 by marcus0x62\n- (resolver) Add getters for resolver config and options #2093 by hoxxep\n- (client) updated h2_client_connection and web-pki-roots config #2088 by marcbrevoort-cyberhive\n- (proto) EchConfig renamed to EchConfigList to match content #2183 by cpu\n- (proto) EchConfigList updated to wrap TLS presentation language encoding of content #2183 by cpu\n\n### Added\n\n- (tests) Add information on cargo ws plugin #2319 by justahero\n- (recursor) Add support for PTR query #2308 by mokeyish\n- (tests) add regression test for #2306, #2309 by japaric\n- (tests) Add method to capture expected number of packets #2278 by justahero\n- (tests) test that answer section is empty on failed DNSSEC validation #2302 by japaric\n- (tests) Test invalid signature timestamps in DNSSEC validation #2298 by justahero\n- (tests) test caching of chain of trust link #2289 by japaric\n- (tests) test that DO=1 does not change the outcome of DNSSEC validation #2287 by japaric\n- (tests) Add test to check cache hit with DO bit #2280 by justahero\n- (tests) test caching of DNSSEC validation and of DNSSEC records #2244 by japaric\n- (recursor) add DNSSEC validation to the recursive resolver #2253\n- (proto) add a trust anchor file parser #2257 by japaric\n- (tests) just: document conformance-* tasks #2266 by japaric\n- (tests) Add conformance tests for NSEC3 #2238 by pvdrz\n- (tests) import DNSSEC conformance test suite repository #2222 by japaric\n- (client) Adds deref call in assertion for hickory-client README example #2173 by akappel\n- (proto) Make hickory_proto::h3::H3ClientStream Clonable #2182 by 0xffffharry\n- (proto) Make hickory_proto::quic::QuicClientStream Clonable #2176 by 0xffffharry\n- (proto) feat: add setter methods for Message struct to improve configurability #2147 by situ2001\n- (proto) add getter/setter methods to ClientSubnet #2146 by leshow\n- (server) Add option to specify a restricted set of networks capable of accessing the Hickory DNS server #2126 by bluejekyll\n- (recursor) Bailiwick checking for the recursor #2119 by marcus0x62\n- (proto) Support getting and setting the EDNS Z flags #2111 by mattias-p\n\n### Removed\n\n- (all) Remove broken mtls code to fix CI #2218 by djc\n- (proto) Remove generic Error from DnsHandle #2094 by bluejekyll\n\n## 0.24.1\n\n### Fixed\n\n- (proto) Break when socket is unexpectedly shut down #2171 by dlon\n\n## 0.24.0\n\n**NOTICE** This project has been rebranded to Hickory DNS and has been moved to the https://github.com/hickory-dns/hickory-dns organization and repo, from 0.24.0 onward. This [blog post](https://bluejekyll.github.io/blog/posts/announcing-hickory-dns/) explains the reasoning behind this move.\n\n### Changed\n\n- (proto) Make DnsHandle::send &self instead of &mut self #2018 by ibigbug\n- (all) Update dependencies (avoid vulnerability), optional TOML, remove unused dependencies #2028 by djc\n- (server) Privatize the Lexer API #2040 by djc\n- (server) Use consistent error type for read_system_conf() #2047 by djc\n- (server) Optimized shutdown_gracefully() #2041 by caobug\n\n### Added\n\n- (server) add register with rustls server config #2004 by yaotthaha\n- (all) Add webpki-roots and native-certs crate features #2005 by daxpedda\n- (bin) add run-example target to justfile to simply start trust-dns for manual testing #2020 by bluejekyll\n- (all) DoH3 support #1987 by daxpedda\n\n### Fixed\n\n- (bin) Add root certificates to the binary crate #2059 by daxpedda\n- (proto) proto/rr: do not deserialize ClientSubnets with invalid prefixes #2057 by 00xc\n- (resolver) Fix the resolver version warning in the workspace #2013 by bluejekyll\n- (proto) Forward serde-config feature to the proto crate #2019 by cetanu\n- (server) Prevent task reaping from blocking #2023 by lpraneis\n- (proto) Dont panic on nsec without dnssec #2025 by bluejekyll\n- (server) Spawn H2 Data frame processing into a separate task #2033 by yaroslavros\n- (proto) DoQ default configuration #2036 by daxpedda\n- (resolver) caching bug when CNAME leads to negative response #2053 by Clendenin\n\n### Removed\n\n- (resolver) Remove Copy from ResolverOpts #2029 by daxpedda\n\n## 0.23.1, NOTE: Before this point the project was formerly known as Trust-DNS\n\n### Changed\n\n- (all) **NOTICE** This project has been rebranded to Hickory DNS and has been moved to the https://github.com/hickory-dns/hickory-dns organization and repo, from 0.24.0 onward.\n\n## 0.23.0\n\n### Fixed\n\n- (resolver) Malformed label: -- when parsing resolv.conf #1985 by Jake-Shadle\n- (proto) Fix truncation for UDP #1975 by nmittler\n- (proto) avoid panicking in parse_time() #1964 by djc\n- (server) Merge up deny response in requests to server #1954 by djc\n- (proto) remove duplicate is_soa function #1948 by mattsse\n- (resolver) Fix minimal tokio version requirement #1931 by Gelbpunkt\n- (all) Fix bench errors in rust-analyzer #1777 by jeff-hiner\n- (all) Regenerate the test SSL certificates #1781 by ssinger\n- (all) Fix some spelling errors #1783 by nhurley3\n- (proto) proto: only allow ASCII characters in CAA key/value data #1796 by djc\n- (proto) [rfc8659] CAA RR Change references to RFC 6844 to 8659 #1798 by darnuria\n- (all) Fixed some clippy warning #1801 by darnuria\n- (all) Fix links to client documentation #1808 by clint-white\n- (all) fix cleanliness for 1.65 #1821 by bluejekyll\n- (proto) Fix stuck of dns over tls with clear text SNI #1826 by mokeyish\n- (all) Fix enabling only dns-over-* feature #1833 by NobodyXu\n- (proto) OpenSSL 3.0 compliant #1841 by HLFH\n- (server) FIX WIP: Zone Parser panics when hostname entry has a leading whitespace. #1842 by wuerges\n- (server) Fix $TTL not taken into account with wildcard from zonefile. #1850 by darnuria\n- (all) Some cargo clippy fix #1851 by darnuria\n- (all) Fix #1835 RUSTSEC-2021-0145 Update clap to 4.0.29. #1853 by darnuria\n- (docs) fix DNSSEC typo #1858 by HLFH\n- (all) clippy updates for Rust 1.66 #1862 by bluejekyll\n- (tests) ignore truncation for fuzz comparison #1872 by bluejekyll\n- (tests) fix fuzz build failure #1875 by manunio\n- (proto) docs: fix truncated rustdoc TODO on LowerName. #1897 by cpu\n- (tests) Fix: invalid benchmark #1900 by XOR-op\n- (proto) Fix panics in ClientSubnet conversions #1909 by djc\n- (tests) Fix fuzz build #1911 by manunio\n- (proto) Fix PTR.to_string() stack overflow #1912 by mokeyish\n- (proto) Fix audit upgrade openssl #1914 by mokeyish\n- (proto) Fix panic of unexpected close of UDP socket #1915 by mokeyish\n- (proto) Lazily reap finished connections in TokioHandle on spawn_bg #1917 by jeff-hiner\n\n### Changed\n\n- (resolver) fix(resolver): correct ttl from lru cache #1984 by iberryful\n- (ci) Use dtolnay/rust-toolchain #1993 by waywardmonkeys\n- (all) update the minimum required openssl version #1979 by bluejekyll\n- (bin) Print offending bind error in panic message #1971 by wprzytula\n- (resolver) Provider API Redesign #1938 by XOR-op\n- (all) create default rules for justfile (changed from cargo-make to justfiles) #1951 by bluejekyll\n- (all) Bump log to v0.4.18 #1949 by daxpedda\n- (proto) Make RData::read() API public #1945 by djc\n- (all) Replace lazy_static with once_cell #1944 by daxpedda\n- (resolver) Return Self from AsyncResolver::new() #1942 by daxpedda\n- (all) Use default-features = false for quinn #1941 by daxpedda\n- (all) remove the direct dependency to quinn-udp #1935 by zh-jq\n- (resolver) Order name servers by SRTT #1784 by nhurley3\n- (resolver) resolver: use errors' Display impl #1785 by hdhoang\n- (proto) NameIter use a u8 for start/end. #1787 by darnuria\n- (proto) name.rs use DomainNameTooLong in place of Message. #1788 by darnuria\n- (proto) Explicit test for label max len and use ProtoErrorKind. #1789 by darnuria\n- (cli) Port to clap4 #1791 by darnuria\n- (proto) Improve CAA rdata display #1794 by wuerges\n- (all) fix #1767 Update tracing-subscriber to 0.3.16 #1797 by darnuria\n- (proto) Simplify interface between BinEncoder and MaximalBuf #1802 by djc\n- (proto) proto: allow unrestricted length character length in SVCB param values #1806 by djc\n- (all) bump MSRV to 1.60 #1813 by bluejekyll\n- (all) Lazily reap finished tasks from inner_join_set #1818 by jeff-hiner\n- (proto) proto: upgrade to Quinn 0.9 #1822 by djc\n- (resolve) Preserve intermediates for TXT records #1828 by schultetwin1\n- (all) Feature gate tokio features on mdns crate #1831 by jxs\n- (test) python3-ply rather than python-ply #1846 by HLFH\n- (docs) Replace http: links with https: #1848 by msrd0\n- (docs) Make homepage link simpler for end users #1857 by HLFH\n- (resolver) Don't retry authoritative NOERROR with an empty set, from trusted resolvers #1861 by jeff-hiner\n- (server) authority: parse with default record class IN. #1874 by cpu\n- (resolver) API-breaking change: Deprecate ConnectionProvider with new RuntimeProvider #1876 by XOR-op\n- (proto) deps: upgrade Tokio 1.21.0 -> 1.24.1 #1877 by cpu\n- (proto) Move client code used by server code down into proto #1879 by djc\n- (proto) proto: clean up error logging #1881 by hawkw\n- (resolver) Make dns_hostname optional to disable verify #1907 by mokeyish\n- (all) Introduce central crate version management #1908 by mokeyish\n- (resolver) remove use of time in recursor and client #1918 by zh-jq\n\n### Removed\n\n- (server) remove named binary #1859 by HLFH\n- (docs) project: remove refs. to removed 'named' binary #1873 by cpu\n\n### Added\n\n- (server) Graceful Shutdown of Server #1869 by theduke\n- (resolver) Add Google DoT and DoH to ResolverConfig #1989 by daxpedda\n- (server) Adding graceful shutdown to server #1977 by nmittler\n- (all) add an html coverage report for local review of coverage data #1959 by bluejekyll\n- (resolver) Add the possibility to shuffle NameServers #1920 by Edu4rdSHL\n- (resolver) add test for connecting DoH with pure IP Address #1936 by mokeyish\n- (resolver) add NameServerConfigGroup::from_ips_quic #1929 by zh-jq\n- (resolve) Add --reverse, --file and --interval to util/resolve #1807 by cunha\n- (client) TSIG documenting client tsig code + update rfc link #1810 by darnuria\n- (client) Create dedicated Errors types for Tsig error case #1811 by darnuria\n- (all) Also declare MSRV in Cargo.toml #1820 by glts\n- (proto) Add wireformat buffer to DnsResponse #1855 by mattias-p #1885 by cpu\n- (client) client: rm zone parse optional class arg.\n- (proto) Implement EDNS Client Subnet ECS reading and writing #1906 by mokeyish\n\n## 0.22.1\n\n### Fixed\n\n- (server) drop response messages #1952 by @djc\n\n## 0.22.0\n\n### Removed\n\n- (deps) don't pull in env_logger if we aren't actually a binary #1701 by @Noah-Kennedy\n\n### Added\n\n- (resolver) Add option to use a provided name server order #1766 by @nhurley3\n- (proto) Add invalid utf8 output test for TXT::fmt. #1755 by darnuria\n- (proto) Support 0-RTT in DNS over QUIC #1716 by msoxzw\n- (recursor) *new* A Trust DNS based Recursor!!! #1710 by @bluejekyll\n- (resolver) Allow customizing the static hosts configuration #1705 by @fantix\n- (proto/server) Support loading pkcs#1 private key as well #1704 by @lisongmin\n- (util) Trust `dns` client cli (like `dig`) #1680 by @bluejekyll\n\n### Fixed\n\n- (proto) Only retry UDP socket bind if it returned EADDRINUSE #1761 by @peterthejohnston\n- (all) Add necessary conditional compilation cfgs #1752 by @trevor-crypto\n- (server) Populate name_pointers correctly via MessageResponseBuilder request #1744 by @jeff-hiner\n- (resolver) Do not fail parse_resolv_conf on invalid hostname #1740 by @schultetwin1\n- (all) doc: Fix warnings reported by cargo doc #1737 by @wiktor-k\n- (proto) Use `u16::*_be_bytes` represent length field (fixes DoQ) #1715 by @msoxzw\n- (proto) Prevent invalid 0-length labels via from_raw_bytes #1700 by @jonasbb\n- (proto/server) Drop UDP packets on send failure #1696 by @jeff-hiner\n- (all) removed `.max(0)`, unnecessary with `u32`'s #1691 by @bluejekyll\n- (server) sanitize all addresses received by the server before attempting any râ€¦ #1690 by @bluejekyll\n- (server) Remove forced (unecessary) Mutex from handler #1679 by @jeff-hiner\n- (proto) Fix `SvcParamKey::Unknown` parsing #1678 by @jeff-hiner\n\n### Changed\n\n- (all) Minimum Rust Version now 1.59 #1771 by bluejekyll\n- (client) Parser panic to result #1758 by darnuria\n- (client) Avoid 3 unwrap() call inc Parser::flush_record. #1757 by @darnuria\n- (client) Cleanup lex #1756 by darnuria\n- (resovler) Make maximum request depth configurable #1749 by @wiktor-k\n- (server) Clean up ForwardAuthority api #1748 by @chotchki\n- (resolver) Relax mut requirements for resolver.clear_cache() and add cache flushing example #1747 by @dns2utf8\n- (resolver) Lookup access Records list directly #1746 by @izissise\n- (proto) Pass DnsRequestOptions to DNSSEC validating routines #1742 by @wiktor-k\n- (proto) Increase the maximum request depth to 26 #1736 by @wiktor-k\n- (server) Mark ForwardLookup as public #1729 by @chotchki\n- (all) upgrade windows openssl version to 1_1_1p #1728 by @bluejekyll\n- (all) Converted to `tracing` from `log` #1706 by @erikh and @bluejekyll\n- (server) Move logger setup code into binary #1703 by @djc\n- (proto) ignore errors when disconnected #1695 by @edevil\n- (server) RequestInfo derives Clone trait. #1693 by @humb1t\n- (proto/server) make doq transport settings more consistent with RFC #1682 by @bluejekyll\n- (all) Included githubactions in the dependabot config #1681 by @naveensrinivasan\n- (proto) deprecated `edns` methods on request and replaced with `extensions` and better scemantics #1675 by @leshow\n\n## 0.21.2\n\n### Added\n\n- (proto) add PartialEq+Hash derives, #1661 by @leshow\n\n### Fixed\n\n- (server) fix panic when tcp connect goes away before handling, #1668\n- (server) crates/server, InMemoryStore: Use a RwLock instead of a Mutex to manage inner storage, #1665 by @erikh\n- (all) fix audit regex failure, #1658\n- (resolver) Stop searching for additional records when encountering a name already seen, #1657 by @Mossop\n- (proto) fix time txt parsing in SOA records, #1656\n\n### Removed\n\n- (all) remove old crates (the ones moved into proto, tag v0.21.1 can get if needed for crates.io), #1655\n\n### Changed\n\n- (resolver) keep any address records included in the response to an NS query, #1672 by @db48x\n- (resolver) force forwarder to preserve_intermediates, #1660 by @vlmutolo\n- (resolver) make constructors for AsyncResolver with custom providers public, #1654 by @Noah-Kennedy\n\n## 0.21.1\n\n### Fixed\n\n- (util) fixed feature build issue in `resolve` #1649\n\n## 0.21.0\n\n### Added\n\n- (client) Parse DS records (@kmkaplan) #1635\n- (fuzz) Added fuzzing configuration (@saethlin) #1626\n- (resolver) Add `resolver.clear_cache()` sync and async (dns2utf8) #1611\n- (proto) Add CDS/CDNSKEY records from RFC7344 (frelon) #1595\n- (resolver) Configuration of outbound bind address for resolver (@surban) #1586\n- (proto) Add `CSYNC` record from RFC7477 (@frelon) #1583\n- (proto) trust_dns_proto::rr::Record now serializable (@mvforell) #1536\n- (client) new `zone_transfer` method for `AXFR` and `IXFR` use cases, client only (@trinity-1686a) #1478\n- (client) Flag for `use_edns` configuration on `AsyncClient` (@astro) #1492\n- (client) support for `TSIG` authentication (@trinity-1686a) #1459\n\n### Changed\n\n- (util) openssl is no longer default enabled in trust-dns-utils, bins marked as required as necessary #1644\n- (proto) deprecate outdated dnssec algorithms #1640\n- (resolver) *BREAKING* removed `DnsRequestOptions` parameter from `AsyncResolver::lookup`, this is derived from `ResolverOpts`\n- (server) pass RequestInfo into Authority on search #1620\n- (proto) SSHFP: Ed448 is assigned algorithm 6 in RFC 8709 #1604\n- (resolver) Do not retry the same name server on a negative response (@peterthejohnston) #1589\n- (all) `with-backtrace` feature renamed to `backtrace` (@pinkisemils) #1577\n- (resolver) TCP for truncated message responses, but not for other failures on responses (switch for old behavior `try_tcp_on_error`) ( @peterthejohnston) #1562\n- (server) Multiple queries in a message will always result in a FormError now #1554\n- (server) `ServerFuture` and other `Catalog` related API changes #1554\n- (server) By default, the server will now only log a single log line based for a given request (debug will be needed for more details) #1554\n- (server) `ResponseHandler` now must return a `ResponseInfo` to allow for more consistent logging #1554\n- (resolver) Correct behavior around trust_nx_responses (@peterthejohnston) #1556\n- (server) `ResponseHandler` trait is now `async_trait`, requires all impls to be annotated with `#[async_trait]` #1550\n- (server) `Authority` impls required to be internally modifiable and `Send + Sync` #1550\n- (server) Most `Authority` methods changes to `async fn` rather than returning custom `Future` impls #1550\n- (server) `Authority` trait is now `async_trait`, requires all impls to be annotated with `#[async_trait]` #1550\n- (proto) Header now stores ResponseCode instead of just u8 #1537\n- (client) improved async client example documentation (@ErwanDL) #1539\n- (resolver) on `REFUSED` (and other negative) response(s), fall back to other nameservers (@peterthejohnston) #1513 #1526\n- (client) the feature `dnssec` is no longer enabled by default, use `dnssec-ring` or `dnssec-openssl` #1506\n- (server) dnssec functions of `Authority` moved into `DnsSecAuthority` #1506\n- (all) Most public enum types are now marked `#[non_exaustive]` #1426\n- (resolver) DnsRequestOptions and ResolverOpts now `#[non_exaustive]` #1426\n- (proto) all I/O Streams now use `BufDnsStreamHandle` rather than generic `DnsStreamHandle` #1433\n- (proto) `DnsResponse` response now contains only a single Response #1433\n- (proto) `Name::append_name` and `Name::append_domain` now properly fallible when name is too long #1448\n- (resolver) special handling of the `onion.` TLD added to static resolution with negative responses (@trinity-1686a) #1479\n- (proto) internal Futures converted to Streams to support multiple responses, e.g. `AXFR` (@trinity-1686a) #1478\n- (proto) renamed `Signer` to `SigSigner` to differentiate from `TSigner` #1498\n\n### Removed\n\n- (all) removed `structopt` dependency #1644\n- (all) removed `chrono` dependency #1569\n- (client) Remove AsyncClientConnect and AsyncSecureClientConnect (future impls) in favor of async constructors (@ErwanDL) #1541\n- (proto) removed `RecordType::DNSSEC` and moved all variants of `DNSSECRecordType` into `RecordType` #1506\n- (proto) removed `BufStreamHandle` and `StreamHandle` #1433\n- (response) disabled `mdns` to work on a new solution #1433\n\n### Fixed\n\n- (proto) fix CAA .to_string() crash and format (@hartshorne) #1631\n- (proto) fix DoubleEndedIterator impl for Name #1639\n- (client) Fix AsyncClient::clone always setting use_edns (@ecton) #1598\n- (resolver) Use stream connections if datagram connections are not available (@pinkisemils) #1592\n- (server) Release resources when a server future is dropped (@pinkisemils) #1587\n- (proto) Panic when name exceeds maximal domain name length during display #1447\n\n## 0.20.4\n\n### Fixed\n\n- (all) updated tokio dependencies to 1.16 #1623\n- (all) removed audit chrono due to rustsec audit failure (backport) #1623\n\n### Changed\n\n- (all) Increased MSRV to 1.51\n\n## 0.20.3\n\n### Fixed\n\n- (resolver) Fix Windows build without system-config feature (@stephank) #1481\n\n## 0.20.2\n\n### Fixed\n\n- (proto) Panic on bad length in SVCB for record length #1465\n\n## 0.20.1\n\n### Added\n\n- (proto) HINFO record type support (@vlad20012) #1361\n- (proto) proto: add into_parts methods (@leshow) #1397\n- (proto) new HTTPS and SVCB record types #1402\n- (resolver) predefined Quad9 HTTPS resolver configuration (@zonyitoo) #1413\n\n### Fixed\n\n- (proto) Don't kill a DnsExchangeBackground if a receiver is gone (see #1276) (@djc) #1356\n- (proto) Take the current header truncated bit into account (@ilaidlaw) #1384\n\n### Changed\n\n- (async-std-resolver) Re-export AsyncStdConnection(Provider) (@romanb) #1354\n- (proto) Mutate edns & remove edns options (@leshow) #1363\n- (proto) Change Edns set_* to -> &mut Self (@leshow) #1369\n- (resolver) Enable RuntimeProvider in DoT implementations (@chengyuhui) #1373\n- (proto) Optimize name parsing (@saethlin) #1388\n- (proto) Remove a lot of bounds checks in BinDecoder by tracking position with a second slice (@saethlin) #1399\n- (proto) Make errors/error reporting more lightweight (@saethlin) #1409\n\n## 0.20.0\n\n### Changed\n\n- (all) upgraded to Tokio 1.0 (@messense) #1330 (0.3 updates in #1262)\n- (proto) Add serde support for the RecordType in the proto crate (@LEXUGE) #1319\n- (https) dns_hostname args all are `Arc<str>` rather than `Arc<String>`, use `Arc::from`\n- (proto) Set TCP_NODELAY when building a TCP connection (@djc) #1249\n- (all) *BREAKING* The `UdpSocket` trait has grown an associated `Time` type.\n- (all) *BREAKING* The `Connect` trait has lost its\n`Transport` associated type, instead relying on the `Self` type.\n- (all) *BREAKING* Introduced a new `DnsTcpStream` trait, which is now a\nbound for implementing the `Connect` trait.\n- (resolver) *BREAKING* Move `CachingClient` from `lookup_state` to `caching_client` module\n- (resolver) *BREAKING* Move `ResolverOpts::distrust_nx_responses` to `NameServerConfig::trust_nx_responses` (@djc) #1212\n- (proto) `data-encoding` is now a required dependency #1208\n- (all) minimum rustc version now `1.45`\n- (resolver) For all NxDomain and NoError/NoData responses, `ResolveErrorKind::NoRecordsFound` will be returned #1197\n- (server) Support for lowercase DNSClass and RecordType fields in zonefiles (@zhanif3) #1186\n- (resolver) Make EDNS optional for resolvers (@CtrlZvi) #1173\n- (all) Fully support *ring* for all DNSSEC operations. #1145\n- (all) No more `master` (branch, moved to `main`) slave, in honor of Juneteenth #1141\n- (all) Minimize `futures` dependencies (@JohnTitor) #1109\n- (proto) increases the UDP buffer size from 2048 to 4096 to allow larger payloads (@DevQps) #1096\n- (resolver) use IntoName trait on synchronous resolver interface (@krisztian-kovacs) #1095\n- (resolver) *BREAKING* removed async for `AsyncResolver::new` (@balboah) #1077 #1056\n- (server) *BREAKING* removed `Runtime` from `ServerFuture::register_socket` (@LucioFranco) #1088 #1087\n- (proto) *Breaking* Adjust the return value from `ResponseCode::high` from u16 to u8 #1202\n\n### Fixed\n\n- (client) Support reading the root hints file (@mattias-p) #1261\n- (resolver) Fix Glue records resolving (@wavenator) #1188\n- (resolver) Only fall back on TCP if cons are available (@lukaspustina) #1181\n- (proto) fix empty option at end of edns (@jonasbb) #1143, #744\n- (resolver) Return `REFUSED` instead of `NXDOMAIN` when server is not an authority (@AnIrishDuck) #1137\n- (resolver) forwarder: return NXDomain on `e.is_nx_domain()` (@balboah) #1123\n- (resolver) Regards NXDomain and NoError empty responses as errors (continues searching for records), #1086 #933\n\n### Added\n\n- (util) *new* Add resolve.rs as CLI for trust-dns-resolver #1208\n- (proto) Added proper zone display to all RData as an impl of Display #1208\n- (proto) `xfer::dns_response::NegativeType` and `DnsResponse::negative_type` to classify negative response type #1197\n- (proto) `DnsResponse::contains_answer` to determine if a response message has data related to the query #1197\n- (proto) `RecordType::is_soa` and `RecordType::is_ns` to easily check for these types #1197\n- (proto) `Message::all_sections` to allow iteration over all `Records` in all sections in a Message #1197\n- (proto) `Message::take_queries` to remove from a Message without requiring clone #1197\n- (proto) `DnsHandle::Error` associated type to support generic errors across trust-dns libraries #1197\n- (resolver) Add support for tlsa RRs in trust_dns_resolver (@smutt) #1189\n- (resolver) Support pointer ending label compression (@jacoblin1994) #1182\n- (proto) Keep OS error information on `io::Error` (@brunowonka) #1163\n- (proto) Support mDNS cache-flush bit (@fluxxu) #1144\n- (proto) Allow creating TXT Rdata with binary data (@bltavares) #1125\n- (proto) Add mutable access to Message fields (@leshow) #1118\n- (proto) Add Name.parse_ptr_name, to IP address (@Mygod) #1107\n- (resolver) Allow HTTPS to be generic over Runtime (@balboah) #1077 #1074\n\n## 0.19.7\n\n### Changed\n\n- make `backtrace` an optional dependency, backported from 0.20 (@jmagnuson) #1387\n\n## 0.19.6\n\n### Fixed\n\n- bump resolv-conf from 0.6.0 to 0.7.0, fixes system resolv.conf parse issue (@wg) #1285\n\n## 0.19.5\n\n### Fixed\n\n- (server) updated rusqlite to 0.23.1 #1082\n\n## 0.19.4\n\n### Fixed\n\n- (resolver) properly reuse connections, for TCP, TLS, and HTTPS #1058\n\n### Added\n\n- (resolver) option to include intermediate (CNAME) records in results (@balboah) #1028\n- (async-std-resolver) added implementation for async-std! woohoo! (@belak) #1067 #1051 #926\n- (server) add support for $INCLUDE in zone files (@kachayev) #1027\n- (proto) exposed LabelIter from Name (@avitex) #1064\n\n### Changed\n\n- (all) updated rustls to 0.17\n- (all) updated tokio-rustls to 0.13\n- (all) min rustc compiler version now 1.40\n\n## 0.19.3\n\n### Changes\n\n- (all) update all dependencies\n- (all) minimize `futures` dependency to `std` features (@antonylsg) #1003\n- (all) cleanup clippy warnings for Rust v.1.41 #1008\n- (proto) make all fields public on `ResolverOpts` for ease of use (@ackintosh) #1009\n\n## 0.19.2\n\n### Changes\n\n- (resolver) make system config loading optional to support fuchsia (@chunyingw) #996\n\n## 0.19.1\n\n### Changes\n\n- (resolver) dependency on `trust-dns-proto` no is no-default-features (@chunyingw) #993\n\n## 0.19.0\n\n### Changes\n\n- (resolver) AsyncResolver abstract over `RuntimeProvider` (@chunyingw) #975\n- (resolver) TokioAsyncResolver implementation now has default methods that have a default Handle::current set `TokioAsyncResolver::tokio`\n\n### Added\n\n- (resolver) testing module for generic tests across generic async runtime impls (@chunyingw) #979\n- (proto) support for building into WASM (@moshevds) #987 #990 #991\n\n### Removed\n\n- (all) failure is no longer used for error types, std::Error impls only\n\n## 0.18.1\n\n### Fixes\n\n- (server) Fix issue when MX or other records collect additionals based of `.`, root, targets #980\n\n## 0.18.0\n\n### Changes\n\n- (all) CHANGELOG.md is now merged from the Resolver crate and the top-level. All notes from the Resolver CHANGELOG were merged into this changelog, with the format `## {version} (Resolver)` and the existing notes from the top-level are formatted as `## {version} (Client/Server`. This should make notes on releases easier. Going forward the scope of changes across crates will be captured as `- ({crate}) {note}` where all is used for across the board updates.\n- (all) After the 0.18 release, all crates will be versioned uniformally, and released at the same time, this will resolve some issues around consistency with releases. The final Resolver release before this was `0.12`.\n- *breaking* Generally, any interface that took a 0.1 Future, now returns or consumes a std::future::Future\n- *breaking* (client) rebranded from `trust-dns` to `trust-dns-client`\n- *breaking* (named) moved from `trust-dns-server` to `trust-dns`, in bin/**\n- *breaking* (all) all internals updated to std::future and async/await (requires `Rust 1.39` minimum)\n- *breaking* (client) AsyncClient now returns a connect future which resolves to the client and it's background.\n- *breaking* (resolver) AsyncResolver::new changed to AsyncResolver::connect, requires awaiting the returned future\n- (client) ClientFuture renamed to AsyncClient\n- (resolver) AsyncResolver now requires a ConnectionProvider type parameter, see TokioAsyncResolver as a predefined type without it\n- (resolver) Now returns a connect future to connect the start all background tasks\n- (proto, resolver) renamed the `tokio-compat` feature to `tokio-runtime`\n- (all) added cargo-make Makefile.toml to support all automation in Github workflow\n- (proto) renamed `SecureDnsHandle` to `DnssecDnsHandle`\n- (client) renamed `SecureSyncClient` to `SyncDnssecClient`\n- Abstractions around Tokio for generic Executors #960 (@chunyingw)\n- Enable early data on tokio-rustls #911 (@daareiza)\n\n### Fixes\n\n- (proto) Removed deadlock from UDPSocket stream impl\n- (named) made tests a little more resilient to port stealing\n- (proto) Unknown ResponseCodes will no longer cause a panic\n\n### Removed\n\n- (client) client::BasicClientHandle, ClientFuture no longer requires Background or the separate Handle, this can generally be replaced with just ClientFuture itself in most use cases.\n- *breaking* (resolver) Background type removed\n- (resolver) removed deprecated AsyncResolver::lookup_service, see AsyncResolver::lookup_srv\n- (client) removed all deprecated reexports from trust_dns_proto\n- (proto) removed unused xfer::BasicDnsHandle, xfer::MessageStreamHandle\n- (resolver) removed all unused custom LookupFuture types SrvLookupFuture, ReverseLookupFuture, Ipv4LookupFuture, Ipv6LookupFuture, MxLookupFuture, TxtLookupFuture, SoaLookupFuture, NsLookupFuture\n- (resolver) removed Background, BackgroundLookup, and BackgroundLookupIp\n- (resolver|client) DoH no longer sends User-Agent header #962 (@quininer)\n\n### Added\n\n- (proto) proto now has a `testing` feature to allow dependencies that might want access to some of the testing harnesses. #936 (@chunyingw)\n\n## 0.17.0 (Client/Server)\n\n### Added\n\n- (all) Licenses copied into all crates #832 (@divinerapier)\n- `UdpSocket` for compatibility with Tokio, when not using non-Tokio executors #824 (@chunyingw)\n- `Connect` for Tcp connection compatibility with Tokio, when not using non-Tokio executors #794 (@chunyingw)\n\n### Changes\n\n- *breaking* (client) TcpClientConnect requires generic stream param #794 (@chunyingw)\n- *breaking* (client) UdpClientStream requires generic socket param #824 (@chunyingw)\n- *breaking* (proto) UdpStream and UdpClientStream requires generic socket #824 (@chunyingw)\n- *breaking* (proto) TcpStream and TcpClientStream require generic stream param #794 (@chunyingw)\n- Algorithm::from_u8 is now infallible #800 (@zackangelo)\n- Algorithm::hash_len now returns Option #800 (@zackangelo)\n\n### Removed\n\n- `byteorder` dep dropped in favor of `std` implementations #844 (@lukaslueg)\n\n## 0.16.1 (Client/Server)\n\n- disables the `socket2/reuseport` feature except when `mdns` is enabled\n\n## 0.16.0 (Client/Server)\n\n### Fixed\n\n- (proto) UDP Sockets not being properly closed in timeout scenarios #635\n- (server) CNAME resolutions #720\n- (server) NSEC evaluation for NODATA and NXDOMAIN responses #697\n- (server) Call add_update_auth_key in named.rs #683 (@Darkspirit)\n\n### Added\n\n- (proto) support for the OPENPGPKEY and SSHFP record types #646 #647\n- (server/client) support ECDSA signing with ring #688 (@Darkspirit)\n- (server) forwarding support in server with trust-dns-resolver (default feature) #674\n- (server) Authority trait for generic Authorities (File, Sqlite, Forwarder) #674\n- (server) ANAME resolutions #720\n- (server) Additional section processing for ANAME, CNAME, MX, NS, and SRV #720\n- (server) Added endpoint name config to DoH and DoT TLS endpoint #714\n- (proto) NAPTR record data (no additional record processing support) #731\n- (server) Added support for wildcard lookups, i.e. `*.example.com` in zone files\n\n### Changed\n\n- *breaking* (proto) UdpClientStream and UdpClientConnection refactored to associate UDP sockets to single requests #635\n- *breaking* (server) configuration for sqlite dynamic update different, see dnssec_with_update.toml for example #622\n- *breaking* (util)/dnskey_to_pem has been renamed to bind_dnskey_to_pem for clarity #622\n- *breaking* (proto) Record::from_rdata no longer requires RecordType parameter #674\n- *breaking* (server) AuthLookup inner types simplified #674\n- *breaking* (server) RequestHandler now requires associated type for Future results of lookups #674\n- *breaking* (server) ResponseHandler now requires Clone and 'static #674\n- *breaking* (server) Catalog::lookup takes ownership of MessageRequest and returns a LookupFuture #674\n- *breaking* (server) MessageRequest and Queries no longer carrying lifetime parameters #674\n\n## 0.15.0 (Client/Server)\n\n### Fixed\n\n- Fix two separate integer overflows from subtractions #585 (@oherrala)\n- strictly enforce name and label lengths during label parsing #584\n- enforce that only prior labels are used in label expansion, decompression #578 (@oherrala)\n- CAA now properly performs case-insensitive compares #587 (@oherrala)\n- overhauled rdata parsers with Restrict type to reduce potential of overflowing operations #586\n\n### Added\n\n- feature `dns-over-rustls` to `trust-dns-server` (server) and `trust-dns` (client)\n- feature `dns-over-https-rustls` *experimental* #557\n- new configuration options for tls, see `server/tests/named_test_configs/dns_over_tls_rustls_and_openssl.toml`\n- new utility for querying root key-signing-keys, `util/get-root-ksks`\n- updated root trust-anchor to include new `20326` RSA root ksk\n\n### Changed\n\n- Make trust_dns_server::server::ResponseHandler Send #593 (sticnarf)\n- Wrap types in Restrict and force validation before usage from streams #586\n- *breaking* Overhauled all `ClientFuture` implementations to align with new `DnsExchange` and `DnsMultiplexer` components in proto.\n- *breaking* `ClientFuture` after construction, now returns a \"background\" `ClientFuture` and a \"foreground\" `BasicClientHandle`\n- *breaking* `Client` has more type parameters, these match with the same types returned by the `*ClientConnection` constructors\n- *breaking* all default features, removed: \"dns-over-openssl\", \"dnssec-openssl\". Use --features=dns-over-openssl,dnssec-openssl to enable\n- *breaking* `named` configuration now has AXFR disabled by default.\n- *breaking* Migrated from error_chain to Failure #474 (@silwol)\n- feature `tls` renamed to `dns-over-openssl`\n- upgraded `native-tls` and `tokio-tls` to 0.2\n- upgraded `rusqlite` to 0.15\n\n## 0.14.0 (Client/Server)\n\n### Changed\n\n- Updated `trust-dns-proto` to `0.3`, which brings in better `Name` and `Label` impls\n- rusqlite updated to 0.13 #331 (@oherrala)\n- Many serialization improvements #317\n- Use tokio-timer (part of tokio upgrade) @justinlatimer #411\n- Backtrace now optional @briansmith #416\n- Use tokio-tcp (part of tokio upgrade) @Keruspe #426\n- Use tokio-udp (part of tokio upgrade) @Keruspe #426\n- Upgrade to tokio-executor (tokio upgrade) @Keruspe and @justinlatimer #438\n- Send (Sync where applicable) enforced on all DnsHandle::send and other interfaces #460\n- ClientHandle api return Send @ariwaranosai #465\n\n### Added\n\n- `Name` and `Label` now support idna, punycode, see `Name::from_str`\n- `trust_dns::rr::ZoneUsage` for detecting restrictions on `Name`s and their associated zones\n\n### Fixed\n\n- octal escapes fixed in `Name` parsing #330\n- `NULL` record type incorrectly valued at `0` to proper `10` #329 (@jannic)\n- BinEncoder panic on record sets of extreme sizes #352\n- Panic when oneshot channel receiver goes away #356\n- Hung server on UDP due to bad data #407\n\n### Removed\n\n- usage of tokio-core::Core @Keruspe #446\n\n## 0.13.0 (Client/Server)\n\n### Added\n\n- Trust-DNS Proto crate to separate server management from base operations #222\n- Trust-DNS Util crate for dnssec management tools (@briansmith)\n- Integration tests for Server to validate all supported DNSSEC key types\n- *breaking* Common features `dnssec-ring`, `dnssec-openssl`, and `dnssec` across all crates (replaces `openssl` and `ring` features)\n- Clarified `tls` feature with `tls-openssl`, and `tls` in server (in preparation for `tls-rustls`)\n- Support for rfc6844, CAA record type #234\n- Support for rfc6698, TLSA record type #285\n- Clippy validation in CI #288 (@little-dude)\n\n### Changed\n\n- DNSKEY is now self-signed\n- Internal API changes to `client` calling into `proto` for actual implementations\n- Large refactoring of internal APIs to more cleanly support \\*ring\\* and OpenSSL features (@briansmith)\n- `ClientHandle::send` moved to `trust_dns_proto::DnsHandle::send` (internal API)\n- Many interfaces moved from `client::ClientStreamHandle` to `trust_dns_proto::DnsStreamHandle`\n- `Message::sign` has been renamed and change to the more general method `Message::finalize`\n- Some `io::Error`s have been converted to `trust_dns_proto::ProtoError`\n- `SyncClient` and `SecureSyncClient` are now `Send + Sync` #245\n- Unknown RecordTypes and RDatas will no longer error #294\n\n### Fixed\n\n- Server: signing issues when loading from persistence\n- Server: When SupportedAlgorithms (rfc6975) not supplied default to returning all signatures #215\n- Proto: u16::from(DNSClass) now enforces OPT is greater than/or 512 per spec #303\n- Improve usage of Rand for message ids and port assignment #291 & #292\n- NxDomain and empty NoData responses to be compliant #286 (lots of help from @Darkspirit)\n\n### Removed\n\n- Removed the `NativeTls` and `OpenSSL` `ClientConnection` variants, use the Rustls impls or the tokio based `TlsClientStream` instead. This was required for `SyncClient` being `Send + Sync`\n- Server: no longer auto-generate keys on startup #218\n- All deprecated APIs removed from -proto #262\n- Server: removed deprecated RSA config loading options, see reference test cargo.tomls #276 (@briansmith)\n\n## 0.12.0 (Resolver)\n\n- Internal updates related to generification of executors\n\n## 0.12.0 (Client/Server)\n\n### Fixed\n\n- Server was not properly signing zone after fresh start\n\n### Added\n\n- RSA and ECDSA validation with *ring* for DNSSEC, removes dependency on openssl (@briansmith)\n- `lookup` to `ClientHandle`, simpler form with `Query`\n- `query` to `Query` for ease of Query creation\n\n### Changed\n\n- Large celanup of signing and verification paths in DNSSEC (@briansmith)\n- *breaking* changed `TrustAnchor::insert_trust_anchor` to more safely consume `PublicKey` rather than `Vec<u8>`\n\n## 0.11.2 (Client/Server)\n\n(README.md documentation changes for crates.io)\n\n## 0.11.1 (Resolver)\n\n- disables the `socket2/reuseport` feature except when `mdns` is enabled\n\n## 0.11.1 (Client/Server)\n\n### Changed\n\n- Updates to `Name::is_fqdn` for more accuracy (@rushmorem)\n\n### Added\n\n- per project Readme.md for crates.io\n\n## 0.11 (Resolver)\n\n### Fixed\n\n- Ignore UDP responses not from target src address #629 #630 #631 (@aep)\n- Improved NSEC validation of responses #697\n\n### Added\n\n- New option to execute queries concurrently, default is 2 #615\n- Lookup::record_iter for listing all records returned in request #674\n- NAPTR record data (no additional record processing support) #731\n\n### Changed\n\n- Added option to distrust Nameservers on SERVFAIL responses, continue resolution #613\n- *breaking* Record::from_rdata no longer requires RecordType parameter #674\n- LRU cache is now based on Query rather than just name #674\n\n## 0.11.0 (Client/Server)\n\n### Added\n\n- `Name::FromStr` for simpler parsing, specify trailing `.` for FQDN\n- `Name::append_label` for clearer usage while appending labels to a Name\n- `Name::append_name` for clearer usage while appending one name to another\n- `Name::append_domain` alias for append_name and marking as FQDN\n\n### Changed\n\n- *breaking* all `&mut self` methods on `Name` deprecated as unsafe, Name labels are now immutable.\n- *breaking* All `ClientHandle` traits now take `&Handle` instead of `Handle` (@rushmorem)\n- *warning* `Name` now tracks if it is a fully qualified domain name, slightly changes name parsing rules, allowing `www.example.com` without the trailing `.`, which means that FQDN names are not enforced.\n\n### Removed\n\n- *deprecated* `Name::with_labels` see `Name::from_labels`\n- *deprecated* `Name::append` wasn't clean, see `Name::append_name`\n- *deprecated* `Name::add_label` exposed internal data structure, see `Name::append_label`\n- *deprecated* `Name::label` unclear usage/name, see `Name::append_label`\n- *deprecated* `Name::prepend_label` exposed internal data structure, unclear usage *no replacement*\n- *deprecated* `Record::add_name` unclear usage *no replacement*\n\n## 0.10.5 (Client/Server)\n\n### Added\n\n- Library documentation, examples for client query and update\n\n### Changed\n\n- ServerFuture now Accepts generic RequestHandler (@Antti)\n\n## 0.10.4 (Client/Server)\n\n### Added\n\n- Allow more options with Key and KeyUsage\n- Initial Resolver implementation\n\n### Fixed\n\n- NSEC coverage bitmap overflow in nightly\n- Name::zone_of panic (@SAPikachu)\n\n## 0.10.3 (Client/Server)\n\n### Fixed\n\n- Proper TCP connection timeout\n- Fixed signature format of ECDSA (@SAPikachu) #141\n\n## 0.10.2 (Resolver)\n\n### Fixed\n\n- all optional dependencies updated #640\n\n## 0.10.2 (Client/Server)\n\n### Fixed\n\n- Fixed format of ED25519 keys (@briansmith) #129\n\n### Changed\n\n- Revamped signer and keypair to better deal with public key (possible breaking change)\n- Upgraded *ring* to 0.9.x series, requires pkcs8 for key storage\n- Dropped support for dangerous private key byte access (possible breaking change)\n- Upgraded tokio-rustls and rustls dependencies to support *ring* updates\n\n### Added\n\n- PublicKey and Verifier for verifying with zero copy from KEY and DNSKEY (possible breaking change)\n- Pkcs8 as a supported KeyFormat for storage (possible breaking change)\n\n## 0.10.1 (Resolver)\n\n### Fixed\n\n- UDP Sockets not being properly closed in timeout scenarios #635\n\n## 0.10.1 (Client/Server)\n\n### Added\n\n- Added `From<IpAddr>` for Name (reverse DNS) #105\n- AppVeyor support #103\n- rustls client tls support (separate crate)\n- full support for KEY RR in client\n- compatibility tests with BIND for SIG0 updates\n- Added full implementation of KEY type\n\n### Changed\n\n- Updated TLS documentation, added more elsewhere, docs required; fixes #102\n- Upgraded tokio-core and moved to tokio-io\n- *Important* Some `Server` types have been migrated to [RFC#344](https://github.com/aturon/rfcs/blob/conventions-galore/active/0000-conventions-galore.md#gettersetter-apis) style. `get_field()` -> `field()`; `field()` -> `set_field()`\n- Moved native-tls client impl to separate crate\n- Defaulted to OpenSSL for tls implementation\n\n### Fixed\n\n- key_tag calculation for DNSKEY and KEY now correct #118 (@jannic)\n- SIG0 signing fixed to match RFC and BIND #120 (@jannic)\n\n## 0.10 (Resolver)\n\n### Fixed\n\n- Fix two separate integer overflows from subtractions #585 (@oherrala)\n- strictly enforce name and label lengths during label parsing #584\n- enforce that only prior labels are used in label expansion, decompression #578 (@oherrala)\n- CAA now properly performs case-insensitive compares #587 (@oherrala)\n- overhauled rdata parsers with Restrict type to reduce potential of overflowing operations #586\n- Propagate TTLs for NXDOMAIN responses #485 (@hawkw)\n- LookupIpFuture implementation to be proper in regards to loop control #480 (@hawkw)\n- max query depth tracking in Resolver #469\n\n### Changed\n\n- Wrap types in Restrict and force validation before usage from streams #586\n- Delays all connections until actual use #566\n- Relax parsing rules for CAA issuer keys and values #517\n- `ResolverFuture` renamed to `AsyncResolver` #487 (@hawkw)\n- *breaking* `AsyncResolver::new` returns a tuple of an `AsyncResolver` and a future that drives DNS lookups in the background #487 (@hawkw)\n- *breaking* All `AsyncResolver` lookup methods return `BackgroundLookup<T>` rather than `T` #487 (@hawkw)\n- *breaking* Migrated from error_chain to Failure #474 (@silwol)\n- improve truncation to always return records #497\n\n### Added\n\n- updated root trust-anchor to include new `20326` RSA root ksk\n- DNS over HTTPS support #520\n\n## 0.10.0 (Client/Server)\n\n### Changed\n\n- *Important* Possible breaking API change, the original Client has been renamed.\n\nIn an attempt to reduce the overhead of managing the project. The original\nClient has now been revamped to essentially be a synchronous Client over the\nClientFuture implementation. The ClientFuture has proven to be a more stable\nand reliable implementation. It was attempted to make the move seamless,\nbut two new types were introduced, `SyncClient` and `SecureSyncClient`, which\nare both synchronous implementations of the old Client function interfaces.\nPlease read those docs on those new types and the Client trait.\n\n- When EDNS option is present, return only the digest understood matching RRSETs\n- All code reformatted with rustfmt\n- *Important* breaking change, all `Record` and associated types have been migrated to [RFC#344](https://github.com/aturon/rfcs/blob/conventions-galore/active/0000-conventions-galore.md#gettersetter-apis) style. `get_field()` -> `field()`; `field()` -> `set_field()`\n\n### Removed\n\n- *Important* The original Server implementation was removed entirely.\n\nPlease use the ServerFuture implementation from now on. Sorry for the inconvenience,\nbut this is necessary to make sure that the software remains at a high quality\nand there is no easy way to migrate the original Server to use ServerFuture.\n\n### Added\n\n- Initial support for ECDSAP256SHA256, ECDSAP384SHA384 and ED25519 (client and server)\n- additional config options for keys to named, see `tests/named_test_configs/example.toml`\n- Added DNS over TLS support, RFC 7858, #38\n- Added native-tls with support for macOS and Linux (DNS over TLS)\n- matrixed tests for all features to Travis\n\n## 0.9.3 (Client/Server)\n\n### Changed\n\n- updated to rust-openssl 0.9.x series\n- restructured dnssec code to better support alternate key formats\n\n## 0.9.2 (Client/Server)\n\n### Changed\n\n- mio_client is now an optional feature in favor of the futures-rs ClientFuture\n\n## 0.9.1 (Resolver)\n\n### Fixes\n\n- Fixes the MAX TTL being outside the bounds of 32bit systems, reduces max to 1 day #528\n\n## 0.9.1 (Client/Server)\n\n### Changed\n\n- OpenSSL is now an optional feature for the client\n\n## 0.9 (Resolver)\n\n### Added\n\n- DNS-over-TLS configurations (requires one of `dns-over-native-tls` or `dns-over-rustls` features) #396\n- Experimental DNS-SD, service discovery (RFC 6763, `mdns` feature required) #363\n- Experimental mDNS, multicast DNS, known issues persist (RFC 6762, `mdns` feature required) #337\n- Exposed TTLs on `Lookup` objects @hawkw #444\n- Added global resolver example #460\n\n### Changed\n\n- Use tokio-timer (part of tokio upgrade) @justinlatimer #411\n- Backtrace now optional @briansmith #416\n- Upgrade to tokio-tcp (tokio upgrade) @Keruspe #426\n- Upgrade to tokio-udp (tokio upgrade) @Keruspe #427\n- Upgrade to tokio-executor (tokio upgrade) @Keruspe and @justinlatimer #438\n- Always reattempt nameserver reconnections regardless of time #457\n- Defaulted type parameter for LookupFuture, removed InnerLookupFuture #459\n\n### Fixed\n\n- BinEncoder panic on record sets of extreme sizes #352\n- Panic when oneshot channel receiver goes away #356\n- Incorrect IPv6 configuration for Google nameservers #358\n- Properly yield on failure to acquire lock #372\n- Correct order of search list with ndots variable #410\n- Send (Sync where applicable) enforced on all DnsHandle::send and other interfaces #460\n- Properly track max query depth as a `task_local` not `thread_local` #460, #469\n- IPv4 like name resolution in lookup_ip with search order #467\n\n### Removed\n\n- usage of tokio-core::Core @Keruspe #446\n\n## 0.9.0 (Client/Server)\n\n### Added\n\n- new ServerFuture tokio and futures based server, #61\n- UdpStream & TcpSteam to support stream of messages with src address\n- TimeoutStream to wrap TcpStreams to help guard against malicious clients\n- Added Notify support to ClientFuture\n- Added IntoRecordSet and conversion impls for RecordSet and Record\n\n### Changed\n\n- Split Server and Client into separate crates, #43\n- Moved many integration tests to `tests` from `src`, #52\n- Migrated all handles to new futures::sync::mpsc impls\n- Modified all requisite client methods for IntoRecordSet.\n- All client methods now support multiple records per query, update, notify and delete\n\n### Fixed\n\n- Flush TcpStream after fully sending Message\n- Recognize no bytes read as closed TcpStream\n\n## 0.8.1 (Resolver)\n\n### Changed\n\n- Make read_system_conf() function public #338 (@oherrala)\n- Hosts map was not properly reference counted #342\n\n### Fixed\n\n- Panic in edge case of label compression #341 (@SAPikachu)\n- Fix `localhost` lookup and no longer panic on no names #343\n\n## 0.8.1 (Client/Server)\n\n### Fixed\n\n- Fix build on rustc 1.11, #66\n\n## 0.8.0 (Resolver)\n\n### Changed\n\n- Updated `trust-dns-proto` to `0.3`, which brings in better `Name` and `Label` impls\n- Dropped LALRPOP `resolv.conf` parser in favor of the `resolv-conf` #335 (@cssivision & @little-dude)\n- Improved message serialization #311 (@little-dude)\n- Many serialization improvements #317\n- Dependencies updated #334 (@oherrala)\n\n### Added\n\n- `Name` and `Label` now support idna, punycode, see `Name::from_str`\n- Clippy added to build #304! (@neosilky)\n- `from_system_conf` on now supported on Windows 32bit targets (previously just 64bit) #313 (@liranringel)\n\n### Fixed\n\n- octal escapes fixed in `Name` parsing #330\n- `NULL` record type incorrectly valued at `0` to proper `10` #329 (@jannic)\n\n## 0.8.0 (Client/Server)\n\n### Added\n\n- SecureClientHandle, for future based DNSSEC validation.\n- ClientFuture, futures based client implementation, #32\n\n### Fixed\n\n- Randomized ports for client connections and message ids, #23\n- OpCode::From for u8 removed, added OpCode::from_u8(), #36\n- Fix for named startup related to ipv6, #56\n\n### Changed\n\n- Upgraded OpenSSL to 0.8.* #50\n- Cleaned up the Server implementation to isolate connection handlers\n- Deprecated old Client will possibly remove in the future\n\n## 0.7.3 (Client/Server 2016-08-12)\n\n### Fixed\n\n- Issue #27: label case sensitivity revisited for RRSIG signing, RFC 6840\n- TCP reregister on would-block errors\n\n## 0.7.2 (Client/Server 2016-08-10)\n\n### Fixed\n\n- Issue #28: RRSIG validation of wildcards, label length > wildcard length\n\n## 0.7.1 (Client/Server 2016-08-09)\n\n### Fixed\n\n- Issue #27: remove implicit case conversion of labels (fixes NSEC validation)\n\n## 0.7.0 (Resolver)\n\n### Changed\n\n- Resolver no longer depends on Client\n- *breaking* Resolver no longer returns io:Errors, use `From<ResolveError>` for `io::Error`\n- Resolver is now `Send`\n- DNSSEC now disabled by default in Resolver, see `dnssec-ring` or `dnssec-openssl` features #268\n- CNAME chaining was cleaned up #271 (@briansmith)\n- On hostname parsing to IpAddr, return without lookup #302 (@cssivision)\n- Change default `LookupIpStrategy` from `Ipv4AndIpv6` to `Ipv4thenIpv6` #301 (@cssivision)\n\n### Added\n\n- ResolveError and associated types\n\n### Fixed\n\n- Cleaned up CNAME chained lookups, better TTL enforcement, etc #298\n\n## 0.7.0 (Client/Server 2016-06-20)\n\n### Added\n\n- Added recovery from journal to named startup\n- SQLite journal for dynamic update persistence\n- Private Key generation during startup, for dnssec zones\n- Read private key from filesystem during start and registers to zone\n\n### Changed\n\n- Removed many of the unwraps in named binary\n- Reworked all errors to use error-chain\n- Adjusted interface for Signer to use duration\n- All `#[cfg(ftest)]` tests now `#[ignore]`\n\n### Fixed\n\n- TXT record case sensitivity\n\n## 0.6.0 (Resolver)\n\n### Changed\n\n- Split UDP and TCP into different NS pools, prefer UDP lookups first\n- On truncated UDP responses, promote to TCP for resolution\n\n### Added\n\n- 64bit Windows support for reading DNS configuration! (@liranringel)\n- CNAME chain resolution (where CNAME results are not returned in the same query)\n- Resolution prefers `/etc/hosts` before querying (@cssivision)\n\n## 0.6.0 (Client/Server 2016-06-01)\n\n### Added\n\n- Documentation on all modules, and many standard RFC types\n- Authority zone signing now complete, still need to load/save private keys\n- DNSKEYs auto inserted for added private keys\n- New mocked network client tests, to verify zone signing\n- NSEC record creation for zone, with tests\n- SIG0 validation for Authentication on for dynamic updates\n- Client CQADDD operations, delete_by_rdata, delete_rrset, delete_all\n- Client compare_and_swap operation... atomics are here!\n\n### Fixed\n\n- Added loop on TCP accept requests\n- Added loop on UDP reads\n- Upgraded to mio 0.5.1 for some bug fixes\n- Not returning RRSIGs with SOA records on authoritative answers\n\n### Changed\n\n- Internal representation of record sets now a full data structure\n- Better rrset keys for fewer clones\n- Removed many excessive clones (should make requests even faster)\n- Cleaned up authority upsert and lookup interfaces\n- All authorities default to IN DNSCLASS now (none others currently supported)\n- Cleaned up the Signer interface to support zone signing\n- Simplified RData variant implementations\n- Improved ENDS and SIG0 parsing on Message deserialization\n\n## 0.5.3 (Client/Server 2016-04-07)\n\n### Fixed\n\n- [Linux TCP server mio issues](https://github.com/bluejekyll/trust-dns/issues/9)\n\n### Changed\n\n- combined the TCP client and server handlers\n- reusing buffer in TCP handler between send and receive (performance)\n\n## 0.5.2 (Client/Server 2016-04-04)\n\n### Changed\n\n- updated mio to 0.5.0\n- updated chrono to 0.2.21\n- updated docopt to 0.6.78\n- updated log to 0.3.5\n- updated openssl to 0.7.8\n- updated openssl-sys to 0.7.8\n- updated rustc-serialize to 0.3.18\n- updated toml to 0.1.28\n\n## 0.5.1 (Client/Server 2016-03-30)\n\n### Added\n\n- NSEC3 resolver validation\n- data-ecoding as a dependency (base32hex)\n- trust-dns banner on boot of server\n\n### Changed\n\n- Changed the bin.rs to named.rs, more accurate, allow for other binaries\n\n## 0.5.0 (Resolver)\n\n### Changed\n\n- *breaking* `LookupIp` now returns an iterator over owned data (IpAddr is Copy + Clone ref not necessary)\n- *breaking* `Resolver::lookup` will now return an Err on NxDomain and NoData responses\n- rewrote much of the caching and lookup functionality for generic RecordType lookups\n- removed &mut from resolver fn interfaces, make it easier to use\n\n### Added\n\n- Generic record type lookup\n- reverse_lookup for IP to Name lookups\n- ipv4_lookup for looking up *only* ipv4 (lookup_ip has options for dual-stack)\n- ipv6_lookup for looking up *only* ipv6 (lookup_ip has options for dual-stack)\n- mx_lookup for querying mail exchanges\n- srv_lookup for service records and also a specialized form for ease of use lookup_service\n- txt_lookup for text record lookups\n\n## 0.5.0 (Client/Server 2016-03-22)\n\n### Added\n\n- Updated rust-openssl to 0.7.8 which include new RSA creation bindings\n- NSEC resolver validation\n- NSEC3 parsing support\n- DNSSEC validation of RRSIG and DNSKEY records back to root cert\n- Integration with OpenSSL (depends on fork until rust-openssl 0.7.6+ is cut)\n- Binary serialization and deserialization of all DNSSEC RFC4034 record types\n- EDNS support\n- Coveralls support added\n- Partial implementation of SIG0 support for dynamic update\n- SRV record support\n\n### Changed\n\n- Dual licensed with MIT (and Apache 2.0)\n- Abstracted Client over TCP and UDP for common implementation of queries\n\n### Fixed\n\n- Binary Serialization and Deserialization of NSEC3\n- AXFR SOA ordering\n- Travis build failing\n\n### Deprecated\n\n- See updated trust_dns::client::Client API\n\n## 0.4.0 (Resolver)\n\n### Removed\n\n- *breaking* impl `Iterator` removed from `LookupIp` result type, see `LookupIp::iter` for replacement\n\n### Added\n\n- Support for DNSSEC validation\n- LRU Cache\n\n## 0.4.0 (Client/Server 2015-10-17)\n\n### Added\n\n- Added AXFR support\n- Dynamic update support\n\n### Fixed\n\n- Name pointer support\n\n## 0.3.1 (Client/Server 2015-10-04)\n\n### Fixed\n\n- Removed buffer clone during label pointer decoding (speed/memory)\n- Removed a lot of unnecessary clones, heavier use of Rc\n- Binary server bugs (fully functional)\n\n## 0.3.0 (Resolver)\n\n### Added\n\n- `options attempts:N` aka `ResolverOpts::attempts` support, aka retries\n- Google IPv6 nameservers as defaults for `ResolverConfig::default`\n- support for domain name search in `ResolverConfig` and `LookupIpFuture`\n- support for search names in `ResolverConfig` and `LookupIpFuture`\n- `LookupIpFuture` type alias to `LookupIpFuture<NameServerPool>` *compatibility*\n\n### Changed\n\n- *breaking* `LookupIpFuture` renamed to `LookupIpFuture`\n- *breaking* `LookupIpFuture` now takes a generic parameter, generally `<NameServerPool>`\n\n## 0.3.0 (Client/Server 2015-09-27)\n\n### Added\n\n- Zone files support BIND time formats, e.g. #h#d\n- Toml config file support (not compatible with BIND)\n\n## 0.2.1 (Client/Server 2015-09-17)\n\n### Added\n\n- Functional tests to verify against other DNS servers\n\n### Changed\n\n- mio replaced std::net operators\n\n## 0.2.0 (Resolver)\n\n### Added\n\n- ipv6 parallel lookup\n- multiple ipv4 and ipv6 lookup strategies\n- library documentation examples\n- test coverage for resolver\n\n## 0.2.0 (Client/Server 2015-09-07)\n\n### Added\n\n- Server support with catalog and tests for example.com\n- Parsing example rfc1035 zone file\n- new lexer for zone files with simplified FSM\n- Travis CI testing support\n- Supported Client with operational query\n- Writers for Record Data\n- All RFC1035 fields parsing!\n- label parsing with UTF8 support\n- DNS Class and RecordType enums\n\n### Fixed\n\n- Crates.io keywords, etc.\n\n### Changed\n\n- Cleaned up binary encoders and decoders with objects\n\n## 0.1.0 (Resolver 2017-6-27)\n\n### Added\n\n- Initial release of the Trust-DNS Resolver\n\n## 0.1.0 (Client/Server 2015-08-07)\n\n### Added\n\n- Started parsing resource records\n- Initial Commit!\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1884765625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at benjaminfry@me.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [https://www.contributor-covenant.org/it/version/1/4/code-of-conduct/][version]\n\n[homepage]: https://contributor-covenant.org\n[version]: https://www.contributor-covenant.org/it/version/1/4/code-of-conduct/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.4423828125,
          "content": "# Contributing to Hickory DNS\n\nBefore contributing, please consider the terms of the licenses (Apache License 2.0 or MIT). We chose these licenses for two reasons:\n\n- To be more compatible with the general Rust ecosystem\n- So that this software can be liberally used with few restrictions\n\nAfter ensuring the license options are compatible with the aims of the contribution, then please submit your PR for review and we will review as soon as possible. My only ask is that you do not do this for free, unless it's something that is a passion or learning project for you. Please, find a way to be paid for your work. You are worth it.\n\n## Understanding the design\n\nPlease read the [Architecture](ARCHITECTURE.md) to understand the general design and layout of the Hickory DNS projects.\n\n## Submitting PRs\n\nBefore submitting a PR it would be good to discuss the change in an issue so as to avoid wasted work, also feel free to reach out on the Discord channel listed on the front page of the GitHub project. Please, consider keep PRs focused on one issue at a time. While issues are not required for a PR to be accepted they are encouraged, especially for anything that would change behavior, change an API, or be a medium to large change.\n\nWhen submitting PRs please keep refactoring commits separate from functional change commits. Breaking up the PR into multiple commits such that a reviewer can follow the change improves the review experience. This is not necessary, but can make it easier for a reviewer to follow the changes and will result in PRs getting merged more quickly.\n\n### Test policy\n\nAll PRs *must* be passing all tests. Ideally any PR submitted should have more than 85% code coverage, but this is not mandated. When tests are failing, especially on previous branches this is often due to checked in testing keys for the DoH and DoT tests. See **Updating Security Related Tests**.\n\n## Releases\n\nHickory DNS tries to follow semver versioning semantics. Major versions will not break APIs in a current major revision. If changes are being made to the current `main` branch, double check the current status of the Major release. Until `1.x.x`, all `0.x.x` minor releases are treated as major releases with breaking changes allowed. Releases are performed on an ad-hoc/on-demand basis.\n\n*Maintainers*: If changes are needed to previous releases, then there should exist a `release/x.x`. If this does not exist, then go to the previous most recent tag (release) and create a new branch at that tag `release/x.x`, for example the branch `release/0.19`:\n\n```shell\n> git fetch origin\n> git checkout v0.19\n> git branch release/0.19\n> git push --set-upstream origin release/0.19\n```\n\nPrevious release can fail due to time-lapse, please see **Updating Security Related Tests**.\n\n## Performing a Release, for Maintainers\n\nReleases are somewhat automated. The github action, `publish`, watches for any tags on the project. It then attempts to perform a release of all the libraries, this does not always work, for various reasons.\n\n1. Create a new branch like `git checkout -b prepare-0.20.1`\n1. Update all Cargo.toml files to the new version, `version = 0.20.1`\n1. Update dependencies, `cargo update`\n1. Update all inter-dependent crates, i.e. hickory-resolver to use `hickory-proto = 0.20.1`\n1. Update [CHANGELOG.md](CHANGELOG.md) to include all PR's (of consequence) since the previous release\n1. Push to Github, create a PR and merge in `main` or the target release branch.\n1. Go to [Releases](https://github.com/hickory-dns/hickory-dns/releases) and `Draft a new release`\n1. Give it a `Tag Version` of `vX.x.x`, e.g. `v0.20.1`, *make sure this is tagging the correct branch, e.g. `main` or `release/0.19`*\n1. Give it a  `Release Title` of something key to the release\n1. Copy and paste the part of the CHANGELOG.md for this release into `Describe this release`\n1. `Publish Release`, this will kick off the publish workflow\n\nAfter approximately 45 minutes it should be published. This may fail.\n\n**TBD**: add instructions to skip already published crates\n\n## Updating Security Related Tests\n\n### All TLS tests are failing\n\nTBD: add notes on updating certificates in test directories\n\n## FAQ\n\n- Why are there so few maintainers?\n\nThere have not been that many people familiar with DNS internals, networking, security, and Rust that the list of maintainers has been relatively small.\n\n- Will new maintainers be considered?\n\nYes! There is no formal process, and generally it's a goal to open up to anyone who's been committing regularly to the project. We'd ask that you are committed to the goals of an open DNS implementation that anyone can freely use as they see fit. Please reach out on Discord if you'd like to become a maintainer and discuss with us.\n\n## Configuring rust-analyzer\n\nThis repository contains multiple workspaces, so rust-analyzer will require additional configuration to provide hints in all files. If you are using the VS Code extension, create a `.vscode` directory inside the repository if it doesn't exist already, and edit `.vscode/settings.json` as follows:\n\n```jsonc\n{\n    \"rust-analyzer.linkedProjects\": [\n        \"/path/to/hickory-dns/Cargo.toml\",\n        \"/path/to/hickory-dns/conformance/Cargo.toml\",\n        \"/path/to/hickory-dns/fuzz/Cargo.toml\",\n        \"/path/to/hickory-dns/tests/e2e-tests/Cargo.toml\"\n    ],\n    \"rust-analyzer.cargo.features\": \"all\"\n    // etc.\n}\n```\n\n## Thank you!\n\nSeriously, thank you for contributing to this project. Hickory DNS would not be where it is today without the support of contributors like you.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 70.6279296875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-attributes\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3203e79f4dd9bdda415ed03cf14dae5a2bf775c683a00f94e9cd1faf0f596e5\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 2.5.3\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-executor\",\n \"async-io\",\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43a2b323ccce0a1d90b449fd71f2a06ca7faa7c54c2751f06c9bd851fc061059\"\ndependencies = [\n \"async-lock\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-process\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63255f1dc2381611000436537bbedfe83183faa303a5a0edaf191edef06526bb\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-io\",\n \"async-lock\",\n \"async-signal\",\n \"async-task\",\n \"blocking\",\n \"cfg-if\",\n \"event-listener 5.3.1\",\n \"futures-lite\",\n \"rustix\",\n \"tracing\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"async-signal\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3\"\ndependencies = [\n \"async-io\",\n \"async-lock\",\n \"atomic-waker\",\n \"cfg-if\",\n \"futures-core\",\n \"futures-io\",\n \"rustix\",\n \"signal-hook-registry\",\n \"slab\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c634475f29802fde2b8f0b505b1bd00dfe4df7d4a000f0b36f7671197d5c3615\"\ndependencies = [\n \"async-attributes\",\n \"async-channel 1.9.0\",\n \"async-global-executor\",\n \"async-io\",\n \"async-lock\",\n \"async-process\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-std-resolver\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"async-std\",\n \"async-trait\",\n \"futures-io\",\n \"futures-util\",\n \"hickory-resolver\",\n \"pin-utils\",\n \"socket2\",\n \"test-support\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e578d6ec4194633722ccf9544794b71b1385c3c027efe0c55db226fc880865c\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4df4df40ec50c46000231c914968278b1eb05098cf8f1b3a518a95030e71d1c7\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf9804afaaf59a91e75b022a30fb7229a7901f60c755489cc61c9b423b836442\"\ndependencies = [\n \"heck 0.4.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"unicode-width\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"data-encoding\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2\"\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"endian-type\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c34f04666d835ff5d62e058c3995147c06f42fe86ff053337632bca83e42702d\"\n\n[[package]]\nname = \"enum-as-inner\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1e6a265c649f3f5979b601d26f1d05ada116434c87741c9493cb56218f76cbc\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fallible-iterator\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649\"\n\n[[package]]\nname = \"fallible-streaming-iterator\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7360491ce676a36bf9bb3c56c1aa791658183a54d2744120f27285738d90465a\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"486f806e73c5707928240ddc295403b1b93c96a02038563881c4a2fd84b81ac4\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n \"num_cpus\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef40d21ae2c515b51041df9ed313ed21e572df340ea58a922a0aefe7e8891a1\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generator\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc6bd114ceda131d3b1d665eba35788690ad37f5916457286b32ab6fd3c438dd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"log\",\n \"rustversion\",\n \"windows\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbb143cf96099802033e0d4f4963b19fd2e0b728bcf076cd9cf7f6634f092994\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ccae279728d634d083c00f6099cb58f01cc99c145b84b8be2f6c74618d79922e\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"h3\"\nversion = \"0.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e7675a0963b47a6d12fe44c279918b4ffb19baee838ac37f48d2722ad5bc6ab\"\ndependencies = [\n \"bytes\",\n \"fastrand\",\n \"futures-util\",\n \"http\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"h3-quinn\"\nversion = \"0.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17c799f413fceeea505236c4d8132f084ff4b55a652288d91439ee93dc24d855\"\ndependencies = [\n \"bytes\",\n \"futures\",\n \"h3\",\n \"quinn\",\n \"tokio\",\n \"tokio-util\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af\"\ndependencies = [\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hickory-client\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"cfg-if\",\n \"data-encoding\",\n \"futures\",\n \"futures-channel\",\n \"futures-util\",\n \"hickory-proto\",\n \"once_cell\",\n \"radix_trie\",\n \"rand\",\n \"rustls\",\n \"serde\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-compatibility\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"data-encoding\",\n \"futures\",\n \"hickory-client\",\n \"rand\",\n \"rustls-pki-types\",\n \"test-support\",\n \"time\",\n \"tokio\",\n]\n\n[[package]]\nname = \"hickory-dns\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"cfg-if\",\n \"clap\",\n \"futures-executor\",\n \"futures-util\",\n \"hickory-client\",\n \"hickory-proto\",\n \"hickory-resolver\",\n \"hickory-server\",\n \"ipnet\",\n \"libc\",\n \"regex\",\n \"rusqlite\",\n \"rustls\",\n \"rustls-pki-types\",\n \"serde\",\n \"socket2\",\n \"test-support\",\n \"time\",\n \"tokio\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-integration\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"async-trait\",\n \"futures\",\n \"hickory-client\",\n \"hickory-proto\",\n \"hickory-resolver\",\n \"hickory-server\",\n \"once_cell\",\n \"rand\",\n \"rusqlite\",\n \"rustls\",\n \"rustls-pki-types\",\n \"test-support\",\n \"time\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-proto\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"async-recursion\",\n \"async-trait\",\n \"backtrace\",\n \"bitflags\",\n \"bytes\",\n \"cfg-if\",\n \"data-encoding\",\n \"enum-as-inner\",\n \"futures-channel\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-util\",\n \"h2\",\n \"h3\",\n \"h3-quinn\",\n \"http\",\n \"idna\",\n \"ipnet\",\n \"js-sys\",\n \"once_cell\",\n \"pin-project-lite\",\n \"quinn\",\n \"rand\",\n \"ring\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pki-types\",\n \"serde\",\n \"socket2\",\n \"test-support\",\n \"thiserror 2.0.9\",\n \"time\",\n \"tinyvec\",\n \"tokio\",\n \"tokio-rustls\",\n \"tracing\",\n \"tracing-subscriber\",\n \"url\",\n \"wasm-bindgen\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-recursor\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"async-recursion\",\n \"async-trait\",\n \"backtrace\",\n \"bytes\",\n \"cfg-if\",\n \"enum-as-inner\",\n \"futures-util\",\n \"hickory-proto\",\n \"hickory-resolver\",\n \"ipnet\",\n \"lru-cache\",\n \"parking_lot\",\n \"prefix-trie\",\n \"serde\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"hickory-resolver\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"backtrace\",\n \"cfg-if\",\n \"futures-executor\",\n \"futures-util\",\n \"hickory-proto\",\n \"ipconfig\",\n \"moka\",\n \"once_cell\",\n \"parking_lot\",\n \"quinn\",\n \"rand\",\n \"resolv-conf\",\n \"rustls\",\n \"rustls-native-certs\",\n \"serde\",\n \"smallvec\",\n \"test-support\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-rustls\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-server\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"async-trait\",\n \"bytes\",\n \"cfg-if\",\n \"data-encoding\",\n \"enum-as-inner\",\n \"futures-executor\",\n \"futures-util\",\n \"h2\",\n \"h3\",\n \"h3-quinn\",\n \"hickory-proto\",\n \"hickory-recursor\",\n \"hickory-resolver\",\n \"http\",\n \"ipnet\",\n \"prefix-trie\",\n \"rusqlite\",\n \"rustls\",\n \"serde\",\n \"test-support\",\n \"thiserror 2.0.9\",\n \"time\",\n \"tokio\",\n \"tokio-rustls\",\n \"tokio-util\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"hickory-util\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"clap\",\n \"console\",\n \"data-encoding\",\n \"hickory-client\",\n \"hickory-proto\",\n \"hickory-recursor\",\n \"hickory-resolver\",\n \"rustls\",\n \"rustls-native-certs\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hostname\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867\"\ndependencies = [\n \"libc\",\n \"match_cfg\",\n \"winapi\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"ipconfig\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b58db92f96b720de98181bbbe63c831e87005ab460c1bf306eb2622b4707997f\"\ndependencies = [\n \"socket2\",\n \"widestring\",\n \"windows-sys 0.48.0\",\n \"winreg\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"540654e97a3f4470a492cd30ff187bc95d89557a903a2bbf112e2fae98104ef2\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libsqlite3-sys\"\nversion = \"0.30.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e99fb7a497b1e3339bc746195567ed8d3e24945ecd636e3619d20b9de9e9149\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"loom\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"419e0dc8046cb947daa77eb95ae174acfbddb7673b4151f56d1eed8e93fbfaca\"\ndependencies = [\n \"cfg-if\",\n \"generator\",\n \"scoped-tls\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"lru-cache\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31e24f1ad8321ca0e8a1e0ac13f23cb668e6f5466c2c57319f6a5cf1cc8e3b1c\"\ndependencies = [\n \"linked-hash-map\",\n]\n\n[[package]]\nname = \"match_cfg\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4\"\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"moka\"\nversion = \"0.12.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9321642ca94a4282428e6ea4af8cc2ca4eac48ac7a6a4ea8f33f76d0ce70926\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n \"loom\",\n \"parking_lot\",\n \"portable-atomic\",\n \"rustc_version\",\n \"smallvec\",\n \"tagptr\",\n \"thiserror 1.0.69\",\n \"uuid\",\n]\n\n[[package]]\nname = \"nibble_vec\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a5d83df9f36fe23f0c3648c6bbb8b0298bb5f1939c8f2704431371f4b84d43\"\ndependencies = [\n \"smallvec\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a604568c3202727d1507653cb121dbd627a58684eb09a820fd746bee38b4442f\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi 0.4.0\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"280dc24453071f1b63954171985a0b0d30058d287960968b9b2aca264c8d4ee6\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"prefix-trie\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4defc8f5ac7522968431b7592a34432215d80cceb1cf7e0c06287087bca4f046\"\ndependencies = [\n \"ipnet\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e96808277ec6f97351a2380e6c25114bc9e67037775464979f3037c92d05ef\"\ndependencies = [\n \"bytes\",\n \"futures-io\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash\",\n \"rustls\",\n \"socket2\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2fe5ef3495d7d2e377ff17b1a8ce2ee2ec2a18cde8b6ad6619d65d0701c135d\"\ndependencies = [\n \"bytes\",\n \"getrandom\",\n \"rand\",\n \"ring\",\n \"rustc-hash\",\n \"rustls\",\n \"rustls-pki-types\",\n \"slab\",\n \"thiserror 2.0.9\",\n \"tinyvec\",\n \"tracing\",\n \"web-time\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d5a626c6807713b15cac82a6acaccd6043c9a5408c24baae07611fec3f243da\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radix_trie\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c069c179fcdc6a2fe24d8d18305cf085fdbd4f922c041943e203685d6a1c58fd\"\ndependencies = [\n \"endian-type\",\n \"nibble_vec\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"resolv-conf\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52e44394d2086d010551b14b53b1f24e31647570cd1deb0379e2c21b329aba00\"\ndependencies = [\n \"hostname\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rusqlite\"\nversion = \"0.32.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7753b721174eb8ff87a9a0e799e2d7bc3749323e773db92e0984debb00019d6e\"\ndependencies = [\n \"bitflags\",\n \"fallible-iterator\",\n \"fallible-streaming-iterator\",\n \"hashlink\",\n \"libsqlite3-sys\",\n \"smallvec\",\n \"time\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9cc1d47e243d655ace55ed38201c19ae02c148ae56412ab8750e8f0166ab7f\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2bf47e6ff922db3825eb750c4e2ff784c6ff8fb9e13046ef6a1d1c5401b0b37\"\ndependencies = [\n \"web-time\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1415a607e92bec364ea2cf9264646dcce0f91e6d65281bd6f2819cca3bf39c8\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa39c7303dc58b5543c94d22c1766b0d31f2ee58306363ea622b10bbc075eaa2\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"tagptr\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b2093cf4c8eb1e67749a6762251bc9cd836b6fc171623bd0a9d324d37af2417\"\n\n[[package]]\nname = \"test-support\"\nversion = \"0.25.0-alpha.4\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6d0975eaace0cf0fcadee4e4aaa5da15b5c079146f2cffb67c113be122bf37\"\ndependencies = [\n \"rustls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ef4c4aa54d5d05a279399bfa921ec387b7aba77caf7a682ae8d86785b8fdad2\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d642ff16b7e79272ae451b7322067cdc17cadf68c23264be9d94a32319efe7e\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7219d36b6eac893fa81e84ebe06485e7dcbb616177469b142df14f1f4deb1311\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd04d41d93c4992d421894c18c8b43496aa748dd4c081bac0dc93eb0489272b6\"\ndependencies = [\n \"windows-core\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba6d44ec8c2591c134257ce647b7ea6b20335bf6379a27dac5f1641fcf59f99\"\ndependencies = [\n \"windows-implement\",\n \"windows-interface\",\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bbd5b46c938e506ecbce286b6628a02171d56153ba733b6c741fc627ec9579b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053c4c462dc91d3b1504c6fe5a726dd15e216ba718e84a0e46a88fbe5ded3515\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winreg\"\nversion = \"0.50.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.1494140625,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"crates/proto\",\n    \"crates/resolver\",\n    \"crates/recursor\",\n    \"crates/client\",\n    \"crates/server\",\n    \"crates/async-std-resolver\",\n    \"bin\",\n    \"util\",\n    \"tests/compatibility-tests\",\n    \"tests/integration-tests\",\n    \"tests/test-support\",\n]\nexclude = [\"fuzz\"]\n\n[workspace.package]\nversion = \"0.25.0-alpha.4\"\nauthors = [\"The contributors to Hickory DNS\"]\nedition = \"2021\"\nrust-version = \"1.71.1\"\nhomepage = \"https://hickory-dns.org/\"\nrepository = \"https://github.com/hickory-dns/hickory-dns\"\nkeywords = [\"DNS\", \"BIND\", \"dig\", \"named\", \"dnssec\"]\ncategories = [\"network-programming\"]\nlicense = \"MIT OR Apache-2.0\"\n\n\n[workspace.dependencies]\n# hickory\nhickory-client = { version = \"0.25.0-alpha.4\", path = \"crates/client\", default-features = false }\nhickory-recursor = { version = \"0.25.0-alpha.4\", path = \"crates/recursor\", default-features = false }\nhickory-resolver = { version = \"0.25.0-alpha.4\", path = \"crates/resolver\", default-features = false }\nhickory-server = { version = \"0.25.0-alpha.4\", path = \"crates/server\", default-features = false }\nhickory-proto = { version = \"0.25.0-alpha.4\", path = \"crates/proto\", default-features = false }\ntest-support.path = \"tests/test-support\"\n\n\n# logging\ntracing = \"0.1.30\"\ntracing-subscriber = { version = \"0.3\", features = [\"env-filter\", \"fmt\", \"std\"] }\nthiserror = \"2\"\n\n\n# async/await\nasync-recursion = \"1.0.0\"\nasync-trait = \"0.1.43\"\nfutures = { version = \"0.3.5\", default-features = false }\nfutures-channel = { version = \"0.3.5\", default-features = false }\nfutures-executor = { version = \"0.3.5\", default-features = false }\nfutures-io = { version = \"0.3.5\", default-features = false }\nfutures-util = { version = \"0.3.5\", default-features = false }\nasync-std = \"1.6\"\ntokio = \"1.21\"\ntokio-rustls = { version = \"0.26\", default-features = false }\ntokio-util = \"0.7.9\"\nparking_lot = \"0.12\"\npin-project-lite = \"0.2\"\n\n\n# ssl\nrustls = { version = \"0.23.14\", default-features = false, features = [\n    \"logging\",\n    \"std\",\n    \"tls12\",\n] }\nrustls-native-certs = \"0.8\"\nrustls-pki-types = \"1.10\"\nwebpki-roots = \"0.26\"\nring = \"0.17\"\n\n\n# net proto\nquinn = { version = \"0.11.2\", default-features = false }\nh2 = \"0.4.0\"\nh3 = \"0.0.6\"\nh3-quinn = \"0.0.7\"\nhttp = \"1.1\"\n\n\n# others\nbacktrace = \"0.3.50\"\nbitflags = \"2.4.1\"\nbytes = \"1\"\ncfg-if = \"1\"\nclap = { version = \"4.0\", default-features = false }\nconsole = \"0.15.0\"\ndata-encoding = \"2.2.0\"\nenum-as-inner = \"0.6\"\nidna = \"1.0\"\nipconfig = \"0.3.0\"\nipnet = \"2.3.0\"\nlibc = \"0.2\"\njs-sys = \"0.3.44\"\nlru-cache = \"0.1.2\"\nmoka = \"0.12\"\nonce_cell = \"1.20.0\"\npin-utils = \"0.1.0\"\nprefix-trie = \"0.5\"\nradix_trie = \"0.2.0\"\nrand = \"0.8\"\nregex = \"1.3.4\"\nresolv-conf = \"0.7.0\"\nrusqlite = \"0.32\"\nserde = \"1.0\"\nsmallvec = \"1.6\"\nsocket2 = \"0.5\"\ntime = \"0.3\"\ntinyvec = \"1.1.1\"\ntoml = \"0.8.14\"\nurl = \"2.4.0\"\nwasm-bindgen-crate = { version = \"0.2.58\", package = \"wasm-bindgen\" }\n\n[patch.crates-io]\n# tokio = { path = \"../tokio/tokio\" }\n# mio = { git = \"https://github.com/tokio-rs/mio.git\" }\n# h2 = { git = \"https://github.com/hyperium/h2.git\" }\n\n[profile.release]\nlto = true\ncodegen-units = 1\nopt-level = 3\nstrip = \"symbols\"\n\n[workspace.lints.rust]\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\n"
        },
        {
          "name": "Kjqmt7v.csr",
          "type": "blob",
          "size": 0.7470703125,
          "content": null
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.09375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0751953125,
          "content": "Copyright (c) 2015 The Hickory DNS Developers\nCopyright (c) 2017 Google LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.8115234375,
          "content": "[![minimum rustc: 1.70](https://img.shields.io/badge/minimum%20rustc-1.70-green?logo=rust)](https://www.whatrustisit.com)\n[![Build Status](https://github.com/hickory-dns/hickory-dns/workflows/test/badge.svg?branch=main)](https://github.com/hickory-dns/hickory-dns/actions?query=workflow%3Atest)\n[![codecov](https://codecov.io/gh/hickory-dns/hickory-dns/branch/main/graph/badge.svg)](https://codecov.io/gh/hickory-dns/hickory-dns)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE-MIT)\n[![License: Apache 2.0](https://img.shields.io/badge/license-Apache_2.0-blue.svg)](LICENSE-APACHE)\n[![Discord](https://img.shields.io/discord/590067103822774272.svg)](https://discord.gg/89nxE4n)\n\n<div class=\"oranda-hide\">\n\n![Hickory DNS](logo.png)\n\n# Hickory DNS\n\n</div>\n\nA Rust based DNS client, server, and resolver, built to be safe and secure from the\nground up.\n\nThis repo consists of multiple crates:\n\n| Library         | Description                                                                                                                                                                                                                                                                                                                      |\n| --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Hickory DNS** | [![](https://img.shields.io/crates/v/hickory-dns.svg)](https://crates.io/crates/hickory-dns) Provides the `hickory-dns` binary for running a DNS server.                                                                                                                                                                         |\n| **Proto**       | [![](https://img.shields.io/crates/v/hickory-proto.svg)](https://crates.io/crates/hickory-proto) [![hickory-proto](https://docs.rs/hickory-proto/badge.svg)](https://docs.rs/hickory-proto) Low-level DNS library, including message encoding/decoding and DNS transports.                                                       |\n| **Client**      | [![](https://img.shields.io/crates/v/hickory-client.svg)](https://crates.io/crates/hickory-client) [![hickory-client](https://docs.rs/hickory-client/badge.svg)](https://docs.rs/hickory-client) Used for sending `query`, `update`, and `notify` messages directly to a DNS server.                                             |\n| **Server**      | [![](https://img.shields.io/crates/v/hickory-server.svg)](https://crates.io/crates/hickory-server) [![hickory-server](https://docs.rs/hickory-server/badge.svg)](https://docs.rs/hickory-server) Used to build DNS servers. The `hickory-dns` binary makes use of this library.                                                  |\n| **Resolver**    | [![](https://img.shields.io/crates/v/hickory-resolver.svg)](https://crates.io/crates/hickory-resolver) [![hickory-resolver](https://docs.rs/hickory-resolver/badge.svg)](https://docs.rs/hickory-resolver) Utilizes the client library to perform DNS resolution. Can be used in place of the standard OS resolution facilities. |\n| **Recursor**    | [![](https://img.shields.io/crates/v/hickory-recursor.svg)](https://crates.io/crates/hickory-recursor) [![hickory-recursor](https://docs.rs/hickory-recursor/badge.svg)](https://docs.rs/hickory-recursor) Performs recursive DNS resolution, looking up records from their authoritative name servers.                          |\n\n**NOTICE** This project was rebranded from Trust-DNS to Hickory DNS and has been moved to the https://github.com/hickory-dns/hickory-dns organization and repo.\n\n# Goals\n\n- Build a safe and secure DNS server and client with modern features.\n- No panics, all code is guarded\n- Use only safe Rust, and avoid all panics with proper Error handling\n- Use only stable Rust\n- Protect against DDOS attacks (to a degree)\n- Support options for Global Load Balancing functions\n- Make it dead simple to operate\n\n# Status\n\n## Resolver\n\nThe Hickory DNS Resolver is a native Rust implementation for stub resolution in Rust applications. The Resolver supports many common query patterns, all of which can be configured when creating the Resolver. It is capable of using system configuration on Unix and Windows. On Windows there is a known issue that relates to a large set of interfaces being registered for use, so might require ignoring the system configuration.\n\nThe Resolver will properly follow CNAME chains as well as SRV record lookups.\n\n## Client\n\nThe Hickory DNS Client is intended to be used for operating against a DNS server\ndirectly. It can be used for verifying records or updating records for servers\nthat support SIG0 and dynamic update. The Client is also capable of validating\nDNSSEC. NSEC and NSEC3 validation are supported. Today, the Tokio async runtime\nis required.\n\n### Unique client side implementations\n\nThese are standards supported by the DNS protocol. The client implements them\nas high level interfaces, which is a bit more rare.\n\n| Feature                                                                                                                   | Description                                           |\n| ------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------- |\n| [SyncDnssecClient](https://docs.rs/hickory-client/latest/hickory_client/client/struct.SyncDnssecClient.html)              | DNSSEC validation                                     |\n| [create](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.create)                     | atomic create of a record, with authenticated request |\n| [append](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.append)                     | verify existence of a record and append to it         |\n| [compare_and_swap](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.compare_and_swap) | atomic (depends on server) compare and swap           |\n| [delete_by_rdata](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.delete_by_rdata)   | delete a specific record                              |\n| [delete_rrset](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.delete_rrset)         | delete an entire record set                           |\n| [delete_all](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.delete_all)             | delete all records sets with a given name             |\n| [notify](https://docs.rs/hickory-client/latest/hickory_client/client/trait.Client.html#method.notify)                     | notify server that it should reload a zone            |\n\n## Server\n\nThe server code is complete, the daemon supports IPv4 and IPv6, UDP and TCP.\nThere currently is no way to limit TCP and AXFR operations, so it is still not\nrecommended to put into production as TCP can be used to DOS the service.\nZone file parsing is complete and supported. There is currently no forking\noption, and the server is not yet threaded (although it is implemented with\nasync IO, so threading may not be a huge benefit). There is still a lot of work\nto do before a server can be trusted with this externally. Running it behind a\nfirewall on a private network would be safe.\n\nZone signing support is complete, to insert a key store a pem encoded rsa file\nin the same directory as the initial zone file with the `.key` suffix. _Note_:\nthis must be only readable by the current user. If one is not present one will\nbe created and written to the correct location. This also acts as the initial\nkey for dynamic update SIG(0) validation. To get the public key, the `DNSKEY`\nrecord for the zone can be queried. This is needed to provide to other\nupstream servers to create the `DS` key. Dynamic DNS is also complete,\nif enabled, a journal file will be stored next to the zone file with the\n`jrnl` suffix. _Note_: if the key is changed or updated, it is currently the\noperators responsibility to remove the only public key from the zone, this\nallows for the `DNSKEY` to exist for some unspecified period of time during\nkey rotation. Rotating the key while online is not currently supported, so\na restart of the server process is required.\n\n### DNS-over-TLS and DNS-over-HTTPS on the Server\n\nSupport of TLS on the Server is managed through a pkcs12 der file. The documentation is captured in the example test config file, [example.toml](https://github.com/hickory-dns/hickory-dns/blob/main/tests/test-data/test_configs/example.toml). A registered certificate to the server can be pinned to the Client with the `add_ca()` method. Alternatively, as the client uses the rust-native-tls library, it should work with certificate signed by any standard CA.\n\n## DNS-over-TLS and DNS-over-HTTPS\n\nDoT and DoH are supported. This is accomplished through the use of one of `native-tls`, `openssl`, or `rustls` (only `rustls` is currently supported for DoH). The Resolver requires valid DoT or DoH resolvers being registered in order to be used.\n\nTo use DoT or DoH with the `Client`, construct it with `TlsClientStream` or\n`HttpsClientStream`. Client authentication/mTLS is currently not supported,\nthere are some issues still being worked on. TLS is useful for Server\nauthentication and connection privacy.\n\nTo enable DoT, one of the features `dns-over-native-tls`, `dns-over-openssl`, or\n`dns-over-rustls` must be enabled. `dns-over-https-rustls` is used for DoH.\n\n## DNSSEC status\n\nThe current root key is bundled into the system, and used by default. This gives\nvalidation of DNSKEY and DS records back to the root. NSEC and NSEC3 are\nimplemented.\n\nZones will be automatically resigned on any record updates via dynamic DNS. To enable DNSSEC, one of the features `dnssec-openssl` or `dnssec-ring` must be enabled.\n\n## RFCs implemented\n\n- [RFC 8499](https://tools.ietf.org/html/rfc8499): No more master/slave, in honor of [Juneteenth](https://en.wikipedia.org/wiki/Juneteenth)\n\n### Basic operations\n\n- [RFC 1035](https://tools.ietf.org/html/rfc1035): Base DNS spec (see the Resolver for caching)\n- [RFC 2308](https://tools.ietf.org/html/rfc2308): Negative Caching of DNS Queries (see the Resolver)\n- [RFC 2782](https://tools.ietf.org/html/rfc2782): Service location\n- [RFC 3596](https://tools.ietf.org/html/rfc3596): IPv6\n- [RFC 6891](https://tools.ietf.org/html/rfc6891): Extension Mechanisms for DNS\n- [RFC 6761](https://tools.ietf.org/html/rfc6761): Special-Use Domain Names (resolver)\n- [RFC 6762](https://tools.ietf.org/html/rfc6762): mDNS Multicast DNS (experimental feature: `mdns`)\n- [RFC 6763](https://tools.ietf.org/html/rfc6763): DNS-SD Service Discovery (experimental feature: `mdns`)\n- [RFC ANAME](https://tools.ietf.org/html/draft-ietf-dnsop-aname-02): Address-specific DNS aliases (`ANAME`)\n\n### Update operations\n\n- [RFC 2136](https://tools.ietf.org/html/rfc2136): Dynamic Update\n- [RFC 7477](https://tools.ietf.org/html/rfc7477): Child-to-Parent Synchronization in DNS\n\n### Secure DNS operations\n\n- [RFC 2931](https://datatracker.ietf.org/doc/html/rfc2931): SIG(0)\n- [RFC 3007](https://tools.ietf.org/html/rfc3007): Secure Dynamic Update\n- [RFC 4034](https://tools.ietf.org/html/rfc4034): DNSSEC Resource Records\n- [RFC 4035](https://tools.ietf.org/html/rfc4035): Protocol Modifications for DNSSEC\n- [RFC 4509](https://tools.ietf.org/html/rfc4509): SHA-256 in DNSSEC Delegation Signer\n- [RFC 5155](https://tools.ietf.org/html/rfc5155): DNSSEC Hashed Authenticated Denial of Existence\n- [RFC 5702](https://tools.ietf.org/html/rfc5702): SHA-2 Algorithms with RSA in DNSKEY and RRSIG for DNSSEC\n- [RFC 6844](https://tools.ietf.org/html/rfc6844): DNS Certification Authority Authorization (CAA) Resource Record\n- [RFC 6698](https://tools.ietf.org/html/rfc6698): The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA\n- [RFC 6840](https://tools.ietf.org/html/rfc6840): Clarifications and Implementation Notes for DNSSEC\n- [RFC 6844](https://tools.ietf.org/html/rfc6844): DNS Certification Authority Authorization Resource Record\n- [RFC 6944](https://tools.ietf.org/html/rfc6944): DNSKEY Algorithm Implementation Status\n- [RFC 6975](https://tools.ietf.org/html/rfc6975): Signaling Cryptographic Algorithm Understanding\n- [RFC 7858](https://tools.ietf.org/html/rfc7858): DNS over TLS (feature: `dns-over-rustls`, `dns-over-native-tls`, or `dns-over-openssl`)\n- [RFC DoH](https://tools.ietf.org/html/draft-ietf-doh-dns-over-https-14): DNS over HTTPS, DoH (feature: `dns-over-https-rustls`)\n\n## RFCs in progress or not yet implemented\n\n### Basic operations\n\n- [RFC 2317](https://tools.ietf.org/html/rfc2317): Classless IN-ADDR.ARPA delegation\n\n### Update operations\n\n- [RFC 1995](https://tools.ietf.org/html/rfc1995): Incremental Zone Transfer\n- [RFC 1996](https://tools.ietf.org/html/rfc1996): Notify secondaries of update\n- [Update Leases](https://tools.ietf.org/html/draft-sekar-dns-ul-01): Dynamic DNS Update Leases\n- [Long-Lived Queries](https://tools.ietf.org/html/draft-sekar-dns-llq-01): Notify with bells\n\n### Secure DNS operations\n\n- [DNSCrypt](https://dnscrypt.org): Trusted DNS queries\n- [S/MIME](https://tools.ietf.org/html/draft-ietf-dane-smime-09): Domain Names For S/MIME\n\n# Usage\n\nThis assumes that you have [Rust](https://www.rust-lang.org) stable installed. These\npresume that the hickory-dns repos have already been synced to the local system:\n\n    git clone https://github.com/hickory-dns/hickory-dns.git\n    cd hickory-dns\n\n## Prerequisites\n\n### Minimum Rust Version\n\n- The current minimum rustc version for this project is `1.70`\n- OpenSSL development libraries (optional in client and resolver, min version 1.0.2)\n\n### Mac OS X: using homebrew\n\n```\n  brew install openssl\n  export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include\n  export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib\n```\n\n### Debian-based (includes Ubuntu & Raspbian): using apt-get\n\n```\n  # note for openssl that a minimum version of 1.0.2 is required for TLS,\n  #  if this is an issue, TLS can be disabled (on the client), see below.\n  $ apt-get install openssl\n  $ apt-get install libssl-dev pkg-config\n```\n\n## Testing\n\nHickory DNS uses `just` for build workflow management. While running `cargo test` at the project root will work, this is not exhaustive. Install `just` with `cargo install just`. A few of the `just` recipes require [`cargo-workspaces`](https://github.com/pksunkara/cargo-workspaces) to be installed, a plugin to optimize the workflow around cargo workspaces. Install the plugin with `cargo install cargo-workspaces`.\n\n- Default tests\n\n  These are good for running on local systems. They will create sockets for\n  local tests, but will not attempt to access remote systems. Tests can also\n  be run from the crate directory, i.e. `client` or `server` and `cargo test`\n\n```shell\njust default\n```\n\n- Default feature tests\n\n  Hickory DNS has many features, to quickly test with them or without, there are three targets supported, `default`, `no-default-features`, `all-features`:\n\n```shell\njust all-features\n```\n\n- Individual feature tests\n\n  Hickory DNS has many features, each individual feature can be tested\n  independently. See individual crates for all their features, here is a not\n  necessarily up to date list: `dns-over-rustls`, `dns-over-https-rustls`,\n  `dns-over-native-tls`, `dns-over-openssl`, `dns-dnssec-openssl`,\n  `dns-dnssec-openssl`, `dns-dnssec-ring`, `mdns`. Each feature can be tested\n  with itself as the task target for `just`:\n\n```shell\njust dns-over-https-rustls\n```\n\n- Benchmarks\n\n  Waiting on benchmarks to stabilize in mainline Rust.\n\n## Building\n\n- Production build, from the `hickory-dns` base dir, to get all features, just pass the `--all-features` flag.\n\n```shell\ncargo build --release -p hickory-dns\n```\n\n## Running\n\nWarning: Hickory DNS is still under development, running in production is not\nrecommended. The server is currently only single-threaded, it is non-blocking\nso this should allow it to work with most internal loads.\n\n- Verify the version\n\n```shell\n./target/release/hickory-dns --version\n```\n\n- Get help\n\n```shell\n./target/release/hickory-dns --help\n```\n\n- Launch `hickory-dns` server with test config\n\nNote that if the `-p` parameter is not passed, the server will run on default\nDNS ports. There are separate port options for DoT and DoH servers, see\n`hickory-dns --help`\n\n```shell\n./target/release/hickory-dns -c ./tests/test-data/test_configs/example.toml -z ./tests/test-data/test_configs/ -p 24141\n```\n\n- Query the just launched server with `dig`\n\n```shell\ndig @127.0.0.1 -p 24141 www.example.com\n```\n\n## Using the hickory-resolver CLI\n\nAvailable in `0.20`\n\n```shell\ncargo install --bin resolve hickory-util\n```\n\nOr from source, in the hickory-dns directory\n\n```shell\ncargo install --bin resolve --path util\n```\n\nexample:\n\n```shell\n$ resolve www.example.com.\nQuerying for www.example.com. A from udp:8.8.8.8:53, tcp:8.8.8.8:53, udp:8.8.4.4:53, tcp:8.8.4.4:53, udp:[2001:4860:4860::8888]:53, tcp:[2001:4860:4860::8888]:53, udp:[2001:4860:4860::8844]:53, tcp:[2001:4860:4860::8844]:53\nSuccess for query name: www.example.com. type: A class: IN\n        www.example.com. 21063 IN A 93.184.215.14\n```\n\n## Using as a dependency and custom features\n\nThe Client has a few features which can be disabled for different reasons when embedding in other software.\n\n- `dnssec-openssl`\n  Uses OpenSSL for DNSSEC validation.\n\n- `dnssec-ring`\n  Ring support can be used for RSA and ED25519 DNSSEC validation.\n\n- `dns-over-native-tls`\n  Uses `native-tls` for DNS-over-TLS implementation, only supported in client and resolver, not server.\n\n- `dns-over-openssl`\n  Uses `openssl` for DNS-over-TLS implementation supported in server and client, resolver does not have default CA chains.\n\n- `dns-over-rustls`\n  Uses `rustls` for DNS-over-TLS implementation. This is the best option where a pure Rust toolchain is desired. Supported in client, resolver, and server.\n\n- `dns-over-https-rustls`\n  Uses `rustls` for DNS-over-HTTPS (and DNS-over-TLS will be enabled) implementation, only supported in client, resolver, and server. This is the best option where a pure Rust toolchain is desired.\n\n- `mdns` _EXPERIMENTAL_\n  Enables the experimental mDNS features as well as DNS-SD. This currently has known issues.\n\nUsing custom features in dependencies:\n\n```\n[dependencies]\n  ...\nhickory-client = { version = \"*\", default-features = false, features = [\"dnssec-openssl\"] }\n```\n\nUsing custom features during build:\n\n```console\n$> cargo build --release --features dns-over-rustls\n...\n```\n\n## FAQ\n\n- Why are you building another DNS server?\n\n      Because of all the security advisories out there for BIND.\n\n  Using Rust semantics it should be possible to develop a high performance and\n  safe DNS Server that is more resilient to attacks.\n\n- What is the MSRV (minimum stable Rust version) policy?\n\n      Hickory DNS will work to support backward compatibility with three Rust versions.\n\n  For example, if `1.50` is the current release, then the MSRV will be `1.47`. The\n  version is only increased as necessary, so it's possible that the MSRV is older\n  than this policy states. Additionally, the MSRV is only supported for the `no-default-features`\n  build due to it being an intractable issue of trying to enforce this policy on dependencies.\n\n## Community\n\nFor live discussions beyond this repository, please see this [Discord](https://discord.gg/89nxE4n).\n\n## License\n\nLicensed under either of\n\n- Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or <https://www.apache.org/licenses/LICENSE-2.0>)\n- MIT license ([LICENSE-MIT](LICENSE-MIT) or <https://opensource.org/licenses/MIT>)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally\nsubmitted for inclusion in the work by you, as defined in the Apache-2.0\nlicense, shall be dual licensed as above, without any additional terms or\nconditions.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conformance",
          "type": "tree",
          "content": null
        },
        {
          "name": "copyright.txt",
          "type": "blob",
          "size": 0.34765625,
          "content": "// Copyright 2015-2023 Benjamin Fry <benjaminfry@me.com>\n//\n// Licensed under the Apache License, Version 2.0, <LICENSE-APACHE or\n// https://apache.org/licenses/LICENSE-2.0> or the MIT license <LICENSE-MIT or\n// https://opensource.org/licenses/MIT>, at your option. This file may not be\n// copied, modified, or distributed except according to those terms.\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 15.2421875,
          "content": "## Script for executing commands for the project.\nexport TARGET_DIR := join(justfile_directory(), \"target\")\nexport TDNS_BIND_PATH := join(TARGET_DIR, \"bind\")\nexport TEST_DATA := join(join(justfile_directory(), \"tests\"), \"test-data\")\n\nNIGHTLY_DATE := \"2024-05-23\"\n\n## MSRV\nMSRV := env_var_or_default('MSRV', \"\")\n\n## Code coverage config\nCOV_RUSTFLAGS := \"-C instrument-coverage -C llvm-args=--instrprof-atomic-counter-update-all --cfg=coverage --cfg=trybuild_no_target\"\nCOV_CARGO_INCREMENTAL := \"0\"\nCOV_CARGO_LLVM_COV := \"1\"\nCOV_CARGO_LLVM_COV_TARGET_DIR := join(TARGET_DIR, \"llvm-cov-target\")\nCOV_LLVM_PROFILE_FILE := join(COV_CARGO_LLVM_COV_TARGET_DIR, \"hickory-dns-%p-%m_%c.profraw\")\nCOV_OUTPUT_DIR := join(justfile_directory(), \"coverage\")\n\nBIND_VER := \"9.16.41\"\n\n# Check, build, and test all crates with default features enabled\ndefault feature='' ignore='': (check feature ignore) (build feature ignore) (test feature ignore)\n\n# Check, build, and test all crates with all-features enabled\nall-features: (default \"--all-features\")\n\n# Check, build, and test a sizable cross-section of crates/features that don't depend on OpenSSL\n# All features will be applied independently to all crates, so the crates/features tested here\n# need to avoid crates that don't expose the features and features that are only defined in a few crates.\nwindows-features: (default \"--features=dns-over-rustls,dns-over-https-rustls,dns-over-quic,dnssec-ring\" \"--ignore=\\\\{async-std-resolver,hickory-client,hickory-compatibility,test-support\\\\}\")\n\n# Check, build, and test all crates with no-default-features\nno-default-features: (default \"--no-default-features\" \"--ignore=\\\\{hickory-compatibility\\\\}\")\n\n# Check, build, and test all crates with dns-over-rustls enabled\ndns-over-rustls: (default \"--features=dns-over-rustls\" \"--ignore=\\\\{async-std-resolver,hickory-compatibility,test-support\\\\}\")\n\n# Check, build, and test all crates with dns-over-https-rustls enabled\ndns-over-https-rustls: (default \"--features=dns-over-https-rustls\" \"--ignore=\\\\{async-std-resolver,hickory-compatibility,test-support\\\\}\")\n\n# Check, build, and test all crates with dns-over-quic enabled\ndns-over-quic: (default \"--features=dns-over-quic\" \"--ignore=\\\\{async-std-resolver,hickory-compatibility,test-support\\\\}\")\n\n# Check, build, and test all crates with dns-over-h3 enabled\ndns-over-h3: (default \"--features=dns-over-h3\" \"--ignore=\\\\{async-std-resolver,hickory-compatibility,hickory-client,test-support\\\\}\")\n\n# Check, build, and test all crates with dnssec-ring enabled\ndnssec-ring: (default \"--features=dnssec-ring\" \"--ignore=\\\\{async-std-resolver,hickory-compatibility,test-support\\\\}\")\n\n# Run check on all projects in the workspace\ncheck feature='' ignore='':\n    cargo ws exec {{ignore}} cargo {{MSRV}} check --locked --all-targets {{feature}}\n    cargo {{MSRV}} check --manifest-path fuzz/Cargo.toml --locked --all-targets\n\n# Run build on all projects in the workspace\nbuild feature='' ignore='':\n    cargo ws exec {{ignore}} cargo {{MSRV}} build --locked --all-targets {{feature}}\n\n# Run tests on all projects in the workspace\ntest feature='' ignore='':\n    cargo ws exec {{ignore}} cargo {{MSRV}} test --locked --all-targets {{feature}}\n\ndoc feature='':\n    cargo ws exec --ignore=hickory-dns cargo {{MSRV}} test --locked --doc {{feature}}\n\ntest-docs:\n    RUSTDOCFLAGS=\"-Dwarnings\" cargo ws exec cargo doc --locked --all-features --no-deps --document-private-items\n\n# This tests compatibility with BIND9, TODO: support other feature sets besides openssl for tests\n[unix]\ncompatibility: init-bind9\n    RUST_LOG=debug cargo test --manifest-path tests/compatibility-tests/Cargo.toml --locked --all-targets --no-default-features --features=none;\n    RUST_LOG=debug cargo test --manifest-path tests/compatibility-tests/Cargo.toml --locked --all-targets --no-default-features --features=bind;\n\n# Build all bench marking tools, i.e. check that they work, but don't run\nbuild-bench:\n    RUSTFLAGS=\"--cfg=nightly\" cargo ws exec cargo +nightly-{{NIGHTLY_DATE}} check --locked --benches\n\n[private]\nclippy-inner feature='':\n    cargo ws exec cargo {{MSRV}} clippy --locked --all-targets {{feature}} -- -D warnings\n\n# Run clippy on all targets and all sources\nclippy:\n    just clippy-inner --no-default-features\n    just clippy-inner\n    just clippy-inner --all-features\n\n# Check the format of all the Rust code with rustfmt\nfmt:\n    cargo ws exec cargo fmt -- --check\n    cargo fmt --manifest-path fuzz/Cargo.toml -- --check\n\n# Audit all depenedencies\naudit: init-audit (check '--all-features')\n    cargo audit --deny warnings\n    cargo audit --file fuzz/Cargo.lock --deny warnings\n\n# Task to run clippy, rustfmt, and audit on all crates\ncleanliness: clippy fmt audit\n\n# Generate coverage report\ncoverage: init-llvm-cov\n    #!/usr/bin/env bash\n    set -euxo pipefail\n\n    export RUSTFLAGS=\"{{COV_RUSTFLAGS}}\"\n    export CARGO_LLVM_COV={{COV_CARGO_LLVM_COV}}\n    export CARGO_LLVM_COV_TARGET_DIR={{COV_CARGO_LLVM_COV_TARGET_DIR}}\n    export LLVM_PROFILE_FILE={{COV_LLVM_PROFILE_FILE}}\n\n    echo $RUSTFLAGS\n\n    cargo +nightly llvm-cov clean --workspace\n    mkdir -p {{COV_OUTPUT_DIR}}\n\n    cargo +nightly llvm-cov test --workspace --no-report --all-targets --all-features\n    cargo +nightly llvm-cov test --workspace --no-report --doc --doctests --all-features\n    cargo +nightly llvm-cov report --doctests --codecov --output-path {{join(COV_OUTPUT_DIR, \"hickory-dns-coverage.json\")}}\n\n# Open the html view of the coverage report\ncoverage-html: coverage\n    #!/usr/bin/env bash\n    set -euxo pipefail\n\n    export RUSTFLAGS=\"{{COV_RUSTFLAGS}}\"\n    export CARGO_LLVM_COV={{COV_CARGO_LLVM_COV}}\n    export CARGO_LLVM_COV_TARGET_DIR={{COV_CARGO_LLVM_COV_TARGET_DIR}}\n    export LLVM_PROFILE_FILE={{COV_LLVM_PROFILE_FILE}}\n\n    cargo +nightly llvm-cov report --doctests --html --open --output-dir {{COV_OUTPUT_DIR}}\n\n# Export coverage data in lcov format\ncoverage-lcov: coverage\n    #!/usr/bin/env bash\n    set -euxo pipefail\n\n    export RUSTFLAGS=\"{{COV_RUSTFLAGS}}\"\n    export CARGO_LLVM_COV={{COV_CARGO_LLVM_COV}}\n    export CARGO_LLVM_COV_TARGET_DIR={{COV_CARGO_LLVM_COV_TARGET_DIR}}\n    export LLVM_PROFILE_FILE={{COV_LLVM_PROFILE_FILE}}\n\n    cargo +nightly llvm-cov report --doctests --lcov --output-path {{join(COV_OUTPUT_DIR, \"lcov.info\")}}\n\n# (Re)generates Test Certificates, if tests are failing, this needs to be run yearly\n[unix]\ngenerate-test-certs: init-openssl\n    cd {{TEST_DATA}} && rm -f ca.key ca.pem cert.key cert-key.pkcs8 cert.csr cert.pem cert.p12\n    scripts/gen_certs.sh\n    cd {{TEST_DATA}}/test_configs/sec && rm -f example.key example.key.pem example.cert example.cert.pem example.p12\n    cd {{TEST_DATA}}/test_configs/sec && ./gen-keys.sh\n\n# Publish all crates\npublish:\n    cargo ws publish --publish-as-is --token $CRATES_IO_TOKEN\n\n# Removes the target directories cleaning all built artifacts\nclean:\n    rm -rf {{TARGET_DIR}}\n    rm -rf {{join(justfile_directory(), \"conformance/target\")}}\n    rm -rf {{join(justfile_directory(), \"tests/e2e-tests/target\")}}\n    rm -rf {{join(justfile_directory(), \"tests/ede-dot-com/target\")}}\n    rm -rf {{join(justfile_directory(), \"fuzz/target\")}}\n\n# runs all other conformance-* tasks\nconformance: (conformance-framework) (conformance-unbound) (conformance-bind) (conformance-hickory) (conformance-ignored) (conformance-clippy) (conformance-fmt)\n\n# tests the conformance test framework\nconformance-framework:\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 cargo t --manifest-path conformance/Cargo.toml -p dns-test\n\n# runs the conformance test suite against unbound\nconformance-unbound filter='':\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 DNS_TEST_PEER=bind DNS_TEST_SUBJECT=unbound cargo t --manifest-path conformance/Cargo.toml -p conformance-tests -- --include-ignored {{filter}}\n\n# runs the conformance test suite against BIND\nconformance-bind filter='':\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 DNS_TEST_PEER=unbound DNS_TEST_SUBJECT=bind cargo t --manifest-path conformance/Cargo.toml -p conformance-tests -- --include-ignored {{filter}}\n\n# runs the conformance test suite against the latest local hickory-dns commit -- changes that have not been commited will be ignored!\nconformance-hickory: (conformance-hickory-ring)\n\nconformance-hickory-ring filter='':\n    @ bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 DNS_TEST_PEER=unbound DNS_TEST_SUBJECT=\"hickory {{justfile_directory()}} dnssec-ring\" cargo t --manifest-path conformance/Cargo.toml -p conformance-tests -- {{filter}}\n    @ bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# checks that all conformance tests that pass with hickory-dns have been un-#[ignore]-d\nconformance-ignored:\n    #!/usr/bin/env bash\n\n    set -euxo pipefail\n\n    tmpfile=\"$(mktemp)\"\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    ( DNS_TEST_VERBOSE_DOCKER_BUILD=1 DNS_TEST_PEER=unbound DNS_TEST_SUBJECT=\"hickory {{justfile_directory()}} dnssec-ring\" cargo test --manifest-path conformance/Cargo.toml -p conformance-tests --lib -- --ignored || true ) | tee \"$tmpfile\"\n    grep -e 'test result: \\(ok\\|FAILED\\). 0 passed' \"$tmpfile\" || ( echo \"expected ALL tests to fail but at least one passed; the passing tests must be un-#[ignore]-d\" && exit 1 )\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# lints the conformance test suite\nconformance-clippy:\n    cargo clippy --locked --manifest-path conformance/Cargo.toml --workspace --all-targets -- -D warnings\n\n# formats the conformance test suite code\nconformance-fmt:\n    cargo fmt --manifest-path conformance/Cargo.toml --all -- --check\n\n# removes leftover Docker containers and networks that the test framework failed to remove\nconformance-clean: (conformance-clean-containers) (conformance-clean-networks)\n\n# removes leftover Docker containers that the test framework failed to remove\nconformance-clean-containers:\n    docker rm -f $(docker ps | grep dns-test | cut -f 1 -d \" \")\n\n# removes leftover Docker networks that the test framework failed to remove\nconformance-clean-networks:\n    docker network rm $(docker network ls | grep dns-test | cut -f 1 -d \" \")\n\n# runs all other e2e-tests-* tasks\ne2e-tests: (e2e-tests-run) (e2e-tests-ignored) (e2e-tests-clippy) (e2e-tests-fmt)\n\n# runs hickory-specific end-to-end tests that use the dns-test framework\ne2e-tests-run:\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 cargo test --manifest-path tests/e2e-tests/Cargo.toml\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# check that any fixed e2e-test has not been left marked as `#[ignore]`\ne2e-tests-ignored:\n    #!/usr/bin/env bash\n\n    set -euxo pipefail\n\n    tmpfile=\"$(mktemp)\"\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    ( DNS_TEST_VERBOSE_DOCKER_BUILD=1 cargo test --manifest-path tests/e2e-tests/Cargo.toml --lib -- --ignored || true ) | tee \"$tmpfile\"\n    grep -e 'test result: \\(ok\\|FAILED\\). 0 passed' \"$tmpfile\" || ( echo \"expected ALL tests to fail but at least one passed; the passing tests must be un-#[ignore]-d\" && exit 1 )\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# lints the end-to-end test suite\ne2e-tests-clippy:\n    cargo clippy --manifest-path tests/e2e-tests/Cargo.toml --all-targets -- -D warnings\n\n# formats the end-to-end test suite code\ne2e-tests-fmt:\n    cargo fmt --manifest-path tests/e2e-tests/Cargo.toml --all -- --check\n\n# runs all other ede-dot-com-* tasks\nede-dot-com: (ede-dot-com-run) (ede-dot-com-ignored) (ede-dot-com-check)\n\n# runs hickory-specific ede-dot-com tests that use the dns-test framework\nede-dot-com-run filter='':\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    DNS_TEST_VERBOSE_DOCKER_BUILD=1 cargo test --manifest-path tests/ede-dot-com/Cargo.toml --locked -- {{filter}}\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# check that any fixed ede-dot-com test has not been left marked as `#[ignore]`\nede-dot-com-ignored:\n    #!/usr/bin/env bash\n\n    set -euxo pipefail\n\n    tmpfile=\"$(mktemp)\"\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes will NOT be tested\" || true'\n    ( DNS_TEST_VERBOSE_DOCKER_BUILD=1 cargo test --manifest-path tests/ede-dot-com/Cargo.toml --locked --lib -- --ignored || true ) | tee \"$tmpfile\"\n    grep -e 'test result: \\(ok\\|FAILED\\). 0 passed' \"$tmpfile\" || ( echo \"expected ALL tests to fail but at least one passed; the passing tests must be un-#[ignore]-d\" && exit 1 )\n    bash -c '[[ -n \"$(git status -s)\" ]] && echo \"WARNING: uncommitted changes were NOT tested\" || true'\n\n# checks the ede-dot-com workspace\nede-dot-com-check: (ede-dot-com-clippy) (ede-dot-com-fmt)\n\n# lints the ede-dot-com test suite\nede-dot-com-clippy:\n    cargo clippy --manifest-path tests/ede-dot-com/Cargo.toml --locked --all-targets -- -D warnings\n\n# formats the ede-dot-com test suite code\nede-dot-com-fmt:\n    cargo fmt --manifest-path tests/ede-dot-com/Cargo.toml --all -- --check\n\n[private]\n[macos]\ninit-openssl:\n    openssl version || brew install openssl@1.1\n\n[private]\n[linux]\ninit-openssl:\n    openssl version\n\n[private]\n[macos]\ninit-bind9-deps: init-openssl\n    pip install ply\n    brew install wget libuv userspace-rcu openssl\n\n[private]\n[linux]\ninit-bind9-deps:\n    if apt-get --version ; then sudo apt-get install -y python3-ply libuv1-dev liburcu-dev libssl-dev libcap-dev ; fi\n\n# Install BIND9, needed for compatibility tests\n[unix]\ninit-bind9:\n    #!/usr/bin/env bash\n    set -euxo pipefail\n\n    if {{TDNS_BIND_PATH}}/sbin/named -v ; then exit 0 ; fi\n\n    just init-bind9-deps\n\n    ## This must run after OpenSSL installation\n    if openssl version ; then WITH_OPENSSL=\"--with-openssl=$(dirname $(dirname $(which openssl)))\" ; fi\n\n    mkdir -p {{TARGET_DIR}}\n\n    echo \"----> downloading bind\"\n    rm -rf {{TARGET_DIR}}/bind-{{BIND_VER}}\n    wget -O {{TARGET_DIR}}/bind-{{BIND_VER}}.tar.xz https://downloads.isc.org/isc/bind9/{{BIND_VER}}/bind-{{BIND_VER}}.tar.xz\n\n    ls -la {{TARGET_DIR}}/bind-{{BIND_VER}}.tar.xz\n    tar -xJf {{TARGET_DIR}}/bind-{{BIND_VER}}.tar.xz -C {{TARGET_DIR}}\n\n    echo \"----> compiling bind\"\n    cd {{TARGET_DIR}}/bind-{{BIND_VER}}\n\n    ./configure --prefix {{TDNS_BIND_PATH}} ${WITH_OPENSSL}\n    make install\n    cd -\n\n    {{TDNS_BIND_PATH}}/sbin/named -v\n\n    rm {{TARGET_DIR}}/bind-{{BIND_VER}}.tar.xz\n    rm -rf {{TARGET_DIR}}/bind-{{BIND_VER}}\n\n# Check for the cargo-workspaces command, install if it does not exist\ninit-cargo-workspaces:\n    @cargo ws --version || cargo install cargo-workspaces\n\n# Install audit tools\ninit-audit:\n    @cargo audit --version || cargo install cargo-audit\n\n# Install the code coverage components for LLVM\ninit-llvm-cov:\n    @cargo llvm-cov --version || cargo install cargo-llvm-cov\n    @rustup component add llvm-tools-preview\n\n# Initialize all tools needed for running tests, etc.\ninit: init-cargo-workspaces init-audit\n    @echo 'all tools initialized'\n\n# Run the server with example config, for manual testing purposes\nrun-example:\n    @cargo {{MSRV}} run --bin hickory-dns --locked -- -d -c {{TEST_DATA}}/test_configs/example.toml -z {{TEST_DATA}}/test_configs -p 2053\n"
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 80.9560546875,
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}