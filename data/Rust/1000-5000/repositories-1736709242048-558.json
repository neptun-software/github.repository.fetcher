{
  "metadata": {
    "timestamp": 1736709242048,
    "page": 558,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "colored-rs/colored",
      "stars": 1783,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0634765625,
          "content": "# pedantic clippy fixes\n58a06a44c7640a83a65df6c5afae5ed8f0014fd0\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.029296875,
          "content": "*.snap linguist-language=Text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0224609375,
          "content": "target\nCargo.lock\n*.bk\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.8984375,
          "content": "# Unreleased\n\n# 3.0.0\n- **[BREAKING CHANGE]:** Upgrade MSRV to 1.80 and remove the then unnecessary lazy_static dependency.\n\n# 2.2.0\n- Updated top-level docs to include a note about `ColoredString`\\'s role in the `Colorize` pipeline as well as link to it to suggest learning more about how to manipulate existing `ColoredString`\\'s.\n- Changes to `ColoredString`:\n  - Expose fields.\n  - **[DEPRECATION]:** Deprecated methods `fgcolor`, `bgcolor`, and `style` due to their obsolescence in the face of the exposing of their represented fields.\n  - Add methods for clearing specific elements of `fgcolor`, `bgcolor`, and `style`.\n  - Change Default implementation to be via derive as Style now implements Default (see changes to Style below).\n  - Add implementation of `DerefMut`.\n  - Updated docs to reflect the above changes as well as generally greatly expand them.\n- Changes to `Style`:\n  - Implemented `Default` for `Style` (returns `CLEAR`). This exposes a method by which users can create plain `Style`\\'s from scratch.\n  - Implemented `From<Styles>` for `Style`. This lets users easily create `Style`\\'s from specific styles.\n  - Exposed previously private method `add`.\n  - Created method `remove` which essentially does the opposite.\n  - Added builder-style methods in the vein of `Colorize` to add stylings (e.g. `bold`, `underline`, `italic`, `strikethrough`).\n  - Implemented bitwise operators `BitAnd`, `BitOr`, `BitXor`, and `Not` as well as their representative assignment operators. You can also use a `Styles` as an operand for these.\n  - Implemented `FromIterator<Styles>` for Style.\n- Changes to `Styles`:\n  - Implemented bitwise operators `BitAnd`, `BitOr`, `BitXor`, and `Not` which all combine `Styles`\\'s and output `Style`\\'s. These can also take a `Style` as an operand.\n- Added additional testing for all of the above changes.\n- Added methods `with_style` and `with_color_and_style` to `Colorize`.\n\n# 2.1.0\n* Impl From<String> for ColoredString by @mahor1221 in https://github.com/colored-rs/colored/pull/126\n* Allow conversion from ColoredString to Error by @spenserblack in https://github.com/colored-rs/colored/pull/86\n* Suggestion for minor documentation clarification by @jonasbn in https://github.com/colored-rs/colored/pull/98\n* Remove unnecessary is_terminal dependency by @Oakchris1955 in https://github.com/colored-rs/colored/pull/149\n  - Document crate MSRV of `1.70`.\n\n# 2.0.4\n- Switch from `winapi` to `windows-sys`.\n\n# 2.0.3\n- Document crate MSRV of `1.63`.\n\n# 2.0.2\n- Fix typo in `src/control.rs`.\n- Replace `atty` dependency with `is-terminal`.\n\n# 2.0.1 (July 3, 2023)\n- Add edition for future compatibility.\n- Implement custom colors that can be stored in a variable.\n\n# 2.0.0 (July 14, 2020)\n- Add support for true colours.\n- Alter `Color` interface to return `Cow<'static, str>`\n\n# 1.9.3 (February 24, 2020)\n- Fix compilation regression for 1.34.0. Thanks @jlevon for reporting.\n\n# 1.9.2 (January 11, 2020)\n- Exposed `ColoredString` data through methods for purposes of interrogating the applied colours.\n- Increased documentation.\n\n# 1.9.1 (December 31, 2019)\n\n- Remove deprecated `try!` macro in codebase\n- Reduce allocations in `ColoredString` impl (PR#65)\n- Added `\"purple\"` as match in `impl FromStr for Color` (PR#71)\n\n# 1.9.0 (November 11, 2019)\n\n- **[POSSIBLE_BREAKING CHANGE]:** Replace `winconsole` with `winapi`:\n  - Changes `set_virtual_terminal` function signature.\n- Update dependencies\n- Add Dockerfile\n- Respect tty discovery for CLICOLOR\n\n# 1.8.0 (April 30, 2019)\n\n- FEAT: support Windows 10 colors\n\n# 1.7.0 (January, 2019)\n- TECH: update lazy\\_static\n- FEAT: introduce respect for the `NO_COLOR` environment variable\n\n# 1.6.1 (July 9, 2018)\n- TECH: update lazy\\_static\n- CHORE: fix typos in README and documentation\n\n# 1.6.0 (October 31, 2017)\n- FEAT: introduced bright colors. `\"hello\".bright_blue().on_bright_red();`\n- FEAT: introduced strikethrough styling. `\"hello\".strikethrough();`\n\n# 1.5.3 (September 28, 2017)\n\n- FEAT: derive Copy and Clone for `Color`\n- FEAT: derive Clone for `ColoredString`\n\n# 1.5.2 (July 6, 2017)\n\n- FIX: method `Colorize::reversed` has been added. `Colorize::reverse` was a typo, that we will keep\n    for compatibility\n\n# 1.5.1 (May 9, 2017)\n\n- Update lazy\\_static to 0.2.\n\n# 1.5.0 (May 1, 2017)\n\n- FEAT: support for `\"hello\".color(\"blue\")` (dynamic colors)\n\n# 1.3.2 (Nov 26, 2016)\n\n- FIX: usage of nested ColoredString again, no more style broken mid-line\n\n# 1.3.1 (Oct 14, 2016)\n\n- FIX: usage of ColoredString in a nested way broke the styling mid-line\n\n# 1.3.0 (Jul 31, 2016)\n\n- Provide various options for disabling the coloring in an API-compatible way\n\n# 1.2.0 (Mar 30, 2016)\n\n- Support the different formatting options, like padding and alignment\n\n# 1.1.0 (Mar 15, 2016)\n\n- Respect the CLICOLOR/CLICOLOR\\_FORCE behavior. See [this specs](http://bixense.com/clicolors/)\n\n# 1.0.1 (Mar 14, 2016)\n\n- Add a CHANGLOG\n- Fix crate dependencies: move `ansi_term` in dev\\_dependencies\n\n# 1.0.0 (Mar 13, 2016)\n\n- Initial release\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.6748046875,
          "content": "[package]\nname = \"colored\"\ndescription = \"The most simple way to add colors in your terminal\"\nversion = \"3.0.0\"\nedition = \"2021\"\nauthors = [\"Thomas Wickham <mackwic@gmail.com>\"]\nlicense = \"MPL-2.0\"\nhomepage = \"https://github.com/mackwic/colored\"\nrepository = \"https://github.com/mackwic/colored\"\nreadme = \"README.md\"\nkeywords = [\"color\", \"string\", \"term\", \"ansi_term\", \"term-painter\"]\nrust-version = \"1.80\"\n\n[features]\n# with this feature, no color will ever be written\nno-color = []\n\n\n[target.'cfg(windows)'.dependencies.windows-sys]\nversion = \">=0.48,<=0.59\"\nfeatures = [\n    \"Win32_Foundation\",\n    \"Win32_System_Console\",\n]\n\n[dev-dependencies]\nansi_term = \"0.12\"\ninsta = \"1\"\nrspec = \"1\"\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1044921875,
          "content": "FROM rust:latest\n\nENV SRC_DIR /src\nRUN mkdir $SRC_DIR\nWORKDIR $SRC_DIR\nVOLUME $SRC_DIR\n\nCMD [\"/bin/bash\"]\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.685546875,
          "content": "# Colored\n\n[![Crates.io](https://img.shields.io/crates/v/colored.svg?maxAge=2592000)](https://crates.io/crates/colored) [![Crates.io](https://img.shields.io/crates/l/colored.svg?maxAge=2592000)](https://github.com/mackwic/colored/blob/master/LICENSE)\n\nColoring terminal so simple, you already know how to do it!\n\n```rust\n    \"this is blue\".blue();\n    \"this is red\".red();\n    \"this is red on blue\".red().on_blue();\n    \"this is also red on blue\".on_blue().red();\n    \"you can use truecolor values too!\".truecolor(0, 255, 136);\n    \"background truecolor also works :)\".on_truecolor(135, 28, 167);\n    \"truecolor from tuple\".custom_color((0, 255, 136));\n    \"background truecolor from tuple\".on_custom_color((0, 255, 136));\n    \"bright colors are welcome as well\".on_bright_blue().bright_red();\n    \"you can also make bold comments\".bold();\n    println!(\"{} {} {}\", \"or use\".cyan(), \"any\".italic().yellow(), \"string type\".cyan());\n    \"or change advice. This is red\".yellow().blue().red();\n    \"or clear things up. This is default color and style\".red().bold().clear();\n    \"purple and magenta are the same\".purple().magenta();\n    \"and so are normal and clear\".normal().clear();\n    \"you can specify color by string\".color(\"blue\").on_color(\"red\");\n    String::from(\"this also works!\").green().bold();\n    format!(\"{:30}\", \"format works as expected. This will be padded\".blue());\n    format!(\"{:.3}\", \"and this will be green but truncated to 3 chars\".green());\n```\n\n## How to use\n\nAdd this in your `Cargo.toml`:\n\n```toml\n[dependencies]\ncolored = \"2\"\n```\n\nand add this to your `lib.rs` or `main.rs`:\n\n```rust\n    extern crate colored; // not needed in Rust 2018+\n\n    use colored::Colorize;\n\n    // test the example with `cargo run --example most_simple`\n    fn main() {\n        // TADAA!\n        println!(\"{} {} !\", \"it\".green(), \"works\".blue().bold());\n    }\n```\n\n## Features\n\n- Safe rust, easy to use, minimal dependencies, complete test suite\n- Respect the `CLICOLOR`/`CLICOLOR_FORCE` behavior (see [the specs](http://bixense.com/clicolors/))\n- Respect the `NO_COLOR` behavior (see [the specs](https://no-color.org/))\n- Do note that `CLICOLOR_FORCE` overrules `NO_COLOR`, which overrules `CLICOLOR`\n- Works on Linux, MacOS, and Windows (Powershell)\n\n#### Colors:\n\n- black\n- red\n- green\n- yellow\n- blue\n- magenta (or purple)\n- cyan\n- white\n\nBright colors: prepend the color by `bright_`. So easy.\nBackground colors: prepend the color by `on_`. Simple as that.\nBright Background colors: prepend the color by `on_bright_`. Not hard at all.\n\n#### Truecolors\n\nColored has support for truecolors where you can specify any arbitrary rgb value.\n\nThis feature will only work correctly in terminals which support true colors (i.e. most modern terminals).\n\nYou can check if your terminal supports true color by checking the value of the environment variable `$COLORTERM` on your terminal. A value of `truecolor` or `24bit` indicates that it will work.\n\n#### Styles:\n\n- bold\n- underline\n- italic\n- dimmed\n- reversed\n- blink\n- hidden\n- strikethrough\n\nYou can clear color _and_ style anytime by using `normal()` or `clear()`\n\n#### Advanced Control:\n\n##### Dynamic color from str\n\nAs `Color` implements `FromStr`, `From<&str>`, and `From<String>`, you can easily cast a string into a color like that:\n\n```rust\n// the easy way\n\"blue string yo\".color(\"blue\");\n\n// this will default to white\n\"white string\".color(\"zorglub\");\n\n// the safer way via a Result\nlet color_res : Result<Color, ()> = \"zorglub\".parse();\n\"red string\".color(color_res.unwrap_or(Color::Red));\n```\n\n\n##### Colorization control\n\nIf you want to disable any coloring at compile time, you can simply do so by\nusing the `no-color` feature.\n\nFor example, you can do this in your `Cargo.toml` to disable color in tests:\n\n```toml\n[features]\n# this effectively enable the feature `no-color` of colored when testing with\n# `cargo test --feature dumb_terminal`\ndumb_terminal = [\"colored/no-color\"]\n```\n\nYou can use have even finer control by using the\n`colored::control::set_override` method.\n\n## Todo\n\n- **More tests ?**: We always welcome more tests! Please contribute!\n\n## Credits\n\nThis library wouldn't have been the same without the marvelous ruby gem [colored](https://github.com/defunkt/colored).\n\nThanks for the [ansi\\_term crate](https://github.com/ogham/rust-ansi-term) for\nproviding a reference implementation, which greatly helped making this crate\noutput correct strings.\n\n## Minimum Supported Rust Version (MSRV)\nThe current MSRV is `1.80`, which is checked and enforced automatically via CI. This version may change in the future in minor version bumps, so if you require a specific Rust version you should use a restricted version requirement such as `~X.Y`.\n\n## License\n\n[Mozilla Public License 2.0](https://www.mozilla.org/en-US/MPL/2.0/). See the\n[LICENSE](https://github.com/mackwic/colored/blob/master/LICENSE) file at the\nroot of the repository.\n\nIn non legal terms it means that:\n- if you fix a bug, you MUST give me the code of the fix (it's only fair)\n- if you change/extend the API, you MUST give me the code you changed in the\n  files under MPL2.\n- you CAN'T sue me for anything about this code\n- apart from that, you can do almost whatever you want. See the LICENSE file\n  for details.\n\n## Contributors\n\n- Thomas Wickham: [@mackwic](https://github.com/mackwic)\n- Hunter Wittenborn [@hwittenborn](https://github.com/hwittenborn)\n- Corey \"See More\" Richardson: [@cmr](https://github.com/cmr)\n- Iban Eguia: [@Razican](https://github.com/Razican)\n- Alexis \"Horgix\" Chotard: [@horgix](https://github.com/horgix)\n- Keith Yeung: [@KiChjang](https://github.com/KiChjang)\n- Kyle Galloway: [@kylegalloway](https://github.com/kylegalloway)\n- Luke Hsiao: [@lukehsiao](https://github.com/lukehsiao)\n- kurtlawrence: [@kurtlawrence](https://github.com/kurtlawrence)\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}