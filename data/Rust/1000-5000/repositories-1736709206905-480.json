{
  "metadata": {
    "timestamp": 1736709206905,
    "page": 480,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RustCrypto/hashes",
      "stars": 1933,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0419921875,
          "content": "target/\n*/target/\n*/*/target/\n*/Cargo.lock\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 9.25390625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"ascon\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f0e716048a18530cce4684daf98a7563a499d710e1ed8ef35567fcb43a7c5f1\"\ndependencies = [\n \"zeroize\",\n]\n\n[[package]]\nname = \"ascon-hash\"\nversion = \"0.3.0-pre\"\ndependencies = [\n \"ascon\",\n \"base16ct\",\n \"digest\",\n \"hex\",\n \"hex-literal\",\n \"spectral\",\n]\n\n[[package]]\nname = \"base16ct\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf\"\n\n[[package]]\nname = \"belt-block\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9aa1eef3994e2ccd304a78fe3fea4a73e5792007f85f09b79bb82143ca5f82b\"\n\n[[package]]\nname = \"belt-hash\"\nversion = \"0.2.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"belt-block\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"blake2\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"blobby\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"847495c209977a90e8aad588b959d0ca9f5dc228096d29a6bd3defd53f35eaec\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.11.0-rc.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fd016a0ddc7cb13661bf5576073ce07330a693f8608a1320b4e20561cc12cdc\"\ndependencies = [\n \"hybrid-array\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.10.0-rc.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68ff6be19477a1bd5441f382916a89bc2a0b2c35db6d41e0f6e8538bf6d6463f\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.2.0-rc.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0b8ce8218c97789f16356e7896b3714f26c2ee1079b79c0b7ae7064bb9089fa\"\ndependencies = [\n \"getrandom\",\n \"hybrid-array\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.11.0-pre.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf2e3d6615d99707295a9673e889bf363a04b2a466bd320c65a72536f7577379\"\ndependencies = [\n \"blobby\",\n \"block-buffer\",\n \"const-oid\",\n \"crypto-common\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"fsb\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n \"whirlpool\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gost94\"\nversion = \"0.11.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"groestl\"\nversion = \"0.11.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hex-literal\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fe2267d4ed49bc07b63801559be28c718ea06c4738b7a03c94df7386d2cde46\"\n\n[[package]]\nname = \"hybrid-array\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45a9a965bb102c1c891fb017c09a05c965186b1265a207640f323ddd009f9deb\"\ndependencies = [\n \"typenum\",\n]\n\n[[package]]\nname = \"jh\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n \"ppv-lite86\",\n]\n\n[[package]]\nname = \"k12\"\nversion = \"0.4.0-pre\"\ndependencies = [\n \"digest\",\n \"hex-literal\",\n \"sha3\",\n]\n\n[[package]]\nname = \"keccak\"\nversion = \"0.2.0-pre.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7cdd4f0dc5807b9a2b25dd48a3f58e862606fe7bd47f41ecde36e97422d7e90\"\ndependencies = [\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"433bfe06b8c75da9b2e3fbea6e5329ff87748f0b144ef75306e674c3f6f7c13f\"\n\n[[package]]\nname = \"md-5\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"cfg-if\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"md2\"\nversion = \"0.11.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"md4\"\nversion = \"0.11.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"ripemd\"\nversion = \"0.2.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"sha1-checked\"\nversion = \"0.11.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n \"sha1\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"sha3\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n \"keccak\",\n]\n\n[[package]]\nname = \"shabal\"\nversion = \"0.5.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"skein\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n \"threefish\",\n]\n\n[[package]]\nname = \"sm3\"\nversion = \"0.5.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"spectral\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae3c15181f4b14e52eeaac3efaeec4d2764716ce9c86da0c934c3e318649c5ba\"\n\n[[package]]\nname = \"streebog\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"threefish\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a693d0c8cf16973fac5a93fbe47b8c6452e7097d4fcac49f3d7a18e39c76e62e\"\ndependencies = [\n \"zeroize\",\n]\n\n[[package]]\nname = \"tiger\"\nversion = \"0.3.0-pre\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"whirlpool\"\nversion = \"0.11.0-pre.4\"\ndependencies = [\n \"base16ct\",\n \"digest\",\n \"hex-literal\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.4033203125,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"ascon-hash\",\n    \"belt-hash\",\n    \"blake2\",\n    \"fsb\",\n    \"gost94\",\n    \"groestl\",\n    \"jh\",\n    \"k12\",\n    \"md2\",\n    \"md4\",\n    \"md5\",\n    \"ripemd\",\n    \"sha1\",\n    \"sha1-checked\",\n    \"sha2\",\n    \"sha3\",\n    \"shabal\",\n    \"skein\",\n    \"sm3\",\n    \"streebog\",\n    \"tiger\",\n    \"whirlpool\",\n]\n\n[profile.dev]\nopt-level = 2\n\n[patch.crates-io]\nsha1 = { path = \"./sha1\" }\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.4658203125,
          "content": "# RustCrypto: Hashes\n\n[![Project Chat][chat-image]][chat-link] [![dependency status][deps-image]][deps-link] ![Apache2/MIT licensed][license-image]\n\nCollection of [cryptographic hash functions][1] written in pure Rust.\n\nAll algorithms reside in separate crates and are implemented using traits from [`digest`] crate.\nAdditionally all crates do not require the standard library (i.e. `no_std` capable) and can be easily used for bare-metal or WebAssembly programming.\n\n## Supported Algorithms\n\n**Note:** For new applications, or where compatibility with other existing standards is not a primary concern, we strongly recommend to use either BLAKE2, SHA-2 or SHA-3.\n\n| Algorithm | Crate | Crates.io | Documentation | MSRV | [Security] |\n|-----------|-------|:---------:|:-------------:|:----:|:----------:|\n| [Ascon] hash | [`ascon‑hash`] | [![crates.io](https://img.shields.io/crates/v/ascon-hash.svg)](https://crates.io/crates/ascon-hash) | [![Documentation](https://docs.rs/ascon-hash/badge.svg)](https://docs.rs/ascon-hash) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [BelT] hash | [`belt‑hash`] | [![crates.io](https://img.shields.io/crates/v/belt-hash.svg)](https://crates.io/crates/belt-hash) | [![Documentation](https://docs.rs/belt-hash/badge.svg)](https://docs.rs/belt-hash) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [BLAKE2] | [`blake2`] | [![crates.io](https://img.shields.io/crates/v/blake2.svg)](https://crates.io/crates/blake2) | [![Documentation](https://docs.rs/blake2/badge.svg)](https://docs.rs/blake2) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [FSB] | [`fsb`] | [![crates.io](https://img.shields.io/crates/v/fsb.svg)](https://crates.io/crates/fsb) | [![Documentation](https://docs.rs/fsb/badge.svg)](https://docs.rs/fsb) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [GOST R 34.11-94][GOST94] | [`gost94`] | [![crates.io](https://img.shields.io/crates/v/gost94.svg)](https://crates.io/crates/gost94) | [![Documentation](https://docs.rs/gost94/badge.svg)](https://docs.rs/gost94) | ![MSRV 1.81][msrv-1.81] | :yellow_heart: |\n| [Grøstl] (Groestl) | [`groestl`] | [![crates.io](https://img.shields.io/crates/v/groestl.svg)](https://crates.io/crates/groestl) | [![Documentation](https://docs.rs/groestl/badge.svg)](https://docs.rs/groestl) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [JH] | [`jh`] | [![crates.io](https://img.shields.io/crates/v/jh.svg)](https://crates.io/crates/jh) | [![Documentation](https://docs.rs/jh/badge.svg)](https://docs.rs/jh) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [KangarooTwelve] | [`k12`] | [![crates.io](https://img.shields.io/crates/v/k12.svg)](https://crates.io/crates/k12) | [![Documentation](https://docs.rs/k12/badge.svg)](https://docs.rs/k12) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [MD2] | [`md2`] | [![crates.io](https://img.shields.io/crates/v/md2.svg)](https://crates.io/crates/md2) | [![Documentation](https://docs.rs/md2/badge.svg)](https://docs.rs/md2) | ![MSRV 1.81][msrv-1.81] | :broken_heart: |\n| [MD4] | [`md4`] | [![crates.io](https://img.shields.io/crates/v/md4.svg)](https://crates.io/crates/md4) | [![Documentation](https://docs.rs/md4/badge.svg)](https://docs.rs/md4) | ![MSRV 1.81][msrv-1.81] | :broken_heart: |\n| [MD5] | [`md5`] [:exclamation:] | [![crates.io](https://img.shields.io/crates/v/md-5.svg)](https://crates.io/crates/md-5) | [![Documentation](https://docs.rs/md-5/badge.svg)](https://docs.rs/md-5) | ![MSRV 1.81][msrv-1.81] | :broken_heart: |\n| [RIPEMD] | [`ripemd`] | [![crates.io](https://img.shields.io/crates/v/ripemd.svg)](https://crates.io/crates/ripemd) | [![Documentation](https://docs.rs/ripemd/badge.svg)](https://docs.rs/ripemd) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [SHA-1] | [`sha1`] | [![crates.io](https://img.shields.io/crates/v/sha1.svg)](https://crates.io/crates/sha1) | [![Documentation](https://docs.rs/sha1/badge.svg)](https://docs.rs/sha1) | ![MSRV 1.81][msrv-1.81] | :broken_heart: |\n| [SHA-1 Checked] | [`sha1-checked`] | [![crates.io](https://img.shields.io/crates/v/sha1-checked.svg)](https://crates.io/crates/sha1-checked) | [![Documentation](https://docs.rs/sha1-checked/badge.svg)](https://docs.rs/sha1-checked) | ![MSRV 1.81][msrv-1.81] | :yellow_heart: |\n| [SHA-2] | [`sha2`] | [![crates.io](https://img.shields.io/crates/v/sha2.svg)](https://crates.io/crates/sha2) | [![Documentation](https://docs.rs/sha2/badge.svg)](https://docs.rs/sha2) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [SHA-3] (Keccak) | [`sha3`] | [![crates.io](https://img.shields.io/crates/v/sha3.svg)](https://crates.io/crates/sha3) | [![Documentation](https://docs.rs/sha3/badge.svg)](https://docs.rs/sha3) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [SHABAL] | [`shabal`] | [![crates.io](https://img.shields.io/crates/v/shabal.svg)](https://crates.io/crates/shabal) | [![Documentation](https://docs.rs/shabal/badge.svg)](https://docs.rs/shabal) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [Skein] | [`skein`] | [![crates.io](https://img.shields.io/crates/v/skein.svg)](https://crates.io/crates/skein) | [![Documentation](https://docs.rs/skein/badge.svg)](https://docs.rs/skein) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [SM3] (OSCCA GM/T 0004-2012) | [`sm3`] | [![crates.io](https://img.shields.io/crates/v/sm3.svg)](https://crates.io/crates/sm3) | [![Documentation](https://docs.rs/sm3/badge.svg)](https://docs.rs/sm3) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [Streebog] (GOST R 34.11-2012) | [`streebog`] | [![crates.io](https://img.shields.io/crates/v/streebog.svg)](https://crates.io/crates/streebog) | [![Documentation](https://docs.rs/streebog/badge.svg)](https://docs.rs/streebog) | ![MSRV 1.81][msrv-1.81] | :yellow_heart: |\n| [Tiger] | [`tiger`] | [![crates.io](https://img.shields.io/crates/v/tiger.svg)](https://crates.io/crates/tiger) | [![Documentation](https://docs.rs/tiger/badge.svg)](https://docs.rs/tiger) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n| [Whirlpool] | [`whirlpool`] | [![crates.io](https://img.shields.io/crates/v/whirlpool.svg)](https://crates.io/crates/whirlpool) | [![Documentation](https://docs.rs/whirlpool/badge.svg)](https://docs.rs/whirlpool) | ![MSRV 1.81][msrv-1.81] | :green_heart: |\n\nNOTE: the [`blake3`] crate implements the `digest` traits used by the rest of the hashes in this repository, but is maintained by the BLAKE3 team.\n\n[Security]: https://en.wikipedia.org/wiki/Hash_function_security_summary\n[:exclamation:]: #crate-names\n\n### Security Level Legend\n\nThe following describes the security level ratings associated with each hash function (i.e. algorithms, not the specific implementation):\n\n| Heart          | Description |\n|:--------------:|-------------|\n| :green_heart:  | No known successful attacks |\n| :yellow_heart: | Theoretical break: security lower than claimed |\n| :broken_heart: | Attack demonstrated in practice: avoid if at all possible |\n\nSee the [Security] page on Wikipedia for more information.\n\n### Crate Names\n\nWhenever possible crates are published under the same name as the crate folder.\nOwners of `md5` [declined](https://github.com/stainless-steel/md5/pull/) to participate in this project.\nThis crate does not implement the [`digest`] traits, so it is not interoperable with the RustCrypto ecosystem.\nThis is why we publish our MD5 implementation as `md-5` and mark it with the :exclamation: mark.\nNote that the library itself is named as `md5`, i.e. inside `use` statements you should use `md5`, not `md_5`.\n\nThe SHA-1 implementation was previously published as `sha-1`, but migrated to `sha1` since v0.10.0.\n`sha-1` will continue to receive v0.10.x patch updates, but will be deprecated after `sha1` v0.11 release.\n\n### Minimum Supported Rust Version (MSRV) Policy\n\nMSRV bumps are considered breaking changes and will be performed only with minor version bump.\n\n## Examples\n\nLet us demonstrate how to use crates in this repository using SHA-2 as an example.\n\nFirst add [`sha2`](https://docs.rs/sha2) crate to your `Cargo.toml`:\n\n```toml\n[dependencies]\nsha2 = \"0.10\"\n```\n\nNote that all crates in this repository have an enabled by default `std` feature.\nSo if you plan to use the crate in `no_std` environments, don't forget to disable it:\n\n```toml\n[dependencies]\nsha2 = { version = \"0.10\", default-features = false }\n```\n\n[`sha2`](https://docs.rs/sha2) and the other hash implementation crates re-export the [`digest`] crate and the [`Digest`] trait for convenience, so you don't have to include it in your `Cargo.toml` it as an explicit dependency.\n\nNow you can write the following code:\n\n```rust\nuse sha2::{Sha256, Digest};\n\nlet mut hasher = Sha256::new();\nlet data = b\"Hello world!\";\nhasher.update(data);\n// `update` can be called repeatedly and is generic over `AsRef<[u8]>`\nhasher.update(\"String data\");\n// Note that calling `finalize()` consumes hasher\nlet hash = hasher.finalize();\nprintln!(\"Binary hash: {:?}\", hash);\n```\n\nIn this example `hash` has type `GenericArray<u8, U32>`, which is a generic alternative to `[u8; 32]` defined in the [`generic-array`] crate.\nIf you need to serialize hash value into string, you can use crates like [`base16ct`] and [`base64ct`]:\n```rust\nuse base64ct::{Base64, Encoding};\n\nlet base64_hash = Base64::encode_string(&hash);\nprintln!(\"Base64-encoded hash: {}\", base64_hash);\n\nlet hex_hash = base16ct::lower::encode_string(&hash);\nprintln!(\"Hex-encoded hash: {}\", hex_hash);\n```\n\nInstead of calling `update`, you also can use a chained approach:\n\n```rust\nuse sha2::{Sha256, Digest};\n\nlet hash = Sha256::new()\n    .chain_update(b\"Hello world!\")\n    .chain_update(\"String data\")\n    .finalize();\n```\n\nIf a complete message is available, then you can use the convenience [`Digest::digest`] method:\n\n```rust\nuse sha2::{Sha256, Digest};\n\nlet hash = Sha256::digest(b\"my message\");\n```\n\n### Hashing `Read`able Objects\n\nIf you want to hash data from a type which implements the [`Read`] trait, you can rely on implementation of the [`Write`] trait (requires enabled-by-default `std` feature):\n\n```rust\nuse sha2::{Sha256, Digest};\nuse std::{fs, io};\n\nlet mut file = fs::File::open(&path)?;\nlet mut hasher = Sha256::new();\nlet n = io::copy(&mut file, &mut hasher)?;\nlet hash = hasher.finalize();\n```\n\n### Hash-based Message Authentication Code (HMAC)\n\nIf you want to calculate [Hash-based Message Authentication Code][HMAC] (HMAC), you can use the generic implementation from [`hmac`] crate, which is a part of the [RustCrypto/MACs] repository.\n\n### Generic Code\n\nYou can write generic code over the [`Digest`] trait (or other traits from the [`digest`] crate) which will work over different hash functions:\n\n```rust\nuse sha2::{Sha256, Sha512, Digest};\n\n// Toy example, do not use it in practice!\n// Instead use crates from: https://github.com/RustCrypto/password-hashing\nfn hash_password<D: Digest>(password: &str, salt: &str, output: &mut [u8]) {\n    let mut hasher = D::new();\n    hasher.update(password.as_bytes());\n    hasher.update(b\"$\");\n    hasher.update(salt.as_bytes());\n    output.copy_from_slice(&hasher.finalize())\n}\n\nlet mut buf1 = [0u8; 32];\nhash_password::<Sha256>(\"my_password\", \"abcd\", &mut buf1);\n\nlet mut buf2 = [0u8; 64];\nhash_password::<Sha512>(\"my_password\", \"abcd\", &mut buf2);\n```\n\nIf you want to use hash functions with trait objects, you can use the [`DynDigest`] trait:\n\n```rust\nuse digest::DynDigest;\n\n// Dynamic hash function\nfn use_hasher(hasher: &mut dyn DynDigest, data: &[u8]) -> Box<[u8]> {\n    hasher.update(data);\n    hasher.finalize_reset()\n}\n\n// You can use something like this when parsing user input, CLI arguments, etc.\n// DynDigest needs to be boxed here, since function return should be sized.\nfn select_hasher(s: &str) -> Box<dyn DynDigest> {\n    match s {\n        \"md5\" => Box::new(md5::Md5::default()),\n        \"sha1\" => Box::new(sha1::Sha1::default()),\n        \"sha224\" => Box::new(sha2::Sha224::default()),\n        \"sha256\" => Box::new(sha2::Sha256::default()),\n        \"sha384\" => Box::new(sha2::Sha384::default()),\n        \"sha512\" => Box::new(sha2::Sha512::default()),\n        _ => unimplemented!(\"unsupported digest: {}\", s),\n    }\n}\n\nlet mut hasher1 = select_hasher(\"md5\");\nlet mut hasher2 = select_hasher(\"sha512\");\n\n// the `&mut *hasher` is to DerefMut the value out of the Box\n// this is equivalent to `DerefMut::deref_mut(&mut hasher)`\n\n// can be reused due to `finalize_reset()`\nlet hash1_1 = use_hasher(&mut *hasher1, b\"foo\");\nlet hash1_2 = use_hasher(&mut *hasher1, b\"bar\");\nlet hash2_1 = use_hasher(&mut *hasher2, b\"foo\");\n```\n\n## License\n\nAll crates in this repository are licensed under either of\n\n* [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n* [MIT license](http://opensource.org/licenses/MIT)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[//]: # (badges)\n\n[chat-image]: https://img.shields.io/badge/zulip-join_chat-blue.svg\n[chat-link]: https://rustcrypto.zulipchat.com/#narrow/stream/260041-hashes\n[license-image]: https://img.shields.io/badge/license-Apache2.0/MIT-blue.svg\n[deps-image]: https://deps.rs/repo/github/RustCrypto/hashes/status.svg\n[deps-link]: https://deps.rs/repo/github/RustCrypto/hashes\n[msrv-1.81]: https://img.shields.io/badge/rustc-1.81.0+-blue.svg\n\n[//]: # (crates)\n\n[`ascon‑hash`]: ./ascon-hash\n[`belt‑hash`]: ./belt-hash\n[`blake2`]: ./blake2\n[`fsb`]: ./fsb\n[`gost94`]: ./gost94\n[`groestl`]: ./groestl\n[`jh`]: ./jh\n[`k12`]: ./k12\n[`md2`]: ./md2\n[`md4`]: ./md4\n[`md5`]: ./md5\n[`ripemd`]: ./ripemd\n[`sha1`]: ./sha1\n[`sha1-checked`]: ./sha1-checked\n[`sha2`]: ./sha2\n[`sha3`]: ./sha3\n[`shabal`]: ./shabal\n[`skein`]: ./skein\n[`sm3`]: ./sm3\n[`streebog`]: ./streebog\n[`tiger`]: ./tiger\n[`whirlpool`]: ./whirlpool\n\n[//]: # (footnotes)\n\n[1]: https://en.wikipedia.org/wiki/Cryptographic_hash_function\n[`blake3`]: https://github.com/BLAKE3-team/BLAKE3\n[`base16ct`]: https://docs.rs/base16ct\n[`base64ct`]: https://docs.rs/base64ct\n[`digest`]: https://docs.rs/digest\n[`Digest`]: https://docs.rs/digest/0.10.0/digest/trait.Digest.html\n[`Digest::digest`]: https://docs.rs/digest/0.10.0/digest/trait.Digest.html#tymethod.digest\n[`DynDigest`]: https://docs.rs/digest/0.10.0/digest/trait.DynDigest.html\n[`generic-array`]: https://docs.rs/generic-array\n[HMAC]: https://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n[`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html\n[`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html\n[`hmac`]: https://docs.rs/hmac\n[RustCrypto/MACs]: https://github.com/RustCrypto/MACs\n\n[//]: # (algorithms)\n\n[Ascon]: https://ascon.iaik.tugraz.at\n[BelT]: https://ru.wikipedia.org/wiki/BelT\n[BLAKE2]: https://en.wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2\n[FSB]: https://en.wikipedia.org/wiki/Fast_syndrome-based_hash\n[GOST94]: https://en.wikipedia.org/wiki/GOST_(hash_function)\n[Grøstl]: https://en.wikipedia.org/wiki/Grøstl\n[JH]: https://www3.ntu.edu.sg/home/wuhj/research/jh\n[KangarooTwelve]: https://keccak.team/kangarootwelve.html\n[MD2]: https://en.wikipedia.org/wiki/MD2_(cryptography)\n[MD4]: https://en.wikipedia.org/wiki/MD4\n[MD5]: https://en.wikipedia.org/wiki/MD5\n[RIPEMD]: https://en.wikipedia.org/wiki/RIPEMD\n[SHA-1]: https://en.wikipedia.org/wiki/SHA-1\n[SHA-1 Checked]: https://github.com/cr-marcstevens/sha1collisiondetection\n[SHA-2]: https://en.wikipedia.org/wiki/SHA-2\n[SHA-3]: https://en.wikipedia.org/wiki/SHA-3\n[SHABAL]: https://www.cs.rit.edu/~ark/20090927/Round2Candidates/Shabal.pdf\n[Skein]: https://schneier.com/academic/skein\n[SM3]: https://en.wikipedia.org/wiki/SM3_(hash_function)\n[Streebog]: https://en.wikipedia.org/wiki/Streebog\n[Whirlpool]: https://en.wikipedia.org/wiki/Whirlpool_(cryptography)\n[Tiger]: http://www.cs.technion.ac.il/~biham/Reports/Tiger/tiger/tiger.html\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6787109375,
          "content": "# Security Policy\n\n## Supported Versions\n\nSecurity updates are applied only to the most recent release.\n\n## Reporting a Vulnerability\n\nIf you have discovered a security vulnerability in this project, please report\nit privately. **Do not disclose it as a public issue.** This gives us time to\nwork with you to fix the issue before public exposure, reducing the chance that\nthe exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/RustCrypto/hashes/security/advisories/new).\n\nThis project is maintained by a team of volunteers on a reasonable-effort basis.\nAs such, please give us at least 90 days to work on a fix before public exposure.\n"
        },
        {
          "name": "ascon-hash",
          "type": "tree",
          "content": null
        },
        {
          "name": "belt-hash",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "blake2",
          "type": "tree",
          "content": null
        },
        {
          "name": "fsb",
          "type": "tree",
          "content": null
        },
        {
          "name": "gost94",
          "type": "tree",
          "content": null
        },
        {
          "name": "groestl",
          "type": "tree",
          "content": null
        },
        {
          "name": "jh",
          "type": "tree",
          "content": null
        },
        {
          "name": "k12",
          "type": "tree",
          "content": null
        },
        {
          "name": "md2",
          "type": "tree",
          "content": null
        },
        {
          "name": "md4",
          "type": "tree",
          "content": null
        },
        {
          "name": "md5",
          "type": "tree",
          "content": null
        },
        {
          "name": "ripemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "sha1-checked",
          "type": "tree",
          "content": null
        },
        {
          "name": "sha1",
          "type": "tree",
          "content": null
        },
        {
          "name": "sha2",
          "type": "tree",
          "content": null
        },
        {
          "name": "sha3",
          "type": "tree",
          "content": null
        },
        {
          "name": "shabal",
          "type": "tree",
          "content": null
        },
        {
          "name": "skein",
          "type": "tree",
          "content": null
        },
        {
          "name": "sm3",
          "type": "tree",
          "content": null
        },
        {
          "name": "streebog",
          "type": "tree",
          "content": null
        },
        {
          "name": "tiger",
          "type": "tree",
          "content": null
        },
        {
          "name": "whirlpool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}