{
  "metadata": {
    "timestamp": 1736709019741,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "smol-rs/smol",
      "stars": 3818,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0185546875,
          "content": "target/\nCargo.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.421875,
          "content": "# Version 2.0.2\n\n- Update docs to mention `smol-macros`. (#319)\n\n# Version 2.0.1\n\n- Add a mention to the documentation of `smol::spawn` that tasks spawned with\n  this function don't have their destructors called when the program ends. (#312)\n\n# Version 2.0.0\n\n- **Breaking:** Bump subcrates to their newest major versions. (#277, #280, #281, #282, #283)\n- Run the `async-process` driver on the executor. (#284)\n\n# Version 1.3.0\n\n- Remove the dependency on the `once_cell` crate to restore the MSRV. (#241)\n\n# Version 1.2.5\n\n- Bump version for docs.rs to pick up latest dependencies.\n\n# Version 1.2.4\n\n- Update dependencies.\n\n# Version 1.2.3\n\n- Bump version for docs.rs to pick up latest dependencies.\n\n# Version 1.2.2\n\n- Bump version for docs.rs to pick up latest dependencies.\n\n# Version 1.2.1\n\n- Temporarily downgrade `async-executor`.\n\n# Version 1.2.0\n\n- Update all dependencies.\n\n# Version 1.1.0\n\n- Update `async-executor`.\n\n# Version 1.0.1\n\n- Update dependencies.\n\n# Version 1.0.0\n\n- Stabilize.\n\n# Version 0.4.2\n\n- Update dependencies.\n\n# Version 0.4.1\n\n- Bring back `SMOL_THREADS`.\n\n# Version 0.4.0\n\n- Add `process`, `fs`, `net`, `lock`, `channel` modules.\n- Update all dependencies\n- Remove `smol::run()`.\n\n# Version 0.3.3\n\n- Add `block_on()`.\n- Use `SMOL_THREADS` environment variable.\n\n# Version 0.3.2\n\n- Reexport `FutureExt`.\n\n# Version 0.3.1\n\n- Fix some typos in docs.\n\n# Version 0.3.0\n\n- Reexport `futures-lite`, `blocking`, `async-executor`.\n- Re-introduce `smol::run()`.\n\n# Version 0.2.0\n\n- Split `smol` into `async-io`, `blocking`, and `multitask`.\n- Big breaking change - there is now only one type `Task`.\n\n# Version 0.1.18\n\n- Support Rust 1.39.0\n\n# Version 0.1.17\n\n- Support more platforms by changing `AtomicU64` to `AtomicUsize`.\n- Remove `IoEvent` and simplify reactor notification.\n\n# Version 0.1.16\n\n- Add `Async::readable()` and `Async::writable()`.\n\n# Version 0.1.15\n\n- Fix wakeups lost inside the executor.\n- Fix a fairness issue in the executor.\n\n# Version 0.1.14\n\n- Clear the flag after every call to `react()`.\n\n# Version 0.1.13\n\n- Fix deadlocks caused by lost wakeups.\n- Refactor the executor.\n\n# Version 0.1.12\n\n- Fix a bug in `Async::<UdpSocket>::recv()`.\n\n# Version 0.1.11\n\n- Update `wepoll-binding`.\n- Reduce dependencies.\n- Replace `nix` with `libc`.\n- Set minimum required `tokio` version to 0.2.\n\n# Version 0.1.10\n\n- Fix incorrectly reported error kind when connecting fails.\n\n# Version 0.1.9\n\n- Switch to oneshot-style notifications on all platforms.\n- Fix a bug that caused 100% CPU usage on Windows.\n- Deprecate `Async::with()` and `Async::with_mut()`.\n- Add `Async::read_with()`, `Async::read_with_mut()`,\n  `Async::write_with()`, and `Async::write_with_mut()`.\n- Fix a bug where eventfd was not closed.\n\n# Version 0.1.8\n\n- Revert the use of `blocking` crate.\n\n# Version 0.1.7\n\n- Update `blocking` to `0.4.2`.\n- Make `Task::blocking()` work without `run()`.\n\n# Version 0.1.6\n\n- Fix a deadlock by always re-registering `IoEvent`.\n\n# Version 0.1.5\n\n- Use `blocking` crate for blocking I/O.\n- Fix a re-registration bug when in oneshot mode.\n- Use eventfd on Linux.\n- More tests.\n- Fix timeout rounding error in epoll/wepoll.\n\n# Version 0.1.4\n\n- Fix a bug in UDS async connect\n\n# Version 0.1.3\n\n- Fix the writability check in async connect\n- More comments and documentation\n- Better security advice on certificates\n\n# Version 0.1.2\n\n- Improved internal docs, fixed typos, and more comments\n\n# Version 0.1.1\n\n- Upgrade dependencies\n\n# Version 0.1.0\n\n- Initial release\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1259765625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[stjepang@gmail.com](mailto:stjepang@gmail.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.5947265625,
          "content": "[package]\nname = \"smol\"\n# When publishing a new version:\n# - Update CHANGELOG.md\n# - Create \"v2.x.y\" git tag\nversion = \"2.0.2\"\nauthors = [\"Stjepan Glavina <stjepang@gmail.com>\"]\nedition = \"2018\"\nrust-version = \"1.63\"\ndescription = \"A small and fast async runtime\"\nlicense = \"Apache-2.0 OR MIT\"\nrepository = \"https://github.com/smol-rs/smol\"\nkeywords = [\"async\", \"await\", \"future\", \"io\", \"networking\"]\ncategories = [\"asynchronous\", \"concurrency\", \"network-programming\"]\nexclude = [\"/.*\"]\n\n[dependencies]\nasync-channel = \"2.0.0\"\nasync-executor = \"1.5.0\"\nasync-fs = \"2.0.0\"\nasync-io = \"2.1.0\"\nasync-lock = \"3.0.0\"\nasync-net = \"2.0.0\"\nblocking = \"1.3.0\"\nfutures-lite = \"2.0.0\"\n\n[target.'cfg(not(target_os = \"espidf\"))'.dependencies]\nasync-process = \"2.0.0\"\n\n[dev-dependencies]\nanyhow = \"1\"\nasync-dup = \"1\"\nasync-h1 = \"2\"\nasync-native-tls = \"0.5\"\nasync-tungstenite = { version = \"0.28\", features = [\"async-native-tls\"] }\nctrlc = \"3\"\ndoc-comment = \"0.3\"\nfutures = \"0.3\"\nhttp = \"1.1\"\nhttp-body-util = \"0.1.0\"\nhttp-types = \"2\"\nhyper = { version = \"1.0\", default-features = false, features = [\"client\", \"http1\", \"server\"] }\nmacro_rules_attribute = \"0.2.0\"\nnative-tls = \"0.2\"\nscraper = \"0.22\"\nsignal-hook = \"0.3\"\nsmol-hyper = \"0.1.0\"\nsmol-macros = \"0.1.0\"\nsurf = { version = \"2\", default-features = false, features = [\"h1-client\"] }\ntempfile = \"3\"\ntokio = { version = \"1\", default-features = false, features = [\"rt-multi-thread\"] }\nurl = \"2\"\n\n[target.'cfg(target_os = \"linux\")'.dev-dependencies]\ninotify = { version = \"0.11\", default-features = false }\nrustix = \"0.38\"\ntimerfd = \"1\"\n\n[target.'cfg(windows)'.dev-dependencies]\nuds_windows = \"1\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9462890625,
          "content": "# smol\n\n[![Build](https://github.com/smol-rs/smol/actions/workflows/ci.yml/badge.svg)](\nhttps://github.com/smol-rs/smol/actions)\n[![License](https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg)](\nhttps://github.com/smol-rs/smol)\n[![Cargo](https://img.shields.io/crates/v/smol.svg)](\nhttps://crates.io/crates/smol)\n[![Documentation](https://docs.rs/smol/badge.svg)](\nhttps://docs.rs/smol)\n[![Chat](https://img.shields.io/matrix/smol-rs%3Amatrix.org)](\nhttps://matrix.to/#/#smol-rs:matrix.org)\n\n<img src=\"https://raw.githubusercontent.com/smol-rs/smol/master/assets/images/logo_fullsize_transparent.png\" alt=\"kitty\" width=\"100px\" style=\"float: left;\" />\n\nA small and fast async runtime.\n\nThis crate simply re-exports other smaller async crates (see the source).\n\nTo use tokio-based libraries with smol, apply the [`async-compat`] adapter to futures and I/O\ntypes.\n\nSee the [`smol-macros`] crate if you want a no proc-macro, fast compiling, easy-to-use\nasync main and/or multi-threaded Executor setup out of the box.\n\n## Examples\n\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n\n```rust,no_run\nuse smol::{io, net, prelude::*, Unblock};\n\nfn main() -> io::Result<()> {\n    smol::block_on(async {\n        let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n        let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n        stream.write_all(req).await?;\n\n        let mut stdout = Unblock::new(std::io::stdout());\n        io::copy(stream, &mut stdout).await?;\n        Ok(())\n    })\n}\n```\n\nThere's a lot more in the [examples] directory.\n\n[`async-compat`]: https://docs.rs/async-compat/latest/async_compat/\n[`smol-macros`]: https://docs.rs/smol-macros/latest/smol_macros/\n[examples]: https://github.com/smol-rs/smol/tree/master/examples\n\n## Subcrates\n\n- [async-channel] - Multi-producer multi-consumer channels\n- [async-executor] - Composable async executors\n- [async-fs] - Async filesystem primitives\n- [async-io] - Async adapter for I/O types, also timers\n- [async-lock] - Async locks (barrier, mutex, reader-writer lock, semaphore)\n- [async-net] - Async networking primitives (TCP/UDP/Unix)\n- [async-process] - Async interface for working with processes\n- [async-task] - Task abstraction for building executors\n- [blocking] - A thread pool for blocking I/O\n- [futures-lite] - A lighter fork of [futures]\n- [polling] - Portable interface to epoll, kqueue, event ports, and wepoll\n\n[async-io]: https://github.com/smol-rs/async-io\n[polling]: https://github.com/smol-rs/polling\n[nb-connect]: https://github.com/smol-rs/nb-connect\n[async-executor]: https://github.com/smol-rs/async-executor\n[async-task]: https://github.com/smol-rs/async-task\n[blocking]: https://github.com/smol-rs/blocking\n[futures-lite]: https://github.com/smol-rs/futures-lite\n[smol]: https://github.com/smol-rs/smol\n[async-net]: https://github.com/smol-rs/async-net\n[async-process]: https://github.com/smol-rs/async-process\n[async-fs]: https://github.com/smol-rs/async-fs\n[async-channel]: https://github.com/smol-rs/async-channel\n[concurrent-queue]: https://github.com/smol-rs/concurrent-queue\n[event-listener]: https://github.com/smol-rs/event-listener\n[async-lock]: https://github.com/smol-rs/async-lock\n[fastrand]: https://github.com/smol-rs/fastrand\n[futures]: https://github.com/rust-lang/futures-rs\n\n## TLS certificate\n\nSome code examples are using TLS for authentication. The repository\ncontains a self-signed certificate usable for testing, but it should **not**\nbe used for real-world scenarios. Browsers and tools like curl will\nshow this certificate as insecure.\n\nIn browsers, accept the security prompt or use `curl -k` on the\ncommand line to bypass security warnings.\n\nThe certificate file was generated using\n[minica](https://github.com/jsha/minica) and\n[openssl](https://www.openssl.org/):\n\n```text\nminica --domains localhost -ip-addresses 127.0.0.1 -ca-cert certificate.pem\nopenssl pkcs12 -export -out identity.pfx -inkey localhost/key.pem -in localhost/cert.pem\n```\n\nAnother useful tool for making certificates is [mkcert].\n\n[mkcert]: https://github.com/FiloSottile/mkcert\n\n## MSRV Policy\n\nThe Minimum Supported Rust Version (MSRV) of this crate is **1.63**. As a **tentative** policy, the MSRV will not advance past the [current Rust version provided by Debian Stable](https://packages.debian.org/stable/rust/rustc). At the time of writing, this version of Rust is *1.63*. However, the MSRV may be advanced further in the event of a major ecosystem shift or a security vulnerability.\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n#### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\ndual licensed as above, without any additional terms or conditions.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}