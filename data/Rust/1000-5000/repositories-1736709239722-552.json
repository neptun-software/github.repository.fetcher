{
  "metadata": {
    "timestamp": 1736709239722,
    "page": 552,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "huytd/kanban-app",
      "stars": 1794,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "/target\n**/*.rs.bk\n.DS_Store\ndist.js"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 2.3095703125,
          "content": "[[package]]\nname = \"bitflags\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"kanbanapp\"\nversion = \"0.1.0\"\ndependencies = [\n \"web-view 0.1.3 (git+https://github.com/huytd/web-view)\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"urlencoding\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"web-view\"\nversion = \"0.1.3\"\nsource = \"git+https://github.com/huytd/web-view#55446f00f8a803eb029dfddc7e08e189cd00dc56\"\ndependencies = [\n \"fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"urlencoding 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"webview-sys 0.1.0 (git+https://github.com/huytd/web-view)\",\n]\n\n[[package]]\nname = \"webview-sys\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/huytd/web-view#55446f00f8a803eb029dfddc7e08e189cd00dc56\"\ndependencies = [\n \"bitflags 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cc 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[metadata]\n\"checksum bitflags 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1b2bf7093258c32e0825b635948de528a5949799dcd61bef39534c8aab95870c\"\n\"checksum cc 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38fb45eeb2c9216a6700cf675b418d6c26ee15b55a3700970112da9fedfb8694\"\n\"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n\"checksum pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"110d5ee3593dbb73f56294327fe5668bcc997897097cbc76b51e7aed3f52452f\"\n\"checksum urlencoding 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3df3561629a8bb4c57e5a2e4c43348d9e29c7c29d9b1c4c1f47166deca8f37ed\"\n\"checksum web-view 0.1.3 (git+https://github.com/huytd/web-view)\" = \"<none>\"\n\"checksum webview-sys 0.1.0 (git+https://github.com/huytd/web-view)\" = \"<none>\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.419921875,
          "content": "[package]\nname = \"kanbanapp\"\ndescription = \"Kanban app\"\nversion = \"0.1.0\"\nauthors = [\"Huy Tran <kingbazoka@gmail.com>\"]\n\n[dependencies]\nweb-view = { git = \"https://github.com/huytd/web-view\" }\n\n[package.metadata.bundle]\nname = \"Kanban\"\nidentifier = \"com.huy.kanbanapp\"\nversion = \"1.0.0\"\nresources = []\ncopyright = \"Copyright (c) Huy Tran 2018. All rights reserved.\"\nshort_description = \"Kanban app\"\nlong_description = \"Kanban app\""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.357421875,
          "content": " Copyright (C) 2018, Huy Tran\n\n Everyone is permitted to copy and distribute verbatim or modified \n copies of this license document, and changing it is allowed as long \n as the name is changed. \n\n            DO WHAT THE F*** YOU WANT TO PUBLIC LICENSE \n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION \n\n  0. You just DO WHAT THE F*** YOU WANT TO.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.6748046875,
          "content": "# Desktop Kanban Board\n\nLook ma, no Electron!\n\n![](light-theme.png)\n\n![](dark-theme.png)\n\n## What is this?\n\nThis is a web-based Kanban board application, built with Elm and Rust.\n\nThe only different from this application and hundred thousands of web-based application out there is: **We don't need [Electron](https://electronjs.org/)!**.\n\nInstead, it use native WebView (WebKit for Linux/macOS, and MSHTML on Windows), more details [see here](https://github.com/zserge/webview).\n\nThe whole source code in this repository is just a desktop client, which you can actually use for **any** web-based application.\n\n_Note: I maintain my own version of [zserge/webview](https://github.com/zserge/webview) and [Boscop/web-view](https://github.com/Boscop/web-view), because I want to add some customized titlebar on macOS, and my code is ugly enough to create a PR on these repos._\n\n## Instruction\n\n### Step 1: Build the web application\n\n**Skip this if you're using an online hosted application from an URL, or building your own app**.\n\nClone the [Kanelm](https://github.com/huytd/kanelm) application source code from here https://github.com/huytd/kanelm \n\nFollow the instruction in that repo to config your jsonbin.io config, then install the dependencies and build it:\n\n```\nyarn install\nelm-package install\nyarn build\n```\n\nWhat you will get is a `dist` folder, and you only need the `dist.js` file, copy it to `www` folder of this repo.\n\n```\n└── www\n    └── dist.js\n```\n\n### Step 2: Build the desktop application\n\nYou gonna need [cargo bundle](https://github.com/burtonageo/cargo-bundle).\n\nInstall it, then run:\n\n```\ncargo bundle --release\n```\n\nNow you got it.\n\n## Wait, what happened?\n\nWell, the Elm application will be compiled into a single `dist.js` file, the content of this JavaScript file will be inlined into our Rust source code:\n\n**src/main.rs**\n```rust\nlet html = format!(r#\"\n    <html>\n        <head>\n        <link href=\"https://fonts.googleapis.com/css?family=PT+Sans\" rel=\"stylesheet\"> \n        <style>{css}</style>\n        </head>\n        <body>\n        <script>{js}</script>\n        </body>\n    </html>\n    \"#,\n    css = r#\"body { background: #1d1f21; }\"#,\n    js = include_str!(\"../www/dist.js\"));\n```\n\nThe Rust application will then create a new window, contains a webview, load this HTML content into that webview, and that's it.\n\n## But Electron did the same thing?\n\nYeh, but sometimes, all you need is just a webview to display your web application on a desktop. You don't need file system access or automatic update, blah blah, it would be a huge waste to ship your app with >100MB of Chromium and V8 in it.\n\nIn fact, this application only uses 0-3% CPU and the bundle size is >800KB on macOS.\n\n![](monitor.png)\n"
        },
        {
          "name": "dark-theme.png",
          "type": "blob",
          "size": 43.9033203125,
          "content": null
        },
        {
          "name": "light-theme.png",
          "type": "blob",
          "size": 44.353515625,
          "content": null
        },
        {
          "name": "monitor.png",
          "type": "blob",
          "size": 114.388671875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}