{
  "metadata": {
    "timestamp": 1736709044010,
    "page": 145,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rcore-os/rCore",
      "stars": 3497,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3505859375,
          "content": "build\ntarget\n/kernel/src/arch/x86_64/interrupt/vector.asm\n/kernel/src/arch/mipsel/boot/linker.ld\n*.gen.s\n*.dtb\n\nCargo.lock\n!kernel/Cargo.lock\n!bootloader/Cargo.lock\n!user/Cargo.lock\n\n.DS_Store\n\n# for eclipse\n.project\n\n# for vscode\n.vscode\n\n# for vim\n*.swp\n\n# for idea\n.idea\n\n# for kernel module building\n# C & Rust\nmodules/*/objs\n# Rust\nmodules/*/target\ntest/"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.162109375,
          "content": "[submodule \"user\"]\n    path = user\n    url = https://github.com/rcore-os/rcore-user.git\n[submodule \"rboot\"]\n\tpath = rboot\n\turl = https://github.com/rcore-os/rboot.git"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "MIT License\n\nCopyright (c) 2018-2020 rCore Developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9736328125,
          "content": "# rCore\n\n[![CI](https://github.com/rcore-os/rCore/workflows/CI/badge.svg?branch=master)](https://github.com/rcore-os/rCore/actions)\n\nNO LONGER MAINTAINED. You can see recent developments in:\n\n- <https://github.com/rcore-os/zCore>\n- <https://github.com/rcore-os/arceos>\n- <https://github.com/rcore-os/rCore-Tutorial-Book-v3>\n- <https://github.com/rcore-os/arceos-tutorial-book>\n\nRust version of THU [uCore OS Plus](https://github.com/chyyuu/ucore_os_plus).\n\nGoing to be the next generation teaching operating system.\n\nSupported architectures and boards:\n\n* x86_64(Tier 1): QEMU, PC (i5/i7)\n* RISCV32/64(Tier 2): QEMU, HiFive Unleashed\n* AArch64(Tier 2): QEMU, Raspberry Pi 3B+\n* MIPS32(Tier 3): QEMU, [TrivialMIPS](https://github.com/Harry-Chen/TrivialMIPS)\n\n![demo](./docs/2_OSLab/os2atc/demo.png)\n\n## What's included\n\nrCore has the following features:\n\n* Linux compatible syscall interface: run Linux userspace programs\n* Network stack\n* Simple file system\n* Signal system\n* Async IO\n* Kernel module\n\n## Building\n\n### Environment\n\n* [Rust](https://www.rust-lang.org) toolchain\n* [QEMU](https://www.qemu.org) >= 4.1.0\n* [musl-based GCC toolchains](https://musl.cc/) (only for building [user programs](https://github.com/rcore-os/rcore-user))\n\nSetup on Linux or macOS:\n\n```bash\n$ rustup component add rust-src llvm-tools-preview\n```\n\nOr use Docker container:\n\n```bash\n$ docker run -it -v $PWD:$PWD -w $PWD wangrunji0408/rcore\n```\n\n### How to run\n\n```bash\n$ git clone https://github.com/rcore-os/rCore.git --recursive\n$ cd rCore/user\n$ make sfsimg PREBUILT=1 ARCH=x86_64\n$ cd ../kernel\n$ make run ARCH=x86_64 LOG=info\n```\n\nSee [Makefile](kernel/Makefile) for more usages.\n\n## Maintainers\n\n| Module | Maintainer            |\n|--------|-----------------------|\n| x86_64 | @wangrunji0408        |\n| RISC-V  | @jiegec               |\n| AArch64 (Raspi3) | @equation314    |\n| MIPS   | @Harry_Chen @miskcoo   |\n| Memory, Process, File System | @wangrunji0408          |\n| Network with drivers | @jiegec |\n| GUI    | @equation314          |\n\n## History\n\nThis is a project of THU courses:\n\n* [Operating System (2018 Spring)](http://os.cs.tsinghua.edu.cn/oscourse/OS2018spring/projects/g11)\n* [Comprehensive Experiment of Computer System (2018 Summer)](http://os.cs.tsinghua.edu.cn/oscourse/csproject2018/group05)\n* [Operating System Train (2018 Autumn)](http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2018)\n* [Operating System (2019 Spring)](http://os.cs.tsinghua.edu.cn/oscourse/OS2019spring/projects)\n* [Operating System Train (2019 Autumn)](http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2019)\n* [Operating System (2020 Spring)](http://os.cs.tsinghua.edu.cn/oscourse/OS2020spring/projects)\n\n[Reports](./docs) and [Dev docs](https://rucore.gitbook.io/rust-os-docs/) (in Chinese)\n\nIt's based on [BlogOS](https://github.com/phil-opp/blog_os) , a demo project in the excellent tutorial [Writing an OS in Rust (First Edition)](https://os.phil-opp.com/first-edition/).\n\n## License\n\nThe source code is dual-licensed under MIT or the Apache License (Version 2.0).\n"
        },
        {
          "name": "crate",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "rboot",
          "type": "commit",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.0185546875,
          "content": "nightly-2020-06-04\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "user",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}