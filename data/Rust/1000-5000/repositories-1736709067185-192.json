{
  "metadata": {
    "timestamp": 1736709067185,
    "page": 192,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lalrpop/lalrpop",
      "stars": 3128,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clog.toml",
          "type": "blob",
          "size": 0.10546875,
          "content": "[clog]\nrepository = \"https://github.com/lalrpop/lalrpop\"\n\nchangelog = \"RELEASES.md\"\n\nfrom-latest-tag = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.060546875,
          "content": "* text=auto\n\nlalrpop/src/parser/lrgrammar.lalrpop text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0234375,
          "content": "target\n*~\nTAGS\n**/*.bak\n"
        },
        {
          "name": ".mdl_style.rb",
          "type": "blob",
          "size": 0.099609375,
          "content": "all\nrule 'MD013', :ignore_code_blocks => true, :tables => false\nrule 'MD026', :punctuation => \".,;:!\"\n"
        },
        {
          "name": ".mdlrc",
          "type": "blob",
          "size": 0.021484375,
          "content": "style \".mdl_style.rb\"\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.16796875,
          "content": "# The LALRPOP Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior\nmay be reported by contacting the project team at\n[mods@lalrpop.org](mailto:mods@lalrpop.org). All complaints will be\nreviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of\nan incident.  Further details of specific enforcement policies may be\nposted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.44921875,
          "content": "### TLDR;\n\nBefore doing anything else, run `cargo build -p lalrpop`!\n\nWhen making changes the alter the generated code, use `sh update_lrgrammar.sh`\nto pass the `verify_lalrpop_generates_itself` test.\n\n\n### Contributor's \"How to\"\n\nJust as any language that is written in itself, LALRPOP has to solve chicken-and-egg problem.\nTo compile LALRPOP we need a working version of LALRPOP. To have a working version we need\nto compile it first.\n\nThe `lalrpop` crate already includes an auto-generated parser\nin `lalrpop/src/parser/lrgrammar.rs` that end-users use.\nSmall (meh), (relatively) fast to compile, easy to use (really, for end-users).\n\nThat said, if you changes don't affect LALRPOP's own grammar\n(`lalrpop/src/parser/lrgrammar.lalrpop`) your workflow is simple\n\n```sh\n# building\n$ cargo build # -p lalrpop --release\n\n# testing\n$ cargo test # -p lalrpop --release\n```\n\nBut if your changes *do* affect the grammar - well, that's where all the fun of\nbootstrapping compilers comes! You're going to have to get a working `lalrpop` binary to\ngenerate your own `lrgrammar.rs` parser. That's how you do it:\n\n```sh\n$ cargo build -p lalrpop # --release\n```\n\nOnce you're done with your work, make sure that you are running against an\nupdated version of the grammar.\n\n```sh\n$ sh update_lrgrammar.sh\n```\n\nThis script will replace `lalrpop/src/parser/lrgrammar.rs` with the newly generated one, renaming\nthe old one to `lalrpop/src/parser/lrgrammar.rs.bak` just in case.\n\nNow feel free to `git commit` and `git push` your changes.\n\n#### History\n\nIn the past, LALRPOP used snapshots of its older self to compile itself (you might notice\n[lalrpop-snap](https://crates.io/crates/lalrpop-snap) on crates.io). Unfortunately, this meant end-users\nhad to build **both** `lalrpop` and `lalrpop-snap` crates and nobody liked this double-building.\nSo this approach has been abandoned a while ago.\n\n### Releasing LALRPOP\n\n#### Prerequisites\n1. `version.sh` makes use of clog-cli.  Run `cargo install clog-cli` to get it\n\n#### Without Cargo-Release\n\n1. Run `./version.sh <NEW VERSION>`.\n2. Commit the changes\n3. Run `cargo publish` for lalrpop and lalrpop-util\n4. Tag new release\n5. Push new tag to repository\n\n#### Cargo-Release\n\nIf using [cargo-release](https://github.com/crate-ci/cargo-release):\n\n1. Run `./version.sh <NEW VERSION>`.\n2. Commit the changes\n3. `cargo release --execute --package lalrpop-util --tag-name \"{{version}}\"`\n4. `cargo release --execute --package lalrpop --no-tag`\n\nDrop the `--execute` flag to do a dry run and check for any issues first.\n\n### Running code coverage tools\n\nThere are a few gotchas when running code coverage tooling on the lalrpop code\nbase.  Below are instructions to get it working using [cargo-llvm-cov](https://github.com/taiki-e/cargo-llvm-cov).\n\nThe first issue is that we need to build an instrumented lalrpop binary to use\nduring test runs. Following the instructions [here](https://github.com/taiki-e/cargo-llvm-cov?tab=readme-ov-file#get-coverage-of-external-tests)\nwill enable an instrumented binary to be built and then found by cargo during\nthe test run.\n\nSecond, a lot of our work happens in build scripts, which llvm-cov ignores by\ndefault.  To have it consider build scripts, pass the --include-build-script\nargument in your call to to `llvm-cov report` like so:\n\n```shell\ncargo llvm-cov --include-build-script report --html\n```\n\nThat will make sure that build script commands (particularly\nlalrpop-test/build.rs) are part of the calculated coverage, which gives a\nmuch more accurate picture.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 18.625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ascii-canvas\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef1e3e699d84ab1b0911a1010c5c106aa34ae89aeac103be5ce0c3859db1e891\"\ndependencies = [\n \"term\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"beef\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a8241f3ebb85c056b509d4327ad0358fbbba6ffb340bf388f26350aeda225b1\"\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08807e080ed7f9d5433fa9b275196cfc35414f66a0c79d864dc51a0d825231a3\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e764a1d40d510daf35e07be9eb06e75770908c27d411ee6c92109c9840eaaf7\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"calculator\"\nversion = \"0.22.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"cfg\"\nversion = \"0.22.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"ena\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d248bdd43ce613d87415282f69b9bb99d947d290b10962dd6c56233312c2ad5\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d674e81391d1e1ab681a28d99df07927c6d4aa5b027d7da16ba32d1d21ecd99\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b900aa2f7301e21c36462b170ee99994de34dff39a4a6a528e80e7376d07e5\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b192c782037fadd9cfa75548310488aabdbf3d2da73885b31bd0abd03351285\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"keccak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecc2af9a1119c51f12a14607e783cb977bde58bc069ff0c3da1095e635d70654\"\ndependencies = [\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"lalrpop\"\nversion = \"0.22.0\"\ndependencies = [\n \"ascii-canvas\",\n \"bit-set\",\n \"diff\",\n \"ena\",\n \"itertools\",\n \"lalrpop-util\",\n \"petgraph\",\n \"pico-args\",\n \"rand\",\n \"rand_chacha\",\n \"regex\",\n \"regex-syntax\",\n \"sha3\",\n \"string_cache\",\n \"term\",\n \"unicode-xid\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"lalrpop-test\"\nversion = \"0.22.0\"\ndependencies = [\n \"diff\",\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"lalrpop-util\"\nversion = \"0.22.0\"\ndependencies = [\n \"regex-automata\",\n \"rustversion\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lexer\"\nversion = \"0.1.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n \"logos\",\n \"logos-codegen\",\n \"logos-derive\",\n]\n\n[[package]]\nname = \"lexer-modes\"\nversion = \"0.1.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"logos\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c6b6e02facda28ca5fb8dbe4b152496ba3b1bd5a4b40bb2b1b2d8ad74e0f39b\"\ndependencies = [\n \"logos-derive\",\n]\n\n[[package]]\nname = \"logos-codegen\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b32eb6b5f26efacd015b000bfc562186472cd9b34bdba3f6b264e2a052676d10\"\ndependencies = [\n \"beef\",\n \"fnv\",\n \"lazy_static\",\n \"proc-macro2\",\n \"quote\",\n \"regex-syntax\",\n \"syn\",\n]\n\n[[package]]\nname = \"logos-derive\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e5d0c5463c911ef55624739fc353238b4e310f0144be1f875dc42fec6bfd5ec\"\ndependencies = [\n \"logos-codegen\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"new_debug_unreachable\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"650eef8c711430f1a879fdd01d4745a7deea475becfb90269c06775983bbf086\"\n\n[[package]]\nname = \"nobol\"\nversion = \"0.1.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"pascal\"\nversion = \"0.11.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n \"pico-args\",\n]\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2b1374ec32450264534c67d1ccb5ca09818c4db8fd87cf97478d0df2fa44c65\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"precomputed-hash\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sha3\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75872d278a8f37ef87fa0ddbda7802605cb18344497949862c0d4dcb291eba60\"\ndependencies = [\n \"digest\",\n \"keccak\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"string_cache\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b\"\ndependencies = [\n \"new_debug_unreachable\",\n \"once_cell\",\n \"parking_lot\",\n \"phf_shared\",\n \"precomputed-hash\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3bb6001afcea98122260987f8b7b5da969ecad46dbf0b5453702f776b491a41\"\ndependencies = [\n \"home\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"whitespace\"\nversion = \"0.22.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n]\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.234375,
          "content": "[workspace]\nmembers = [\n        \"doc/calculator\",\n        \"doc/nobol\",\n        \"doc/pascal/lalrpop\",\n        \"doc/whitespace\",\n        \"doc/lexer\",\n        \"doc/lexer-modes\",\n        \"doc/cfg\",\n        \"lalrpop-test\",\n        \"lalrpop-util\",\n        \"lalrpop\",\n]\nresolver = \"2\"\n\n[workspace.package]\nrepository = \"https://github.com/lalrpop/lalrpop\"\nauthors = [\"Niko Matsakis <niko@alum.mit.edu>\"]\nlicense = \"Apache-2.0 OR MIT\"\nversion = \"0.22.0\" # LALRPOP\nedition = \"2021\"\n# This is (very) soft limit of the minimum supported version.\n# Please update it when lalrpop requires a new feature.\n# We prefer to avoid the latest 2 stable versions. (e.g. at most 1.64 when stable is 1.66)\n# NOTE: Don't forget to update test.yaml as well.\nrust-version = \"1.70\"\nkeywords = [\"parser\", \"generator\", \"LR\", \"yacc\", \"grammar\"]\ncategories = [\"parsing\"]\n\n[workspace.dependencies]\ndiff = { version = \"0.1.12\", default-features = false }\nregex = { version = \"1.3\", default-features = false, features = [\"std\"] }\nregex-syntax = { version = \"0.8.2\", default-features = false }\nregex-automata = { version = \"0.4\", default-features = false, features = [\n        \"perf-inline\",\n        \"perf-literal-substring\",\n        \"syntax\",\n        \"hybrid\",\n] }\nrustversion = { version = \"1.0\" }\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.048828125,
          "content": "Copyright (c) 2015 The LALRPOP Project Developers\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.171875,
          "content": "# LALRPOP\n\n[![Join the chat at https://gitter.im/lalrpop/Lobby](https://badges.gitter.im/lalrpop/Lobby.svg)](https://gitter.im/lalrpop/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Deploy](https://github.com/lalrpop/lalrpop/actions/workflows/deploy.yml/badge.svg)](https://github.com/lalrpop/lalrpop/actions/workflows/deploy.yml)\n\nLALRPOP is a Rust parser generator framework with *usability* as its\nprimary goal. You should be able to write compact, DRY, readable\ngrammars. To this end, LALRPOP offers a number of nifty features:\n\n0. Nice error messages in case parser constructor fails.\n1. Macros that let you extract common parts of your grammar. This\n   means you can go beyond simple repetition like `Id*` and define\n   things like `Comma<Id>` for a comma-separated list of identifiers.\n2. Macros can also create subsets, so that you easily do something\n   like `Expr<\"all\">` to represent the full range of expressions, but\n   `Expr<\"if\">` to represent the subset of expressions that can appear\n   in an `if` expression.\n3. Builtin support for operators like `*` and `?`.\n4. Compact defaults so that you can avoid writing action code much of the\n   time.\n5. Type inference so you can often omit the types of nonterminals.\n\nDespite its name, LALRPOP in fact uses LR(1) by default (though you\ncan opt for LALR(1)), and really I hope to eventually move to\nsomething general that can handle all CFGs (like GLL, GLR, LL(\\*),\netc).\n\n### Documentation\n\n[The LALRPOP book] covers all things LALRPOP -- or at least it intends\nto! Here are some tips:\n\n- The [tutorial] covers the basics of setting up a LALRPOP parser.\n- For the impatient, you may prefer the [quick start guide] section, which describes\n  how to add LALRPOP to your `Cargo.toml`.\n- Returning users of LALRPOP may benefit from the [cheat sheet].\n- The [advanced setup] chapter shows how to configure other aspects of LALRPOP's\n  preprocessing.\n- docs.rs API documentation for [lalrpop](https://docs.rs/lalrpop/latest/lalrpop/) and [lalrpop-util]\n- If you have any questions join our [gitter lobby].\n\n### Example Uses\n\n- [LALRPOP] is itself implemented in LALRPOP.\n- [Gluon] is a statically typed functional programming language.\n- [RustPython] is Python 3.5+ rewritten in Rust\n- [Solang] is Ethereum Solidity rewritten in Rust\n\n[The LALRPOP book]: https://lalrpop.github.io/lalrpop/\n[quick start guide]: https://lalrpop.github.io/lalrpop/quick_start_guide.html\n[advanced setup]: https://lalrpop.github.io/lalrpop/advanced_setup.html\n[cheat sheet]: https://lalrpop.github.io/lalrpop/cheatsheet.html\n[tutorial]: https://lalrpop.github.io/lalrpop/tutorial/index.html\n[LALRPOP]: https://github.com/lalrpop/lalrpop/blob/master/lalrpop/src/parser/lrgrammar.lalrpop\n[Gluon]: https://github.com/gluon-lang/gluon/blob/master/parser/src/grammar.lalrpop\n[RustPython]: https://github.com/RustPython/Parser/blob/main/parser/src/python.lalrpop\n[Solang]: https://github.com/hyperledger/solang/blob/main/solang-parser/src/solidity.lalrpop\n[gitter lobby]: https://gitter.im/lalrpop/Lobby\n[lalrpop-util]: https://docs.rs/lalrpop-util/latest/lalrpop_util/\n\n### Contributing\n\nYou **really** should read `CONTRIBUTING.md` if you intend to change LALRPOP's own grammar.\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 21.474609375,
          "content": "<a name=\"0.22.0\"></a>\n## 0.22.0  (2024-09-26)\n\n#### Breaking changes\n* The `lexer` feature no longer implies the `std` feature.  Now `lexer` is\n  usable in `no_std` environments. In `no_std`, ParseError only implements the\n  Error trait in rust 1.81 or later (since core::error was stablized in 1.81).\n\n#### Features\n* Overhaul cfg attributes.  You can now include or omit grammar rules and\n  alternatives based on cargo features with `not()`, `any()` and `all()` support\n\n#### Bugfixes\n* Improvements to error message reporting to improve clarity and suppress extra noise\n* `lalrpop_mod!()` now handles imports correctly\n* Reenable some warnings on user code for custom lexers\n\n<a name=\"0.21.0\"></a>\n## 0.21.0 (2024-05-30)\n\nSince the last release, a fair number of the commits have been focused on cleaning\nup and improving LALRPOP's documentation. Shout out to Yudai Takada, George\nWhite, and Dinu Blanovschi.\n\n#### Features\n\n* LALRPOP now throws an error in more cases where it would previously just write\n  out an error message and exit.\n* `lalrpop::process_src` is now the recommended function to use in `build.rs`\n  files. Previously the documentation incorrectly suggested that\n  `lalrpop::process_root` looked in `./src` instead of `.`\n\n#### Bugfixes\n\n* A long-standing bug where LALRPOP would throw a \"no entry found for key\"\n  exception when trying to handle certain grammars has been resolved.\n* LALRPOP will stop expanding macros infinitely during build time via a new\n  `macro_expansion_limit`.\n\n#### Compatibility note\n\nAdding a limit to the number of times that LALRPOP will attempt to expand a\nmacro is technically a breaking change. However, the default limit of `200`\nshould be more than enough for the grammars we are currently aware of (which\nalmost always need a limit of less than 5). This limit is customizable via `Configuration::set_macro_expansion_limit`.\n\nIf you have a grammar that uses a significant amount of macro expansion steps,\nwe would be very interested in a PR that adds it to the test suite.\n\n\n<a name=\"0.20.2\"></a>\n## 0.20.2 (2024-02-**)\n\nSpecial thanks to our newest maintainers, Daniel Burgener and Patrick LaFontaine for helping to coordinate this release.\n\n#### Features\n\n* Lalrpop no longer depends on the `is-terminal` crate (thanks to Kmeakin!)\n* Better performance with the default lexer using the underlying `regex-automata` crate (thanks to QuarticCat!)\n* Allow the catch-all `_` case for token matching can now be set to a higher precedence in match (thanks to fpoli!)\n* Fewer clippy lints triggered in generated code\n* Lalrpop now traverses symlinks to find .lalrpop files(thanks mbid!)\n* Lalrpop now supports block comments including nestings(thanks seanbright!)\n\n#### Bugfixes\n\n* Lalrpop now uses the ascii-aware space regex when the unicode feature is not enabled (thanks to QuarticCat!)\n* Dangling symlinks in crate no longer cause build failure (thanks to legeana\n  for the report!)\n* Unicode is now set as a default feature in lalrpop-util to align with\n  lalrpop's defaults\n\n#### Compatibility note\n\n* MSRV increased to `1.70`.\n* `process_root_unconditionally` now correctly lints as having been deprecated.\n* Internal types which lead with a `__` and should not be relied upon are no longer publicly exposed (thanks to arnaudgolfouse!)\n* Lalrpop files containing a space in their name now return an error.\n\n<a name=\"0.20.1\"></a>\n## 0.20.1 (2024-02-**)\n\nYanked\n\n<a name=\"0.20.0\"></a>\n## 0.20.0 (2023-05-02)\n\nBringing back 0.19.10 patches and further enhancement.\n\n#### Breaking changes\n\n* Types and enums name with capitalized acronyms are renamed to camelCase\n* Minimum rust supported version is now 1.64\n* New `unicode` feature is added to enable `regex/unicode` and `regex-syntax/unicode`. Building lalrpop with --no-default-features may be broken without adding it.\n\n#### Features\n\n* faster compilation time by up to 2x\n* expected tokens in failed parses are more accurate\n* support for unicode when using builtin tokenizer\n\n#### Bug fixes and other changes\n\n* fewer warnings about clippy/unused imports in generated code\n* updated to edition 2021\n* updated mdbook\n* Use inclusive ranges for DFA/NFA\n* A new document \"Lexing raw delimited content\"\n\n<a name=\"0.19.12\"></a>\n## 0.19.12 (2023-04-28)\n\n* Add `unicode` feature to `regex-syntax` (thanks to Jan Niehusmann!)\n\n#### Compatibility note\nThis is actually not fixing a `lalrpop` bug but fixing user side missing dependency.\n`lalrpop` doesn't directly depend on the feature. But regex from user code probably contains it.\nWe will drop this dependency again in the next release.\n\n\n<a name=\"0.19.11\"></a>\n## 0.19.11 (2023-04-28)\n\nThis release is based on 0.19.9, not 0.19.10\nNo feature added or other bug fixed since 0.19.9\n\n* Fix regex version dependency issues (thanks to Wilfried Chauveau!)\n\n<a name=\"0.19.10\"></a>\n## ~0.19.10 (2023-04-24)~\n\nNote: This version is yanked. These changes will be included in 0.20\n\nThis release fixes an incompatibility with regex.\n\n#### Features\n\n* faster compilation time by up to 2x\n* expected tokens in failed parses are more accurate\n* support for unicode when using builtin tokenizer\n\n#### Bug fixes and other changes\n\n* fix a compatibility issue with regex 1.8\n* fewer warnings about clippy/unused imports in generated code\n* updated to edition 2021\n* updated mdbook\n\n<a name=\"0.19.9\"></a>\n## 0.19.9 (2023-03-25)\n\nThis release addresses backwards compatibility warnings and security alerts, along with a few smaller features.\n\nSpecial thanks to our newest maintainers, Yann Hamdaoui and YunWon Jeong for helping to coordinate this release.\n\n#### Features\n\n* stream errors to the terminal as they are computed (thanks to Anders Kaseorg!)\n* lex raw identifiers (thanks to Karl Meakin!)\n* upgrade to the 2018 edition (thanks to blakehawkins!)\n\n#### Bug Fixes\n\n* fix bug in lane table state splitting (thanks Anders Kaseorg!)\n* fix warnings, typos, and links (thanks ggsh, Kian-Meng Ang, Ian Alexander Joiner, absurdhero, and Ömer Sinan Ağacan!)\n* fix licensing to be spdx-conformant (thanks chayleaf!)\n* fixs to the whitespace example (thanks Thalia Archibald!)\n\n#### Security patches\n\n* update `regex` to 1.5.5\n* update `thread-local` to 1.1.7\n* update to `is-terminal` from `atty` (thanks kpcyrd!)\n\n<a name=\"0.19.8\"></a>\n## 0.19.8 (2022-05-05)\n\n\n#### Features\n\n*   update petgraph to v0.6.0 ([3b482293](https://github.com/lalrpop/lalrpop/commit/3b482293a19641b2e2456ac9fa331a688d97571d))\n\n\n\n<a name=\"0.19.7\"></a>\n## 0.19.7 (2022-01-20)\n\n\n\n\n<a name=\"0.19.6\"></a>\n## 0.19.6 (2021-06-08)\n\n\n\n\n<a name=\"0.19.5\"></a>\n## 0.19.5 (2021-03-03)\n\n* Fix inlining of fallible productions\n* Update dependencies\n\n\n<a name=\"0.19.4\"></a>\n## 0.19.4 (2021-01-08)\n\n\n\n\n<a name=\"0.19.4\"></a>\n## 0.19.4 (2021-01-08)\n\n\n\n\n<a name=\"0.19.2\"></a>\n## 0.19.2 (2020-12-25)\n\n* Allow string literals in patterns #557\n* Enable precedence annotations #555\n* Shake dependency tree #559\n\n\n<a name=\"0.19.1\"></a>\n## 0.19.1 (2020-09-04)\n\n* Reduce work for LLVMs inliner\n\n\n<a name=\"0.19.0\"></a>\n## 0.19.0 (2020-05-11)\n\n\n#### Performance\n\n*   Move the symbol mismatch panic into a colder path ([0c69e999](https://github.com/lalrpop/lalrpop/commit/0c69e999a5acd3aee95c45d9c7af622f1fb81904))\n*   Avoid subtracting in goto ([8a47ed8c](https://github.com/lalrpop/lalrpop/commit/8a47ed8c7cb26511b9ae28e03e87c2a727f60ef9))\n*   Emit the GOTO table as nested matches ([c5070af2](https://github.com/lalrpop/lalrpop/commit/c5070af2eece72c1585155b51b9a1ca0c7ade9b9))\n* **parse_table:**  Avoid generating unused rows in the matrix ([688b9193](https://github.com/lalrpop/lalrpop/commit/688b91930a6473098ea92f1b08b1f47d2838f67a))\n\n#### Features\n\n*   Use FnMut/FnOnce in ParseErrors map functions ([8f73c9dc](https://github.com/lalrpop/lalrpop/commit/8f73c9dcfbbb09d8647d7a3d32aeca48e0b52c97))\n\n#### Bug Fixes\n\n*   Don't include whitespace in the span with empty nonterminals ([11a50e70](https://github.com/lalrpop/lalrpop/commit/11a50e70f781da8f4af59cbd208ece73ede1d936))\n\n\n\n<a name=\"0.18.1\"></a>\n## 0.18.1 (2020-03-04)\n\n\n#### Bug Fixes\n\n*   Remove eprintln which I thought were removed ([a9a775eb](https://github.com/lalrpop/lalrpop/commit/a9a775ebb83e3367ed10edbd5a622302d7ae71b1))\n\n\n<a name=\"0.18.0\"></a>\n## 0.18.0 (2020-03-04)\n\n\n#### Features\n\n*   Allow the tokenizer to contain custom skip regexes/literals ([ee2f7060](https://github.com/lalrpop/lalrpop/commit/ee2f7060e99f902620ac4edeea5cfe3c3551f09c))\n*   states does not need to be passed to reduce actions ([c156b4b2](https://github.com/lalrpop/lalrpop/commit/c156b4b2fd8c02e577c08e3cf4dc0415abf16d31))\n*   action does not need to be passed to reduce actions ([f69bce30](https://github.com/lalrpop/lalrpop/commit/f69bce3080bc59693f471a6f50b63c28d9ae1955))\n*   Only generate simulate_reduce if error recovery is used ([d0a3ccba](https://github.com/lalrpop/lalrpop/commit/d0a3ccbaccbe2e9306f4a4fff81c294f512d6697))\n*   Accept slices as types (#507) ([c3e1cda5](https://github.com/lalrpop/lalrpop/commit/c3e1cda5c395a297bc10304129904bc93e58c1b9), closes [#493](https://github.com/lalrpop/lalrpop/issues/493))\n\n#### Bug Fixes\n\n*   Avoid emitting redundant parentheses ([b165fc93](https://github.com/lalrpop/lalrpop/commit/b165fc939ba0d0d3e2543f6ab1f658988689c5d3), closes [#493](https://github.com/lalrpop/lalrpop/issues/493))\n\n#### Breaking changes\n\n* The `lexer` feature is now necessary when `lalrpop` generates the lexer.\n\n<a name=\"0.17.2\"></a>\n##  (2019-08-21)\n\n## Features\n\n*   Add support for <mut x:X> allowing for mutable x in action code.\n\n\n<a name=\"0.17.1\"></a>\n##  (2019-06-24)\n\n\n#### Bug Fixes\n\n*   Accept `dyn Trait` as a type ([#469](https://github.com/lalrpop/lalrpop/issues/469)) ([cba3a746](https://github.com/lalrpop/lalrpop/commit/cba3a7463c014b8444623848219532628054e9a1))\n\n\n\n<a name=\"0.17.0\"></a>\n# 0.17.0 (2019-05-06)\n\n## Fixes\n\n* The minimum Rust version has been updated to 1.32.0 to fix deprecations\n\n## Features\n\n* Split apart UnrecognizedEOF variant from UnrecognizedToken ([#446](https://github.com/lalrpop/lalrpop/issues/446))\n\n#### Style\n\n* Formatting and clippy warnings have been fixed\n\nThanks to the following contributors:\n- @ra-kete\n- @Eijebong\n- @rofrol\n- @mikeyhew\n- @jwinnie\n- @jespersm\n- @nwtwnni\n- @Songbird0\n\n<a name=\"0.16.3\"></a>\n## 0.16.3 (2019-01-20)\n\n\n#### Performance\n\n*   Avoid some memcpying in reductions ([4968e5a6](https://github.com/lalrpop/lalrpop/commit/4968e5a60822a14a190974668bcf194129358acf))\n\n#### Bug Fixes\n\n*   Allow the deprecated use of trim_left ([bdd65184](https://github.com/lalrpop/lalrpop/commit/bdd65184e539bdeca47f8bae031160f5e51b3375), closes [#428](https://github.com/lalrpop/lalrpop/issues/428))\n*   Don't make generated files read-only ([0c67bbed](https://github.com/lalrpop/lalrpop/commit/0c67bbed06cdd86da0264d21a9aa0a86ab88adad))\n\n\n\n<a name=\"0.16.2\"></a>\n# Version 0.16.2 (2018-11-22)\n\n## Fixes\n*   Fix type annotation for inline actions\n\nThanks to the following contributors:\n- @tjade273\n\n<a name=\"0.16.1\"></a>\n# Version 0.16.1 (2018-10-27)\n\n\n## Features\n\n*   Add a setting to strip indentation from the generated grammar ([9f3a978f](https://github.com/lalrpop/lalrpop/commit/9f3a978fde1a6a86c907cfbd27654032fdcb1d5c))\n*   Allow setting features from the commandline ([c8df4987](https://github.com/lalrpop/lalrpop/commit/c8df49872d50019feb6b742aa22fde8c7c94552d))\n*   Don't depend on lalrpop-snap to compile lalrpop ([3ff1b4c4](https://github.com/lalrpop/lalrpop/commit/3ff1b4c45fb853eb2dd337d7189644e515d87521))\n*   Allow setting out_dir on the command line ([9c26e517](https://github.com/lalrpop/lalrpop/commit/9c26e5177e6c910b8d51062795a245840a946d93))\n*   Let parse rules be conditionally compiled ([e6b6a07f](https://github.com/lalrpop/lalrpop/commit/e6b6a07fd694fa795c6999fcb879a331d6f04256))\n\n## Fixes\n*   Process escape sequences in string literals appearing as terminals ([0b7e1e1d](https://github.com/lalrpop/lalrpop/commit/e915302bbf75674ef22423dc5a925e5d0b7e1e1d))\n\nThanks to the following contributors:\n- @Marwes\n- @jimblandy\n\n# Version 0.16.0\nFeatures:\n- Allow attributes to be specified in larlpop_mod! (#398)\n\nFixes:\n- Don't generate reduce actions which do not fit in\nthe integer size (#399)\n- Generate files in OUT_DIR (#353)\n\nDependencies:\n- Update atty (0.2), bit-set (0.5), ena(0.9) (#374)\n- Regex to 1.0 (#375)\n\nThanks to the following contributors:\n- @Marwes\n- @KRITZCREEK\n- @asyosec\n- snsmac\n- Eijebong\n- @sanxiyn\n\n# Version 0.15.2\n\nFeatures:\n- Make semicolon after `}` in rules optional (#355)\n\nFixes:\n- Use hash to decide whether to recompile (#369)\n- Reduce the compile times of generated parse table parsers (#366)\n\nThanks to the following contributors for this release:\n- @matklad\n- @psl8\n- @Marwes\n\n# Version 0.15.1\n\nFixes:\n- Don't overflow the stack in parse table debug builds (#337)\n- Use the correct type for `!` in macro expanded productions (#335)\n- Allow lalrpop parsers to be used with include! (#338)\n- Remove dependency on docopt, rustc-serialize, update itertools  (#344, #345)\n- Correctly anchor regex at the beginning (#358)\n\nThanks to the following contributors for this release:\n- @Marwes\n- @mbrubek\n- @waywardmonkeys\n- @sanxiyn\n- @17cupsofcoffee\n- @matklad\n\n# Version 0.15\n\nFeatures:\n\n- The source and binary size of generated parsers has been reduced (#324, #306)\n- Regex compilation as part of the generated lexer can now be cached (#318)\n- The documentation is now provided as a [mbbook](http://lalrpop.github.io/lalrpop/) (#298)\n\nBugs fixed:\n\n- Fixed a stack overflow in debug builds of large grammars (#337)\n- The error terminal now gets the correct type assigned when part of macros (#335)\n- Character literals now parse correctly in the parser files (#320)\n\nCompatibility notes:\n\n- To let regex compilation be cached, each parser are now generated as a struct\n  with a `parse` method instead of just a function.\n  To upgrade, change each parse call from `parse_X(..)` to `XParser::new().parse(..)`.\n\nThanks to the following contributors for this release:\n\n- @Phlosioneer\n- @waywardmonkeys\n- @brendanzab\n- @dtkerr\n- @Marwes\n- @ahmedcharles\n- @udoprog\n\n# Version 0.14\n\nBugs fixed:\n\n- Infinite loop in error recovery fixed (#240).\n- Bad error messages if a `;` was forgotten fixed (#276).\n- Grammar errors were sometimes incorrectly reported as \"extra tokens\" (#278)\n- `extern` blocks now allowed even when not using a custom tokenizer (#261)\n- `ParseError` now implements `Display`\n- actions can now return a grammar's type parameter's associated type (#247)\n- generated files are now rebuilt when there is a new LALRPOP version (#243)\n\nCompatibility notes:\n\n- As part of making `ParseError` implement `Display`, the default\n  error type changed from `()` to `&'static str`, so parse errors type\n  may change from `lalrpop_util::ParseError<..., ()>` to\n  `lalrpop_util::ParseError<..., &'static str>`.\n\nThanks to the following contributors for this release:\n\n- @fitzgen\n- @joerivanruth\n- @pyfisch\n- @nick70\n- @notriddle\n- @vmx\n\n# Version 0.13.1\n\n- We now support `#![..]` attributes in `.lalrpop` files.\n- We now use lane table by default: since the lane table algorithm\n  automatically generates compressed tables where possible, the\n  `#[LALR]` attribute is still accepted, but has no effect.\n  - If you encounter problems, please report bugs! In the meantime,\n    though, you can use the `LALRPOP_LANE_TABLE=disabled` environment\n    variable to change back.\n- When the `<>` string is found within `{}` inside of an action, it\n  now generates a series of `x: x` pairs for each named value `x`.\n  This is useful for struct constants, since you can do something\n  like: `<a:Foo> <b:Bar> => MyStruct { <> }`, if `MyStruct` had two\n  fields named `a` and `b`.\n- We now support character literal patterns in the external tokenizer pattern syntax.\n- The lalrpop executable now supports `--version`.\n- We are (for now, at least) testing for compatibility with Rust 1.13.\n  This minimal supported rustc version may change in the future,\n  however.\n- Misc bug fixes.\n\nThanks to the following contributors for this release:\n\n- @jchlapinski\n- @minijackson\n- @nikomatsakis\n- @ravenexp\n- @ruuda\n- @wieczyk\n- @withoutboats\n\n# Version 0.13\n\nThis is a bug release for LALRPOP. First, we have two major improvements to the\ngenerated lexer:\n\n- The lexer now generates code that uses the `regex` crate. This\n  results in **far** less code than the older style, and seems to\n  preserve performance.\n- The lexer now supports custom priorities for regular expression tokens,\n  making it possible to support case-insensitive keywords.\n  - See the [calculator2b example] for details.\n\nSecond, we have a **beta release** of the new lane-table based\nLR-table generation.  Lane tables handle the full set of LR(1)\ngrammars but typically reduce **much** smaller state tables. This\nfeature eliminates the need to manually mark grammars as `#[LALR]`.\nLane tables are **not** on by default; you can enable them by setting\n`LALRPOP_LANE_TABLE=enabled` in your environment (use\n`std::env::set_var` in your `build.rs`).\n\n[calculator2b example]: https://github.com/nikomatsakis/lalrpop/blob/master/doc/tutorial.md#calculator2b\n\nFinally, the `lalrpop` executable now has the ability to generate\nstandalone reports (`--report`).\n\nFixed bugs:\n\n- Fix #157: We now recognize single quote (`'`) properly in our tokenizer.\n- Fix #179: Fix bug in recursive ascent code generation.\n\nThanks to the following contributors to this release:\n\n- @ahmedcharles\n- @king6cong\n- @nikomatsakis\n- @nixpulvis\n- @wagenet\n- @wieczyk\n\n# Version 0.12.5\n\n- Add the expected successor tokens to `UnrecognizedToken` errors ([thanks @Marwes!](https://github.com/nikomatsakis/lalrpop/pull/178)).\n- Fix to error recovery doing a bad cast ([thanks @Marwes!](https://github.com/nikomatsakis/lalrpop/pull/182)).\n\n# Version 0.12.4\n\nMajor new feature! @Marwes\n[added support for error recovery](https://github.com/nikomatsakis/lalrpop/pull/160).\n\nThere have also been a number of other improvements:\n\n- The `ParseError` type now implements `Error` and `Display` ([thanks @Marwes!](https://github.com/nikomatsakis/lalrpop/pull/167)).\n- We no longer emit comments in generated code by default ([thanks @Marwes!](https://github.com/nikomatsakis/lalrpop/pull/165)).\n\n# Versions 0.12.2, 0.12.3\n\n(Yanked due to minor backwards incompatibility.)\n\n# Version 0.12.1\n\nBug fix release. Major bugs addressed:\n\n- [\"LR1 TLS not installed\"](https://github.com/nikomatsakis/lalrpop/issues/145);\n- [False conflicts in the LR(1) code generator](https://github.com/nikomatsakis/lalrpop/issues/144).\n\nAlso, there is now a tutorial for writing custom lexers.\n[Thanks @malleusinferni!](https://github.com/nikomatsakis/lalrpop/pull/131).\n\n# Version 0.12\n\n**Enabled a new table-driven code-generator by default.** This generates\nless code than the older recursive-ascent-based generation scheme, but\nmay parse less efficiently. To go back to the old scheme, annotate\nthe grammar declaration:\n\n```\n#[recursive_ascent] grammar;\n```\n\nAlso, **the syntax for requesting LALR-generation has changed** to use\nan annotation:\n\n```\n#[LALR] grammar;\n```\n\nWe no longer **emit module-level attributes**, which means that unused\nimports in your .lalrpop file may start getting warnings. [Thanks\n@dflemstr!](https://github.com/nikomatsakis/lalrpop/pull/118)\n\nAn overflow bug in LALRPOP was\nfixed. [Thanks @larsluthman!](https://github.com/nikomatsakis/lalrpop/pull/120)\n\nWe no longer depend on `time`, but now use\n`std::time`. [Thanks @serprex!](https://github.com/nikomatsakis/lalrpop/pull/121)\n\nThere is now a `Configuration` object for use in your `build.rs`\nscripts.  And,\n[thanks to @dflemstr!](https://github.com/nikomatsakis/lalrpop/pull/108),\nit permits you to configure the directory where LALRPOP output is\ngenerated.\n\nFixed a bug in the LALRPOP option\nparsing. [Thanks @Nemikolh!](https://github.com/nikomatsakis/lalrpop/pull/106)\n\nVarious typos and small corrections. Thanks [@reuben](https://github.com/nikomatsakis/lalrpop/pull/1103) and [@ashleygwilliams](https://github.com/nikomatsakis/lalrpop/pull/116)!\n\n# Version 0.11\n\nUpdated to use the `regex-syntax` crate for regular expression\nparsing instead of rolling our own parser. This means we can now\nsupport the [same regular expression syntax as the regex crate](https://doc.rust-lang.org/regex/regex/index.html#syntax),\nand in particular can support unicode character classes like `\\p{Greek}`.\nNote that some regex features -- such as non-greedy repetition and\nnamed capture groups -- are still not supported (or just not meaningful).\n\nOptimized LR(1) construction time by approximately 5x.\n\nImproved handling of location tokens `@L` and `@R` so that they can be\nfreely used without ever causing parse conflicts.\n\n# Version 0.10\n\nMajor update to LALRPOP error messages in cases of shift/reduce and\nreduce/reduce conflicts. The messages now try to explain the problem\nin terms of your grammar, as well as diagnosing common problem\nscenarios and suggesting solutions.\n\nAdded a standalone LALRPOP executable.\n\nWe no longer generate incomplete files when grammar generation fails\n(Issue #57).\n\n# Version 0.9\n\nMiscellaneous bug fixes, mostly. Processing for a `build.rs` file now\nstarts from the project directory, rather than being hardcoded to\nstart from `src`.\n\n# Version 0.8\n\nAdd support for inlining nonterminals. Nonterminals can now be\nannotated with `#[inline]`. If you do so, each use of the nonterminal\nwill be inlined into its place. This can be very helpful in addressing\nshift-reduce or reduce-reduce conflicts, at the cost of a larger\ngrammar. We now inline `Foo*`, `Foo?`, and `(Foo Bar)` nonterminals by\ndefault.\n\n# Version 0.7\n\nThis is mostly a bug-fix release.\n\nVarious minor issues were addressed:\n\n- Issue #25: Unbalanced parens in string literals appearing in code now work properly.\n- Issue #32: Regular expression parsing consumed infinite memory when a `.` appeared.\n- Issue #34: Automatic tokenizer generation did not play well with generic type parameters.\n\n# Older versions\n\nI hadn't yet started writing release notes, sorry.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lalrpop-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "lalrpop-util",
          "type": "tree",
          "content": null
        },
        {
          "name": "lalrpop",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_lrgrammar.sh",
          "type": "blob",
          "size": 0.1875,
          "content": "#!/bin/sh\n\ncp -f lalrpop/src/parser/lrgrammar.rs lalrpop/src/parser/lrgrammar.rs.bak\ncargo run -p lalrpop -- --force --no-whitespace --out-dir . lalrpop/src/parser/lrgrammar.lalrpop || exit 1\n"
        },
        {
          "name": "version.sh",
          "type": "blob",
          "size": 1.5302734375,
          "content": "#!/usr/bin/env bash\n#\n# A script to bump the version number on all Cargo.toml files etc in\n# an atomic fashion.\n\nset -e -o pipefail\n\nif [ \"$1\" == \"\" ]; then\n    echo \"Usage: version.sh <new-version-number>\"\n    exit 1\nfi\n\nVERSION=$(\n    ls Cargo.toml lalrpop*/Cargo.toml | \\\n        xargs grep \"# LALRPOP\" | \\\n        perl -p -e 's/.*version = \"([0-9.]+)\" # LALRPOP/$1/' |\n        sort |\n        uniq)\n\nif [ $(echo $VERSION | wc -w) != 1 ]; then\n    echo \"Error: inconsistent versions detected across Cargo.toml files!\"\n    echo \"$VERSION\"\n    exit 1\nfi\n\necho \"Found consistent version $VERSION\"\n\nclog --setversion $1\n\nperl -p -i -e 's/lalrpop(.*)= *\"'$VERSION'\"/lalrpop\\1= \"'$1'\"/' \\\n     $(ls Cargo.toml lalrpop*/Cargo.toml) \\\n     doc/src/quick_start_guide.md doc/src/tutorial/001_adding_lalrpop.md\n\nperl -p -i -e 's/version *= *\"'$VERSION'\" *# LALRPOP/version = \"'$1'\" # LALRPOP\"/' \\\n     $(ls Cargo.toml lalrpop*/Cargo.toml) \\\n     doc/src/quick_start_guide.md doc/src/tutorial/001_adding_lalrpop.md\n\n# Leave in special handling for the docs, because this case is a little weird\n# in that we're finding everything with the previous version number and\n# updating it, which may in theory include things that aren't lalrpop.  We\n# don't really want to use the \"# LALRPOP\" taggging solution used elsewhere\n# because this is examples for people to read and copy, so we just accept that\n# bug here, but don't spread it to the rest of the code base\nperl -p -i -e 's/version *= *\"'$VERSION'\"/version = \"'$1'\"/' \\\n     $(find doc -name Cargo.toml)\n\n./update_lrgrammar.sh\n"
        }
      ]
    }
  ]
}