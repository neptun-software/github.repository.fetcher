{
  "metadata": {
    "timestamp": 1736709262806,
    "page": 599,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-cli/human-panic",
      "stars": 1717,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clippy.toml",
          "type": "blob",
          "size": 0.7392578125,
          "content": "allow-print-in-tests = true\nallow-expect-in-tests = true\nallow-unwrap-in-tests = true\nallow-dbg-in-tests = true\ndisallowed-methods = [\n    { path = \"std::option::Option::map_or\", reason = \"prefer `map(..).unwrap_or(..)` for legibility\" },\n    { path = \"std::option::Option::map_or_else\", reason = \"prefer `map(..).unwrap_or_else(..)` for legibility\" },\n    { path = \"std::result::Result::map_or\", reason = \"prefer `map(..).unwrap_or(..)` for legibility\" },\n    { path = \"std::result::Result::map_or_else\", reason = \"prefer `map(..).unwrap_or_else(..)` for legibility\" },\n    { path = \"std::iter::Iterator::for_each\", reason = \"prefer `for` for side-effects\" },\n    { path = \"std::iter::Iterator::try_for_each\", reason = \"prefer `for` for side-effects\" },\n]\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "target\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.6025390625,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n    - id: check-yaml\n      stages: [commit]\n    - id: check-json\n      stages: [commit]\n    - id: check-toml\n      stages: [commit]\n    - id: check-merge-conflict\n      stages: [commit]\n    - id: check-case-conflict\n      stages: [commit]\n    - id: detect-private-key\n      stages: [commit]\n  - repo: https://github.com/crate-ci/typos\n    rev: v1.16.20\n    hooks:\n    - id: typos\n      stages: [commit]\n  - repo: https://github.com/crate-ci/committed\n    rev: v1.0.20\n    hooks:\n    - id: committed\n      stages: [commit-msg]\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.0712890625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/)\nand this project adheres to [Semantic Versioning](http://semver.org/).\n\n<!-- next-header -->\n## [Unreleased] - ReleaseDate\n\n## [2.0.2] - 2024-10-10\n\n### Fixes\n\n- Improve detection of what can be trimmed from backtrace\n\n## [2.0.1] - 2024-07-25\n\n### Compatibility\n\n- Update MSV to 1.74\n\n## [2.0.0] - 2024-04-17\n\n### Compatibility\n\n- Update MSV to 1.73\n- `PanicStyle` is now non-exhaustive\n- `Method` is now non-exhaustive\n- `Metadata`s fields are now private, requiring setters\n\n### Features\n\n- Add `Metadata::support` for where to send reports\n\n## [1.2.3] - 2024-01-12\n\n### Internal\n\n- Update anstream\n\n## [1.2.2] - 2023-11-06\n\n### Performance\n\n- Improve build times by only pullin in `toml` rendering, not parsing\n\n## [1.2.1] - 2023-09-28\n\n### Internal\n\n- Update anstream\n\n## [1.2.0] - 2023-08-24\n\n### Compatibility\n\n- Update MSV to 1.70.0\n\n### Performance\n\n- Improve build times by dropping `is-terminal` dependency\n\n## [1.1.5] - 2023-06-13\n\n### Fixes\n\n- Avoid symbol conflicts from macros\n\n## [1.1.4] - 2023-04-13\n\n### Internal\n\n- Dependency update\n\n## [1.1.3] - 2023-03-16\n\n### Internal\n\n- Dependency update\n\n## [1.1.2] - 2023-03-14\n\n### Compatibility\n\n- Update MSRV to 1.64.0\n\n### Fixes\n\n- Correctly handle `CLICOLOR=1`\n- Correctly handle `NO_COLOR=`\n- Auto-enable color for CI\n- Update a macro to use `$crate`\n\n## [1.1.1] - 2023-02-28\n\n### Internal\n\n- Update dependencies\n\n## [1.1.0] - 2023-02-01\n\n### Features\n\n- Expose `metadata!` constructor\n- Expose `PanicStyle::default()` for knowing which handler to use::\n\n### Fixes\n\n- Detect when color can be used\n- Make color optional (opt-out)\n\n## [v1.0.3]\n\n### Features\n\n- *(nightly)* Include original panic\n\n### Fixes\n\n- Use normal panics when `RUST_BACKTRACE` is enabled\n- Skip unnecessary frames in backtrace\n\n## 2018-04-18, Version 0.3.0\n\n### Commits\n- [[`650df0bf4d`](https://github.com/rust-cli/human-panic/commits/650df0bf4de62239e9592b2185ebbd4875640864)] (cargo-release) version 0.3.0 (Yoshua Wuyts)\n- [[`a3ec0ddb97`](https://github.com/rust-cli/human-panic/commits/a3ec0ddb97eb5940ab56785eb54eed52ead3a82b)] Fixing wrong data in certain crash dump fields (#15)\n\nFixing a bug in the log dumps\n\n* Carrying over metadata from first macro call to properly\ninclude metadata in crash dumps.\n* Making Method derive Copy (Katharina)\n- [[`ed11055e06`](https://github.com/rust-cli/human-panic/commits/ed11055e0602c3c8d223ed8354058fefb9ac47ec)] Merge pull request #16 from killercup/docs\n\nEnsure no docs are missing (Pascal Hertleif)\n- [[`4540d77276`](https://github.com/rust-cli/human-panic/commits/4540d77276eafbfb57c922f57f1aa04cd5cb1cd5)] Fix typos (#14)\n\n* Correct typo embarrassing\n* Fix typos (Andy Slack)\n- [[`9e972ef654`](https://github.com/rust-cli/human-panic/commits/9e972ef654df70047f73df51befa3ba2bcb2e5c5)] Ensure no docs are missing (Pascal Hertleif)\n- [[`b82ac5c35a`](https://github.com/rust-cli/human-panic/commits/b82ac5c35a9e5772a54033a084d1cc784ffd6510)] Merge pull request #11 from skade/update-readme\n\nUpdate README with current interfac (Pascal Hertleif)\n- [[`21c5417580`](https://github.com/rust-cli/human-panic/commits/21c5417580e6bf4cbe330715b5cc4ae39e4f5d8e)] Update README with current interface (Florian Gilcher)\n- [[`d86232967d`](https://github.com/rust-cli/human-panic/commits/d86232967d3bf9dc868a4cd68bab2e1004b6d2dc)] Merge pull request #10 from killercup/rollup\n\nRollup (Pascal Hertleif)\n- [[`80046e1488`](https://github.com/rust-cli/human-panic/commits/80046e148860e0bcde3d5a8e9c1a56bf5f32a37c)] Use more generic way to get a Path (Pascal Hertleif)\n- [[`dc05d332a0`](https://github.com/rust-cli/human-panic/commits/dc05d332a0527812fc239f4622289fb593aac936)] Merge skade-join-properly into rollup (Pascal Hertleif)\n- [[`2e0127c830`](https://github.com/rust-cli/human-panic/commits/2e0127c8303d7ea5c46e9aacf83e2fa0fdbbbd83)] Merge yoshuawuyts-fix-example into rollup (Pascal Hertleif)\n- [[`fc16cb8ac2`](https://github.com/rust-cli/human-panic/commits/fc16cb8ac2b692450d689d5650fe82405f35f492)] Update Cargo.lock (Pascal Hertleif)\n- [[`e53059ff3c`](https://github.com/rust-cli/human-panic/commits/e53059ff3cc5e36bee7dc6e29a6605881122aac3)] rustfmt (Pascal Hertleif)\n- [[`a51285bb10`](https://github.com/rust-cli/human-panic/commits/a51285bb1044c0ef6e5a8c94f5149549315eef53)] Properly handle file paths using Path and PathBuf (Florian Gilcher)\n- [[`82ebdccb5a`](https://github.com/rust-cli/human-panic/commits/82ebdccb5a22baf369b12c888af7a0b9cd1d0ee8)] make clippy pass for real this time (Yoshua Wuyts)\n- [[`2297066f50`](https://github.com/rust-cli/human-panic/commits/2297066f504f98a62c1ddde357aad81a0ed147e4)] please clippy (Yoshua Wuyts)\n- [[`b1ec2b5b7b`](https://github.com/rust-cli/human-panic/commits/b1ec2b5b7bb5b679ed8287712272f1a7ba3387c8)] fix examples (Yoshua Wuyts)\n- [[`369ca4e526`](https://github.com/rust-cli/human-panic/commits/369ca4e526b911b8455e1759e7609edf1a606e34)] Bumpding version, adding author (Katharina)\n- [[`31e1d9ada2`](https://github.com/rust-cli/human-panic/commits/31e1d9ada2b3e0563cac37d32ec952552e129281)] Cleaning up warnings for the big rebase (Katharina Sabel)\n- [[`3ffa055d57`](https://github.com/rust-cli/human-panic/commits/3ffa055d576c8e572ddcde2744d5aef514b11fa5)] Attempting to fix the `err` example using the failures crate (Katharina Sabel)\n- [[`5214754bc0`](https://github.com/rust-cli/human-panic/commits/5214754bc093a389a7d44c5fd1e9d6d38df1ea86)] Adding a bit of padding in the log (Katharina Sabel)\n- [[`031b2b846b`](https://github.com/rust-cli/human-panic/commits/031b2b846b73e6fefa783ffee83c9c5ef6464c3a)] Merging advanced report functionality. (Katharina Sabel)\n- [[`7a2e923075`](https://github.com/rust-cli/human-panic/commits/7a2e9230751abd3a152d3240a8b4c75891ae8e41)] Merging #4 by yoshuawuyts\n\nThis commit adds the ability to generate reports based on an application\ncrash. It hooks into the existing panic handler and also exposes\nthe report generation feature via a `pub fn` (Katharina Sabel)\n- [[`7dc354b88e`](https://github.com/rust-cli/human-panic/commits/7dc354b88e0fc0cfc9f10e6477444f6b73d0afb3)] Preparing for cherrypick (Katharina Sabel)\n- [[`5002578d8f`](https://github.com/rust-cli/human-panic/commits/5002578d8f5b495d4f37fb68510dd5e5fa624cc6)] Cleaning up merge artefact (Katharina Sabel)\n- [[`bd4526a315`](https://github.com/rust-cli/human-panic/commits/bd4526a3156aacce08ffce4fbd2339a2bcb2cf84)] Changing the core functionality of the crate\n\nInstead of having to wrap around every panic, this now uses `set_hook` once\nto register the callback to print a pretty status message. This also has the\nadded benefit of pulling in env! calls because the main setup was made\ninto a macro.\n\nOptionally the two core functions (print_help and dump_log) can now also be used\nwithout the core macro, because they are `pub fn` (Katharina Sabel)\n- Stable and slim (#1)\n\n* Make it compile on stable\n\nAlso adds a nightly feature flag that will automatically be picked up by\ndocs.rs to build nice docs.\n\n* Make clippy a CI-only dependency\n\nYou can run `cargo clippy` locally to get the same effect. I've also\ntaken the liberty to nail down the rustfmt version to use, so we can\nupdate it explicitly. (This is the same CI setup that assert_cli uses.)\n\n* Get rid of all dependencies for now\n\nImproves compile times :trollface:\n\n* Use termcolor for colored output\n\nThis should make it compatible with windows consoles.\n\n* Set up some kind of error handling for the hook\n\n* rustfmt\n\n* Bump clippy\n\nand choose a nightly that actually exists.\n\n* Make clippy happy (Pascal Hertleif)\n- [[`c04ae22d1e`](https://github.com/rust-cli/human-panic/commits/c04ae22d1ef3289d028f9ff5aaefd8a44b5c293c)] update readme output (Yoshua Wuyts)\n- [[`4a35c860fd`](https://github.com/rust-cli/human-panic/commits/4a35c860fd00835a36184be8068d777d4fa02519)] upgrade desc (Yoshua Wuyts)\n- [[`ccaf3bce86`](https://github.com/rust-cli/human-panic/commits/ccaf3bce8666879c89ce0222f7f8d1f306bde074)] init (Yoshua Wuyts)\n- [[`a7135d1e8c`](https://github.com/rust-cli/human-panic/commits/a7135d1e8c87409e3f553a761e2b2caa24d849c9)] catch (Yoshua Wuyts)\n- [[`0129328ce4`](https://github.com/rust-cli/human-panic/commits/0129328ce4472190366ac7835aed003d68aeb088)] . (Yoshua Wuyts)\n\n### Stats\n```diff\n .editorconfig                           |  25 +--\n .gitignore                              |   3 +-\n .travis.yml                             |   8 +-\n Cargo.lock                              | 391 +++++++++++++++++++++++++++++++++-\n Cargo.toml                              |  11 +-\n README.md                               |  51 +----\n examples/panic.rs                       |   9 +-\n src/lib.rs                              | 130 ++---------\n src/report.rs                           |  22 +--\n tests/custom-panic/Cargo.toml           |  10 +-\n tests/custom-panic/src/main.rs          |  14 +-\n tests/custom-panic/tests/integration.rs |  16 +-\n tests/single-panic/Cargo.toml           |  10 +-\n tests/single-panic/src/main.rs          |   9 +-\n tests/single-panic/tests/integration.rs |  14 +-\n 15 files changed, 442 insertions(+), 281 deletions(-)\n```\n\n<!-- next-url -->\n[Unreleased]: https://github.com/rust-cli/human-panic/compare/v2.0.2...HEAD\n[2.0.2]: https://github.com/rust-cli/human-panic/compare/v2.0.1...v2.0.2\n[2.0.1]: https://github.com/rust-cli/human-panic/compare/v2.0.0...v2.0.1\n[2.0.0]: https://github.com/rust-cli/human-panic/compare/v1.2.3...v2.0.0\n[1.2.3]: https://github.com/rust-cli/human-panic/compare/v1.2.2...v1.2.3\n[1.2.2]: https://github.com/rust-cli/human-panic/compare/v1.2.1...v1.2.2\n[1.2.1]: https://github.com/rust-cli/human-panic/compare/v1.2.0...v1.2.1\n[1.2.0]: https://github.com/rust-cli/human-panic/compare/v1.1.5...v1.2.0\n[1.1.5]: https://github.com/rust-cli/human-panic/compare/v1.1.4...v1.1.5\n[1.1.4]: https://github.com/rust-cli/human-panic/compare/v1.1.3...v1.1.4\n[1.1.3]: https://github.com/rust-cli/human-panic/compare/v1.1.2...v1.1.3\n[1.1.2]: https://github.com/rust-cli/human-panic/compare/v1.1.1...v1.1.2\n[1.1.1]: https://github.com/rust-cli/human-panic/compare/v1.1.0...v1.1.1\n[1.1.0]: https://github.com/rust-cli/argfile/compare/v1.0.3...v1.1.0\n[v1.0.3]: https://github.com/rust-cli/argfile/compare/1.0.1...v1.0.3\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.591796875,
          "content": "# Contributing to human-panic\n\nThanks for wanting to contribute! There are many ways to contribute and we\nappreciate any level you're willing to do.\n\n## Feature Requests\n\nNeed some new functionality to help?  You can let us know by opening an\n[issue][new issue]. It's helpful to look through [all issues][all issues] in\ncase its already being talked about.\n\n## Bug Reports\n\nPlease let us know about what problems you run into, whether in behavior or\nergonomics of API.  You can do this by opening an [issue][new issue]. It's\nhelpful to look through [all issues][all issues] in case its already being\ntalked about.\n\n## Pull Requests\n\nLooking for an idea? Check our [issues][issues]. If it's look more open ended,\nit is probably best to post on the issue how you are thinking of resolving the\nissue so you can get feedback early in the process. We want you to be\nsuccessful and it can be discouraging to find out a lot of re-work is needed.\n\nAlready have an idea?  It might be good to first [create an issue][new issue]\nto propose it so we can make sure we are aligned and lower the risk of having\nto re-work some of it and the discouragement that goes along with that.\n\n### Process\n\nAs a heads up, we'll be running your PR through the following gauntlet:\n- warnings turned to compile errors\n- `cargo test`\n- `rustfmt`\n- `clippy`\n- `rustdoc`\n- [`committed`](https://github.com/crate-ci/committed) as we use [Conventional](https://www.conventionalcommits.org) commit style\n- [`typos`](https://github.com/crate-ci/typos) to check spelling\n\nNot everything can be checked automatically though.\n\nWe request that the commit history gets cleaned up.\nWe ask that commits are atomic, meaning they are complete and have a single responsibility.\nPRs should tell a cohesive story, with test and refactor commits that keep the\nfix or feature commits simple and clear.\n\nSpecifically, we would encourage\n- File renames be isolated into their own commit\n- Add tests in a commit before their feature or fix, showing the current behavior.\n  The diff for the feature/fix commit will then show how the behavior changed,\n  making it clearer to reviewrs and the community and showing people that the\n  test is verifying the expected state.\n  - e.g. [clap#5520](https://github.com/clap-rs/clap/pull/5520)\n\nNote that we are talking about ideals.\nWe understand having a clean history requires more advanced git skills;\nfeel free to ask us for help!\nWe might even suggest where it would work to be lax.\nWe also understand that editing some early commits may cause a lot of churn\nwith merge conflicts which can make it not worth editing all of the history.\n\nFor code organization, we recommend\n- Grouping `impl` blocks next to their type (or trait)\n- Grouping private items after the `pub` item that uses them.\n  - The intent is to help people quickly find the \"relevant\" details, allowing them to \"dig deeper\" as needed.  Or put another way, the `pub` items serve as a table-of-contents.\n  - The exact order is fuzzy; do what makes sense\n\n## Releasing\n\nPre-requisites\n- Running `cargo login`\n- A member of `rust-cli:Maintainers`\n- Push permission to the repo\n- [`cargo-release`](https://github.com/crate-ci/cargo-release/)\n\nWhen we're ready to release, a project owner should do the following\n1. Update the changelog (see `cargo release changes` for ideas)\n2. Determine what the next version is, according to semver\n3. Run [`cargo release -x <level>`](https://github.com/crate-ci/cargo-release)\n\n[issues]: https://github.com/rust-cli/human-panic/issues\n[new issue]: https://github.com/rust-cli/human-panic/issues/new\n[all issues]: https://github.com/rust-cli/human-panic/issues?utf8=%E2%9C%93&q=is%3Aissue\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 18.705078125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd2405b3ac1faab2990b74d728624cd9fd115651fcecc7c2d8daf01376275ba\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"317b9a89c1868f5ea6ff1d9539a69f45dffc21ce321ac1fd1160dfa48c8e2140\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b\"\ndependencies = [\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0699d10d2f4d628a98ee7b57b289abbc98ff3bad977cb3152709d4bf2330628\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"content_inspector\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7bda66e858c683005a53a9a60c69a4aca7eeaa45d124526e389f7aec8e62f38\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"custom-panic-test\"\nversion = \"0.1.0\"\ndependencies = [\n \"human-panic\",\n \"snapbox\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe9006bed769170c11f845cf00c7c1e9092aeb3f268e007c3e760ac68008070f\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fb8d784f27acf97159b40fc4db5ecd8aa23b9ad5ef69cdd136d3bc80665f0c0\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93e7192158dbcda357bdec5fb5788eebf8bbac027f3f33e719d29135ae84156\"\n\n[[package]]\nname = \"human-panic\"\nversion = \"2.0.2\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"backtrace\",\n \"os_info\",\n \"serde\",\n \"serde_derive\",\n \"toml\",\n \"uuid\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.150\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89d92a4743f9a61002fae18374ed11e7973f530cb3a3255fb354818118b2203c\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall 0.5.7\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"object\"\nversion = \"0.32.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cf5f9dd3933bd50a9e1f149ec995f39ae2c496d31fd772c1fd45ebc27e902b0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"os_info\"\nversion = \"3.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"006e42d5b888366f1880eda20371fedde764ed2213dc8496f49622fa0c99cd5e\"\ndependencies = [\n \"log\",\n \"serde\",\n \"winapi\",\n]\n\n[[package]]\nname = \"os_pipe\"\nversion = \"1.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ae859aa07428ca9a929b936690f8b12dc5f11dd8c6992a18ca93919f28bc177\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"134c189feb4956b20f6f547d2cf727d4c0fe06722b20a0eec87ed445a97f92da\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72e572a5e8ca657d7366229cdde4bd14c4eb5499a9573d4d366fe1b599daa316\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bca2a08484b285dcb282d0f67b26cadc0df8b19f8c12502c13d966bf9482f001\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6c7207fbec9faa48073f3e3074cbe553af6ea512d7c21ba46e434e70ea9fbc1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12022b835073e5b11e90a14f86838ceb1c8fb0325b72416845c487ac0fa95e80\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2aeaf503862c419d66959f5d7ca015337d864e9c49485d771b732e2a20453597\"\n\n[[package]]\nname = \"single-panic-test\"\nversion = \"0.1.0\"\ndependencies = [\n \"human-panic\",\n \"snapbox\",\n]\n\n[[package]]\nname = \"snapbox\"\nversion = \"0.6.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96dcfc4581e3355d70ac2ee14cfdf81dce3d85c85f1ed9e2c1d3013f53b3436b\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"content_inspector\",\n \"dunce\",\n \"filetime\",\n \"libc\",\n \"normalize-line-endings\",\n \"os_pipe\",\n \"similar\",\n \"snapbox-macros\",\n \"tempfile\",\n \"wait-timeout\",\n \"walkdir\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"snapbox-macros\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16569f53ca23a41bb6f62e0a5084aa1661f4814a67fa33696a79073e03a664af\"\ndependencies = [\n \"anstream\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23e78b90f2fcf45d3e842032ce32e3f2d1545ba6636271dcbf24fa306d87be7a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"redox_syscall 0.4.1\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1a195ec8c9da26928f773888e0742ca3ca1040c6cd859c919c9f59c1954ab35\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d34d383cd00a163b4a5b85053df514d45bc330f6de7737edfe0a93311d1eaa03\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ad59a7560b41a70d191093a945f0b87bc1deeda46fb237479708a1d6b6cdfc\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.7216796875,
          "content": "[workspace]\nmembers = [\n  \"tests/single-panic\",\n  \"tests/custom-panic\",\n]\nresolver = \"2\"\n\n[workspace.package]\nrepository = \"https://github.com/rust-cli/human-panic\"\nlicense = \"MIT OR Apache-2.0\"\nedition = \"2021\"\nrust-version = \"1.74\"  # MSRV\ninclude = [\n  \"build.rs\",\n  \"src/**/*\",\n  \"Cargo.toml\",\n  \"Cargo.lock\",\n  \"LICENSE*\",\n  \"README.md\",\n  \"benches/**/*\",\n  \"examples/**/*\"\n]\n\n[workspace.lints.rust]\nrust_2018_idioms = { level = \"warn\", priority = -1 }\nunreachable_pub = \"warn\"\nunsafe_op_in_unsafe_fn = \"warn\"\nunused_lifetimes = \"warn\"\nunused_macro_rules = \"warn\"\nunused_qualifications = \"warn\"\n\n[workspace.lints.clippy]\nbool_assert_comparison = \"allow\"\nbranches_sharing_code = \"allow\"\nchecked_conversions = \"warn\"\ncollapsible_else_if = \"allow\"\ncreate_dir = \"warn\"\ndbg_macro = \"warn\"\ndebug_assert_with_mut_call = \"warn\"\ndoc_markdown = \"warn\"\nempty_enum = \"warn\"\nenum_glob_use = \"warn\"\nexpl_impl_clone_on_copy = \"warn\"\nexplicit_deref_methods = \"warn\"\nexplicit_into_iter_loop = \"warn\"\nfallible_impl_from = \"warn\"\nfilter_map_next = \"warn\"\nflat_map_option = \"warn\"\nfloat_cmp_const = \"warn\"\nfn_params_excessive_bools = \"warn\"\nfrom_iter_instead_of_collect = \"warn\"\nif_same_then_else = \"allow\"\nimplicit_clone = \"warn\"\nimprecise_flops = \"warn\"\ninconsistent_struct_constructor = \"warn\"\ninefficient_to_string = \"warn\"\ninfinite_loop = \"warn\"\ninvalid_upcast_comparisons = \"warn\"\nlarge_digit_groups = \"warn\"\nlarge_stack_arrays = \"warn\"\nlarge_types_passed_by_value = \"warn\"\nlet_and_return = \"allow\"  # sometimes good to name what you are returning\nlinkedlist = \"warn\"\nlossy_float_literal = \"warn\"\nmacro_use_imports = \"warn\"\nmem_forget = \"warn\"\nmutex_integer = \"warn\"\nneedless_continue = \"warn\"\nneedless_for_each = \"warn\"\nnegative_feature_names = \"warn\"\npath_buf_push_overwrite = \"warn\"\nptr_as_ptr = \"warn\"\nrc_mutex = \"warn\"\nredundant_feature_names = \"warn\"\nref_option_ref = \"warn\"\nrest_pat_in_fully_bound_structs = \"warn\"\nsame_functions_in_if_condition = \"warn\"\nself_named_module_files = \"warn\"\nsemicolon_if_nothing_returned = \"warn\"\nstr_to_string = \"warn\"\nstring_add = \"warn\"\nstring_add_assign = \"warn\"\nstring_lit_as_bytes = \"warn\"\nstring_to_string = \"warn\"\ntodo = \"warn\"\ntrait_duplication_in_bounds = \"warn\"\nuninlined_format_args = \"warn\"\nverbose_file_reads = \"warn\"\nwildcard_imports = \"warn\"\nzero_sized_map_values = \"warn\"\n\n[package]\nname = \"human-panic\"\nversion = \"2.0.2\"\ndescription = \"Panic messages for humans\"\nhomepage = \"https://github.com/rust-cli/human-panic\"\ncategories = [\"command-line-interface\"]\nkeywords = [\"cli\", \"panic\"]\nrepository.workspace = true\nlicense.workspace = true\nedition.workspace = true\nrust-version.workspace = true\ninclude.workspace = true\n\n[package.metadata.docs.rs]\nall-features = true\nrustdoc-args = [\"--cfg\", \"docsrs\"]\n\n[package.metadata.release]\npre-release-replacements = [\n  {file=\"CHANGELOG.md\", search=\"Unreleased\", replace=\"{{version}}\", min=1},\n  {file=\"CHANGELOG.md\", search=\"\\\\.\\\\.\\\\.HEAD\", replace=\"...{{tag_name}}\", exactly=1},\n  {file=\"CHANGELOG.md\", search=\"ReleaseDate\", replace=\"{{date}}\", min=1},\n  {file=\"CHANGELOG.md\", search=\"<!-- next-header -->\", replace=\"<!-- next-header -->\\n## [Unreleased] - ReleaseDate\\n\", exactly=1},\n  {file=\"CHANGELOG.md\", search=\"<!-- next-url -->\", replace=\"<!-- next-url -->\\n[Unreleased]: https://github.com/rust-cli/human-panic/compare/{{tag_name}}...HEAD\", exactly=1},\n]\n\n[features]\ndefault = [\"color\"]\nnightly = []\ncolor = [\"dep:anstyle\", \"dep:anstream\"]\n\n[dependencies]\nanstyle = { version = \"1.0.0\", optional = true }\nanstream = { version = \"0.6.7\", optional = true }\nuuid = { version = \"1.3.0\", features = [\"v4\"], default-features = false }\nserde_derive = \"1.0.152\"\ntoml = { version = \"0.8.8\", default-features = false, features = [\"display\"] }\nserde = \"1.0.152\"\nos_info = \"3.6.0\"\nbacktrace = \"0.3.69\"\n\n[lints]\nworkspace = true\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.037109375,
          "content": "Copyright (c) Individual contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4833984375,
          "content": "# human-panic\n[![crates.io version][1]][2] [![build status][3]][4]\n[![downloads][5]][6] [![docs.rs docs][7]][8]\n\nPanic messages for humans. Handles panics by calling\n[`std::panic::set_hook`](https://doc.rust-lang.org/std/panic/fn.set_hook.html)\nto make errors nice for humans.\n\n- [Documentation][8]\n- [Crates.io][2]\n\n## Why?\nWhen you're building a CLI, polish is super important. Even though Rust is\npretty great at safety, it's not unheard of to access the wrong index in a\nvector or have an assert fail somewhere.\n\nWhen an error eventually occurs, you probably will want to know about it. So\ninstead of just providing an error message on the command line, we can create a\ncall to action for people to submit a report.\n\nThis should empower people to engage in communication, lowering the chances\npeople might get frustrated. And making it easier to figure out what might be\ncausing bugs.\n\n### Default Output\n\n```txt\nthread 'main' panicked at 'oops', examples/main.rs:2:3\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\n### Human-Panic Output\n\n```txt\nWell, this is embarrassing.\n\nhuman-panic had a problem and crashed. To help us diagnose the problem you can send us a crash report.\n\nWe have generated a report file at \"/var/folders/zw/bpfvmq390lv2c6gn_6byyv0w0000gn/T/report-8351cad6-d2b5-4fe8-accd-1fcbf4538792.toml\". Submit an issue or email with the subject of \"human-panic Crash Report\" and include the report as an attachment.\n\n- Homepage: https://github.com/rust-cli/human-panic\n- Authors: Yoshua Wuyts <yoshuawuyts@gmail.com>\n\nWe take privacy seriously, and do not perform any automated error collection. In order to improve the software, we rely on people to submit reports.\n\nThank you kindly!\n```\n\nThe error dump file generated by `human-panic` contains the following fields.\n\n```toml\nname = 'single-panic-test'\noperating_system = 'unix:Unknown'\ncrate_version = '0.1.0'\nexplanation = '''\nCause: OMG EVERYTHING IS ON FIRE!!!. Panic occurred in file 'tests/single-panic/src/main.rs' at line 8\n'''\nmethod = 'Panic'\nbacktrace = '''\nstack backtrace:\n   0:     0x55fa0ed4c1b4 - backtrace::backtrace::libunwind::trace::h69e50feca54bfb84\n                        at /home/spacekookie/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.6/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h42967341e0b01ccc\n                        at /home/spacekookie/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.6/src/backtrace/mod.rs:42\n    \n    # ...\n\n   8:     0x55fa0ebaac8d - single_panic_test::main::h56a3d326bcecfc36\n                        at tests/single-panic/src/main.rs:8\n   9:     0x55fa0ebaae91 - std::rt::lang_start::{{closure}}::h09d28d8540038bf8\n                        at /checkout/src/libstd/rt.rs:74\n  10:     0x55fa0ed732f7 - std::rt::lang_start_internal::{{closure}}::h2e4baf0a27c956a3\n                        at libstd/rt.rs:59\n                         - std::panicking::try::do_call::h73f98ed0647c7274\n                        at libstd/panicking.rs:305\n  11:     0x55fa0ed8551e - __rust_maybe_catch_panic\n                        at libpanic_unwind/lib.rs:101\n  12:     0x55fa0ed6f7f5 - std::panicking::try::h18fbb145180d4cd9\n                        at libstd/panicking.rs:284\n                         - std::panic::catch_unwind::hc4b6a212a30b4bc5\n                        at libstd/panic.rs:361\n                         - std::rt::lang_start_internal::h8b001b4244930d51\n                        at libstd/rt.rs:58\n  13:     0x55fa0ebaae71 - std::rt::lang_start::h1b1de624209f414a\n                        at /checkout/src/libstd/rt.rs:74\n  14:     0x55fa0ebaacbd - main\n  15:     0x7f9946132f29 - __libc_start_main\n  16:     0x55fa0eba9b79 - _start\n  17:                0x0 - <unknown>'''\n```\n\n## Usage\n\n```rust no_run\nuse human_panic::setup_panic;\n\nfn main() {\n   setup_panic!();\n\n   println!(\"A normal log message\");\n   panic!(\"OMG EVERYTHING IS ON FIRE!!!\")\n}\n```\n\nIt only displays a human-friendly panic message in release mode:\n\n```sh\n$ cargo run --release\n```\n\n## Installation\n\n```sh\n$ cargo add human-panic\n```\n\n## License\n[MIT](./LICENSE-MIT) OR [Apache-2.0](./LICENSE-APACHE)\n\n[1]: https://img.shields.io/crates/v/human-panic.svg?style=flat-square\n[2]: https://crates.io/crates/human-panic\n[3]: https://img.shields.io/travis/rust-cli/human-panic.svg?style=flat-square\n[4]: https://travis-ci.org/rust-cli/human-panic\n[5]: https://img.shields.io/crates/d/human-panic.svg?style=flat-square\n[6]: https://crates.io/crates/human-panic\n[7]: https://docs.rs/human-panic/badge.svg\n[8]: https://docs.rs/human-panic\n"
        },
        {
          "name": "committed.toml",
          "type": "blob",
          "size": 0.0810546875,
          "content": "style=\"conventional\"\nignore_author_re=\"(dependabot|renovate)\"\nmerge_commit = false\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 10.6572265625,
          "content": "# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# Root options\n\n# The graph table configures how the dependency graph is constructed and thus\n# which crates the checks are performed against\n[graph]\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n    # The triple can be any string, but only the target triples built in to\n    # rustc (as of 1.40) can be checked against actual config expressions\n    #\"x86_64-unknown-linux-musl\",\n    # You can also specify which target_features you promise are enabled for a\n    # particular target. target_features are currently not validated against\n    # the actual valid features supported by the target architecture.\n    #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n# When creating the dependency graph used as the source of truth when checks are\n# executed, this field can be used to prune crates from the graph, removing them\n# from the view of cargo-deny. This is an extremely heavy hammer, as if a crate\n# is pruned from the graph, all of its dependencies will also be pruned unless\n# they are connected to another crate in the graph that hasn't been pruned,\n# so it should be used with care. The identifiers are [Package ID Specifications]\n# (https://doc.rust-lang.org/cargo/reference/pkgid-spec.html)\n#exclude = []\n# If true, metadata will be collected with `--all-features`. Note that this can't\n# be toggled off if true, if you want to conditionally enable `--all-features` it\n# is recommended to pass `--all-features` on the cmd line instead\nall-features = false\n# If true, metadata will be collected with `--no-default-features`. The same\n# caveat with `all-features` applies\nno-default-features = false\n# If set, these feature will be enabled when collecting metadata. If `--features`\n# is specified on the cmd line they will take precedence over this option.\n#features = []\n\n# The output table provides options for how/if diagnostics are outputted\n[output]\n# When outputting inclusion graphs in diagnostics that include features, this\n# option can be used to specify the depth at which feature edges will be added.\n# This option is included since the graphs can be quite large and the addition\n# of features from the crate(s) to all of the graph roots can be far too verbose.\n# This option can be overridden via `--feature-depth` on the cmd line\nfeature-depth = 1\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\n# The path where the advisory databases are cloned/fetched into\n#db-path = \"$CARGO_HOME/advisory-dbs\"\n# The url(s) of the advisory databases to use\n#db-urls = [\"https://github.com/rustsec/advisory-db\"]\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = [\n    #\"RUSTSEC-0000-0000\",\n    #{ id = \"RUSTSEC-0000-0000\", reason = \"you can specify a reason the advisory is ignored\" },\n    #\"a-crate-that-is-yanked@0.1.1\", # you can also ignore yanked crate versions if you wish\n    #{ crate = \"a-crate-that-is-yanked@0.1.1\", reason = \"you can specify why you are ignoring the yanked crate\" },\n]\n# If this is true, then cargo deny will use the git executable to fetch advisory database.\n# If this is false, then it uses a built-in git library.\n# Setting this to true can be helpful if you have special authentication requirements that cargo-deny does not support.\n# See Git Authentication for more information about setting up git authentication.\n#git-fetch-with-cli = true\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"MIT-0\",\n    \"Apache-2.0\",\n    \"BSD-3-Clause\",\n    \"MPL-2.0\",\n    \"Unicode-DFS-2016\",\n    \"CC0-1.0\",\n    \"ISC\",\n    \"OpenSSL\",\n]\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # Each entry is the crate and version constraint, and its specific allow\n    # list\n    #{ allow = [\"Zlib\"], crate = \"adler32\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n[[licenses.clarify]]\n# The package spec the clarification applies to\ncrate = \"ring\"\n# The SPDX expression for the license requirements of the crate\nexpression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\nlicense-files = [\n# Each entry is a crate relative path, and the (opaque) hash of its contents\n{ path = \"LICENSE\", hash = 0xbd0eed23 }\n]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries.\n# To see how to mark a crate as unpublished (to the official registry),\n# visit https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field.\nignore = true\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n    #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"warn\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# The default lint level for `default` features for crates that are members of\n# the workspace that is being checked. This can be overridden by allowing/denying\n# `default` on a crate-by-crate basis if desired.\nworkspace-default-features = \"allow\"\n# The default lint level for `default` features for external crates that are not\n# members of the workspace. This can be overridden by allowing/denying `default`\n# on a crate-by-crate basis if desired.\nexternal-default-features = \"allow\"\n# List of crates that are allowed. Use with care!\nallow = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is allowed\" },\n]\n# List of crates to deny\ndeny = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is banned\" },\n    # Wrapper crates can optionally be specified to allow the crate when it\n    # is a direct dependency of the otherwise banned crate\n    #{ crate = \"ansi_term@0.11.0\", wrappers = [\"this-crate-directly-depends-on-ansi_term\"] },\n]\n\n# List of features to allow/deny\n# Each entry the name of a crate and a version range. If version is\n# not specified, all versions will be matched.\n#[[bans.features]]\n#crate = \"reqwest\"\n# Features to not allow\n#deny = [\"json\"]\n# Features to allow\n#allow = [\n#    \"rustls\",\n#    \"__rustls\",\n#    \"__tls\",\n#    \"hyper-rustls\",\n#    \"rustls\",\n#    \"rustls-pemfile\",\n#    \"rustls-tls-webpki-roots\",\n#    \"tokio-rustls\",\n#    \"webpki-roots\",\n#]\n# If true, the allowed features must exactly match the enabled feature set. If\n# this is set there is no point setting `deny`\n#exact = true\n\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason why it can't be updated/removed\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite.\nskip-tree = [\n    #\"ansi_term@0.11.0\", # will be skipped along with _all_ of its direct and transitive dependencies\n    #{ crate = \"ansi_term@0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"deny\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"deny\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = []\n\n[sources.allow-org]\n# 1 or more github.com organizations to allow git sources for\ngithub = []\n# 1 or more gitlab.com organizations to allow git sources for\ngitlab = []\n# 1 or more bitbucket.org organizations to allow git sources for\nbitbucket = []\n"
        },
        {
          "name": "release.toml",
          "type": "blob",
          "size": 0.0654296875,
          "content": "owners = [\"github:rust-cli:Maintainers\"]\nallow-branch = [\"master\"]\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}