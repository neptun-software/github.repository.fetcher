{
  "metadata": {
    "timestamp": 1736709075830,
    "page": 207,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "petgraph/petgraph",
      "stars": 3024,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1796875,
          "content": "# Generated by Cargo\n/target/\nCargo.lock\n\n\n.DS_Store\n.vscode/\n*.code-workspace\n*.sublime-project\n*.sublime-workspace\n.idea/\n*.iml\n*.swp\n*.swo\n*~\n\\#*\\#\n.atom/\n*.atom-build/\n*.bak\n*.tmp\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 3.361328125,
          "content": "Contributing to ``petgraph``\n============================\n\nHi! We'd love to have your contributions! If you want help or mentorship, reach\nout to us in a GitHub issue, or ping ``bluss`` in `#rust on irc.mozilla.org`_\nand introduce yourself.\n\n.. _`\\#rust on irc.mozilla.org`: irc://irc.mozilla.org#rust\n\n* `Building`_\n\n* `Testing`_\n\n* `Pull Requests`_\n\n  * `Bug Fixes`_\n\n  * `Performance Improvements`_\n\n  * `Implementing New Algorithms`_\n\n* `Where We Need Help`_\n\n* `Team`_\n\nBuilding\n--------\n\n::\n\n    $ cargo build\n\nTesting\n-------\n\n::\n\n    $ cargo test --features all\n\nPull Requests\n-------------\n\nAll pull requests are reviewed by a team_ member before merging.\n\nAdditionally, different kinds of pull requests have different requirements.\n\nBug Fixes\n.........\n\nWe love getting bug fixes!\n\nMake sure to include a regression test, so that we can be sure that we never\naccidentally re-introduce the bug again.\n\nPerformance Improvements\n........................\n\nYou made an algorithm faster? Awesome.\n\nWhen submitting performance improvement, include the following:\n\n* A new ``#[bench]`` function that exercises this code path, if one doesn't\n  already exist\n\n* Before and after ``cargo bench`` scores, optionally formatted using\n  `cargo-benchcmp`_\n\n.. _`cargo-benchcmp`: https://github.com/BurntSushi/cargo-benchcmp\n\nImplementing New Algorithms\n...........................\n\nImplementing new graph algorithms is encouraged!\n\nIf you're going to implement a new algorithm, make sure that you do the\nfollowing:\n\n* Add a ``quickcheck`` property test for the new algorithm\n\n* Add a ``benchmark`` test for measuring performance of the new algorithm\n\n* Document what the algorithm does and in what situations it should be used\n\n* Document the big-O running time of the algorithm\n\n* Include links to relevant reading materials, such as a paper or Wikipedia\n\n* Make the algorithm work with generic graphs, constraining the generic graph\n  type parameter with our existing graph traits, like ``Visitable``, or with new\n  graph traits\n\nAny team_ member can review a pull request implementing a new algorithm, but the\nfinal decision whether or not the algorithm is appropriate for inclusion in the\n``petgraph`` crate is left to ``@bluss``.\n\nAdditionally, assuming that the new algorithm is merged into ``petgraph``, you\nare *strongly* encouraged to join the ``petgraph`` team_! *You* are the best\nperson to review any future bug fixes, performance improvements, and whatever\nother changes that affect this new algorithm.\n\nWhere We Need Help\n------------------\n\n* Issues labeled `\"help wanted\"`_ are issues where we could use a little help\n  from you.\n\n* Issues Labeled `\"mentored\"`_ are issues that don't really involve any more\n  investigation, just implementation. We've outlined what needs to be done, and\n  a team_ member has volunteered to help whoever claims the issue implement it,\n  and get the implementation merged.\n\n.. _`\"help wanted\"`:\n   https://github.com/bluss/petgraph/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\n\n.. _`\"mentored\"`:\n   https://github.com/bluss/petgraph/issues?q=is%3Aopen+is%3Aissue+label%3A%22mentored%22\n\nTeam\n----\n\nThe ``petgraph`` team consists of:\n\n* ``@bluss``\n* ``@fitzgen``\n\nWe need more team members to help spread out reviewing and maintenance\nresponsibilities — want to join us? `Drop a comment in this issue!`_\n\n.. _`Drop a comment in this issue!`: https://github.com/bluss/petgraph/issues/TODO\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.607421875,
          "content": "[package]\n\nname = \"petgraph\"\nversion = \"0.7.1\"\nreadme = \"README.md\"\nlicense = \"MIT OR Apache-2.0\"\nauthors = [\"bluss\", \"mitchmindtree\"]\n\ndescription = \"Graph data structure library. Provides graph types and graph algorithms.\"\ndocumentation = \"https://docs.rs/petgraph/\"\nrepository = \"https://github.com/petgraph/petgraph\"\n\nkeywords = [\"data-structure\", \"graph\", \"unionfind\", \"graph-algorithms\"]\ncategories = [\"data-structures\"]\n\nrust-version = \"1.64\"\n\nedition = \"2018\"\n\n[package.metadata.docs.rs]\nfeatures = [\"rayon\", \"serde-1\", \"quickcheck\"]\n\n[package.metadata.release]\nno-dev-version = true\n\n[lib]\nbench = false\n\nname = \"petgraph\"\n\n[profile.release]\n\n[profile.bench]\ndebug = true\n\n[dependencies]\nfixedbitset = { version = \"0.5.7\", default-features = false }\nindexmap = \"2.5.0\"\nquickcheck = { optional = true, version = \"0.8\", default-features = false }\nserde = { version = \"1.0\", optional = true }\nserde_derive = { version = \"1.0\", optional = true }\nrayon = { version = \"1.5.3\", optional = true }\n\n[dev-dependencies]\nbincode = \"1.3.3\"\ndefmac = \"0.2.1\"\nitertools = { version = \"0.12.1\", default-features = false }\nodds = { version = \"0.4.0\" }\nrand = \"0.5.5\"\nahash = \"0.7.2\"\nfxhash = \"0.2.1\"\n\n[features]\nrayon = [\"dep:rayon\", \"indexmap/rayon\"]\n\n# feature flags for testing use only\nall = [\n    \"unstable\",\n    \"quickcheck\",\n    \"matrix_graph\",\n    \"stable_graph\",\n    \"graphmap\",\n    \"rayon\",\n]\ndefault = [\"graphmap\", \"stable_graph\", \"matrix_graph\"]\n\ngenerate = [] # For unstable features\n\ngraphmap = []\nmatrix_graph = []\nserde-1 = [\"serde\", \"serde_derive\"]\nstable_graph = []\nunstable = [\"generate\"]\n\n[workspace]\nmembers = [\"serialization-tests\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0185546875,
          "content": "Copyright (c) 2015\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.958984375,
          "content": "DOCCRATES = petgraph fixedbitset\n\n# deps to delete the generated docs\nRMDOCS =\n\nFEATURES = unstable\n\nVERSIONS = $(patsubst %,target/VERS/%,$(DOCCRATES))\n\ndocs: mkdocs mksvgs subst $(RMDOCS)\n\n# https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html\n$(VERSIONS): Cargo.toml\n\tmkdir -p $(@D)\n\tcargo pkgid $(@F) | sed -e \"s/.*#\\(\\|.*:\\)//\" > \"$@\"\n\n$(DOCCRATES): %: target/VERS/%\n\t# Put in the crate version into the docs\n\tfind ./doc/$@ -name \"*.html\" -exec sed -i -e \"s/<title>\\(.*\\) - Rust/<title>$@ $(shell cat $<) - \\1 - Rust/g\" {} \\;\n\nsubst: $(DOCCRATES)\n\nmkdocs: Cargo.toml\n\tcargo doc --features=$(FEATURES)\n\trm -rf ./doc\n\tcp -r ./target/doc ./doc\n\t- cat ./custom.css >> doc/main.css\n\n$(RMDOCS): mkdocs\n\trm -r ./doc/$@\n\tsed -i \"/searchIndex\\['$@'\\]/d\" doc/search-index.js\n\nmksvgs: mkdocs graph-example.dot\n\tdot -Tsvg < ./graph-example.dot > graph-example.svg\n\tmv graph-example.svg ./doc/petgraph/graph/\n\n\n.PHONY: docs mkdocs mksvgs subst $(DOCCRATES) $(RMDOCS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.9677734375,
          "content": "![](assets/graphosaurus-512.png)\n\n# petgraph\n\nGraph data structure library. Please read the [API documentation here][].\n\nSupports Rust 1.64 and later.\n\n[![Crates.io][crates-badge]][crates-url]\n[![docs.rs][docsrs-badge]][docsrs-url]\n![MSRV][msrv-badge]\n[![Discord chat][discord-badge]][discord-url]\n[![build_status][]](https://github.com/petgraph/petgraph/actions)\n\nCrate feature flags:\n\n-   `graphmap` (default) enable `GraphMap`.\n-   `stable_graph` (default) enable `StableGraph`.\n-   `matrix_graph` (default) enable `MatrixGraph`.\n-   `serde-1` (optional) enable serialization for `Graph, StableGraph, GraphMap`\n    using serde 1.0. Requires Rust version as required by serde.\n-   `rayon` (optional) enable parallel iterators for the underlying data in `GraphMap`. Requires Rust version as required by Rayon.\n\n## Recent Changes\n\nSee [RELEASES][] for a list of changes. The minimum supported rust\nversion will only change on major releases.\n\n## Logo\n\nThe mascot is named \"Sir Paul Rustory Graphosaurus\" (close friends call him Paul).\nThe logo has been created by the talented Aren.\n\n## License\n\nDual-licensed to be compatible with the Rust project.\n\nLicensed under the Apache License, Version 2.0\n<http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n<http://opensource.org/licenses/MIT>, at your option. This file may not\nbe copied, modified, or distributed except according to those terms.\n\n[API documentation here]: https://docs.rs/petgraph/\n[build_status]: https://github.com/petgraph/petgraph/workflows/Continuous%20integration/badge.svg?branch=master\n[docsrs-badge]: https://img.shields.io/docsrs/petgraph\n[docsrs-url]: https://docs.rs/petgraph/latest/petgraph/\n[crates-badge]: https://img.shields.io/crates/v/petgraph.svg\n[crates-url]: https://crates.io/crates/petgraph\n[discord-badge]:  https://img.shields.io/discord/1166289348384280616?logo=discord&style=flat\n[discord-url]: https://discord.gg/n2tc79tJ4e\n[msrv-badge]: https://img.shields.io/badge/rustc-1.64+-blue.svg\n[RELEASES]: RELEASES.rst\n"
        },
        {
          "name": "RELEASES.rst",
          "type": "blob",
          "size": 22.8330078125,
          "content": "Version 0.7.1 (2025-01-08)\n==========================\n\n- Do not unnecessarily restrict ``indexmap`` version (`#714`_)\n- Export ``UndirectedAdaptor`` (`#717`_)\n\n.. _`#714`: https://github.com/petgraph/petgraph/pull/714\n.. _`#717`: https://github.com/petgraph/petgraph/pull/717\n\nVersion 0.7.0 (2024-12-31)\n==========================\n\n- Re-released version 0.6.6 with the correct version number, as it included a major update to an exposed crate (`#664`_).\n\nVersion 0.6.6 (2024-12-31 - yanked)\n===================================\n\n- Add graph6 format encoder and decoder (`#658`_)\n- Dynamic Topological Sort algorithm support (`#675`_)\n- Add ``UndirectedAdaptor`` (`#695`_)\n- Add ``LowerHex`` and ``UpperHex`` implementations for ``Dot`` (`#687`_)\n- Make ``serde`` support more complete (`#550`_)\n- Process multiple edges in the Floyd-Warshall implementation (`#685`_)\n- Update ``fixedbitset`` to 0.5.7 (`#664`_)\n- Fix ``immediately_dominated_by`` function called on root of graph returns root itself (`#670`_)\n- Fix adjacency matrix for ``Csr`` and ``List`` (`#648`_)\n- Fix clippy warnings (`#701`_)\n- Add performance note to the ``all_simple_paths`` function documentation (`#693`_)\n\n.. _`#658`: https://github.com/petgraph/petgraph/pull/658\n.. _`#675`: https://github.com/petgraph/petgraph/pull/675\n.. _`#695`: https://github.com/petgraph/petgraph/pull/695\n.. _`#687`: https://github.com/petgraph/petgraph/pull/687\n.. _`#550`: https://github.com/petgraph/petgraph/pull/550\n.. _`#685`: https://github.com/petgraph/petgraph/pull/685\n.. _`#664`: https://github.com/petgraph/petgraph/pull/664\n.. _`#670`: https://github.com/petgraph/petgraph/pull/670\n.. _`#648`: https://github.com/petgraph/petgraph/pull/648\n.. _`#701`: https://github.com/petgraph/petgraph/pull/701\n.. _`#693`: https://github.com/petgraph/petgraph/pull/693\n\nVersion 0.6.5 (2024-05-06)\n==========================\n\n- Add rayon support for ``GraphMap`` (`#573`_, `#615`_)\n- Add ``Topo::with_initials`` method (`#585`_)\n- Add logo to the project (`#598`_)\n- Add Ford-Fulkerson algorithm (`#640`_)\n- Update ``itertools`` to 0.12.1 (`#628`_)\n- Update ``GraphMap`` to allow custom hash functions (`#622`_)\n- Fix documentation (`#630`_)\n- Fix clippy warnings (`#627`_)\n- (internal) Fix remove old ``copyclone`` macro (`#601`_)\n- (internal) Move minimum spanning tree into own module (`#624`_)\n\n.. _`#573`: https://github.com/petgraph/petgraph/pull/573\n.. _`#615`: https://github.com/petgraph/petgraph/pull/615\n.. _`#585`: https://github.com/petgraph/petgraph/pull/585\n.. _`#598`: https://github.com/petgraph/petgraph/pull/598\n.. _`#640`: https://github.com/petgraph/petgraph/pull/640\n.. _`#628`: https://github.com/petgraph/petgraph/pull/628\n.. _`#622`: https://github.com/petgraph/petgraph/pull/622\n.. _`#630`: https://github.com/petgraph/petgraph/pull/630\n.. _`#627`: https://github.com/petgraph/petgraph/pull/627\n.. _`#601`: https://github.com/petgraph/petgraph/pull/601\n.. _`#624`: https://github.com/petgraph/petgraph/pull/624\n\nVersion 0.6.4 (2023-08-21)\n==========================\n\n- Update ``indexmap`` to 2.0.0 (`#568`_)\n- Fix typos (`#544`_)\n\n.. _`#544`: https://github.com/petgraph/petgraph/pull/544\n.. _`#568`: https://github.com/petgraph/petgraph/pull/568\n\nVersion 0.6.3 (2023-02-07)\n==========================\n\n- Added an iterator over subgraph isomorphisms (`#500`_)\n- Added serde support on ``GraphMap`` (`#496`_)\n- Added ``reverse`` method for ``StableGraph`` (`#533`_)\n- Added ``edges_connecting`` iterator for ``StableGraph`` (`#521`_)\n- Fix Floyd-Warshall algorithm behaviour on undirected graphs (`487`_)\n- Fix IntoEdgesDirected implementation for NodeFiltered when direction is Incoming (`476`_)\n- Fix cardinality check in subgraph isomorphism (`472`_)\n- Fix UB in ``MatrixGraph`` (`#505`_)\n\n.. _`#472`: https://github.com/petgraph/petgraph/issues/472\n.. _`#476`: https://github.com/petgraph/petgraph/issues/476\n.. _`#487`: https://github.com/petgraph/petgraph/issues/487\n.. _`#496`: https://github.com/petgraph/petgraph/issues/496\n.. _`#500`: https://github.com/petgraph/petgraph/issues/500\n.. _`#505`: https://github.com/petgraph/petgraph/issues/505\n.. _`#521`: https://github.com/petgraph/petgraph/issues/521\n.. _`#533`: https://github.com/petgraph/petgraph/issues/533\n\nVersion 0.6.2 (2022-05-28)\n==========================\n\n- Loosed the strict version dependency set in `493`_, to allow users to use newer versions of indexmap  (`495`_).\n\n.. _`#495`: https://github.com/petgraph/petgraph/issues/493\n\nVersion 0.6.1 (2022-05-22)\n==========================\n\n- Added clarifications on Graph docs (`491`_).\n- Fix build errors on rust 1.41 (`493`_).\n\n.. _`#491`: https://github.com/petgraph/petgraph/issues/491\n.. _`#493`: https://github.com/petgraph/petgraph/issues/493\n\nVersion 0.6.0 (2021-07-04)\n==========================\n\nBreaking changes\n----------------\n\n- MSRV is now 1.41 (`#444`_).\n- Removed the ``NodeCompactIndexable`` trait impl for ``MatrixGraph`` (`#429`_).\n- The ``IntoEdges::edges`` implementations are now required return edges with the passed node as source (`#433`_).\n\nNew features\n------------\n\n- Multiple documentation improvements (`#360`_, `#383`_, `#426`_, `#433`_, `#437`_, `#443`_, `#450`_).\n- Added an ``immediately_dominated_by`` method to the dominators result (`#337`_).\n- Added ``adj::List``, a new append-only graph type using a simple adjacency list with no node-weights (`#263`_).\n- Added ``dag_to_toposorted_adjacency_list`` and ``dag_transitive_reduction_closure`` algorithms to transitively reduce an acyclic graph (`#263`_).\n- Made the ``is_isomorphic`` algorithm generic on both graph types (`#369`_).\n- Implement Debug and Clone for all the iterators (`#418`_).\n- Implement multiple mising traits on graph implementations and adapters (`#405`_, `#429`_).\n- Add an EdgeIndexable public trait (`#402`_).\n- Added immutable ``node_weights`` and ``edge_weights`` methods for ``Graph`` and ``StableGraph`` (`#363`_).\n\nNew algorithms\n--------------\n\n- Added a k-shortest-path implementation (`#328`_).\n- Added a generic graph complement implementation (`#371`_).\n- Added a maximum matching implementation (`#400`_).\n- Added a Floyd-Warshall shortest path algorithm (`#377`_).\n- Added a greedy feedback arc set algorithm (`#386`_).\n- Added a `find_negative_cycle` algorithm (`#434`_).\n\nPerformance\n-----------\n\n- Reuse the internal state in ``tarjan_scc`` (`#313`_)\n- Reduce memory usage in ``tarjan_scc`` (`#413`_).\n- Added tighter size hints to all iterators (`#380`_).\n- Optimized ``petgraph::dot`` a bit (`#424`_).\n- Optimized StableGraph de-serialization with holes (`#395`_).\n\nBug fixes\n---------\n\n- Fixed A* not producing optimal solutions with inconsistent heuristics (`#379`_).\n- Fixed a stacked borrow violation (`#404`_).\n- Fixed a panic in ``StableGraph::extend_with_edges`` (`#415`_).\n- Fixed multiple bugs in the matrix graph implementation (`#427`_).\n- Fixed ``GraphMap::remove_node`` not removing some edges (`#432`_).\n- Fixed all clippy warnings (`#440`_, `#449`_).\n\nOther changes\n-------------\n\n- Now using github actions as CI (`#391`_).\n- Replace matchs on `Option<T>` with `map` (`#381`_).\n- Added benchmarks for ``tarjan_scc`` (`#421`_).\n\n.. _`#263`: https://github.com/petgraph/petgraph/issues/263\n.. _`#313`: https://github.com/petgraph/petgraph/issues/313\n.. _`#328`: https://github.com/petgraph/petgraph/issues/328\n.. _`#337`: https://github.com/petgraph/petgraph/issues/337\n.. _`#360`: https://github.com/petgraph/petgraph/issues/360\n.. _`#363`: https://github.com/petgraph/petgraph/issues/363\n.. _`#369`: https://github.com/petgraph/petgraph/issues/369\n.. _`#371`: https://github.com/petgraph/petgraph/issues/371\n.. _`#377`: https://github.com/petgraph/petgraph/issues/377\n.. _`#379`: https://github.com/petgraph/petgraph/issues/378\n.. _`#380`: https://github.com/petgraph/petgraph/issues/380\n.. _`#381`: https://github.com/petgraph/petgraph/issues/381\n.. _`#383`: https://github.com/petgraph/petgraph/issues/383\n.. _`#386`: https://github.com/petgraph/petgraph/issues/386\n.. _`#391`: https://github.com/petgraph/petgraph/issues/391\n.. _`#395`: https://github.com/petgraph/petgraph/issues/395\n.. _`#400`: https://github.com/petgraph/petgraph/issues/400\n.. _`#402`: https://github.com/petgraph/petgraph/issues/402\n.. _`#404`: https://github.com/petgraph/petgraph/issues/404\n.. _`#405`: https://github.com/petgraph/petgraph/issues/405\n.. _`#413`: https://github.com/petgraph/petgraph/issues/413\n.. _`#415`: https://github.com/petgraph/petgraph/issues/415\n.. _`#418`: https://github.com/petgraph/petgraph/issues/418\n.. _`#421`: https://github.com/petgraph/petgraph/issues/421\n.. _`#424`: https://github.com/petgraph/petgraph/issues/424\n.. _`#426`: https://github.com/petgraph/petgraph/issues/426\n.. _`#427`: https://github.com/petgraph/petgraph/issues/427\n.. _`#429`: https://github.com/petgraph/petgraph/issues/429\n.. _`#432`: https://github.com/petgraph/petgraph/issues/432\n.. _`#433`: https://github.com/petgraph/petgraph/issues/433\n.. _`#434`: https://github.com/petgraph/petgraph/issues/434\n.. _`#437`: https://github.com/petgraph/petgraph/issues/437\n.. _`#440`: https://github.com/petgraph/petgraph/issues/440\n.. _`#443`: https://github.com/petgraph/petgraph/issues/443\n.. _`#444`: https://github.com/petgraph/petgraph/issues/444\n.. _`#449`: https://github.com/petgraph/petgraph/issues/449\n.. _`#450`: https://github.com/petgraph/petgraph/issues/450\n\n\nVersion 0.5.1 (2020-05-23)\n==========================\n\n- Implement ``Default`` for traversals.\n- Export ``EdgesConnecting`` publicly.\n- Implement ``is_bipartite_graph``.\n- Add ``FilterNode`` implementation for ``FixedBitSet`` and ``HashSet``.\n- Implement ``node_weights_mut`` and ``edge_weights_mut`` for ``StableGraph``.\n- Add configurable functions for adding attributes to dotfile features.\n\nVersion 0.5.0 (2019-12-25)\n==========================\n\nBreaking changes\n----------------\n\n- The iterative DFS implementation, ``Dfs``, now marks nodes visited when\n  they are pushed onto the stack, not when they're popped off. This may\n  require changes to callers that use ``Dfs::from_parts`` or manipulate\n  its internals.\n- The ``IntoEdgesDirected`` trait now has a stricter contract for\n  undirected graphs. Custom implementations of this trait may have to be\n  updated. See the `trait documentation`__ for more.\n\nOther changes\n-------------\n\n- Upgrade to Rust 2018 edition\n- Fix clippy warnings and unify code formatting\n- Improved and enhanced documentation\n- Update dependencies including modern quickcheck\n- Numerous bugfixes and refactorings\n- Added ``MatrixGraph`` implementation\n\n__ https://docs.rs/petgraph/0.5/petgraph/visit/trait.IntoEdgesDirected.html\n\nVersion 0.4.13 (2018-08-26)\n===========================\n\n- Fix clippy warnings by @jonasbb\n- Add docs for ``Csr`` by @ksadorf\n- Fix conflict with new stable method ``find_map`` in new Rust\n\nVersion 0.4.12 (2018-03-26)\n===========================\n\n- Newtype ``Time`` now also implements ``Hash``\n- Documentation updates for ``Frozen``.\n\nVersion 0.4.11 (2018-01-07)\n===========================\n\n- Fix ``petgraph::graph::NodeReferences`` to be publicly visible\n- Small doc typo and code style files by @shepmaster and @waywardmonkeys\n- Fix a future compat warning with pointer casts\n\nVersion 0.4.10 (2017-08-15)\n===========================\n\n- Add graph trait ``IntoEdgesDirected``\n- Update dependencies\n\nVersion 0.4.9 (2017-10-02)\n==========================\n\n- Fix ``bellman_ford`` to work correctly with undirected graphs (#152) by\n  @carrutstick\n- Performance improvements for ``Graph, Stablegraph``'s ``.map()``.\n\nVersion 0.4.8 (2017-09-20)\n==========================\n\n- ``StableGraph`` learned new methods nearing parity with ``Graph``.  Note\n  that the ``StableGraph`` methods preserve index stability even in the batch\n  removal methods like ``filter_map`` and ``retain_edges``.\n\n  + Added ``.filter_map()``, which maps associated node and edge data\n  + Added ``.retain_edges()``, ``.edge_indices()`` and ``.clear_edges()``\n\n- Existing ``Graph`` iterators gained some trait impls:\n\n  + ``.node_indices(), .edge_indices()`` are ``ExactSizeIterator``\n  + ``.node_references()`` is now\n    ``DoubleEndedIterator + ExactSizeIterator``.\n  + ``.edge_references()`` is now ``ExactSizeIterator``.\n\n- Implemented ``From<StableGraph>`` for ``Graph``.\n\nVersion 0.4.7 (2017-09-16)\n==========================\n\n- New algorithm by @jmcomets: A* search algorithm in ``petgraph::algo::astar``\n- One ``StableGraph`` bug fix whose patch was supposed to be in the previous\n  version:\n\n  + ``add_edge(m, n, _)`` now properly always panics if nodes m or n don't\n    exist in the graph.\n\nVersion 0.4.6 (2017-09-12)\n==========================\n\n- New optional crate feature: ``\"serde-1\"``, which enables serialization\n  for ``Graph`` and ``StableGraph`` using serde.\n- Add methods ``new``, ``add_node`` to ``Csr`` by @jmcomets\n- Add indexing with ``[]`` by node index, ``NodeCompactIndexable`` for\n  ``Csr`` by @jmcomets\n- Amend doc for ``GraphMap::into_graph`` (it has a case where it can panic)\n- Add implementation of ``From<Graph>`` for ``StableGraph``.\n- Add implementation of ``IntoNodeReferences`` for ``&StableGraph``.\n- Add method ``StableGraph::map`` that maps associated data\n- Add method ``StableGraph::find_edge_undirected``\n- Many ``StableGraph`` bug fixes involving node vacancies (holes left by\n  deletions):\n\n  + ``neighbors(n)`` and similar neighbor and edge iterator methods now\n    handle n being a vacancy properly. (This produces an empty iterator.)\n  + ``find_edge(m, n)`` now handles m being a vacancy correctly too\n  + ``StableGraph::node_bound`` was fixed for empty graphs and returns 0\n\n- Add implementation of ``DoubleEndedIterator`` to ``Graph, StableGraph``'s\n  edge references iterators.\n- Debug output for ``Graph`` now shows node and edge count. ``Graph, StableGraph``\n  show nothing for the edges list if it's empty (no label).\n- ``Arbitrary`` implementation for ``StableGraph`` now can produce graphs with\n  vacancies (used by quickcheck)\n\nVersion 0.4.5 (2017-06-16)\n==========================\n\n- Fix ``max`` ambiguity error with current rust nightly by @daboross (#153)\n\nVersion 0.4.4 (2017-03-14)\n==========================\n\n- Add ``GraphMap::all_edges_mut()`` iterator by @Binero\n- Add ``StableGraph::retain_nodes`` by @Rupsbant\n- Add ``StableGraph::index_twice_mut`` by @christolliday\n\nVersion 0.4.3 (2017-01-21)\n==========================\n\n- Add crate categories\n\nVersion 0.4.2 (2017-01-06)\n==========================\n\n- Move the ``visit.rs`` file due to changed rules for a module’s directory\n  ownership in Rust, resolving a future compat warning.\n- The error types ``Cycle, NegativeCycle`` now implement ``PartialEq``.\n\nVersion 0.4.1 (2016-10-26)\n==========================\n\n- Add new algorithm ``simple_fast`` for computing dominators in a control-flow\n  graph.\n\nVersion 0.4.0 (2016-10-17)\n==========================\n\nBreaking changes in ``Graph``\n-----------------------------\n\n- ``Graph::edges`` and the other edges methods now return an iterator of\n  edge references\n\nOther breaking changes\n----------------------\n\n- ``toposort`` now returns an error if the graph had a cycle.\n- ``is_cyclic_directed`` no longer takes a dfs space argument. It is\n  now recursive.\n- ``scc`` was renamed to ``kosaraju_scc``.\n- ``min_spanning_tree`` now returns an iterator that needs to be\n  made into a specific graph type deliberately.\n- ``dijkstra`` now uses the ``IntoEdges`` trait.\n- ``NodeIndexable`` changed its method signatures.\n- ``IntoExternals`` was removed, and many other smaller adjustments\n  in graph traits. ``NodeId`` must now implement ``PartialEq``, for example.\n- ``DfsIter, BfsIter`` were removed in favour of a more general approach\n  with the ``Walker`` trait and its iterator conversion.\n\nNew features\n------------\n\n- New graph traits, for example ``IntoEdges`` which returns\n  an iterator of edge references. Everything implements the graph traits\n  much more consistently.\n- Traits for associated data access and building graphs: ``DataMap``,\n  ``Build, Create, FromElements``.\n- Graph adaptors: ``EdgeFiltered``. ``Filtered`` was renamed to ``NodeFiltered``.\n- New algorithms: bellman-ford\n- New graph: compressed sparse row (``Csr``).\n- ``GraphMap`` implements ``NodeIndexable``.\n- ``Dot`` was generalized\n\nVersion 0.3.2 (2016-10-11)\n==========================\n\n  - Add ``depth_first_search``, a recursive dfs visitor that emits discovery,\n    finishing and edge classification events.\n  - Add graph adaptor ``Filtered``.\n  - impl ``Debug, NodeIndexable`` for ``Reversed``.\n\nVersion 0.3.1 (2016-10-05)\n==========================\n\n- Add ``.edges(), .edges_directed()`` to ``StableGraph``. Note that these\n  differ from ``Graph``, because this is the signature they will all use\n  in the future.\n- Add ``.update_edge()`` to ``StableGraph``.\n- Add reexports of common items in ``stable_graph`` module (for example\n  ``NodeIndex``).\n- Minor performance improvements to graph iteration\n- Improved docs for ``visit`` module.\n\nVersion 0.3.0 (2016-10-03)\n==========================\n\n- Overhaul all graph visitor traits so that they use the ``IntoIterator``\n  style. This makes them composable.\n\n  - Multiple graph algorithms use new visitor traits.\n  - **Help is welcome to port more algorithms (and create new graph traits in\n    the process)!**\n\n- ``GraphMap`` can now have directed edges. ``GraphMap::new`` is now generic\n  in the edge type. ``DiGraphMap`` and ``UnGraphMap`` are new type aliases.\n- Add type aliases ``DiGraph, UnGraph, StableDiGraph, StableUnGraph``\n- ``GraphMap`` is based on the indexmap crate. Deterministic iteration\n  order, faster iteration, no side tables needed to convert to ``Graph``.\n- Improved docs for a lot of types and functions.\n- Add graph visitor ``DfsPostOrder``\n- ``Dfs`` gained new methods ``from_parts`` and ``reset``.\n- New algo ``has_path_connecting``.\n- New algo ``tarjan_scc``, a second scc implementation.\n- Document traversal order in ``Dfs, DfsPostOrder, scc, tarjan_scc``.\n- Optional graph visitor workspace reuse in ``has_path_connecting``,\n  ``is_cyclic_directed, toposort``.\n- Improved ``Debug`` formatting for ``Graph, StableGraph``.\n- Add a prelude module\n- ``GraphMap`` now has a method ``.into_graph()`` that makes a ``Graph``.\n- ``Graph::retain_nodes, retain_edges`` now expose the self graph only\n  as wrapped in ``Frozen``, so that weights can be mutated but the\n  graph structure not.\n- Enable ``StableGraph`` by default\n- Add method ``Graph::contains_edge``.\n- Renamed ``EdgeDirection`` → ``Direction``.\n- Remove ``SubTopo``.\n- Require Rust 1.12 or later\n\nVersion 0.2.10 (2016-07-27)\n===========================\n\n- Fix compilation with rust nightly\n\nVersion 0.2.9 (2016-10-01)\n==========================\n\n- Fix a bug in SubTopo (#81)\n\nVersion 0.2.8 (2016-09-12)\n==========================\n\n- Add Graph methods reserve_nodes, reserve_edges, reserve_exact_nodes,\n  reserve_exact_edges, shrink_to_fit_edges, shrink_to_fit_nodes, shrink_to_fit\n\nVersion 0.2.7 (2016-04-22)\n==========================\n\n- Update URLs\n\nVersion 0.2.6 (2016-04-20)\n==========================\n\n- Fix warning about type parameter defaults (no functional change)\n\nVersion 0.2.5 (2016-04-10)\n==========================\n\n- Add SubTopo, a topo walker for the subgraph reachable from a starting point.\n- Add condensation, which forms the graph of a graph’s strongly connected\n  components.\n\nVersion 0.2.4 (2016-04-05)\n==========================\n\n- Fix an algorithm error in scc (#61). This time we have a test that\n  crosschecks the result of the algorithm vs another implementation, for\n  greater confidence in its correctness.\n\nVersion 0.2.3 (2016-02-22)\n==========================\n\n- Require Rust 1.6: Due to changes in how rust uses type parameter defaults.\n- Implement Graph::clone_from.\n\nVersion 0.2.2 (2015-12-14)\n==========================\n\n- Require Rust 1.5\n- ``Dot`` passes on the alternate flag to node and edge label formatting\n- Add ``Clone`` impl for some iterators\n- Document edge iteration order for ``Graph::neighbors``\n- Add *experimental feature* ``StableGraph``, using feature flag ``stable_graph``\n\nVersion 0.2.1 (2015-12-06)\n==========================\n\n- Add algorithm ``is_isomorphic_matching``\n\nVersion 0.2.0 (2015-12-03)\n==========================\n\nNew Features\n------------\n\n- Add Graph::neighbors().detach() to step edges without borrowing.\n  This is more general than, and replaces now deprecated\n  walk_edges_directed. (#39)\n- Implement Default for Graph, GraphMap\n- Add method EdgeDirection::opposite()\n\nBreaking changes\n----------------\n\n- Graph::neighbors() for undirected graphs and Graph::neighbors_undirected\n  for any graph now visit self loop edges once, not twice. (#31)\n- Renamed Graph::without_edges to Graph::externals\n- Removed Graph::edges_both\n- GraphMap::add_edge now returns ``Option<E>``\n- Element type of ``GraphMap<N, E>::all_edges()`` changed to ``(N, N, &E)``\n\nMinor breaking changes\n----------------------\n\n- IntoWeightedEdge changed a type parameter to associated type\n- IndexType is now an unsafe trait\n- Removed IndexType::{one, zero}, use method new instead.\n- Removed MinScored\n- Ptr moved to the graphmap module.\n- Directed, Undirected are now void enums.\n- Fields of graphmap::Edges are now private (#19)\n\nVersion 0.1.18 (2015-11-30)\n===========================\n\n- Fix bug on calling GraphMap::add_edge with existing edge (#35)\n\nVersion 0.1.17 (2015-11-25)\n===========================\n\n- Add Graph::capacity(), GraphMap::capacity()\n- Fix bug in Graph::reverse()\n- Graph and GraphMap have `quickcheck::Arbitrary` implementations,\n  if optional feature `check` is enabled.\n\nVersion 0.1.16 (2015-11-25)\n===========================\n\n- Add Graph::node_indices(), Graph::edge_indices()\n- Add Graph::retain_nodes(), Graph::retain_edges()\n- Add Graph::extend_with_edges(), Graph::from_edges()\n- Add functions petgraph::graph::{edge_index, node_index};\n- Add GraphMap::extend(), GraphMap::from_edges()\n- Add petgraph::dot::Dot for simple graphviz dot output\n\nVersion 0.1.15 (2015-11-20)\n===========================\n\n- Add Graph::clear_edges()\n- Add Graph::edge_endpoints()\n- Add Graph::map() and Graph::filter_map()\n\nVersion 0.1.14 (2015-11-19)\n===========================\n\n- Add new topological order visitor Topo\n- New graph traits NeighborsDirected, Externals, Revisitable\n\nVersion 0.1.13 (2015-11-11)\n===========================\n\n- Add iterator GraphMap::all_edges\n\nVersion 0.1.12 (2015-11-07)\n===========================\n\n- Fix an algorithm error in scc (#14)\n\nVersion 0.1.11 (2015-08-16)\n===========================\n\n- Update for well-formedness warnings (Rust RFC 1214), adding\n  new lifetime bounds on NeighborIter and Dfs, impact should be minimal.\n\nVersion 0.1.10 (2015-06-22)\n===========================\n\n- Fix bug in WalkEdges::next_neighbor()\n\nVersion 0.1.9 (2015-06-17)\n==========================\n\n- Fix Dfs/Bfs for a rustc bugfix that disallowed them\n- Add method next_neighbor() to WalkEdges\n\nVersion 0.1.8 (2015-06-08)\n==========================\n\n- Add Graph::walk_edges_directed()\n- Add Graph::index_twice_mut()\n\nVersion 0.1.7 (2015-06-08)\n==========================\n\n- Add Graph::edges_directed()\n\nVersion 0.1.6 (2015-06-04)\n==========================\n\n- Add Graph::node_weights_mut and Graph::edge_weights_mut\n\nVersion 0.1.4 (2015-05-20)\n==========================\n\n- Add back DfsIter, BfsIter\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "msrv = \"1.41.0\""
        },
        {
          "name": "custom.css",
          "type": "blob",
          "size": 0.5205078125,
          "content": "\n.docblock pre.rust { background: #eeeeff; }\npre.trait, pre.fn, pre.struct, pre.enum, pre.typedef { background: #fcfefc; }\n\n/* Small “example” label for doc examples */\n.docblock pre.rust::before {\n    content: \"example\";\n    float: right;\n    font-style: italic;\n    font-size: 0.8em;\n    margin-top: -10px;\n    margin-right: -5px;\n}\n\n\n/* Fixup where display in trait listing */\npre.trait .where::before {\ncontent: '\\a         ';\n}\n\n.docblock code {\n    background-color: inherit;\n    font-weight: bold;\n    padding: 0 0.1em;\n}\n"
        },
        {
          "name": "graph-example.dot",
          "type": "blob",
          "size": 0.216796875,
          "content": "digraph {\nrankdir = \"LR\";\nsplines = true;\n\n    0 [label=\"petgraph\"]\n    1 [label=\"fixedbitset\"]\n    2 [label=\"quickcheck\"]\n    3 [label=\"rand\"]\n    4 [label=\"libc\"]\n    0 -> 1\n    0 -> 2\n    2 -> 3\n    3 -> 4\n    2 -> 4\n}\n"
        },
        {
          "name": "serialization-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}