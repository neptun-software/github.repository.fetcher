{
  "metadata": {
    "timestamp": 1736709293950,
    "page": 666,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oreboot/oreboot",
      "stars": 1613,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.392578125,
          "content": "*.dtb\noreboot.asm\n*.\\#\n*.bin\n*.debug\n*.elf\n*.o\n*.out\n*.pyc\n*.sw[po]\n/*.rom\n\n#\n# KDE editors create lots of backup files whenever\n# a file is edited, so just ignore them\n*~\n*.kate-swp\n# Ignore Kdevelop project file\n*.kdev4\n\n#Added by cargo\n#\n#already existing elements are commented out\n\ncoverall\ntarget\n**/*.rs.bk\ndebug.log\n\n# Ignore all intellij related files\n*.idea\n\n# gdb history files\n.gdb_history\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.095703125,
          "content": "[submodule \"edk2\"]\n\tpath = 3rdparty/edk2\n\turl = https://github.com/tianocore/edk2\n\tignore = dirty\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 23.71875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"atomic-polyfill\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\"\ndependencies = [\n \"critical-section\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"bare-metal\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8fe8f5a8a398345e52358e18ff07cc17a568fbca5c6f73873d3a62056309603\"\n\n[[package]]\nname = \"bit_field\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc827186963e592360843fb5ba4b973e145841266c1357f7180c43526f2e5b61\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97f376d85a664d5837dbae44bf546e6477a679ff6610010f17276f686d867e8\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap-verbosity-flag\"\nversion = \"2.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e099138e1807662ff75e2cebe4ae2287add879245574489f9b1588eb5e5564ed\"\ndependencies = [\n \"clap\",\n \"log 0.4.22\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19bc80abd44e4bed93ca373a0704ccbd1b710dc5749406201bb018272808dc54\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"console\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"consts\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"crc\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636\"\ndependencies = [\n \"crc-catalog\",\n]\n\n[[package]]\nname = \"crc-catalog\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\"\n\n[[package]]\nname = \"critical-section\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"790eea4361631c5e7d22598ecd5723ff611904e3344ce8720784c93e3d83d40b\"\n\n[[package]]\nname = \"ctrlc\"\nversion = \"3.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90eeab0aa92f3f9b4e87f258c72b139c207d251f9cbc1080a0086b86a8870dd3\"\ndependencies = [\n \"nix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"d1-pac\"\nversion = \"0.0.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e03be09af0d1db27a816e681f260bb4be2412153a6ef0afbf94d974414630ceb\"\ndependencies = [\n \"bare-metal\",\n \"critical-section\",\n \"riscv\",\n \"vcell\",\n]\n\n[[package]]\nname = \"embedded-hal\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35949884794ad573cf46071e41c9b60efb0cb311e3ca01f7af807af1debc66ff\"\ndependencies = [\n \"nb 0.1.3\",\n \"void\",\n]\n\n[[package]]\nname = \"embedded-hal\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"361a90feb7004eca4019fb28352a9465666b24f840f5c3cddf0ff13920590b89\"\n\n[[package]]\nname = \"embedded-hal-nb\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fba4268c14288c828995299e59b12babdbe170f6c6d73731af1b4648142e8605\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"nb 1.1.0\",\n]\n\n[[package]]\nname = \"embedded-io\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edd0f118536f44f5ccd48bcb8b111bdc3de888b58c74639dfb034a357d0f206d\"\n\n[[package]]\nname = \"embedded-sdmmc\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f4d14180a76a8af24a45a0e1a4f9c97491b05a3b962d59d5e4ce0e6ab103736\"\ndependencies = [\n \"byteorder\",\n \"embedded-hal 0.2.7\",\n \"log 0.4.22\",\n]\n\n[[package]]\nname = \"emulation-qemu-riscv-main\"\nversion = \"0.1.0\"\ndependencies = [\n \"ns16550a\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a12e6657c4c97ebab115a42dcee77225f7f482cdd841cf7088c657a42e9e00e7\"\ndependencies = [\n \"atty\",\n \"humantime\",\n \"log 0.4.22\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"fdt\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784a4df722dc6267a04af36895398f59d21d07dce47232adf31ec0ff2fa45e67\"\n\n[[package]]\nname = \"hash32\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0c35f58762feb77d74ebe43bdbc3210f09be9fe6742234d573bacc26ed92b67\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"heapless\"\nversion = \"0.7.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdc6457c0eb62c71aac4bc17216026d8410337c4126773b9c5daba343f17964f\"\ndependencies = [\n \"atomic-polyfill\",\n \"hash32\",\n \"rustc_version\",\n \"spin\",\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"jh71xx-hal\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1dacf8c6ce98998eb97cb2d40c6c69979a58817e25126fdde8cc53e51414fbe0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"critical-section\",\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"embedded-io\",\n \"heapless\",\n \"jh71xx-pac\",\n \"nb 1.1.0\",\n \"riscv\",\n \"riscv-rt\",\n]\n\n[[package]]\nname = \"jh71xx-pac\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38a471fbd5d226c6a262f5548a7ef597e2160fa860c113bf070005b83679d74c\"\ndependencies = [\n \"critical-section\",\n \"riscv\",\n \"riscv-rt\",\n \"vcell\",\n]\n\n[[package]]\nname = \"layoutflash\"\nversion = \"0.1.0\"\ndependencies = [\n \"fdt\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.161\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9489c2807c139ffd9c1794f4af0ebe86a828db53ecdc7fea2111d0fed085d1\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"nb 1.1.0\",\n \"spin\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lzss\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffcbd9e87fc27b574d4e37d4bf0d302828391f80ea3762dfce02d808fa257a01\"\ndependencies = [\n \"void\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"nb\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"801d31da0513b6ec5214e9bf433a77966320625a37860f910be265be6e18d06f\"\ndependencies = [\n \"nb 1.1.0\",\n]\n\n[[package]]\nname = \"nb\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d5439c4ad607c3c23abf66de8c8bf57ba8adcd1f129e699851a6e43935d339d\"\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"ns16550a\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c95cfa77c5f85e4f876790f6f127a0b7599ec92723600b17da4c5c05845bd2ce\"\n\n[[package]]\nname = \"oreboot-arch\"\nversion = \"0.1.0\"\ndependencies = [\n \"log 0.1.0\",\n \"riscv\",\n \"rustsbi\",\n \"sbi-spec 0.0.4\",\n]\n\n[[package]]\nname = \"oreboot-cpu\"\nversion = \"0.1.0\"\ndependencies = [\n \"oreboot-arch\",\n \"raw-cpuid\",\n]\n\n[[package]]\nname = \"oreboot-nezha-bt0\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"log 0.1.0\",\n \"nb 1.1.0\",\n \"oreboot-soc\",\n \"riscv\",\n \"spin\",\n]\n\n[[package]]\nname = \"oreboot-nezha-main\"\nversion = \"0.1.0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"lazy_static\",\n \"log 0.1.0\",\n \"nb 1.1.0\",\n \"oreboot-arch\",\n \"oreboot-soc\",\n \"oreboot_compression\",\n \"riscv\",\n \"rustsbi\",\n \"sbi-spec 0.0.4\",\n \"spin\",\n \"vcell\",\n]\n\n[[package]]\nname = \"oreboot-soc\"\nversion = \"0.1.0\"\ndependencies = [\n \"consts\",\n \"d1-pac\",\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"embedded-sdmmc\",\n \"heapless\",\n \"jh71xx-hal\",\n \"log 0.1.0\",\n \"nb 1.1.0\",\n \"oreboot-arch\",\n \"oreboot-cpu\",\n \"raw-cpuid\",\n \"tock-registers\",\n \"util\",\n \"vcell\",\n]\n\n[[package]]\nname = \"oreboot_compression\"\nversion = \"0.1.0\"\ndependencies = [\n \"log 0.1.0\",\n \"lzss\",\n]\n\n[[package]]\nname = \"pathdiff\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d61c5ce1153ab5b689d0c074c4e7fc613e942dfb7dd9eea5ab202d2ad91fe361\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"ptdump\"\nversion = \"0.1.0\"\ndependencies = [\n \"bit_field\",\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"r0\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd7a31eed1591dcbc95d92ad7161908e72f4677f8fabf2a32ca49b4237cbf211\"\n\n[[package]]\nname = \"raw-cpuid\"\nversion = \"10.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c297679cb867470fa8c9f67dbba74a78d78e3e98d7cf2b08d6d71540f797332\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38200e5ee88914975b69f657f0801b6f6dccafd44fd9326302a4aaeecfacb1d8\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"riscv\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa3145d2fae3778b1e31ec2e827b228bdc6abd9b74bb5705ba46dcb82069bc4f\"\ndependencies = [\n \"bit_field\",\n \"critical-section\",\n \"embedded-hal 0.2.7\",\n]\n\n[[package]]\nname = \"riscv-rt\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"102c52c89defde24dedf9ac077cc69df77b85aa2400dd2d5aad6eea6a6a5c089\"\ndependencies = [\n \"r0\",\n \"riscv\",\n \"riscv-rt-macros\",\n \"riscv-target\",\n]\n\n[[package]]\nname = \"riscv-rt-macros\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30f19a85fe107b65031e0ba8ec60c34c2494069fe910d6c297f5e7cb5a6f76d0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"riscv-target\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88aa938cda42a0cf62a20cfe8d139ff1af20c2e681212b5b34adb5a58333f222\"\ndependencies = [\n \"lazy_static\",\n \"regex\",\n]\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustsbi\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c74c6df5cecd1ddc81f953d100cee1111acd981535526d3e89d2854015cf93b\"\ndependencies = [\n \"riscv\",\n \"sbi-spec 0.0.5\",\n]\n\n[[package]]\nname = \"sbi-spec\"\nversion = \"0.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d4027cf9bb591a9fd0fc0e283be6165c5abe96cb73e9f0e24738c227f425377\"\ndependencies = [\n \"static_assertions\",\n]\n\n[[package]]\nname = \"sbi-spec\"\nversion = \"0.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a535b1f16d5517a020539569f7e37e61fad35ed0d5352f9fd7073304e2f2dc72\"\ndependencies = [\n \"static_assertions\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\ndependencies = [\n \"lock_api\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"starfive-visionfive1-bt0\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"log 0.1.0\",\n \"nb 1.1.0\",\n \"riscv\",\n \"spin\",\n]\n\n[[package]]\nname = \"starfive-visionfive1-main\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"nb 1.1.0\",\n \"riscv\",\n \"spin\",\n]\n\n[[package]]\nname = \"starfive-visionfive2-bt0\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"fdt\",\n \"jh71xx-hal\",\n \"jh71xx-pac\",\n \"layoutflash\",\n \"log 0.1.0\",\n \"nb 1.1.0\",\n \"oreboot-soc\",\n \"riscv\",\n \"spin\",\n]\n\n[[package]]\nname = \"starfive-visionfive2-main\"\nversion = \"0.1.0\"\ndependencies = [\n \"embedded-hal 1.0.0\",\n \"embedded-hal-nb\",\n \"nb 1.1.0\",\n \"oreboot-soc\",\n \"riscv\",\n \"spin\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.82\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83540f837a8afc019423a8edb95b52a8effe46957ee402287f4292fae35be021\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"tock-registers\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"696941a0aee7e276a165a978b37918fd5d22c55c3d6bda197813070ca9c0f21c\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"util\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"vcell\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77439c1b53d2303b20d9459b1ade71a83c716e3f9c34f3228c00e6f185d6c002\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"xtask\"\nversion = \"0.1.0\"\ndependencies = [\n \"byteorder\",\n \"clap\",\n \"clap-verbosity-flag\",\n \"crc\",\n \"ctrlc\",\n \"env_logger\",\n \"fdt\",\n \"layoutflash\",\n \"log 0.4.22\",\n \"lzss\",\n \"oreboot_compression\",\n \"pathdiff\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.7900390625,
          "content": "[workspace]\n# in general, avoid wildcards, to make sure we get only what we want.\nmembers = [\n  \"src/arch\",\n  \"src/console\",\n  \"src/cpu\",\n  \"src/soc\",\n\n  \"src/lib/compression\",\n  \"src/lib/consts\",\n  \"src/lib/log\",\n  \"src/lib/util\",\n  \"src/lib/layoutflash\",\n\n  \"src/mainboard/starfive/visionfive1/*\",\n  \"src/mainboard/starfive/visionfive2/*\",\n  \"src/mainboard/sunxi/nezha/*\",\n  \"src/mainboard/emulation/qemu-riscv/*\",\n\n  \"xtask\",\n]\ndefault-members = [\"xtask\"]\nresolver = \"2\"\n\n[profile.release]\nopt-level = 'z' # Optimize for size.\nlto = true\n# Leave debug symbol information on release compilation mode\n# That's okay, these symbols won't appear on flash binary\ndebug = true\n\n[profile.dev]\nopt-level = 1 # Use slightly better optimizations.\noverflow-checks = false # Disable integer overflow checks.\nlto = true\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.01953125,
          "content": "help:\n\t@echo 'Make options:'\n\t@echo 'firsttime -- for the first time you run make'\n\t@echo 'update -- to update the install'\n\t@echo 'format -- to format all files'\n\t@echo 'checkformat -- to format all files with checking enabled'\n\t@echo '  # Build a single board'\n\t@echo '  make VENDOR/BOARD'\n\t@echo '  # This is equivalent to'\n\t@echo '  cd src/mainboard/VENDOR/BOARD && make'\n\t@echo '  # Build all mainboards'\n\t@echo '  make mainboards'\n\t@echo '  # Build everything in parallel'\n\t@echo '  make -j mainboards'\n\t@echo '  # Build debug mode'\n\t@echo '  MODE=debug make mainboards'\n\n# Turn them all off. We'll turn them back on to try to get to working tests.\nMAINBOARDS := $(wildcard src/mainboard/*/*/Makefile)\n\n# NOTE: These are the host utilities, requiring their own recent Rust version.\nRUST_VER := 1.78\nBINUTILS_VER := 0.3.6\nTARPAULIN_VER := 0.27.1\nDPRINT_VER := 0.41.0\n\nCARGOINST := rustup run --install $(RUST_VER) cargo install\n\n.PHONY: $(MAINBOARDS)\nmainboards: $(MAINBOARDS)\n$(MAINBOARDS):\n\tmake --no-print-directory -C $(dir $@) cibuild\n\nfirsttime:\n\t$(CARGOINST) $(if $(BINUTILS_VER),--version $(BINUTILS_VER),) cargo-binutils\n\t$(CARGOINST) $(if $(TARPAULIN_VER),--version $(TARPAULIN_VER),) cargo-tarpaulin\n\t$(CARGOINST) $(if $(DPRINT_VER),--version $(DPRINT_VER),) dprint\n\nnexttime:\n\t$(CARGOINST) --force $(if $(BINUTILS_VER),--version $(BINUTILS_VER),) cargo-binutils\n\t$(CARGOINST) --force $(if $(TARPAULIN_VER),--version $(TARPAULIN_VER),) cargo-tarpaulin\n\t$(CARGOINST) --force $(if $(DPRINT_VER),--version $(DPRINT_VER),) dprint\n\n\ndebiansysprepare:\n\tsudo apt-get install \\\n\t\tdevice-tree-compiler \\\n\t\tpkg-config \\\n\t\tlibssl-dev \\\n\t\tllvm-dev \\\n\t\tlibclang-dev \\\n\t\tclang \\\n\t\tqemu-system-x86 \\\n\t\tbinutils-riscv64-unknown-elf \\\n\t\tlibudev-dev \\\n\n\t# -y makes it non-interactive.\n\tcurl https://sh.rustup.rs -sSf | sh -s -- -y\n\n.PHONY: ciprepare debiansysprepare firsttime\nciprepare: debiansysprepare firsttime\n\nupdate:\n\trustup update\n\n# NOTE: do NOT use the cargo command in targets below.\n# ALWAYS USE MAKE!\n\nALLMAKEFILE := \\\n\t$(wildcard payloads/Makefile) \\\n\t$(wildcard payloads/*/Makefile) \\\n\t$(wildcard payloads/*/*/Makefile) \\\n\t$(wildcard payloads/*/*/*/Makefile) \\\n\t$(wildcard payloads/*/*/*/*/Makefile) \\\n\t$(wildcard src/Makefile) \\\n\t$(wildcard src/*/Makefile) \\\n\t$(wildcard src/*/*/Makefile) \\\n\t$(wildcard src/*/*/*/Makefile) \\\n\t$(wildcard src/*/*/*/*/Makefile)\n\n# Ron still doesn't understand this\nTEST_ALL_MAKE_DEFAULT := $(patsubst %/Makefile,%/Makefile.default,$(ALLMAKEFILE))\n$(TEST_ALL_MAKE_DEFAULT):\n\tmake --no-print-directory -C $(dir $@) default\n.PHONY: testdefault $(TEST_ALL_MAKE_DEFAULT)\ntestdefault: $(TEST_ALL_MAKE_DEFAULT)\n\n.PHONY: format\nformat:\n\tdprint fmt\n\n.PHONY: checkformat\ncheckformat:\n\tdprint check\n\n# There are a number of targets which can not test.\n# Once those are fixed, we can just use a test target.\nCRATES_TO_TEST := $(patsubst %/Makefile,%/Makefile.test,$(ALLMAKEFILE))\n$(CRATES_TO_TEST):\n\tmake --no-print-directory -C $(dir $@) test\n.PHONY: test $(CRATES_TO_TEST)\n\n# NOTE: In CI, we run tests with coverage report.\n# The individual crates' Makefiles use the `citest` target.\n# However, there are a number of crates which can not test.\n# Hence, `citest` either points to `coverage` or `skiptest`.\n# We use the LCOV format so that we can simply concatenate\n# the multiple reports. See ./Makefile.inc for details.\nCRATES_TO_CITEST := $(patsubst %/Makefile,%/Makefile.citest,$(ALLMAKEFILE))\n$(CRATES_TO_CITEST):\n\tmake --no-print-directory -C $(dir $@) citest\n.PHONY: test $(CRATES_TO_CITEST)\ncitest: $(CRATES_TO_CITEST)\n\t# concatenate all the results from the indidividual directories\n\tmkdir -p coverall\n\tfind . -name \"lcov.info\" -exec cat > coverall/lcov.txt {} +\n\n\n# TODO: Remove write_with_newline\nCRATES_TO_CLIPPY := $(patsubst %/Makefile,%/Makefile.clippy,$(ALLMAKEFILE))\n$(CRATES_TO_CLIPPY):\n\tmake --no-print-directory -C $(dir $@) ciclippy\n.PHONY: clippy $(CRATES_TO_CLIPPY)\nclippy: $(CRATES_TO_CLIPPY)\n\n# convenience target: this should be the full ci flow\n\ncheckandbuildall: ciprepare clippy checkformat test mainboards\n\techo \"Done CI!\"\n\nclean:\n\trm -rf $(TOP)/target\n"
        },
        {
          "name": "Makefile.inc",
          "type": "blob",
          "size": 1.8251953125,
          "content": "# This file is included by all Makefiles. The user is required to set\n# the path to OREBOOT.\nTOP         = $(OREBOOT)\nMODE       ?= release\nTOOLS_DIR   = $(TOP)/tools\n# Cargo will build the tools using the target from the .cargo directory which\n# does not work so well if you are cross-compiling. This shell one-liner gets\n# the target of the current system which can be passed via --target for\n# building tools\nTOOLS_TARGET = $(shell rustc -vV | sed -n -E 's/host: (.+)/\\1/p')\nCARGO_FLAGS = --verbose\n\n# Override variables depending on the build.\ninclude $(TOP)/Makefile.mode.$(MODE).inc\n\n$(shell echo \"***** Oreboot Build Config *****\" 1>&2)\n$(shell echo \"TOP          = $(TOP)\" 1>&2)\n$(shell echo \"MODE         = $(MODE)\" 1>&2)\n$(shell echo \"TARGET       = $(TARGET)\" 1>&2)\n$(shell echo \"TARGET_DIR   = $(TARGET_DIR)\" 1>&2)\n$(shell echo \"TOOLS_TARGET = $(TOOLS_TARGET)\" 1>&2)\n$(shell echo \"cargo --version  = $(shell cargo --version)\" 1>&2)\n$(shell echo \"rustc --version  = $(shell rustc --version)\" 1>&2)\n$(shell echo \"rustup --version = $(shell rustup --version)\" 1>&2)\n$(shell echo \"**********\" 1>&2)\n\n# The default target.\n# There can be several of these; a mainboard might specify\n# \"build something\" with a default:: target\ndefault::\n\n# format things\nformat:\n\tdprint fmt\n\ncheckformat:\n\tdprint check\n\n# Clippy is the standard rule\nclippy:\n\tcargo clippy -- -D warnings -A clippy::write_with_newline\n\nfix:\n\tcargo clippy --fix -- -D warnings -A clippy::write_with_newline\n\n# This is a temporary bandaid until clippy is fixed, for the\n# few boards that need it. To figure out which ones use it,\n# just git grep skipclippy\nskipclippy:\n\techo Not doing clippy for this target\n\n# Testing. A lot of directories can't test either, yet.\ntest:\n\tcargo test\n\nskiptest:\n\techo Not doing test for this target\n\ncoverage:\n\tcargo tarpaulin --out Lcov\n\nclean:\n\trm -rf $(TOP)/target\n"
        },
        {
          "name": "Makefile.mainboard.inc",
          "type": "blob",
          "size": 1.5205078125,
          "content": "VENDOR      = $(notdir $(shell dirname $(CURDIR)))\nBOARD       = $(notdir $(CURDIR))\nFIXED_DTFS  = $(TARGET_DIR)/$(VENDOR)-$(BOARD)-fixed-dtfs.dtb\nFLASHROM_PROGRAMMER ?= dediprog\nOBJCOPY    ?= rust-objcopy\n# ELF and BOOTBLOB are intermediate files while IMAGE is the final firmware\n# image ready to be flashed onto the machine.\nELF      = $(TARGET_DIR)/$(BOARD)\nBOOTBLOB = $(TARGET_DIR)/$(VENDOR)-$(BOARD)-bootblob.bin\nIMAGE    = $(TARGET_DIR)/$(VENDOR)-$(BOARD).bin\n\n$(shell echo \"VENDOR       = $(VENDOR)\" 1>&2)\n$(shell echo \"BOARD        = $(BOARD)\" 1>&2)\n\n$(IMAGE): $(BOOTBLOB) $(FIXED_DTFS)\n# These two environment variable parameters are used in fixed-dtfs.dts\n\techo \"Not running layoutflash any more, it needs to be in xtask\"\n\tBOOTBLOB=$(BOOTBLOB) FIXED_DTFS=$(FIXED_DTFS) echo NOT cargo run --target $(TOOLS_TARGET) --manifest-path $(TOOLS_DIR)/layoutflash/Cargo.toml -- $(FIXED_DTFS) $@\n\t@printf \"**\\n** Output: $@\\n**\\n\"\n\n$(BOOTBLOB): $(ELF)\n\t$(OBJCOPY) -O binary -R .bss $< $@\n\n$(FIXED_DTFS): fixed-dtfs.dts\n\tmkdir -p $(TARGET_DIR)\n\tdtc -W no-unit_address_vs_reg $< -O dtb -o $@\n\n# Re-run cargo every time.\n.PHONY: $(ELF)\n$(ELF):\n\tRUST_TARGET_PATH=$(TOP)/src/custom_targets cargo build --target \"$(TARGET)\" -Z build-std=core,alloc $(CARGO_FLAGS)\n\n# The default target: build the board.\ndefault:: mainboard\nmainboard: $(IMAGE)\n\n# The rest of this file are conveniences for debugging.\nobjdump: $(ELF)\n\trust-objdump -d $(ELF)\n\nstack-sizes: $(ELF)\n\tstack-sizes $(ELF)\n\nflash: $(IMAGE)\n\tsudo $(which flashrom) -V -w $(IMAGE) -p $(FLASHROM_PROGRAMMER)\n"
        },
        {
          "name": "Makefile.mode.debug.inc",
          "type": "blob",
          "size": 0.0458984375,
          "content": "TARGET_DIR = $(OREBOOT)/target/$(TARGET)/debug\n"
        },
        {
          "name": "Makefile.mode.release.inc",
          "type": "blob",
          "size": 0.072265625,
          "content": "CARGO_FLAGS += --release\nTARGET_DIR = $(OREBOOT)/target/$(TARGET)/release\n"
        },
        {
          "name": "Makefile.qemu.inc",
          "type": "blob",
          "size": 0.2734375,
          "content": "# This Makefile is included by src/mainboards/VENDOR/BOARD/Makefile for qemu\n# recipes.\n\nMONITOR ?= \"/dev/null\"\n\nrun: mainboard\n\t$(QEMU) $(QEMU_FLAGS)\n\ntrace: mainboard\n\t$(QEMU) -d guest_errors,in_asm,int $(QEMU_FLAGS)\n\ngdb: mainboard\n\t$(QEMU) -d guest_errors -s -S $(QEMU_FLAGS)\n"
        },
        {
          "name": "Makefile.renode.inc",
          "type": "blob",
          "size": 0.1513671875,
          "content": "# This Makefile is included by src/mainboards/VENDOR/BOARD/Makefile for renode\n# recipes.\n\nrenode_run: mainboard\n\techo $(IMAGE)\n\t$(RENODE) $(RENODE_FLAGS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.203125,
          "content": "# oreboot README\n\n[![Build Status](https://github.com/oreboot/oreboot/actions/workflows/build.yml/badge.svg)](https://github.com/oreboot/oreboot/actions/workflows/build.yml)\n\n![oreboot logo](Documentation/img/logo-small.png)\n\noreboot is a downstream fork of coreboot, i.e. oreboot is coreboot without 'c'.\n\noreboot is mostly written in Rust, with assembly where needed.\n\noreboot currently only plans to support LinuxBoot payloads.\n\n## Demos\n\n- [oreboot for ARM in QEMU](https://asciinema.org/a/Ne4Fwa4Wpt95dorEoVnHwiEkP)\n- [oreboot for RISC-V HiFive Unleashed in QEMU](https://asciinema.org/a/XnWkMWTABuajsbGPMMTefjuZ2)\n\n<details>\n  <summary>Output sample from oreboot on Allwinner D1</summary>\n\n```\noreboot 🦀\nv 13\ncpu_pll fa001000\ncpu_axi 5000100\ncpu_axi 5000100\nperi0_ctrl was: f8216300\nperi0_ctrl lock en\nperi0_ctrl PLLs\nperi0_ctrl set: f8216300\nDDR3@792MHz\ntest OK\n512M 🐏\nNOR flash: c2/2018\nload 00018000 bytes to 40000000: ➡️.\nload 00fc0000 bytes to 44000000: ➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️➡️.\nload 00010000 bytes to 41a00000: ➡️.\n{ɕ serial uart0 initialized\nRISC-V vendor 5b7 arch 0 imp 0\n==== platform CSRs ====\n   MXSTATUS  c0408000\n   MHCR      00000109\n   MCOR      00000002\n   MHINT     00004000\nsee C906 manual p581 ff\n=======================\nSet up extension CSRs\n==== platform CSRs ====\n   MXSTATUS  c0638000\n   MHCR      0000017f\n   MCOR      00000003\n   MHINT     0000610c\nsee C906 manual p581 ff\n=======================\ntimer init\nreset init\nipi init\nRustSBI version 0.3.1\n.______       __    __      _______.___________.  _______..______   __\n|   _  \\     |  |  |  |    /       |           | /       ||   _  \\ |  |\n|  |_)  |    |  |  |  |   |   (----`---|  |----`|   (----`|  |_)  ||  |\n|      /     |  |  |  |    \\   \\       |  |      \\   \\    |   _  < |  |\n|  |\\  \\----.|  `--'  |.----)   |      |  |  .----)   |   |  |_)  ||  |\n| _| `._____| \\______/ |_______/       |__|  |_______/    |______/ |__|\nPlatform Name: T-HEAD Xuantie Platform\nImplementation: oreboot version 0.1.0\n[rustsbi] misa: RV64ACDFIMSUVX\n[rustsbi] mideleg: ssoftstimersext (0x222)\n[rustsbi] medeleg: imaialmalasmasauecallipagelpagespage(0xb1f3)\n[rustsbi] mie: msoft ssoft mtimer stimer mext sext (00000aaa)\nPMP0     0x0 - 0x40000000 (A,R,W,X)\nPMP1     0x40000000 - 0x40200000 (A,R)\nPMP2     0x40200000 - 0x80000000 (A,R,W,X)\nPMP3     0x80000000 - 0x80200000 (A,R)\nPMP4     0x80200000 - 0xfffff800 (A,R,W,X)\nPMP8     0x0 - 0x0 (A,R,W,X)\nDTB looks fine, yay!\nDecompress 12375521 bytes from 0x44000004 to 0x40200000, reserved 25165824 bytes\nSuccess, decompressed 21910144 bytes :)\nPayload looks like Linux Image, yay!\nDTB still fine, yay!\nHanding over to SBI, will continue at 0x40200000\nenter supervisor at 40200000 with DTB from 41a00000\n...\n[    0.000000] OF: fdt: Ignoring memory range 0x40000000 - 0x40200000\n[    0.000000] Machine model: Sipeed Lichee RV Dock\n[    0.000000] earlycon: sbi0 at I/O port 0x0 (options '')\n[    0.000000] printk: bootconsole [sbi0] enabled\n[    0.000000] Zone ranges:\n[    0.000000]   DMA32    [mem 0x0000000040200000-0x000000005fffffff]\n[    0.000000]   Normal   empty\n[    0.000000] Movable zone start for each node\n[    0.000000] Early memory node ranges\n[    0.000000]   node   0: [mem 0x0000000040200000-0x000000005fffffff]\n[    0.000000] Initmem setup node 0 [mem 0x0000000040200000-0x000000005fffffff]\n[    0.000000] riscv: SBI specification v1.0 detected\n[    0.000000] riscv: SBI implementation ID=0x4 Version=0x301\n[    0.000000] riscv: SBI TIME extension detected\n[    0.000000] riscv: SBI IPI extension detected\n[    0.000000] riscv: SBI SRST extension detected\n[    0.000000] riscv: base ISA extensions acdfim\n[    0.000000] riscv: ELF capabilities acdfim\n[    0.000000] percpu: Embedded 17 pages/cpu s31912 r8192 d29528 u69632\n[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 128520\n[    0.000000] Kernel command line: console=tty0 console=ttyS0,115200 loglevel=7 earlycon=sbi\n```\n\n</details>\n\n## Rust Embedded\n\n![Rust Embedded Working Group Logo](Documentation/img/rust-embedded-logo.png)\n\nWe build on top of the abstractions from the [Rust Embedded Working Group](https://github.com/rust-embedded)'s model with its crates and traits, detailed\nin [their book](https://docs.rust-embedded.org/book/portability/index.html).\n\nIn a nutshell: ![Rust Embedded Model](Documentation/img/rust-embedded-model.png)\n\n## Vendor support\n\nSoC vendors are expected to provide documentation to their cores, peripherals\nand other blocks and/or their SVD files, so that we can generate the PAC and HAL\ncrates, or ideally, the vendor should _provide and maintain_ those as well.\n\nThe Rust Embedded book offers [design patterns and implementation guidelines](https://docs.rust-embedded.org/book/design-patterns/hal/index.html) as well as\na [glossary](https://docs.rust-embedded.org/book/appendix/glossary.html) to gain\nan understanding of the structure.\n\n## Boot Flow and Setup\n\nTo get a general understanding of how oreboot and firmware in general works,\nhave a look at the [boot flow documentation](Documentation/boot-flow.md). It\ndescribes how firmware is stored and boots up on a platform / SoC.\n\n## Dilemma of drivers\n\nNote that oreboot does not aim to turn into its own operating system.\nAccordingly, we intend to keep the amount and functionality of drivers low.\nHowever, by design of SoCs, we do have to implement something to load code:\n\n- SPI flash, SD cards and eMMC are rather simple to load from, but require\n  special mechanisms and tools to write to the storage part\n- USB and ethernet are more flexible for development as they allow for loading\n  code from another machine, but are more complex to implement\n- UART is simple for data transfer, but very slow for larger payloads, such as\n  a Linux kernel\n\nIn many cases, no full driver is needed, since we only need to e.g. read from\nstorage, and we need no rich file systems. To avoid colliding with the needs and\nspecifics of an OS, we recommend clearly separating storage parts holding the\nfirmware and operating system, respectively. For example, put the firmware in a\nSPI flash and the OS on an NVMe SSD.\n\n## Getting oreboot\n\nClone this repo and enter its directory, i.e.:\n\n```sh\ngit clone https://github.com/oreboot/oreboot.git\ncd oreboot\n```\n\n## Prerequisites\n\nIn general, you will need the following packages installed:\n\n- `device-tree-compiler`\n- `pkg-config`\n- `libssl`\n- `rustup`\n\nFor Debian based systems, there is a make target to install those, which pulls\n`rustup` through curl from https://sh.rustup.rs:\n\n```sh\nmake debiansysprepare\n```\n\nOtherwise, install the package through your system package manager.\n\n## Setting up the toolchain\n\nRegardless of your OS, you will need to install the toolchain for oreboot.\nThis command only needs to be done once but it is safe to do it repeatedly.\n\n```sh\nmake firsttime\n```\n\n## Keeping build tools up to date\n\nEach time you start to work with oreboot, or even daily:\n\n```sh\ncd oreboot\nmake update\n```\n\nYou should definitely do this before reporting any issues.\n\n## Developing oreboot\n\nThere are two different things in the project:\n\n1. `src/mainboards/*` the actual targets; those depend on and share crates, which\n   can be drivers, SoC init code, and similar. For mainboards, `Cargo.lock`\n   **must** be tracked.\n2. `src/*` everything else; these are the aforementioned crates, for which, we\n   do not track the `Cargo.lock` files.\n\nChecking in a mainboard's `Cargo.lock` file records the state of its dependencies\nat the time of a successful build, enabling reproducibility. Ideally, a lock file\nis updated follwoing successful boot on hardware.\n\nFor more, see: https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries\n\nWhen creating a new mainboard, looking at how others are set up for the same\narchitecture is a good start. Be aware that oreboot is targeting bare metal, so\nthere is no standard library available.\n\n## Building oreboot\n\nTo build oreboot for a specific platform, do this:\n\n```\n# Go to the mainboard's directory\ncd src/mainboard/sunxi/nezha\n# Build the mainboard target\nmake mainboard\n# View disassembly\nmake objdump\n# Run from RAM without flashing\nmake run\n# Flash to the board\nmake flash\n```\n\nThe root `Makefile` allows you to quickly build all platforms:\n\n```\n# build all mainboards\nmake mainboards\n# build everything in parallel\nmake -j mainboards\n```\n\n## QEMU\n\n```\n# Install QEMU for your target platform, e.g. x86\nsudo apt install qemu-system-x86\n\n# Build release build and start with QEMU\ncd src/mainboard/emulation/qemu-q35 && make run\n# Quit qemu with CTRL-A X\n```\n\nTo build QEMU from source for RISC-V:\n\n```\ngit clone https://github.com/qemu/qemu && cd qemu\nmkdir build-riscv64 && cd build-riscv64\n../configure --target-list=riscv64-softmmu\nmake -j$(nproc)\n# QEMU binary is at riscv64-softmmu/qemu-system-riscv64\n```\n\nTo build QEMU from source for aarch64:\n\n```\ngit clone https://github.com/qemu/qemu && cd qemu\nmkdir build-aarch64 && cd build-aarch64\n../configure --target-list=aarch64-softmmu\nmake -j$(nproc)\n# QEMU binary is at aarch64-softmmu/qemu-system-aarch64\n```\n\n## Mainboards\n\nSimilar to coreboot, the structure in oreboot is per vendor and mainboard.\nMultiple architectures and SoCs are supported respectively, and their common\ncode is shared between the boards. Boards may have variants if minor deviations\nwould otherwise cause too much code duplication.\n\n### Emulation\n\n- `qemu-riscv`\n\n### Hardware\n\n#### RISC-V\n\n##### Allwinner D1 SoC\n\n- Sipeed Lichee RV Dock / Dock Pro\n- MangoPi MQ-Pro\n- DongshanPi Nezha STU\n- Allwinner Nezha\n\n### Previous Implementations\n\nFor reference, [earlier approaches are documented](graveyard.md). Have a look at\nthose for x86 and Arm platforms and mainboards.\n\n### Parked for Revival\n\nEarlier emulation targets have been parked in `src.broken/mainboard/emulation/`.\nThey are supposed to provide a general understanding of each architecture that\noreboot seeks to support:\n\n- `qemu-armv7`\n- `qemu-aarch64`\n- `qemu-q35`\n\n## Ground Rules\n\n- `Makefile`s must be simple. Use `xtask` instead for control flow, e.g., adding\n  headers or checksums to the binaries, sitchting images, etc..\n- `Cargo.toml` in the respective `src/mainboard/$VENDOR/$BOARD` (sub)directories\n  allow for board-specific dependencies and building all stages in parallel.\n- All code and markup is auto-formatted with `make format` with no exceptions.\n  A CI check will tell if a change does not adhere to the formatting rules.\n- There will be no code written in C. We write all code in Rust.\n- We will not run our own Gerrit. We are using GitHub for now, and the GitHub\n  Pull Request review mechanism.\n- We will not run our own Jenkins. We will use the most appropriate CI; for\n  now, that is GitHub, but we will be flexible.\n\n## Copyright and License\n\nThe copyright on oreboot is owned by quite a large number of individual\ndevelopers and companies. Please check the individual source files for details.\n\noreboot is licensed under the terms of the GNU General Public License (GPL).\nSome files are licensed under the \"GPL (version 2, or any later version)\",\nand some files are licensed under the \"GPL, version 2\". For some parts, which\nwere derived from other projects, other (GPL-compatible) licenses may apply.\nPlease check the individual source files for details.\n\nThis makes the resulting oreboot images licensed under the GPL, version 2.\n"
        },
        {
          "name": "dprint.json",
          "type": "blob",
          "size": 0.5576171875,
          "content": "{\n  \"exec\": {\n    \"commands\": [{\n      \"command\": \"rustfmt --edition 2021\",\n      \"exts\": [\"rs\"]\n    }]\n  },\n  \"json\": {\n  },\n  \"markdown\": {\n  },\n  \"toml\": {\n  },\n  \"includes\": [\"**/*.{json,md,toml,rs}\"],\n  \"excludes\": [\n    \"**/*-lock.json\",\n    \"target/\",\n    \"3rdparty/\"\n  ],\n  \"plugins\": [\n    \"https://plugins.dprint.dev/exec-0.4.4.json@c207bf9b9a4ee1f0ecb75c594f774924baf62e8e53a2ce9d873816a408cecbf7\",\n    \"https://plugins.dprint.dev/json-0.19.1.wasm\",\n    \"https://plugins.dprint.dev/markdown-0.16.3.wasm\",\n    \"https://plugins.dprint.dev/toml-0.5.4.wasm\"\n  ]\n}\n"
        },
        {
          "name": "graveyard.md",
          "type": "blob",
          "size": 1.9619140625,
          "content": "# oreboot Graveyard\n\nWe iteratively walk through various approaches to oreboot's design.\nEarlier attempts are documented below for reference. The code may still be\nuseful in general, though requires rework to fit into the current design.\n\n## Removals\n\nThe following mainboards have been removed:\n\n- Aspeed ast25x0\n- Nuvoton npcm7xx\n- OpenTitan crb, [Documentation](Documentation/opentitan/README.md)\n- SiFive HiFive Unleashed, [Documentation](Documentation/sifive/setup.md)\n\n## History\n\n```\nPath                               Deleting Commit\n================================== ========================================\nsrc/lib/uefi                       ee20512302caca7395c08d6145d412ece3879f1f\n3rdparty/fsp                       ee20512302caca7395c08d6145d412ece3879f1f\n3rdparty/fspsdk                    ee20512302caca7395c08d6145d412ece3879f1f\nsrc/vendorcode/fsp                 d9959f3d5851e1237066f31ece7be0c7f8827413\nsrc/mainboard/emulation/qemu-fsp   0d6302b7b101da1191c3e20352b302d0c684e9b4\nsrc/mainboard/emulation/qemu-fsp32 0d6302b7b101da1191c3e20352b302d0c684e9b4\nsrc/vendorcode/fsp/qemu            0d6302b7b101da1191c3e20352b302d0c684e9b4\nsrc/mainboard/aaeon/upxtreme       95b00cf07894ac3cbdcb70af6c8acc84d26f057d\nsrc/vendorcode/fsp/coffeelake      95b00cf07894ac3cbdcb70af6c8acc84d26f057d\nsrc/vendorcode/fsp/tigerlake       fc291b5c967170edf9414822c3e2195b3e93020d\n\nsrc/mainboard/aaeon/upsquared\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/amd/romecrb\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/asrock/a300m-stx\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/ast/ast25x0\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/google/trembyle\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/nuvoton/npcm7xx\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/opentitan/crb\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/seeed/beaglev\tc00613705d5de9235835708a6b2a3ab76da23168\nsrc/mainboard/sifive/hifive\tc00613705d5de9235835708a6b2a3ab76da23168\n```\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.181640625,
          "content": "[toolchain]\nchannel = \"nightly-2024-10-15\"\ncomponents = [\"rust-src\", \"llvm-tools\", \"rustfmt\", \"clippy\"]\ntargets = [\n  \"riscv32imac-unknown-none-elf\",\n  \"riscv64imac-unknown-none-elf\",\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src.broken",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}