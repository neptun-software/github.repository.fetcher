{
  "metadata": {
    "timestamp": 1736709309061,
    "page": 692,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cloudflare/lol-html",
      "stars": 1581,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2060546875,
          "content": "# Exclude HTML files from GitHub's language statistics\n# https://github.com/github/linguist#using-gitattributes\ntests/data/** linguist-vendored\nbenches/data/** linguist-vendored\nfuzz/corpus/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0556640625,
          "content": ".DS_Store\n/.vscode/\n/.idea/\nCargo.lock\ntarget\n**/*.rs.bk\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.125,
          "content": "[submodule \"tests/data/html5lib-tests\"]\n\tpath = tests/data/html5lib-tests\n\turl = https://github.com/html5lib/html5lib-tests.git\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.0322265625,
          "content": "# reset user settings to default\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.5634765625,
          "content": "# Changelog\n\n## v2.2.0\n\n - Updated cssparser and selectors dependencies\n - Adopted `cargo-c` for building the C API\n - Added WASM/JS API\n - An invalid `/>` syntax will be removed when content is added to an HTML element\n\n## v2.1.0\n\n- Added streaming handlers.\n- Only allow changing the charset once with the `<meta>` tag, in accordance with the HTML spec.\n- Fixed parsing of invalid elements in `<svg>` and `<math>`.\n\n## v2.0.0\n\n- Added the ability for the rewriter to be [`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html).\n  The `send` module contains the utilities for that.\n\n## v1.2.1\n\n- Remove unmaintained `safemem` dependency.\n\n## v1.2.0\n\n- Expose `is_self_closing` and `can_have_content` in C api.\n- Make `ElementContentHandlers` and `DocumentContentHandlers` fields public.\n- Add missing docs to public API.\n\n## v1.1.1\n\n### Fixed\n\n- Ensure that `TagScanner::is_in_end_tag` resets when changing parsers.\n\n## v1.1.0\n\n### Added\n\n- Added ability to get the tag and attribute names with the original casing.\n\n## v1.0.1\n\n### Fixed\n\n- The C API's new `lol_html_element_add_end_tag_handler()` function now sets the last error retrievable by `lol_html_take_last_error()` if it is called on an element that can have no end tag.\n\n## v1.0.0\n\nYes, you got that right: this is the first 1.x release!  From now on you should expect this project to adhere to\nthe semantic versioning spec (we have been somewhat relaxed about that in the past).\n\n### Added\n\n* Added `Element::end_tag_handlers()` which allows better control over the end tag handlers.\n\n### Changed\n\n* Removed `Element::on_end_tag()` and `Element::add_on_end_tag()` in favor of the newly added\n  `Element::end_tag_handlers()`.\n\n## v0.4.0\n\n### Added\n\n- Added method `TextChunk::as_mut_str()` and `TextChunk::set_str()` for in-place modifications to the text in a\n  `TextChunk`. (#175)\n\n### Changed\n\n- Modified method `Element::on_end_tag()` to support multiple handlers. This is a breaking change since the old\n  semantics of the method was to overwrite any previously set handler. (#177)\n\n## v0.3.3\n\n### Added\n\n- Support dynamic charset change on meta tags in HtmlRewriter. (#162)\n- Add `Element::can_have_content()`. (#163)\n\n## v0.3.2\n\n### Added\n\n- Add `Doctype::remove`. (#129)\n- Add `Element::start_tag()` and `Element::is_self_closing()`. (#148)\n- Add mutation methods to `StartTag` and `EndTag`. (#148)\n- Implement `Eq` for all types that implement `PartialEq`. (#146)\n\n### Fixed\n\n- Changed the HTML parser to more closely match the spec. This only affects rewriters which modify HTML comments. (#128)\n\n## v0.3.1\n\n### Added\n\n- Add `Element::on_end_tag` (#97, #107, #124)\n\n### Changed\n\n- Change string allocators in the C API to return `lol_html_str_t`, not `lol_html_str_t*`. This was necessary to fix a memory leak in `lol_html_str_free`. (#115)\n- Update dependencies (#98, #103)\n\n### Fixed\n\n- Fix memory leaks in C API (#113, #115)\n\n## v0.3.0\n- Add unofficial Go bindings to the README (#77)\n- Update dependencies (#73)\n- Take `self` in HtmlRewriter::end (#68)\n- Refactor HTMLRewriter Settings to make `HTMLRewriter::new` infallible (#70)\n- Allow using `element!` in a separate expression from `rewrite_str` (#69)\n- Update to hashbrown 0.9 (#64)\n- Add Send+Sync constraint for ContentHandler Error\n- feat: Allow using either Settings or RewriteStrSettings (#57)\n- Fix unhappy clippy (#60)\n- Compile literal attribute name lowercase instead of value (#51)\n- Use more memory efficient nth-of-type tracking. (#49)\n- Minor cleanup from :nth-child (#48)\n- Add support for :nth-child selectors (#47)\n\n## v0.2.0\n- Added: `DocumentContentHandlers::end`.\n\n## v0.1.0\n- Initial release\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.869140625,
          "content": "[package]\nname = \"lol_html\"\nversion = \"2.2.0\"\nauthors = [\"Ivan Nikulin <inikulin@cloudflare.com, ifaaan@gmail.com>\"]\nlicense = \"BSD-3-Clause\"\ndescription = \"Streaming HTML rewriter/parser with CSS selector-based API\"\nrepository = \"https://github.com/cloudflare/lol-html\"\ndocumentation = \"https://docs.rs/lol-html\"\ncategories = [\"parser-implementations\", \"web-programming\"]\nkeywords = [\"html\", \"css-selectors\", \"parser\", \"rewriter\", \"streaming\"]\nreadme = \"README.md\"\ninclude = [\"/Cargo.toml\", \"/LICENSE\", \"/README.md\", \"/media\", \"/src\"]\nedition = \"2021\"\nrust-version = \"1.80\"\n\n[lib]\n# Disable libtest to make sure criterion can parse the command line flags.\n# See https://bheisler.github.io/criterion.rs/book/faq.html and https://github.com/rust-lang/rust/issues/47241.\nbench = false\n\n[features]\ndebug_trace = []\n# Unstable: for internal use only\nintegration_test = []\n\n[[bench]]\nharness = false\nname = \"bench\"\n\n[dependencies]\nbitflags = \"2.0.0\"\ncfg-if = \"1.0.0\"\ncssparser = \"0.29\"\nencoding_rs = \"0.8.13\"\nmemchr = \"2.1.2\"\nhashbrown = \"0.15.0\"\nmime = \"0.3.16\"\nselectors = \"0.24\"\nthiserror = \"2.0\"\n\n[dev-dependencies]\ncriterion = \"0.5.1\"\n# Needed for criterion <= v0.5.1. See https://github.com/bheisler/criterion.rs/pull/703.\nclap = { version = \"4.5.21\", features = [\"help\"] }\nglob = \"0.3.0\"\nhtml5ever = \"0.29\"\nmarkup5ever_rcdom = \"0.5.0-unofficial\"\nhashbrown = { version = \"0.15.0\", features = [\"serde\"] }\nserde = \"1.0.126\"\nserde_derive = \"1.0.19\"\nserde_json = \"1.0.65\"\nstatic_assertions = \"1.1.0\"\nrand = \"0.8.5\"\nitertools = \"0.14\"\n\n[lints.rust]\nkeyword_idents = { level = \"deny\", priority = 1 }\nfor_loops_over_fallibles = \"deny\"\nunit_bindings = \"deny\"\nabsolute_paths_not_starting_with_crate = \"warn\"\nelided_lifetimes_in_paths = \"warn\"\nmacro_use_extern_crate = \"warn\"\nmeta_variable_misuse = \"warn\"\nredundant_lifetimes = \"warn\"\ntrivial_numeric_casts = \"warn\"\nunnameable_types = \"warn\"\nunused_qualifications = \"warn\"\n"
        },
        {
          "name": "DEVELOPING.md",
          "type": "blob",
          "size": 1.451171875,
          "content": "# Developing\n\n## Testing\n\nTo run unit tests only (tests defined in `/src`):\n\n```\ncargo test\n```\n\nTo run all the available tests including integration tests, C API tests and linting:\n\n```\n./scripts/test.sh\n```\n\nTo run only those tests that contain a `{substring}` in their name:\n\n```\n./scripts/test.sh {substring}\n```\n\n## Running benchmarks\n\n```\ncargo bench\n```\n\nTo run only those benchmarks that contain a `{substring}` in their name:\n\n```\ncargo bench {substring}\n```\n\nTest report can be found in the `target/criterion/report/index.html` file.\n\n## Useful debugging tools\n\n### HTML parser tracer\n\nThe tool provides comprehensive trace information about parsing process of the given HTML input. For usage information run:\n\n```\n./scripts/parser_trace.sh -- -h\n```\n\n### CSS selector VM's AST printer\n\nThe tool prints selector VM's program AST for the given list of CSS selectors. CSS selector list should be specified in the JSON format:\n\n```\n./scripts/selectors_ast.sh '[\"selector1\", \"selector2\", ...]'\n```\n\n## Fuzzing\n\n### Fuzzing with [cargo-fuzz](https://rust-fuzz.github.io/book/cargo-fuzz.html)\n**NOTE:** requires Rust nightly.\n\nRun fuzzing for the crate:\n\n```\n./scripts/fuzz_with_libfuzzer.sh\n```\n\nRun fuzzing for C API:\n\n```\n./scripts/fuzz_c_api_with_libfuzzer.sh\n```\n\n### Fuzzing with [afl](https://rust-fuzz.github.io/book/afl.html)\n\n```\n./scripts/fuzz_with_afl.sh\n```\n\n### Fuzzing with [honggfuzz](https://github.com/rust-fuzz/honggfuzz-rs)\n\n```\n./scripts/fuzz_with_hongg.sh\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4521484375,
          "content": "Copyright (C) 2019, Cloudflare, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3896484375,
          "content": "# LOL HTML\n\n<p align=\"center\">\n    <a href=\"https://github.com/cloudflare/lol-html\">\n        <img src=\"media/logo.png\" alt=\"The logo is generated from https://openmoji.org/data/color/svg/1F602.svg by Emily Jäger which is licensed under CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)\" style=\"width:472px; height: 375px\" />\n    </a>\n</p>\n\n\n***L**ow **O**utput **L**atency streaming **HTML** rewriter/parser with CSS-selector based API.*\n\nIt is designed to modify HTML on the fly with minimal buffering. It can quickly handle very large\ndocuments, and operate in environments with limited memory resources. More details can be found in the [blog post](https://blog.cloudflare.com/html-parsing-2/).\n\nThe crate serves as a back-end for the HTML rewriting functionality of\n[Cloudflare Workers](https://www.cloudflare.com/en-gb/products/cloudflare-workers/), but can be used\nas a standalone library with a convenient API for a wide variety of HTML rewriting/analysis tasks.\n\n## Documentation\n\nhttps://docs.rs/lol_html/\n\n## Bindings for other programming languages\n- [C](https://github.com/cloudflare/lol-html/tree/master/c-api)\n- [Lua](https://github.com/jdesgats/lua-lolhtml)\n- [Go](https://github.com/coolspring8/go-lolhtml) (unofficial, not coming from Cloudflare)\n- [Ruby](https://github.com/gjtorikian/selma) (unofficial, not coming from Cloudflare)\n\n## Example\n\nRewrite insecure hyperlinks:\n\n```rust\nuse lol_html::{element, HtmlRewriter, Settings};\n\nfn main() -> Result<(), Box<dyn std::error::Error>> {\n    let mut output = vec![];\n\n    let mut rewriter = HtmlRewriter::new(\n        Settings {\n            element_content_handlers: vec![\n                element!(\"a[href]\", |el| {\n                    let href = el\n                        .get_attribute(\"href\")\n                        .expect(\"href was required\")\n                        .replace(\"http:\", \"https:\");\n\n                    el.set_attribute(\"href\", &href)?;\n\n                    Ok(())\n                })\n            ],\n            ..Settings::new()\n        },\n        |c: &[u8]| output.extend_from_slice(c)\n    );\n\n    rewriter.write(b\"<div><a href=\")?;\n    rewriter.write(b\"http://example.com>\")?;\n    rewriter.write(b\"</a></div>\")?;\n    rewriter.end()?;\n\n    assert_eq!(\n        String::from_utf8(output)?,\n        r#\"<div><a href=\"https://example.com\"></a></div>\"#\n    );\n    Ok(())\n}\n```\n\n## License\n\nBSD licensed. See the [LICENSE](LICENSE) file for details.\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "c-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "js-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}