{
  "metadata": {
    "timestamp": 1736709325135,
    "page": 727,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Relm4/Relm4",
      "stars": 1521,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": ".vscode\n.idea\ntarget/\nCargo.lock\nrelm4-examples/.recent_files\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 24.0625,
          "content": "# Changelog\n\n## Unreleased\n\n### Added\n\n+ core: Add convenience methods for setting the active `StackPage` in `FactoryVecDeque` and `FactoryHashMap`\n+ core: Impl `Binding` for `gtk::CheckButton`\n\n### Added\n\n+ core: Add method `FactoryVecDeque::extend` to append multiple components efficiently.\n\n### Fixed\n\n+ example \"tracker\": Display identical background when initial icons are in fact identical.\n\n## 0.9.1 - 2024-10-11\n\n### Added\n\n+ core: Add gnome_47 feature flag for GNOME 47\n\n### Changed\n\n+ core: Add more async factory types to prelude\n+ core: Add `notify_filter_changed` to typed views to allow dynamic filters\n+ components: Hide recent button from `OpenButton` component when there is no entries\n\n### Fixed\n\n+ core: Target gtk/gnome_46 with the gnome_46 feature flag\n+ components: Replace deprecated `from_pixbuf()` usage\n+ components: Don't panic in `get_active_elem()` when calling on `SimpleComboBox` with empty variants\n+ core: Ignore sending error if async component was dropped quickly\n+ macros: Destructure fields of returned widgets\n+ examples: Add example that shows embedded logo\n\n## 0.9.0 - 2024-7-12\n\n### Added\n\n+ core: Add `set_align` and `set_expand` to `RelmWidgetExt` to set horizontal and vertical properties at once\n+ core: Add `allow_multiple_instances()` to `RelmApp` to allow multiple concurrent instances of the same application\n+ core: Add extension traits for `adw::PreferencesPage`\n+ examples: drop sub-components instead of hiding\n+ examples: Add example for using multiple windows\n+ core: Add functions to set priority of CSS stylesheets\n+ core: Rewrite `Alert` component from scratch to work with both GTK4 and Adwaita\n+ css: Add Adwaita style classes and colors\n+ core: Migrate codebase over to using `relm4-css`\n+ components: Increase flexibility of `Alert` component\n+ components: Make `Alert` component match styling of Adwaita's `MessageDialog` better\n\n### Changed\n\n+ core: Simplified internal code for runtime creation\n+ all: update dependencies\n\n### Fixed\n\n+ core: Don't require `Clone` and `Debug` for the generic action name parameter in `RelmAction`\n+ examples: show the dialog before closing in \"components\" example\n\n## 0.8.1 - 2024-3-13\n\n### Fixed\n\n+ docs: Fix builds on docs.rs (by upgrading relm4-icons)\n+ components: Don't use libadwaita by default\n\n## 0.8.0 - 2024-3-13\n\n### Changed\n\n+ core: Switch to regular async traits in favor of the async-trait crate\n+ all: Updated all dependencies to their latest version\n+ all: Increase MSRV to 1.75 to match the dependencies\n\n## 0.7.1 - 2024-3-13\n\n### Fixed\n\n+ docs: Fix builds on docs.rs (by upgrading relm4-icons)\n\n## 0.7.0 - 2024-3-13\n\n### Added\n\n+ core: Add `Toaster` as abstraction over `adw::ToastOverlay` for usage in the model of a component\n+ core: Add `TypedGridView` as idiomatic wrapper over `gtk::GridView`\n\n### Changed\n\n+ core: Remove unmaintained actions code\n+ core: Move libadwaita examples in regular examples folder\n+ core: Move `drawing` module to `abstractions`\n\n## 0.7.0-rc.1 - 2024-2-13\n\n### Added\n\n+ core: Implement more traits for libadwaita 1.4 widgets\n+ core: Add `size()` method to `DrawHandler` for easier access of width and height\n+ core: Add method to set `RelmAction` enabled or disabled\n+ core: Add method to get the inner `gio::SimpleAction` used by `RelmAction`\n+ core: Add resizeable/expandable column functionality to `RelmColumn` and `LabelColum`\n+ core: Pass the `Root` as owned parameter (without reference) to `Component::init`\n+ core: Add `visible_on_activate()` to `RelmApp` to prevent the app window from being visible immediately\n+ core: Make `into_stream()` method on `Receiver` public\n+ examples: Add libadwaita `Toast` example\n\n### Changed\n\n+ core: Make `set_global_css` and `set_global_css_from_file` methods of `RelmApp` to prevent calling them before initializing GTK \n+ core: Always pass the `Root` as owned parameter (without reference) (affects `Component::init`, `Factory::init_widgets`, `AsyncComponent::init_loading_widgets`, `AsyncFactory::init_widgets` and `AsyncFactory::init_loading_widgets`)\n+ core: Move internal initialization to `gtk::Application::startup` signal handler\n+ core: Remove deprecated RelmApp methods\n+ components: Increase flexibility of `Alert` component\n+ core: Bump version of libpanel dependency to 0.3\n+ all: Increase MSRV to 1.74 to match the dependencies\n\n### Fixed\n\n+ core: Report the correct dimensions in DrawingHandler when a scaling factor is set\n+ core: Setting the visibility of the main window isn't overridden by `RelmApp` anymore\n+ core: Fix timing of `transient_for()` when called after app init\n\n## 0.7.0-beta.2 - 2023-10-14\n\n### Added\n\n+ core: Add builder for initializing async factories\n+ core: Add `launch_default()` method to factory builders for launching with default parent widget\n+ core: Implement `RelmContainerExt` for libadwaita 1.4's `NavigationView`\n+ core: Implement `RelmSetChildExt` for libadwaita 1.4's `NavigationPage`\n\n### Changed\n\n+ core: Return `Result` from `FactorySender#output` method (so that errors are not silently unwrapped)\n+ core: Move parameters from `builder()` to `launch()` in factories for more consistency\n\n### Fixed\n\n+ core: Properly re-export factory builder types and document them\n\n## 0.7.0-beta.1 - 2023-9-23\n\n### Added\n\n+ core: Add `AsyncComponentStream` to supports streams for async components as well\n+ core: Builder pattern for initializing factories similar to regular components\n+ components: Add `SimpleComboRow` helper for libadwaita's `ComboRow`, analogous to `SimpleComboBox`\n+ components: Add an example for `SimpleComboRow`\n+ components: Add an example how to use `SimpleComboBox`\n\n### Changed\n\n+ core: Add `Init` type to the `WidgetTemplate` trait to allow passing data to `init()`\n+ core: Just require `AsRef<gtk::Window>` in `RelmApp::run`\n+ core: Add `AsRef<Root>` as requirement to the `WidgetTemplate` trait\n+ core: Removed `forward_to_parent` from `FactoryComponent`\n\n### Fixed\n\n+ macros: Improve spans in code generation to prevent false positive lints\n+ macros: Fix track attribute for template children\n+ macros: Allow trailing commas in the last match arm\n\n## 0.7.0-alpha.1 - 2023-8-28\n\n### Added\n\n+ core: Add gnome_45 feature flag for GNOME 45\n\n### Changed\n\n+ core: Bump version of gtk4 dependency to 0.7\n+ core: Bump version of libadwaita dependency to 0.5\n\n## 0.6.2 - 2023-8-27\n\n### Fixed\n\n+ macros: Add support for accessing nested template children\n\n## 0.6.1 - 2023-8-9\n\n### Added\n\n+ core: Add `TypedColumnView` as a typed wrapper for `gtk::ColumnView`\n+ core: Add `set_margin_vertical` and `set_margin_horizontal` to RelmWidgetExt\n\n### Fixed\n\n+ core: Don't panic when dropping components from asynchronous contexts\n+ core: Fix an issue with using `connect_open` on `gtk::Application`\n+ core: Use GNOME 42 as baseline feature to help with Ubuntu 22.04\n+ core: Fix compiler error when not using the \"macros\" feature\n+ macros: Allow trailing commas in view!\n+ macros: Allow multiple instances of the same template children\n+ components: Disable default features of relm4\n+ examples: Fix libadwaita tab examples\n\n### Changed\n\n+ examples: Add a separator to the libadwaita leaflet example.\n\n## 0.6.0 - 2023-5-31\n\n### Added\n\n+ core: Implemented `RelmRemoveExt` for `adw::ExpanderRow`.\n+ core: Implemented `ContainerChild` for `adw::ExpanderRow`.\n+ core: Add `TypedListView` as idiomatic wrapper over `gtk::ListView`\n\n### Fixed\n\n+ macros: Improve error messages for non-identifier parameter patterns\n\n## 0.6.0-beta.1 - 2023-4-19\n\n### Added\n\n+ core: Introduce setting and action safeties\n+ core: Implement `RelmSetChildExt` for `gtk::AspectFrame`\n+ core: Add `FactoryHashMap` as alternative to `FactoryVecDeque`\n+ core: Add gnome_44 feature flag for GNOME 44\n+ core: Documentation and better support for data bindings\n+ core: Add `set_tooltip` method to `RelmWidgetExt`\n+ core: Add `main_adw_application` method to retrieve the `adw::Application` when the libadwaita feature is enabled\n+ macros: Add `skip_init` option for watch and track attributes to skip their initialization\n+ examples: Introduce setting and action safeties\n+ examples: Example for using relm4-icons\n\n### Changed\n\n+ core: Replace `FactoryVecDeque`'s associated function `from_vec` with `from_iter`\n+ core: Added `Index` type to the `FactoryComponent` trait\n+ core: Rename factory component traits `output_to_parent_input` method to `forward_to_parent`\n+ core: Improved `RelmActionGroup` API\n+ all: Increase MSRV to 1.65 to match the dependencies\n\n### Fixed\n\n+ all: Fix doc links\n+ core: Improve worker docs\n\n### Removed\n\n+ core: Remove the deprecated `send!` macro\n\n## 0.6.0-alpha.2 - 2023-3-13\n\n### Added\n\n+ core: Add data bindings\n+ core: Implement `FactoryView` for `adw::Leaflet`\n+ components: WebImage as component for easily loading images from the web\n\n### Fixed\n\n+ macros: Support template children of templates that are root widgets\n+ macros: Fix order of assignment and connect statements\n\n## 0.6.0-alpha.1 - 2023-2-29\n\n### Added\n\n+ core: Add `RelmApp` builder methods `with_args` and `with_broker`\n+ core: Add `MessageBroker` support for `AsyncComponent`\n\n### Changed\n\n+ core: Change `MessageBroker` generic type parameter to message type\n+ core: Rename `RelmApp` method `with_app` to `from_app`\n+ core: Deprecate `RelmApp` methods `run_with_args` and `run_async_with_args`\n\n## 0.5.0 - 2023-2-17\n\n### Added\n\n+ core: Implement `RelmSetChildExt` for `gtk::Expander`\n+ macros: Support submenus in menu! macro\n+ macros: Support widget templates as root widgets of components and factories\n+ macros: Implement `Clone` for widget templates\n\n### Changed\n\n+ all: Use docs.rs to host the documentation. The documentation on the website will be deprecated.\n\n### Fixed\n\n+ core: Call shutdown on components even on application shutdown\n+ core: Clearing and dropping a factory properly calls the shutdown method of its elements\n+ components: Fix doc links to examples on GitHub\n+ macros: Fix panic on incorrect root type syntax\n+ macros: Fix incorrect type generation for generics\n+ macros: Allow mutably root widgets\n\n## 0.5.0-rc.2 - 2023-2-5\n\n### Changed\n\n+ core: Increase MSRV to 1.64 to match the gtk4 crate\n+ all: Move examples into the corresponding crates\n\n### Added\n\n+ core: Add `broadcast` to `FactoryVecDeque`\n\n### Fixed\n\n+ core: Don't crash when the application is started multiple times\n+ core: Support tokio also on local futures\n+ core: Prevent leaking `CommandSenderInner` struct\n+ core: Improve error message when sending input messages to dropped components\n+ core: Fix scaping of examples on docs.rs\n+ core: Fix crash caused by UID overflow with very large or frequently changing factories\n+ macros: Fix clippy warning triggered by the view macro in some edge cases\n+ macros: Import `relm4::ComponentSender` isn’t longer required\n\n## 0.5.0-rc.1 - 2022-12-21\n\n### Added\n\n+ core: Add `try_read` and `try_write` methods to `SharedState`\n+ core: Allow initializing `FactoryVecDeque` from a `Vec` and make it cloneable\n+ core: Support factories with `adw::PreferencePage`\n\n### Changed\n\n+ core: Pass `&self` to the `Position::position()` function for positioning widgets\n+ core: Take `&str` instead of `&[u8]` in `set_global_css()`\n+ macros: Allow expressions for names of menu entries\n\n### Fixed\n\n+ core: Initialize GTK when calling `RelmApp::new()`\n\n## 0.5.0-beta.5 - 2022-11-26\n\n### Added\n\n+ core: Add asynchronous components including macro support\n+ core: Add asynchronous factories including macro support\n+ core: Temporary widget initialization for async components and factories\n+ core: Add `LoadingWidgets` to help with temporary loading widgets in async factories and components\n+ core: Add `Reducer` as message based alternative to `SharedState`\n+ core: Synchronous API for commands\n+ core: Remove async-broadcast dependency\n+ core: Runtimes of `Component`s and `AsyncComponents` can now be detached for a static lifetime\n+ core: Add `ComponentStream` as alternative to `Controller` that implements `Stream` for async message handling\n+ core: Add `gnome_42` and `gnome_43` feature flags\n+ core: Implement `RelmContainerExt` for `adw::Squeezer`\n+ core: Implement `RelmSetChildExt` for `gtk::WindowHandle`\n+ macros: Auto-generate the name of the `Widgets` type if possible\n\n### Changed\n\n+ core: Rename `FactoryComponentSender` to `FactorySender` and `AsyncFactoryComponentSender` to `AsyncFactorySender`\n+ core: The sender API now supports proper error handling\n+ core: Pass `Root` during `update` and `update_cmd` for `Component` and `AsyncComponent`\n+ core: Rename `OnDestroy` to `RelmObjectExt`\n+ core: Remove `EmptyRoot` in favor of the unit type\n+ macros: Allow using methods calls as widget initializers in the `view` macro\n+ macros: Explicitly using `visibility` as attribute name is no longer supported\n\n### Fixed\n\n+ all: Fix doc builds on docs.rs and add a CI job to prevent future doc failures\n+ core: Fix various bugs related to component shutdown\n+ core: `shutdown` on `Component` now works as expected\n+ core: `shutdown` on `FactoryComponent` now works as expected\n+ core: `transient_for` on `ComponentBuilder` now works properly when called after the application has been initialized\n+ macros: Mark template children of public widget templates as public as well\n+ macros: Only get template children in scope when they are actually used\n+ macros: Fix type parsing after arrow operator in widget assignments\n\n## 0.5.0-beta.4 - 2022-10-24\n\n### Added\n\n+ core: Added `dox` feature to be able to build the docs without the dependencies\n+ core: Added widget templates\n+ core: Allow changing the priority of event loops of components\n+ core: Impl `ContainerChild` and `RelmSetChildExt` for `adw::ToastOverlay`\n+ components: Added `dox` feature to be able to build the docs without the dependencies\n+ examples: Add libadwaita Leaflet sidebar example\n+ examples: Port entry, actions and popover examples to 0.5\n\n### Changed\n\n+ core: Improved `DrawHandler`\n+ core: Made the `macros` feature a default feature\n+ core: Remove async-oneshot dependency and replace it with tokio's oneshot channel\n+ core: Remove WidgetPlus in favor of RelmWidgetExt\n+ core: Add convenience getter-methods to Controller\n+ core: `add_action` of `RelmActionGroup` now takes a reference to a `RelmAction` as a parameter\n+ examples: Many improvements\n+ macros: `parse_with_path`, `update_stream`, `inject_view_code` and `generate_tokens` take references for some of their parameters\n+ artwork: Update logo\n\n### Fixed\n\n+ macros: Fix usage of RelmContainerExt with local_ref attribute\n+ macros: Report RelmContainerExt error at the correct span\n\n## 0.5.0-beta.3 - 2022-9-28\n\n### Added\n\n+ core: Add `iter_mut` to `FactoryVecDeque`\n+ core: Impl extension traits and `FactoryView` for `adw::PreferencesGroup`\n+ core: Add a `prelude` module that contains commonly imported traits and types\n+ core: Implement RelmContainerExt for Leaflet, Carousel and TabView\n+ core: Add `iter()` method to `FactoryVecDeque`\n+ core: Add getter for global application to simplify graceful shutdown of applications\n+ core: Add MessageBroker type to allow communication between components on different levels\n+ core: Return a clone of the `DynamicIndex` after inserting into a factory\n+ macros: Add shorthand syntax for simple input messages\n+ macros: Add chain attribute for properties\n+ components: Add `SimpleComboBox` type as a more idiomatic wrapper around `gtk::ComboBoxText`\n+ components: Port `OpenButton` to 0.5\n+ book: Many chapters ported to 0.5\n\n### Changed\n\n+ core: Improve `SharedState` interface and prefer method names related to `RwLock`\n+ core: Remove Debug requirement for FactoryComponent\n+ core: Remove `input` and `output` fields on `ComponentSender` and `FactoryComponentSender` in favor of `input_sender` and `output_sender` methods\n+ core: Make `ComponentSender` and `FactoryComponentSender` structs instead of type aliases\n+ core: Increase MSRV to 1.63 to match the gtk4 crate\n+ core: Rename `ParentMsg` and `output_to_parent_msg` to `ParentInput` and `output_to_parent_input`, respectively.\n+ core: Do not call `gtk_init` and `adw_init` in favor of the application startup handler\n+ core: Remove `Application` type alias in favor of `gtk::Application`\n+ core: Make `app` field on `RelmApp` private\n+ core: Use late initialization for transient_for and its native variant\n+ core: Rename InitParams to Init in SimpleComponent and Worker too\n+ macros: Don't generate dead code in the widgets struct\n+ macros: Improve error reporting on invalid trait implementations\n\n### Fixed\n\n+ core: Append children for `gtk::Dialog` to its content area instead of using `set_child`\n+ macros: Fix returned widgets assignment in the view macro\n\n### Misc\n\n+ all: Use more clippy lints and clean up the code in general\n\n## 0.5.0-beta.2 - 2022-8-12\n\n### Added\n\n+ core: Add oneshot_command method to ComponentSender\n+ core: Implement FactoryView for adw::Carousel\n+ components: Complete port to 0.5\n+ examples: More examples ported to 0.5\n\n### Changed\n\n+ core: Rename InitParams to Init\n+ core: Pass senders by value\n+ core: Make factories use FactoryComponentSender instead of individual senders for input and output\n+ core: Remove generics from FactoryComponent\n\n### Fixed\n\n+ macros: Fix unsoundness with thread local memory\n\n## 0.5.0-beta.1 - 2022-7-26\n\n### Added\n\n+ core: Introduce commands\n\n### Changed\n\n+ core: The Component trait replaces AppUpdate, ComponentUpdate, AsyncComponentUpdate, MessageHandler, MicroModel, MicroWidgets, Components and Widgets\n+ core: Replace FactoryPrototype with FactoryComponent\n+ core: Drop FactoryVec and make FactoryVecDeque easier to use\n+ core: Improved component initialization and lifecycle\n+ macros: Replace iterate, track and watch with attributes\n+ macros: Replace args! with only parenthesis\n+ macros: Improved macro syntax\n+ examples: Many rewrites for the new version\n\n## 0.4.4 - 2022-3-30\n\n### Changed\n\n+ all: Repositories were transferred to the Relm4 organization\n\n### Fixed\n\n+ macros: Don't interpret expr != expr as macro\n+ core: Always initialize GTK/Libadwaita before running apps\n+ macros: Some doc link fixes\n\n## 0.4.3 - 2022-3-13\n\n### Added\n\n+ core: Add WidgetRef trait to make AsRef easier accessible for widgets\n+ macros: Destructure widgets in Widgets::view\n\n### Fixed\n\n+ macros: Use correct widget type in derive macro for components\n+ macros: Fix parsing of `property: value == other,` expressions\n+ core: Fixed the position type for TabView\n+ core: Fixed state changes in FactoryVec (by [V02460](https://github.com/V02460))\n+ macros: Parse whole expressions instead of just literals\n\n## 0.4.2 - 2022-2-4\n\n### Added\n\n+ macros: The view macro now allows dereferencing widgets with *\n\n### Fixed\n\n+ core: Fixed clear method of FactoryVec\n+ macros: The micro_component macro now parses post_view correctly\n+ macros: Fix the ordering of properties in the view macro\n+ macros: Fix the ordering of widget assignments in the view macro\n\n## 0.4.1 - 2022-1-17\n\n### Added\n\n+ macros: Improved documentation\n\n### Fixed\n\n+ core: Action macros now include the required traits themselves\n+ macros: Allow connecting events in the view macro\n\n## 0.4.0 - 2022-1-16\n\n### Added\n\n+ all: Update gtk4-rs to v0.4\n+ core: Introduce the \"macro\" feature as alternative to using relm4-macros separately\n+ macros: Add a macros for MicroComponents and Factories\n+ macros: Add a post_view function to execute code after the view code of the macro\n+ macros: Allow using the view and menu macros independently from the widget macro\n+ macros: Allow using mutable widgets in view\n+ macros: Improve error messages for anonymous widgets\n\n### Changed\n\n+ core: Renamed methods of the FactoryPrototype trait to better match with the rest of Relm4\n+ macros: manual_view is now called pre_view\n+ book: Reworked introduction and first chapter\n\n### Fixed\n\n+ core: Fix panic caused by the clear method of FactoryVecDeque\n\n## 0.4.0-beta.3 - 2021-12-28\n\n### Added\n\n+ core: A factory view implementation for libadwaita's StackView\n+ macros: Allow early returns in manual_view (by [euclio](https://github.com/euclio))\n\n### Changed\n\n+ core: Make GTK's command line argument handling optional (by [euclio](https://github.com/euclio))\n+ core: DynamicIndex now implements Send but panics when used on other threads\n\n## 0.4.0-beta.2 - 2021-11-26\n\n+ macros: Add optional returned widget syntax\n\n## 0.4.0-beta.1 - 2021-11-21\n\n### Added\n\n+ core: Micro components\n+ core: Type safe actions API\n+ macros: Menu macro for creating menus\n+ macros: New returned widget syntax\n+ examples Micro components example\n\n### Changed\n\n+ core: Initialize widgets from the outermost components to the app\n+ macros: component! removed and parent! was added instead\n\n### Removed\n\n+ core: RelmComponent::with_new_thread\n\n## 0.2.1 - 2021-10-17\n\n### Added\n\n+ core: Added sender method to RelmComponent\n+ macros: New shorthand tracker syntax\n+ macros: Allow generic function parameters in properties\n\n### Changed\n\n+ core: Use adw::Application when \"libadwaita\" feature is active\n\n## 0.2.0 - 2021-10-09\n\n### Changed\n\n+ core: Pass model in connect_components function of the Widgets trait\n+ core: Mini rework of factories\n+ core: Removed DefaultWidgets trait in favor of Default implementations in gkt4-rs\n+ book: Many book improvements by [tronta](https://github.com/tronta)\n\n### Added\n\n+ core: Added with_app method that allows passing an existing gtk::Application to Relm4\n+ core: Methods to access the widgets of components\n+ core: Re-export for gtk\n+ macros: Support named arguments in the widget macro (by [mskorkowski](https://github.com/mskorkowski))\n+ macros: Support usage of re-export paths in the widget macro (by [mskorkowski](https://github.com/mskorkowski))\n+ macros: Added error message when confusing `=` and `:`\n+ macros: Allow usage of visibilities other than pub\n+ macros: New pre_connect_components and post_connect_components for manual components code\n\n### Fixed\n\n+ macros: Parsing the first widget should now always work as expected\n+ macros: [#20](https://github.com/Relm4/relm4/issues/20) Fix wrong order when using components in the widget macro\n\n## 0.1.0 - 2021-09-06\n\n### Added\n\n+ core: Added message handler type\n+ core: More methods for factory data structures\n+ macros: Add syntax for connecting events with components\n+ examples: Stack example\n+ book: Added macro expansion chapter\n\n### Changed\n\n+ book: Added message handler chapter and reworked the threads and async chapter\n+ book: Many book improvements by [tronta](https://github.com/tronta)\n+ core: The send! macro no longer clones the sender\n+ macros: Make fields of public widgets public\n+ components: Use &'static str instead of String for configurations\n+ examples: Many improvements\n\n### Fixed\n\n+ macros: Use fully qualified syntax for factories\n+ macros: Passing additional arguments now works for components and other properties, too.\n\n## 0.1.0-beta.9 - 2021-08-24\n\n### Added\n\n+ components: Open button with automatic recent files list\n+ components: Removed trait duplication and added more docs\n+ core: Iterators added to factory data structures\n+ core: More widgets added as FactoryView\n\n### Changed\n\n+ book: Many book improvements by [tronta](https://github.com/tronta)\n+ core: Removed class name methods from WidgetPlus [#14](https://github.com/Relm4/relm4/pull/14)\n\n### Fixed\n\n+ macros: Parsing additional fields should be more stable now\n+ macros: Widgets can not include comments at the top\n\n## 0.1.0-beta.8 - 2021-08-20\n\n### Added\n\n+ core: Support for libadwaita 🎉\n+ macros: Fully qualified syntax for trait disambiguation\n+ macros: Allow passing additional arguments to widget initialization (useful e.g. for grids)\n+ book: Reusable components and widget macro reference chapters\n\n### Changed\n\n+ macros: Improved error messages\n\n## 0.1.0-beta.7 - 2021-08-19\n\n### Added\n\n+ book: Factory, components, worker and thread + async chapters\n\n### Changed\n\n+ core: get and get_mut of FactoryVec and FactoryVecDeque now return an Option to prevent panics\n\n### Fixed\n\n+ macros: Fixed components\n+ core: Fixed unsound removal of elements in FactoryVecDeque\n\n\n## 0.1.0-beta.6 - 2021-08-18\n\n### Changed\n\n+ core: Improved and adjusted the FactoryPrototype trait\n\n### Added\n\n+ core: Added the FactoryListView trait for more flexibility\n+ core: Added a FactoryVecDeque container\n+ core: Implemented FactoryView and FactoryListView for more widgets\n+ examples: More examples\n\n### Fixed\n\n+ macros: Fixed the factory! macro\n\n## 0.1.0-beta.5 - 2021-08-15\n\n### Added\n\n+ core: Drawing handler for gtk::DrawingArea\n+ core: New CSS methods in WidgetPlus trait\n+ examples: Many new examples\n\n### Changed\n\n+ core: Many doc improvements\n+ macros: Improved tracker! macro\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.533203125,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\"relm4\", \"relm4-components\", \"relm4-css\", \"relm4-macros\"]\nexclude = [\"examples\", \"examples/libadwaita\"]\n\n[workspace.package]\nversion = \"0.9.1\"\nauthors = [\"Aaron Erhardt <aaron.erhardt@t-online.de>\"]\nedition = \"2021\"\nrust-version = \"1.75\"\nreadme = \"README.md\"\nlicense = \"Apache-2.0 OR MIT\"\ndescription = \"An idiomatic GUI library inspired by Elm and based on gtk4-rs\"\n\nhomepage = \"https://relm4.org\"\nrepository = \"https://github.com/Relm4/Relm4\"\n\nkeywords = [\"gui\", \"gtk\", \"gtk4\", \"elm\"]\ncategories = [\"gui\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5302734375,
          "content": "<h1>\n  <a href=\"https://relm4.org\">\n    <img src=\"assets/Relm_logo_with_text.png\" width=\"200\" alt=\"Relm4\">\n  </a>\n</h1>\n\n[![CI](https://github.com/Relm4/Relm4/actions/workflows/rust.yml/badge.svg)](https://github.com/Relm4/Relm4/actions/workflows/rust.yml)\n[![Matrix](https://img.shields.io/matrix/relm4:matrix.org?label=matrix%20chat)](https://matrix.to/#/#relm4:matrix.org)\n[![Relm4 on crates.io](https://img.shields.io/crates/v/relm4.svg)](https://crates.io/crates/relm4)\n[![Relm4 docs](https://img.shields.io/badge/rust-documentation-blue)](https://docs.rs/relm4/)\n[![Relm4 book](https://img.shields.io/badge/rust-book-fc0060)](https://relm4.org/book/stable/)\n![Minimum Rust version 1.75](https://img.shields.io/badge/rustc-1.75+-06a096.svg)\n[![dependency status](https://deps.rs/repo/github/Relm4/Relm4/status.svg)](https://deps.rs/repo/github/Relm4/Relm4)\n\nAn idiomatic GUI library inspired by [Elm](https://elm-lang.org/) and based on [gtk4-rs](https://crates.io/crates/gtk4). \nRelm4 is a new version of [relm](https://github.com/antoyo/relm) that's built from scratch and is compatible with [GTK4](https://www.gtk.org/) and [libadwaita](https://gitlab.gnome.org/GNOME/libadwaita).\n\n## Why Relm4\n\nWe believe that GUI development should be easy, productive and delightful.  \nThe [gtk4-rs](https://crates.io/crates/gtk4) crate already provides everything you need to write modern, beautiful and cross-platform applications.\nBuilt on top of this foundation, Relm4 makes developing more idiomatic, simpler and faster and enables you to become productive in just a few hours.\n\n## Our goals\n\n+ ⏱️ **Productivity**\n+ ✨ **Simplicity**\n+ 📎 **Outstanding documentation**\n+ 🔧 **Maintainability**\n\n## Documentation\n\n+ 📖 **[The Relm4 book](https://relm4.org/book/stable/)**\n+ 📜 **[Rust documentation](https://docs.rs/relm4/)**\n\n## Dependencies\n\nRelm4 depends on GTK4: [How to install GTK4 and Rust](https://gtk-rs.org/gtk4-rs/git/book/installation.html)\n\n## Ecosystem\n\n+ [relm4-macros](https://crates.io/crates/relm4-macros) - several macros for declarative UI definitions.\n+ [relm4-components](https://crates.io/crates/relm4-components) - a collections of reusable components.\n+ [relm4-icons](https://crates.io/crates/relm4-icons) - icons for your application.\n+ [relm4-template](https://github.com/Relm4/relm4-template) - a starter template for creating Relm4 applications in the Flatpak package format.\n+ [relm4-snippets](https://github.com/Relm4/vscode-relm4-snippets) - code snippets to speed up your development.\n\nUse this in to your `Cargo.toml`:\n\n```toml\n# Core library\nrelm4 = \"0.9\"\n# Optional: reusable components\nrelm4-components = \"0.9\"\n# Optional: icons (more info at https://github.com/Relm4/icons)\nrelm4-icons = \"0.9.0\"\n```\n\n### Features\n\nThe `relm4` crate has four feature flags:\n\n| Flag | Purpose | Default |\n| :--- | :------ | :-----: |\n| `macros` | Enable macros by re-exporting [`relm4-macros`](https://crates.io/crates/relm4-macros) | ✅ |\n| `libadwaita` | Improved support for [libadwaita](https://gitlab.gnome.org/World/Rust/libadwaita-rs) | - |\n| `libpanel` | Improved support for [libpanel](https://gitlab.gnome.org/World/Rust/libpanel-rs) | - |\n| `gnome_46` | Enable all version feature flags of all dependencies to match the GNOME 46 SDK | - |\n| `gnome_45` | Enable all version feature flags of all dependencies to match the GNOME 45 SDK | - |\n| `gnome_44` | Enable all version feature flags of all dependencies to match the GNOME 44 SDK | - |\n| `gnome_43` | Enable all version feature flags of all dependencies to match the GNOME 43 SDK | - |\n| `gnome_42` | Enable all version feature flags of all dependencies to match the GNOME 42 SDK | ✅ |\n\nThe `macros` feature is a default feature.\n\n## Examples\n\nSeveral example applications are available at [examples/](examples/).\n\n#### [📸 Screenshots from the example apps](assets/screenshots)\n\n### A simple counter app\n\n![Simple app screenshot light](assets/screenshots/simple-light.png)\n![Simple app screenshot dark](assets/screenshots/simple-dark.png)\n\n```rust\nuse gtk::prelude::*;\nuse relm4::prelude::*;\n\nstruct App {\n    counter: u8,\n}\n\n#[derive(Debug)]\nenum Msg {\n    Increment,\n    Decrement,\n}\n\n#[relm4::component]\nimpl SimpleComponent for App {\n    type Init = u8;\n    type Input = Msg;\n    type Output = ();\n\n    view! {\n        gtk::Window {\n            set_title: Some(\"Simple app\"),\n            set_default_size: (300, 100),\n\n            gtk::Box {\n                set_orientation: gtk::Orientation::Vertical,\n                set_spacing: 5,\n                set_margin_all: 5,\n\n                gtk::Button {\n                    set_label: \"Increment\",\n                    connect_clicked => Msg::Increment,\n                },\n\n                gtk::Button {\n                    set_label: \"Decrement\",\n                    connect_clicked => Msg::Decrement,\n                },\n\n                gtk::Label {\n                    #[watch]\n                    set_label: &format!(\"Counter: {}\", model.counter),\n                    set_margin_all: 5,\n                }\n            }\n        }\n    }\n\n    // Initialize the component.\n    fn init(\n        counter: Self::Init,\n        root: Self::Root,\n        sender: ComponentSender<Self>,\n    ) -> ComponentParts<Self> {\n        let model = App { counter };\n\n        // Insert the code generation of the view! macro here\n        let widgets = view_output!();\n\n        ComponentParts { model, widgets }\n    }\n\n    fn update(&mut self, msg: Self::Input, _sender: ComponentSender<Self>) {\n        match msg {\n            Msg::Increment => {\n                self.counter = self.counter.wrapping_add(1);\n            }\n            Msg::Decrement => {\n                self.counter = self.counter.wrapping_sub(1);\n            }\n        }\n    }\n}\n\nfn main() {\n    let app = RelmApp::new(\"relm4.example.simple\");\n    app.run::<App>(0);\n}\n```\n\n## Projects using Relm4\n\n- [fm](https://github.com/euclio/fm) — A small, general-purpose file manager.\n- [Done](https://github.com/edfloreshz/done) - A simple and versatile to do app.\n- [Reovim](https://github.com/songww/reovim) - GUI frontend for neovim.\n- [NixOS Configuration Editor](https://github.com/vlinkz/nixos-conf-editor) - A graphical configuration editor for [NixOS](https://nixos.org).\n- [Rhino Setup](https://github.com/rhino-linux/rhino-setup) - Setup wizard for [Rolling Rhino](https://rhinolinux.org/)\n- [Lemoa](https://github.com/lemmy-gtk/lemoa) - Desktop client for Lemmy\n- [Score Tracker](https://github.com/weclaw1/score-tracker) - App for tracking player scores in card and board games\n- [Spidey](https://github.com/kdwk/Spidey) - A seamless and distraction-free work and play environment on the web\n- [Toolbox Tuner](https://github.com/13hannes11/toolbox-tuner) - An application to manage Toolbx containers\n- [BitRitter](https://codeberg.org/Chfkch/bitritter) - A bitwarden/vaultwarden client with mobile devices in mind\n- [Space Acres](https://github.com/autonomys/space-acres) - An opinionated GUI application for farming on Autonomys Network\n- [Exercise Timer](https://github.com/mfep/exercise-timer) - An interval training app for the GNOME desktop\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any\nadditional terms or conditions.\n\n**Feedback and contributions are highly appreciated!**\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons.toml",
          "type": "blob",
          "size": 0.0595703125,
          "content": "icons = [\"plus\", \"minus\", \"tag-outline-add\", \"delete-filled\"]"
        },
        {
          "name": "publish.sh",
          "type": "blob",
          "size": 0.36328125,
          "content": "#!/bin/bash\n\n# Exit on error\nset -e\n\n# Check the code\ncargo update\ncargo fmt --all -- --check\ncargo clippy --all-targets -- --deny warnings\ncargo clippy --features \"all\" -- --deny warnings\ncargo clippy --examples -- --deny warnings\ncargo test\n\n# Publish and pass all arguments to cargo\ncargo publish -p relm4-macros\ncargo publish -p relm4\ncargo publish -p relm4-components"
        },
        {
          "name": "relm4-components",
          "type": "tree",
          "content": null
        },
        {
          "name": "relm4-css",
          "type": "tree",
          "content": null
        },
        {
          "name": "relm4-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "relm4",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.5146484375,
          "content": "# Always use unix newline\r\nnewline_style                   = \"Unix\"\r\n\r\n# Use field init shorthand when possible\r\nuse_field_init_shorthand        = true\r\n\r\n# NIGHTLY OPTIONS: ENABLE AS SOON AS THEY BECOME STABLE\r\n# Reorder types and consts before methods\r\n# reorder_impl_items              = true\r\n\r\n# Format doc comments as well\r\n# format_code_in_doc_comments     = true\r\n\r\n# Change import granularity\r\n# imports_granularity             = \"Module\"\r\n\r\n# Sort group imports\r\n# group_imports                   = \"StdExternalCrate\""
        }
      ]
    }
  ]
}