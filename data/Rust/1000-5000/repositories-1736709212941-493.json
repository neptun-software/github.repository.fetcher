{
  "metadata": {
    "timestamp": 1736709212941,
    "page": 493,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LukeMathWalker/cargo-chef",
      "stars": 1912,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "/target\n.idea\nrecipe.json"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 23.0498046875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e2e1ebcb11de5c03c67de28a7df593d32191b44939c482e97702baaaa6ab6a5\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00ad3f3a942eee60335ab4342358c161ee296829e0d16ff42fc1d6cb07815467\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"assert_fs\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cd762e110c8ed629b11b6cde59458cc1c71de78ebbcc30099fc8e0403a2a2ec\"\ndependencies = [\n \"anstyle\",\n \"doc-comment\",\n \"globwalk 0.9.1\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c48f0051a4b4c5e0b6d365cd04af53aeaa209e3cc15ec2cdb69e73cc87fbd0dc\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-chef\"\nversion = \"0.1.69\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"assert_fs\",\n \"cargo-manifest\",\n \"cargo_metadata\",\n \"clap\",\n \"env_logger\",\n \"expect-test\",\n \"fs-err\",\n \"globwalk 0.8.1\",\n \"log\",\n \"pathdiff\",\n \"predicates\",\n \"serde\",\n \"serde_json\",\n \"toml\",\n]\n\n[[package]]\nname = \"cargo-manifest\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e7713fa8974fe547c44fcf043d0d910fff5fd95673d40b77a769495657789fb\"\ndependencies = [\n \"serde\",\n \"thiserror 2.0.11\",\n \"toml\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"694c8807f2ae16faecc43dc17d74b3eb042482789fd0eb64b39a2e04e087053f\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.15.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eee4243f1f26fc7a42710e7439c149e2b10b05472f88090acce52632f231a73a\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror 1.0.56\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80c21025abd42669a92efc996ef13cfb2c5c627858421ea58d5c3b331a6c134f\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"458bf1f341769dfcf849846f65dffdf9146daa56bcd2a47cb4e1de9915567c99\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"307bc0538d5f0f83b8248db3087aa92fe504e4691294d0c96c0eabc33f47ba47\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"dissimilar\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86e3bdc80eee6e16b2b6b0f87fbc98c04bee3455e35174c0de1a125d0688c632\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"expect-test\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d9eafeadd538e68fb28016364c9732d78e420b9ff8853fa5e4058861e9f8d3\"\ndependencies = [\n \"dissimilar\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\"\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"fs-err\"\nversion = \"2.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88a41f105fe1d5b6b34b2055e3dc59bb79b46b48b2040b9e6c7b4b5de097aa41\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93e3af942408868f6934a7b85134a3230832b9977cf66125df2f9edcfce4ddcc\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf760ebf69878d9fd8f110c89703d90ce35095324d1f1edcb595c63945ee757\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0c62115964e08cb8039170eb33c1d0e2388a256930279edca206fff675f82c3\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"824b2ae422412366ba479e8111fd301f7b5faece8149317bb81925979a53f520\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.153\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\"\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"pathdiff\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd\"\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b87bfd4605926cdfefc1c3b5f8fe560e3feca9d5552cf68c466d3d8236c7e8\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"float-cmp\",\n \"normalize-line-endings\",\n \"predicates-core\",\n \"regex\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b794032607612e7abeb4db69adb4e33590fa6cf1149e95fd7cb00e634b92f174\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368ba315fb8c5052ab692e68a0eefec6ec57b23a36959c14496f0b0df2c0cecf\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97ed7a9823b74f99c7742f5336af7be5ecd3eeafcb1507d1fa93347b1d589b0\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870026e60fa08c69f064aa766c10f10b1d62db9ccd4d0abb206472bee0ce3b32\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33c85360c95e7d137454dc81d9a4ed2b8efd8fbe19cee57357b32b9771fccb67\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.113\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69801b70b1c3dac963ecb03a364ba0ceda9cf60c71cfe475e99864759c8b8a79\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ee073c9e4cd00e28217186dbe12796d692868f432bf2e97ee73bed0c56dfa01\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d5d0adab1ae378d7f53bdebc67a39f1f151407ef230f0ce2883572f5d8985c80\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a365e8cd18e44762ef95d87f284f4b5cd04107fec2ff3052bd6a3e6069669e67\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"rustix\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d54378c645627613241d077a3a79db965db602882668f9136ac42af9ecb730ad\"\ndependencies = [\n \"thiserror-impl 1.0.56\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d452f284b73e6d76dd36758a0c8684b1d5be31f92b89d07fd5822175732206fc\"\ndependencies = [\n \"thiserror-impl 2.0.11\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa0faa943b50f3db30a20aa7e265dbc66076993efed8463e8de414e5d06d3471\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26afc1baea8a989337eeb52b6e72a039780ce45c3edfcc9c5b9d112feeb173c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9dd1545e8208b4a5af1aa9bbd0b4cf7e9ea08fabc5d0a5c67fcaafa17433aa3\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c12219811e0c1ba077867254e5ad62ee2c9c190b0d957110750ac0cda1ae96cd\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dffa400e67ed5a4dd237983829e66475f0a4a26938c4b04c21baede6262215b8\"\ndependencies = [\n \"memchr\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.0419921875,
          "content": "[package]\nname = \"cargo-chef\"\nversion = \"0.1.69\"\nauthors = [\"Luca Palmieri <lpalmieri@truelayer.com>\"]\nedition = \"2018\"\ndescription = \"A cargo sub-command to build project dependencies for optimal Docker layer caching.\"\nkeywords = [\"cargo\", \"docker\", \"caching\", \"dependencies\"]\ncategories = [\"development-tools::cargo-plugins\", \"command-line-utilities\"]\nrepository = \"https://github.com/LukeMathWalker/cargo-chef\"\ndocumentation = \"https://docs.rs/cargo-chef\"\nlicense = \"Apache-2.0 OR MIT\"\nexclude = [\"tests\"]\n\n[[bin]]\nname = \"cargo-chef\"\npath = \"src/main.rs\"\n\n[lib]\nname = \"chef\"\npath = \"src/lib.rs\"\n\n[dependencies]\nclap = { version = \"4\", features = [\"cargo\", \"env\", \"derive\"] }\nserde = { version = \"1.0.117\", features = [\"derive\"] }\nserde_json = \"1.0.59\"\nlog = \"0.4.11\"\nenv_logger = \"0.10\"\nglobwalk = \"0.8.0\"\nanyhow = \"1.0.33\"\npathdiff = \"0.2.0\"\ncargo-manifest = \"0.18\"\nfs-err = \"2.5.0\"\ntoml = { version = \"0.8\", features = [\"preserve_order\"] }\nexpect-test = \"1.1.0\"\ncargo_metadata = \"0.15\"\n\n[dev-dependencies]\nassert_cmd = \"2\"\nassert_fs = \"1.0.0\"\npredicates = \"3\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2021 Luca Palmieri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.8056640625,
          "content": "<h1 align=\"center\">cargo-chef</h1>\n<div align=\"center\">\n <strong>\n   Cache the dependencies of your Rust project and speed up your Docker builds.\n </strong>\n</div>\n\n<br />\n\n<div align=\"center\">\n  <!-- Crates version -->\n  <a href=\"https://crates.io/crates/cargo-chef\">\n    <img src=\"https://img.shields.io/crates/v/cargo-chef.svg?style=flat-square\"\n    alt=\"Crates.io version\" />\n  </a>\n  <!-- Downloads -->\n  <a href=\"https://crates.io/crates/cargo-chef\">\n    <img src=\"https://img.shields.io/crates/d/cargo-chef.svg?style=flat-square\"\n      alt=\"Download\" />\n  </a>\n</div>\n<br/>\n\n> `cargo-chef` was initially developed for the deployment chapter of [Zero to Production In Rust](https://zero2prod.com), a hands-on introduction to backend development using the Rust programming language.\n\n# Table of Contents\n0. [How to install](#how-to-install)\n1. [How to use](#how-to-use)\n2. [Benefits vs Limitations](#benefits-vs-limitations)\n3. [License](#license)\n\n## How To Install \n\nYou can install `cargo-chef` from [crates.io](https://crates.io) with\n\n```bash\ncargo install cargo-chef --locked\n```\n\n## How to use\n\n> :warning:  **cargo-chef is not meant to be run locally**  \n> Its primary use-case is to speed up container builds by running BEFORE\n> the actual source code is copied over. Don't run it on existing codebases to avoid\n> having files being overwritten.\n\n`cargo-chef` exposes two commands: `prepare` and `cook`:\n\n```bash\ncargo chef --help\n```\n\n```text\n\ncargo-chef\n\nUSAGE:\n    cargo chef <SUBCOMMAND>\n\nSUBCOMMANDS:\n    cook       Re-hydrate the minimum project skeleton identified by `cargo chef prepare` and\n               build it to cache dependencies\n    prepare    Analyze the current project to determine the minimum subset of files (Cargo.lock\n               and Cargo.toml manifests) required to build it and cache dependencies\n```\n\n`prepare` examines your project and builds a _recipe_ that captures the set of information required to build your dependencies.\n\n```bash\ncargo chef prepare --recipe-path recipe.json\n```\n\nNothing too mysterious going on here, you can examine the `recipe.json` file: it contains the skeleton of your project (e.g. all the `Cargo.toml` files with their relative path, the `Cargo.lock` file is available) plus a few additional pieces of information.  \n In particular it makes sure that all libraries and binaries are explicitly declared in their respective `Cargo.toml` files even if they can be found at the canonical default location (`src/main.rs` for a binary, `src/lib.rs` for a library).\n \nThe `recipe.json` is the equivalent of the Python `requirements.txt` file - it is the only input required for `cargo chef cook`, the command that will build out our dependencies:\n\n```bash\ncargo chef cook --recipe-path recipe.json\n```\n\nIf you want to build in `--release` mode:\n\n```bash\ncargo chef cook --release --recipe-path recipe.json\n```\n\nYou can also choose to override which Rust toolchain should be used. E.g., to force the `nightly` toolchain:\n\n```bash\ncargo +nightly chef cook --recipe-path recipe.json\n```\n\n`cargo-chef` is designed to be leveraged in Dockerfiles:\n\n```dockerfile\nFROM lukemathwalker/cargo-chef:latest-rust-1 AS chef\nWORKDIR /app\n\nFROM chef AS planner\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef AS builder \nCOPY --from=planner /app/recipe.json recipe.json\n# Build dependencies - this is the caching Docker layer!\nRUN cargo chef cook --release --recipe-path recipe.json\n# Build application\nCOPY . .\nRUN cargo build --release --bin app\n\n# We do not need the Rust toolchain to run the binary!\nFROM debian:bookworm-slim AS runtime\nWORKDIR /app\nCOPY --from=builder /app/target/release/app /usr/local/bin\nENTRYPOINT [\"/usr/local/bin/app\"]\n```\n\nWe are using three stages: the first computes the recipe file, the second caches our dependencies and builds the binary, the third is our runtime environment.  \nAs long as your dependencies do not change the `recipe.json` file will stay the same, therefore the outcome of `cargo chef cook --release --recipe-path recipe.json` will be cached, massively speeding up your builds (up to 5x measured on some commercial projects).\n\n### Pre-built images\n\nWe offer `lukemathwalker/cargo-chef` as a pre-built Docker image equipped with both Rust and `cargo-chef`.\n\nThe tagging scheme is `<cargo-chef version>-rust-<rust version>`.  \nFor example, `0.1.22-rust-1.56.0`.  \nYou can choose to get the latest version of either `cargo-chef` or `rust` by using:\n- `latest-rust-1.56.0` (use latest `cargo-chef` with specific Rust version);\n- `0.1.22-rust-latest` (use latest Rust with specific `cargo-chef` version).\nYou can find [all the available tags on Dockerhub](https://hub.docker.com/r/lukemathwalker/cargo-chef).\n\n> :warning:  **You must use the same Rust version in all stages**  \n> If you use a different Rust version in one of the stages\n> caching will not work as expected.\n  \n### Without the pre-built image\n\nIf you do not want to use the `lukemathwalker/cargo-chef` image, you can simply install the CLI within the Dockerfile:\n\n```dockerfile\nFROM rust:1 AS chef \n# We only pay the installation cost once, \n# it will be cached from the second build onwards\nRUN cargo install cargo-chef \nWORKDIR app\n\nFROM chef AS planner\nCOPY . .\nRUN cargo chef prepare  --recipe-path recipe.json\n\nFROM chef AS builder\nCOPY --from=planner /app/recipe.json recipe.json\n# Build dependencies - this is the caching Docker layer!\nRUN cargo chef cook --release --recipe-path recipe.json\n# Build application\nCOPY . .\nRUN cargo build --release --bin app\n\n# We do not need the Rust toolchain to run the binary!\nFROM debian:bookworm-slim AS runtime\nWORKDIR app\nCOPY --from=builder /app/target/release/app /usr/local/bin\nENTRYPOINT [\"/usr/local/bin/app\"]\n```\n\n### Running the binary in Alpine\n\nIf you want to run your application using the `alpine` distribution you need to create a fully static binary.  \nThe recommended approach is to build for the `x86_64-unknown-linux-musl` target using [`muslrust`](https://github.com/clux/muslrust).  \n`cargo-chef` works for `x86_64-unknown-linux-musl`, but we are **cross-compiling** - the target\ntoolchain must be explicitly specified.\n\nA sample Dockerfile looks like this:\n\n```dockerfile\n# Using the `rust-musl-builder` as base image, instead of \n# the official Rust toolchain\nFROM clux/muslrust:stable AS chef\nUSER root\nRUN cargo install cargo-chef\nWORKDIR /app\n\nFROM chef AS planner\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef AS builder\nCOPY --from=planner /app/recipe.json recipe.json\n# Notice that we are specifying the --target flag!\nRUN cargo chef cook --release --target x86_64-unknown-linux-musl --recipe-path recipe.json\nCOPY . .\nRUN cargo build --release --target x86_64-unknown-linux-musl --bin app\n\nFROM alpine AS runtime\nRUN addgroup -S myuser && adduser -S myuser -G myuser\nCOPY --from=builder /app/target/x86_64-unknown-linux-musl/release/app /usr/local/bin/\nUSER myuser\nCMD [\"/usr/local/bin/app\"]\n```\n\n## Benefits vs Limitations\n\n`cargo-chef` has been tested on a few OpenSource projects and some of commercial projects, but our testing has definitely not exhausted the range of possibilities when it comes to `cargo build` customisations and we are sure that there are a few rough edges that will have to be smoothed out - please file issues on [GitHub](https://github.com/LukeMathWalker/cargo-chef).\n\n### Benefits of `cargo-chef`:\n\nA common alternative is to load a minimal `main.rs` into a container with `Cargo.toml` and `Cargo.lock` to build a Docker layer that consists of only your dependencies ([more info here](https://www.lpalmieri.com/posts/fast-rust-docker-builds/#caching-rust-builds)). This is fragile compared to `cargo-chef` which will instead:\n\n- automatically pick up all crates in a workspace (and new ones as they are added)\n- keep working when files or crates are moved around, which would instead require manual edits to the `Dockerfile` using the \"manual\" approach\n- generate fewer intermediate Docker layers (for workspaces)\n\n### Limitations and caveats:\n\n- `cargo chef cook` and `cargo build` must be executed from the same working directory. If you examine the `*.d` files under `target/debug/deps` for one of your projects using `cat` you will notice that they contain absolute paths referring to the project `target` directory. If moved around, `cargo` will not leverage them as cached dependencies;\n- `cargo build` will build local dependencies (outside of the current project) from scratch, even if they are unchanged, due to the reliance of its fingerprinting logic on timestamps (see [this _long_ issue on `cargo`'s repository](https://github.com/rust-lang/cargo/issues/2644));\n\n## License\n\nLicensed under either of Apache License, Version 2.0 or MIT license at your option.\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this crate by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}