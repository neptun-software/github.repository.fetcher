{
  "metadata": {
    "timestamp": 1736709245376,
    "page": 564,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dndx/phantun",
      "stars": 1773,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0185546875,
          "content": "/target\nCargo.lock\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.072265625,
          "content": "[workspace]\n\nresolver = \"2\"\n\nmembers = [\n    \"fake-tcp\",\n    \"phantun\",\n]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.59765625,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2021-2024 Datong Sun (dndx@idndx.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0634765625,
          "content": "MIT License\n\nCopyright (c) 2021-2024 Datong Sun (dndx@idndx.com)\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.3046875,
          "content": "# Phantun\n\nA lightweight and fast UDP to TCP obfuscator.\n\n![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/dndx/phantun/rust.yml)\n![docs.rs](https://img.shields.io/docsrs/fake-tcp)\n\nTable of Contents\n=================\n\n* [Phantun](#phantun)\n* [Latest release](#latest-release)\n* [Overview](#overview)\n* [Usage](#usage)\n    * [1. Enable Kernel IP forwarding](#1-enable-kernel-ip-forwarding)\n    * [2. Add required firewall rules](#2-add-required-firewall-rules)\n        * [Client](#client)\n            * [Using nftables](#using-nftables)\n            * [Using iptables](#using-iptables)\n        * [Server](#server)\n            * [Using nftables](#using-nftables)\n            * [Using iptables](#using-iptables)\n    * [3. Run Phantun binaries as non-root (Optional)](#3-run-phantun-binaries-as-non-root-optional)\n    * [4. Start Phantun daemon](#4-start-phantun-daemon)\n        * [Server](#server)\n        * [Client](#client)\n* [MTU overhead](#mtu-overhead)\n    * [MTU calculation for WireGuard](#mtu-calculation-for-wireguard)\n* [Version compatibility](#version-compatibility)\n* [Documentations](#documentations)\n* [Performance](#performance)\n* [Future plans](#future-plans)\n* [Compariation to udp2raw](#compariation-to-udp2raw)\n* [License](#license)\n\n# Latest release\n\n[v0.7.0](https://github.com/dndx/phantun/releases/tag/v0.7.0)\n\n# Overview\n\nPhantun is a project that obfuscated UDP packets into TCP connections. It aims to\nachieve maximum performance with minimum processing and encapsulation overhead.\n\nIt is commonly used in environments where UDP is blocked/throttled but TCP is allowed through.\n\nPhantun simply converts a stream of UDP packets into obfuscated TCP stream packets. The TCP stack\nused by Phantun is designed to pass through most L3/L4 stateful/stateless firewalls/NAT\ndevices. It will **not** be able to pass through L7 proxies.\nHowever, the advantage of this approach is that none of the common UDP over TCP performance killer\nsuch as retransmissions and flow control will occur. The underlying UDP properties such as\nout-of-order delivery are fully preserved even if the connection ends up looking like a TCP\nconnection from the perspective of firewalls/NAT devices.\n\nPhantun means Phantom TUN, as it is an obfuscator for UDP traffic that does just enough work\nto make it pass through stateful firewall/NATs as TCP packets.\n\nPhantun is written in 100% safe Rust. It has been optimized extensively to scale well on multi-core\nsystems and has no issue saturating all available CPU resources on a fast connection.\nSee the [Performance](#performance) section for benchmarking results.\n\n![Phantun benchmark results](images/phantun-vs-udp2raw-benchmark-result.png)\n![Traffic flow diagram](images/traffic-flow.png)\n\n# Usage\n\nFor the example below, it is assumed that **Phantun Server** listens for incoming Phantun Client connections at\nport `4567` (the `--local` option for server), and it forwards UDP packets to UDP server at `127.0.0.1:1234`\n(the `--remote` option for server).\n\nIt is also assumed that **Phantun Client** listens for incoming UDP packets at\n`127.0.0.1:1234` (the `--local` option for client) and connects to Phantun Server at `10.0.0.1:4567`\n(the `--remote` option for client).\n\nPhantun creates TUN interface for both the Client and Server. For **Client**, Phantun assigns itself the IP address\n`192.168.200.2` and `fcc8::2` by default.\nFor **Server**, it assigns `192.168.201.2` and `fcc9::2` by default. Therefore, your Kernel must have\nIPv4/IPv6 forwarding enabled and setup appropriate iptables/nftables rules for NAT between your physical\nNIC address and Phantun's Tun interface address.\n\nYou may customize the name of Tun interface created by Phantun and the assigned addresses. Please\nrun the executable with `-h` options to see how to change them.\n\nAnother way to help understand this network topology (please see the diagram above for an illustration of this topology):\n\nPhantun Client is like a machine with private IP address (`192.168.200.2`/`fcc8::2`) behind a router.\nIn order for it to reach the Internet, you will need to SNAT the private IP address before it's traffic\nleaves the NIC.\n\nPhantun Server is like a server with private IP address (`192.168.201.2`/`fcc9::2`) behind a router.\nIn order to access it from the Internet, you need to `DNAT` it's listening port on the router\nand change the destination IP address to where the server is listening for incoming connections.\n\nIn those cases, the machine/iptables running Phantun acts as the \"router\" that allows Phantun\nto communicate with outside using it's private IP addresses.\n\nAs of Phantun v0.4.1, IPv6 is fully supported for both TCP and UDP sides.\nTo specify an IPv6 address, use the following format: `[::1]:1234` with\nthe command line options. Resolving AAAA record is also supported. Please run the program\nwith `-h` to see detailed options on how to control the IPv6 behavior.\n\n[Back to TOC](#table-of-contents)\n\n## 1. Enable Kernel IP forwarding\n\nEdit `/etc/sysctl.conf`, add `net.ipv4.ip_forward=1` and run `sudo sysctl -p /etc/sysctl.conf`.\n\n<details>\n  <summary>IPv6 specific config</summary>\n\n  `net.ipv6.conf.all.forwarding=1` will need to be set as well.\n</details>\n\n[Back to TOC](#table-of-contents)\n\n## 2. Add required firewall rules\n\n\n### Client\n\nClient simply need SNAT enabled on the physical interface to translate Phantun's address into\none that can be used on the physical network. This can be done simply with masquerade.\n\nNote: change `eth0` to whatever actual physical interface name is\n\n[Back to TOC](#table-of-contents)\n\n#### Using nftables\n\n```\ntable inet nat {\n    chain postrouting {\n        type nat hook postrouting priority srcnat; policy accept;\n        iifname tun0 oif eth0 masquerade\n    }\n}\n```\n\nNote: The above rule uses `inet` as the table family type, so it is compatible with\nboth IPv4 and IPv6 usage.\n\n[Back to TOC](#table-of-contents)\n\n#### Using iptables\n\n```\niptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\nip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n```\n\n[Back to TOC](#table-of-contents)\n\n### Server\n\nServer needs to DNAT the TCP listening port to Phantun's TUN interface address.\n\nNote: change `eth0` to whatever actual physical interface name is and `4567` to\nactual TCP port number used by Phantun server\n\n[Back to TOC](#table-of-contents)\n\n#### Using nftables\n\n```\ntable inet nat {\n    chain prerouting {\n        type nat hook prerouting priority dstnat; policy accept;\n        iif eth0 tcp dport 4567 dnat ip to 192.168.201.2\n        iif eth0 tcp dport 4567 dnat ip6 to fcc9::2\n    }\n}\n```\n\n[Back to TOC](#table-of-contents)\n\n#### Using iptables\n\n```\niptables -t nat -A PREROUTING -p tcp -i eth0 --dport 4567 -j DNAT --to-destination 192.168.201.2\nip6tables -t nat -A PREROUTING -p tcp -i eth0 --dport 4567 -j DNAT --to-destination fcc9::2\n```\n\n[Back to TOC](#table-of-contents)\n\n## 3. Run Phantun binaries as non-root (Optional)\n\nIt is ill-advised to run network facing applications as root user. Phantun can be run fully\nas non-root user with the `cap_net_admin` capability.\n\n```\nsudo setcap cap_net_admin=+pe phantun_server\nsudo setcap cap_net_admin=+pe phantun_client\n```\n\n\n[Back to TOC](#table-of-contents)\n\n## 4. Start Phantun daemon\n\n**Note:** Run Phantun executable with `-h` option to see full detailed options.\n\n[Back to TOC](#table-of-contents)\n\n### Server\n\nNote: `4567` is the TCP port Phantun should listen on and must corresponds to the DNAT\nrule specified above. `127.0.0.1:1234` is the UDP Server to connect to for new connections.\n\n```\nRUST_LOG=info /usr/local/bin/phantun_server --local 4567 --remote 127.0.0.1:1234\n```\n\nOr use host name with `--remote`:\n\n```\nRUST_LOG=info /usr/local/bin/phantun_server --local 4567 --remote example.com:1234\n```\n\nNote: Server by default assigns both IPv4 and IPv6 private address to the Tun interface.\nIf you do not wish to use IPv6, you can simply skip creating the IPv6 DNAT rule above and\nthe presence of IPv6 address on the Tun interface should have no side effect to the server.\n\n[Back to TOC](#table-of-contents)\n\n### Client\n\nNote: `127.0.0.1:1234` is the UDP address and port Phantun should listen on. `10.0.0.1:4567` is\nthe Phantun Server to connect.\n\n```\nRUST_LOG=info /usr/local/bin/phantun_client --local 127.0.0.1:1234 --remote 10.0.0.1:4567\n```\n\nOr use host name with `--remote`:\n\n```\nRUST_LOG=info /usr/local/bin/phantun_client --local 127.0.0.1:1234 --remote example.com:4567\n```\n\n<details>\n  <summary>IPv6 specific config</summary>\n\n  ```\n  RUST_LOG=info /usr/local/bin/phantun_client --local 127.0.0.1:1234 --remote [fdxx::1234]:4567\n  ```\n\n  Domain name with AAAA record is also supported.\n</details>\n\n[Back to TOC](#table-of-contents)\n\n# MTU overhead\n\nPhantun aims to keep tunneling overhead to the minimum. The overhead compared to a plain UDP packet\nis the following (using IPv4 below as an example):\n\n**Standard UDP packet:** `20 byte IP header + 8 byte UDP header = 28 bytes`\n\n**Obfuscated packet:** `20 byte IP header + 20 byte TCP header = 40 bytes`\n\n\nNote that Phantun does not add any additional header other than IP and TCP headers in order to pass through\nstateful packet inspection!\n\nPhantun's additional overhead: `12 bytes`. In other words, when using Phantun, the usable payload for\nUDP packet is reduced by 12 bytes. This is the minimum overhead possible when doing such kind\nof obfuscation.\n\n![Packet header diagram](images/packet-headers.png)\n\n[Back to TOC](#table-of-contents)\n\n## MTU calculation for WireGuard\n\nFor people who use Phantun to tunnel [WireGuard®](https://www.wireguard.com) UDP packets, here are some guidelines on figuring\nout the correct MTU to use for your WireGuard interface.\n\n```\nWireGuard MTU = Interface MTU - IPv4 header (20 bytes) - TCP header (20 bytes) - WireGuard overhead (32 bytes)\n```\n\nor\n\n```\nWireGuard MTU = Interface MTU - IPv6 header (40 bytes) - TCP header (20 bytes) - WireGuard overhead (32 bytes)\n```\n\nFor example, for a Ethernet interface with 1500 bytes MTU, the WireGuard interface MTU should be set as:\n\nIPv4: `1500 - 20 - 20 - 32 = 1428 bytes`\nIPv6: `1500 - 40 - 20 - 32 = 1408 bytes`\n\nThe resulted Phantun TCP data packet will be 1500 bytes which does not exceed the\ninterface MTU of 1500. Please note it is strongly recommended to use the same interface\nMTU for both ends of a WireGuard tunnel, or unexpected packet loss may occur and these issues are\ngenerally very hard to troubleshoot.\n\n[Back to TOC](#table-of-contents)\n\n# Version compatibility\n\nWhile the TCP stack is fairly stable, the general expectation is that you should run same minor versions\nof Server/Client of Phantun on both ends to ensure maximum compatibility.\n\n[Back to TOC](#table-of-contents)\n\n# Documentations\n\nFor users who wish to use `fake-tcp` library inside their own project, refer to the documentations for the library at:\n[https://docs.rs/fake-tcp](https://docs.rs/fake-tcp).\n\n[Back to TOC](#table-of-contents)\n\n# Performance\n\nPerformance was tested on 2 AWS `t4g.xlarge` instances with 4 vCPUs and 5 Gb/s NIC over LAN. `nftables` was used to redirect\nUDP stream of `iperf3` to go through the Phantun/udp2raw tunnel between two test instances and MTU has been tuned to avoid fragmentation.\n\nPhantun `v0.3.2` and `udp2raw_arm_asm_aes` `20200818.0` was used. These were the latest release of both projects as of Apr 2022.\n\nTest command: `iperf3 -c <IP> -p <PORT> -R -u -l 1400 -b 1000m -t 30 -P 5`\n\n| Mode                                                                            | Send Speed     | Receive Speed  | Overall CPU Usage                                   |\n|---------------------------------------------------------------------------------|----------------|----------------|-----------------------------------------------------|\n| Direct (1 stream)                                                               | 3.00 Gbits/sec | 2.37 Gbits/sec | 25% (1 core at 100%)                                |\n| Phantun (1 stream)                                                              | 1.30 Gbits/sec | 1.20 Gbits/sec | 60% (1 core at 100%, 3 cores at 50%)                |\n| udp2raw (`cipher-mode=none` `auth-mode=none` `disable-anti-replay`) (1 stream)  | 1.30 Gbits/sec | 715 Mbits/sec  | 40% (1 core at 100%, 1 core at 50%, 2 cores idling) |\n| Direct connection (5 streams)                                                   | 5.00 Gbits/sec | 3.64 Gbits/sec | 25% (1 core at 100%)                                |\n| Phantun (5 streams)                                                             | 5.00 Gbits/sec | 2.38 Gbits/sec | 95% (all cores utilized)                            |\n| udp2raw (`cipher-mode=none` `auth-mode=none` `disable-anti-replay`) (5 streams) | 5.00 Gbits/sec | 770 Mbits/sec  | 50% (2 cores at 100%)                               |\n\nWriteup on some of the techniques used in Phantun to achieve this performance result: [Writing Highly Efficient UDP Server in Rust](https://idndx.com/writing-highly-efficient-udp-server-in-rust/).\n\n[Back to TOC](#table-of-contents)\n\n# Future plans\n\n* Load balancing a single UDP stream into multiple TCP streams\n* Integration tests\n* Auto insertion/removal of required firewall rules\n\n[Back to TOC](#table-of-contents)\n\n# Compariation to udp2raw\n[udp2raw](https://github.com/wangyu-/udp2raw-tunnel) is another popular project by [@wangyu-](https://github.com/wangyu-)\nthat is very similar to what Phantun can do. In fact I took inspirations of Phantun from udp2raw. The biggest reason for\ndeveloping Phantun is because of lack of performance when running udp2raw (especially on multi-core systems such as Raspberry Pi).\nHowever, the goal is never to be as feature complete as udp2raw and only support the most common use cases. Most notably, UDP over ICMP\nand UDP over UDP mode are not supported and there is no anti-replay nor encryption support. The benefit of this is much better\nperformance overall and less MTU overhead because lack of additional headers inside the TCP payload.\n\nHere is a quick overview of comparison between those two to help you choose:\n\n|                                                  |    Phantun    |      udp2raw      |\n|--------------------------------------------------|:-------------:|:-----------------:|\n| UDP over FakeTCP obfuscation                     |       ✅       |         ✅         |\n| UDP over ICMP obfuscation                        |       ❌       |         ✅         |\n| UDP over UDP obfuscation                         |       ❌       |         ✅         |\n| Multi-threaded                                   |       ✅       |         ❌         |\n| Throughput                                       |     Better    |        Good       |\n| Layer 3 mode                                     | TUN interface | Raw sockets + BPF |\n| Tunneling MTU overhead                           |    12 bytes   |      44 bytes     |\n| Seprate TCP connections for each UDP connection  | Client/Server |    Server only    |\n| Anti-replay, encryption                          |       ❌       |         ✅         |\n| IPv6                                             |       ✅       |          ✅        |\n\n[Back to TOC](#table-of-contents)\n\n# License\n\nCopyright 2021-2024 Datong Sun (dndx@idndx.com)\n\nLicensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n[https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)> or the MIT license\n<LICENSE-MIT or [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)>, at your\noption. Files in the project may not be\ncopied, modified, or distributed except according to those terms.\n\n[Back to TOC](#table-of-contents)\n\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "fake-tcp",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "phantun",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}