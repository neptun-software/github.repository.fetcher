{
  "metadata": {
    "timestamp": 1736708967022,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-windowing/winit",
      "stars": 4982,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.26953125,
          "content": "# $ git config blame.ignoreRevsFile .git-blame-ignore-revs\n\n# chore(rustfmt): use nightly\n7b0c7b6cb2c62767ca0c73c857b299883f55a883\n# Rustfmt: use `group_imports`\n2665c120981af548433645c6383b3580dd8f8fc4\n# Use Taplo for TOML formatting\n3398ebe467c43ccfd91916c5b81ff3c68f598556\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1708984375,
          "content": "Cargo.lock\ntarget/\nrls/\n.vscode/\n*~\n#*#\n.DS_Store\n# NPM package used to run ESLint.\n/src/platform_impl/web/script/node_modules\n/src/platform_impl/web/script/package-lock.json\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.36328125,
          "content": "Changelog entries should be put in the [`changelog::unreleased`].\n\nThe changelog can also be viewed [on docs.rs][docs_rs] or [on the current\nmaster docs][master_docs].\n\n[`changelog::unreleased`]: src/changelog/unreleased.md\n[docs_rs]: https://docs.rs/winit/latest/winit/changelog/index.html\n[master_docs]: https://rust-windowing.github.io/winit/winit/changelog/index.html\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.224609375,
          "content": "# Code of Conduct\n\nThe `rust-windowing` project adheres to the [Rust Code of Conduct]. This\ndescribes the minimum behavior expected from all contributors.\n\n[Rust Code of Conduct]: https://www.rust-lang.org/policies/code-of-conduct"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.703125,
          "content": "# Contribution Guidelines\n\nThis document contains guidelines for contributing code to winit. It has to be\nfollowed in order for your patch to be approved and applied.\n\n## Contributing\n\nAnyone can contribute to winit, however given that it's a cross platform\nwindowing toolkit getting certain changes incorporated could be challenging.\n\nTo save your time it's wise to check already opened [pull requests][prs] and\n[issues][issues]. In general, bug fixes and missing implementations are always\naccepted, however larger new API proposals should go into the issue first. When\nin doubt contact us on [Matrix][matrix] or via opening an issue.\n\n### Submitting your work and handling review\n\nAll patches have to be sent on Github as [pull requests][prs]. To simplify your\nlife during review it's recommended to check the \"give contributors write access\nto the branch\" checkbox.\n\n#### Handling review\n\nDuring the review process certain events could require an action from your side,\ncommon patterns and reactions are described below.\n\n_Event:_ The CI fails to build, but it looks like it is not your fault. Not\ncommunicating so could result in maintainers not looking into your patch,\nsince they may assume that you're still working on it.\\\n_Desired behaviour:_ Write a message saying roughly the following \"The CI\nfailure is unrelated\", so that the maintainers will fix it for you.\n\n_Event:_ Maintainer requested changes to your PR.\\\n_Desired behavior:_ Once you address the request, you should re-request a review\nwith GitHub's UI. If you don't agree with what maintainer suggested, you\nshould state your objections and re-request the review. That will indicate that\nthe ball is on maintainer's side.\n\n_Event:_ You've opened a PR, but maintainer shortly after commented that they\nwant to work on that themselves.\\\n_Desired behavior:_ Discuss with the maintainer regarding their plans if they\nwere not outlined in the initial response, because such response means that they\nare not interested in reviewing your code. Such thing could happen when\nunderestimating complexity of the task you're solving or when your patch\nmandate certain downstream designs. In general, the maintainer will likely\nclose your PR in order to prevent work being done on it.\n\n[prs]: https://github.com/rust-windowing/winit/pulls\n[issues]: https://github.com/rust-windowing/winit/issues\n[matrix]: https://matrix.to/#/#rust-windowing:matrix.org\n\n## Maintainers\n\nWinit has plenty of maintainers with different backgrounds, different time\navailable to work on Winit, and reasons to be winit maintainer in the first\nplace. To ensure that Winit's code quality does not decrease over time and to\nmake it easier to teach new maintainers the \"winit way of doing things\" the\ncommon policies and routines are defined in this section.\n\nThe current maintainers for each platform are listed in [this file][CODEOWNERS].\n\n### Contributions handling\n\nThe maintainers must ensure that the external contributions meet Winit's\nquality standards. If it's not, it **is the maintainer's responsibility** to\nbring it on par, which includes:\n\n  - Ensure that formatting is consistent and `CHANGELOG` messages are clear\n    for the end users.\n  - Improve the commit message, so it'll be easier for other maintainers to\n    understand the motivation without going through all the discussions on the\n    particular patch/PR.\n  - Ensure that the proposed patch doesn't break platform parity. If the\n    breakage is desired by contributor, an issue should be opened to discuss\n    with other maintainers before merging.\n  - Always fix CI issues before merging if they don't originate from the\n    submitted work.\n\nHowever, maintainers should give some leeway for external contributors, so they\ndon't feel discouraged contributing, for example:\n\n  - Suggest a patch to resolve style issues, if it's the only issue with the\n    submitted work. Keep in mind that pushing the resolution yourself is not\n    desired, because the contributor might not agree with what you did.\n  - Be more explicit on how things should be done if you don't like the\n    approach.\n  - Suggest to finish the PR for them if they're absent for a while and you need\n    the proposed changes to move forward with something. In such cases the\n    maintainer must preserve attribution with `Co-authored-by`, `Suggested-by`,\n    or keep the original committer.\n  - Rebase their work for them when massive changes to the Winit codebase were\n    introduced.\n\nWhen reviewing code of other maintainers all of the above is on the maintainer\nwho submitted the patch. Interested maintainers could help push the work over\nthe finish line, but teaching other maintainers should be preferred.\n\nFor a _regular_ contributor to winit, the maintainer should slowly start\nrequiring contributor to match *maintainer* quality standards when writing\npatches and commit messages.\n\n### Contributing\n\nWhen submitting a patch, the maintainer should follow the general contributing\nguidelines, however greater attention to detail is expected in this case.\n\nTo make life simpler for other maintainers it's suggested to create your branch\nunder the project repository instead of your own fork. The naming scheme is\n`github_user_name/branch_name`. Doing so will make your work easier to rebase\nfor other maintainers when you're absent.\n\n### Administrative Actions\n\nSome things (such as changing required CI steps, adding contributors, ...)\nrequire administrative permissions. If you don't have those, ask about the\nchange in an issue. If you have the permissions, discuss it with at least one\nother admin before making the change.\n\n### Release process\n\nGiven that winit is a widely used library, we should be able to make a patch\nreleases at any time we want without blocking the development of new features.\n\nTo achieve these goals, a new branch is created for every new release. Releases\nand later patch releases are committed and tagged in this branch.\n\nThe exact steps for an exemplary `0.2.0` release might look like this:\n  1. Initially, the version on the latest master is `0.1.0`\n  2. A new `v0.2.x` branch is created for the release\n  3. Update released `cfg_attr` in `src/changelog/mod.rs` to `v0.2.md`\n  4. Move entries from `src/changelog/unreleased.md` into\n     `src/changelog/v0.2.md`\n  5. In the branch, the version is bumped to `v0.2.0`\n  6. The new commit in the branch is tagged `v0.2.0`\n  7. The version is pushed to crates.io\n  8. A GitHub release is created for the `v0.2.0` tag\n  9. On master, the version is bumped to `0.2.0`, and the changelog is updated\n\nWhen doing a patch release, the process is similar:\n  1. Initially, the version of the latest release is `0.2.0`\n  2. Checkout the `v0.2.x` branch\n  3. Cherry-pick the required non-breaking changes into the `v0.2.x`\n  4. Follow steps 4-9 of the regular release example\n\n[CODEOWNERS]: .github/CODEOWNERS\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 9.26171875,
          "content": "[package]\nauthors = [\"The winit contributors\", \"Pierre Krieger <pierre.krieger1708@gmail.com>\"]\ncategories = [\"gui\"]\ndescription = \"Cross-platform window creation library.\"\ndocumentation = \"https://docs.rs/winit\"\nedition.workspace = true\ninclude = [\n    \"/build.rs\",\n    \"/docs\",\n    \"/examples\",\n    \"/FEATURES.md\",\n    \"/LICENSE\",\n    \"/src\",\n    \"!/src/platform_impl/web/script\",\n    \"/src/platform_impl/web/script/**/*.min.js\",\n    \"/tests\",\n]\nkeywords = [\"windowing\"]\nlicense.workspace = true\nname = \"winit\"\nreadme = \"README.md\"\nrepository.workspace = true\nrust-version.workspace = true\nversion = \"0.30.7\"\n\n[package.metadata.docs.rs]\nfeatures = [\n    \"serde\",\n    \"mint\",\n    # Enabled to get docs to compile\n    \"android-native-activity\",\n]\n# These are all tested in CI\nrustdoc-args = [\"--cfg\", \"docsrs\"]\ntargets = [\n    # Windows\n    \"i686-pc-windows-msvc\",\n    \"x86_64-pc-windows-msvc\",\n    # macOS\n    \"aarch64-apple-darwin\",\n    \"x86_64-apple-darwin\",\n    # Unix (X11 & Wayland)\n    \"i686-unknown-linux-gnu\",\n    \"x86_64-unknown-linux-gnu\",\n    # iOS\n    \"aarch64-apple-ios\",\n    # Android\n    \"aarch64-linux-android\",\n    # Web\n    \"wasm32-unknown-unknown\",\n]\n\n# Features are documented in either `lib.rs` or under `winit::platform`.\n[features]\nandroid-game-activity = [\"android-activity/game-activity\"]\nandroid-native-activity = [\"android-activity/native-activity\"]\ndefault = [\"x11\", \"wayland\", \"wayland-dlopen\", \"wayland-csd-adwaita\"]\nmint = [\"dpi/mint\"]\nserde = [\"dep:serde\", \"cursor-icon/serde\", \"smol_str/serde\", \"dpi/serde\", \"bitflags/serde\"]\nwayland = [\n    \"wayland-client\",\n    \"wayland-backend\",\n    \"wayland-protocols\",\n    \"wayland-protocols-plasma\",\n    \"sctk\",\n    \"ahash\",\n    \"memmap2\",\n]\nwayland-csd-adwaita = [\"sctk-adwaita\", \"sctk-adwaita/ab_glyph\"]\nwayland-csd-adwaita-crossfont = [\"sctk-adwaita\", \"sctk-adwaita/crossfont\"]\nwayland-csd-adwaita-notitle = [\"sctk-adwaita\"]\nwayland-dlopen = [\"wayland-backend/dlopen\"]\nx11 = [\"x11-dl\", \"bytemuck\", \"percent-encoding\", \"xkbcommon-dl/x11\", \"x11rb\"]\n\n[build-dependencies]\ncfg_aliases = \"0.2.1\"\n\n[dependencies]\nbitflags = \"2\"\ncursor-icon = \"1.1.0\"\ndpi = { version = \"0.1.1\", path = \"dpi\" }\nrwh_06 = { package = \"raw-window-handle\", version = \"0.6\", features = [\"std\"] }\nserde = { workspace = true, optional = true }\nsmol_str = \"0.3\"\ntracing = { version = \"0.1.40\", default-features = false }\n\n[dev-dependencies]\nimage = { version = \"0.25.0\", default-features = false, features = [\"png\"] }\ntracing = { version = \"0.1.40\", default-features = false, features = [\"log\"] }\ntracing-subscriber = { version = \"0.3.18\", features = [\"env-filter\"] }\n\n[target.'cfg(not(target_os = \"android\"))'.dev-dependencies]\nsoftbuffer = { version = \"0.4.6\", default-features = false, features = [\n    \"x11\",\n    \"x11-dlopen\",\n    \"wayland\",\n    \"wayland-dlopen\",\n] }\n\n# Android\n[target.'cfg(target_os = \"android\")'.dependencies]\nandroid-activity = \"0.6.0\"\nndk = { version = \"0.9.0\", features = [\"rwh_06\"], default-features = false }\n\n# AppKit or UIKit\n[target.'cfg(target_vendor = \"apple\")'.dependencies]\nblock2 = \"0.5.1\"\ncore-foundation = \"0.9.3\"\nobjc2 = \"0.5.2\"\n\n# AppKit\n[target.'cfg(target_os = \"macos\")'.dependencies]\ncore-graphics = \"0.23.1\"\nobjc2-app-kit = { version = \"0.2.2\", features = [\n    \"NSAppearance\",\n    \"NSApplication\",\n    \"NSBitmapImageRep\",\n    \"NSButton\",\n    \"NSColor\",\n    \"NSControl\",\n    \"NSCursor\",\n    \"NSDragging\",\n    \"NSEvent\",\n    \"NSGraphics\",\n    \"NSGraphicsContext\",\n    \"NSImage\",\n    \"NSImageRep\",\n    \"NSMenu\",\n    \"NSMenuItem\",\n    \"NSOpenGLView\",\n    \"NSPanel\",\n    \"NSPasteboard\",\n    \"NSResponder\",\n    \"NSRunningApplication\",\n    \"NSScreen\",\n    \"NSTextInputClient\",\n    \"NSTextInputContext\",\n    \"NSToolbar\",\n    \"NSView\",\n    \"NSWindow\",\n    \"NSWindowScripting\",\n    \"NSWindowTabGroup\",\n] }\nobjc2-foundation = { version = \"0.2.2\", features = [\n    \"block2\",\n    \"dispatch\",\n    \"NSArray\",\n    \"NSAttributedString\",\n    \"NSData\",\n    \"NSDictionary\",\n    \"NSDistributedNotificationCenter\",\n    \"NSEnumerator\",\n    \"NSGeometry\",\n    \"NSKeyValueObserving\",\n    \"NSNotification\",\n    \"NSObjCRuntime\",\n    \"NSOperation\",\n    \"NSPathUtilities\",\n    \"NSProcessInfo\",\n    \"NSRunLoop\",\n    \"NSString\",\n    \"NSThread\",\n    \"NSValue\",\n] }\n\n# UIKit\n[target.'cfg(all(target_vendor = \"apple\", not(target_os = \"macos\")))'.dependencies]\nobjc2-foundation = { version = \"0.2.2\", features = [\n    \"block2\",\n    \"dispatch\",\n    \"NSArray\",\n    \"NSEnumerator\",\n    \"NSGeometry\",\n    \"NSObjCRuntime\",\n    \"NSOperation\",\n    \"NSString\",\n    \"NSProcessInfo\",\n    \"NSThread\",\n    \"NSSet\",\n] }\nobjc2-ui-kit = { version = \"0.2.2\", features = [\n    \"UIApplication\",\n    \"UIDevice\",\n    \"UIEvent\",\n    \"UIGeometry\",\n    \"UIGestureRecognizer\",\n    \"UITextInput\",\n    \"UITextInputTraits\",\n    \"UIOrientation\",\n    \"UIPanGestureRecognizer\",\n    \"UIPinchGestureRecognizer\",\n    \"UIResponder\",\n    \"UIRotationGestureRecognizer\",\n    \"UIScreen\",\n    \"UIScreenMode\",\n    \"UITapGestureRecognizer\",\n    \"UITouch\",\n    \"UITraitCollection\",\n    \"UIView\",\n    \"UIViewController\",\n    \"UIWindow\",\n] }\n\n# Windows\n[target.'cfg(target_os = \"windows\")'.dependencies]\nunicode-segmentation = \"1.7.1\"\nwindows-sys = { version = \"0.52.0\", features = [\n    \"Win32_Devices_HumanInterfaceDevice\",\n    \"Win32_Foundation\",\n    \"Win32_Globalization\",\n    \"Win32_Graphics_Dwm\",\n    \"Win32_Graphics_Gdi\",\n    \"Win32_Media\",\n    \"Win32_System_Com_StructuredStorage\",\n    \"Win32_System_Com\",\n    \"Win32_System_LibraryLoader\",\n    \"Win32_System_Ole\",\n    \"Win32_Security\",\n    \"Win32_System_SystemInformation\",\n    \"Win32_System_SystemServices\",\n    \"Win32_System_Threading\",\n    \"Win32_System_WindowsProgramming\",\n    \"Win32_UI_Accessibility\",\n    \"Win32_UI_Controls\",\n    \"Win32_UI_HiDpi\",\n    \"Win32_UI_Input_Ime\",\n    \"Win32_UI_Input_KeyboardAndMouse\",\n    \"Win32_UI_Input_Pointer\",\n    \"Win32_UI_Input_Touch\",\n    \"Win32_UI_Shell\",\n    \"Win32_UI_TextServices\",\n    \"Win32_UI_WindowsAndMessaging\",\n] }\n\n# Linux\n[target.'cfg(all(unix, not(any(target_os = \"redox\", target_family = \"wasm\", target_os = \"android\", target_vendor = \"apple\"))))'.dependencies]\nahash = { version = \"0.8.7\", features = [\"no-rng\"], optional = true }\nbytemuck = { version = \"1.13.1\", default-features = false, optional = true }\ncalloop = \"0.13.0\"\nlibc = \"0.2.64\"\nmemmap2 = { version = \"0.9.0\", optional = true }\npercent-encoding = { version = \"2.0\", optional = true }\nrustix = { version = \"0.38.4\", default-features = false, features = [\n    \"std\",\n    \"system\",\n    \"thread\",\n    \"process\",\n] }\nsctk = { package = \"smithay-client-toolkit\", version = \"0.19.2\", default-features = false, features = [\n    \"calloop\",\n], optional = true }\nsctk-adwaita = { version = \"0.10.1\", default-features = false, optional = true }\nwayland-backend = { version = \"0.3.5\", default-features = false, features = [\n    \"client_system\",\n], optional = true }\nwayland-client = { version = \"0.31.4\", optional = true }\nwayland-protocols = { version = \"0.32.2\", features = [\"staging\"], optional = true }\nwayland-protocols-plasma = { version = \"0.3.2\", features = [\"client\"], optional = true }\nx11-dl = { version = \"2.19.1\", optional = true }\nx11rb = { version = \"0.13.0\", default-features = false, features = [\n    \"allow-unsafe-code\",\n    \"cursor\",\n    \"dl-libxcb\",\n    \"randr\",\n    \"resource_manager\",\n    \"sync\",\n    \"xinput\",\n    \"xkb\",\n], optional = true }\nxkbcommon-dl = \"0.4.2\"\n\n# Orbital\n[target.'cfg(target_os = \"redox\")'.dependencies]\norbclient = { version = \"0.3.47\", default-features = false }\nredox_syscall = \"0.5.7\"\n\n# Web\n[target.'cfg(target_family = \"wasm\")'.dependencies]\njs-sys = \"0.3.70\"\npin-project = \"1\"\nwasm-bindgen = \"0.2.93\"\nwasm-bindgen-futures = \"0.4.43\"\nweb-time = \"1\"\nweb_sys = { package = \"web-sys\", version = \"0.3.70\", features = [\n    \"AbortController\",\n    \"AbortSignal\",\n    \"Blob\",\n    \"BlobPropertyBag\",\n    \"console\",\n    \"CssStyleDeclaration\",\n    \"Document\",\n    \"DomException\",\n    \"DomRect\",\n    \"DomRectReadOnly\",\n    \"Element\",\n    \"Event\",\n    \"EventTarget\",\n    \"FocusEvent\",\n    \"HtmlCanvasElement\",\n    \"HtmlElement\",\n    \"HtmlHtmlElement\",\n    \"HtmlImageElement\",\n    \"ImageBitmap\",\n    \"ImageBitmapOptions\",\n    \"ImageBitmapRenderingContext\",\n    \"ImageData\",\n    \"IntersectionObserver\",\n    \"IntersectionObserverEntry\",\n    \"KeyboardEvent\",\n    \"MediaQueryList\",\n    \"MessageChannel\",\n    \"MessagePort\",\n    \"Navigator\",\n    \"Node\",\n    \"OrientationLockType\",\n    \"OrientationType\",\n    \"PageTransitionEvent\",\n    \"Permissions\",\n    \"PermissionState\",\n    \"PermissionStatus\",\n    \"PointerEvent\",\n    \"PremultiplyAlpha\",\n    \"ResizeObserver\",\n    \"ResizeObserverBoxOptions\",\n    \"ResizeObserverEntry\",\n    \"ResizeObserverOptions\",\n    \"ResizeObserverSize\",\n    \"Screen\",\n    \"ScreenOrientation\",\n    \"Url\",\n    \"VisibilityState\",\n    \"WheelEvent\",\n    \"Window\",\n    \"Worker\",\n] }\n\n[target.'cfg(all(target_family = \"wasm\", target_feature = \"atomics\"))'.dependencies]\natomic-waker = \"1\"\nconcurrent-queue = { version = \"2\", default-features = false }\n\n[target.'cfg(target_family = \"wasm\")'.dev-dependencies]\nconsole_error_panic_hook = \"0.1\"\ntracing-web = \"0.1\"\nwasm-bindgen-test = \"0.3\"\n\n[[example]]\ndoc-scrape-examples = true\nname = \"window\"\n\n[[example]]\nname = \"child_window\"\n\n[workspace]\nmembers = [\"dpi\"]\nresolver = \"2\"\n\n[workspace.package]\nedition = \"2021\"\nlicense = \"Apache-2.0\"\nrepository = \"https://github.com/rust-windowing/winit\"\nrust-version = \"1.73\"\n\n[workspace.dependencies]\nmint = \"0.5.6\"\nserde = { version = \"1\", features = [\"serde_derive\"] }\n"
        },
        {
          "name": "FEATURES.md",
          "type": "blob",
          "size": 2.478515625,
          "content": "# Winit Scope\n\nWinit aims to expose an interface that abstracts over window creation and input handling and can\nbe used to create both games and applications. It supports the following main graphical platforms:\n- Desktop\n  - Windows\n  - macOS\n  - Unix\n    - via X11\n    - via Wayland\n  - Redox OS, via Orbital\n- Mobile\n  - iOS\n  - Android\n- Web\n\nMost platforms expose capabilities that cannot be meaningfully transposed onto others. Winit does not\naim to support every single feature of every platform, but rather to abstract over the common features\navailable everywhere. In this context, APIs exposed in winit can be split into different \"support tiers\":\n\n- **Core:** Features that are essential to providing a well-formed abstraction over each platform's\n  windowing and input APIs.\n- **Platform:** Platform-specific features that can't be meaningfully exposed through a common API and\n  cannot be implemented outside of Winit without exposing a significant amount of Winit's internals\n  or interfering with Winit's abstractions.\n- **Usability:** Features that are not strictly essential to Winit's functionality, but provide meaningful\n  usability improvements and cannot be reasonably implemented in an external crate. These are\n  generally optional and exposed through Cargo features.\n\nCore features are taken care of by the core Winit maintainers. Platform features are not.\nWhen a platform feature is submitted, the submitter is considered the expert in the\nfeature and may be asked to support the feature should it break in the future.\n\nWinit ***does not*** directly expose functionality for drawing inside windows or creating native\nmenus, but ***does*** commit to providing APIs that higher-level crates can use to implement that\nfunctionality.\n\n## `1.0` and stability\n\nWhen all core features are implemented to the satisfaction of the Winit maintainers, Winit 1.0 will\nbe released and the library will enter maintenance mode. For the most part, new core features will not\nbe added past this point. New platform features may be accepted and exposed through point releases.\n\n### Tier upgrades\nSome platform features could, in theory, be exposed across multiple platforms, but have not gone\nthrough the implementation work necessary to function on all platforms. When one of these features\ngets implemented across all platforms, a PR can be opened to upgrade the feature to a core feature.\nIf that gets accepted, the platform-specific functions get deprecated and become permanently\nexposed through the core, cross-platform API.\n"
        },
        {
          "name": "HALL_OF_CHAMPIONS.md",
          "type": "blob",
          "size": 1.2802734375,
          "content": "# Hall of Champions\n\nThe winit maintainers would like to recognize the following former winit\ncontributors, without whom winit would not exist in its current form. We thank\nthem deeply for their time and efforts and wish them the best of luck in their\nfuture endeavors:\n\n* [@tomaka]: For creating the winit project and guiding it through its early\n  years of existence.\n* [@vberger]: For diligently creating the Wayland backend and being its\n  extremely helpful and benevolent maintainer for years.\n* [@francesca64]: For taking over the responsibility of maintaining almost every\n  winit backend and standardizing HiDPI support across all of them.\n* [@Osspial]: For heroically landing EventLoop 2.0 and valiantly ushering in a\n  vastly more sustainable era of winit.\n* [@goddessfreya]: For selflessly taking over maintainership of glutin and her\n  stellar dedication to improving both winit and glutin.\n* [@ArturKovacs]: For consistently maintaining the macOS backend and for his immense involvement in designing and implementing the new keyboard API.\n\n[@tomaka]: https://github.com/tomaka\n[@vberger]: https://github.com/vberger\n[@francesca64]: https://github.com/francesca64\n[@Osspial]: https://github.com/Osspial\n[@goddessfreya]: https://github.com/goddessfreya\n[@ArturKovacs]: https://github.com/ArturKovacs\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0576171875,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8310546875,
          "content": "# winit - Cross-platform window creation and management in Rust\n\n[![Crates.io](https://img.shields.io/crates/v/winit.svg)](https://crates.io/crates/winit)\n[![Docs.rs](https://docs.rs/winit/badge.svg)](https://docs.rs/winit)\n[![UNSTABLE docs](https://img.shields.io/github/actions/workflow/status/rust-windowing/winit/docs.yml?branch=master&label=UNSTABLE%20docs\n)](https://rust-windowing.github.io/winit/winit/index.html)\n[![CI Status](https://github.com/rust-windowing/winit/workflows/CI/badge.svg)](https://github.com/rust-windowing/winit/actions)\n\n```toml\n[dependencies]\nwinit = \"0.30.7\"\n```\n\n## [Documentation](https://docs.rs/winit)\n\nFor features _within_ the scope of winit, see [FEATURES.md](FEATURES.md).\n\nFor features _outside_ the scope of winit, see [Are we GUI Yet?](https://areweguiyet.com/) and [Are we game yet?](https://arewegameyet.rs/), depending on what kind of project you're looking to do.\n\n## Contact Us\n\nJoin us in our [![Matrix](https://img.shields.io/badge/Matrix-%23rust--windowing%3Amatrix.org-blueviolet.svg)](https://matrix.to/#/#rust-windowing:matrix.org) room.\n\nThe maintainers have a meeting every friday at UTC 15. The meeting notes can be found [here](https://hackmd.io/@winit-meetings).\n\n## Usage\n\nWinit is a window creation and management library. It can create windows and lets you handle\nevents (for example: the window being resized, a key being pressed, a mouse movement, etc.)\nproduced by the window.\n\nWinit is designed to be a low-level brick in a hierarchy of libraries. Consequently, in order to\nshow something on the window you need to use the platform-specific getters provided by winit, or\nanother library.\n\n## MSRV Policy\n\nThis crate's Minimum Supported Rust Version (MSRV) is **1.73**. Changes to\nthe MSRV will be accompanied by a minor version bump.\n\nAs a **tentative** policy, the upper bound of the MSRV is given by the following\nformula:\n\n```\nmin(sid, stable - 3)\n```\n\nWhere `sid` is the current version of `rustc` provided by [Debian Sid], and\n`stable` is the latest stable version of Rust. This bound may be broken in case of a major ecosystem shift or a security vulnerability.\n\n[Debian Sid]: https://packages.debian.org/sid/rustc\n\nAn exception is made for the Android platform, where a higher Rust version\nmust be used for certain Android features. In this case, the MSRV will be\ncapped at the latest stable version of Rust minus three. This inconsistency is\nnot reflected in Cargo metadata, as it is not powerful enough to expose this\nrestriction.\n\nRedox OS is also not covered by this MSRV policy, as it requires a Rust nightly\ntoolchain to compile.\n\nAll crates in the [`rust-windowing`] organizations have the\nsame MSRV policy.\n\n[`rust-windowing`]: https://github.com/rust-windowing\n\n### Platform-specific usage\n\nCheck out the [`winit::platform`](https://docs.rs/winit/latest/winit/platform/index.html) module for platform-specific usage.\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 0.9716796875,
          "content": "use cfg_aliases::cfg_aliases;\n\nfn main() {\n    // The script doesn't depend on our code.\n    println!(\"cargo:rerun-if-changed=build.rs\");\n\n    // Setup cfg aliases.\n    cfg_aliases! {\n        // Systems.\n        android_platform: { target_os = \"android\" },\n        web_platform: { all(target_family = \"wasm\", target_os = \"unknown\") },\n        macos_platform: { target_os = \"macos\" },\n        ios_platform: { all(target_vendor = \"apple\", not(target_os = \"macos\")) },\n        windows_platform: { target_os = \"windows\" },\n        free_unix: { all(unix, not(target_vendor = \"apple\"), not(android_platform), not(target_os = \"emscripten\")) },\n        redox: { target_os = \"redox\" },\n\n        // Native displays.\n        x11_platform: { all(feature = \"x11\", free_unix, not(redox)) },\n        wayland_platform: { all(feature = \"wayland\", free_unix, not(redox)) },\n        orbital_platform: { redox },\n    }\n\n    // Winit defined cfgs.\n    println!(\"cargo:rustc-check-cfg=cfg(unreleased_changelogs)\");\n}\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 1.6435546875,
          "content": "disallowed-methods = [\n    { path = \"objc2_app_kit::NSView::visibleRect\", reason = \"We expose a render target to the user, and visibility is not really relevant to that (and can break if you don't use the rectangle position as well). Use `frame` instead.\" },\n    { path = \"objc2_app_kit::NSWindow::setFrameTopLeftPoint\", reason = \"Not sufficient when working with Winit's coordinate system, use `flip_window_screen_coordinates` instead\" },\n    { path = \"web_sys::Document::exit_fullscreen\", reason = \"Doesn't account for compatibility with Safari\" },\n    { path = \"web_sys::Document::fullscreen_element\", reason = \"Doesn't account for compatibility with Safari\" },\n    { path = \"web_sys::Element::request_fullscreen\", reason = \"Doesn't account for compatibility with Safari\" },\n    { path = \"web_sys::HtmlCanvasElement::height\", reason = \"Winit shouldn't touch the internal canvas size\" },\n    { path = \"web_sys::HtmlCanvasElement::set_height\", reason = \"Winit shouldn't touch the internal canvas size\" },\n    { path = \"web_sys::HtmlCanvasElement::set_width\", reason = \"Winit shouldn't touch the internal canvas size\" },\n    { path = \"web_sys::HtmlCanvasElement::width\", reason = \"Winit shouldn't touch the internal canvas size\" },\n    { path = \"web_sys::HtmlElement::style\", reason = \"cache this to reduce calls to JS\" },\n    { path = \"web_sys::Window::document\", reason = \"cache this to reduce calls to JS\" },\n    { path = \"web_sys::Window::get_computed_style\", reason = \"cache this to reduce calls to JS\" },\n    { path = \"web_sys::Window::navigator\", reason = \"cache this to reduce calls to JS\" },\n    { path = \"web_sys::window\", reason = \"is not available in every context\" },\n]\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 2.3193359375,
          "content": "# https://embarkstudios.github.io/cargo-deny\n# cargo install cargo-deny\n# cargo update && cargo deny --target aarch64-apple-ios check\n# Note: running just `cargo deny check` without a `--target` will result in\n# false positives due to https://github.com/EmbarkStudios/cargo-deny/issues/324\n[graph]\nall-features = true\nexclude-dev = true\ntargets = [\n    { triple = \"aarch64-apple-darwin\" },\n    { triple = \"aarch64-apple-ios\" },\n    { triple = \"aarch64-linux-android\" },\n    { triple = \"i686-pc-windows-gnu\" },\n    { triple = \"i686-pc-windows-msvc\" },\n    { triple = \"i686-unknown-linux-gnu\" },\n    { triple = \"wasm32-unknown-unknown\", features = [\n        \"atomics\",\n    ] },\n    { triple = \"x86_64-apple-darwin\" },\n    { triple = \"x86_64-apple-ios\" },\n    { triple = \"x86_64-pc-windows-gnu\" },\n    { triple = \"x86_64-pc-windows-msvc\" },\n    { triple = \"x86_64-unknown-linux-gnu\" },\n    { triple = \"x86_64-unknown-redox\" },\n]\n\n[licenses]\nallow = [\n    \"Apache-2.0\",   # https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)\n    \"BSD-2-Clause\", # https://tldrlegal.com/license/bsd-2-clause-license-(freebsd)\n    \"BSD-3-Clause\", # https://tldrlegal.com/license/bsd-3-clause-license-(revised)\n    \"ISC\",          # https://tldrlegal.com/license/isc-license\n    \"MIT\",          # https://tldrlegal.com/license/mit-license\n    \"Unicode-3.0\",  # https://spdx.org/licenses/Unicode-3.0.html\n]\nconfidence-threshold = 1.0\nprivate = { ignore = true }\n\n[bans]\nmultiple-versions = \"deny\"\nskip = [{ crate = \"bitflags@1\", reason = \"the ecosystem is in the process of migrating\" }]\nwildcards = \"allow\"                                                                        # at least until https://github.com/EmbarkStudios/cargo-deny/issues/241 is fixed\n\n[bans.build]\ninclude-archives = true\ninterpreted = \"deny\"\n\n[[bans.build.bypass]]\nallow = [\n    { path = \"generate-bindings.sh\", checksum = \"268ec23248218d779e33853cdc60e2985e70214ff004716cd734270de1f6b561\" },\n]\ncrate = \"android-activity\"\n\n[[bans.build.bypass]]\nallow-globs = [\"freetype2/*\"]\ncrate = \"freetype-sys\"\n\n[[bans.build.bypass]]\nallow-globs = [\"lib/*.a\"]\ncrate = \"windows_i686_gnu\"\n\n[[bans.build.bypass]]\nallow-globs = [\"lib/*.lib\"]\ncrate = \"windows_i686_msvc\"\n\n[[bans.build.bypass]]\nallow-globs = [\"lib/*.a\"]\ncrate = \"windows_x86_64_gnu\"\n\n[[bans.build.bypass]]\nallow-globs = [\"lib/*.lib\"]\ncrate = \"windows_x86_64_msvc\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dpi",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.560546875,
          "content": "comment_width = 100\ncondense_wildcard_suffixes = true\nerror_on_unformatted = true\nformat_code_in_doc_comments = true\nformat_macro_bodies = true\nformat_macro_matchers = true\nformat_strings = true\ngroup_imports = \"StdExternalCrate\"\nhex_literal_case = \"Lower\"\nimports_granularity = \"Module\"\nmatch_block_trailing_comma = true\nnewline_style = \"Unix\"\nnormalize_comments = true\nnormalize_doc_attributes = true\noverflow_delimited_expr = true\n# Some macros break with this.\nreorder_impl_items = false\nuse_field_init_shorthand = true\nuse_small_heuristics = \"Max\"\nwrap_comments = true\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "taplo.toml",
          "type": "blob",
          "size": 0.0966796875,
          "content": "[formatting]\nallowed_blank_lines = 1\ncolumn_width = 100\nindent_string = '    '\nreorder_keys = true\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "typos.toml",
          "type": "blob",
          "size": 0.5078125,
          "content": "# documentation: https://github.com/crate-ci/typos/blob/master/docs/reference.md\n\n[default.extend-identifiers]\nTME_LEAVE = \"TME_LEAVE\"             # From windows_sys::Win32::UI::Input::KeyboardAndMouse::TME_LEAVE\nXF86_Calculater = \"XF86_Calculater\" # From xkbcommon_dl::keysyms::XF86_Calculater\nptd = \"ptd\"                         # From windows_sys::Win32::System::Com::FORMATETC { ptd, ..}\nrequestor = \"requestor\"             # From x11_dl::xlib::XSelectionEvent { requestor ..}\n\n[files]\nextend-exclude = [\"*.drawio\"]\n"
        }
      ]
    }
  ]
}