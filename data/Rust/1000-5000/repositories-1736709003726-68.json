{
  "metadata": {
    "timestamp": 1736709003726,
    "page": 68,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PyO3/maturin",
      "stars": 4098,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 1.240234375,
          "content": "env:\n  RUST_BACKTRACE: 1\n  CARGO_INCREMENTAL: 0\n  CARGO_TERM_COLOR: always\n  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n\nbuild_and_test: &BUILD_AND_TEST\n  # only run tasks on pull request or github merge queue branches\n  only_if: $CIRRUS_BRANCH =~ 'gh-readonly-queue/.*' || $CIRRUS_PR != \"\"\n  setup_script:\n    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable\n    - rustup target add wasm32-wasip1\n    - python3 -m pip install --upgrade cffi virtualenv\n  build_script:\n    - cargo build\n  test_script:\n    - cargo test\n\nfreebsd_task:\n  name: Test (x86_64 FreeBSD)\n  freebsd_instance:\n    image_family: freebsd-14-0\n  env:\n    PATH: $HOME/.cargo/bin:$PATH\n  target_cache:\n    folder: target\n    fingerprint_script:\n      - echo $CIRRUS_OS\n      - cat Cargo.lock\n  install_script:\n    - pkg install -y bash git python\n    - python3 -m ensurepip\n  <<: *BUILD_AND_TEST\n\nlinux_aarch64_task:\n  name: Test (arm64 Linux)\n  arm_container:\n    image: python:3.11\n    cpu: 4\n    memory: 4G\n  env:\n    PATH: /root/.cargo/bin:$PATH\n  target_cache:\n    folder: target\n    fingerprint_script:\n      - echo $CIRRUS_OS\n      - cat Cargo.lock\n  install_script:\n    - python3 -m pip install uniffi-bindgen==0.28.0\n  <<: *BUILD_AND_TEST\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.1064453125,
          "content": "[codespell]\nignore-words-list = crate,socio-economic\nskip = ./.git,./target,./test-crates/venvs,./guide/book\n"
        },
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": "**/.pytest_cache\n**/.tox\n**/__pycache__\n**/target\n**/venv*\n.dockerignore\n.git\n.idea\n.travis.yml\n.venv\nDockerfile*\nappveyor.yml\nci\nsysconfig\ntest-crates\ntest-data\ntest-dockerfile.sh\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.189453125,
          "content": "target/\nvenv*/\n.venv/\n.pytest_cache/\n.tox/\n*.o\n*.so\n*.py[cdo]\n__pycache__/\n*.egg-info/\n*.egg\ndist/\nbuild\ndist\ntags\ntest-crates/wheels/\ntest-crates/targets/\ntest-crates/venvs/\nnode_modules\n.idea\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.8466796875,
          "content": "# run all hooks with:\n# pre-commit run --hook-stage manual --all\nci:\n  skip:\n    # pre-commit.ci doesn't have Rust installed\n    - cargo-fmt\n    - cargo-deny\n\nrepos:\n  - repo: local\n    hooks:\n      - id: cargo-fmt  # rustup component add rustfmt\n        name: cargo fmt\n        entry: cargo fmt --all --\n        language: system\n        types: [rust]\n        pass_filenames: false\n\n      - id: cargo-deny  # cargo install --locked cargo-deny\n        name: cargo deny\n        entry: cargo deny --all-features check --\n        language: system\n        pass_filenames: false\n\n      - id: cargo-check\n        name: cargo check\n        entry: cargo check --all-features --all-targets --\n        language: system\n        pass_filenames: false\n        types: [rust]\n        stages: [manual]  # because it's slow\n\n      - id: cargo-clippy  # rustup component add clippy\n        name: cargo clippy\n        entry: cargo clippy --tests --all-features -- -D warnings\n        language: system\n        pass_filenames: false\n        types: [rust]\n        stages: [manual]  # because it's slow\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-yaml\n      - id: check-toml\n      - id: end-of-file-fixer\n        exclude: |\n          (?x)(\n              (^sysconfig/)|\n              (.*\\.stdout)\n          )\n      - id: trailing-whitespace\n        exclude: |\n          (?x)(\n              (^sysconfig/)|\n              (.*\\.stdout)\n          )\n      - id: mixed-line-ending\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff-format\n      - id: ruff\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.14.1\n    hooks:\n      - id: mypy\n        entry: mypy maturin/\n        pass_filenames: false\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n    - id: codespell\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 85.3125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418c75fa768af9c03be99d17643f93f79bbba589895012a80e3452a19ddda15b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"038dfcf04a5feb68e9c60b21c9625a54c2c0616e79b72b0fd87075a056ae1d1b\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c03a11a9034d92058ceb6ee011ce58af4a9bf61491aa7e1e59ecd24bd40d22d4\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad186efb764318d35165f1758e7dcef3b10628e26d41a44bc5550652e6804391\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61a38449feb7068f52bb06c12759005cf459ee52bb4adc1d5a7c4322d716fb19\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86fdf8605db99b54d3cd748a44c6d04df638eb5dafb219b135d0149bd0db01f6\"\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223\"\ndependencies = [\n \"derive_arbitrary\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"automod\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edf3ee19dbc0a46d740f6f0926bde8c50f02bdbc7b536842da28f6ac56513a8b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf4b9d6a944f767f8e5e0db018570623c85f3d925ac718db4e06d0187adb21c1\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"boxcar\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2721c3c5a6f0e7f7e607125d963fedeb765f545f67adc9d71ed934693881eb42\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40723b8fb387abc38f4f4a37c09073622e41dd12327033091ef8950659e6dc0c\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"bytesize\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e368af43e418a04d52505cf3dbc23dda4e3407ae2fa99fd0e4f308ce546acc\"\n\n[[package]]\nname = \"bzip2\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdb116a6ef3f6c3698828873ad02c3014b3c85cadb88496095628e3ef1e347f8\"\ndependencies = [\n \"bzip2-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"bzip2-sys\"\nversion = \"0.1.11+1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"736a955f3fa7875102d57c82b8cac37ec45224a07fd32d58f9f7a186b6cd4cdc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"cab\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"171228650e6721d5acc0868a462cd864f49ac5f64e4a42cde270406e64e404d2\"\ndependencies = [\n \"byteorder\",\n \"flate2\",\n \"lzxd\",\n \"time\",\n]\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-config2\"\nversion = \"0.1.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d83ce0be8bd1479e5de6202def660e6c7e27e4e0599bffa4fed05bd380ec2ede\"\ndependencies = [\n \"home\",\n \"serde\",\n \"serde_derive\",\n \"toml_edit 0.22.22\",\n]\n\n[[package]]\nname = \"cargo-options\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3540247c0a37a76eb324acc238dc617786ea22c43b95da560c82a8f2714321f\"\ndependencies = [\n \"anstyle\",\n \"clap\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24b1f0365a6c6bb4020cd05806fd0d33c44d38046b8bd7f0e40814b9763cabfc\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-xwin\"\nversion = \"0.18.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76ddeb44d5109bca38ed11f0400b0385b5ba3fc03e737d188d9b86d784daeb49\"\ndependencies = [\n \"anyhow\",\n \"cargo-config2\",\n \"cargo-options\",\n \"clap\",\n \"dirs\",\n \"fs-err\",\n \"indicatif\",\n \"native-tls\",\n \"paste\",\n \"path-slash\",\n \"rustls\",\n \"rustls-pemfile\",\n \"serde\",\n \"serde_json\",\n \"tar\",\n \"tracing-subscriber\",\n \"ureq\",\n \"which\",\n \"xwin\",\n \"xz2\",\n]\n\n[[package]]\nname = \"cargo-zigbuild\"\nversion = \"0.19.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cc649328f39bbf1ef92ef753406e1785ff1074941c398e5214b6c74d318a9e\"\ndependencies = [\n \"anyhow\",\n \"cargo-config2\",\n \"cargo-options\",\n \"cargo_metadata\",\n \"clap\",\n \"crc\",\n \"dirs\",\n \"fs-err\",\n \"path-slash\",\n \"rustc_version\",\n \"rustflags\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"shlex\",\n \"target-lexicon\",\n \"which\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc309ed89476c8957c50fb818f56fe894db857866c3e163335faa91dc34eb85\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"cbindgen\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fce8dd7fcfcbf3a0a87d8f515194b49d6135acab73e18bd380d1d93bb1a15eb\"\ndependencies = [\n \"heck 0.4.1\",\n \"indexmap\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn\",\n \"tempfile\",\n \"toml\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07b1695e2c7e8fc85310cde85aeaab7e3097f593c91d209d3f9df76c928100f0\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfb\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8a4f8e55be323b378facfcf1f06aa97f6ec17cf4ac84fb17325093aaf62da41\"\ndependencies = [\n \"byteorder\",\n \"fnv\",\n \"uuid\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"charset\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1f927b07c74ba84c7e5fe4db2baeb3e996ab2688992e39ac68ce3220a677c7e\"\ndependencies = [\n \"base64 0.22.1\",\n \"encoding_rs\",\n]\n\n[[package]]\nname = \"chumsky\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eebd66744a15ded14960ab4ccdbfb51ad3b81f51f3f04a80adac98c985396c9\"\ndependencies = [\n \"hashbrown 0.14.5\",\n \"stacker\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5db83dced34638ad474f39f250d7fea9598bdd239eaced1bdf45d597da0f433f\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7e204572485eb3fbf28f871612191521df159bc3e15a9f5064c66dba3a8c05f\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2020fa13af48afc65a9a87335bda648309ab3d154cd03c7ff95b378c7ed39c4\"\ndependencies = [\n \"clap\",\n]\n\n[[package]]\nname = \"clap_complete_command\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da8e198c052315686d36371e8a3c5778b7852fc75cc313e4e11eeb7a644a1b62\"\ndependencies = [\n \"clap\",\n \"clap_complete\",\n \"clap_complete_nushell\",\n]\n\n[[package]]\nname = \"clap_complete_nushell\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1accf1b463dee0d3ab2be72591dccdab8bef314958340447c882c4c72acfe2a3\"\ndependencies = [\n \"clap\",\n \"clap_complete\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c780290ccf4fb26629baa7a1081e68ced113f1d3ec302fa5948f1c381ebf06c6\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b82cf0babdbd58558212896d1a4272303a57bdb245c2bf1147185fb45640e70\"\n\n[[package]]\nname = \"cli-table\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adfbb116d9e2c4be7011360d0c0bee565712c11e969c9609b25b619366dc379d\"\ndependencies = [\n \"termcolor\",\n \"unicode-width 0.1.13\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b6a852b24ab71dffc585bcb46eaf7959d175cb865a7152e35b348d1b2960422\"\n\n[[package]]\nname = \"configparser\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e57e3272f0190c3f1584272d613719ba5fc7df7f4942fe542e63d949cf3a649b\"\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"unicode-width 0.1.13\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"content_inspector\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7bda66e858c683005a53a9a60c69a4aca7eeaa45d124526e389f7aec8e62f38\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636\"\ndependencies = [\n \"crc-catalog\",\n]\n\n[[package]]\nname = \"crc-catalog\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"data-encoding\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2\"\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30542c1ad912e0e3d22a1935c290e12e8a29d704a420177a31faad4a601a0800\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dialoguer\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"658bce805d770f407bc62102fca7c2c64ceef2fbcb2b8bd19d2765ce093980de\"\ndependencies = [\n \"console\",\n \"shell-words\",\n \"thiserror 1.0.69\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dissimilar\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59f8e79d1fbf76bdfbde321e902714bf6c49df88a7dda6fc682fc2979226962d\"\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b45de904aa0b010bce2ab45264d0631681847fa7b6f2eaa7dab7619943bc4f59\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"expect-test\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e0be0a561335815e06dab7c62e50353134c796e7a6155402a64bcff66b6a5e0\"\ndependencies = [\n \"dissimilar\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"fat-macho\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c9c45caa6c6edfaee4cb3bd84ea9686e115df7f0efb530e15fb466eccb0b345\"\ndependencies = [\n \"goblin\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"324a1be68054ef05ad64b861cc9eaf1d623d2d8cb25b4bf2cb9cdd902b4bf253\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs-err\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8bb60e7409f34ef959985bc9d9c5ee8f5db24ee46ed9775850548021710f807f\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"fs4\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c29c30684418547d476f0b48e84f4821639119c483b1eccd566c8cd0cd05f521\"\ndependencies = [\n \"fs-err\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15f1ce686646e7f1e19bf7d5533fe443a45dbfb990e00629110797578b42fb19\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"goblin\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53ab3f32d1d77146981dea5d6b1e8fe31eedcb7013e5e00d6ccd1259a4b4d923\"\ndependencies = [\n \"log\",\n \"plain\",\n \"scroll\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"humantime-serde\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57a3db5ea5923d99402c94e9feb261dc5ee9b4efa158b0315f788cf549cc200c\"\ndependencies = [\n \"humantime\",\n \"serde\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d89fd380afde86567dfba715db065673989d6253f42b88179abd3eae47bda4b\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n \"serde\",\n]\n\n[[package]]\nname = \"indicatif\"\nversion = \"0.17.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf675b85ed934d3c67b5c5469701eec7db22689d0a2139d856e0925fa28b281\"\ndependencies = [\n \"console\",\n \"number_prefix\",\n \"portable-atomic\",\n \"unicode-width 0.2.0\",\n \"web-time\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8478577c03552c21db0e2724ffb8986a5ce7af88107e6be5d2ee6e158c12800\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb15147158e79fd8b8afd0252522769c4f48725460b37338544d8379d94fc8f9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"keyring\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"363387f0019d714aa60cc30ab4fe501a747f4c08fc58f069dd14be971bd495a0\"\ndependencies = [\n \"lazy_static\",\n \"linux-keyutils\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"lddtree\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0779ac94bd7b6ab781fa12388dbf79ac45ec1fa433e7d25521753be8227b08e\"\ndependencies = [\n \"fs-err\",\n \"glob\",\n \"goblin\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.167\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09d6582e104315a817dff97f75133544b2e094ee22447d2acf4a74e189ba06fc\"\n\n[[package]]\nname = \"libmimalloc-sys\"\nversion = \"0.1.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23aa6811d3bd4deb8a84dde645f943476d13b248d818edcf8ce0b2f37f036b44\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-keyutils\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"761e49ec5fd8a5a463f9b84e877c373d888935b71c6be78f3767fe2ae6bed18e\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"643cb0b8d4fcc284004d5fd0d67ccf61dfffadb7f75e1e71bc420f4688a3a704\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"lockfree-object-pool\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9374ef4228402d4b7e403e5838cb880d9ee663314b0a900d5a6aabf0c213552e\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lzma-sys\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"lzxd\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de7336a183103429ad66d11d56d8bdc9c4a2916f6b85a8f11e5b127bde12001\"\n\n[[package]]\nname = \"mailparse\"\nversion = \"0.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3da03d5980411a724e8aaf7b61a7b5e386ec55a7fb49ee3d0ff79efc7e5e7c7e\"\ndependencies = [\n \"charset\",\n \"data-encoding\",\n \"quoted_printable\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"maturin\"\nversion = \"1.8.1\"\ndependencies = [\n \"anyhow\",\n \"base64 0.21.7\",\n \"bytesize\",\n \"cargo-config2\",\n \"cargo-options\",\n \"cargo-xwin\",\n \"cargo-zigbuild\",\n \"cargo_metadata\",\n \"cbindgen\",\n \"cc\",\n \"clap\",\n \"clap_complete_command\",\n \"configparser\",\n \"console\",\n \"dialoguer\",\n \"dirs\",\n \"dunce\",\n \"expect-test\",\n \"fat-macho\",\n \"flate2\",\n \"fs-err\",\n \"fs4\",\n \"glob\",\n \"goblin\",\n \"ignore\",\n \"indexmap\",\n \"indoc\",\n \"itertools 0.12.1\",\n \"keyring\",\n \"lddtree\",\n \"minijinja\",\n \"multipart\",\n \"native-tls\",\n \"normpath\",\n \"once_cell\",\n \"path-slash\",\n \"pep440_rs\",\n \"pep508_rs\",\n \"platform-info\",\n \"pretty_assertions\",\n \"pyproject-toml\",\n \"python-pkginfo\",\n \"regex\",\n \"rstest\",\n \"rustc_version\",\n \"rustls\",\n \"rustls-pemfile\",\n \"rustversion\",\n \"same-file\",\n \"schemars\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"tar\",\n \"target-lexicon\",\n \"tempfile\",\n \"textwrap\",\n \"thiserror 2.0.3\",\n \"time\",\n \"toml\",\n \"toml_edit 0.22.22\",\n \"tracing\",\n \"tracing-subscriber\",\n \"trycmd\",\n \"unicode-xid\",\n \"ureq\",\n \"url\",\n \"which\",\n \"wild\",\n \"zip\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mimalloc\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68914350ae34959d83f732418d51e2427a794055d0b9529f48259ac07af65633\"\ndependencies = [\n \"libmimalloc-sys\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"minijinja\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c37e1b517d1dcd0e51dc36c4567b9d5a29262b3ec8da6cb5d35e27a8fb529b5\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"msi\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a2332f87a064dea9cce571408c879e0da8dc193b3af06a2b3b2604ee4182a32\"\ndependencies = [\n \"byteorder\",\n \"cfb\",\n \"encoding_rs\",\n \"uuid\",\n]\n\n[[package]]\nname = \"multipart\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00dec633863867f29cb39df64a397cdf4a6354708ddd7759f70c7fb51c5f9182\"\ndependencies = [\n \"log\",\n \"mime\",\n \"mime_guess\",\n \"rand\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"normpath\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5831952a9476f2fed74b77d74182fa5ddc4d21c72ec45a333b250e3ed0272804\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"os_pipe\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29d73ba8daf8fac13b0501d1abeddcfe21ba7401ada61a819144b6c2a4f32209\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.5.1\",\n \"smallvec\",\n \"windows-targets 0.52.5\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"path-slash\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e91099d4268b0e11973f036e885d652fb0b21fedcf69738c627f94db6a44f42\"\n\n[[package]]\nname = \"pep440_rs\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31095ca1f396e3de32745f42b20deef7bc09077f918b085307e8eab6ddd8fb9c\"\ndependencies = [\n \"once_cell\",\n \"serde\",\n \"tracing\",\n \"unicode-width 0.2.0\",\n \"unscanny\",\n \"version-ranges\",\n]\n\n[[package]]\nname = \"pep508_rs\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"faee7227064121fcadcd2ff788ea26f0d8f2bd23a0574da11eca23bc935bcc05\"\ndependencies = [\n \"boxcar\",\n \"indexmap\",\n \"itertools 0.13.0\",\n \"once_cell\",\n \"pep440_rs\",\n \"regex\",\n \"rustc-hash\",\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"tracing\",\n \"unicode-width 0.2.0\",\n \"url\",\n \"urlencoding\",\n \"version-ranges\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"plain\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n\n[[package]]\nname = \"platform-info\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d5ff316b9c4642feda973c18f0decd6c8b0919d4722566f6e4337cce0dd88217\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7170ef9988bc169ba16dd36a7fa041e5c4cbeb6a35b76d4c03daded371eae7c0\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ae130e2f271fbc2ac3a40fb1d07180839cdbbe443c7a27e1e3c13c5cac0116d\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284\"\ndependencies = [\n \"toml_edit 0.21.1\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"psm\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5787f7cda34e3033a72192c018bc5883100330f362ef279a8cbccfce8bb4e874\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"pyproject-toml\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"643af57c3f36ba90a8b53e972727d8092f7408a9ebfbaf4c3d2c17b07c58d835\"\ndependencies = [\n \"indexmap\",\n \"pep440_rs\",\n \"pep508_rs\",\n \"serde\",\n \"thiserror 1.0.69\",\n \"toml\",\n]\n\n[[package]]\nname = \"python-pkginfo\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c21f58880fc45e91d29b2f639ab4051aaa6a2b054534c2d343a953347d0dd600\"\ndependencies = [\n \"flate2\",\n \"fs-err\",\n \"mailparse\",\n \"rfc2047-decoder\",\n \"tar\",\n \"thiserror 2.0.3\",\n \"zip\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"quoted_printable\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79ec282e887b434b68c18fe5c121d38e72a5cf35119b59e54ec5b992ea9c8eb0\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"469052894dcb553421e483e4209ee581a45100d31b4018de03e5a7ad86374a7e\"\ndependencies = [\n \"bitflags 2.5.0\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd283d9651eeda4b2a83a43c1c91b266c40fd76ecd39a50a8c630ae69dc72891\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"rfc2047-decoder\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc36545d1021456a751b573517cb52e8c339b2f662e6b2778ef629282678de29\"\ndependencies = [\n \"base64 0.22.1\",\n \"charset\",\n \"chumsky\",\n \"memchr\",\n \"quoted_printable\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b423f0e62bdd61734b67cd21ff50871dfaeb9cc74f869dcd6af974fbcb19936\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5e1711e7d14f74b12a58411c542185ef7fb7f2e7f8ee6e2940a883628522b42\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustflags\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7fc92159fb50a431c5da366f7627751fe7263cf867f8a30f27fa6063ba02ac0\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"934b404430bb06b3fae2cba809eb45a1ab1aecd64491213d7c3301b88393f8d1\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"196fe16b00e106300d3e45ecfcb764fa292a535d7326a29a5875c579c7417425\"\ndependencies = [\n \"base64 0.22.1\",\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbc91545643bcf3a0bbb6569265615222618bdf33ce4ffbbd13c4bbd4c093534\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"schemars\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09c024468a378b7e36765cd36702b7a90cc3cba11654f6685c8f233408e89e92\"\ndependencies = [\n \"dyn-clone\",\n \"schemars_derive\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"schemars_derive\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1eee588578aff73f856ab961cd2f79e36bc45d7ded33a7562adba4667aecc0e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde_derive_internals\",\n \"syn\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"scroll\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ab8598aa408498679922eff7fa985c25d58a90771bd6be794434c5277eab1a6\"\ndependencies = [\n \"scroll_derive\",\n]\n\n[[package]]\nname = \"scroll_derive\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f81c2fde025af7e69b1d1420531c8a8811ca898919db177141a85313b1cb932\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c627723fd09706bacdb5cf41499e95098555af3c3c29d014dc3c458ef6be11c0\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"317936bbbd05227752583946b9e66d7ce3b489f84e11a94a510b4437fef407d7\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.29.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18d26a20a969b9e3fdf2fc2d9f21eda6c40e2de84c9408bb5d3b05d499aae711\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa42c91313f1d05da9b26f267f931cf178d4aba455b4c4622dd7355eb80c6640\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"smawk\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7c388c1b5e93756d0c740965c41e8822f866621d41acbdf6336a6a168f8840c\"\n\n[[package]]\nname = \"snapbox\"\nversion = \"0.6.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"027c936207f85d10d015e21faf5c676c7e08c453ed371adf55c0874c443ca77a\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"content_inspector\",\n \"dunce\",\n \"filetime\",\n \"libc\",\n \"normalize-line-endings\",\n \"os_pipe\",\n \"similar\",\n \"snapbox-macros\",\n \"tempfile\",\n \"wait-timeout\",\n \"walkdir\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"snapbox-macros\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16569f53ca23a41bb6f62e0a5084aa1661f4814a67fa33696a79073e03a664af\"\ndependencies = [\n \"anstream\",\n]\n\n[[package]]\nname = \"socks\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0c3dbbd9ae980613c6dd8e28a9407b50509d3803b57624d5dfe8315218cd58b\"\ndependencies = [\n \"byteorder\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"stacker\"\nversion = \"0.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c886bd4480155fd3ef527d45e9ac8dd7118a898a46530b7b94c3e21866259fce\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"psm\",\n \"winapi\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"919d3b74a5dd0ccd15aeb8f93e7006bd9e14c295087c9896a110f490752bcf31\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c65998313f8e17d0d553d28f91a0df93e4dbbbf770279c7bc21ca0f09ea1a1f6\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc12939a1c9b9d391e0b7135f72fd30508b73450753e28341fed159317582a77\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fcd239983515c23a32fb82099f97d0b11b8c72f654ed659363a95c3dad7a53\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23d434d3f8967a09480fb04132ebe0a3e088c173e6d0ee7897abbdf4eab0f8b9\"\ndependencies = [\n \"smawk\",\n \"unicode-linebreak\",\n \"unicode-width 0.1.13\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa\"\ndependencies = [\n \"thiserror-impl 2.0.3\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit 0.22.22\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8534fd7f78b5405e860340ad6575217ce99f38d4d5c8f2442cb5ecb50090e1\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow 0.5.40\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow 0.6.20\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-serde\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"704b1aeb7be0d0a84fc9828cae51dab5970fee5088f83d1dd7ee6f6246fc6ff1\"\ndependencies = [\n \"serde\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-serde\",\n]\n\n[[package]]\nname = \"trycmd\"\nversion = \"0.15.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e8673f1dc45acdff8e25a06cc62f8e529563e8acd84237ce83d5a28e2befa12\"\ndependencies = [\n \"automod\",\n \"glob\",\n \"humantime\",\n \"humantime-serde\",\n \"rayon\",\n \"serde\",\n \"shlex\",\n \"snapbox\",\n \"toml_edit 0.22.22\",\n]\n\n[[package]]\nname = \"twox-hash\"\nversion = \"1.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\"\ndependencies = [\n \"cfg-if\",\n \"rand\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-linebreak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b09c83c3c29d37506a3e260c08c03743a6bb66a9cd432c6934ab501a190571f\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0336d538f7abc86d282a4189614dfaa90810dfc2c6f6427eaf88e16311dd225d\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"unscanny\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9df2af067a7953e9c3831320f35c1cc0600c30d44d9f7a12b01db1cd88d6b47\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"ureq\"\nversion = \"2.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b30e6f97efe1fa43535ee241ee76967d3ff6ff3953ebb430d8d55c5393029e7b\"\ndependencies = [\n \"base64 0.22.1\",\n \"flate2\",\n \"litemap\",\n \"log\",\n \"native-tls\",\n \"once_cell\",\n \"rustls\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"socks\",\n \"url\",\n \"webpki-roots\",\n \"yoke\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"urlencoding\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da\"\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a183cf7feeba97b4dd1c0d46788634f6221d87fa961b305bed08c851829efcc0\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version-ranges\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8d079415ceb2be83fc355adbadafe401307d5c309c7e6ade6638e6f9f42f42d\"\ndependencies = [\n \"smallvec\",\n]\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"versions\"\nversion = \"6.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38a8931f8d167b6448076020e70b9de46dcf5ea1731212481a092d0071c4ac5b\"\ndependencies = [\n \"itertools 0.12.1\",\n \"nom\",\n]\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21d3b25c3ea1126a2ad5f4f9068483c2af1e64168f847abe863a526b8dbfe00b\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52857d4c32e496dc6537646b5b117081e71fd2ff06de792e3577a150627db283\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"920b0ffe069571ebbfc9ddc0b36ba305ef65577c94b06262ed793716a1afd981\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf59002391099644be3524e23b781fa43d2be0c5aa0719a18c0731b9d195cab6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5047c5392700766601942795a436d7d2599af60dcc3cc1248c9120bfb0827b0\"\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c452ad30530b54a4d8e71952716a212b08efd0f3562baa66c29a618b07da7c3\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"7.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9cad3279ade7346b96e38731a641d7343dd6a53d55083dd54eadfa5a1b38c6b\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"wild\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3131afc8c575281e1e80f36ed6a092aa502c08b18ed7524e86fbbb12bb410e1\"\ndependencies = [\n \"glob\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d4cc384e1e73b93bafa6fb4f1df8c41695c8a91cf9c4c64358067d15a7b6c6b\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.5\",\n \"windows_aarch64_msvc 0.52.5\",\n \"windows_i686_gnu 0.52.5\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.5\",\n \"windows_x86_64_gnu 0.52.5\",\n \"windows_x86_64_gnullvm 0.52.5\",\n \"windows_x86_64_msvc 0.52.5\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"xattr\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da84f1a25939b27f6820d92aed108f83ff920fdf11a7b19366c27c4cda81d4f\"\ndependencies = [\n \"libc\",\n \"linux-raw-sys\",\n \"rustix\",\n]\n\n[[package]]\nname = \"xwin\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca7e4546db1514c186778f0a257d89732ed9ed75587d0953ac25be7519d9f0d1\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"cab\",\n \"camino\",\n \"clap\",\n \"cli-table\",\n \"crossbeam-channel\",\n \"indicatif\",\n \"memchr\",\n \"mimalloc\",\n \"msi\",\n \"parking_lot\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"tempfile\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"twox-hash\",\n \"ureq\",\n \"versions\",\n \"walkdir\",\n \"zip\",\n]\n\n[[package]]\nname = \"xz2\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2\"\ndependencies = [\n \"lzma-sys\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c5b1314b079b0930c31e3af543d8ee1757b1951ae1e1565ec704403a7240ca5\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91ec111ce797d0e0784a1116d0ddcdbea84322cd79e5d5ad173daeba4f93ab55\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"2.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40dd8c92efc296286ce1fbd16657c5dbefff44f1b4ca01cc5f517d8b7b3d3e2e\"\ndependencies = [\n \"arbitrary\",\n \"bzip2\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"displaydoc\",\n \"flate2\",\n \"indexmap\",\n \"memchr\",\n \"thiserror 1.0.69\",\n \"time\",\n \"zopfli\",\n]\n\n[[package]]\nname = \"zopfli\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5019f391bac5cf252e93bbcc53d039ffd62c7bfb7c150414d61369afe57e946\"\ndependencies = [\n \"bumpalo\",\n \"crc32fast\",\n \"lockfree-object-pool\",\n \"log\",\n \"once_cell\",\n \"simd-adler32\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 5.193359375,
          "content": "[package]\nauthors = [\"konstin <konstin@mailbox.org>\", \"messense <messense@icloud.com>\"]\nname = \"maturin\"\nversion = \"1.8.1\"\ndescription = \"Build and publish crates with pyo3, cffi and uniffi bindings as well as rust binaries as python packages\"\nexclude = [\n    \"test-crates/**/*\",\n    \"sysconfig/*\",\n    \"test-data/*\",\n    \"ci/*\",\n    \"tests/*\",\n    \"guide/*\",\n    \".github/*\",\n    \".devcontainer/*\",\n    \"Dockerfile\",\n    \".dockerignore\",\n    \"deny.toml\",\n    \"noxfile.py\",\n    \"test-dockerfile.sh\",\n    \"Code-of-Conduct.md\",\n]\nhomepage = \"https://github.com/pyo3/maturin\"\nreadme = \"README.md\"\nrepository = \"https://github.com/pyo3/maturin\"\nlicense = \"MIT OR Apache-2.0\"\nkeywords = [\"python\", \"cffi\", \"packaging\", \"pypi\", \"pyo3\"]\ncategories = [\n    \"api-bindings\",\n    \"development-tools::ffi\",\n    \"command-line-utilities\",\n]\nedition = \"2021\"\nrust-version = \"1.74\"\n\n[[bin]]\nname = \"maturin\"\n\n[lib]\nname = \"maturin\"\n\n[dependencies]\nanyhow = \"1.0.80\"\nbase64 = \"0.21.0\"\nglob = \"0.3.0\"\ncargo-config2 = \"0.1.24\"\ncargo_metadata = \"0.19.0\"\ncargo-options = \"0.7.2\"\ncbindgen = { version = \"0.27.0\", default-features = false }\nflate2 = \"1.0.18\"\ngoblin = \"0.9.0\"\nplatform-info = \"2.0.2\"\nregex = \"1.7.0\"\nserde = { version = \"1.0.197\", features = [\"derive\"] }\nserde_json = \"1.0.114\"\nsha2 = \"0.10.3\"\ntar = \"0.4.38\"\ntempfile = \"3.2.0\"\ntoml = \"0.8.10\"\ntoml_edit = \"0.22.6\"\nzip = { version = \"2.0.0\", default-features = false, features = [\n    \"bzip2\",\n    \"deflate\",\n    \"time\",\n] }\nthiserror = \"2.0.3\"\nfs-err = \"3.0.0\"\nfat-macho = { version = \"0.4.8\", default-features = false }\nonce_cell = \"1.7.2\"\nrustc_version = \"0.4.0\"\nsemver = \"1.0.22\"\ntarget-lexicon = \"0.13.0\"\nindexmap = \"2.2.3\"\npyproject-toml = \"0.13.4\"\npython-pkginfo = \"0.6.5\"\ntextwrap = \"0.16.1\"\nignore = \"0.4.20\"\nitertools = \"0.12.1\"\nlddtree = \"0.3.7\"\ncc = \"1.0.88\"\ndunce = \"1.0.2\"\nnormpath = \"1.1.1\"\npath-slash = \"0.2.1\"\npep440_rs = { version = \"0.7.3\", features = [\"tracing\"] }\npep508_rs = { version = \"0.9.2\", features = [\"tracing\"] }\nsame-file = \"1.0.6\"\ntime = \"0.3.17\"\nurl = \"2.5.0\"\nunicode-xid = { version = \"0.2.4\", optional = true }\n\n# cli\nclap = { version = \"4.0.0\", features = [\n    \"derive\",\n    \"env\",\n    \"wrap_help\",\n    \"unstable-styles\",\n] }\nclap_complete_command = { version = \"0.6.1\", optional = true }\n\n# cross compile\ncargo-zigbuild = { version = \"0.19.7\", default-features = false, optional = true }\ncargo-xwin = { version = \"0.18.3\", default-features = false, optional = true }\n\n# log\ntracing = \"0.1.36\"\ntracing-subscriber = { version = \"0.3.15\", features = [\"env-filter\"] }\n\n# project scaffolding, maturin new/init/generate-ci\ndialoguer = { version = \"0.11.0\", default-features = false, optional = true }\nconsole = { version = \"0.15.4\", optional = true }\nminijinja = { version = \"2.5.0\", optional = true }\n\n# upload\nbytesize = { version = \"1.0.1\", optional = true }\nconfigparser = { version = \"3.0.3\", optional = true }\ndirs = { version = \"5.0.0\", optional = true }\nmultipart = { version = \"0.18.0\", features = [\n    \"client\",\n], default-features = false, optional = true }\nureq = { version = \"2.9.4\", features = [\n    \"gzip\",\n    \"json\",\n    \"socks-proxy\",\n], default-features = false, optional = true }\nnative-tls = { version = \"0.2.8\", optional = true }\nrustls = { version = \"0.23\", default-features = false, features = [\n    \"logging\",\n    \"std\",\n    \"tls12\",\n], optional = true }\nrustls-pemfile = { version = \"2.1.0\", optional = true }\nkeyring = { version = \"2.3.2\", default-features = false, features = [\n    \"linux-no-secret-service\",\n], optional = true }\nwild = { version = \"2.1.0\", optional = true }\n\n# JSON schema\nschemars = { version = \"0.8.16\", optional = true }\npretty_assertions = { version = \"1.3.0\", optional = true }\n\n[dev-dependencies]\nexpect-test = \"1.4.1\"\nfs4 = { version = \"0.12.0\", features = [\"fs-err3\"] }\nindoc = \"2.0.3\"\npretty_assertions = \"1.3.0\"\nrstest = \"0.22.0\"\nrustversion = \"1.0.9\"\ntime = { version = \"0.3.34\", features = [\"macros\"] }\ntrycmd = \"0.15.0\"\nwhich = \"7.0.0\"\n\n[features]\ndefault = [\"full\", \"rustls\"]\n\nfull = [\"cli-completion\", \"cross-compile\", \"scaffolding\", \"upload\"]\n\ncli-completion = [\"dep:clap_complete_command\"]\n\nupload = [\n    \"ureq\",\n    \"multipart\",\n    \"configparser\",\n    \"bytesize\",\n    \"dialoguer/password\",\n    \"wild\",\n    \"dep:dirs\",\n]\n\nschemars = [\"dep:schemars\", \"dep:pretty_assertions\"]\n\n# keyring doesn't support *BSD so it's not enabled in `full` by default\npassword-storage = [\"upload\", \"keyring\"]\n\nrustls = [\n    \"dep:rustls\",\n    \"ureq?/tls\",\n    \"cargo-xwin?/rustls-tls\",\n    \"dep:rustls-pemfile\",\n]\nnative-tls = [\n    \"dep:native-tls\",\n    \"ureq?/native-tls\",\n    \"cargo-xwin?/native-tls\",\n    \"dep:rustls-pemfile\",\n]\n\n# cross compile using zig or xwin\ncross-compile = [\"zig\", \"xwin\"]\nzig = [\"cargo-zigbuild\"]\nxwin = [\"cargo-xwin\"]\n\n# project scaffolding\nscaffolding = [\"dialoguer\", \"console\", \"minijinja\", \"unicode-xid\"]\n\n# Internal feature to speed up the tests significantly\nfaster-tests = []\n\n# Deprecated features, keep them now for compatibility\nhuman-panic = []\nlog = []\n\n[profile.profiling]\ninherits = \"release\"\ndebug = true\n\n# Without this, compressing the .gz archive becomes notably slow for debug builds\n[profile.dev.package.miniz_oxide]\nopt-level = 3\n# Speedup cargo-xwin for debug builds\n[profile.dev.package.cab]\nopt-level = 3\n[profile.dev.package.msi]\nopt-level = 3\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 67.265625,
          "content": "# Changelog\n\n## [1.8.1]\n\n* Downgrade invalid version info in `pyproject.toml` error to warning in [#2417](https://github.com/PyO3/maturin/pull/2417)\n* Make `maturin develop` fail if version info is invalid in pyproject.toml in [#2418](https://github.com/PyO3/maturin/pull/2418)\n\n## [1.8.0]\n\n* Don't add wheel data to sdist in [#2367](https://github.com/PyO3/maturin/pull/2367)\n* Add sparcv9 architecture support in [#2380](https://github.com/PyO3/maturin/pull/2380)\n* Properly handle dynamic version in pyproject.toml in [#2391](https://github.com/PyO3/maturin/pull/2391)\n* Fix xwin cross compile on non-Windows system in [#2391](https://github.com/PyO3/maturin/pull/2391)\n* Fix interpreter selection for abi3 bindings in [#2392](https://github.com/PyO3/maturin/pull/2392)\n* Use the official recommended naming pattern for cffi module file in [#2406](https://github.com/PyO3/maturin/pull/2406)\n* Add Linux armv5te architecture support in [#2409](https://github.com/PyO3/maturin/pull/2409)\n* Only build Python 3.13t wheels by default for `pyo3` 0.23+ in [#2413](https://github.com/PyO3/maturin/pull/2413)\n\n## [1.7.8]\n\n* Fix aarch64 Windows cross compilation in [#2359](https://github.com/PyO3/maturin/pull/2359)\n\n## [1.7.7]\n\n* Fix abi3 interpreter discovery on Windows in [#2333](https://github.com/PyO3/maturin/pull/2333)\n* Normalize python source directory path in [#2343](https://github.com/PyO3/maturin/pull/2343)\n* Use different binding dirs for different uniffi modules in [#2348](https://github.com/PyO3/maturin/pull/2348)\n* Limit minimal PyPy version based on bindings crate version in [#2351](https://github.com/PyO3/maturin/pull/2351)\n* Do not use `xwin` to compile on Windows when MSVC compiler can build for the target in [#2353](https://github.com/PyO3/maturin/pull/2353)\n\n## [1.7.6]\n\n* Set core metadata version to 2.4 to fix `project.license.files` handling in [#2332](https://github.com/PyO3/maturin/pull/2332)\n\n## [1.7.5]\n\n* Improve wheel reproducibility by sorting external libraries [#2261](https://github.com/PyO3/maturin/pull/2261)\n* Fix Readme and pyproject.toml inclusions for workspace where the bindings crate is not in the root in [#2262](https://github.com/PyO3/maturin/pull/2262)\n* Add support for GNU/Hurd target in [#2306](https://github.com/PyO3/maturin/pull/2306)\n* Add preliminary free-threaded Python wheel building support in [#2310](https://github.com/PyO3/maturin/pull/2310)\n\n## [1.7.4]\n\n* Fix musllinux rpath for non-cffi bindings in [#2233](https://github.com/PyO3/maturin/pull/2233)\n* Add GitHub Actions attestation support to generate-ci in [#2234](https://github.com/PyO3/maturin/pull/2234)\n\n## [1.7.3]\n\n* Fix upload regression to pypi/testpypi in [#2229](https://github.com/PyO3/maturin/pull/2229)\n\n## [1.7.2]\n\n* Fix cross compilation issues for armv7l, mips64 and ppc in [#2204](https://github.com/PyO3/maturin/pull/2204)\n* UniFFI: supports bindings generated from multiple crates in [#2208](https://github.com/PyO3/maturin/pull/2208)\n* Enable `--all-features` when building source distribution in [#2215](https://github.com/PyO3/maturin/pull/2215)\n* Fix rpath when module-name contains `.` in [#2219](https://github.com/PyO3/maturin/pull/2219)\n\n## [1.7.1]\n\n* Forward `cargo package --list` warnings in [#2186](https://github.com/PyO3/maturin/pull/2186)\n* In source distributions, we move the readmes of path dependencies into the respective crate to avoid collision between different readmes in [#2184](https://github.com/PyO3/maturin/pull/2184)\n\n## [1.7.0] - 2024-07-07\n\n* Initial iOS support in [#2101](https://github.com/PyO3/maturin/pull/2102)\n* Remove old import hook in [#2105](https://github.com/PyO3/maturin/pull/2105), use [maturin-import-hook](https://github.com/PyO3/maturin-import-hook) instead\n* Bump MSRV to 1.74.0 in [#2108](https://github.com/PyO3/maturin/pull/2108)\n* Add support for overriding wheel tag with `_PYTHON_HOST_PLATFORM` in [#2122](https://github.com/PyO3/maturin/pull/2122)\n* Don't add files to an archive more than once [#2125](https://github.com/PyO3/maturin/issues/2125)\n* Only use base python executable when `MATURIN_PEP517_USE_BASE_PYTHON` is set in [#2134](https://github.com/PyO3/maturin/pull/2134)\n\n## [1.6.0] - 2024-06-04\n\n* Detect compiling from Linux gnu to Linux musl as cross compiling in [#2010](https://github.com/PyO3/maturin/pull/2010)\n* Add musllinux support to `generate-ci` in [#2011](https://github.com/PyO3/maturin/pull/2011)\n* Add uv support to `develop` command in [#2015](https://github.com/PyO3/maturin/pull/2015)\n* Add support for AIX target in [#2030](https://github.com/PyO3/maturin/pull/2030)\n* Remove rust-cpython support in [#2044](https://github.com/PyO3/maturin/pull/2044)\n* Add a global `-v` option in [#2080](https://github.com/PyO3/maturin/pull/2080)\n* Detect target based on interpreter for pep517 build-wheel  in [#2088](https://github.com/PyO3/maturin/pull/2088)\n* Use base executable when possible in PEP 517 build in [#2094](https://github.com/PyO3/maturin/pull/2094)\n\n## [1.5.1] - 2024-03-21\n\n* Fix usage of `--compatibility` when run as a PEP517 backend in [#1992](https://github.com/PyO3/maturin/pull/1992)\n* Fix upload returning malformed summary error in [#2002](https://github.com/PyO3/maturin/pull/2002)\n\n## [1.5.0] - 2024-03-05\n\n* Bump metadata version from 2.1 to 2.3 in [#1965](https://github.com/PyO3/maturin/pull/1965). Source distributions created by maturin now have reliable metadata, meaning tool such as pip, uv and poetry could skip building them for version resolution.\n* Allow identical `VIRTUAL_ENV` and `CONDA_PREFIX` env vars in [#1879](https://github.com/PyO3/maturin/pull/1879)\n* Reject `-i python` when cross compiling in [#1891](https://github.com/PyO3/maturin/pull/1891)\n* Support uniffi-bindgen in cargo workspaces in [#1909](https://github.com/PyO3/maturin/pull/1909)\n* Add support for configuring `xwin` using env vars in [#1961](https://github.com/PyO3/maturin/pull/1961)\n*  Add validation for crate/package name in new/init in [#1943](https://github.com/PyO3/maturin/pull/1943)\n* Add 32-bit RISC-V support in [#1969](https://github.com/PyO3/maturin/pull/1969)\n* Improve import hook changes in [#1958](https://github.com/PyO3/maturin/pull/1958)\n* Adjust cbindgen Overrides for CFFI in [#1957](https://github.com/PyO3/maturin/pull/1957)\n\n## [1.4.0] - 2023-12-02\n\n* Bump MSRV to 1.67.0 in [#1847](https://github.com/PyO3/maturin/pull/1847)\n* Add support for cross compiling with `cross` in [#1865](https://github.com/PyO3/maturin/pull/1865)\n\n## [1.3.2] - 2023-11-14\n\n* Add support for uniffi library mode in [#1729](https://github.com/PyO3/maturin/pull/1729)\n* Un-deprecate `MATURIN_PEP517_ARGS` env var in [#1820](https://github.com/PyO3/maturin/pull/1820)\n* Fix missing member in Cargo.toml for sdist of nested workspace layout in [#1828](https://github.com/PyO3/maturin/pull/1828)\n* Escape display name in email addresses of wheel metadata in [#1832](https://github.com/PyO3/maturin/pull/1832)\n* Fix rewriting workspace Cargo.toml in sdist in [#1841](https://github.com/PyO3/maturin/pull/1841)\n* Fix glob workspace members matching in sdist in [#1846](https://github.com/PyO3/maturin/pull/1846)\n\n## [1.3.1] - 2023-10-24\n\n* Use external `uniffi-bindgen` if no root package is configured in [#1797](https://github.com/PyO3/maturin/pull/1797)\n* Fix wheel filename for GraalPy in [#1802](https://github.com/PyO3/maturin/pull/1802)\n* Add unittest skeleton to mixed Python/Rust projects in [#1807](https://github.com/PyO3/maturin/pull/1807)\n* Preserve trailing whitespace in new project files in [#1808](https://github.com/PyO3/maturin/pull/1808)\n* Fix missing `workspace.members` in sdist in [#1811](https://github.com/PyO3/maturin/pull/1811)\n* Don't set `MACOSX_DEPLOYMENT_TARGET` for editable builds by default in [#1815](https://github.com/PyO3/maturin/pull/1815)\n\n## [1.3.0] - 2023-10-02\n\n* Refactor Cargo sdist generator to avoid rewriting local dependencies in [#1741](https://github.com/PyO3/maturin/pull/1741)\n* Added `--pip-path` argument to `develop` command in [#1753](https://github.com/PyO3/maturin/pull/1753)\n* Ignore sdist output files when building sdist in [#1756](https://github.com/PyO3/maturin/pull/1756)\n* Use `python.exe` by default in `build` command on Windows in [#1757](https://github.com/PyO3/maturin/pull/1757)\n* Don't require `uniffi-bindgen` to be installed for uniffi bindings in [#1762](https://github.com/PyO3/maturin/pull/1762)\n* Fix platform tag for graalpy in [#1773](https://github.com/PyO3/maturin/pull/1773)\n* Always set minor version to 0 when major version >= 11 for macOS in [#1778](https://github.com/PyO3/maturin/pull/1778)\n* Warning about incorrect maturin version pyproject.toml `[build-system] requires` in [#1793](https://github.com/PyO3/maturin/pull/1793)\n\n## [1.2.3] - 2023-08-17\n\n* Fix sdist build failure with workspace path dependencies by HerringtonDarkholme in [#1739](https://github.com/PyO3/maturin/pull/1739)\n\n## [1.2.2] - 2023-08-14\n\n* Fix non interactive mode check when username/password was supplied from cli in #[1737](https://github.com/PyO3/maturin/pull/1737)\n\n## [1.2.1] - 2023-08-14\n\n* Add non-interactive mode to `upload` command in [#1722](https://github.com/PyO3/maturin/pull/1722)\n* Fix `link-native-libraries` check for emscripten target in [#1724](https://github.com/PyO3/maturin/pull/1724)\n* Add support for `ALL_PROXY` to `upload` command in [#1727](https://github.com/PyO3/maturin/pull/1727)\n* Handle renamed Rust dependency in sdist in [#1728](https://github.com/PyO3/maturin/pull/1728)\n* Fix invalid TOML when rewriting workspace inherited dependencies in [#1733](https://github.com/PyO3/maturin/pull/1733)\n\n## [1.2.0] - 2023-08-06\n\n* Add basic support for implicit namespaces [#1645](https://github.com/PyO3/maturin/pull/1696)\n* Add Linux mips64 and mips architecture support in [#1712](https://github.com/PyO3/maturin/pull/1712)\n* Add `x86_64h-apple-darwin` target support in [#1717](https://github.com/PyO3/maturin/pull/1717)\n\n## [1.1.0] - 2023-06-10\n\n* Add basic support for GraalPy in [#1645](https://github.com/PyO3/maturin/pull/1645)\n* Refactor abi tag to use `EXT_SUFFIX` in [#1648](https://github.com/PyO3/maturin/pull/1648)\n* Add Linux loongarch64 architecture support in [#1653](https://github.com/PyO3/maturin/pull/1653)\n* Add `--skip-install` option to `maturin develop` in [#1654](https://github.com/PyO3/maturin/pull/1654)\n\n## [1.0.1] - 2023-05-28\n\n* Add more Python 3.12 sysconfigs in [#1629](https://github.com/PyO3/maturin/pull/1629)\n* Fix panicking when no cargo build targets are selected in [#1635](https://github.com/PyO3/maturin/pull/1635)\n\n## [1.0.0] - 2023-05-23\n\n* Add support for multiple `--config-settings` in PEP517 backend in [#1624](https://github.com/PyO3/maturin/pull/1624)\n* Remove deprecated `--universal2` cli option in [#1620](https://github.com/PyO3/maturin/pull/1620),\n  use `--target universal2-apple-darwin` instead.\n\n## [0.15.3] - 2023-05-20\n\n* Fix cross compile Apple universal2 wheels on non-macOS platforms by MisLink in [#1613](https://github.com/PyO3/maturin/pull/1613)\n* Add PEP 517 `config_settings` support in [#1619](https://github.com/PyO3/maturin/pull/1619),\n  deprecate `MATURIN_PEP517_ARGS` in favor of the new `build-args` config setting.\n\n## [0.15.2] - 2023-05-16\n\n* When determining the python module name, use pyproject.toml `project.name` over Cargo.toml `package.name` in [#1608](https://github.com/PyO3/maturin/pull/1608)\n* Fix rewriting `dev-dependencies` in sdist in [#1610](https://github.com/PyO3/maturin/pull/1610)\n\n## [0.15.1] - 2023-05-07\n\n* Fix finding interpreters from bundled sysconfigs in [#1598](https://github.com/PyO3/maturin/pull/1598)\n\n## [0.15.0] - 2023-05-07\n\n* **Breaking Change**: Build with `--no-default-features` by default when bootstrapping from sdist in [#1333](https://github.com/PyO3/maturin/pull/1333)\n* **Breaking Change**: Remove deprecated `sdist-include` option in `pyproject.toml` in [#1335](https://github.com/PyO3/maturin/pull/1335)\n* **Breaking Change**: Remove deprecated `python-source` option in `Cargo.toml` in [#1335](https://github.com/PyO3/maturin/pull/1335)\n* **Breaking Change**: Turn `patchelf` version warning into a hard error in [#1335](https://github.com/PyO3/maturin/pull/1335)\n* **Breaking Change**: [`uniffi_bindgen` CLI](https://mozilla.github.io/uniffi-rs/tutorial/Prerequisites.html#the-uniffi-bindgen-cli-tool) is required for building `uniffi` bindings wheels in [#1352](https://github.com/PyO3/maturin/pull/1352)\n* Add Cargo compile targets configuration for filtering multiple bin targets in [#1339](https://github.com/PyO3/maturin/pull/1339)\n* Respect `rustflags` settings in cargo configuration file in [#1405](https://github.com/PyO3/maturin/pull/1405)\n* Add support for uniffi 0.23 in [#1481](https://github.com/PyO3/maturin/pull/1481)\n* Add support for custom TLS certificate authority bundle in [#1483](https://github.com/PyO3/maturin/pull/1483)\n* Bump MSRV to 1.64.0 in [#1528](https://github.com/PyO3/maturin/pull/1528)\n* Add wildcards support to publish/upload commands on Windows in [#1534](https://github.com/PyO3/maturin/pull/1534)\n* Add support for configuring macOS deployment target version in `pyproject.toml` in [#1536](https://github.com/PyO3/maturin/pull/1536)\n* Rewrite platform specific dependencies in `Cargo.toml` by viccie30 in [#1572](https://github.com/PyO3/maturin/pull/1572)\n* Add trusted publisher support in [#1578](https://github.com/PyO3/maturin/pull/1578)\n* Add new `git` source distribution generator in [#1587](https://github.com/PyO3/maturin/pull/1587)\n\n## [0.14.17] - 2023-04-06\n\n* Fix wrong `EXT_SUFFIX` when cross compiling musllinux wheels for Python 3.11 in [#1560](https://github.com/PyO3/maturin/pull/1560)\n\n## [0.14.16] - 2023-03-26\n\n* Deprecate `package.metadata.maturin.name` in favor of `tool.maturin.module-name` in `pyproject.toml` in [#1531](https://github.com/PyO3/maturin/pull/1531)\n\n## [0.14.15] - 2023-03-03\n\n* Add sdist and sccache support to `generate-ci` command\n\n## [0.14.14] - 2023-02-24\n\n* Add support for Emscripten in `generate-ci` command in [#1484](https://github.com/PyO3/maturin/pull/1484)\n* Add support for linking with pyo3 in abi3 debug mode on Windows in [#1487](https://github.com/PyO3/maturin/pull/1487)\n* Use default `ext_suffix` for Emscripten target if not provided in `PYO3_CONFIG_FILE` in [#1491](https://github.com/PyO3/maturin/pull/1491)\n* Deprecate `package.metadata.maturin.data` in favor of `tool.maturin.data` in `pyproject.toml` in [#1492](https://github.com/PyO3/maturin/pull/1492)\n\n## [0.14.13] - 2023-02-12\n\n* `maturin develop` now looks for a virtualenv `.venv` in the current or any parent directory if no virtual environment is active.\n* Add a new `generate-ci` command to generate CI configuration in [#1456](https://github.com/PyO3/maturin/pull/1456)\n* Deprecate `--universal2` in favor of `universal2-apple-darwin` target in [#1457](https://github.com/PyO3/maturin/pull/1457)\n* Raise an error when `Cargo.toml` contains removed python package metadata in [#1471](https://github.com/PyO3/maturin/pull/1471)\n* Use `extension_name` instead of `module_name` for CFFI extensions in develop mode in [#1476](https://github.com/PyO3/maturin/pull/1476)\n\n## [0.14.12] - 2023-01-31\n\n* Keep `dev-dependencies` in sdist when there are no path dependencies in [#1441](https://github.com/PyO3/maturin/pull/1441)\n\n## [0.14.11] - 2023-01-31\n\n* Don't package dev-only path dependencies in sdist in [#1435](https://github.com/PyO3/maturin/pull/1435)\n\n## [0.14.10] - 2023-01-13\n\n* Use module name specified by `[package.metadata.maturin]` in [#1409](https://github.com/PyO3/maturin/pull/1409)\n\n## [0.14.9] - 2023-01-10\n\n* Don't pass `MACOSX_DEPLOYMENT_TARGET` when query default value from rustc in [#1395](https://github.com/PyO3/maturin/pull/1395)\n\n## [0.14.8] - 2022-12-31\n\n* Add support for packaging multiple pure Python packages in [#1378](https://github.com/PyO3/maturin/pull/1378)\n* Fallback to sysconfig interpreters for pyo3 bindings in [#1381](https://github.com/PyO3/maturin/pull/1381)\n\n## [0.14.7] - 2022-12-20\n\n* Add workspace lock file to sdist as a fallback in [#1362](https://github.com/PyO3/maturin/pull/1362)\n\n## [0.14.6] - 2022-12-13\n\n* Allow Rust crate to be placed outside of the directory containing `pyproject.toml` in [#1347](https://github.com/PyO3/maturin/pull/1347)\n* Disallow uniffi bin bindings in [#1353](https://github.com/PyO3/maturin/pull/1353)\n* Update bundled Python sysconfigs for Linux and macOS\n\n## [0.14.5] - 2022-12-08\n\n* Support `SOURCE_DATE_EPOCH` when building wheels in [#1334](https://github.com/PyO3/maturin/pull/1334)\n* Fix sdist when all Cargo workspace members are excluded in [#1343](https://github.com/PyO3/maturin/pull/1343)\n\n## [0.14.4] - 2022-12-05\n\n* Expanded architecture support for FreeBSD, NetBSD and OpenBSD in [#1318](https://github.com/PyO3/maturin/pull/1318)\n* Better error message when upload failed with status code 403 in [#1323](https://github.com/PyO3/maturin/pull/1323)\n\n## [0.14.3] - 2022-12-01\n\n* Bump MSRV to 1.62.0 in [#1297](https://github.com/PyO3/maturin/pull/1297)\n* Fix build error when required features of bin target isn't enabled in [#1299](https://github.com/PyO3/maturin/pull/1299)\n* Fix wrong platform tag when building in i386 docker container on x86_64 host in [#1301](https://github.com/PyO3/maturin/pull/1301)\n* Fix wrong platform tag when building in armv7 docker container on aarch64 host in [#1303](https://github.com/PyO3/maturin/pull/1303)\n* Add Solaris operating system support in [#1310](https://github.com/PyO3/maturin/pull/1310)\n* Add armv6 and armv7 target support for FreeBSD in [#1312](https://github.com/PyO3/maturin/pull/1312)\n* Add riscv64 and powerpc target support for FreeBSD in [#1313](https://github.com/PyO3/maturin/pull/1313)\n* Fix powerpc64 and powerpc64le Python wheel platform tag for FreeBSD in [#1313](https://github.com/PyO3/maturin/pull/1313)\n\n## [0.14.2] - 2022-11-24\n\n* Tighten src-layout detection logic in [#1281](https://github.com/PyO3/maturin/pull/1282)\n* Fix generating pep517 sdist for src-layout in [#1288](https://github.com/PyO3/maturin/pull/1288)\n* Deprecate `python-source` option in `Cargo.toml` in favor of the one in `pyproject.toml` in [#1291](https://github.com/PyO3/maturin/pull/1291)\n* Fix auditwheel with read-only libraries in [#1292](https://github.com/PyO3/maturin/pull/1292)\n\n## [0.14.1] - 2022-11-20\n\n* Downgrade `cargo_metadata` to 0.15.0 to fix `maturin build` on old Rust versions like 1.48.0 in [#1279](https://github.com/PyO3/maturin/pull/1279)\n\n## [0.14.0] - 2022-11-19\n\n* **Breaking Change**: Remove support for specifying python package metadata in `Cargo.toml` in [#1200](https://github.com/PyO3/maturin/pull/1200).\n  Python package metadata should be specified in the `project` section of `pyproject.toml` instead as [PEP 621](https://peps.python.org/pep-0621/) specifies.\n* Initial support for shipping bin targets as wasm32-wasi binaries that are run through wasmtime in [#1107](https://github.com/PyO3/maturin/pull/1107).\n  Note that wasmtime currently only support the five most popular platforms and that wasi binaries have restrictions when interacting with the host.\n  Usage is by setting `--target wasm32-wasi`.\n* Add support for python first [`src` project layout](https://py-pkgs.org/04-package-structure.html#the-source-layout) in [#1185](https://github.com/PyO3/maturin/pull/1185)\n* Add `--src` option to generate src layout for mixed Python/Rust projects in [#1189](https://github.com/PyO3/maturin/pull/1189)\n* Add Python metadata support for `license-file` field of `Cargo.toml` in [#1195](https://github.com/PyO3/maturin/pull/1195)\n* Upgrade to clap 4.0 in [#1197](https://github.com/PyO3/maturin/pull/1197). This bumps MSRV to 1.61.0.\n* Remove `workspace.members` in `Cargo.toml` from sdist if there isn't any path dependency in #[1227](https://github.com/PyO3/maturin/pull/1227)\n* Fix auditwheel `libpython` check on Python 3.7 and older versions in [#1229](https://github.com/PyO3/maturin/pull/1229)\n* Use generic tags when `sys.implementation.name` != `platform.python_implementation()` in [#1232](https://github.com/PyO3/maturin/pull/1232).\n  Fixes the compatibility tags for Pyston.\n* Set default macOS deployment target version if `MACOSX_DEPLOYMENT_TARGET` isn't specified in [#1251](https://github.com/PyO3/maturin/pull/1251)\n* Add support for 32-bit x86 FreeBSD target in [#1254](https://github.com/PyO3/maturin/pull/1254)\n* Add `[tool.maturin.include]` and `[tool.maturin.exclude]` and deprecate `[tool.maturin.sdist-include]` [#1255](https://github.com/PyO3/maturin/pull/1255)\n* Ignore sdist tar ball instead of error out in [#1259](https://github.com/PyO3/maturin/pull/1259)\n* Add support for [`uniffi`](https://github.com/mozilla/uniffi-rs) bindings in [#1275](https://github.com/PyO3/maturin/pull/1275)\n\n## [0.13.7] - 2022-10-29\n\n* Fix macOS `LC_ID_DYLIB` for abi3 wheels in [#1208](https://github.com/PyO3/maturin/pull/1208)\n* Pass `--locked` to Cargo when bootstrap from sdist in [#1212](https://github.com/PyO3/maturin/pull/1212)\n* Fix build for Python 3.11 on Windows in [#1222](https://github.com/PyO3/maturin/pull/1222)\n\n## [0.13.6] - 2022-10-08\n\n* Fix `maturin develop` in Windows conda virtual environment in [#1146](https://github.com/PyO3/maturin/pull/1146)\n* Fix build for crate using `pyo3` and `build.rs` without `cdylib` crate type in [#1150](https://github.com/PyO3/maturin/pull/1150)\n* Fix build on some 32-bit platform by downgrading `indicatif` in [#1163](https://github.com/PyO3/maturin/pull/1163)\n* Include `Cargo.lock` by default in source distribution in [#1170](https://github.com/PyO3/maturin/pull/1170)\n\n## [0.13.5] - 2022-09-27\n\n* Fix resolving crate name bug in [#1142](https://github.com/PyO3/maturin/pull/1142)\n\n## [0.13.4] - 2022-09-27\n\n* Fix `Cargo.toml` in new project template in [#1109](https://github.com/PyO3/maturin/pull/1109)\n* Fix `maturin develop` on Windows when using Python installed from msys2 in [#1112](https://github.com/PyO3/maturin/pull/1112)\n* Fix duplicated `Cargo.toml` of local dependencies in sdist in [#1114](https://github.com/PyO3/maturin/pull/1114)\n* Add support for Cargo workspace dependencies inheritance in [#1123](https://github.com/PyO3/maturin/pull/1123)\n* Add support for Cargo workspace metadata inheritance in [#1131](https://github.com/PyO3/maturin/pull/1131)\n* Use `goblin` instead of shelling out to `patchelf` to get rpath in [#1139](https://github.com/PyO3/maturin/pull/1139)\n\n## [0.13.3] - 2022-09-15\n\n* Allow user to override default Emscripten settings in [#1059](https://github.com/PyO3/maturin/pull/1059)\n* Enable `--crate-type cdylib` on Rust 1.64.0 in [#1060](https://github.com/PyO3/maturin/pull/1060)\n* Update MSRV to 1.59.0 in [#1071](https://github.com/PyO3/maturin/pull/1071)\n* Fix abi3 wheel build when no Python interpreters found in [#1072](https://github.com/PyO3/maturin/pull/1072)\n* Add `zig ar` support in [#1073](https://github.com/PyO3/maturin/pull/1073)\n* Fix sdist build for optional path dependencies in [#1084](https://github.com/PyO3/maturin/pull/1084)\n* auditwheel: find dylibs in Cargo target directory in [#1092](https://github.com/PyO3/maturin/pull/1092)\n* Add library search paths in Cargo target directory to rpath in editable mode on Linux in [#1094](https://github.com/PyO3/maturin/pull/1094)\n* Remove default manifest path for `maturin sdist` command in [#1097](https://github.com/PyO3/maturin/pull/1097)\n* Fix sdist when `pyproject.toml` isn't in the same dir of `Cargo.toml` in [#1099](https://github.com/PyO3/maturin/pull/1099)\n* Change readme and license paths in `pyproject.toml` to be relative to `pyproject.toml` in [#1100](https://github.com/PyO3/maturin/pull/1100).\n  It's technically a **breaking change**, but previously it doesn't work properly.\n* Add python source files specified in pyproject.toml to sdist in [#1102](https://github.com/PyO3/maturin/pull/1102)\n* Change `sdist-include` paths to be relative to `pyproject.toml` in [#1103](https://github.com/PyO3/maturin/pull/1103)\n\n## [0.13.2] - 2022-08-14\n\n* Deprecate manylinux 2010 support in [#858](https://github.com/PyO3/maturin/pull/858).\n  The [manylinux](https://github.com/pypa/manylinux) project already dropped its support\n  and the rustc compiler will [drop glibc 2.12 support in 1.64.0](https://blog.rust-lang.org/2022/08/01/Increasing-glibc-kernel-requirements.html).\n* Add Linux mips64el architecture support in [#1023](https://github.com/PyO3/maturin/pull/1023)\n* Add Linux mipsel architecture support in [#1024](https://github.com/PyO3/maturin/pull/1024)\n* Add Linux 32-bit powerpc architecture support in [#1026](https://github.com/PyO3/maturin/pull/1026)\n* Add Linux sparc64 architecture support in [#1027](https://github.com/PyO3/maturin/pull/1027)\n* Add PEP 440 local version identifier support in [#1037](https://github.com/PyO3/maturin/pull/1037)\n* Fix inconsistent `Cargo.toml` and `pyproject.toml` path handling in [#1043](https://github.com/PyO3/maturin/pull/1043)\n* Find python module next to `pyproject.toml` if `pyproject.toml` exists in [#1044](https://github.com/PyO3/maturin/pull/1044).\n  It's technically a **breaking change**, but previously it doesn't work properly\n  if the directory containing `pyproject.toml` isn't recognized as project root.\n* Add `python-source` option to `[tool.maturin]` section of pyproject.toml in [#1046](https://github.com/PyO3/maturin/pull/1046)\n* Deprecate support for specifying python metadata in `Cargo.toml` in [#1048](https://github.com/PyO3/maturin/pull/1048).\n  Please migrate to [PEP 621](https://peps.python.org/pep-0621/) instead.\n* Change `python-source` to be relative to the file specifies it in [#1049](https://github.com/PyO3/maturin/pull/1049)\n* Change `data` to be relative to the file specifies it in [#1051](https://github.com/PyO3/maturin/pull/1051)\n* Don't reinstall dependencies in `maturin develop` in [#1052](https://github.com/PyO3/maturin/pull/1052)\n* Find `pyproject.toml` in parent directories of `Cargo.toml` in [#1054](https://github.com/PyO3/maturin/pull/1054)\n\n## [0.13.1] - 2022-07-26\n\n* Add 64-bit RISC-V support by felixonmars in [#1001](https://github.com/PyO3/maturin/pull/1001)\n* Add support for invoking with `python3 -m maturin` in [#1008](https://github.com/PyO3/maturin/pull/1008)\n* Fix detection of optional dependencies when declaring `features` in `pyproject.toml` in [#1014](https://github.com/PyO3/maturin/pull/1014)\n* Respect user specified Rust target in `maturin develop` in [#1016](https://github.com/PyO3/maturin/pull/1016)\n* Use `cargo rustc --crate-type cdylib` on Rust nightly/dev channel in [#1020](https://github.com/PyO3/maturin/pull/1020)\n\n## [0.13.0] - 2022-07-09\n\n* **Breaking Change**: Drop support for python 3.6, which is end of life in [#945](https://github.com/PyO3/maturin/pull/945)\n* **Breaking Change**: Don't build source distribution by default in `maturin build` command in [#955](https://github.com/PyO3/maturin/pull/955), `--no-sdist` option is replaced by `--sdist`\n* **Breaking Change**: maturin no longer search for python interpreters by default and only build for current interpreter in `PATH` in [#964](https://github.com/PyO3/maturin/pull/964)\n* **Breaking Change**: Removed `--cargo-extra-args` and `--rustc-extra-args` options in [#972](https://github.com/PyO3/maturin/pull/972). You can now pass all common `cargo build` arguments directly to `maturin build`\n* **Breaking Change**: `--repository-url` option in `upload` command no longer accepts plain repository name, full url required and `-r` short option moved to `--repository` in [#987](https://github.com/PyO3/maturin/pull/987)\n* Add support for building with multiple binary targets in [#948](https://github.com/PyO3/maturin/pull/948)\n* Add a `--target` option to `maturin list-python` command in [#957](https://github.com/PyO3/maturin/pull/957)\n* Add support for using bundled python sysconfigs for PyPy when abi3 feature is enabled in [#958](https://github.com/PyO3/maturin/pull/958)\n* Add support for cross compiling PyPy wheels when abi3 feature is enabled in [#963](https://github.com/PyO3/maturin/pull/963)\n* Add `--find-interpreter` option to `build` and `publish` commands to search for python interpreters in [#964](https://github.com/PyO3/maturin/pull/964)\n* Infer target triple from `ARCHFLAGS` for macOS to be compatible with `cibuildwheel` in [#967](https://github.com/PyO3/maturin/pull/967)\n* Expose commonly used Cargo CLI options in `maturin build` command in [#972](https://github.com/PyO3/maturin/pull/972)\n* Add support for `wasm32-unknown-emscripten` target in [#974](https://github.com/PyO3/maturin/pull/974)\n* Allow overriding platform release version using env var in [#975](https://github.com/PyO3/maturin/pull/975)\n* Fix `maturin develop` for arm64 Python on M1 Mac when default toolchain is x86_64 in [#980](https://github.com/PyO3/maturin/pull/980)\n* Add `--repository` option to `maturin upload` command in [#987](https://github.com/PyO3/maturin/pull/987)\n* Only lookup bundled Python sysconfig when interpreters aren't specified as file path in [#988](https://github.com/PyO3/maturin/pull/988)\n* Find CPython upper to 3.12 and PyPy upper to 3.10 in [#993](https://github.com/PyO3/maturin/pull/993)\n* Add short alias `maturin b` for `maturin build` and `maturin dev` for `maturin develop` subcommands in [#994](https://github.com/PyO3/maturin/pull/994)\n\n## [0.12.20] - 2022-06-15\n\n* Fix incompatibility with cibuildwheel for 32-bit Windows in [#951](https://github.com/PyO3/maturin/pull/951)\n* Don't require `pip` error messages to be utf-8 encoding in [#953](https://github.com/PyO3/maturin/pull/953)\n* Compare minimum python version requirement between `requires-python` and bindings crate in [#954](https://github.com/PyO3/maturin/pull/954)\n* Set `PYO3_PYTHON` env var for PyPy when abi3 is enabled in [#960](https://github.com/PyO3/maturin/pull/960)\n* Add sysconfigs for x64 Windows PyPy in [#962](https://github.com/PyO3/maturin/pull/962)\n* Add support for Linux armv6l in [#966](https://github.com/PyO3/maturin/pull/966)\n* Fix auditwheel bundled shared libs directory name in [#969](https://github.com/PyO3/maturin/pull/969)\n\n## [0.12.19] - 2022-06-05\n\n* Fix Windows Store install detection in [#949](https://github.com/PyO3/maturin/pull/949)\n* Filter Python interpreters by target pointer width on Windows in [#950](https://github.com/PyO3/maturin/pull/950)\n\n## [0.12.18] - 2022-05-29\n\n* Add support for building bin bindings wheels with multiple platform tags in [#928](https://github.com/PyO3/maturin/pull/928)\n* Skip auditwheel for non-compliant linux environment automatically in [#931](https://github.com/PyO3/maturin/pull/931)\n* Fix abi3 wheel build issue when no Python interpreters found on host in [#933](https://github.com/PyO3/maturin/pull/933)\n* Add Python 3.11 sysconfigs for Linux, macOS and Windows in [#934](https://github.com/PyO3/maturin/pull/934)\n* Add Python 3.11 sysconfig for arm64 Windows in [#936](https://github.com/PyO3/maturin/pull/936)\n* Add network proxy support to upload command in [#939](https://github.com/PyO3/maturin/pull/939)\n* Fix python interpreter detection on arm64 Windows in [#940](https://github.com/PyO3/maturin/pull/940)\n* Fallback to `py -X.Y` when `pythonX.Y` cannot be found on Windows in [#943](https://github.com/PyO3/maturin/pull/943)\n* Auto-detect Python Installs from Microsoft Store in [#944](https://github.com/PyO3/maturin/pull/944)\n* Add bindings detection to bin targets in [#938](https://github.com/PyO3/maturin/pull/938)\n\n## [0.12.17] - 2022-05-18\n\n* Don't consider compile to i686 on x86_64 Windows cross compiling in [#923](https://github.com/PyO3/maturin/pull/923)\n* Accept `-i x.y` and `-i python-x.y` in `maturin build` command in [#925](https://github.com/PyO3/maturin/pull/925)\n\n## [0.12.16] - 2022-05-16\n\n* Add Linux armv7l python sysconfig in [#901](https://github.com/PyO3/maturin/pull/901)\n* Add NetBSD python sysconfig in [#903](https://github.com/PyO3/maturin/pull/903)\n* Update 'replace_needed' to reduce total calls to 'patchelf' in [#905](https://github.com/PyO3/maturin/pull/905)\n* Add wheel data support in [#906](https://github.com/PyO3/maturin/pull/906)\n* Allow use python interpreters from bundled sysconfig when not cross compiling in [#907](https://github.com/PyO3/maturin/pull/907)\n* Use setuptools-rust for bootstrapping in [#909](https://github.com/PyO3/maturin/pull/909)\n* Allow setting the publish repository URL via `MATURIN_REPOSITORY_URL` in [#913](https://github.com/PyO3/maturin/pull/913)\n* Allow stubs-only mixed project layout in [#914](https://github.com/PyO3/maturin/pull/914)\n* Allow setting the publish user name via `MATURIN_USERNAME` in [#915](https://github.com/PyO3/maturin/pull/915)\n* Add Windows python sysconfig in [#917](https://github.com/PyO3/maturin/pull/917)\n* Add support for `generate-import-lib` feature of pyo3 in [#918](https://github.com/PyO3/maturin/pull/918)\n* Integrate [`cargo-xwin`](https://github.com/messense/cargo-xwin) for cross compiling to Windows MSVC targets in [#919](https://github.com/PyO3/maturin/pull/919)\n\n## [0.12.15] - 2022-05-07\n\n* Re-export `__all__` for pure Rust projects in [#886](https://github.com/PyO3/maturin/pull/886)\n* Stop setting `RUSTFLAGS` environment variable to an empty string in [#887](https://github.com/PyO3/maturin/pull/887)\n* Add hardcoded well-known sysconfigs for effortless cross compiling in [#896](https://github.com/PyO3/maturin/pull/896)\n* Add support for `PYO3_CONFIG_FILE` in [#899](https://github.com/PyO3/maturin/pull/899)\n\n## [0.12.14] - 2022-04-25\n\n* Fix PyPy pep517 build when abi3 feature is enabled in [#883](https://github.com/PyO3/maturin/pull/883)\n\n## [0.12.13] - 2022-04-25\n\n* Stop setting `PYO3_NO_PYTHON` environment variable for pyo3 0.16.4 and later in [#875](https://github.com/PyO3/maturin/pull/875)\n* Build Windows abi3 wheels for `pyo3` 0.16.4 and later versions with `generate-abi3-import-lib` feature enabled no longer require a Python interpreter in [#879](https://github.com/PyO3/maturin/pull/879)\n\n## [0.12.12] - 2022-04-07\n\n* Migrate docker image to GitHub container registry in [#845](https://github.com/PyO3/maturin/pull/845)\n* Change mixed rust/python template project layout for new projects in [#855](https://github.com/PyO3/maturin/pull/855)\n* Automatically include license files in `.dist-info/license_files` following PEP 639 in [#862](https://github.com/PyO3/maturin/pull/862)\n* Bring back multiple values support for `--interpreter` option in [#873](https://github.com/PyO3/maturin/pull/873)\n* Update the default edition to 2021 for new projects by sa- in [#874](https://github.com/PyO3/maturin/pull/874)\n* Drop `python3.6` from `ghcr.io/pyo3/maturin` docker image.\n\n## [0.12.11] - 2022-03-15\n\n* Package license files in `.dist-info/license_files` following PEP 639 in [#837](https://github.com/PyO3/maturin/pull/837)\n* Stop testing Python 3.6 on CI since it's already EOL in [#840](https://github.com/PyO3/maturin/pull/840)\n* Update workspace members for sdist local dependencies in [#844](https://github.com/PyO3/maturin/pull/844)\n* Migrate docker image to github container registry in [#845](https://github.com/PyO3/maturin/pull/845)\n* Remove `PYO3_NO_PYTHON` hack for Windows in [#848](https://github.com/PyO3/maturin/pull/848)\n* Remove Windows abi3 python lib link hack in [#851](https://github.com/PyO3/maturin/pull/851)\n* Add `-r` option as a short alias for `--release` in [#854](https://github.com/PyO3/maturin/pull/854)\n\n## [0.12.10] - 2022-03-09\n\n* Add support for `pyo3-ffi` by ijl in [#804](https://github.com/PyO3/maturin/pull/804)\n* Defaults to `musllinux_1_2` for musl target if it's not bin bindings in [#808](https://github.com/PyO3/maturin/pull/808)\n* Remove support for building only sdist via `maturin build -i` in [#813](https://github.com/PyO3/maturin/pull/813), use `maturin sdist` instead.\n* Add macOS target support for `--zig` in [#817](https://github.com/PyO3/maturin/pull/817)\n* Migrate Python dependency `toml` to `tomllib` / `tomli` by Contextualist in [#821](https://github.com/PyO3/maturin/pull/821)\n* Disable auditwheel for PEP 517 build wheel process in [#823](https://github.com/PyO3/maturin/pull/823)\n* Lookup existing cffi `header.h` in workspace target directory in [#833](https://github.com/PyO3/maturin/pull/833)\n* Fix license line ending in wheel metadata for Windows in [#836](https://github.com/PyO3/maturin/pull/836)\n\n## [0.12.9] - 2022-02-09\n\n* Don't require `pyproject.toml` when cargo manifest is not specified in [#806](https://github.com/PyO3/maturin/pull/806)\n\n## [0.12.8] - 2022-02-08\n\n* Add missing `--version` flag from clap 3.0 upgrade\n\n## [0.12.7] - 2022-02-08\n\n* Add support for using [`zig cc`](https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html) as linker for easier cross compiling and manylinux compliance in [#756](https://github.com/PyO3/maturin/pull/756)\n* Switch from reqwest to ureq to reduce dependencies in [#767](https://github.com/PyO3/maturin/pull/767)\n* Fix missing Python submodule in wheel in [#772](https://github.com/PyO3/maturin/pull/772)\n* Add support for specifying cargo manifest path in pyproject.toml in [#781](https://github.com/PyO3/maturin/pull/781)\n* Add support for passing arguments to pep517 command via `MATURIN_PEP517_ARGS` env var in [#786](https://github.com/PyO3/maturin/pull/786)\n* Fix auditwheel `No such file or directory` error when `LD_LIBRARY_PATH` contains non-existent paths in [#794](https://github.com/PyO3/maturin/pull/794)\n\n## [0.12.6] - 2021-12-31\n\n* Add support for repairing cross compiled linux wheels in [#754](https://github.com/PyO3/maturin/pull/754)\n* Add support for `manylinux_2_28` and `manylinux_2_31` in [#755](https://github.com/PyO3/maturin/pull/755)\n* Remove existing so file first in `maturin develop` command to avoid triggering SIGSEV in running process in [#760](https://github.com/PyO3/maturin/pull/760)\n\n## [0.12.5] - 2021-12-20\n\n* Fix docs for `new` and `init` commands in `maturin --help` in [#734](https://github.com/PyO3/maturin/pull/734)\n* Add support for x86_64 Haiku in [#735](https://github.com/PyO3/maturin/pull/735)\n* Fix undefined auditwheel policy panic in [#740](https://github.com/PyO3/maturin/pull/740)\n* Fix sdist upload for packages where the pkgname contains multiple underscores in [#741](https://github.com/PyO3/maturin/pull/741)\n* Implement auditwheel repair with patchelf in [#742](https://github.com/PyO3/maturin/pull/742)\n* Add `Cargo.lock` to sdist when `--locked` or `--frozen` specified in [#749](https://github.com/PyO3/maturin/pull/749)\n* Infer readme file if not specified in [#751](https://github.com/PyO3/maturin/pull/751)\n\n## [0.12.4] - 2021-12-06\n\n* Add a `maturin init` command as a companion to `maturin new` in [#719](https://github.com/PyO3/maturin/pull/719)\n* Don't package non-path-dep crates in sdist for workspaces in [#720](https://github.com/PyO3/maturin/pull/720)\n* Build release packages with `password-storage` feature in [#725](https://github.com/PyO3/maturin/pull/725)\n* Add support for x86_64 DargonFly BSD in [#727](https://github.com/PyO3/maturin/pull/727)\n* Add a Python import hook in [#729](https://github.com/PyO3/maturin/pull/729)\n* Allow pip warnings in `maturin develop` command in [#732](https://github.com/PyO3/maturin/pull/732)\n\n## [0.12.3] - 2021-11-29\n\n* Use platform tag from `sysconfig.platform` on non-portable Linux in [#709](https://github.com/PyO3/maturin/pull/709)\n* Consider current machine architecture when generating platform tags for abi3\n  wheels on linux in [#709](https://github.com/PyO3/maturin/pull/709)\n* Revert back to Rust 2018 edition in [#710](https://github.com/PyO3/maturin/pull/710)\n* Warn missing `cffi` package dependency in [#711](https://github.com/PyO3/maturin/pull/711)\n* Add support for Illumos in [#712](https://github.com/PyO3/maturin/pull/712)\n* Account for `MACOSX_DEPLOYMENT_TARGET` env var in wheel platform tag in [#716](https://github.com/PyO3/maturin/pull/716)\n\n## [0.12.2] - 2021-11-26\n\n* Add support for excluding files from wheels by `.gitignore` in [#695](https://github.com/PyO3/maturin/pull/695)\n* Fix `pip install maturin` on OpenBSD 6.8 in [#697](https://github.com/PyO3/maturin/pull/697)\n* Add support for x86, x86_64 and aarch64 on NetBSD in [#704](https://github.com/PyO3/maturin/pull/704)\n* Add a `maturin new` command for bootstrapping new projects in [#705](https://github.com/PyO3/maturin/pull/705)\n\n## [0.12.1] - 2021-11-21\n\n* Add support for cross compiling PyPy wheels in [#687](https://github.com/PyO3/maturin/pull/687)\n* Fix `sysconfig.get_platform` parsing for macOS in [#690](https://github.com/PyO3/maturin/pull/690)\n\n## [0.12.0] - 2021-11-19\n\n* Add support for PEP 660 editable installs in [#648](https://github.com/PyO3/maturin/pull/648)\n* Publish musllinux_1_1 wheels for maturin in [#651](https://github.com/PyO3/maturin/pull/651)\n* Refactor `develop` command to act identical to PEP 660 editable wheels in [#653](https://github.com/PyO3/maturin/pull/653)\n* Upgrade to Rust 2021 edition in [#655](https://github.com/PyO3/maturin/pull/655)\n* Add support for powerpc64 and powerpc64le on FreeBSD by pkubaj in [#656](https://github.com/PyO3/maturin/pull/656)\n* Fix false positive missing pyinit warning on arm64 macOS in [#673](https://github.com/PyO3/maturin/pull/673)\n* Build without rustls on arm64 Windows by nsait-linaro in [#674](https://github.com/PyO3/maturin/pull/674)\n* Publish Windows arm64 wheels to PyPI by nsait-linaro in [#675](https://github.com/PyO3/maturin/pull/675)\n* Add support for building on Windows mingw platforms in [#677](https://github.com/PyO3/maturin/pull/677)\n* Allow building for non-abi3 pypy wheels when the abi3 feature is enabled in [#678](https://github.com/PyO3/maturin/pull/678)\n* Add support for cross compiling to different operating systems in [#680](https://github.com/PyO3/maturin/pull/680)\n\n## [0.11.5] - 2021-10-13\n\n* Fixed module documentation missing bug of pyo3 bindings in [#639](https://github.com/PyO3/maturin/pull/639)\n* Fix musllinux auditwheel wrongly detects libc forbidden link in [#643](https://github.com/PyO3/maturin/pull/643)\n* Fix finding conda Python interpreters on Windows by RobertColton in [#644](https://github.com/PyO3/maturin/pull/644)\n* Fix Unicode metadata when uploading to PyPI in [#645](https://github.com/PyO3/maturin/pull/645)\n* Fix incorrectly folded long `Summary` metadata\n* Fix cross compilation for Python 3.10 in [#646](https://github.com/PyO3/maturin/pull/646)\n\n## [0.11.4] - 2021-09-28\n\n* Autodetect PyPy executables in [#617](https://github.com/PyO3/maturin/pull/617)\n* auditwheel: add `libz.so.1` to whitelisted libraries in [#625](https://github.com/PyO3/maturin/pull/625)\n* auditwheel: detect musl libc in [#629](https://github.com/PyO3/maturin/pull/629)\n* Fixed Python 3.10 and later versions detection on Windows in [#630](https://github.com/PyO3/maturin/pull/630)\n* Install entrypoint scripts in `maturin develop` command in [#633](https://github.com/PyO3/maturin/pull/633) and [#634](https://github.com/PyO3/maturin/pull/634)\n* Add support for installing optional dependencies in `maturin develop` command in [#635](https://github.com/PyO3/maturin/pull/635)\n* Fixed build error when `manylinux`/`compatibility` options is specified in `pyproject.toml` in [#637](https://github.com/PyO3/maturin/pull/637)\n\n## [0.11.3] - 2021-08-25\n\n* Add path option for Python source in [#584](https://github.com/PyO3/maturin/pull/584)\n* Add auditwheel support for musllinux in [#597](https://github.com/PyO3/maturin/pull/597)\n* `[tool.maturin]` options from `pyproject.toml` will be used automatically in [#605](https://github.com/PyO3/maturin/pull/605)\n* Skip unavailable Python interpreters from pyenv in [#609](https://github.com/PyO3/maturin/pull/609)\n\n## [0.11.2] - 2021-07-20\n\n* Use UTF-8 encoding when reading `pyproject.toml` by domdfcoding in [#588](https://github.com/PyO3/maturin/pull/588)\n* Use Cargo's `repository` field as `Source Code` in project URL in [#590](https://github.com/PyO3/maturin/pull/590)\n* Fold long header fields in Python metadata in [#594](https://github.com/PyO3/maturin/pull/594)\n* Fix `maturin develop` for PyPy on Unix in [#596](https://github.com/PyO3/maturin/pull/596)\n\n## [0.11.1] - 2021-07-10\n\n* Fix sdist error when VCS has uncommitted renamed files in [#585](https://github.com/PyO3/maturin/pull/585)\n* Add `maturin completions <shell>` command to generate shell completions in [#586](https://github.com/PyO3/maturin/pull/586)\n\n## [0.11.0] - 2021-07-04\n\n* Add support for reading metadata from [PEP 621](https://www.python.org/dev/peps/pep-0621/) project table in `pyproject.toml` in [#555](https://github.com/PyO3/maturin/pull/555)\n* Users should migrate away from the old `[package.metadata.maturin]` table of `Cargo.toml` to this new `[project]` table of `pyproject.toml`\n* Add PEP 656 musllinux support in [#543](https://github.com/PyO3/maturin/pull/543)\n* `--manylinux` is now called `--compatibility` and supports musllinux\n* The pure rust install layout changed from just the shared library to a python module that reexports the shared library. This should have now observable consequences for users of the created wheel expect that `my_project.my_project` is now also importable (and equal to just `my_project`)\n* Add support for packaging type stubs in pure Rust project layout in [#567](https://github.com/PyO3/maturin/pull/567)\n* Support i386 on OpenBSD in [#568](https://github.com/PyO3/maturin/pull/568)\n* Support Aarch64 on OpenBSD in [#570](https://github.com/PyO3/maturin/pull/570)\n* Support Aarch64 on FreeBSD in [#571](https://github.com/PyO3/maturin/pull/571)\n* `Cargo.toml`'s `authors` field is now optional per Rust [RFC 3052](https://github.com/rust-lang/rfcs/blob/master/text/3052-optional-authors-field.md) in [#573](https://github.com/PyO3/maturin/pull/573)\n* Allow dotted keys in `Cargo.toml` by switch from `toml_edit` to `toml` crate in [#577](https://github.com/PyO3/maturin/pull/577)\n* Fix source distribution with local path dependencies on Windows in [#580](https://github.com/PyO3/maturin/pull/580)\n\n## [0.10.6] - 2021-05-21\n\n* Fix corrupted macOS binary release in [#547](https://github.com/PyO3/maturin/pull/547)\n* Fix build with the \"upload\" feature disabled by ravenexp in [#548](https://github.com/PyO3/maturin/pull/548)\n\n## [0.10.5] - 2021-05-21\n\n* Add `manylinux_2_27` support in [#521](https://github.com/PyO3/maturin/pull/521)\n* Add support for Windows arm64 target in [#524](https://github.com/PyO3/maturin/pull/524)\n* Always output PEP 600 platform tags in [#525](https://github.com/PyO3/maturin/pull/525)\n* Fix missing `PyInit_<module_name>` warning with Rust submodule in [#528](https://github.com/PyO3/maturin/pull/528)\n* Better cross compiling support for PyO3 binding on Unix in [#454](https://github.com/PyO3/maturin/pull/454)\n* Fix s390x architecture support in [#530](https://github.com/PyO3/maturin/pull/530)\n* Fix auditwheel panic with s390x wheels in [#532](https://github.com/PyO3/maturin/pull/532)\n* Support uploading heterogeneous wheels by ravenexp in [#544](https://github.com/PyO3/maturin/pull/544)\n* Warn about `pyproject.toml` missing maturin version constraint in [#545](https://github.com/PyO3/maturin/pull/545)\n\n## [0.10.4] - 2021-04-28\n\n * Interpreter search now uses python 3.6 to 3.12 in [#495](https://github.com/PyO3/maturin/pull/495)\n * Consider requires-python when searching for interpreters in [#495](https://github.com/PyO3/maturin/pull/495)\n * Support Rust extension as a submodule in mixed Python/Rust projects in [#489](https://github.com/PyO3/maturin/pull/489)\n\n## [0.10.3] - 2021-04-13\n\n * The `upload` command is now implemented, it is mostly similar to `twine upload`. [#484](https://github.com/PyO3/maturin/pull/484)\n * Interpreter search now uses python 3.6 to 3.12\n * Add basic support for OpenBSD in [#496](https://github.com/PyO3/maturin/pull/496)\n * Fix the PowerPC platform by messense in [#503](https://github.com/PyO3/maturin/pull/503)\n\n## [0.10.2] - 2021-04-03\n\n * Fix `--target` being silently ignored\n\n## [0.10.1] - 2021-04-03\n\n * Fix a regression in 0.10.0 that would incorrectly assume we're building for musl instead of gnu by messense in [#487](https://github.com/PyO3/maturin/pull/487)\n * Basic s390x support\n\n## [0.10.0] - 2021-04-02\n\n * Change manylinux default version based on target arch by messense in [#424](https://github.com/PyO3/maturin/pull/424)\n * Support local path dependencies in source distribution (i.e. you can now package a workspace into an sdist)\n * Set a more reasonable LC_ID_DYLIB entry on macOS by messense [#433](https://github.com/PyO3/maturin/pull/433)\n * Add `--skip-existing` option to publish by messense [#444](https://github.com/PyO3/maturin/pull/444)\n * maturn develop install dependencies automatically by messense [#443](https://github.com/PyO3/maturin/pull/443)\n * Load credential from pypirc using repository name instead of package name by messense [#445](https://github.com/PyO3/maturin/pull/445)\n * Add `manylinux_2_24` support in [#451](https://github.com/PyO3/maturin/pull/451)\n * Improve error message when auditwheel failed to find versioned offending symbols in [#452](https://github.com/PyO3/maturin/pull/452)\n * Add auditwheel test to CI in [#455](https://github.com/PyO3/maturin/pull/455)\n * Fix sdist transitive path dependencies.\n * auditwheel choose higher priority tag when possible in [#456](https://github.com/PyO3/maturin/pull/456), dropped `auditwheel` Cargo feature.\n * develop now writes an [INSTALLER](https://packaging.python.org/specifications/recording-installed-packages/#the-installer-file) file\n * develop removes an old .dist-info directory if it exists before installing the new one\n * Fix wheels for PyPy on windows containing extension modules with incorrect names. [#482](https://github.com/PyO3/maturin/pull/482)\n\n## [0.9.4] - 2021-02-18\n\n* Fix building a bin with musl\n\n## [0.9.3]\n\n* CI failure\n\n## [0.9.2] - 2021-02-17\n\n * Escape version in wheel metadata by messense in [#420](https://github.com/PyO3/maturin/pull/420)\n * Set executable bit on shared library by messense in [#421](https://github.com/PyO3/maturin/pull/421)\n * Rename `classifier` to `classifiers` for pypi compatibility. The old `classifier` is still available and now also works with pypi\n * Fix building for musl by automatically setting `-C target-feature=-crt-static`\n\n## [0.9.1] - 2021-01-13\n\n * Error when the `abi3` feature is selected but no minimum version\n * Support building universal2 wheels (x86 and aarch64 in a single file) by messense in [#403](https://github.com/PyO3/maturin/pull/403)\n * Recognize `PYO3_CROSS_LIB_DIR` for cross compiling with abi3 targeting windows.\n * `package.metadata.maturin.classifier` is renamed to `classifiers` by kngwyu in [#416](https://github.com/PyO3/maturin/pull/416)\n * Added more instructions to building complex manylinux setups\n\n## [0.9.0] - 2021-01-10\n\n * Added support for building abi3 wheels with pyo3 0.13.1\n * Python 3.9 is supported (it should have worked before, but it is now tested on ci)\n * There are 64-bit and aarch64 binary builds for linux and 64-bit builds for windows, mac and freebsd-12-1\n * The auditwheel options have changed to `--manylinux=[off|2010|2014]` with manylinux2010 as default, and optionally `--skip-auditwheel`.\n * Removed Python 3.5 since it is unsupported\n * The default and minimum manylinux version is now manylinux2010\n * restructured text (rst) readmes are now supported, by clbarnes in [#360](https://github.com/PyO3/maturin/pull/360)\n * Allow python 3 interpreter with debuginfo use maturin by inevity in [#370](https://github.com/PyO3/maturin/pull/370)\n * pypirc is checked for credentials by houqp in [#374](https://github.com/PyO3/maturin/pull/374)\n * Added support for PowerPC by mzpqnxow and programmerjake in [#366](https://github.com/PyO3/maturin/pull/366)\n * `project-url` is now a toml dictionary instead of a toml list to conform to the standard\n * No more retry loop when the password was wrong\n * When bootstrapping, also search for `cargo.exe` if `cargo` was not found\n\n## [0.8.3] - 2020-08-17\n\n### Added\n\n * tox is now supported due to a bugfix in the latest version of tox\n * `[tool.maturin]` now supports `sdist-include = [\"path/**/*\"]` to\ninclude arbitrary files in source distributions ([#296](https://github.com/PyO3/maturin/pull/296)).\n * Add support for PyO3 `0.12`'s `PYO3_PYTHON` environment variable. [#331](https://github.com/PyO3/maturin/pull/331)\n\n### Fixed\n\n * Fix incorrectly returning full path (not basename) from PEP 517 `build_sdist` hook. This fixes tox support from maturin's side\n * Packages installed with `maturin develop` are now visible to pip and can be uninstalled with pip\n\n## [0.8.2] - 2020-06-29\n\n### Added\n\n * Python 3.8 was added to PATH in the docker image by oconnor663 in [#302](https://github.com/PyO3/maturin/pull/302)\n\n## [0.8.1] - 2020-04-30\n\n### Added\n\n * cffi is installed if it's missing and python is running inside a virtualenv.\n\n## [0.8.0] - 2020-04-03\n\n### Added\n\n * There is now a binary wheel for aarch64\n * Warn if there are local dependencies\n\n### Fixed\n\n * Omit author_email if `@` is not found in authors by evandrocoan in [#290](https://github.com/PyO3/maturin/pull/290)\n\n## [0.7.9] - 2020-03-06\n\n### Fixed\n\n * This release includes binary wheels for mac os\n\n## [0.7.8] - 2020-03-06\n\n### Added\n\n * Added support from arm, specifically arm7l, aarch64 by ijl in [#273](https://github.com/PyO3/maturin/pull/273)\n * Added support for manylinux2014 by ijl in [#273](https://github.com/PyO3/maturin/pull/273)\n\n### Fixed\n\n * Remove python 2 from tags by ijl in [#254](https://github.com/PyO3/maturin/pull/254)\n * 32-bit wheels didn't work on linux. This has been fixed by dae in [#250](https://github.com/PyO3/maturin/pull/250)\n * The path of the RECORD file on windows used a backward slash instead of a forward slash\n\n## [0.7.7] - 2019-11-12\n\n### Added\n\n * The setup.py installer for bootstrapping maturin now checks for cargo instead of failing with a complex error message.\n * Upload errors now show the filesize\n\n### Changed\n\n* maturin's metadata now lists a requirement of python3.5 or later to install.\n\n## [0.7.6] - 2019-09-28\n\n### Changed\n\n * Only `--features`, `--no-default-features` and `--all-features` in `--cargo-extra-args` are passed to `cargo metadata` when determining the bindings, fixing problems in the previous release with arguments supported by `cargo build` but by `cargo metadata`.\n\n## [0.7.5] - 2019-09-24\n\n### Fixed\n\n * Fix clippy error to fix publishing from ci\n\n## [0.7.4] - 2019-09-22\n\n### Fixed\n\n * Fix tests\n\n## [0.7.3] - 2019-09-22\n\n### Fixed\n\n * Fix building when the bindings crate is behind a feature flag\n\n## [0.7.3] - 2019-09-22\n\n## Removed\n\n * The manylinux docker container doesn't contain musl anymore. If you're targeting musl, there's no need to use manylinux.\n\n## [0.7.2] - 2019-09-05\n\n### Added\n\n * Allow cross compilation with cffi and a python interpreter with the host target\n\n### Fixed\n\n * Renamed a folder to maturin so PEP 517 backend works again.\n\n## [0.7.1] - 2019-08-31\n\n### Added\n\n * `maturin build --interpreter`/`maturin publish --interpreter` builds only a source distribution.\n\n## [0.7.0] - 2019-08-30\n\nWith this release, the name of this project changes from _pyo3-pack_ to _maturin_.\n\n### Added\n\n * Mixed rust/python layout\n * Added PEP 517 support\n * Added a `maturin sdist` command as workaround for [pypa/pip#6041](https://github.com/pypa/pip/issues/6041)\n * Support settings all applicable fields from the python core metadata specification in Cargo.toml\n * Support for FreeBSD by kxepal [#173](https://github.com/PyO3/maturin/pull/173)\n\n## [0.6.1]\n\n### Fixed\n\n * Downgraded to structopt 0.2.16 to avoid the yanked 0.2.17\n\n## [0.6.0]\n\n### Added\n\n * Basic pypy support by ijl [#105](https://github.com/PyO3/maturin/pull/105)\n\n### Removed\n\n * Python 2 support\n * The custom progress bar was removed and cargo's output is shown instead\n\n## [0.5.0]\n\n### Added\n\n * Support for conda environments on windows by paddyhoran [#52](https://github.com/PyO3/maturin/pull/52)\n * maturin will generate a header for cffi crates using cbinding, which means you don't need a `build.rs` anymore. The option to provide your own header file using a `build.rs` still exists.\n * The [konstin2/maturin](https://cloud.docker.com/u/konstin2/repository/docker/konstin2/maturin) docker image makes it easy to build fully manylinux compliant wheels. See the readme for usage details.\n * Support for manylinux2010 by ijl [#70](https://github.com/PyO3/maturin/pull/70)\n * The `--manxlinux=[1|1-unchecked|2010|2010-unchecked|off]` option allows to build for manylinux1 and manylinux2010, both with audithweel (`1` or `2010`) and without (`1-unchecked` or `2010-unchecked`), but also for the native linux tag with `off`.\n\n### Changed\n\n * The `--skip-auditwheel` flag has been deprecated in favor of `--manylinux=[1|1-unchecked|2010|2010-unchecked|off]`.\n * Switched to rustls. This means the upload feature can be used from the docker container and builds of maturin itself are manylinux compliant when compiled with the musl target.\n\n## [0.4.2] - 2018-12-15\n\nFixup release because the appveyor failed to release artifacts for windows for 0.4.1.\n\n## [0.4.1] - 2018-12-15\n\n### Added\n\n * You can now specify [trove classifiers](https://pypi.org/classifiers/) in your Cargo.toml with `package.metadata.maturin.classifier`. Implemented by ijl in [#48](https://github.com/PyO3/maturin/pull/48). Example:\n ```toml\n  [package.metadata.maturin]\n  classifier = [\"Programming Language :: Python\"]\n  ```\n\n## [0.4.0] - 2018-11-20\n\n### Changed\n\n * publish defaults to release and strip, unless `--debug` or `--no-strip` are given.\n\n### Added\n\n * New ci script based on hyperfine which also builds debian packages.\n\n## [0.3.10] - 2018-11-16\n\n### Fixed\n\n * Fix rust-cpython detection and compilation\n\n## [0.3.9]\n\n### Changed\n\n * Update reqwest to 0.9.4 which has [seanmonstar/reqwest#374](https://github.com/seanmonstar/reqwest/issues/374) fixed\n\n## [0.3.8]\n\n### Fixed\n\n * Pin reqwest to 0.9.2 to work around [seanmonstar/reqwest#374](https://github.com/seanmonstar/reqwest/issues/374)\n\n## [0.3.7]\n\n### Fixed\n\n * Added cargo lock to project [#9](https://github.com/PyO3/maturin/issues/9)\n\n## [0.3.6]\n\nWith deflate and the strip options, the wheels get about 25x smaller:\n\nwheel | baseline | deflate | strip + deflate\n-|-|-|-\nget_fourtytwo-2.0.1-cp36-cp36m-manylinux1_x86_64.whl | 2,8M | 771K | 102K\nhello_world-0.1.0-py2.py3-none-manylinux1_x86_64.whl | 3,9M | 1,1M | 180K\npoints-0.1.0-py2.py3-none-manylinux1_x86_64.whl | 2,8M | 752K | 85K\n\n### Added\n\n * `--strip` by ijl [#7](https://github.com/PyO3/maturin/pull/7)\n\n### Changed\n\n * Renamed `--bindings-crate` to `--bindings`\n * Use deflate compression for zips by ijl [#6](https://github.com/PyO3/maturin/pull/6)\n\n### Fixed\n\n * `--target` is now actually used for the wheel compatibility tag\n\n## [0.3.5] - 2018-09-20\n\n### Changed\n\n * Upgraded to reqwest 0.9\n\n### Fixed\n\n * \"Broken Pipe\" with musl builds (through the reqwest upgrade)\n\n## [0.3.4] - 2018-09-18\n\n### Added\n\n * A `--target` option which behaves like cargo option of the same name\n\n### Changed\n\n * Musl and auditwheel compliance: Using the new `musl` feature combined with the musl target, you can build completely static binaries. The `password-storage`, which enables keyring integration, is now disabled by default. The Pypi packages are now statically linked with musl so that they are audtiwheel compliant.\n * Replaced `--debug` with `--release`. All builds are now debug by default\n\n## [0.3.3] - 2018-09-17\n\n### Added\n\n * Builds for i686 linux and mac\n * Builds for maturin as wheel\n\n## Fixed\n\n * Usage with stable\n * Wrong tags in WHEEL file on non-linux platforms\n * Uploading on windows\n\n## [0.3.1] - 2017-09-14\n\n### Fixed\n\n * Windows compilation\n\n## [0.3.0] - 2017-09-14\n\n### Added\n\n * Packaging binaries\n * [Published on pypi](https://pypi.org/project/maturin/). You can now `pip install maturin`\n * A Dockerfile based on manylinux1\n\n### Fixed\n\n * Travis ci setup builds all types of wheels for linux and mac\n * `--no-default-features --features auditwheel` creates a manylinux compliant binary for maturin\n\n### Changed\n\n * Replaced elfkit with goblin\n\n## [0.2.0] - 2018-09-03\n\n### Added\n\n * Cffi support\n * A `develop` subcommand\n * A tox example\n\n### Changed\n\n * Show a progress bar for cargo's compile progress\n\n## 0.1.0 - 2018-08-22\n\n * Initial Release\n\n[Unreleased]: https://github.com/pyo3/maturin/compare/v1.8.1...HEAD\n[1.8.1]: https://github.com/pyo3/maturin/compare/v1.8.0...v1.8.1\n[1.8.0]: https://github.com/pyo3/maturin/compare/v1.7.8...v1.8.0\n[1.7.8]: https://github.com/pyo3/maturin/compare/v1.7.7...v1.7.8\n[1.7.7]: https://github.com/pyo3/maturin/compare/v1.7.6...v1.7.7\n[1.7.6]: https://github.com/pyo3/maturin/compare/v1.7.5...v1.7.6\n[1.7.5]: https://github.com/pyo3/maturin/compare/v1.7.4...v1.7.5\n[1.7.4]: https://github.com/pyo3/maturin/compare/v1.7.3...v1.7.4\n[1.7.3]: https://github.com/pyo3/maturin/compare/v1.7.2...v1.7.3\n[1.7.2]: https://github.com/pyo3/maturin/compare/v1.7.1...v1.7.2\n[1.7.1]: https://github.com/pyo3/maturin/compare/v1.7.0...v1.7.1\n[1.7.0]: https://github.com/pyo3/maturin/compare/v1.6.0...v1.7.0\n[1.6.0]: https://github.com/pyo3/maturin/compare/v1.5.1...v1.6.0\n[1.5.1]: https://github.com/pyo3/maturin/compare/v1.5.0...v1.5.1\n[1.5.0]: https://github.com/pyo3/maturin/compare/v1.4.0...v1.5.0\n[1.4.0]: https://github.com/pyo3/maturin/compare/v1.3.2...v1.4.0\n[1.3.2]: https://github.com/pyo3/maturin/compare/v1.3.1...v1.3.2\n[1.3.1]: https://github.com/pyo3/maturin/compare/v1.3.0...v1.3.1\n[1.3.0]: https://github.com/pyo3/maturin/compare/v1.2.3...v1.3.0\n[1.2.3]: https://github.com/pyo3/maturin/compare/v1.2.2...v1.2.3\n[1.2.2]: https://github.com/pyo3/maturin/compare/v1.2.1...v1.2.2\n[1.2.1]: https://github.com/pyo3/maturin/compare/v1.2.0...v1.2.1\n[1.2.0]: https://github.com/pyo3/maturin/compare/v1.1.0...v1.2.0\n[1.1.0]: https://github.com/pyo3/maturin/compare/v1.0.1...v1.1.0\n[1.0.1]: https://github.com/pyo3/maturin/compare/v1.0.0...v1.0.1\n[1.0.0]: https://github.com/pyo3/maturin/compare/v0.15.3...v1.0.0\n[0.15.3]: https://github.com/pyo3/maturin/compare/v0.15.2...v0.15.3\n[0.15.2]: https://github.com/pyo3/maturin/compare/v0.15.1...v0.15.2\n[0.15.1]: https://github.com/pyo3/maturin/compare/v0.15.0...v0.15.1\n[0.15.0]: https://github.com/pyo3/maturin/compare/v0.14.17...v0.15.0\n[0.14.17]: https://github.com/pyo3/maturin/compare/v0.14.16...v0.14.17\n[0.14.16]: https://github.com/pyo3/maturin/compare/v0.14.15...v0.14.16\n[0.14.15]: https://github.com/pyo3/maturin/compare/v0.14.14...v0.14.15\n[0.14.14]: https://github.com/pyo3/maturin/compare/v0.14.13...v0.14.14\n[0.14.13]: https://github.com/pyo3/maturin/compare/v0.14.12...v0.14.13\n[0.14.12]: https://github.com/pyo3/maturin/compare/v0.14.11...v0.14.12\n[0.14.11]: https://github.com/pyo3/maturin/compare/v0.14.10...v0.14.11\n[0.14.10]: https://github.com/pyo3/maturin/compare/v0.14.9...v0.14.10\n[0.14.9]: https://github.com/pyo3/maturin/compare/v0.14.8...v0.14.9\n[0.14.8]: https://github.com/pyo3/maturin/compare/v0.14.7...v0.14.8\n[0.14.7]: https://github.com/pyo3/maturin/compare/v0.14.6...v0.14.7\n[0.14.6]: https://github.com/pyo3/maturin/compare/v0.14.5...v0.14.6\n[0.14.5]: https://github.com/pyo3/maturin/compare/v0.14.4...v0.14.5\n[0.14.4]: https://github.com/pyo3/maturin/compare/v0.14.3...v0.14.4\n[0.14.3]: https://github.com/pyo3/maturin/compare/v0.14.2...v0.14.3\n[0.14.2]: https://github.com/pyo3/maturin/compare/v0.14.1...v0.14.2\n[0.14.1]: https://github.com/pyo3/maturin/compare/v0.14.0...v0.14.1\n[0.14.0]: https://github.com/pyo3/maturin/compare/v0.13.7...v0.14.0\n[0.13.7]: https://github.com/pyo3/maturin/compare/v0.13.6...v0.13.7\n[0.13.6]: https://github.com/pyo3/maturin/compare/v0.13.5...v0.13.6\n[0.13.5]: https://github.com/pyo3/maturin/compare/v0.13.4...v0.13.5\n[0.13.4]: https://github.com/pyo3/maturin/compare/v0.13.3...v0.13.4\n[0.13.3]: https://github.com/pyo3/maturin/compare/v0.13.2...v0.13.3\n[0.13.2]: https://github.com/pyo3/maturin/compare/v0.13.1...v0.13.2\n[0.13.1]: https://github.com/pyo3/maturin/compare/v0.13.0...v0.13.1\n[0.13.0]: https://github.com/pyo3/maturin/compare/v0.12.20...v0.13.0\n[0.12.20]: https://github.com/pyo3/maturin/compare/v0.12.19...v0.12.20\n[0.12.19]: https://github.com/pyo3/maturin/compare/v0.12.18...v0.12.19\n[0.12.18]: https://github.com/pyo3/maturin/compare/v0.12.17...v0.12.18\n[0.12.17]: https://github.com/pyo3/maturin/compare/v0.12.16...v0.12.17\n[0.12.16]: https://github.com/pyo3/maturin/compare/v0.12.15...v0.12.16\n[0.12.15]: https://github.com/pyo3/maturin/compare/v0.12.14...v0.12.15\n[0.12.14]: https://github.com/pyo3/maturin/compare/v0.12.13...v0.12.14\n[0.12.13]: https://github.com/pyo3/maturin/compare/v0.12.12...v0.12.13\n[0.12.12]: https://github.com/pyo3/maturin/compare/v0.12.11...v0.12.12\n[0.12.11]: https://github.com/pyo3/maturin/compare/v0.12.10...v0.12.11\n[0.12.10]: https://github.com/pyo3/maturin/compare/v0.12.9...v0.12.10\n[0.12.9]: https://github.com/pyo3/maturin/compare/v0.12.8...v0.12.9\n[0.12.8]: https://github.com/pyo3/maturin/compare/v0.12.7...v0.12.8\n[0.12.7]: https://github.com/pyo3/maturin/compare/v0.12.6...v0.12.7\n[0.12.6]: https://github.com/pyo3/maturin/compare/v0.12.5...v0.12.6\n[0.12.5]: https://github.com/pyo3/maturin/compare/v0.12.4...v0.12.5\n[0.12.4]: https://github.com/pyo3/maturin/compare/v0.12.3...v0.12.4\n[0.12.3]: https://github.com/pyo3/maturin/compare/v0.12.2...v0.12.3\n[0.12.2]: https://github.com/pyo3/maturin/compare/v0.12.1...v0.12.2\n[0.12.1]: https://github.com/pyo3/maturin/compare/v0.12.0...v0.12.1\n[0.12.0]: https://github.com/pyo3/maturin/compare/v0.11.5...v0.12.0\n[0.11.5]: https://github.com/pyo3/maturin/compare/v0.11.4...v0.11.5\n[0.11.4]: https://github.com/pyo3/maturin/compare/v0.11.3...v0.11.4\n[0.11.3]: https://github.com/pyo3/maturin/compare/v0.11.2...v0.11.3\n[0.11.2]: https://github.com/pyo3/maturin/compare/v0.11.1...v0.11.2\n[0.11.1]: https://github.com/pyo3/maturin/compare/v0.11.0...v0.11.1\n[0.11.0]: https://github.com/pyo3/maturin/compare/v0.10.6...v0.11.0\n[0.10.6]: https://github.com/pyo3/maturin/compare/v0.10.5...v0.10.6\n[0.10.5]: https://github.com/pyo3/maturin/compare/v0.10.4...v0.10.5\n[0.10.4]: https://github.com/pyo3/maturin/compare/v0.10.3...v0.10.4\n[0.10.3]: https://github.com/pyo3/maturin/compare/v0.10.2...v0.10.3\n[0.10.2]: https://github.com/pyo3/maturin/compare/v0.10.1...v0.10.2\n[0.10.1]: https://github.com/pyo3/maturin/compare/v0.10.0...v0.10.1\n[0.10.0]: https://github.com/pyo3/maturin/compare/v0.9.4...v0.10.0\n[0.9.4]: https://github.com/pyo3/maturin/compare/v0.9.3...v0.9.4\n[0.9.3]: https://github.com/pyo3/maturin/compare/v0.9.2...v0.9.3\n[0.9.2]: https://github.com/pyo3/maturin/compare/v0.9.1...v0.9.2\n[0.9.1]: https://github.com/pyo3/maturin/compare/v0.9.0...v0.9.1\n[0.9.0]: https://github.com/pyo3/maturin/compare/v0.8.3...v0.9.0\n[0.8.3]: https://github.com/pyo3/maturin/compare/v0.8.2...v0.8.3\n[0.8.2]: https://github.com/pyo3/maturin/compare/v0.8.1...v0.8.2\n[0.8.1]: https://github.com/pyo3/maturin/compare/v0.8.0...v0.8.1\n[0.8.0]: https://github.com/pyo3/maturin/compare/v0.7.9...v0.8.0\n[0.7.9]: https://github.com/pyo3/maturin/compare/v0.7.8...v0.7.9\n[0.7.8]: https://github.com/pyo3/maturin/compare/v0.7.7...v0.7.8\n[0.7.7]: https://github.com/pyo3/maturin/compare/v0.7.6...v0.7.7\n[0.7.6]: https://github.com/pyo3/maturin/compare/v0.7.5...v0.7.6\n[0.7.5]: https://github.com/pyo3/maturin/compare/v0.7.4...v0.7.5\n[0.7.4]: https://github.com/pyo3/maturin/compare/v0.7.3...v0.7.4\n[0.7.3]: https://github.com/pyo3/maturin/compare/v0.7.2...v0.7.3\n[0.7.2]: https://github.com/pyo3/maturin/compare/v0.7.1...v0.7.2\n[0.7.1]: https://github.com/pyo3/maturin/compare/v0.7.0...v0.7.1\n[0.7.0]: https://github.com/pyo3/maturin/compare/v0.6.1...v0.7.0\n[0.6.1]: https://github.com/pyo3/maturin/compare/v0.6.0...v0.6.1\n[0.6.0]: https://github.com/pyo3/maturin/compare/v0.5.0...v0.6.0\n[0.5.0]: https://github.com/pyo3/maturin/compare/v0.4.2...v0.5.0\n[0.4.2]: https://github.com/pyo3/maturin/compare/v0.4.1...v0.4.2\n[0.4.1]: https://github.com/pyo3/maturin/compare/v0.4.0...v0.4.1\n[0.4.0]: https://github.com/pyo3/maturin/compare/v0.3.10...v0.4.0\n[0.3.10]: https://github.com/pyo3/maturin/compare/v0.3.9...v0.3.10\n[0.3.9]: https://github.com/pyo3/maturin/compare/v0.3.8...v0.3.9\n[0.3.8]: https://github.com/pyo3/maturin/compare/v0.3.7...v0.3.8\n[0.3.7]: https://github.com/pyo3/maturin/compare/v0.3.6...v0.3.7\n[0.3.6]: https://github.com/pyo3/maturin/compare/v0.3.5...v0.3.5\n[0.3.5]: https://github.com/pyo3/maturin/compare/v0.3.4...v0.3.5\n[0.3.4]: https://github.com/pyo3/maturin/compare/v0.3.3...v0.3.4\n[0.3.3]: https://github.com/pyo3/maturin/compare/v0.3.1...v0.3.3\n[0.3.1]: https://github.com/pyo3/maturin/compare/v0.3.0...v0.3.1\n[0.3.0]: https://github.com/pyo3/maturin/compare/v0.2.0...v0.3.0\n[0.2.0]: https://github.com/pyo3/maturin/compare/v0.1.0...v0.2.0\n"
        },
        {
          "name": "Code-of-Conduct.md",
          "type": "blob",
          "size": 3.1513671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at konstin@mailbox.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.3837890625,
          "content": "# x86_64 base\nFROM quay.io/pypa/manylinux2014_x86_64 AS base-amd64\n# x86_64 builder\nFROM --platform=$BUILDPLATFORM ghcr.io/rust-cross/rust-musl-cross:x86_64-musl AS builder-amd64\n\n# aarch64 base\nFROM quay.io/pypa/manylinux2014_aarch64 AS base-arm64\n# aarch64 cross compile builder\nFROM --platform=$BUILDPLATFORM ghcr.io/rust-cross/rust-musl-cross:aarch64-musl AS builder-arm64\n\nARG TARGETARCH\nFROM builder-$TARGETARCH AS builder\n\nENV PATH=/root/.cargo/bin:$PATH\n\n# Compile dependencies only for build caching\nADD Cargo.toml /maturin/Cargo.toml\nADD Cargo.lock /maturin/Cargo.lock\nRUN --mount=type=cache,target=/root/.cargo/git \\\n    --mount=type=cache,target=/root/.cargo/registry \\\n    --mount=type=cache,target=/maturin/target,sharing=locked \\\n    mkdir /maturin/src && \\\n    touch  /maturin/src/lib.rs && \\\n    echo 'fn main() { println!(\"Dummy\") }' > /maturin/src/main.rs && \\\n    cargo rustc --target $CARGO_BUILD_TARGET --bin maturin --manifest-path /maturin/Cargo.toml --release --features password-storage -- -C link-arg=-s\n\nADD . /maturin/\n\n# Manually update the timestamps as ADD keeps the local timestamps and cargo would then believe the cache is fresh\nRUN touch /maturin/src/lib.rs /maturin/src/main.rs\n\nRUN --mount=type=cache,target=/root/.cargo/git \\\n    --mount=type=cache,target=/root/.cargo/registry \\\n    --mount=type=cache,target=/maturin/target,sharing=locked \\\n    cargo rustc --target $CARGO_BUILD_TARGET --bin maturin --manifest-path /maturin/Cargo.toml --release --features password-storage -- -C link-arg=-s \\\n    && mv /maturin/target/$CARGO_BUILD_TARGET/release/maturin /usr/bin/maturin\n\nFROM base-$TARGETARCH\n\nENV PATH=/root/.cargo/bin:$PATH\n# Add all supported python versions\nENV PATH=/opt/python/cp39-cp39/bin:/opt/python/cp310-cp310/bin:/opt/python/cp311-cp311/bin:/opt/python/cp312-cp312/bin:/opt/python/cp313-cp313/bin/:/opt/python/cp313-cp313t/bin/:$PATH\n# Otherwise `cargo new` errors\nENV USER=root\n\nRUN curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \\\n    && yum install -y libffi-devel openssh-clients \\\n    && python3.8 -m pip install --no-cache-dir cffi \\\n    && python3.9 -m pip install --no-cache-dir cffi \\\n    && python3.10 -m pip install --no-cache-dir cffi \\\n    && python3.11 -m pip install --no-cache-dir cffi \\\n    && python3.12 -m pip install --no-cache-dir cffi \\\n    && mkdir /io\n\nCOPY --from=builder /usr/bin/maturin /usr/bin/maturin\n\nWORKDIR /io\n\nENTRYPOINT [\"/usr/bin/maturin\"]\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2392578125,
          "content": "include Cargo.toml Cargo.lock\ninclude README.md\ninclude license-apache license-mit\nrecursive-include src *.rs *.py\nrecursive-include src/auditwheel *.json\nrecursive-include src/python_interpreter *.py *.json\nrecursive-include src/templates *.j2\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.720703125,
          "content": "# Maturin\n\n_formerly pyo3-pack_\n\n[![Maturin User Guide](https://img.shields.io/badge/user-guide-brightgreen?logo=readthedocs&style=flat-square)](https://maturin.rs)\n[![Crates.io](https://img.shields.io/crates/v/maturin.svg?logo=rust&style=flat-square)](https://crates.io/crates/maturin)\n[![PyPI](https://img.shields.io/pypi/v/maturin.svg?logo=python&style=flat-square)](https://pypi.org/project/maturin)\n[![Actions Status](https://github.com/PyO3/maturin/actions/workflows/test.yml/badge.svg)](https://github.com/PyO3/maturin/actions)\n[![FreeBSD](https://img.shields.io/cirrus/github/PyO3/maturin/main?logo=CircleCI&style=flat-square)](https://cirrus-ci.com/github/PyO3/maturin)\n[![discord server](https://img.shields.io/discord/1209263839632424990?logo=discord)](https://discord.gg/33kcChzH7f)\n\nBuild and publish crates with [pyo3, cffi and uniffi bindings](https://maturin.rs/bindings) as well as rust binaries as python packages with minimal configuration.\nIt supports building wheels for python 3.8+ on Windows, Linux, macOS and FreeBSD, can upload them to [pypi](https://pypi.org/) and has basic PyPy and GraalPy support.\n\nCheck out the [User Guide](https://maturin.rs/)!\n\n## Usage\n\nYou can either download binaries from the [latest release](https://github.com/PyO3/maturin/releases/latest) or install it with [pipx](https://pypa.github.io/pipx/):\n\n```shell\npipx install maturin\n```\n\n> [!NOTE]\n>\n> `pip install maturin` should also work if you don't want to use pipx.\n\nThere are four main commands:\n\n- `maturin new` creates a new cargo project with maturin configured.\n- `maturin publish` builds the crate into python packages and publishes them to pypi.\n- `maturin build` builds the wheels and stores them in a folder (`target/wheels` by default), but doesn't upload them. It's possible to upload those with [twine](https://github.com/pypa/twine) or `maturin upload`.\n- `maturin develop` builds the crate and installs it as a python module directly in the current virtualenv. Note that while `maturin develop` is faster, it doesn't support all the feature that running `pip install` after `maturin build` supports.\n\nmaturin doesn't need extra configuration files and doesn't clash with an existing setuptools-rust or milksnake configuration.\nYou can even integrate it with testing tools such as [tox](https://tox.readthedocs.io/en/latest/).\nThere are examples for the different bindings in the `test-crates` folder.\n\nThe name of the package will be the name of the cargo project, i.e. the name field in the `[package]` section of `Cargo.toml`.\nThe name of the module, which you are using when importing, will be the `name` value in the `[lib]` section (which defaults to the name of the package). For binaries, it's simply the name of the binary generated by cargo.\n\nWhen using `maturin build` and `maturin develop` commands, you can compile a performance-optimized program by adding the `-r` or `--release` flag.\n\n## Python packaging basics\n\nPython packages come in two formats:\nA built form called wheel and source distributions (sdist), both of which are archives.\nA wheel can be compatible with any python version, interpreter (cpython and pypy, mainly), operating system and hardware architecture (for pure python wheels),\ncan be limited to a specific platform and architecture (e.g. when using ctypes or cffi) or to a specific python interpreter and version on a specific architecture and operating system (e.g. with pyo3).\n\nWhen using `pip install` on a package, pip tries to find a matching wheel and install that. If it doesn't find one, it downloads the source distribution and builds a wheel for the current platform,\nwhich requires the right compilers to be installed. Installing a wheel is much faster than installing a source distribution as building wheels is generally slow.\n\nWhen you publish a package to be installable with `pip install`, you upload it to [pypi](https://pypi.org/), the official package repository.\nFor testing, you can use [test pypi](https://test.pypi.org/) instead, which you can use with `pip install --index-url https://test.pypi.org/simple/`.\nNote that for publishing for linux, [you need to use the manylinux docker container](#manylinux-and-auditwheel), while for publishing from your repository you can use the [PyO3/maturin-action github action](https://github.com/PyO3/maturin-action).\n\n## Mixed rust/python projects\n\nTo create a mixed rust/python project, create a folder with your module name (i.e. `lib.name` in Cargo.toml) next to your Cargo.toml and add your python sources there:\n\n```\nmy-project\n├── Cargo.toml\n├── my_project\n│   ├── __init__.py\n│   └── bar.py\n├── pyproject.toml\n├── README.md\n└── src\n    └── lib.rs\n```\n\nYou can specify a different python source directory in `pyproject.toml` by setting `tool.maturin.python-source`, for example\n\n**pyproject.toml**\n\n```toml\n[tool.maturin]\npython-source = \"python\"\nmodule-name = \"my_project._lib_name\"\n```\n\nthen the project structure would look like this:\n\n```\nmy-project\n├── Cargo.toml\n├── python\n│   └── my_project\n│       ├── __init__.py\n│       └── bar.py\n├── pyproject.toml\n├── README.md\n└── src\n    └── lib.rs\n```\n\n> [!NOTE]\n>\n> This structure is recommended to avoid [a common `ImportError` pitfall](https://github.com/PyO3/maturin/issues/490)\n\nmaturin will add the native extension as a module in your python folder. When using develop, maturin will copy the native library and for cffi also the glue code to your python folder. You should add those files to your gitignore.\n\nWith cffi you can do `from .my_project import lib` and then use `lib.my_native_function`, with pyo3 you can directly `from .my_project import my_native_function`.\n\nExample layout with pyo3 after `maturin develop`:\n\n```\nmy-project\n├── Cargo.toml\n├── my_project\n│   ├── __init__.py\n│   ├── bar.py\n│   └── _lib_name.cpython-36m-x86_64-linux-gnu.so\n├── README.md\n└── src\n    └── lib.rs\n```\n\nWhen doing this also be sure to set the module name in your code to match the last part of `module-name` (don't include the package path):\n\n```rust\n#[pymodule]\n#[pyo3(name=\"_lib_name\")]\nfn my_lib_name(_py: Python<'_>, m: &PyModule) -> PyResult<()> {\n    m.add_class::<MyPythonRustClass>()?;\n    Ok(())\n}\n```\n\n## Python metadata\n\nmaturin supports [PEP 621](https://www.python.org/dev/peps/pep-0621/), you can specify python package metadata in `pyproject.toml`.\nmaturin merges metadata from `Cargo.toml` and `pyproject.toml`, `pyproject.toml` takes precedence over `Cargo.toml`.\n\nTo specify python dependencies, add a list `dependencies` in a `[project]` section in the `pyproject.toml`. This list is equivalent to `install_requires` in setuptools:\n\n```toml\n[project]\nname = \"my-project\"\ndependencies = [\"flask~=1.1.0\", \"toml==0.10.0\"]\n```\n\nPip allows adding so called console scripts, which are shell commands that execute some function in your program. You can add console scripts in a section `[project.scripts]`.\nThe keys are the script names while the values are the path to the function in the format `some.module.path:class.function`, where the `class` part is optional. The function is called with no arguments. Example:\n\n```toml\n[project.scripts]\nget_42 = \"my_project:DummyClass.get_42\"\n```\n\nYou can also specify [trove classifiers](https://pypi.org/classifiers/) in your `pyproject.toml` under `project.classifiers`:\n\n```toml\n[project]\nname = \"my-project\"\nclassifiers = [\"Programming Language :: Python\"]\n```\n\n## Source distribution\n\nmaturin supports building through `pyproject.toml`. To use it, create a `pyproject.toml` next to your `Cargo.toml` with the following content:\n\n```toml\n[build-system]\nrequires = [\"maturin>=1.0,<2.0\"]\nbuild-backend = \"maturin\"\n```\n\nIf a `pyproject.toml` with a `[build-system]` entry is present, maturin can build a source distribution of your package when `--sdist` is specified.\nThe source distribution will contain the same files as `cargo package`. To only build a source distribution, pass `--interpreter` without any values.\n\nYou can then e.g. install your package with `pip install .`. With `pip install . -v` you can see the output of cargo and maturin.\n\nYou can use the options `compatibility`, `skip-auditwheel`, `bindings`, `strip` and common Cargo build options such as `features` under `[tool.maturin]` the same way you would when running maturin directly.\nThe `bindings` key is required for cffi and bin projects as those can't be automatically detected. Currently, all builds are in release mode (see [this thread](https://discuss.python.org/t/pep-517-debug-vs-release-builds/1924) for details).\n\nFor a non-manylinux build with cffi bindings you could use the following:\n\n```toml\n[build-system]\nrequires = [\"maturin>=1.0,<2.0\"]\nbuild-backend = \"maturin\"\n\n[tool.maturin]\nbindings = \"cffi\"\ncompatibility = \"linux\"\n```\n\n`manylinux` option is also accepted as an alias of `compatibility` for backward compatibility with old version of maturin.\n\nTo include arbitrary files in the sdist for use during compilation specify `include` as an array of `path` globs with `format` set to `sdist`:\n\n```toml\n[tool.maturin]\ninclude = [{ path = \"path/**/*\", format = \"sdist\" }]\n```\n\nThere's a `maturin sdist` command for only building a source distribution as workaround for [pypa/pip#6041](https://github.com/pypa/pip/issues/6041).\n\n## Manylinux and auditwheel\n\nFor portability reasons, native python modules on linux must only dynamically link a set of very few libraries which are installed basically everywhere, hence the name manylinux.\nThe pypa offers special docker images and a tool called [auditwheel](https://github.com/pypa/auditwheel/) to ensure compliance with the [manylinux rules](https://peps.python.org/pep-0599/#the-manylinux2014-policy).\nIf you want to publish widely usable wheels for linux pypi, **you need to use a manylinux docker image**.\n\nThe Rust compiler since version 1.64 [requires at least glibc 2.17](https://blog.rust-lang.org/2022/08/01/Increasing-glibc-kernel-requirements.html), so you need to use at least manylinux2014.\nFor publishing, we recommend enforcing the same manylinux version as the image with the manylinux flag, e.g. use `--manylinux 2014` if you are building in `quay.io/pypa/manylinux2014_x86_64`.\nThe [PyO3/maturin-action](https://github.com/PyO3/maturin-action) github action already takes care of this if you set e.g. `manylinux: 2014`.\n\nmaturin contains a reimplementation of auditwheel automatically checks the generated library and gives the wheel the proper platform tag.\nIf your system's glibc is too new or you link other shared libraries, it will assign the `linux` tag.\nYou can also manually disable those checks and directly use native linux target with `--manylinux off`.\n\nFor full manylinux compliance you need to compile in a CentOS docker container. The [pyo3/maturin](https://ghcr.io/pyo3/maturin) image is based on the manylinux2014 image,\nand passes arguments to the `maturin` binary. You can use it like this:\n\n```\ndocker run --rm -v $(pwd):/io ghcr.io/pyo3/maturin build --release  # or other maturin arguments\n```\n\nNote that this image is very basic and only contains python, maturin and stable rust. If you need additional tools, you can run commands inside the manylinux container.\nSee [konstin/complex-manylinux-maturin-docker](https://github.com/konstin/complex-manylinux-maturin-docker) for a small educational example or [nanoporetech/fast-ctc-decode](https://github.com/nanoporetech/fast-ctc-decode/blob/b226ea0f2b2f4f474eff47349703d57d2ea4801b/.github/workflows/publish.yml) for a real world setup.\n\nmaturin itself is manylinux compliant when compiled for the musl target.\n\n## Examples\n\n- [ballista-python](https://github.com/apache/arrow-ballista-python) - A Python library that binds to Apache Arrow distributed query engine Ballista\n- [bleuscore](https://github.com/shenxiangzhuang/bleuscore) - A BLEU score calculation library, written in pure Rust\n- [chardetng-py](https://github.com/john-parton/chardetng-py) - Python binding for the chardetng character encoding detector.\n- [connector-x](https://github.com/sfu-db/connector-x/tree/main/connectorx-python) - ConnectorX enables you to load data from databases into Python in the fastest and most memory efficient way\n- [datafusion-python](https://github.com/apache/arrow-datafusion-python) - a Python library that binds to Apache Arrow in-memory query engine DataFusion\n- [deltalake-python](https://github.com/delta-io/delta-rs/tree/main/python) - Native Delta Lake Python binding based on delta-rs with Pandas integration\n- [opendal](https://github.com/apache/incubator-opendal/tree/main/bindings/python) - OpenDAL Python Binding to access data freely\n- [orjson](https://github.com/ijl/orjson) - A fast, correct JSON library for Python\n- [polars](https://github.com/pola-rs/polars/tree/master/py-polars) - Fast multi-threaded DataFrame library in Rust | Python | Node.js\n- [pydantic-core](https://github.com/pydantic/pydantic-core) - Core validation logic for pydantic written in Rust\n- [pyrus-cramjam](https://github.com/milesgranger/pyrus-cramjam) - Thin Python wrapper to de/compression algorithms in Rust\n- [pyxel](https://github.com/kitao/pyxel) - A retro game engine for Python\n- [roapi](https://github.com/roapi/roapi) - ROAPI automatically spins up read-only APIs for static datasets without requiring you to write a single line of code\n- [robyn](https://github.com/sansyrox/robyn) - A fast and extensible async python web server with a Rust runtime\n- [ruff](https://github.com/charliermarsh/ruff) - An extremely fast Python linter, written in Rust\n- [tantivy-py](https://github.com/quickwit-oss/tantivy-py) - Python bindings for Tantivy\n- [watchfiles](https://github.com/samuelcolvin/watchfiles) - Simple, modern and high performance file watching and code reload in python\n- [wonnx](https://github.com/webonnx/wonnx/tree/master/wonnx-py) - Wonnx is a GPU-accelerated ONNX inference run-time written 100% in Rust\n\n## Contributing\n\nEveryone is welcomed to contribute to maturin! There are many ways to support the project, such as:\n\n- help maturin users with issues on GitHub and Gitter\n- improve documentation\n- write features and bugfixes\n- publish blogs and examples of how to use maturin\n\nOur [contributing notes](https://github.com/PyO3/maturin/blob/main/guide/src/contributing.md) have more resources if you wish to volunteer time for maturin and are searching where to start.\n\nIf you don't have time to contribute yourself but still wish to support the project's future success, some of our maintainers have GitHub sponsorship pages:\n\n- [messense](https://github.com/sponsors/messense)\n\n## License\n\nLicensed under either of:\n\n- Apache License, Version 2.0, ([LICENSE-APACHE](https://github.com/PyO3/maturin/blob/main/license-apache) or http://www.apache.org/licenses/LICENSE-2.0)\n- MIT license ([LICENSE-MIT](https://github.com/PyO3/maturin/blob/main/license-mit) or http://opensource.org/licenses/MIT)\n\nat your option.\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.6328125,
          "content": "msrv = \"1.74.0\"\n\ndisallowed-types = [\n    \"std::fs::DirEntry\",\n    \"std::fs::File\",\n    \"std::fs::OpenOptions\",\n    \"std::fs::ReadDir\",\n]\n\ndisallowed-methods = [\n    \"std::fs::canonicalize\",\n    \"std::fs::copy\",\n    \"std::fs::create_dir\",\n    \"std::fs::create_dir_all\",\n    \"std::fs::hard_link\",\n    \"std::fs::metadata\",\n    \"std::fs::read\",\n    \"std::fs::read_dir\",\n    \"std::fs::read_link\",\n    \"std::fs::read_to_string\",\n    \"std::fs::remove_dir\",\n    \"std::fs::remove_dir_all\",\n    \"std::fs::remove_file\",\n    \"std::fs::rename\",\n    \"std::fs::set_permissions\",\n    \"std::fs::soft_link\",\n    \"std::fs::symlink_metadata\",\n    \"std::fs::write\",\n]\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 11.515625,
          "content": "# This template contains all of the possible sections and their default values\n\n# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# The values provided in this template are the default values that will be used\n# when any section or field is not specified in your own configuration\n\n# Root options\n\n# The graph table configures how the dependency graph is constructed and thus\n# which crates the checks are performed against\n[graph]\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n    # The triple can be any string, but only the target triples built in to\n    # rustc (as of 1.40) can be checked against actual config expressions\n    \"x86_64-unknown-linux-musl\",\n    \"x86_64-unknown-linux-gnu\",\n    \"aarch64-unknown-linux-gnu\",\n    \"x86_64-pc-windows-msvc\",\n    \"x86_64-apple-darwin\",\n    \"aarch64-apple-darwin\",\n    # You can also specify which target_features you promise are enabled for a\n    # particular target. target_features are currently not validated against\n    # the actual valid features supported by the target architecture.\n    #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n# When creating the dependency graph used as the source of truth when checks are\n# executed, this field can be used to prune crates from the graph, removing them\n# from the view of cargo-deny. This is an extremely heavy hammer, as if a crate\n# is pruned from the graph, all of its dependencies will also be pruned unless\n# they are connected to another crate in the graph that hasn't been pruned,\n# so it should be used with care. The identifiers are [Package ID Specifications]\n# (https://doc.rust-lang.org/cargo/reference/pkgid-spec.html)\n#exclude = []\n# If true, metadata will be collected with `--all-features`. Note that this can't\n# be toggled off if true, if you want to conditionally enable `--all-features` it\n# is recommended to pass `--all-features` on the cmd line instead\nall-features = true\n# If true, metadata will be collected with `--no-default-features`. The same\n# caveat with `all-features` applies\nno-default-features = false\n# If set, these feature will be enabled when collecting metadata. If `--features`\n# is specified on the cmd line they will take precedence over this option.\n#features = []\n\n# The output table provides options for how/if diagnostics are outputted\n[output]\n# When outputting inclusion graphs in diagnostics that include features, this\n# option can be used to specify the depth at which feature edges will be added.\n# This option is included since the graphs can be quite large and the addition\n# of features from the crate(s) to all of the graph roots can be far too verbose.\n# This option can be overridden via `--feature-depth` on the cmd line\nfeature-depth = 1\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\n# The path where the advisory databases are cloned/fetched into\n#db-path = \"$CARGO_HOME/advisory-dbs\"\n# The url(s) of the advisory databases to use\n#db-urls = [\"https://github.com/rustsec/advisory-db\"]\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = [\n    # multipart unmaintained\n    \"RUSTSEC-2023-0050\",\n    #{ id = \"RUSTSEC-0000-0000\", reason = \"you can specify a reason the advisory is ignored\" },\n    #\"a-crate-that-is-yanked@0.1.1\", # you can also ignore yanked crate versions if you wish\n    #{ crate = \"a-crate-that-is-yanked@0.1.1\", reason = \"you can specify why you are ignoring the yanked crate\" },\n]\n# If this is true, then cargo deny will use the git executable to fetch advisory database.\n# If this is false, then it uses a built-in git library.\n# Setting this to true can be helpful if you have special authentication requirements that cargo-deny does not support.\n# See Git Authentication for more information about setting up git authentication.\n#git-fetch-with-cli = true\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"Apache-2.0 WITH LLVM-exception\",\n    \"ISC\",\n    \"0BSD\",\n    \"BSD-3-Clause\",\n    \"CC0-1.0\",\n    \"Unicode-3.0\",\n    \"BSL-1.0\",\n    \"MPL-2.0\",\n]\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # Each entry is the crate and version constraint, and its specific allow\n    # list\n    #{ allow = [\"Zlib\"], crate = \"adler32\" },\n    { allow = [\"ISC\", \"MIT\", \"OpenSSL\"], name = \"ring\" },\n    { allow = [\"MPL-2.0\"], name = \"webpki-roots\" },\n    { allow = [\"MPL-2.0\"], name = \"cbindgen\" },\n    { allow = [\"MPL-2.0\"], name = \"option-ext\" },\n    { allow = [\"Unicode-DFS-2016\"], name = \"unicode-ident\" },\n    { allow = [\"MIT\", \"LGPL-3.0\"], name = \"configparser\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n#[[licenses.clarify]]\n# The package spec the clarification applies to\n#crate = \"ring\"\n# The SPDX expression for the license requirements of the crate\n#expression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\n#license-files = [\n# Each entry is a crate relative path, and the (opaque) hash of its contents\n#{ path = \"LICENSE\", hash = 0xbd0eed23 }\n#]\n[[licenses.clarify]]\nname = \"ring\"\nexpression = \"MIT AND ISC AND OpenSSL\"\nlicense-files = [{ path = \"LICENSE\", hash = 0xbd0eed23 }]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries.\n# To see how to mark a crate as unpublished (to the official registry),\n# visit https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field.\nignore = false\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n    #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"warn\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# The default lint level for `default` features for crates that are members of\n# the workspace that is being checked. This can be overridden by allowing/denying\n# `default` on a crate-by-crate basis if desired.\nworkspace-default-features = \"allow\"\n# The default lint level for `default` features for external crates that are not\n# members of the workspace. This can be overridden by allowing/denying `default`\n# on a crate-by-crate basis if desired.\nexternal-default-features = \"allow\"\n# List of crates that are allowed. Use with care!\nallow = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is allowed\" },\n]\n# List of crates to deny\ndeny = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason it is banned\" },\n    # Wrapper crates can optionally be specified to allow the crate when it\n    # is a direct dependency of the otherwise banned crate\n    #{ crate = \"ansi_term@0.11.0\", wrappers = [\"this-crate-directly-depends-on-ansi_term\"] },\n]\n\n# List of features to allow/deny\n# Each entry the name of a crate and a version range. If version is\n# not specified, all versions will be matched.\n#[[bans.features]]\n#crate = \"reqwest\"\n# Features to not allow\n#deny = [\"json\"]\n# Features to allow\n#allow = [\n#    \"rustls\",\n#    \"__rustls\",\n#    \"__tls\",\n#    \"hyper-rustls\",\n#    \"rustls\",\n#    \"rustls-pemfile\",\n#    \"rustls-tls-webpki-roots\",\n#    \"tokio-rustls\",\n#    \"webpki-roots\",\n#]\n# If true, the allowed features must exactly match the enabled feature set. If\n# this is set there is no point setting `deny`\n#exact = true\n\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    #\"ansi_term@0.11.0\",\n    #{ crate = \"ansi_term@0.11.0\", reason = \"you can specify a reason why it can't be updated/removed\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite.\nskip-tree = [\n    #\"ansi_term@0.11.0\", # will be skipped along with _all_ of its direct and transitive dependencies\n    #{ crate = \"ansi_term@0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"warn\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = []\n\n[sources.allow-org]\n# github.com organizations to allow git sources for\ngithub = []\n# gitlab.com organizations to allow git sources for\ngitlab = []\n# bitbucket.org organizations to allow git sources for\nbitbucket = []\n"
        },
        {
          "name": "guide",
          "type": "tree",
          "content": null
        },
        {
          "name": "license-apache",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "license-mit",
          "type": "blob",
          "size": 1.0263671875,
          "content": "Copyright (c) 2018 konstin\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "maturin.schema.json",
          "type": "blob",
          "size": 11.04296875,
          "content": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"ToolMaturin\",\n  \"description\": \"The `[tool.maturin]` section of a pyproject.toml\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"all-features\": {\n      \"description\": \"Activate all available features\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"auditwheel\": {\n      \"description\": \"Audit wheel mode\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/AuditWheelMode\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"bindings\": {\n      \"description\": \"Bindings type\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"compatibility\": {\n      \"description\": \"Platform compatibility\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/PlatformTag\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"config\": {\n      \"description\": \"Override a configuration value (unstable)\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"data\": {\n      \"description\": \"Path to the wheel directory, defaults to `<module_name>.data`\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"exclude\": {\n      \"description\": \"Exclude files matching the given glob pattern(s)\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"$ref\": \"#/definitions/GlobPattern\"\n      }\n    },\n    \"features\": {\n      \"description\": \"Space or comma separated list of features to activate\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"frozen\": {\n      \"description\": \"Require Cargo.lock and cache are up to date\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"include\": {\n      \"description\": \"Include files matching the given glob pattern(s)\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"$ref\": \"#/definitions/GlobPattern\"\n      }\n    },\n    \"locked\": {\n      \"description\": \"Require Cargo.lock is up to date\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"manifest-path\": {\n      \"description\": \"Path to Cargo.toml\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"module-name\": {\n      \"description\": \"Module name, accepts setuptools style import name like `foo.bar`\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"no-default-features\": {\n      \"description\": \"Do not activate the `default` feature\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"profile\": {\n      \"description\": \"Build artifacts with the specified Cargo profile\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"python-packages\": {\n      \"description\": \"Python packages to include\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"python-source\": {\n      \"description\": \"The directory with python module, contains `<module_name>/__init__.py`\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"rustc-args\": {\n      \"description\": \"Additional rustc arguments\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"sdist-generator\": {\n      \"description\": \"Source distribution generator\",\n      \"default\": \"cargo\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/SdistGenerator\"\n        }\n      ]\n    },\n    \"skip-auditwheel\": {\n      \"description\": \"Skip audit wheel\",\n      \"default\": false,\n      \"type\": \"boolean\"\n    },\n    \"strip\": {\n      \"description\": \"Strip the final binary\",\n      \"default\": false,\n      \"type\": \"boolean\"\n    },\n    \"target\": {\n      \"description\": \"Target configuration\",\n      \"default\": {},\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/TargetConfig\"\n      }\n    },\n    \"targets\": {\n      \"description\": \"Cargo compile targets\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"$ref\": \"#/definitions/CargoTarget\"\n      }\n    },\n    \"unstable-flags\": {\n      \"description\": \"Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details\",\n      \"type\": [\n        \"array\",\n        \"null\"\n      ],\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"definitions\": {\n    \"AuditWheelMode\": {\n      \"description\": \"Auditwheel mode\",\n      \"oneOf\": [\n        {\n          \"description\": \"Audit and repair wheel for manylinux compliance\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"repair\"\n          ]\n        },\n        {\n          \"description\": \"Check wheel for manylinux compliance, but do not repair\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"check\"\n          ]\n        },\n        {\n          \"description\": \"Don't check for manylinux compliance\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"skip\"\n          ]\n        }\n      ]\n    },\n    \"CargoCrateType\": {\n      \"description\": \"Supported cargo crate types\",\n      \"oneOf\": [\n        {\n          \"description\": \"Binary executable target\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"bin\"\n          ]\n        },\n        {\n          \"description\": \"Dynamic system library target\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"cdylib\"\n          ]\n        },\n        {\n          \"description\": \"Dynamic Rust library target\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"dylib\"\n          ]\n        },\n        {\n          \"description\": \"Rust library\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"lib\"\n          ]\n        },\n        {\n          \"description\": \"Rust library for use as an intermediate target\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"rlib\"\n          ]\n        },\n        {\n          \"description\": \"Static library\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"staticlib\"\n          ]\n        }\n      ]\n    },\n    \"CargoTarget\": {\n      \"description\": \"Cargo compile target\",\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"kind\": {\n          \"description\": \"Kind of target (\\\"bin\\\", \\\"cdylib\\\")\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/CargoCrateType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"name\": {\n          \"description\": \"Name as given in the `Cargo.toml` or generated from the file name\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Format\": {\n      \"description\": \"The target format for the include or exclude [GlobPattern].\\n\\nSee [Formats].\",\n      \"oneOf\": [\n        {\n          \"description\": \"Source distribution\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"sdist\"\n          ]\n        },\n        {\n          \"description\": \"Wheel\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"wheel\"\n          ]\n        }\n      ]\n    },\n    \"Formats\": {\n      \"description\": \"A single [Format] or multiple [Format] values for a [GlobPattern].\",\n      \"anyOf\": [\n        {\n          \"description\": \"A single [Format] value\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/Format\"\n            }\n          ]\n        },\n        {\n          \"description\": \"Multiple [Format] values\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Format\"\n          }\n        }\n      ]\n    },\n    \"GlobPattern\": {\n      \"description\": \"A glob pattern for the include and exclude configuration.\\n\\nSee [PyProjectToml::include] and [PyProject::exclude].\\n\\nBased on <https://python-poetry.org/docs/pyproject/#include-and-exclude>.\",\n      \"anyOf\": [\n        {\n          \"description\": \"A glob\",\n          \"type\": \"string\"\n        },\n        {\n          \"description\": \"A glob `path` with a `format` key to specify one or more [Format] values\",\n          \"type\": \"object\",\n          \"required\": [\n            \"format\",\n            \"path\"\n          ],\n          \"properties\": {\n            \"format\": {\n              \"description\": \"One or more [Format] values\",\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/definitions/Formats\"\n                }\n              ]\n            },\n            \"path\": {\n              \"description\": \"A glob\",\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    },\n    \"PlatformTag\": {\n      \"description\": \"Decides how to handle manylinux and musllinux compliance\",\n      \"oneOf\": [\n        {\n          \"description\": \"Use the manylinux_x_y tag\",\n          \"type\": \"object\",\n          \"required\": [\n            \"Manylinux\"\n          ],\n          \"properties\": {\n            \"Manylinux\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"x\",\n                \"y\"\n              ],\n              \"properties\": {\n                \"x\": {\n                  \"description\": \"GLIBC version major\",\n                  \"type\": \"integer\",\n                  \"format\": \"uint16\",\n                  \"minimum\": 0.0\n                },\n                \"y\": {\n                  \"description\": \"GLIBC version minor\",\n                  \"type\": \"integer\",\n                  \"format\": \"uint16\",\n                  \"minimum\": 0.0\n                }\n              }\n            }\n          },\n          \"additionalProperties\": false\n        },\n        {\n          \"description\": \"Use the musllinux_x_y tag\",\n          \"type\": \"object\",\n          \"required\": [\n            \"Musllinux\"\n          ],\n          \"properties\": {\n            \"Musllinux\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"x\",\n                \"y\"\n              ],\n              \"properties\": {\n                \"x\": {\n                  \"description\": \"musl libc version major\",\n                  \"type\": \"integer\",\n                  \"format\": \"uint16\",\n                  \"minimum\": 0.0\n                },\n                \"y\": {\n                  \"description\": \"musl libc version minor\",\n                  \"type\": \"integer\",\n                  \"format\": \"uint16\",\n                  \"minimum\": 0.0\n                }\n              }\n            }\n          },\n          \"additionalProperties\": false\n        },\n        {\n          \"description\": \"Use the native linux tag\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"Linux\"\n          ]\n        }\n      ]\n    },\n    \"SdistGenerator\": {\n      \"description\": \"Source distribution generator\",\n      \"oneOf\": [\n        {\n          \"description\": \"Use `cargo package --list`\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"cargo\"\n          ]\n        },\n        {\n          \"description\": \"Use `git ls-files`\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"git\"\n          ]\n        }\n      ]\n    },\n    \"TargetConfig\": {\n      \"description\": \"Target configuration\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"macos-deployment-target\": {\n          \"description\": \"macOS deployment target version\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        }\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "maturin",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.1953125,
          "content": "[build]\n  publish = \"guide/book/\"\n  command = \"curl -L https://github.com/rust-lang/mdBook/releases/download/v0.4.26/mdbook-v0.4.26-x86_64-unknown-linux-musl.tar.gz | tar xvz && ./mdbook build guide\"\n"
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 2.85546875,
          "content": "import os\nimport json\nimport sys\nfrom pathlib import Path\n\nimport nox\n\n\nPYODIDE_VERSION = os.getenv(\"PYODIDE_VERSION\", \"0.23.4\")\nGITHUB_ACTIONS = os.getenv(\"GITHUB_ACTIONS\")\nGITHUB_ENV = os.getenv(\"GITHUB_ENV\")\nMSRV = \"1.74.0\"\n\n\ndef append_to_github_env(name: str, value: str):\n    if not GITHUB_ACTIONS or not GITHUB_ENV:\n        return\n\n    with open(GITHUB_ENV, \"w+\") as f:\n        f.write(f\"{name}={value}\\n\")\n\n\n@nox.session(name=\"update-pyo3\", python=False)\ndef update_pyo3(session: nox.Session):\n    # TODO: support updating major and minor versions by editing Cargo.toml first\n    test_crate_dir = Path(\"./test-crates\").resolve()\n    crates_to_update = [\"pyo3\", \"pyo3-ffi\", \"python3-dll-a\"]\n    for root, _, files in os.walk(test_crate_dir):\n        if \"Cargo.lock\" in files:\n            cargo_lock_path = Path(root) / \"Cargo.lock\"\n            with open(cargo_lock_path, \"r\") as lock_file:\n                content = lock_file.read()\n                for crate in crates_to_update:\n                    if f'name = \"{crate}\"' in content:\n                        with session.chdir(root):\n                            session.run(\"cargo\", f\"+{MSRV}\", \"update\", \"-p\", crate, external=True)\n\n\n@nox.session(name=\"setup-pyodide\", python=False)\ndef setup_pyodide(session: nox.Session):\n    tests_dir = Path(\"./tests\").resolve()\n    with session.chdir(tests_dir):\n        session.run(\n            \"npm\",\n            \"i\",\n            \"--no-save\",\n            f\"pyodide@{PYODIDE_VERSION}\",\n            \"prettier\",\n            external=True,\n        )\n        with session.chdir(tests_dir / \"node_modules\" / \"pyodide\"):\n            session.run(\n                \"node\",\n                \"../prettier/bin/prettier.cjs\",\n                \"-w\",\n                \"pyodide.asm.js\",\n                external=True,\n            )\n            with open(\"repodata.json\") as f:\n                emscripten_version = json.load(f)[\"info\"][\"platform\"].split(\"_\", 1)[1].replace(\"_\", \".\")\n                append_to_github_env(\"EMSCRIPTEN_VERSION\", emscripten_version)\n\n\n@nox.session(name=\"test-emscripten\", python=False)\ndef test_emscripten(session: nox.Session):\n    tests_dir = Path(\"./tests\").resolve()\n\n    test_crates = [\n        \"test-crates/pyo3-pure\",\n        \"test-crates/pyo3-mixed\",\n    ]\n    for crate in test_crates:\n        crate = Path(crate).resolve()\n        ver = sys.version_info\n        session.run(\"cargo\", \"build\", external=True)\n        session.run(\n            tests_dir.parent / \"target\" / \"debug\" / \"maturin\",\n            \"build\",\n            \"-m\",\n            str(crate / \"Cargo.toml\"),\n            \"--target\",\n            \"wasm32-unknown-emscripten\",\n            \"-i\",\n            f\"python{ver.major}.{ver.minor}\",\n            env={\"RUSTUP_TOOLCHAIN\": \"nightly\"},\n            external=True,\n        )\n\n        with session.chdir(tests_dir):\n            session.run(\"node\", \"emscripten_runner.js\", str(crate), external=True)\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5283203125,
          "content": "# Workaround to bootstrap maturin on non-manylinux platforms\n[build-system]\nrequires = [\"setuptools\", \"wheel>=0.36.2\", \"tomli>=1.1.0 ; python_version<'3.11'\", \"setuptools-rust>=1.4.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"maturin\"\ndescription = \"Build and publish crates with pyo3, cffi and uniffi bindings as well as rust binaries as python packages\"\nauthors = [{ name = \"konstin\", email = \"konstin@mailbox.org\" }]\nreadme = { file = \"README.md\", content-type = \"text/markdown\" }\nrequires-python = \">=3.7\"\nlicense = {text = \"MIT OR Apache-2.0\"}\nclassifiers = [\n    \"Topic :: Software Development :: Build Tools\",\n    \"Programming Language :: Rust\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n]\ndependencies = [\"tomli>=1.1.0 ; python_version<'3.11'\"]\ndynamic = [\n    \"version\"\n]\n\n[project.optional-dependencies]\nzig = [\n    \"ziglang>=0.10.0,<0.13.0\",\n]\npatchelf = [\n    \"patchelf\",\n]\n\n[project.urls]\n\"Source Code\" = \"https://github.com/PyO3/maturin\"\nIssues = \"https://github.com/PyO3/maturin/issues\"\nDocumentation = \"https://maturin.rs\"\nChangelog = \"https://maturin.rs/changelog.html\"\n\n[tool.setuptools]\npackages = [\"maturin\"]\n\n[tool.maturin]\nbindings = \"bin\"\n\n[tool.black]\ntarget-version = ['py37']\nextend-exclude = '''\n# Ignore cargo-generate templates\n^/src/templates\n'''\n\n[tool.ruff]\nline-length = 120\ntarget-version = \"py37\"\n\n[tool.mypy]\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\nwarn_no_return = true\nignore_missing_imports = true\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.9208984375,
          "content": "# maturin is self bootstrapping, however on platforms like FreeBSD that aren't\n# manylinux/musllinux, pip will try installing maturin from the source distribution.\n# That source distribution obviously can't depend on maturin, so we're using\n# the always available setuptools.\n#\n# Note that this is really only a workaround for bootstrapping and not suited\n# for general purpose packaging, i.e. only building a wheel (as in\n# `python setup.py bdist_wheel`) and installing (as in\n# `pip install <source dir>`) are supported. For creating a source distribution\n# for maturin itself use `maturin sdist`.\n\nimport os\nimport shlex\n\ntry:\n    import tomllib\nexcept ModuleNotFoundError:\n    import tomli as tomllib\nfrom setuptools import setup\n\nfrom setuptools_rust import RustBin\n\n# Force the wheel to be platform specific\n# https://stackoverflow.com/a/45150383/3549270\n# There's also the much more concise solution in\n# https://stackoverflow.com/a/53463910/3549270,\n# but that would require python-dev\ntry:\n    # noinspection PyPackageRequirements,PyUnresolvedReferences\n    from wheel.bdist_wheel import bdist_wheel as _bdist_wheel\n\n    # noinspection PyPep8Naming,PyAttributeOutsideInit\n    class bdist_wheel(_bdist_wheel):\n        def finalize_options(self):\n            _bdist_wheel.finalize_options(self)\n            self.root_is_pure = False\n\nexcept ImportError:\n    bdist_wheel = None\n\nwith open(\"Cargo.toml\", \"rb\") as fp:\n    version = tomllib.load(fp)[\"package\"][\"version\"]\n\n# Use `--no-default-features` by default for a minimal build to support PEP 517.\n# `MATURIN_SETUP_ARGS` env var can be used to pass customized arguments to cargo.\ncargo_args = [\"--no-default-features\"]\nif os.getenv(\"MATURIN_SETUP_ARGS\"):\n    cargo_args = shlex.split(os.getenv(\"MATURIN_SETUP_ARGS\", \"\"))\n\nsetup(\n    version=version,\n    cmdclass={\"bdist_wheel\": bdist_wheel},\n    rust_extensions=[RustBin(\"maturin\", args=cargo_args, cargo_manifest_args=[\"--locked\"])],\n    zip_safe=False,\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "sysconfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-dockerfile.sh",
          "type": "blob",
          "size": 0.970703125,
          "content": "#!/usr/bin/env bash\n# Builds all 6 test crates using the docker container,\n# installs the wheel and checks that the installed package is functional\n\nset -e\n\nrm -rf venv-docker\npython3.11 -m venv venv-docker\nvenv-docker/bin/pip install -U pip cffi\n\n# FIXME: Can we run the tests without activate? Currently hello-world fails because then the binary is not in PATH\nsource venv-docker/bin/activate\n\nfor test_crate in hello-world cffi-pure cffi-mixed pyo3-pure pyo3-mixed pyo3-mixed-submodule pyo3-mixed-implicit\ndo\n  echo \"Testing $test_crate\"\n  docker run -e RUST_BACKTRACE=1 --rm -v \"$(pwd):/io\" -w /io/test-crates/$test_crate maturin build -i python3.11\n  # --only-binary=:all: stops pip from picking a local already compiled sdist\n  venv-docker/bin/pip install $test_crate --only-binary=:all: --find-links test-crates/$test_crate/target/wheels/\n  if [[ $(venv-docker/bin/python test-crates/$test_crate/check_installed/check_installed.py) != 'SUCCESS' ]]; then\n    exit 1\n  fi\ndone\n\ndeactivate\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}