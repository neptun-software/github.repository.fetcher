{
  "metadata": {
    "timestamp": 1736709221943,
    "page": 514,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tailhook/vagga",
      "stars": 1865,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3125,
          "content": "/*.rlib\n/*.a\n/*.o\n*.pyc\n.vagga\n/tmp\n/docs/_build\n/dist\n\ntodo.txt\n\n/vagga\n/main\n\n/apk\n/busybox\n/alpine-keys.apk\n/alpine\n\n/target\n\n/tests/image/images\n/tests/image/nginx\n/tests/inheritance/description-pak\n\n # directories created by bundler\n/tests/gem_bundler/.bundle\n/tests/gem_bundler_lock/.bundle\n\n# emacs files\n*~\n\\#*#\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.625,
          "content": "_defaults:\n  linux: &linux\n    os: linux\n    dist: trusty\n    sudo: required\n\nlanguage: rust\nmatrix:\n  include:\n    - <<: *linux\n      env: TESTS=\"cargo alpine badcmd copy cyclic completion generic image network prerequisites readonly uidmap vcs version volumes mixins capsule hardlinking\"\n    - <<: *linux\n      env: TESTS=\"inheritance subconfig ubuntu ubuntu_release\"\n    - <<: *linux\n      env: TESTS=\"npm pip yarn\"\n    - <<: *linux\n      env: TESTS=\"composer gem_bundler gem_bundler_lock\"\n    - os: osx\nallow_failures:\n- os: osx\ninstall:\n- \"echo ubuntu-mirror: http://mirrors.us.kernel.org/ubuntu/ > ~/.vagga.yaml\"\n- \"echo alpine-mirror: http://mirrors.gigenet.com/alpinelinux/ >> ~/.vagga.yaml\"\n- |\n  set -ex\n  if [[ $TRAVIS_OS_NAME != osx ]]; then\n    echo \"$(id -un):100000:65536\" | sudo tee /etc/subuid | sudo tee /etc/subgid\n    sudo apt-get install uidmap -y\n    curl http://files.zerogw.com/vagga/vagga-install-testing.sh | sh\n    vagga make\n    vagga _build test\n  else\n    brew install md5sha1sum\n    VAGGA_VERSION=$(git describe) cargo build --no-default-features --features config_runner\n  fi\n  set +e\nscript:\n- |\n  set -ex\n  if [[ $TRAVIS_OS_NAME != osx ]]; then\n    vagga _create_netns\n    tests=($(echo $TESTS))\n    for test in ${tests[@]}; do\n      if [[ $test = cargo ]]; then\n        vagga -E VAGGA_VERSION=v0.0.0-test _run rust-musl cargo test --all\n      else\n        vagga \\\n          -E UBUNTU_MIRROR=http://mirrors.us.kernel.org/ubuntu/ \\\n          -E ALPINE_MIRROR=http://mirrors.gigenet.com/alpinelinux/ \\\n          test tests/$test.bats --tap --verbose-run --trace\n      fi\n    done\n  else\n    ./target/debug/vagga _list\n  fi\n  set +e\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 28.9443359375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9ecd88a8c8378ca913a680cd98f0f13ac67383d35993f86c90a70e3f137816b\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e37cfd5e7657ada45f742d6e99ca5788580b5c529dc78faf11ece6dc702656f\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anymap\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33954243bd79057c2de7338850b85983a44588021f8a5fee574a8888c6de4344\"\n\n[[package]]\nname = \"argparse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f8ebf5827e4ac4fd5946560e6a99776ea73b596d80898f357007317a7141e47\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da52d66c7071e2e3fa2a1e5c6d088fec47b593032b254f5e980de8ea54454d6\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"321629d8ba6513061f26707241fa9bc89524ff1cd7a915a97ef0c62c666ce1b6\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if 1.0.0\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"blake2\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a4e37d16930f5459780f5621038b6382b9bb37c19016f39fb6b5808d831f174\"\ndependencies = [\n \"crypto-mac\",\n \"digest\",\n \"opaque-debug\",\n]\n\n[[package]]\nname = \"blake3\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"526c210b4520e416420759af363083471656e819a75e831b8d2c9d5a584f2413\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"cc\",\n \"cfg-if 1.0.0\",\n \"constant_time_eq\",\n \"digest\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"bzip2\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42b7c3cbf0fa9c1b82308d57191728ca0256cb821220f4e2fd410a72ade26e3b\"\ndependencies = [\n \"bzip2-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"bzip2-sys\"\nversion = \"0.1.11+1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"736a955f3fa7875102d57c82b8cac37ec45224a07fd32d58f9f7a186b6cd4cdc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22a9137b95ea06864e018375b72adfb7db6e6f68cfc8df5a04d00288050485ee\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cloudabi\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95059428f66df56b63431fdb4e1947ed2190586af5c5a8a8b71122bdf5a7f469\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"738c290dfaea84fc1ca15ad9c168d083b05a714e1efddd8edaab678dc28d2836\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"crypto-mac\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b584a330336237c1eecd3e94266efb216c56ed91225d634cb2991c5f3fd1aeab\"\ndependencies = [\n \"generic-array\",\n \"subtle\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"dir-signature\"\nversion = \"0.2.9\"\nsource = \"git+https://github.com/tailhook/dir-signature?rev=fd6bf1b#fd6bf1ba3bd1822ca5c73f6d9934aec5580e65bc\"\ndependencies = [\n \"argparse\",\n \"blake2\",\n \"blake3\",\n \"digest\",\n \"env_logger\",\n \"futures\",\n \"futures-cpupool\",\n \"generic-array\",\n \"itertools\",\n \"log\",\n \"num_cpus\",\n \"openat\",\n \"quick-error\",\n \"sha2\",\n]\n\n[[package]]\nname = \"docopt\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f3f119846c823f9eafcf953a8f6ffb6ed69bf6240883261a7f13b634579a51f\"\ndependencies = [\n \"lazy_static\",\n \"regex\",\n \"serde\",\n \"strsim\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15b0a4d2e39f8420210be8b27eeda28029729e2fd4291019455016c348240c38\"\ndependencies = [\n \"atty\",\n \"humantime\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"failure\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86\"\ndependencies = [\n \"backtrace\",\n \"failure_derive\",\n]\n\n[[package]]\nname = \"failure_derive\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"975ccf83d8d9d0d84682850a38c8169027be83368805971cc4f238c2b245bc98\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"redox_syscall\",\n \"winapi\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e6988e897c1c9c485f43b47a529cef42fde0547f9d8d41a7062518f1d8fc53f\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"crc32fast\",\n \"libc\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.1.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678\"\n\n[[package]]\nname = \"futures-cpupool\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab90cde24b3319636588d0c35fe03b1333857621051837ed769faefb4c2162e4\"\ndependencies = [\n \"futures\",\n \"num_cpus\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"501466ecc8a30d1d3b7fc9229b122b2ce8ed6e9d9223f1138d4babb253e51817\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcd999463524c52659517fe2cea98493cfe485d10565e7b0fb07dbba7ad2753\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78cc372d058dcf6d5ecd98510e7fbc9e5aec4d21de70f65fea8fecebcd881bd4\"\n\n[[package]]\nname = \"git2\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"591f8be1674b421644b6c030969520bc3fa12114d2eb467471982ed3e9584e71\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"libgit2-sys\",\n \"log\",\n \"url\",\n]\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10463d9ff00a2a068db14231982f5132edebad0d7660cd956a1c30292dbcbfbd\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"fnv\",\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"humannum\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2543f51658681860b1ad9aee0aac90182bc8b971f71a3d9eb1d38e23e1158a4b\"\ndependencies = [\n \"num-traits 0.1.43\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f\"\ndependencies = [\n \"quick-error\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e\"\ndependencies = [\n \"matches\",\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.7.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d47946d458e94a1b7bcabbf6521ea7c037062c81f534615abcad76e84d4970d\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.108\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8521a1b57e76b1ec69af7599e75e38e7b7fad6610f037db8c79b127201b5d119\"\n\n[[package]]\nname = \"libgit2-sys\"\nversion = \"0.7.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48441cb35dc255da8ae72825689a95368bf510659ae1ad55dc4aa88cb1789bf1\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libmount\"\nversion = \"0.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23c4c2ad2d5cbd2f5a05620c3daf45930add53ec207fa99ce5eec971089dc35f\"\ndependencies = [\n \"libc\",\n \"nix 0.14.1\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de5435b8549c16d423ed0c03dbaafe57cf6c3344744f1242520d59c9d8ecec66\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"lzma-sys\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdb4b7c3eddad11d3af9e86c487607d2d2442d185d848575365c4856ba96d619\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"matches\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e378b66a060d48947b590737b30a1be76706c8dd7b8ba0f2fe3989c68a853f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308cc39be01b73d0d18f82a0e7b2a3df85245f84af96fdddc5d202d27e47b86a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a92518e98c078586bc6c934028adcca4c92a53d6a958196de835170a01d84e4b\"\ndependencies = [\n \"adler\",\n \"autocfg\",\n]\n\n[[package]]\nname = \"mopa\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a785740271256c230f57462d3b83e52f998433a7062fc18f96d5999474a9f915\"\n\n[[package]]\nname = \"msdos_time\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aad9dfe950c057b1bfe9c1f2aa51583a8468ef2a5baba2ebbe06d775efeb7729\"\ndependencies = [\n \"time\",\n \"winapi\",\n]\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"391630d12b68002ae1e25e8f974306474966550ad82dac6886fb8910c19568ae\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"becb657d662f1cd2ef38c7ad480ec6b8cf9e96b27adb543e594f9cf0f2e6065c\"\ndependencies = [\n \"bitflags\",\n \"cc\",\n \"cfg-if 0.1.10\",\n \"libc\",\n \"void\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c722bee1037d430d0f8e687bbdbf222f27cc6e4e68d5caf630857bb2b6dbdce\"\ndependencies = [\n \"bitflags\",\n \"cc\",\n \"cfg-if 0.1.10\",\n \"libc\",\n \"void\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92e5113e9fd4cc14ded8e499429f396a20f98c772a47cc8622a736e1ec843c31\"\ndependencies = [\n \"num-traits 0.2.14\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.27.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67ac1d3f9a1d3616fd9a60c8d74296f22406a238b6a72f5cc1e6f314df4ffbf9\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"opaque-debug\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5\"\n\n[[package]]\nname = \"openat\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95aa7c05907b3ebde2610d602f4ddd992145cc6a84493647c30396f30ba83abe\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"path-filter\"\nversion = \"0.1.0\"\ndependencies = [\n \"globset\",\n \"quick-error\",\n \"regex\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12295df4f294471248581bc09bef3c38a5e46f1e36d6a37353621a0c6c357e1f\"\n\n[[package]]\nname = \"podio\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b18befed8bc2b61abc79a457295e7e838417326da1586050b919414073977f19\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed0cfbc8191465bed66e1718596ee0b0b35d5ee1f41c5df2189d0fe8bde535ba\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba508cc11742c0dc5c1659771673afbab7a0efab23aa17e854cbab0837ed0b43\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quire\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff09b51b14f09c09d790e33f8c499d04bb9a766b389f1a797742ee889f081958\"\ndependencies = [\n \"humannum\",\n \"num-traits 0.2.14\",\n \"quick-error\",\n \"serde\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38bc8cc6a5f2e3655e0899c1b848643b2562f853f114bfec7be120678e3ace05\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c618c47cd3ebd209790115ab837de41425723956ad3ce2e6a7f09890947cacb9\"\ndependencies = [\n \"cloudabi\",\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.3.1\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e7573632e6454cf6b99d7aac4ccca54be06da05aca2ef7423d22d27d4d4bcd8\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core 0.6.3\",\n \"rand_hc\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.3\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\ndependencies = [\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d34f1408f55294453790c48b2f1ebbb1c5b4b7563eb1f418bcfcfdbb06ebb4e7\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d51e9f596de227fda2ea6c84607f5558e196eeaf43c986b724ba4fb8fdf497e7\"\ndependencies = [\n \"rand_core 0.6.3\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8383f39639269cde97d255a32bdb68c047337295414940c68bdd30c2e13203ff\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d07a8629359eb56f1e2fb1652bb04212c072a87ba68546a04065d525673ac461\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f497285884f3fcff424ffc933e56d7cbca511def0c9831a7f9b5f6153e3cc89b\"\n\n[[package]]\nname = \"remove_dir_all\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"resolv-conf\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11834e137f3b14e309437a8276714eed3a80d1ef894869e510f2c0c0b98b9f4a\"\ndependencies = [\n \"quick-error\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ef03e0a2b150c7a90d01faf6254c9c48a41e95fb2a8c2ac1c6f0d2b9aefc342\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c9613b5a66ab9ba26415184cfc41156594925a9cf3a2057e57f31ff145f6568\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scan_dir\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ccb8e3d26f2775b128b053d1827feb90ed954ef97e3cb88c822f42e946c9155\"\ndependencies = [\n \"quick-error\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.130\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f12d06de37cf59146fbdecab66aa99f9fe4f78722e3607577a5375d66bd0c913\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.130\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7bc1a1ab1961464eae040d96713baa5a724a8152c1222492465b54322ec508b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0ffa0837f2dfa6fb90868c2b5468cad482e175f7dad97e7421951e663f2b527\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b69f9a4c9740d74c5baa3fd2e547f9525fa8088a8a958e0ca2409a514e33f5fa\"\ndependencies = [\n \"block-buffer\",\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"digest\",\n \"opaque-debug\",\n]\n\n[[package]]\nname = \"signal\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"106428d9d96840ecdec5208c13ab8a4e28c38da1e0ccf2909fb44e41b992f897\"\ndependencies = [\n \"libc\",\n \"nix 0.11.1\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.82\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8daf5dd0bb60cbd4137b1b587d2fc0ae729bc07cf01cd70b36a1ed5ade3b9d59\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f36bdaa60a83aca3921b5259d5400cbf5e90fc51931376a9bd4a0eb79aa7210f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6f5515d3add52e0bbdcad7b83c388bb36ba7b754dda3b5f5bc2d38640cdba5c\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dac1c663cfc93810f88aed9b8941d48cabf856a1b111c29a40439018d870eb22\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"rand 0.8.4\",\n \"redox_syscall\",\n \"remove_dir_all\",\n \"winapi\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dfed899f0eb03f32ee8c6a0aabdb8a7949659e3466561fc0adf54e26d88c5f4\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c1c1d5a42b6245520c249549ec267180beaffcc0615401ac8e31853d4b6d8d2\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b63708a265f51345575b27fe43f9500ad611579e764c79edbc2037b1121959ec\"\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a01404663e3db436ed2746d9fefef640d868edae3cceb81c3b8d5732fda678f\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d54590932941a9e9266f0832deed84ebe1bf2e4c9e4a3554d393d18f5e854bf9\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ccb82d61f80a663efe1f787a51b16b5a51e3314d6ac365b08639f52387b33f3\"\n\n[[package]]\nname = \"unshare\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58d2c2690521b30eb4cf2eff6a91b1efabea47174089f80635ecd0d32c62e012\"\ndependencies = [\n \"libc\",\n \"nix 0.11.1\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"1.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd4e7c0d531266369519a4aa4f399d748bd37043b00bde1e4ff1f60a120b355a\"\ndependencies = [\n \"idna\",\n \"matches\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"vagga\"\nversion = \"0.8.1\"\ndependencies = [\n \"anymap\",\n \"argparse\",\n \"blake2\",\n \"bzip2\",\n \"digest\",\n \"dir-signature\",\n \"docopt\",\n \"env_logger\",\n \"failure\",\n \"flate2\",\n \"git2\",\n \"humantime\",\n \"itertools\",\n \"lazy_static\",\n \"libc\",\n \"libmount\",\n \"log\",\n \"matches\",\n \"mopa\",\n \"net2\",\n \"nix 0.11.1\",\n \"path-filter\",\n \"quick-error\",\n \"quire\",\n \"rand 0.5.6\",\n \"regex\",\n \"resolv-conf\",\n \"scan_dir\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"sha2\",\n \"signal\",\n \"tar\",\n \"tempfile\",\n \"typenum\",\n \"unshare\",\n \"url\",\n \"xz2\",\n \"zip\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fecdca9a5291cc2b8dcf7dc02453fee791a280f3743cb0905f8822ae463b3fe\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56\"\ndependencies = [\n \"same-file\",\n \"winapi\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.2+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd6fbd9a79829dd1ad0cc20627bf1ed606756a7f77edff7b66b7064f9cb327c6\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"xattr\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"244c3741f4240ef46274860397c7c74e50eb23624996930e484c16679633a54c\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"xz2\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c179869f34fc7c01830d3ce7ea2086bc3a07e0d35289b667d0a8bf910258926c\"\ndependencies = [\n \"lzma-sys\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36b9e08fb518a65cf7e08a1e482573eb87a2f4f8c6619316612a3c1f162fe822\"\ndependencies = [\n \"bzip2\",\n \"flate2\",\n \"msdos_time\",\n \"podio\",\n \"time\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.69140625,
          "content": "[package]\nname = \"vagga\"\nversion = \"0.8.1\"\nauthors = [\"Paul Colomiets\"]\nedition = \"2021\"\n\n[workspace]\nmembers = [\"path_filter\"]\n\n[profile.test]\nopt-level = 2\n\n[dependencies]\nlibc = \"0.2.28\"\nnix = \"0.11.0\"\ndigest_traits = { version=\"0.9.0\", package=\"digest\" }\nsha2 = \"0.9.8\"\nblake2 = \"0.9.2\"\ntypenum = \"1.14.0\"\nrand = \"0.5.0\"\nargparse = \"0.2.1\"\nlog = \"0.4.0\"\nenv_logger = \"0.5.6\"\nurl = \"1.0.0\"\nunshare = { version=\"0.5.0\", optional=true }\nsignal = { version=\"0.6.0\", optional=true }\nmopa = \"0.2.2\"\nanymap = \"0.12.1\"\nmatches = \"0.1.6\"\nregex = \"1.0.0\"\nscan_dir = \"0.3.1\"\nlibmount = { version=\"0.1.10\", optional=true }\nzip = { version=\"0.4.2\", optional=true }\nxz2 = { version=\"0.1.0\", optional=true }\ntar = { version=\"0.4.8\", optional=true }\nflate2 = { version=\"1.0.1\", optional=true }\nbzip2 = { version=\"0.3.0\", optional=true }\nnet2 = { version=\"0.2.23\", optional=true }\nhumantime = \"1.0.0\"\nquick-error = \"1.2.0\"\ndocopt = \"1.0.0\"\nquire = \"0.4.1\"\nlazy_static = \"1.0.0\"\ndir-signature = { git=\"https://github.com/tailhook/dir-signature\", rev=\"fd6bf1b\", optional=true }\nitertools = \"0.7.8\"\ngit2 = { version=\"0.7.1\", default-features=false, optional=true }\ntempfile = { version=\"3.0.2\", optional=true }\npath-filter = { version = \"0.1.0\", path = \"path_filter\", optional=true }\nserde = { version = \"1.0.11\", features = [\"rc\"] }\nserde_json = \"1.0.2\"\nserde_derive = \"1.0.11\"\nfailure = \"0.1.1\"\nresolv-conf = \"0.6.0\"\n\n[features]\ndefault = [\"containers\"]\ncontainers = [\n    \"unshare\", \"libmount\", \"signal\",\n    \"dir-signature\", \"path-filter\", \"tempfile\",\n    \"flate2\", \"xz2\", \"tar\", \"zip\", \"bzip2\",\n    \"net2\", \"git2\",\n]\ndocker_runner = []\nconfig_runner = []\n\n[profile.release]\ndebug = true\nlto = true\n\n[[bin]]\nname = \"vagga\"\npath = \"src/main.rs\"\n"
        },
        {
          "name": "EXIT_CODES.rst",
          "type": "blob",
          "size": 0.396484375,
          "content": "\nvagga_version\n=============\n\n* 1 -- error when executing command inside container\n* 29 -- can't calc hash, need container rebuild\n* 121 -- error when launching internal subcommand\n* 122 -- can't parse arguments, trying to run vagga as root\n* 124 -- error when executing wrapper's subcommand\n* 126 -- can't read or parse config, vagga version mismatch, can't stat config directory\n* 127 -- unknown command\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "Copyright (c) 2014-2015 Paul Colomiets\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.677734375,
          "content": "RUSTC ?= rustc\nCC ?= gcc\nAR ?= ar\n\n\nexport PREFIX ?= /usr\nexport DESTDIR ?=\nexport VAGGA_VERSION = $(shell git describe)\nPACKAGE_FILES = vagga apk busybox alpine-keys.apk install.sh\nCOMPLETION_FILES = completions/bash-completion.sh completions/zsh-completion.sh\n\n\nall: downloads vagga\n\nwith-docker: downloads\n\tcargo build --no-default-features --features docker_runner\n\nrelease: downloads vagga-release\n\nbuild-test: downloads vagga-build-test\n\nvagga:\n\tcargo build --target=x86_64-unknown-linux-musl\n\tcp --remove-destination target/x86_64-unknown-linux-musl/debug/vagga .\n\nvagga-release:\n\tcargo build --target=x86_64-unknown-linux-musl --release\n\tcp --remove-destination target/x86_64-unknown-linux-musl/release/vagga .\n\nvagga-build-test:\n\tcargo build --target=x86_64-unknown-linux-musl --profile=test\n\tcp --remove-destination target/x86_64-unknown-linux-musl/debug/vagga .\n\ndownloads: apk busybox alpine-keys.apk\n\nalpine/MIRRORS.txt apk busybox alpine-keys: ./fetch_binaries.sh\n\t./fetch_binaries.sh\n\ninstall:\n\t./install.sh\n\ntarball:\n\t[ -d dist ] || mkdir dist\n\ttarname=vagga-$$(git describe | cut -c2-).tar.xz \\\n\t&& tmpdir=$$(mktemp -d) \\\n\t&& mkdir -p $$tmpdir/vagga/completions \\\n\t&& cp $(PACKAGE_FILES) $$tmpdir/vagga \\\n\t&& cp $(COMPLETION_FILES) $$tmpdir/vagga/completions \\\n\t&& tar -cJf dist/$$tarname -C $$tmpdir vagga \\\n\t&& rm -rf $$tmpdir \\\n\techo Done tarball $$tarname\n\n\nubuntu-package:\n\tcheckinstall \\\n\t\t--default \\\n\t\t--maintainer=paul@colomiets.name \\\n\t\t--pkglicense=MIT \\\n\t\t--pkgname=vagga \\\n\t\t--pkgver=\"$$(git describe | cut -c2-)\" \\\n\t\t--pakdir=\"dist\" \\\n\t\t--requires=\"uidmap\" \\\n\t\t--backup=no \\\n\t\t--nodoc \\\n\t\t$(CHECKINSTALL_FLAGS) \\\n\t\t./install.sh\n\n.PHONY: all downloads vagga install release vagga-release\n"
        },
        {
          "name": "NETWORK.rst",
          "type": "blob",
          "size": 3.0810546875,
          "content": "====================\nNetworking Internals\n====================\n\n\nOverall\n=======\n\nThe connection scheme is following::\n\n    host -- gateway -- bridge ×n -- guest ×n×m\n\nTerms are used with the following meanings:\n\nhost\n  Is a network on host system. We add a veth device (named \"vagga\") with\n  a single address on it.\n\ngateway\n  Is a network that is created by ``_create_netns`` once. And is used by all\n  containers. It has peer device of veth \"vagga\" named \"vagga_guest\". It\n  also has a veth per each ``bridge`` process.\n\nbridge\n  A network namespace that is created per each vagga command (once for all\n  subcommands of !Supervise command). It's there so that each ``bridge`` have\n  it's own 172.18.0.0/24 network and they don't interfere each other.\n  The ``×n`` above means there is *n* bridges for *n* simultaneous commands\n  running.\n\n\nguest\n  A network namespace for each container running (i.e. each subcommand of\n  vagga command). The guests of each bridge have same network. So in each\n  vagga command same IPs 172.18.0.1, 172.18.0.2 may be used. But by proper\n  namespacing and bridging they don't interfere each other. But subcommands\n  of each command do see each other by using bridge, unless ``vagga_partition``\n  is used.\n\n\n\nNetworks Used\n=============\n\nThe hard-coded network and host addresses for now are:\n\n* 172.18.255.1/30 (host) -- 172.18.255.2/30 (gateway) for host to gateway.\n  The 172.18.255.1 is the only IP visible in the host system.\n* 172.18.192.0 - 172.18.223.255 (or /19) -- for gateway to bridge IP addresses,\n  they are generated automatically when command starts, and are visible only\n  to bridge-hosted processes (i.e. one usually doing network tests). The /30\n  networks are allocated, so up to 2048 simultaneous bridges (commands)\n  are supported.\n* 172.18.0.1 - 172.18.0.253 -- for guest addresses (bridge to guest network).\n  They may be freely assigned by user. Simultaneous runs of vagga commands are\n  isolated, as well as running vagga in multiple projects in parallel.\n* 172.18.0.254 -- bridge ip address in\n\nThe bridge to guest network may be extended to 172.18.0.0 -- 172.18.127.255,\nor /17 network, if we find out that 254 hosts is not enough for everyone.\n\nWe also plan to allow to override host ip address in settings in case users\nhave that IP/network used by something.\n\n\nNetwork Utilities\n=================\n\nHost dependencies (used inside sudo):\n* iptables\n* ip (iproute2)\n* mount\n\nUsage for containers:\n* ip (iproute2) -- used from host, because busybox doesn't support \"veth\"\n* busybox brctl -- from busybox, so user don't need bridge-utils on host\n* iptables -- used from host system (no busybox support at all)\n\n(i.e. for this to work we setup network namespaces running in host system\nmount namespace)\n\n\nNetwork Split Emulation\n=======================\n\nInside container requires:\n\n* volume !VaggaBin -- so we may access ``vagga_partition`` without installing\n  vagga inside container (not that it's complex, but so that we don't need to\n  cope with version mismatches)\n* environ PATH=/vagga/bin/directory:... -- so script can run vagga_partition\n* iptables in PATH, needed by vagga_partition\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.62109375,
          "content": "=====\nVagga\n=====\n\n\nVagga is a fully-userspace container engine inspired by Vagrant_ and Docker_,\nspecialized for development environments.\n\nNote version 0.2 changed format of ``vagga.yaml`` see `Release Notes`_ and\nUpgrading_ for more info.\n\nMajor Features Are:\n\n* Running programs in linux containers (not a full virtualization like Vagrant)\n* Fully userspace containers, no need for elevated privileges like for Docker_\n* Runs containerized process as a child of current shell, no attach/detach hell\n* Images are automatically rebuilt and versioned\n* Vagga has tools to manage trees of processes (so you run your\n  redis-python-nginx server with one command)\n* Compatibility with `Vagrant-LXC` and Docker_\n\nMore deep `feature description in docs <http://vagga.readthedocs.org/en/latest/vagga_features.html>`_\n\nDisclaimer: This is *beta* quality software. But since it's only used for\ndevelopment environments it's safe to use for most projects. Some incompatible\nchanges in configuration file might be introduced until release of vagga 1.0,\nbut it will never affect your production servers.\n\nDocumentation_\n\n.. _vagrant: http://vagrantup.com\n.. _docker: http://docker.io\n.. _Documentation: http://vagga.readthedocs.org\n.. _Vagrant-LXC: https://github.com/fgrehm/vagrant-lxc\n.. _Release Notes: http://github.com/tailhook/vagga/blob/master/RELEASE_NOTES.rst\n.. _Upgrading: http://vagga.readthedocs.org/en/latest/upgrading.html\n\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/tailhook/vagga\n   :target: https://gitter.im/tailhook/vagga?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n"
        },
        {
          "name": "RELEASE_NOTES.rst",
          "type": "blob",
          "size": 19.091796875,
          "content": "=============\nRelease Notes\n=============\n\n\nVagga 0.8.2\n===========\n\n:Release Date: future\n\n* Vagga now resets O_NONBLOCK flag on stdout after each command during build\n  (because some programs, e.g. nodejs fail to do that)\n\n\nVagga 0.8.1\n===========\n\n:Release Date: 31.07.2018\n\n* ``vagga --version`` now works without ``vagga.yaml``\n* Add ``rules`` param to ``!Build`` similar to ``!Copy``\n* Add ``propagate-environ`` setting\n* Add ``group`` option for commands\n* Add ``aliases`` option for commands\n* Add ``default-shell`` container option\n* ``!AptTrust`` uses TLS for downloading keys by default\n* Add ``content-hash`` option for ``!Build``\n* Add ``vagga --containers-only`` which is useful to prepare all the containers\n  needed to run some command\n* Add ``vagga.local.yaml`` and similar implicit mixins used for overriding\n  things locally\n* Add ``pattern`` parameter to ``!GitDescribe`` command\n* Add ``isolate-network`` parameter for ``!Command`` and ``!CapsuleCommand``\n* Add ``vagga _hardlink`` and ``vagga _verify`` commands and\n  ``hard-link-between-project`` setting\n* Add ``vagga _capsule download`` and ``vagga _capsule script`` subcommands\n  to make writing capsule commands easier\n* Add ``ubuntu-skip-locking`` setting\n* Add ``versioned-build-dir`` setting\n* Bugfix: long symbolic links were truncated when unpacking tar\n* Bugfix: AptTrust was broken on ubuntu bionic\n* Note: Ubuntu precise is no longer supported, as well as old non-LTS releases,\n  they may work, but some features may work suboptimal or even incorrectly\n\n\nVagga 0.8.0\n===========\n\n:Release Date: 22.09.2017\n\n* **[breaking]** ``!Copy`` now resets file modification time to unixtime ``1``,\n  this improves reproducibility of containers\n* Added ``!YarnDependencies`` command (still a bit experimental)\n* Added ``!GitDescribe`` command\n* Added ``rules`` to ``!Copy`` command\n* Added ``sha256`` option to ``!Download`` buildd step\n* Added ``allow-pre-releases`` option to ``PipConfig``\n* Added ``disable-auto-clean`` setting (mostly useful for CI)\n* The ``/etc/resolv.conf`` and ``/etc/hosts`` are mounted into container\n  instead of copying/owerwriting (this is potentially a **breaking** issue)\n* Default alpine mirror is now ``dl-cdn.alpinelinux.org`` instead of random\n\n\nVagga 0.7.2\n===========\n\n:Release Date: 03.04.2017\n\n* Vagga now installs ``locales`` package on ubuntu where no ``locale-gen``\n  binary exists in original image\n* Disabled universe and multiverse repositories in new ubuntu xenial images\n  where they are enabled by default (this effectively reverts behavior of\n  package installation to how it was before 31.03.2017 and also consistent\n  with the all pre-xenial releases.\n* Implemented ``hard-link-identical-files`` setting (experimental)\n* Implemented ``storage-subdir-from-env-var`` setting (experimental), for use\n  in CI systems\n* Implemented ``vagga _clean --unused --global at-least=..`` (the ``--global``\n  suboption)\n\n\nVagga 0.7.1\n===========\n\n:Release Date: 22.03.2017\n\n* Added ``symlink-name`` parameter and ``vagga _update_symlinks``\n* Added experimental ``mixins`` setting\n* Implemented ``wait-all-successful`` supervision mode for letting multiple\n  commands finish successfully in parallel\n* Added long-awaited ``!CacheDir`` volume\n* Added some zsh completion\n* Added experimental ``!CapsuleCommand`` and ``vagga _capsule`` command family\n* Added ``vagga _base_dir`` and ``vagga _relative_work_dir`` commands for\n  easier script usage\n* Changed internal commands to ``vagga __cmd__``  of arg zero,\n  this allows symlinking vagga to different names\n* Added optional auto-indexing of all images (not useful for now)\n* Added lock on ``apt-get remove`` to remove race condition on parallel builds\n\n\nVagga 0.7.0\n===========\n\n:Release Date: 19.01.2017\n\n* Added support of custom command-line options with help for all kinds of\n  commands\n* Added ``!Persistent`` volumes (#204)\n* Added ``isolate-network`` option for commands and command-line option\n* Added ``isolate-network`` option for ``!RunAs`` build step\n* Py2/Py3Requirements now properly hashes files containing ``-r`` (basically\n  includes)\n* Added ``include-regex`` option for ``!Copy``\n* ``!Snapshot`` root now preserves ownership and permissions of\n  source directory\n* ``!Depends`` now supports directories and ``include-regex``, being on par\n  with ``!Copy`` command for features\n* Added ``expect-inotify-limit`` option\n* Fixed PHP integration commands for Ubuntu xenial and Alpine v3.4\n* Multiple ``vagga _clean`` can now be run in single directory without\n  issues (this is mostly useful in CI and scripts)\n* Added a warning when ``vagga.yml`` (not ``yaml``) is present\n* Fixes bug with wrong precedence of directories in ``PATH`` when running a\n  command using ``vagga _run``\n* Allow mounting files (not only dirs) as external volumes\n* Added ``files`` option to ``!Tmpfs`` volume\n* Added ``umask`` option to ``!Copy``\n* ``!Copy`` and ``!Depends`` no longer respect mode for generating hashes,\n  only executable bit is used\n* Allow to copy from different container when using ``!Snapshot`` volume\n* Added ``data-dirs`` option for container\n* Added ``AlpineRepo`` and ``Repo`` commands\n* Supports ``!*Include`` directive to compose multiple files\n* Fixed environment variable precedence (#326)\n* ``resolv.conf`` and ``hosts`` are propagated from host more reliably in\n  case of using subcontainers\n* Fixed ``external-user-id`` for ``!RunAs``\n* ``vagga _list -A`` now includes hidden commands as expected\n* ``ca-certificates`` are now added to ``BuildDeps`` whenever any build\n  tools are installed (by ``Py2Install``, ``NpmInstall`` and similar commands)\n* ``/run`` volume mounted by default has now mode ``0o755`` (had ``0o766`` by\n  a mistake)\n* Fixes bug with remounting to readonly on volumes that were previously\n  mounted with ``nosuid``, ``nodev`` or few other options\n* ``eatmydata`` is only enabled for ``!Install`` and ``!BuildDeps`` rather\n  than everything because it conflicts with some other ``LD_PRELOAD``ed\n  things (like faketime)\n* Added ``vagga _clean --volumes`` and ``vagga _clean --unused-volumes``\n* Implemented ``vagga _clean --everything`` (again after 0.2)\n* Upgraded embedded alpine tools (apk-tools 2.6.8, busybox 1.25.1)\n* Vagga does not output environment of a running command any more,\n  use ``VAGGA_DEBUG_CMDENV`` to show\n* Removed writing ``/tmp/vagga/hosts`` in ``!Supervise`` commands, it was\n  rarely useful and never documented\n\n\nVagga 0.6.1\n===========\n\n:Release Date: 14.06.2016\n\n* Blacklists some non-working alpine mirrors\n\n\nVagga 0.6.0\n===========\n\n:Release Date: 11.06.2016\n\n* vagga uses rust 1.9 and ubuntu xenial for building\n* Refactored internals to use traits for commands instead of large enum. This\n  makes adding more commands much easier.\n* Ubuntu images are now fetched from ``http://partner-images.ubuntu.com``\n  rather than ``http://cdimage.ubuntu.com``\n* vagga now uses single level of uid mappings and doesn't use the actual\n  mapping as part of container hash. This allows to use ``mount`` in container\n  more easily and also means we have reproducible containers hashes across\n  machines\n* ``!Copy``: fixed crash on absent directories, fix copying paths outside of\n  the ``/work``\n* Uses ``libmount`` for many mount operations (not all yet)\n* Added ``keep-composer`` and ``vendor-dir`` options to ``!ComposerSettings``\n* New command ``!Unzip`` similar to ``!Tar``\n* Implement (optional) checksum checking in ``!Tar`` and ``!TarInstall``\n* The ``minimum-vagga`` now works even when it doesn't know all the commands\n  in the config (still YAML syntax must be correct)\n* Add support for ``volumes`` in commands (not only in containers)\n* Vagga now uses ``tar-rs`` library for unpacking archives instead of busybox,\n  this may mean some features are new, and some archives could fail (please\n  report if you find one)\n* Add ``!Container`` volume type, which allows to mount other container as a\n  volume, mostly useful for deployment tools\n* Vagga now runs ``id -u -n`` for finding out username, previously was using\n  long names which aren't supported by some distributions (alpine == busybox)\n* Root user may now run vagga without ``/etc/subuid`` this makes container in\n  container scenario easier\n* Failed remount read-only is now a warning, this has two implications: you can\n  run vagga on tmpfs and in this case your root image is writable\n* Add ``vagga -m`` which allows to run multiple vagga commands in sequence\n* Add ``prerequsites`` option, which allows to run sequences of commands in\n  different containers\n* Add ``pass-tcp-port`` which allows to test systemd-like socket activation and\n  other scenarios that need passing tcp socket as file descriptor\n* Add ``image-cache-url`` option which allows to fetch cached image from\n  somewhere instead of building it locally\n* ``!Tar`` command now supports getting tar from ``/volumes/``\n* Add ``!RunAs`` command which allows to get rid of ``sudo`` and ``su`` in\n  build steps\n* Add ``--at-least`` option for ``vagga _clean --unused``\n* ``!Build`` command can copy file (previoulsy could only directory)\n* Add ``build-lock-wait`` setting to allow simultaneous builds of containers\n* Package lists from ``apt-get`` are now cached for each distribution and\n  doesn't fail on concurrent builds\n* Add ``--allow-multiple`` option to ``_init_storage_dir``\n* Commands with name starting with underscore are not listed in ``vagga``\n  and ``vagga _list`` by default (like built-in ones)\n* Ubuntu commands now use ``libeatmydata`` by default, which makes installing\n  packages about 3x faster\n* We remove ``/var/spool/rsyslog`` in ubuntu, this is only folder that makes\n  issues when rsyncing image because of permissions (it's not useful in\n  container anyway)\n* ``BuildDeps`` now don't try to ``apt-mark`` in subcontainer\n* Updated ``quire`` requires you need to write ``!*Unpack`` instead\n  of ``!Unpack``\n* Remove ``change-dir`` option from ``SubConfig`` that never worked and was\n  never documented\n\n\nVagga 0.5.0\n===========\n\n:Release Date: 03.04.2016\n\n* ``!Depends`` doesn't resolve symlinks but depends on the link itself\n* Pseudo-terminals in vagga containers now work\n* ``!Remove`` removes files when encountered (previously removed only when\n  container already built), also the command works with files (not only dirs)\n* Add ``!Shapshot`, ``!Empty``, ``!BindRO`` volume types\n* Add ``external-volumes`` setting, which allows to mount directories outside\n  of the project dir\n* Add ``minimum-vagga`` option, which hints user which version they should use\n* Implement  ``!Build``, ``!Download``, ``!Copy`` build steps\n* Add ``_init_storage_dir`` builtin command\n* Add ``vagga _clean --unused`` mode of operation which is superior\n  to ``--old``\n* Allow to customize python and nodejs versions for ``Py*`` and ``Npm*`` steps\n* Fix various bugs in networking implementation\n* Add shell autocomplete (bash included, zsh can be configured)\n* The ``.vagga/.mnt`` is now unmounted during build (fixes bugs with bad tools)\n* Improved SIGINT handling, now Ctrl+C in interactive processes such as\n  ``python`` (without arguments) works as expected\n* The signal messages (\"Received SIGINT...\") are now printed into stderr rather\n  than stdout (for ``!Supervise`` type of commands)\n* Killing vagga supervise with TERM mistakenly reported SIGINT on exit, fixed\n* Signal SIGQUIT is now correctly propagated\n* Add PHP/Composer support\n* Add Ruby/Bundler support\n* Add support for ``arch`` parameter in ``!UbuntuRelease`` this changes hash\n  sum of all containers built using ``!UbuntuRelease``\n* The stdin redirected from ``/dev/null`` and stdout is redirected to stderr\n  during the build\n* You can now filter commands in supervise by tags\n* Change gateway network from ``172.18.0.0/16`` to ``172.23.0.0/16``,\n  hopefully this will have less collisions\n* The ``TERM`` and ``*_proxy`` env vars are now propagated for supervise\n  commands in the same way as with normal commands (previously was absent)\n* Implemented shared image cache via ``_push_image`` command\n  and ``image-cache-url`` option\n\n\nVagga 0.4.1\n===========\n\n:Release Date: 03.11.2015\n\n* ``!Tar`` and ``!TarInstall`` commands now support unpacking local files (#81)\n* Container build process now locked, which avoid failure with cryptic error\n  message on simultaneous builds (#80)\n* Add ``_pack_image`` command\n* Upgrade rust to v1.4.0\n* Renamed and fixed ``vagga_network`` command as ``vagga _network`` subcommand\n* The pip cache is now namespaced over distro and version (was singleton)\n* Vagga now cleans apt lists cache on failed ``apt-get update`` (#108)\n* Add ``UbuntuPPA`` and ``AptTrust`` build steps\n\nVagga 0.4.0\n===========\n\n:Release Date: 11.10.2015\n\n* Vagga now uses \"unshare\" and \"signal\" crates for working with containers\n* Signal handling is changed:\n\n  * User visible changes: Ctrl+C doesn't sent twice to children (was\n    rarely noticeable), Ctrl+/ reliably kills vagga and children\n  * The only signal that is propagated by vagga to children is now SIGTERM\n  * SIGINT is never propagate to children by vagga itself (because it's usually\n    sent to process group anyway by Ctrl+C)\n  * Other signals like SIGQUIT (SIGHUP, SIGUSR1, ...), are not captured by\n    vagga, so they terminate vagga, resulting child processes are killed by OS\n    by the KILL signal).\n  * So if you want to send one of the signals except SIGTERM, send it to the\n    specific process not to vagga\n\n* Fix broken ``!Alpine``, which always installed latests known version of the\n  distribution instead specified\n* Add kill-unresponsive-after_ setting\n* In ubuntu guests by default `/usr/bin/chfn` is symlinked to `/bin/true`, this\n  prevents errors on some host systems (#52), this changes hash of the\n  ``!UbuntuRelease`` step\n* Fix ``--only`` and ``--exclude`` for supervision commands (was broken since\n  0.2.0)\n* Add ``--no-build`` and ``--no-version-check`` options\n* Fixed ``epilog`` option\n* Implement support of ``git+https`` and ``hg+https`` urls in python\n  requirements (#58)\n* Add support of `Py3Requirements`/`Py3Install` for alpine (v3.2 has python3)\n* Mount `/dev/shm` by default (needed for ubuntu host, fixes #32)\n* Implement forwarding proxy variables by default (#38)\n* Run ``!Sh`` scripts with ``-ex`` options (#72)\n* Implement ``subdirs`` key for ``!Tmpfs`` volume\n* Support tilde-expansion in ``storage-dir`` and ``cache-dir`` settings\n* The ``/etc/hosts`` file now copied inside the container at start (#39)\n\n.. _kill-unresponsive-after: http://vagga.readthedocs.org/en/latest/commands.html#opt-kill-unresponsive-after\n\n\nVagga 0.3.0\n===========\n\n:Release Date: 30.08.2015\n\n* !Tar command without subdir specified ignores invisible files and dirs\n  (ones starting with dot `.`) to determine subdir.\n* Vagga now list of packages and log of duration of each step at a container\n  folder (e.g. ``.vagga/container_name/../timings.log``)\n* Add ``!UbuntuRelease`` builder to build non-lts ubuntu\n* Add ``!Git`` and ``!GitInstall`` commands to install from git repository\n  (similar to ``!Tar`` and ``!TarInstall``)\n* Add ``user-id`` and ``external-user-id`` settings\n* Implement ``!SubConfig`` build step (very experimental)\n* Add ``trusted-hosts`` to ``!PipConfig``\n* Add ``timings.log`` and various package lists to the container metadata for\n  easier troubleshooting\n* Add ``BindRW`` subvolume type\n* No longer clean ``/var/lib/apt`` by default (better for reusing containers)\n\n\nVagga 0.2.5\n===========\n\n:Release Date: 03.03.2015\n\n* A quick bugfix release of NpmInstall command\n\n\nVagga 0.2.4\n===========\n\n:Release Date: 03.03.2015\n\n* Implement support of ``https`` links for Tar, TarInstall commands\n* The ``!Py*`` commands now download latest pip via `get-pip.py`_. This\n  effectively means (a) that new features (like checkout a git subdirectory)\n  works, (b) the version of pip is uniform across distributions and\n  (c) installing dependencies to not interfere with pip dependencies on ubuntu\n  (e.g. previously requests library where removed when removing build\n  dependencies)\n* Fix ``!CacheDirs`` command which was broken few versions ago\n* Add ``!Text`` command for easier writing files into container (e.g. configs)\n\n.. _get-pip.py: https://pip.pypa.io/en/latest/installing.html\n\n\nVagga 0.2.3\n===========\n\n:Release Date: 19.02.2015\n\n* Reasonable error message when not enough uids available (#7)\n* When running as root vagga now can use all available uids and doesn't require\n  subuid/subgid files setup, mostly useful for container-in-container\n  scenarios (#7)\n* The ``VAGGAENV_*`` environment vars will now be propagated to containers with\n  the prefix stripped\n* vagga now supports ``--env`` and ``--use-env`` command-line switch to set\n  envionment variable for child processes and to propagate a variable from\n  parent (i.e. user's) environment\n* Add ``!Container`` build command, which may be used to build on top of\n  another container\n* The ``vagga _run`` now works with relative commands\n* Experimantal ``auto-clean`` option for containers\n* Add ``node-legacy`` as dependency of ``!Npm`` for ubuntu (required for many\n  scripts)\n\n\nVagga 0.2.2\n===========\n\n:Release Date: 14.02.2015\n\n* Add ``_version_hash`` command, mostly for scripting\n* No need for tilde or null after ``!UbuntuUniverse`` (and probably other cases)\n* Fix permission of ubuntu ``policy-rc.d``, which fixes installing packages\n  having a daemon that start on install\n* Configure apt to always use ``--no-install-recommends`` in ubuntu\n* Add ``-W`` flag to ``_run`` command, to run writable (copy of) container\n* Ubuntu will automatically use nearest mirror and allow to customize mirror\n  in personal settings\n\n\nVagga 0.2.1\n===========\n\n:Release Date: 12.02.2015\n\nThis release fixes small issues appeared right after release and adds python\nrequirements.txt support.\n\n* ``make install`` did not install vagga's busybox, effectively making vagga\n  work only from source folder\n* Add Py2Requirements and Py3Requirements\n  `commands <http://vagga.readthedocs.org/en/latest/build_commands.html#pyreq>`_\n* Implement writing ``/etc/resolv.conf`` (previously worked only by the fact\n  that libc tries 127.0.0.1 when the file is empty)\n* Fix positional arguments for shell-wrapped commands\n\n\nVagga 0.2.0\n===========\n\n\n:Release Date: 11.02.2015\n\nThis is backwards-incompatible release of vagga. See Upgrading_. The need for\nchanges in configuration format is dictated by the following:\n\n* Better isolation of build process from host system\n* More flexible build steps (i.e. don't fall back to shell scripting for\n  everything beyond \"install this package\")\n* Caching for all downloads and packages systems (not only for OS-level\n  packages but also for packages installed by pip and npm)\n* Deep dependency tracking (in future version we will not only track\n  changes of dependencies in ``vagga.yaml`` but also in ``requirements.txt``\n  and ``package.json`` or whatever convention exists; it's partially possible\n  using Depends_ build step)\n\nMore features:\n\n* Built by Rust ``1.0.0-alpha``\n* Includes experimental network_ `testing tools`_\n\n\nThere are `some features missing`_, but we believe it doesn't\naffect a lot of users.\n\n\n.. _Upgrading: http://vagga.readthedocs.org/en/latest/upgrading.html\n.. _some features missing: http://vagga.readthedocs.org/en/latest/upgrading.html#missing-features\n.. _Depends: http://vagga.readthedocs.org/en/latest/build_commands.html#depends\n.. _network: http://vagga.readthedocs.org/en/latest/network.html\n.. _testing tools: https://medium.com/@paulcolomiets/evaluating-mesos-4a08f85473fb\n"
        },
        {
          "name": "bulk.yaml",
          "type": "blob",
          "size": 1.0751953125,
          "content": "minimum-bulk: v0.4.1\n\nmetadata:\n  name: vagga\n  short-description: A containerisation tool without daemons\n  long-description: |\n    A containerization tool specialized in setting up container depdedencies,\n    running development environments and being first-class CI citizen.\n\n\nversions:\n- file: Cargo.toml\n  block-start: ^\\[package\\]\n  block-end: ^\\[.*\\]\n  regex: ^version\\s*=\\s*\"(\\S+)\"\n\n- file: Cargo.lock\n  block-start: ^name\\s*=\\s*\"vagga\"\n  block-end: ^\\[.*\\]\n  regex: ^version\\s*=\\s*\"(\\S+)\"\n\n- file: docs/conf.py\n  regex: ^version\\s*=\\s*'(\\S+)'\n  partial-version: ^\\d+\\.\\d+\n\n- file: docs/conf.py\n  regex: ^release\\s*=\\s*'(\\S+)'\n\n- file: docs/installation.rst\n  regex: vagga-([\\d\\.ga-f-]+)\\.tar\\.xz\n\n\nrepositories:\n\n- kind: debian\n  suite: static\n  component: vagga\n  keep-releases: 1\n  match-version: ^\\d+\\.\\d+\\.\\d+$\n  add-empty-i386-repo: true\n\n- kind: debian\n  suite: static\n  component: vagga-stable\n  keep-releases: 1000\n  match-version: ^\\d+\\.\\d+\\.\\d+$\n  add-empty-i386-repo: true\n\n- kind: debian\n  suite: static\n  component: vagga-testing\n  keep-releases: 100\n  add-empty-i386-repo: true\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "description-pak",
          "type": "blob",
          "size": 0.0390625,
          "content": "A containerisation tool without daemons\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fetch_binaries.sh",
          "type": "blob",
          "size": 1.103515625,
          "content": "#!/bin/sh -ex\nALPINE_VERSION=v3.15\nALPINE_MIRROR=http://dl-cdn.alpinelinux.org/alpine/\nAPK_TOOLS=apk-tools-static-2.12.7-r3.apk\nBUSYBOX=busybox-static-1.34.1-r3.apk\nALPINE_KEYS=alpine-keys-2.4-r1.apk\n\nARCH=${1:-x86_64}\n\nSHA1SUMS_x86_64=\"\\\n2fa49548020eb850e0a15df03471a07eba55fbc8  $APK_TOOLS\n83a302a36b2239669130d459b14619d066d37f22  $BUSYBOX\n7dba809ae84d5832473f9cbf3bc6522d341299ca  $ALPINE_KEYS\"\n\nSHA1SUMS_armhf=\"\\\n49fd9c34731593f5753fbc100dbb344e3f22cf47  $APK_TOOLS\n06bd6d50070251de09f34dd37ebbeb17aa014db8  $BUSYBOX\n1c45ddb6ae0a0aee7793505cce4fcee0d82c7ac1  $ALPINE_KEYS\"\n\nFETCH_DIR=\"alpine/\"$ARCH\nmkdir -p \"$FETCH_DIR\" 2>/dev/null || true\ncd \"$FETCH_DIR\"\n\nfor pkg in $APK_TOOLS $BUSYBOX $ALPINE_KEYS; do\n    wget --no-use-server-timestamp ${ALPINE_MIRROR}${ALPINE_VERSION}/main/$ARCH/$pkg -O $pkg\ndone\n\nsha1sum $APK_TOOLS\nsha1sum $BUSYBOX\nsha1sum $ALPINE_KEYS\nSUMS=\"SHA1SUMS_$ARCH\"\neval \"SUMS=\\$$SUMS\"\necho \"$SUMS\" | sha1sum -c -\n\ncd ../..\n\ntar -xOf \"$FETCH_DIR/$APK_TOOLS\" sbin/apk.static > apk\ntar -xOf \"$FETCH_DIR/$BUSYBOX\" bin/busybox.static > busybox\ncp \"$FETCH_DIR/$ALPINE_KEYS\" alpine-keys.apk\n\nchmod +x apk busybox\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.701171875,
          "content": "#!/bin/sh\nDESTDIR=${DESTDIR:-}\nPREFIX=${PREFIX:-/usr}\n\ninstall -d ${DESTDIR}/etc/bash_completion.d\ninstall -d ${DESTDIR}${PREFIX}/share/zsh/site-functions\ninstall -d ${DESTDIR}${PREFIX}/bin\ninstall -d ${DESTDIR}${PREFIX}/lib/vagga\ninstall -m 644 completions/bash-completion.sh ${DESTDIR}/etc/bash_completion.d/vagga\ninstall -m 644 completions/zsh-completion.sh ${DESTDIR}${PREFIX}/share/zsh/site-functions/_vagga\ninstall -m 755 vagga ${DESTDIR}${PREFIX}/lib/vagga/vagga\ninstall -m 755 apk ${DESTDIR}${PREFIX}/lib/vagga/apk\ninstall -m 755 busybox ${DESTDIR}${PREFIX}/lib/vagga/busybox\ninstall -m 755 alpine-keys.apk ${DESTDIR}${PREFIX}/lib/vagga/alpine-keys.apk\nln -snf ../lib/vagga/vagga ${DESTDIR}${PREFIX}/bin/vagga\n"
        },
        {
          "name": "path_filter",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vagga.yaml",
          "type": "blob",
          "size": 6.888671875,
          "content": "containers:\n\n  docs:\n    setup:\n    - !Alpine v3.8\n    - !Repo community\n    - !Install [alpine-base, py2-sphinx, make]\n    - !Py2Requirements docs/requirements.txt\n\n  rust-musl:\n    environ: &rustenv\n      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib\n      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin\n    setup:\n    - !Ubuntu focal\n    - !UbuntuUniverse\n    - !Install [build-essential, ca-certificates, cmake, zlib1g-dev]\n    - !Install [file]  # dependency of checkinstall (bug #46)\n\n    - !TarInstall\n      url: \"https://static.rust-lang.org/dist/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz\"\n      script: \"./install.sh --prefix=/usr --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo\"\n    - !TarInstall\n      url: \"https://static.rust-lang.org/dist/rust-std-1.57.0-x86_64-unknown-linux-musl.tar.gz\"\n      script: \"./install.sh --prefix=/musl \\\n               --components=rust-std-x86_64-unknown-linux-musl\"\n    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'\n    - !Install [musl-tools]\n    - !TarInstall\n      url: \"https://static.rust-lang.org/dist/rust-std-1.57.0-wasm32-unknown-unknown.tar.gz\"\n      script: \"./install.sh --prefix=/usr --components=rust-std-wasm32-unknown-unknown\"\n    - &bulk !Tar\n      url: \"https://github.com/tailhook/bulk/releases/download/v0.4.9/bulk-v0.4.9.tar.gz\"\n      sha256: 23471a9986274bb4b7098c03e2eb7e1204171869b72c45385fcee1c64db2d111\n      path: /\n    - !EnsureDir /root/.cargo\n\n    # For packaging\n    - !Install [make, checkinstall, git, uidmap, wget, gcc, libc6-dev, ca-certificates]\n    volumes:\n      /root/.cargo: !CacheDir cargo\n\n  musleabihf:\n    setup:\n    - !Ubuntu focal\n    - !UbuntuUniverse\n    - !Text\n      /etc/apt/sources.list.d/arm.list: |\n        deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports focal universe\n    - !Install\n      - build-essential\n      - git\n      - ca-certificates\n      - cmake\n      - zlib1g-dev\n      - gcc-arm-linux-gnueabihf\n      - g++-arm-linux-gnueabihf\n    - !Sh dpkg --add-architecture armhf\n    - !Install [musl-dev:armhf]\n    - !TarInstall\n      url: \"https://static.rust-lang.org/dist/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz\"\n      script: \"./install.sh --prefix=/usr --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo\"\n    - !TarInstall\n      url: \"https://static.rust-lang.org/dist/rust-std-1.57.0-arm-unknown-linux-musleabihf.tar.gz\"\n      script: \"./install.sh --prefix=/usr \\\n               --components=rust-std-arm-unknown-linux-musleabihf\"\n    - !EnsureDir /root/.cargo\n    volumes:\n      /root/.cargo: !CacheDir cargo\n\n  testbase:\n    setup:\n    - !Ubuntu focal\n    - !UbuntuUniverse\n    - !BuildDeps [wget]\n    - !Install [make, curl, zip, file, git, ca-certificates, parallel]\n    - !Sh |\n        set -ex\n        cd /tmp\n        git clone --depth=1 https://github.com/bats-core/bats-core\n        git clone --depth=1 https://github.com/bats-core/bats-support /bats/bats-support\n        git clone --depth=1 https://github.com/bats-core/bats-assert /bats/bats-assert\n        cd bats-core\n        ./install.sh /usr\n\n  test:\n    setup:\n    - !Container testbase\n    - !Depends vagga\n    - !Depends apk\n    - !Depends busybox\n    - !Depends alpine-keys.apk\n    - !Sh make install\n    auto-clean: true\n\ncommands:\n\n  print-env: !Command\n    container: docs\n    run: [env]\n\n  doc: !Command\n    description: Build vagga documentation\n    container: docs\n    run: [make, html]\n    work-dir: docs\n    epilog: |\n      --------------------------------------------------------\n        xdg-open docs/_build/html/index.html\n\n  make: !Command\n    description: Build vagga\n    container: rust-musl\n    run: [make]\n\n  make-no-containers: !Command\n    description: Build no-containers build of vagga\n    container: rust-musl\n    environ:\n      VAGGA_VERSION: v0.0.0-dev\n    run: |\n      set -ex\n      cargo build --target=x86_64-unknown-linux-musl \\\n        --no-default-features --features=config_runner\n      cp --remove-destination target/x86_64-unknown-linux-musl/debug/vagga \\\n         ./vagga-no-containers\n\n  make-release: !Command\n    description: Build vagga with optimizations\n    container: rust-musl\n    run: [make, release]\n\n  make-test: !Command\n    description: Build vagga for tests\n    container: rust-musl\n    run: [make, build-test]\n\n  make-arm: !Command\n    description: Cross-compile vagga for arm\n    container: musleabihf\n    environ:\n      CFLAGS: -I/usr/include/arm-linux-musleabihf\n      CC: arm-linux-gnueabihf-gcc\n    run: |\n      export VAGGA_VERSION=$(git describe)\n      exec cargo rustc --target=arm-unknown-linux-musleabihf -- -C linker=\"arm-linux-gnueabihf-gcc\"\n\n  cargo: !Command\n    description: Run arbitrary cargo command\n    container: rust-musl\n    symlink-name: cargo\n    environ:\n      VAGGA_VERSION: v0.0.0-test\n      RUST_BACKTRACE: 1\n    run: [cargo]\n\n  test-internal: !Command\n    description: Run rust tests of vagga\n    container: rust-musl\n    environ:\n      VAGGA_VERSION: v0.0.0-test\n      RUST_BACKTRACE: 1\n    run: [cargo, test]\n\n  build-packages: !Command\n    description: Create an ubuntu (.deb) package using checkinstall in\n      container and tar.gz. Both put into `dist/`\n    container: rust-musl\n    write-mode: transient-hard-link-copy\n    environ:\n      PATH: /musl/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin\n    run: |\n      set -ex\n      rm target/x86_64-unknown-linux-musl/release/vagga || true # force rebuild\n      make release\n      make ubuntu-package CHECKINSTALL_FLAGS=--strip=no\n      make tarball\n\n  build-packages-testing: !Command\n    description: Same as build-packages but with debugging info enabled\n    container: rust-musl\n    write-mode: transient-hard-link-copy\n    environ:\n      PATH: /musl/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin\n    run: |\n      set -ex\n      rm target/x86_64-unknown-linux-musl/debug/vagga || true # force rebuild\n      make all\n      make ubuntu-package CHECKINSTALL_FLAGS=--strip=no\n      make tarball\n\n  _package: !Command\n    description: Create a new kind of package with bulk\n    container: rust-musl\n    run: |\n      set -ex\n      version=\"$(git describe --dirty)\"\n      rm -rf dist/pkg\n      rm target/x86_64-unknown-linux-musl/release/vagga || true # force rebuild\n      bulk with-version $version \\\n        make release\n      DESTDIR=dist/pkg ./install.sh\n      bulk with-version $version \\\n        bulk pack --dir dist/pkg\n\n  test: !Command\n    description: Run self tests\n    container: test\n    accepts-arguments: true\n    run: |\n      set -ex\n      rm -rf tests/*/.vagga\n      export HOME=/work/tmp/home\n      mkdir -p $HOME /work/tmp/cache || true\n      export VAGGA_SETTINGS=\"\n        build-lock-wait: true\n        cache-dir: /work/tmp/cache\n        ubuntu-mirror: $UBUNTU_MIRROR\n        alpine-mirror: $ALPINE_MIRROR\"\n      if [ -n \"$*\" ]; then\n        bats \"$@\"\n      else\n        bats tests\n      fi\n\n  _bulk: !Command\n    description: Run any bulk command\n    container: rust-musl\n    run: [bulk]\n"
        }
      ]
    }
  ]
}