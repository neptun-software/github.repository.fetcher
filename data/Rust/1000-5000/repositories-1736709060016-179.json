{
  "metadata": {
    "timestamp": 1736709060016,
    "page": 179,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Rust-GPU/Rust-CUDA",
      "stars": 3238,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0341796875,
          "content": "book\n/target\nCargo.lock\n**/.vscode\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.03515625,
          "content": "# cudnn crate\n/crates/cudnn/ @frjnn\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.3291015625,
          "content": "[workspace]\nmembers = [\n  \"crates/*\",\n  \"crates/optix/examples/ex*\",\n  \"crates/optix/examples/ex*/device\",\n  \"crates/optix/examples/rust/ex*\",\n\n  \"xtask\",\n\n  \"examples/optix/*\",\n  \"examples/cuda/cpu/*\",\n  \"examples/cuda/gpu/*\",\n\n]\n\nexclude = [\n    \"crates/optix/examples/common\"\n]\n\n[profile.dev.package.rustc_codegen_nvvm]\nopt-level = 3\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.123046875,
          "content": "FROM nvidia/cuda:11.4.1-cudnn8-devel-ubuntu18.04\n\n# Update default packages\nRUN apt-get update\n\n# Get Ubuntu packages\nRUN apt-get install -y \\\n    build-essential \\\n    curl xz-utils pkg-config libssl-dev zlib1g-dev libtinfo-dev libxml2-dev\n\n# Update new packages\nRUN apt-get update\n\n# Get Rust\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\n\n\n# get prebuilt llvm\nRUN curl -O https://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz &&\\\n    xz -d /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz &&\\\n    tar xf /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar &&\\\n    rm /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar &&\\\n    mv /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04 /root/llvm\n\n# set env\nENV LLVM_CONFIG=/root/llvm/bin/llvm-config\nENV CUDA_ROOT=/usr/local/cuda\nENV CUDA_PATH=$CUDA_ROOT\nENV LLVM_LINK_STATIC=1\nENV RUST_LOG=info\nENV PATH=$CUDA_ROOT/nvvm/lib64:/root/.cargo/bin:$PATH\n\n# make ld aware of necessary *.so libraries\nRUN echo $CUDA_ROOT/lib64 >> /etc/ld.so.conf &&\\\n    echo $CUDA_ROOT/compat >> /etc/ld.so.conf &&\\\n    echo $CUDA_ROOT/nvvm/lib64 >> /etc/ld.so.conf &&\\\n    ldconfig\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5869140625,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2021 Riccardo D'Ambrosio\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0595703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2021 Riccardo D'Ambrosio\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.49609375,
          "content": "<div align=\"center\">\n  <h1>The Rust CUDA Project</h1>\n\n  <p>\n    <strong>An ecosystem of libraries and tools for writing and executing extremely fast GPU code fully in \n    <a href=\"https://www.rust-lang.org/\">Rust</a></strong>\n  </p>\n\n  <h3>\n    <a href=\"guide\">Guide</a>\n    <span> | </span>\n    <a href=\"guide/src/guide/getting_started.md\">Getting Started</a>\n    <span> | </span>\n    <a href=\"guide/src/features.md\">Features</a>\n  </h3>\n<strong>⚠️ The project is still in early development, expect bugs, safety issues, and things that don't work ⚠️</strong>\n</div>\n\n## Goal\n\nThe Rust CUDA Project is a project aimed at making Rust a tier-1 language for extremely fast GPU computing\nusing the CUDA Toolkit. It provides tools for compiling Rust to extremely fast PTX code as well as libraries\nfor using existing CUDA libraries with it.\n\n## Background\n\nHistorically, general purpose high performance GPU computing has been done using the CUDA toolkit. The CUDA toolkit primarily\nprovides a way to use Fortran/C/C++ code for GPU computing in tandem with CPU code with a single source. It also provides\nmany libraries, tools, forums, and documentation to supplement the single-source CPU/GPU code.\n\nCUDA is exclusively an NVIDIA-only toolkit. Many tools have been proposed for cross-platform GPU computing such as \nOpenCL, Vulkan Computing, and HIP. However, CUDA remains the most used toolkit for such tasks by far. This is why it is\nimperative to make Rust a viable option for use with the CUDA toolkit.\n\nHowever, CUDA with Rust has been a historically very rocky road. The only viable option until now has been to use the LLVM PTX\nbackend, however, the LLVM PTX backend does not always work and would generate invalid PTX for many common Rust operations, and\nin recent years it has been shown time and time again that a specialized solution is needed for Rust on the GPU with the advent\nof projects such as rust-gpu (for Rust -> SPIR-V).\n\nOur hope is that with this project we can push the Rust GPU computing industry forward and make Rust an excellent language\nfor such tasks. Rust offers plenty of benefits such as `__restrict__` performance benefits for every kernel, An excellent module/crate system, \ndelimiting of unsafe areas of CPU/GPU code with `unsafe`, high level wrappers to low level CUDA libraries, etc.\n\n## Structure\n\nThe scope of the Rust CUDA Project is quite broad, it spans the entirety of the CUDA ecosystem, with libraries and tools to make it \nusable using Rust. Therefore, the project contains many crates for all corners of the CUDA ecosystem.\n\nThe current line-up of libraries is the following:\n\n- `rustc_codegen_nvvm` Which is a rustc backend that targets NVVM IR (a subset of LLVM IR) for the [libnvvm](https://docs.nvidia.com/cuda/nvvm-ir-spec/index.html) library.\n  - Generates highly optimized PTX code which can be loaded by the CUDA Driver API to execute on the GPU.\n  - For the near future it will be CUDA-only, but it may be used to target amdgpu in the future.\n- `cuda_std` for GPU-side functions and utilities, such as thread index queries, memory allocation, warp intrinsics, etc.\n  - *Not* a low level library, provides many utility functions to make it easier to write cleaner and more reliable GPU kernels.\n  - Closely tied to `rustc_codegen_nvvm` which exposes GPU features through it internally.\n- [`cudnn`](https://github.com/Rust-GPU/Rust-CUDA/tree/master/crates/cudnn) for a collection of GPU-accelerated primitives for deep neural networks.\n- `cust` for CPU-side CUDA features such as launching GPU kernels, GPU memory allocation, device queries, etc.\n  - High level with features such as RAII and Rust Results that make it easier and cleaner to manage the interface to the GPU.\n  - A high level wrapper for the CUDA Driver API, the lower level version of the more common CUDA Runtime API used from C++.\n  - Provides much more fine grained control over things like kernel concurrency and module loading than the C++ Runtime API.\n- `gpu_rand` for GPU-friendly random number generation, currently only implements xoroshiro RNGs from `rand_xoshiro`.\n- `optix` for CPU-side hardware raytracing and denoising using the CUDA OptiX library.\n\nIn addition to many \"glue\" crates for things such as high level wrappers for certain smaller CUDA libraries.\n\n## Related Projects\n\nOther projects related to using Rust on the GPU:\n- 2016: [glassful](https://github.com/kmcallister/glassful) Subset of Rust that compiles to GLSL.\n- 2017: [inspirv-rust](https://github.com/msiglreith/inspirv-rust) Experimental Rust MIR -> SPIR-V Compiler.\n- 2018: [nvptx](https://github.com/japaric-archived/nvptx) Rust to PTX compiler using the `nvptx` target for rustc (using the LLVM PTX backend).\n- 2020: [accel](https://github.com/termoshtt/accel) Higher level library that relied on the same mechanism that `nvptx` does.\n- 2020: [rlsl](https://github.com/MaikKlein/rlsl) Experimental Rust -> SPIR-V compiler (predecessor to rust-gpu)\n- 2020: [rust-gpu](https://github.com/EmbarkStudios/rust-gpu) Rustc codegen backend to compile Rust to SPIR-V for use in shaders, similar mechanism as our project.\n\n## License\n\nLicensed under either of\n\n- Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n- MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your discretion.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "guide",
          "type": "tree",
          "content": null
        },
        {
          "name": "katex-header.html",
          "type": "blob",
          "size": 1.0234375,
          "content": "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.css\"\n    integrity=\"sha384-9eLZqc9ds8eNjO3TmqPeYcDj8n+Qfa4nuSiGYa6DjLNcv9BtN69ZIulL9+8CqC9Y\" crossorigin=\"anonymous\">\n<script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.js\"\n    integrity=\"sha384-K3vbOmF2BtaVai+Qk37uypf7VrgBubhQreNQe9aGsz9lB63dIFiQVlJbr92dw2Lx\"\n    crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/contrib/auto-render.min.js\"\n    integrity=\"sha384-kmZOZB5ObwgQnS/DuDg6TScgOiWWBiVt0plIRkZCmE6rDZGrEOQeHM5PcHi+nyqe\"\n    crossorigin=\"anonymous\"></script>\n<script>\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        renderMathInElement(document.body, {\n            delimiters: [\n                { left: \"$$\", right: \"$$\", display: true },\n                { left: \"\\\\(\", right: \"\\\\)\", display: false },\n                { left: \"$\", right: \"$\", display: false },\n                { left: \"\\\\[\", right: \"\\\\]\", display: true }\n            ]\n        });\n    });\n</script>"
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.408203125,
          "content": "# If you see this, run `rustup self update` to get rustup 1.23 or newer.\n\n# NOTE: above comment is for older `rustup` (before TOML support was added),\n# which will treat the first line as the toolchain name, and therefore show it\n# to the user in the error, instead of \"error: invalid channel name '[toolchain]'\".\n\n[toolchain]\nchannel = \"nightly-2021-12-04\"\ncomponents = [\"rust-src\", \"rustc-dev\", \"llvm-tools-preview\"]"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}