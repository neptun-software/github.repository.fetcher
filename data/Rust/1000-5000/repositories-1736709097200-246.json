{
  "metadata": {
    "timestamp": 1736709097200,
    "page": 246,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stepancheg/rust-protobuf",
      "stars": 2839,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1796875,
          "content": "[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\nindent_size = 4\n\n[protoc-bin-vendored/bin/*]\nend_of_line =\ncharset =\nindent_style =\nindent_size =\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": "*.dSYM\n*~\n.*.swp\n.gdb_history\ntmp*\n*.dylib\n*.rlib\n*.bin\n*.so\nsrc/test/v*/pb_*.rs\nsrc/test/v*/*_pb.rs\nsrc/test/lib\nprotobuf-bin-gen-rust\nprotoc-gen-rs\ntarget/\nCargo.lock\n.idea\n*.iml\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.068359375,
          "content": "group_imports       = \"StdExternalCrate\"\nimports_granularity = \"Item\"\n"
        },
        {
          "name": "BUGREPORTING.md",
          "type": "blob",
          "size": 0.5166015625,
          "content": "# How to report bugs\n\nWhen you report a bug, please always specify:\n\n* which version of protobuf library do you use\n* which of three ways to generate source code do you use\n* which operating system you are on\n* if you use some features, please specify these features\n* if the generated code is incorrect, please provide both `.proto` input and generated output\n  and codegen options if you have specified any.\n\nIdeally, please create a small github project, which can be used to reproduce a problem with single command.\n\nThanks!\n"
        },
        {
          "name": "CHANGELOG-before-3.md",
          "type": "blob",
          "size": 23.9013671875,
          "content": "# Changelog\n\nChangelog after version 3.0.0 lives in [CHANGELOG.md](CHANGELOG.md).\n\n## [3.0.0] - 2022-05-01\n\n* New stable version released.\n\n## [3.0.0-alpha.14] - 2022-05-01\n\n* JSON support is moved into a separate crate `protobuf-json-mapping`\n* Generated code for well known types is more similar to regular protobuf now\n  (well known type modules are now placed as is in `well_known_types` module instead of being flattened).\n* `file_descriptor_proto()` function is private now in generated code.\n  Descriptor can be obtained by calling `file_descriptor().proto()`.\n* `file_descriptor()` now returns `&'static FileDescriptor`\n* Hide `UnknownValues` from public API (keep `UnknownFields`)\n\n## [3.0.0-alpha.13] - 2022-05-01\n\n* More efficient reflective operations\n* Fewer internals exposed from public API (e.g. `ProtobufType` is no longer public)\n\n## [3.0.0-alpha.12] - 2022-04-30\n\n* keywords are now [escaped with `_` suffix](https://github.com/stepancheg/rust-protobuf/issues/618)\n* generate trivial `is_initialized` functions when possible\n\n## [3.0.0-alpha.11] - 2022-04-29\n\n* all fields are public now in generated messages\n* `protobuf-support` crate added. This crate contains utilities shared by other protobuf crates.\n  This crate has no public API.\n\n## [3.0.0-alpha.10] - 2022-04-11\n\n* remove `expose_oneof` codegen option (it is on by default for a long time)\n* remove unused serde-related options from `rustproto.proto`\n* in generated code, enum variant names are converted to camel case\n* generate `SpecialFields` field in messages instead of a pair (`unknown_fields`, `cached_size`)\n* reflection operations like `nested_messages` now return iterator instead of `Vec`\n* replace `fn Enum::values()` with `const Enum::VALUES`\n* remove `EnumFull::enum_descriptor()`, does not provide much value over `enum_descriptor_static`\n* rename `EnumFull::enum_descriptor_static` -> `enum_descriptor`\n* fix `EnumFull::descriptor` for enums with `allow_alias`\n* rename `MessageDescriptor::enums` to `nested_enums`\n* rename `MessageDescriptor::descriptor_static` to `descriptor`\n* add `EnumDescriptor::enclosing_message()`\n* `Message` now requires `PartialEq`\n\n## [3.0.0-alpha.9] - 2022-04-04\n\n- Unimplement `DerefMut` for `MessageField`: `DerefMut` which modifies the object state is too dangerous.\n  `Deref` is kept though. `Deref` returns an empty instance if field is not set.\n- Added `Message::clear`, removed trait `Clear`\n- `Lazy` (which is used in generated code) is now implemented with `once_cell` crate.\n- protobuf 3 experimental `optional` fields are implemented\n\n## [3.0.0-alpha.8] - 2022-02-21\n\n- Lite runtime generation is restored. When lite runtime requested, code is generated without reflection support.\n- `lite` option can be specified when using `protoc-gen-rust` plugin similarly to how\n  [C++ or Java do](https://github.com/protocolbuffers/protobuf/issues/6489).\n\n## [3.0.0-alpha.7] - 2022-02-20\n\n- Getters are now generated without `get_` prefix. `get_` prefix also removed from public API functions.\n- Reflection API now supports `ServiceDescriptor`. Which can be used to generate code for gRPC for example.\n- Message size computation uses u64 now. It is explicit error now on attempt to serialize a message larger than 2GiB.\n- Binary message parsing now switches by tag, not by field name. It is faster.\n\n## [3.0.0-alpha.6] - 2022-02-08\n\n- [Fixed invalid aliasing and uninitialized memory access](https://github.com/stepancheg/rust-protobuf/pull/592)\n- `MessageField` now implements `Deref` and `DerefMut`\n- Slightly more compact generated code\n- serde is no longer supported natively. See explanations [in the issue](https://github.com/stepancheg/rust-protobuf/issues/519).\n- Rename `ProtobufError` to `Error` and make it opaque type. Rename `ProtobufResult` to `Result`.\n- Rename `ProtobufEnum` to `Enum` and `ProtobufEnumOrUnknown` to `EnumOrUnknown`\n- `gen_mod_rs` option is `true` by default now: code generator now generates `mod.rs` with modules\n- `carllerche` options renamed to `tokio` (since `bytes` crate now lives in `tokio` org)\n- `protobuf-parse` API cleanup (API used to parse `.proto` files, not protocol buffers data files)\n- Remove `protoc` crate, most of it is incorprotated into `protobuf-parse` crate, and the rest is not very useful\n- Generated enums for `oneof` are marked `#[non_exhaustive]`\n\n## [3.0.0-alpha.5] - 2022-02-02\n\n- Dynamic messages work (but not tested enough)\n\n## [3.0.0-alpha.4] - 2022-02-02\n\n- `Display` for message now outputs text format, and `Debug` for message does standard rust `#[derive(Debug)]`.\n- Smaller generated code (common code snippets extracted into the library runtime)\n- Improvements in dynamic messages\n\n## [3.0.0-alpha.3] - 2022-02-01\n\n- Remove `protobuf-codegen-pure` and `protoc-rust` crates. Now all codegen\n  (pure or with `protoc` is done using `protobuf-codegen` crate).\n- `LazyV2` (internal utility for rust-protobuf) now implements `Drop`.\n- Default `.proto` parser in `protobuf-codegen` is now pure-rust (not using `protoc` command)\n- Dynamic messages mostly work\n\n## [3.0.0-alpha.2] - 2021-11-01\n\n- Use `always_output_default_values` option\n  [to output empty array for repeated fields when serializing to JSON](https://github.com/stepancheg/rust-protobuf/pull/550)\n- Switch error handling to `thiserror` and `anyhow` crates\n- `.proto` file parsing now lives in a separate crate `protobuf-parse`\n\n## [3.0.0-alpha.1] - 2021-10-24\n\n### Backward compatibility\n\nVersion 3.0 is backward incompatible with 2.0 version. Changes are listed here:\n\n- Enum fields are now\n  [generated as `ProtobufEnumOrUnknown<E>`](https://github.com/stepancheg/rust-protobuf/issues/233)\n- Nested messages are now\n  [generated in nested mods](https://github.com/stepancheg/rust-protobuf/commit/da2e25dc6c20efcea3893c78e587b43b89da9528)\n- Getters are no longer generated for public fields\n- Field accessors (getters and setters) are not generated by default for public fields\n- [Remove global `parse_length_delimited*`\n  functions](https://github.com/stepancheg/rust-protobuf/commit/91c0875e909cdc0648256f0c45cd4a9ade1e4fa0)\n- `PartialEq` with large number of fields\n  [now panics](https://github.com/stepancheg/rust-protobuf/commit/4f1ca564a00e85b6e3821e91aace71ccb6592bf5).\n  Previosly it could cause stack overflow in the Rust compiler.\n- [Change `message_down_cast*` functions\n  signatures](https://github.com/stepancheg/rust-protobuf/commit/a05a4216fc3305c67b7a2d19011be3bd503d5166)\n- [Remove `descriptorx` from `protobuf`\n  crate](https://github.com/stepancheg/rust-protobuf/commit/4e8896645c3e017ac91f529cb69ce76b002f6fc1)\n\n### New features\n\n- [Option to store repeated message fields in `Vec` instead of `RepeatedField`](\n  https://github.com/stepancheg/rust-protobuf/issues/280). This option may be turned on by default later.\n- Similarly, [option to store singular field on `Option` instead of `SingularPtrField`](\n  https://github.com/stepancheg/rust-protobuf/issues/300), which also may be turned on by default later.\n- `generate_getter` option to disable generation of getters functions.\n- [Flush `CodedOutputStream` on `drop`](https://github.com/stepancheg/rust-protobuf/commit/0e9cc5964c2731a771725bcf70125d3eb1c273b3)\n\n\n## [2.27] - Unreleased\n\n## [2.28.0] - 2022-09-26\n\n- [backport optional fields from version 3](https://github.com/stepancheg/rust-protobuf/pull/649)\n- `protoc-bin-vendored` now lives in a [separate repository](https://github.com/stepancheg/rust-protoc-bin-vendored)\n\n## [2.27.1] - 2022-02-05\n\n- Min rust version bumped back to 1.52.1\n\n## [2.27.0] - 2022-02-03\n\n- Bump min rust version to 1.55.0\n- [Fixed invalid aliasing and uninitialized memory access](https://github.com/stepancheg/rust-protobuf/pull/592)\n\n## [2.26.1] - 2022-02-01\n\n- Documentation\n\n## [2.26.0] - 2020-01-31\n\n- Min supported Rust version is 1.52.1.\n- [Fix `SingularField::unwrap_or_default`](https://github.com/stepancheg/rust-protobuf/issues/572)\n- [`serde_rename_all` codegen option](https://github.com/stepancheg/rust-protobuf/pull/586)\n\n\n## [2.25.2] - 2021-10-24\n\n- [don't panic on short buffer](https://github.com/stepancheg/rust-protobuf/pull/571)\n\n## [2.25.1] - 2021-08-21\n\n- [Allow leading zeros in float literals exponent](https://github.com/stepancheg/rust-protobuf/pull/565)\n\n## [2.25.0] - 2021-08-08\n\n- [Implement `Extend` and more `PartialEq` for `RepeatedField`](https://github.com/stepancheg/rust-protobuf/issues/561)\n- [Make code generation deterministic](https://github.com/stepancheg/rust-protobuf/issues/562)\n\n## [2.24.2] - 2021-08-08\n\n- [Fix reflective enum access](https://github.com/stepancheg/rust-protobuf/issues/564)\n\n## [2.24.1] - 2021-06-11\n\n- [Stopgap support for Apple M1 for protoc-bin-vendored](https://github.com/stepancheg/rust-protobuf/pull/556)\n\n## [2.24.0] - 2021-06-11\n\n- Accidentally published version roughtly equivalent to 2.23.0\n\n## [2.23.0] - 2021-04-24\n\n- Update bundled `protoc` version to 3.15.8\n\n## [2.22.1] - 2021-03-18\n\n- Work around [some breaking changes in Rust nightly](https://github.com/stepancheg/rust-protobuf/issues/551)\n\n## [2.22.0] - 2021-02-06\n\n- Slightly better prefix stripping algorithm in pure rust codegen: \".\" is now considered to be a prefix for \"foo/bar.proto\".\n  (Probably Rust stdlib should do that out of the box)\n- Update bundled version of `protoc` to version 3.14.0\n- `protoc-bin-vendored` now includes `google/**.proto` files, so `import \"google/protobuf/Timestamp.proto\"`\n  should work with this crate without relying on external files\n\n## [2.21.0] - 2021-02-06\n\n- [Use fully qualified crate name in serde derives](https://github.com/stepancheg/rust-protobuf/pull/545)\n\n## [2.20.0] - 2021-01-06\n\n- update `bytes` crate dependency version from 0.6 to 1.0\n\n## [2.19.0] - 2021-01-05\n\n- Add `UnknownFields::remove`\n- Fix several inconsistencies between `protoc` parser and pure rust parser\n- `protobuf::parse_from*` functions are deprecated, use `protobuf::Message::parse_from*` instead\n- impl `IntoIterator` for `&mut RepeatedField<T>` and for `RepeatedField<T>`\n- update `bytes` crate dependency version from 0.5 to 0.6\n\n## [2.18.2] - 2021-03-28\n\n- Backport `rust::skip` workaround from 2.22.1\n\n## [2.18.1] - 2020-11-22\n\n- [map field referencing nested messages](https://github.com/stepancheg/rust-protobuf/issues/531)\n\n## [2.18.0] - 2020-10-04\n\n- `gen_mod_rs` codegen option can be used to generate `.rs` files friendlier to generating files in `$OUT_DIR`\n\n## [2.17.0] - 2020-08-12\n\n- `protoc` crate now depends on `which` crate for `protoc` binary lookup\n- pure rust codegen output adjusted to be closer to `protoc`-command based output\n- `RepeatedField::retain` is implemented\n\n## [2.16.2] - 2020-07-06\n\n- Fix compilation when feature `with-bytes` is enabled\n\n## [2.16.1] - 2020-07-06\n\n- Mute self-deprecation warning when compiling rust-protobuf\n\n## [2.16.0] - 2020-07-06\n\n- Generated repeated and message fields for proto2 are\n  [public now](https://github.com/stepancheg/rust-protobuf/commit/f391e9ae0968ae08f4a68798c3b3f25852590150)\n  (for proto3 all fields are already public).\n- Generated code no longer contains `unsafe`\n- Minor changes in generated files\n\n## [2.15.1] - 2020-06-26\n\n- [Use full name of Box in generated code](https://github.com/stepancheg/rust-protobuf/pull/492)\n\n## [2.15.0] - 2020-06-21\n\n- Min supported rust version if 1.44.1 now\n- Replace deprecated `#![cfg_attr(rustfmt, rustfmt_skip)]` with `#![rustfmt::skip]`\n\n## [2.14.0] - 2020-04-12\n\n- Rename `protoc_rust::Args` to `protoc_rust::Codegen`\n- Rename `protobuf_codegen_pure::Args` to `protobuf_codegen_pure::Codegen`\n- [`protoc-bin-vendored` crate](https://docs.rs/protoc-bin-vendored) introduced\n\n## [2.13.0] - 2020-04-09\n\n- [Implement Any::pack,is,unpack\n  operations](https://github.com/stepancheg/rust-protobuf/commit/e91bf7eb20abe68a7b29264b864e2cecbbb3f769)\n- Rename `protoc::Args` to `protoc::ProtocLangOut`\n\n## [2.12.0] - 2020-03-26\n\n- Generated code for reflection now references messages by Protobuf name, not by Rust name.\n\n## [2.11.0] - 2020-03-23\n\n### Backward compatibility\n\n- [Rename](https://github.com/stepancheg/rust-protobuf/commit/65667cb6e75e91027d595e8be1bce25cc29d7c88)\n  `ProtobufValueRef` to `ReflectValueRef`. Old name is kept for a while.\n\n### Other changes\n\n- Generated code [now uses](https://github.com/stepancheg/rust-protobuf/commit/f362d93c3a0f2405115f92a7f6bb08ad058fbf02)\n  associated constant `Lazy::INIT` for `Lazy` intialization instead of initializing fields directly.\n\n## [2.10.3] - 2020-03-23\n\n- Oneof names are escaped now in generated code\n\n## [2.10.2] - 2020-03-01\n\n- Added `dyn` to a list of rust keyword needed escaping\n\n## [2.10.1] - 2020-01-14\n\n- Remove accidentally slipped into 2.10 [version check](https://github.com/stepancheg/rust-protobuf/issues/466)\n\n## [2.10.0] - 2020-01-01\n\n### Backward compatibility\n\n- Minimum supported Rust version is 1.40.0 now\n- `bytes` crate [upgraded to 0.5](https://github.com/stepancheg/rust-protobuf/issues/465)\n\n## Other changes\n\n- [`ProtobufError` now provides error message in `Display` instead of\n  `Error::description`](https://github.com/stepancheg/rust-protobuf/commit/24c20a0503c0946836d3044dad524757bac2cc8a)\n- [`Debug` is now implemented for `EnumValueDescriptor` and\n  `ReflectValueRef`](https://github.com/stepancheg/rust-protobuf/commit/0e6a2f4c50f07d2c6f8007abd469daa08bc09b9c)\n\n## [2.9] - Unreleased\n\nChanges in 2.9 branch are not included in 2.10.\n\n## [2.9.0] - (2019-09-30) yanked\n\n### Backward compatibility\n\n- Minimum supported Rust version is 1.34.2 now\n- Generated code by protobuf compiler is now compatible\n  only with exactly the same version of protobuf library.\n  Note you can use\n  [pure rust protobuf compiler](https://docs.rs/protobuf-codegen-pure)\n  to avoid dependency on `protoc` binary.\n- `UnknownFields::fields` field is\n  [no longer public](https://github.com/stepancheg/rust-protobuf/commit/8ad35ecaa0accaa251f9f29708e4ed3b96f2351b)\n\n### Big changes\n\n- Text format and JSON printing and parsing is now implemented\n- Mutation reflection is implemented\n- All fields are public now except optional or repeated fields when `syntax = \"proto2\"`,\n  but message fields are public even when `syntax = \"proto2\"`\n\n### Other changes\n\n- [`Box<dyn Message>` now implements\n  `Clone`](https://github.com/stepancheg/rust-protobuf/commit/08aedca14f6a4cf8bb85c3e82d2dae05cddf57b8)\n- Generated code is slightly cleaner now (does not use `use` statements)\n- Generated code no longer uses unsafe (protobuf library still does)\n- Add a couple functions to reflection\n\n## [2.8] - Unreleased\n\n## [2.8.2] - 2019-12-31\n\n- [Add `async` and `await` to rust keywords](https://github.com/stepancheg/rust-protobuf/pull/461)\n\n## [2.8.1] - 2019-09-06\n\n- [hidden lifetime parameters in types are deprecated](https://github.com/stepancheg/rust-protobuf/issues/435)\n\n## [2.8.0] - 2019-07-22\n\n- [Fix `dyn Trait` warning (again)](https://github.com/stepancheg/rust-protobuf/issues/414)\n\n## [2.7.0] - 2019-07-02\n- Minimum supported Rust version\n  [is 1.27](https://github.com/stepancheg/rust-protobuf/commit/f51811e8376f7c46b433479903a1bd8670246aa0).\n  This version stabilizes `dyn Trait` syntax.\n- `inside_protobuf` option is added which slightly modifies generated code inside protobuf.\n  Should not affect users.\n- [Generated files are now compatible only with the same version of\n  runtime](https://github.com/stepancheg/rust-protobuf/commit/2ab4d50c27c4dd7803b64ce1a43e2c134532c7a6)\n- [Fixed codegen for mutually recursive messages with\n  oneofs](https://github.com/stepancheg/rust-protobuf/pull/420)\n- [Clippy annotations are now generated as `#[allow(clippy::all)]` instead of\n  `#[allow(clippy)]`](https://github.com/stepancheg/rust-protobuf/pull/332)\n\n## [2.6.2] - 2019-06-03\n- Fix [OOM on malformed input for fields of type\n  `bytes::Bytes`](https://github.com/stepancheg/rust-protobuf/issues/411)\n\n## [2.6.1] - 2019-05-27\n\n- [Fix `Hash` of\n  `UnknownFields`](https://github.com/stepancheg/rust-protobuf/commit/7f285cc42990e34bd8a489519aaae216a93584cf)\n- Improve rustdoc a little\n\n## [2.6.0] - 2019-05-19\n\n- [lite_runtime rust-protobuf option](https://github.com/stepancheg/rust-protobuf/pull/399)\n- Fix [OOM on malformed input](https://github.com/stepancheg/rust-protobuf/issues/411)\n- Minimum supported Rust version is [1.26](https://github.com/stepancheg/rust-protobuf/commit/71f09ae92e86be2ce439e71452c3ca1749a4bda7)\n- [Implement `Hash` for\n  `UnknownFields`](https://github.com/stepancheg/rust-protobuf/commit/113babc8c56deb7e2453f0d11c2bfc21134d540f)\n\n## [2.5.0] - 2019-04-15\n\n- `generate_accessors` options to disable generation of accessor functions (except getters).\n- [`Default` is now implented for all `&MyMessage`\n  types](https://github.com/stepancheg/rust-protobuf/commit/c026777976c895898fb50bc7c52802967bd33af5#diff-405e0ba76bb0afaaa4e11e89bc4bb943R4)\n- [`Debug` is now implemented for oneof enums](https://github.com/stepancheg/rust-protobuf/issues/397)\n  \n## [2.4.2] - 2019-03-29\n\n- [Fix well-known types codegen](https://github.com/stepancheg/grpc-rust/issues/129)\n- [More extension types are supported now](https://github.com/stepancheg/rust-protobuf/issues/392)\n\n## [2.3.1] - 2019-03-05\n\n- [Fix codegen when `syntax = \"proto2\"` and `with-bytes` option and string field with default\n  value](https://github.com/stepancheg/rust-protobuf/issues/395)\n\n## [2.3.0] - 2019-01-30\n\n- [`Default` is implemented for enums even in proto2](\n  https://github.com/stepancheg/rust-protobuf/commit/166966627ebc1e5ce650acd1593489e52757178e)\n- [Fix codegen where map value is an enum](https://github.com/stepancheg/rust-protobuf/issues/376)\n\n## [2.2.5] - 2019-01-20\n\n- [Escape extension field names](https://github.com/stepancheg/rust-protobuf/issues/371)\n\n## [2.2.4] - 2019-01-13\n\n- [Replace tempdir dependency with tempfile](https://github.com/stepancheg/rust-protobuf/pull/374)\n- [Fix serialization of signed int map keys or values](https://github.com/stepancheg/rust-protobuf/pull/372)\n\n## [2.2.2] - 2018-12-29\n\n- [Fix codegen on Windows](https://github.com/stepancheg/rust-protobuf/issues/356)\n\n## [2.2.1] - 2018-12-25\n\n- [Fix panic with oneof and bytes codegen](https://github.com/stepancheg/rust-protobuf/issues/362)\n\n## [2.2.0] - 2018-11-17\n\n- [Implement](https://github.com/stepancheg/rust-protobuf/commit/c0856a0b7b9a74224d535ecb691c46669c86a878)\n  `From<Option<T>> for SingularPtrField<T>`\n  \n## [2.1.5] - 2019-01-13\n\n- [Fix serialization of signed int map keys or values](https://github.com/stepancheg/rust-protobuf/pull/372)\n\n## [2.1.4] - 2018-11-01\n\n- Revert clippy annotations\n\n## [2.1.3] - 2018-10-31\n\n- [Replace old clippy annotations with recommended new\n  annotations](https://github.com/stepancheg/rust-protobuf/pull/332)\n\n## [2.1.2] - 2018-10-28\n\n- [`cached_size` field is public now](https://github.com/stepancheg/rust-protobuf/issues/348)\n\n## [2.1.1] - 2018-10-09\n\n- [Make `Customize::_future_options` public](https://github.com/stepancheg/rust-protobuf/pull/346)\n\n## [2.1.0] - 2018-10-06\n\n- Support of `protoc` command from Google protobuf before 3.0 is dropped\n  (it might work, but not tested by CI); this does not affect `syntax = \"proto2\"` which is supported\n- [When using `protoc` codegen options can now be passed with `--rust_opt`\n  flag](https://github.com/stepancheg/rust-protobuf/commit/7ebf32b47cb18160752a943dccb9d0d7ecdf91ed)\n- [Serde is now supported](https://github.com/stepancheg/rust-protobuf/issues/266)\n- [`unknown_fields` field is public now](https://github.com/stepancheg/rust-protobuf/commit/24e6479e869d61455bfcf50dde102e6278648516)\n\n## [2.0.6] - 2019-01-13\n\n- [Fix serialization of signed int map keys or values](https://github.com/stepancheg/rust-protobuf/pull/372)\n\n## [2.0.5] - 2018-09-21\n\n- [Global `parse_length_delimited*` functions are\n  deprecated](https://github.com/stepancheg/rust-protobuf/commit/efdfd5cacfa4f87b2a6e3ffc124d77692db142d9)\n- [Fixed a bug with quotes in string literal parsing in pure\n  codegen](https://github.com/stepancheg/rust-protobuf/issues/337)\n\n## [2.0.4] - 2018-07-19\n\n- Minimum bytes version is 0.4 now (since protobuf doesn't work with 0.3 anyway)\n\n## [2.0.3] - 2018-07-11\n\n- [Fix panic on singular string field appeared more than\n  once](https://github.com/stepancheg/rust-protobuf/commit/28adf07a0b0027ddc8ff57f04ffeb69f35f65620)\n- [Properly handle map fields with key or value skipped in binary proto](\n  https://github.com/stepancheg/rust-protobuf/issues/318)\n\n## [2.0.2] - 2018-05-29\n\n- Make rust-protobuf compatible with rust 1.23.0\n\n## [2.0.1] - 2018-05-27\n\n- Fix codegen with enum with\n  [default value a reserved rust keyword](https://github.com/stepancheg/rust-protobuf/issues/295)\n\n## [2.0.0] - 2018-05-17\n\n- Rebublished branch 1.6 because of\n  [backward compatibility issues in 1.6 branch](https://github.com/stepancheg/rust-protobuf/issues/289)\n\n## [1.7.5] - 2018-05-20\n- Fix [OOM on malformed input](https://github.com/stepancheg/rust-protobuf/issues/411)\n\n## [1.7.4] - 2018-07-11\n\n- [Fix panic on singular string field appeared more than\n  once](https://github.com/stepancheg/rust-protobuf/commit/28adf07a0b0027ddc8ff57f04ffeb69f35f65620)\n- [Properly handle map fields with key or value skipped in binary proto](\n  https://github.com/stepancheg/rust-protobuf/issues/318)\n\n## [1.7.3] - 2018-05-29\n\n- Make rust-protobuf compatible with rust 1.23.0\n\n## [1.7.2] - 2018-05-27\n\n- Fix codegen with enum with\n  [default value a reserved rust keyword](https://github.com/stepancheg/rust-protobuf/issues/295)\n\n## [1.7.1] - 2018-05-17\n\n- Rebublished branch 1.5 because of\n  [backward compatibility issues in 1.6 branch](https://github.com/stepancheg/rust-protobuf/issues/289)\n\n## [1.6.0] - 2018-05-11\n\nRepublished as 2.0.0\n\n### New features\n\n- Pure rust codegen\n- Generated code can now be customized not only with `rustproto.proto`\n  but also when invoked programmatically with\n  [`protoc-rust`](https://github.com/stepancheg/rust-protobuf/blob/b8573bd53cf5a9611598abbf02b71c49e59a8891/protobuf-codegen/src/customize.rs#L9)\n- [Oneof are now public by\n  default](https://github.com/stepancheg/rust-protobuf/commit/8bd911e2ea0d4461580105209ae11d9d3ec21fd0)\n- [Option to specify recursion limit](https://github.com/stepancheg/rust-protobuf/pull/248)\n- [Implement conversions for `Repeated*`](https://github.com/stepancheg/rust-protobuf/pull/236)\n- [Proto files with suffixes others than `.proto`\n  are now supported](https://github.com/stepancheg/rust-protobuf/pull/265)\n- [Generated code now uses closures instead of private functions\n  for reflection](https://github.com/stepancheg/rust-protobuf/pull/267)\n\n### Backward compatibility issues\n\n- [Drop `MessageStatic` trait](https://github.com/stepancheg/rust-protobuf/issues/214)\n- [Protobuf no longer exposes internal `hex`\n  module](https://github.com/stepancheg/rust-protobuf/commit/8ad9687529a565c5ef2db93732cc20c8d8d22f00)\n- [`protobuf-codegen` is a separate crate](https://github.com/stepancheg/rust-protobuf/pull/261)\n- [Drop old reflection\n  accessors](https://github.com/stepancheg/rust-protobuf/commit/7a03aee4e67bdd25ae6c403f37386707a0ab5eb9).\n  Now code may need to be regenerated when protobuf version changed.\n- [Implement `std::io` traits by `CodedInputStream` and\n  `CodedOutputStream`](https://github.com/stepancheg/rust-protobuf/pull/232)\n- `*descriptor_static()` function signatures no longer include `Option` param\n  ([1](https://github.com/stepancheg/rust-protobuf/commit/8723fca5fb29e279b3ab7d2a28c8fab79189c9c2),\n  [2](https://github.com/stepancheg/rust-protobuf/commit/c5446983be3b9d8d49ee39b443ed4fabd8f35440))\n\n## [1.5.1] - 2018-04-02\n- [Fix serialization or large repeated packed fields](https://github.com/stepancheg/rust-protobuf/issues/281)\n\n## [1.5.0] - 2018-03-25\n- [Unknown enum values are now stored in unknown fields](https://github.com/stepancheg/rust-protobuf/pull/276)\n\n## [1.4.5] - 2018-04-02\n- [Fix serialization or large repeated packed fields](https://github.com/stepancheg/rust-protobuf/issues/281)\n\n## [1.4.4] - 2018-03-05\n- [Escape macro keyword](https://github.com/stepancheg/rust-protobuf/pull/269)\n\n## [1.4.3] - 2017-12-03\n- [Allow enum variants to be named `Self`](https://github.com/stepancheg/rust-protobuf/pull/259)\n\n## [1.4.2] - 2017-10-14\n- [Properly read messages from blocking streams](https://github.com/stepancheg/rust-protobuf/issues/157)\n\n## [1.4.1] - 2017-06-24\n- [Convert `String` to `Chars`](https://github.com/stepancheg/rust-protobuf/pull/225)\n\n## [1.4] - 2017-06-24\n- Start of changelog\n\n## [0.0.0] - 2013-07-28\n- First commit added to the repository\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.7041015625,
          "content": "# Changelog\n\n## Unreleased\n\n## [3.7.1] - Unrelease\n\n- `protoc-gen-rust` renamed to `protoc-gen-rs`. `protoc --rust_out=` no longer works with latest Google protobuf,\n  they are working on official protobuf support for Rust.\n- Do not detect nightly in `protobuf` crate (no longer needed)\n- [Repeated fields in constants](https://github.com/stepancheg/rust-protobuf/pull/740)\n\n## [3.6.0] - 2024-09-30\n\n- [Fix text format parsing of non-ASCII](https://github.com/stepancheg/rust-protobuf/pull/730)\n\n## [3.5.1] - 2024-08-19\n\n- [Remove deprecated `box_pointers` lint](https://github.com/stepancheg/rust-protobuf/pull/733)\n\n## [3.5.0] - 2024-06-26\n\n- [Default to packed for repeated primitives in proto3](https://github.com/stepancheg/rust-protobuf/pull/707)\n- [Put correct flag in comment of generated files](https://github.com/stepancheg/rust-protobuf/pull/655)\n- [Option to disable non-exhausive annotation for oneof](https://github.com/stepancheg/rust-protobuf/pull/726)\n- [Option to generate `BTreeMap` for map fields](https://github.com/stepancheg/rust-protobuf/pull/700)\n- [Fix writing large messages](https://github.com/stepancheg/rust-protobuf/pull/725)\n\n## [3.4] - 2024-02-24\n\n* [Unnecessary copy in print_to_string_internal](https://github.com/stepancheg/rust-protobuf/pull/684)\n* [Ignore error of `flush` in `Drop` of `CodedOutputStream`](https://github.com/stepancheg/rust-protobuf/issues/714)\n* [Faster `encoded_varint64_len`](https://github.com/stepancheg/rust-protobuf/pull/709)\n* [`reserved` keyword in enums](https://github.com/stepancheg/rust-protobuf/pull/712)\n* [Set streaming options in pure parser](https://github.com/stepancheg/rust-protobuf/pull/646)\n\n## [3.3.0] - 2023-09-30\n\n* [protoc_extra_arg not passed through](https://github.com/stepancheg/rust-protobuf/issues/643)\n* [move custom code before derive block in struct](https://github.com/stepancheg/rust-protobuf/issues/675)\n* [Enum::from_str](https://github.com/stepancheg/rust-protobuf/pull/664)\n\n## [3.2.0] - 2022-09-26\n\n* [Correctly specify `log` version](https://github.com/stepancheg/rust-protobuf/pull/652)\n* [Hash for SpecialFields](https://github.com/stepancheg/rust-protobuf/pull/648)\n\n## [3.1.0] - 2022-06-22\n\n* [Reflection API to clear fields](https://github.com/stepancheg/rust-protobuf/pull/635)\n\n## [3.0.3] - 2022-05-31\n\n* `optional` fields in proto3 are now\n  [handled correctly in `protoc-gen-rust` plugin for `protoc`](https://github.com/stepancheg/rust-protobuf/issues/625)\n\n## [3.0.2] - 2022-05-06\n\n* [Sort modules in generated mod.rs](https://github.com/stepancheg/rust-protobuf/issues/621)\n\n## [3.0.1] - 2022-05-01\n\n* More up to date readme.\n\n## [3.0.0] - 2022-05-01\n\n* New stable version released.\n\n## Before version 3\n\n[Changelog before version 3](CHANGELOG-before-3.md)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2724609375,
          "content": "# Contributing to rust-protobuf\n\n## I just want to ask a question\n\nFeel free to open an issue to ask a question, the volume of questions is low,\nso it's OK at the moment. But please don't expect a prompt answer.\n\n## I have found a bug\n\nPlease open an [issue](https://github.com/stepancheg/rust-protobuf/issues). When reporting a bug please include minimal example\nproviding as much information as possible. In particular, please specify:\n\n* exact proto file\n* generated file\n* rust-protobuf version\n* command which was used to generate code (ideally, temporary standalone repository)\n* what is version of `protoc` command\n* what is operating system\n\n## Tests\n\nMost of code changes should be accompanied by tests.\n\nMost tests can be executed by invoking `cargo test` in `protobuf-test` directory.\n\n## Codegen\n\nIf you change code generator, tests will check that code generator works correctly.\n\nHowever, before submitting a PR, it's necessary to regenerate generated files\nshipped with rust-protobuf, notably, `descriptor.rs`.\n\nThis can be done by invoking a script `protobuf/regenerate.sh`.\n\n## Performance improvements\n\nAre always welcome, especially if they are backward-compatible.\n\n## Help wanted\n\nMost of all documentation is needed, any changes to rustdoc or markdown pages on GitHub are welcome.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.806640625,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"ci-gen\",\n    \"protoc-bin\",\n    \"protobuf\",\n    \"protobuf-json-mapping\",\n    \"protobuf-codegen\",\n    \"protobuf-examples/customize-serde\",\n    \"protobuf-examples/dynamic\",\n    \"protobuf-examples/pure-vs-protoc\",\n    \"protobuf-examples/vs-prost\",\n    \"protobuf-examples/issue-614\",\n    \"protobuf-parse\",\n    \"protobuf-support\",\n    \"test-crates/perftest/bytes\",\n    \"test-crates/perftest/misc\",\n    \"test-crates/perftest/vs-cxx\",\n    \"test-crates/protobuf-codegen-identical-test\",\n    \"test-crates/protobuf-codegen-protoc-test\",\n    \"test-crates/protobuf-codegen-pure-test\",\n    \"test-crates/protobuf-parse-error-test\",\n    \"test-crates/protobuf-fuzz\",\n    \"test-crates/protobuf-test\",\n    \"test-crates/protobuf-test-common\",\n]\n\n[workspace.dependencies]\nprotoc-bin-vendored = \"=3.1.0\"\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2019 Stepan Koltsov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.357421875,
          "content": "# rust-protobuf\n\n<!-- https://travis-ci.org/stepancheg/rust-protobuf.png -->\n[![crates.io version][crates-io-shields]][crates-io]\n[![docs.rs][docs-rs-shields]][docs-rs]\n[![GitHub Workflow Status][actions-shields]][actions]\n[![License][license-shields]][license]\n\n[crates-io]: https://crates.io/crates/protobuf\n[crates-io-shields]: https://img.shields.io/crates/v/protobuf.svg\n[docs-rs]: https://docs.rs/protobuf\n[docs-rs-shields]: https://img.shields.io/badge/docs.rs-rustdoc-green.svg\n[actions]: https://github.com/stepancheg/rust-protobuf/actions?query=workflow%3ACI\n[actions-shields]: https://img.shields.io/github/workflow/status/stepancheg/rust-protobuf/CI\n[license]: https://github.com/stepancheg/rust-protobuf/blob/master/LICENSE.txt\n[license-shields]: https://img.shields.io/crates/l/protobuf.svg\n\n[Protobuf](https://developers.google.com/protocol-buffers/docs/overview) implementation in [Rust](https://www.rust-lang.org/).\n\n* Written in pure rust\n* Generates rust code\n* Has runtime library support for generated code\n  (Coded{Input|Output}Stream impl)\n* Supports both Protobuf versions 2 and 3\n* and more\n\n## Where is documentation\n\nDocumentation is [hosted on docs.rs](https://docs.rs/protobuf).\n\n## Versions and branches\n\n### Version 3\n\nVersion 3 is current stable version. Compared to version 2 it implements:\n* runtime reflection\n* JSON and text format parsing and printing\n* dynamic messages (messages which can be created from `.proto` file on the fly\n  without code generation)\n\n### Version 2\n\nVersion 2 is previous stable version. Only most critical bugfixes will be applied\nto 2.x version, otherwise it won't be maintained.\n\n### Help\n\nThe crate **needs help**:\n* **a new maintainer**, but also\n* testing\n* documentation\n* examples to be used as documentation\n* feedback on API design\n* feedback on implementation\n* pull requests\n\n## Changelog\n\nSee [CHANGELOG.md](CHANGELOG.md) for a list of changes and compatility issues between versions.\n\n## Related projects\n\n* [prost](https://github.com/tokio-rs/prost) — another protobuf implementation in Rust, also has gRPC implementation\n* [quick-protobuf](https://github.com/tafia/quick-protobuf) — alternative protobuf implementation in Rust\n* [grpc-rs](https://github.com/pingcap/grpc-rs/) — another gRPC implementation for Rust\n* [grpc-rust](https://github.com/stepancheg/grpc-rust) — incomplete implementation of gRPC based on this library\n"
        },
        {
          "name": "ci-gen",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-protobuf-all-protos",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-json-mapping",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-parse",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-crates",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}