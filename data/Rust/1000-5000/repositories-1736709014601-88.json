{
  "metadata": {
    "timestamp": 1736709014601,
    "page": 88,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "metalbear-co/mirrord",
      "stars": 3896,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.05859375,
          "content": "target/*\n**/.vscode*\n**/.git*\n**/.github*\n**/.devcontainer*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.431640625,
          "content": "out\ndist\nnode_modules\npackage-lock.json\npackage.json\n__pycache__\n.vscode-test/\n*.vsix\n.DS_Store\n**/.DS_Store\n/target\nbuild/\n.mirrord\n\n### go tests ###\n*.go_test_app\n\n### c test apps ###\n*.c_test_app\n\n### other test apps ###\n*.test_app\n\n### VSCode ###\nvscode-ext/bin\n.vscode/settings.json\n\n### Intellij ###\nintellij-ext/.gradle\nintellij-ext/.idea\nintellij-ext/.qodana\nintellij-ext/build\nintellij-ext/libmirrord_layer.*\nintellij-ext/bin\n.idea/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 171.005859375,
          "content": "# Change Log\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nThis project uses [*towncrier*](https://towncrier.readthedocs.io/) and the changes for the upcoming release can be found in <https://github.com/metalbear-co/mirrord/tree/main/changelog.d/>.\n\n<!-- towncrier release notes start -->\n\n## [3.128.0](https://github.com/metalbear-co/mirrord/tree/3.128.0) - 2024-12-19\n\n\n### Added\n\n- Added to mirrord config a new experimental field\n  `.experimental.readonly_file_buffer`. If set to a value greater than 0,\n  mirrord will fetch remote readonly files in chunks of at least this size (in bytes).\n  This is to improve performance with applications that make many small reads\n  from remote files.\n  [#2069](https://github.com/metalbear-co/mirrord/issues/2069)\n- Added `mirrord container-ext` command that should be used by extension and\n  works similarly to `mirrord ext` but for containers.\n- Added runAsNonRoot and RO file system to operator deployment\n- Added custom resource definition for cluster-wide mirrord policy -\n  `MirrordClusterPolicy`.\n- Added mapping option for env vars config, allowing the user to map multiple env\n  vars to another value based on regexes.\n  [#2920](https://github.com/metalbear-co/mirrord/issues/2920)\n- Added mkdir support\n  [#2221](https://github.com/metalbear-co/mirrord/issues/2221)\n\n\n### Fixed\n\n- Added debugger port detection type for the node `--inspect`, `--inspect-wait`\n  and `--inspect-brk` flags.\n  [#2936](https://github.com/metalbear-co/mirrord/issues/2936)\n- Fixed `mirrord operator setup` - added missing `/tmp` volume to the operator\n  deployment.\n\n\n### Internal\n\n- Added E2E test for `MirrordClusterPolicy` that blocks incoming traffic\n  mirroring.\n\n## [3.127.0](https://github.com/metalbear-co/mirrord/tree/3.127.0) - 2024-12-10\n\n\n### Added\n\n- `MirrordPolicy` can now block traffic mirroring (requires operator support).\n\n\n### Changed\n\n- Updated dependencies.\n  [#2952](https://github.com/metalbear-co/mirrord/issues/2952)\n\n\n### Fixed\n\n- Fixed link to operator docs.\n\n\n### Internal\n\n- Added `mirrord-protocol` message for rejecting mirror port subscription due\n  to `MirrordPolicy`.\n- Updated hickory dependency version.\n\n## [3.126.0](https://github.com/metalbear-co/mirrord/tree/3.125.3) - 2024-12-06\n\n\n### Added\n\n- Added SQS splitting state to mirrord operator status reporting (requires operator support).\n\n\n### Changed\n\n- Hidden files and directories in `$HOME` directory are now read locally by\n  default.\n\n\n### Fixed\n\n- Can now run cs-installed sbt. We now only need to be able to parse the first\n  line of a script, so we now support scripts like that sbt, which starts with\n  a normal shebang but then has text in a weird encoding, or maybe non-textual\n  data. [#2947](https://github.com/metalbear-co/mirrord/issues/2947)\n- Prevent reverse port forwarding from ending unexpectedly due to\n  unexpected connection end.\n  [#2962](https://github.com/metalbear-co/mirrord/issues/2962)\n- Added a sleep and await on it after websocket connection to drive IO runtime\n  and prevent websocket closing without handshake.\n\n\n### Internal\n\n- Added optional `loadFromSecret` field to Kafka client config spec to allow\n  setting properties from a Secret.\n- Allow the operator to fetch Secrets in the operator namespace.\n- use `Stdio::null()` for \"sidecar start\" patch added in\n  [#2933](https://github.com/metalbear-co/mirrord/pull/2933).\n\n## [3.125.2](https://github.com/metalbear-co/mirrord/tree/3.125.2) - 2024-11-29\n\n\n### Fixed\n\n- Manually call `docker start <sidecar_id>` if after our sidecar `run` command\n  the container hasn't started yet and is in \"created\" status.\n  [#2927](https://github.com/metalbear-co/mirrord/issues/2927)\n\n\n### Internal\n\n- Fixed return type of a function in mirrord-operator client code.\n\n## [3.125.1](https://github.com/metalbear-co/mirrord/tree/3.125.1) - 2024-11-27\n\n\n### Fixed\n\n- Added retry of HTTP requests (intproxy) on hyper's `IncompleteMessage` error.\n\n\n### Internal\n\n- Updated `RolloutSpec` and operator setup.\n- Added `expect_file_open_for_reading` for `/etc/resolv.conf` path in\n  `test_issue2283` test.\n  [#2935](https://github.com/metalbear-co/mirrord/issues/2935)\n\n## [3.125.0](https://github.com/metalbear-co/mirrord/tree/3.125.0) - 2024-11-21\n\n\n### Added\n\n- Added a configuration option that allows for specifying an env file for\n  mirrord execution.\n  [#1913](https://github.com/metalbear-co/mirrord/issues/1913)\n- Added notice that fs mapping does not apply to relative paths.\n  [#2894](https://github.com/metalbear-co/mirrord/issues/2894)\n\n### Changed\n\n- Ignore paths that start with the current dir path, instead of any path that\n  contains the current dir path. Also, ignore only paths that end with the\n  current exe's path, not all that contain it.\n- Print a warning to the user when `-p` is provided as part of `mirrord container`\n  run command, as it may cause issues because of our usage of\n  container type network mode.\n\n\n### Fixed\n\n- Change `getifaddrs` hook to allocate memory for a new list instead of modifying\n  list returned from libc call.\n  [#2903](https://github.com/metalbear-co/mirrord/issues/2903)\n- Read current dir, current exe, and temp dir locally, also when they contain\n  characters with a meaning for regexes, like e.g. paretheses.\n\n\n### Internal\n\n- Add argocd application permissions to operator setup.\n- Add explanation about boolean configurations in env/fs\n- Changes the Result alias to CliResult, and config to layer_config (in some\n  places).\n- build script forwards args to cargo build.\n\n## [3.124.2](https://github.com/metalbear-co/mirrord/tree/3.124.2) - 2024-11-08\n\n\n### Fixed\n\n- Fix agent crash on sniffer failure\n  [#2909](https://github.com/metalbear-co/mirrord/issues/2909)\n- Fix file mapping doesn't affect xstat\n\n## [3.124.1](https://github.com/metalbear-co/mirrord/tree/3.124.1) - 2024-11-07\n\n\n### Changed\n\n- Bump dependencies\n\n\n### Fixed\n\n- Fix crash when listing interfaces caused by enabling the new hook by default\n\n## [3.124.0](https://github.com/metalbear-co/mirrord/tree/3.124.0) - 2024-11-06\n\n\n### Changed\n\n- hide ipv6 interfaces by default\n  [#2849](https://github.com/metalbear-co/mirrord/issues/2849)\n\n\n### Fixed\n\n- Make sure agent doesn't send `Close` message when Sniffer fails to load.\n  [#2896](https://github.com/metalbear-co/mirrord/issues/2896)\n\n\n## [3.123.0](https://github.com/metalbear-co/mirrord/tree/3.123.0) - 2024-11-05\n\n\n### Changed\n\n- log better errors of local file creation and add option to use alternative\n  way [#2889](https://github.com/metalbear-co/mirrord/issues/2889)\n- add .class to be always local\n\n\n### Fixed\n\n- use /dev/null by default\n  [#2889](https://github.com/metalbear-co/mirrord/issues/2889)\n\n\n## [3.122.1](https://github.com/metalbear-co/mirrord/tree/3.122.1) - 2024-10-30\n\n\n### Changed\n\n- Bump rust version to 2024-10-11 on macOS [match Linux]\n\n\n### Fixed\n\n- Add arm64 layer to macOS fat binary.\n  [#2885](https://github.com/metalbear-co/mirrord/issues/2885)\n\n## [3.122.0](https://github.com/metalbear-co/mirrord/tree/3.122.0) - 2024-10-30\n\n\n### Added\n\n- Added serviceAccount option to agent config\n  [#2876](https://github.com/metalbear-co/mirrord/issues/2876)\n\n\n### Changed\n\n- Allow targetless mode to run with local fs-mode.\n  [#2368](https://github.com/metalbear-co/mirrord/issues/2368)\n- Remove unstable tags on feature.network.outgoing.filter config\n  [#2862](https://github.com/metalbear-co/mirrord/issues/2862)\n- Add option to have logs when running ext commands\n\n\n### Fixed\n\n- Added experimental disable_reuseaddr to bypass the issue\n  [#2819](https://github.com/metalbear-co/mirrord/issues/2819)\n- `mirrord-intproxy` no longer lingers forever when the user tries to execute a\n  non-existent binary.\n  [#2869](https://github.com/metalbear-co/mirrord/issues/2869)\n\n\n### Internal\n\n- Extended GitHub bug report template.\n  [#2664](https://github.com/metalbear-co/mirrord/issues/2664)\n- Switch building layer on macos arm64 to use code shim.\n  [#2872](https://github.com/metalbear-co/mirrord/issues/2872)\n- Added CRD for `MirrordOperatorUser`, adjusted operator setup.\n- Changed debug display of operator session ID. Now it's printed in upper HEX\n  to match operator status display.\n\n## [3.121.1](https://github.com/metalbear-co/mirrord/tree/3.121.1) - 2024-10-22\n\n\n### Changed\n\n- Improve error logging and reporting when a getaddrinfo-adjacent failure\n  happens due to IO in the agent.\n  [#2287](https://github.com/metalbear-co/mirrord/issues/2287)\n- Improve error checking for InvalidCertificate errors in mirrord-cli.\n  [#2824](https://github.com/metalbear-co/mirrord/issues/2824)\n- Ignore CATALINA_HOME env by default\n- Skip mirrord injections into `bazel-real`, considering it a build tool.\n\n\n### Fixed\n\n- Fix a bug where file mode was ignored when Go applications were creating\n  local files. [#2614](https://github.com/metalbear-co/mirrord/issues/2614)\n- Update mirrord-container sidecar logs command to improve printing of errors.\n  [#2726](https://github.com/metalbear-co/mirrord/issues/2726)\n- Fix SIP detection on scripts with no shebang, SIP of default interpreter is\n  now used [#2797](https://github.com/metalbear-co/mirrord/issues/2797)\n- Bump dependencies, fix empty user in a kube context\n\n## [3.121.0](https://github.com/metalbear-co/mirrord/tree/3.121.0) - 2024-10-17\n\n\n### Added\n\n- Added support for Istio CNI\n  [#2851](https://github.com/metalbear-co/mirrord/issues/2851)\n- Added `nodeSelector` option to agent config.\n\n\n### Changed\n\n- Allowed filtered steal requests to be retried when we get a Reset from\n  hyper(h2).\n\n\n### Fixed\n\n- Fixed an issue where `mirrord exec ... -- npm run serve` in a Vue project was\n  failing with `EAFNOSUPPORT: address family not supported ::1:80`. Added new\n  `.experimental.hide_ipv6_interfaces` configuration entry that allows for\n  hiding local IPv6 interface addresses from the user application.\n  [#2807](https://github.com/metalbear-co/mirrord/issues/2807)\n- Fixed wrong warning being displayed when binding UDP port 0 and filtering HTTP.\n  [#2812](https://github.com/metalbear-co/mirrord/issues/2812)\n- mirrord now respects `insecure-skip-tls-verify` option set in the kubeconfig\n  when `accept_invalid_certificates` is not provided in the mirrord config.\n  [#2825](https://github.com/metalbear-co/mirrord/issues/2825)\n\n\n### Internal\n\n- Downgraded Rust toochain to nightly-2024-09-12.\n  [#downgrade-rust](https://github.com/metalbear-co/mirrord/issues/downgrade-rust)\n- Added integration (regression) test for binding port 0 twice.\n  [#2812](https://github.com/metalbear-co/mirrord/issues/2812)\n\n## [3.120.1](https://github.com/metalbear-co/mirrord/tree/3.120.1) - 2024-10-14\n\n\n### Removed\n\n- Remove support for IPv6 sockets with mirrord.\n  [#2836](https://github.com/metalbear-co/mirrord/issues/2836)\n\n\n### Internal\n\n- Update github actions dependencies\n\n## [3.120.0](https://github.com/metalbear-co/mirrord/tree/3.120.0) - 2024-10-13\n\n\n### Added\n\n- Added Kafka splitting feature.\n  [#2601](https://github.com/metalbear-co/mirrord/issues/2601)\n\n\n### Changed\n\n- Add analytics about usage of experimental features\n- Add option to have logs when running ext commands\n- update dependencies\n\n\n### Fixed\n\n- Fixed a bug where `all_of` and `any_of` HTTP filters were stealing all HTTP\n  traffic. [#2817](https://github.com/metalbear-co/mirrord/issues/2817)\n- Handle IPv4 in IPv6, should help with regressions related to allowing\n  AF_INET6 [#2827](https://github.com/metalbear-co/mirrord/issues/2827)\n\n\n## [3.119.1](https://github.com/metalbear-co/mirrord/tree/3.119.1) - 2024-10-09\n\n\n### Changed\n\n- Allow setting port for int/extproxy from the command line.\n\n\n### Fixed\n\n- Use new kube rs to support empty user.\n  [#2803](https://github.com/metalbear-co/mirrord/issues/2803)\n- Allow using IPv6 sockets with mirrord.\n  [#2807](https://github.com/metalbear-co/mirrord/issues/2807)\n- Fix mirrord making double bind of port 0 fail.\n\n## [3.119.0](https://github.com/metalbear-co/mirrord/tree/3.119.0) - 2024-10-07\n\n\n### Added\n\n- Add reverse port forwarding which can be used to proxy data from a remote\n  port on the target pod to a local one -\n  if only one port is specified, it will be used for both.\n  ```\n  mirrord port-forward [options] -R [remote_port:]local_port\n  ```\n\n  To use the incoming network mode and filters from a config file, use -f as\n  normal:\n  ```\n  mirrord port-forward [options] -R [remote_port:]local_port -f\n  config_file.toml\n  ```\n\n  [#2609](https://github.com/metalbear-co/mirrord/issues/2609)\n\n\n### Changed\n\n- Dependency tree does not contain tonic 0.11.\n- Use forked version of apple-codesign to remove RSA dependency\n\n\n### Fixed\n\n- Collect and pass environment variables to the process to be executed locally\n  instead of setting them for the entire local environment, which was causing\n  interference with analytics instrumentation.\n  [#2783](https://github.com/metalbear-co/mirrord/issues/2783)\n- Don't drop RSTs, makes long-lived connections drop on steal start\n  [#2794](https://github.com/metalbear-co/mirrord/issues/2794)\n\n## [3.118.1](https://github.com/metalbear-co/mirrord/tree/3.118.1) - 2024-10-02\n\n\n### Added\n\n- Internal proxy now explicitly logs exit error.\n\n\n### Changed\n\n- Enabled readlink hook by default.\n  [#2518](https://github.com/metalbear-co/mirrord/issues/2518)\n- Prompt user for intproxy logs (when intproxy crashes).\n  Adds `.log` as a file type for intproxy default log file.\n  [#2750](https://github.com/metalbear-co/mirrord/issues/2750)\n- Refactor how mirrord gets a target when the operator is enabled, and warn\n  when randomly selecting a container in multi-container situations (if the\n  user did not specify a container).\n\n\n### Fixed\n\n- Handle cases where target pod has IPv6\n  [#2788](https://github.com/metalbear-co/mirrord/issues/2788)\n\n\n### Internal\n\n- Fix CI failures due to \"externally-managed-environment\" error\n- Run go mod tidy on all go stuff\n\n## [3.118.0](https://github.com/metalbear-co/mirrord/tree/3.118.0) - 2024-09-22\n\n\n### Added\n\n- Add `cli_extra_args` field to `container` config to allow specifing custom\n  arguments for `mirrord container` sidecar container.\n\n  ```json\n  {\n    \"container\": {\n      \"cli_extra_args\": [\"--network\", \"host\"]\n    }\n  }\n  ```\n  this config will spawn mirrord cli container with `<runtime> run --network\n  host --rm -d ...`.\n  [#2756](https://github.com/metalbear-co/mirrord/issues/2756)\n\n\n### Changed\n\n- Increase timeout of layer-intproxy socket connection to a ludicrous amount.\n  [#2652](https://github.com/metalbear-co/mirrord/issues/2652)\n- Have intproxy log to a file in /tmp by default.\n  [#2750](https://github.com/metalbear-co/mirrord/issues/2750)\n- Bump dependencies\n\n\n### Fixed\n\n- Add a retry for port-forward agent connection if error was recived via error\n  channel after websocket was established.\n  [#2759](https://github.com/metalbear-co/mirrord/issues/2759)\n\n\n### Internal\n\n- E2E tests for SQS splitting.\n\n\n## [3.117.0](https://github.com/metalbear-co/mirrord/tree/3.117.0) - 2024-09-12\n\n\n### Added\n\n- Detect Telepresence's traffic-agent and warn user about incompatibility\n  [#2738](https://github.com/metalbear-co/mirrord/issues/2738)\n\n\n### Internal\n\n- Suggest mfT when user uses HTTP filter, only show user one warning for\n  multipod/ HTTP filter.\n  [#2701](https://github.com/metalbear-co/mirrord/issues/2701)\n- Add attribution to docs links using query parameters.\n  [#2703](https://github.com/metalbear-co/mirrord/issues/2703)\n- Add patch to allow a user to reuse copy-target and fix issue where prelauch\n  commands in intellij prevented execution.\n- Sort the targets from mirrord ls in a more user friendly way, starting from\n  pods.\n\n\n## [3.116.3](https://github.com/metalbear-co/mirrord/tree/3.116.3) - 2024-09-05\n\n\n### Fixed\n\n- Fixed `mirrord ls` hanging when there is a lot of possible targets in the\n  cluster.\n- Update detour for `dns_configuration_copy` to return remote value from\n  \"/etc/resolv.conf\" to fix nodejs dns resolution not working on macos.\n  [#2713](https://github.com/metalbear-co/mirrord/issues/2713)\n\n\n### Internal\n\n- Restored concurrency in `mirrord ls` list requests.\n\n## [3.116.2](https://github.com/metalbear-co/mirrord/tree/3.116.2) - 2024-09-05\n\n\n### Changed\n\n- Add option to have logs when running ext commands\n\n\n## [3.116.1](https://github.com/metalbear-co/mirrord/tree/3.116.1) - 2024-09-04\n\n\n### Fixed\n\n- Fixed upload of mirrord binaries' shasums to homebrew repository in the\n  release action.\n- Fix mirrord ls hanging by making so `KubeResourceSeeker` will list different\n  kinds of resources sequentially instead of in parallel.\n  [#2724](https://github.com/metalbear-co/mirrord/issues/2724)\n\n## [3.116.0](https://github.com/metalbear-co/mirrord/tree/3.116.0) - 2024-09-03\n\n\n### Added\n\n- Add initial and very basic implementation of vpn\n  [#2387](https://github.com/metalbear-co/mirrord/issues/2387)\n- Add warning when user tries to mirrord exec [container], pointing them to use\n  mirrord container instead.\n  [#2599](https://github.com/metalbear-co/mirrord/issues/2599)\n- Add support for hostname resolution in port-forward.\n  [#2696](https://github.com/metalbear-co/mirrord/issues/2696)\n- Add support for all_of, any_of composite http filters in config.\n  [#2699](https://github.com/metalbear-co/mirrord/issues/2699)\n\n\n### Changed\n\n- mirrord now produces a more descriptive error message when it fails to call\n  authentication command specified in the kubeconfig.\n  [#2575](https://github.com/metalbear-co/mirrord/issues/2575)\n- SQS CRD field names changed to camelCase.\n\n\n### Fixed\n\n- Start on deprecating operator target list.\n  [#2706](https://github.com/metalbear-co/mirrord/issues/2706)\n\n\n### Internal\n\n- Adds new (operator) targets for mirrord ls test.\n- Change permissions to use new `SubjectAccessReview` api instead of\n  `impersonate`.\n\n  Added:\n  ```yaml\n  - apiGroups:\n    - authorization.k8s.io\n    resources:\n    - subjectaccessreviews\n    verbs:\n    - create\n  ```\n\n  Removed:\n  ```yaml\n  - apiGroups:\n    - \"\"\n    - authentication.k8s.io\n    resources:\n    - groups\n    - users\n    - userextras/accesskeyid\n    - userextras/arn\n    - userextras/canonicalarn\n    - userextras/sessionname\n    - userextras/iam.gke.io/user-assertion\n    - userextras/user-assertion.cloud.google.com\n    - userextras/principalid\n    - userextras/oid\n    - userextras/username\n    - userextras/licensekey\n    verbs:\n    - impersonate\n  ```\n- Fix some typos\n- Fixed target type formatting and E2E test.\n- Fixed urlfied form of target types.\n- Rejecting empty composite HTTP filters during config validation.\n\n## [3.115.1](https://github.com/metalbear-co/mirrord/tree/3.115.1) - 2024-08-21\n\n\n### Fixed\n\n- Add retry for checking intproxy logs to get its listening port, Prevents any\n  issues when it takes a bit of time for intproxy to start when running in\n  container mode. [#2687](https://github.com/metalbear-co/mirrord/issues/2687)\n- Fixed `mirrord-agent` not picking up graceful shutdown signal.\n  [#2690](https://github.com/metalbear-co/mirrord/issues/2690)\n\n## [3.115.0](https://github.com/metalbear-co/mirrord/tree/3.115.0) - 2024-08-21\n\n\n### Added\n\n- Adds a batching readdir requests, which should improve the performance when\n  traversing large directories. Introduces a new `ReadDirBatched` message to the protocol.\n  [#2611](https://github.com/metalbear-co/mirrord/issues/2611)\n\n\n### Fixed\n\n- Fix hooking on arm64 Go on Linux\n  [#2680](https://github.com/metalbear-co/mirrord/issues/2680)\n\n\n### Internal\n\n- Adds intproxy logs for the integration tests in CI.\n\n## [3.114.1](https://github.com/metalbear-co/mirrord/tree/3.114.1) - 2024-08-18\n\n\n### Fixed\n\n- Make splitqueues optional to support old version\n  [#2675](https://github.com/metalbear-co/mirrord/issues/2675)\n\n\n### Internal\n\n- Update kube rs to use mainstream\n  [#2636](https://github.com/metalbear-co/mirrord/issues/2636)\n- Use main CI action for go e2e setup.\n\n\n## [3.114.0](https://github.com/metalbear-co/mirrord/tree/3.114.0) - 2024-08-16\n\n\n### Added\n\n- Add port forwarding feature which can be used to proxy data from a local port\n  to a remote one -\n  if the local port is not specified, it will default to the same as the remote\n  ```\n  mirrord port-forward [options] -L [local_port:]remote_ip:remote_port\n  ```\n  [#567](https://github.com/metalbear-co/mirrord/issues/567)\n- Client side support for the upcoming SQS queue splitting support in *mirrord\n  for Teams*. [#2066](https://github.com/metalbear-co/mirrord/issues/2066)\n\n## [3.113.1](https://github.com/metalbear-co/mirrord/tree/3.113.1) - 2024-08-15\n\n\n### Fixed\n\n- Fix small error in shared sockets that resulted in it adding the shared\n  socket env several times.\n  [#864](https://github.com/metalbear-co/mirrord/issues/864)\n- Specify that `mirrord container` is an unstable feature.\n  [#2641](https://github.com/metalbear-co/mirrord/issues/2641)\n- Fix IncomingConfig json schema regression.\n  [#2662](https://github.com/metalbear-co/mirrord/issues/2662)\n- Fix `arm64` version of `mirrord-cli` container image and add github cache for\n  container builds.\n- Fixed symbol hooks for Go 1.23.\n\n\n### Internal\n\n- Updated Go versions used in CI to 1.21, 1.22 and 1.23.\n  [#2660](https://github.com/metalbear-co/mirrord/issues/2660)\n- Some agent code housekeeping, including improved tracing and errors and\n  removal of index allocator.\n\n## [3.113.0](https://github.com/metalbear-co/mirrord/tree/3.113.0) - 2024-08-14\n\n\n### Added\n\n- Add new api to run mirrord inside container\n\n  ```\n  mirrord container [options] -- <docker/podman> run ...\n  ```\n\n  Because we need to run internal proxy process on the same network as the\n  process loaded with `mirrord-layer`, to keep config and kubernetes\n  comparability the communication to mirrord agent is made via external proxy\n  that will run on the host machine.\n  ```\n                     ┌────────────────┐\n                 k8s │ mirrord agent  │\n                     └─────┬────▲─────┘\n                           │    │\n                           │    │\n                     ┌─────▼────┴─────┐\n      container host │ external proxy │\n                     └─────┬────▲─────┘\n                           │    │\n                           │    │\n                     ┌─────▼────┴─────┐◄──────┐\n   sidecar container │ internal proxy │       │\n                     └──┬─────────────┴──┐    │\n          run container │ mirrord-layer  ├────┘\n                        └────────────────┘\n  ```\n  [#1658](https://github.com/metalbear-co/mirrord/issues/1658)\n\n\n### Fixed\n\n- Add custom handling for istio ambient mode where we set\n  `/proc/sys/net/ipv4/conf/all/route_localnet` to `1` so it does require\n  `agent.privileged = true` to work. (See\n  [#2456](https://github.com/metalbear-co/mirrord/issues/2456))\n  [#2456](https://github.com/metalbear-co/mirrord/issues/2456)\n- Fix issue introduced in #2612 that broke configs with one-value definition\n  for IncomingConfig for network feature.\n  [#2647](https://github.com/metalbear-co/mirrord/issues/2647)\n\n\n### Internal\n\n- Fixed a flake in layer integration tests.\n  [#2632](https://github.com/metalbear-co/mirrord/issues/2632)\n- Add `execution_kind` into analytics `event_properties` where `mirrord\n  container` results in 1 and `mirrord exec` results in 2.\n- Cleanup unused dependencies\n- Remove double analytics reporting by setting so intproxy will only report\n  errors if it is running inside a container.\n- Update actions\n- Update the location of `--` in container command\n  ```\n  mirrord container [options] <docker/podman/nerdctl> run -- ...\n  ```\n  Now will be\n  ```\n  mirrord container [options] -- <docker/podman/nerdctl> run ...\n  ```\n  or simply\n  ```\n  mirrord container [options] <docker/podman/nerdctl> run ...\n  ```\n\n## [3.112.1](https://github.com/metalbear-co/mirrord/tree/3.112.1) - 2024-08-05\n\n\n### Added\n\n- Added `experimental.enable_exec_hooks_linux` switch to the mirrord config.\n\n\n### Changed\n\n- Change operator port from 3000 to 443 to work without any FW exceptions\n\n\n### Fixed\n\n- Fixed execve hook (fix data race on process initialization, might fix more stuff)\n  [#2624](https://github.com/metalbear-co/mirrord/issues/2624)\n- Added new VSCode debugpy args layout to debugger port detection\n\n\n### Internal\n\n- Pinned `towncrier` version to `23.11.0` due to breaking update.\n\n## [3.112.0](https://github.com/metalbear-co/mirrord/tree/3.112.0) - 2024-07-30\n\n\n### Added\n\n- Add fs mapping, under `feature.fs.mapping` now it's possible to specify regex\n  match and replace for paths while running mirrord exec.\n\n  Example:\n\n  ```toml\n  [feature.fs.mapping]\n  \"/var/app/temp\" = \"/tmp\" # Will replace all calls to read/write/scan for\n  \"/var/app/temp/sample.txt\" to \"/tmp/sample.txt\"\n  \"/var/app/.cache\" = \"/workspace/mirrord$0\" # Will replace\n  \"/var/app/.cache/sample.txt\" to\n  \"/workspace/mirrord/var/app/.cache/sample.txt\" see\n  [Regex::replace](https://docs.rs/regex/latest/regex/struct.Regex.html#method.replace)\n  ``` [#2068](https://github.com/metalbear-co/mirrord/issues/2068)\n- Warning when mirrord automatically picked one of multiple containers on the\n  target.\n\n\n### Changed\n\n- Allows targeting StatefulSet without the copy_target feature (still requires\n  operator though).\n\n\n### Fixed\n\n- Remove invalid schema doc mentioning podname as a valid pod target selector.\n  [#721](https://github.com/metalbear-co/mirrord/issues/721)\n- Pass the list of UserSocket to child processes when exec is called through an\n  env var MIRRORD_SHARED_SOCKETS.\n  [#864](https://github.com/metalbear-co/mirrord/issues/864)\n- Fixed an issue where operator license was incorrectly recognized as expired\n  when it was expiring later the same day.\n- Fixed new exec hooks breaking execution of Flask apps.\n\n\n### Internal\n\n- Added `clippy` check on test code to the CI.\n- Regenerated config docs.\n\n## [3.111.0](https://github.com/metalbear-co/mirrord/tree/3.111.0) - 2024-07-17\n\n\n### Added\n\n- Extended `feature.network.dns` config with an optional local/remote filter,\n  following `feature.network.outgoing` pattern.\n  [#2581](https://github.com/metalbear-co/mirrord/issues/2581)\n\n\n### Fixed\n\n- Update loopback detection to include pod ip's\n  [#2572](https://github.com/metalbear-co/mirrord/issues/2572)\n- Fixed a bug where enabling remote DNS prevented making a local connection\n  with telnet. [#2579](https://github.com/metalbear-co/mirrord/issues/2579)\n- Remove automatic ignore of incoming/outgoing traffic for ports 50000-60000\n  [#2597](https://github.com/metalbear-co/mirrord/issues/2597)\n\n\n### Internal\n\n- Add test to ensure empty streamed request doesn't hang if empty\n  [#2593](https://github.com/metalbear-co/mirrord/issues/2593)\n\n## [3.110.0](https://github.com/metalbear-co/mirrord/tree/3.110.0) - 2024-07-12\n\n\n### Added\n\n- Added experimental.trust_any_certificate to enable making app trust any\n  certificate on macOS\n  [#2576](https://github.com/metalbear-co/mirrord/issues/2576)\n\n\n### Fixed\n\n- Fix empty request streaming hanging forever\n  [#2590](https://github.com/metalbear-co/mirrord/issues/2590)\n\n## [3.109.0](https://github.com/metalbear-co/mirrord/tree/3.109.0) - 2024-07-10\n\n\n### Changed\n\n- mirrord commands now provide a nicer error message when the operator required\n  but not installed.\n  [#1730](https://github.com/metalbear-co/mirrord/issues/1730)\n- Add Unknown target variant for forwards compatibility.\n  [#2515](https://github.com/metalbear-co/mirrord/issues/2515)\n\n\n### Fixed\n\n- Improved agent performance when mirroring is under high load.\n  [#2529](https://github.com/metalbear-co/mirrord/issues/2529)\n- Don't include non-running pods in node capacity check\n  [#2582](https://github.com/metalbear-co/mirrord/issues/2582)\n- Add exclusion for DOTNET_EnableDiagnostics to make DotNet debugging work by\n  default\n\n\n### Internal\n\n- CLI now sends additional headers with each request to the mirrord operator.\n  [#2466](https://github.com/metalbear-co/mirrord/issues/2466)\n- Add mirrord-operator-apiserver-authentication `Role` and `RoleBinding` to\n  fetch `extension-apiserver-authentication` configmap from \"kube-system\".\n- Fixed compilation errors in `mirrord-operator` crate with only `crd` feature\n  enabled.\n- Fixed compilation of `mirrord-operator` crate with no features.\n- Updated `x509-certificate` dependency.\n\n\n## [3.108.0](https://github.com/metalbear-co/mirrord/tree/3.108.0) - 2024-07-02\n\n\n### Added\n\n- Added support for streaming HTTP responses.\n  [#2557](https://github.com/metalbear-co/mirrord/issues/2557)\n\n\n### Changed\n\n- Changed http path filter to include query params in match\n  [#2551](https://github.com/metalbear-co/mirrord/issues/2551)\n- Configuration documentation contents order.\n- Errors that occur when using discovery API to detect mirrord operator are no\n  longer fatal. When such error is encountered, mirrord command falls back to\n  using the OSS version.\n\n\n### Fixed\n\n- When using mesh use `lo` interface for mirroring traffic.\n  [#2452](https://github.com/metalbear-co/mirrord/issues/2452)\n\n\n### Internal\n\n- Correct version of HTTP response is sent based on agent protocol version.\n  [#2562](https://github.com/metalbear-co/mirrord/issues/2562)\n- `mirrord-intproxy` crate unit tests are now part of the CI.\n\n\n## [3.107.0](https://github.com/metalbear-co/mirrord/tree/3.107.0) - 2024-06-25\n\n\n### Added\n\n- Added support for intercepting streaming HTTP requests with an HTTP filter.\n  [#2478](https://github.com/metalbear-co/mirrord/issues/2478)\n- mirrord now queries kube discovery API to confirm that mirrord operator is\n  not installed (when an attempt to use operator API fails).\n  [#2487](https://github.com/metalbear-co/mirrord/issues/2487)\n\n\n### Fixed\n\n- Fix network interface configuration not propagating to agent\n  [#2539](https://github.com/metalbear-co/mirrord/issues/2539)\n\n\n## [3.106.0](https://github.com/metalbear-co/mirrord/tree/3.106.0) - 2024-06-18\n\n\n### Added\n\n- Add cronjobs and statefulsets(/scale) to operator role setup.\n- Allows a CronJob and StatefulSet to be used as a target when copy_target is\n  enabled.\n\n\n### Changed\n\n- Put the copy_target config example in the proper place on the main complete\n  config sample. [#2508](https://github.com/metalbear-co/mirrord/issues/2508)\n- Dependencies update\n\n\n### Fixed\n\n- A few changes to medschool - refactored the code, changed the algorithm\n  taking into consideration we don't ever drop fields.\n  [#1580](https://github.com/metalbear-co/mirrord/issues/1580)\n- Kill the intproxy child process when mirrord-cli execvp fails.\n  [#2386](https://github.com/metalbear-co/mirrord/issues/2386)\n- mirrord CLI no longer incorrectly warns the user about soon license\n  expiration (renewing licenses).\n  [#2526](https://github.com/metalbear-co/mirrord/issues/2526)\n- Downgrade certificate dependency to avoid loss of support for older\n  certificates\n- Fix json snippets in configuration docs by escaping backslashes and removing\n  trailing commas.\n- Fixed crash on missing cwd/exe\n- Fixed rustls initialization.\n\n\n### Internal\n\n- Fix race in CI e2e waiting for wrong job - test_agent instead of\n  test_agent_image\n- Removed VSCode settings from repo.\n- Update configuration docs\n- Use upstream kubers\n\n\n## [3.105.0](https://github.com/metalbear-co/mirrord/tree/3.105.0) - 2024-06-12\n\n\n### Added\n\n- Add readlink hook (under experimental config).\n  [#2488](https://github.com/metalbear-co/mirrord/issues/2488)\n- Display filtered and unfiltered stolen ports when filter is set.\n- When an http filter is set and a port is bound that is not included in the\n  filtered ports, and there are no unfiltered ports specified, emit a warning.\n\n\n### Changed\n\n- Now not accepting configs with the same port in\n  `feature.network.incoming.ports` and in\n  `feature.network.incoming.http_filter.ports`.\n\n\n### Fixed\n\n- Fixed SIP issue with Turbo\n  [#2500](https://github.com/metalbear-co/mirrord/issues/2500)\n- Fixed mirrord-agent/cli protocol negotation\n\n\n### Internal\n\n- Remove baidu.com from E2E tests.\n- Update CONTRIBUTING.md\n- rust-analyzer will check all targets if (targets) installed\n\n\n## [3.104.0](https://github.com/metalbear-co/mirrord/tree/3.104.0) - 2024-06-06\n\n\n### Added\n\n- Emit a warning when the `port_mapping` field of the configuration contains an\n  unnecessary mapping of a port to itself.\n\n\n### Changed\n\n- Update syn to version 2.\n  [#1235](https://github.com/metalbear-co/mirrord/issues/1235)\n\n\n### Fixed\n\n- Fix HTTP2/1.1 translated messages dropping\n  [#2497](https://github.com/metalbear-co/mirrord/issues/2497)\n- Clean hostname/name sent to operator to fix issue of hostname with linebreaks\n- Fixed a bug where two mirrord sessions could not target the same pod while\n  stealing from different ports.\n- Fixed typo in auto-generated docs for mirrord config.\n\n\n### Internal\n\n- Added healthcheck examples to filter configuration docs. Also some other\n  minor doc fixes.\n- Fixed concurrent steal operator tests, removed obsolete error variants, fixed\n  `cargo` warnings in test code.\n\n\n## [3.103.0](https://github.com/metalbear-co/mirrord/tree/3.103.0) - 2024-05-29\n\n\n### Added\n\n- Allows a Job to be used as a target when copy_target is enabled.\n\n\n### Changed\n\n- Allows the user to set labels and annotations for the agent job and pod via\n  agent config.\n\n\n### Fixed\n\n- mirrord now prints an informative error when the targeted pod is not in\n  correct state (e.g. is not `Running` or the target container is not `ready`).\n  When picking a pod from target deployment/rollout, mirrord filters out pods\n  that are not in correct state.\n  [#462](https://github.com/metalbear-co/mirrord/issues/462)\n- Fix config printout error showing repeated messages.\n- Fixed listing targets when using operator ignoring namespace - always using\n  default\n- Fixed missing pods/deployments with more than 1 container when using operator\n  ls\n\n\n### Internal\n\n- Fixed DNS e2e flake\n- Update release action to use latest macOS\n\n\n## [3.102.0](https://github.com/metalbear-co/mirrord/tree/3.102.0) - 2024-05-22\n\n\n### Removed\n\n- Remove deprecated unstable pause feature\n  [#2458](https://github.com/metalbear-co/mirrord/issues/2458)\n\n\n### Added\n\n- Added json_log config under agent to control whether the agent produces logs\n  as normal tracing or json.\n  [#2155](https://github.com/metalbear-co/mirrord/issues/2155)\n- Added config info printout at session start.\n  [#2367](https://github.com/metalbear-co/mirrord/issues/2367)\n\n\n### Fixed\n\n- Fixed agent crashing when mirrord target is explicitly set to `targetless`.\n  [#2444](https://github.com/metalbear-co/mirrord/issues/2444)\n- Fixed confusing errors produced when creating an agent.\n\n\n### Internal\n\n- Agent compiles on macOS\n  [#2453](https://github.com/metalbear-co/mirrord/issues/2453)\n- Added `uses_operator` flag to `mirrord ext` output (to be inspected in the\n  plugin/extension).\n- Skip tests from running twice\n\n\n## [3.101.0](https://github.com/metalbear-co/mirrord/tree/3.101.0) - 2024-05-14\n\n\n### Changed\n\n- Use operator to list targets to avoid inconsistencies\n  [#1959](https://github.com/metalbear-co/mirrord/issues/1959)\n- Don't print error on permission denied\n\n\n### Fixed\n\n- Fixed a bug where outgoing connections where not intercepted from bound\n  sockets. [#2438](https://github.com/metalbear-co/mirrord/issues/2438)\n\n\n### Internal\n\n- Fix all check-rust-docs warnings\n  [#1399](https://github.com/metalbear-co/mirrord/issues/1399)\n- Use `with_env_vars` in flaky `fs_config_default` test\n  [#2163](https://github.com/metalbear-co/mirrord/issues/2163)\n- Move LicenseInfoOwned to another module\n- Update contributing guide.\n\n\n## [3.100.1](https://github.com/metalbear-co/mirrord/tree/3.100.1) - 2024-05-06\n\n\n### Fixed\n\n- mirrord-agent now catches SIGTERM signal and cleans iptables during graceful\n  deletion. [#2427](https://github.com/metalbear-co/mirrord/issues/2427)\n- Fixed ping pong logic for intproxy-agent communication. Intproxy now sends\n  pings on a fixed schedule, regardless of any other messages.\n\n\n## [3.100.0](https://github.com/metalbear-co/mirrord/tree/3.100.0) - 2024-05-05\n\n\n### Added\n\n- Added experimental, temp feature for supporting hazelcast pings\n  [#2421](https://github.com/metalbear-co/mirrord/issues/2421)\n- Provide value hint to Clap for generating shell completions for config_file\n  to\n  only resolve to files, not just first match.\n\n\n### Changed\n\n- Changed default env exclude to have `BUNDLE_WITHOUT`\n  [#2417](https://github.com/metalbear-co/mirrord/issues/2417)\n- Append more permissions to operator clusterrole\n- Improve tera templating config error to dig into source and give out more\n  details.\n- env.unset feature is now case insensitive\n\n\n## [3.99.2](https://github.com/metalbear-co/mirrord/tree/3.99.2) - 2024-04-30\n\n\n### Fixed\n\n- Fixed case where resolving DNS failed when setting HTTP filter\n  [#2411](https://github.com/metalbear-co/mirrord/issues/2411)\n\n\n## [3.99.1](https://github.com/metalbear-co/mirrord/tree/3.99.1) - 2024-04-30\n\n\n### Changed\n\n- Change agent resolver to only resolve IPv4\n- Fallback to OSS when operator license expired\n\n\n### Fixed\n\n- Fix IntelliJ Rider newest version stuck on macOS\n  [#2408](https://github.com/metalbear-co/mirrord/issues/2408)\n- Fix case were agent log message causes startup failure\n\n\n## [3.99.0](https://github.com/metalbear-co/mirrord/tree/3.99.0) - 2024-04-28\n\n\n### Added\n\n- added configuration option to control (local) hostname resolving\n  [#2395](https://github.com/metalbear-co/mirrord/issues/2395)\n- Add ability to configure DNS params for agent (timeout, attempts)\n\n\n### Changed\n\n- Change ports and http_ports in incoming configuration to be checked upon\n  mapped port instead of local\n  [#2371](https://github.com/metalbear-co/mirrord/issues/2371)\n- Read /Network locally by default on macOS\n\n\n### Fixed\n\n- Fix medschool dropping fields sometimes\n  [#1580](https://github.com/metalbear-co/mirrord/issues/1580)\n- Fix DNS resolving case on macOS + Java Netty\n  [#2400](https://github.com/metalbear-co/mirrord/issues/2400)\n\n\n## [3.98.1](https://github.com/metalbear-co/mirrord/tree/3.98.1) - 2024-04-23\n\n\n### Changed\n\n- Internal proxy now emits plain text instead of ANSI\n\n\n### Fixed\n\n- don't re-resolve when connecting to loopback on outgoing filter\n  [#2389](https://github.com/metalbear-co/mirrord/issues/2389)\n- Added `JetBrains.Debugger.Worker` to the list of known build tools, fixing\n  compatibility with Rider 2024.1.\n\n\n### Internal\n\n- Added getters to `KubernetesAPI`.\n- Improved tracing in the agent connection task.\n- Sending client certificate public key instead of fingerprint in the analytics\n  to match operator's behavior.\n\n\n## [3.98.0](https://github.com/metalbear-co/mirrord/tree/3.98.0) - 2024-04-18\n\n\n### Added\n\n- Added `create` and `delete` verbs on `pods` resource in\n  `clusterrole/mirrord-operator` for operator setup.\n\n\n### Changed\n\n- Set timeout of dns request to 1s and only attempt once\n  [#2379](https://github.com/metalbear-co/mirrord/issues/2379)\n\n\n### Fixed\n\n- Fix memory issue when binding\n\n\n### Internal\n\n- Remove `AgentManagment` because only `KubernetesAPI` implements it now and\n  there is no need for this abstraction and moved the used functions straight\n  onto `KubernetesAPI`.\n- Split off pod template to a separate `ContainerVariant` implementation used\n  inside of `JobVariant` and `JobTargetedVariant`.\n- Updates to rust nightly-2024-04-15. Also fixes some pointer\n  copy_from_nonoverlapping issues.\n\n\n## [3.97.0](https://github.com/metalbear-co/mirrord/tree/3.97.0) - 2024-04-16\n\n\n### Added\n\n- Agent now authenticates TLS connections, using a provided X509 certificate\n  (mirrord for Teams only).\n  [#2362](https://github.com/metalbear-co/mirrord/issues/2362)\n\n\n### Changed\n\n- Changed port stealing configuration:\n  1. Added new `ports` field to the `incoming` configuration. The field lists\n  ports that should be stolen/mirrored. Other ports remain local.\n  2. Changed the way `incoming.http_filter.ports` field is interpreted. Ports\n  not listed in this field are not stolen, unless listed in `incoming.ports`.\n  [#2366](https://github.com/metalbear-co/mirrord/issues/2366)\n\n\n### Fixed\n\n- Change reqwest to use rustls with native certificates to work in more cases\n\n\n## [3.96.1](https://github.com/metalbear-co/mirrord/tree/3.96.1) - 2024-04-14\n\n\n### Changed\n\n- Increase max fd in internal proxy to fix connection limit issues\n\n\n### Fixed\n\n- Fixed layer making process zombie by calling panic from hookerror, also use\n  `sigkill` instead of `sigterm`\n\n\n## [3.96.0](https://github.com/metalbear-co/mirrord/tree/3.96.0) - 2024-04-09\n\n\n### Changed\n\n- mirrord now listens on 0.0.0.0 when requested and changes address to\n  localhost only when needed.\n  [#2319](https://github.com/metalbear-co/mirrord/issues/2319)\n\n\n### Internal\n\n- Adjusted `mirrord-kube` and `mirrord-agent` crates to allow wrapping\n  client-agent connections in TLS.\n  [#2299](https://github.com/metalbear-co/mirrord/issues/2299)\n- Removed dummy span name from logs.\n\n\n## [3.95.2](https://github.com/metalbear-co/mirrord/tree/3.95.2) - 2024-04-07\n\n\n### Internal\n\n- Fix release build, don't fail release on warnings\n  Some lint warnings appear only on release build, ignore it.\n- Fix release compilation CI\n\n\n## [3.95.1](https://github.com/metalbear-co/mirrord/tree/3.95.1) - 2024-04-07\n\n\n### Fixed\n\n- Allow `target` be a `string` in the JSON Schema\n  [#2188](https://github.com/metalbear-co/mirrord/issues/2188)\n- Fixed excessive stack consumption in the `mirrord-layer` by reducing tracing\n  in release profile.\n\n\n### Internal\n\n- Fix e2e failing on release because image doesn't exist\n- Use upstream tracing\n\n\n## [3.95.0](https://github.com/metalbear-co/mirrord/tree/3.95.0) - 2024-04-02\n\n\n### Changed\n\n- mirrord now unsets the env from within the process aswell\n\n\n## [3.94.0](https://github.com/metalbear-co/mirrord/tree/3.94.0) - 2024-04-01\n\n\n### Added\n\n- New config `env.unset` that allows user to unset environment variables in the\n  executed process.\n  This is useful for unsetting env like `HTTP_PROXY`, `AWS_PROFILE` that come\n  from the local environment\n  and cause undesired behavior (because those aren't needed for deployed apps).\n  [#2260](https://github.com/metalbear-co/mirrord/issues/2260)\n\n\n## [3.93.1](https://github.com/metalbear-co/mirrord/tree/3.93.1) - 2024-03-31\n\n\n### Fixed\n\n- Fix new IDE progress breaking older plugins.\n  Three issues fixed:\n  1. Show the new progress only when env var is set (to be set in newer IDE\n  versions).\n  2. Multi pod warning was showing everytime when no operator, not only when\n  targetting a deployment + no operator.\n  3. Show the message for rollouts as well.\n  [#2339](https://github.com/metalbear-co/mirrord/issues/2339)\n\n\n### Internal\n\n- Update Frida version to 16.2.1\n\n\n## [3.93.0](https://github.com/metalbear-co/mirrord/tree/3.93.0) - 2024-03-31\n\n\n### Added\n\n- Added handling HTTP upgrades in filtered connections (`mirrord-agent`).\n  Refactored TCP stealer code.\n  [#2270](https://github.com/metalbear-co/mirrord/issues/2270)\n- Add a new diagnostic command to calculate mirrord session latency\n\n\n### Changed\n\n- Changed `agent.image` config to also accept an extended version where you may\n  specify both _registry_ and _tag_ with `agent.image.registry` and\n  `agent.image.tag`.\n- Proxy errors now don't propagate back to libc but exit with a message\n- `use_proxy` behavior is now setting the proxy env to empty value instead of\n  unsetting. This should help with cases where\n  we need it to propogate to the extensions.\n\n\n### Fixed\n\n- Internal proxy and agent now properly handle connection shutdowns.\n  [#2309](https://github.com/metalbear-co/mirrord/issues/2309)\n- Fix some open/fd potential issues\n- Fixed the display of agent startup errors to the user.\n- Fixed timeout set on new internal proxy connection in `fork` detour.\n\n\n### Internal\n\n- Adds new message type `IdeMessage`. Allows us to send messages to the IDE\n  that should be shown in notification boxes, with buttons/actions.\n- Change design around analyticsreporter to be more robust/clean\n- Prepared an e2e test for stealing WebSockets connections with an HTTP filter\n  set.\n\n\n## [3.92.1](https://github.com/metalbear-co/mirrord/tree/3.92.1) - 2024-03-17\n\n\n### Removed\n\n- Removed problematic DNS cache from internal proxy.\n\n\n### Fixed\n\n- Fixed a bug with handling hints passed to `getaddrinfo` function.\n\n\n### Internal\n\n- stealer to steal in incoming mode typo\n  [#docs-incoming-stealer](https://github.com/metalbear-co/mirrord/issues/docs-incoming-stealer)\n- Add `kuma-sidecar` `kuma-init` to default list of skipped containers. (no\n  need to target these containers)\n  [#skip-kuma-containers](https://github.com/metalbear-co/mirrord/issues/skip-kuma-containers)\n- Added a unit test to internal proxy DNS cache. Added more tracing to internal\n  proxy.\n\n\n## [3.92.0](https://github.com/metalbear-co/mirrord/tree/3.92.0) - 2024-03-13\n\n\n### Added\n\n- Added support for `statx` function.\n  [#2204](https://github.com/metalbear-co/mirrord/issues/2204)\n\n\n### Fixed\n\n- Fix incoming network interception via port-forward when \"stealing\" traffic\n  with a mesh like linkerd or istio (Using the same `OUTPUT` iptable rules for\n  both meshed and not meshed networks)\n  [#2255](https://github.com/metalbear-co/mirrord/issues/2255)\n- Add Kuma mesh detection and support to mirrord-agent.\n  [#2296](https://github.com/metalbear-co/mirrord/issues/2296)\n- Added sidecar exclusion for kuma mesh, fixing issues running in that setup\n\n\n## [3.91.0](https://github.com/metalbear-co/mirrord/tree/3.91.0) - 2024-03-05\n\n\n### Added\n\n- Adds operator session management commands to mirrord-cli, these are: `mirrord\n  operator session kill-all`, `mirrord operator session kill --id {id}`, and\n  the hidden `mirrrod operator session retain-active`.\n  [#217](https://github.com/metalbear-co/mirrord/issues/217)\n- Notify user on license validity.\n  [#382](https://github.com/metalbear-co/mirrord/issues/382)\n\n\n### Changed\n\n- Adds a new `PolicyRule` for `delete` and `deletecollection` of `sessions` for\n  `mirrord operator setup`.\n  [#456](https://github.com/metalbear-co/mirrord/issues/456)\n- Change pause feature from unstable to deprecated\n- Increased size of buffers used by TCP steal to read incoming streams (from 4k\n  to 64k in the agent, from 1k to 64k in the internal proxy).\n- Increased size of buffers used by outgoing feature to read streams (from 4k\n  to 64k in the agent, from 1k to 64k in the internal proxy).\n\n\n### Fixed\n\n- Fixed a bug where `gethostbyname` calls where intercepted regardless of the\n  remote dns feature status.\n  [#2281](https://github.com/metalbear-co/mirrord/issues/2281)\n- Fixed a bug where non-existent hosts in outgoing filter would prevent the\n  application from initiating outgoing connections.\n  [#2283](https://github.com/metalbear-co/mirrord/issues/2283)\n- Remove special handling for DNS when dealing with UDP outgoing sockets\n  (manual UDP resolving).\n  [#2289](https://github.com/metalbear-co/mirrord/issues/2289)\n\n\n### Internal\n\n- Fixed lints in hook macros.\n\n\n## [3.90.0](https://github.com/metalbear-co/mirrord/tree/3.90.0) - 2024-02-27\n\n\n### Added\n\n- Add agent configuration to use nftables instead of iptables-legacy to make it\n  work in mesh that uses nftables.\n  [#2272](https://github.com/metalbear-co/mirrord/issues/2272)\n- The agent now processes all DNS queries concurrently. Also, client sessions\n  in the agent do not block on the DNS queries.\n\n\n### Changed\n\n- change kubeconfig path expansion to use env as well\n  [#2262](https://github.com/metalbear-co/mirrord/issues/2262)\n- Increase internal proxy timeout from 5 seconds to 10 seconds to fix long\n  agent ops\n\n\n### Internal\n\n- Add information how to use config file in config docs\n\n\n## [3.89.1](https://github.com/metalbear-co/mirrord/tree/3.89.1) - 2024-02-22\n\n\n### Fixed\n\n- Fixed issue with Golang calling fstat on Linux causing crash\n  [#2254](https://github.com/metalbear-co/mirrord/issues/2254)\n\n\n## [3.89.0](https://github.com/metalbear-co/mirrord/tree/3.89.0) - 2024-02-22\n\n\n### Changed\n\n- Change intproxy log to append\n- use_proxy configuration now applies to mirrord operator status, and mirrord\n  ls\n\n\n## [3.88.0](https://github.com/metalbear-co/mirrord/tree/3.88.0) - 2024-02-18\n\n\n### Added\n\n- Add log level and log destination for int proxy\n  [#2246](https://github.com/metalbear-co/mirrord/issues/2246)\n\n\n### Changed\n\n- 1. mirrord CLI now does not check target type when the `copy_target` feature\n  is enabled. The check is now done only in the operator.\n  2. `mirrord operator setup` not includes permissions to read and change\n  rollouts scale.\n\n\n### Fixed\n\n- Incoming traffic was being mirrord when set to `false`.\n\n\n## [3.87.0](https://github.com/metalbear-co/mirrord/tree/3.87.0) - 2024-02-15\n\n\n### Removed\n\n- Remove pause tests as part of deprecation\n\n\n### Added\n\n- Changed internal proxy to allow for HTTP upgrades with filtered HTTP steal.\n  [#2224](https://github.com/metalbear-co/mirrord/issues/2224)\n- Added support for selecting malfunctioning targets with `copy_target`\n  feature. [#2239](https://github.com/metalbear-co/mirrord/issues/2239)\n- Added configuration option `feature.env.load_from_process`, which allows for\n  changing the way mirrord loads environment variables from the remote target.\n\n\n### Fixed\n\n- Add missing permissions needed by operator for copy and scaledown\n\n\n### Internal\n\n- Add IDE release e2e to the ci-success job\n  [#2184](https://github.com/metalbear-co/mirrord/issues/2184)\n- Change cleanup to delete without grace\n- Removed `#![allow(incomplete_features)]` from the code - no longer needed.\n- Reorganized `TcpSubscriptionStealer` code - extracted port subscriptions into\n  a separate struct.\n\n\n## [3.86.1](https://github.com/metalbear-co/mirrord/tree/3.86.1) - 2024-02-05\n\n\n### Fixed\n\n- Added `runAsNonRoot: false` and `runAsUser: 0` to the security context of an\n  epheremal agent when running privileged (to prevent overriding these values\n  with values from the pod spec).\n- Disabled unix sockets being wrongfully sent to the agent when socket isn't\n  connected\n\n## [3.86.0](https://github.com/metalbear-co/mirrord/tree/3.86.0) - 2024-01-29\n\n\n### Changed\n\n- `JAVA_TOOL_OPTIONS` is excluded by default from the environment variables\n  that are fetched from the target.\n\n\n### Internal\n\n- Update links to new docs\n\n\n## [3.85.1](https://github.com/metalbear-co/mirrord/tree/3.85.1) - 2024-01-29\n\n\n### Fixed\n\n- Running `mirrod exec go run EXECUTABLE` on macOS with go1.21.\n  [#2202](https://github.com/metalbear-co/mirrord/issues/2202)\n- Fixed a compilation bug in `mirrord-operator` crate tests.\n\n\n## [3.85.0](https://github.com/metalbear-co/mirrord/tree/3.85.0) - 2024-01-24\n\n\n### Added\n\n- Added license subscription id to operator status CRD. Adjusted\n  `CredentialStore` to preserve signing key pair for the same operator license\n  subscription id. [#2190](https://github.com/metalbear-co/mirrord/issues/2190)\n- CLI now sends machine host + username to show in mirrord operator status\n  (not sent to our cloud!)\n- Report port locks and filters in operator status\n\n\n### Changed\n\n- Change configuration parsing to be strict unallowing unknown fields\n- Cluster DNS resolving now happens by nameserver order rather by statistics\n\n\n### Fixed\n\n- Running R on macOS.\n  [#2186](https://github.com/metalbear-co/mirrord/issues/2186)\n- Running scripts with whitespaces in the shebang.\n  [#2193](https://github.com/metalbear-co/mirrord/issues/2193)\n\n\n### Internal\n\n- Allow both `x86_64` and `arm64` when patching thin binaries.\n  [#2186](https://github.com/metalbear-co/mirrord/issues/2186)\n\n\n## [3.84.1](https://github.com/metalbear-co/mirrord/tree/3.84.1) - 2024-01-19\n\n\n### Fixed\n\n- Add support for shebang containing spaces like asdf's node does\n  [#2181](https://github.com/metalbear-co/mirrord/issues/2181)\n\n\n## [3.84.0](https://github.com/metalbear-co/mirrord/tree/3.84.0) - 2024-01-18\n\n\n### Added\n\n- Report namespace for operator sessions\n\n\n### Fixed\n\n- add preadv and readv to fix erlang file reading\n  [#2178](https://github.com/metalbear-co/mirrord/issues/2178)\n\n\n## [3.83.0](https://github.com/metalbear-co/mirrord/tree/3.83.0) - 2024-01-11\n\n\n### Changed\n\n- Filesystem: File not found default filter happens after checking local filter\n- The `copy_target` feature is now officialy stable.\n- `mirrord operator status` reports active copy targets.\n\n\n### Fixed\n\n- Remove guard from dlopen, making calls from within dlopen hookable,\n  potentially fixing issues\n\n\n### Internal\n\n- Moved the docs from `CopyTargetFileConfig` to `CopyTargetConfig` so that\n  medschool reads them.\n  [#2164](https://github.com/metalbear-co/mirrord/issues/2164)\n- Fixed layer panics in trace only mode.\n\n\n## [3.82.0](https://github.com/metalbear-co/mirrord/tree/3.82.0) - 2024-01-08\n\n\n### Removed\n\n- Removed `http_header_filter`. Please use `http_filter` with key\n  `header_filter` instead.\n\n\n### Added\n\n- `mirrord operator setup` defines a `MirrordPolicy` CRD so that admins can\n  block certain features by creating policies. When recieving a forbidden error\n  from the operator for trying to steal traffic, mirrord shows an error and\n  exits.\n\n\n### Fixed\n\n- Added userextras/oid to mirrord operator role to solve issues in some AKS\n  clusters [#2152](https://github.com/metalbear-co/mirrord/issues/2152)\n\n\n### Internal\n\n- Add function to load agentfileconfig from path\n\n\n## [3.81.0](https://github.com/metalbear-co/mirrord/tree/3.81.0) - 2024-01-01\n\n\n### Changed\n\n- Changed setup to not create self signed, letting operator fallback to it\n  automatically on runtime\n- Update dependencies\n\n\n### Fixed\n\n- Fix opendir not being hooked on macOS arm64\n\n\n### Internal\n\n- Deprecate go 18, enable go 21\n- Fix some test labels, separate tests by flags, update contributing guide\n- Re-add outgoing traffic with many requests tests\n\n\n## [3.80.0](https://github.com/metalbear-co/mirrord/tree/3.80.0) - 2023-12-27\n\n\n### Changed\n\n- Remove unstable from ignore localhost\n\n\n### Fixed\n\n- Allow license key that starts with -\n  [#2140](https://github.com/metalbear-co/mirrord/issues/2140)\n- Fix job lingering by exiting always successfuly on agent\n\n\n## [3.79.2](https://github.com/metalbear-co/mirrord/tree/3.79.2) - 2023-12-24\n\n\n### Fixed\n\n- Added hook for realpath function, fixing issues on files not found in Java\n\n\n## [3.79.1](https://github.com/metalbear-co/mirrord/tree/3.79.1) - 2023-12-23\n\n\n### Fixed\n\n- Fix dirfd crashing on macOS\n\n\n## [3.79.0](https://github.com/metalbear-co/mirrord/tree/3.79.0) - 2023-12-21\n\n\n### Removed\n\n- Remove waitlist signup from CLI\n\n\n### Added\n\n- Added new `teams` command to the CLI.\n- Remove support for old cri-o, use new CRI API (v1)\n\n\n### Fixed\n\n- Uses the `syscalls` crate to handle calling the syscalls for go. And adds\n  `pwrite64`, `pread64`, `fsync` and `fdatasync` hooks for go.\n  [#2099](https://github.com/metalbear-co/mirrord/issues/2099)\n\n\n### Internal\n\n- Debug instructions for intproxy in contributer guide.\n- Flush outgoing the console loggers after each logs so that we can see more\n  logs before the layer or the intproxy exit when debugging.\n\n\n## [3.78.2](https://github.com/metalbear-co/mirrord/tree/3.78.2) - 2023-12-14\n\n\n### Fixed\n\n- Fixed config verification in IDE context when the config does not specify the\n  target but uses the `scale_down` feature.\n\n\n## [3.78.1](https://github.com/metalbear-co/mirrord/tree/3.78.1) - 2023-12-13\n\n\n### Fixed\n\n- Removed confusing error from `mirrord exec` progress.\n  [#2115](https://github.com/metalbear-co/mirrord/issues/2115)\n- Support binding [::] by resolving to ipv4 unspecified. Fix gRPC Python\n  running in Docker\n  [#2117](https://github.com/metalbear-co/mirrord/issues/2117)\n\n\n## [3.78.0](https://github.com/metalbear-co/mirrord/tree/3.78.0) - 2023-12-12\n\n\n### Fixed\n\n- Fix create react apps by adding node related files to default local\n  [#2074](https://github.com/metalbear-co/mirrord/issues/2074)\n- Fixed an issue with internal proxy timing out when the user application\n  spawns lengthy build processes.\n  [#2101](https://github.com/metalbear-co/mirrord/issues/2101)\n\n\n### Internal\n\n- Adds a new trait `LicenseValidity` implemented for `DateTime` to help us when\n  checking a license's validity. Relevant for\n  [#346](https://github.com/metalbear-co/operator/issues/346).\n- Update rust to nightly-2023-12-07.\n\n\n## [3.77.1](https://github.com/metalbear-co/mirrord/tree/3.77.1) - 2023-12-11\n\n\n### Fixed\n\n- Fix asdf compatability by adjusting local files read defaults\n  [#2051](https://github.com/metalbear-co/mirrord/issues/2051)\n\n\n## [3.77.0](https://github.com/metalbear-co/mirrord/tree/3.77.0) - 2023-12-07\n\n\n### Added\n\n- `mirrord verify-config` now outputs a list of available target types.\n  [#2096](https://github.com/metalbear-co/mirrord/issues/2096)\n\n\n### Fixed\n\n- Changed `operator` config to be optional. If the option is set to `true`,\n  mirrord always uses the operator and aborts in case of failure. If the option\n  is set to `false`, mirrord does not attempt to use the operator. If the\n  option is not set at all, mirrord attempts to use the operator, but does not\n  abort in case it could not be found.\n- Fixed config verification in IDE context when `copy_target` feature is used.\n\n\n### Internal\n\n- Reduce some code duplication around protocol and agent connection.\n\n\n## [3.76.0](https://github.com/metalbear-co/mirrord/tree/3.76.0) - 2023-12-04\n\n\n### Added\n\n- Added support for connecting to the cluster with an HTTP proxy.\n  [#2087](https://github.com/metalbear-co/mirrord/issues/2087)\n\n\n### Changed\n\n- Improved incoming config docs\n\n\n### Fixed\n\n- Improved handling of operator-related errors.\n  [#2049](https://github.com/metalbear-co/mirrord/issues/2049)\n\n\n## [3.75.3](https://github.com/metalbear-co/mirrord/tree/3.75.3) - 2023-11-23\n\n\n### Added\n\n- Added new configuration 'use_proxy' that lets user disable usage of http/s\n  proxy by mirrord even when env is set\n\n\n### Fixed\n\n- Changed the way `targetless` is printed in `mirrord verify-config` to allow\n  the IDEs to properly show target selection dialogs.\n\n\n## [3.75.2](https://github.com/metalbear-co/mirrord/tree/3.75.2) - 2023-11-22\n\n\n### Fixed\n\n- Fixed issues with mirroring incoming TCP connections when targeting multi-pod\n  deployments. [#2078](https://github.com/metalbear-co/mirrord/issues/2078)\n\n\n## [3.75.1](https://github.com/metalbear-co/mirrord/tree/3.75.1) - 2023-11-14\n\n\n### Fixed\n\n- Add a hook for\n  [gethostbyname](https://www.man7.org/linux/man-pages/man3/gethostbyname.3.html)\n  to allow erlang/elixir to resolve DNS.\n  [#2055](https://github.com/metalbear-co/mirrord/issues/2055)\n- Change spammy connect log's level from info to trace.\n\n\n### Internal\n\n- Documentation of `env` config pattern matching.\n\n\n## [3.75.0](https://github.com/metalbear-co/mirrord/tree/3.75.0) - 2023-11-08\n\n\n### Added\n\n- Added 'copy pod' operator feature to the CLI.\n  [#1974](https://github.com/metalbear-co/mirrord/issues/1974)\n- Added option to scale down target deployment when using `copy target`\n  feature. [#2053](https://github.com/metalbear-co/mirrord/issues/2053)\n\n\n### Fixed\n\n- Don't drop mutex in child on fork_detour, fixes bug with elixir.\n  [#2047](https://github.com/metalbear-co/mirrord/issues/2047)\n- Fixed `port_mapping` feature.\n  [#2058](https://github.com/metalbear-co/mirrord/issues/2058)\n- Local file filter now applies to directory listing [regex] and not just\n  underlying files\n\n\n### Internal\n\n- Improved crates structure around internal proxy and mirrord console.\n  [#2039](https://github.com/metalbear-co/mirrord/issues/2039)\n\n\n## [3.74.1](https://github.com/metalbear-co/mirrord/tree/3.74.1) - 2023-10-31\n\n\n### Fixed\n\n- Support for cluster information in exec plugin (`KUBERNETES_EXEC_INFO`)\n  [#2037](https://github.com/metalbear-co/mirrord/issues/2037)\n- Fixed logging using `mirrord-console`.\n\n\n## [3.74.0](https://github.com/metalbear-co/mirrord/tree/3.74.0) - 2023-10-27\n\n\n### Added\n\n- Added source identifier to waitlist register\n\n\n### Fixed\n\n- `tokio` runtime dropped from layer.\n  [#1952](https://github.com/metalbear-co/mirrord/issues/1952)\n\n\n### Internal\n\n- Fix the markdown in one section of the FS configuration documentation.\n- Fixed python e2e test not running - removed it since it never worked and\n  adapting it would take time.\n\n\n## [3.73.1](https://github.com/metalbear-co/mirrord/tree/3.73.1) - 2023-10-24\n\n\n### Fixed\n\n- Fixed `KUBERNETES_EXEC_INFO` environment variable passed to `kubectl`\n  authentication plugins.\n\n\n## [3.73.0](https://github.com/metalbear-co/mirrord/tree/3.73.0) - 2023-10-23\n\n\n### Added\n\n- Added k0s support - add k0s containerd socket path.\n  [#2014](https://github.com/metalbear-co/mirrord/issues/2014)\n\n\n### Fixed\n\n- Clarify more about the pre-defined FS exceptions in docs, link to lists.\n  [#2020](https://github.com/metalbear-co/mirrord/issues/2020)\n\n\n### Internal\n\n- Move path pattern default sets to separate files so that we can link to them\n  from docs. [#2019](https://github.com/metalbear-co/mirrord/issues/2019)\n\n\n## [3.72.1](https://github.com/metalbear-co/mirrord/tree/3.72.1) - 2023-10-18\n\n\n### Fixed\n\n- Added `--mesh` option under `cli::Mode::Ephemeral`, allowing the agent to run\n  in a mesh context with an ephemeral target.\n  [#2009](https://github.com/metalbear-co/mirrord/issues/2009)\n\n\n## [3.72.0](https://github.com/metalbear-co/mirrord/tree/3.72.0) - 2023-10-12\n\n\n### Added\n\n- SOCKS5 proxy is now supported.\n  [#1734](https://github.com/metalbear-co/mirrord/issues/1734)\n\n\n### Fixed\n\n- Implemented missing hooks for `readdir` and `readdir64`.\n  [#2001](https://github.com/metalbear-co/mirrord/issues/2001)\n\n\n## [3.71.2](https://github.com/metalbear-co/mirrord/tree/3.71.2) - 2023-10-10\n\n\n### Fixed\n\n- Reverted breaking change in CLI for config verify\n  [#1993](https://github.com/metalbear-co/mirrord/issues/1993)\n- Adding some e2e tests for  to protect against breaking changes in the cli.\n  [#1997](https://github.com/metalbear-co/mirrord/issues/1997)\n\n\n### Internal\n\n- Add homepage link to README\n- Example in style guide conforms with the rule it's supposed to explain.\n\n\n## [3.71.1](https://github.com/metalbear-co/mirrord/tree/3.71.1) - 2023-10-04\n\n\n### Fixed\n\n- Adds the optional `--ide` flag to `mirrord verify-config [--ide] --path\n  {/config/path}`, turning some errors into warnings (target related).\n  [#1979](https://github.com/metalbear-co/mirrord/issues/1979)\n\n\n## [3.71.0](https://github.com/metalbear-co/mirrord/tree/3.71.0) - 2023-10-03\n\n\n### Added\n\n- Add ability to override container resource requests/limits for job agents via\n  `agent.resources` config.\n  [#1983](https://github.com/metalbear-co/mirrord/issues/1983)\n\n\n### Fixed\n\n- Propagate to the agent that we're in a mesh context (moved `MeshVendor` to a\n  common crate), and handle the special case for `istio`, where the sniffer\n  should capture traffic on the `lo` interface.\n  [#1963](https://github.com/metalbear-co/mirrord/issues/1963)\n\n\n### Internal\n\n- Bump dependencies\n- Remove quotes around regex in release branch check job\n\n\n## [3.70.0](https://github.com/metalbear-co/mirrord/tree/3.70.0) - 2023-09-27\n\n\n### Added\n\n- Added templating for mirrord config using Tera engine.\n  [#1817](https://github.com/metalbear-co/mirrord/issues/1817)\n\n\n### Fixed\n\n- Running `mix` works now (bug was calling `lstat` in `stat` bypass).\n  [#1967](https://github.com/metalbear-co/mirrord/issues/1967)\n- Fix progress message shows wrong latest version\n  [#1972](https://github.com/metalbear-co/mirrord/issues/1972)\n\n\n### Internal\n\n- Remove `run_as_user` from operator deployment's `security_context`.\n\n\n## [3.69.0](https://github.com/metalbear-co/mirrord/tree/3.69.0) - 2023-09-26\n\n\n### Removed\n\n- Remove spammy messages from progress\n  [#1934](https://github.com/metalbear-co/mirrord/issues/1934)\n\n\n### Added\n\n- Added the ability to specify targetless in config file, to allow\n  non-interactive targetless in IDEs\n  [#1962](https://github.com/metalbear-co/mirrord/issues/1962)\n\n\n### Changed\n\n- Change targetless + steal mode to warning instead of error.\n- Changed file filter to exclude jar files from being read remote by default\n  [#1968](https://github.com/metalbear-co/mirrord/issues/1968)\n\n\n### Fixed\n\n- Fixes selecting container to use when using operator\n\n\n## [3.68.0](https://github.com/metalbear-co/mirrord/tree/3.68.0) - 2023-09-19\n\n\n### Added\n\n- New subcommand for generating shell completions for\n  bash/fish/zsh/powershell/elvish\n  [#1947](https://github.com/metalbear-co/mirrord/issues/1947)\n\n\n### Fixed\n\n- Fix mirrord-cli verify-config command not serializing failures correctly due\n  to serde not being able to serialize newtype pattern in tagged unions.\n  [#1840](https://github.com/metalbear-co/mirrord/issues/1840)\n\n\n### Internal\n\n- CI: Add quotes to branch name in check_if_release_branch\n  [#add-quotes-ci](https://github.com/metalbear-co/mirrord/issues/add-quotes-ci)\n- Bump and clean depenedencies in our code and in tests\n- Remove process feature from Tokio in layer package\n\n\n## [3.67.0](https://github.com/metalbear-co/mirrord/tree/3.67.0) - 2023-09-13\n\n\n### Added\n\n- Add new command `mirrord verify-config [path]` to the mirrord-cli. It\n  verifies a mirrord config file producing a tool friendly output.\n  [#1840](https://github.com/metalbear-co/mirrord/issues/1840)\n\n\n### Fixed\n\n- Support mirroring existing sessions by introducing an HTTP check when the\n  sniffer receives a tcp packet.\n  [#1317](https://github.com/metalbear-co/mirrord/issues/1317)\n\n\n### Internal\n\n- Run IDE e2e tests on release.\n  [#1893](https://github.com/metalbear-co/mirrord/issues/1893)\n- Add `document` method on `KeyPair` to access pem encoded key.\n\n\n## [3.66.0](https://github.com/metalbear-co/mirrord/tree/3.66.0) - 2023-09-12\n\n\n### Added\n\n- Added support for pausing ephemeral containers. This feature requires the\n  agent to have privileged access.\n  [#1358](https://github.com/metalbear-co/mirrord/issues/1358)\n\n\n### Changed\n\n- Add ruby related ENV to the default exclude list\n\n\n### Internal\n\n- Add concurrent steal tests - operator\n\n\n## [3.65.2](https://github.com/metalbear-co/mirrord/tree/3.65.2) - 2023-09-10\n\n\n### Changed\n\n- Add ruby related ENV to the default exclude list\n\n\n### Fixed\n\n- Fixed connecting to unspecified ip i.e 0.0.0.0\n  [#1928](https://github.com/metalbear-co/mirrord/issues/1928)\n\n\n### Internal\n\n- Refactor code to match newest Rust nightly - 2023-09-07\n  [#1457](https://github.com/metalbear-co/mirrord/issues/1457)\n- Update tj-actions to v39 to check for fixes for similar hashes\n\n\n## [3.65.1](https://github.com/metalbear-co/mirrord/tree/3.65.1) - 2023-09-07\n\n\n### Changed\n\n- Add some Ruby env to excluded: GEM_HOME, GEM_PATH\n  [#1892](https://github.com/metalbear-co/mirrord/issues/1892)\n\n\n### Fixed\n\n- Disable opendir hook on aarch macOS since it crashes due to arm64e issues\n  [#1920](https://github.com/metalbear-co/mirrord/issues/1920)\n\n\n## [3.65.0](https://github.com/metalbear-co/mirrord/tree/3.65.0) - 2023-09-06\n\n\n### Added\n\n- Add hooks for `opendir`, `readdir64_r`, `__lxstat`, `__lxstat64`,\n  `__xstat64`. Also contains a refactor of the `*stat` family of hooks (they\n  now call a shared function), and `openat64` as its own function.\n  [#1899](https://github.com/metalbear-co/mirrord/issues/1899)\n\n\n### Changed\n\n- CLI: Change operator setup to fetch from API version of operator to install\n- Don't error on agent ready missing absent, add retry in connection to\n  upstream agent\n\n\n### Fixed\n\n- Fixed agent crashing on flush connections not enabled\n  [#1904](https://github.com/metalbear-co/mirrord/issues/1904)\n- CI: run macOS clippy on all of the codebase\n- Fixed pause flakiness by improving our cleanup process [using watch]\n\n\n### Internal\n\n- CLI: Change to use drain instead of hoping sleep would help\n- Enable ephemeral containers for tests on operator\n\n\n## [3.64.2](https://github.com/metalbear-co/mirrord/tree/3.64.2) - 2023-09-05\n\n\n### Changed\n\n- Changed the targeted and non targeted flows for creating agent.\n  [#1844](https://github.com/metalbear-co/mirrord/issues/1844)\n- Add info about errors to TELEMETRY.md\n\n\n### Fixed\n\n- Change agent to use current thread runtime, multi thread is enabled by\n  mistake.\n  * Added a sleep before exiting both in layer and agent to allow\n  `tokio::spawn` tasks spawned from `Drop` finish.\n  * Changed implementation of pause guard to use `tokio::spawn` - fixes pause\n  in combination with above change.\n- Fix analytics not being sent on drop\n\n\n### Internal\n\n- Refactor [if Some / else None] pattern to use [bool.then()] in medschool.\n  [#1890](https://github.com/metalbear-co/mirrord/issues/1890)\n- Add a \"Try to reduce the use of non-optional `Option`s\" rule to the mirrord\n  style guide.\n- Label mirroring integration tests as flaky\n\n\n## [3.64.1](https://github.com/metalbear-co/mirrord/tree/3.64.1) - 2023-09-03\n\n\n### Fixed\n\n- Remove extra message of `{\"type\":\"FinishedTask\",\"name\":\"mirrord preparing to\n  launch\",\"success\":true,\"message\":null}` that causes breakage in extensions.\n\n\n## [3.64.0](https://github.com/metalbear-co/mirrord/tree/3.64.0) - 2023-09-02\n\n\n### Added\n\n- Warn when running in a mesh service with mirror mode.\n  [#1768](https://github.com/metalbear-co/mirrord/issues/1768)\n\n\n### Fixed\n\n- Fixed detecting operator not found as an error\n  [#1868](https://github.com/metalbear-co/mirrord/issues/1868)\n- Update hyper and hyper-util to fix double select call (and properly handle\n  large http traffic).\n  [#1869](https://github.com/metalbear-co/mirrord/issues/1869)\n- Fixed ongoing connections not being stolen by changing our flush mechanism -\n  add a rule to drop marked connections and then mark existing connections when\n  starting to steal.\n  [#1870](https://github.com/metalbear-co/mirrord/issues/1870)\n- Fixed panic on crash analytics\n  [#1872](https://github.com/metalbear-co/mirrord/issues/1872)\n- Fixed showing error on each file not found triggered by the file not found\n  configuration\n- Regex meta characters are now escaped in `$HOME` (`not-found` file filter).\n\n\n### Internal\n\n- Set fork env in integration tests using uvicorn\n  [#1627](https://github.com/metalbear-co/mirrord/issues/1627)\n- Fix complete_passthrough response flake\n  [#1811](https://github.com/metalbear-co/mirrord/issues/1811)\n- Fix typo in flush connections conntrack command\n\n\n## [3.63.0](https://github.com/metalbear-co/mirrord/tree/3.63.0) - 2023-08-28\n\n\n### Added\n\n- Add the ability to send analytics on errors and not only on successful runs.\n  [#1785](https://github.com/metalbear-co/mirrord/issues/1785)\n- Report back internal proxy error stream to cli\n  [#1855](https://github.com/metalbear-co/mirrord/issues/1855)\n\n\n### Changed\n\n- Changed config unstable/deprecations to be aggregated with other config\n  warnings [#1860](https://github.com/metalbear-co/mirrord/issues/1860)\n\n\n### Fixed\n\n- `not-found` file filter fixed to only match files inside the `$HOME`\n  directory. [#1863](https://github.com/metalbear-co/mirrord/issues/1863)\n- Fix openshift detection taking too long by querying a subset instead of all\n  APIs\n\n\n### Internal\n\n- CI Improvements:\n  - Unify lint and integration for macOS to save cache and runner.\n  - Remove trace logging from integration tests on macos\n  - use node 18 for testing since installing 19 in CI takes hours.\n  - remove `build_mirrord` job - quite useless as it's used only in other\n  workflow, so have it there and re-use cache\n    also save some cache,\n  - specify target for all cargo invocations to re-use cache efficiently.\n  - fix flake with node server closing before time\n- Fix regression in kube api blocking operator from compiling\n- Reorganize the CI with the following objective of unifying as much as we can\n  CI that can run on the same host, this is to have less caches and have better\n  compilation time (as there's overlap). Things done:\n\n  - Remove the build layer CI, since we now have an integration tests that\n  check it + clippy for aarch darwin / Linux\n  - Make clippy run for all of the project for aarch64 linux instead of agent\n  only\n  - Revert removal of Rust cache from e2e (was by mistake)\n  - Don't use \"cache\" for other Gos since it will try to overwrite and have bad\n  results.\n\n\n## [3.62.0](https://github.com/metalbear-co/mirrord/tree/3.62.0) - 2023-08-26\n\n\n### Added\n\n- Add analytics collection to operator session information.\n  [#1805](https://github.com/metalbear-co/mirrord/issues/1805)\n- Added an extra `not-found` file filter to improve experience when using cloud\n  services under mirrord.\n  [#1694](https://github.com/metalbear-co/mirrord/issues/1694)\n\n\n### Changed\n\n- Update telemetry.md with new info about mirrord for Teams\n  [#1837](https://github.com/metalbear-co/mirrord/issues/1837)\n- Changed keep alive to happen from internal proxy to support cases where layer\n  process is stuck [breakpoint/etc]\n  [#1839](https://github.com/metalbear-co/mirrord/issues/1839)\n- Changed CLI progress to print warnings and not only set it as the last\n  message of progress\n- Changed config verify to return aggregated warnings list for user to print\n  instead of warn in current progress - can fix issues with extension where we\n  printed to stderr.\n\n\n### Fixed\n\n- Fix ephemeral agent creation api using agent namespace instead of target.\n  Add note about agent namespace being irrelevant in ephemeral.\n- Fix macOS SIP potential issues from exec having mirrord loaded into the code\n  sign binary.\n- Fix operator setup so `MIRRORD_OPERATOR_IMAGE` will function properly.\n- Fixed issue connecting to ephemeral container when target is in different\n  namespace\n\n\n### Internal\n\n- Changed e2e to use a shared setup e2e action to leverage all GitHub caches,\n  reduce e2e time by half.\n- Changes to the CI to make it fater:\n  - Use go cache for integration test\n  - use mac-13 runner for tests\n\n\n## [3.61.0](https://github.com/metalbear-co/mirrord/tree/3.61.0) - 2023-08-22\n\n\n### Added\n\n- Support DNS resolution for the outgoing filter config.\n  [#702](https://github.com/metalbear-co/mirrord/issues/702)\n\n\n### Fixed\n\n- Fixed wrong errno being set by mirrord, fixing various flows that rely on\n  errno even when return code is ok\n  [#1828](https://github.com/metalbear-co/mirrord/issues/1828)\n\n\n## [3.60.0](https://github.com/metalbear-co/mirrord/tree/3.60.0) - 2023-08-21\n\n\n### Added\n\n- Detect and warn when cluster is openshift\n  [#1560](https://github.com/metalbear-co/mirrord/issues/1560)\n- Add missing hook for open64, fixing certificate loading on C# + Linux\n  [#1815](https://github.com/metalbear-co/mirrord/issues/1815)\n- Small changes relevant to operator for #1782.\n\n\n### Fixed\n\n- Fixed environment on ephemeral container\n  This is done by two things:\n\n  1. There was an issue where we used `self` instead of `1` to obtain env based\n  on pid.\n  2. We didn't have container runtime to use for fetching, so now we also copy\n  env from the original pod spec and set it to ours.\n  [#1818](https://github.com/metalbear-co/mirrord/issues/1818)\n\n\n### Internal\n\n- Added a missing comma in the documentation\n\n\n## [3.59.0](https://github.com/metalbear-co/mirrord/tree/3.59.0) - 2023-08-18\n\n\n### Added\n\n- Add option to run agent container as privileged - `\"agent\" : {\"privileged\":\n  true}`\n  Should help with Bottlerocket or other secured k8s environments.\n  Applicable for both job/ephemeral.\n  [#1806](https://github.com/metalbear-co/mirrord/issues/1806)\n\n\n### Fixed\n\n- Send only ResponseError::DnsLookup for all errors during DNS lookups\n  [#1809](https://github.com/metalbear-co/mirrord/issues/1809)\n\n\n### Internal\n\n- Update Frida dependency\n\n\n## [3.58.0](https://github.com/metalbear-co/mirrord/tree/3.58.0) - 2023-08-17\n\n\n### Added\n\n- Introduced hooks for sendmsg and recvmsg, so mongodb+srv protocol (Csharp)\n  may resolve DNS (implementation follows previous sendto and recvfrom patch).\n  [#1776](https://github.com/metalbear-co/mirrord/issues/1776)\n\n\n### Fixed\n\n- Fixed more complicated scenarios using Go on Linux Arm\n\n\n### Internal\n\n- Move e2e setup to a bash script\n\n\n## [3.57.2](https://github.com/metalbear-co/mirrord/tree/3.57.2) - 2023-08-16\n\n\n### Fixed\n\n- Fix crash on forks by leaking HOOK_SENDER\n  [#1792](https://github.com/metalbear-co/mirrord/issues/1792)\n- CLI now uses the json progress tracker as default.\n\n\n## [3.57.1](https://github.com/metalbear-co/mirrord/tree/3.57.1) - 2023-08-15\n\n\n### Internal\n\n- Add `nodes` and `pods/log` resource permissions to `mirrord-operator`\n  ClusterRole.\n\n\n## [3.57.0](https://github.com/metalbear-co/mirrord/tree/3.57.0) - 2023-08-15\n\n\n### Added\n\n- Add hooks for Go 1.19 >= on Linux Arm\n  [#563](https://github.com/metalbear-co/mirrord/issues/563)\n- Add node allocatabillity check to prevent OutOfPods error on agent job.\n  [#1782](https://github.com/metalbear-co/mirrord/issues/1782)\n\n\n### Changed\n\n- Incoming config now supports off mode, which is also used when `\"incoming\":\n  \"off\"`.\n  When incoming is off, listen requests go through.\n  Changed targetless to warn on listen, since bind can happen on outgoing\n  sockets as well.\n\n\n### Fixed\n\n- Replaced termspin with indicatif, fix multi line issues and refactored\n  progress. [#1664](https://github.com/metalbear-co/mirrord/issues/1664)\n\n\n### Internal\n\n- Add trace only mode for layer for easier debugging\n- Agent now prints its version in the initial \"agent ready\" message.\n\n\n## [3.56.1](https://github.com/metalbear-co/mirrord/tree/3.56.1) - 2023-08-09\n\n\n### Fixed\n\n- Add missing hook for `read$NOCANCEL`, fixes reading remote files in some\n  scenarios. [#1747](https://github.com/metalbear-co/mirrord/issues/1747)\n\n\n### Internal\n\n- Updated `hyper` version.\n  [#1774](https://github.com/metalbear-co/mirrord/issues/1774)\n\n\n## [3.56.0](https://github.com/metalbear-co/mirrord/tree/3.56.0) - 2023-08-07\n\n\n### Added\n\n- Added `internal_proxy` timeout configurations to allow users specify timeouts\n  in edge cases. [#1761](https://github.com/metalbear-co/mirrord/issues/1761)\n\n\n### Changed\n\n- Change operator / cli version mismatch to show only when mirrord is older\n  than operator\n\n\n### Fixed\n\n- Fix grpc errors caused by missing trailers on filtered http responses.\n  [#1731](https://github.com/metalbear-co/mirrord/issues/1731)\n\n\n## [3.55.2](https://github.com/metalbear-co/mirrord/tree/3.55.2) - 2023-08-06\n\n\n### Fixed\n\n- macOS - Running Go build with mirrord while Go binary is SIP protected is\n  fixed by enabling file hooks on SIP load mode.\n  [#1764](https://github.com/metalbear-co/mirrord/issues/1764)\n\n\n## [3.55.1](https://github.com/metalbear-co/mirrord/tree/3.55.1) - 2023-08-06\n\n\n### Fixed\n\n- Try to resolve an issue where internal proxy is under heavy load since bash\n  scripts does a lot of fork/exec by:\n  1. Increasing internal proxy's listen backlog (might not help on macOS)\n  2. Change internal proxy to create the upstream (agent) connection in a\n  different task, allowing it to keep accepting.\n  [#1716](https://github.com/metalbear-co/mirrord/issues/1716)\n- Fixed detecting skipped processes during layer injection.\n  [#1752](https://github.com/metalbear-co/mirrord/issues/1752)\n- Fix fork issues by changing layer runtime to be current thread\n  [#1759](https://github.com/metalbear-co/mirrord/issues/1759)\n\n\n## [3.55.0](https://github.com/metalbear-co/mirrord/tree/3.55.0) - 2023-08-03\n\n\n### Added\n\n- Add support for selecting Kubeconfig context to use by either using:\n  1. Configuration option `kube_context`.\n  2. mirrord exec argument `--context`\n  3. Environment variable `MIRRORD_KUBE_CONTEXT`\n  [#1735](https://github.com/metalbear-co/mirrord/issues/1735)\n\n\n### Changed\n\n- Add userextras/prinicipalid to operators cluster role\n- Document behavior of deployment in OSS vs mirrord for Teams\n- Skip HashiCorp Vault supporting containers\n\n\n### Fixed\n\n- Fix fork issue on macOS\n  [#1745](https://github.com/metalbear-co/mirrord/issues/1745)\n- Add access for the operator's cluster role to argoproj rollouts\n  [#1751](https://github.com/metalbear-co/mirrord/issues/1751)\n- Fixed warning on using deployment target with no operator\n\n\n### Internal\n\n- Attempt to fix fork issue on macOS by avoiding access to CF on fork\n  [#1745](https://github.com/metalbear-co/mirrord/issues/1745)\n- Add note to the HttpRequest message with information to add when we break the\n  protocol.\n- Change deployment warning to be emit on cli only\n- Refactor the organization of go hooks in preparation for support for arm\n\n\n## [3.54.1](https://github.com/metalbear-co/mirrord/tree/3.54.1) - 2023-08-01\n\n\n### Fixed\n\n- Sometimes the internal proxy doesn't flush before we do redirection then\n  caller can't read port\n  leading to \"Couldn't get port of internal proxy\"\n\n\n### Internal\n\n- Remove signal dependency from layer\n\n\n## [3.54.0](https://github.com/metalbear-co/mirrord/tree/3.54.0) - 2023-07-31\n\n\n### Added\n\n- Added mirrord-operator-user `ClusterRole` to operator setup with RBAC\n  permissions to use operator.\n  [#1428](https://github.com/metalbear-co/mirrord/issues/1428)\n\n\n### Fixed\n\n- Exclude environment variable COMPLUS_EnableDiagnostics, fixes [mirrord\n  intellij #67](https://github.com/metalbear-co/mirrord-intellij/issues/67)\n  [#1728](https://github.com/metalbear-co/mirrord/issues/1728)\n\n\n### Internal\n\n- Redirect stderr and stdout of internal proxy to /dev/null (stdout only after\n  printing port).\n  [#int-proxy-dev-null](https://github.com/metalbear-co/mirrord/issues/int-proxy-dev-null)\n\n\n## [3.53.3](https://github.com/metalbear-co/mirrord/tree/3.53.3) - 2023-07-26\n\n\n### Fixed\n\n- Add `jspawnhelper` to build-tool list & fix skip_processes detection\n  [#1709](https://github.com/metalbear-co/mirrord/issues/1709)\n- Use `shellexpand` to resolve tilde for `kubeconfig`.\n  [#1721](https://github.com/metalbear-co/mirrord/issues/1721)\n\n\n## [3.53.2](https://github.com/metalbear-co/mirrord/tree/3.53.2) - 2023-07-24\n\n\n### Fixed\n\n- Add automatic skip for build-tools `\"skip_build_tools\": boolean` to config\n  [default: True] (build-tool list: `as`, `cc`, `ld`, `go`, `air`, `asm`,\n  `cc1`, `cgo`, `dlv`, `gcc`, `git`, `link`, `math`, `cargo`, `hpack`, `rustc`,\n  `compile`, `collect2`, `cargo-watch` and `debugserver`)\n  [#1478](https://github.com/metalbear-co/mirrord/issues/1478)\n- Fix `feature.env.override` documentation \"overrides\" -> \"override\".\n  [mirrord.dev#120](https://github.com/metalbear-co/mirrord.dev/issues/120)\n- Specify default value for `agent.tolerations` in docs as json instead of\n  yaml.\n\n\n## [3.53.1](https://github.com/metalbear-co/mirrord/tree/3.53.1) - 2023-07-23\n\n\n### Changed\n\n- Changed internal proxy to drop stdout/stderr after it finishes loading\n\n\n### Internal\n\n- Fixed flakes caused by stdout/stderr not being flushed before after process\n  is done\n\n\n## [3.53.0](https://github.com/metalbear-co/mirrord/tree/3.53.0) - 2023-07-20\n\n\n### Added\n\n- Add support for `agent.tolerations` configuraion field for setting agent\n  `Toleration`s to work around `Taint`s in the cluster.\n  [#1692](https://github.com/metalbear-co/mirrord/issues/1692)\n\n\n### Changed\n\n- Added env var exclusion for `_JAVA_OPTIONS` to avoid loading remote jars or\n  settings that wouldn't work locally.\n  [#1695](https://github.com/metalbear-co/mirrord/issues/1695)\n\n\n## [3.52.1](https://github.com/metalbear-co/mirrord/tree/3.52.1) - 2023-07-19\n\n\n### Internal\n\n- Added Java Debug port detecting to use in VSCode/IntelliJ\n  [#1689](https://github.com/metalbear-co/mirrord/issues/1689)\n\n\n## [3.52.0](https://github.com/metalbear-co/mirrord/tree/3.52.0) - 2023-07-18\n\n\n### Added\n\n- Support for OIDC refresh token\n  [#1460](https://github.com/metalbear-co/mirrord/issues/1460)\n\n\n### Fixed\n\n- Fixed case where proxy can timeout since it holds a stale connection. Added\n  heartbeat to the connection handling\n- Fixed dynamic pause with operator not working - moved pause request to be\n  from internal proxy\n- Update the code to reimplement the fix but without moving the pinging source.\n\n\n### Internal\n\n- Add Cargo Chef to mirrord-agent docker image for better utilisation of cache\n  layers.\n- Reduce amount of API calls to use operator\n\n\n## [3.51.1](https://github.com/metalbear-co/mirrord/tree/3.51.1) - 2023-07-16\n\n\n### Changed\n\n- 'mirrod ls' command now no longer lists crashed pods as targets\n  [#1617](https://github.com/metalbear-co/mirrord/issues/1617)\n\n\n### Internal\n\n- Add `readinessProbe` and `livenessProbe` to operator deployment.\n- Add support for operator feature flags & new \"proxy\" verb api.\n- Remove operator pvc from setup.\n\n\n## [3.51.0](https://github.com/metalbear-co/mirrord/tree/3.51.0) - 2023-07-16\n\n\n### Added\n\n- Add outgoing traffic filter feature.\n\n  Adds a way of controlling from where outgoing traffic should go, either\n  through the remote pod, or from the local app. Can be configured with the\n  `remote` and `local` options under `feature.network.outgoing`.\n  [#702](https://github.com/metalbear-co/mirrord/issues/702)\n- mirrord configuration now allows disabling Linux capabilities for the agent\n  container. [#1662](https://github.com/metalbear-co/mirrord/issues/1662)\n- Add env to specify operator image\n\n\n### Internal\n\n- Add new error to the kube error enum needed by operator\n- Update VS Code gif in README\n\n\n## [3.50.5](https://github.com/metalbear-co/mirrord/tree/3.50.5) - 2023-07-13\n\n\n### Fixed\n\n- Make sure conntrack flushes the correct port.\n  [#1655](https://github.com/metalbear-co/mirrord/issues/1655)\n- Added `CAP_NET_RAW` Linux capability agent.\n\n\n### Internal\n\n- Use a patched (fixed) version of rasn, otherwise doing a cargo update breaks\n  compilation due to rasn-derive from rasn used in apple-codesign.\n\n\n## [3.50.4](https://github.com/metalbear-co/mirrord/tree/3.50.4) - 2023-07-11\n\n\n### Fixed\n\n- Layer now passes detected debugger port down to the child processes.\n  [#1641](https://github.com/metalbear-co/mirrord/issues/1641)\n\n\n## [3.50.3](https://github.com/metalbear-co/mirrord/tree/3.50.3) - 2023-07-11\n\n\n### Fixed\n\n- Fixed double slash in uri path on `pause/unpause` requests in agent\n  [#1638](https://github.com/metalbear-co/mirrord/issues/1638)\n- Fix agent steal crash by adding fallback to using only `PREROUTING` iptable\n  chain. [#1640](https://github.com/metalbear-co/mirrord/issues/1640)\n\n\n### Internal\n\n- Add test for operator setup command that checks that the setup passes with\n  `mirrord operator setup ... | kubectl apply --dry-run=client -f -`.\n  [#create-operator-setup-test](https://github.com/metalbear-co/mirrord/issues/create-operator-setup-test)\n- Add --prepend --input and --output args when running medschool.\n\n\n## [3.50.2](https://github.com/metalbear-co/mirrord/tree/3.50.2) - 2023-07-10\n\n\n### Changed\n\n- Changed agent job definition to tolerate everything\n  [#1634](https://github.com/metalbear-co/mirrord/issues/1634)\n\n\n### Internal\n\n- Fix a critical typo in operator setup added in 3.50.1.\n  [#setup-hotfix](https://github.com/metalbear-co/mirrord/issues/setup-hotfix)\n\n\n## [3.50.1](https://github.com/metalbear-co/mirrord/tree/3.50.1) - 2023-07-09\n\n\n### Fixed\n\n- Small fix to operator setup command.\n\n\n### Internal\n\n- We were overriding the fs mode only for the file filter, but not for the rest\n  of the config.\n\n\n## [3.50.0](https://github.com/metalbear-co/mirrord/tree/3.50.0) - 2023-07-07\n\n\n### Removed\n\n- Removed error capture error trace feature\n\n\n### Added\n\n- Add support for Argo rollout target.\n  [#1593](https://github.com/metalbear-co/mirrord/issues/1593)\n\n\n### Changed\n\n- Agent container is no longer privileged. Instead, it is given a specific set\n  of Linux capabilities: `CAP_NET_ADMIN`, `CAP_SYS_PTRACE`, `CAP_SYS_ADMIN`.\n  [#1615](https://github.com/metalbear-co/mirrord/issues/1615)\n- Changed agent job definition to include limits\n  [#1621](https://github.com/metalbear-co/mirrord/issues/1621)\n\n\n### Fixed\n\n- Running java 17.0.6-tem with mirrord.\n  [#1459](https://github.com/metalbear-co/mirrord/issues/1459)\n\n\n### Internal\n\n- Add support for installing operator with online license key.\n- Cleaning kube resources after e2e tests no longer needs two runtime threads.\n\n\n## [3.49.1](https://github.com/metalbear-co/mirrord/tree/3.49.1) - 2023-07-04\n\n\n### Changed\n\n- Small optimization in file reads to avoid sending empty data\n  [#1254](https://github.com/metalbear-co/mirrord/issues/1254)\n- Changed internal proxy to close after 5s of inactivity instead of 1\n- use Frida's replace_fast in Linux Go hooks\n\n\n### Fixed\n\n- Child processes of python application would hang after a fork without an\n  exec. [#1588](https://github.com/metalbear-co/mirrord/issues/1588)\n\n\n### Internal\n\n- Change locks in test process to be async to avoid deadlocks\n- Fix listen ports flakiness by handling shutdown messages if they arrive\n- Use Tokio current thread runtime in tests as it seems to be less flaky\n- Use current thread Tokio runtime in fork integration test\n\n\n## [3.49.0](https://github.com/metalbear-co/mirrord/tree/3.49.0) - 2023-07-03\n\n\n### Added\n\n- Added new analytics, see TELEMETRY.md for more details.\n\n\n### Internal\n\n- Fix some text in the operator documentation and progress reporting\n- Remove IDE instructions from CONTRIBUTING.md\n\n\n## [3.48.0](https://github.com/metalbear-co/mirrord/tree/3.48.0) - 2023-06-29\n\n\n### Added\n\n- Added Deployment to list of targets returnd from `mirrord ls`.\n  [#1503](https://github.com/metalbear-co/mirrord/issues/1503)\n\n\n### Changed\n\n- Bump rust nightly to 2023-04-19 (latest nightly with support for const std\n  traits). [#1457](https://github.com/metalbear-co/mirrord/issues/1457)\n- Change loglevel of warnings to info of logs that were mistakenly warning\n- Moved IntelliJ to its own repository and versioning\n\n\n### Fixed\n\n- Hook send_to and recv_from, leveraging our existing UDP interceptor mechanism\n  to manually resolve DNS (as expected by netty, especially relevant for\n  macos). [#1458](https://github.com/metalbear-co/mirrord/issues/1458)\n- Add new rule to the OUTPUT chain of iptables in agent to support kubectl\n  port-forward [#1479](https://github.com/metalbear-co/mirrord/issues/1479)\n- If the local user application closes a socket but continues running, we now\n  also stop mirroring/stealing from the target.\n  [#1530](https://github.com/metalbear-co/mirrord/issues/1530)\n- Add /home and /usr to the default file filter.\n  [#1582](https://github.com/metalbear-co/mirrord/issues/1582)\n- Fixed reporting EADDRINUSE as an error\n\n\n### Internal\n\n- (Operator only) Add `feature.network.incoming.on_concurrent_steal` option to\n  allow overriding port locks.\n- Improve medschool to produce more deterministic configuration.md, and\n  (mostly) fixes it dropping some configuration docs during processing.\n- Make mirrord ls deployment fetch parallel.\n- Remove unused CRD for operator and don't error on missing operator\n  credentials\n\n\n## [3.47.0](https://github.com/metalbear-co/mirrord/tree/3.47.0) - 2023-06-20\n\n\n### Added\n\n- Added `listen_ports` to `incoming` config to control what port is actually\n  being used locally\n  so mirrored/stolen ports can still be accessed locally via those. If port\n  provided by `listen_ports`\n  isn't available, application will receive `EADDRINUSE`.\n  Example configuration:\n  ```json\n  {\n      \"feature\":\n      {\n          \"incoming\": {\n              \"listen_ports\": [[80, 7111]]\n          }\n      }\n  }\n  ```\n  will make port 80 available on 7111 locally, while stealing/mirroring port\n  80. [#1554](https://github.com/metalbear-co/mirrord/issues/1554)\n\n\n### Changed\n\n- Changed the logic of choosing local port to use for intercepting mirror/steal\n  sockets\n  now instead of assigning a random port always, we try to use the original one\n  and if we fail we assign random port.\n  This only happens if `listen_ports` isn't used.\n  [#1554](https://github.com/metalbear-co/mirrord/issues/1554)\n- The path `/opt` itself is read locally by default (up until now paths inside\n  that directory were read locally by default, but not the directory itself).\n  [#1570](https://github.com/metalbear-co/mirrord/issues/1570)\n- Changed back required IntelliJ version to 222+ from 223+\n- Moved VSCode extension to its own repository and versioning\n  https://github.com/metalbear-co/mirrord-vscode\n\n\n### Fixed\n\n- Running python with mirrord on apple CPUs.\n  [#1570](https://github.com/metalbear-co/mirrord/issues/1570)\n\n\n### Internal\n\n- Use tagged version of ci-agent-build, so we can update Rust and the agent\n  independently. [#1457](https://github.com/metalbear-co/mirrord/issues/1457)\n\n\n## [3.46.0](https://github.com/metalbear-co/mirrord/tree/3.46.0) - 2023-06-14\n\n\n### Added\n\n- Add support for HTTP Path filtering\n  [#1512](https://github.com/metalbear-co/mirrord/issues/1512)\n\n\n### Changed\n\n- Refactor vscode-ext code to be more modular\n\n\n### Fixed\n\n- Fixed bogus warnings in the VS Code extension.\n  [#1504](https://github.com/metalbear-co/mirrord/issues/1504)\n- Mirroring/stealing a port for a second time after the user application closed\n  it once. [#1526](https://github.com/metalbear-co/mirrord/issues/1526)\n- fixed using dotnet debugger on VSCode\n  [#1529](https://github.com/metalbear-co/mirrord/issues/1529)\n- Properly detecting and ignoring localhost port used by Rider's debugger.\n- fix vscode SIP patch not working\n\n\n### Internal\n\n- Add a state Persistent Volume Claim to operator deployment setup.\n- Bring the style guide into the repo.\n- Fix vscode e2e job not running\n- Remove OpenSSL dependency again\n- Switch to new licensing and operator authenticaion flow.\n- fix launch json for vscode extension\n- fix macos build script to use directory's toolchain\n\n\n## [3.45.2](https://github.com/metalbear-co/mirrord/tree/3.45.2) - 2023-06-12\n\n\n### Internal\n\n- Remove frida openSSL dependency\n\n\n## [3.45.1](https://github.com/metalbear-co/mirrord/tree/3.45.1) - 2023-06-11\n\n\n### Fixed\n\n- Installation script now does not use `sudo` when not needed. This enbables\n  installing mirrord in a `RUN` step in an ubuntu docker container, without\n  installing `sudo` in an earlier step.\n  [#1514](https://github.com/metalbear-co/mirrord/issues/1514)\n- fix crio on openshift\n  [#1534](https://github.com/metalbear-co/mirrord/issues/1534)\n- Skipping `gcc` when debugging Go in VS Code extension.\n\n\n### Internal\n\n- change `mirrord-protocol` to have its own versioning. add `mirrord-macros`\n  and `protocol_break` attribute to mark places we want to break on major\n  updates.\n  Add CI to verify that if protocol is changed, `Cargo.toml` is changed as well\n  (to force bumps)\n  Fix some of the structs being `OS` controlled, potentially breaking the\n  protocol between different OS's.\n  (`GetDEnts64(RemoteResult<GetDEnts64Response>),`)\n  [#1355](https://github.com/metalbear-co/mirrord/issues/1355)\n- Partial refactor towards 1512\n  [#1512](https://github.com/metalbear-co/mirrord/issues/1512)\n- Add integration test for DNS resolution\n- Bumped versions of some VS Code extension dependencies.\n- Frida bump and other dependencies\n- Integration test for recv_from\n- Reorganize dev docs\n- Update our socket2 dependency, since the code we pushed there was released.\n\n\n## [3.45.0](https://github.com/metalbear-co/mirrord/tree/3.45.0) - 2023-06-05\n\n\n### Added\n\n- Rider is now supported by the IntelliJ plugin.\n  [#1012](https://github.com/metalbear-co/mirrord/issues/1012)\n\n\n### Fixed\n\n- Chagned agent to not return errors on reading from outgoing sockets, and\n  layer to not crash in that case anyway\n\n\n### Internal\n\n- Use one thread for namespaced runtimes\n  [#1287](https://github.com/metalbear-co/mirrord/issues/1287)\n- Better timeformatting in e2e and maybe reduce flakiness?\n- Fix nodejs deprecation warnings in CI\n- Set MIRRORD_AGENT_IMAGE for vscode e2e\n\n\n## [3.44.2](https://github.com/metalbear-co/mirrord/tree/3.44.2) - 2023-06-01\n\n\n### Changed\n\n- Change phrasing on version mismatch warning.\n- Add `/Volumes` to default local on macOS\n- Change Ping interval from 60s down to 30s.\n- Changed local read defaults - list now includes `^/sbin(/|$)` and\n  `^/var/run/com.apple`.\n\n\n### Fixed\n\n- Running postman with mirrord works.\n  [#1445](https://github.com/metalbear-co/mirrord/issues/1445)\n- Return valid error code when dns lookup fails, instead of -1.\n\n\n### Internal\n\n- Add E2E tests for vscode extension\n  [#201](https://github.com/metalbear-co/mirrord/issues/201)\n- Fixed flaky integration tests.\n  [#1452](https://github.com/metalbear-co/mirrord/issues/1452)\n- Fixed e2e tests' flakiness in the CI.\n  [#1453](https://github.com/metalbear-co/mirrord/issues/1453)\n- Change CI log level to be debug instead of trace\n- Hooking `_NSGetExecutablePath` on macOS to strip the `mirrord-bin` temp dir\n  off the path.\n- Introduce a tool to extract config docs into a markdown file. Update docs to\n  match whats in mirrord-dev.\n- On macOS, if we path a binary for SIP and it is in a path that is inside a\n  directory that has a name that ends with `.app`, we add the frameworks\n  directory to `DYLD_FALLBACK_FRAMEWORK_PATH`.\n- Provide buffer for `IndexAllocator` to avoid re-use of indices too fast\n\n\n## [3.44.1](https://github.com/metalbear-co/mirrord/tree/3.44.1) - 2023-05-26\n\n\n### Changed\n\n- Never importing `RUST_LOG` environment variable from the cluster, regardless\n  of configuration.\n\n\n### Fixed\n\n- Provide helpful error messages on errors in IDEs.\n  [#1392](https://github.com/metalbear-co/mirrord/issues/1392)\n- Log level control when running targetless.\n  [#1446](https://github.com/metalbear-co/mirrord/issues/1446)\n- Change to sticky balloon on warnings in intelliJ\n  [#1456](https://github.com/metalbear-co/mirrord/issues/1456)\n- Setting the namespace via the configuration was not possible in the IDE\n  without also setting a target in the configuration file.\n  [#1461](https://github.com/metalbear-co/mirrord/issues/1461)\n- fixed IntelliJ failing silently when error happened on listing pods\n\n\n### Internal\n\n- Fix the test of reading from the SIP patch dir, that was not testing\n  anything.\n- Make the path field of `TargetConfig` an `Option`.\n\n\n## [3.44.0](https://github.com/metalbear-co/mirrord/tree/3.44.0) - 2023-05-24\n\n\n### Added\n\n- Changed agent's pause feature. Now the pause is requested dynamically by CLI\n  during setup and the agent keeps the target container paused until exit or\n  the unpause request was received.\n  [#1408](https://github.com/metalbear-co/mirrord/issues/1408)\n- Added support for NPM run configuration on JetBrains products.\n  [#1418](https://github.com/metalbear-co/mirrord/issues/1418)\n\n\n### Changed\n\n- Change mirrord ls to show only pods that are in running state (not\n  crashing,starting,etc)\n  [#1436](https://github.com/metalbear-co/mirrord/issues/1436)\n- Change fs mode to be local with overrides when targetless is used\n- Make progress text consitently lowercase.\n\n\n### Fixed\n\n- Fix misalignment on IntelliJ not accepting complex path in target\n  [#1441](https://github.com/metalbear-co/mirrord/issues/1441)\n- Add impersonate permissions for GCP specific RBAC in operator\n\n\n### Internal\n\n- Fix node spawn test flakiness on macOS\n  [#1431](https://github.com/metalbear-co/mirrord/issues/1431)\n\n\n## [3.43.0](https://github.com/metalbear-co/mirrord/tree/3.43.0) - 2023-05-22\n\n\n### Added\n\n- Support for targetless execution: when not specifying any target for the\n  agent, mirrord now spins up an independent agent. This can be useful e.g. if\n  you are just interested in getting the cluster's DNS resolution and outgoing\n  connectivity but don't want any pod's incoming traffic or FS.\n  [#574](https://github.com/metalbear-co/mirrord/issues/574)\n- Support for targetless mode in IntelliJ based IDEs.\n  [#1375](https://github.com/metalbear-co/mirrord/issues/1375)\n- Support for targetless mode in vscode.\n  [#1376](https://github.com/metalbear-co/mirrord/issues/1376)\n\n\n### Changed\n\n- If a user application tries to read paths inside mirrord's temp dir, we hook\n  that and read the path outside instead.\n  [#1403](https://github.com/metalbear-co/mirrord/issues/1403)\n- Don't print error if we fail checking for operator\n\n\n### Fixed\n\n- Added better detection for protected binaries, fixes not loading into Go\n  binary [#1397](https://github.com/metalbear-co/mirrord/issues/1397)\n- Disallow binding on the same address:port twice. Solves part of issue 1123.\n  [#1123](https://github.com/metalbear-co/mirrord/issues/1123)\n- Fix the lost update bug with config dropdown for intelliJ\n  Fix the lost update bug with config dropdown for intelliJ.\n  [#1420](https://github.com/metalbear-co/mirrord/issues/1420)\n- Fix intelliJ compatability issue by implementing missing\n  createPopupActionGroup\n\n\n### Internal\n\n- Run IntelliJ Plugin Verifier on CI\n  [#1417](https://github.com/metalbear-co/mirrord/issues/1417)\n- Remove bors.toml since we use GH merge queue now\n- Upgrade k8s dependencies and rustls, remove ugly feature ip patch\n\n\n## [3.42.0](https://github.com/metalbear-co/mirrord/tree/3.42.0) - 2023-05-15\n\n\n### Added\n\n- mirrord config dropdown for intelliJ.\n  [#1030](https://github.com/metalbear-co/mirrord/issues/1030)\n- Log agent version when initializing the agent.\n\n\n### Changed\n\n- Remove quotes in InvalidTarget' target error message\n\n\n### Fixed\n\n- Use ProgressManager for mirrord progress on intelliJ\n  [#1337](https://github.com/metalbear-co/mirrord/issues/1337)\n- Fixed `go run` failing because of reading remote files by maing paths under\n  /private and /var/folders read locally by default.\n  [#1397](https://github.com/metalbear-co/mirrord/issues/1397)\n- Fix not loading into Go because of SIP by adding into default patched\n  binaries\n\n\n## [3.41.1](https://github.com/metalbear-co/mirrord/tree/3.41.1) - 2023-05-07\n\n\n### Fixed\n\n- Fixed regression in GoLand and NodeJS causing a crash\n  [#1389](https://github.com/metalbear-co/mirrord/issues/1389)\n\n\n## [3.41.0](https://github.com/metalbear-co/mirrord/tree/3.41.0) - 2023-05-06\n\n\n### Added\n\n- Last selected target is now remembered in IntelliJ extension and shown first\n  in the target selection dialog.\n  [#1347](https://github.com/metalbear-co/mirrord/issues/1347)\n- Warn user when their mirrord version doesn't match the operator version.\n\n\n### Changed\n\n- mirrord loading progress is displayed in the staus indicator on IntelliJ,\n  replacing the singleton notifier\n  [#1337](https://github.com/metalbear-co/mirrord/issues/1337)\n\n\n### Fixed\n\n- Fix crash on unexpected LogMessage\n  [#1380](https://github.com/metalbear-co/mirrord/issues/1380)\n- Added hook for recvfrom to support cases where caller expects the messages to\n  be from address they were sent to.\n  [#1386](https://github.com/metalbear-co/mirrord/issues/1386)\n\n\n### Internal\n\n- Add x-session-id to operator request, that is persistent across child\n  processes in a single mirrord exec.\n- Improve metadata for VSCode extension\n- Remove unnecessary DNS resolve on agent addr when incluster feature is\n  enabled in mirrord-kube.\n\n\n## [3.40.0](https://github.com/metalbear-co/mirrord/tree/3.40.0) - 2023-05-01\n\n\n### Added\n\n- Add a message informing users of the operator when they impersonate\n  deployments with mirrord.\n  [#add-operator-message](https://github.com/metalbear-co/mirrord/issues/add-operator-message)\n- Last selected target is now remembered in VS Code and shown first in the\n  quick pick widget.\n  [#1348](https://github.com/metalbear-co/mirrord/issues/1348)\n\n\n### Fixed\n\n- PyCharm plugin now detects `pydevd` debugger and properly excludes its port.\n  [#1020](https://github.com/metalbear-co/mirrord/issues/1020)\n- VS Code extension now detects `debugpy` debugger and properly excludes its\n  port. [#1145](https://github.com/metalbear-co/mirrord/issues/1145)\n- Fixed delve patch not working on GoLand macOS when running go tests\n  [#1364](https://github.com/metalbear-co/mirrord/issues/1364)\n- Fixed issues when importing some packages in Python caused by PYTHONPATH to\n  be used from the remote pod (add it to exclude)\n\n\n### Internal\n\n- Added Clippy lint for slicing and indexing.\n  [#1049](https://github.com/metalbear-co/mirrord/issues/1049)\n- Eliminate unused variable warnings for E2E tests on macOS.\n\n\n## [3.39.1](https://github.com/metalbear-co/mirrord/tree/3.39.1) - 2023-04-21\n\n\n### Changed\n\n- Updated IntelliJ usage gif.\n\n\n### Fixed\n\n- Add magic fix (by polling send_request) to (connection was not ready) hyper\n  error. Also adds some more logs around HTTP stealer.\n  [#1302](https://github.com/metalbear-co/mirrord/issues/1302)\n\n\n### Internal\n\n- Fix arduino/setup-protoc rate limiting error.\n\n\n## [3.39.0](https://github.com/metalbear-co/mirrord/tree/3.39.0) - 2023-04-19\n\n\n### Added\n\n- Support for Node.js on IntelliJ - run/debug JavaScript scripts on IntelliJ\n  with mirrord. [#1284](https://github.com/metalbear-co/mirrord/issues/1284)\n\n\n### Fixed\n\n- Use RemoteFile ops in gethostname to not have a local fd.\n  [#1202](https://github.com/metalbear-co/mirrord/issues/1202)\n\n\n### Internal\n\n- Fix latest tag\n- Project build instructions in the testing guide now include the protoc\n  dependency.\n\n\n## [3.38.1](https://github.com/metalbear-co/mirrord/tree/3.38.1) - 2023-04-19\n\n\n### Fixed\n\n- Release action should work now.\n\n### Internal\n\n- Add protobuf-compiler to rust docs action\n\n## [3.38.0](https://github.com/metalbear-co/mirrord/tree/3.38.0) - 2023-04-18\n\n\n### Added\n\n- Add support for cri-o container runtime.\n  [#1258](https://github.com/metalbear-co/mirrord/issues/1258)\n- A descriptive message is now presented in the IntelliJ extension when no\n  target is available. Listing targets failure is now handled and an error\n  notification is presented.\n  [#1267](https://github.com/metalbear-co/mirrord/issues/1267)\n- Added waitlist registration via cli.\n  Join the waitlist to try out first mirrord for Teams which is invite only at\n  the moment. [#1303](https://github.com/metalbear-co/mirrord/issues/1303)\n- Add email option to help messages.\n  [#1318](https://github.com/metalbear-co/mirrord/issues/1318)\n\n\n### Changed\n\n- When patching for SIP, use arm64 if possible (running on aarch64 and an arm64\n  binary is available).\n  [#1155](https://github.com/metalbear-co/mirrord/issues/1155)\n- Changed our Discord invite link to https://discord.gg/metalbear\n\n\n### Fixed\n\n- Change detour bypass to be more robust, not crashing in case it can't update\n  the bypass [#1320](https://github.com/metalbear-co/mirrord/issues/1320)\n\n\n### Internal\n\n- Added integration tests for outgoing UDP and TCP.\n  [#1051](https://github.com/metalbear-co/mirrord/issues/1051)\n- All Kubernetes resources are now deleted after E2E tests. Use\n  `MIRRORD_E2E_PRESERVE_FAILED` environment variable to preserve resources from\n  failed tests. All resources created for E2E tests now share a constant label\n  `mirrord-e2e-test-resource=true`.\n  [#1256](https://github.com/metalbear-co/mirrord/issues/1256)\n- Added a debugging guide for the IntelliJ extension.\n  [#1278](https://github.com/metalbear-co/mirrord/issues/1278)\n- Add `impersonate` permission on `userextras/accesskeyid`, `userextras/arn`,\n  `userextras/canonicalarn` and `userextras/sessionname` resources to operator\n  setup.\n- Sometimes when using console logger mirrord crashes since tokio runtime isn't\n  initialized, changed to just use a thread\n\n\n## [3.37.0](https://github.com/metalbear-co/mirrord/tree/3.37.0) - 2023-04-14\n\n\n### Removed\n\n- Removed armv7 builds that were wrongly added\n\n\n### Added\n\n- Add `ignore_ports` to `incoming` configuration so you can have ports that\n  only listen\n  locally (mirrord will not steal/mirror those ports).\n  [#1295](https://github.com/metalbear-co/mirrord/issues/1295)\n- Add support for `xstatfs` to prevent unexpected behavior with SQLite.\n  [#1270](https://github.com/metalbear-co/mirrord/issues/1270)\n\n\n### Changed\n\n- Improved bad target error\n  [#1291](https://github.com/metalbear-co/mirrord/issues/1291)\n\n\n### Internal\n\n- Optimize agent Dockerfile for better cache use\n  [#1280](https://github.com/metalbear-co/mirrord/issues/1280)\n- Cover more areas of the code and targets using clippy in CI and fix its\n  warnings\n- Rely more on Rusts own async trait and drop async-trait crate (the agent cant\n  fully switch yet though).\n  [#use-rust-async-traits](https://github.com/metalbear-co/mirrord/issues/use-rust-async-traits)\n\n\n## [3.36.0](https://github.com/metalbear-co/mirrord/tree/3.36.0) - 2023-04-13\n\n\n### Added\n\n- Notify clients about errors happening in agent's background tasks.\n  [#1163](https://github.com/metalbear-co/mirrord/issues/1163)\n- Add support for the imagePullSecrets parameter on the agent pod. This can be\n  specified in the configuration file, under agent.image_pull_secrets.\n  [#1276](https://github.com/metalbear-co/mirrord/issues/1276)\n\n\n### Internal\n\n- Fix pause E2E test.\n  [#1261](https://github.com/metalbear-co/mirrord/issues/1261)\n\n\n## [3.35.0](https://github.com/metalbear-co/mirrord/tree/3.35.0) - 2023-04-11\n\n\n### Added\n\n- Added an error prompt to the VS Code extension when there is no available\n  target in the configured namespace.\n  [#1266](https://github.com/metalbear-co/mirrord/issues/1266)\n\n\n### Changed\n\n- HTTP traffic stealer now supports HTTP/2 requests.\n  [#922](https://github.com/metalbear-co/mirrord/issues/922)\n\n\n### Fixed\n\n- Executable field was set to null if present, but no SIP patching was done.\n  [#1271](https://github.com/metalbear-co/mirrord/issues/1271)\n- Fixed random crash in `close_layer_fd` caused by supposed closing of\n  stdout/stderr then calling to log that writes to it\n\n\n### Internal\n\n- Use DashMap for `OPEN_DIRS`\n  [#1240](https://github.com/metalbear-co/mirrord/issues/1240)\n- Use DashMap for `MANAGED_ADDRINFO`\n  [#1241](https://github.com/metalbear-co/mirrord/issues/1241)\n- Use DashMap for `ConnectionQueue`\n  [#1242](https://github.com/metalbear-co/mirrord/issues/1242)\n- Implemented `Default` for `Subscriptions`. Replaced usages of\n  `Subscriptions::new` with `Default::default`.\n- Improve testing guide.\n- Removed unnecessary trait bounds for `Default` implementation on\n  `IndexAllocator`. Replaced usages of `IndexAllocator::new` with\n  `Default::default`.\n- Update contributing guide.\n- Update testing and building docs, and add instructions for the IDE\n  extensions.\n\n\n## [3.34.0](https://github.com/metalbear-co/mirrord/tree/3.34.0) - 2023-03-30\n\n\n### Added\n\n- Support for running SIP binaries via the vscode extension, for common\n  configuration types.\n  [#1061](https://github.com/metalbear-co/mirrord/issues/1061)\n\n\n### Changed\n\n- Add the failed connection address on failure to debug easily\n- New IntelliJ icons - feel free to give feedback\n\n\n### Fixed\n\n- Fix internal proxy receiving signals from terminal targeted for the mirrord\n  process/parent process by using setsid\n  [#1232](https://github.com/metalbear-co/mirrord/issues/1232)\n- fix listing pods failing when config file exists on macOS\n  [#1245](https://github.com/metalbear-co/mirrord/issues/1245)\n\n\n### Internal\n\n- Use DashMap instead of Mutex<HashMap> for `SOCKETS`\n  [#1239](https://github.com/metalbear-co/mirrord/issues/1239)\n- Some small changes to make building the JetBrains plugin locally simpler.\n- Update IntelliJ dependencies\n- Update dependencies\n- Update rust and remove unneccessary feature.\n\n\n## [3.33.1](https://github.com/metalbear-co/mirrord/tree/3.33.1) - 2023-03-28\n\n\n### Changed\n\n- Add default requests and limits values to mirrord-operator setup\n  (100m/100Mi).\n\n\n### Fixed\n\n- Change CLI's version update message to display the correct command when\n  mirrord has been installed with homebrew.\n  [#1194](https://github.com/metalbear-co/mirrord/issues/1194)\n- fix using config with WSL on JetBrains\n  [#1210](https://github.com/metalbear-co/mirrord/issues/1210)\n- Fix internal proxy exiting before IntelliJ connects to it in some situations\n  (maven). Issue was parent process closing causing child to exit. Fixed by\n  waiting from the extension call to the child.\n  [#1211](https://github.com/metalbear-co/mirrord/issues/1211)\n- mirrord-cli: update cli so failing to use operator will fallback to\n  no-operator mode.\n  [#1218](https://github.com/metalbear-co/mirrord/issues/1218)\n- Add option to install specific version using the `install.sh` script via\n  command line argument or `VERSION` environment variable\n  [#1222](https://github.com/metalbear-co/mirrord/issues/1222)\n- Change connection reset to be a trace message instead of error\n- Error when agent exits.\n\n\n### Internal\n\n- Bring the testing documentation into the repo, link it in readme, and add\n  some information.\n- Introduce CheckedInto trait to convert raw pointers (checking for null) in\n  Detour values.\n  [#detours](https://github.com/metalbear-co/mirrord/issues/detours)\n- Re-enable http mirror e2e tests..\n  [#947](https://github.com/metalbear-co/mirrord/issues/947)\n- Change OPEN_FILES from Mutex HashMap to just using DashMap.\n  [#1206](https://github.com/metalbear-co/mirrord/issues/1206)\n- Refactor file ops open/read/close to allow us to directly manipulate the\n  remote file (in agent) withouht going through C (mainly used to not leak the\n  remote file due to how gethostname works).\n\n  Change dup to take an argument that signals if we should change the fd from\n  SOCKETS to OPEN_FILES (or vice-versa).\n  [#1202](https://github.com/metalbear-co/mirrord/issues/1202)\n\n\n\n\n## [3.33.0](https://github.com/metalbear-co/mirrord/tree/3.33.0) - 2023-03-22\n\n\n### Added\n\n- Support for outgoing unix stream sockets (configurable via config file or\n  environment variable).\n  [#1105](https://github.com/metalbear-co/mirrord/issues/1105)\n- Add  version of hooked functions.\n  [#1203](https://github.com/metalbear-co/mirrord/issues/1203)\n\n\n### Changed\n\n- add `Hash` trait on `mirrord_operator::license::License` struct\n- dependencies bump and cleanup\n- fix mirrord loading twice (to build also) and improve error message when no\n  pods found\n\n\n### Fixed\n\n- fix f-stream functions by removing its hooks and add missing underlying libc\n  calls [#947](https://github.com/metalbear-co/mirrord/issues/947)\n- fix deadlock in go20 test (remove trace?)\n  [#1206](https://github.com/metalbear-co/mirrord/issues/1206)\n\n\n### Internal\n\n- set timeout for flaky/hanging test\n\n\n## [3.32.3](https://github.com/metalbear-co/mirrord/tree/3.32.3) - 2023-03-19\n\n\n### Changed\n\n- change outgoing connection drop to be trace instead of error since it's not\n  an error\n\n\n### Fixed\n\n- Support stealing on meshed services with ports specified in\n  --skip-inbound-ports on linkerd and itsio equivalent.\n  [#1041](https://github.com/metalbear-co/mirrord/issues/1041)\n\n\n## [3.32.2](https://github.com/metalbear-co/mirrord/tree/3.32.2) - 2023-03-14\n\n\n### Fixed\n\n- fix microk8s support by adding possible containerd socket path\n  [#1186](https://github.com/metalbear-co/mirrord/issues/1186)\n- fix gethostname null termination missing\n  [#1189](https://github.com/metalbear-co/mirrord/issues/1189)\n- Update webbrowser dependency to fix security issue.\n\n\n## [3.32.1](https://github.com/metalbear-co/mirrord/tree/3.32.1) - 2023-03-12\n\n\n### Fixed\n\n- fix mirroring not handling big requests - increase buffer size (in rawsocket\n  dependency).\n  also trace logs to not log the data.\n  [#1178](https://github.com/metalbear-co/mirrord/issues/1178)\n- fix environment regression by mixing the two approaches together.\n  priority is proc > oci (via container api)\n  [#1180](https://github.com/metalbear-co/mirrord/issues/1180)\n\n\n### Internal\n\n- compile/test speed improvements\n\n  1. add CARGO_NET_GIT_FETCH_WITH_CLI=true to agent's Dockerfile since we found\n  out it\n      saves a lot of time on fetching (around takes 60s when using libgit2)\n  2. change `rust-toolchain.toml` so it won't auto install unneeded targets\n  always\n  3. remove `toolchain: nightly` parameter from `actions-rs/toolchain@v1` since\n  it's\n      not needed because we have `rust-toolchain.toml`\n      saves a lot of time on fetching (takes around 60s when using libgit2)\n  4. switch to use `actions-rust-lang/setup-rust-toolchain@v1` instead of\n  `actions-rs/toolchain@v1`\n      since it's deprecated and doesn't support `rust-toolchain.toml`\n  5. remove s`Swatinem/rust-cache@v2` since it's included in\n  `actions-rust-lang/setup-rust-toolchain@v1`\n  6. use latest version of `Apple-Actions/import-codesign-certs` to remove\n  warnings\n- print logs of stealer/sniffer start failure\n- run docker/containerd runtime at the same time to make e2e faster\n- use base images for agent to reduce build time\n\n\n## [3.32.0](https://github.com/metalbear-co/mirrord/tree/3.32.0) - 2023-03-08\n\n\n### Changed\n\n- mirrord-layer: changed result of `getsockname` to return requested socket on\n  `bind` instead of the detoured socket address\n  [#1047](https://github.com/metalbear-co/mirrord/issues/1047)\n- mirrord-layer: Added `SocketId` to `UserSocket` as a better way of\n  identifying sockets, part of #1054.\n  [#1054](https://github.com/metalbear-co/mirrord/issues/1054)\n- CHANGELOG - changed to use towncrier\n- Change socket error on reading from outgoing sockets and mirror to be info\n  instead of error\n\n\n### Fixed\n\n- Possible bug when bound address is bypassed and socket stays in `SOCKETS`\n  map.\n\n\n### Internal\n\n- Change release.yaml so pushing final tags will occur only on real releases\n  while manual releases will push into `ghcr.io/metalbear-co/mirrord-staging:\n  ${{ github.sha }}`\n  so we can leverage github CI for testing images.\n- Don't build builder image as part of the build, use a prebuilt image -\n  improve cd time\n  Use `taiki-e/install-action` instead of `cargo install` (compiles from\n  source) for installing `cross`.\n- Fix broken aarch build\n\n\n## 3.31.0\n\n### Added\n\n- config: `ignore_localhost` to `outgoing` config for ignoring localhost connections, meaning it will connect to local\n  instead of remote localhost.\n- config: `ignore_localhost` to `incoming` config for ignoring localhost bound sockets, meaning it will not steal/mirror those.\n- combination of `ignore_localhost` in `incoming` and `outgoing` can be useful when you run complex processes that does\n  IPC over localhost.\n- `sip_binaries` to config file to allow specifying SIP-protected binaries that needs to be patched\n  when mirrord doesn't detect those. See [#1152](https://github.com/metalbear-co/mirrord/issues/1152).\n\n### Fixed\n\n- Unnecessary error logs when running a script that uses `env` in its shebang.\n- VSCode extension: running Python script with debugger fails because it tries to connect to the debugger port remotely.\n- Big file leading to timeout: we found out that `bincode` doesn't do so well with large chunked messages\n  so we limited remote read size to 1 megabyte, and read operation supports getting partial data until EOF.\n- mirrord-operator: fix silent fail when parsing websocket messages fails.\n\n### Changed\n\n- improved mirrord cli help message.\n- mirrord-config: Change `flush_connections` default to `true`, related to\n  [#1029](https://github.com/metalbear-co/mirrord/issues/1029).\n\n## 3.30.0\n\n### Added\n\n- mirrord-layer: Added `port_mapping` under `incoming` configuration to allow mapping local ports to custom\n  remote port, for example you can listen on port 9999 locally and it will steal/mirror\n  the remote 80 port if `port_mapping: [[9999, 80]]`. See [#1129](https://github.com/metalbear-co/mirrord/issues/1129)\n\n### Fixed\n\n- Fix issue when two (or more) containerd sockets exist and we use the wrong one. Fixes [#1133](https://github.com/metalbear-co/mirrord/issues/1133).\n- Invalid toml in environment variables configuration examples.\n\n### Changed\n\n- Use container's runtime env instead of reading it from `/proc/{container_root_pid}/environ` as some processes (such as nginx) wipe it. Fixes [#1135](https://github.com/metalbear-co/mirrord/issues/1135)\n- Removed the prefix \"test\" from all test names - [#1065](https://github.com/metalbear-co/mirrord/issues/1065).\n- Created symbolic link from the vscode directory to the `LICENSE` and `CHANGELOG.md` files so that mirrord developers\n  don't need to copy them there before building the app.\n- mirrord-layer: `socket` hook will now block ipv6 requests and will return EAFNOSUPPORT. See [#1121](https://github.com/metalbear-co/mirrord/issues/1121).\n\n## 3.29.0\n\n### Added\n\n- mirrord debug feature (for mirrord developers to debug mirrord): Cause the agent to exit early with an error.\n- mirrord E2E tests: support for custom namespaces.\n\n### Fixed\n\n- Unpause the target container before exiting if the agent exits early on an error and the container is paused -\n   [#1111](https://github.com/metalbear-co/mirrord/issues/1111).\n- intellij-plugin: fix issue where execution hangs when running using Gradle. Fixes [#1120](https://github.com/metalbear-co/mirrord/issues/1120).\n- intellij-plugin: fix issue where mirrord doesn't load into gradle, was found when fixing [#1120](https://github.com/metalbear-co/mirrord/issues/1120).\n- mirrord-agent: reintroduce `-o lo` back to iptable rules to prevent issue where outinging messags could be intersepted by mirrord as incoming ones.\n- mirrord-layer: binding same port on different IPs leads to a crash due to `ListenAlreadyExists` error.\n  This is now ignored with a `info` message since we can't know if the IP/Port was already bound\n  or not. Created a follow up issue to complete implementation and error at application's bind.\n\n## 3.28.4\n\n### Fixed\n\n- VSCode Extension: Fix wrong CLI path on Linux\n\n## 3.28.3\n\n### Fixed\n\n- VSCode Extension: Fix wrong CLI path\n\n## 3.28.2\n\n### Fixed\n\n- Fix error in VSCode extension compilation\n\n## 3.28.1\n\n### Fixed\n\n- CI: fix error caused by missing dir\n\n## 3.28.0\n\n### Changed\n\n- Change VSCode extension to package all binaries and select the correct one based on the platform. Fixes [#1101](https://github.com/metalbear-co/mirrord/issues/1101).\n- agent: add log to error when handling a client message fails.\n\n### Fixed\n\n- agent: Make sniffer optional to support cases when it's not available and mirroring is not required.\n\n## 3.27.1\n\n### Changed\n\n- Update operator version\n\n## 3.27.0\n\n### Fixed\n\n- mirrord now handles it when the local app closes a forwarded stolen tcp connection instead of exiting with an error. Potential fix for [#1063](https://github.com/metalbear-co/mirrord/issues/1063).\n- missing kubeconfig doesn't fail extensions (it failed because it first tried to resolve the default then used custom one)\n\n### Changed\n\n- layer: Don't print error when tcp socket faces error as it can be a normal flow.\n- internal proxy - set different timeout for `mirrord exec` and running from extension\n  fixing race conditions when running from IntelliJ/VSCode.\n- Changed `with_span_events` from `FmtSpan::Active` to `FmtSpan::NEW | FmtSpan::CLOSE`.\n  Practically this means we will have less logs on enter/exit to span and only when it's first created\n  and when it's closed.\n- JetBrains Plugin: Add debug logs for investigating user issues.\n- JetBrains compatability: set limit from 222 (2022.2.4) since 221 isn't supported by us.\n- Make `kubeconfig` setting effective always by using `-f` in `mirrord ls`.\n- mirrord agent can now run without sniffer, will not be able to mirror but can still steal.\n  this is to enable users who have older kernel (4.20>=) to use the steal feature.\n\n## 3.26.1\n\n### Fixed\n\n- VSCode Extension: Prevent double prompting of the user to select the target if not specified in config. See [#1080](https://github.com/metalbear-co/mirrord/issues/1080).\n\n### Changed\n\n- JetBrains enable support from 2021.3 (like we had in 3.14.3).\n\n## 3.26.0\n\n### Changed\n\n- mirrord-agent: localhost traffic (like healthprobes) won't be stolen by mirrord on meshed targets to allign behavior with non meshed targets. See [#1070](https://github.com/metalbear-co/mirrord/pull/1070)\n- Filter out agent pods from `mirrord ls`, for better IDE UX. Closes [#1045](https://github.com/metalbear-co/mirrord/issues/1045).\n- Not exiting on SIP-check fail. Instead, logging an error and letting the program fail as it would without mirrord.\n  See [#951](https://github.com/metalbear-co/mirrord/issues/951).\n\n### Fixed\n\n- Fix cache does not work on test-agent workflow. See [#251](https://github.com/metalbear-co/mirrord/issues/251).\n- CI: merge queue + branch protection issues\n\n## 3.25.0\n\n### Added\n\n- `gethostname` detour that returns contents of `/etc/hostname` from target pod. See relevant [#1041](https://github.com/metalbear-co/mirrord/issues/1041).\n\n### Fixed\n\n- `getsockname` now returns the **remote** local address of the socket, instead of the\n  **local fake** address of the socket.\n  This should fix issues with Akka or other software that checks the local address and\n  expects it to match the **local ip of the pod**.\n  This breaks agent protocol (agent/layer need to match).\n- GoLand debug fails because of reading `/private/var/folders` remotely (trying to access self file?). fixed with filter change (see below)\n\n### Changed\n\n- VSCode extension: update dialog message\n- JetBrains: can now change focus from search field to targets using tab/shift+tab (for backwrad)\n- Refactor - mirrord cli now spawns `internal proxy` which does the Kubernetes operations for\n  the layer, so layer need not interact with k8s (solves issues with remote/local env mix)\n- filter: add `/private/var/folders\" to default local read override\n- filter: fixed regex for `/tmp` default local read override\n- disable flask e2e until we solve the glibc issue (probably fstream issue)\n\n## 3.24.0\n\n### Added\n\n- Add a field to mirrord-config to specify custom path for kubeconfig , resolves [#1027](https://github.com/metalbear-co/mirrord/issues/1027).\n\n### Changed\n\n- Removed limit on future builds `untilBuild` in JetBrains plugin.\n- IntelliJ-ext: change the dialog to provide a sorted list and make it searchable, resolves [#1031](https://github.com/metalbear-co/mirrord/issues/1031).\n- mirrord-layer: Changed default to read AWS credentials + config from remote pod.\n- Removed unused env var (`MIRRORD_EXTERNAL_ENV`)\n- mirrord-agent: Use `conntrack` to flush stealer connections (temporary fix for\n  [#1029](https://github.com/metalbear-co/mirrord/issues/1029)).\n\n### Fixed\n\n- Added env guard to be used in cli + extension to prevent (self) misconfigurations (our kube settings being used from remote).\n\n## 3.23.0\n\n### Fixed\n\n- mirrord-config: Fix disabled feature for env in config file, `env = false` should work. See [#1015](https://github.com/metalbear-co/mirrord/issues/1015).\n- VS Code extension: release universal extension as a fallback for Windows and other platforms to be used with WSL/Remote development. Fixes [#1017](https://github.com/metalbear-co/mirrord/issues/1017)\n- Fix `MIRRORD_AGENT_RUST_LOG` can't be more than info due to dependency on info log.\n- Fix pause feature not working in extension due to writing to stdout (changed to use trace)\n\n### Changed\n\n- `DNSLookup` failures changed to be info log from error since it is a common case.\n- mirrord-agent: now prints \"agent ready\" instead of logging it so it can't be fudged with `RUST_LOG` control.\n- mirrord-agent: `agent::layer_recv` changed instrumentation to be trace instead of info.\n- mirrord-layer/agent: change ttl of job to be 1 second for cases where 0 means in cluster don't clean up.\n- Convert go fileops e2e tests into integration tests. Part of\n  [#994](https://github.com/metalbear-co/mirrord/issues/994#issuecomment-1410721960).\n\n## 3.22.0\n\n### Changed\n\n- Rust: update rust toolchain (and agent rust `DOCKERFILE`) to `nightly-2023-01-31`.\n- exec/spawn detour refactor [#999](https://github.com/metalbear-co/mirrord/issues/999).\n- mirrord-layer: Partialy load mirrord on certian processes that spawn other processes to allow sip patch on the spawned process.\n  This to prevent breaking mirrord-layer load if parent process is specified in `--skip-processes`.  (macOS only)\n\n### Fixed\n\n- mirrord-layer: DNS resolving doesn't work when having a non-OS resolver (using UDP sockets)\n  since `/etc/resolv.conf` and `/etc/hosts` were in the local read override,\n  leading to use the local nameserver for resolving. Fixes [#989](https://github.com/metalbear-co/mirrord/issues/989)\n- mirrord-agent: Infinite reading a file when using `fgets`/`read_line` due to bug seeking to start of file.\n- Rare deadlock on file close that caused the e2e file-ops test to sometimes fail\n  ([#994](https://github.com/metalbear-co/mirrord/issues/994)).\n\n## 3.21.0\n\n### Added\n\n- Support for Go's `os.ReadDir` on Linux (by hooking the `getdents64` syscall). Part of\n  [#120](https://github.com/metalbear-co/mirrord/issues/120).\n- Test mirrord with Go 1.20rc3.\n\n### Changed\n\n- mirrord-agent: Wrap agent with a parent proccess to doublecheck the clearing of iptables. See [#955](https://github.com/metalbear-co/mirrord/issues/955)\n- mirrord-layer: Change `HOOK_SENDER` from `Option` to `OnceLock`.\n\n### Fixed\n\n- mirrord-agent: Handle HTTP upgrade requests when the stealer feature is enabled\n  (with HTTP traffic) PR [#973](https://github.com/metalbear-co/mirrord/pull/973).\n- E2E tests compile on MacOS.\n- mirrord could not load into some newer binaries of node -\n  [#987](https://github.com/metalbear-co/mirrord/issues/987). Now hooking also `posix_spawn`, since node now uses\n  `libuv`'s `uv_spawn` (which in turn calls `posix_spawn`) instead of libc's `execvp` (which calls `execve`).\n- Read files from the temp dir (defined by the system's `TMPDIR`) locally, closes\n  [#986](https://github.com/metalbear-co/mirrord/issues/986).\n\n## 3.20.0\n\n### Added\n\n- Support impersonation in operator\n\n### Fixed\n\n- Go crash in some scenarios [#834](https://github.com/metalbear-co/mirrord/issues/834).\n- Remove already deprecated `--no-fs` and `--rw` options, that do not do anything anymore, but were still listed in the\n  help message.\n- Bug: SIP would fail the second time to run scripts for which the user does not have write permissions.\n\n### Changed\n\n- Change layer/cli logs to be to stderr instead of stdout to avoid mixing with the output of the application. Closes [#786](https://github.com/metalbear-co/mirrord/issues/786)\n\n## 3.19.2\n\n### Changed\n\n- Code refactor: moved all file request and response types into own file.\n\n## 3.19.1\n\n### Fixed\n\n- Changelog error failing the JetBrains release.\n\n## 3.19.0\n\n### Changed\n\n- mirrord-operator: replace operator api to use KubernetesAPI extension. [#915](https://github.com/metalbear-co/mirrord/pull/915)\n\n### Fixed\n\n- tests: flaky passthrough fix. Avoid 2 agents running at the same time, add minimal sleep (1s)\n- macOS x64/SIP(arm): fix double hooking `fstatat$INODE64`. Possible crash and undefined behavior.\n\n### Added\n\n- introduce `mirrord-console` - a utility to debug and investigate mirrord issues.\n\n### Deprecated\n\n- Remove old fs mode\n  - cli: no `--rw` or `--no-fs`.\n  - layer: no `MIRRORD_FILE_OPS`/`MIRRORD_FILE_RO_OPS`/`MIRRORD_FILE_FILTER_INCLUDE`/`MIRRORD_FILE_FILTER_EXCLUDE`\n\n## 3.18.2\n\n### Fixed\n\n- crash when `getaddrinfo` is bypassed and libc tries to free our structure. Closes [#930](https://github.com/metalbear-co/mirrord/issues/930)\n- Stealer hangs on short streams left open and fails on short closed streams to filtered HTTP ports -\n [#926](https://github.com/metalbear-co/mirrord/issues/926).\n\n## 3.18.1\n\n### Fixed\n\n- Issue when connect returns `libc::EINTR` or `libc::EINPROGRESS` causing outgoing connections to fail.\n- config: file config updated to fix simple pattern of IncomingConfig. [#933](https://github.com/metalbear-co/mirrord/pull/933)\n\n## 3.18.0\n\n### Added\n\n- Agent now sends error encountered back to layer for better UX when bad times happen. (This only applies to error happening on connection-level).\n- Partial ls flow for Go on macOS (implemented `fdopendir` and `readdir_r`). Closes [#902](https://github.com/metalbear-co/mirrord/issues/902)\n- New feature: HTTP traffic filter!\n  - Allows the user to steal HTTP traffic based on HTTP request headers, for example `Client: me` would steal requests that match this header,\n    while letting unmatched requests (and non-HTTP packets) through to their original destinations.\n\n### Fixed\n\n- Update the setup-qemu-action action to remove a deprecation warning in the Release Workflow\n- stat functions now support directories.\n- Possible bugs with fds being closed before time (we now handle dup'ing of fds, and hold those as ref counts)\n\n### Changed\n\n- agent: Return better error message when failing to use `PACKET_IGNORE_OUTGOING` flag.\n\n## 3.17.0\n\n### Added\n\n- Add brew command to README\n\n### Fixed\n\n- intellij plugin: mirrord icon should always load now.\n- intellij plugin: on target selection cancel, don't show error - just disable mirrord for the run and show message.\n- fixed setting a breakpoint in GoLand on simple app hanging on release build (disabled lto). - Fixes [#906](https://github.com/metalbear-co/mirrord/issues/906).\n\n### Deprecated\n\n- Removed `disabled` in favor of `local` in `fs` configuration.\n\n### Changed\n\n- update `kube` dependency + bump other\n- update `dlv` packed with plugins.\n\n## 3.16.2\n\n### Fixed\n\n- Add go to skipped processes in JetBrains plugin. Solving GoLand bug.\n\n## 3.16.1\n\n### Fixed\n\n- Running on specific Kubernetes setups, such as Docker for Desktop should work again.\n\n## 3.16.0\n\n### Added\n\n- Add golang stat hooks, closes [#856](https://github.com/metalbear-co/mirrord/issues/856)\n\n### Fixed\n\n- agent: mount /var from host and reconfigure docker socket to /var/run/docker.sock for better compatibility\n- Error on specifying namespace in configuration without path (pod/container/deployment). Closes [#830](https://github.com/metalbear-co/mirrord/issues/830)\n- IntelliJ plugin with new UI enabled now shows buttons. Closes [#881](https://github.com/metalbear-co/mirrord/issues/881)\n- Fix deprecation warnings (partially), update checkout action to version 3.\n\n### Changed\n\n- Refactored detours to use new helper function `Result::as_hook` to simplify flow. (no change in behavior)\n\n## 3.15.2\n\n### Added\n\n- Logging for IntelliJ plugin for debugging/bug reports.\n\n### Fixed\n\n- Crash when mirroring and state is different between local and remote (happens in Mesh).\n  We now ignore messages that are not in the expected state. (as we can't do anything about it).\n- agent: Fix typo in socket path for k3s environments\n- intellij-plugin: fix missing telemetry/version check\n\n## 3.15.1\n\n### Added\n\n- Add `__xstat` hook, fixes [#867]((https://github.com/metalbear-co/mirrord/issues/867))\n\n### Fixed\n\n- Fix build scripts for the refactored IntelliJ plugin\n\n## 3.15.0\n\n### Added\n\n- agent: Add support for k3s envs\n- IntelliJ plugin - refactor, uses cli like vs code.\n\n### Fixed\n\n- getaddrinfo: if node is NULL just bypass, as it's just for choosing ip/port, Fixes[#858](https://github.com/metalbear-co/mirrord/issues/858) and [#848](https://github.com/metalbear-co/mirrord/issues/848)\n\n### Changed\n\n- cli now loads env, removes go env stuff at load, might fix some bugs there.\n\n## 3.14.3\n\n### Fixed\n\n- Create empty release to overcome temporary issue with VS Code marketplace publication\n\n## 3.14.2\n\n### Fixed\n\n- vscode ext: use process env for running mirrord. Fixes [#854](https://github.com/metalbear-co/mirrord/issues/854)\n\n## 3.14.1\n\n### Fixed\n\n- layer + go - connect didn't intercept sometimes (we lacked a match). Fixes [851](https://github.com/metalbear-co/mirrord/issues/851).\n\n## 3.14.0\n\n### Changed\n\n- cli: Set environment variables from cli to spawned process instead of layer when using `mirrord exec`.\n- cli: use miette for nicer errors\n- cli: some ext exec preparations, nothing user facing yet.\n- vs code ext: use cli, fixes some env bugs with go and better user experience.\n\n## 3.13.5\n\n### Changed\n\n- Don't add temp prefix when using `extract` command.\n- VS Code extension: mirrord enable/disable to be per workspace.\n- VS Code extension: bundle the resources\n- Add `/System` to default ignore list.\n- Remove `test_mirrord_layer` from CI as it's covered in integration testing.\n\n### Fixed\n\n- fd leak on Linux when using libuv (Node). Caused undefined behavior. Fixes [#757](https://github.com/metalbear-co/mirrord/issues/757).\n\n### Misc\n\n- Better separation in mirrord cli.\n\n## 3.13.4\n\n### Changed\n\n- Adjust filters - all directory filters also filter the directory itself (for when lstat/stating the directory).\n  Added `/Applications`\n\n## 3.13.3\n\n### Added\n\n- Add `mirrord ls` which allows listing target path. Hidden from user at the moment, as for now it's meant for extension use only.\n\n### Changed\n\n- Refactor e2e tests: split into modules based on functionality they test.\n- internal refactor in mirrord-agent: Stealer feature changed from working per connection to now starting with\n  the agent itself (\"global\"). Got rid of `steal_worker` in favor of a similar abstraction to what\n  we have in `sniffer.rs` (`TcpConnectionStealer` that acts as the traffic stealing task, and\n  `TcpStealerApi` which bridges the communication between the agent and the stealer task).\n- Tests CI: don't wait for integration tests to start testing E2E tests.\n\n### Fixed\n\n- Add missing `fstat`/`lstat`/`fstatat`/`stat` hooks.\n\n## 3.13.2\n\n### Fixed\n\n- Weird crash that started happening after Frida upgrade on macOS M1.\n\n## 3.13.1\n\n### Fixed\n\n- Fix asdf:\n  - Add `/tmp` not just `/tmp/` to exclusion.\n  - Add `.tool-version` to exclusion.\n  - `fclose` was calling close which doesn't flush.\n\n## 3.13.0\n\n### Changed\n\n- IntelliJ Plugin: downgrade Java to version 11.\n- IntelliJ Plugin: update platform version to 2022.3.\n- Disable progress in mirrord-layer - can cause issues with forks and generally confusing now\n  that agent is created by cli (and soon to be created by IDE plugin via cli).\n- Update to Frida 16.0.7\n- Add more paths to the default ignore list (`/snap` and `*/.asdf/*`) - to fix asdf issues.\n- Add `/bin/` to default ignore list - asdf should be okay now!\n- Update GitHub action to use latest `rust-cache`\n\n### Added\n\n- mirrord-operator: Add securityContext section for deployment in operator setup\n\n### Fixed\n\n- Fix `--fs-mode=local` didn't disable hooks as it was supposed to.\n- Fix hooking wrong libc functions because of lack of module specification - add function to resolve\n  module name to hook from (libc on Unix,libsystem on macOS). Partially fixes asdf issue.\n\n## 3.12.1\n\n### Added\n\n- E2E test for pause feature with service that logs http requests and a service that makes requests.\n- mirrord-layer: automatic operator discovery and connection if deployed on cluster. (Discovery can be disabled with `MIRRORD_OPERATOR_ENABLE=false`).\n\n### Changed\n\n- Added `/tmp/` to be excluded from file ops by default. Fixes [#800](https://github.com/metalbear-co/mirrord/issues/800).\n\n### Misc\n\n- Reformatted a bit the file stuff, to make it more readable. We now have `FILE_MODE` instead of `FILE_OPS_*` internally.\n- Changed fileops test to also test write override (mirrord mode is read and override specific path)\n\n## 3.12.0\n\n### Added\n\n- `--pause` feature (unstable). See [#712](https://github.com/metalbear-co/mirrord/issues/712).\n- operator setup cli feature.\n- mirrord-layer: operator connection that can be used instad of using kubernetes api to access agents.\n\n### Changed\n\n- CI: cancel previous runs of same PR.\n- cli: set canonical path for config file to avoid possible issues when child processes change current working directory.\n- config: Refactor config proc macro and behavior - we now error if a config value is wrong instead of defaulting.\n- layer: panic on error instead of exiting without any message.\n- CI: don't run CI on draft PRs.\n- Update dependencies.\n- Update to clap v4 (cli parser crate).\n- Started deprecation of fsmode=disabled, use fsmode=local instead.\n\n### Fixed\n\n- Typo in `--agent-startup-timeout` flag.\n\n## 3.11.2\n\n### Fixed\n\n- Agent dockerfile: fix build for cross arch\n\n### Changed\n\n- Added clippy on macOS and cleaned warnings.\n\n## 3.11.1\n\n### Fixed\n\n- release.yaml: Linux AArch64 for real this time. (embedded so was x64)\n\n### Changed\n\n- Create agent in the cli and pass environment variables to exec'd process to improve agent re-use.\n- IntelliJ: change default log level to warning (match cli/vscode).\n- IntelliJ: don't show progress (can make some tests/scenarios fail).\n- release.yaml: Build layer/cli with Centos 7 compatible glibc (AmazonLinux2 support).\n- Change CPU/memory values requested by the Job agent to the lowest values possible.\n\n## 3.11.0\n\n### Added\n\n- MacOS: Support for executing SIP binaries in user applications. We hook `execve`\n  and create a SIP-free version of the binary on-the-go and execute that instead of\n  the SIP binary.\n  This means we now support running bash scripts with mirrord also on MacOS.\n  Closes [#649](https://github.com/metalbear-co/mirrord/issues/649).\n\n### Changed\n\n- Only warn about invalid certificates once per agent.\n- Reduce tokio features to needed ones only.\n\n### Fixed\n\n- CI: Fix regex for homebrew formula\n- Potentially ignoring write calls (`fd < 2`).\n- CI: Fix release for linux aarch64. Fixes [#760](https://github.com/metalbear-co/mirrord/issues/760).\n- Possible cases where we don't close fds correctly.\n\n## 3.10.4\n\n### Fixed\n\n- VS Code Extension: Fix crash when no env vars are defined in launch.json\n\n## 3.10.3\n\n### Changed\n\n- CLI: change temp lib file to only be created for new versions\n- mirrord-config: refactored macro so future implementations will be easier\n\n### Fixed\n\n- Release: fix homebrew release step\n\n## 3.10.2\n\n### Fixed\n\n- CI: fix `release_gh` zip file step\n\n## 3.10.1\n\n### Changed\n\n- CI: download shasums and add git username/email to make the homebrew release work\n- Remove `unimplemented` for some IO cases, we now return `Unknown` instead. Also added warning logs for these cases to track.\n- Only recommend `--accept-invalid-certificates` on connection errors if not already set.\n- Terminate user application on connection error instead of only stopping mirrord.\n\n## 3.10.0\n\n### Added\n\n- CI: Update homebrew formula on release, refer [#484](https://github.com/metalbear-co/mirrord/issues/484)\n\n### Changed\n\n- VS Code Extension: change extension to use the target specified in the mirrord config file, if specified, rather than show the pod dropdown\n\n## 3.9.0\n\n### Added\n\n- `MIRRORD_AGENT_NETWORK_INTERFACE` environment variable/file config to let user control which network interface to use. Workaround for [#670](https://github.com/metalbear-co/mirrord/issues/670).\n- mirrord-config: `deprecated` and `unstable` tags to MirrordConfg macro for messaging user when using said fields\n\n### Changed\n\n- VS Code Extension: change extension to use a mirrord-config file for configuration\n- VS Code Extension: use the IDE's telemetry settings to determine if telemetry should be enabled\n\n## 3.8.0\n\n### Changed\n\n- mirrord-layer: Remove `unwrap` from initialization functions.\n- Log level of operation bypassing log from warn to trace (for real this time).\n- Perform filesystem operations for paths in `/home` locally by default (for real this time).\n\n### Added\n\n- VS Code Extension: add JSON schema\n- Bypass SIP on MacOS on the executed binary, (also via shebang).\n  See [[#649](https://github.com/metalbear-co/mirrord/issues/649)].\n  This does not yet include binaries that are executed by the first binary.\n\n### Fixed\n\n- fix markdown job by adding the checkout action\n\n## 3.7.3\n\n### Fixed\n\n- mirrord-agent: No longer resolves to `eth0` by default, now we first try to resolve\n  the appropriate network interface, if this fails then we use `eth0` as a last resort.\n  Fixes [#670](https://github.com/metalbear-co/mirrord/issues/670).\n\n### Changed\n\n- intelliJ: use custom delve on macos\n\n## 3.7.2\n\n### Fixed\n\n- Release: fix broken docker build step caused by folder restructure\n\n## 3.7.1\n\n### Fixed\n\n- using gcloud auth for kubernetes. (mistakenly loaded layer into it)\n- debugging Go on VSCode. We patch to use our own delivered delve.\n- Changed layer not to crash when connection is closed by agent. Closed [#693](https://github.com/metalbear-co/mirrord/issues/693).\n\n### Changed\n\n- IntelliJ: fallback to using a textfield if listing namespaces fails\n\n## 3.7.0\n\n### Added\n\n- mirrord-config: New `mirrord-schema.json` file that contains docs and types which should help the user write their mirrord\n  config files. This file has to be manually generated (there is a test to help you remember).\n\n### Fixed\n\n- IntelliJ: Fix occurring of small namespace selection window and make mirrord dialogs resizable\n- IntelliJ: Fix bug when pressing cancel in mirrord dialog and rerunning the application no mirrord window appears again\n- VS Code: Fix crash occurring because it used deprecated env vars.\n\n### Changed\n\n- mirrord-config: Take `schema` feature out of feature flag (now it's always on).\n- mirrord-config: Add docs for the user config types.\n\n## 3.6.0\n\n### Added\n\n- mirrord-layer: Allow capturing tracing logs to file and print github issue creation link via MIRRORD_CAPTURE_ERROR_TRACE env variable\n\n### Fixed\n\n- Fix vscode artifacts where arm64 package was not released.\n- IntelliJ plugin: if namespaces can't be accessed, use the default namespace\n\n### Changed\n\n- Add `/home` to default file exclude list.\n- Changed log level of `Bypassing operation...` from warning to trace.\n- IntelliJ settings default to match CLI/VSCode.\n\n## 3.5.3\n\n### Fixed\n\n- Fixed broken release step for VS Code Darwin arm64 version\n\n## 3.5.2\n\n### Fixed\n\n- Fixed breaking vscode release step\n\n## 3.5.1\n\n### Fixed\n\n- Fixed an issue with the release CI\n\n### Changed\n\n- Update target file config to have `namespace` nested inside of `target` and not a separate `target_namespace`.\n  See [#587](https://github.com/metalbear-co/mirrord/issues/587) and [#667](https://github.com/metalbear-co/mirrord/issues/667)\n\n## 3.5.0\n\n### Added\n\n- aarch64 release binaries (no go support yet, no IntelliJ also).\n- mirrord-layer: Add [`FileFilter`](mirrord-layer/src/file/filter.rs) that allows the user to include or exclude file paths (with regex support) for file operations.\n\n### Changed\n\n- mirrord-layer: Improve error message when user tries to run a program with args without `--`.\n- Add tests for environment variables passed to KubeApi for authentication feature for cli credential fetch\n- Remove openssl/libssl dependency, cross compilation is easier now. (It wasn't needed/used)\n- mirrord-config: Changed the way [`fs`](mirrord-config/src/fs.rs) works: now it supports 2 modes `Simple` and `Advanced`,\n  where `Simple` is similar to the old behavior (enables read-only, read-write, or disable file ops), and `Advanced`\n  allows the user to specify include and exclude (regexes) filters for [`FileFilter`](mirrord-layer/src/file/filter.rs).\n- Lint `README` and update it for `--target` flag.\n- mirrord-layer: improve error message for invalid targets.\n\n### Removed\n\n- `--pod-name`, `--pod-namespace`, `--impersonated_container_name` have been removed in favor of `--target`, `--target-namespace`\n\n### Fixed\n\n- Env var to ignore ports used by a debugger for intelliJ/VSCode, refer [#644](https://github.com/metalbear-co/mirrord/issues/644)\n\n## 3.4.0\n\n### Added\n\n- Add changelog for intelliJ extension, closes [#542](https://github.com/metalbear-co/mirrord/issues/542)\n- Add filter for changelog to ci.yml\n- Telemetry for intelliJ extension.\n\n### Changed\n\n- Update intelliJ extension: lint & bump java version to 17.\n- Added `/Users` and `/Library` to path to ignore for file operations to improve UX on macOS.\n- Use same default options as CLI in intelliJ extension.\n- Improve UI layout of intelliJ extension.\n- Separate tcp and udp outgoing option in intelliJ extension.\n- Tighter control of witch environment variables would be passed to the KubeApi when fetching credentials via cli in kube-config. See [#637](https://github.com/metalbear-co/mirrord/issues/637)\n\n### Fixed\n\n- Lint Changelog and fix level of a \"Changed\" tag.\n- File operations - following symlinks now works as expected. Previously, absolute symlinks lead to use our own path instead of target path.\n  For example, AWS/K8S uses `/var/run/..` for service account credentials. In many machines, `/var/run` is symlink to `/run`\n  so we were using `/run/..` instead of `/proc/{target_pid}/root/run`.\n- Fix not reappearing window after pressing cancel-button in intelliJ extension.\n\n## 3.3.0\n\n### Added\n\n- Telemetries, see [TELEMETRY.md](./TELEMETRY.md) for more information.\n\n### Changed\n\n- Added timeout for \"waiting for pod to be ready...\" in mirrord-layer to prevent unresponsive behavior. See [#579](https://github.com/metalbear-co/mirrord/issues/579)\n- IntelliJ Extension: Default log level to `ERROR` from `DEBUG`\n\n### Fixed\n\n- Issue with [bottlerocket](https://github.com/bottlerocket-os/bottlerocket) where they use `/run/dockershim.sock`\n  instead of the default containerd path. Add new path as fallback.\n\n## 3.2.0\n\n### Changed\n\n- Extended support for both `-s` and `-x` wildcard matching, now supports `PREFIX_*`, `*_SUFFIX`, ect.\n- Add to env default ignore `JAVA_HOME`,`HOMEPATH`,`CLASSPATH`,`JAVA_EXE` as it's usually runtime that you don't want\n  from remote. Possibly fixes issue discussed on Discord (used complained that they had to use absolute path and not\n  relative).\n- Add `jvm.cfg` to default bypass for files.\n- Clarify wrong target error message.\n- mirrord-layer: Improve error message in `connection::handle_error`.\n\n### Fixed\n\n- Don't ignore passed `--pod-namespace` argument, closes\n  [[#605](https://github.com/metalbear-co/mirrord/issues/605)]\n- Replace deprecated environment variables in IntelliJ plugin\n- Issues with IntelliJ extension when debugging Kotlin applications\n- Scrollable list for pods and namespaces for IntelliJ extension,\n  closes [[#610](https://github.com/metalbear-co/mirrord/issues/610)]\n\n### Deprecated\n\n- `--impersonated-container-name` and `MIRRORD_IMPERSONATED_CONTAINER_NAME` are\n  deprecated in favor of `--target` or `MIRRORD_IMPERSONATED_TARGET`\n- `--pod-namespace` and `MIRRORD_AGENT_IMPERSONATED_POD_NAMESPACE` are deprecated in\n  favor of `--target-namespace` and `MIRRORD_TARGET_NAMESPACE`\n\n## 3.1.3\n\n### Changed\n\n- release: VS Code extension release as stable and not pre-release.\n\n### Fixed\n\n- Dev container failing to execute `apt-get install -y clang`\n\n## 3.1.2\n\n### Changed\n\n- Update some texts in documentation, READMEs, and extension package descriptions\n- IntelliJ version check on enabling instead of on project start. Don't check again after less than 3 minutes.\n\n## 3.1.1\n\n### Fixed\n\n- IntelliJ plugin crashing on run because both include and exclude were being set for env vars.\n\n## 3.1.0\n\n### Added\n\n- `pwrite` hook (used by `dotnet`);\n\n### Fixed\n\n- Issue [#577](https://github.com/metalbear-co/mirrord/issues/577). Changed non-error logs from `error!` to `trace!`.\n\n### Changed\n\n- Agent pod definition now has `requests` specifications to avoid being defaulted to high values.\n  See [#579](https://github.com/metalbear-co/mirrord/issues/579).\n- Change VSCode extension configuration to have file ops, outgoing traffic, DNS, and environment variables turned on by\n  default.\n- update intelliJ extension: toggles + panel for include/exclude env vars\n\n## 3.0.22-alpha\n\n### Changed\n\n- Exclude internal configuration fields from generated schema.\n\n### Fixed\n\n- Issue [#531](https://github.com/metalbear-co/mirrord/issues/531). We now detect NixOS/Devbox usage and add `sh` to\n  skipped list.\n\n## 3.0.21-alpha\n\n### Added\n\n- Reuse agent - first process that runs will create the agent and its children will be able to reuse the same one to\n  avoid creating many agents.\n- Don't print progress for child processes to avoid confusion.\n- Skip istio/linkerd-proxy/init container when mirroring a pod without a specific container name.\n- Add \"linkerd.io/inject\": \"disabled\" annotation to pod created by mirrord to avoid linkerd auto inject.\n- mirrord-layer: support `-target deployment/deployment_name/container/container_name` flag to run on a specific\n  container.\n- `/nix/*` path is now ignored for file operations to support NixOS.\n- Shortcut `deploy` for `deployment` in target argument.\n- Added the ability to override environment variables in the config file.\n\n### Changed\n\n- Print exit message when terminating application due to an unhandled error in the layer.\n- mirrord-layer: refactored `pod_api.rs` to be more maintainble.\n- Use kube config namespace by default.\n- mirrord-layer: Ignore `EAFNOSUPPORT` error reporting (valid scenario).\n\n## 3.0.20-alpha\n\n### Added\n\n- `pread` hook (used by `dotnet`);\n- mirrord-layer: ignore opening self-binary (temporal SDK calculates the hash of the binary, and it fails because it\n  happens remotely)\n- Layer integration tests with more apps (testing with Go only on MacOS because of\n  known crash on Linux - [[#380](https://github.com/metalbear-co/mirrord/issues/380)]).\n  Closes [[#472](https://github.com/metalbear-co/mirrord/issues/472)].\n- Added progress reporting to the CLI.\n- CI: use [bors](https://bors.tech/) for merging! woohoo.\n\n### Changed\n\n- Don't report InProgress io error as error (log as info)\n- mirrord-layer: Added some `dotnet` files to `IGNORE_FILES` regex set;\n- mirrord-layer: Added the `Detour` type for use in the `ops` modules instead of `HookResult`. This type supports\n  returning a `Bypass` to avoid manually checking if a hook actually failed or if we should just bypass it;\n- mirrord-protocol: Reduce duplicated types around `read` operation;\n- Layer integration tests for more apps. Closes\n  [[#472](https://github.com/metalbear-co/mirrord/issues/472)].\n- Rename http mirroring tests from `integration` to `http_mirroring` since there are\n  now also integration tests in other files.\n- Delete useless `e2e_macos` CI job.\n- Integration tests also display test process output (with mirrord logs) when they\n  time out.\n- CI: mirrord-layer UT and integration run in same job.\n- .devcontainer: Added missing dependencies and also kind for running e2e tests.\n\n### Fixed\n\n- Fix IntelliJ Extension artifact - use glob pattern\n- Use LabelSelector instead of app=* to select pods from deployments\n- Added another\n  protection [to not execute in child processes from k8s auth](https://github.com/metalbear-co/mirrord/issues/531) by\n  setting an env flag to avoid loading then removing it after executing the api.\n\n## 3.0.19-alpha\n\n### Added\n\n- Release image for armv7 (Cloud ARM)\n\n### Fixed\n\n- Release for non-amd64 arch failed because of lack of QEMU step in the github action. Re-added it\n\n## 3.0.18-alpha\n\n### Changed\n\n- Replaced `pcap` dependency with our own `rawsocket` to make cross compiling faster and easier.\n\n## 3.0.17-alpha\n\n### Fixed\n\n- Release CI: Remove another failing step\n\n## 3.0.16-alpha\n\n### Fixed\n\n- Release CI: Temporarily comment out failing step\n\n## 3.0.15-alpha\n\n### Fixed\n\n- Release CI: Fix checkout action position in intelliJ release.\n\n## 3.0.14-alpha\n\n### Added\n\n- Layer integration test. Tests the layer's loading and hooking in an http mirroring simulation with a flask web app.\n  Addresses but does not\n  close [[#472](https://github.com/metalbear-co/mirrord/issues/472)] (more integration tests still needed).\n\n### Fixed\n\n- Release CI: Fix paths for release artifacts\n\n## 3.0.13-alpha\n\n### Added\n\n- mirrord-cli: added a SIP protection check for macos binaries,\n  closes [[#412](https://github.com/metalbear-co/mirrord/issues/412)]\n\n### Fixed\n\n- Fixed unused dependencies issue, closes [[#494](https://github.com/metalbear-co/mirrord/issues/494)]\n\n### Changed\n\n- Remove building of arm64 Docker image from the release CI\n\n## 3.0.12-alpha\n\n### Added\n\n- Release CI: add extensions as artifacts, closes [[#355](https://github.com/metalbear-co/mirrord/issues/355)]\n\n### Changed\n\n- Remote operations that fail logged on `info` level instead of `error` because having a file not found, connection\n  failed, etc can be part of a valid successful flow.\n- mirrord-layer: When handling an outgoing connection to localhost, check first if it's a socket we intercept/mirror,\n  then just let it connect normally.\n- mirrord-layer: removed `tracing::instrument` from `*_detour` functions.\n\n### Fixed\n\n- `getaddrinfo` now uses [`trust-dns-resolver`](https://docs.rs/trust-dns-resolver/latest/trust_dns_resolver/) when\n  resolving DNS (previously it would do a `getaddrinfo` call in mirrord-agent that could result in incompatibility\n  between the mirrored pod and the user environments).\n- Support clusters running Istio. Closes [[#485](https://github.com/metalbear-co/mirrord/issues/485)].\n\n## 3.0.11-alpha\n\n### Added\n\n- Support impersonated deployments, closes [[#293](https://github.com/metalbear-co/mirrord/issues/293)]\n- Shorter way to select which deployment/pod/container to impersonate through `--target`\n  or `MIRRORD_IMPERSONATED_TARGET`, closes [[#392](https://github.com/metalbear-co/mirrord/issues/392)]\n- mirrord-layer: Support config from file alongside environment variables.\n- intellij-ext: Add version check, closes [[#289](https://github.com/metalbear-co/mirrord/issues/289)]\n- intellij-ext: better support for Windows with WSL.\n\n### Deprecated\n\n- `--pod-name` or `MIRRORD_AGENT_IMPERSONATED_POD_NAME` is deprecated in favor of `--target`\n  or `MIRRORD_IMPERSONATED_TARGET`\n\n### Fixed\n\n- tcp-steal working with linkerd meshing.\n- mirrord-layer should exit when agent disconnects or unable to make initial connection\n\n## 3.0.10-alpha\n\n### Added\n\n- Test that verifies that outgoing UDP traffic (only with a bind to non-0 port and a\n  call to `connect`) is successfully intercepted and forwarded.\n\n### Fixed\n\n- macOS binaries should be okay now.\n\n## 3.0.9-alpha\n\n### Changed\n\n- Ignore http tests because they are unstable, and they block the CI.\n- Bundle arm64 binary into the universal binary for MacOS.\n\n## 3.0.8-alpha\n\n### Fixed\n\n- release CI: Fix dylib path for `dd`.\n\n## 3.0.7-alpha\n\n### Fixed\n\n- mirrord-layer: Fix `connect` returning error when called on UDP sockets and the\n  outgoing traffic feature of mirrord is disabled.\n- mirrord-agent: Add a `tokio::time:timeout` to `TcpStream::connect`, fixes golang issue where sometimes it would get\n  stuck attempting to connect on IPv6.\n- intelliJ-ext: Fix CLion crash issue, closes [[#317](https://github.com/metalbear-co/mirrord/issues/317)]\n- vscode-ext: Support debugging Go, and fix issues with configuring file ops and traffic stealing.\n\n### Changed\n\n- mirrord-layer: Remove check for ignored IP (localhost) from `connect`.\n- mirrord-layer: Refactor `connect` function to be less bloated.\n- `.dockerignore` now ignores more useless files (reduces mirrord-agent image build time, and size).\n- mirrord-agent: Use `tracing::instrument` for the outgoing traffic feature.\n- mirrord-agent: `IndexAllocator` now uses `ConnectionId` for outgoing traffic feature.\n\n## 3.0.6-alpha\n\n### Changed\n\n- mirrord-layer: Remove `tracing::instrument` from `go_env::goenvs_unix_detour`.\n- mirrord-layer: Log to info instead of error when failing to write to local tunneled streams.\n\n### Added\n\n- mirrord-layer, mirrord-cli: new command line argument/environment variable - `MIRRORD_SKIP_PROCESSES` to provide a\n  list of comma separated processes to not to load into.\n  Closes [[#298](https://github.com/metalbear-co/mirrord/issues/298)]\n  , [[#308](https://github.com/metalbear-co/mirrord/issues/308)]\n- release CI: add arm64e to the universal dylib\n- intellij-ext: Add support for Goland\n\n## 3.0.5-alpha\n\n### Fixed\n\n- mirrord-layer: Return errors from agent when `connect` fails back to the hook (previously we were handling these as\n  errors in layer, so `connect` had slightly wrong behavior).\n- mirrord-layer: instrumenting error when `write_detur` is called to stdout/stderr\n- mirrord-layer: workaround for `presented server name type wasn't supported` error when Kubernetes server has IP for CN\n  in certificate. [[#388](https://github.com/metalbear-co/mirrord/issues/388)]\n\n### Changed\n\n- mirrord-layer: Use `tracing::instrument` to improve logs.\n\n### Added\n\n- Outgoing UDP test with node. Closes [[#323](https://github.com/metalbear-co/mirrord/issues/323)]\n\n## 3.0.4-alpha\n\n### Fixed\n\n- Fix crash in VS Code extension happening because the MIRRORD_OVERRIDE_ENV_VARS_INCLUDE and\n  MIRRORD_OVERRIDE_ENV_VARS_EXCLUDE vars being populated with empty values (rather than not being populated at all)\n  .Closes [[#413](https://github.com/metalbear-co/mirrord/issues/413)].\n- Add exception to gradle when dylib/so file is not found.\n  Closes [[#345](https://github.com/metalbear-co/mirrord/issues/345)]\n- mirrord-layer: Return errors from agent when `connect` fails back to the hook (previously we were handling these as\n  errors in layer, so `connect` had slightly wrong behavior).\n\n## 3.0.3-alpha\n\n### Changed\n\n- Changed agent namespace to default to the pod namespace.\n  Closes [[#404](https://github.com/metalbear-co/mirrord/issues/404)].\n\n## 3.0.2-alpha\n\n### Added\n\n- Code sign Apple binaries.\n- CD - Update latest tag after release is published.\n\n### Changed\n\n- In `go-e2e` test, call `os.Exit` instead fo sending `SIGINT` to the process.\n- Install script now downloads latest tag instead of main branch to avoid downtime on installs.\n\n### Fixed\n\n- Fix Environment parsing error when value contained '='\n  Closes [[#387](https://github.com/metalbear-co/mirrord/issues/387)].\n- Fix bug in outgoing traffic with multiple requests in quick succession.\n  Closes [[#331](https://github.com/metalbear-co/mirrord/issues/331)].\n\n## 3.0.1-alpha\n\n### Fixed\n\n- Add missing dependency breaking the VS Code release.\n\n## 3.0.0-alpha\n\n### Added\n\n- New feature: UDP outgoing, mainly for Go DNS but should work for most use cases also!\n- E2E: add tests for python's fastapi with uvicorn\n- Socket ops - `connect`: ignore localhost and ports 50000 - 60000 (reserved for debugger)\n- Add \"*.plist\" to `IGNORE_REGEX`, refer [[#350](https://github.com/metalbear-co/mirrord/issues/350)].\n\n### Changed\n\n- Change all functionality (incoming traffic mirroring, remote DNS outgoing traffic, environment variables, file reads)\n  to be enabled by default. ***Note that flags now disable functionality***\n\n### Fixed\n\n- mirrord-layer: User-friendly error for invalid kubernetes api certificate\n- mirrord-cli: Add random prefix to the generated shared lib to prevent Bus Error/EXC_BAD_ACCESS\n- Support for Go 1.19>= syscall hooking\n- Fix Python debugger crash in VS Code Extension. Closes [[#350](https://github.com/metalbear-co/mirrord/issues/350)].\n\n## 2.13.0\n\n### Added\n\n- Release arm64 agent image.\n\n### Fixed\n\n- Use selected namespace in IntelliJ plugin instead of always using default namespace.\n\n## 2.12.1\n\n### Fixed\n\n- Fix bug where VS Code extension would crash on startup due to new configuration values not being the correct type.\n- Unset DYLD_INSERT_LIBRARIES/LD_PRELOAD when creating the agent.\n  Closes [[#330](https://github.com/metalbear-co/mirrord/issues/330)].\n- Fix NullPointerException in IntelliJ Extension. Closes [[#335](https://github.com/metalbear-co/mirrord/issues/335)].\n- FIx dylib/so paths for the IntelliJ Extension. Closes [[#337](https://github.com/metalbear-co/mirrord/pull/352)].\n\n## 2.12.0\n\n### Added\n\n- Add more configuration values to the VS Code extension.\n- Warning when using remote tcp without remote DNS (can cause ipv6/v4 issues).\n  Closes [#327](https://github.com/metalbear-co/mirrord/issues/327)\n\n### Fixed\n\n- VS Code needed restart to apply kubectl config/context change.\n  Closes [316](https://github.com/metalbear-co/mirrord/issues/316).\n- Fixed DNS feature causing crash on macOS on invalid DNS name due to mismatch of return\n  codes. [#321](https://github.com/metalbear-co/mirrord/issues/321).\n- Fixed DNS feature not using impersonated container namespace, resulting with incorrect resolved DNS names.\n- mirrord-agent: Use `IndexAllocator` to properly generate `ConnectionId`s for the tcp outgoing feature.\n- tests: Fix outgoing and DNS tests that were passing invalid flags to mirrord.\n- Go Hooks - use global ENABLED_FILE_OPS\n- Support macOS with apple chip in the IntelliJ plugin.\n  Closes [#337](https://github.com/metalbear-co/mirrord/issues/337).\n\n## 2.11.0\n\n### Added\n\n- New feature: mirrord now supports TCP traffic stealing instead of mirroring. You can enable it by\n  passing `--tcp-steal` flag to cli.\n\n### Fixed\n\n- mirrord-layer: Go environment variables crash - run Go env setup in a different stack (should\n  fix [#292](https://github.com/metalbear-co/mirrord/issues/292))\n\n### Changed\n\n- mirrord-layer: Add `#![feature(let_chains)]` to `lib.rs` to support new compiler version.\n\n## 2.10.1\n\n### Fixed\n\n- CI:Release - Fix typo that broke the build\n\n## 2.10.0\n\n### Added\n\n- New feature, [tcp outgoing traffic](https://github.com/metalbear-co/mirrord/issues/27). It's now possible to make\n  requests to a remote host from the staging environment context. You can enable this feature setting\n  the `MIRRORD_TCP_OUTGOING` variable to true, or using the `-o` option in mirrord-cli.\n- mirrord-cli add login command for logging in to metalbear-cloud\n- CI:Release - Provide zip and sha256 sums\n\n### Fixed\n\n- Environment variables feature on Golang programs. Issue #292 closed in #299\n\n## 2.9.1\n\n### Fixed\n\n- CI - set typescript version at 4.7.4 to fix broken release action\n\n## 2.9.0\n\n### Added\n\n- Support for Golang fileops\n- IntelliJ Extension for mirrord\n\n### Changed\n\n- mirrord-layer: Added common `Result` type to to reduce boilerplate, removed dependency of `anyhow` crate.\n- mirrord-layer: Split `LayerError` into `LayerError` and `HookError` to distinguish between errors that can be handled\n  by the layer and errors that can be handled by the hook. (no more requiring libc errno for each error!).\n  Closes [#247](https://github.com/metalbear-co/mirrord/issues/247)\n\n## 2.8.1\n\n### Fixed\n\n- CI - remove usage of ubuntu-18.04 machines (deprecated)\n\n## 2.8.0\n\n### Added\n\n- E2E - add basic env tests for bash scripts\n\n### Fixed\n\n- mirrord-agent - Update pcap library, hopefully will fix dropped packets (syn sometimes missed in e2e).\n- mirrord-agent/layer - Sometimes layer tries to connect to agent before it finsihed loading, even though pod is\n  running. Added watching the log stream for a \"ready\" log message before attempting to connect.\n\n### Changed\n\n- E2E - describe all pods on failure and add file name to print of logs.\n- E2E - print timestamp of stdout/stderr of `TestProcess`.\n- E2E - Don't delete pod/service on failure, instead leave them for debugging.\n- mirrord-agent - Don't use `tokio::spawn` for spawning `sniffer` (or any other namespace changing task) to avoid\n  namespace-clashing/undefined behavior. Possibly fixing bugs.\n- Change the version check on the VS Code extension to happen when mirrord is enabled rather than when the IDE starts\n  up.\n\n## 2.7.0\n\n### Added\n\n- mirrord-layer: You can now pass `MIRRORD_AGENT_COMMUNICATION_TIMEOUT` as environment variable to control agent\n  timeout.\n- Expand file system operations with `access` and `faccessat` hooks for absolute paths\n\n### Fixed\n\n- Ephemeral Containers didn't wait for the right condition, leading to timeouts in many cases.\n- mirrord-layer: Wait for the correct condition in job creation, resolving startup/timeout issues.\n- mirrord-layer: Add a sleep on closing local socket after receiving close to let local application respond before\n  closing.\n- mirrord-layer: Fix DNS issue where `ai_addr` would not live long enough (breaking the remote DNS feature).\n\n### Changed\n\n- Removed unused dependencies from `mirrord-layer/Cargo.toml`. (Closes #220)\n- reduce e2e flakiness (add message sent on tcp listen subscription, wait for that message)\n- reduce e2e flakiness - increase timeout time\n- mirrord-layer - increase agent creation timeout (to reduce e2e flakiness on macOS)\n- E2E - Don't do file stuff on http traffic to reduce flakiness (doesn't add any coverage value..)\n- mirrord-layer - Change tcp mirror tunnel `select` to be biased so it flushes all data before closing it (better\n  testing, reduces e2e flakiness)\n- E2E - unify resolve_node_host for linux and macOS with support for wsl provided Docker & Kubernetes\n- E2E - add `trace` for tests to have paramaterized arguments printed\n- mirrord-agent - add debug print of args to identify runs\n- E2E - remove double `--extract-path` parameter in tests\n- E2E - macOS colima start with 3 cores and 8GB of RAM.\n- E2E - Increase agent communication timeout to reduce flakiness.\n- mirrord-layer - add `DetourGuard` to prevent unwanted calls to detours from our code.\n- mirrord-layer - extract reused detours to seperate logic functions\n- E2E - macOS run only sanity http mirror traffic with Python\n\n## 2.6.0\n\n### Added\n\n- Add a flag for the agent, `--ephemeral-container`, to correctly refer to the filesystem i.e. refer to root path\n  as `/proc/1/root` when the flag is on, otherwise `/`.\n- Add support for Golang on amd64 (x86-64).\n\n### Changed\n\n- Assign a random port number instead of `61337`. (Reason: A forking process creates multiple agents sending traffic on\n  the same port, causing addrinuse error.)\n- `mirrord-layer/socket` now uses `socket2::SockAddr` to comply with Rust's new IP format.\n\n### Fixed\n\n- Fix filesystem tests to only run if the default path exists.\n- Fix extension not running due to the node_modules directory not being packaged.\n\n## 2.5.0\n\n### Added\n\n- New feature, [remote DNS resolving](https://github.com/metalbear-co/mirrord/issues/27#issuecomment-1154072686).\n  It is now possible to use the remote's `addrinfo` by setting the `MIRRORD_REMOTE_DNS` variable to\n  `true`, or using the `-d` option in mirrord-cli.\n- New feature, [Ephemeral Containers](https://github.com/metalbear-co/mirrord/issues/172).\n  Use Kubernetes beta feature `Ephemeral Containers` to mirror traffic with the `--ephemeral-container` flag.\n- E2E tests on macos for Golang using the Gin framework.\n\n### Changed\n\n- Refactored `mirrord-layer/socket` into a module structure similar to `mirrord-layer/file`.\n- Refactored the error part of the many `Result<Response, ResponseError>`.\n- Refactored `file` related functions, created `FileHandler` and improved structure.\n- Refactored error handling in mirrord-layer.\n- E2E: Collect minikube logs and fix collecting container logs\n- E2E: macOS use colima instead of minikube.\n- Refactored `mirrord-layer/lib.rs` - no more passing many arguments! :)\n- Refactored `mirrord-layer/lib.rs` - remove `unwrap()` and propagate error using `Result`\n\n### Fixed\n\n- Handle unwraps in fileops to gracefully exit and enable python fileops tests.\n- Changed `addrinfo` to `VecDeque` - fixes a potential bug (loss of order)\n\n## 2.4.1\n\n### Added\n\n- mirrord-cli `exec` subcommand accepts `--extract-path` argument to set the directory to extract the library to. Used\n  for tests mainly.\n- mirrord-layer provides `MIRRORD_IMPERSONATED_CONTAINER_NAME` environment variable to specify container name to\n  impersonate. mirrord-cli accepts argument to set variable.\n- vscode-ext provides quick-select for setting `MIRRORD_IMPERSONATED_CONTAINER_NAME`\n\n### Changed\n\n- Refactor e2e, enable only Node HTTP mirroring test.\n- E2E: add macOS to E2E, support using minikube by env var.\n- E2E: Skip loading to docker before loading to minikube (load directly to minikube..)\n- layer: Environment variables now load before process starts, no more race conditions.\n\n### Fixed\n\n- Support connections that start with tcp flags in addition to Syn (on macOS CI we saw CWR + NS)\n- `fcntl` error on macOS [#184](https://github.com/metalbear-co/mirrord/issues/184) by a workaround.\n\n## 2.3.1\n\n### Changed\n\n- Refactor(agent) - change `FileManager` to be per peer, thus removing the need of it being in a different task, moving\n  the handling to the peer logic, change structure of peer handling to a struct.\n- Don't fail environment variable request if none exists.\n- E2E: Don't assert jobs and pods length, to allow better debugging and less flakiness.\n- Refactor(agent) - Main loop doesn't pass messages around but instead spawned peers interact directly with tcp sniffer.\n  Renamed Peer -> Client and ClientID.\n- Add context to agent/job creation errors (Fixes #112)\n- Add context to stream creation error (Fixes #110)\n- Change E2E to use real app, closes [#149](https://github.com/metalbear-co/mirrord/issues/149)\n\n## 2.3.0\n\n### Added\n\n- Add support for overriding a process' environment variables by setting `MIRRORD_OVERRIDE_ENV_VARS` to `true`. To\n  filter out undesired variables, use the `MIRRORD_OVERRIDE_FILTER_ENV_VARS` configuration with arguments such\n  as `FOO;BAR`.\n\n### Changed\n\n- Remove `unwrap` from the `Future` that was waiting for Kube pod to spin up in `pod_api.rs`. (Fixes #110)\n- Speed up agent container image building by using a more specific base image.\n- CI: Remove building agent before building & running tests (duplicate)\n- CI: Add Docker cache to Docker build-push action to reduce build duration.\n- CD release: Fix universal binary for macOS\n- Refactor: Change protocol + mirrord-layer to split messages into modules, so main module only handles general\n  messages, passing down to the appropriate module for handling.\n- Add a CLI flag to specify `MIRRORD_AGENT_TTL`\n- CI: Collect mirrord-agent logs in case of failure in e2e.\n- Add \"app\" = \"mirrord\" label to the agent pod for log collection at ease.\n- CI: Add sleep after local app finishes loading for agent to load filter make tests less flaky.\n- Handle relative paths for open, openat\n- Fix once cell renamings, PR [#98165](https://github.com/rust-lang/rust/pull/98165)\n- Enable the blocking feature of the `reqwest` library\n\n## 2.2.1\n\n### Changed\n\n- Compile universal binaries for MacOS. (Fixes #131)\n- E2E small improvements, removing sleeps. (Fixes #99)\n\n## 2.2.0\n\n### Added\n\n- File operations are now available behind the `MIRRORD_FILE_OPS` env variable, this means that mirrord now hooks into\n  the following file functions: `open`, `fopen`, `fdopen`, `openat`, `read`, `fread`, `fileno`, `lseek`, and `write` to\n  provide a mirrored file system.\n- Support for running x64 (Intel) binary on arm (Silicon) macOS using mirrord. This will download and use the x64\n  mirrord-layer binary when needed.\n- Add detours for fcntl/dup system calls, closes [#51](https://github.com/metalbear-co/mirrord/issues/51)\n\n### Changed\n\n- Add graceful exit for library extraction logic in case of error.\n- Refactor the CI by splitting the building of mirrord-agent in a separate job and caching the agent image for E2E\n  tests.\n- Update bug report template to apply to the latest version of mirrord.\n- Change release profile to strip debuginfo and enable LTO.\n- VS Code extension - update dependencies.\n- CLI & macOS: Extract to `/tmp/` instead of `$TMPDIR` as the executed process is getting killed for some reason.\n\n### Fixed\n\n- Fix bug that caused configuration changes in the VS Code extension not to work\n- Fix typos\n\n## 2.1.0\n\n### Added\n\n- Prompt user to update if their version is outdated in the VS Code extension or CLI.\n- Add support for docker runtime, closes [#95](https://github.com/metalbear-co/mirrord/issues/95).\n- Add a keep-alive to keep the agent-pod from exiting, closes [#63](https://github.com/metalbear-co/mirrord/issues/63)\n\n## 2.0.4\n\nComplete refactor and re-write of everything.\n\n- The CLI/VSCode extension now use `mirrord-layer` which loads into debugged process using `LD_PRELOAD`\n  /`DYLD_INSERT_LIBRARIES`.\n  It hooks some of the syscalls in order to proxy incoming traffic into the process as if it was running in the remote\n  pod.\n- Mono repo\n- Fixed unwraps inside\n  of [agent-creation](https://github.com/metalbear-co/mirrord/blob/main/mirrord-layer/src/lib.rs#L75),\n  closes [#191](https://github.com/metalbear-co/mirrord/issues/191)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.287109375,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at hi@metalbear.co. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 19.0107421875,
          "content": "# Contributing\n\nBefore submitting pull request features, please discuss them with us first by opening an issue or a discussion.\nWe welcome new/junior/starting developers. Feel free to join to our [Discord channel](https://discord.gg/metalbear) for help and guidance.\n\nIf you would like to start working on an issue, please comment on the issue on GitHub, so that we can assign you to that\nissue.\n\nMake sure to take a look at the project's [style guide](STYLE.md).\n\n# Contents\n\n- [Contents](#contents)\n  - [Getting Started](#getting-started)\n  - [Debugging mirrord](#debugging-mirrord)\n  - [New Hook Guidelines](#new-hook-guidelines)\n  - [Compiling on MacOs](#compliling-on-macos)\n\n# Getting Started\n\nThe following guide details the steps to setup a local development environment for mirrord and run the E2E tests.\n\n### Prerequisites\n\n- [GCC](https://gcc.gnu.org/) - only on Linux, GCC is needed for Go dynamic linking\n- [Rust](https://www.rust-lang.org/)\n- [NodeJS](https://nodejs.org/en/), [ExpressJS](https://expressjs.com/)\n- [Python](https://www.python.org/), [Flask](https://flask.palletsprojects.com/en/2.1.x/), [FastAPI](https://fastapi.tiangolo.com/)\n- [Go](https://go.dev/)\n- Kubernetes Cluster (local/remote)\n\n### Setup a Kubernetes cluster\n\nFor E2E tests and testing mirrord manually you will need a working Kubernetes cluster. A minimal cluster can be easily setup locally using either of the following:\n\n- [Minikube](https://minikube.sigs.k8s.io/)\n- [Docker Desktop](https://www.docker.com/products/docker-desktop/)\n- [Kind](https://kind.sigs.k8s.io/docs/user/quick-start/)\n\nFor the ease of illustration and testing, we will conform to using Minikube for the rest of the guide.\n\n### Minikube\n\nDownload [Minikube](https://minikube.sigs.k8s.io/)\n\nStart a Minikube cluster with preferred driver. Here we will use the Docker driver.\n\n```bash\nminikube start --driver=docker\n```\n\n### Prepare a cluster\n\n Build mirrord-agent Docker Image.\n \nMake sure you're [logged in to GHCR](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry).\n\nThen run:\n```bash\ndocker buildx build -t test . --file mirrord/agent/Dockerfile\n```\n\n```bash\n❯ docker images\nREPOSITORY                                     TAG       IMAGE ID       CREATED         SIZE\ntest                                           latest    5080c20a8222   2 hours ago     300MB\n```\n\n> **Note:** mirrord-agent is shipped as a container image as mirrord creates a job with this image, providing it with\n> elevated permissions on the same node as the impersonated pod.\n\nLoad mirrord-agent image to Minikube.\n\n```bash\nminikube image load test\n```\n\nSwitch Kubernetes context to `minikube`.\n\n```bash\nkubectl config get-contexts\n```\n\n```bash\nkubectl config use-context minikube\n```\n\n## E2E Tests\n\nThe E2E tests create Kubernetes resources in the cluster that kubectl is configured to use and then run sample apps \nwith the mirrord CLI. The mirrord CLI spawns an agent for the target on the cluster, and runs the test app, with the \nlayer injected into it. Some test apps need to be compiled before they can be used in the tests \n([this should be automated in the future](https://github.com/metalbear-co/mirrord/issues/982)).\n\nThe basic command to run the E2E tests is:\n```bash\ncargo test --package tests\n```\n\nHowever, when running on macOS a universal binary has to be created first:\n```bash\nscripts/build_fat_mac.sh\n```\n\nAnd then in order to use that binary in the tests, run the tests like this:\n```bash\nMIRRORD_TESTS_USE_BINARY=../target/universal-apple-darwin/debug/mirrord cargo test -p tests\n```\n\nIf new tests are added, decorate them with `cfg_attr` attribute macro to define what the tests target.\nFor example, a test which only tests sanity of the ephemeral container feature should be decorated with\n`#[cfg_attr(not(feature = \"ephemeral\"), ignore)]`\n\nOn Linux, running tests may exhaust a large amount of RAM and crash the machine. To prevent this, limit the number of concurrent jobs by running the command with e.g. `-j 4`\n\n### IPv6\n\nSome tests create a single-stack IPv6 service. They can only be run on clusters with IPv6 enabled.\nIn order to test IPv6 on a local cluster on macOS, you can use Kind:\n\n1. `brew install kind`\n2. ```shell\n   cat >kind-config.yaml <<EOF\n   kind: Cluster\n   apiVersion: kind.x-k8s.io/v1alpha4\n   networking:\n     ipFamily: ipv6\n     apiServerAddress: 127.0.0.1\n   EOF\n   ```\n3. `kind create cluster --config kind-config.yaml`\n4. When you run `kubectl get svc -o wide --all-namespaces` you should see IPv6 addresses.\n\n\n### Cleanup\n\nThe Kubernetes resources created by the E2E tests are automatically deleted when the test exits. However, you can preserve resources from failed tests for debugging. To do this, set the `MIRRORD_E2E_PRESERVE_FAILED` variable to any value.\n\n```bash\nMIRRORD_E2E_PRESERVE_FAILED=y cargo test --package tests\n```\n\nAll test resources share a common label `mirrord-e2e-test-resource=true`. To delete them, simply run:\n\n```bash\nkubectl delete namespaces,deployments,services -l mirrord-e2e-test-resource=true\n```\n\n## Integration Tests\n\nThe layer's integration tests test the hooks and their logic without actually using a Kubernetes cluster and spawning\nan agent. The integration tests usually execute a test app and load the dynamic library of the layer into them. The \ntests set the layer to connect to a TCP/IP address instead of spawning a new agent. The tests then have to simulate the \nagent - they accept the layer's connection, receive the layers messages and answer them as the agent would.\n\nSince they do not need to create Kubernetes resources and spawn agents, the integration tests complete much faster than \nthe E2E tests, especially on GitHub Actions.\n\nTherefore, whenever possible we create integration tests, and only resort to E2E tests when necessary.\n\n### Running the Integration Tests\n\nSome test apps need to be compiled before they can be used in the tests\n([this should be automated in the future](https://github.com/metalbear-co/mirrord/issues/982)).\n\nThe basic command to run the integration tests is:\n```bash\ncargo test --package mirrord-layer\n```\n\nHowever, when running on macOS a dylib has to be created first:\n```bash\nscripts/build_fat_mac.sh\n```\n\nAnd then in order to use that dylib in the tests, run the tests like this:\n```bash\nMIRRORD_TEST_USE_EXISTING_LIB=../../target/universal-apple-darwin/debug/libmirrord_layer.dylib cargo test -p mirrord-layer\n```\n\n### Integration Tests logs and you\n\nThese tests will try writing the `mirrord-intproxy` logs to a file in `/tmp/intproxy_logs`\n(the dir will be created if it doesn't exist), the file name should be the same as the test name,\ne.g. `/tmp/intproxy_logs/node_close_application_1_Application__NodeFileOps.log`.\nIf log file creation fails, then you should see the logs in `stderr`.\n\nWhen running these in CI, an artifact is produced (scroll to `Artifacts` which is under\nthe `Actions` -> `Summary` page) with all the test log files that could be created.\n\n## Testing mirrord manually with a sample app.\n\nFrom the root directory of the mirrord repository, create a new testing deployment and service:\n\n```bash\nkubectl apply -f sample/kubernetes/app.yaml\n```\n\n<details>\n  <summary>sample/kubernetes/app.yaml</summary>\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: py-serv-deployment\n  labels:\n    app: py-serv\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: py-serv\n  template:\n    metadata:\n      labels:\n        app: py-serv\n    spec:\n      containers:\n        - name: py-serv\n          image: ghcr.io/metalbear-co/mirrord-pytest:latest\n          ports:\n            - containerPort: 80\n          env:\n            - name: MIRRORD_FAKE_VAR_FIRST\n              value: mirrord.is.running\n            - name: MIRRORD_FAKE_VAR_SECOND\n              value: \"7777\"\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: py-serv\n  name: py-serv\nspec:\n  ports:\n    - port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30000\n  selector:\n    app: py-serv\n  sessionAffinity: None\n  type: NodePort\n\n```\n\n</details>\n\nVerify everything was created after applying the manifest\n\n```bash\n❯ kubectl get services\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE\nkubernetes   ClusterIP   10.96.0.1      <none>        443/TCP        3h13m\npy-serv      NodePort    10.96.139.36   <none>        80:30000/TCP   3h8m\n❯ kubectl get deployments\nNAME                 READY   UP-TO-DATE   AVAILABLE   AGE\npy-serv-deployment   1/1     1            1           3h8m\n❯ kubectl get pods\nNAME                                 READY   STATUS    RESTARTS   AGE\npy-serv-deployment-ff89b5974-x9tjx   1/1     Running   0          3h8m\n```\n\n### Build and run mirrord\n\nTo build this project, you will first need a [Protocol Buffer Compiler](https://grpc.io/docs/protoc-installation/) installed.\n\n#### macOS\n```bash\nscripts/build_fat_mac.sh\n```\n\n#### Linux\n```bash\ncargo build\n```\n\nThe binary is created at `./target/<platform>/debug/mirrord`\n\n#### Run mirrord with a local process\n\nSample web server - `app.js` (present at `sample/node/app.mjs` in the repo)\n\n<details>\n  <summary>sample/node/app.mjs</summary>\n\n```js\nimport { Buffer } from \"node:buffer\";\nimport { createServer } from \"net\";\nimport { open, readFile } from \"fs/promises\";\n\nasync function debug_file_ops() {\n  try {\n    const readOnlyFile = await open(\"/var/log/dpkg.log\", \"r\");\n    console.log(\">>>>> open readOnlyFile \", readOnlyFile);\n\n    let buffer = Buffer.alloc(128);\n    let bufferResult = await readOnlyFile.read(buffer);\n    console.log(\">>>>> read readOnlyFile returned with \", bufferResult);\n\n    const sampleFile = await open(\"/tmp/node_sample.txt\", \"w+\");\n    console.log(\">>>>> open file \", sampleFile);\n\n    const written = await sampleFile.write(\"mirrord sample node\");\n    console.log(\">>>>> written \", written, \" bytes to file \", sampleFile);\n\n    let sampleBuffer = Buffer.alloc(32);\n    let sampleBufferResult = await sampleFile.read(buffer);\n    console.log(\">>>>> read \", sampleBufferResult, \" bytes from \", sampleFile);\n\n    readOnlyFile.close();\n    sampleFile.close();\n  } catch (fail) {\n    console.error(\"!!! Failed file operation with \", fail);\n  }\n}\n\n// debug_file_ops();\n\nconst server = createServer();\nserver.on(\"connection\", handleConnection);\nserver.listen(\n  {\n    host: \"localhost\",\n    port: 80,\n  },\n  function () {\n    console.log(\"server listening to %j\", server.address());\n  }\n);\n\nfunction handleConnection(conn) {\n  var remoteAddress = conn.remoteAddress + \":\" + conn.remotePort;\n  console.log(\"new client connection from %s\", remoteAddress);\n  conn.on(\"data\", onConnData);\n  conn.once(\"close\", onConnClose);\n  conn.on(\"error\", onConnError);\n\n  function onConnData(d) {\n    console.log(\"connection data from %s: %j\", remoteAddress, d.toString());\n    conn.write(d);\n  }\n  function onConnClose() {\n    console.log(\"connection from %s closed\", remoteAddress);\n  }\n  function onConnError(err) {\n    console.log(\"Connection %s error: %s\", remoteAddress, err.message);\n  }\n}\n\n```\n\n</details>\n\n```bash\nRUST_LOG=debug target/debug/mirrord exec -i test -l debug -c --target pod/py-serv-deployment-ff89b5974-x9tjx node sample/node/app.mjs\n```\n> **Note:** You need to change the pod name here to the name of the pod created on your system.\n\n\n```\n.\n.\n.\n2022-06-30T05:14:01.592418Z DEBUG hyper::proto::h1::io: flushed 299 bytes\n2022-06-30T05:14:01.657977Z DEBUG hyper::proto::h1::io: parsed 4 headers\n2022-06-30T05:14:01.658075Z DEBUG hyper::proto::h1::conn: incoming body is empty\n2022-06-30T05:14:01.661729Z DEBUG rustls::conn: Sending warning alert CloseNotify\n2022-06-30T05:14:01.678534Z DEBUG mirrord_layer::sockets: getpeername hooked\n2022-06-30T05:14:01.678638Z DEBUG mirrord_layer::sockets: getsockname hooked\n2022-06-30T05:14:01.678713Z DEBUG mirrord_layer::sockets: accept hooked\n2022-06-30T05:14:01.905378Z DEBUG mirrord_layer::sockets: socket called domain:30, type:1\n2022-06-30T05:14:01.905639Z DEBUG mirrord_layer::sockets: bind called sockfd: 32\n2022-06-30T05:14:01.905821Z DEBUG mirrord_layer::sockets: bind:port: 80\n2022-06-30T05:14:01.906029Z DEBUG mirrord_layer::sockets: listen called\n2022-06-30T05:14:01.906182Z DEBUG mirrord_layer::sockets: bind called sockfd: 32\n2022-06-30T05:14:01.906319Z DEBUG mirrord_layer::sockets: bind: no socket found for fd: 32\n2022-06-30T05:14:01.906467Z DEBUG mirrord_layer::sockets: getsockname called\n2022-06-30T05:14:01.906533Z DEBUG mirrord_layer::sockets: getsockname: no socket found for fd: 32\n2022-06-30T05:14:01.906852Z DEBUG mirrord_layer::sockets: listen: success\n2022-06-30T05:14:01.907034Z DEBUG mirrord_layer::tcp: handle_listen -> listen Listen {\n    fake_port: 51318,\n    real_port: 80,\n    ipv6: true,\n    fd: 32,\n}\nServer listening on port 80\n```\n\nSend traffic to the Kubernetes Pod through the service\n\n```bash\ncurl $(minikube service py-serv --url)\n```\n\nCheck the traffic was received by the local process\n\n```bash\n.\n.\n.\n2022-06-30T05:17:31.877560Z DEBUG mirrord_layer::tcp: handle_incoming_message -> message Close(\n    TcpClose {\n        connection_id: 0,\n    },\n)\n2022-06-30T05:17:31.877608Z DEBUG mirrord_layer::tcp_mirror: handle_close -> close TcpClose {\n    connection_id: 0,\n}\n2022-06-30T05:17:31.877655Z DEBUG mirrord_layer::tcp: handle_incoming_message -> handled Ok(\n    (),\n)\n2022-06-30T05:17:31.878193Z  WARN mirrord_layer::tcp_mirror: tcp_tunnel -> exiting due to remote stream closed!\n2022-06-30T05:17:31.878255Z DEBUG mirrord_layer::tcp_mirror: tcp_tunnel -> exiting\nOK - GET: Request completed\n```\n\n# Debugging mirrord\n\n## mirrord console\n\nDebugging mirrord can get hard since we're running from another app flow, so the fact we're debugging might affect the program and make it unusable/buggy (due to sharing stdout with scripts/other applications).\n\nThe recommended way to do it is to use `mirrord-console`. It is a small application that receives log information from different mirrord instances and prints it, controlled via `RUST_LOG` environment variable.\n\nTo use mirrord console, run it:\n`cargo run --bin mirrord-console --features binary`\n\nThen run mirrord with the environment variable:\n`MIRRORD_CONSOLE_ADDR=127.0.0.1:11233`\n\n## Debugging the Internal Proxy (`intproxy`)\n\nTo see logs from the internal proxy, use the [mirrord console](#mirrord-console).\n\nTo debug it with a debugger:\n\n1. Add\n   ```Rust\n       tokio::time::sleep(Duration::from_secs(20)).await;\n   ```\n   to [somewhere](https://github.com/metalbear-co/mirrord/blob/fa2af7f1e77a9254fb0908be40b0dae5da53d298/mirrord/cli/src/internal_proxy.rs#L145) in the start of the intproxy code.\n2. Set breakpoints in vscode in the relevant lines of the intproxy code.\n3. Build mirrord.\n4. Run mirrord.\n5. Attach a debugger in vscode to the inproxy process. On macOS you can do that with `Cmd` + `Shift` + `P` -> `LLDB: Attach to Process...` -> type `intproxy` and choose the `mirrord intproxy` process. The sleep you added at the start of the intproxy is time for you to attach the debugger.\n\n## Retrieving Agent Logs\n\nBy default, the agent's pod will complete and disappear shortly after the agent exits. In order to be able to retrieve \nthe agent's logs after it crashes, set the agent's pod's TTL to a comfortable number of seconds. This configuration can\nbe specified either as a command line argument (`--agent-ttl`), environment variable (`MIRRORD_AGENT_TTL`), or in a\nconfiguration file:\n```toml\n[agent]\nttl = 30\n```\n\nThen, when running with some reasonable TTL, you can retrieve the agent log like this:\n```bash\nkubectl logs -l app=mirrord --tail=-1 | less -R\n```\n\nThis will retrieve the logs from all running mirrord agents, so it is only useful when just one agent pod exists.\n\nIf there are currently multiple agent pods running on your cluster, you would have to run\n```bash\nkubectl get pods\n```\nand find the name of the agent pod you're interested in, then run\n\n```bash\nkubectl logs <YOUR_POD_NAME> | less -R\n```\n\nwhere you would replace `<YOUR_POD_NAME>` with the name of the pod.\n\n# New Hook Guidelines\n\nAdding a feature to mirrord that introduces a new hook (file system, network) can be tricky and there are a lot of edge cases we might need to cover. \n\nIn order to have a more structured approach, here’s the flow you should follow when working on such a feature.\n\n1. Start with the use case. Write an example use case of the feature, for example “App needs to read credentials from a file”.\n2. Write a minimal app that implements the use case - so in the case of our example, an app that reads credentials from a file. Start with either Node or Python as those are most common.\n3. Figure out what functions need to be hooked in order for the behavior to be run through the mirrord-agent instead of locally. We suggest using `strace`.\n4. Write a doc on how you would hook and handle the cases, for example:\n    1. To implement use case “App needs to read credentials from a file*”\n    2. I will hook `open` and `read` handling calls only with flags O_RDONLY.\n    3. Once `open` is called, I’ll send a blocking request to the agent to open the remote file, returning the return code of the operation. \n    4. Create an fd using `memfd`. The result will be returned to the local app, and if successful we’ll save that fd into a HashMap that matches between local fd and remote fd/identifier. \n    5. When `read` is called, I will check if the fd being read was previously opened by us, and if it is we’ll send a blocking `read` request to the agent. The result will be sent back to the caller.\n    6. And so on.\n5. This doc should go later on to our mirrord docs for advanced developers so people can understand how stuff works\n6. After approval of the implementation, you can start writing code, and add relevant e2e tests.\n\n# Compliling on MacOS\n\nThe `mirrord-agent` crate makes use of the `#[cfg(target_os = \"linux\")]` attribute to allow the whole repo to compile on MacOS when you run `cargo build`.\n\nTo enable `mirrord-agent` code analysis with rust-analyzer:\n1. Install additional targets\n```sh\nrustup target add x86_64-unknown-linux-gnu\nrustup target add aarch64-apple-darwin\nrustup target add x86_64-apple-darwin\nrustup target add aarch64-unknown-linux-gnu\n```\n2. Add additional targets to your local `.cargo/config.toml` block:\n```toml\n[build]\ntarget = [\n    \"aarch64-apple-darwin\",\n    \"x86_64-apple-darwin\",\n    \"x86_64-unknown-linux-gnu\",\n    \"aarch64-unknown-linux-gnu\",\n]\n```\n\nIf you're using rust-analyzer VSCode extension, put this block in `.vscode/settings.json` as well:\n```json\n{\n    \"rust-analyzer.check.targets\": [\n        \"aarch64-apple-darwin\",\n        \"x86_64-apple-darwin\",\n        \"x86_64-unknown-linux-gnu\",\n        \"aarch64-unknown-linux-gnu\"\n    ]\n}\n```\n\nYou can use `cargo-zigbuild` to run `cargo check` or `clippy` on the agent's code on macOS.\n\n`cargo check`\n\n```shell\ncargo-zigbuild check -p mirrord-agent --target x86_64-unknown-linux-gnu\n```\n\n`clippy` only for the agent\n\n```shell\ncargo-zigbuild clippy --target x86_64-unknown-linux-gnu -p mirrord-agent -- -Wclippy::indexing_slicing -D warnings\n```\n\n`clippy` for all code:\n\n```shell\ncargo-zigbuild clippy --lib --bins --all-features --target x86_64-unknown-linux-gnu --tests -- -Wclippy::indexing_slicing -D warnings\n```\n\nIf it doesn't work, try updating `cargo-zigbuild`\n(`cargo install cargo-zigbuild` or maybe `cargo install cargo-zigbuild --force`)\nor via `homebrew` if it was installed via homebrew.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 195.3388671875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"actix-codec\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f7b0a21988c1bf877cf4759ef5ddaac04c1c9fe808c9142ecb78ba97d97a28a\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"memchr\",\n \"pin-project-lite\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"actix-http\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d48f96fc3003717aeb9856ca3d02a8c7de502667ad76eeacd830b48d2e91fac4\"\ndependencies = [\n \"actix-codec\",\n \"actix-rt\",\n \"actix-service\",\n \"actix-utils\",\n \"ahash\",\n \"base64 0.22.1\",\n \"bitflags 2.6.0\",\n \"brotli\",\n \"bytes\",\n \"bytestring\",\n \"derive_more\",\n \"encoding_rs\",\n \"flate2\",\n \"futures-core\",\n \"h2 0.3.26\",\n \"http 0.2.12\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"language-tags\",\n \"local-channel\",\n \"mime\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rand\",\n \"sha1\",\n \"smallvec\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n \"zstd\",\n]\n\n[[package]]\nname = \"actix-macros\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e01ed3140b2f8d422c68afa1ed2e85d996ea619c988ac834d255db32138655cb\"\ndependencies = [\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"actix-router\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13d324164c51f63867b57e73ba5936ea151b8a41a1d23d1031eeb9f70d0236f8\"\ndependencies = [\n \"bytestring\",\n \"cfg-if\",\n \"http 0.2.12\",\n \"regex\",\n \"regex-lite\",\n \"serde\",\n \"tracing\",\n]\n\n[[package]]\nname = \"actix-rt\"\nversion = \"2.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24eda4e2a6e042aa4e55ac438a2ae052d3b5da0ecf83d7411e1a368946925208\"\ndependencies = [\n \"futures-core\",\n \"tokio\",\n]\n\n[[package]]\nname = \"actix-server\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ca2549781d8dd6d75c40cf6b6051260a2cc2f3c62343d761a969a0640646894\"\ndependencies = [\n \"actix-rt\",\n \"actix-service\",\n \"actix-utils\",\n \"futures-core\",\n \"futures-util\",\n \"mio\",\n \"socket2\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"actix-service\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b894941f818cfdc7ccc4b9e60fa7e53b5042a2e8567270f9147d5591893373a\"\ndependencies = [\n \"futures-core\",\n \"paste\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"actix-utils\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88a1dcdff1466e3c2488e1cb5c36a71822750ad43839937f85d2f4d9f8b705d8\"\ndependencies = [\n \"local-waker\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"actix-web\"\nversion = \"4.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9180d76e5cc7ccbc4d60a506f2c727730b154010262df5b910eb17dbe4b8cb38\"\ndependencies = [\n \"actix-codec\",\n \"actix-http\",\n \"actix-macros\",\n \"actix-router\",\n \"actix-rt\",\n \"actix-server\",\n \"actix-service\",\n \"actix-utils\",\n \"actix-web-codegen\",\n \"ahash\",\n \"bytes\",\n \"bytestring\",\n \"cfg-if\",\n \"cookie\",\n \"derive_more\",\n \"encoding_rs\",\n \"futures-core\",\n \"futures-util\",\n \"impl-more\",\n \"itoa\",\n \"language-tags\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"pin-project-lite\",\n \"regex\",\n \"regex-lite\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"smallvec\",\n \"socket2\",\n \"time\",\n \"url\",\n]\n\n[[package]]\nname = \"actix-web-codegen\"\nversion = \"4.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f591380e2e68490b5dfaf1dd1aa0ebe78d84ba7067078512b4ea6e4492d622b8\"\ndependencies = [\n \"actix-router\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"alloc-no-stdlib\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3\"\n\n[[package]]\nname = \"alloc-stdlib\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece\"\ndependencies = [\n \"alloc-no-stdlib\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"apple-codesign\"\nversion = \"0.27.0\"\nsource = \"git+https://github.com/metalbear-co/apple-platform-rs-mini#6d05370d2815a82795cd0ce675f98ec20ec87e0d\"\ndependencies = [\n \"anyhow\",\n \"base64 0.21.7\",\n \"bcder\",\n \"bitflags 2.6.0\",\n \"bytes\",\n \"chrono\",\n \"clap\",\n \"cryptographic-message-syntax\",\n \"der\",\n \"dialoguer\",\n \"difference\",\n \"digest\",\n \"dirs\",\n \"elliptic-curve\",\n \"env_logger 0.10.2\",\n \"figment\",\n \"filetime\",\n \"glob\",\n \"goblin\",\n \"hex\",\n \"log\",\n \"md-5\",\n \"minicbor\",\n \"num-traits\",\n \"object 0.32.2\",\n \"oid-registry 0.6.1\",\n \"once_cell\",\n \"p12\",\n \"p256\",\n \"pem\",\n \"pkcs1\",\n \"pkcs8\",\n \"plist\",\n \"rand\",\n \"rasn\",\n \"rayon\",\n \"regex\",\n \"reqwest 0.11.27\",\n \"ring\",\n \"scroll\",\n \"semver 1.0.24\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"sha2\",\n \"signature\",\n \"simple-file-manifest\",\n \"spake2\",\n \"spki\",\n \"subtle\",\n \"tempfile\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tungstenite 0.21.0\",\n \"uuid\",\n \"walkdir\",\n \"x509\",\n \"x509-certificate 0.23.1\",\n \"xml-rs\",\n \"yasna\",\n \"zeroize\",\n \"zip\",\n \"zip_structs\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"asn1-rs\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f6fd5ddaf0351dff5b8da21b2fb4ff8e08ddd02857f0bf69c47639106c0fff0\"\ndependencies = [\n \"asn1-rs-derive 0.4.0\",\n \"asn1-rs-impl 0.1.0\",\n \"displaydoc\",\n \"nom\",\n \"num-traits\",\n \"rusticata-macros\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"asn1-rs\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5493c3bedbacf7fd7382c6346bbd66687d12bbaad3a89a2d2c303ee6cf20b048\"\ndependencies = [\n \"asn1-rs-derive 0.5.1\",\n \"asn1-rs-impl 0.2.0\",\n \"displaydoc\",\n \"nom\",\n \"num-traits\",\n \"rusticata-macros\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"asn1-rs-derive\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"726535892e8eae7e70657b4c8ea93d26b8553afb1ce617caee529ef96d7dee6c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"synstructure 0.12.6\",\n]\n\n[[package]]\nname = \"asn1-rs-derive\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"965c2d33e53cb6b267e148a4cb0760bc01f4904c1cd4bb4002a085bb016d1490\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure 0.13.1\",\n]\n\n[[package]]\nname = \"asn1-rs-impl\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2777730b2039ac0f95f093556e61b6d26cebed5393ca6f152717777cec3a42ed\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"asn1-rs-impl\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b18050c2cd6fe86c3a76584ef5e0baf286d038cda203eb6223df2cc413565f7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"assert-json-diff\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47e4f2b81832e72834d7518d8487a0396a28cc408186a2e8854c0f98011faf12\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"async-broadcast\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"435a87a52755b8f27fcf321ac4f04b2802e337c8c4872923137471ec39c37532\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"async-socks5\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da2537846e16b96d2972ee52a3b355663872a1a687ce6d57a3b6f6b6a181c89\"\ndependencies = [\n \"thiserror 1.0.69\",\n \"tokio\",\n]\n\n[[package]]\nname = \"async-stream\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b5a71a6f37880a80d1d7f19efd781e4b5de42c88f0722cc13bcb6cc2cfe8476\"\ndependencies = [\n \"async-stream-impl\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-stream-impl\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7c24de15d275a1ecfd47a380fb4d5ec9bfe0933f309ed5e705b775596a3574d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.85\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f934833b4b7233644e5848f235df3f57ed8c80f1528a26c3dfa13d2147fa056\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"atomic\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d818003e740b63afc82337e3160717f4f63078720a810b7b903e70a5d1d2994\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"aws-config\"\nversion = \"1.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c03a50b30228d3af8865ce83376b4e99e1ffa34728220fe2860e4df0bb5278d6\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-runtime\",\n \"aws-sdk-sso\",\n \"aws-sdk-ssooidc\",\n \"aws-sdk-sts\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-json\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-types\",\n \"bytes\",\n \"fastrand\",\n \"hex\",\n \"http 0.2.12\",\n \"ring\",\n \"time\",\n \"tokio\",\n \"tracing\",\n \"url\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-credential-types\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60e8f6b615cb5fc60a98132268508ad104310f0cfb25a1c22eee76efdf9154da\"\ndependencies = [\n \"aws-smithy-async\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-rs\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f409eb70b561706bf8abba8ca9c112729c481595893fd06a2dd9af8ed8441148\"\ndependencies = [\n \"aws-lc-sys\",\n \"paste\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-sys\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"923ded50f602b3007e5e63e3f094c479d9c8a9b42d7f4034e4afe456aa48bfd2\"\ndependencies = [\n \"bindgen\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"paste\",\n]\n\n[[package]]\nname = \"aws-runtime\"\nversion = \"1.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b16d1aa50accc11a4b4d5c50f7fb81cc0cf60328259c587d0e6b0f11385bde46\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-sigv4\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-types\",\n \"bytes\",\n \"fastrand\",\n \"http 0.2.12\",\n \"http-body 0.4.6\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"tracing\",\n \"uuid\",\n]\n\n[[package]]\nname = \"aws-sdk-sqs\"\nversion = \"1.53.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6493ce2b27a2687b0d8a2453bf6ad2499012e9720c3367cb1206496ede475443\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-runtime\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-json\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-types\",\n \"bytes\",\n \"http 0.2.12\",\n \"once_cell\",\n \"regex-lite\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-sdk-sso\"\nversion = \"1.53.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1605dc0bf9f0a4b05b451441a17fcb0bda229db384f23bf5cead3adbab0664ac\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-runtime\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-json\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-types\",\n \"bytes\",\n \"http 0.2.12\",\n \"once_cell\",\n \"regex-lite\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-sdk-ssooidc\"\nversion = \"1.54.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59f3f73466ff24f6ad109095e0f3f2c830bfb4cd6c8b12f744c8e61ebf4d3ba1\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-runtime\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-json\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-types\",\n \"bytes\",\n \"http 0.2.12\",\n \"once_cell\",\n \"regex-lite\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-sdk-sts\"\nversion = \"1.54.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"249b2acaa8e02fd4718705a9494e3eb633637139aa4bb09d70965b0448e865db\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-runtime\",\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-json\",\n \"aws-smithy-query\",\n \"aws-smithy-runtime\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"aws-smithy-xml\",\n \"aws-types\",\n \"http 0.2.12\",\n \"once_cell\",\n \"regex-lite\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-sigv4\"\nversion = \"1.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d3820e0c08d0737872ff3c7c1f21ebbb6693d832312d6152bf18ef50a5471c2\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-smithy-http\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"bytes\",\n \"form_urlencoded\",\n \"hex\",\n \"hmac\",\n \"http 0.2.12\",\n \"http 1.2.0\",\n \"once_cell\",\n \"percent-encoding\",\n \"sha2\",\n \"time\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-smithy-async\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"427cb637d15d63d6f9aae26358e1c9a9c09d5aa490d64b09354c8217cfef0f28\"\ndependencies = [\n \"futures-util\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"aws-smithy-http\"\nversion = \"0.60.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c8bc3e8fdc6b8d07d976e301c02fe553f72a39b7a9fea820e023268467d7ab6\"\ndependencies = [\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"bytes\",\n \"bytes-utils\",\n \"futures-core\",\n \"http 0.2.12\",\n \"http-body 0.4.6\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-smithy-json\"\nversion = \"0.61.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee4e69cc50921eb913c6b662f8d909131bb3e6ad6cb6090d3a39b66fc5c52095\"\ndependencies = [\n \"aws-smithy-types\",\n]\n\n[[package]]\nname = \"aws-smithy-query\"\nversion = \"0.60.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2fbd61ceb3fe8a1cb7352e42689cec5335833cd9f94103a61e98f9bb61c64bb\"\ndependencies = [\n \"aws-smithy-types\",\n \"urlencoding\",\n]\n\n[[package]]\nname = \"aws-smithy-runtime\"\nversion = \"1.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a05dd41a70fc74051758ee75b5c4db2c0ca070ed9229c3df50e9475cda1cb985\"\ndependencies = [\n \"aws-smithy-async\",\n \"aws-smithy-http\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"bytes\",\n \"fastrand\",\n \"h2 0.3.26\",\n \"http 0.2.12\",\n \"http-body 0.4.6\",\n \"http-body 1.0.1\",\n \"httparse\",\n \"hyper 0.14.32\",\n \"hyper-rustls 0.24.2\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"rustls 0.21.12\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"aws-smithy-runtime-api\"\nversion = \"1.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92165296a47a812b267b4f41032ff8069ab7ff783696d217f0994a0d7ab585cd\"\ndependencies = [\n \"aws-smithy-async\",\n \"aws-smithy-types\",\n \"bytes\",\n \"http 0.2.12\",\n \"http 1.2.0\",\n \"pin-project-lite\",\n \"tokio\",\n \"tracing\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-smithy-types\"\nversion = \"1.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38ddc9bd6c28aeb303477170ddd183760a956a03e083b3902a990238a7e3792d\"\ndependencies = [\n \"base64-simd\",\n \"bytes\",\n \"bytes-utils\",\n \"futures-core\",\n \"http 0.2.12\",\n \"http 1.2.0\",\n \"http-body 0.4.6\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"itoa\",\n \"num-integer\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"ryu\",\n \"serde\",\n \"time\",\n \"tokio\",\n \"tokio-util\",\n]\n\n[[package]]\nname = \"aws-smithy-xml\"\nversion = \"0.60.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab0b0166827aa700d3dc519f72f8b3a91c35d0b8d042dc5d643a91e6f80648fc\"\ndependencies = [\n \"xmlparser\",\n]\n\n[[package]]\nname = \"aws-types\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5221b91b3e441e6675310829fd8984801b772cb1546ef6c0e54dec9f1ac13fef\"\ndependencies = [\n \"aws-credential-types\",\n \"aws-smithy-async\",\n \"aws-smithy-runtime-api\",\n \"aws-smithy-types\",\n \"rustc_version\",\n \"tracing\",\n]\n\n[[package]]\nname = \"axum\"\nversion = \"0.7.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edca88bc138befd0323b20752846e6587272d3b03b0343c8ea28a6f819e6e71f\"\ndependencies = [\n \"async-trait\",\n \"axum-core\",\n \"base64 0.22.1\",\n \"bytes\",\n \"futures-util\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"itoa\",\n \"matchit\",\n \"memchr\",\n \"mime\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustversion\",\n \"serde\",\n \"serde_json\",\n \"serde_path_to_error\",\n \"serde_urlencoded\",\n \"sha1\",\n \"sync_wrapper 1.0.2\",\n \"tokio\",\n \"tokio-tungstenite\",\n \"tower 0.5.2\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"axum-core\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09f2bd6146b97ae3359fa0cc6d6b376d9539582c7b4220f041a33ec24c226199\"\ndependencies = [\n \"async-trait\",\n \"bytes\",\n \"futures-util\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"mime\",\n \"pin-project-lite\",\n \"rustversion\",\n \"sync_wrapper 1.0.2\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"backoff\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\"\ndependencies = [\n \"getrandom\",\n \"instant\",\n \"rand\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object 0.36.7\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"backtrace-ext\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"537beee3be4a18fb023b570f80e3ae28003db9167a751266b259926e25539d50\"\ndependencies = [\n \"backtrace\",\n]\n\n[[package]]\nname = \"base16ct\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"base64-simd\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"339abbe78e73178762e23bea9dfd08e697eb3f3301cd4be981c0f78ba5859195\"\ndependencies = [\n \"outref\",\n \"vsimd\",\n]\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b\"\n\n[[package]]\nname = \"bcder\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c627747a6774aab38beb35990d88309481378558875a41da1a4b2e373c906ef0\"\ndependencies = [\n \"bytes\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"bimap\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"230c5f1ca6a325a32553f8640d31ac9b49f2411e901e427570154868b46da4f7\"\n\n[[package]]\nname = \"bincode\"\nversion = \"2.0.0-rc.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f11ea1a0346b94ef188834a65c068a03aec181c94896d481d7a0a40d85b0ce95\"\ndependencies = [\n \"bincode_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"bincode_derive\"\nversion = \"2.0.0-rc.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e30759b3b99a1b802a7a3aa21c85c3ded5c28e1c83170d82d70f08bbf7f3e4c\"\ndependencies = [\n \"virtue\",\n]\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271383c67ccabffb7381723dea0672a673f292304fcb45c01cc648c7a8d58088\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools 0.12.1\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash 1.1.0\",\n \"shlex\",\n \"syn 2.0.95\",\n \"which 4.4.2\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08807e080ed7f9d5433fa9b275196cfc35414f66a0c79d864dc51a0d825231a3\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e764a1d40d510daf35e07be9eb06e75770908c27d411ee6c92109c9840eaaf7\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bitvec\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c\"\ndependencies = [\n \"funty\",\n \"radium\",\n \"tap\",\n \"wyz\",\n]\n\n[[package]]\nname = \"bitvec-nom2\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d988fcc40055ceaa85edc55875a08f8abd29018582647fd82ad6128dba14a5f0\"\ndependencies = [\n \"bitvec\",\n \"nom\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"block-padding\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8894febbff9f758034a5b8e12d87918f56dfc64a8e1fe757d65e29041538d93\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bollard\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97ccca1260af6a459d75994ad5acc1651bcabcbdbc41467cc9786519ab854c30\"\ndependencies = [\n \"base64 0.22.1\",\n \"bollard-stubs\",\n \"bytes\",\n \"futures-core\",\n \"futures-util\",\n \"hex\",\n \"http 1.2.0\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-named-pipe\",\n \"hyper-util\",\n \"hyperlocal\",\n \"log\",\n \"pin-project-lite\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_repr\",\n \"serde_urlencoded\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-util\",\n \"tower-service\",\n \"url\",\n \"winapi\",\n]\n\n[[package]]\nname = \"bollard-stubs\"\nversion = \"1.47.1-rc.27.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f179cfbddb6e77a5472703d4b30436bff32929c0aa8a9008ecf23d1d3cdd0da\"\ndependencies = [\n \"serde\",\n \"serde_repr\",\n \"serde_with\",\n]\n\n[[package]]\nname = \"brotli\"\nversion = \"6.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74f7971dbd9326d58187408ab83117d8ac1bb9c17b085fdacd1cf2f598719b6b\"\ndependencies = [\n \"alloc-no-stdlib\",\n \"alloc-stdlib\",\n \"brotli-decompressor\",\n]\n\n[[package]]\nname = \"brotli-decompressor\"\nversion = \"4.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a45bd2e4095a8b518033b128020dd4a55aab1c0a381ba4404a472630f4bc362\"\ndependencies = [\n \"alloc-no-stdlib\",\n \"alloc-stdlib\",\n]\n\n[[package]]\nname = \"bs-filter\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/metalbear-co/rawsocket.git#4d5a48f4e18e3b6c51ec50dae0ed19c79819e668\"\ndependencies = [\n \"libc\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"531a9155a481e2ee699d4f98f43c0ca4ff8ee1bfd55c31e9e98fb29d2b176fe0\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byte-strings-proc_macros\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e78e8673d97234c7a07636474b02c92fad06a0f26f70581aa46aee124c508e5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef657dfab802224e671f5818e9a4935f9b1957ed18e58292690cc39e7a4092a3\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"bytes-utils\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dafe3a8757b027e2be6e4e5601ed563c55989fcf1546e933c66c8eb3a058d35\"\ndependencies = [\n \"bytes\",\n \"either\",\n]\n\n[[package]]\nname = \"bytesize\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e368af43e418a04d52505cf3dbc23dda4e3407ae2fa99fd0e4f308ce546acc\"\n\n[[package]]\nname = \"bytestring\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e465647ae23b2823b0753f50decb2d5a86d2bb2cac04788fafd1f80e45378e5f\"\ndependencies = [\n \"bytes\",\n]\n\n[[package]]\nname = \"c2rust-bitfields\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"367e5d1b30f28be590b6b3868da1578361d29d9bfac516d22f497d28ed7c9055\"\ndependencies = [\n \"c2rust-bitfields-derive\",\n]\n\n[[package]]\nname = \"c2rust-bitfields-derive\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a279db9c50c4024eeca1a763b6e0f033848ce74e83e47454bcf8a8a98f7b0b56\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46e3374c604fb39d1a2f35ed5e4a4e30e60d01fab49446e08f1b3e9a90aef202\"\ndependencies = [\n \"semver 0.9.0\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"cbc\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"serde\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"chrono-tz\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93698b29de5e97ad0ae26447b344c482a7284c737d9ddc5f9e52b74a336671bb\"\ndependencies = [\n \"chrono\",\n \"chrono-tz-build\",\n \"phf\",\n]\n\n[[package]]\nname = \"chrono-tz-build\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c088aee841df9c3041febbb73934cfc39708749bf96dc827e3359cd39ef11b1\"\ndependencies = [\n \"parse-zoneinfo\",\n \"phf\",\n \"phf_codegen\",\n]\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n]\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9560b07a799281c7e0958b9296854d6fafd4c5f31444a7e5bb1ad6dde5ccf1bd\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"874e0dd3eb68bf99058751ac9712f622e61e6f393a94f7128fa26e3f02f5c7cd\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"942dc5991a34d8cf58937ec33201856feba9cbceeeab5adf04116ec7c763bff1\"\ndependencies = [\n \"clap\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54b755194d6389280185988721fffba69495eed5ee9feeee9a599b53db80318c\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.52\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c682c223677e0e5b6b7f63a64b9351844c3f1b1678a68b7ee617e30fb082620e\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea3c6ecd8059b57859df5c69830340ed3c41d30e3da0c1cbed90a96ac853041b\"\ndependencies = [\n \"encode_unicode\",\n \"libc\",\n \"once_cell\",\n \"unicode-width 0.2.0\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8\"\n\n[[package]]\nname = \"const-random\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87e00182fe74b066627d63b85fd550ac2998d4b0bd86bfed477a0ae4c7c71359\"\ndependencies = [\n \"const-random-macro\",\n]\n\n[[package]]\nname = \"const-random-macro\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9d839f2a20b0aee515dc581a6172f2321f96cab76c1a38a4c584a194955390e\"\ndependencies = [\n \"getrandom\",\n \"once_cell\",\n \"tiny-keccak\",\n]\n\n[[package]]\nname = \"const_panic\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53857514f72ee4a2b583de67401e3ff63a5472ca4acf289d09a9ea7636dfec17\"\n\n[[package]]\nname = \"containerd-client\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce8bbfa492159a878a45bbd8fbd8d5a6fb2a4d6bd74836204a324523ba3233e0\"\ndependencies = [\n \"hyper-util\",\n \"prost\",\n \"prost-build\",\n \"prost-types\",\n \"tokio\",\n \"tonic\",\n \"tonic-build\",\n \"tower 0.4.13\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e\"\n\n[[package]]\nname = \"cookie\"\nversion = \"0.16.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e859cd57d0710d9e06c381b550c06e76992472a8c6d527aecd2fc673dcc231fb\"\ndependencies = [\n \"percent-encoding\",\n \"time\",\n \"version_check\",\n]\n\n[[package]]\nname = \"cookie-factory\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9885fa71e26b8ab7855e2ec7cae6e9b380edff76cd052e07c683a0319d51b3a2\"\ndependencies = [\n \"futures\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ba6d68e24814cb8de6bb986db8222d3a027d15872cabc0d18817bc3c0e4471\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-bigint\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dc92fb57ca44df6db8059111ab3af99a63d5d0f8375d9972e319a379c6bab76\"\ndependencies = [\n \"generic-array\",\n \"rand_core\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"cryptographic-message-syntax\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43c324ba1028cef7e3a71a00cbf585637bb0215dec2f6a2b566d094190a1309b\"\ndependencies = [\n \"bcder\",\n \"bytes\",\n \"chrono\",\n \"hex\",\n \"pem\",\n \"reqwest 0.11.27\",\n \"ring\",\n \"signature\",\n \"x509-certificate 0.23.1\",\n]\n\n[[package]]\nname = \"cstr_core\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd98742e4fdca832d40cab219dc2e3048de17d873248f83f17df47c1bea70956\"\ndependencies = [\n \"cty\",\n \"memchr\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdc4883a9c96732e4733212c01447ebd805833b7275a73ca3ee080fd77afdaf\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ctor\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a2785755761f3ddc1492979ce1e48d2c00d09311c39e4466429188f3dd6501\"\ndependencies = [\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"cty\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b365fabc795046672053e29c954733ec3b05e4be654ab130fe8f1f94d7051f35\"\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"4.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fb8b7c4503de7d6ae7b42ab72a5a59857b4c937ec27a3d4539dba95b5ab2be\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"curve25519-dalek-derive\",\n \"fiat-crypto\",\n \"rand_core\",\n \"rustc_version\",\n \"subtle\",\n]\n\n[[package]]\nname = \"curve25519-dalek-derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"6.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5041cc499144891f3790297212f32a74fb938e5136a14943f338ef9e0ae276cf\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n \"hashbrown 0.14.5\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"data-encoding\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2\"\n\n[[package]]\nname = \"der\"\nversion = \"0.7.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55bf8e7b65898637379c1b74eb1551107c8294ed26d855ceb9fd1a09cfc9bc0\"\ndependencies = [\n \"const-oid\",\n \"pem-rfc7468\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"der-parser\"\nversion = \"9.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cd0a5c643689626bec213c4d8bd4d96acc8ffdb4ad4bb6bc16abf27d5f4b553\"\ndependencies = [\n \"asn1-rs 0.6.2\",\n \"displaydoc\",\n \"nom\",\n \"num-bigint\",\n \"num-traits\",\n \"rusticata-macros\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n \"serde\",\n]\n\n[[package]]\nname = \"derive_builder\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"507dfb09ea8b7fa618fcf76e953f4f5e192547945816d5358edffe39f6f94947\"\ndependencies = [\n \"derive_builder_macro\",\n]\n\n[[package]]\nname = \"derive_builder_core\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d5bcf7b024d6835cfb3d473887cd966994907effbe9227e8c8219824d06c4e8\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"derive_builder_macro\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab63b0e2bf4d5928aff72e83a7dace85d7bba5fe12dcc3c5a572d78caffd3f3c\"\ndependencies = [\n \"derive_builder_core\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f33878137e4dafd7fa914ad4e259e18a4e8e532b9617a2d0150262bf53abfce\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"des\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffdd80ce8ce993de27e9f063a444a4d53ce8e8db4c1f00cc03af5ad5a9867a1e\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"deunicode\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"339544cc9e2c4dc3fc7149fd630c5f22263a4fdf18a98afd0075784968b5cf00\"\n\n[[package]]\nname = \"dialoguer\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"658bce805d770f407bc62102fca7c2c64ceef2fbcb2b8bd19d2765ce093980de\"\ndependencies = [\n \"console\",\n \"shell-words\",\n \"tempfile\",\n \"thiserror 1.0.69\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"difference\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"const-oid\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"dns_resolve\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"downcast\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1435fa1053d8b2fbbe9be7e97eca7f33d37b28409959813daefc1446a14247f1\"\n\n[[package]]\nname = \"drain\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d105028bd2b5dfcb33318fd79a445001ead36004dd8dffef1bdd7e493d8bc1e\"\ndependencies = [\n \"tokio\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125\"\n\n[[package]]\nname = \"ecdsa\"\nversion = \"0.16.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee27f32b5c5292967d2d4a9d7f1e0b0aed2c15daded5a60300e4abb9d8020bca\"\ndependencies = [\n \"der\",\n \"digest\",\n \"elliptic-curve\",\n \"signature\",\n \"spki\",\n]\n\n[[package]]\nname = \"educe\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d7bc049e1bd8cdeb31b68bbd586a9464ecf9f3944af3958a7a9d0f8b9799417\"\ndependencies = [\n \"enum-ordinalize\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"elliptic-curve\"\nversion = \"0.13.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6043086bf7973472e0c7dff2142ea0b680d30e18d9cc40f267efbf222bd47\"\ndependencies = [\n \"base16ct\",\n \"crypto-bigint\",\n \"digest\",\n \"ff\",\n \"generic-array\",\n \"group\",\n \"pkcs8\",\n \"rand_core\",\n \"sec1\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34aa73646ffb006b8f5147f3dc182bd4bcb190227ce861fc4a4844bf8e3cb2c0\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"enum-as-inner\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1e6a265c649f3f5979b601d26f1d05ada116434c87741c9493cb56218f76cbc\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"enum-ordinalize\"\nversion = \"4.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea0dcfa4e54eeb516fe454635a95753ddd39acda650ce703031c6973e315dd5\"\ndependencies = [\n \"enum-ordinalize-derive\",\n]\n\n[[package]]\nname = \"enum-ordinalize-derive\"\nversion = \"4.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d28318a75d4aead5c4db25382e8ef717932d0346600cacae6357eb5941bc5ff\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"enum_dispatch\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa18ce2bc66555b3218614519ac839ddb759a7d6720732f979ef8d13be147ecd\"\ndependencies = [\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_home\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7f84e12ccf0a7ddc17a6c41c93326024c42920d7ee630d04950e6926645c0fe\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"envfile\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fe7fe9d71fc403a41672475b8895d6b817cac0fe23c471e01d36f5af503008c\"\ndependencies = [\n \"snailquote\",\n]\n\n[[package]]\nname = \"envy\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f47e0157f2cb54f5ae1bd371b30a2ae4311e1c028f575cd4e81de7353215965\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f639046355ee4f37944e44f60642c6f3a7efa3cf6b78c78a0d989a8ce6c396a1\"\ndependencies = [\n \"errno-dragonfly\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"errno-dragonfly\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c3e4e0dd3673c1139bf041f3008816d9cf2946bbfac2945c09e523b8d7b05b2\"\ndependencies = [\n \"event-listener\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"exec\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"886b70328cba8871bfc025858e1de4be16b1d5088f2ba50b57816f4210672615\"\ndependencies = [\n \"errno 0.2.8\",\n \"libc\",\n]\n\n[[package]]\nname = \"exponential-backoff\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ffb309d235a642598183aeda8925e871e85dd5a433c2c877e69ff0a960f4c02\"\ndependencies = [\n \"fastrand\",\n]\n\n[[package]]\nname = \"faccess\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59ae66425802d6a903e268ae1a08b8c38ba143520f227a205edf4e9c7e3e26d5\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"fancy-regex\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e24cb5a94bcae1e5408b0effca5cd7172ea3c5755049c5f3af4cd283a165298\"\ndependencies = [\n \"bit-set\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"ff\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449\"\ndependencies = [\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"fiat-crypto\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28dea519a9695b9977216879a3ebfddf92f1c08c05d984f8996aecd6ecdc811d\"\n\n[[package]]\nname = \"figment\"\nversion = \"0.10.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8cb01cd46b0cf372153850f4c6c272d9cbea2da513e07538405148f95bd789f3\"\ndependencies = [\n \"atomic\",\n \"pear\",\n \"serde\",\n \"toml 0.8.19\",\n \"uncased\",\n \"version_check\",\n]\n\n[[package]]\nname = \"fileops\"\nversion = \"3.128.0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fragile\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c2141d6d6c8512188a7891b4b01590a45f6dac67afb4f255c4124dbb86d4eaa\"\n\n[[package]]\nname = \"frida-build\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcca6a476beb610ebeab9c0bc60b3535aa103b52a2c265dc9d3d26209bea666c\"\ndependencies = [\n \"reqwest 0.12.12\",\n \"tar\",\n \"xz\",\n]\n\n[[package]]\nname = \"frida-gum\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a11bc734820d9e18bcc37f3836cb2d96f0ec1c8d7117f5fcb65e574b2ea22a9e\"\ndependencies = [\n \"cstr_core\",\n \"frida-gum-sys\",\n \"num\",\n \"num-derive\",\n \"num-traits\",\n \"paste\",\n \"spin\",\n]\n\n[[package]]\nname = \"frida-gum-sys\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f567e97c05c87f437fb64c84029dddbcca161738c7462821832b0d3cf15d7852\"\ndependencies = [\n \"bindgen\",\n \"frida-build\",\n]\n\n[[package]]\nname = \"fs4\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c29c30684418547d476f0b48e84f4821639119c483b1eccd566c8cd0cd05f521\"\ndependencies = [\n \"rustix\",\n \"tokio\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"funty\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef40d21ae2c515b51041df9ed313ed21e572df340ea58a922a0aefe7e8891a1\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generator\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc6bd114ceda131d3b1d665eba35788690ad37f5916457286b32ab6fd3c438dd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"log\",\n \"rustversion\",\n \"windows\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"getset\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f636605b743120a8d32ed92fc27b6cde1a769f8f936c065151eb66f88ded513c\"\ndependencies = [\n \"proc-macro-error2\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15f1ce686646e7f1e19bf7d5533fe443a45dbfb990e00629110797578b42fb19\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf760ebf69878d9fd8f110c89703d90ce35095324d1f1edcb595c63945ee757\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"goblin\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b363a30c165f666402fe6a3024d3bec7ebc898f96a4a23bd1c99f8dbf3f4f47\"\ndependencies = [\n \"log\",\n \"plain\",\n \"scroll\",\n]\n\n[[package]]\nname = \"group\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63\"\ndependencies = [\n \"ff\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81fe527a889e1532da5c525686d96d4c2e74cdd345badf8dfef9f6b39dd5f5e8\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"futures-util\",\n \"http 0.2.12\",\n \"indexmap 2.7.0\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ccae279728d634d083c00f6099cb58f01cc99c145b84b8be2f6c74618d79922e\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http 1.2.0\",\n \"indexmap 2.7.0\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"allocator-api2\",\n \"equivalent\",\n \"foldhash\",\n]\n\n[[package]]\nname = \"headers\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322106e6bd0cba2d5ead589ddb8150a13d7c4217cf80d7c4f682ca994ccc6aa9\"\ndependencies = [\n \"base64 0.21.7\",\n \"bytes\",\n \"headers-core\",\n \"http 1.2.0\",\n \"httpdate\",\n \"mime\",\n \"sha1\",\n]\n\n[[package]]\nname = \"headers-core\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54b4a22553d4242c49fddb9ba998a99962b5cc6f22cb5a3482bec22522403ce4\"\ndependencies = [\n \"http 1.2.0\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hickory-proto\"\nversion = \"0.25.0-alpha.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d063c0692ee669aa6d261988aa19ca5510f1cc40e4f211024f50c888499a35d7\"\ndependencies = [\n \"async-recursion\",\n \"async-trait\",\n \"cfg-if\",\n \"data-encoding\",\n \"enum-as-inner\",\n \"futures-channel\",\n \"futures-io\",\n \"futures-util\",\n \"idna\",\n \"ipnet\",\n \"once_cell\",\n \"rand\",\n \"serde\",\n \"thiserror 2.0.9\",\n \"tinyvec\",\n \"tokio\",\n \"tracing\",\n \"url\",\n]\n\n[[package]]\nname = \"hickory-resolver\"\nversion = \"0.25.0-alpha.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42bc352e4412fb657e795f79b4efcf2bd60b59ee5ca0187f3554194cd1107a27\"\ndependencies = [\n \"cfg-if\",\n \"futures-util\",\n \"hickory-proto\",\n \"ipconfig\",\n \"moka\",\n \"once_cell\",\n \"parking_lot\",\n \"rand\",\n \"resolv-conf\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"hkdf\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5f8eb2ad728638ea2c7d47a21db23b7b58a72ed6a38256b8a1849f15fbbdf7\"\ndependencies = [\n \"hmac\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"hmac-sha256\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a8575493d277c9092b988c780c94737fb9fd8651a1001e16bee3eccfc1baedb\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"hostname\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867\"\ndependencies = [\n \"libc\",\n \"match_cfg\",\n \"winapi\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f16ca2af56261c99fba8bac40a10251ce8188205a4c448fbb745a2e4daa76fea\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\"\ndependencies = [\n \"bytes\",\n \"http 0.2.12\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http 1.2.0\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"http-serde\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f056c8559e3757392c8d091e796416e4649d8e49e88b8d76df6c002f05027fd\"\ndependencies = [\n \"http 1.2.0\",\n \"serde\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"humansize\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6cb51c9a029ddc91b07a787f1d86b53ccfa49b0e86688c946ebe8d3555685dd7\"\ndependencies = [\n \"libm\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"hyper\"\nversion = \"0.14.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41dfc780fdec9373c01bae43289ea34c972e40ee3c9f6b3c8801a35f35586ce7\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2 0.3.26\",\n \"http 0.2.12\",\n \"http-body 0.4.6\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"256fb8d4bd6413123cc9d91832d78325c48ff41677595be797d90f42969beae0\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2 0.4.7\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-http-proxy\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d06dbdfbacf34d996c6fb540a71a684a7aae9056c71951163af8a8a4c07b9a4\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"headers\",\n \"http 1.2.0\",\n \"hyper 1.5.2\",\n \"hyper-rustls 0.27.5\",\n \"hyper-util\",\n \"pin-project-lite\",\n \"rustls-native-certs 0.7.3\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-named-pipe\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73b7d8abf35697b81a825e386fc151e0d503e8cb5fcb93cc8669c376dfd6f278\"\ndependencies = [\n \"hex\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-service\",\n \"winapi\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec3efd23720e2049821a693cbc7e65ea87c72f1c58ff2f9522ff332b1491e590\"\ndependencies = [\n \"futures-util\",\n \"http 0.2.12\",\n \"hyper 0.14.32\",\n \"log\",\n \"rustls 0.21.12\",\n \"rustls-native-certs 0.6.3\",\n \"tokio\",\n \"tokio-rustls 0.24.1\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d191583f3da1305256f22463b9bb0471acad48a4e534a5218b9963e9c1f59b2\"\ndependencies = [\n \"futures-util\",\n \"http 1.2.0\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"log\",\n \"rustls 0.23.20\",\n \"rustls-native-certs 0.8.1\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tower-service\",\n \"webpki-roots 0.26.7\",\n]\n\n[[package]]\nname = \"hyper-socks2\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51c227614c208f7e7c2e040526912604a1a957fe467c9c2f5b06c5d032337dab\"\ndependencies = [\n \"async-socks5\",\n \"http 1.2.0\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-timeout\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b90d566bffbce6a75bd8b09a05aa8c2cb1fabb6cb348f8840c9e4c90a0d83b0\"\ndependencies = [\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"hyper 1.5.2\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"hyperlocal\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"986c5ce3b994526b3cd75578e62554abd09f0899d6206de48b3e96ab34ccc8c7\"\ndependencies = [\n \"hex\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d89fd380afde86567dfba715db065673989d6253f42b88179abd3eae47bda4b\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"impl-more\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8a5a9a0ff0086c7a148acb942baaabeadf9504d10400b5a05645853729b9cd2\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n \"serde\",\n]\n\n[[package]]\nname = \"indicatif\"\nversion = \"0.17.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf675b85ed934d3c67b5c5469701eec7db22689d0a2139d856e0925fa28b281\"\ndependencies = [\n \"console\",\n \"number_prefix\",\n \"portable-atomic\",\n \"unicode-width 0.2.0\",\n \"web-time\",\n]\n\n[[package]]\nname = \"inlinable_string\"\nversion = \"0.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8fae54786f62fb2918dcfae3d568594e50eb9b5c25bf04371af6fe7516452fb\"\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"block-padding\",\n \"generic-array\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"ipconfig\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b58db92f96b720de98181bbbe63c831e87005ab460c1bf306eb2622b4707997f\"\ndependencies = [\n \"socket2\",\n \"widestring\",\n \"windows-sys 0.48.0\",\n \"winreg\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"ipnetwork\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf466541e9d546596ee94f9f69590f89473455f88372423e0008fc1a7daf100e\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"iptables\"\nversion = \"0.5.1\"\nsource = \"git+https://github.com/metalbear-co/rust-iptables.git?rev=e66c7332e361df3c61a194f08eefe3f40763d624#e66c7332e361df3c61a194f08eefe3f40763d624\"\ndependencies = [\n \"lazy_static\",\n \"nix 0.27.1\",\n \"regex\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_ci\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7655c9839580ee829dfacba1d1278c2b7883e50a277ff7541299489d6bdfdc45\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"issue1317\"\nversion = \"3.128.0\"\ndependencies = [\n \"actix-web\",\n \"env_logger 0.11.6\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"issue1776\"\nversion = \"3.128.0\"\ndependencies = [\n \"errno 0.3.10\",\n \"libc\",\n \"socket2\",\n]\n\n[[package]]\nname = \"issue1776portnot53\"\nversion = \"3.128.0\"\ndependencies = [\n \"libc\",\n \"socket2\",\n]\n\n[[package]]\nname = \"issue1899\"\nversion = \"3.128.0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"issue2001\"\nversion = \"3.128.0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"issue2438\"\nversion = \"0.1.0\"\ndependencies = [\n \"nix 0.29.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"json-patch\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"863726d7afb6bc2590eeff7135d923545e5e964f004c2ccf8716c25e70a86f08\"\ndependencies = [\n \"jsonptr\",\n \"serde\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"jsonpath-rust\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d8fe85bd70ff715f31ce8c739194b423d79811a19602115d611a3ec85d6200\"\ndependencies = [\n \"lazy_static\",\n \"once_cell\",\n \"pest\",\n \"pest_derive\",\n \"regex\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"jsonptr\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dea2b27dd239b2556ed7a25ba842fe47fd602e7fc7433c2a8d6106d4d9edd70\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"jzon\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17ab85f84ca42c5ec520e6f3c9966ba1fd62909ce260f8837e248857d2560509\"\n\n[[package]]\nname = \"k8s-cri\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7bfc95bdd8656db93c9333625f5bc8d7c30febff31dc5f8ee9f6f5a8f5a068fc\"\ndependencies = [\n \"prost\",\n \"serde\",\n \"tonic\",\n \"tonic-build\",\n]\n\n[[package]]\nname = \"k8s-openapi\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8847402328d8301354c94d605481f25a6bdc1ed65471fd96af8eca71141b13\"\ndependencies = [\n \"base64 0.22.1\",\n \"chrono\",\n \"schemars\",\n \"serde\",\n \"serde-value\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"konst\"\nversion = \"0.3.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4381b9b00c55f251f2ebe9473aef7c117e96828def1a7cb3bd3f0f903c6894e9\"\ndependencies = [\n \"const_panic\",\n \"konst_kernel\",\n \"typewit\",\n]\n\n[[package]]\nname = \"konst_kernel\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4b1eb7788f3824c629b1116a7a9060d6e898c358ebff59070093d51103dcc3c\"\ndependencies = [\n \"typewit\",\n]\n\n[[package]]\nname = \"kube\"\nversion = \"0.96.0\"\nsource = \"git+https://github.com/kube-rs/kube.git?rev=ecbdafc214538aadc78ec8447f2fa12d0057492b#ecbdafc214538aadc78ec8447f2fa12d0057492b\"\ndependencies = [\n \"k8s-openapi\",\n \"kube-client\",\n \"kube-core\",\n \"kube-derive\",\n \"kube-runtime\",\n]\n\n[[package]]\nname = \"kube-client\"\nversion = \"0.96.0\"\nsource = \"git+https://github.com/kube-rs/kube.git?rev=ecbdafc214538aadc78ec8447f2fa12d0057492b#ecbdafc214538aadc78ec8447f2fa12d0057492b\"\ndependencies = [\n \"base64 0.22.1\",\n \"bytes\",\n \"chrono\",\n \"either\",\n \"form_urlencoded\",\n \"futures\",\n \"home\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-http-proxy\",\n \"hyper-rustls 0.27.5\",\n \"hyper-socks2\",\n \"hyper-timeout\",\n \"hyper-util\",\n \"jsonpath-rust\",\n \"k8s-openapi\",\n \"kube-core\",\n \"pem\",\n \"rand\",\n \"rustls 0.23.20\",\n \"rustls-pemfile 2.2.0\",\n \"secrecy\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tokio-tungstenite\",\n \"tokio-util\",\n \"tower 0.5.2\",\n \"tower-http\",\n \"tracing\",\n]\n\n[[package]]\nname = \"kube-core\"\nversion = \"0.96.0\"\nsource = \"git+https://github.com/kube-rs/kube.git?rev=ecbdafc214538aadc78ec8447f2fa12d0057492b#ecbdafc214538aadc78ec8447f2fa12d0057492b\"\ndependencies = [\n \"chrono\",\n \"form_urlencoded\",\n \"http 1.2.0\",\n \"json-patch\",\n \"k8s-openapi\",\n \"schemars\",\n \"serde\",\n \"serde-value\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"kube-derive\"\nversion = \"0.96.0\"\nsource = \"git+https://github.com/kube-rs/kube.git?rev=ecbdafc214538aadc78ec8447f2fa12d0057492b#ecbdafc214538aadc78ec8447f2fa12d0057492b\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"serde_json\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"kube-runtime\"\nversion = \"0.96.0\"\nsource = \"git+https://github.com/kube-rs/kube.git?rev=ecbdafc214538aadc78ec8447f2fa12d0057492b#ecbdafc214538aadc78ec8447f2fa12d0057492b\"\ndependencies = [\n \"ahash\",\n \"async-broadcast\",\n \"async-stream\",\n \"async-trait\",\n \"backoff\",\n \"educe\",\n \"futures\",\n \"hashbrown 0.15.2\",\n \"json-patch\",\n \"jsonptr\",\n \"k8s-openapi\",\n \"kube-client\",\n \"parking_lot\",\n \"pin-project\",\n \"serde\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"language-tags\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4345964bb142484797b161f473a503a434de77149dd8c7427788c6e13379388\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8355be11b20d696c8f18f6cc018c4e372165b1fa8126cef092399c9951984ffa\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"listen_ports\"\nversion = \"3.128.0\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"local-channel\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6cbc85e69b8df4b8bb8b89ec634e7189099cea8927a276b7384ce5488e53ec8\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n \"local-waker\",\n]\n\n[[package]]\nname = \"local-ip-address\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3669cf5561f8d27e8fc84cc15e58350e70f557d4d65f70e3154e54cd2f8e1782\"\ndependencies = [\n \"libc\",\n \"neli\",\n \"thiserror 1.0.69\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"local-waker\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d873d7c67ce09b42110d801813efbc9364414e356be9935700d368351657487\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"loom\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"419e0dc8046cb947daa77eb95ae174acfbddb7673b4151f56d1eed8e93fbfaca\"\ndependencies = [\n \"cfg-if\",\n \"generator\",\n \"scoped-tls\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"lzma-sys\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"match_cfg\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4\"\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"matchit\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94\"\n\n[[package]]\nname = \"md-5\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf\"\ndependencies = [\n \"cfg-if\",\n \"digest\",\n]\n\n[[package]]\nname = \"medschool\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"glob\",\n \"rand\",\n \"syn 2.0.95\",\n \"thiserror 2.0.9\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mid\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82da46e09851e48c020d3460f6f9bf4349153f4bc500ed357fa7e8a2193a16bb\"\ndependencies = [\n \"hex\",\n \"hmac-sha256\",\n]\n\n[[package]]\nname = \"miette\"\nversion = \"7.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"317f146e2eb7021892722af37cf1b971f0a70c8406f487e24952667616192c64\"\ndependencies = [\n \"backtrace\",\n \"backtrace-ext\",\n \"cfg-if\",\n \"miette-derive\",\n \"owo-colors\",\n \"supports-color\",\n \"supports-hyperlinks\",\n \"supports-unicode\",\n \"terminal_size\",\n \"textwrap\",\n \"thiserror 1.0.69\",\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"miette-derive\"\nversion = \"7.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23c9b935fbe1d6cbd1dac857b54a688145e2d93f48db36010514d0f612d0ad67\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"minicbor\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d15f4203d71fdf90903c2696e55426ac97a363c67b218488a73b534ce7aca10\"\ndependencies = [\n \"minicbor-derive\",\n]\n\n[[package]]\nname = \"minicbor-derive\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1154809406efdb7982841adb6311b3d095b46f78342dd646736122fe6b19e267\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"mirrord\"\nversion = \"3.128.0\"\ndependencies = [\n \"actix-codec\",\n \"clap\",\n \"clap_complete\",\n \"const-random\",\n \"drain\",\n \"envfile\",\n \"futures\",\n \"http-body-util\",\n \"humantime\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"k8s-openapi\",\n \"kube\",\n \"local-ip-address\",\n \"mid\",\n \"miette\",\n \"mirrord-analytics\",\n \"mirrord-config\",\n \"mirrord-console\",\n \"mirrord-intproxy\",\n \"mirrord-intproxy-protocol\",\n \"mirrord-kube\",\n \"mirrord-layer\",\n \"mirrord-operator\",\n \"mirrord-progress\",\n \"mirrord-protocol\",\n \"mirrord-sip\",\n \"mirrord-vpn\",\n \"nix 0.29.0\",\n \"prettytable-rs\",\n \"rand\",\n \"rcgen\",\n \"regex\",\n \"reqwest 0.12.12\",\n \"rstest\",\n \"rustls 0.23.20\",\n \"rustls-pemfile 2.2.0\",\n \"semver 1.0.24\",\n \"serde\",\n \"serde_json\",\n \"socket2\",\n \"tempfile\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tokio-stream\",\n \"tokio-util\",\n \"tracing\",\n \"tracing-subscriber\",\n \"which 7.0.1\",\n]\n\n[[package]]\nname = \"mirrord-agent\"\nversion = \"3.128.0\"\ndependencies = [\n \"actix-codec\",\n \"async-trait\",\n \"bollard\",\n \"bytes\",\n \"clap\",\n \"containerd-client\",\n \"dashmap\",\n \"enum_dispatch\",\n \"envy\",\n \"faccess\",\n \"fancy-regex\",\n \"futures\",\n \"hickory-resolver\",\n \"http 1.2.0\",\n \"http-body-util\",\n \"httparse\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"iptables\",\n \"k8s-cri\",\n \"libc\",\n \"mirrord-protocol\",\n \"mockall\",\n \"nix 0.29.0\",\n \"oci-spec\",\n \"pnet\",\n \"procfs\",\n \"rand\",\n \"rawsocket\",\n \"rcgen\",\n \"rstest\",\n \"rustls 0.23.20\",\n \"semver 1.0.24\",\n \"serde\",\n \"serde_json\",\n \"socket2\",\n \"streammap-ext\",\n \"test_bin\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tokio-stream\",\n \"tokio-util\",\n \"tonic\",\n \"tower 0.5.2\",\n \"tracing\",\n \"tracing-subscriber\",\n \"wildmatch\",\n \"x509-parser\",\n]\n\n[[package]]\nname = \"mirrord-analytics\"\nversion = \"3.128.0\"\ndependencies = [\n \"assert-json-diff\",\n \"base64 0.22.1\",\n \"drain\",\n \"reqwest 0.12.12\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-auth\"\nversion = \"3.128.0\"\ndependencies = [\n \"bcder\",\n \"chrono\",\n \"fs4\",\n \"home\",\n \"k8s-openapi\",\n \"kube\",\n \"pem\",\n \"reqwest 0.12.12\",\n \"serde\",\n \"serde_yaml\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"whoami\",\n \"x509-certificate 0.24.0\",\n]\n\n[[package]]\nname = \"mirrord-config\"\nversion = \"3.128.0\"\ndependencies = [\n \"bimap\",\n \"bitflags 2.6.0\",\n \"fancy-regex\",\n \"ipnet\",\n \"k8s-openapi\",\n \"mirrord-analytics\",\n \"mirrord-config-derive\",\n \"nom\",\n \"rstest\",\n \"schemars\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"tera\",\n \"thiserror 2.0.9\",\n \"toml 0.8.19\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-config-derive\"\nversion = \"3.128.0\"\ndependencies = [\n \"proc-macro2\",\n \"proc-macro2-diagnostics\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"mirrord-console\"\nversion = \"3.128.0\"\ndependencies = [\n \"bincode\",\n \"drain\",\n \"log\",\n \"miette\",\n \"mirrord-intproxy-protocol\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"mirrord-intproxy\"\nversion = \"3.128.0\"\ndependencies = [\n \"bytes\",\n \"exponential-backoff\",\n \"futures\",\n \"h2 0.4.7\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"mirrord-analytics\",\n \"mirrord-config\",\n \"mirrord-intproxy-protocol\",\n \"mirrord-kube\",\n \"mirrord-operator\",\n \"mirrord-protocol\",\n \"rand\",\n \"reqwest 0.12.12\",\n \"rstest\",\n \"rustls 0.23.20\",\n \"rustls-pemfile 2.2.0\",\n \"semver 1.0.24\",\n \"serde\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tokio-stream\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-intproxy-protocol\"\nversion = \"3.128.0\"\ndependencies = [\n \"bincode\",\n \"mirrord-protocol\",\n \"thiserror 2.0.9\",\n \"tokio\",\n]\n\n[[package]]\nname = \"mirrord-kube\"\nversion = \"3.128.0\"\ndependencies = [\n \"actix-codec\",\n \"async-stream\",\n \"futures\",\n \"k8s-openapi\",\n \"kube\",\n \"mirrord-config\",\n \"mirrord-progress\",\n \"mirrord-protocol\",\n \"rand\",\n \"regex\",\n \"rstest\",\n \"serde\",\n \"serde_json\",\n \"shellexpand\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-retry\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-layer\"\nversion = \"3.128.0\"\ndependencies = [\n \"actix-codec\",\n \"base64 0.22.1\",\n \"bincode\",\n \"bytemuck\",\n \"ctor\",\n \"envfile\",\n \"errno 0.3.10\",\n \"exec\",\n \"frida-gum\",\n \"futures\",\n \"hashbrown 0.15.2\",\n \"hyper 1.5.2\",\n \"libc\",\n \"mirrord-config\",\n \"mirrord-console\",\n \"mirrord-intproxy\",\n \"mirrord-intproxy-protocol\",\n \"mirrord-layer-macro\",\n \"mirrord-protocol\",\n \"mirrord-sip\",\n \"nix 0.29.0\",\n \"null-terminated\",\n \"num-traits\",\n \"rand\",\n \"regex\",\n \"resolv-conf\",\n \"rstest\",\n \"serde_json\",\n \"socket2\",\n \"syscalls\",\n \"tempfile\",\n \"test-cdylib\",\n \"tests\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"mirrord-layer-macro\"\nversion = \"3.128.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"mirrord-macros\"\nversion = \"3.128.0\"\ndependencies = [\n \"proc-macro2\",\n \"proc-macro2-diagnostics\",\n \"semver 1.0.24\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"mirrord-operator\"\nversion = \"3.128.0\"\ndependencies = [\n \"base64 0.22.1\",\n \"bincode\",\n \"chrono\",\n \"futures\",\n \"http 1.2.0\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"k8s-openapi\",\n \"kube\",\n \"mirrord-analytics\",\n \"mirrord-auth\",\n \"mirrord-config\",\n \"mirrord-kube\",\n \"mirrord-progress\",\n \"mirrord-protocol\",\n \"rand\",\n \"rstest\",\n \"schemars\",\n \"semver 1.0.24\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-tungstenite\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-progress\"\nversion = \"3.128.0\"\ndependencies = [\n \"enum_dispatch\",\n \"indicatif\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"mirrord-protocol\"\nversion = \"1.13.3\"\ndependencies = [\n \"actix-codec\",\n \"bincode\",\n \"bytes\",\n \"fancy-regex\",\n \"hickory-proto\",\n \"hickory-resolver\",\n \"http-body-util\",\n \"http-serde\",\n \"hyper 1.5.2\",\n \"libc\",\n \"mirrord-macros\",\n \"nix 0.29.0\",\n \"semver 1.0.24\",\n \"serde\",\n \"socket2\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tokio-stream\",\n \"tracing\",\n]\n\n[[package]]\nname = \"mirrord-sip\"\nversion = \"3.128.0\"\ndependencies = [\n \"apple-codesign\",\n \"object 0.36.7\",\n \"once_cell\",\n \"tempfile\",\n \"thiserror 2.0.9\",\n \"tracing\",\n \"which 7.0.1\",\n]\n\n[[package]]\nname = \"mirrord-vpn\"\nversion = \"3.128.0\"\ndependencies = [\n \"futures\",\n \"ipnet\",\n \"k8s-openapi\",\n \"kube\",\n \"mirrord-protocol\",\n \"pnet_packet\",\n \"semver 1.0.24\",\n \"serde_yaml\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"tun2\",\n]\n\n[[package]]\nname = \"mockall\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39a6bfcc6c8c7eed5ee98b9c3e33adc726054389233e201c95dab2d41a3839d2\"\ndependencies = [\n \"cfg-if\",\n \"downcast\",\n \"fragile\",\n \"mockall_derive\",\n \"predicates\",\n \"predicates-tree\",\n]\n\n[[package]]\nname = \"mockall_derive\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25ca3004c2efe9011bd4e461bd8256445052b9615405b4f7ea43fc8ca5c20898\"\ndependencies = [\n \"cfg-if\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"moka\"\nversion = \"0.12.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9321642ca94a4282428e6ea4af8cc2ca4eac48ac7a6a4ea8f33f76d0ce70926\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n \"loom\",\n \"parking_lot\",\n \"portable-atomic\",\n \"rustc_version\",\n \"smallvec\",\n \"tagptr\",\n \"thiserror 1.0.69\",\n \"uuid\",\n]\n\n[[package]]\nname = \"multimap\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"defc4c55412d89136f966bbb339008b474350e5e6e78d2714439c386b3137a03\"\n\n[[package]]\nname = \"neli\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1100229e06604150b3becd61a4965d5c70f3be1759544ea7274166f4be41ef43\"\ndependencies = [\n \"byteorder\",\n \"libc\",\n \"log\",\n \"neli-proc-macros\",\n]\n\n[[package]]\nname = \"neli-proc-macros\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c168194d373b1e134786274020dae7fc5513d565ea2ebb9bc9ff17ffb69106d4\"\ndependencies = [\n \"either\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n \"memoffset 0.7.1\",\n \"pin-utils\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.27.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2eb04e9c688eff1c89d72b407f168cf79bb9e867a9d3323ed6c01519eb9cc053\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n \"memoffset 0.9.1\",\n]\n\n[[package]]\nname = \"no-std-net\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43794a0ace135be66a25d3ae77d41b91615fb68ae937f904090203e81f755b65\"\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"null-terminated\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3ab2c625aa6bd21571b3599f3c4318b4456ec89efc62c0b47c1a8de14e30bf\"\ndependencies = [\n \"byte-strings-proc_macros\",\n \"unreachable\",\n \"utf\",\n]\n\n[[package]]\nname = \"num\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35bd024e8b2ff75562e5f34e7f4905839deb4b22955ef5e73d2fea1b9813cb23\"\ndependencies = [\n \"num-complex\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-derive\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"crc32fast\",\n \"flate2\",\n \"hashbrown 0.14.5\",\n \"indexmap 2.7.0\",\n \"memchr\",\n \"ruzstd 0.5.0\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"flate2\",\n \"memchr\",\n \"ruzstd 0.7.3\",\n]\n\n[[package]]\nname = \"oci-spec\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da406e58efe2eb5986a6139626d611ce426e5324a824133d76367c765cf0b882\"\ndependencies = [\n \"derive_builder\",\n \"getset\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"strum\",\n \"strum_macros\",\n \"thiserror 2.0.9\",\n]\n\n[[package]]\nname = \"oid-registry\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bedf36ffb6ba96c2eb7144ef6270557b52e54b20c0a8e1eb2ff99a6c6959bff\"\ndependencies = [\n \"asn1-rs 0.5.2\",\n]\n\n[[package]]\nname = \"oid-registry\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d8034d9489cdaf79228eb9f6a3b8d7bb32ba00d6645ebd48eef4077ceb5bd9\"\ndependencies = [\n \"asn1-rs 0.6.2\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"ordered-float\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68f19d67e5a2795c94e73e0bb1cc1a7edeb2e28efd39e2e1c9b7a40c1108b11c\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"outgoing\"\nversion = \"3.128.0\"\n\n[[package]]\nname = \"outref\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4030760ffd992bef45b0ae3f10ce1aba99e33464c90d14dd7c039884963ddc7a\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb37767f6569cd834a413442455e0f066d0d522de8630436e2a1761d9726ba56\"\n\n[[package]]\nname = \"p12\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4873306de53fe82e7e484df31e1e947d61514b6ea2ed6cd7b45d63006fd9224\"\ndependencies = [\n \"cbc\",\n \"cipher\",\n \"des\",\n \"getrandom\",\n \"hmac\",\n \"lazy_static\",\n \"rc2\",\n \"sha1\",\n \"yasna\",\n]\n\n[[package]]\nname = \"p256\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9863ad85fa8f4460f9c48cb909d38a0d689dba1f6f6988a5e3e0d31071bcd4b\"\ndependencies = [\n \"ecdsa\",\n \"elliptic-curve\",\n \"primeorder\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"parse-zoneinfo\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f2a05b18d44e2957b88f96ba460715e295bc1d7510468a2f3d3b44535d26c24\"\ndependencies = [\n \"regex\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pear\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdeeaa00ce488657faba8ebf44ab9361f9365a97bd39ffb8a60663f57ff4b467\"\ndependencies = [\n \"inlinable_string\",\n \"pear_codegen\",\n \"yansi\",\n]\n\n[[package]]\nname = \"pear_codegen\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4bab5b985dc082b345f812b7df84e1bef27e7207b39e448439ba8bd69c93f147\"\ndependencies = [\n \"proc-macro2\",\n \"proc-macro2-diagnostics\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"pem\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae\"\ndependencies = [\n \"base64 0.22.1\",\n \"serde\",\n]\n\n[[package]]\nname = \"pem-rfc7468\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412\"\ndependencies = [\n \"base64ct\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b7cafe60d6cf8e62e1b9b2ea516a089c008945bb5a275416789e7db0bc199dc\"\ndependencies = [\n \"memchr\",\n \"thiserror 2.0.9\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"pest_derive\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"816518421cfc6887a0d62bf441b6ffb4536fcc926395a69e1a85852d4363f57e\"\ndependencies = [\n \"pest\",\n \"pest_generator\",\n]\n\n[[package]]\nname = \"pest_generator\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d1396fd3a870fc7838768d171b4616d5c91f6cc25e377b673d714567d99377b\"\ndependencies = [\n \"pest\",\n \"pest_meta\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"pest_meta\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1e58089ea25d717bfd31fb534e4f3afcc2cc569c70de3e239778991ea3b7dea\"\ndependencies = [\n \"once_cell\",\n \"pest\",\n \"sha2\",\n]\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4c5cc86750666a3ed20bdaf5ca2a0344f9c67674cae0515bec2da16fbaa47db\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap 2.7.0\",\n]\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd6780a80ae0c52cc120a26a1a42c1ae51b247a253e4e06113d23d2c2edd078\"\ndependencies = [\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aef8048c789fa5e851558d709946d6d79a8ff88c0440c587967f8e94bfb1216a\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c80231409c20246a13fddb31776fb942c38553c51e871f8cbd687a4cfb5843d\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67eabc2ef2a60eb7faa00097bd1ffdb5bd28e62bf39990626a582201b7a754e5\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e2ec53ad785f4d35dac0adea7f7dc6f1bb277ad84a680c7afefeae05d1f5916\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d56a66c0c55993aa927429d0f8a0abfd74f084e4d9c192cffed01e418d83eefb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkcs1\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f\"\ndependencies = [\n \"der\",\n \"pkcs8\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7\"\ndependencies = [\n \"der\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plain\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cf17e9a1800f5f396bc67d193dc9411b59012a5876445ef450d449881e1016\"\ndependencies = [\n \"base64 0.22.1\",\n \"indexmap 2.7.0\",\n \"quick-xml\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"pnet\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"682396b533413cc2e009fbb48aadf93619a149d3e57defba19ff50ce0201bd0d\"\ndependencies = [\n \"ipnetwork\",\n \"pnet_base\",\n \"pnet_datalink\",\n \"pnet_packet\",\n \"pnet_sys\",\n \"pnet_transport\",\n]\n\n[[package]]\nname = \"pnet_base\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffc190d4067df16af3aba49b3b74c469e611cad6314676eaf1157f31aa0fb2f7\"\ndependencies = [\n \"no-std-net\",\n]\n\n[[package]]\nname = \"pnet_datalink\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79e70ec0be163102a332e1d2d5586d362ad76b01cec86f830241f2b6452a7b7\"\ndependencies = [\n \"ipnetwork\",\n \"libc\",\n \"pnet_base\",\n \"pnet_sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"pnet_macros\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13325ac86ee1a80a480b0bc8e3d30c25d133616112bb16e86f712dcf8a71c863\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"pnet_macros_support\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eed67a952585d509dd0003049b1fc56b982ac665c8299b124b90ea2bdb3134ab\"\ndependencies = [\n \"pnet_base\",\n]\n\n[[package]]\nname = \"pnet_packet\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c96ebadfab635fcc23036ba30a7d33a80c39e8461b8bd7dc7bb186acb96560f\"\ndependencies = [\n \"glob\",\n \"pnet_base\",\n \"pnet_macros\",\n \"pnet_macros_support\",\n]\n\n[[package]]\nname = \"pnet_sys\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d4643d3d4db6b08741050c2f3afa9a892c4244c085a72fcda93c9c2c9a00f4b\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"pnet_transport\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f604d98bc2a6591cf719b58d3203fd882bdd6bf1db696c4ac97978e9f4776bf\"\ndependencies = [\n \"libc\",\n \"pnet_base\",\n \"pnet_packet\",\n \"pnet_sys\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"280dc24453071f1b63954171985a0b0d30058d287960968b9b2aca264c8d4ee6\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5d19ee57562043d37e82899fade9a22ebab7be9cef5026b07fda9cdd4293573\"\ndependencies = [\n \"anstyle\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"727e462b119fe9c93fd0eb1429a5f7647394014cf3c04ab2c0350eeb09095ffa\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72dd2d6d381dfb73a193c7fca536518d7caee39fc8503f74e7dc0be0531b425c\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"483f8c21f64f3ea09fe0f30f5d48c3e8eefe5dac9129f0075f76593b4c1da705\"\ndependencies = [\n \"proc-macro2\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"prettytable-rs\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eea25e07510aa6ab6547308ebe3c036016d162b8da920dbb079e3ba8acf3d95a\"\ndependencies = [\n \"csv\",\n \"encode_unicode\",\n \"is-terminal\",\n \"lazy_static\",\n \"term\",\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"primeorder\"\nversion = \"0.13.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"353e1ca18966c16d9deb1c69278edbc5f194139612772bd9537af60ac231e1e6\"\ndependencies = [\n \"elliptic-curve\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96de42df36bb9bba5542fe9f1a054b8cc87e172759a1868aa05c1f3acc89dfc5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"proc-macro-error2\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11ec05c52be0a07b08061f7dd003e7d7092e0472bc731b4af7bb1ef876109802\"\ndependencies = [\n \"proc-macro-error-attr2\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proc-macro2-diagnostics\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af066a9c399a26e020ada66a034357a868728e72cd426f3adcd35f80d88d88c8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"version_check\",\n \"yansi\",\n]\n\n[[package]]\nname = \"procfs\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc5b72d8145275d844d4b5f6d4e1eef00c8cd889edb6035c21675d1bb1f45c9f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"chrono\",\n \"flate2\",\n \"hex\",\n \"procfs-core\",\n \"rustix\",\n]\n\n[[package]]\nname = \"procfs-core\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"239df02d8349b06fc07398a3a1697b06418223b1c7725085e801e7c0fc6a12ec\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"chrono\",\n \"hex\",\n]\n\n[[package]]\nname = \"prost\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c0fef6c4230e4ccf618a35c59d7ede15dea37de8427500f50aff708806e42ec\"\ndependencies = [\n \"bytes\",\n \"prost-derive\",\n]\n\n[[package]]\nname = \"prost-build\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0f3e5beed80eb580c68e2c600937ac2c4eedabdfd5ef1e5b7ea4f3fba84497b\"\ndependencies = [\n \"heck 0.5.0\",\n \"itertools 0.13.0\",\n \"log\",\n \"multimap\",\n \"once_cell\",\n \"petgraph\",\n \"prettyplease\",\n \"prost\",\n \"prost-types\",\n \"regex\",\n \"syn 2.0.95\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"prost-derive\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"157c5a9d7ea5c2ed2d9fb8f495b64759f7816c7eaea54ba3978f0d63000162e3\"\ndependencies = [\n \"anyhow\",\n \"itertools 0.13.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"prost-types\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc2f1e56baa61e93533aebc21af4d2134b70f66275e0fcdf3cbe43d77ff7e8fc\"\ndependencies = [\n \"prost\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d3a6e5838b60e0e8fa7a43f22ade549a37d61f8bdbe636d0d7816191de969c2\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e96808277ec6f97351a2380e6c25114bc9e67037775464979f3037c92d05ef\"\ndependencies = [\n \"bytes\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash 2.1.0\",\n \"rustls 0.23.20\",\n \"socket2\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2fe5ef3495d7d2e377ff17b1a8ce2ee2ec2a18cde8b6ad6619d65d0701c135d\"\ndependencies = [\n \"bytes\",\n \"getrandom\",\n \"rand\",\n \"ring\",\n \"rustc-hash 2.1.0\",\n \"rustls 0.23.20\",\n \"rustls-pki-types\",\n \"slab\",\n \"thiserror 2.0.9\",\n \"tinyvec\",\n \"tracing\",\n \"web-time\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c40286217b4ba3a71d644d752e6a0b71f13f1b6a2c5311acfcbe0c2418ed904\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rasn\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf9b0d03fbc7d2dcfdd35086c43ce30ac5ff62ed7eff4397e4f4f2995a2b0e2a\"\ndependencies = [\n \"arrayvec\",\n \"bitvec\",\n \"bitvec-nom2\",\n \"bytes\",\n \"chrono\",\n \"either\",\n \"jzon\",\n \"konst\",\n \"nom\",\n \"num-bigint\",\n \"num-integer\",\n \"num-traits\",\n \"once_cell\",\n \"rasn-derive\",\n \"snafu\",\n]\n\n[[package]]\nname = \"rasn-derive\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbaf7105cd254b632f4732fbcc243ce750cef87d8335826125ef6df5733b5a0c\"\ndependencies = [\n \"either\",\n \"itertools 0.10.5\",\n \"proc-macro2\",\n \"quote\",\n \"rayon\",\n \"syn 1.0.109\",\n \"uuid\",\n]\n\n[[package]]\nname = \"rawsocket\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/metalbear-co/rawsocket.git#4d5a48f4e18e3b6c51ec50dae0ed19c79819e668\"\ndependencies = [\n \"bs-filter\",\n \"ipnetwork\",\n \"libc\",\n \"nix 0.26.4\",\n \"socket2\",\n \"tokio\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"rc2\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62c64daa8e9438b84aaae55010a93f396f8e60e3911590fcba770d04643fc1dd\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"rcgen\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75e669e5202259b5314d1ea5397316ad400819437857b90861765f24c4cf80a2\"\ndependencies = [\n \"pem\",\n \"ring\",\n \"rustls-pki-types\",\n \"time\",\n \"yasna\",\n]\n\n[[package]]\nname = \"rebind0\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"recv_from\"\nversion = \"0.1.0\"\ndependencies = [\n \"socket2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-lite\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53a49587ad06b26609c52e423de037e7f57f20d53535d66e08c695f347df952a\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.11.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd67538700a17451e7cba03ac727fb961abb7607553461627b97de0b89cf4a62\"\ndependencies = [\n \"base64 0.21.7\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-core\",\n \"futures-util\",\n \"h2 0.3.26\",\n \"http 0.2.12\",\n \"http-body 0.4.6\",\n \"hyper 0.14.32\",\n \"hyper-rustls 0.24.2\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustls 0.21.12\",\n \"rustls-native-certs 0.6.3\",\n \"rustls-pemfile 1.0.4\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper 0.1.2\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-rustls 0.24.1\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"webpki-roots 0.25.4\",\n \"winreg\",\n]\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43e734407157c3c2034e0258f5e4473ddb361b1e85f95a66690d67264d7cd1da\"\ndependencies = [\n \"base64 0.22.1\",\n \"bytes\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2 0.4.7\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-rustls 0.27.5\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"quinn\",\n \"rustls 0.23.20\",\n \"rustls-native-certs 0.8.1\",\n \"rustls-pemfile 2.2.0\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper 1.0.2\",\n \"tokio\",\n \"tokio-rustls 0.26.1\",\n \"tokio-socks\",\n \"tower 0.5.2\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"webpki-roots 0.26.7\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"resolv-conf\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52e44394d2086d010551b14b53b1f24e31647570cd1deb0379e2c21b329aba00\"\ndependencies = [\n \"hostname\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a2c585be59b6b5dd66a9d2084aa1d8bd52fbdb806eafdeffb52791147862035\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"825ea780781b15345a146be27eaefb05085e337e869bff01b4306a4fd4a9ad5a\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn 2.0.95\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rust-bypassed-unix-socket\"\nversion = \"3.128.0\"\ndependencies = [\n \"tokio\",\n]\n\n[[package]]\nname = \"rust-e2e-fileops\"\nversion = \"3.128.0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"rust-sqs-printer\"\nversion = \"0.1.0\"\ndependencies = [\n \"aws-config\",\n \"aws-sdk-sqs\",\n \"tokio\",\n]\n\n[[package]]\nname = \"rust-unix-socket-client\"\nversion = \"3.128.0\"\ndependencies = [\n \"tokio\",\n]\n\n[[package]]\nname = \"rust-websockets\"\nversion = \"0.1.0\"\ndependencies = [\n \"axum\",\n \"tokio\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fb8039b3032c191086b10f11f319a6e99e1e82889c5cc6046f515c9db1d497\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver 1.0.24\",\n]\n\n[[package]]\nname = \"rusticata-macros\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"faf0c4a6ece9950b9abdb62b1cfcf2a68b3b67a10ba445b3bb85be2a293d0632\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno 0.3.10\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.21.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f56a14d1f48b391359b22f731fd4bd7e43c97f3c50eee276f3aa09c94784d3e\"\ndependencies = [\n \"log\",\n \"ring\",\n \"rustls-webpki 0.101.7\",\n \"sct\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.22.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf4ef73721ac7bcd79b2b315da7779d8fc09718c6b3d2d1b2d94850eb8c18432\"\ndependencies = [\n \"log\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki 0.102.8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5065c3f250cbd332cd894be57c40fa52387247659b14a2d6041d121547903b1b\"\ndependencies = [\n \"aws-lc-rs\",\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki 0.102.8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile 1.0.4\",\n \"schannel\",\n \"security-framework 2.11.1\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5bfb394eeed242e909609f56089eecfe5fda225042e8b171791b9c95f5931e5\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile 2.2.0\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework 2.11.1\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework 3.2.0\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c\"\ndependencies = [\n \"base64 0.21.7\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2bf47e6ff922db3825eb750c4e2ff784c6ff8fb9e13046ef6a1d1c5401b0b37\"\ndependencies = [\n \"web-time\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.101.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"aws-lc-rs\",\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"ruzstd\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58c4eb8a81997cf040a091d1f7e1938aeab6749d3a0dfa73af43cdc32393483d\"\ndependencies = [\n \"byteorder\",\n \"derive_more\",\n \"twox-hash\",\n]\n\n[[package]]\nname = \"ruzstd\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fad02996bfc73da3e301efe90b1837be9ed8f4a462b6ed410aa35d00381de89f\"\ndependencies = [\n \"twox-hash\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"sample-rust\"\nversion = \"0.1.0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"schemars\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09c024468a378b7e36765cd36702b7a90cc3cba11654f6685c8f233408e89e92\"\ndependencies = [\n \"chrono\",\n \"dyn-clone\",\n \"schemars_derive\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"schemars_derive\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1eee588578aff73f856ab961cd2f79e36bc45d7ded33a7562adba4667aecc0e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde_derive_internals\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"scroll\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ab8598aa408498679922eff7fa985c25d58a90771bd6be794434c5277eab1a6\"\ndependencies = [\n \"scroll_derive\",\n]\n\n[[package]]\nname = \"scroll_derive\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f81c2fde025af7e69b1d1420531c8a8811ca898919db177141a85313b1cb932\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"sct\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"sec1\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc\"\ndependencies = [\n \"base16ct\",\n \"der\",\n \"generic-array\",\n \"pkcs8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"secrecy\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e891af845473308773346dc847b2c23ee78fe442e0472ac50e22a18a93d3ae5a\"\ndependencies = [\n \"zeroize\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"core-foundation 0.9.4\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271720403f46ca04f7ba6f55d438f8bd878d6b8ca0a1046e8228c4145bcbb316\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"core-foundation 0.10.0\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49db231d56a190491cb4aeda9527f1ad45345af50b0851622a7adb8c03b01c32\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\ndependencies = [\n \"semver-parser\",\n \"serde\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"semver-parser\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-value\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3a1a3341211875ef120e117ea7fd5228530ae7e7036a779fdc9117be6b3282c\"\ndependencies = [\n \"ordered-float\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.29.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18d26a20a969b9e3fdf2fc2d9f21eda6c40e2de84c9408bb5d3b05d499aae711\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_path_to_error\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af99884400da37c88f5e9146b7f1fd0fbcae8f6eec4e9da38b67d05486f814a6\"\ndependencies = [\n \"itoa\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_with\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6b6f7f2fcb69f747921f79f3926bd1e203fce4fef62c268dd3abfb6d86029aa\"\ndependencies = [\n \"base64 0.22.1\",\n \"chrono\",\n \"hex\",\n \"indexmap 1.9.3\",\n \"indexmap 2.7.0\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"time\",\n]\n\n[[package]]\nname = \"serde_yaml\"\nversion = \"0.9.34+deprecated\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8b1a1a2ebf674015cc02edccce75287f1a0130d394307b36743c2f5d504b47\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"shellexpand\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da03fa3b94cc19e3ebfc88c4229c49d8f08cdbd1228870a45f0ffdf84988e14b\"\ndependencies = [\n \"dirs\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"signature\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de\"\ndependencies = [\n \"digest\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"simple-file-manifest\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dd19be0257552dd56d1bb6946f89f193c6e5b9f13cc9327c4bc84a357507c74\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slug\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"882a80f72ee45de3cc9a5afeb2da0331d58df69e4e7d8eeb5d3c7784ae67e724\"\ndependencies = [\n \"deunicode\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"snafu\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4de37ad025c587a29e8f3f5605c00f70b98715ef90b9061a815b9e59e9042d6\"\ndependencies = [\n \"backtrace\",\n \"doc-comment\",\n \"snafu-derive\",\n]\n\n[[package]]\nname = \"snafu-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"990079665f075b699031e9c08fd3ab99be5029b96f3b78dc0709e8f77e4efebf\"\ndependencies = [\n \"heck 0.4.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"snailquote\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77c10ec36e3a5cf387fd822263730434205464fbf2b1531054f2f92ee1a7ef4e\"\ndependencies = [\n \"unicode_categories\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spake2\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5482afe85a0b6ce956c945401598dbc527593c77ba51d0a87a586938b1b893a\"\ndependencies = [\n \"curve25519-dalek\",\n \"hkdf\",\n \"rand_core\",\n \"sha2\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d\"\ndependencies = [\n \"base64ct\",\n \"der\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"streammap-ext\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8dbee97d8a0194bb89424f83dad6e17ac44c4faa9a7df69e52796d07d10d559d\"\ndependencies = [\n \"tokio-stream\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"supports-color\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c64fc7232dd8d2e4ac5ce4ef302b1d81e0b80d055b9d77c7c4f51f6aa4c867d6\"\ndependencies = [\n \"is_ci\",\n]\n\n[[package]]\nname = \"supports-hyperlinks\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"804f44ed3c63152de6a9f90acbea1a110441de43006ea51bcce8f436196a288b\"\n\n[[package]]\nname = \"supports-unicode\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7401a30af6cb5818bb64852270bb722533397edcfc7344954a38f420819ece2\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160\"\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f36bdaa60a83aca3921b5259d5400cbf5e90fc51931376a9bd4a0eb79aa7210f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"syscalls\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43d0e35dc7d73976a53c7e6d7d177ef804a0c0ee774ec77bcc520c2216fd7cbe\"\ndependencies = [\n \"serde\",\n \"serde_repr\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation 0.9.4\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"tagptr\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b2093cf4c8eb1e67749a6762251bc9cd836b6fc171623bd0a9d324d37af2417\"\n\n[[package]]\nname = \"tap\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369\"\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c65998313f8e17d0d553d28f91a0df93e4dbbbf770279c7bc21ca0f09ea1a1f6\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a8a559c81686f576e8cd0290cd2a24a2a9ad80c98b3478856500fcbd7acd704\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"getrandom\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"tera\"\nversion = \"1.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab9d851b45e865f178319da0abdbfe6acbc4328759ff18dafc3a41c16b4cd2ee\"\ndependencies = [\n \"chrono\",\n \"chrono-tz\",\n \"globwalk\",\n \"humansize\",\n \"lazy_static\",\n \"percent-encoding\",\n \"pest\",\n \"pest_derive\",\n \"rand\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"slug\",\n \"unic-segment\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f\"\ndependencies = [\n \"dirs-next\",\n \"rustversion\",\n \"winapi\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5352447f921fda68cf61b4101566c0bdb5104eff6804d0678e5227580ab6a4e9\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f50febec83f5ee1df3015341d8bd429f2d1cc62bcba7ea2076759d315084683\"\n\n[[package]]\nname = \"test-cdylib\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8f41b1f729f5ff5177beab62e5a9251e318df8386e260ab3c944cff502ee78d\"\ndependencies = [\n \"cargo_metadata\",\n \"serde\",\n \"serde_json\",\n \"toml 0.5.11\",\n]\n\n[[package]]\nname = \"test_bin\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e7a7de15468c6e65dd7db81cf3822c1ec94c71b2a3c1a976ea8e4696c91115c\"\n\n[[package]]\nname = \"tests\"\nversion = \"0.1.0\"\ndependencies = [\n \"aws-config\",\n \"aws-credential-types\",\n \"aws-sdk-sqs\",\n \"aws-types\",\n \"bytes\",\n \"chrono\",\n \"fancy-regex\",\n \"futures\",\n \"futures-util\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-util\",\n \"json-patch\",\n \"jsonptr\",\n \"k8s-openapi\",\n \"kube\",\n \"mirrord\",\n \"mirrord-operator\",\n \"rand\",\n \"regex\",\n \"reqwest 0.12.12\",\n \"rstest\",\n \"rustls 0.23.20\",\n \"serde\",\n \"serde_json\",\n \"tempfile\",\n \"tokio\",\n \"tokio-tungstenite\",\n \"wsl\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23d434d3f8967a09480fb04132ebe0a3e088c173e6d0ee7897abbdf4eab0f8b9\"\ndependencies = [\n \"unicode-linebreak\",\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tiny-keccak\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237\"\ndependencies = [\n \"crunchy\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"022db8904dfa342efe721985167e9fcd16c29b226db4397ed752a761cfce81e8\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"parking_lot\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tokio-retry\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f57eb36ecbe0fc510036adff84824dd3c24bb781e21bfa67b69d556aa85214f\"\ndependencies = [\n \"pin-project\",\n \"rand\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081\"\ndependencies = [\n \"rustls 0.21.12\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6d0975eaace0cf0fcadee4e4aaa5da15b5c079146f2cffb67c113be122bf37\"\ndependencies = [\n \"rustls 0.23.20\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-socks\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d4770b8024672c1101b3f6733eab95b18007dbe0847a8afe341fcf79e06043f\"\ndependencies = [\n \"either\",\n \"futures-util\",\n \"thiserror 1.0.69\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-stream\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eca58d7bba4a75707817a2c44174253f9236b2d5fbd055602e9d5c07c139a047\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n \"tokio\",\n \"tokio-util\",\n]\n\n[[package]]\nname = \"tokio-tungstenite\"\nversion = \"0.24.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edc5f74e248dc973e0dbb7b74c7e0d6fcc301c694ff50049504004ef4d0cdcd9\"\ndependencies = [\n \"futures-util\",\n \"log\",\n \"tokio\",\n \"tungstenite 0.24.0\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7fcaa8d55a2bdd6b83ace262b016eca0d79ee02818c5c1bcdf0305114081078\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"slab\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tonic\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"877c5b330756d856ffcc4553ab34a5684481ade925ecc54bcd1bf02b1d0d4d52\"\ndependencies = [\n \"async-stream\",\n \"async-trait\",\n \"axum\",\n \"base64 0.22.1\",\n \"bytes\",\n \"h2 0.4.7\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"hyper 1.5.2\",\n \"hyper-timeout\",\n \"hyper-util\",\n \"percent-encoding\",\n \"pin-project\",\n \"prost\",\n \"socket2\",\n \"tokio\",\n \"tokio-stream\",\n \"tower 0.4.13\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tonic-build\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9557ce109ea773b399c9b9e5dca39294110b74f1f342cb347a80d1fce8c26a11\"\ndependencies = [\n \"prettyplease\",\n \"proc-macro2\",\n \"prost-build\",\n \"prost-types\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"indexmap 1.9.3\",\n \"pin-project\",\n \"pin-project-lite\",\n \"rand\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d039ad9159c98b70ecfd540b2573b97f7f52c3e8d9f8ad57a24b916a536975f9\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project-lite\",\n \"sync_wrapper 1.0.2\",\n \"tokio\",\n \"tokio-util\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-http\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"403fa3b783d4b626a8ad51d766ab03cb6d2dbfc46b1c5d4448395e6628dc9697\"\ndependencies = [\n \"base64 0.22.1\",\n \"bitflags 2.6.0\",\n \"bytes\",\n \"http 1.2.0\",\n \"http-body 1.0.1\",\n \"mime\",\n \"pin-project-lite\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e\"\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-serde\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"704b1aeb7be0d0a84fc9828cae51dab5970fee5088f83d1dd7ee6f6246fc6ff1\"\ndependencies = [\n \"serde\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-serde\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"tun2\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21afe73d3d42581a7400fbf5aec057a646ffe3f8bb5ae3f61d88c7e7f4ac77be\"\ndependencies = [\n \"bytes\",\n \"cfg-if\",\n \"futures\",\n \"futures-core\",\n \"ipnet\",\n \"libc\",\n \"log\",\n \"nix 0.29.0\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tokio-util\",\n \"windows-sys 0.59.0\",\n \"wintun-bindings\",\n]\n\n[[package]]\nname = \"tungstenite\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ef1a641ea34f399a848dea702823bbecfb4c486f911735368f1f137cb8257e1\"\ndependencies = [\n \"byteorder\",\n \"bytes\",\n \"data-encoding\",\n \"http 1.2.0\",\n \"httparse\",\n \"log\",\n \"rand\",\n \"rustls 0.22.4\",\n \"rustls-native-certs 0.7.3\",\n \"rustls-pki-types\",\n \"sha1\",\n \"thiserror 1.0.69\",\n \"url\",\n \"utf-8\",\n]\n\n[[package]]\nname = \"tungstenite\"\nversion = \"0.24.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18e5b8366ee7a95b16d32197d0b2604b43a0be89dc5fac9f8e96ccafbaedda8a\"\ndependencies = [\n \"byteorder\",\n \"bytes\",\n \"data-encoding\",\n \"http 1.2.0\",\n \"httparse\",\n \"log\",\n \"rand\",\n \"sha1\",\n \"thiserror 1.0.69\",\n \"utf-8\",\n]\n\n[[package]]\nname = \"twox-hash\"\nversion = \"1.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\"\ndependencies = [\n \"cfg-if\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"typewit\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb77c29baba9e4d3a6182d51fa75e3215c7fd1dab8f4ea9d107c716878e55fc0\"\ndependencies = [\n \"typewit_proc_macros\",\n]\n\n[[package]]\nname = \"typewit_proc_macros\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e36a83ea2b3c704935a01b4642946aadd445cea40b10935e3f8bd8052b8193d6\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2896d95c02a80c6d6a5d6e953d479f5ddf2dfdb6a244441010e373ac0fb88971\"\n\n[[package]]\nname = \"uncased\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1b88fcfe09e89d3866a5c11019378088af2d24c3fbd4f0543f96b479ec90697\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unic-char-property\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8c57a407d9b6fa02b4795eb81c5b6652060a15a7903ea981f3d723e6c0be221\"\ndependencies = [\n \"unic-char-range\",\n]\n\n[[package]]\nname = \"unic-char-range\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0398022d5f700414f6b899e10b8348231abf9173fa93144cbc1a43b9793c1fbc\"\n\n[[package]]\nname = \"unic-common\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80d7ff825a6a654ee85a63e80f92f054f904f21e7d12da4e22f9834a4aaa35bc\"\n\n[[package]]\nname = \"unic-segment\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4ed5d26be57f84f176157270c112ef57b86debac9cd21daaabbe56db0f88f23\"\ndependencies = [\n \"unic-ucd-segment\",\n]\n\n[[package]]\nname = \"unic-ucd-segment\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2079c122a62205b421f499da10f3ee0f7697f012f55b675e002483c73ea34700\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-version\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96bd2f2237fe450fcd0a1d2f5f4e91711124f7857ba2e964247776ebeeb7b0c4\"\ndependencies = [\n \"unic-common\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-linebreak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b09c83c3c29d37506a3e260c08c03743a6bb66a9cd432c6934ab501a190571f\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"unicode_categories\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e\"\n\n[[package]]\nname = \"unreachable\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\ndependencies = [\n \"void\",\n]\n\n[[package]]\nname = \"unsafe-libyaml\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"673aac59facbab8a9007c7f6108d11f63b603f7cabff99fabf650fea5c32b861\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"urlencoding\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da\"\n\n[[package]]\nname = \"utf\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8704f91734e57e97633bff5afe5c2893e5aca5bd83fac44736460deca2611a76\"\n\n[[package]]\nname = \"utf-8\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9\"\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"virtue\"\nversion = \"0.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dcc60c0624df774c82a0ef104151231d37da4962957d691c011c852b2473314\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"vsimd\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c3082ca00d5a5ef149bb8b555a72ae84c9c59f7250f013ac822ac2e49b19c64\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasite\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8dad83b4f25e74f184f64c43b150b91efe7647395b42289f38e50566d82855b\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38176d9b44ea84e9184eff0bc34cc167ed044f816accfe5922e54d84cf48eca2\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"once_cell\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.25.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f20c57d8d7db6d3b86154206ae5d8fba62dd39573114de97c2cb0578251f8e1\"\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d642ff16b7e79272ae451b7322067cdc17cadf68c23264be9d94a32319efe7e\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"7.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb4a9e33648339dc1642b0e36e21b3385e6148e289226f657c809dee59df5028\"\ndependencies = [\n \"either\",\n \"env_home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"whoami\"\nversion = \"1.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"372d5b87f58ec45c384ba03563b03544dc5fadc3983e434b286913f5b4a9bb6d\"\ndependencies = [\n \"redox_syscall\",\n \"wasite\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7219d36b6eac893fa81e84ebe06485e7dcbb616177469b142df14f1f4deb1311\"\n\n[[package]]\nname = \"wildmatch\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68ce1ab1f8c62655ebe1350f589c61e505cf94d385bc6a12899442d9081e71fd\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd04d41d93c4992d421894c18c8b43496aa748dd4c081bac0dc93eb0489272b6\"\ndependencies = [\n \"windows-core 0.58.0\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba6d44ec8c2591c134257ce647b7ea6b20335bf6379a27dac5f1641fcf59f99\"\ndependencies = [\n \"windows-implement\",\n \"windows-interface\",\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bbd5b46c938e506ecbce286b6628a02171d56153ba733b6c741fc627ec9579b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053c4c462dc91d3b1504c6fe5a726dd15e216ba718e84a0e46a88fbe5ded3515\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39281189af81c07ec09db316b302a3e67bf9bd7cbf6c820b50e35fee9c2fa980\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winreg\"\nversion = \"0.50.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"wintun-bindings\"\nversion = \"0.7.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e35d3911efde5ee25586385204127ff6a3f251477dcdd3b222775aaa4d95977\"\ndependencies = [\n \"blocking\",\n \"c2rust-bitfields\",\n \"futures\",\n \"libloading\",\n \"log\",\n \"thiserror 2.0.9\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"wsl\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8dab7ac864710bdea6594becbea5b5050333cf34fefb0dc319567eb347950d4\"\n\n[[package]]\nname = \"wyz\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed\"\ndependencies = [\n \"tap\",\n]\n\n[[package]]\nname = \"x509\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3cec94c3999f31341553f358ef55f65fc031291a022cd42ec0ce7219560c76\"\ndependencies = [\n \"chrono\",\n \"cookie-factory\",\n]\n\n[[package]]\nname = \"x509-certificate\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"66534846dec7a11d7c50a74b7cdb208b9a581cad890b7866430d438455847c85\"\ndependencies = [\n \"bcder\",\n \"bytes\",\n \"chrono\",\n \"der\",\n \"hex\",\n \"pem\",\n \"ring\",\n \"signature\",\n \"spki\",\n \"thiserror 1.0.69\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"x509-certificate\"\nversion = \"0.24.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e57b9f8bcae7c1f36479821ae826d75050c60ce55146fd86d3553ed2573e2762\"\ndependencies = [\n \"bcder\",\n \"bytes\",\n \"chrono\",\n \"der\",\n \"hex\",\n \"pem\",\n \"ring\",\n \"signature\",\n \"spki\",\n \"thiserror 1.0.69\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"x509-parser\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcbc162f30700d6f3f82a24bf7cc62ffe7caea42c0b2cba8bf7f3ae50cf51f69\"\ndependencies = [\n \"asn1-rs 0.6.2\",\n \"data-encoding\",\n \"der-parser\",\n \"lazy_static\",\n \"nom\",\n \"oid-registry 0.7.1\",\n \"rusticata-macros\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"xattr\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e105d177a3871454f754b33bb0ee637ecaaac997446375fd3e5d43a2ed00c909\"\ndependencies = [\n \"libc\",\n \"linux-raw-sys\",\n \"rustix\",\n]\n\n[[package]]\nname = \"xml-rs\"\nversion = \"0.8.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea8b391c9a790b496184c29f7f93b9ed5b16abb306c05415b68bcc16e4d06432\"\n\n[[package]]\nname = \"xmlparser\"\nversion = \"0.13.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"66fee0b777b0f5ac1c69bb06d361268faafa61cd4682ae064a171c16c433e9e4\"\n\n[[package]]\nname = \"xz\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c887690ff2a2e233e8e49633461521f98ec57fbff9d59a884c9a4f04ec1da34\"\ndependencies = [\n \"xz2\",\n]\n\n[[package]]\nname = \"xz2\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2\"\ndependencies = [\n \"lzma-sys\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"yasna\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e17bb3549cc1321ae1296b9cdc2698e2b6cb1992adfa19a8c72e5b7a738f44cd\"\ndependencies = [\n \"time\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure 0.13.1\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure 0.13.1\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"0.6.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"760394e246e4c28189f19d488c058bf16f564016aefac5d32bb1f3b51d5e9261\"\ndependencies = [\n \"byteorder\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"flate2\",\n]\n\n[[package]]\nname = \"zip_structs\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce824a6bfffe8942820fa36d24973b7c83a40896749a42e33de0abdd11750ee5\"\ndependencies = [\n \"byteorder\",\n \"bytesize\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"zstd\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcf2b778a664581e31e389454a7072dab1647606d44f7feea22cd5abb9c9f3f9\"\ndependencies = [\n \"zstd-safe\",\n]\n\n[[package]]\nname = \"zstd-safe\"\nversion = \"7.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54a3ab4db68cea366acc5c897c7b4d4d1b8994a9cd6e6f841f8964566a419059\"\ndependencies = [\n \"zstd-sys\",\n]\n\n[[package]]\nname = \"zstd-sys\"\nversion = \"2.0.13+zstd.1.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38ff0f21cfee8f97d94cef41359e0c89aa6113028ab0291aa8ca0038995a95aa\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 4.548828125,
          "content": "[workspace]\n\nmembers = [\n    \"mirrord/*\",\n    \"mirrord/layer/tests/apps/fileops\",\n    \"mirrord/layer/tests/apps/outgoing\",\n    \"mirrord/layer/tests/apps/listen_ports\",\n    \"mirrord/layer/tests/apps/dns_resolve\",\n    \"mirrord/layer/tests/apps/recv_from\",\n    \"mirrord/layer/tests/apps/issue1776\",\n    \"mirrord/layer/tests/apps/issue1776portnot53\",\n    \"mirrord/layer/tests/apps/issue1899\",\n    \"mirrord/layer/tests/apps/issue2001\",\n    \"mirrord/layer/tests/apps/issue2438\",\n    \"mirrord/layer/tests/apps/rebind0\",\n    \"sample/rust\",\n    \"medschool\",\n    \"tests\",\n    \"tests/rust-e2e-fileops\",\n    \"tests/rust-unix-socket-client\",\n    \"tests/rust-bypassed-unix-socket\",\n    \"tests/issue1317\",\n    \"tests/rust-websockets\",\n    \"tests/rust-sqs-printer\",\n]\nresolver = \"2\"\n\n# latest commits on rustls suppress certificate verification\n[workspace.package]\nversion = \"3.128.0\"\nedition = \"2021\"\nlicense = \"MIT\"\nreadme = \"README.md\"\nrepository = \"https://github.com/metalbear/mirrord\"\ndocumentation = \"https://mirrord.dev/docs\"\nauthors = [\"MetalBear <hi@metalbear.co>\"]\ndescription = \"Run a local process in the context of a cloud environment\"\nhomepage = \"https://mirrord.dev\"\npublish = false\nkeywords = [\n    \"cli\",\n    \"backend\",\n    \"debug\",\n    \"test\",\n    \"kubernetes\",\n    \"cloud\",\n    \"native\",\n    \"local\",\n    \"ide\",\n    \"devtool\",\n    \"developer\",\n    \"tool\",\n]\ncategories = [\"development-tools\", \"backend\", \"devtool\"]\n\n[workspace.dependencies]\nactix-codec = \"0.5\"\n\n# Used by `operator`, `layer`, `console`, `protocol`, `intproxy-protocol`.\nbincode = { version = \"2.0.0-rc.3\", features = [\"serde\"] }\nbytes = \"1\"\n\ntokio = { version = \"1\" }\ntokio-stream = { version = \"0.1\", features = [\"sync\"] }\nserde = { version = \"1\", features = [\"derive\"] }\nserde_json = \"1\"\nserde_yaml = \"0.9\"\nnix = { version = \"0.29\", features = [\"net\"] }\nclap = { version = \"4\", features = [\"derive\"] }\ntracing = \"0.1\"\ntracing-subscriber = { version = \"0.3\", features = [\"env-filter\", \"json\"] }\nfutures = \"0.3\"\nthiserror = \"2\"\nk8s-openapi = { version = \"0.23\", features = [\"earliest\"] }\nreqwest = { version = \"0.12\", default-features = false, features = [\n    \"blocking\",\n    \"rustls-tls-native-roots\",\n    \"json\",\n    \"socks\",\n    \"http2\",\n] }\nkube = { git = \"https://github.com/kube-rs/kube.git\", rev = \"ecbdafc214538aadc78ec8447f2fa12d0057492b\", default-features = false, features = [\n    \"runtime\",\n    \"derive\",\n    \"client\",\n    \"ws\",\n    \"rustls-tls\",\n    \"oidc\",\n    \"socks5\",\n    \"http-proxy\",\n] }\nhickory-resolver = { version = \"0.25.0-alpha.4\", features = [\n    \"serde\",\n    \"tokio-runtime\",\n] }\nhickory-proto = \"0.25.0-alpha.4\"\ntokio-util = { version = \"0.7\", features = [\"net\", \"codec\"] }\n\n# Used by `layer`, `intproxy`, `tests`, `medschool`, `cli`, `agent`, `operator`.\nrand = \"0.8\"\nstreammap-ext = \"0.1\"\nregex = { version = \"1\", features = [\"unicode-case\"] }\nfancy-regex = { version = \"0.14\" }\nenum_dispatch = \"0.3\"\nenvfile = \"0.2\"\n\n\n# If you update `hyper`, check that `h2` version is compatible in `intproxy/Cargo.toml`.\n# There is a test for this: `cargo test -p mirrord-intproxy hyper_and_h2_versions_in_sync`\nhyper = { version = \"1\", features = [\"full\"] }\nhyper-util = { version = \"0.1\" }\nhttp-body = \"1\"\nhttp-body-util = \"0.1\"\nlibc = \"0.2\"\nsocket2 = { version = \"0.5\", features = [\"all\"] }\nwhich = \"7\"\nsemver = \"1\"\nexec = \"0.3\"\ndrain = \"0.1\"\nbase64 = \"0.22\"\nrustls = \"0.23\"\n\n# Used by `operator`, `tests`.\ntokio-tungstenite = { version = \"0.24\" }\n\n# Used by `operator`, `agent`.\nhttp = { version = \"1\" }\n\n# Used by `intproxy`, `cli`.\nrustls-pemfile = \"2\"\n\n# Used by `tests`, `layer`, `cli`, `kube`, `agent`, `config`, `operator`.\nrstest = \"0.23\"\n\n# Used by `layer`, `tests`, `sip`, `cli`.\ntempfile = \"3\"\n\n# Used by `cli`, `vpn`.\ntun2 = { version = \"4\", features = [\"async\"] }\n\n# Used by `layer`, `operator`, `tests`, `auth`.\nchrono = \"0.4\"\n\n# Used by `kube`, `agent`, `layer`.\ntower = \"0.5\"\n\n# Used by `agent`, `intproxy`, `cli`.\ntokio-rustls = \"0.26\"\n\n# Used by `agent`, `cli`.\nrcgen = \"0.13\"\n\n# Used by `config`, `operator`.\nschemars = { version = \"0.8.11\" }\n\n# Used by `config`, `vpn`.\nipnet = \"2.8\"\n\n# Used by `macros`, `layer-macro`, `config-derive`.\nproc-macro2 = \"1\"\n\n# Used by `macros`, `config-derive`.\nproc-macro2-diagnostics = \"0.10\"\n\n# Used by `macros`, `layer-macro`, `config-derive`, `medschool`.\nsyn = { version = \"2\", features = [\"full\", \"extra-traits\"] }\n\n# Used by `layer-macro`, `config-derive`.\nquote = \"1\"\n\n# Used by `console`, `cli`.\nmiette = \"7\"\n\n[workspace.lints.rustdoc]\nprivate_intra_doc_links = \"allow\"\n\n[profile.release]\nstrip = \"debuginfo\"\n# Enabling LTO causes this issue https://github.com/metalbear-co/mirrord/issues/906\nlto = false\n"
        },
        {
          "name": "Cross.toml",
          "type": "blob",
          "size": 0.3798828125,
          "content": "[build.env]\npassthrough = [\n    \"MIRRORD_LAYER_FILE\",\n]\n# Dockerfile used for building mirrord-layer for x64 with very old libc\n# this to support centos7 or Amazon Linux 2.\n[target.x86_64-unknown-linux-gnu]\nimage = \"ghcr.io/metalbear-co/ci-layer-build:latest\"\n\n# 0.2.5 doesn't work (lacks clang?)\n[target.aarch64-unknown-linux-gnu]\nimage = \"ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main\""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0263671875,
          "content": "Copyright 2022 Metalbear.co\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1396484375,
          "content": "<div align=\"center\">\n\n![mirrord logo](./images/logo.svg)\n\n</div>\n\n[![Discord](https://img.shields.io/discord/933706914808889356?color=5865F2&label=Discord&logo=discord&logoColor=white)](https://discord.gg/metalbear)\n![License](https://img.shields.io/badge/license-MIT-green)\n![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/metalbear-co/mirrord)\n[![Twitter Follow](https://img.shields.io/twitter/follow/metalbearco?style=social)](https://twitter.com/metalbearco)\n\n[mirrord lets developers run local processes in the context of their Kubernetes environment](https://mirrord.dev/).\nIt’s meant to provide the benefits of running your service on a cloud environment (e.g. staging) without actually\ngoing through the hassle of deploying it there, and without disrupting the environment by deploying untested code.\nIt comes as a Visual Studio Code extension, an IntelliJ plugin and a CLI tool. You can read more about it [here](https://mirrord.dev/docs/overview/introduction/).\n\n# Contents\n\n- [Contents](#contents)\n  - [Getting Started](#getting-started)\n  - [VS Code Extension](#vs-code-extension)\n    - [Installation](#installation)\n    - [How To Use](#how-to-use)\n  - [IntelliJ Plugin](#intellij-plugin)\n    - [Installation](#installation-1)\n    - [How To Use](#how-to-use-1)\n  - [CLI Tool](#cli-tool)\n    - [Installation](#installation-2)\n    - [How To Use](#how-to-use-2)\n  - [How It Works](#how-it-works)\n    - [Additional capabilities](#additional-capabilities)\n  - [FAQ](#faq)\n  - [Contributing](#contributing)\n  - [Help and Community](#help-and-community)\n  - [Code of Conduct](#code-of-conduct)\n  - [License](#license)\n\n---\n\n## Getting Started\n\n- [VS Code Extension](#vs-code-extension)\n- [IntelliJ Plugin](#intellij-plugin)\n- [CLI Tool](#cli-tool)\n\n> mirrord uses your machine's default kubeconfig for access to the Kubernetes API.\n\n---\n\n## VS Code Extension\n\n### Installation\n\nGet the extension [here](https://marketplace.visualstudio.com/items?itemName=MetalBear.mirrord).\n\n### How To Use\n\n- Click \"Enable mirrord\" on the status bar\n- Start debugging your project\n- Choose pod to impersonate\n- The debugged process will be plugged into the selected pod by mirrord\n\n<p align=\"center\">\n  <img src=\"./images/vscode.gif\">\n</p>\n\n---\n\n## IntelliJ Plugin\n\n### Installation\n\nGet the plugin [here](https://plugins.jetbrains.com/plugin/19772-mirrord).\n\n### How To Use\n\n- Click the mirrord icon in the Navigation Toolbar\n- Start debugging your project\n- Choose a namespace and pod to impersonate\n- The debugged process will be plugged into the selected pod by mirrord\n\n<p align=\"center\">\n  <img src=\"./intellij-ext/src/main/resources/META-INF/usage.gif\">\n</p>\n\n---\n\n## CLI Tool\n\n### Installation\n\nYou can use either\n\n```sh\nbrew install metalbear-co/mirrord/mirrord\n```\n\nor\n\n```sh\ncurl -fsSL https://raw.githubusercontent.com/metalbear-co/mirrord/main/scripts/install.sh | bash\n```\n\n- Windows isn't currently supported (you can use WSL)\n\n### How To Use\n\n```sh\nmirrord exec <process command> --target <target-path>\n```\n\ne.g.\n\n```sh\nmirrord exec node app.js --target pod/my-pod\n```\n\n---\n\n## How It Works\n\nWhen you select a pod to impersonate, mirrord launches a pod on the same node as the pod you selected.\nThe new pod is then used to connect your local process and the impersonated pod: it mirrors incoming traffic from the pod to your process,\nroutes outgoing traffic from your process through the pod, and does the same for file reads, file writes, and environment variables.\nYou can read more about it [here](https://mirrord.dev/docs/overview/introduction/).\n\n### Additional capabilities\n\nContainer run inside the pod launched by mirrord requires additional [Linux capabilities](https://man7.org/linux/man-pages/man7/capabilities.7.html):\n\n- `CAP_NET_ADMIN` and `CAP_NET_RAW` - for modifying routing tables\n- `CAP_SYS_PTRACE` - for reading target pod environment\n- `CAP_SYS_ADMIN` - for joining target pod network namespace\n\nHowever, you can disable any subset of those in the [configuration](https://mirrord.dev/docs/reference/configuration/).\nThis will possibly limit mirrord functionalities or even make it unusable in some setups.\n\n```bash\nMIRRORD_AGENT_DISABLED_CAPABILITIES=CAP_NET_RAW,CAP_SYS_PTRACE mirrord exec node app.js --target pod/my-pod\n```\n\n<p align=\"center\">\n  <img src=\"./images/how_it_works.svg\" alt=\"How It Works\"/>\n</p>\n\n## FAQ\n\nOur FAQ is available [here](https://mirrord.dev/docs/faq/general/).\nIf you have a question that's not on there, feel free to ask in our [Discussions](https://github.com/metalbear-co/mirrord/discussions)\nor on [Discord](https://discord.gg/metalbear).\n\n## Contributing\n\nContributions are very welcome. Start by checking out our [open issues](https://github.com/metalbear-co/mirrord/issues), and by going through our [contributing guide](CONTRIBUTING.md).\nWe're available on [Discord](https://discord.gg/metalbear) for any questions.\n\n## Help and Community\n\nJoin our [Discord Server](https://discord.gg/metalbear) for questions, support and fun.\n\n## Code of Conduct\n\nWe take our community seriously and we are dedicated to providing a safe and welcoming environment for everyone.\nPlease take a few minutes to review our [Code of Conduct](./CODE_OF_CONDUCT.md).\n\n## License\n\n[MIT](./LICENSE)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.814453125,
          "content": "# Security\n\n**Contact:** security@metalbear.co\n\nKeeping mirrord secure is a top concern for us. Nevertheless, despite our best efforts to fortify it, vulnerabilities may still be present.\n\nIf you come across a vulnerability, please inform us promptly so we can resolve it as soon as possible. We kindly request your assistance in enhancing the security of both our clients and our systems.\n\n## Reporting a Vulnerability\n\n**In Scope Vulnerabilities:**\n\n- Any security issues that might put at risk the confidentiality, integrity, or accessibility of our systems or data.\n\n**Reporting Instructions:**\n\n1. Email your findings to **security@metalbear.co**.\n\n2. Please do not exploit the vulnerability or issue you've found.\n\n3. Please keep the issue confidential until we've fixed it.\n\n4. Do not use attacks on physical security, social engineering, distributed denial of service, spam, or third-party applications.\n\n5. Please share enough details for us to understand and fix the issue as fast as we can.\n\n## What *We* Promise\n\n1. We'll get back to you within 3 business days with our assessment of the report and an estimated date of when we expect to resolve it.\n\n2. We will not take any legal action against you related to the report, if you have adhered to the reporting instructions above.\n\n3. We'll treat your report with utmost confidentiality and won't share your personal information with third parties without your consent.\n\n4. We'll be keeping you updated of the progress toward fixing the issue.\n\n5. We'll credit you as the discoverer of the issue (unless you request otherwise) in public disclosures of the reported issue.\n\n6. We aim to resolve all issues promptly and are eager to actively contribute to the ultimate publication on the problem, once the problem has been resolved.\n\nWe truly value your contributions in strengthening our security.\n"
        },
        {
          "name": "STYLE.md",
          "type": "blob",
          "size": 1.4619140625,
          "content": "# mirrord Style Guide\n\n## Rust\n\n- When naming Senders and Receivers, use `a_tx` and `b_rx` respectively - where `a` is the thing the Sender is sending, and `b` is the thing Receiver is receiving. E.g. `agent_message_tx`, `http_response_rx`.\n    - Document above the declaration of the variable/struct member what’s being sent from where to where. Suggested format:\n      `<src> --<what's being sent>—> <dst>`.\n\n      Example:\n      `/// HTTP client task —-IDs of closed connections—-> TcpStealHandler`\n      If known, the meaning of the objects being sent is documented, not just their type.\n- Don’t use “local” in naming in agent code, since it could be unclear if it’s local to the agent, or to the user’s system. Instead, use “agent”, “cluster”, “pod”, “container”, “layer”, “user_application” to specify where this item is local to.\n- When using `unwrap` or `expect`, always explain why it’s ok to do so in a comment (except for in tests obviously).\n- Only use `Option`s where it is valid to have a `None`. Avoid passing around\n  `Option`s that are expected to always be `Some`, and hold the inner value\n  instead as early as possible.\n  - That way, developers don't have to make sure that the `Option` that is\n    expected to be `Some` is not `None` at later points along the run.\n  - Also, the code is easier to read this way: you don't have to somehow know\n    that an `Option` is expected to never be `None` in order to understand the\n    code.\n"
        },
        {
          "name": "TECHNICAL.md",
          "type": "blob",
          "size": 0.265625,
          "content": "## How it works\n<h2 align=\"center\">Architecture</h2>\n<p align=\"center\">\n  <img src=\"images/architecture.png\" width=\"738\">\n</p></br></br></br>\n<h2 align=\"center\">Flow</h2>\n<p align=\"center\">\n  <img src=\"images/flowchart.jpg\" width=\"738\">\n</p>\n<br/><br/><br/><br/><br/><br/>"
        },
        {
          "name": "TELEMETRY.md",
          "type": "blob",
          "size": 0.8720703125,
          "content": "# Telemetry / Analytics\n\nmirrord sends anonymous usage statistics to our systems.\nWe don't store IP addresses, and in the open-source version of mirrord, we don't create any unique identifier for the user. In mirrord for Teams, a random key is used as an identifier for each user, along with the key of the operator used.\n\nData collected is session duration and what features were used (steal/mirror/fs mode, etc).\nThis helps us to improve the product and by better understanding our users.\nTypes of data sent:\n1. Feature on/off\n2. Feature enum value (steal/mirror, read/write)\n3. Feature count (how many ports in listen_ports)\n\nWhen there's an error, we send the name of the error (out of a hard-coded list, so there's no risk of any sensitive data being sent).\n\n## Disabling\n\nTelemetry can be disabled by specifying the following in the mirrord config file:\n```json\n{\"telemetry\": false}\n```\n"
        },
        {
          "name": "changelog.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "markdownlint-config.json",
          "type": "blob",
          "size": 0.1396484375,
          "content": "{\n    \"MD013\": {\n        \"line_length\": 160\n    },\n    \"MD024\": {\n        \"siblings_only\": true\n    },\n    \"MD033\": false,\n    \"MD041\": false\n}"
        },
        {
          "name": "medschool",
          "type": "tree",
          "content": null
        },
        {
          "name": "mirrord-schema.json",
          "type": "blob",
          "size": 93.646484375,
          "content": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"LayerFileConfig\",\n  \"description\": \"mirrord allows for a high degree of customization when it comes to which features you want to enable, and how they should function.\\n\\nAll of the configuration fields have a default value, so a minimal configuration would be no configuration at all.\\n\\nThe configuration supports templating using the [Tera](https://keats.github.io/tera/docs/) template engine. Currently we don't provide additional values to the context, if you have anything you want us to provide please let us know.\\n\\nTo use a configuration file in the CLI, use the `-f <CONFIG_PATH>` flag. Or if using VSCode Extension or JetBrains plugin, simply create a `.mirrord/mirrord.json` file or use the UI.\\n\\nTo help you get started, here are examples of a basic configuration file, and a complete configuration file containing all fields.\\n\\n### Basic `config.json` {#root-basic}\\n\\n```json { \\\"target\\\": \\\"pod/bear-pod\\\", \\\"feature\\\": { \\\"env\\\": true, \\\"fs\\\": \\\"read\\\", \\\"network\\\": true } } ```\\n\\n### Basic `config.json` with templating {#root-basic-templating}\\n\\n```json { \\\"target\\\": \\\"{{ get_env(name=\\\"TARGET\\\", default=\\\"pod/fallback\\\") }}\\\", \\\"feature\\\": { \\\"env\\\": true, \\\"fs\\\": \\\"read\\\", \\\"network\\\": true } } ```\\n\\n### Complete `config.json` {#root-complete}\\n\\nDon't use this example as a starting point, it's just here to show you all the available options. ```json { \\\"accept_invalid_certificates\\\": false, \\\"skip_processes\\\": \\\"ide-debugger\\\", \\\"target\\\": { \\\"path\\\": \\\"pod/bear-pod\\\", \\\"namespace\\\": \\\"default\\\" }, \\\"connect_tcp\\\": null, \\\"agent\\\": { \\\"log_level\\\": \\\"info\\\", \\\"json_log\\\": false, \\\"labels\\\": { \\\"user\\\": \\\"meow\\\" }, \\\"annotations\\\": { \\\"cats.io/inject\\\": \\\"enabled\\\" }, \\\"namespace\\\": \\\"default\\\", \\\"image\\\": \\\"ghcr.io/metalbear-co/mirrord:latest\\\", \\\"image_pull_policy\\\": \\\"IfNotPresent\\\", \\\"image_pull_secrets\\\": [ { \\\"secret-key\\\": \\\"secret\\\" } ], \\\"ttl\\\": 30, \\\"ephemeral\\\": false, \\\"communication_timeout\\\": 30, \\\"startup_timeout\\\": 360, \\\"network_interface\\\": \\\"eth0\\\", \\\"flush_connections\\\": true }, \\\"feature\\\": { \\\"env\\\": { \\\"include\\\": \\\"DATABASE_USER;PUBLIC_ENV\\\", \\\"exclude\\\": \\\"DATABASE_PASSWORD;SECRET_ENV\\\", \\\"override\\\": { \\\"DATABASE_CONNECTION\\\": \\\"db://localhost:7777/my-db\\\", \\\"LOCAL_BEAR\\\": \\\"panda\\\" }, \\\"mapping\\\": { \\\".+_TIMEOUT\\\": \\\"1000\\\" } }, \\\"fs\\\": { \\\"mode\\\": \\\"write\\\", \\\"read_write\\\": \\\".+\\\\\\\\.json\\\" , \\\"read_only\\\": [ \\\".+\\\\\\\\.yaml\\\", \\\".+important-file\\\\\\\\.txt\\\" ], \\\"local\\\": [ \\\".+\\\\\\\\.js\\\", \\\".+\\\\\\\\.mjs\\\" ] }, \\\"network\\\": { \\\"incoming\\\": { \\\"mode\\\": \\\"steal\\\", \\\"http_filter\\\": { \\\"header_filter\\\": \\\"host: api\\\\\\\\..+\\\" }, \\\"port_mapping\\\": [[ 7777, 8888 ]], \\\"ignore_localhost\\\": false, \\\"ignore_ports\\\": [9999, 10000] }, \\\"outgoing\\\": { \\\"tcp\\\": true, \\\"udp\\\": true, \\\"filter\\\": { \\\"local\\\": [\\\"tcp://1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\", \\\":53\\\"] }, \\\"ignore_localhost\\\": false, \\\"unix_streams\\\": \\\"bear.+\\\" }, \\\"dns\\\": { \\\"enabled\\\": true, \\\"filter\\\": { \\\"local\\\": [\\\"1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\"] } } }, \\\"copy_target\\\": { \\\"scale_down\\\": false } }, \\\"operator\\\": true, \\\"kubeconfig\\\": \\\"~/.kube/config\\\", \\\"sip_binaries\\\": \\\"bash\\\", \\\"telemetry\\\": true, \\\"kube_context\\\": \\\"my-cluster\\\" } ```\\n\\n# Options {#root-options}\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"accept_invalid_certificates\": {\n      \"title\": \"accept_invalid_certificates {#root-accept_invalid_certificates}\",\n      \"description\": \"Controls whether or not mirrord accepts invalid TLS certificates (e.g. self-signed certificates).\\n\\nIf not provided, mirrord will use value from the kubeconfig.\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"agent\": {\n      \"title\": \"agent {#root-agent}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/AgentFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"connect_tcp\": {\n      \"title\": \"connect_tcp {#root-connect_tcp}\",\n      \"description\": \"IP:PORT to connect to instead of using k8s api, for testing purposes.\\n\\n```json { \\\"connect_tcp\\\": \\\"10.10.0.100:7777\\\" } ```\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"container\": {\n      \"title\": \"container {#root-container}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/ContainerFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"experimental\": {\n      \"title\": \"experimental {#root-experimental}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/ExperimentalFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"external_proxy\": {\n      \"title\": \"external_proxy {#root-external_proxy}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/ExternalProxyFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"feature\": {\n      \"title\": \"feature {#root-feature}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/FeatureFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"internal_proxy\": {\n      \"title\": \"internal_proxy {#root-internal_proxy}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/InternalProxyFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"kube_context\": {\n      \"title\": \"kube_context {#root-kube_context}\",\n      \"description\": \"Kube context to use from the kubeconfig file. Will use current context if not specified.\\n\\n```json { \\\"kube_context\\\": \\\"mycluster\\\" } ```\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"kubeconfig\": {\n      \"title\": \"kubeconfig {#root-kubeconfig}\",\n      \"description\": \"Path to a kubeconfig file, if not specified, will use `KUBECONFIG`, or `~/.kube/config`, or the in-cluster config.\\n\\n```json { \\\"kubeconfig\\\": \\\"~/bear/kube-config\\\" } ```\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ]\n    },\n    \"operator\": {\n      \"title\": \"operator {#root-operator}\",\n      \"description\": \"Whether mirrord should use the operator. If not set, mirrord will first attempt to use the operator, but continue without it in case of failure.\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"sip_binaries\": {\n      \"title\": \"sip_binaries {#root-sip_binaries}\",\n      \"description\": \"Binaries to patch (macOS SIP).\\n\\nUse this when mirrord isn't loaded to protected binaries that weren't automatically patched.\\n\\nRuns `endswith` on the binary path (so `bash` would apply to any binary ending with `bash` while `/usr/bin/bash` would apply only for that binary).\\n\\n```json { \\\"sip_binaries\\\": \\\"bash;python\\\" } ```\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"skip_build_tools\": {\n      \"title\": \"skip_build_tools {#root-skip_build_tools}\",\n      \"description\": \"Allows mirrord to skip build tools. Useful when running command lines that build and run the application in a single command.\\n\\nDefaults to `true`.\\n\\nBuild-Tools: `[\\\"as\\\", \\\"cc\\\", \\\"ld\\\", \\\"go\\\", \\\"air\\\", \\\"asm\\\", \\\"cc1\\\", \\\"cgo\\\", \\\"dlv\\\", \\\"gcc\\\", \\\"git\\\", \\\"link\\\", \\\"math\\\", \\\"cargo\\\", \\\"hpack\\\", \\\"rustc\\\", \\\"compile\\\", \\\"collect2\\\", \\\"cargo-watch\\\", \\\"debugserver\\\"]`\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"skip_processes\": {\n      \"title\": \"skip_processes {#root-skip_processes}\",\n      \"description\": \"Allows mirrord to skip unwanted processes.\\n\\nUseful when process A spawns process B, and the user wants mirrord to operate only on process B. Accepts a single value, or multiple values separated by `;`.\\n\\n```json { \\\"skip_processes\\\": \\\"bash;node\\\" } ```\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"target\": {\n      \"title\": \"target {#root-target}\",\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/TargetFileConfig\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"telemetry\": {\n      \"title\": \"telemetry {#root-telemetry}\",\n      \"description\": \"Controls whether or not mirrord sends telemetry data to MetalBear cloud. Telemetry sent doesn't contain personal identifiers or any data that should be considered sensitive. It is used to improve the product. [For more information](https://github.com/metalbear-co/mirrord/blob/main/TELEMETRY.md)\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    },\n    \"use_proxy\": {\n      \"title\": \"use_proxy {#root-use_proxy}\",\n      \"description\": \"When disabled, mirrord will remove `HTTP[S]_PROXY` env variables before doing any network requests. This is useful when the system sets a proxy but you don't want mirrord to use it. This also applies to the mirrord process (as it just removes the env). If the remote pod sets this env, the mirrord process will still use it.\",\n      \"type\": [\n        \"boolean\",\n        \"null\"\n      ]\n    }\n  },\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"AdvancedFsUserConfig\": {\n      \"description\": \"Allows the user to specify the default behavior for file operations:\\n\\n1. `\\\"read\\\"` or `true` - Read from the remote file system (default) 2. `\\\"write\\\"` - Read/Write from the remote file system. 3. `\\\"local\\\"` or `false` - Read from the local file system. 4. `\\\"localwithoverrides\\\"` - perform fs operation locally, unless the path matches a pre-defined or user-specified exception.\\n\\n> Note: by default, some paths are read locally or remotely, regardless of the selected FS mode. > This is described in further detail below.\\n\\nBesides the default behavior, the user can specify behavior for specific regex patterns. Case insensitive.\\n\\n1. `\\\"read_write\\\"` - List of patterns that should be read/write remotely. 2. `\\\"read_only\\\"` - List of patterns that should be read only remotely. 3. `\\\"local\\\"` - List of patterns that should be read locally. 4. `\\\"not_found\\\"` - List of patters that should never be read nor written. These files should be treated as non-existent. 4. `\\\"mapping\\\"` - Map of patterns and their corresponding replacers. The replacement happens before any specific behavior as defined above or mode (uses [`Regex::replace`](https://docs.rs/regex/latest/regex/struct.Regex.html#method.replace))\\n\\nThe logic for choosing the behavior is as follows:\\n\\n1. Check agains \\\"mapping\\\" if path needs to be replaced, if matched then continue to next step with new path after replacements otherwise continue as usual. 2. Check if one of the patterns match the file path, do the corresponding action. There's no specified order if two lists match the same path, we will use the first one (and we do not guarantee what is first).\\n\\n**Warning**: Specifying the same path in two lists is unsupported and can lead to undefined behaviour.\\n\\n3. There are pre-defined exceptions to the set FS mode. 1. Paths that match [the patterns defined here](https://github.com/metalbear-co/mirrord/tree/latest/mirrord/layer/src/file/filter/read_local_by_default.rs) are read locally by default. 2. Paths that match [the patterns defined here](https://github.com/metalbear-co/mirrord/tree/latest/mirrord/layer/src/file/filter/read_remote_by_default.rs) are read remotely by default when the mode is `localwithoverrides`. 3. Paths that match [the patterns defined here](https://github.com/metalbear-co/mirrord/tree/latest/mirrord/layer/src/file/filter/not_found_by_default.rs) under the running user's home directory will not be found by the application when the mode is not `local`.\\n\\nIn order to override that default setting for a path, or a pattern, include it the appropriate pattern set from above. E.g. in order to read files under `/etc/` remotely even though it is covered by [the set of patterns that are read locally by default](https://github.com/metalbear-co/mirrord/tree/latest/mirrord/layer/src/file/filter/read_local_by_default.rs), add `\\\"^/etc/.\\\"` to the `read_only` set.\\n\\n4. If none of the above match, use the default behavior (mode).\\n\\nFor more information, check the file operations [technical reference](https://mirrord.dev/docs/reference/fileops/).\\n\\n```json { \\\"feature\\\": { \\\"fs\\\": { \\\"mode\\\": \\\"write\\\", \\\"read_write\\\": \\\".+\\\\\\\\.json\\\" , \\\"read_only\\\": [ \\\".+\\\\\\\\.yaml\\\", \\\".+important-file\\\\\\\\.txt\\\" ], \\\"local\\\": [ \\\".+\\\\\\\\.js\\\", \\\".+\\\\\\\\.mjs\\\" ], \\\"not_found\\\": [ \\\"\\\\\\\\.config/gcloud\\\" ] } } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"local\": {\n          \"title\": \"feature.fs.local {#feature-fs-local}\",\n          \"description\": \"Specify file path patterns that if matched will be opened locally.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"mapping\": {\n          \"title\": \"feature.fs.mapping {#feature-fs-mapping}\",\n          \"description\": \"Specify map of patterns that if matched will replace the path according to specification.\\n\\n*Capture groups are allowed.*\\n\\nExample: ```json { \\\"^/home/(?<user>\\\\\\\\S+)/dev/tomcat\\\": \\\"/etc/tomcat\\\" \\\"^/home/(?<user>\\\\\\\\S+)/dev/config/(?<app>\\\\\\\\S+)\\\": \\\"/mnt/configs/${user}-$app\\\" } ``` Will do the next replacements for any io operaton\\n\\n`/home/johndoe/dev/tomcat/context.xml` => `/etc/tomcat/context.xml` `/home/johndoe/dev/config/api/app.conf` => `/mnt/configs/johndoe-api/app.conf`\\n\\n- Relative paths: this feature (currently) does not apply mappings to relative paths, e.g. `../dev`.\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"mode\": {\n          \"title\": \"feature.fs.mode {#feature-fs-mode}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/FsModeConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"not_found\": {\n          \"title\": \"feature.fs.not_found {#feature-fs-not_found}\",\n          \"description\": \"Specify file path patterns that if matched will be treated as non-existent.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"read_only\": {\n          \"title\": \"feature.fs.read_only {#feature-fs-read_only}\",\n          \"description\": \"Specify file path patterns that if matched will be read from the remote. if file matching the pattern is opened for writing or read/write it will be opened locally.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"read_write\": {\n          \"title\": \"feature.fs.read_write {#feature-fs-read_write}\",\n          \"description\": \"Specify file path patterns that if matched will be read and written to the remote.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"AgentFileConfig\": {\n      \"description\": \"Configuration for the mirrord-agent pod that is spawned in the Kubernetes cluster.\\n\\nWe provide sane defaults for this option, so you don't have to set up anything here.\\n\\n```json { \\\"agent\\\": { \\\"log_level\\\": \\\"info\\\", \\\"json_log\\\": false, \\\"namespace\\\": \\\"default\\\", \\\"image\\\": \\\"ghcr.io/metalbear-co/mirrord:latest\\\", \\\"image_pull_policy\\\": \\\"IfNotPresent\\\", \\\"image_pull_secrets\\\": [ { \\\"secret-key\\\": \\\"secret\\\" } ], \\\"ttl\\\": 30, \\\"ephemeral\\\": false, \\\"communication_timeout\\\": 30, \\\"startup_timeout\\\": 360, \\\"network_interface\\\": \\\"eth0\\\", \\\"flush_connections\\\": false } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"annotations\": {\n          \"title\": \"agent.annotations {#agent-annotations}\",\n          \"description\": \"Allows setting up custom annotations for the agent Job and Pod.\\n\\n```json { \\\"annotations\\\": { \\\"cats.io/inject\\\": \\\"enabled\\\" } } ```\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"check_out_of_pods\": {\n          \"title\": \"agent.check_out_of_pods {#agent-check_out_of_pods}\",\n          \"description\": \"Determine if to check whether there is room for agent job in target node. (Not applicable when using ephemeral containers feature)\\n\\nCan be disabled if the check takes too long and you are sure there is enough resources on each node\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"communication_timeout\": {\n          \"title\": \"agent.communication_timeout {#agent-communication_timeout}\",\n          \"description\": \"Controls how long the agent lives when there are no connections.\\n\\nEach connection has its own heartbeat mechanism, so even if the local application has no messages, the agent stays alive until there are no more heartbeat messages.\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint16\",\n          \"minimum\": 0.0\n        },\n        \"disabled_capabilities\": {\n          \"title\": \"agent.disabled_capabilities {#agent-disabled_capabilities}\",\n          \"description\": \"Disables specified Linux capabilities for the agent container. If nothing is disabled here, agent uses `NET_ADMIN`, `NET_RAW`, `SYS_PTRACE` and `SYS_ADMIN`.\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"$ref\": \"#/definitions/LinuxCapability\"\n          }\n        },\n        \"dns\": {\n          \"title\": \"agent.dns {#agent-dns}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/FileAgentDnsConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"ephemeral\": {\n          \"title\": \"agent.ephemeral {#agent-ephemeral}\",\n          \"description\": \"Runs the agent as an [ephemeral container](https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/)\\n\\nDefaults to `false`.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"flush_connections\": {\n          \"title\": \"agent.flush_connections {#agent-flush_connections}\",\n          \"description\": \"Flushes existing connections when starting to steal, might fix issues where connections aren't stolen (due to being already established)\\n\\nDefaults to `true`.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"image\": {\n          \"title\": \"agent.image {#agent-image}\",\n          \"description\": \"Name of the agent's docker image.\\n\\nUseful when a custom build of mirrord-agent is required, or when using an internal registry.\\n\\nDefaults to the latest stable image `\\\"ghcr.io/metalbear-co/mirrord:latest\\\"`.\\n\\n```json { \\\"image\\\": \\\"internal.repo/images/mirrord:latest\\\" } ```\\n\\nComplete setup:\\n\\n```json { \\\"image\\\": { \\\"registry\\\": \\\"internal.repo/images/mirrord\\\", \\\"tag\\\": \\\"latest\\\" } } ```\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/AgentImageFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"image_pull_policy\": {\n          \"title\": \"agent.image_pull_policy {#agent-image_pull_policy}\",\n          \"description\": \"Controls when a new agent image is downloaded.\\n\\nSupports `\\\"IfNotPresent\\\"`, `\\\"Always\\\"`, `\\\"Never\\\"`, or any valid kubernetes [image pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)\\n\\nDefaults to `\\\"IfNotPresent\\\"`\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"image_pull_secrets\": {\n          \"title\": \"agent.image_pull_secrets {#agent-image_pull_secrets}\",\n          \"description\": \"List of secrets the agent pod has access to.\\n\\nTakes an array of entries with the format `{ name: <secret-name> }`.\\n\\nRead more [here](https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod).\\n\\n```json { \\\"agent\\\": { \\\"image_pull_secrets\\\": [ { \\\"name\\\": \\\"secret-key-1\\\" }, { \\\"name\\\": \\\"secret-key-2\\\" } ] } } ```\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"$ref\": \"#/definitions/AgentPullSecret\"\n          }\n        },\n        \"json_log\": {\n          \"title\": \"agent.json_log {#agent-json_log}\",\n          \"description\": \"Controls whether the agent produces logs in a human-friendly format, or json.\\n\\n```json { \\\"agent\\\": { \\\"json_log\\\": true } } ```\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"labels\": {\n          \"title\": \"agent.labels {#agent-labels}\",\n          \"description\": \"Allows setting up custom labels for the agent Job and Pod.\\n\\n```json { \\\"labels\\\": { \\\"user\\\": \\\"meow\\\", \\\"state\\\": \\\"asleep\\\" } } ```\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"log_level\": {\n          \"title\": \"agent.log_level {#agent-log_level}\",\n          \"description\": \"Log level for the agent.\\n\\nSupports `\\\"trace\\\"`, `\\\"debug\\\"`, `\\\"info\\\"`, `\\\"warn\\\"`, `\\\"error\\\"`, or any string that would work with `RUST_LOG`.\\n\\n```json { \\\"agent\\\": { \\\"log_level\\\": \\\"mirrord=debug,warn\\\" } } ```\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"namespace\": {\n          \"title\": \"agent.namespace {#agent-namespace}\",\n          \"description\": \"Namespace where the agent shall live. Note: Doesn't work with ephemeral containers. Defaults to the current kubernetes namespace.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"network_interface\": {\n          \"title\": \"agent.network_interface {#agent-network_interface}\",\n          \"description\": \"Which network interface to use for mirroring.\\n\\nThe default behavior is try to access the internet and use that interface. If that fails it uses `eth0`.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"nftables\": {\n          \"title\": \"agent.nftables {#agent-nftables}\",\n          \"description\": \"Use iptables-nft instead of iptables-legacy. Defaults to `false`.\\n\\nNeeded if your mesh uses nftables instead of iptables-legacy,\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"node_selector\": {\n          \"title\": \"agent.node_selector {#agent-node_selector}\",\n          \"description\": \"Allows setting up custom node selector for the agent Pod. Applies only to targetless runs, as targeted agent always runs on the same node as its target container.\\n\\n```json { \\\"node_selector\\\": { \\\"kubernetes.io/hostname\\\": \\\"node1\\\" } } ```\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"privileged\": {\n          \"title\": \"agent.privileged {#agent-privileged}\",\n          \"description\": \"Run the mirror agent as privileged container. Defaults to `false`.\\n\\nMight be needed in strict environments such as Bottlerocket.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"resources\": {\n          \"title\": \"agent.resources {#agent-resources}\",\n          \"description\": \"Set pod resource reqirements. (not with ephemeral agents) Default is ```json { \\\"requests\\\": { \\\"cpu\\\": \\\"1m\\\", \\\"memory\\\": \\\"1Mi\\\" }, \\\"limits\\\": { \\\"cpu\\\": \\\"100m\\\", \\\"memory\\\": \\\"100Mi\\\" } } ```\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/io.k8s.api.core.v1.ResourceRequirements\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"service_account\": {\n          \"title\": \"agent.service_account {#agent-service_account}\",\n          \"description\": \"Allows setting up custom Service Account for the agent Job and Pod.\\n\\n```json { \\\"service_account\\\": \\\"my-service-account\\\" } ```\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"startup_timeout\": {\n          \"title\": \"agent.startup_timeout {#agent-startup_timeout}\",\n          \"description\": \"Controls how long to wait for the agent to finish initialization.\\n\\nIf initialization takes longer than this value, mirrord exits.\\n\\nDefaults to `60`.\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"tolerations\": {\n          \"title\": \"agent.tolerations {#agent-tolerations}\",\n          \"description\": \"Set pod tolerations. (not with ephemeral agents) Default is ```json [ { \\\"operator\\\": \\\"Exists\\\" } ] ```\\n\\nSet to an empty array to have no tolerations at all\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"$ref\": \"#/definitions/io.k8s.api.core.v1.Toleration\"\n          }\n        },\n        \"ttl\": {\n          \"title\": \"agent.ttl {#agent-ttl}\",\n          \"description\": \"Controls how long the agent pod persists for after the agent exits (in seconds).\\n\\nCan be useful for collecting logs.\\n\\nDefaults to `1`.\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint16\",\n          \"minimum\": 0.0\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"AgentImageFileConfig\": {\n      \"description\": \"<!--${internal}--> Allows us to support the dual configuration for the agent image.\\n\\nWhatever values missing are replaced with our defaults.\",\n      \"anyOf\": [\n        {\n          \"description\": \"The shortened version of: `image: \\\"repo/mirrord:latest\\\"`.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        {\n          \"description\": \"Expanded version: `image: { registry: \\\"repo/mirrord\\\", tag: \\\"latest\\\" }`.\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"registry\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ]\n            },\n            \"tag\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ]\n            }\n          },\n          \"additionalProperties\": false\n        }\n      ]\n    },\n    \"AgentPullSecret\": {\n      \"description\": \"<!--${internal}--> Specifies a secret reference for the agent pod.\",\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"description\": \"Name of the secret.\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"ConcurrentSteal\": {\n      \"description\": \"(Operator Only): Allows overriding port locks\\n\\nCan be set to either `\\\"continue\\\"` or `\\\"override\\\"`.\\n\\n- `\\\"continue\\\"`: Continue with normal execution - `\\\"override\\\"`: If port lock detected then override it with new lock and force close the original locking connection.\",\n      \"oneOf\": [\n        {\n          \"description\": \"<!--${internal}--> ### override\\n\\nOverride any port lock and force close the original lock connection\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"override\"\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> ### continue\\n\\nContinue with normal execution\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"continue\"\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> ### abort\\n\\nAbort Execution when trying to steal traffic from a target whose traffic is already being stolen.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"abort\"\n          ]\n        }\n      ]\n    },\n    \"ContainerFileConfig\": {\n      \"description\": \"Unstable: `mirrord container` command specific config.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"cli_extra_args\": {\n          \"title\": \"container.cli_extra_args {#container-cli_extra_args}\",\n          \"description\": \"Any extra args to use when creating the sidecar mirrord-cli container.\\n\\nThis is useful when you want to use portforwarding, passing `-p local:container` won't work for main command but adding them here will work ```json { \\\"container\\\": { \\\"cli_extra_args\\\": [\\\"-p\\\", \\\"local:container\\\"] } } ```\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"cli_image\": {\n          \"title\": \"container.cli_image {#container-cli_image}\",\n          \"description\": \"Tag of the `mirrord-cli` image you want to use.\\n\\nDefaults to `\\\"ghcr.io/metalbear-co/mirrord-cli:<cli version>\\\"`.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"cli_image_lib_path\": {\n          \"title\": \"container.cli_image_lib_path {#container-cli_image}\",\n          \"description\": \"Path of the mirrord-layer lib inside the specified mirrord-cli image.\\n\\nDefaults to `\\\"/opt/mirrord/lib/libmirrord_layer.so\\\"`.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"cli_prevent_cleanup\": {\n          \"title\": \"container.cli_prevent_cleanup {#container-cli_extra_args}\",\n          \"description\": \"Don't add `--rm` to sidecar command to prevent cleanup.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"CopyTargetFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"enabled\": {\n              \"type\": [\n                \"boolean\",\n                \"null\"\n              ]\n            },\n            \"scale_down\": {\n              \"type\": [\n                \"boolean\",\n                \"null\"\n              ]\n            }\n          },\n          \"additionalProperties\": false\n        }\n      ]\n    },\n    \"CronJobTarget\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"cron_job\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"cron_job\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DeploymentTarget\": {\n      \"description\": \"<!--${internal}--> Mirror the deployment specified by [`DeploymentTarget::deployment`].\",\n      \"type\": \"object\",\n      \"required\": [\n        \"deployment\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"deployment\": {\n          \"description\": \"<!--${internal}--> Deployment to mirror.\",\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DnsFileConfig\": {\n      \"description\": \"Resolve DNS via the remote pod.\\n\\nDefaults to `true`.\\n\\nMind that: - DNS resolving can be done in multiple ways. Some frameworks use `getaddrinfo`/`gethostbyname` functions, while others communicate directly with the DNS server at port `53` and perform a sort of manual resolution. Just enabling the `dns` feature in mirrord might not be enough. If you see an address resolution error, try enabling the [`fs`](#feature-fs) feature, and setting `read_only: [\\\"/etc/resolv.conf\\\"]`. - DNS filter currently works only with frameworks that use `getaddrinfo`/`gethostbyname` functions.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"enabled\": {\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"filter\": {\n          \"title\": \"feature.network.dns.filter {#feature-network-dns-filter}\",\n          \"description\": \"Unstable: the precise syntax of this config is subject to change.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/DnsFilterConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DnsFilterConfig\": {\n      \"description\": \"List of addresses/ports/subnets that should be resolved through either the remote pod or local app, depending how you set this up with either `remote` or `local`.\\n\\nYou may use this option to specify when DNS resolution is done from the remote pod (which is the default behavior when you enable remote DNS), or from the local app (default when you have remote DNS disabled).\\n\\nTakes a list of values, such as:\\n\\n- Only queries for hostname `my-service-in-cluster` will go through the remote pod.\\n\\n```json { \\\"remote\\\": [\\\"my-service-in-cluster\\\"] } ```\\n\\n- Only queries for addresses in subnet `1.1.1.0/24` with service port `1337`` will go through the remote pod.\\n\\n```json { \\\"remote\\\": [\\\"1.1.1.0/24:1337\\\"] } ```\\n\\n- Only queries for hostname `google.com` with service port `1337` or `7331` will go through the remote pod.\\n\\n```json { \\\"remote\\\": [\\\"google.com:1337\\\", \\\"google.com:7331\\\"] } ```\\n\\n- Only queries for `localhost` with service port `1337` will go through the local app.\\n\\n```json { \\\"local\\\": [\\\"localhost:1337\\\"] } ```\\n\\n- Only queries with service port `1337` or `7331` will go through the local app.\\n\\n```json { \\\"local\\\": [\\\":1337\\\", \\\":7331\\\"] } ```\\n\\nValid values follow this pattern: `[name|address|subnet/mask][:port]`.\",\n      \"oneOf\": [\n        {\n          \"description\": \"DNS queries matching what is specified here will go through the remote pod, everything else will go through local.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"remote\"\n          ],\n          \"properties\": {\n            \"remote\": {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            }\n          },\n          \"additionalProperties\": false\n        },\n        {\n          \"description\": \"DNS queries matching what is specified here will go through the local app, everything else will go through the remote pod.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"local\"\n          ],\n          \"properties\": {\n            \"local\": {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            }\n          },\n          \"additionalProperties\": false\n        }\n      ]\n    },\n    \"EnvFileConfig\": {\n      \"description\": \"Allows the user to set or override the local process' environment variables with the ones from the remote pod.\\n\\nCan be set to one of the options:\\n\\n1. `false` - Disables the feature, won't have remote environment variables. 2. `true` - Enables the feature, will obtain remote environment variables. 3. object - see below (means `true` + additional configuration).\\n\\nWhich environment variables to load from the remote pod are controlled by setting either [`include`](#feature-env-include) or [`exclude`](#feature-env-exclude).\\n\\nSee the environment variables [reference](https://mirrord.dev/docs/reference/env/) for more details.\\n\\n```json { \\\"feature\\\": { \\\"env\\\": { \\\"include\\\": \\\"DATABASE_USER;PUBLIC_ENV;MY_APP_*\\\", \\\"exclude\\\": \\\"DATABASE_PASSWORD;SECRET_ENV\\\", \\\"override\\\": { \\\"DATABASE_CONNECTION\\\": \\\"db://localhost:7777/my-db\\\", \\\"LOCAL_BEAR\\\": \\\"panda\\\" }, \\\"mapping\\\": { \\\".+_TIMEOUT\\\": \\\"1000\\\" } } } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"env_file\": {\n          \"title\": \"feature.env_file {#feature-env-file}\",\n          \"description\": \"Allows for passing environment variables from an env file.\\n\\nThese variables will override environment fetched from the remote target.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"exclude\": {\n          \"title\": \"feature.env.exclude {#feature-env-exclude}\",\n          \"description\": \"Include the remote environment variables in the local process that are **NOT** specified by this option. Variable names can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character.\\n\\nSome of the variables that are excluded by default: `PATH`, `HOME`, `HOMEPATH`, `CLASSPATH`, `JAVA_EXE`, `JAVA_HOME`, `PYTHONPATH`.\\n\\nCan be passed as a list or as a semicolon-delimited string (e.g. `\\\"VAR;OTHER_VAR\\\"`).\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"include\": {\n          \"title\": \"feature.env.include {#feature-env-include}\",\n          \"description\": \"Include only these remote environment variables in the local process. Variable names can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character.\\n\\nCan be passed as a list or as a semicolon-delimited string (e.g. `\\\"VAR;OTHER_VAR\\\"`).\\n\\nSome environment variables are excluded by default (`PATH` for example), including these requires specifying them with `include`\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"load_from_process\": {\n          \"title\": \"feature.env.load_from_process {#feature-env-load_from_process}\",\n          \"description\": \"Allows for changing the way mirrord loads remote environment variables. If set, the variables are fetched after the user application is started.\\n\\nThis setting is meant to resolve issues when using mirrord via the IntelliJ plugin on WSL and the remote environment contains a lot of variables.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"mapping\": {\n          \"title\": \"feature.env.mapping {#feature-env-mapping}\",\n          \"description\": \"Specify map of patterns that if matched will replace the value according to specification.\\n\\n*Capture groups are allowed.*\\n\\nExample: ```json { \\\".+_TIMEOUT\\\": \\\"10000\\\" \\\"LOG_.+_VERBOSITY\\\": \\\"debug\\\" \\\"(\\\\w+)_(\\\\d+)\\\": \\\"magic-value\\\" } ```\\n\\nWill do the next replacements for environment variables that match:\\n\\n`CONNECTION_TIMEOUT: 500` => `CONNECTION_TIMEOUT: 10000` `LOG_FILE_VERBOSITY: info` => `LOG_FILE_VERBOSITY: debug` `DATA_1234: common-value` => `DATA_1234: magic-value`\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"override\": {\n          \"title\": \"feature.env.override {#feature-env-override}\",\n          \"description\": \"Allows setting or overriding environment variables (locally) with a custom value.\\n\\nFor example, if the remote pod has an environment variable `REGION=1`, but this is an undesirable value, it's possible to use `override` to set `REGION=2` (locally) instead.\\n\\nEnvironment specified here will also override variables passed via the env file.\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unset\": {\n          \"title\": \"feature.env.unset {#feature-env-unset}\",\n          \"description\": \"Allows unsetting environment variables in the executed process.\\n\\nThis is useful for when some system/user-defined environment like `AWS_PROFILE` make the application behave as if it's running locally, instead of using the remote settings. The unsetting happens from extension (if possible)/CLI and when process initializes. In some cases, such as Go the env might not be able to be modified from the process itself. This is case insensitive, meaning if you'd put `AWS_PROFILE` it'd unset both `AWS_PROFILE` and `Aws_Profile` and other variations.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"ExperimentalFileConfig\": {\n      \"description\": \"mirrord Experimental features. This shouldn't be used unless someone from MetalBear/mirrord tells you to.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"disable_reuseaddr\": {\n          \"title\": \"_experimental_ disable_reuseaddr {#experimental-disable_reuseaddr}\",\n          \"description\": \"Disables the `SO_REUSEADDR` socket option on sockets that mirrord steals/mirrors. On macOS the application can use the same address many times but then we don't steal it correctly. This probably should be on by default but we want to gradually roll it out. <https://github.com/metalbear-co/mirrord/issues/2819> This option applies only on macOS.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"enable_exec_hooks_linux\": {\n          \"title\": \"_experimental_ enable_exec_hooks_linux {#experimental-enable_exec_hooks_linux}\",\n          \"description\": \"Enables exec hooks on Linux. Enable Linux hooks can fix issues when the application shares sockets with child commands (e.g Python web servers with reload), but the feature is not stable and may cause other issues.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"hide_ipv6_interfaces\": {\n          \"title\": \"_experimental_ hide_ipv6_interfaces {#experimental-hide_ipv6_interfaces}\",\n          \"description\": \"Enables `getifaddrs` hook that removes IPv6 interfaces from the list returned by libc.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"readlink\": {\n          \"title\": \"_experimental_ readlink {#experimental-readlink}\",\n          \"description\": \"DEPRECATED, WILL BE REMOVED\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"readonly_file_buffer\": {\n          \"title\": \"_experimental_ readonly_file_buffer {#experimental-readonly_file_buffer}\",\n          \"description\": \"Sets buffer size for readonly remote files (in bytes, for example 4096). If set, such files will be read in chunks and buffered locally. This improves performace when the user application reads data in small portions.\\n\\nSetting to 0 disables file buffering.\\n\\n<https://github.com/metalbear-co/mirrord/issues/2069>\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"tcp_ping4_mock\": {\n          \"title\": \"_experimental_ tcp_ping4_mock {#experimental-tcp_ping4_mock}\",\n          \"description\": \"<https://github.com/metalbear-co/mirrord/issues/2421#issuecomment-2093200904>\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"trust_any_certificate\": {\n          \"title\": \"_experimental_ trust_any_certificate {#experimental-trust_any_certificate}\",\n          \"description\": \"Enables trusting any certificate on macOS, useful for <https://github.com/golang/go/issues/51991#issuecomment-2059588252>\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"use_dev_null\": {\n          \"title\": \"_experimental_ use_dev_null {#experimental-use_dev_null}\",\n          \"description\": \"Uses /dev/null for creating local fake files (should be better than using /tmp)\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"ExternalProxyFileConfig\": {\n      \"description\": \"Configuration for the external proxy mirrord spawns when using the `mirrord container` command. This proxy is used to allow the internal proxy running in sidecar to connect to the mirrord agent.\\n\\nIf you get `ConnectionRefused` errors, increasing the timeouts a bit might solve the issue.\\n\\n```json { \\\"external_proxy\\\": { \\\"start_idle_timeout\\\": 30, \\\"idle_timeout\\\": 5 } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"idle_timeout\": {\n          \"title\": \"external_proxy.idle_timeout {#external_proxy-idle_timeout}\",\n          \"description\": \"How much time to wait while we don't have any active connections before exiting.\\n\\nCommon cases would be running a chain of processes that skip using the layer and don't connect to the proxy.\\n\\n```json { \\\"external_proxy\\\": { \\\"idle_timeout\\\": 30 } } ```\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"log_destination\": {\n          \"title\": \"external_proxy.log_destination {#external_proxy-log_destination}\",\n          \"description\": \"Set the log file destination for the external proxy.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"log_level\": {\n          \"title\": \"external_proxy.log_level {#external_proxy-log_level}\",\n          \"description\": \"Sets the log level for the external proxy.\\n\\nFollows the `RUST_LOG` convention (i.e `mirrord=trace`), and will only be used if `external_proxy.log_destination` is set\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"start_idle_timeout\": {\n          \"title\": \"external_proxy.start_idle_timeout {#external_proxy-start_idle_timeout}\",\n          \"description\": \"How much time to wait for the first connection to the external proxy in seconds.\\n\\nCommon cases would be running with dlv or any other debugger, which sets a breakpoint on process execution, delaying the layer startup and connection to the external proxy.\\n\\n```json { \\\"external_proxy\\\": { \\\"start_idle_timeout\\\": 60 } } ```\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"tls_certificate\": {\n          \"description\": \"<!--${internal}-->\\n\\nCertificate path to be used for wrapping external proxy tcp listener with a tcp acceptor (self-signed one will be generated automaticaly if not specified)\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"tls_enable\": {\n          \"description\": \"<!--${internal}-->\\n\\nWhether to use TLS or a plain TCP connection.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"tls_key\": {\n          \"description\": \"<!--${internal}-->\\n\\nPrivate Key path to be used for wrapping external proxy tcp listener with a tcp acceptor (self-signed one will be generated automaticaly if not specified)\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"FeatureFileConfig\": {\n      \"description\": \"Controls mirrord features.\\n\\nSee the [technical reference, Technical Reference](https://mirrord.dev/docs/reference/) to learn more about what each feature does.\\n\\nThe [`env`](#feature-env), [`fs`](#feature-fs) and [`network`](#feature-network) options have support for a shortened version, that you can see [here](#root-shortened).\\n\\n```json { \\\"feature\\\": { \\\"env\\\": { \\\"include\\\": \\\"DATABASE_USER;PUBLIC_ENV\\\", \\\"exclude\\\": \\\"DATABASE_PASSWORD;SECRET_ENV\\\", \\\"override\\\": { \\\"DATABASE_CONNECTION\\\": \\\"db://localhost:7777/my-db\\\", \\\"LOCAL_BEAR\\\": \\\"panda\\\" } }, \\\"fs\\\": { \\\"mode\\\": \\\"write\\\", \\\"read_write\\\": \\\".+\\\\\\\\.json\\\" , \\\"read_only\\\": [ \\\".+\\\\\\\\.yaml\\\", \\\".+important-file\\\\\\\\.txt\\\" ], \\\"local\\\": [ \\\".+\\\\\\\\.js\\\", \\\".+\\\\\\\\.mjs\\\" ] }, \\\"network\\\": { \\\"incoming\\\": { \\\"mode\\\": \\\"steal\\\", \\\"http_filter\\\": { \\\"header_filter\\\": \\\"host: api\\\\\\\\..+\\\" }, \\\"port_mapping\\\": [[ 7777, 8888 ]], \\\"ignore_localhost\\\": false, \\\"ignore_ports\\\": [9999, 10000] }, \\\"outgoing\\\": { \\\"tcp\\\": true, \\\"udp\\\": true, \\\"filter\\\": { \\\"local\\\": [\\\"tcp://1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\", \\\":53\\\"] }, \\\"ignore_localhost\\\": false, \\\"unix_streams\\\": \\\"bear.+\\\" }, \\\"dns\\\": false }, \\\"copy_target\\\": false, \\\"hostname\\\": true } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"copy_target\": {\n          \"title\": \"feature.copy_target {#feature-copy_target}\",\n          \"description\": \"Creates a new copy of the target. mirrord will use this copy instead of the original target (e.g. intercept network traffic). This feature requires a [mirrord operator](https://mirrord.dev/docs/overview/teams/?utm_source=copytarget).\\n\\nThis feature is not compatible with rollout targets and running without a target (`targetless` mode).\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/CopyTargetFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"env\": {\n          \"title\": \"feature.env {#feature-env}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_EnvFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"fs\": {\n          \"title\": \"feature.fs {#feature-fs}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_FsUserConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"hostname\": {\n          \"title\": \"feature.hostname {#feature-hostname}\",\n          \"description\": \"Should mirrord return the hostname of the target pod when calling `gethostname`\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"network\": {\n          \"title\": \"feature.network {#feature-network}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_NetworkFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"split_queues\": {\n          \"title\": \"feature.split_queues {#feature-split_queues}\",\n          \"description\": \"Define filters to split queues by, and make your local application consume only messages that match those filters. If you don't specify any filter for a queue that is however declared in the `MirrordWorkloadQueueRegistry` of the target you're using, a match-nothing filter will be used, and your local application will not receive any messages from that queue.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/SplitQueuesConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"FileAgentDnsConfig\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"attempts\": {\n          \"title\": \"agent.dns.attempts {#agent-dns-attempts}\",\n          \"description\": \"When agent resolves DNS, how many attempts before failing. If the value is too high, it might cause internal proxy to timeout and exit.\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint32\",\n          \"minimum\": 0.0\n        },\n        \"timeout\": {\n          \"title\": \"agent.dns.timeout {#agent-dns-timeout}\",\n          \"description\": \"When agent resolves DNS, how long to wait for a response before timeout By default this is set to 1 (in the agent). If the value is too high, it might cause internal proxy to timeout and exit.\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint32\",\n          \"minimum\": 0.0\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"FsModeConfig\": {\n      \"description\": \"Configuration for enabling read-only or read-write file operations.\\n\\nThese options are overriden by user specified overrides and mirrord default overrides.\\n\\nIf you set [`\\\"localwithoverrides\\\"`](#feature-fs-mode-localwithoverrides) then some files can be read/write remotely based on our default/user specified. Default option for general file configuration.\\n\\nThe accepted values are: `\\\"local\\\"`, `\\\"localwithoverrides`, `\\\"read\\\"`, or `\\\"write`.\",\n      \"oneOf\": [\n        {\n          \"title\": \"feature.fs.mode.local {#feature-fs-mode-local}\",\n          \"description\": \"mirrord won't do anything fs-related, all operations will be local.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"local\"\n          ]\n        },\n        {\n          \"title\": \"feature.fs.mode.localwithoverrides {#feature-fs-mode-localwithoverrides}\",\n          \"description\": \"mirrord will run overrides on some file operations, but most will be local.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"localwithoverrides\"\n          ]\n        },\n        {\n          \"title\": \"feature.fs.mode.read {#feature-fs-mode-read}\",\n          \"description\": \"mirrord will read files from the remote, but won't write to them.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"read\"\n          ]\n        },\n        {\n          \"title\": \"feature.fs.mode.write {#feature-fs-mode-write}\",\n          \"description\": \"mirrord will read/write from the remote.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"write\"\n          ]\n        }\n      ]\n    },\n    \"FsUserConfig\": {\n      \"title\": \"feature.fs {#fs}\",\n      \"description\": \"Changes file operations behavior based on user configuration.\\n\\nSee the file operations [reference](https://mirrord.dev/docs/reference/fileops/) for more details, and [fs advanced](#fs-advanced) for more information on how to fully setup mirrord file operations.\\n\\n### Minimal `fs` config {#fs-minimal}\\n\\n```json { \\\"feature\\\": { \\\"fs\\\": \\\"read\\\" } } ```\\n\\n### Advanced `fs` config {#fs-advanced}\\n\\n```json { \\\"feature\\\": { \\\"fs\\\": { \\\"mode\\\": \\\"write\\\", \\\"read_write\\\": \\\".+\\\\\\\\.json\\\" , \\\"read_only\\\": [ \\\".+\\\\\\\\.yaml\\\", \\\".+important-file\\\\\\\\.txt\\\" ], \\\"local\\\": [ \\\".+\\\\\\\\.js\\\", \\\".+\\\\\\\\.mjs\\\" ] } } } ```\",\n      \"anyOf\": [\n        {\n          \"description\": \"<!--${internal}--> Basic configuration that controls the env vars `MIRRORD_FILE_OPS` and `MIRRORD_FILE_RO_OPS` (default).\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/FsModeConfig\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Allows the user to specify both [`FsModeConfig`] (as above), and configuration for the overrides.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/AdvancedFsUserConfig\"\n            }\n          ]\n        }\n      ]\n    },\n    \"HttpFilterFileConfig\": {\n      \"description\": \"Filter configuration for the HTTP traffic stealer feature.\\n\\nAllows the user to set a filter (regex) for the HTTP headers, so that the stealer traffic feature only captures HTTP requests that match the specified filter, forwarding unmatched requests to their original destinations.\\n\\nOnly does something when [`feature.network.incoming.mode`](#feature-network-incoming-mode) is set as `\\\"steal\\\"`, ignored otherwise.\\n\\nFor example, to filter based on header: ```json { \\\"header_filter\\\": \\\"host: api\\\\\\\\..+\\\" } ``` Setting that filter will make mirrord only steal requests with the `host` header set to hosts that start with \\\"api\\\", followed by a dot, and then at least one more character.\\n\\nFor example, to filter based on path: ```json { \\\"path_filter\\\": \\\"^/api/\\\" } ``` Setting this filter will make mirrord only steal requests to URIs starting with \\\"/api/\\\".\\n\\nThis can be useful for filtering out Kubernetes liveness, readiness and startup probes. For example, for avoiding stealing any probe sent by kubernetes, you can set this filter: ```json { \\\"header_filter\\\": \\\"^User-Agent: (?!kube-probe)\\\" } ``` Setting this filter will make mirrord only steal requests that **do** have a user agent that **does not** begin with \\\"kube-probe\\\".\\n\\nSimilarly, you can exclude certain paths using a negative look-ahead: ```json { \\\"path_filter\\\": \\\"^(?!/health/)\\\" } ``` Setting this filter will make mirrord only steal requests to URIs that do not start with \\\"/health/\\\".\\n\\nWith `all_of` and `any_of`, you can use multiple HTTP filters at the same time.\\n\\nIf you want to steal HTTP requests that match **every** pattern specified, use `all_of`. For example, this filter steals only HTTP requests to endpoint `/api/my-endpoint` that contain header `x-debug-session` with value `121212`. ```json { \\\"all_of\\\": [ { \\\"header\\\": \\\"^x-debug-session: 121212$\\\" }, { \\\"path\\\": \\\"^/api/my-endpoint$\\\" } ] }\\n\\nIf you want to steal HTTP requests that match **any** of the patterns specified, use `any_of`. For example, this filter steals HTTP requests to endpoint `/api/my-endpoint` **and** HTTP requests that contain header `x-debug-session` with value `121212`. ```json { \\\"any_of\\\": [ { \\\"path\\\": \\\"^/api/my-endpoint$\\\"}, { \\\"header\\\": \\\"^x-debug-session: 121212$\\\" } ] }\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"all_of\": {\n          \"title\": \"feature.network.incoming.http_filter.all_of {#feature-network-incoming-http_filter-all_of}\",\n          \"description\": \"An array of HTTP filters.\\n\\nEach inner filter specifies either header or path regex. Requests must match all of the filters to be stolen.\\n\\nCannot be an empty list.\\n\\nExample: ```json { \\\"all_of\\\": [ { \\\"header\\\": \\\"x-user: my-user$\\\" }, { \\\"path\\\": \\\"^/api/v1/my-endpoint\\\" } ] } ```\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"$ref\": \"#/definitions/InnerFilter\"\n          }\n        },\n        \"any_of\": {\n          \"title\": \"feature.network.incoming.http_filter.any_of {#feature-network-incoming-http_filter-any_of}\",\n          \"description\": \"An array of HTTP filters.\\n\\nEach inner filter specifies either header or path regex. Requests must match at least one of the filters to be stolen.\\n\\nCannot be an empty list.\\n\\nExample: ```json { \\\"any_of\\\": [ { \\\"header\\\": \\\"^x-user: my-user$\\\" }, { \\\"path\\\": \\\"^/api/v1/my-endpoint\\\" } ] } ```\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"$ref\": \"#/definitions/InnerFilter\"\n          }\n        },\n        \"header_filter\": {\n          \"title\": \"feature.network.incoming.http_filter.header_filter {#feature-network-incoming-http-header-filter}\",\n          \"description\": \"Supports regexes validated by the [`fancy-regex`](https://docs.rs/fancy-regex/latest/fancy_regex/) crate.\\n\\nThe HTTP traffic feature converts the HTTP headers to `HeaderKey: HeaderValue`, case-insensitive.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"path_filter\": {\n          \"title\": \"feature.network.incoming.http_filter.path_filter {#feature-network-incoming-http-path-filter}\",\n          \"description\": \"Supports regexes validated by the [`fancy-regex`](https://docs.rs/fancy-regex/latest/fancy_regex/) crate.\\n\\nCase-insensitive. Tries to find match in the path (without query) and path+query. If any of the two matches, the request is stolen.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"ports\": {\n          \"title\": \"feature.network.incoming.http_filter.ports {#feature-network-incoming-http_filter-ports}\",\n          \"description\": \"Activate the HTTP traffic filter only for these ports.\\n\\nOther ports will *not* be stolen, unless listed in [`feature.network.incoming.ports`](#feature-network-incoming-ports).\\n\\nSet to [80, 8080] by default.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/PortList\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"IncomingAdvancedFileConfig\": {\n      \"title\": \"incoming (advanced setup)\",\n      \"description\": \"Advanced user configuration for network incoming traffic.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"http_filter\": {\n          \"title\": \"HTTP Filter\",\n          \"description\": \"Sets up the HTTP traffic filter (currently, only useful when `incoming: steal`).\\n\\nSee [`filter`](##filter) for details.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_HttpFilterFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"ignore_localhost\": {\n          \"title\": \"ignore_localhost\",\n          \"description\": \"Consider removing when adding <https://github.com/metalbear-co/mirrord/issues/702>\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"ignore_ports\": {\n          \"title\": \"ignore_ports\",\n          \"description\": \"Ports to ignore when mirroring/stealing traffic. Useful if you want specific ports to be used locally only.\\n\\nMutually exclusive with [`ports`](###ports).\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"uint16\",\n            \"minimum\": 0.0\n          }\n        },\n        \"listen_ports\": {\n          \"title\": \"listen_ports\",\n          \"description\": \"Mapping for local ports to actually used local ports. When application listens on a port while steal/mirror is active we fallback to random ports to avoid port conflicts. Using this configuration will always use the specified port. If this configuration doesn't exist, mirrord will try to listen on the original port and if it fails it will assign a random port\\n\\nThis is useful when you want to access ports exposed by your service locally For example, if you have a service that listens on port `80` and you want to access it, you probably can't listen on `80` without sudo, so you can use `[[80, 4480]]` then access it on `4480` while getting traffic from remote `80`. The value of `port_mapping` doesn't affect this.\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": [\n              {\n                \"type\": \"integer\",\n                \"format\": \"uint16\",\n                \"minimum\": 0.0\n              },\n              {\n                \"type\": \"integer\",\n                \"format\": \"uint16\",\n                \"minimum\": 0.0\n              }\n            ],\n            \"maxItems\": 2,\n            \"minItems\": 2\n          }\n        },\n        \"mode\": {\n          \"title\": \"mode\",\n          \"description\": \"Allows selecting between mirrorring or stealing traffic.\\n\\nSee [`mode`](##mode (incoming)) for details.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/IncomingMode\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"on_concurrent_steal\": {\n          \"title\": \"on_concurrent_steal\",\n          \"description\": \"(Operator Only): if value of override will force close any other connections on requested target\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ConcurrentSteal\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"port_mapping\": {\n          \"title\": \"port_mapping\",\n          \"description\": \"Mapping for local ports to remote ports.\\n\\nThis is useful when you want to mirror/steal a port to a different port on the remote machine. For example, your local process listens on port `9333` and the container listens on port `80`. You'd use `[[9333, 80]]`\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": [\n              {\n                \"type\": \"integer\",\n                \"format\": \"uint16\",\n                \"minimum\": 0.0\n              },\n              {\n                \"type\": \"integer\",\n                \"format\": \"uint16\",\n                \"minimum\": 0.0\n              }\n            ],\n            \"maxItems\": 2,\n            \"minItems\": 2\n          }\n        },\n        \"ports\": {\n          \"title\": \"ports\",\n          \"description\": \"List of ports to mirror/steal traffic from. Other ports will remain local.\\n\\nMutually exclusive with [`ignore_ports`](###ignore_ports).\",\n          \"type\": [\n            \"array\",\n            \"null\"\n          ],\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"uint16\",\n            \"minimum\": 0.0\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"IncomingFileConfig\": {\n      \"title\": \"incoming (network)\",\n      \"description\": \"Controls the incoming TCP traffic feature.\\n\\nSee the incoming [reference](https://mirrord.dev/docs/reference/traffic/#incoming) for more details.\\n\\nIncoming traffic supports 2 modes of operation:\\n\\n1. Mirror (**default**): Sniffs the TCP data from a port, and forwards a copy to the interested listeners;\\n\\n2. Steal: Captures the TCP data from a port, and forwards it to the local process, see [`steal`](##steal);\\n\\n### Minimal `incoming` config\\n\\n```json { \\\"feature\\\": { \\\"network\\\": { \\\"incoming\\\": \\\"steal\\\" } } } ```\\n\\n### Advanced `incoming` config\\n\\n```json { \\\"feature\\\": { \\\"network\\\": { \\\"incoming\\\": { \\\"mode\\\": \\\"steal\\\", \\\"http_filter\\\": { \\\"header_filter\\\": \\\"host: api\\\\\\\\..+\\\" }, \\\"port_mapping\\\": [[ 7777, 8888 ]], \\\"ignore_localhost\\\": false, \\\"ignore_ports\\\": [9999, 10000], \\\"listen_ports\\\": [[80, 8111]] } } } } ```\",\n      \"anyOf\": [\n        {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/IncomingMode\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        {\n          \"$ref\": \"#/definitions/IncomingAdvancedFileConfig\"\n        }\n      ]\n    },\n    \"IncomingMode\": {\n      \"description\": \"Allows selecting between mirrorring or stealing traffic.\\n\\nCan be set to either `\\\"mirror\\\"` (default), `\\\"steal\\\"` or `\\\"off\\\"`.\\n\\n- `\\\"mirror\\\"`: Sniffs on TCP port, and send a copy of the data to listeners. - `\\\"off\\\"`: Disables the incoming network feature. - `\\\"steal\\\"`: Supports 2 modes of operation:\\n\\n1. Port traffic stealing: Steals all TCP data from a port, which is selected whenever the user listens in a TCP socket (enabling the feature is enough to make this work, no additional configuration is needed);\\n\\n2. HTTP traffic stealing: Steals only HTTP traffic, mirrord tries to detect if the incoming data on a port is HTTP (in a best-effort kind of way, not guaranteed to be HTTP), and steals the traffic on the port if it is HTTP;\",\n      \"oneOf\": [\n        {\n          \"description\": \"<!--${internal}--> ### mirror\\n\\nSniffs on TCP port, and send a copy of the data to listeners.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"mirror\"\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> ### steal\\n\\nStealer supports 2 modes of operation:\\n\\n1. Port traffic stealing: Steals all TCP data from a port, which is selected whenever the user listens in a TCP socket (enabling the feature is enough to make this work, no additional configuration is needed);\\n\\n2. HTTP traffic stealing: Steals only HTTP traffic, mirrord tries to detect if the incoming data on a port is HTTP (in a best-effort kind of way, not guaranteed to be HTTP), and steals the traffic on the port if it is HTTP;\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"steal\"\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> ### Off\\n\\nDisables the incoming network feature.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"off\"\n          ]\n        }\n      ]\n    },\n    \"InnerFilter\": {\n      \"anyOf\": [\n        {\n          \"title\": \"feature.network.incoming.inner_filter.header_filter {#feature-network-incoming-inner-header-filter}\",\n          \"description\": \"Supports regexes validated by the [`fancy-regex`](https://docs.rs/fancy-regex/latest/fancy_regex/) crate.\\n\\nThe HTTP traffic feature converts the HTTP headers to `HeaderKey: HeaderValue`, case-insensitive.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"header\"\n          ],\n          \"properties\": {\n            \"header\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        {\n          \"title\": \"feature.network.incoming.inner_filter.path_filter {#feature-network-incoming-inner-path-filter}\",\n          \"description\": \"Supports regexes validated by the [`fancy-regex`](https://docs.rs/fancy-regex/latest/fancy_regex/) crate.\\n\\nCase-insensitive. Tries to find match in the path (without query) and path+query. If any of the two matches, the request is stolen.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"path\"\n          ],\n          \"properties\": {\n            \"path\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    },\n    \"InternalProxyFileConfig\": {\n      \"description\": \"Configuration for the internal proxy mirrord spawns for each local mirrord session that local layers use to connect to the remote agent\\n\\nThis is seldom used, but if you get `ConnectionRefused` errors, you might want to increase the timeouts a bit.\\n\\n```json { \\\"internal_proxy\\\": { \\\"start_idle_timeout\\\": 30, \\\"idle_timeout\\\": 5 } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"client_tls_certificate\": {\n          \"description\": \"<!--${internal}-->\\n\\nCertificate to use as tls client credentials for connection to `connect_tcp`. (self-signed one will be generated automaticaly if not specified)\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"client_tls_key\": {\n          \"description\": \"<!--${internal}-->\\n\\nPrivate Key to use as tls client credentials for connection to `connect_tcp`. (self-signed one will be generated automaticaly if not specified)\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"connect_tcp\": {\n          \"description\": \"<!--${internal}-->\\n\\nAddress of external proxy to be used in `mirrord container`\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"container_mode\": {\n          \"description\": \"<!--${internal}-->\\n\\nThis informs the intproxy that it's running inside a continer and should not detach io\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"idle_timeout\": {\n          \"title\": \"internal_proxy.idle_timeout {#internal_proxy-idle_timeout}\",\n          \"description\": \"How much time to wait while we don't have any active connections before exiting.\\n\\nCommon cases would be running a chain of processes that skip using the layer and don't connect to the proxy.\\n\\n```json { \\\"internal_proxy\\\": { \\\"idle_timeout\\\": 30 } } ```\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"log_destination\": {\n          \"title\": \"internal_proxy.log_destination {#internal_proxy-log_destination}\",\n          \"description\": \"Set the log file destination for the internal proxy.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"log_level\": {\n          \"title\": \"internal_proxy.log_level {#internal_proxy-log_level}\",\n          \"description\": \"Set the log level for the internal proxy. RUST_LOG convention (i.e `mirrord=trace`) will only be used if `log_destination` is set.\",\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"socket_timeout\": {\n          \"description\": \"<!--${internal}-->\\n\\nSometimes the cpu is too busy with other tasks and the internal proxy sockets end up timing out. It's set at a ridiculous high value to prevent this from happening when a user hits a breakpoint while debugging, and stays stopped for a while, which sometimes results in mirrord not working when they resume.\\n\\n```json { \\\"internal_proxy\\\": { \\\"socket_timeout\\\": 31536000 } } ```\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        },\n        \"start_idle_timeout\": {\n          \"title\": \"internal_proxy.start_idle_timeout {#internal_proxy-start_idle_timeout}\",\n          \"description\": \"How much time to wait for the first connection to the proxy in seconds.\\n\\nCommon cases would be running with dlv or any other debugger, which sets a breakpoint on process execution, delaying the layer startup and connection to proxy.\\n\\n```json { \\\"internal_proxy\\\": { \\\"start_idle_timeout\\\": 60 } } ```\",\n          \"type\": [\n            \"integer\",\n            \"null\"\n          ],\n          \"format\": \"uint64\",\n          \"minimum\": 0.0\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"JobTarget\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"job\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"job\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"LinuxCapability\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"SYS_ADMIN\",\n        \"SYS_PTRACE\",\n        \"NET_RAW\",\n        \"NET_ADMIN\"\n      ]\n    },\n    \"NetworkFileConfig\": {\n      \"description\": \"Controls mirrord network operations.\\n\\nSee the network traffic [reference](https://mirrord.dev/docs/reference/traffic/) for more details.\\n\\n```json { \\\"feature\\\": { \\\"network\\\": { \\\"incoming\\\": { \\\"mode\\\": \\\"steal\\\", \\\"http_filter\\\": { \\\"header_filter\\\": \\\"host: api\\\\\\\\..+\\\" }, \\\"port_mapping\\\": [[ 7777, 8888 ]], \\\"ignore_localhost\\\": false, \\\"ignore_ports\\\": [9999, 10000] }, \\\"outgoing\\\": { \\\"tcp\\\": true, \\\"udp\\\": true, \\\"filter\\\": { \\\"local\\\": [\\\"tcp://1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\", \\\":53\\\"] }, \\\"ignore_localhost\\\": false, \\\"unix_streams\\\": \\\"bear.+\\\" }, \\\"dns\\\": { \\\"enabled\\\": true, \\\"filter\\\": { \\\"local\\\": [\\\"1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\"] } } } } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"dns\": {\n          \"title\": \"feature.network.dns {#feature-network-dns}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_DnsFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"incoming\": {\n          \"title\": \"feature.network.incoming {#feature-network-incoming}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_IncomingFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"ipv6\": {\n          \"title\": \"feature.network.ipv6 {#feature-network-dns}\",\n          \"description\": \"Enable ipv6 support. Turn on if your application listens to incoming traffic over IPv6.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"outgoing\": {\n          \"title\": \"feature.network.outgoing {#feature-network-outgoing}\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/ToggleableConfig_for_OutgoingFileConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"OutgoingFileConfig\": {\n      \"description\": \"Tunnel outgoing network operations through mirrord.\\n\\nSee the outgoing [reference](https://mirrord.dev/docs/reference/traffic/#outgoing) for more details.\\n\\nThe `remote` and `local` config for this feature are **mutually** exclusive.\\n\\n```json { \\\"feature\\\": { \\\"network\\\": { \\\"outgoing\\\": { \\\"tcp\\\": true, \\\"udp\\\": true, \\\"ignore_localhost\\\": false, \\\"filter\\\": { \\\"local\\\": [\\\"tcp://1.1.1.0/24:1337\\\", \\\"1.1.5.0/24\\\", \\\"google.com\\\", \\\":53\\\"] }, \\\"unix_streams\\\": \\\"bear.+\\\" } } } } ```\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"filter\": {\n          \"title\": \"feature.network.outgoing.filter {#feature.network.outgoing.filter}\",\n          \"description\": \"Filters that are used to send specific traffic from either the remote pod or the local app\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/OutgoingFilterConfig\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"ignore_localhost\": {\n          \"title\": \"feature.network.outgoing.ignore_localhost {#feature.network.outgoing.ignore_localhost}\",\n          \"description\": \"Defaults to `false`.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"tcp\": {\n          \"title\": \"feature.network.outgoing.tcp {#feature.network.outgoing.tcp}\",\n          \"description\": \"Defaults to `true`.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"udp\": {\n          \"title\": \"feature.network.outgoing.udp {#feature.network.outgoing.udp}\",\n          \"description\": \"Defaults to `true`.\",\n          \"type\": [\n            \"boolean\",\n            \"null\"\n          ]\n        },\n        \"unix_streams\": {\n          \"title\": \"feature.network.outgoing.unix_streams {#feature.network.outgoing.unix_streams}\",\n          \"description\": \"Connect to these unix streams remotely (and to all other paths locally).\\n\\nYou can either specify a single value or an array of values. Each value is interpreted as a regular expression ([Supported Syntax](https://docs.rs/regex/1.7.1/regex/index.html#syntax)).\\n\\nWhen your application connects to a unix socket, the target address will be converted to a string (non-utf8 bytes are replaced by a placeholder character) and matched against the set of regexes specified here. If there is a match, mirrord will connect your application with the target unix socket address on the target pod. Otherwise, it will leave the connection to happen locally on your machine.\",\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"OutgoingFilterConfig\": {\n      \"description\": \"List of addresses/ports/subnets that should be sent through either the remote pod or local app, depending how you set this up with either `remote` or `local`.\\n\\nYou may use this option to specify when outgoing traffic is sent from the remote pod (which is the default behavior when you enable outgoing traffic), or from the local app (default when you have outgoing traffic disabled).\\n\\nTakes a list of values, such as:\\n\\n- Only UDP traffic on subnet `1.1.1.0/24` on port 1337 will go through the remote pod.\\n\\n```json { \\\"remote\\\": [\\\"udp://1.1.1.0/24:1337\\\"] } ```\\n\\n- Only UDP and TCP traffic on resolved address of `google.com` on port `1337` and `7331` will go through the remote pod. ```json { \\\"remote\\\": [\\\"google.com:1337\\\", \\\"google.com:7331\\\"] } ```\\n\\n- Only TCP traffic on `localhost` on port 1337 will go through the local app, the rest will be emmited remotely in the cluster.\\n\\n```json { \\\"local\\\": [\\\"tcp://localhost:1337\\\"] } ```\\n\\n- Only outgoing traffic on port `1337` and `7331` will go through the local app. ```json { \\\"local\\\": [\\\":1337\\\", \\\":7331\\\"] } ```\\n\\nValid values follow this pattern: `[protocol]://[name|address|subnet/mask]:[port]`.\",\n      \"oneOf\": [\n        {\n          \"description\": \"Traffic that matches what's specified here will go through the remote pod, everything else will go through local.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"remote\"\n          ],\n          \"properties\": {\n            \"remote\": {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            }\n          },\n          \"additionalProperties\": false\n        },\n        {\n          \"description\": \"Traffic that matches what's specified here will go through the local app, everything else will go through the remote pod.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"local\"\n          ],\n          \"properties\": {\n            \"local\": {\n              \"$ref\": \"#/definitions/VecOrSingle_for_String\"\n            }\n          },\n          \"additionalProperties\": false\n        }\n      ]\n    },\n    \"PodTarget\": {\n      \"description\": \"<!--${internal}--> Mirror the pod specified by [`PodTarget::pod`].\",\n      \"type\": \"object\",\n      \"required\": [\n        \"pod\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"pod\": {\n          \"description\": \"<!--${internal}--> Pod to mirror.\",\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"PortList\": {\n      \"description\": \"<!--${internal}--> Helper struct for setting up ports configuration (part of the HTTP traffic stealer feature).\\n\\nDefaults to a list of ports `[80, 8080]`.\\n\\nWe use this to allow implementing a custom [`Default`] initialization, as the [`MirrordConfig`] macro (currently) doesn't support more intricate expressions.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/VecOrSingle_for_uint16\"\n        }\n      ]\n    },\n    \"QueueFilter\": {\n      \"description\": \"More queue types might be added in the future.\",\n      \"oneOf\": [\n        {\n          \"description\": \"Amazon Simple Queue Service.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"message_filter\",\n            \"queue_type\"\n          ],\n          \"properties\": {\n            \"message_filter\": {\n              \"description\": \"A filter is a mapping between message attribute names and regexes they should match. The local application will only receive messages that match **all** of the given patterns. This means, only messages that have **all** of the attributes in the filter, with values of those attributes matching the respective patterns.\",\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"queue_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SQS\"\n              ]\n            }\n          }\n        },\n        {\n          \"description\": \"Kafka.\",\n          \"type\": \"object\",\n          \"required\": [\n            \"message_filter\",\n            \"queue_type\"\n          ],\n          \"properties\": {\n            \"message_filter\": {\n              \"description\": \"A filter is a mapping between message header names and regexes they should match. The local application will only receive messages that match **all** of the given patterns. This means, only messages that have **all** of the headers in the filter, with values of those headers matching the respective patterns.\",\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"queue_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"Kafka\"\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"RolloutTarget\": {\n      \"description\": \"<!--${internal}--> Mirror the rollout specified by [`RolloutTarget::rollout`].\",\n      \"type\": \"object\",\n      \"required\": [\n        \"rollout\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"rollout\": {\n          \"description\": \"<!--${internal}--> Rollout to mirror.\",\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"SplitQueuesConfig\": {\n      \"description\": \"```json { \\\"feature\\\": { \\\"split_queues\\\": { \\\"first-queue\\\": { \\\"queue_type\\\": \\\"SQS\\\", \\\"message_filter\\\": { \\\"wows\\\": \\\"so wows\\\", \\\"coolz\\\": \\\"^very\\\" } }, \\\"second-queue\\\": { \\\"queue_type\\\": \\\"SQS\\\", \\\"message_filter\\\": { \\\"who\\\": \\\"you$\\\" } }, \\\"third-queue\\\": { \\\"queue_type\\\": \\\"Kafka\\\", \\\"message_filter\\\": { \\\"who\\\": \\\"you$\\\" } }, \\\"fourth-queue\\\": { \\\"queue_type\\\": \\\"Kafka\\\", \\\"message_filter\\\": { \\\"wows\\\": \\\"so wows\\\", \\\"coolz\\\": \\\"^very\\\" } }, } } } ```\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/QueueFilter\"\n      }\n    },\n    \"StatefulSetTarget\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"stateful_set\"\n      ],\n      \"properties\": {\n        \"container\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ]\n        },\n        \"stateful_set\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"Target\": {\n      \"description\": \"<!--${internal}--> ## path\\n\\nSpecifies the running pod (or deployment) to mirror.\\n\\nSupports: - `pod/{sample-pod}`; - `deployment/{sample-deployment}`; - `container/{sample-container}`; - `containername/{sample-container}`. - `job/{sample-job}`; - `cronjob/{sample-cronjob}`; - `statefulset/{sample-statefulset}`;\",\n      \"anyOf\": [\n        {\n          \"description\": \"<!--${internal}--> Mirror a deployment.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/DeploymentTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Mirror a pod.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/PodTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Mirror a rollout.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/RolloutTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Mirror a Job.\\n\\nOnly supported when `copy_target` is enabled.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/JobTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Targets a [CronJob](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/).\\n\\nOnly supported when `copy_target` is enabled.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/CronJobTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Targets a [StatefulSet](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/).\\n\\nOnly supported when `copy_target` is enabled.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/StatefulSetTarget\"\n            }\n          ]\n        },\n        {\n          \"description\": \"<!--${internal}--> Spawn a new pod.\",\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"TargetFileConfig\": {\n      \"anyOf\": [\n        {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/Target\"\n            },\n            {\n              \"type\": \"null\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ]\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"namespace\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ]\n            },\n            \"path\": {\n              \"description\": \"<!--${internal}--> Path is optional so that it can also be specified via env var instead of via conf file, but it is not optional in a resulting [`TargetConfig`] object - either there is a path, or the target configuration is `None`.\",\n              \"default\": null,\n              \"anyOf\": [\n                {\n                  \"$ref\": \"#/definitions/Target\"\n                },\n                {\n                  \"type\": \"null\"\n                }\n              ]\n            }\n          },\n          \"additionalProperties\": false\n        }\n      ]\n    },\n    \"ToggleableConfig_for_DnsFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/DnsFileConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_EnvFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/EnvFileConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_FsUserConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/FsUserConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_HttpFilterFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/HttpFilterFileConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_IncomingFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/IncomingFileConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_NetworkFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/NetworkFileConfig\"\n        }\n      ]\n    },\n    \"ToggleableConfig_for_OutgoingFileConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/OutgoingFileConfig\"\n        }\n      ]\n    },\n    \"VecOrSingle_for_String\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"VecOrSingle_for_uint16\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\",\n          \"format\": \"uint16\",\n          \"minimum\": 0.0\n        },\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"uint16\",\n            \"minimum\": 0.0\n          }\n        }\n      ]\n    },\n    \"io.k8s.api.core.v1.ResourceClaim\": {\n      \"description\": \"ResourceClaim references one entry in PodSpec.ResourceClaims.\",\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"description\": \"Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"io.k8s.api.core.v1.ResourceRequirements\": {\n      \"description\": \"ResourceRequirements describes the compute resource requirements.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"claims\": {\n          \"description\": \"Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\\n\\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\\n\\nThis field is immutable. It can only be set for containers.\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/io.k8s.api.core.v1.ResourceClaim\"\n          }\n        },\n        \"limits\": {\n          \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity\"\n          }\n        },\n        \"requests\": {\n          \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity\"\n          }\n        }\n      }\n    },\n    \"io.k8s.api.core.v1.Toleration\": {\n      \"description\": \"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"effect\": {\n          \"description\": \"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\\n\\n\",\n          \"type\": \"string\"\n        },\n        \"key\": {\n          \"description\": \"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\",\n          \"type\": \"string\"\n        },\n        \"operator\": {\n          \"description\": \"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\\n\\n\",\n          \"type\": \"string\"\n        },\n        \"tolerationSeconds\": {\n          \"description\": \"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\",\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"value\": {\n          \"description\": \"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"io.k8s.apimachinery.pkg.api.resource.Quantity\": {\n      \"description\": \"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\\n\\nThe serialization format is:\\n\\n``` <quantity>        ::= <signedNumber><suffix>\\n\\n\\t(Note that <suffix> may be empty, from the \\\"\\\" case in <decimalSI>.)\\n\\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \\\"+\\\" | \\\"-\\\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\\n\\n\\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\\n\\n<decimalSI>       ::= m | \\\"\\\" | k | M | G | T | P | E\\n\\n\\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\\n\\n<decimalExponent> ::= \\\"e\\\" <signedNumber> | \\\"E\\\" <signedNumber> ```\\n\\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\\n\\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\\n\\nBefore serializing, Quantity will be put in \\\"canonical form\\\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\\n\\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\\n\\nThe sign will be omitted unless the number is negative.\\n\\nExamples:\\n\\n- 1.5 will be serialized as \\\"1500m\\\" - 1.5Gi will be serialized as \\\"1536Mi\\\"\\n\\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\\n\\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\\n\\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.\",\n      \"type\": \"string\"\n    }\n  }\n}"
        },
        {
          "name": "mirrord",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.1064453125,
          "content": "[toolchain]\nchannel = \"nightly-2024-10-11\"\ncomponents = [ \"rustfmt\", \"clippy\", \"rustc\" ]\nprofile = \"minimal\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.1767578125,
          "content": "edition = \"2021\"\ngroup_imports = \"StdExternalCrate\"\ncomment_width = 100\nwrap_comments = true\nformat_code_in_doc_comments = true\nimports_granularity = \"Crate\"\nnewline_style = \"Unix\"\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "towncrier.toml",
          "type": "blob",
          "size": 0.962890625,
          "content": "[tool.towncrier]\ndirectory = \"changelog.d\"\nfilename = \"CHANGELOG.md\"\nstart_string = \"<!-- towncrier release notes start -->\\n\"\nunderlines = [\"\", \"\", \"\"]\ntemplate = \"changelog.d/changelog_template.jinja\"\ntitle_format = \"## [{version}](https://github.com/metalbear-co/mirrord/tree/{version}) - {project_date}\"\nissue_format = \"[#{issue}](https://github.com/metalbear-co/mirrord/issues/{issue})\"\nwrap = true\n\n[[tool.towncrier.type]]\ndirectory = \"security\"\nname = \"Security\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"removed\"\nname = \"Removed\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"deprecated\"\nname = \"Deprecated\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"added\"\nname = \"Added\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"changed\"\nname = \"Changed\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"fixed\"\nname = \"Fixed\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"internal\"\nname = \"Internal\"\nshowcontent = true"
        }
      ]
    }
  ]
}