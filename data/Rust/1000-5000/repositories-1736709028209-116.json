{
  "metadata": {
    "timestamp": 1736709028209,
    "page": 116,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fastly/pushpin",
      "stars": 3695,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.259765625,
          "content": "*.swp\n*~\nqrc_*\n*.moc\n*.o\n*.pdb\nui_*\nmoc_*\n*.pyc\n.qmake.stash\ntarget_wrapper.sh\n/target\n**/*.rs.bk\n.cargo\nvendor\n.vscode\nconf.pri\n\n/pushpin\n/pushpin-legacy\n/bin/*\n/src/runner/certs/*.crt\n/src/runner/certs/*.key\n/postbuild/Makefile\n/postbuild/*.inst\n/config\n/run\n/log\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.212890625,
          "content": "Pushpin Changelog\n=================\n\nv. 1.40.1 (2024-08-13)\n\n  * Fix build with recent rustc.\n\nv. 1.40.0 (2024-07-17)\n\n  * Restore support for receiving chunked responses from backends.\n  * For early errors such as malformed requests, respond instead of disconnecting.\n  * Rename Condure to connmgr.\n  * Fix crash under high load.\n  * Fix hang when receiving large WebSocket rejections from the backend.\n\nv. 1.39.1 (2024-03-18)\n\n  * Regenerate pushpin.conf.inst post-build to ensure up-to-date configuration.\n  * Update legacy runner use revised Qt linking logic, aligning with main branch improvements.\n\nv. 1.39.0 (2024-03-14)\n\n  * Add support for multiple proxy worker threads.\n  * New config option: workers (under [proxy]).\n  * Fix memory leak when proxying requests.\n  * Various build system fixes/improvements.\n  * Use Boost for signals & slots to reduce dependence on Qt's event loop.\n\nv. 1.38.0 (2024-01-08)\n\n  * Publish refresh action for triggering WebSocket-over-HTTP requests.\n  * Ability to read signing secrets from files.\n  * Move Condure into Pushpin and name the program pushpin-condure.\n  * Fix crash when writing partial uncompressed WebSocket frame.\n  * Fix WebSocket proxying flow control.\n  * Support receiving non-chunked responses of indefinite length.\n  * Qt 6 compatibility.\n  * Remove configure script. Configure via environment variables instead.\n\nv. 1.37.0 (2023-06-29)\n\n  * Ability to use Condure instead of Zurl for outgoing connections.\n  * Ability to set mode/user/group when listening on Unix socket.\n  * WebSocket performance optimizations.\n  * New config options: allow_compression, stats_connection_send, cdn_loop.\n  * Relicense to Apache 2.0.\n\nv. 1.36.0 (2022-11-14)\n\n  * Ability to accept client connections via IPv6.\n  * Ability to sign requests using EC or RSA public keys.\n  * Include bytes/messages in report stats.\n\nv. 1.35.0 (2022-03-11)\n\n  * Add support for Prometheus metrics.\n  * Ability to listen on a Unix socket for client connections.\n  * New config options: prometheus_port, prometheus_prefix.\n  * New config option: local_ports.\n  * New config option: accept_pushpin_route.\n  * New route condition option: no_grip.\n  * Use the route of the initial request for retries and link requests.\n  * pushpin-publish: fix sending hint action for http-response format.\n\nv. 1.34.0 (2021-11-30)\n\n  * New config option: message_wait.\n  * Publish command for publishing via command socket.\n\nv. 1.33.1 (2021-08-09)\n\n  * Build system fixes.\n\nv. 1.33.0 (2021-08-08)\n\n  * Performance optimizations.\n  * New config option: sig_iss.\n\nv. 1.32.2 (2021-06-09)\n\n  * Fix publishing to SockJS WebSocket connections.\n\nv. 1.32.1 (2021-05-13)\n\n  * Build system fixes.\n\nv. 1.32.0 (2021-05-11)\n\n  * pushpin-publish: support sending via HTTP, and do this by default.\n  * pushpin-publish: support authentication.\n  * pushpin-publish: use GRIP_URL environment variable if present.\n  * Add Rust code to the build process.\n\nv. 1.31.0 (2020-11-06)\n\n  * Use Condure instead of Mongrel2, by default.\n  * Ability to refresh WebSocket-over-HTTP sessions by channel.\n  * Fix crash when sending delayed WebSocket messages.\n\nv. 1.30.0 (2020-07-29)\n\n  * Optional support for Condure instead of Mongrel2.\n  * ZHTTP compatibility fixes.\n\nv. 1.29.0 (2020-07-15)\n\n  * Fix crash when parsing Accept header received on control port.\n  * Fix crash when response hold times out while pausing.\n  * Fix handling of hints in response mode.\n  * Fix handling of ZeroMQ errors, including EINTR.\n  * ZHTTP compatibility fixes.\n\nv. 1.28.0 (2020-04-08)\n\n  * New route target option: one_event.\n\nv. 1.27.0 (2020-03-10)\n\n  * WebSocket: ability to publish close reason.\n  * WebSocket: proxy the content of ping and pong frames.\n\nv. 1.26.0 (2019-12-11)\n\n  * Respond with status 200 on HTTP control port root path.\n\nv. 1.25.0 (2019-11-20)\n\n  * Set the Mongrel2 log level and capture debug output.\n  * Ability to set different log levels per subprocess.\n\nv. 1.24.0 (2019-08-06)\n\n  * runner: capture Mongrel2 logs when --merge-output is used.\n\nv. 1.23.0 (2019-07-03)\n\n  * Support log levels 0 and 1.\n  * Don't write to Mongrel2 access log for log levels < 2.\n  * Support JSON framing on the input PULL and SUB sockets.\n  * New config option: push_in_sub_specs.\n  * New config option: push_in_sub_connect.\n\nv. 1.22.0 (2019-06-17)\n\n  * New filter: var-subst.\n  * Support content-filters field in ws-message format.\n\nv. 1.21.0 (2019-05-01)\n\n  * GRIP keep-alive modes: idle (default) and interval.\n  * Don't put GRIP headers in Access-Control-Expose-Headers.\n\nv. 1.20.3 (2019-04-08)\n\n  * Fix Grip-Last values when route prefix is used.\n\nv. 1.20.2 (2019-03-25)\n\n  * WebSocket-Over-HTTP: fix mem leak when clients disconnect during close.\n\nv. 1.20.1 (2019-02-20)\n\n  * WebSocket-Over-HTTP: don't forward Content-Length header.\n\nv. 1.20.0 (2019-02-19)\n\n  * WebSocket-Over-HTTP: break up response messages to fit session buffers.\n  * New config option: stats_format.\n  * New config option: client_buffer_size.\n\nv. 1.19.1 (2019-01-10)\n\n  * WebSocket: fix crash when receiving frames after close frame.\n  * WebSocket: include reason and headers in rejection responses.\n\nv. 1.19.0 (2018-12-18)\n\n  * WebSocket: support close reasons.\n\nv. 1.18.0 (2018-08-20)\n\n  * WebSocket-Over-HTTP: update headers (mainly Grip-Sig) for each request.\n  * WebSocket-Over-HTTP: properly report errors and handle target failover.\n  * WebSocket: support debug responses.\n  * Option to not send non-standard X-Forwarded-Protocol header.\n  * Increase default request buffer size to 8k.\n  * Make http_port optional.\n  * runner: remove mongrel2 pid file before starting.\n  * runner: return non-zero status code if failing due to subprocess error.\n  * runner: prevent SIGINT from being copied to subprocesses.\n\nv. 1.17.2 (2018-01-11)\n\n  * Fix close actions with HTTP streaming and WebSockets.\n\nv. 1.17.1 (2017-12-12)\n\n  * Fix compilation with Qt 5.10.\n\nv. 1.17.0 (2017-11-06)\n\n  * De-dup published messages based on recently seen IDs (default 60s).\n  * Limit number of subscriptions per connection (default 20).\n  * Ensure filters update after following next links.\n  * Support content-filters field in http-stream and http-response formats.\n  * Include subscribers field in subscription stats.\n  * Include duration field in report stats.\n  * New config options: connection_subscription_max, subscription_linger.\n  * New config options: stats_connection_ttl, stats_subscription_ttl.\n  * New config option: stats_report_interval.\n\nv. 1.16.0 (2017-07-14)\n\n  * Reliable streaming fixes.\n  * SockJS: XHR transport fixes.\n  * WebSocket-Over-HTTP: more fixes to ensure DISCONNECT events get sent.\n  * Fix routes file change detection when file is replaced.\n  * Set Grip-Last headers when retrying long-polling request.\n  * Enable client-side TCP keep-alives.\n  * Stats: report logical IP address rather than physical.\n  * Published items can include no-seq flag to bypass sequencing buffer.\n  * New config options: log_from, log_user_agent.\n  * New filters: skip-users, build-id, require-sub.\n  * Add randomness to stream keep alives.\n  * pushpin-publish: --meta option.\n  * pushpin-publish: --no-seq option.\n  * Announce more features using Grip-Feature request header.\n  * Fix GRIP session detection.\n  * sub target parameter works for both HTTP and WebSocket, forbids unsub.\n  * Packet logging uses new format that only trims content, not headers.\n\nv. 1.15.0 (2017-01-22)\n\n  * Publish hint action for triggering recovery requests.\n  * Recover command for triggering recovery requests.\n  * Refresh command for triggering WebSocket-Over-HTTP requests.\n  * Improve reliability of long-polling when previous ID is used.\n  * WebSocket-Over-HTTP: ensure DISCONNECT events get sent.\n  * WebSocket: new control messages: send-delayed, flush-delayed.\n  * WebSocket: break large published messages into frames.\n  * Allow unknown previous ID for first message to channel.\n  * Forget previous ID when channel has no subscribers.\n  * Reduce timeout of out-of-order messages to 5 seconds.\n  * pushpin-publish: --hint option\n  * pushpin-publish: --no-eol option\n  * pushpin-publish: ability to use file source (@filename)\n  * New config option: message_block_size\n  * Remove docs files from repository. Content moved to pushpin.org.\n\nv. 1.14.0 (2016-11-15)\n\n  * Reliable HTTP streaming (stream hold + \"GRIP Next\").\n  * Process messages in order if received out of order.\n\nv. 1.13.1 (2016-10-27)\n\n  * Fix crash when publishing to a long-polling client that is closing.\n  * More conservative message_rate default.\n\nv. 1.13.0 (2016-10-22)\n\n  * Optimizations for higher concurrent connections.\n  * New config options: message_rate and message_hwm.\n  * New stats message: report.\n  * Handle next links internally if relative.\n  * Log accepted requests as \"accept\", not \"hold\".\n  * Log handler-initiated requests in handler, not proxy.\n  * Fix memory leaks.\n  * Send anonymous usage statistics to Fanout.\n\nv. 1.12.0 (2016-09-03)\n\n  * \"GRIP Next\" feature for streaming many responses as a single response.\n  * header route parameter for sending custom headers when proxying.\n  * trust_connect_host target parameter for trusting cert of connect host.\n  * SockJS: fix bug with not receiving messages from client.\n  * More correct handling of Host header.\n  * Set X-Forwarded-Proto in addition to X-Forwarded-Protocol.\n  * Various bugfixes.\n\nv. 1.11.0 (2016-07-11)\n\n  * Debug mode, to get more information about errors while proxying.\n  * Command line option to log subprocess output: --merge-output.\n  * Command line option to log merged output to file: --logfile.\n  * Command line options for quick config: --port, --route.\n  * Command line option to easily run multiple instances: --id.\n  * Rewrite runner from Python to C++.\n  * Don't relay Content-Encoding (fixes compressed long-polling timeouts).\n  * Fixes to log output.\n\nv. 1.10.1 (2016-05-30)\n\n  * Fix SockJS crash.\n  * Fix bug that logged successful requests as errors.\n\nv. 1.10.0 (2016-05-25)\n\n  * Streaming: initial response now has no size limit.\n  * WebSocket-Over-HTTP: retry requests to the origin server.\n  * WebSocket: ability to disconnect clients by publishing a close action.\n  * WebSocket: ability to publish ping/pong frames.\n  * WebSocket: keep-alives.\n  * New route target \"test\", for testing without an origin server.\n  * Fix publishing of large payloads through HTTP control port.\n  * New config option: log_level.\n  * Ability to set bind interface in config (use addr:port form).\n  * Grip-Status header, for setting alternate response code and reason.\n\nv. 1.9.0 (2016-04-14)\n\n  * More practical logging. Non-verbose output more informative.\n  * New config option: accept_x_forwarded_protocol.\n  * Support JSON responses in HTTP control endpoint.\n  * More accurate WebSocket activity counting.\n\nv. 1.8.0 (2016-02-22)\n\n  * Fix issue proxying large responses.\n  * Refactor README.\n  * Port server code to Qt 5.\n  * Rewrite pushpin-publish tool from Python to C++.\n  * Move internal.conf into LIBDIR.\n\nv. 1.7.0 (2016-01-10)\n\n  * Rewrite pushpin-handler from Python to C++.\n  * Initial support for subscription filters and skip-self filter.\n  * Fix sending of large responses when flow control not used.\n  * Speed up shutdown.\n  * Pass WebSocket GRIP logic upstream if GRIP proxy detected.\n  * Don't forward WebSocket-Over-HTTP requests unless client trusted.\n  * WebSocket-Over-HTTP: strip private headers from responses.\n  * Long-polling: finish support for JSON patch.\n  * m2adapter: dynamically enable/disable control port as needed.\n  * publish tool: add id, prev-id, patch, and sender options.\n  * Add monitorsubsock tool for monitoring SUB socket.\n  * Refactor docs/grip-protocol.md.\n\nv. 1.6.0 (2015-09-24)\n\n  * Fix rare assert when publishing to a WebSocket.\n  * Remove libdir from pushpin.conf.\n  * Mongrel2: use download flow control.\n  * Mongrel2: enable relaxed parsing.\n  * Auto Cross-Origin: include Access-Control-Max-Age.\n  * Throw error if can't create runtime directories on startup.\n  * Various cleanups.\n\nv. 1.5.0 (2015-07-23)\n\n  * replace_beg route parameter.\n  * Fixed bug where non-persistent connections were closed before data sent.\n  * Accept invalid characters in request URIs and URL-encode them.\n\nv. 1.4.0 (2015-07-16)\n\n  * Improved handling of streamed input while proxying.\n  * WebSocket over_http mode: relay error responses rather than 502.\n  * Various WebSocket bugfixes.\n  * Prefer using sortedcontainers.SortedDict rather than blist.sorteddict.\n\nv. 1.3.3 (2015-07-05)\n\n  * Fix crash on conflict retry introduced in previous version.\n\nv. 1.3.2 (2015-07-05)\n\n  * Better handling of responses with no explicit body (HEAD, 204, 304).\n  * Persistent connection fixes.\n  * Proxy flow control fixes.\n  * WebSocket over_http mode: buffer fragmented messages before sending.\n\nv. 1.3.1 (2015-06-19)\n\n  * Fix http-response conflict recovery.\n  * Correctly proxy WebSocket ping and pong frames.\n  * Fix WebSocket compatibility with latest Zurl.\n\nv. 1.3.0 (2015-06-03)\n\n  * Many fixes with subscription reporting via stats and SUB socket.\n  * Tweaks to enable higher concurrent connection counts.\n  * WebSocket over_http mode sends DISCONNECT events.\n\nv. 1.2.0 (2015-05-09)\n\n  * http-stream: close action, keep-alive.\n  * Check for new pushpin versions.\n  * ZeroMQ endpoint discovery via command socket.\n  * pushpin-publish command line tool.\n\nv. 1.1.1 (2015-04-17)\n\n  * Fix auto-cross-origin feature.\n\nv. 1.1.0 (2015-03-08)\n\n  * SUB socket input. SockJS client support.\n\nv. 1.0.0 (2014-09-16)\n\n  * Stable version.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 56.1337890625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45862d1c77f2228b9e10bc609d5bc203d86ebc9b87ad8d5d5167a6c9abf739d9\"\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ca84f3628370c59db74ee214b3263d58f9aadd9b4fe7e711fd87dc452b7f163\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is-terminal\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c677ab05e09154296dd37acecd46420c17b9713e8366facafa8fc0885167cf4c\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"arraydeque\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d902e3d592a523def97af8f317b08ce16b7ab854c1985a0c671e6f15cebc236\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a66537f1bb974b254c98ed142ff995236e81b9d0fe4db0575f46612cb15eb0f9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35636a1494ede3b646cc98f74f8e62c773a38a659ebc777a2cf26b9b74171df9\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cbindgen\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fce8dd7fcfcbf3a0a87d8f515194b49d6135acab73e18bd380d1d93bb1a15eb\"\ndependencies = [\n \"clap\",\n \"heck\",\n \"indexmap\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn\",\n \"tempfile\",\n \"toml 0.8.19\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"effd91f6c78e5a4ace8a5d3c0b6bfaec9e2baaef55f3efc00e45fb2e477ee926\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdf919175532b369853f5d5e20b26b43112613fd6fe7aee757e35f7a44642656\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"defaa24ecc093c77630e6c15e17c51f5e187bf35ee514f4e2d67baaa96dae22b\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.3.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb690e81c7840c0d7aade59f242ea3b41b9bc27bcd5997890e7702ae4b32e487\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.3.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ed2e96bc16d8d740f6f48d663eddf4b8a0983e79210fd55479b7bcd0a69860e\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"once_cell\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.3.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54a9bb5758fc5dfe728d1019941681eccaf0cf8a4189b692a0ee2f2ecf90a050\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd7cc57abe963c6d3b9d8be5b06ba7c8957a930305ca90304f24ef040aa6f961\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"config\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68578f196d2a33ff61b27fae256c3164f65e36382648e30666dde05b8cc9dfdf\"\ndependencies = [\n \"async-trait\",\n \"convert_case\",\n \"json5\",\n \"nom\",\n \"pathdiff\",\n \"ron\",\n \"rust-ini\",\n \"serde\",\n \"serde_json\",\n \"toml 0.8.19\",\n \"yaml-rust2\",\n]\n\n[[package]]\nname = \"const-random\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87e00182fe74b066627d63b85fd550ac2998d4b0bd86bfed477a0ae4c7c71359\"\ndependencies = [\n \"const-random-macro\",\n]\n\n[[package]]\nname = \"const-random-macro\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9d839f2a20b0aee515dc581a6172f2321f96cab76c1a38a4c584a194955390e\"\ndependencies = [\n \"getrandom\",\n \"once_cell\",\n \"tiny-keccak\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca\"\ndependencies = [\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce420fe07aecd3e67c5f910618fe65e94158f6dcc0adf44e00d69ce2bdfe0fd0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae211234986c545741a7dc064309f67ee1e5ad243d0e48335adc0484d960bcc7\"\ndependencies = [\n \"autocfg\",\n \"cfg-if\",\n \"crossbeam-utils\",\n \"memoffset\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dlv-list\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"442039f5147480ba31067cb00ada1adae6892028e40e45fc5de7b7df6dcc1b5f\"\ndependencies = [\n \"const-random\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a12e6657c4c97ebab115a42dcee77225f7f482cdd841cf7088c657a42e9e00e7\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"error-chain\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9435d864e017c3c6afeac1654189b06cdb491cf2ff73dbf0d73b0f292f42ff8\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe9006bed769170c11f845cf00c7c1e9092aeb3f268e007c3e760ac68008070f\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7\"\ndependencies = [\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"httparse\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\"\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb0889898416213fab133e1d33a0e5858a48177452750691bde3666d0fdbaf8b\"\ndependencies = [\n \"hermit-abi\",\n \"rustix 0.38.28\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af150ab688ff2122fcef229be89cb50dd66af9e01a4ff320cc137eecc9bacc38\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54c0c35952f67de54bb584e9fd912b3023117cbafc0a77d8f3dee1fb5f572fe8\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"json5\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96b0db21af676c1ce64250b5f40f3ce2cf27e4e47cb91ed91eb6fe9350b430c1\"\ndependencies = [\n \"pest\",\n \"pest_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"jsonwebtoken\"\nversion = \"8.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6971da4d9c3aa03c3d8f3ff0f4155b534aad021292003895a469716b2a230378\"\ndependencies = [\n \"base64 0.21.5\",\n \"pem\",\n \"ring 0.16.20\",\n \"serde\",\n \"serde_json\",\n \"simple_asn1\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.150\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89d92a4743f9a61002fae18374ed11e7973f530cb3a3255fb354818118b2203c\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"969488b55f8ac402214f3f5fd243ebb7206cf82de60d3172994707a4bcc2b829\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a634b1c61a95585bd15607c6ab0c4e5b226e695ff2800ba0cdccddf208c406c\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"metadeps\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73b122901b3a675fac8cecf68dcb2f0d3036193bc861d1ac0e1c337f7d5254c2\"\ndependencies = [\n \"error-chain\",\n \"pkg-config\",\n \"toml 0.2.1\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4929e1f84c5e54c3ec6141cd5d8b5a5c055f031f80cf78f2072920173cb4d880\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9\"\ndependencies = [\n \"autocfg\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2819ce041d2ee131036f4fc9d6ae7ae125a3a40e97ba64d04fe799ad9dabbb44\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"ordered-multimap\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49203cdcae0030493bad186b28da2fa25645fa276a51b6fec8010d281e02ef79\"\ndependencies = [\n \"dlv-list\",\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c\"\n\n[[package]]\nname = \"pathdiff\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd\"\n\n[[package]]\nname = \"pem\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8835c273a76a90455d7344889b0964598e3316e2a79ede8e36f16bdcf2228b8\"\ndependencies = [\n \"base64 0.13.1\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae9cee2a55a544be8b89dc6848072af97a20f2422603c10865be2a42b580fff5\"\ndependencies = [\n \"memchr\",\n \"thiserror\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"pest_derive\"\nversion = \"2.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81d78524685f5ef2a3b3bd1cafbc9fcabb036253d9b1463e726a91cd16e2dfc2\"\ndependencies = [\n \"pest\",\n \"pest_generator\",\n]\n\n[[package]]\nname = \"pest_generator\"\nversion = \"2.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68bd1206e71118b5356dae5ddc61c8b11e28b09ef6a31acbd15ea48a28e0c227\"\ndependencies = [\n \"pest\",\n \"pest_meta\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pest_meta\"\nversion = \"2.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c747191d4ad9e4a4ab9c8798f1e82a39affe7ef9648390b7e5548d18e099de6\"\ndependencies = [\n \"once_cell\",\n \"pest\",\n \"sha2\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26072860ba924cbfa98ea39c8c19b4dd6a4a25423dbdf219c1eca91aa0cf6964\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"pushpin\"\nversion = \"1.41.0-dev\"\ndependencies = [\n \"arrayvec\",\n \"base64 0.13.1\",\n \"cbindgen\",\n \"clap\",\n \"config\",\n \"criterion\",\n \"env_logger\",\n \"httparse\",\n \"ipnet\",\n \"jsonwebtoken\",\n \"libc\",\n \"log\",\n \"miniz_oxide\",\n \"mio\",\n \"openssl\",\n \"paste\",\n \"pkg-config\",\n \"rustls\",\n \"rustls-native-certs\",\n \"serde\",\n \"serde_json\",\n \"sha1\",\n \"signal-hook\",\n \"slab\",\n \"socket2\",\n \"test-log\",\n \"thiserror\",\n \"time\",\n \"url\",\n \"zmq\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c27db03db7734835b3f53954b534c91069375ce6ccaa2e065441e07d9b6cdb1\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ce3fb6ad83f861aac485e76e1985cd109d9a3713802152be56c3b1f0e0658ed\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"ring\"\nversion = \"0.16.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"once_cell\",\n \"spin 0.5.2\",\n \"untrusted 0.7.1\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb0205304757e5d899b9c2e448b867ffd03ae7f988002e47cd24954391394d0b\"\ndependencies = [\n \"cc\",\n \"getrandom\",\n \"libc\",\n \"spin 0.9.8\",\n \"untrusted 0.9.0\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"ron\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94\"\ndependencies = [\n \"base64 0.21.5\",\n \"bitflags 2.4.1\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"rust-ini\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e0698206bcb8882bf2a9ecb4c1e7785db57ff052297085a6efd4fe42302068a\"\ndependencies = [\n \"cfg-if\",\n \"ordered-multimap\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.37.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys 0.3.8\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72e572a5e8ca657d7366229cdde4bd14c4eb5499a9573d4d366fe1b599daa316\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys 0.4.11\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.21.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fecbfb7b1444f477b345853b1fce097a2c6fb637b2bfb87e6bc5db0f043fae4\"\ndependencies = [\n \"log\",\n \"ring 0.17.5\",\n \"rustls-webpki\",\n \"sct\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c\"\ndependencies = [\n \"base64 0.21.5\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.101.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765\"\ndependencies = [\n \"ring 0.17.5\",\n \"untrusted 0.9.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88\"\ndependencies = [\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sct\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414\"\ndependencies = [\n \"ring 0.17.5\",\n \"untrusted 0.9.0\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bca2a08484b285dcb282d0f67b26cadc0df8b19f8c12502c13d966bf9482f001\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6c7207fbec9faa48073f3e3074cbe553af6ea512d7c21ba46e434e70ea9fbc1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.108\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d1c7e3eac408d115102c4c24ad393e0821bb3a5df4d506a80f85f7a742a526b\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simple_asn1\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085\"\ndependencies = [\n \"num-bigint\",\n \"num-traits\",\n \"thiserror\",\n \"time\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.4.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"redox_syscall\",\n \"rustix 0.38.28\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e6bf6f19e9f8ed8d4048dc22981458ebcf406d67e94cd422e5ecd73d63b3237\"\ndependencies = [\n \"rustix 0.37.27\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"test-log\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f66edd6b6cd810743c0c71e1d085e92b01ce6a72782032e3f794c8284fe4bcdd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tiny-keccak\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237\"\ndependencies = [\n \"crunchy\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"736b60249cb25337bc196faa43ee12c705e426f3d55c214d73a4e7be06f92cb4\"\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4be2531df63900aeb2bca0daaaddec08491ee64ceecbee5076636a3b026795a8\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"614d787b966d3989fa7bb98a654e369c762374fd3213d212cfc0251257e747da\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1f8823de937b71b9460c0c34e25f3da88250760bec0ebac694b49997550d726\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e94f17b526d0a461a191c78ea52bbce64071ed5c04c9ffe424dcb38f74171bb7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af190c94f2773fdb3729c55b007a722abb5384da03bc0986df4c289bf5567e96\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5db499c5f66323272151db0e666cd34f78617522fb0c1604d31a27c50c206a85\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.5\",\n \"windows_aarch64_msvc 0.52.5\",\n \"windows_i686_gnu 0.52.5\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.5\",\n \"windows_x86_64_gnu 0.52.5\",\n \"windows_x86_64_gnullvm 0.52.5\",\n \"windows_x86_64_msvc 0.52.5\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"yaml-rust2\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8902160c4e6f2fb145dbe9d6760a75e3c9522d8bf796ed7047c85919ac7115f8\"\ndependencies = [\n \"arraydeque\",\n \"encoding_rs\",\n \"hashlink\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zmq\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aad98a7a617d608cd9e1127147f630d24af07c7cd95ba1533246d96cbdd76c66\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"log\",\n \"zmq-sys\",\n]\n\n[[package]]\nname = \"zmq-sys\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d33a2c51dde24d5b451a2ed4b488266df221a5eaee2ee519933dc46b9a9b3648\"\ndependencies = [\n \"libc\",\n \"metadeps\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.8701171875,
          "content": "[package]\nname = \"pushpin\"\nversion = \"1.41.0-dev\"\nauthors = [\"Justin Karneges <jkarneges@fastly.com>\"]\ndescription = \"Reverse proxy for realtime web services\"\nrepository = \"https://github.com/fastly/pushpin\"\nreadme = \"README.md\"\nlicense = \"Apache-2.0\"\nedition = \"2018\"\ndefault-run = \"pushpin\"\n\n[profile.dev]\npanic = \"abort\"\n\n[profile.release]\npanic = \"abort\"\n\n[lib]\ncrate-type = [\"rlib\", \"staticlib\"]\n\n[dependencies]\narrayvec = \"0.7\"\nbase64 = \"0.13\"\nclap = { version = \"=4.3.24\", features = [\"cargo\", \"string\", \"wrap_help\", \"derive\"] }\nconfig = \"0.14\"\nhttparse = \"1.7\"\nipnet = \"2\"\njsonwebtoken = \"8\"\nlibc = \"0.2\"\nlog = \"0.4\"\nminiz_oxide = \"0.6\"\nmio = { version = \"1\", features = [\"os-poll\", \"os-ext\", \"net\"] }\nopenssl = \"=0.10.66\"\npaste = \"1.0\"\nrustls = \"0.21\"\nrustls-native-certs = \"0.6\"\nserde = { version = \"1.0\", features = [\"derive\"] }\nserde_json = \"1.0\"\nsha1 = \"0.10\"\nsignal-hook = \"0.3\"\nslab = \"0.4\"\nsocket2 = \"0.4\"\nthiserror = \"1.0\"\ntime = { version = \"0.3.36\", features = [\"formatting\", \"local-offset\", \"macros\"] }\nurl = \"2.3\"\nzmq = \"0.9\"\n\n[dev-dependencies]\ncriterion = \"0.5\"\nenv_logger = { version = \"0.9\", default-features = false }\ntest-log = \"0.2\"\n\n[build-dependencies]\npkg-config = \"0.3\"\ntime = { version = \"0.3.36\", features = [\"formatting\", \"local-offset\", \"macros\"] }\ncbindgen = \"0.27\"\n\n[[bench]]\nname = \"server\"\nharness = false\n\n[[bench]]\nname = \"client\"\nharness = false\n\n[[bin]]\nname = \"pushpin-connmgr\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"m2adapter\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"pushpin-proxy\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"pushpin-handler\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"pushpin-legacy\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"pushpin\"\ntest = false\nbench = false\n\n[[bin]]\nname = \"pushpin-publish\"\ntest = false\nbench = false\n\n[lints.rust]\n\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(qt_lib_prefix, values(\"Qt\", \"Qt6\", \"Qt5\"))'] }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.7294921875,
          "content": "cargo_flags =\nifdef RELEASE\ncargo_flags += --offline --locked --release\nendif\n\ncargo_toolchain =\nifdef TOOLCHAIN\ncargo_toolchain += +$(TOOLCHAIN)\nendif\n\nall: postbuild\n\nbuild: FORCE\n\tcargo$(cargo_toolchain) build$(cargo_flags)\n\ncargo-test: FORCE\n\tcargo$(cargo_toolchain) test$(cargo_flags) --all-features\n\ncargo-clean: FORCE\n\tcargo clean\n\npostbuild: build FORCE\n\tcd postbuild && $(MAKE) -f Makefile\n\npostbuild-install: FORCE\n\tcd postbuild && $(MAKE) -f Makefile install\n\npostbuild-clean: FORCE\n\tcd postbuild && $(MAKE) -f Makefile clean\n\npostbuild-distclean: FORCE\n\tcd postbuild && $(MAKE) -f Makefile distclean\n\ncheck: cargo-test\n\ninstall: postbuild-install\n\nclean: cargo-clean postbuild-clean\n\ndistclean: cargo-clean postbuild-distclean\n\nFORCE:\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.8935546875,
          "content": "# Pushpin\n\nWebsite: https://pushpin.org/  \nForum: https://community.fastly.com/c/pushpin/12\n\nPushpin is a reverse proxy server written in Rust & C++ that makes it easy to implement WebSocket, HTTP streaming, and HTTP long-polling services. The project is unique among realtime push solutions in that it is designed to address the needs of API creators. Pushpin is transparent to clients and integrates easily into an API stack.\n\n## How it works\n\nPushpin is placed in the network path between the backend and any clients:\n\n<p align=\"center\">\n  <img src=\"https://pushpin.org/image/pushpin-abstract.png\" alt=\"pushpin-abstract\"/>\n</p>\n\nPushpin communicates with backend web applications using regular, short-lived HTTP requests. This allows backend applications to be written in any language and use any webserver. There are two main integration points:\n\n1. The backend must handle proxied requests. For HTTP, each incoming request is proxied to the backend. For WebSockets, the activity of each connection is translated into a series of HTTP requests<sup>[1](#proxy-modes)</sup> sent to the backend. Pushpin's behavior is determined by how the backend responds to these requests.\n2. The backend must tell Pushpin to push data. Regardless of how clients are connected, data may be pushed to them by making an HTTP POST request to Pushpin's private control API (`http://localhost:5561/publish/` by default). Pushpin will inject this data into any client connections as necessary.\n\nTo assist with integration, there are [libraries](https://pushpin.org/docs/usage/#libraries) for many backend languages and frameworks. Pushpin has no libraries on the client side because it is transparent to clients.\n\n## Example\n\nTo create an HTTP streaming connection, respond to a proxied request with special headers `Grip-Hold` and `Grip-Channel`<sup>[2](#grip)</sup>:\n\n```http\nHTTP/1.1 200 OK\nContent-Type: text/plain\nContent-Length: 22\nGrip-Hold: stream\nGrip-Channel: test\n\nwelcome to the stream\n```\n\nWhen Pushpin receives the above response from the backend, it will process it and send an initial response to the client that instead looks like this:\n\n```http\nHTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\nConnection: Transfer-Encoding\n\nwelcome to the stream\n```\n\nPushpin eats the special headers and switches to chunked encoding (notice there's no `Content-Length`). The request between Pushpin and the backend is now complete, but the request between the client and Pushpin remains held open. The request is subscribed to a channel called `test`.\n\nData can then be pushed to the client by publishing data on the `test` channel:\n\n```bash\ncurl -d '{ \"items\": [ { \"channel\": \"test\", \"formats\": { \"http-stream\": \\\n    { \"content\": \"hello there\\n\" } } } ] }' \\\n    http://localhost:5561/publish\n```\n\nThe client would then see the line \"hello there\" appended to the response stream. Ta-da, transparent realtime push!\n\nFor more details, see the [HTTP streaming](https://pushpin.org/docs/usage/#http-streaming) section of the documentation. Pushpin also supports [HTTP long-polling](https://pushpin.org/docs/usage/#http-long-polling) and [WebSockets](https://pushpin.org/docs/usage/#websockets).\n\n## Example using a library\n\nUsing a library on the backend makes integration even easier. Here's another HTTP streaming example, similar to the one shown above, except using Pushpin's [Django library](https://github.com/fanout/django-grip). Please note that Pushpin is not Python/Django-specific and there are backend libraries for [other languages/frameworks, too](https://pushpin.org/docs/usage/#libraries).\n\nThe Django library requires configuration in `settings.py`:\n```python\nMIDDLEWARE_CLASSES = (\n    'django_grip.GripMiddleware',\n    ...\n)\n\nGRIP_PROXIES = [{'control_uri': 'http://localhost:5561'}]\n```\n\nHere's a simple view:\n```python\nfrom django.http import HttpResponse\nfrom django_grip import set_hold_stream\n\ndef myendpoint(request):\n    if request.method == 'GET':\n        # subscribe every incoming request to a channel in stream mode\n        set_hold_stream(request, 'test')\n        return HttpResponse('welcome to the stream\\n', content_type='text/plain')\n    ...\n```\n\nWhat happens here is the `set_hold_stream()` method flags the request as needing to turn into a stream, bound to channel `test`. The middleware will see this and add the necessary `Grip-Hold` and `Grip-Channel` headers to the response.\n\nPublishing data is easy:\n```python\nfrom gripcontrol import HttpStreamFormat\nfrom django_grip import publish\n\npublish('test', HttpStreamFormat('hello there\\n'))\n```\n\n## Example using WebSockets\n\nPushpin supports WebSockets by converting connection activity/messages into HTTP requests and sending them to the backend. For this example, we'll use Pushpin's [Express library](https://github.com/fanout/js-serve-grip). As before, please note that Pushpin is not Node/Express-specific and there are backend libraries for [other languages/frameworks, too](https://pushpin.org/docs/usage/#libraries).\n\nThe Express library requires configuration and setting up a middleware handler:\n```javascript\nconst express = require('express');\nconst { ServeGrip } = require('@fanoutio/serve-grip');\n\nvar app = express();\n\n// Instantiate the middleware and register it with Express\nconst serveGrip = new ServeGrip({\n    grip: { 'control_uri': 'http://localhost:5561', 'key': 'changeme' }\n});\napp.use(serveGrip);\n\n// Instantiate the publisher to use from your code to publish messages\nconst publisher = serveGrip.getPublisher();\n\napp.get('/hello', (req, res) => {\n    res.send('hello world\\n');\n});\n```\n\nWith that structure in place, here's an example of a WebSocket endpoint:\n```javascript\nconst { WebSocketMessageFormat } = require( '@fanoutio/grip' );\n\napp.post('/websocket', async (req, res) => {\n    const { wsContext } = req.grip;\n\n    // If this is a new connection, accept it and subscribe it to a channel\n    if (wsContext.isOpening()) {\n        wsContext.accept();\n        wsContext.subscribe('all');\n    }\n\n    while (wsContext.canRecv()) {\n        var message = wsContext.recv();\n\n        // If return value is null then connection is closed\n        if (message == null) {\n            wsContext.close();\n            break;\n        }\n\n        // broadcast the message to everyone connected\n        await publisher.publishFormats('all', WebSocketMessageFormat(message));\n    }\n\n    res.end();\n});\n```\n\nThe above code binds all incoming connections to a channel called `all`. Any received messages are published out to all connected clients.\n\nWhat's particularly noteworthy is that the above endpoint is stateless. The app doesn't keep track of connections, and the handler code only runs whenever messages arrive. Restarting the app won't disconnect clients.\n\nThe `while` loop is deceptive. It looks like it's looping for the lifetime of the WebSocket connection, but what it's really doing is looping through a batch of WebSocket messages that was just received via HTTP. Often this will be one message, and so the loop performs one iteration and then exits. Similarly, the `wsContext` object only exists for the duration of the handler invocation, rather than for the lifetime of the connection as you might expect. It may look like socket code, but it's all an illusion. :tophat:\n\nFor details on the underlying protocol conversion, see the [WebSocket-Over-HTTP Protocol spec](https://pushpin.org/docs/protocols/websocket-over-http/).\n\n## Example without a webserver\n\nPushpin can also connect to backend servers via ZeroMQ instead of HTTP. This may be preferred for writing lower-level services where a real webserver isn't needed. The messages exchanged over the ZeroMQ connection contain the same information as HTTP, encoded as TNetStrings.\n\nTo use a ZeroMQ backend, first make sure there's an appropriate route in Pushpin's `routes` file:\n```\n* zhttpreq/tcp://127.0.0.1:10000\n```\n\nThe above line tells Pushpin to bind a REQ-compatible socket on port 10000 that handlers can connect to.\n\nActivating an HTTP stream is as easy as responding on a REP socket:\n```python\nimport zmq\nimport tnetstring\n\nzmq_context = zmq.Context()\nsock = zmq_context.socket(zmq.REP)\nsock.connect('tcp://127.0.0.1:10000')\n\nwhile True:\n    req = tnetstring.loads(sock.recv()[1:])\n\n    resp = {\n        'id': req['id'],\n        'code': 200,\n        'reason': 'OK',\n        'headers': [\n            ['Grip-Hold', 'stream'],\n            ['Grip-Channel', 'test'],\n            ['Content-Type', 'text/plain']\n        ],\n        'body': 'welcome to the stream\\n'\n    }\n\n    sock.send('T' + tnetstring.dumps(resp))\n```\n\n## Why another realtime solution?\n\nPushpin is an ambitious project with two primary goals:\n\n* Make realtime API development easier. There are many other solutions out there that are excellent for building realtime apps, but few are useful within the context of *APIs*. For example, you can't use Socket.io to build Twitter's streaming API. A new kind of project is needed in this case.\n* Make realtime push behavior delegable. The reason there isn't a realtime push CDN yet is because the standards and practices necessary for delegating to a third party in a transparent way are not yet established. Pushpin is more than just another realtime push solution; it represents the next logical step in the evolution of realtime web architectures.\n\nTo really understand Pushpin, you need to think of it as more like a gateway than a message queue. Pushpin does not persist data and it is agnostic to your application's data model. Your backend provides the mapping to whatever that data model is. Tools like Kafka and RabbitMQ are complementary. Pushpin is also agnostic to your API definition. Clients don't necessarily subscribe to \"channels\" or receive \"messages\". Clients make HTTP requests or send WebSocket frames, and your backend decides the meaning of those inputs. Pushpin could perhaps be awkwardly described as \"a proxy server that enables web services to delegate the handling of realtime push primitives\".\n\nOn a practical level, there are many benefits to Pushpin that you don't see anywhere else:\n\n* The proxy design allows Pushpin to fit nicely within an API stack. This means it can inherit other facilities from your REST API, such as authentication, logging, throttling, etc. It can be combined with an API management system.\n* As your API scales, a multi-tiered architecture will become inevitable. With Pushpin you can easily do this from the start.\n* It works well with microservices. Each microservice can have its own Pushpin instance. No central bus needed.\n* Hot reload. Restarting the backend doesn't disconnect clients.\n* In the case of WebSocket messages being proxied out as HTTP requests, the messages may be handled statelessly by the backend. Messages from a single connection can even be load balanced across a set of backend instances.\n\n## Install\n\nCheck out the [the Install guide](https://pushpin.org/docs/install/), which covers how to install and run. There are packages available for Linux (Debian, Ubuntu, CentOS, Red Hat), Mac (Homebrew), or you can build from source.\n\nBy default, Pushpin listens on port 7999 and requests are handled by its internal test handler. You can confirm the server is working by browsing to `http://localhost:7999/`. Next, you should modify the `routes` config file to route requests to your backend webserver. See [Configuration](https://pushpin.org/docs/configuration/).\n\n## Scalability\n\nPushpin is horizontally scalable. Instances don’t talk to each other, and sticky routing is not needed. Backends must publish data to all instances to ensure clients connected to any instance will receive the data. Most of the backend libraries support configuring more than one Pushpin instance, so that a single publish call will send data to multiple instances at once.\n\nOptionally, ZeroMQ PUB/SUB can be used to send data to Pushpin instead of using HTTP POST. When this method is used, subscription information is forwarded to each publisher, such that data will only be published to instances that have listeners.\n\nAs for vertical scalability, Pushpin has been tested with up to [1 million concurrent connections](https://github.com/fanout/pushpin-c1m) running on a single DigitalOcean droplet with 8 CPU cores. In practice, you may want to plan for fewer connections per instance, depending on your throughput. The new connection accept rate is about 800/sec (though this also depends on the speed of your backend), and the message throughput is about 8,000/sec. The important thing is that Pushpin is horizontally scalable which is effectively limitless.\n\n## What does the name mean?\n\nPushpin means to \"pin\" connections open for \"pushing\".\n\n## License\n\nPushpin is offered under the Apache License, Version 2.0. See the LICENSE file.\n\n## Footnotes\n\n<a name=\"proxy-modes\">1</a>: Pushpin can communicate WebSocket activity to the backend using either HTTP or WebSockets. Conversion to HTTP is generally recommended as it makes the backend easier to reason about.\n\n<a name=\"grip\">2</a>: GRIP (Generic Realtime Intermediary Protocol) is the name of Pushpin's backend protocol. More about that [here](https://pushpin.org/docs/protocols/grip/).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.87109375,
          "content": "## Report a security issue\n\nThe project team welcomes security reports and is committed to providing prompt attention to security issues. Security issues should be reported privately via [Fastly’s security issue reporting process](https://www.fastly.com/security/report-security-issue).\n\n## Security advisories\n\nRemediation of security vulnerabilities is prioritized by the project team. The project team endeavors to coordinate remediation with third-party stakeholders, and is committed to transparency in the disclosure process. The team announces security issues via [GitHub](https://github.com/fastly/pushpin/releases) as well as [RustSec](https://rustsec.org/advisories/) on a best-effort basis.\n\nNote that communications related to security issues in Fastly-maintained OSS as described here are distinct from [Fastly Security Advisories](https://www.fastly.com/security-advisories).\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 15.8623046875,
          "content": "use std::collections::HashMap;\nuse std::env;\nuse std::error::Error;\nuse std::ffi::OsStr;\nuse std::fmt;\nuse std::fs::{self, File};\nuse std::io::{self, BufRead, Write};\nuse std::os::unix::ffi::OsStrExt;\nuse std::path::{Path, PathBuf};\nuse std::process::{Command, ExitStatus, Output, Stdio};\nuse std::str::FromStr;\nuse time::macros::format_description;\nuse time::OffsetDateTime;\n\nconst DEFAULT_PREFIX: &str = \"/usr/local\";\n\nfn get_version() -> String {\n    let mut version = env!(\"CARGO_PKG_VERSION\").to_string();\n\n    if version.ends_with(\"-dev\") {\n        let format = format_description!(\"[year][month][day]\");\n\n        let date_str = OffsetDateTime::now_utc().format(&format).unwrap();\n\n        version.push_str(&format!(\"-{}\", date_str));\n    }\n\n    version\n}\n\n#[derive(Clone)]\nstruct LibVersion {\n    maj: u16,\n    min: u16,\n    orig: String,\n}\n\n#[derive(Debug)]\nstruct ParseVersionError;\n\nimpl fmt::Display for ParseVersionError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        Ok(write!(f, \"failed to parse version\")?)\n    }\n}\n\nimpl Error for ParseVersionError {}\n\nimpl FromStr for LibVersion {\n    type Err = ParseVersionError;\n\n    fn from_str(s: &str) -> Result<LibVersion, Self::Err> {\n        let parts: Vec<&str> = s.split('.').collect();\n\n        if parts.len() < 2 {\n            return Err(ParseVersionError);\n        }\n\n        let (maj, min): (u16, u16) = match (parts[0].parse(), parts[1].parse()) {\n            (Ok(maj), Ok(min)) => (maj, min),\n            _ => return Err(ParseVersionError),\n        };\n\n        Ok(LibVersion {\n            maj,\n            min,\n            orig: s.to_string(),\n        })\n    }\n}\n\nfn check_version(\n    pkg: &str,\n    found: LibVersion,\n    expect_maj: u16,\n    expect_min: u16,\n) -> Result<(), Box<dyn Error>> {\n    if found.maj < expect_maj || (found.maj == expect_maj && found.min < expect_min) {\n        return Err(format!(\n            \"{} version >={}.{} required, found: {}\",\n            pkg, expect_maj, expect_min, found.orig,\n        )\n        .into());\n    }\n\n    Ok(())\n}\n\nfn prefixed_vars(prefix: &str) -> HashMap<String, String> {\n    let mut out = HashMap::new();\n\n    out.insert(\"BINDIR\".into(), format!(\"{}/bin\", prefix));\n    out.insert(\"CONFIGDIR\".into(), format!(\"{}/etc\", prefix));\n    out.insert(\"LIBDIR\".into(), format!(\"{}/lib\", prefix));\n    out.insert(\"LOGDIR\".into(), \"/var/log\".into());\n    out.insert(\"RUNDIR\".into(), \"/var/run\".into());\n\n    out\n}\n\nfn env_or_default(name: &str, defaults: &HashMap<String, String>) -> String {\n    match env::var(name) {\n        Ok(s) => s,\n        Err(_) => defaults.get(name).unwrap().to_string(),\n    }\n}\n\nfn write_if_different(dest: &Path, content: &[u8]) -> Result<(), Box<dyn Error>> {\n    let do_write = match fs::read(dest) {\n        Ok(v) => v != content,\n        Err(e) if e.kind() == io::ErrorKind::NotFound => true,\n        Err(e) => return Err(e.into()),\n    };\n\n    if do_write {\n        fs::write(dest, content)?;\n    }\n\n    Ok(())\n}\n\nfn write_cpp_conf_pri(\n    dest: &Path,\n    release: bool,\n    include_paths: &[&Path],\n    deny_warnings: bool,\n) -> Result<(), Box<dyn Error>> {\n    let mut out = Vec::new();\n\n    writeln!(&mut out, \"CONFIG -= debug_and_release\")?;\n\n    if release {\n        writeln!(&mut out, \"CONFIG += release\")?;\n    } else {\n        writeln!(&mut out, \"CONFIG += debug\")?;\n    }\n\n    writeln!(&mut out)?;\n\n    for path in include_paths {\n        writeln!(&mut out, \"INCLUDEPATH += {}\", path.display())?;\n    }\n\n    writeln!(&mut out)?;\n\n    if deny_warnings {\n        writeln!(&mut out, \"QMAKE_CXXFLAGS += \\\"-Werror\\\"\")?;\n    }\n\n    write_if_different(dest, &out)\n}\n\nfn write_postbuild_conf_pri(\n    dest: &Path,\n    bin_dir: &str,\n    lib_dir: &str,\n    config_dir: &str,\n    run_dir: &str,\n    log_dir: &str,\n) -> Result<(), Box<dyn Error>> {\n    let mut out = Vec::new();\n\n    writeln!(&mut out, \"BINDIR = {}\", bin_dir)?;\n    writeln!(&mut out, \"LIBDIR = {}/pushpin\", lib_dir)?;\n    writeln!(&mut out, \"CONFIGDIR = {}/pushpin\", config_dir)?;\n    writeln!(&mut out, \"RUNDIR = {}/pushpin\", run_dir)?;\n    writeln!(&mut out, \"LOGDIR = {}/pushpin\", log_dir)?;\n\n    write_if_different(dest, &out)\n}\n\n// returned vec size guaranteed >= 1\nfn get_args_lossy(command: &mut Command) -> Vec<String> {\n    let mut args = vec![command.get_program().to_string_lossy().into_owned()];\n\n    for s in command.get_args() {\n        args.push(s.to_string_lossy().into_owned());\n    }\n\n    args\n}\n\n// convert Result<Output> to Result<ExitStatus>, separating stdout\nfn take_stdout(result: io::Result<Output>) -> (io::Result<ExitStatus>, Vec<u8>) {\n    match result {\n        Ok(output) => (Ok(output.status), output.stdout),\n        Err(e) => (Err(e), Vec::new()),\n    }\n}\n\nfn check_command_result(\n    program: &str,\n    result: io::Result<ExitStatus>,\n) -> Result<(), Box<dyn Error>> {\n    let status = match result {\n        Ok(status) => status,\n        Err(e) => return Err(format!(\"{} failed: {}\", program, e).into()),\n    };\n\n    if !status.success() {\n        return Err(format!(\"{} failed, {}\", program, status).into());\n    }\n\n    Ok(())\n}\n\nfn check_command(command: &mut Command) -> Result<(), Box<dyn Error>> {\n    let args = get_args_lossy(command);\n\n    println!(\"{}\", args.join(\" \"));\n\n    check_command_result(&args[0], command.status())\n}\n\nfn check_command_capture_stdout(command: &mut Command) -> Result<Vec<u8>, Box<dyn Error>> {\n    let args = get_args_lossy(command);\n\n    println!(\"{}\", args.join(\" \"));\n\n    // don't capture stderr\n    let command = command.stderr(Stdio::inherit());\n\n    let (result, output) = take_stdout(command.output());\n    check_command_result(&args[0], result)?;\n\n    Ok(output)\n}\n\nfn check_qmake(qmake_path: &Path) -> Result<LibVersion, Box<dyn Error>> {\n    let version: LibVersion = {\n        let output =\n            check_command_capture_stdout(Command::new(qmake_path).args([\"-query\", \"QT_VERSION\"]))?;\n\n        let s = String::from_utf8(output)?;\n        let s = s.trim();\n\n        match s.parse() {\n            Ok(v) => v,\n            Err(_) => return Err(format!(\"unexpected qt version string: [{}]\", s).into()),\n        }\n    };\n\n    check_version(\"qt\", version.clone(), 5, 12)?;\n\n    Ok(version)\n}\n\nfn find_in_path(name: &str) -> Option<PathBuf> {\n    for d in env::var(\"PATH\").unwrap_or_default().split(':') {\n        if d.is_empty() {\n            continue;\n        }\n\n        let path = Path::new(d).join(name);\n        if path.exists() {\n            return Some(path);\n        }\n    }\n\n    None\n}\n\nfn find_qmake() -> Result<(PathBuf, LibVersion), Box<dyn Error>> {\n    let mut errors = Vec::new();\n\n    // check for a usable qmake in PATH\n\n    let names = &[\"qmake\", \"qmake6\", \"qmake5\"];\n\n    for name in names {\n        if let Some(p) = find_in_path(name) {\n            match check_qmake(&p) {\n                Ok(version) => return Ok((p, version)),\n                Err(e) => errors.push(format!(\"skipping {}: {}\", p.display(), e)),\n            }\n        }\n    }\n\n    if errors.is_empty() {\n        errors.push(format!(\"none of ({}) found in PATH\", names.join(\", \")));\n    }\n\n    // check pkg-config\n\n    let pkg = \"Qt5Core\";\n\n    match pkg_config::get_variable(pkg, \"host_bins\") {\n        Ok(host_bins) if !host_bins.is_empty() => {\n            let host_bins = PathBuf::from(host_bins);\n\n            match fs::canonicalize(host_bins.join(\"qmake\")) {\n                Ok(p) => match check_qmake(&p) {\n                    Ok(version) => return Ok((p, version)),\n                    Err(e) => errors.push(format!(\"skipping {}: {}\", p.display(), e)),\n                },\n                Err(e) => errors.push(format!(\"qmake not found in {}: {}\", host_bins.display(), e)),\n            }\n        }\n        Ok(_) => errors.push(format!(\n            \"pkg-config variable host_bins does not exist for {}\",\n            pkg\n        )),\n        Err(e) => errors.push(format!(\"pkg-config error for {}: {}\", pkg, e)),\n    }\n\n    Err(format!(\"unable to find a usable qmake: {}\", errors.join(\", \")).into())\n}\n\nfn get_qmake() -> Result<(PathBuf, LibVersion), Box<dyn Error>> {\n    match env::var(\"QMAKE\") {\n        Ok(s) => {\n            let path = PathBuf::from(s);\n            let version = check_qmake(&path)?;\n\n            Ok((path, version))\n        }\n        Err(env::VarError::NotPresent) => find_qmake(),\n        Err(env::VarError::NotUnicode(_)) => Err(\"QMAKE not unicode\".into()),\n    }\n}\n\nfn contains_file_prefix(dir: &Path, prefix: &str) -> Result<bool, io::Error> {\n    for entry in fs::read_dir(dir)? {\n        let entry = entry?;\n\n        if entry.file_name().as_bytes().starts_with(prefix.as_bytes()) {\n            return Ok(true);\n        }\n    }\n\n    Ok(false)\n}\n\nfn get_qt_lib_prefix(lib_dir: &Path, version_maj: u16) -> Result<String, Box<dyn Error>> {\n    let prefixes = if cfg!(target_os = \"macos\") {\n        [format!(\"Qt{}\", version_maj), \"Qt\".to_string()]\n    } else {\n        [format!(\"libQt{}\", version_maj), \"libQt\".to_string()]\n    };\n\n    for prefix in &prefixes {\n        if contains_file_prefix(lib_dir, prefix)? {\n            return Ok(prefix.strip_prefix(\"lib\").unwrap_or(prefix).to_string());\n        }\n    }\n\n    Err(format!(\n        \"no files in {} beginning with any of: {}\",\n        lib_dir.display(),\n        prefixes.join(\", \")\n    )\n    .into())\n}\n\nfn find_boost_include_dir() -> Result<PathBuf, Box<dyn Error>> {\n    let paths = [\"/usr/local/include\", \"/usr/include\"];\n    let version_filename = \"boost/version.hpp\";\n\n    for path in paths {\n        let path = PathBuf::from(path);\n        let full_path = path.join(version_filename);\n\n        if !full_path.exists() {\n            continue;\n        }\n\n        let file = File::open(&full_path)?;\n        let reader = io::BufReader::new(file);\n\n        let mut version_line = None;\n\n        for line in reader.lines() {\n            match line {\n                Ok(s) if s.contains(\"#define BOOST_LIB_VERSION\") => version_line = Some(s),\n                Ok(_) => continue,\n                Err(e) => {\n                    return Err(format!(\"failed to read {}: {}\", full_path.display(), e).into())\n                }\n            }\n        }\n\n        let version_line = match version_line {\n            Some(s) => s,\n            None => return Err(format!(\"version line not found in {}\", full_path.display()).into()),\n        };\n\n        let parts: Vec<&str> = version_line.split('\"').collect();\n\n        if parts.len() < 2 {\n            return Err(format!(\"failed to parse version line in {}\", full_path.display()).into());\n        }\n\n        let version = parts[1].replace('_', \".\");\n\n        let version = match version.parse() {\n            Ok(v) => v,\n            Err(_) => return Err(format!(\"unexpected boost version string: {}\", version).into()),\n        };\n\n        check_version(\"boost\", version, 1, 71)?;\n\n        return Ok(path);\n    }\n\n    Err(format!(\n        \"{} not found in any of: {}\",\n        version_filename,\n        paths.join(\", \")\n    )\n    .into())\n}\n\nfn contains_subslice<T: PartialEq>(haystack: &[T], needle: &[T]) -> bool {\n    haystack.windows(needle.len()).any(|w| w == needle)\n}\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let crate_dir = env::var(\"CARGO_MANIFEST_DIR\").unwrap();\n\n    cbindgen::generate(crate_dir).map_or_else(\n        |error| match error {\n            cbindgen::Error::ParseSyntaxError { .. } => {}\n            e => panic!(\"{:?}\", e),\n        },\n        |bindings| {\n            bindings.write_to_file(\"target/include/rust/bindings.h\");\n        },\n    );\n\n    let (qmake_path, qt_version) = get_qmake()?;\n\n    let qt_install_libs = {\n        let output = check_command_capture_stdout(\n            Command::new(&qmake_path).args([\"-query\", \"QT_INSTALL_LIBS\"]),\n        )?;\n\n        let libs_dir = PathBuf::from(String::from_utf8(output)?.trim());\n\n        fs::canonicalize(&libs_dir)\n            .map_err(|_| format!(\"QT_INSTALL_LIBS dir {} not found\", libs_dir.display()))?\n    };\n\n    let qt_lib_prefix = get_qt_lib_prefix(&qt_install_libs, qt_version.maj)?;\n\n    let boost_include_dir = match env::var(\"BOOST_INCLUDE_DIR\") {\n        Ok(s) => PathBuf::from(s),\n        Err(env::VarError::NotPresent) => find_boost_include_dir()?,\n        Err(env::VarError::NotUnicode(_)) => return Err(\"BOOST_INCLUDE_DIR not unicode\".into()),\n    };\n\n    let default_vars = {\n        let prefix = match env::var(\"PREFIX\") {\n            Ok(s) => Some(s),\n            Err(env::VarError::NotPresent) => None,\n            Err(env::VarError::NotUnicode(_)) => return Err(\"PREFIX not unicode\".into()),\n        };\n\n        if let Some(prefix) = prefix {\n            prefixed_vars(&prefix)\n        } else {\n            prefixed_vars(DEFAULT_PREFIX)\n        }\n    };\n\n    let bin_dir = env_or_default(\"BINDIR\", &default_vars);\n    let config_dir = env_or_default(\"CONFIGDIR\", &default_vars);\n    let lib_dir = env_or_default(\"LIBDIR\", &default_vars);\n    let log_dir = env_or_default(\"LOGDIR\", &default_vars);\n    let run_dir = env_or_default(\"RUNDIR\", &default_vars);\n\n    let root_dir = PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\")?);\n    let out_dir = PathBuf::from(env::var(\"OUT_DIR\")?);\n    let profile = env::var(\"PROFILE\")?;\n\n    let cpp_pro = root_dir.join(\"src/cpp.pro\");\n    let cpp_tests_pro = root_dir.join(\"src/cpptests.pro\");\n\n    for dir in [\"moc\", \"obj\", \"test-moc\", \"test-obj\", \"test-work\"] {\n        fs::create_dir_all(out_dir.join(dir))?;\n    }\n\n    let mut include_paths = Vec::new();\n\n    include_paths.push(out_dir.as_ref());\n\n    if boost_include_dir != Path::new(\"/usr/include\") {\n        include_paths.push(boost_include_dir.as_ref());\n    }\n\n    let deny_warnings = match env::var(\"CARGO_ENCODED_RUSTFLAGS\") {\n        Ok(s) => {\n            let flags: Vec<&str> = s.split('\\x1f').collect();\n\n            contains_subslice(&flags, &[\"-D\", \"warnings\"])\n        }\n        Err(env::VarError::NotPresent) => false,\n        Err(env::VarError::NotUnicode(_)) => {\n            return Err(\"CARGO_ENCODED_RUSTFLAGS not unicode\".into())\n        }\n    };\n\n    write_cpp_conf_pri(\n        &out_dir.join(\"conf.pri\"),\n        profile == \"release\",\n        &include_paths,\n        deny_warnings,\n    )?;\n\n    write_postbuild_conf_pri(\n        &Path::new(\"postbuild\").join(\"conf.pri\"),\n        &bin_dir,\n        &lib_dir,\n        &config_dir,\n        &run_dir,\n        &log_dir,\n    )?;\n\n    check_command(Command::new(&qmake_path).args([\n        OsStr::new(\"-o\"),\n        out_dir.join(\"Makefile\").as_os_str(),\n        cpp_pro.as_os_str(),\n    ]))?;\n\n    check_command(Command::new(&qmake_path).args([\n        OsStr::new(\"-o\"),\n        out_dir.join(\"Makefile.test\").as_os_str(),\n        cpp_tests_pro.as_os_str(),\n    ]))?;\n\n    check_command(\n        Command::new(&qmake_path)\n            .args([\"-o\", \"Makefile\", \"postbuild.pro\"])\n            .current_dir(\"postbuild\"),\n    )?;\n\n    check_command(\n        Command::new(\"make\")\n            .env(\"MAKEFLAGS\", env::var(\"CARGO_MAKEFLAGS\")?)\n            .args([\"-f\", \"Makefile\"])\n            .current_dir(&out_dir),\n    )?;\n\n    check_command(\n        Command::new(\"make\")\n            .env(\"MAKEFLAGS\", env::var(\"CARGO_MAKEFLAGS\")?)\n            .args([\"-f\", \"Makefile.test\"])\n            .current_dir(&out_dir),\n    )?;\n\n    println!(\"cargo:rustc-env=APP_VERSION={}\", get_version());\n    println!(\"cargo:rustc-env=CONFIG_DIR={}/pushpin\", config_dir);\n    println!(\"cargo:rustc-env=LIB_DIR={}/pushpin\", lib_dir);\n\n    println!(\"cargo:rustc-cfg=qt_lib_prefix=\\\"{}\\\"\", qt_lib_prefix);\n\n    println!(\"cargo:rustc-link-search={}\", out_dir.display());\n\n    if cfg!(target_os = \"macos\") {\n        println!(\n            \"cargo:rustc-link-search=framework={}\",\n            qt_install_libs.display()\n        );\n    } else {\n        println!(\"cargo:rustc-link-search={}\", qt_install_libs.display());\n    }\n\n    println!(\"cargo:rerun-if-env-changed=RELEASE\");\n    println!(\"cargo:rerun-if-env-changed=PREFIX\");\n    println!(\"cargo:rerun-if-env-changed=BINDIR\");\n    println!(\"cargo:rerun-if-env-changed=CONFIGDIR\");\n    println!(\"cargo:rerun-if-env-changed=LIBDIR\");\n    println!(\"cargo:rerun-if-env-changed=LOGDIR\");\n    println!(\"cargo:rerun-if-env-changed=RUNDIR\");\n    println!(\"cargo:rerun-if-changed=src\");\n    println!(\"cargo:rerun-if-changed=cbindgen.toml\");\n\n    Ok(())\n}\n"
        },
        {
          "name": "cbindgen.toml",
          "type": "blob",
          "size": 0.236328125,
          "content": "include_guard = \"RUST_BINDINGS_H\"\nnamespace = \"ffi\"\n\nafter_includes = \"\"\"\n// zmq crate version 0.10 bundles zeromq 4.3\n#define WZMQ_VERSION_MAJOR 4\n#define WZMQ_VERSION_MINOR 3\n\"\"\"\n\n[parse]\nparse_deps = true\ninclude = [\"jsonwebtoken\", \"zmq\"]\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "header.APACHE2",
          "type": "blob",
          "size": 0.5478515625,
          "content": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n"
        },
        {
          "name": "package.sh",
          "type": "blob",
          "size": 0.6298828125,
          "content": "#!/bin/sh\nset -e\n\nif [ $# -lt 1 ]; then\n\techo \"usage: $0 [version]\"\n\texit 1\nfi\n\nVERSION=$1\n\nDESTDIR=build/pushpin-$VERSION\n\nmkdir -p $DESTDIR\n\ncp -a .gitignore benches build.rs Cargo.lock Cargo.toml cbindgen.toml CHANGELOG.md examples LICENSE Makefile postbuild SECURITY.md README.md src tools $DESTDIR\n\nsed -i.orig -e \"s/^version = .*/version = \\\"$VERSION\\\"/g\" $DESTDIR/Cargo.toml\nrm $DESTDIR/Cargo.toml.orig\n\ncd $DESTDIR\nmkdir -p .cargo\ncat >.cargo/config.toml <<EOF\n[source.crates-io]\nreplace-with = \"vendored-sources\"\n\n[source.vendored-sources]\ndirectory = \"vendor\"\nEOF\ncargo vendor\ncd ..\n\ntar jcvf pushpin-$VERSION.tar.bz2 pushpin-$VERSION\n"
        },
        {
          "name": "postbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}