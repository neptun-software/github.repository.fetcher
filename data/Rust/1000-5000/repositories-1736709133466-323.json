{
  "metadata": {
    "timestamp": 1736709133466,
    "page": 323,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tweag/nickel",
      "stars": 2464,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.009765625,
          "content": "use flake\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.353515625,
          "content": "# Cargo generated\n/target/\n\n# Nix generated\n/result*\n/scripts/tmp.toml\n\n# direnv generated\n.direnv/\n\n# wasm-pack\n/pkg/\n\n# rustfmt Backup file\n**/*.rs.bk\n\n/node_modules\n/lsp/vscode-extension/node_modules\n/lsp/vscode-extension/out\n\n# Ctags output\n/tags\n\n# pre-commit-hooks\n/.pre-commit-config.yaml\n\n# Python virtual env\n.venv/\nvenv/\n\n# helix configuration\n.helix/\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.1484375,
          "content": "{\n    \"default\": true,\n    \"MD013\": {\n        \"code_blocks\": false,\n        \"tables\": false\n    },\n    \"MD024\": {\n        \"siblings_only\": true\n    }\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscodeignore",
          "type": "blob",
          "size": 0.53515625,
          "content": ".vscode/**\n**/*.ts\n**/*.map\n.gitignore\n**/tsconfig.json\n**/tsconfig.base.json\ncontributing.md\n.travis.yml\nlsp/client-extension/node_modules/**\n!lsp/client-extension/node_modules/vscode-jsonrpc/**\n!lsp/client-extension/node_modules/vscode-languageclient/**\n!lsp/client-extension/node_modules/vscode-languageserver-protocol/**\n!lsp/client-extension/node_modules/vscode-languageserver-types/**\n!lsp/client-extension/node_modules/{minimatch,brace-expansion,concat-map,balanced-match}/**\n!lsp/client-extension/node_modules/{semver,lru-cache,yallist}/**\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.873046875,
          "content": "# Contributing to Nickel\n\nWelcome, and thanks for considering contributing to the Nickel project!\n\nA great first step is to join our\n[![Discord](https://img.shields.io/badge/Discord-100000?style=flat&logo=Discord&logoColor=C3C3C3&labelColor=4179DA&color=010101)][discord]\nserver.\n\n## Contributing\n\nThere are many useful ways to help which don't involve modifying the source of\nNickel:\n\n- Improving the documentation, user-facing or internal, technical or high-level\n- Growing the Nickel ecosystem, by providing the community with libraries\n  (e.g. a collection of contracts for new use cases), augmenting the\n  standard library, or improving the tooling (such as code editor integration).\n- Reviewing changes from other contributors.\n\nThe rest of this document is concerned with any changes impacting the `nickel`\nrepository, which may or may not involve changing the source of Nickel.\n\n## Table of content\n\n1. [Preamble](#preamble)\n1. [Resources](#resources)\n1. [Set up a development environment](#set-up-a-development-environment)\n1. [How to submit changes](#how-to-submit-changes)\n\n## Preamble\n\nBefore contributing any non-trivial change to this repository, please first\ncheck for the existence of related work such as issues or open pull requests. If\nthere are none, it's better to discuss the change you wish to make via an issue,\nby email, or using any other method with the maintainers of this repository\n(listed below) before actually submitting something.\n\n## Resources\n\n### Documentation\n\nThe following resources are oriented toward Nickel users:\n\n- The [README](./README.md) and the [design rationale](./RATIONALE.md)\n- The [blog post series][blog-series] and the [release blog post][blog-release].\n- The [user manual][user-manual].\n\nFor Nickel contributors (or aspiring contributors), the following technical\ndocumentation is relevant as well:\n\n- The [crate documentation][doc-crate].\n- The [RFCs][rfcs]. There is currently no well established process for RFCs, but\n  as a rule of thumb, impactful changes to the design or the implementation of\n  the language are technically discussed and documented in a dedicated RFC\n  document.\n- The [technical notes][doc-notes]. Various notes gathering thoughts, proposals,\n  or issues about an aspect of the language at one point in time that the author\n  thought important to keep for posterity. They are usually more informal than\n  RFCs, of smaller scope, and their content may become obsolete more easily.\n\n### People\n\nNickel is maintained by [Tweag][tweag]. The current lead maintainer is Yann\nHamdaoui (@yannham).\n\nYou can find some of us on our [discord channel][nickel-chat] (and in\nparticular the Devs room), or fire an email at `nickel-lang@tweag.io`.\n\n## Set up a development environment\n\nPlease refer to [`HACKING.md`](./HACKING.md) to set up a development environment\nfor Nickel, as well as adding or running tests and benchmarks.\n\n## How to submit changes\n\n**Try to keep pull requests small and focused**. Avoid packing refactoring,\ncosmetic changes or anything not directly related to your original goal in the\nsame pull request. If preliminary steps make sense as standalone changes, don't\nhesitate to split your pull request into several ones. There are a couple\naspects to consider when working on Nickel:\n\n1. **Documentation**: If you added new items (functions, modules) to the public API\n   of a crate, please document those items in-code. If you made a user-facing\n   change (syntax, stdlib, language features, etc.), please update the existing\n   documentation (in particular the user-manual) in consequence.\n2. **Tests**: be it for bug fixing or adding new features, please try to write\n   extensive tests as much as possible, to ensure the correctness of your\n   changes as well as avoiding regressions.\n3. **Benchmarks**: if your change is likely to impact the performance in a\n   non-trivial way, it might be useful to run the benchmark suite on both master\n   and on your branch and to report those results in the description of the PR.\n\n## The review process, or how to get your PR merged\n\nThe conditions to merge a PR are whatever GitHub branch protection rules are\ncurrently set by the Nickel repository. If a PR has the green button available\non GitHub, then this PR meets the conditions to be merged. Conditions usually\ninclude at least one review from a maintainer and a green CI.\n\n### As an external contributor\n\nAs an external contributor, the Nickel team is responsible for giving your code\na first review. Once done, they might require changes or ask questions. From\nthere, please try to address every review comment (and resolve the corresponding\nconversation on GitHub), and request a new review once done.\n\n### As a maintainer\n\nIf you are reviewing an external contributor's PR, _you are responsible for\nmerging or rejecting the PR_. In general, you should only give an \"Accept\" if\neverything has been sorted out, and you're ready to click the green button\nwithout needing another back-and-forth with the author.\n\nIf the author of a PR has commit rights (such as a Tweager or a Nickel\nmaintainer), _they are responsible for merging their change_. This includes\nrequiring review from the right people. When reviewing such PRs, you can leave\nan \"Accept\" although you made review comments: this indicates that you are fine\nwith the work being merged as it is, but you have minor suggestions and\nquestions that the author might want to consider. You trust the author to do\nwhatever they think is best and proceed with merging the PR from there. This\nminimizes back-and-forths with trusted authors.\n\n[blog-series]: https://www.tweag.io/blog/2020-10-22-nickel-open-sourcing/\n[blog-release]: https://www.tweag.io/blog/2022-03-11-nickel-first-release/\n[user-manual]: https://nickel-lang.org/user-manual/introduction/\n[doc-crate]: https://docs.rs/nickel-lang/0.1.0/nickel_lang/\n[doc-notes]: notes/\n[tweag]: https://www.tweag.io\n[rfcs]: ./rfcs/\n[nickel-chat]: https://discord.gg/vYDnJYBmax\n[discord]: https://discord.gg/vYDnJYBmax\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 135.9130859375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45862d1c77f2228b9e10bc609d5bc203d86ebc9b87ad8d5d5167a6c9abf739d9\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d96bd03f33fe50a863e394ee9718a706f988b9079b20c3784fb726e7678b62fb\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.80\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ad32ce52e4161730f7098c077cd2ed6229b5804ccf99e5366be1ab72a98b4e1\"\ndependencies = [\n \"backtrace\",\n]\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d5a26814d8dcb93b0e5a0ff3c6d80a8843bafb21b39e8e18a6f05471870e110\"\ndependencies = [\n \"derive_arbitrary\",\n]\n\n[[package]]\nname = \"arbtest\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23909d5fb517fac2a8a4c887e847dbe41dd22ec46914586f5727980d0a193fdc\"\ndependencies = [\n \"arbitrary\",\n]\n\n[[package]]\nname = \"arc-swap\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457\"\n\n[[package]]\nname = \"archery\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eae2ed21cd55021f05707a807a5fc85695dafb98832921f6cfa06db67ca5b869\"\ndependencies = [\n \"triomphe\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\"\n\n[[package]]\nname = \"ascii-canvas\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8824ecca2e851cec16968d54a01dd372ef8f95b244fb84b84e70128be347c3c6\"\ndependencies = [\n \"term\",\n]\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed72493ac66d5804837f480ab3766c72bdfab91a65e565fc54fa9e42db0073a8\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"assert_matches\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b34d609dfbaf33d6889b2b7106d3ca345eacad44200913df5ba02bfd31d2ba9\"\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide 0.7.2\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"beef\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a8241f3ebb85c056b509d4327ad0358fbbba6ffb340bf388f26350aeda225b1\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bitmaps\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d084b0137aaa901caf9f1e8b21daa6aa24d41cd806e111335541eff9683bd6\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05efc5cfd9110c8416e471df0e96702d58690178e206e61b7173706673c93706\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2ef034f05691a48569bd920a96c81b9d91bbad1ab5ac7c4616c1f6ef36cb79f\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"bytesize\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e368af43e418a04d52505cf3dbc23dda4e3407ae2fa99fd0e4f308ce546acc\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2e7962b54006dcfcc61cb72735f4d89bb97061dd6a7ed882ec6b8ee53714c6f\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"num-traits\",\n \"serde\",\n \"windows-targets 0.52.4\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"3.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ea181bf566f71cb9a5d17a59e1871af638180a18fb0035c92ae62b705207123\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"clap_lex 0.2.4\",\n \"indexmap 1.9.3\",\n \"textwrap\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b230ab84b0ffdf890d5a10abdbc8b83ae1c4918275daea1ab8801f71536b2651\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae129e2e766ae0ec03484e609954119f123cc1fe650337e155d03b022f24f7b4\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex 0.7.0\",\n \"strsim 0.11.1\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"885e4d7d5af40bfb99ae6f9433e292feac98d452dcb3ec3d25dfe7552b77da8c\"\ndependencies = [\n \"clap 4.5.2\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"307bc0538d5f0f83b8248db3087aa92fe504e4691294d0c96c0eabc33f47ba47\"\ndependencies = [\n \"heck\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5\"\ndependencies = [\n \"os_str_bytes\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\"\n\n[[package]]\nname = \"clipboard-win\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7191c27c2357d9b7ef96baac1773290d4ca63b24205b82a3fd8a0637afcf0362\"\ndependencies = [\n \"error-code\",\n \"str-buf\",\n \"winapi\",\n]\n\n[[package]]\nname = \"clru\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbd0f76e066e64fdc5631e3bb46381254deab9ef1158292f27c8c57e3bf3fe59\"\n\n[[package]]\nname = \"codespan\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3362992a0d9f1dd7c3d0e89e0ab2bb540b7a95fea8cd798090e758fda2899b5e\"\ndependencies = [\n \"codespan-reporting\",\n \"serde\",\n]\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"serde\",\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"comrak\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a972c8ec1be8065f7b597b5f7f5b3be535db780280644aebdcd1966decf58dc\"\ndependencies = [\n \"clap 4.5.2\",\n \"derive_builder\",\n \"entities\",\n \"memchr\",\n \"once_cell\",\n \"regex\",\n \"shell-words\",\n \"slug\",\n \"syntect\",\n \"typed-arena\",\n \"unicode_categories\",\n \"xdg\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e\"\n\n[[package]]\nname = \"coolor\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af4d7a805ca0d92f8c61a31c809d4323fdaa939b0b440e544d21db7797c5aaad\"\ndependencies = [\n \"crossterm\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpp_demangle\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e8227005286ec39567949b33df9896bcadfa6051bccca2488129f108ca23119\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7c76e09c1aae2bc52b3d2f29e13c6572553b30c4aa1b8a49fd70de6412654cb\"\ndependencies = [\n \"anes\",\n \"atty\",\n \"cast\",\n \"ciborium\",\n \"clap 3.2.25\",\n \"criterion-plot\",\n \"itertools 0.10.5\",\n \"lazy_static\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap 4.5.2\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1137cd7e7fc0fb5d3c5a8678be38ec56e819125d8d7907411fe24ccb943faca8\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-epoch\",\n \"crossbeam-queue\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab3db02a9c5b5121e1e42fbdb1aeb65f5e02624cc58c43f2884c6ccac0b82f95\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"crossterm\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2102ea4f781910f8a5b98dd061f4c2023f479ce7bb1236330099ceb5a93cf17\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"crossterm_winapi\",\n \"libc\",\n \"mio\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-mio\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossterm_winapi\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdd7c62a3665c7f6830a51635d9ac9b23ed385797f70a83bb8bafe9c572ab2b\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac574ff4d437a7b5ad237ef331c17ccca63c46479e5b5453eb8e10bb99a759fe\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"cxx\"\nversion = \"1.0.119\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"635179be18797d7e10edb9cd06c859580237750c7351f39ed9b298bfc17544ad\"\ndependencies = [\n \"cc\",\n \"cxxbridge-flags\",\n \"cxxbridge-macro\",\n \"link-cplusplus\",\n]\n\n[[package]]\nname = \"cxx-build\"\nversion = \"1.0.119\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9324397d262f63ef77eb795d900c0d682a34a43ac0932bec049ed73055d52f63\"\ndependencies = [\n \"cc\",\n \"codespan-reporting\",\n \"once_cell\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"scratch\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"cxxbridge-flags\"\nversion = \"1.0.119\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a87ff7342ffaa54b7c61618e0ce2bbcf827eba6d55b923b83d82551acbbecfe5\"\n\n[[package]]\nname = \"cxxbridge-macro\"\nversion = \"1.0.119\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70b5b86cf65fa0626d85720619d80b288013477a91a0389fa8bc716bf4903ad1\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83b2eb4d90d12bdda5ed17de686c2acb4c57914f8f921b8da7e112b5a36f3fe1\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"622687fe0bac72a04e5599029151f5796111b90f1baaa9b544d807a5e31cd120\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"strsim 0.11.1\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"733cabb43482b1a1b53eee8583c2b9e8684d592215ea83efd305dd31bc2f0178\"\ndependencies = [\n \"darling_core\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"6.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5041cc499144891f3790297212f32a74fb938e5136a14943f338ef9e0ae276cf\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n \"hashbrown 0.14.3\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"debugid\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef552e6f588e446098f6ba40d89ac146c8c7b64aade83c051ee00bb5d2bc18d\"\ndependencies = [\n \"uuid\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n \"serde\",\n]\n\n[[package]]\nname = \"derive_arbitrary\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67e77553c4162a157adbf834ebae5b415acbecbeafc7a74b0e886657506a7611\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"derive_builder\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0350b5cb0331628a5916d6c5c0b72e97393b8b6b03b47a9284f4e7f5a405ffd7\"\ndependencies = [\n \"derive_builder_macro\",\n]\n\n[[package]]\nname = \"derive_builder_core\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d48cda787f839151732d396ac69e3473923d54312c070ee21e9effcaa8ca0b1d\"\ndependencies = [\n \"darling\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"derive_builder_macro\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"206868b8242f27cecce124c19fd88157fbd0dd334df2587f36417bafbc85097b\"\ndependencies = [\n \"derive_builder_core\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"rustc_version\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"deunicode\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6e854126756c496b8c81dec88f9a706b15b875c5849d4097a3854476b9fdf94\"\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"directories\"\nversion = \"4.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f51c5d4ddabd36886dd3e1438cb358cdcb0d7c499cb99cb4ac2e38e18b5cb210\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a\"\n\n[[package]]\nname = \"ena\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c533630cf40e9caa44bd91aadc88a75d75a4c3a12b4cfde353cbed41daa1e1f1\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"endian-type\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c34f04666d835ff5d62e058c3995147c06f42fe86ff053337632bca83e42702d\"\n\n[[package]]\nname = \"entities\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5320ae4c3782150d900b79807611a59a99fc9a1d61d686faafc24b93fc8d7ca\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"error-code\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64f18991e7bf11e7ffee451b5318b5c1a73c52d0d0ada6e5a3017c8c1ced6a21\"\ndependencies = [\n \"libc\",\n \"str-buf\",\n]\n\n[[package]]\nname = \"fancy-regex\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b95f7c0680e4142284cf8b22c14a476e87d61b004a3a0861872b32ef7ead40a2\"\ndependencies = [\n \"bit-set\",\n \"regex\",\n]\n\n[[package]]\nname = \"faster-hex\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2a2b11eda1d40935b26cf18f6833c526845ae8c41e58d09af6adeb6f0269183\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"486f806e73c5707928240ddc295403b1b93c96a02038563881c4a2fd84b81ac4\"\n\n[[package]]\nname = \"fd-lock\"\nversion = \"3.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef033ed5e9bad94e55838ca0ca906db0e043f517adda0c8b79c7a8c66c93c1b5\"\ndependencies = [\n \"cfg-if\",\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"findshlibs\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40b9e59cd0f7e0806cca4be089683ecb6434e602038df21fe6bf6711b2f07f64\"\ndependencies = [\n \"cc\",\n \"lazy_static\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide 0.8.0\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\"\n\n[[package]]\nname = \"git-version\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad568aa3db0fcbc81f2f116137f263d7304f512a1209b35b85150d3ef88ad19\"\ndependencies = [\n \"git-version-macro\",\n]\n\n[[package]]\nname = \"git-version-macro\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53010ccb100b96a67bc32c0175f0ed1426b31b655d562898e57325f81c023ac0\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"gix\"\nversion = \"0.67.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7d3e78ddac368d3e3bfbc2862bc2aafa3d89f1b15fed898d9761e1ec6f3f17f\"\ndependencies = [\n \"gix-actor\",\n \"gix-archive\",\n \"gix-attributes\",\n \"gix-command\",\n \"gix-commitgraph\",\n \"gix-config\",\n \"gix-credentials\",\n \"gix-date\",\n \"gix-diff\",\n \"gix-dir\",\n \"gix-discover\",\n \"gix-features\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-glob\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-ignore\",\n \"gix-index\",\n \"gix-lock\",\n \"gix-mailmap\",\n \"gix-merge\",\n \"gix-negotiate\",\n \"gix-object\",\n \"gix-odb\",\n \"gix-pack\",\n \"gix-path\",\n \"gix-pathspec\",\n \"gix-prompt\",\n \"gix-protocol\",\n \"gix-ref\",\n \"gix-refspec\",\n \"gix-revision\",\n \"gix-revwalk\",\n \"gix-sec\",\n \"gix-status\",\n \"gix-submodule\",\n \"gix-tempfile\",\n \"gix-trace\",\n \"gix-transport\",\n \"gix-traverse\",\n \"gix-url\",\n \"gix-utils\",\n \"gix-validate\",\n \"gix-worktree\",\n \"gix-worktree-state\",\n \"gix-worktree-stream\",\n \"once_cell\",\n \"parking_lot\",\n \"regex\",\n \"serde\",\n \"signal-hook\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-actor\"\nversion = \"0.33.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59226ef06661c756e664b46b1d3b2c198f6adc5407a484c086d0171108a70027\"\ndependencies = [\n \"bstr\",\n \"gix-date\",\n \"gix-utils\",\n \"itoa\",\n \"serde\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-archive\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4771188ac63c8f597042bd86561ad66cb1b5f795f963f6e5f71fc4f04853126\"\ndependencies = [\n \"bstr\",\n \"gix-date\",\n \"gix-object\",\n \"gix-worktree-stream\",\n \"jiff\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-attributes\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31a102d201ef0e5a848458a82292581e7641e52f0f52e693b6cbdd05a652c029\"\ndependencies = [\n \"bstr\",\n \"gix-glob\",\n \"gix-path\",\n \"gix-quote\",\n \"gix-trace\",\n \"kstring\",\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-bitmap\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10f78312288bd02052be5dbc2ecbc342c9f4eb791986d86c0a5c06b92dc72efa\"\ndependencies = [\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-chunk\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c28b58ba04f0c004722344390af9dbc85888fbb84be1981afb934da4114d4cf\"\ndependencies = [\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-command\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c201d2b9e9cce2365a6638fd0a966f751ed92d74be5c0727ac331e6a29ef5846\"\ndependencies = [\n \"bstr\",\n \"gix-path\",\n \"gix-trace\",\n \"shell-words\",\n]\n\n[[package]]\nname = \"gix-commitgraph\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41db900b189e62dc61575f06fdf1a3b6901d264a99be9d32b286af6b2e3984e1\"\ndependencies = [\n \"bstr\",\n \"gix-chunk\",\n \"gix-features\",\n \"gix-hash\",\n \"memmap2 0.9.5\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-config\"\nversion = \"0.41.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bedd1bf1c7b994be9d57207e8e0de79016c05e2e8701d3015da906e65ac445e\"\ndependencies = [\n \"bstr\",\n \"gix-config-value\",\n \"gix-features\",\n \"gix-glob\",\n \"gix-path\",\n \"gix-ref\",\n \"gix-sec\",\n \"memchr\",\n \"once_cell\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"unicode-bom\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-config-value\"\nversion = \"0.14.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3de3fdca9c75fa4b83a76583d265fa49b1de6b088ebcd210749c24ceeb74660\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bstr\",\n \"gix-path\",\n \"libc\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-credentials\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d713bac4bf7df5801012285366dae6625d675baec4ba6e443d64e83559bec068\"\ndependencies = [\n \"bstr\",\n \"gix-command\",\n \"gix-config-value\",\n \"gix-path\",\n \"gix-prompt\",\n \"gix-sec\",\n \"gix-trace\",\n \"gix-url\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-date\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d10d543ac13c97292a15e8e8b7889cd006faf739777437ed95362504b8fe81a0\"\ndependencies = [\n \"bstr\",\n \"itoa\",\n \"jiff\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-diff\"\nversion = \"0.47.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9850fd0c15af113db6f9e130d13091ba0d3754e570a2afdff9e2f3043da260e\"\ndependencies = [\n \"bstr\",\n \"gix-command\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-object\",\n \"gix-path\",\n \"gix-tempfile\",\n \"gix-trace\",\n \"gix-traverse\",\n \"gix-worktree\",\n \"imara-diff\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-dir\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbf6c29bf17baf3996d4925fad5e10c1a12eac9b3a0d8475d89292e0e5ba34a3\"\ndependencies = [\n \"bstr\",\n \"gix-discover\",\n \"gix-fs\",\n \"gix-ignore\",\n \"gix-index\",\n \"gix-object\",\n \"gix-path\",\n \"gix-pathspec\",\n \"gix-trace\",\n \"gix-utils\",\n \"gix-worktree\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-discover\"\nversion = \"0.36.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c522e31f458f50af09dfb014e10873c5378f702f8049c96f508989aad59671f6\"\ndependencies = [\n \"bstr\",\n \"dunce\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-path\",\n \"gix-ref\",\n \"gix-sec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-features\"\nversion = \"0.39.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e0eb9efdf96c35c0bed7596d1bef2d4ce6360a1d09738001f9d3e402aa7ba3e\"\ndependencies = [\n \"bytes\",\n \"bytesize\",\n \"crc32fast\",\n \"crossbeam-channel\",\n \"flate2\",\n \"gix-hash\",\n \"gix-trace\",\n \"gix-utils\",\n \"libc\",\n \"once_cell\",\n \"parking_lot\",\n \"prodash\",\n \"sha1_smol\",\n \"thiserror 1.0.69\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"gix-filter\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b37f82359a4485770ed8993ae715ced1bf674f2a63e45f5a0786d38310665ea\"\ndependencies = [\n \"bstr\",\n \"encoding_rs\",\n \"gix-attributes\",\n \"gix-command\",\n \"gix-hash\",\n \"gix-object\",\n \"gix-packetline-blocking\",\n \"gix-path\",\n \"gix-quote\",\n \"gix-trace\",\n \"gix-utils\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-fs\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34740384d8d763975858fa2c176b68652a6fcc09f616e24e3ce967b0d370e4d8\"\ndependencies = [\n \"fastrand\",\n \"gix-features\",\n \"gix-utils\",\n]\n\n[[package]]\nname = \"gix-glob\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"254b5101cf7facc00d9b5ff564cf46302ca76695cca23d33bc958a707b6fc857\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bstr\",\n \"gix-features\",\n \"gix-path\",\n \"serde\",\n]\n\n[[package]]\nname = \"gix-hash\"\nversion = \"0.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"952c3a29f1bc1007cc901abce7479943abfa42016db089de33d0a4fa3c85bfe8\"\ndependencies = [\n \"faster-hex\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-hashtable\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ef65b256631078ef733bc5530c4e6b1c2e7d5c2830b75d4e9034ab3997d18fe\"\ndependencies = [\n \"gix-hash\",\n \"hashbrown 0.14.3\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"gix-ignore\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba55a9b582dc26a639875497615959a8127ac5c37b2426dc50f037fada33a4b7\"\ndependencies = [\n \"bstr\",\n \"gix-glob\",\n \"gix-path\",\n \"gix-trace\",\n \"serde\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-index\"\nversion = \"0.36.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27619009ca1ea33fd885041273f5fa5a09163a5c1d22a913b28d7b985e66fe29\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bstr\",\n \"filetime\",\n \"fnv\",\n \"gix-bitmap\",\n \"gix-features\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-lock\",\n \"gix-object\",\n \"gix-traverse\",\n \"gix-utils\",\n \"gix-validate\",\n \"hashbrown 0.14.3\",\n \"itoa\",\n \"libc\",\n \"memmap2 0.9.5\",\n \"rustix\",\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-lock\"\nversion = \"15.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5102acdf4acae2644e38dbbd18cdfba9597a218f7d85f810fe5430207e03c2de\"\ndependencies = [\n \"gix-tempfile\",\n \"gix-utils\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-mailmap\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27d6ac205276a817b6efec0fdb6c62861d01d71f344dc7e5ebe81ab2907ebd0a\"\ndependencies = [\n \"bstr\",\n \"gix-actor\",\n \"gix-date\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-merge\"\nversion = \"0.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fef00c86d0a5a12d95fd73dfa30608882c1d2366c7ad8a27322283a2e6fa0048\"\ndependencies = [\n \"bstr\",\n \"gix-command\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-object\",\n \"gix-path\",\n \"gix-quote\",\n \"gix-tempfile\",\n \"gix-trace\",\n \"gix-worktree\",\n \"imara-diff\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-negotiate\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"414806291838c3349ea939c6d840ff854f84cd29bd3dde8f904f60b0e5b7d0bd\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"gix-commitgraph\",\n \"gix-date\",\n \"gix-hash\",\n \"gix-object\",\n \"gix-revwalk\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-object\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a77b6e7753d298553d9ae8b1744924481e7a49170983938bb578dccfbc6fc1a\"\ndependencies = [\n \"bstr\",\n \"gix-actor\",\n \"gix-date\",\n \"gix-features\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-utils\",\n \"gix-validate\",\n \"itoa\",\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-odb\"\nversion = \"0.64.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bb86aadf7f1b2f980601b4fc94309706f9700f8008f935dc512d556c9e60f61\"\ndependencies = [\n \"arc-swap\",\n \"gix-date\",\n \"gix-features\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-object\",\n \"gix-pack\",\n \"gix-path\",\n \"gix-quote\",\n \"parking_lot\",\n \"serde\",\n \"tempfile\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-pack\"\nversion = \"0.54.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"363e6e59a855ba243672408139db68e2478126cdcfeabb420777df4a1f20026b\"\ndependencies = [\n \"clru\",\n \"gix-chunk\",\n \"gix-features\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-object\",\n \"gix-path\",\n \"gix-tempfile\",\n \"memmap2 0.9.5\",\n \"parking_lot\",\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"uluru\",\n]\n\n[[package]]\nname = \"gix-packetline\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f14a110eb16e27b4ebdae4ca8b389df3ad637d3020077e6b606b1d078745b65\"\ndependencies = [\n \"bstr\",\n \"faster-hex\",\n \"gix-trace\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-packetline-blocking\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"decace940e8ba8e29d29b73b843a6cbae67503887f3e5fb7e688d0f4f6ee0757\"\ndependencies = [\n \"bstr\",\n \"faster-hex\",\n \"gix-trace\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-path\"\nversion = \"0.10.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c04e5a94fdb56b1e91eb7df2658ad16832428b8eeda24ff1a0f0288de2bce554\"\ndependencies = [\n \"bstr\",\n \"gix-trace\",\n \"home\",\n \"once_cell\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-pathspec\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70f02bf7625dbf15bf9fedbeace2ac1ce1c5177806bdbc24c441d664c75c00e4\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bstr\",\n \"gix-attributes\",\n \"gix-config-value\",\n \"gix-glob\",\n \"gix-path\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-prompt\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57944bbdb87f7a9893907032276e99ff4eba3640d8db1bdfb1eba8c07edfd006\"\ndependencies = [\n \"gix-command\",\n \"gix-config-value\",\n \"parking_lot\",\n \"rustix\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-protocol\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac4ebf25f20ac6055728eaa80951acf2cf83948a64af6565b98e7d42b1ab6691\"\ndependencies = [\n \"bstr\",\n \"gix-credentials\",\n \"gix-date\",\n \"gix-features\",\n \"gix-hash\",\n \"gix-transport\",\n \"gix-utils\",\n \"maybe-async\",\n \"serde\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-quote\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f89f9a1525dcfd9639e282ea939f5ab0d09d93cf2b90c1fc6104f1b9582a8e49\"\ndependencies = [\n \"bstr\",\n \"gix-utils\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-ref\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a47385e71fa2d9da8c35e642ef4648808ddf0a52bc93425879088c706dfeaea2\"\ndependencies = [\n \"gix-actor\",\n \"gix-features\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-lock\",\n \"gix-object\",\n \"gix-path\",\n \"gix-tempfile\",\n \"gix-utils\",\n \"gix-validate\",\n \"memmap2 0.9.5\",\n \"serde\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-refspec\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0022038a09d80d9abf773be8efcbb502868d97f6972b8633bfb52ab6edaac442\"\ndependencies = [\n \"bstr\",\n \"gix-hash\",\n \"gix-revision\",\n \"gix-validate\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-revision\"\nversion = \"0.30.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee8eb4088fece3562af4a5d751e069f90e93345524ad730512185234c4b55f1\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bstr\",\n \"gix-commitgraph\",\n \"gix-date\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-object\",\n \"gix-revwalk\",\n \"gix-trace\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-revwalk\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c9a9496da98d36ff19063a8576bf09a87425583b709a56dc5594fffa9d39b2\"\ndependencies = [\n \"gix-commitgraph\",\n \"gix-date\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-object\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-sec\"\nversion = \"0.10.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2007538eda296445c07949cf04f4a767307d887184d6b3e83e2d636533ddc6e\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"gix-path\",\n \"libc\",\n \"serde\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"gix-status\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57414886e750161b4c86d8bca6b2d15bcc87f37ddc46684bb05cebbd29390543\"\ndependencies = [\n \"bstr\",\n \"filetime\",\n \"gix-diff\",\n \"gix-dir\",\n \"gix-features\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-index\",\n \"gix-object\",\n \"gix-path\",\n \"gix-pathspec\",\n \"gix-worktree\",\n \"portable-atomic\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-submodule\"\nversion = \"0.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ed099621873cd36c580fc822176a32a7e50fef15a5c2ed81aaa087296f0497a\"\ndependencies = [\n \"bstr\",\n \"gix-config\",\n \"gix-path\",\n \"gix-pathspec\",\n \"gix-refspec\",\n \"gix-url\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-tempfile\"\nversion = \"15.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2feb86ef094cc77a4a9a5afbfe5de626897351bbbd0de3cb9314baf3049adb82\"\ndependencies = [\n \"dashmap\",\n \"gix-fs\",\n \"libc\",\n \"once_cell\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-registry\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"gix-trace\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04bdde120c29f1fc23a24d3e115aeeea3d60d8e65bab92cc5f9d90d9302eb952\"\n\n[[package]]\nname = \"gix-transport\"\nversion = \"0.43.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c485a345f41b8c0256cb86e95ed93e0692d203fd6c769b0433f7352c13608ad\"\ndependencies = [\n \"base64 0.22.1\",\n \"bstr\",\n \"gix-command\",\n \"gix-credentials\",\n \"gix-features\",\n \"gix-packetline\",\n \"gix-quote\",\n \"gix-sec\",\n \"gix-url\",\n \"reqwest\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-traverse\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f20f1b13cc4fa6ba92b24e6aa0c2fb6a34beb4458ef88c6300212db504e818df\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"gix-commitgraph\",\n \"gix-date\",\n \"gix-hash\",\n \"gix-hashtable\",\n \"gix-object\",\n \"gix-revwalk\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-url\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33e7c297c3265015c133a2c02199610b6e1373a09dc4be057d0c1b5285737f06\"\ndependencies = [\n \"bstr\",\n \"gix-features\",\n \"gix-path\",\n \"serde\",\n \"thiserror 1.0.69\",\n \"url\",\n]\n\n[[package]]\nname = \"gix-utils\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba427e3e9599508ed98a6ddf8ed05493db114564e338e41f6a996d2e4790335f\"\ndependencies = [\n \"bstr\",\n \"fastrand\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"gix-validate\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e187b263461bc36cea17650141567753bc6207d036cedd1de6e81a52f277ff68\"\ndependencies = [\n \"bstr\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-worktree\"\nversion = \"0.37.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d345e5b523550fe4fa0e912bf957de752011ccfc87451968fda1b624318f29c\"\ndependencies = [\n \"bstr\",\n \"gix-attributes\",\n \"gix-features\",\n \"gix-fs\",\n \"gix-glob\",\n \"gix-hash\",\n \"gix-ignore\",\n \"gix-index\",\n \"gix-object\",\n \"gix-path\",\n \"gix-validate\",\n \"serde\",\n]\n\n[[package]]\nname = \"gix-worktree-state\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e72b00e02f3bd737caae9c20a98e70749f42ae18c8f0b68aac3210b42a0b8da\"\ndependencies = [\n \"bstr\",\n \"gix-features\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-glob\",\n \"gix-hash\",\n \"gix-index\",\n \"gix-object\",\n \"gix-path\",\n \"gix-worktree\",\n \"io-close\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-worktree-stream\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81d351819e81b97e4d5657db097fad8f91a5b2ec6d7151b2dae9c3e6dc642a66\"\ndependencies = [\n \"gix-attributes\",\n \"gix-features\",\n \"gix-filter\",\n \"gix-fs\",\n \"gix-hash\",\n \"gix-object\",\n \"gix-path\",\n \"gix-traverse\",\n \"parking_lot\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e8ac6999421f49a846c2d4411f337e53497d8ec55d67753beffa43c5d9205\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap 2.2.5\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5eceaaeec696539ddaf7b333340f1af35a5aa87ae3e4f3ead0532f72affab2e\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ff8ae62cd3a9102e5637afc8452c55acf3844001bd5374e0b0bd7b6616c038\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"human_format\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c3b1f728c459d27b12448862017b96ad4767b1ec2ec5e6434e99f1577f085b8\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbbff0a806a4728c99295b254c8838933b5b082d75e3cb70c8dab21fdfbcfa9a\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"imara-diff\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc9da1a252bd44cd341657203722352efc9bc0c847d06ea6d2dc1cd1135e0a01\"\ndependencies = [\n \"ahash\",\n \"hashbrown 0.14.3\",\n]\n\n[[package]]\nname = \"imbl-sized-chunks\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"144006fb58ed787dcae3f54575ff4349755b00ccc99f4b4873860b654be1ed63\"\ndependencies = [\n \"bitmaps\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b0b929d511467233429c45a44ac1dcaa21ba0f5ba11e4879e6ed28ddb4f9df4\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.14.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa799dd5ed20a7e349f3b4639aa80d74549c81716d9ec4f994c9b5815598306\"\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e186cfbae8084e513daff4240b4797e342f988cecda4fb6c939150f96315fd8\"\n\n[[package]]\nname = \"inferno\"\nversion = \"0.11.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"321f0f839cd44a4686e9504b0a62b4d69a50b62072144c71c68f5873c167b8d9\"\ndependencies = [\n \"ahash\",\n \"indexmap 2.2.5\",\n \"is-terminal\",\n \"itoa\",\n \"log\",\n \"num-format\",\n \"once_cell\",\n \"quick-xml 0.26.0\",\n \"rgb\",\n \"str_stack\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a7c22c4d34ef4788c351e971c52bfdfe7ea2766f8c5466bc175dd46e52ac22e\"\ndependencies = [\n \"console\",\n \"lazy_static\",\n \"linked-hash-map\",\n \"regex\",\n \"similar\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"io-close\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cadcf447f06744f8ce713d2d6239bb5bde2c357a452397a9ed90c625da390bc\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\"\n\n[[package]]\nname = \"jiff\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9d9d414fc817d3e3d62b2598616733f76c4cc74fbac96069674739b881295c8\"\ndependencies = [\n \"jiff-tzdb-platform\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"jiff-tzdb\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91335e575850c5c4c673b9bd467b0e025f164ca59d0564f69d0c2ee0ffad4653\"\n\n[[package]]\nname = \"jiff-tzdb-platform\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9835f0060a626fe59f160437bc725491a6af23133ea906500027d1bd2f8f4329\"\ndependencies = [\n \"jiff-tzdb\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"406cda4b368d531c842222cf9d2600a9a4acce8d29423695379c6868a143a9ee\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kstring\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"558bf9508a558512042d3095138b1f7b8fe90c5467d94f9f1da28b3731c5dbd1\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"lalrpop\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cb077ad656299f160924eb2912aa147d7339ea7d69e1b5517326fdcec3c1ca\"\ndependencies = [\n \"ascii-canvas\",\n \"bit-set\",\n \"ena\",\n \"itertools 0.11.0\",\n \"lalrpop-util\",\n \"petgraph\",\n \"pico-args\",\n \"regex\",\n \"regex-syntax 0.8.5\",\n \"string_cache\",\n \"term\",\n \"tiny-keccak\",\n \"unicode-xid 0.2.4\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"lalrpop-util\"\nversion = \"0.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"507460a910eb7b32ee961886ff48539633b788a36b65692b95f225b844c82553\"\ndependencies = [\n \"regex-automata\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.162\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18d287de67fe55fd7e1581fe933d965a5a9477b38e949cfa9f8574ef01506398\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85c833ca1e66078851dba29046874e38f08b2c883700aa29a03ddd3b23814ee8\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"line-wrap\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f30344350a2a51da54c1d53be93fade8a237e545dbcc4bdbe635413f2117cab9\"\ndependencies = [\n \"safemem\",\n]\n\n[[package]]\nname = \"link-cplusplus\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d240c6f7e1ba3a28b0249f774e6a9dd0175054b52dfbb61b16eb8505c3785c9\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"643cb0b8d4fcc284004d5fd0d67ccf61dfffadb7f75e1e71bc420f4688a3a704\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c\"\n\n[[package]]\nname = \"logos\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf8b031682c67a8e3d5446840f9573eb7fe26efe7ec8d195c9ac4c0647c502f1\"\ndependencies = [\n \"logos-derive\",\n]\n\n[[package]]\nname = \"logos-derive\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d849148dbaf9661a6151d1ca82b13bb4c4c128146a88d05253b38d4e2f496c\"\ndependencies = [\n \"beef\",\n \"fnv\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"regex-syntax 0.6.29\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"lsp-harness\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"env_logger\",\n \"insta\",\n \"log\",\n \"lsp-server\",\n \"lsp-types\",\n \"nickel-lang-utils\",\n \"serde\",\n \"serde_json\",\n \"test-generator\",\n \"toml\",\n]\n\n[[package]]\nname = \"lsp-server\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248f65b78f6db5d8e1b1604b4098a28b43d21a8eb1deeca22b1c421b276c7095\"\ndependencies = [\n \"crossbeam-channel\",\n \"log\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"lsp-types\"\nversion = \"0.95.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"158c1911354ef73e8fe42da6b10c0484cb65c7f1007f28022e847706c1ab6984\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"serde\",\n \"serde_json\",\n \"serde_repr\",\n \"url\",\n]\n\n[[package]]\nname = \"mach2\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b955cdeb2a02b9117f121ce63aa52d08ade45de53e48fe6a38b39c10f6f709\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"malachite\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53ff327de42075f680ba15c5cb3c417687eb7241ce2063a91d0186ce5c5e77ee\"\ndependencies = [\n \"malachite-base\",\n \"malachite-float\",\n \"malachite-nz\",\n \"malachite-q\",\n]\n\n[[package]]\nname = \"malachite-base\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e960ee0e7e1b8eec9229f5b20d6b191762574225144ea638eb961d065c97b55d\"\ndependencies = [\n \"hashbrown 0.14.3\",\n \"itertools 0.11.0\",\n \"libm\",\n \"ryu\",\n]\n\n[[package]]\nname = \"malachite-float\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd21e0e005798917fb37c87ef9b0787e3ad490b378df987b78dfa44669b895fe\"\ndependencies = [\n \"itertools 0.11.0\",\n \"malachite-base\",\n \"malachite-nz\",\n \"malachite-q\",\n \"serde\",\n]\n\n[[package]]\nname = \"malachite-nz\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"770aaf1a4d59a82ed3d8644eb66aff7492a6dd7476def275a922d04d77ca8e57\"\ndependencies = [\n \"itertools 0.11.0\",\n \"libm\",\n \"malachite-base\",\n \"serde\",\n]\n\n[[package]]\nname = \"malachite-q\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33a9dfca114f6b582595990ccfc287cace633aa95f890ade5b1fc099b7175d3b\"\ndependencies = [\n \"itertools 0.11.0\",\n \"malachite-base\",\n \"malachite-nz\",\n \"serde\",\n]\n\n[[package]]\nname = \"maybe-async\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cf92c10c7e361d6b99666ec1c6f9805b0bea2c3bd8c78dc6fe98ac5bd78db11\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"md-5\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf\"\ndependencies = [\n \"cfg-if\",\n \"digest\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.5.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83faa42c0a078c393f6b29d5db232d8be22776a891f8f56e5284faee4a20b327\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"metrics\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fde3af1a009ed76a778cb84fdef9e7dbbdf5775ae3e4cc1f434a6a307f6f76c5\"\ndependencies = [\n \"ahash\",\n \"metrics-macros\",\n \"portable-atomic\",\n]\n\n[[package]]\nname = \"metrics-macros\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b4faf00617defe497754acde3024865bc143d44a86799b24e191ecff91354f\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"metrics-util\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4de2ed6e491ed114b40b732e4d1659a9d53992ebd87490c44a6ffe23739d973e\"\ndependencies = [\n \"aho-corasick\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n \"hashbrown 0.13.1\",\n \"indexmap 1.9.3\",\n \"metrics\",\n \"num_cpus\",\n \"ordered-float\",\n \"quanta\",\n \"radix_trie\",\n \"sketches-ddsketch\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"minimad\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b136454924e4d020e55c4992e07c105b40d5c41b84662862f0e15bc0a2efef\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"new_debug_unreachable\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54\"\n\n[[package]]\nname = \"nibble_vec\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a5d83df9f36fe23f0c3648c6bbb8b0298bb5f1939c8f2704431371f4b84d43\"\ndependencies = [\n \"smallvec\",\n]\n\n[[package]]\nname = \"nickel-lang-cli\"\nversion = \"1.9.0\"\ndependencies = [\n \"clap 4.5.2\",\n \"clap_complete\",\n \"comrak\",\n \"directories\",\n \"git-version\",\n \"insta\",\n \"metrics\",\n \"metrics-util\",\n \"nickel-lang-core\",\n \"nickel-lang-utils\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"tempfile\",\n \"test-generator\",\n]\n\n[[package]]\nname = \"nickel-lang-core\"\nversion = \"0.10.0\"\ndependencies = [\n \"ansi_term\",\n \"assert_matches\",\n \"bumpalo\",\n \"clap 4.5.2\",\n \"codespan\",\n \"codespan-reporting\",\n \"colorchoice\",\n \"comrak\",\n \"criterion 0.4.0\",\n \"cxx\",\n \"cxx-build\",\n \"indexmap 1.9.3\",\n \"indoc 2.0.4\",\n \"js-sys\",\n \"lalrpop\",\n \"lalrpop-util\",\n \"logos\",\n \"malachite\",\n \"malachite-q\",\n \"md-5\",\n \"metrics\",\n \"nickel-lang-utils\",\n \"nickel-lang-vector\",\n \"once_cell\",\n \"pkg-config\",\n \"pretty\",\n \"pretty_assertions\",\n \"regex\",\n \"rustyline\",\n \"rustyline-derive\",\n \"serde\",\n \"serde-wasm-bindgen\",\n \"serde_json\",\n \"serde_repr\",\n \"serde_yaml\",\n \"sha-1\",\n \"sha2\",\n \"similar\",\n \"simple-counter\",\n \"smallvec\",\n \"strip-ansi-escapes\",\n \"strsim 0.10.0\",\n \"termimad\",\n \"test-generator\",\n \"toml\",\n \"toml_edit\",\n \"topiary-core\",\n \"topiary-queries\",\n \"tree-sitter-nickel\",\n \"typed-arena\",\n \"unicode-segmentation\",\n \"void\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"nickel-lang-git\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"clap 4.5.2\",\n \"gix\",\n \"serde\",\n \"serde_with\",\n \"tempfile\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"nickel-lang-lsp\"\nversion = \"1.9.0\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"assert_matches\",\n \"bincode\",\n \"clap 4.5.2\",\n \"codespan\",\n \"codespan-reporting\",\n \"criterion 0.4.0\",\n \"crossbeam\",\n \"csv\",\n \"derive_more\",\n \"env_logger\",\n \"git-version\",\n \"glob\",\n \"insta\",\n \"lalrpop\",\n \"lalrpop-util\",\n \"lazy_static\",\n \"log\",\n \"lsp-harness\",\n \"lsp-server\",\n \"lsp-types\",\n \"nickel-lang-core\",\n \"nickel-lang-utils\",\n \"pretty\",\n \"pretty_assertions\",\n \"regex\",\n \"scopeguard\",\n \"serde\",\n \"serde_json\",\n \"test-generator\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"nickel-lang-utils\"\nversion = \"0.1.0\"\ndependencies = [\n \"codespan\",\n \"criterion 0.4.0\",\n \"nickel-lang-core\",\n \"pprof\",\n \"serde\",\n \"toml\",\n]\n\n[[package]]\nname = \"nickel-lang-vector\"\nversion = \"0.1.0\"\ndependencies = [\n \"arbitrary\",\n \"arbtest\",\n \"criterion 0.5.1\",\n \"imbl-sized-chunks\",\n \"rpds\",\n \"serde\",\n]\n\n[[package]]\nname = \"nickel-wasm-repl\"\nversion = \"0.10.0\"\ndependencies = [\n \"nickel-lang-core\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-format\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a652d9771a63711fd3c3deb670acfbe5c30a4072e664d7a3bf5a9e1056ac72c3\"\ndependencies = [\n \"arrayvec 0.7.4\",\n \"itoa\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"onig\"\nversion = \"6.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c4b31c8722ad9171c6d77d3557db078cab2bd50afcc9d09c8b315c59df8ca4f\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"once_cell\",\n \"onig_sys\",\n]\n\n[[package]]\nname = \"onig_sys\"\nversion = \"69.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b829e3d7e9cc74c7e315ee8edb185bf4190da5acde74afd7fc59c35b1f086e7\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"ordered-float\"\nversion = \"3.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1e1c390732d15f1d48471625cd92d154e66db2c56645e29a9cd26f4699f72dc\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"os_str_bytes\"\nversion = \"6.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2355d85b9a3786f481747ced0e0ff2ba35213a1f9bd406ed906554d7af805a1\"\n\n[[package]]\nname = \"pad\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2ad9b889f1b12e0b9ee24db044b5129150d5eada288edc800f789928dc8c0e3\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap 2.2.5\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5699cc8a63d1aa2b1ee8e12b9ad70ac790d65788cd36101fa37f87ea46c4cef\"\ndependencies = [\n \"base64 0.21.7\",\n \"indexmap 2.2.5\",\n \"line-wrap\",\n \"quick-xml 0.31.0\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7170ef9988bc169ba16dd36a7fa041e5c4cbeb6a35b76d4c03daded371eae7c0\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"pprof\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"196ded5d4be535690899a4631cc9f18cdc41b7ebf24a79400f46f48e49a11059\"\ndependencies = [\n \"backtrace\",\n \"cfg-if\",\n \"criterion 0.4.0\",\n \"findshlibs\",\n \"inferno\",\n \"libc\",\n \"log\",\n \"nix\",\n \"once_cell\",\n \"parking_lot\",\n \"smallvec\",\n \"symbolic-demangle\",\n \"tempfile\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"precomputed-hash\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b87bfd4605926cdfefc1c3b5f8fe560e3feca9d5552cf68c466d3d8236c7e8\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b794032607612e7abeb4db69adb4e33590fa6cf1149e95fd7cb00e634b92f174\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368ba315fb8c5052ab692e68a0eefec6ec57b23a36959c14496f0b0df2c0cecf\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"pretty\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83f3aa1e3ca87d3b124db7461265ac176b40c277f37e503eaa29c9c75c037846\"\ndependencies = [\n \"arrayvec 0.5.2\",\n \"log\",\n \"typed-arena\",\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"prettydiff\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ff1fec61082821f8236cf6c0c14e8172b62ce8a72a0eedc30d3b247bb68dc11\"\ndependencies = [\n \"ansi_term\",\n \"pad\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"0.4.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\ndependencies = [\n \"unicode-xid 0.1.0\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"prodash\"\nversion = \"29.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a266d8d6020c61a437be704c5e618037588e1985c7dbb7bf8d265db84cffe325\"\ndependencies = [\n \"bytesize\",\n \"human_format\",\n \"log\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"pyckel\"\nversion = \"1.9.0\"\ndependencies = [\n \"codespan-reporting\",\n \"nickel-lang-core\",\n \"pyo3\",\n \"pyo3-build-config\",\n]\n\n[[package]]\nname = \"pyo3\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"268be0c73583c183f2b14052337465768c07726936a260f480f0857cb95ba543\"\ndependencies = [\n \"cfg-if\",\n \"indoc 1.0.9\",\n \"libc\",\n \"memoffset\",\n \"parking_lot\",\n \"pyo3-build-config\",\n \"pyo3-ffi\",\n \"pyo3-macros\",\n \"unindent\",\n]\n\n[[package]]\nname = \"pyo3-build-config\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28fcd1e73f06ec85bf3280c48c67e731d8290ad3d730f8be9dc07946923005c8\"\ndependencies = [\n \"once_cell\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"pyo3-ffi\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f6cb136e222e49115b3c51c32792886defbfb0adead26a688142b346a0b9ffc\"\ndependencies = [\n \"libc\",\n \"pyo3-build-config\",\n]\n\n[[package]]\nname = \"pyo3-macros\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94144a1266e236b1c932682136dc35a9dee8d3589728f68130c7c3861ef96b28\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"pyo3-macros-backend\",\n \"quote 1.0.35\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"pyo3-macros-backend\"\nversion = \"0.17.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8df9be978a2d2f0cdebabb03206ed73b11314701a5bfe71b0d753b81997777f\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"quanta\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a17e662a7a8291a865152364c20c7abc5e60486ab2001e8ec10b24862de0b9ab\"\ndependencies = [\n \"crossbeam-utils\",\n \"libc\",\n \"mach2\",\n \"once_cell\",\n \"raw-cpuid\",\n \"wasi\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f50b1c63b38611e7d4d7f68b82d3ad0cc71a2ad2e7f61fc10f1328d917c93cd\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1004a344b30a54e2ee58d66a71b32d2db2feb0a31f9a2d302bf0536f15de2a33\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e96808277ec6f97351a2380e6c25114bc9e67037775464979f3037c92d05ef\"\ndependencies = [\n \"bytes\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash\",\n \"rustls\",\n \"socket2\",\n \"thiserror 2.0.3\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2fe5ef3495d7d2e377ff17b1a8ce2ee2ec2a18cde8b6ad6619d65d0701c135d\"\ndependencies = [\n \"bytes\",\n \"getrandom\",\n \"rand\",\n \"ring\",\n \"rustc-hash\",\n \"rustls\",\n \"rustls-pki-types\",\n \"slab\",\n \"thiserror 2.0.3\",\n \"tinyvec\",\n \"tracing\",\n \"web-time\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d5a626c6807713b15cac82a6acaccd6043c9a5408c24baae07611fec3f243da\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1\"\ndependencies = [\n \"proc-macro2 0.4.30\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n]\n\n[[package]]\nname = \"radix_trie\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c069c179fcdc6a2fe24d8d18305cf085fdbd4f922c041943e203685d6a1c58fd\"\ndependencies = [\n \"endian-type\",\n \"nibble_vec\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"raw-cpuid\"\nversion = \"10.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c297679cb867470fa8c9f67dbba74a78d78e3e98d7cf2b08d6d71540f797332\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4963ed1bc86e4f3ee217022bd855b297cef07fb9eac5dfa1f788b220b49b3bd\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a18479200779601e498ada4e8c1e1f50e3ee19deb0259c25825a98b5603b2cb4\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7d6d2a27d57148378eb5e111173f4276ad26340ecc5c49a4a2152167a2d6a37\"\ndependencies = [\n \"base64 0.22.1\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"quinn\",\n \"rustls\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"webpki-roots\",\n \"winreg\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05aaa8004b64fd573fc9d002f4e632d51ad4f026c2b5ba95fcb6c2f32c2c47d8\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rpds\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0e15515d3ce3313324d842629ea4905c25a13f81953eadb88f85516f59290a4\"\ndependencies = [\n \"archery\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9cc1d47e243d655ace55ed38201c19ae02c148ae56412ab8750e8f0166ab7f\"\ndependencies = [\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\ndependencies = [\n \"web-time\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"\n\n[[package]]\nname = \"rustyline\"\nversion = \"11.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfc8644681285d1fb67a467fb3021bfea306b99b4146b166a1fe3ada965eece\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"clipboard-win\",\n \"dirs-next\",\n \"fd-lock\",\n \"libc\",\n \"log\",\n \"memchr\",\n \"nix\",\n \"radix_trie\",\n \"scopeguard\",\n \"unicode-segmentation\",\n \"unicode-width\",\n \"utf8parse\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rustyline-derive\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8218eaf5d960e3c478a1b0f129fa888dd3d8d22eb3de097e9af14c1ab4438024\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1\"\n\n[[package]]\nname = \"safemem\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"scratch\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3cf7c11c38cb994f3d40e8a8cde3bbd1f72a435e4c49e85d6553d8312306152\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92d43fe69e652f3df9bdc2b85b2854a0825b86e4fb76bc44d945137d053639ca\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.197\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-wasm-bindgen\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3b143e2833c57ab9ad3ea280d21fd34e285a42837aeb0ee301f4f41890fa00e\"\ndependencies = [\n \"js-sys\",\n \"serde\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.197\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.114\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5f09b1bd632ef549eaa9f60a1f8de742bdbc698e6cee2095fc84dde5f549ae0\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b2e6b945e9d3df726b65d6ee24060aff8e3533d431f677a9695db04eff9dfdb\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79e674e01f999af37c49f70a6ede167a8a60b2503e56c5599532a65baa5969a0\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_with\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e28bdad6db2b8340e449f7108f020b3b092e8583a9e3fb82713e1d4e71fe817\"\ndependencies = [\n \"base64 0.22.1\",\n \"chrono\",\n \"hex\",\n \"indexmap 1.9.3\",\n \"indexmap 2.2.5\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_with_macros\",\n \"time\",\n]\n\n[[package]]\nname = \"serde_with_macros\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d846214a9854ef724f3da161b426242d8de7c1fc7de2f89bb1efcb154dca79d\"\ndependencies = [\n \"darling\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"serde_yaml\"\nversion = \"0.9.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fd075d994154d4a774f95b51fb96bdc2832b0ea48425c92546073816cda1f2f\"\ndependencies = [\n \"indexmap 2.2.5\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml\",\n]\n\n[[package]]\nname = \"sha-1\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5058ada175748e33390e40e872bd0fe59a19f265d0158daa551c5a88a76009c\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha1_smol\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbfa15b3dddfee50a0fff136974b3e1bde555604ba463834a7eb7deb6417705d\"\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-mio\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29ad2e15f37ec9a6cc544097b78a1ec90001e9f71b81338ca39f430adaca99af\"\ndependencies = [\n \"libc\",\n \"mio\",\n \"signal-hook\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32fea41aca09ee824cc9724996433064c89f7777e60762749a4170a14abbfa21\"\n\n[[package]]\nname = \"simple-counter\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4bb57743b52ea059937169c0061d70298fe2df1d2c988b44caae79dd979d9b49\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"sketches-ddsketch\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85636c14b73d81f541e525f585c0a2109e6744e1565b5c1668e31c70c10ed65c\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slug\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3bd94acec9c8da640005f8e135a39fc0372e74535e6b368b7a04b875f784c8c4\"\ndependencies = [\n \"deunicode\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"str-buf\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e08d8363704e6c71fc928674353e6b7c23dcea9d82d7012c8faf2a3a025f8d0\"\n\n[[package]]\nname = \"str_stack\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9091b6114800a5f2141aee1d1b9d6ca3592ac062dc5decb3764ec5895a47b4eb\"\n\n[[package]]\nname = \"string_cache\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b\"\ndependencies = [\n \"new_debug_unreachable\",\n \"once_cell\",\n \"parking_lot\",\n \"phf_shared\",\n \"precomputed-hash\",\n]\n\n[[package]]\nname = \"strip-ansi-escapes\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55ff8ef943b384c414f54aefa961dd2bd853add74ec75e7ac74cf91dba62bcfa\"\ndependencies = [\n \"vte\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"symbolic-common\"\nversion = \"10.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b55cdc318ede251d0957f07afe5fed912119b8c1bc5a7804151826db999e737\"\ndependencies = [\n \"debugid\",\n \"memmap2 0.5.10\",\n \"stable_deref_trait\",\n \"uuid\",\n]\n\n[[package]]\nname = \"symbolic-demangle\"\nversion = \"10.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79be897be8a483a81fff6a3a4e195b4ac838ef73ca42d348b3f722da9902e489\"\ndependencies = [\n \"cpp_demangle\",\n \"rustc-demangle\",\n \"symbolic-common\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"0.15.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ca4b3b69a77cbe1ffc9e198781b7acb0c7365a883670e8f1c1bc66fba79a5c5\"\ndependencies = [\n \"proc-macro2 0.4.30\",\n \"quote 0.6.13\",\n \"unicode-xid 0.1.0\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7065abeca94b6a8a577f9bd45aa0867a2238b74e8eb67cf10d492bc39351394\"\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"syntect\"\nversion = \"5.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"874dcfa363995604333cf947ae9f751ca3af4522c60886774c4963943b4746b1\"\ndependencies = [\n \"bincode\",\n \"bitflags 1.3.2\",\n \"fancy-regex\",\n \"flate2\",\n \"fnv\",\n \"once_cell\",\n \"onig\",\n \"plist\",\n \"regex-syntax 0.8.5\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thiserror 1.0.69\",\n \"walkdir\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1fc403891a21bcfb7c37834ba66a547a8f402146eba7265b5a6d88059c9ff2f\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85b77fafb263dd9d05cbeac119526425676db3784113aa9295c88498cbf8bff1\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f\"\ndependencies = [\n \"dirs-next\",\n \"rustversion\",\n \"winapi\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"termimad\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e32883199fc52cda7e431958dee8bc3ec6898afabc152b76959b9e0e74e2202\"\ndependencies = [\n \"coolor\",\n \"crossbeam\",\n \"crossterm\",\n \"minimad\",\n \"thiserror 1.0.69\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"test-generator\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b23be2add79223226e1cb6446cb3e37506a5927089870687a0f1149bb7a073a\"\ndependencies = [\n \"glob\",\n \"proc-macro2 0.4.30\",\n \"quote 0.6.13\",\n \"syn 0.15.44\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23d434d3f8967a09480fb04132ebe0a3e088c173e6d0ee7897abbdf4eab0f8b9\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa\"\ndependencies = [\n \"thiserror-impl 2.0.3\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tiny-keccak\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237\"\ndependencies = [\n \"crunchy\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.36.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4\"\ndependencies = [\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f49eb2ab21d2f26bd6db7bf383edc527a7ebaee412d17af4d40fdccd442f335\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4badfd56924ae69bcc9039335b2e017639ce3f9b001c393c1b2d1ef846ce2cbf\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f21c7aaf97f1bd9ca9d4f9e73b0a6c74bd5afef56f2bc931943a6e1c37e04e38\"\ndependencies = [\n \"indexmap 2.2.5\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"topiary-core\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0236570d34c4e60d88e6bce8446f6d6fd51f5e1e4bdea68cdcf0d1ff5c89776d\"\ndependencies = [\n \"futures\",\n \"itertools 0.11.0\",\n \"log\",\n \"pretty_assertions\",\n \"prettydiff\",\n \"serde\",\n \"serde_json\",\n \"tokio\",\n \"topiary-tree-sitter-facade\",\n \"topiary-web-tree-sitter-sys\",\n]\n\n[[package]]\nname = \"topiary-queries\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dea6b8d21ab29eeb34fca55e384ddb6507261019e075d78812de1a1465ac210c\"\n\n[[package]]\nname = \"topiary-tree-sitter-facade\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2eb978cfd5d4686e9193eed02c6c3abe8aac98e9d4942aaaf83ea472fc9b32d6\"\ndependencies = [\n \"js-sys\",\n \"topiary-web-tree-sitter-sys\",\n \"tree-sitter\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"topiary-web-tree-sitter-sys\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e6ec4ec3a2426af1ff74688cd19c841a1e852403665d96b455946cb491cb0b6\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"tree-sitter\"\nversion = \"0.22.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df7cc499ceadd4dcdf7ec6d4cbc34ece92c3fa07821e287aedecd4416c516dca\"\ndependencies = [\n \"cc\",\n \"regex\",\n]\n\n[[package]]\nname = \"tree-sitter-nickel\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e8b3a80d772b47cef3145983c0f431f7af2c93088695c516d7a89e68216f854\"\ndependencies = [\n \"cc\",\n \"tree-sitter\",\n]\n\n[[package]]\nname = \"triomphe\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6631e42e10b40c0690bf92f404ebcfe6e1fdb480391d15f17cc8e96eeed5369\"\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typed-arena\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6af6ae20167a9ece4bcb41af5b80f8a1f1df981f6391189ce00fd257af04126a\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uluru\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c8a2469e56e6e5095c82ccd3afb98dad95f7af7929aab6d8ba8d6e0f73657da\"\ndependencies = [\n \"arrayvec 0.7.4\",\n]\n\n[[package]]\nname = \"unicode-bom\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eec5d1121208364f6793f7d2e222bf75a915c19557537745b195b253dd64217\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c\"\n\n[[package]]\nname = \"unicode_categories\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e\"\n\n[[package]]\nname = \"unindent\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1766d682d402817b5ac4490b3c3002d91dfa0d22812f341609f97b08757359c\"\n\n[[package]]\nname = \"unsafe-libyaml\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab4c90930b95a82d00dc9e9ac071b4991924390d46cbd0dfe566148667605e4b\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d157f1b96d14500ffdc1f10ba712e780825526c03d9a49b4d0324b0d9113ada\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f00cc9702ca12d3c81455259621e676d0f7251cec66a21e98fe2e9a37db93b2a\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"vte\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5022b5fbf9407086c180e9557be968742d839e68346af7792b8592489732197\"\ndependencies = [\n \"utf8parse\",\n \"vte_generate_state_changes\",\n]\n\n[[package]]\nname = \"vte_generate_state_changes\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d257817081c7dffcdbab24b9e62d2def62e2ff7d00b1c20062551e6cccc145ff\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n]\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f\"\ndependencies = [\n \"cfg-if\",\n \"serde\",\n \"serde_json\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"877b9c3f61ceea0e56331985743b13f3d25c406a7098d45180fb5f09bc19ed97\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed\"\ndependencies = [\n \"quote 1.0.35\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96565907687f7aceb35bc5fc03770a8a0471d82e479f25832f54a0e3f4b28446\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"841c67bff177718f1d4dfefde8d8f0e78f9b6589319ba88312f567fc5841a958\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.4\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.4\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.4\",\n \"windows_aarch64_msvc 0.52.4\",\n \"windows_i686_gnu 0.52.4\",\n \"windows_i686_msvc 0.52.4\",\n \"windows_x86_64_gnu 0.52.4\",\n \"windows_x86_64_gnullvm 0.52.4\",\n \"windows_x86_64_msvc 0.52.4\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winreg\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a277a57398d4bfa075df44f501a17cfdf8542d224f0d36095a2adc7aee4ef0a5\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"xdg\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546\"\n\n[[package]]\nname = \"yaml-rust\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85\"\ndependencies = [\n \"linked-hash-map\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c5b1314b079b0930c31e3af543d8ee1757b1951ae1e1565ec704403a7240ca5\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cc31741b18cb6f1d5ff12f5b7523e3d6eb0852bbbad19d73905511d9849b95\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91ec111ce797d0e0784a1116d0ddcdbea84322cd79e5d5ad173daeba4f93ab55\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ea7b4a3637ea8669cedf0f1fd5c286a17f3de97b8dd5a70a6c167a1730e63a5\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2 1.0.89\",\n \"quote 1.0.35\",\n \"syn 2.0.87\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.927734375,
          "content": "[workspace]\nmembers = [\n    \"core\",\n    \"cli\",\n    \"git\",\n    \"vector\",\n    \"lsp/nls\",\n    \"lsp/lsp-harness\",\n    \"utils\",\n    \"wasm-repl\",\n    \"pyckel\",\n]\nresolver = \"2\"\n\n[workspace.package]\nversion = \"1.9.0\"\nauthors = [\"The Nickel Team <nickel-lang@protonmail.com>\"]\nlicense = \"MIT\"\nedition = \"2021\"\nkeywords = [\"configuration\", \"language\", \"nix\", \"nickel\"]\nrepository = \"https://github.com/tweag/nickel\"\nhomepage = \"https://nickel-lang.org\"\nreadme = \"README.md\"\n\n[workspace.dependencies]\nnickel-lang-core = { version = \"0.10.0\", path = \"./core\", default-features = false }\nnickel-lang-git = { version = \"0.1.0\", path = \"./git\" }\nnickel-lang-vector = { version = \"0.1.0\", path = \"./vector\" }\nnickel-lang-utils = { version = \"0.1.0\", path = \"./utils\" }\nlsp-harness = { version = \"0.1.0\", path = \"./lsp/lsp-harness\" }\n\n# The wasm-bindgen version is pinned using `=` since flake.nix reads the version\n# number from Cargo.lock and needs to have matching output hashes for the source\n# derivation. Combined with caching this would leed to silent inconsistent builds\n# if this version changes without the nix output hashes being updated. It's okay\n# to bump the version (for example if not doing so prevents some dependency from\n# building) but flake.nix needs to be kept in sync.\nwasm-bindgen = \"=0.2.91\"\n\nansi_term = \"0.12\"\nanyhow = \"1.0\"\nassert_cmd = \"2.0.11\"\nassert_matches = \"1.5.0\"\nbincode = \"1.3.3\"\nclap = \"4.3\"\nclap_complete = \"4.3.2\"\ncodespan = { version = \"0.11\", features = [\"serialization\"] }\ncodespan-reporting = { version = \"0.11\", features = [\"serialization\"] }\ncolorchoice = \"1.0.0\"\ncomrak = \"0.24.0\"\ncriterion = \"0.4\"\ncrossbeam = \"0.8.4\"\ncsv = \"1\"\ncxx = \"1.0\"\ncxx-build = \"1.0\"\nderive_more = \"0.99\"\ndirectories = \"4.0.1\"\nenv_logger = \"0.10\"\ngit-version = \"0.3.5\"\ngix = \"0.67.0\"\nindexmap = \"1.9.3\"\nindoc = \"2\"\ninsta = \"1.29.0\"\njs-sys = \"0.3\"\nlalrpop = \"0.20.2\"\nlalrpop-util = \"0.20.2\"\nlazy_static = \"1\"\nlog = \"0.4\"\nlogos = \"0.12\"\nlsp-server = \"0.7\"\nlsp-types = \"0.95\"\nmalachite = \"0.4\"\nmalachite-q = \"0.4\"\nmd-5 = \"0.10.5\"\nonce_cell = \"1.17.1\"\npprof = \"0.11.1\"\npkg-config = \"0.3.27\"\npretty = \"0.11.3\"\npretty_assertions = \"1.3.0\"\npyo3 = \"0.17.3\"\npyo3-build-config = \"0.17.3\"\nregex = \"1\"\nrustyline = \"11.0\"\nrustyline-derive = \"0.8.0\"\nscopeguard = \"1.2.0\"\nserde = \"1.0.164\"\nserde_json = \"1.0.96\"\nserde_repr = \"0.1\"\nserde-wasm-bindgen = \"0.5.0\"\nserde_with = \"3.11.0\"\nserde_yaml = \"0.9.19\"\nsha-1 = \"0.10.0\"\nsha2 = \"0.10.6\"\nsimilar = \"2.2.1\"\nsimple-counter = \"0.1.0\"\nsmallvec = \"1.13.2\"\nstrip-ansi-escapes = \"0.2.0\"\ntermimad = \"0.23.1\"\ntest-generator = \"0.3.1\"\nthiserror = \"1.0.44\"\ntoml = \"0.8\"\ntoml_edit = \"0.22\"\ntyped-arena = \"2.0.2\"\nunicode-segmentation = \"1.10.1\"\nvoid = \"1\"\nbumpalo = \"3.16.0\"\n\nmetrics = \"0.21\"\nmetrics-util = \"0.15\"\n\ntopiary-core = \"0.5.1\"\ntopiary-queries = { version = \"0.5.1\", default-features = false, features = [\"nickel\"] }\ntree-sitter-nickel = \"0.3.0\"\ntempfile = \"3.5.0\"\n\n[profile.dev.package.lalrpop]\nopt-level = 3\n\n[profile.release.package.lalrpop]\nopt-level = 3\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 6.8505859375,
          "content": "# The Nickel developer guide\n\nThere are two ways to set up a development environment for Nickel: using\n[Nix][nix], or directly via your preferred system package manager. Nix is able\nto drop you in a development shell with everything needed (the Rust toolchain,\nmostly) to hack on Nickel in one command, without installing anything globally\non your system. _While Nix is also capable of building Nickel by itself, using\ncargo (either a system-wide installation or the one given by the Nix development\nshell) is the recommended way of building when working on the Nickel repository\nitself_. The reason is that incremental compilation for Rust and Nix is not\nthere yet, and incremental rebuilds using only Nix are going to be painfully\nlong.\n\n## Content\n\nThe Nickel repository consist of various crates:\n\n- `nickel-lang-core` (path: `core`). The main crate containing the interpreter\n   as a library.\n- `nickel-lang-cli` (path: `cli`). The `nickel` binary.\n- `nickel-lang-lsp` (path: `lsp/nls/`). The Nickel Language Server (NLS), an LSP\n  server for Nickel.\n- `nickel-lang-utils`: (path: `utils/`). An auxiliary crate regrouping\n   helpers for tests and benchmarks. Not required to build `nickel` itself.\n- `pyckel` (path: `pyckel`). Python bindings to `nickel-lang-core`.\n- `lsp-harness` (path: `lsp/lsp-harness`). A testing harness for the Nickel Language\n   Server.\n- `nickel-repl` (path: `wasm-repl`). An auxiliary crate, re-exporting\n   `nickel-lang-core` with the right settings for building a WASM repl. Primarily\n   used on [nickel-lang.org].\n\nOther noteworthy items:\n\n- The user manual in `doc/manual/`, as a bunch of markdown files.\n- A VSCode extension for NLS in `lsp/client-extension/`.\n\n## Setup a development environment\n\n### Using Nix\n\nTo set up a development environment using a recent Nix (>= 2.4):\n\n1. Clone the repository: `git clone git@github.com:tweag/nickel.git`\n2. At the root of the repository, run `nix develop`. You should now be dropped\n   in a shell with all the required tool to hack on Nickel (`rust`, `cargo`,\n   etc.)\n\n### Without Nix\n\nOtherwise, you can install the Rust toolchain separately: follow the\ninstructions of the [Rust installation guide][install-rust].\n\n## Building\n\nYou can build all crates at once:\n\n```shell\n$ cargo build --all\n$ ./target/debug/nickel --version\nnickel-lang 0.1.0\n$ ./target/debug/nls --version\nnickel-lang-lsp 0.1.0\n```\n\n### Nickel\n\nTo only build the main crate `nickel-lang-core`, run:\n\n```shell\ncargo build -p nickel-lang-core\n```\n\nTo build the interpreter CLI, run:\n\n```shell\n$ cargo build -p nickel-lang-cli\n$ ./target/debug/nickel --version\nnickel-lang 0.1.0\n```\n\n### NLS (nickel-lang-lsp)\n\nTo build NLS separately, the LSP server for Nickel, build the `nickel-lang-lsp` crate:\n\n```shell\n$ cargo build -p nickel-lang-lsp\n$ ./target/debug/nls --version\nnickel-lang-lsp 0.1.0\n```\n\n(Alternatively, you can run `cargo build` directly inside `lsp/nls/`).\n\n### WebAssembly REPL\n\nThere is a WebAssembly (WASM) version of the REPL, which is used for the online\nplayground on [nickel-lang.org][nickel-lang.org]. To ease the build, we use the\n`nickel-repl` located in `wasm-repl`, which just wraps and re-export\nthe `nickel-lang-core` crate with the right settings for building to WebAssembly.\n\nThe Nix flake has also an output to do the whole build, but incremental\ncompilation is not as good as with direct usage of `cargo`.\n\nBoth methods are described below.\n\n#### Using Nix\n\nAt the root of the repository:\n\n```shell\n$ nix build .#nickelWasm\n$ ls result/nickel-repl\nLICENSE  package.json nickel_lang_bg.js  nickel_lang_bg.wasm [..]\n```\n\n#### Using Cargo\n\n1. [Install `wasm-pack`][install-wasm-pack]\n2. Run `wasm-pack` on the `nickel-repl` crate:\n\n   ```shell\n   cd nickel-repl-wasm\n   wasm-pack build -- --no-default-features --features repl-wasm\n   ```\n\n   A `pkg` directory, containing the corresponding NPM package, should now be\n   available.\n\n## Testing\n\nTests are run via `cargo test`. They are two types of tests:\n\n- Unit tests, located directly in the corresponding module.\n- Integration tests, located in the dedicated crate `core/tests/integration`.\n- Snapshot tests, located in `cli/tests/smapshot`.\n\n### Test annotations\n\nTests are annotated with an expected result in a comment using TOML syntax that\nmust be located at the very beginning of the file. See the implementation in\n`utilities/src/annotated_test.rs` for details. These annotations are also used\nto mark examples, in the top-level subdirectory `examples`, with an expected\nfailure condition if necessary.\n\nTests for the happy path - i.e., valid Nickel programs which do not raise errors\nare generally written in standalone Nickel files in the `core/tests/integration/pass`\ndirectory. All `.ncl` files in this directory are automatically converted into\nRust integration tests, which run the file and assert that no errors were\nraised during evaluation.\n\nEach of these `.ncl` files is structured as an array of `Bool` expressions,\nwhich is ultimately passed to `std.test.check` function defined in the standard\nlibrary. This function applies an `Assert` (`std.test.Assert`) contract to each\nvalue in the array, which checks that the value it is applied to evaluates to\n`true`. The benefit of using a contract for this is that if a test fails we can\nsimply run the file directly using Nickel, which gives better error messages\nthan the ones we get by default from `cargo test`.\n\nTests which are expected to fail may be written in Rust in `core/tests/integration`.\nHowever, simple failure test cases can make use of the test annotation support\nand are located in `core/tests/integration/fail`.\n\n### Snapshot testing\n\nThe project also contains a suite of snapshot tests in the `cli/tests/snapshot`\ndirectory. Here, `.ncl` files written in the subdirectories of the `input`\ndirectory are run against the last-built Nickel binary, and their output is\ncompared to the last-known output.\n\nFailures of these tests do not necessarily mean that anything is wrong. Rather\nit should be seen as an opportunity to review the diffs and either accept\nany changes, or fix any issues introduced.\n\nSee `README.md` in the snapshot testing crate for more detailed guides on\nworking with snapshot tests.\n\n## Benchmarking\n\nIf your change is likely to impact performance, it is recommended to run the\nbenchmark suite on master and on your branch to assess any performance changes.\nPlease report your findings in the description of the PR.\n\nThe benchmark suite is located in the `benches/` directory. To run it:\n\n```shell\ncargo bench\n```\n\nNote that a full run takes some time, up to a dozen of minutes. You can run\nspecific benchmarks instead of the full suite. Please refer to the documentation\nof [`cargo bench`][doc-cargo-bench].\n\n[nix]: https://nixos.org/\n[install-rust]: https://www.rust-lang.org/tools/install\n[install-wasm-pack]: https://rustwasm.github.io/wasm-pack/installer/\n[doc-cargo-bench]: https://doc.rust-lang.org/cargo/commands/cargo-bench.html\n[nickel-lang.org]: https://nickel-lang.org\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "MIT License\n\nCopyright (c) Modus Create LLC and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "RATIONALE.md",
          "type": "blob",
          "size": 22.5498046875,
          "content": "# Why Nickel ?\n\nThere already exist quite a few languages with a similar purpose to Nickel:\n[CUE](https://cuelang.org/), [Dhall](https://dhall-lang.org/),\n[Jsonnet](https://jsonnet.org/),\n[Starlark](https://docs.bazel.build/versions/master/skylark/language.html), to\nmention the closest contenders. So why Nickel ?\n\nNickel originated as an effort to detach the [Nix](https://nixos.org/)\nexpression language from the Nix package manager, while adding typing\ncapabilities and improve modularity. We found that in practice, Nix is a simple\nyet expressive language which is particularly well fitted to build programmable\nconfigurations, and that although other good solutions existed, no one was\nentirely satisfying for our use-cases (mainly Nix, cloud infrastructure and\nbuild systems). Let's review the design choices of Nickel, why they were made,\nand how they compare with the choices of the four aforementioned\nalternatives.\n\n## Table of contents\n\n1. [Design rationale](#design-rationale)\n    - [Functions](#functions)\n    - [Typing](#typing)\n    - [Turing completeness](#turing-completeness)\n    - [Side-effects](#side-effects)\n2. [Why Nickel is not a DSL embedded in an existing language](#why-nickel-is-not-a-dsl-embedded-in-an-existing-language)\n    - [Error messages](#error-messages)\n    - [LSP integration](#lsp-integration)\n    - [Haskell is heavy](#haskell-is-heavy)\n    - [Haskell is not familiar](#haskell-is-not-familiar)\n    - [Is it really less work?](#is-it-really-less-work)\n3. [Comparison with alternatives](#comparison-with-alternatives)\n    - [Starlark](#starlark-the-standard-package)\n    - [Nix](#nix-json-and-functions)\n    - [Dhall](#dhall-powerful-type-system)\n    - [CUE](#cue-opinionated-data-validation)\n    - [Jsonnet](#jsonnet-json-functions-and-inheritance)\n\n## Design rationale\n\n### Functions\n\nThe main contribution of a configuration language over a static configuration is\n*abstraction*: make the same code reusable in different contexts by just varying\nsome inputs, instead of pasting variations of the same chunks all over the\ncodebase, making them hard to maintain and to extend.  Abstraction is achievable\nby several means: for example, a pure object oriented language like Java uses\nobjects as a primary structuring block.\n\nNickel (and other languages of the list, for that matter) uses *functions* as a\nbasic computational block. Functions are simple and well understood (some inputs\ngive an output), pervasive (as macros, procedures, methods, etc.), and\ncomposable.  Nickel is *functional*, in the sense that functions are moreover\nfirst-class: they can be created everywhere, passed around as any other value,\nand called at will.\n\n### Typing\n\nOne recurring difference between Nickel and other configuration languages is\nthat Nickel has a static type system. The trade-offs of static typing for\nconfigurations are different than in the case of a general purpose programming\nlanguage.\n\n#### Reusable versus specific code\n\nWe can divide code in two categories:\n\n1. Configuration-specific code: local code that will only be used for the\n   generation of said configuration.\n2. Reusable code: code that is used in several configurations and will be\n    potentially used in many more. Basically, library code.\n\nAs opposed to a traditional program which interacts with external agents (a\nuser, a database, a web service, ...), configuration-specific code will\nalways be evaluated on the same inputs. Thus any type error will be visible at\nevaluation time anyway. In this case types can only get in the way, as they may\nrequire annotations and forbids correct but non typable code, while not really\nadding value.\n\nOn the other hand, reusable code may be called on infinitely many different inputs:\n\n```nickel\nlet f x = fun x => if x < 1000 then x + 1 else x ++ 2\n```\n\nIn this contrived but illustrative example, `f` can work fine on a thousand\ninputs, but fails on the next one. Functions in general can never be tested\nexhaustively.  Meanwhile, static typing would catch the typo `x ++ 2` even\nbefore the first usage.\n\nTo this problem, Nickel offers the solution of a gradual type system which\nsupports a mix of both typed and non typed parts, with the following\nperks:\n\n- You get to chose when to use static typing or not.\n- You can write code without any type annotation even when calling to statically\n  typed code.\n- You can start with a totally untyped codebase and gradually (hence the\n    name) type it parts by parts.\n- Nickel automatically insert checks at the boundary between the typed and the\n    untyped world to report type mismatches early.\n\n#### Typing JSON\n\n<!-- markdownlint-disable MD051 -->\n\nThe second motivation for a non fully static type system is that some code may\nbe hard to type. JSON is a de-facto standard format for configuration and Nickel\naims at being straightforwardly convertible to and from JSON. If it were to be\nfully statically typed, it would have to type things like heterogeneous lists:\n`[{ field: 1 }, { differentField: 2}]`, which is doable but not trivial (see the\n[comparison with Dhall](#Dhall:-powerful-type-system)). Nickel made the choice\nof offering typing capabilities for common idioms, but when the type system\nfalls short of expressivity, you can still write your code without types.\n\n<!-- markdownlint-enable MD051 -->\n\n#### Data validation\n\nAnother peculiarity is that there is an external tool which will consume the\nconfiguration at the end. The generated configuration has to conform to a\nspecification dictated by this tool, which is a priori alien to the generating\nprogram.\n\nIn the following example,\n\n```json\n{\n  ...\n  \"id\": \"www.github.com/nickel/back\",\n  \"baseURL\": 2\n}\n```\n\nthe configuration language has no reason to suspect that `id` and `baseURL`\ncontents have been mistakenly swapped. It would need to be aware of the fact\nthat `id` should be an integer and `baseURL` a string. Surely, an error will\neventually pop up downstream in the pipeline, but how and when? Will the bug be\neasy to track down if the data has gone through several transformations, inside\nthe program itself or later in the pipeline ?  Using types, the generating\nlanguage is no more oblivious to these external schemas and can model them\ninternally, enabling early and precise error reporting.\n\nIn Nickel, such schemas are specified using metadata. Metadata can provide\ndocumentation, a default value, or even a runtime type. Runtime types so\nspecified are called *contracts*: they are not part of the static type system,\nbut rather offer a principled approach to dynamic type checking. They enforce\ntypes (or more complex, user-defined assertions) at runtime. Equipped with\nmetadata, one can for example enforce that `baseURL` is not only a string but a\nvalid URL, and attach documentation to specify that it should be the Github\nhomepage of a project.\n\n### Turing completeness\n\nAll listed languages but Jsonnet forbid general recursion, and are hence non\nTuring-complete. The idea is that generating configuration should always\nterminate, and combinators on collections (e.g. `map` or `fold`) - or equivalent\nbounded loops - are enough in practice: why take the risk of writing programs\nstuck in an infinite loop for no reward ? On the other hand, one can write\nprograms with huge running time and complexity even in a language which is not\nTuring-complete \\[1\\].  Also, while configuration-specific code almost\nnever requires recursion, this is not the case with library code. Allowing\nrecursion makes it possible for programmers to implement new generic\nfunctionalities \\[2\\].\n\n\\[1\\]: [Why Dhall is not Turing complete](https://www.haskellforall.com/2020/01/why-dhall-advertises-absence-of-turing.html)\\\n\\[2\\]: [Turing incomplete languages](https://neilmitchell.blogspot.com/2020/11/turing-incomplete-languages.html)\n\n### Side-Effects\n\nAs for Turing-completeness, most of these languages also forbid side-effects.\nSide-effects suffer from general drawbacks: they make code harder to reason\nabout, to compose, to refactor and to parallelize. In general-purpose\nprogramming languages they are a necessary evil, the game being to circumscribe\ntheir usage and limit their effects. However, they may not be necessary at all\nfor a configuration language, which has no reason to mess with the file system\nor to send a network packet. External, fixed inputs may be provided as inputs to\nthe program without requiring it to interact directly with, say, environment\nvariables.\n\nHowever, sometimes the situation does not fit in a rigid framework: as for\nTuring-completeness, there may be cases which mandates side-effects. An example\nis when writing [Terraform](https://www.terraform.io/) configurations, some\nexternal values (an IP) used somewhere in the configuration may only be known\nonce another part of the configuration has been evaluated and executed\n(deploying machines, in this context). Reading this IP is a side-effect, even if\nnot called so in Terraform's terminology.\n\nNickel permits side-effects, but they are heavily constrained: they must be\ncommutative, a property which makes them not hurting parallelizability. They are\nextensible, meaning that third-party may define new effects and implement\nexternally the associated effect handlers in order to customize Nickel for\nspecific use-cases.\n\n## Why Nickel is not a DSL embedded in an existing language\n\nUsing an existing language to embed configuration is a common approach. In this\nsection, we'll try to answer the question why Nickel isn't a DSL embedded in,\nsay, Haskell.\n\nOn the front of Infrastructure-as-Code, Pulumi adopted a similar approach:\ninstead of creating their own new deployment language, they chose to leverage\nknown, mature and well-equipped programming languages to write deployments.\n\nWhile embedding brings obvious advantages, it also comes with its lot of issues.\n\n### Error messages\n\nThe end result of Nickel being a useful tool is, all in all, error messages\n(not only, but it's the user-facing consequence of the majority of correctness\nfeatures such as typechecking and contracts). It doesn't help to have a very\nfancy types and contracts system if you're unable to diagnose when something\ngoes wrong.\n\nEmbedding Nickel in Haskell would probably make error messages unusable. They\ncan already be suboptimal for normal Haskell, but adding for example row\npolymorphism encoded in the Haskell type system would be worse. Encoding\nNickel's gradual type system in a usable way in Haskell might prove challenging\nas well.\n\nThe contract system alone could be easily implemented in any functional language\nwithout much native support (including Nix). Once again, the big difference\nNickel hopes to make is error messages (beside naturality of the syntax, LSP\nsupport and so on). Being built-in, contract error reporting has special support\nin the interpreter with access to source positions, the call stack, and so on.\nThis is much harder to replicate in a host language.\n\n### LSP integration\n\nThe same arguments apply to the LSP. The Nickel LSP currently features record\ncompletion based on both type information, contract information, and bare record\nstructures. This is the kind of feature that makes using Nickel for e.g.\nKubernetes appealing: even without functions and types, getting completion with\ndocumentation in-code is already valuable. This is not possible for a generic\nHaskell LSP, with no knowledge of DSLs such as Nickel.\n\n### Haskell is heavy\n\nOne of the possible use-case of Nickel would be to embed Nickel, either as a\nbinary or linked to it as a C library, into another tool to use (think a cloud\norchestrator like Terraform). Pulling all of the GHC toolchain to evaluate a few\nhundred lines of configuration sounds overkill. Garbage collection and\nHaskell runtime makes it also harder to interface it with other languages and\nbinaries (hence the choice of Rust to implement Nickel).\n\n### Haskell is not familiar\n\nAnother goal of Nickel is to be understandable by DevOps, not only by functional\nprogrammers. In particular, as long as you don't write library code yourself,\nthe syntax is JSON-like and doesn't use very fancy constructions (custom\ncontracts are often implemented externally to the configuration itself, and\nbasic contracts look like JSON schemas). Changing some configuration option\nshould be trivial to do for non-developers. This is also harder to achieve in a\nHaskell DSL.\n\n### Is it really less work\n\nA big part of the work of developing Nickel is language design and\nexperimentation. I think implementing the core language from scratch, now that\nwe have a good idea of what it looks like, wouldn't be a daunting task.\n\nAnother aspect is developing the tooling, and indeed we could get some for free\nif we piggy-backed on Haskell. But the Haskell tooling would be close to useless\nfor such an advanced DSL anyway, as mentioned in the previous paragraphs.\n\nFinally, embedding Nickel in Haskell would also involve constraints and work\nthat we don't have for a stand-alone language (such as encoding the type system\nof Nickel inside the one of Haskell).\n\nIn conclusion, it's hard to tell, but it doesn't seem totally obvious that\nembedding Nickel in Haskell from the beginning would have been much less work\nthan starting a language from scratch.\n\n## Comparison with alternatives\n\nLet's compare Nickel with the languages cited at the beginning: Starlark, Nix\nexpressions, Dhall, CUE, Jsonnet.\n\n### Starlark: the standard package\n\nStarlark is a language originally designed for the [Bazel](https://bazel.build/)\nbuild system, but it can also be used independently as a configuration language.\nIt is a dialect of Python and includes the following classical features:\n\n- First-class functions: abstraction and code-reuse\n- Basic data structure: list and dictionaries\n- Dynamic typing: no type annotations\n\nWith the following restrictions:\n\n- No recursion: the language is not Turing-complete\n- No side-effects: execution cannot access the file system, network or system clock.\n\nIn summary, Starlark comes with a sensible basic set of capabilities which is\ngood enough to enable the writing of parametrizable and reusable configurations.\n\n### Starlark vs Nickel\n\nStarlark forbids recursion and side-effects which are allowed in Nickel. It\nlacks a static type system, which hampers the ability to write robust library\ncode and prevents the expression of data schemas inside the language.\n\n### Nix: JSON and functions\n\nNix (sometimes called Nix expressions in full) is the language used by the [Nix\npackage manager](https://nixos.org/). It is a direct inspiration for Nickel, and\nwriting packages for Nix is an important target use-case.\n\nNix has a simple core: JSON datatypes combined with higher-order functions,\nrecursion and lazy evaluation. The Nix language is rather tightly integrated\nwith the Nix package manager, making it not trivial to use as a standalone\nconfiguration language. Its builtins, including a few side-effects, are also\noriented toward the package management use-case.\n\n### Nix vs Nickel\n\nNickel builds on the same core as Nix (JSON plus functions), and is in fact not\nfar from being a superset of the Nix language.\n\nHowever, Nix lacks any native typing and validation capabilities, which Nickel\nbrings through static typing and contracts.\n\nThe merge system of Nickel is also in part inspired from the NixOS module\nsystem. The NixOS module system has similar concepts but is implemented fully as\na Nix library. The rationale behind the merge system of Nickel is to bring back\nmerging into the scope of the language itself, bringing uniformity and\nconsistency, and potentially improving performance and error messages.\nAdditionally, native merging is also more ergonomic: in Nickel, merging doesn't\nrely on an external module system, but works out of the box with plain records,\nmaking it possible to use for other targets than Nix. Data validation directly\nleverages metavalues and the contract system, instead of user-defined patterns\nsuch as `mkOption` and the like (making them in particular discoverable by e.g.\ncode editors and IDEs)\n\n### Dhall: powerful type system\n\nDhall is heavily inspired by Nix, to which it adds a [powerful type\nsystem](https://github.com/dhall-lang/dhall-lang/blob/master/standard/README.md#summary).\nBecause of its complexity, the type system only supports a limited type\ninference.  This can lead to code that is sometimes heavy on type annotations,\nas in the following example:\n\n```dhall\nlet filterOptional\n    : ∀(a : Type) → ∀(b : Type) → (a → Optional b) → List a → List b\n    =   λ(a : Type)\n      → λ(b : Type)\n      → λ(f : a → Optional b)\n      → λ(l : List a)\n      → List/build\n        b\n        (   λ(list : Type)\n          → λ(cons : b → list → list)\n          → λ(nil : list)\n          → List/fold\n            a\n            l\n            list\n            (   λ(x : a)\n              → λ(xs : list)\n              → Optional/fold b (f x) list (λ(opt : b) → cons opt xs) xs\n            )\n            nil\n        )\n\nin  filterOptional\n```\n\nAs stated in the [reusable vs specific](#reusable-versus-specific-code) section,\nconfiguration-specific code does not benefit much from static typing. Functions\nused as temporary values in such code, for example the anonymous function in\n`map (fun x => x ++ \".jpg\") baseFilesList`, require type annotations in Dhall.\n\nAnother point is that code is sometimes difficult to type, as raised in [typing\nJSON](#typing-json). Typically, Dhall lists must be homogeneous: all elements\nmust have the same type. In particular, you can't represent directly the\nfollowing list of objects with different structure, which is valid JSON `[{a:\n1}, {b: 2}]`. One has to write:\n\n```dhall\nlet Union = < Left : {a : Natural} | Right : {b : Natural} >\nin [Union.Left {a = 1}, Union.Right {b = 2}]\n```\n\nand write boilerplate code accordingly when manipulating this list.\n\n### Dhall vs Nickel\n\nDhall is entirely statically typed, with an expressive but complex type system.\nIt requires type annotations, and may add boilerplate for code that is hard to\ntype, while Nickel prefers the mixed approach of gradual typing. As Starlark,\nand as opposed to Nickel, Dhall forbids recursion and side-effects.\n\n### CUE: opinionated data validation\n\nCUE is quite a different beast. It focuses on data validation rather than\nboilerplate removal. To do so, it sacrifices flexibility by not supporting not\nonly general recursion, but even general functions, in exchange of a\nparticularly well-behaved system. In CUE, everything is basically a type:\nconcrete values are just types so constrained that they only have one\ninhabitant. These types form a lattice, which means they come with a union and\nan intersection operation.\n\nThis provides:\n\n- Merging: combine mixed schemas and values together in a well behaved way\n  (merge is commutative, everywhere defined and idempotent)\n- Querying: synthesize values inhabiting a type\n- Trimming: Automatically simplify code\n\nNickel's merge system and metadata are inspired by CUE's type lattice,\nalthough the flexibility of Nickel necessarily makes the two system behave\ndifferently.\n\n### CUE vs Nickel\n\nCUE is an outsider. While it produces elegant code, is backed by a solid theory\nand is excellent at data validation, it seems less adapted to generating\nconfiguration in general. It is also heavily constrained, which might be\nlimiting for specific use-cases.\n\n### Jsonnet: JSON, functions and inheritance\n\nIn this list, Jsonnet is arguably the closest language to Nickel. As Nickel, it\nis a JSON with higher-order functions, recursion and lazy evaluation. It\nfeatures a simplified object system with inheritance, which achieves similar\nfunctionalities to Nickel's merge system.\n\n### Jsonnet vs Nickel\n\nThe main difference between Jsonnet and Nickel are types. Jsonnet does not\nfeature static types, contracts or metadata, and thus can't type library code\nand has no principled approach to data validation.\n\n### KCL: python-like syntax with object-oriented schemas\n\nThe KCL configuration language supports validation against object-oriented\nschemas that can be combined through inheritance and mixins. It has functions\nand modules, supports configuration merging,\nand ships with a large collection of validation modules.\n\n### KCL vs Nickel\n\nThe KCL typesystem feels more nominal and object-oriented than Nickel's:\n\n- in KCL you specify the name of the schema when you're writing out the object\n  that's supposed to conform to it; in Nickel, you can write out a record first\n  and then apply the contract at some later point\n- in KCL, schema inheritance and mixins are written explicitly; in Nickel, complex\n  contracts are built compositionally, by merging smaller ones.\n\nBut the bigger difference is that KCL's schema validation is strict while Nickel's\nis lazy. This may make Nickel better suited to partial evaluation of large\nconfigurations.\n\n### Comparison with other configuration languages\n<!-- Intentionally duplicated in `README.md`, please update the other one for\nany change done here -->\n\n| Language | Typing                        | Recursion  | Evaluation | Side-effects                                     |\n|----------|-------------------------------|------------|------------|--------------------------------------------------|\n| Nickel   | Gradual (dynamic + static)    | Yes        | Lazy       | Yes (constrained, planned)                       |\n| Starlark | Dynamic                       | No         | Strict     | No                                               |\n| Nix      | Dynamic                       | Yes        | Lazy       | Predefined and specialized to package management |\n| Dhall    | Static (requires annotations) | Restricted | Lazy       | No                                               |\n| CUE      | Static (everything is a type) | No         | Lazy       | No, but allowed in the separated scripting layer |\n| Jsonnet  | Dynamic                       | Yes        | Lazy       | No                                               |\n| KCL      | Gradual (dynamic + static)    | Yes        | Strict     | No                                               |\n| JSON     | None                          | No         | Strict     | No                                               |\n| YAML     | None                          | No         | N/A        | No                                               |\n| TOML     | None                          | No         | N/A        | No                                               |\n\n## Conclusion\n\nWe outlined our motivations for creating Nickel, our main design choices and why\nwe made them. To give an idea of the position of Nickel in the ecosystem, we\ncompared it to a handful of related languages.  They are all very well designed\nand offer working solutions for configuration generation, but we felt like there\nwas still room for a simple but expressive functional language, with a type\nsystem hitting a sweet spot between expressiveness and ease-of-use, a nice way\nof expressing data schemas inside the language and a merge system for easy\nmodularity.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.671875,
          "content": "# Nickel\n\n[![Continuous integration](https://github.com/tweag/nickel/workflows/Continuous%20integration/badge.svg)](https://github.com/tweag/nickel/actions?query=branch%3Amaster)\n[![Website](https://img.shields.io/website-up-down-green-red/http/cv.lbesson.qc.to.svg)](https://nickel-lang.org)\n[![Discord](https://img.shields.io/badge/Discord-100000?style=flat&logo=Discord&logoColor=C3C3C3&labelColor=4179DA&color=010101)][discord]\n\nNickel is the cheap configuration language.\n\nIts purpose is to automate the generation of static configuration files - think\nJSON, YAML, XML, or your favorite data representation language - that are then\nfed to another system. It is designed to have a simple, well-understood core: it\nis in essence JSON with functions.\n\nNickel's salient traits are:\n\n- **Lightweight**: Nickel is easy to embed. An interpreter should be simple to\n    implement. The reference interpreter can be called from many programming\n    languages.\n- **Composable code**: the basic building blocks for computing are functions.\n    They are first-class citizens, which can be passed around, called and\n    composed.\n- **Composable data**: the basic building blocks for data are records\n    (called *objects* in JSON). In Nickel, records can be merged at will,\n    including associated metadata (documentation, default values, type\n    contracts, etc).\n- **Typed, but only when it helps**: static types improve code quality, serve as\n    documentation and eliminate bugs early. But application-specific\n    self-contained code will always evaluate to the same value, so type errors\n    will show up at runtime anyway. Some JSON is hard to type. There, types are\n    only a burden. Whereas reusable code - that is, *functions* - is evaluated\n    on potentially infinitely many different inputs, and is impossible to test\n    exhaustively. There, types are precious. Nickel has types, but you get to\n    choose when you want it or not, and it handles safely the interaction between\n    the typed and the untyped world.\n- **Design by contract**: complementary to the type system, contracts are\n    a principled approach to checking assertions. The interpreter automatically\n    inserts assertions at the boundary between typed and untyped code. Nickel\n    lets users add arbitrary assertions of their own and easily understand why\n    when assertions fail.\n\nThe motto guiding Nickel's design is:\n> Great defaults, design for extensibility\n\nThere should be a standard, clear path for common things. There should be no\narbitrary restrictions that limit what you can do you the one day you need to go\nbeyond.\n\n## Use cases\n\nNickel is a good fit in any situation where you need to generate a complex\nconfiguration, be it for a single app, a machine, whole infrastructure, or a\nbuild system.\n\nThe motivating use cases are in particular:\n\n- The [Nix package manager](https://nixos.org/): Nix is a declarative package\n    manager using its own language for specifying packages. Nickel is an\n    evolution of the Nix language, while trying to overcome some of its\n    limitations.\n- Infrastructure as code: infrastructure is becoming increasingly complex,\n    requiring a rigorous approach to deployment, modification and configuration.\n    This is where a declarative approach also shines, as adopted by\n    [Terraform](https://www.terraform.io/),\n    [NixOps](https://github.com/NixOS/nixops) or\n    [Kubernetes](https://kubernetes.io/), all requiring potentially complex\n    generation of configuration.\n- Build systems: build systems (like [Bazel](https://bazel.build/)) need\n    a specification of the dependency graph.\n\nMost aforementioned projects have their own bespoke configuration language. See\n[Comparison](#comparison). In\ngeneral, application-specific languages might suffer from feature creep, lack of\nabstractions or just feel ad hoc. Nickel buys you more for less.\n\n## The Nickel ecosystem\n\nRelated projects that are part of the Nickel ecosystem:\n\n- [Terraform-Nickel](https://github.com/tweag/tf-ncl): write Terraform\n    configuration with Nickel\n- [Organist](https://github.com/nickel-lang/organist): batteries included\n    environments with Nickel inside\n- [json-schema-to-nickel](https://github.com/nickel-lang/json-schema-to-nickel):\n    generate Nickel contracts from JSON schema specifications.\n- [rules_nickel](https://github.com/nickel-lang/rules_nickel): generate\n    configuration files using Nickel during a Bazel build\n- The [nickel-lang](https://github.com/nickel-lang) organization hosts various\n    smaller projects, including a tree-sitter grammar definition for Nickel and\n    editor plugins.\n\n## Getting started\n\nPlease follow the getting started guide for Nickel users on the [nickel-lang\nwebsite](https://nickel-lang.org/getting-started). The instructions below are\neither reproduced for this document to be self-contained or because\nthey are aimed toward hacking on the Nickel interpreter itself (e.g. building\nthe `nickel-lang-core` crate documentation).\n\n### Run\n\n1. Get a Nickel binary:\n   - With [flake-enabled](https://nixos.wiki/wiki/Flakes) Nix, run\n     Nickel directly with `nix run github:tweag/nickel`. You can use [our binary\n     cache](https://tweag-nickel.cachix.org/) to prevent rebuilding a lot of\n     packages. Pass arguments to Nickel with an extra `--` as in `nix run\n     github:tweag/nickel -- repl`,\n   - Again with flake-enabled Nix, you can install Nickel in your profile with\n     `nix profile install github:tweag/nickel`. The `nickel` command is then in your\n     `$PATH` and is available anywhere.\n   - If you're running macOS you can use Homebrew to install the Nickel binary\n     with `brew install nickel`.\n   - Without Nix, you can use `cargo run --bin nickel` after [building](#build),\n     passing arguments with an extra `--` as in\n     `cargo run --bin nickel -- eval program.ncl`.\n\n2. Run your first program:\n\n    ```console\n    $ nickel eval <<< '[\"hello\", \"world\"] |> std.string.join \", \"'\n    \"hello, world\"\n    ```\n\n    Or load it from a file:\n\n    ```console\n    $ echo 'let s = \"world\" in \"hello, %{s}\"' > program.ncl\n    $ nickel eval program.ncl\n    \"hello, world\"\n    ```\n\n3. Start a REPL:\n\n    ```console\n    $ nickel repl\n    nickel> {\"hello\" = true, \"world\" = true, \"universe\" = false}\n      |> std.record.to_array\n      |> std.array.filter (fun {field, value} => value)\n      |> std.array.map (fun {field, value} => field)\n      |> std.string.join \", \"\n\n    \"hello, world\"\n    ```\n\n    Use `:help` for a list of available commands.\n4. Export your configuration to JSON, YAML or TOML:\n\n  ```console\n  $ nickel export --format json <<< '{content = \"hello, world\"}'\n  {\n    \"content\": \"hello, world\"\n  }\n  ```\n\nUse `nickel help` for a list of subcommands, and `nickel help <subcommand>`\nfor help about a specific subcommand.\n\nTo get in touch, you can join our\n[![Discord](https://img.shields.io/badge/Discord-100000?style=flat&logo=Discord&logoColor=C3C3C3&labelColor=4179DA&color=010101)][discord]\nserver.\n\n#### Editor Setup\n\nNickel has syntax highlighting plugins for Vim/Neovim, and VSCode. In-editor\ndiagnostics, type hints, and auto-completion are provided by the Nickel Language\nServer. Please follow\n[the LSP guide](https://github.com/tweag/nickel/tree/master/lsp) to set up syntax\nhighlighting and NLS.\n\n#### Formatting\n\nTo format one or several Nickel source files, use `nickel format`:\n\n```console\nnickel format network.ncl container.ncl api.ncl\n```\n\nNickel uses [Topiary](https://github.com/tweag/topiary/) to format Nickel code\nunder the hood.\n\nPlease follow the Formatting Capabilities section of the [LSP\ndocumentation](https://github.com/tweag/nickel/tree/master/lsp) to know how to\nhook up the Nickel LSP and Topiary in order to enable formatting inside your\ncode editor.\n\n### Build\n\n[rust-guide]: https://doc.rust-lang.org/cargo/getting-started/installation.html\n\n1. Download build dependencies:\n\n   - **With Nix**: If you have [Nix](https://nixos.org/nix) installed:\n\n     ```console\n     nix-shell # if you don't use Nix flakes\n     nix develop # if you use Nix flakes\n     ```\n\n     You will be dropped in a shell, ready to build. You can use\n     [our binary cache](https://tweag-nickel.cachix.org/) to prevent rebuilding\n     a lot of packages.\n   - **Without Nix**: otherwise, follow [this guide][rust-guide] to install Rust\n     and Cargo first.\n\n1. Build Nickel:\n\n   ```console\n   cargo build -p nickel-lang-cli --release\n   ```\n\n   And voilà! Generated files are placed in `target/release`.\n\n   You can directly build and run the Nickel binary and pass argument after `--`\n   by using `cargo run`:\n\n   ```console\n   cargo run --bin nickel -- eval foo.ncl\n   ```\n\n### Test\n\nRun tests with\n\n```console\ncargo test\n```\n\n### Documentation\n\nThe user manual is available [on the nickel-lang.org\nwebsite](https://nickel-lang.org/user-manual/introduction), and in this\nrepository as a collection of Markdown files in `doc/manual`.\n\nTo get the documentation of the `nickel-lang` codebase itself:\n\n1. Build the doc:\n\n    ```console\n    cargo doc --no-deps\n    ```\n\n2. Open the file `target/doc/nickel/index.html` in your browser.\n\n### Examples\n\nYou can find examples in the [`./examples`](./examples) directory.\n\n## Current state and roadmap\n\nSince version 1.0 released in May 2023, the core design of the language is\nstable and Nickel is useful for real-world applications. The next steps we plan\nto work on are:\n\nThe next steps we plan to work on are:\n\n- Nix integration: being able to seamlessly use Nickel to write packages and\n  shells ([Organist](https://github.com/nickel-lang/organist))\n- Custom merge functions (second part of the\n  [overriding\n  proposal](https://github.com/tweag/nickel/blob/9fd6e436c0db8f101d4eb26cf97c4993357a7c38/rfcs/001-overriding.md))\n- Incremental evaluation: design an incremental evaluation model and a caching\n  mechanism in order to perform fast re-evaluation upon small changes to a\n  configuration.\n- Performance improvements\n\n## Comparison\n\n- [CUE](https://cuelang.org/) is a configuration language with a focus on data\n    validation. It introduces a new constraint system backed by a solid theory\n    which ensures strong guarantees about your code. It allows for very elegant\n    schema specifications. In return, the cost to pay is to abandon functions\n    and\n    [Turing-completeness](https://en.wikipedia.org/wiki/Turing_completeness).\n    Nickel's merge system is inspired by the one of CUE, even if since Nickel\n    does have general functions and is Turing-complete, they are necessarily\n    different.\n- [Nix](https://nixos.org/): The Nix language, or *Nix expressions*, is one of\n    the main inspirations for Nickel. It is a very simple yet powerful lazy\n    functional language. We strive to retain this simplicity, while adding\n    typing capabilities, modularity, and detaching the language from the Nix\n    package manager.\n- [Dhall](https://dhall-lang.org/) is a statically typed configuration language.\n    It is also inspired by Nix, to which it adds a powerful static type system.\n    However, this forces the programmer to annotate all of their code with types.\n- [Jsonnet](https://jsonnet.org/) is another language which could be dubbed as\n    \"JSON with functions\" (and others things as well). It is a lazy functional\n    language with object-oriented features, among which inheritance is similar\n    to Nickel's merge system. One big difference with Nickel is the absence of\n    typing.\n- [KCL](https://kcl-lang.io/) is a gradually typed configuration language whose validation\n    is based on object-oriented schemas that can be extended through inheritance.\n    Unlike the languages above, its evaluation is strict.\n- [Pulumi](https://www.pulumi.com/) is not a language in itself, but a cloud\n    tool (like Terraform) where you can use your preferred language for\n    describing your infrastructure. This is a different approach to the problem,\n    with different trade-offs.\n- [Starlark](https://docs.bazel.build/versions/master/skylark/language.html) is\n    the language of [Bazel](https://bazel.build/), which is a dialect of\n    [Python](https://www.python.org/). It does not have types and recursion is\n    forbidden, making it not Turing-complete.\n\nSee [RATIONALE.md](./RATIONALE.md) for the design rationale and a more detailed\ncomparison with these languages.\n\n### Comparison with other configuration languages\n<!-- Intentionally duplicated in `RATIONALE.md`, please update the other one for\nany change done here -->\n\n| Language | Typing                        | Recursion  | Evaluation | Side-effects                                     |\n|----------|-------------------------------|------------|------------|--------------------------------------------------|\n| Nickel   | Gradual (dynamic + static)    | Yes        | Lazy       | Yes (constrained, planned)                       |\n| Starlark | Dynamic                       | No         | Strict     | No                                               |\n| Nix      | Dynamic                       | Yes        | Lazy       | Predefined and specialized to package management |\n| Dhall    | Static (requires annotations) | Restricted | Lazy       | No                                               |\n| CUE      | Static (everything is a type) | No         | Lazy       | No, but allowed in the separated scripting layer |\n| Jsonnet  | Dynamic                       | Yes        | Lazy       | No                                               |\n| KCL      | Gradual (dynamic + static)    | Yes        | Strict     | No                                               |\n| JSON     | None                          | No         | Strict     | No                                               |\n| YAML     | None                          | No         | N/A        | No                                               |\n| TOML     | None                          | No         | N/A        | No                                               |\n\n[discord]: https://discord.gg/vYDnJYBmax\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 46.650390625,
          "content": "Version 1.9 (2024-11-12)\n========================\n\nNickel 1.9 includes various bug fixes and quality of life improvements.\n\nNoteworthy additions are:\n\n- let-blocks: declaring several variables at once instead of chaining\n  `let ... in ...`\n- explicit import: the ability to specify explicitly the format of an imported\n  file (it was based on the file extension implicitly and would default\n  to Nickel), e.g. as `import \"foo.txt\" as 'Json` or `import \"bar.ncl\" as\n  'Text`.\n- the addition of a `nickel test` command that can extract snippets from the\n  in-code documentation (the `| doc` metadata) together with their expected\n  result and run them. The feature is detailed in a new CLI chapter of the user\n  manual.\n\nTwo important future evolutions have been designed and discussed through RFCs:\npackage management and a performant bytecode virtual machine. Those features\naren't implemented yet, but the initial designs have been agreed upon.\n\nBreaking changes\n----------------\n\n* Formatting: the formatting of let bindings has been fixed and improved. To\n  avoid a large, irrelevant diff on your next commits, we advise formatting your\n  whole codebase first after upgrading to 1.9 in a separate commit.\n\nCore language\n-------------\n\n* Let blocks by @jneem ([#2010](https://github.com/tweag/nickel/pull/2010),\n  [#2031](https://github.com/tweag/nickel/pull/2031),\n  [#2051](https://github.com/tweag/nickel/pull/2051))\n* Fix unsound record contract deduplication by @yannham in https://github.com/tweag/nickel/pull/2042\n* Explicit import format: `import \"sample.html\" as 'Text` by @vi\n  ([#2036](https://github.com/tweag/nickel/pull/2036),\n  [#2070](https://github.com/tweag/nickel/pull/2070))\n* Thunks for resolved imports (detect import infinite loops and avoid work duplication) by @jneem in https://github.com/tweag/nickel/pull/2052\n* Use a persistent vector to represent arrays instead of an `Rc<[..]>` by @jneem in [#2057](https://github.com/tweag/nickel/pull/2057\n\nDocumentation\n-------------\n\n* Add a manual chapter for the cli. by @jneem in https://github.com/tweag/nickel/pull/2065\n* [RFC006] Package management by @jneem in https://github.com/tweag/nickel/pull/1983\n* [RFC007] Bytecode interpreter by @yannham in https://github.com/tweag/nickel/pull/2045\n\nLSP\n---\n\n* Remove the option for an external formatter in nls by @jneem in https://github.com/tweag/nickel/pull/2064\n* Fix completions in incomplete field name position. by @jneem in https://github.com/tweag/nickel/pull/2069\n* Bound the length of nls completions by @jneem in https://github.com/tweag/nickel/pull/2073\n\nTooling\n-------\n\n* Add `--format` argument to `nickel query` command by @suimong in https://github.com/tweag/nickel/pull/2015\n* Adds a `nickel test` subcommand for testing examples in docs. by @jneem in https://github.com/tweag/nickel/pull/2020\n* Detect infinite recursions in `nickel doc` by @yannham in https://github.com/tweag/nickel/pull/2055\n* Strict typechecking mode by @jneem in https://github.com/tweag/nickel/pull/2077\n* Switch to toml-edit for spanned deserialization fixing TOML deserialization bug by @jneem in https://github.com/tweag/nickel/pull/2074\n* Make serde-wasm-bindgen optional in core by @akavel in https://github.com/tweag/nickel/pull/2089\n* Move 'clap' crate dependency behind feature flag in core by @akavel in https://github.com/tweag/nickel/pull/2090\n\nVersion 1.8 (2024-09-09)\n========================\n\nAfter a summer break, the team is happy to release Nickel 1.8!\n\nThis release ships with an important rework of the contract system, and in\nparticular the interface of custom contracts. The new system is more intuitive\nfor users implementing their own contracts, and makes it possible to use a\nlimited form of boolean logic on contracts that have been added to the stdlib\n(`std.contract.one_of`, `std.contract.all_of`, `std.contract.not`,\n`std.contract.check`).\n\nWe advise reading the updated manual section on writing custom contracts and to\nmigrate your custom contracts to take advantage of the simplification of the\ninterface and those new operators. A lot of custom contract can most likely be\nimplemented as validators (see `std.contract.from_validator`).\n\nThe contract system rework is backward compatible and existing custom contracts\nwill continue to work as before. Though in the future, Nickel will probably emit\na warning of deprecation when a custom contract is defined as a naked function\ninstead of using one of the new contract constructor.\n\nA limited form of subtyping has been added in 1.8 as well, making it easier to\nuse records as dictionaries in statically typed code. A new paragraph has been\nadded to the typing chapter of the manual accordingly.\n\nBreaking changes\n----------------\n\n* Formatting: to better accommodate the new contract system, the formatting of\n    function applications and definitions have been changed. To avoid a large,\n    irrelevant diff on your next commits, we advise formatting your whole\n    codebase first after upgrading to 1.8 in a separate commit.\n\nCore language\n-------------\n\n* Contract system rework:\n  * Do not evaluate types away by @yannham in https://github.com/tweag/nickel/pull/1954\n  * Add a contract node to the AST by @yannham in https://github.com/tweag/nickel/pull/1955\n  * Add dedicated node and constructor for general custom contracts by @yannham in https://github.com/tweag/nickel/pull/1964\n  * Introduce validators for building custom contracts by @yannham in https://github.com/tweag/nickel/pull/1970\n  * Split contracts into an immediate part and a delayed part by @yannham in https://github.com/tweag/nickel/pull/1975\n  * Re-introduce unified representation for custom contracts, migrate builtin contracts by @yannham in https://github.com/tweag/nickel/pull/1987\n* Allow some function equality comparison by @yannham in https://github.com/tweag/nickel/pull/1978\n* Dictionary subtyping:\n  * Add a subsumption rule between record types and dictionary types by @Eckaos in https://github.com/tweag/nickel/pull/1977\n  * Add array constructor to subsumption rule by @Eckaos in https://github.com/tweag/nickel/pull/1991\n  * Add dictionary constructor to subsumption rule by @Eckaos in https://github.com/tweag/nickel/pull/1998\n  * Add record constructor to subtyping by @Eckaos in https://github.com/tweag/nickel/pull/2007\n* Add record/split_pair and record/disjoint_merge by @yannham in https://github.com/tweag/nickel/pull/1982\n* Optimize `std.contract.Equal` using %record/split_pair% by @yannham in https://github.com/tweag/nickel/pull/1988\n* [Optimization] Cache contract generation and pre-compile some match expression by @yannham in https://github.com/tweag/nickel/pull/2013\n* Fix and improve contract generation optimization for static types by @yannham in https://github.com/tweag/nickel/pull/2017\n\nStdlib\n------\n\n* Comparisons for number, string, array, and record by @jeremyschlatter in https://github.com/tweag/nickel/pull/1985\n* Add boolean contract combinators to the stdlib by @yannham in https://github.com/tweag/nickel/pull/1995\n* Add short-circuiting fold_left by @jneem in https://github.com/tweag/nickel/pull/2000\n* Add trigonometric functions, pi, e and log to the number module by @Hugal31 in https://github.com/tweag/nickel/pull/2006\n\nDocumentation\n-------------\n\n* Pass on the contract chapter of the manual by @yannham in https://github.com/tweag/nickel/pull/1999\n* Adding documentation for subtyping by @Eckaos in https://github.com/tweag/nickel/pull/1990\n\nLSP\n---\n\n* Combine metadata for completion items instead of choosing arbitrarily. by @jneem in https://github.com/tweag/nickel/pull/1940\n* Don't blacklist files forever by @thufschmitt in https://github.com/tweag/nickel/pull/1973\n* Make the LSP configurable by @thufschmitt in https://github.com/tweag/nickel/pull/1974\n* More aggressive type/contract deduplication on hover by @jneem in https://github.com/tweag/nickel/pull/1984\n\nTooling\n-------\n\n* Add span information for TOML imports by @yannham in https://github.com/tweag/nickel/pull/1949\n* Update to latest topiary-queries (formatting) by @yannham in https://github.com/tweag/nickel/pull/2032\n\nVersion 1.7 (2024-06-11)\n========================\n\nNickel 1.7 ships with several extensions to pattern matching which was\nintroduced in Nickel 1.5 but had a number of limitations. See below for further details.\n\nAdditionally, the publication of [Topiary](https://topiary.tweag.io/) to the\ncrates registry makes it so that all versions of Nickel from 1.7 and onward,\nhowever they are built, ship with `nickel format` and the language server\nformatting command working out of the box without needing a separate\ninstallation of Topiary (which was previously required when installing from\ncrates.io using `cargo install nickel-lang-cli` or `cargo install\nnickel-lang-lsp`).\n\nBreaking changes\n----------------\n\n* Although primitive operators are internal and aren't officially part of any\n    stability guarantee, some libraries sometimes need to resort to using them,\n    when there's no equivalent in the stdlib. Nickel 1.7 had a big primop\n    refactoring, amounting mostly to renaming. If you're using primops, please\n    look at the corresponding [pull\n    request](https://github.com/tweag/nickel/pull/1937)\n* The behavior of destructuring has been changed to match exactly the behavior\n    of pattern matching. While there should be no difference on well-behaving\n    programs, this change makes destructuring stricter and can lead to some\n    programs that were running fine before 1.7 to now fail with `unmatched\n    pattern`. The typical example is when destructuring a record with a field\n    that is not present: `let {x,y, ..} = import \"lib.ncl\" in`. If `x` is absent\n    from the `lib.ncl` but is never used anywhere, this used to work fine before\n    1.7 (the error would only trigger upon usage of `x`) but will now fail eagerly.\n\n    If you need to fix a large codebase with long import destructuring chains\n    and you don't know which fields are the offending ones, one possible\n    technique is to open the importing file in an editor and use the `goto\n    definition` command of the NLS on each field of a faulty\n    pattern. If it works, the field is present, but if it doesn't, the field\n    might be faulty.\n\nCore language\n-------------\n\n* Patterns now support constant values (`1`, `null`, `\"a\"`, etc.), array\n    patterns (`[fst, snd, ..tail]`), pattern guards (`'Foo x if std.is_number\n    x`), wildcard patterns (`_` placeholder) and or-patterns (`('Foo x) or ('Bar\n    x) or ('Baz x)`): (see the syntax section on of the manual for more details)\n    * Implement wildcard patterns by @yannham in https://github.com/tweag/nickel/pull/1904\n    * Implement constant patterns by @yannham in https://github.com/tweag/nickel/pull/1897\n    * Implement pattern guards by @yannham in https://github.com/tweag/nickel/pull/1910\n    * Implement array patterns by @yannham in https://github.com/tweag/nickel/pull/1912\n    * Implement or-patterns by @yannham in https://github.com/tweag/nickel/pull/1916\n* Uniformize destruct and pattern matching logic by @yannham in https://github.com/tweag/nickel/pull/1907\n* Opaque values by @jneem in https://github.com/tweag/nickel/pull/1913\n\nStdlib\n------\n\n* Add `record.get_or` to get value from record supplying default value by @olorin37 in https://github.com/tweag/nickel/pull/1920\n* [Fix] Avoid `record.get_or` failing on field without definition by @yannham in https://github.com/tweag/nickel/pull/1946\n* Add stdlib function `array.at_or` by @olorin37 in https://github.com/tweag/nickel/pull/1927\n* Add `std.enum.(from/to)_tag_and_arg` and `std.enum.map` to dynamically decompose and recompose an enum by @yannham in https://github.com/tweag/nickel/pull/1939\n\nDocumentation\n-------------\n\n* Fix typo in BlameError documentation by @ErinvanderVeen in https://github.com/tweag/nickel/pull/1899\n* Update README.md for nix profile install by @cloudyluna in https://github.com/tweag/nickel/pull/1918\n\nLSP\n---\n\n* Tell NLS about variable bindings in match statements by @jneem in https://github.com/tweag/nickel/pull/1926\n* Add --version support to NLS and fix feature unification issues by @yannham in https://github.com/tweag/nickel/pull/1936\n* Fix NLS crash and better refresh diagnostics by @jneem in https://github.com/tweag/nickel/pull/1944\n\nTooling\n-------\n\n* Include field path in non serializable error by @yannham in https://github.com/tweag/nickel/pull/1905\n* Allow single input to `nickel xxx` command to be JSON, YAML or TOML as well by @olorin37 in https://github.com/tweag/nickel/pull/1902\n* Use Topiary's published crates over git to always enable formatting by @ErinvanderVeen in https://github.com/tweag/nickel/pull/1919\n\nVersion 1.6 (2024-04-25)\n========================\n\nNickel 1.6 is a maintenance release including several bug fixes and\nimprovements, in particular around the features introduced in Nickel 1.5 (enum\nvariants and background evaluation in the LSP).\n\nCore language\n-------------\n\n* Extend merge to enum variants by @yannham in https://github.com/tweag/nickel/pull/1862\n* [Fix] Allow multiple underscore to start identifiers by @yannham in https://github.com/tweag/nickel/pull/1884\n\nStdlib\n------\n\n* Add `std.string.find_all` by @fuzzypixelz in https://github.com/tweag/nickel/pull/1870\n* Add empty optional fields-aware record operator variants by @yannham in https://github.com/tweag/nickel/pull/1876\n\nDocumentation\n-------------\n\n* modular-configurations.md: to_lower -> lowercase by @Jasha10 in https://github.com/tweag/nickel/pull/1857\n* manual/modular-configurations.md: add argument to std.string.join by @Jasha10 in https://github.com/tweag/nickel/pull/1859\n* manual/syntax.md: minor typo by @Jasha10 in https://github.com/tweag/nickel/pull/1860\n\nLSP\n---\n\n* Improve diagnostic location in nls by @jneem in https://github.com/tweag/nickel/pull/1856\n* Propagate pending array contracts in permissive_eval by @jneem in https://github.com/tweag/nickel/pull/1854\n* Don't leak memory in background eval by @jneem in https://github.com/tweag/nickel/pull/1869\n* Add a recursion limit to background evaluation by @jneem in https://github.com/tweag/nickel/pull/1878\n* Dedup diagnostics by @jneem in https://github.com/tweag/nickel/pull/1883\n* Extend the symbol range to include the rhs by @jneem in https://github.com/tweag/nickel/pull/1887\n* Leverage function contract information by @yannham in https://github.com/tweag/nickel/pull/1888\n* Fix LSP not showing type signature in untyped code by @yannham in https://github.com/tweag/nickel/pull/1889\n\nTooling\n-------\n\n* Markdown documentation generation: do not insert line breaks by @yannham in https://github.com/tweag/nickel/pull/1879\n* [Fix] Nickel doc: fix missing newline in markdown output by @yannham in https://github.com/tweag/nickel/pull/1880\n* Fix infinite recursion in doc symbols. by @jneem in https://github.com/tweag/nickel/pull/1881\n\nFixes\n-----\n\n* [Fix] Polymorphic field typechecking by @yannham in https://github.com/tweag/nickel/pull/1872\n* Force enum payloads by @jneem in https://github.com/tweag/nickel/pull/1890\n\nVersion 1.5 (2024-03-12)\n========================\n\nNickel 1.5 is a major release (albeit not literally), with new core language\nfeatures and improved LSP. In particular, Nickel 1.5 introduces:\n\n- Full blown pattern matching. Patterns were previously restricted to\n    destructuring let-bindings. They can now be used within match expressions as\n    well (which only supported simple enum tags before).\n- Enum variants. Enum variants are a new language constructs which are\n    enum tags with associated data (they are applied to an argument). They can\n    be seen as form of algebraic data types (ADT). Patterns, enum types,\n    typechecking and other parts of the language are extended accordingly to\n    support them.\n- Background evaluation in the LSP. The LSP now performs evaluation of the\n    current document in the background to report evaluation errors directly in\n    your editor, and in particular contract errors.\n- A new section of the manual on writing modular configurations.\n\n\nCore language\n-------------\n\n* Allow metadata keywords in field position by @yannham in https://github.com/tweag/nickel/pull/1768\n* Support other bases than decimal for num literals by @yannham in https://github.com/tweag/nickel/pull/1798\n\n* Enum variants:\n  * Structural ADTs: first step by @yannham in https://github.com/tweag/nickel/pull/1770\n  * Implement equality on ADTs by @yannham in https://github.com/tweag/nickel/pull/1787\n  * Fix laziness closurization bug, add support for ADTs by @yannham in https://github.com/tweag/nickel/pull/1789\n  * ADT destructuring by @yannham in https://github.com/tweag/nickel/pull/1812\n  * Enum tag destructuring by @yannham in https://github.com/tweag/nickel/pull/1813\n  * Implement ADT contracts by @yannham in https://github.com/tweag/nickel/pull/1821\n  * Introduce application syntax for ADTs by @yannham in https://github.com/tweag/nickel/pull/1825\n  * Relax enum row conflicts by @yannham in https://github.com/tweag/nickel/pull/1831\n  * Properly force enum variants by @yannham in https://github.com/tweag/nickel/pull/1835\n  * Fix enum contract stripping unwrapping variant argument by @yannham in https://github.com/tweag/nickel/pull/1833\n\n* Pattern matching:\n  * [Refactor] Pattern matching by @yannham in https://github.com/tweag/nickel/pull/1799\n  * Record pattern compilation by @yannham in https://github.com/tweag/nickel/pull/1816\n  * Enum pattern compilation by @yannham in https://github.com/tweag/nickel/pull/1817\n  * [Refactor] Pattern positions by @yannham in https://github.com/tweag/nickel/pull/1819\n  * Full pattern matching by @yannham in https://github.com/tweag/nickel/pull/1820\n  * Support pattern contracts in match statement by @yannham in https://github.com/tweag/nickel/pull/1823\n  * Fix the semantics of default values in patterns by @yannham in https://github.com/tweag/nickel/pull/1826\n  * Specialized pattern compilation for enum tags by @yannham in https://github.com/tweag/nickel/pull/1846\n\nStdlib\n------\n\n* Add `array.zip_with` and `array.map_with_index` to the standard library by @vkleen in https://github.com/tweag/nickel/pull/1797\n* fixed std.array.split_at behavior at right boundary. by @suimong in https://github.com/tweag/nickel/pull/1803\n* Update stdlib for ADTs by @yannham in https://github.com/tweag/nickel/pull/1822\n\nTooling\n-------\n\n* LSP: Add \"goto definition\" support for the import term by @jneem in https://github.com/tweag/nickel/pull/1756\n* LSP: Add support for NICKEL_IMPORT_PATH environment variable @jneem in https://github.com/tweag/nickel/pull/1795\n* LSP: Improved reference-finding by @jneem in https://github.com/tweag/nickel/pull/1800\n* LSP: rename action by @jneem in https://github.com/tweag/nickel/pull/1811\n* LSP: evaluation in the background by @jneem in https://github.com/tweag/nickel/pull/1814\n* LSP: Improve document symbols by @jneem in https://github.com/tweag/nickel/pull/1848\n* Add more spacing to contract error messages by @yannham in https://github.com/tweag/nickel/pull/1767\n* Proper error message for non exhaustive match by @yannham in https://github.com/tweag/nickel/pull/1772\n* Add InvalidContractError by @yannham in https://github.com/tweag/nickel/pull/1824\n\nDocumentation\n-------------\n\n* Add patterns to the syntax section of the manual by @yannham in https://github.com/tweag/nickel/pull/1832\n* Improve the description of identifier syntax in the manual by @vkleen in https://github.com/tweag/nickel/pull/1839\n* Add subsection on enum types in the manual by @yannham in https://github.com/tweag/nickel/pull/1836\n* Fix old CLI syntax in documentation by @cydparser in https://github.com/tweag/nickel/pull/1844\n* Add manual section on modular configurations by @yannham in https://github.com/tweag/nickel/pull/1841\n* Update/refresh examples using latest Nickel idioms by @yannham in https://github.com/tweag/nickel/pull/1849\n\nFixes\n-----\n\n* Check if stderr is a terminal for error messages by @vkleen in https://github.com/tweag/nickel/pull/1766\n* correctly drop Array::IntoIter by @Radvendii in https://github.com/tweag/nickel/pull/1773\n* LSP: vendor codespan, and fix character offset issues by @jneem in https://github.com/tweag/nickel/pull/1793\n* [Fix & Refactor] Row conflict error by @yannham in https://github.com/tweag/nickel/pull/1808\n* Fix unbound identifier when querying in REPL by @yannham in https://github.com/tweag/nickel/pull/1843\n* Fix --field not applying pending contracts by @yannham in https://github.com/tweag/nickel/pull/1778\n\nVersion 1.4\n===========\n\nNickel 1.4 is a maintenance release, at the exception of a breaking change (see below).\n\nBreaking changes\n----------------\n\n* The curried dot operator added in Nickel 1.3 was implemented the wrong way:\n    the arguments were flipped, meaning that `(.) foo bar` was `bar.\"%{foo}\"`\n    instead of the expected `foo.\"%{bar}\"`. While the initial flipped\n    implementation seems more useful for piping operations using the reverse\n    application operator `|>`, it's inconsistent with all other curried\n    operators, where `(<operator>)` is always defined as `fun x y => x\n    <operator> y`. To ensure consistency, and because the initial behavior was\n    an oversight and not a conscious design decision, we decided to change the\n    definition of `(.)` to match the other curried operator by flipping its\n    arguments.\n\n    To fill the gap, Nickel 1.4 introduces `std.record.get` with the same\n    definition as the `(.)` introduced in Nickel 1.3. To migrate from 1.3 to\n    1.4, you can either flip the arguments of the curried dot as a function\n    `(.)` whenever possible, or you can just replace it with the new\n    `std.record.get`.\n\n    (implemented by @yannham in https://github.com/tweag/nickel/pull/1752)\n\nTooling\n-------\n\n* Search for imports in NICKEL_IMPORT_PATH by @jneem in https://github.com/tweag/nickel/pull/1716\n* Add a cli param --import-path to specify the search path by @jneem in https://github.com/tweag/nickel/pull/1721\n* LSP: Fix hover on assignments to subrecords by @jneem in https://github.com/tweag/nickel/pull/1725\n* Print something when nickel doc succeeds by @yannham in https://github.com/tweag/nickel/pull/1729\n* Add --error-format flag to serialize err diagnostics by @yannham in https://github.com/tweag/nickel/pull/1740\n* LSP: get record completion in arrays by @jneem in https://github.com/tweag/nickel/pull/1746\n\nCore language\n-------------\n\n* Support importing txt files as strings by @Quantum64 in https://github.com/tweag/nickel/pull/1734\n\nFixes\n-----\n\n* `nickel format`: don't fail silently on invalid input anymore by @yannham in https://github.com/tweag/nickel/pull/1749\n* Update Topiary dependencies to correctly handle `(.)` in `nickel format` by @yannham in https://github.com/tweag/nickel/pull/1753\n\nVersion 1.3\n===========\n\nVersion 1.3 includes several new optimizations following reports of long\nevaluation time for medium-sized codebase. The command-line interface (CLI) has\nbeen reworked to be more user-friendly, at the cost of breaking changes: see\nbelow. Finally, the LSP has seen continuous improvement as well.\n\nBreaking changes\n----------------\n\n* @vkleen improved the CLI UX in numerous ways in https://github.com/tweag/nickel/pull/1632\n  - The file argument is now argument positional. That is, instead of running\n    `nickel export -f config.ncl`, now use `nickel export config.ncl` instead.\n  - Every command which can take a file argument can now take several of them.\n    The program parsed from the files are then merged before applying the\n    action. For example, the new\n    `nickel export config1.ncl config2.ncl config3.ncl` is the equivalent of the\n    previous:\n    `nickel export <<< '(import \"config1.ncl\") & (import \"config2.ncl\") & (import \"config3.ncl\")'`\n  - Evaluation is now an explicit subcommand, instead of being the default\n    action. Instead of running `nickel -f config.ncl` to evaluate a file, use\n    `nickel eval config.ncl` instead.\n* Not a breaking change per se, because the customize mode is experimental, but\n  @yannham introduced a new syntax for customize mode in\n  https://github.com/tweag/nickel/pull/1709. Instead of dynamically generating a\n  CLI where arguments are field paths, the new customize mode CLI directly take\n  assignments written in a Nickel-like syntax as positional arguments. For\n  example, in 1.2, the command\n  `nickel eval -f confing.ncl -- \\\n    --input.field1 '\"Value\"' --input.flag false \\\n    --override output.bar 0`\n  now becomes\n  `nickel eval config.ncl -- \\\n    'input.field1=\"Value\"' input.flag=false \\\n    --override output.bar=0`\n\nFixes\n-----\n\n* Fix `record.update` by making `record.insert` act consistently by @yannham in https://github.com/tweag/nickel/pull/1669\n\nTooling\n-------\n\n* LSP:\n  - implement type-based completion in the new completer by @jneem in https://github.com/tweag/nickel/pull/1577\n  - Improve context completion by @jneem in https://github.com/tweag/nickel/pull/1584\n  - Take the ancestor path into account when env-completing from uncles. by @jneem in https://github.com/tweag/nickel/pull/1661\n  - Add goto support for pattern bindings by @jneem in https://github.com/tweag/nickel/pull/1665\n  - Add cousin search to goto and hover by @jneem in https://github.com/tweag/nickel/pull/1670\n  - Improve hover output for let patterns by @jneem in https://github.com/tweag/nickel/pull/1696\n  - First prototype of contract evaluation by @jneem in https://github.com/tweag/nickel/pull/1672\n* LSP: a large refactoring work by @jneem to get rid of the old and\n  hard-to-maintain code analysis implementation\n  (https://github.com/tweag/nickel/pull/1623,\n    https://github.com/tweag/nickel/pull/1629,\n    https://github.com/tweag/nickel/pull/1658,\n    https://github.com/tweag/nickel/pull/1663)\n* Honor `nostdlib` in customize mode as well by @vkleen in https://github.com/tweag/nickel/pull/1634\n* Add the `list` subcommand to the customize mode by @yannham in https://github.com/tweag/nickel/pull/1709\n* add %eval_nix% primop for Nix interop by @Radvendii in\n  https://github.com/tweag/nickel/pull/1465 (requires to build with the\n  corresponding experimental feature enabled)\n* Get rid of shallow_repr and print full terms in error messages by @yannham in\n  https://github.com/tweag/nickel/pull/1676\n* Add suggestions to the error message when misspelling a record field by @yannham in https://github.com/tweag/nickel/pull/1710\n* Add a `--field` argument to subcommands to target a specific field whenever it makes sense by @yannham in https://github.com/tweag/nickel/pull/1712\n\nOptimizations\n-------------\n\n* Contract elision for static types by @yannham in https://github.com/tweag/nickel/pull/1671\n* Implement contract deduplication optimization by @yannham in https://github.com/tweag/nickel/pull/1631\n* Array contract deduplication by @yannham in https://github.com/tweag/nickel/pull/1674\n* Get rid of most generated variables by @yannham in https://github.com/tweag/nickel/pull/1679\n\nDocumentation\n-------------\n\n* Fix invalid example code in doc of blame_with_message by @bgni in https://github.com/tweag/nickel/pull/1689\n* Fix doc, example code for pipe lacks prefix by @bgni in https://github.com/tweag/nickel/pull/1692\n* change nickel-nix to organist by @Radvendii in https://github.com/tweag/nickel/pull/1691\n\n## New Contributors\n\n* @bgni made their first contribution in https://github.com/tweag/nickel/pull/1689\n* @giorgiga made their first contribution in https://github.com/tweag/nickel/pull/1697\n\nVersion 1.2\n===========\n\nVersion 1.2 comes with several improvements on the LSP and other components of\nthe Nickel tooling. The new customize mode of the CLI makes it possible to\ndynamically turn a configuration into a command-line interface, which you can\ninteract with.\n\nSeveral related long-standing issues and limitations when typechecking\npolymorphic functions are also finally fixed.\n\nCore language\n-------------\n\n* Make the lexer accept scientific notation by @vkleen in https://github.com/tweag/nickel/pull/1456\n* Improve polymorphism handling, bidirectional typechecking and fix unsound generalization by @yannham in https://github.com/tweag/nickel/pull/1372\n* Error on serializing very large numbers by @vkleen in https://github.com/tweag/nickel/pull/1470\n* Import YAML files containing multiple documents as arrays by @vkleen in https://github.com/tweag/nickel/pull/1497\n* Normalize line endings in string literals during parsing (Windows compatiblity) by @vkleen in https://github.com/tweag/nickel/pull/1562\n* Implement curried dot operator by @suimong in https://github.com/tweag/nickel/pull/1578\n* Statically merge partial record definitions by @vkleen in https://github.com/tweag/nickel/pull/1599\n* Disable recursive priorities by @yannham in https://github.com/tweag/nickel/pull/1600\n\nFixes\n-----\n\n* Various fixes to the pretty-printer by @vkleen (https://github.com/tweag/nickel/pull/1411, https://github.com/tweag/nickel/pull/1412, https://github.com/tweag/nickel/pull/1410, https://github.com/tweag/nickel/pull/1417)\n* Fix REPL panic on transitive imports by @Radvendii in https://github.com/tweag/nickel/pull/1474\n* Fix contract application order in let bindings and annotations by @vkleen in https://github.com/tweag/nickel/pull/1544\n* Fix cursor desyncing when using REPL by @deotimedev in https://github.com/tweag/nickel/pull/1546\n* Fix handling of relative imports @jneem in https://github.com/tweag/nickel/pull/1489\n* LSP Fix two issues with incomplete input by @jneem in https://github.com/tweag/nickel/pull/1550\n* Fix incomplete check of record row constraints by @yannham in https://github.com/tweag/nickel/pull/1558\n* Fix LSP regression on hovering by @yannham in https://github.com/tweag/nickel/pull/1583\n\nTooling\n-------\n\n* Full vscode extension by @szlend and @yannham in (https://github.com/tweag/nickel/pull/1405, https://github.com/tweag/nickel/pull/1413, https://github.com/tweag/nickel/pull/1416)\n* Invalidate importers in NLS (plus a couple other import-related issues) by @jneem in https://github.com/tweag/nickel/pull/1426\n* Improve `nickel query` (and `:query` in the REPL) interface by @yannham in\n  https://github.com/tweag/nickel/pull/1447\n* Topiary integration (formatting) as `nickel format` by @vkleen in https://github.com/tweag/nickel/pull/1371\n* LSP: various improvements to completion by @jneem (https://github.com/tweag/nickel/pull/1450, https://github.com/tweag/nickel/pull/1473)\n* Improve doc extraction capabilities through `nickel doc` (evaluate terms before extracting documentation) by @vkleen in https://github.com/tweag/nickel/pull/1463\n* LSP Fix persistent diagnostics by @jneem in https://github.com/tweag/nickel/pull/1478\n* Restore --version for CLI, include git revision by @yannham in https://github.com/tweag/nickel/pull/1486\n* Disable the colors when stdout isn't a tty by @thufschmitt in https://github.com/tweag/nickel/pull/1508\n* Improve type variables name allocation when reporting type errors by @yannham in https://github.com/tweag/nickel/pull/1512\n* LSP formatting without calling the topiary binary by @vkleen in https://github.com/tweag/nickel/pull/1526\n* LSP Initial handling of incomplete input by @jneem in https://github.com/tweag/nickel/pull/1541\n* LSP resolve imports for incomplete inputs also by @jneem in https://github.com/tweag/nickel/pull/1542\n* Add multiline string support for VSCode autoclosing pairs by @deotimedev in https://github.com/tweag/nickel/pull/1553\n* Display icon for nickel file in vscode explorer by @suimong in https://github.com/tweag/nickel/pull/1556\n* New experimental customize mode CLI to interact with a configuration on the\n  command line (see `nickel help export`) by @Radvendii and @yannham in\n  https://github.com/tweag/nickel/pull/1475\n* (LSP) Import completion by @deotimedev in https://github.com/tweag/nickel/pull/1561\n* Get rid of uninformative generic notes for higher-order contract errors by @yannham in https://github.com/tweag/nickel/pull/1564\n* Render hover documentation as Markdown in LSP by @deotimedev in https://github.com/tweag/nickel/pull/1559\n* Exit with nonzero exit code on failure by @vkleen in https://github.com/tweag/nickel/pull/1576\n\nStdlib\n------\n\n* add `std.contract.Sequence` by @Radvendii in https://github.com/tweag/nickel/pull/1452\n\nDocumentation\n-------------\n\n* manual docs: fix mismatch between input command and its echo in the output by @foo-jin in https://github.com/tweag/nickel/pull/1421\n* Add two examples: imports and foreach pattern by @mipmip in https://github.com/tweag/nickel/pull/1387\n* Fix some leftover instances of the old enum syntax in the manual by @vkleen in https://github.com/tweag/nickel/pull/1548\n\nVersion 1.1\n===========\n\nThis version mostly includes bugfixes and stdlib improvement since 1.0.\n\n**IMPORTANT**: The main crate `nickel-lang` has been split between\n`nickel-lang-cli` (the binary) and `nickel-lang-core` (the library). If you're\nusing `cargo` to install Nickel, please uninstall the previous crate by running\n`cargo uninstall nickel-lang`, and from now one use `cargo install\nnickel-lang-cli` to install 1.1 and do further updates.\n\nStdlib\n------\n\n- Encode more pre-conditions of stdlib functions as additional contracts,\n  replacing dynamic type errors with nice contract errors by @yannham in https://github.com/tweag/nickel/pull/1358\n- ArraySliceFun incorrectly excluded the length of the array as the end index by @vkleen in https://github.com/tweag/nickel/pull/1396\n\nTooling\n-------\n\n- Improve the pretty printing of terms in the CLI and within error messages by @vkleen in https://github.com/tweag/nickel/pull/1262\n- Fix LSP panic when importing JSON by @yannham in https://github.com/tweag/nickel/pull/1382\n- Fix LSP hanging under certain conditions involving external imports by @yannham in https://github.com/tweag/nickel/pull/1390\n- Better error message when contract makes certain rows illegal by @Radvendii in https://github.com/tweag/nickel/pull/1323\n- Fix function params hovering in the LSP by @yannham in https://github.com/tweag/nickel/pull/1395\n- Fix LSP infinite loop on hovering on external imports by @yannham in https://github.com/tweag/nickel/pull/1397\n\nFixes\n-----\n\n- Fixes incorrect variable names in type mismatch errors by @vkleen in https://github.com/tweag/nickel/pull/1313\n- Improve error messages for polymorphic tail parametricity violations by @matthew-healy in https://github.com/tweag/nickel/pull/1320\n- Fix panic on duplicated top-level idents in record destructuring by @matthew-healy in https://github.com/tweag/nickel/pull/1324\n- Prevent panic when parsing record type with field path by @matthew-healy in https://github.com/tweag/nickel/pull/1325\n- Give a better error message when trying to query a non-record by @jneem in https://github.com/tweag/nickel/pull/1326\n- Fix error position by @jneem in https://github.com/tweag/nickel/pull/1333\n- Fix panic when interpolating fields in a record type by @jneem in https://github.com/tweag/nickel/pull/1332\n- Fix type annotations not generating contracts by @yannham in https://github.com/tweag/nickel/pull/1379\n- Fix typechecker looping by adding missing check for unifying equal type vars by @yannham in https://github.com/tweag/nickel/pull/1400\n- Fix panic on function contract failure (position of arrow functions not set) by @yannham in https://github.com/tweag/nickel/pull/1407\n\nVersion 1.0\n===========\n\nThis is the 1.0 release! The syntax and the semantics of the core language have\nbeen stabilized and shouldn't evolve as much in the future.\n\n- The core semantics of the language have been reworked and stabilized, in\n  particular (but not limited to) merging, types and contracts with the\n  implementation of RFC005\n- The stdlib has been augmented with many new functions\n- Parts of the syntax and some builtin symobls (types, stdlib functions, and so\n  on) have been improved and made consistent\n- New features for the LSP, and in particular code completion\n\nBreaking changes\n----------------\n\n- Various functions from the stdlib have been renamed for better discoverability,\n    and the stdlib got a lot of new additions. Please refer to the documentation\n    of the stdlib.\n- String functions are now unicode-aware, and operate on the Unicode grapheme\n    cluster abstraction instead of the character abstraction (`string.length`,\n    `string.is_match`, etc.)\n- The `switch` keyword has been replaced by `match`, and can now be used as a\n    standalone function (doesn't need to be applied right away)\n- The `Num` and `Str` builtin types have been renamed to `Number` and `String` by @yannham in https://github.com/tweag/nickel/pull/1164\n- The `num` and `str` stdlib modules have been renamed to `number` and `string`\n- The `builtin.typeof` function now returns `'Number`, `'String`, `'Function`\n  instead of respectively `'Num`, `'Str`, and `'Fun`\n- The `builtin.is_num`, `builtin.is_str` and `builtin.to_str` functions have been\n  renamed to `is_number`, `is_string` and `to_string`\n- The `string.to_num` and `string.from_num` functions have been renamed to\n  `to_number` and `from_number`\n- All the stdlib modules `array`, `string`, `record`, etc. have been put\n    under a `std` namespace. They must now be accessed as `std.array`,\n    `std.string` and so on.\n- RFC005 was implemented, which changes the semantics of contract annotations\n    and merging. See [the RFC\n    content](https://github.com/tweag/nickel/blob/master/rfcs/005-metadata-rework.md)\n    for more details. Most notably, metadata annotation (default values,\n    `optional`, documentation, etc.) can only appear next to a record field.\n    Contract and type annotations can still appear anywhere. Documentation can\n    still appear on let-bindings.\n- Use static dictionary types for `record.fields` and `record.values` by @matthew-healy in https://github.com/tweag/nickel/pull/1024\n- Make type annotations to not propagate through merging by @yannham in https://github.com/tweag/nickel/pull/1271\n- Change to dictionary contracts and introduction of a separate dictionary contract (in addition to dictionary type):\n  - Fix dictionary contract semantics by @vkleen in https://github.com/tweag/nickel/pull/1141\n  - Introduce dictionary contracts by @yannham in https://github.com/tweag/nickel/pull/1272\n- Stdlib `string.Stringingable` -> `string.Stringable` by @vkleen in https://github.com/tweag/nickel/pull/1180\n- Fix the type of `array.elem` by @yannham in https://github.com/tweag/nickel/pull/1223\n- Change the enum tag start delimiter from backtick to single-quote by @vkleen in https://github.com/tweag/nickel/pull/1279\n- `import` is now a statement, `import \"foo.ncl\" arg1 arg2` requires parenthesis now: `(import \"foo.ncl\") arg1 arg2`, see https://github.com/tweag/nickel/pull/1293\n\nLanguage features\n-----------------\n\n- Symbolic strings by @matthew-healy in https://github.com/tweag/nickel/pull/994\n- [RFC005] Lazy propagation by @yannham in https://github.com/tweag/nickel/pull/1086\n- Non-exported record fields by @vkleen in https://github.com/tweag/nickel/pull/1132\n- Enrich label custom reporting data by @yannham in https://github.com/tweag/nickel/pull/1152\n- Use type annotations in record patterns during typechecking by @matthew-healy in https://github.com/tweag/nickel/pull/1176\n- Use arbitrary precision rationals as the underlying representation of numbers by @yannham in https://github.com/tweag/nickel/pull/1182\n- Allow equal arrays to be merged in order to make merge idempotent by @yannham in https://github.com/tweag/nickel/pull/1229\n- Use deterministic hashtables, making runtime errors and typechecking error deterministic by @yannham in https://github.com/tweag/nickel/pull/1235\n\nStdlib\n------\n\n- Add a %trace% primop (and `std.trace` function) by @vkleen in https://github.com/tweag/nickel/pull/1055\n- Add `std.contract.Equal` contract to the stdlib by @yannham in https://github.com/tweag/nickel/pull/1203\n\nTooling\n-------\n\n- Display meta information when providing completion in https://github.com/tweag/nickel/pull/966\n- LSP completion for import terms by @ebresafegaga in https://github.com/tweag/nickel/pull/993\n- Fix LSP server not giving completion when a non-contract meta-information is present in a declaration by @ebresafegaga in https://github.com/tweag/nickel/pull/991\n- Fix LSP not giving completion when an identifier is prefixed by a delimiting character by @ebresafegaga in https://github.com/tweag/nickel/pull/1043\n- Improve the \"goto definition\" feature of the LSP by making it work across multiple files by @ebresafegaga in https://github.com/tweag/nickel/pull/1029\n- Add --color option to the CLI by @matthew-healy in https://github.com/tweag/nickel/pull/1033\n- Make the \"find references\" feature of the LSP work across multiple files by @ebresafegaga in https://github.com/tweag/nickel/pull/1037\n- Add support for LSP completion using the surrounding context by @ebresafegaga (context completion) in https://github.com/tweag/nickel/pull/1057\n- Support completion for field names inside recursive records. by @ebresafegaga in https://github.com/tweag/nickel/pull/1088\n- Improve contract violation error reporting by @ebresafegaga in https://github.com/tweag/nickel/pull/1139\n- Add a JSON documentation export option by @vkleen in https://github.com/tweag/nickel/pull/1209\n- Add support for formatting capabilities to the LSP by @ebresafegaga in https://github.com/tweag/nickel/pull/1216\n\nFixes\n-----\n\n- Do not panic on type path mismatch by @yannham in https://github.com/tweag/nickel/pull/1028\n- Fix multiline string interpolation when preceded by a `\"` character by @matthew-healy in https://github.com/tweag/nickel/pull/1023\n- Improve the performance of `std.array.fold_left` and `std.array.fold_right` by @vkleen in https://github.com/tweag/nickel/pull/1075\n- Correctly type identifiers introduced in destructuring patterns by @matthew-healy in https://github.com/tweag/nickel/pull/1099\n- Always include fields with a value in `record.fields` by @vkleen in https://github.com/tweag/nickel/pull/1225\n- Make partially applied boolean operators work by @vkleen in https://github.com/tweag/nickel/pull/1282\n\nVersion 0.3.1 (2022-12-15)\n==========================\n\nFixes\n-----\n\n- Fix blame error when calling `string.find` by @euank in https://github.com/tweag/nickel/pull/988\n\nVersion 0.3  (2022-12-07)\n=========================\n\nFixes\n-----\n\n- Fix polymorphic contracts unduly changing semantics by @ebresafegaga in https://github.com/tweag/nickel/pull/802\n- Fix typechecking and unification in presence of flat types (aka opaque types, aka contracts) by @yannham in https://github.com/tweag/nickel/pull/766\n- Fix polarity for polymorphic contract failure by @ebresafegaga in https://github.com/tweag/nickel/pull/831\n- Fix panic when a row mismatch occurs while unifying row tails by @matthew-healy in https://github.com/tweag/nickel/pull/847\n- Fix type to term conversion causing unbound type variables errors by @francois-caddet in https://github.com/tweag/nickel/pull/854\n- Fix bad lexing of enum tags by @matthew-healy in https://github.com/tweag/nickel/pull/874\n- Fix multiple recursive overriding by @yannham in https://github.com/tweag/nickel/pull/940\n\nLanguage features\n-----------------\n\n- Optional fields by @yannham in https://github.com/tweag/nickel/pull/815\n- Numeral merge priorities by @yannham in https://github.com/tweag/nickel/pull/829\n- Recursive merge priorities (or push-priorities, or leafy priorities) by @yannham in https://github.com/tweag/nickel/pull/845\n- Change `switch` to `match` and make it a proper function by @yannham in https://github.com/tweag/nickel/pull/970\n\nStdlib\n------\n\n- Statically type `string.join` by @matthew-healy in https://github.com/tweag/nickel/pull/946\n\nTooling\n-------\n\n- Add record completion in the LSP by @ebresafegaga in\n  - https://github.com/tweag/nickel/pull/867\n  - https://github.com/tweag/nickel/pull/909\n  - https://github.com/tweag/nickel/pull/913\n  - https://github.com/tweag/nickel/pull/914\n- Add completion for Nickel's stdlib in the LSP by @ebresafegaga in https://github.com/tweag/nickel/pull/918\n\nPerformances\n------------\n\n- Lazy array contracts by @fuzzypixelz in https://github.com/tweag/nickel/pull/809\n- Array slices by @fuzzypixelz in https://github.com/tweag/nickel/pull/776\n- String interning for identifiers by @Acaccia in https://github.com/tweag/nickel/pull/835\n\nVersion 0.2  (2022-07-29)\n=========================\n\nBreaking changes\n----------------\n\n- Using a contract as part of a static type annotation will in most cases fail\n  with an appropriate error message. This is a temporary limitation in order to\n  fix previously unsound behavior in the typechecker. This restriction will\n  likely be lifted in the upcoming 0.3.x release. For more details, see issues\n  [#701](https://github.com/tweag/nickel/issues/701) and\n  [#724](https://github.com/tweag/nickel/issues/724)\n\nFixes\n-----\n\n- Fix unnecessarily restricted record contract for `record.update`\n- Fix wrong interpretation of long interpolation-like sequences `%..%{` in strings\n- Fix panic when evaluating a `switch` in specific cases\n- Fix fields without definition being assigned to `null`, instead of just being\n  marked as undefined\n\nLanguage features\n-----------------\n\n- Merging null values together gives null, and merging empty lists together gives\n  an empty list, instead of failing with `error: non mergeable terms`\n- Add recursive let-bindings (`let rec`)\n- Add type wildcards. Use `_` in place of a type to let the typechecker fill\n  the gap. Example: `let foo : _ = array.all ((==) 2) [1,2,3]`\n- Add `builtin.to_str` and `string.from` to convert generic values to a string\n- Re-introduce an official syntax for enum types\n\nTooling\n-------\n\n- Add the `nickel pprint-ast` command to pretty print a parsed program (mostly\n  debugging purpose)\n- Add the `nickel doc` command to produce markdown documentation from the\n  in-code `doc` metadata\n\nDocumentation\n-------------\n\n- Fix various typos and remove use of deprecated syntax in the user manual\n\nVersion 0.1  (2022-03-10)\n=========================\n\nFirst release! The main focus has been the design of the Nickel language itself.\n\nLanguage features\n-----------------\n\n- Gradual type system with row types, polymorphism and type inference\n- Contract system for data validation\n- Merge system for recursive records that supports one level of overriding\n- Metadata annotations (default values, documentation, etc.)\n- Unified syntax for terms, types and contracts (RFC002)\n- Record destructuring\n\nTooling\n-------\n\n- The main binary supports the following subcommands:\n  - `nickel query` to show metadata and documentation of library functions,\n     the field of a configuration, etc.\n  - `nickel export` to serialize to JSON, YAML, or TOML\n  - `nickel repl` to launch an REPL\n  - `nickel typecheck` to do typechecking without evaluating\n\n- An LSP-server is included\n\nDocumentation\n-------------\n\n- User manual sections on syntax, correctness (types and contracts), and\n  merging\n- The standard library has been documented in-code (use\n     `nickel query`/`:query` to retrieve it)\n\nKnown limitations\n-----------------\n\n- The roadmap for overriding and the merge system (RFC001) has not been\n  implemented fully yet.\n\n- Performance has not been prioritized.\n\n- Due to the use of reference counting as a memory management strategy,\n  mutually recursive record fields are currently leaking memory. This\n  shouldn't be an issue in a standard workflow.\n\n- Standard library APIs and language features are subject to change. There\n  is no backward compatibility guarantees for this version. In general, this\n  release is meant for experimenting and getting user feedback, but isn't\n  intended to be used in production.\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 8.185546875,
          "content": "# Release process for Nickel\n\nYou're ready to release a new version of Nickel - congrats!\n\nThis document explains how to do so step by step while keeping the various\ncrates and dependent repositories (such as the website) in a consistent state.\n\n## Steps to make a release\n\n### Releasing script\n\n**IMPORTANT**: Since the 1.4 release, `scripts/release.sh` takes care of bumping\nversions numbers, updating local cross-dependencies, creating a clean release\nbranch, updating the stable branch and publishing to crates.io.\n\nThe covered steps are still described below for your information, but you\nshouldn't need to actually perform them manually.\n\nYou'll still have to do the GitHub release, redeploy nickel-lang.org manually,\nand backport changes to `master`, which are all described below as well.\n\n#### Script requirements\n\n- A relatively recent bash (> 4.3)\n- git\n- tomlq\n- cargo\n- You will need to be signed in to `crates.io` with a GitHub\n    account that is part of the [Nickel Core\n    team](https://github.com/orgs/nickel-lang/teams/core), and have a\n    `crates.io` API key saved locally on your machine (normally via `cargo\n    login`). For help with this, contact the Nickel maintainers.\n\nOnce `master` is in a releasable state, start the script from the root of the\n`nickel` git repository with an argument that is either `major`, `minor` or\n`patch`, indicating how to bump the version number. For example:\n\n```console\n$./release.sh minor\n++ Nickel release script\n++\n++ This script will:\n[..]\n```\n\n### About the version numbers\n\nSome of the crates in the Nickel workspace are libraries which are not versioned\naccording to the version number of the language itself. These are\n\n- `nickel-lang-core`\n- `nickel-lang-utils`\n- `lsp-harness`\n- `nickel-wasm-repl`\n\nTheir version numbers take the form `0.W.U` and their public APIs are not\nconsidered stable. Consequently we bump their versions to `0.(W+1).0` on every\nrelease (if needed).\n\nOther crates carry the version number of the Nickel language. These are\n\n- `nickel-lang-cli`\n- `nickel-lang-lsp`\n- `pyckel`\n\n### Prepare\n\n**IMPORTANT**: this section is covered by the `release.sh` script, and is only\nkept for information purpose. Usually, you shouldn't have to perform the\nfollowing steps manually.\n\n1. Branch out from `master` to a dedicated branch `X.Y.Z-release`:\n   `git checkout -b X.Y.Z-release`\n2. Bump the overall workspace version number in `Cargo.toml` to `X.Y.Z`. This\n   will be automatically propagated to the CLI, the Nickel language server and\n   Pyckel.\n3. Update the current version number mentioned in `doc/manual/introduction.md`\n   with the new one set in step 2. Grep for the previous version\n   number in the various README files, as the latest version is sometimes\n   mentioned, and update if needed.\n4. Bump the version number of `core` in `core/Cargo.toml` and\n   `wasm-repl/Cargo.toml`. The two versions must always be the same.\n\n   Bump the version of the other crates in the workspace **if needed** (usually,\n   it's safer to always bump the version of `core` because it's modified all the\n   time without special care about its public API, but the following crates are\n   often left untouched):\n\n   - `lsp/lsp-harness/Cargo.toml`\n   - `utils/Cargo.toml`\n\n   Afterwards, also adjust the version numbers of the dependencies in\n   `Cargo.toml`. For example, in\n\n   ```toml\n      nickel-lang-core = { version = \"0.1\", path = \"./core\", default-features = false }\n   ```\n\n   adjust the version `0.1` to reflect the new version number.\n5. Make sure that everything builds: run `nix flake check` at the root of the\n   repository.\n6. Add the changelog since the last release in RELEASES.md. GitHub is able to\n   automatically generate release notes: refer to [this\n   guide](https://docs.github.com/en/repositories/releasing-projects-on-github/automatically-generated-release-notes).\n   While the output needs to be reworked, it's a useful starting point. Commit\n   and push your changes.\n7. Set the `stable` branch to point to your new `X.Y.Z-release`. Because the\n   `stable` branch usually contains specific fixes, or cherry-picked commits,\n   we'll have to force push. First save the previous state in a local branch:\n\n   ```console\n   git checkout stable\n   git branch stable-local-save\n   ```\n\n   Update the `stable` branch:\n\n   ```console\n   git checkout stable\n   git reset --hard X.Y.Z-release`\n   git push --force-with-lease\n   ```\n\n   If anything goes wrong, you can reset `stable` to its previous state:\n\n   ```console\n   git checkout stable\n   git reset --hard stable-local-save\n   git push --force-with-lease\n   ```\n\n### Release on crates.io\n\n**IMPORTANT**: this section is covered by the `release.sh` script, and is only\nkept for information purpose. Usually, you shouldn't have to perform the\nfollowing steps manually.\n\n1. Remove references to `nickel-lang-utils` from the `[dev-dependencies]`\n   sections of the crates to be published: `./core/Cargo.toml` for\n   `nickel-lang-core`, `./cli/Cargo.toml` for `nickel-lang-cli` and\n   `./lsp/nls/Cargo.toml` for `nickel-lang-lsp` (work-around for\n   [cargo:#4242](https://github.com/rust-lang/cargo/issues/4242).\n\n2. Remove references to `lsp-harness` from the `[dev-dependencies]` sections of\n   the `./lsp/nls/Cargo.toml` (workaround for the same issue as 1.).\n\n3. For all crates to be published, remove the `format` feature from the list of\n   features (in the `[features]` section of their `Cargo.toml` file), remove all\n   dependencies referenced by `format` (of the form `dep:xxx`) from the list of\n   dependencies of the crate, and finally, remove `\"format\"` from the list of\n   the default features.\n\n   We have to do this because Topiary isn't published on `crates.io` yet, but\n   `cargo` insists that we only depend on published crates. Thus, we have to\n   abandon the format feature - which requires Topiary - for the version\n   published to `crates.io`.\n\n4. **Commit the changes made in 1., 2. and 3. temporarily to please cargo, but\n   they will be dropped later. Do not push**.\n\n5. Check that a dry run of `cargo publish` succeeds on the crates to be\n   published (`nickel-lang-core`, `nickel-lang-cli` and `nickel-lang-lsp`):\n\n   - `cargo publish -p nickel-lang-core --dry-run`\n   - `cargo publish -p nickel-lang-cli --dry-run`\n   - `cargo publish -p nickel-lang-lsp --dry-run`\n\n   For this to work, you will need to be signed in to `crates.io` with a GitHub\n   account that is part of the [Nickel Core\n   team](https://github.com/orgs/nickel-lang/teams/core), and have a `crates.io`\n   API key saved locally on your machine (normally via `cargo login`). For help\n   with this, contact the Nickel maintainers.\n\n6. Actually release `nickel-lang-core`, `nickel-lang-cli` and `nickel-lang-lsp`\n   (in that order, as the cli and the lsp depend on core) on crates.io:\n   `cargo publish -p <crate-to-publish>`\n\n7. Ditch the potential changes made to the cargo manifests at steps 1., 2.\n   and 3. by dropping the corresponding commit\n\n### Release on GitHub\n\n1. Do the [release on\n   GitHub](https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository),\n   Make sure that you set `X.Y.Z-release` as the target branch and have GitHub\n   create the `X.Y.Z` tag on release.\n\n2. Verify that the \"Upload release artifacts\" GitHub action is getting triggered\n   and completes successfully, uploading a static Nickel binary and a Docker\n   image for both x86-64 and arm64 Linux platforms.\n\n### Redeploy nickel-lang.org with the new release\n\n1. Checkout the [nickel-lang](https://github.com/tweag/nickel-lang.org/)\n   repository.\n2. Branch out from `master` and update the Nickel input:\n\n   ```console\n   git checkout -b release/X.Y.Z\n   nix flake lock --update-input nickel\n   git add flake.lock\n   git commit -m \"Update to Nickel vX.Y.Z\"\n   git push -u origin @\n   ```\n\n   Open a pull request on the nickel-lang repository. Once the CI is green and\n   the PR is merged, nickel-lang.org will be automatically redeployed with the\n   new version of Nickel used for the playground and the documentation.\n\n### Port changes to master\n\n1. Cherry-pick the following commits into separate PRs to `master`:\n     - Bumping the version numbers done in Preparation 2.\n     - Updating release notes done in Preparation 5.\n     - Fixes that you made locally for `nix flake check` or other commands.\n2. Profit!\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.173828125,
          "content": "{ fromGit ? true }:\n(import (fetchTarball https://github.com/edolstra/flake-compat/archive/master.tar.gz) {\n  src = if fromGit then builtins.fetchGit ./. else ./.;\n}).defaultNix\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 7.822265625,
          "content": "{\n  \"nodes\": {\n    \"crane\": {\n      \"locked\": {\n        \"lastModified\": 1727060013,\n        \"narHash\": \"sha256-/fC5YlJy4IoAW9GhkJiwyzk0K/gQd9Qi4rRcoweyG9E=\",\n        \"owner\": \"ipetkov\",\n        \"repo\": \"crane\",\n        \"rev\": \"6b40cc876c929bfe1e3a24bf538ce3b5622646ba\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"ipetkov\",\n        \"repo\": \"crane\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-compat\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1696426674,\n        \"narHash\": \"sha256-kvjfFW7WAETZlt09AgDn1MrtKzP7t90Vf7vypd3OL1U=\",\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"rev\": \"0f9255e01c2351cc7d116c072cb317785dd33b33\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-parts\": {\n      \"inputs\": {\n        \"nixpkgs-lib\": [\n          \"nix-input\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1719994518,\n        \"narHash\": \"sha256-pQMhCCHyQGRzdfAkdJ4cIWiw+JNuWsTX7f0ZYSyz0VY=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"rev\": \"9227223f6d922fee3c7b190b2cc238a99527bbb7\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1726560853,\n        \"narHash\": \"sha256-X6rJYSESBVr3hBoH0WbKE5KvhPU5bloyZ2L4K60/fPQ=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"c1dfcf08411b08f6b8615f7d8971a2bfa81d5e8a\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"git-hooks-nix\": {\n      \"inputs\": {\n        \"flake-compat\": [\n          \"nix-input\"\n        ],\n        \"gitignore\": [\n          \"nix-input\"\n        ],\n        \"nixpkgs\": [\n          \"nix-input\",\n          \"nixpkgs\"\n        ],\n        \"nixpkgs-stable\": [\n          \"nix-input\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1721042469,\n        \"narHash\": \"sha256-6FPUl7HVtvRHCCBQne7Ylp4p+dpP3P/OYuzjztZ4s70=\",\n        \"owner\": \"cachix\",\n        \"repo\": \"git-hooks.nix\",\n        \"rev\": \"f451c19376071a90d8c58ab1a953c6e9840527fd\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"cachix\",\n        \"repo\": \"git-hooks.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"gitignore\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"pre-commit-hooks\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1709087332,\n        \"narHash\": \"sha256-HG2cCnktfHsKV0s4XW83gU3F57gaTljL9KNSuG6bnQs=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"gitignore.nix\",\n        \"rev\": \"637db329424fd7e46cf4185293b9cc8c88c95394\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"gitignore.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"libgit2\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1715853528,\n        \"narHash\": \"sha256-J2rCxTecyLbbDdsyBWn9w7r3pbKRMkI9E7RvRgAqBdY=\",\n        \"owner\": \"libgit2\",\n        \"repo\": \"libgit2\",\n        \"rev\": \"36f7e21ad757a3dacc58cf7944329da6bc1d6e96\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"libgit2\",\n        \"ref\": \"v1.8.1\",\n        \"repo\": \"libgit2\",\n        \"type\": \"github\"\n      }\n    },\n    \"nix-input\": {\n      \"inputs\": {\n        \"flake-compat\": [\n          \"pre-commit-hooks\",\n          \"flake-compat\"\n        ],\n        \"flake-parts\": \"flake-parts\",\n        \"git-hooks-nix\": \"git-hooks-nix\",\n        \"libgit2\": \"libgit2\",\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ],\n        \"nixpkgs-23-11\": \"nixpkgs-23-11\",\n        \"nixpkgs-regression\": \"nixpkgs-regression\"\n      },\n      \"locked\": {\n        \"lastModified\": 1727696274,\n        \"narHash\": \"sha256-H+EeGBRV87NRDXgOQP/aZfof9svbYCSQktpMiLBrqCQ=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nix\",\n        \"rev\": \"c116030605bf7fecd232d0ff3b6fe066f23e4620\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"repo\": \"nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1726937504,\n        \"narHash\": \"sha256-bvGoiQBvponpZh8ClUcmJ6QnsNKw0EMrCQJARK3bI1c=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"9357f4f23713673f310988025d9dc261c20e70c6\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"ref\": \"nixos-unstable\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"nixpkgs-23-11\": {\n      \"locked\": {\n        \"lastModified\": 1717159533,\n        \"narHash\": \"sha256-oamiKNfr2MS6yH64rUn99mIZjc45nGJlj9eGth/3Xuw=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"a62e6edd6d5e1fa0329b8653c801147986f8d446\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"a62e6edd6d5e1fa0329b8653c801147986f8d446\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs-regression\": {\n      \"locked\": {\n        \"lastModified\": 1643052045,\n        \"narHash\": \"sha256-uGJ0VXIhWKGXxkeNnq4TvV3CIOkUJ3PAoLZ3HMzNVMw=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"215d4d0fd80ca5163643b03a33fde804a29cc1e2\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"215d4d0fd80ca5163643b03a33fde804a29cc1e2\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs-stable\": {\n      \"locked\": {\n        \"lastModified\": 1720386169,\n        \"narHash\": \"sha256-NGKVY4PjzwAa4upkGtAMz1npHGoRzWotlSnVlqI40mo=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"194846768975b7ad2c4988bdb82572c00222c0d7\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-24.05\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"pre-commit-hooks\": {\n      \"inputs\": {\n        \"flake-compat\": \"flake-compat\",\n        \"gitignore\": \"gitignore\",\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ],\n        \"nixpkgs-stable\": \"nixpkgs-stable\"\n      },\n      \"locked\": {\n        \"lastModified\": 1726745158,\n        \"narHash\": \"sha256-D5AegvGoEjt4rkKedmxlSEmC+nNLMBPWFxvmYnVLhjk=\",\n        \"owner\": \"cachix\",\n        \"repo\": \"pre-commit-hooks.nix\",\n        \"rev\": \"4e743a6920eab45e8ba0fbe49dc459f1423a4b74\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"cachix\",\n        \"repo\": \"pre-commit-hooks.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"crane\": \"crane\",\n        \"flake-utils\": \"flake-utils\",\n        \"nix-input\": \"nix-input\",\n        \"nixpkgs\": \"nixpkgs\",\n        \"pre-commit-hooks\": \"pre-commit-hooks\",\n        \"rust-overlay\": \"rust-overlay\"\n      }\n    },\n    \"rust-overlay\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1727144949,\n        \"narHash\": \"sha256-uMZMjoCS2nf40TAE1686SJl3OXWfdfM+BDEfRdr+uLc=\",\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"rev\": \"2e19799819104b46019d339e78d21c14372d3666\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 27.7734375,
          "content": "{\n  inputs = {\n    nixpkgs.url = \"nixpkgs/nixos-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n    pre-commit-hooks = {\n      url = \"github:cachix/pre-commit-hooks.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n    rust-overlay = {\n      url = \"github:oxalica/rust-overlay\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n    crane = {\n      url = \"github:ipetkov/crane\";\n    };\n    nix-input = {\n      url = \"github:nixos/nix\";\n      inputs = {\n        nixpkgs.follows = \"nixpkgs\";\n        flake-compat.follows = \"pre-commit-hooks/flake-compat\";\n      };\n    };\n  };\n\n  nixConfig = {\n    extra-substituters = [ \"https://tweag-nickel.cachix.org\" ];\n    extra-trusted-public-keys = [ \"tweag-nickel.cachix.org-1:GIthuiK4LRgnW64ALYEoioVUQBWs0jexyoYVeLDBwRA=\" ];\n  };\n\n  outputs =\n    { self\n    , nixpkgs\n    , flake-utils\n    , pre-commit-hooks\n    , rust-overlay\n    , crane\n    , nix-input\n    }:\n    let\n      SYSTEMS = [\n        \"aarch64-darwin\"\n        \"aarch64-linux\"\n        \"x86_64-darwin\"\n        \"x86_64-linux\"\n      ];\n\n      RUST_CHANNELS = [\n        \"stable\"\n        \"beta\"\n      ];\n\n      forEachRustChannel = fn: builtins.listToAttrs (builtins.map fn RUST_CHANNELS);\n\n      cargoTOML = builtins.fromTOML (builtins.readFile ./Cargo.toml);\n      cargoLock = builtins.fromTOML (builtins.readFile ./Cargo.lock);\n\n      inherit (cargoTOML.workspace.package) version;\n\n    in\n    flake-utils.lib.eachSystem SYSTEMS (system:\n    let\n      pkgs = import nixpkgs {\n        inherit system;\n        overlays = [\n          (import rust-overlay)\n          # gnulib tests in diffutils fail for musl arm64, cf. https://github.com/NixOS/nixpkgs/pull/241281\n          (final: prev: {\n            diffutils =\n              if !(final.stdenv.hostPlatform.isMusl && final.stdenv.hostPlatform.isAarch64) then\n                prev.diffutils\n              else\n                prev.diffutils.overrideAttrs (old: {\n                  postPatch = ''\n                    sed -i 's:gnulib-tests::g' Makefile.in\n                  '';\n                });\n          })\n        ];\n        config.allowUnfreePredicate = pkg: builtins.elem (pkg.pname or \"\") [ \"terraform\" ];\n      };\n\n      wasm-bindgen-cli =\n        let\n          wasmBindgenCargoVersions = builtins.map ({ version, ... }: version) (builtins.filter ({ name, ... }: name == \"wasm-bindgen\") cargoLock.package);\n          wasmBindgenVersion = assert builtins.length wasmBindgenCargoVersions == 1; builtins.elemAt wasmBindgenCargoVersions 0;\n        in\n        pkgs.wasm-bindgen-cli.override {\n          version = wasmBindgenVersion;\n          hash = \"sha256-f/RK6s12ItqKJWJlA2WtOXtwX4Y0qa8bq/JHlLTAS3c=\";\n          cargoHash = \"sha256-3vxVI0BhNz/9m59b+P2YEIrwGwlp7K3pyPKt4VqQuHE=\";\n        };\n\n      # Additional packages required to build Nickel on Darwin\n      systemSpecificPkgs =\n        if pkgs.stdenv.isDarwin then\n          [\n            pkgs.darwin.apple_sdk.frameworks.Security\n            pkgs.darwin.libiconv\n          ]\n        else\n          [ ];\n\n      mkRust =\n        let\n          inherit (pkgs.stdenv) hostPlatform;\n        in\n        { rustProfile ? \"minimal\"\n        , rustExtensions ? [\n            \"rust-src\"\n            \"rust-analysis\"\n            \"rustfmt\"\n            \"clippy\"\n          ]\n        , channel ? \"stable\"\n        , targets ? [ pkgs.stdenv.hostPlatform.rust.rustcTarget ]\n            ++ pkgs.lib.optional (!hostPlatform.isMacOS) pkgs.pkgsMusl.stdenv.hostPlatform.rust.rustcTarget\n        }:\n        if channel == \"nightly\" then\n          pkgs.rust-bin.selectLatestNightlyWith\n            (toolchain: toolchain.${rustProfile}.override {\n              extensions = rustExtensions;\n              inherit targets;\n            })\n        else\n          pkgs.rust-bin.${channel}.latest.${rustProfile}.override {\n            extensions = rustExtensions;\n            inherit targets;\n          };\n\n      # A note on check_format: the way we invoke rustfmt here works locally but fails on CI.\n      # Since the formatting is checked on CI anyway - as part of the rustfmt check - we\n      # disable rustfmt in the pre-commit hook when running checks, but enable it when\n      # running in a dev shell.\n      pre-commit-builder = { rust ? mkRust { }, checkFormat ? false }: pre-commit-hooks.lib.${system}.run {\n        src = self;\n        hooks = {\n          nixpkgs-fmt = {\n            enable = true;\n            # Excluded because they are generated by Node2nix\n            excludes = [\n              \"lsp/vscode-extension/default.nix\"\n              \"lsp/vscode-extension/node-env.nix\"\n              \"lsp/vscode-extension/node-packages.nix\"\n            ];\n          };\n\n          rustfmt = {\n            enable = checkFormat;\n            entry = pkgs.lib.mkForce \"${rust}/bin/cargo-fmt fmt -- --check --color always\";\n          };\n\n          markdownlint = {\n            enable = true;\n            excludes = [\n              \"notes/(.+)\\\\.md$\"\n              \"^RELEASES\\\\.md$\"\n            ];\n          };\n\n          # We could use Topiary here, but the Topiary version pulled from Nix\n          # and the one baked in Nickel could differ. It's saner that what we\n          # check in the CI is matching exactly the formatting performed by the\n          # `nickel` binary of this repo.\n          nickel-format = {\n            name = \"nickel-format\";\n            description = \"The nickel formatter\";\n            entry = \"${pkgs.lib.getExe self.packages.\"${system}\".default} format\";\n            types = [ \"text\" ];\n            enable = true;\n            # Some tests are currently failing the idempotency check, and\n            # formatting is less important there. We at least want the examples\n            # as well as the stdlib to be properly formatted.\n            files = \"\\\\.ncl$\";\n            excludes = [\n              \"/tests/(.+)\\\\.ncl$\"\n            ];\n          };\n        };\n      };\n\n      # Customize source filtering for Crane as Nickel uses non-standard-Rust\n      # files like `*.lalrpop`.\n      filterNickelSrc = filterCargoSources:\n        let\n          mkFilter = regexp: path: _type: builtins.match regexp path != null;\n          lalrpopFilter = mkFilter \".*lalrpop$\";\n          nclFilter = mkFilter \".*ncl$\";\n          txtFilter = mkFilter \".*txt$\";\n          snapFilter = mkFilter \".*snap$\";\n          scmFilter = mkFilter \".*scm$\";\n          mdFilter = mkFilter \".*md$\"; # include markdown files for checking snippets in the documentation\n          cxxFilter = mkFilter \".*(cc|hh)$\";\n          importsFilter = mkFilter \".*/core/tests/integration/inputs/imports/imported/.*$\"; # include all files that are imported in tests\n\n          infraFilter = mkFilter \".*/infra/.*$\";\n        in\n        pkgs.lib.cleanSourceWith {\n          src = pkgs.lib.cleanSource ./.;\n\n          # Combine our custom filters with the default one from Crane\n          # See https://github.com/ipetkov/crane/blob/master/docs/API.md#libfiltercargosources\n          filter = path: type:\n            builtins.any (filter: filter path type) [\n              lalrpopFilter\n              nclFilter\n              txtFilter\n              snapFilter\n              scmFilter\n              mdFilter\n              cxxFilter\n              filterCargoSources\n              importsFilter\n            ] && !(builtins.any (filter: filter path type) [\n              infraFilter\n            ]);\n        };\n\n      # if we directly set the revision, it would invalidate the cache on every commit.\n      # instead we set a static dummy hash and edit the binary in a separate (fast) derivation.\n      dummyRev = \"DUMMYREV_THIS_SHOULD_NOT_APPEAR_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n\n      # pad a string with the tail of another string\n      padWith = pad: str:\n        str +\n        builtins.substring\n          (builtins.stringLength str)\n          (builtins.stringLength pad)\n          pad;\n\n      # We want `nickel --version` and `nls --version` to print the git revision\n      # that nickel was compiled from. However, putting self.shortRev in a\n      # derivation invalidates the cache on any change, even if otherwise the\n      # derivation is identical. To mitigate this, we pass an unchanging string\n      # as the revision in `NICKEL_NIX_BUILD_REV`, and then have a small wrapper\n      # that replaces that string in the output binary. On every new commit this\n      # fast derivation will have to be rebuilt, but the slow compilation of\n      # rust code will only happen on more substantial changes. This is only\n      # needed for binaries that actually make use of this information (the\n      # cli and the language server).\n      fixupGitRevision = pkg: pkgs.stdenv.mkDerivation {\n        pname = pkg.pname + \"-rev-fixup\";\n        inherit (pkg) version meta;\n        src = pkg;\n        buildInputs = [ pkgs.bbe ]\n          ++ pkgs.lib.optionals pkgs.stdenv.isDarwin [ pkgs.darwin.autoSignDarwinBinariesHook ];\n        phases = [ \"fixupPhase\" ];\n        fixupPhase = ''\n          runHook preFixup\n\n          mkdir -p $out/bin\n          for srcBin in $src/bin/*; do\n            outBin=\"$out/bin/$(basename $srcBin)\"\n            # [dirty] must have 7 characters to match dummyRev (hard coded in\n            # nickel-lang-cli and nickel-lang-lsp)\n            # we have to pad them out to the same length as dummyRev so they fit\n            # in the same spot in the binary\n            bbe -e 's/${dummyRev}/${padWith dummyRev (self.shortRev or \"[dirty]\")}/' \\\n              $srcBin > $outBin\n            chmod +x $outBin\n          done\n\n          runHook postFixup\n        '';\n      };\n\n      # `crane.lib.${system}` is now deprecated, we must use\n      # `(crane.mkLib nixpkgs.legacyPackages.${system})` instead. Since we\n      # only ever use `crane.lib.${system}.overrideToolchain` in this flake, we\n      # expose that function as a top-level function`.\n      craneOverrideToolchain =\n        (crane.mkLib pkgs).overrideToolchain;\n\n      # Given a rust toolchain, provide Nickel's Rust dependencies, Nickel, as\n      # well as rust tools (like clippy)\n      mkCraneArtifacts = { rust ? mkRust { }, noRunBench ? false }:\n        let\n          craneLib = craneOverrideToolchain rust;\n\n          # suffixes get added via pnameSuffix\n          pname = \"nickel-lang\";\n\n          # Customize source filtering as Nickel uses non-standard-Rust files like `*.lalrpop`.\n          src = filterNickelSrc craneLib.filterCargoSources;\n\n          # set of cargo args common to all builds\n          cargoBuildExtraArgs = \"--frozen --offline\";\n\n          # Build *just* the cargo dependencies, so we can reuse all of that work (e.g. via cachix) when running in CI\n          cargoArtifactsDeps = craneLib.buildDepsOnly {\n            inherit pname src;\n            cargoExtraArgs = \"${cargoBuildExtraArgs} --all-features\";\n            # If we build all the packages at once, feature unification takes\n            # over and we get libraries with different sets of features than\n            # we would get building them separately. Meaning that when we\n            # later build them separately, it won't hit the cache. So instead,\n            # we need to build each package separately when we are collecting\n            # dependencies.\n            cargoBuildCommand = \"cargoWorkspace build\";\n            cargoTestCommand = \"cargoWorkspace test\";\n            cargoCheckCommand = \"cargoWorkspace check\";\n            preBuild = ''\n              cargoWorkspace() {\n                command=$(shift)\n                for packageDir in $(${pkgs.yq}/bin/tomlq -r '.workspace.members[]' Cargo.toml); do\n                  (\n                    cd $packageDir\n                    pwd\n                    cargoWithProfile $command \"$@\"\n                  )\n                done\n              }\n            '';\n            # pyo3 needs a Python interpreter in the build environment\n            # https://pyo3.rs/v0.17.3/building_and_distribution#configuring-the-python-version\n            nativeBuildInputs = with pkgs; [ pkg-config python3 ];\n            buildInputs =\n              # SEE: https://github.com/NixOS/nix/issues/9107\n              let\n                disableChecksOnDarwin =\n                  pkgList: builtins.map\n                    (pkg: pkg.overrideAttrs (_: pkgs.lib.optionalAttrs (system == \"x86_64-darwin\") {\n                      doCheck = false;\n                    }))\n                    pkgList;\n              in\n\n              disableChecksOnDarwin [\n                nix-input.packages.${system}.nix\n                # When updating to latest Nix, we'll need to use the following\n                # additional output. For now, we pinned `nix-input` to a\n                # previous tag, where the outputs are still grouped in the\n                # default package, so we leave them commented out.\n                # nix-input.packages.${system}.nix-store\n                # nix-input.packages.${system}.nix-expr\n                # nix-input.packages.${system}.nix-flake\n                # nix-input.packages.${system}.nix-cmd\n              ]\n              ++ [\n                pkgs.boost # implicit dependency of nix\n              ];\n\n            # seems to be needed for consumer cargoArtifacts to be able to use\n            # zstd mode properly\n            installCargoArtifactsMode = \"use-zstd\";\n          };\n\n          env = {\n            NICKEL_NIX_BUILD_REV = dummyRev;\n          };\n\n          buildPackage = { pnameSuffix, cargoPackage ? \"${pname}${pnameSuffix}\", extraBuildArgs ? \"\", extraArgs ? { } }:\n            craneLib.buildPackage ({\n              inherit\n                pname\n                pnameSuffix\n                src\n                version\n                cargoArtifacts;\n\n              cargoExtraArgs = \"${cargoBuildExtraArgs} ${extraBuildArgs} --package ${cargoPackage}\";\n            } // extraArgs);\n\n          # In addition to external dependencies, we build the lalrpop file in a\n          # separate derivation because it's expensive to build but needs to be\n          # rebuilt infrequently.\n          cargoArtifacts = buildPackage {\n            pnameSuffix = \"-core-lalrpop\";\n            cargoPackage = \"${pname}-core\";\n            extraArgs = {\n              cargoArtifacts = cargoArtifactsDeps;\n              src = craneLib.mkDummySrc {\n                inherit src;\n\n                # after stubbing out, reset things back just enough for lalrpop build\n                extraDummyScript = ''\n                  mkdir -p $out/core/src/parser\n                  cp ${./core/build.rs} $out/core/build.rs\n                  cp ${./core/src/parser/grammar.lalrpop} $out/core/src/parser/grammar.lalrpop\n                  # package.build gets set to a dummy file. reset it to use local build.rs\n                  # tomlq -i broken (https://github.com/kislyuk/yq/issues/130 not in nixpkgs yet)\n                  ${pkgs.yq}/bin/tomlq -t 'del(.package.build)' $out/core/Cargo.toml > tmp\n                  mv tmp $out/core/Cargo.toml\n                '';\n              };\n              # the point of this is to cache lalrpop compilation\n              doInstallCargoArtifacts = true;\n              # we need the target/ directory to be writable\n              installCargoArtifactsMode = \"use-zstd\";\n            };\n          };\n        in\n        rec {\n          inherit cargoArtifacts cargoArtifactsDeps;\n          nickel-lang-core = buildPackage { pnameSuffix = \"-core\"; };\n          nickel-lang-cli = fixupGitRevision (buildPackage {\n            pnameSuffix = \"-cli\";\n            extraArgs = {\n              inherit env;\n              meta.mainProgram = \"nickel\";\n            };\n          });\n          nickel-lang-lsp = fixupGitRevision (buildPackage {\n            pnameSuffix = \"-lsp\";\n            extraArgs = {\n              inherit env;\n              meta.mainProgram = \"nls\";\n            };\n          });\n\n          # Static building isn't really possible on MacOS because the system call ABIs aren't stable.\n          nickel-static =\n            if pkgs.stdenv.hostPlatform.isMacOS\n            then nickel-lang-cli\n            else\n            # To build Nickel and its dependencies statically we use the musl\n            # libc and clang with libc++ to build C and C++ dependencies. We\n            # tried building with libstdc++ but without success.\n              fixupGitRevision\n                (buildPackage {\n                  cargoPackage = \"nickel-lang-cli\";\n                  pnameSuffix = \"-static\";\n                  extraArgs = {\n                    inherit env;\n                    CARGO_BUILD_TARGET = pkgs.pkgsMusl.stdenv.hostPlatform.rust.rustcTarget;\n                    # For some reason, the rust build doesn't pick up the paths\n                    # to `libcxx`. So we specify them explicitly.\n                    #\n                    # We also explicitly add `libc` because of\n                    # https://github.com/rust-lang/rust/issues/89626.\n                    RUSTFLAGS = \"-L${pkgs.pkgsMusl.llvmPackages.libcxx}/lib -lstatic=c++abi -C link-arg=-lc\";\n                    # Explain to `cc-rs` that it should use the `libcxx` C++\n                    # standard library, and a static version of it, when building\n                    # C++ libraries. The `cc-rs` crate is typically used in\n                    # upstream build.rs scripts.\n                    CXXSTDLIB = \"static=c++\";\n                    stdenv = pkgs.pkgsMusl.libcxxStdenv;\n                    doCheck = false;\n                    meta.mainProgram = \"nickel\";\n                  };\n                });\n\n          benchmarks = craneLib.mkCargoDerivation {\n            inherit pname src version cargoArtifacts env;\n\n            pnameSuffix = \"-bench\";\n\n            buildPhaseCargoCommand = ''\n              cargo bench -p nickel-lang-core ${pkgs.lib.optionalString noRunBench \"--no-run\"}\n            '';\n\n            doInstallCargoArtifacts = false;\n          };\n\n          # Check that documentation builds without warnings or errors\n          checkRustDoc = craneLib.cargoDoc {\n            inherit pname src version cargoArtifacts env;\n            inherit (cargoArtifactsDeps) nativeBuildInputs buildInputs;\n\n            RUSTDOCFLAGS = \"-D warnings\";\n\n            cargoExtraArgs = \"${cargoBuildExtraArgs} --workspace --all-features\";\n\n            doInstallCargoArtifacts = false;\n          };\n\n          rustfmt = craneLib.cargoFmt {\n            # Notice that unlike other Crane derivations, we do not pass `cargoArtifacts` to `cargoFmt`, because it does not need access to dependencies to format the code.\n            inherit pname src;\n\n            cargoExtraArgs = \"--all\";\n\n            # `-- --check` is automatically prepended by Crane\n            rustFmtExtraArgs = \"--color always\";\n          };\n\n          clippy = craneLib.cargoClippy {\n            inherit pname src cargoArtifacts env;\n            inherit (cargoArtifactsDeps) nativeBuildInputs buildInputs;\n\n            cargoExtraArgs = cargoBuildExtraArgs;\n            cargoClippyExtraArgs = \"--all-features --all-targets --workspace -- --deny warnings --allow clippy::new-without-default --allow clippy::match_like_matches_macro\";\n          };\n        };\n\n      makeDevShell = { rust }: pkgs.mkShell {\n        # Get deps needed to build. Get them from cargoArtifactsDeps so we build\n        # the minimal amount possible to get there. It is a waste of time to\n        # build the cargoArtifacts, because cargo won't use them anyways.\n        inputsFrom = [ (mkCraneArtifacts { inherit rust; }).cargoArtifactsDeps ];\n\n        buildInputs = [\n          pkgs.rust-analyzer\n          pkgs.cargo-insta\n          pkgs.nixpkgs-fmt\n          pkgs.nodejs\n          pkgs.yarn\n          pkgs.yarn2nix\n          pkgs.nodePackages.markdownlint-cli\n          pkgs.python3\n        ];\n\n        shellHook = (pre-commit-builder { inherit rust; checkFormat = true; }).shellHook + ''\n          echo \"=== Nickel development shell ===\"\n          echo \"Info: Git hooks can be installed using \\`pre-commit install\\`\"\n        '';\n\n        RUST_SRC_PATH = \"${rust}/lib/rustlib/src/rust/library\";\n      };\n\n      # Profile is passed to `wasm-pack`, and is either \"dev\" (with debug\n      # symbols and no optimization), \"release\" (with optimization and without\n      # debug symbols) or \"profiling\". Right now only dev and release are used:\n      #   - release for the production build\n      #   - dev for checks, as the code isn't optimized, and WASM optimization\n      #   takes time\n      buildNickelWasm =\n        { rust ? mkRust { targets = [ \"wasm32-unknown-unknown\" ]; }\n        , profile ? \"release\"\n        }:\n        let\n          # Build the various Crane artifacts (dependencies, packages, rustfmt, clippy) for a given Rust toolchain\n          craneLib = craneOverrideToolchain rust;\n\n          # suffixes get added via pnameSuffix\n          pname = \"nickel-lang-wasm\";\n\n          # Customize source filtering as Nickel uses non-standard-Rust files like `*.lalrpop`.\n          src = filterNickelSrc craneLib.filterCargoSources;\n\n          cargoExtraArgs = \"-p nickel-wasm-repl --target wasm32-unknown-unknown --frozen --offline\";\n          # *  --mode no-install prevents wasm-pack from trying to download and\n          #   vendor tools like wasm-bindgen, wasm-opt, etc. but use the one\n          #   provided by Nix\n          # * --no-default-features disable some default features of Nickel that\n          #   aren't useful for the WASM REPL (and possibly incompatible with\n          #   WASM build)\n          wasmPackExtraArgs = \"--${profile} --mode no-install -- --no-default-features --frozen --offline\";\n\n          # Build *just* the cargo dependencies, so we can reuse all of that work (e.g. via cachix) when running in CI\n          cargoArtifacts = craneLib.buildDepsOnly {\n            inherit pname src cargoExtraArgs;\n            doCheck = false;\n          };\n\n        in\n        craneLib.mkCargoDerivation {\n          inherit pname cargoArtifacts src;\n\n          buildPhaseCargoCommand = ''\n            WASM_PACK_CACHE=.wasm-pack-cache wasm-pack build wasm-repl ${wasmPackExtraArgs}\n          '';\n\n          # nickel-lang.org expects an interface `nickel-repl.wasm`, hence the\n          # `ln`\n          installPhaseCommand = ''\n            mkdir -p $out\n            cp -r wasm-repl/pkg $out/nickel-repl\n            ln -s $out/nickel-repl/nickel_wasm_repl_bg.wasm $out/nickel-repl/nickel_repl.wasm\n          '';\n\n          nativeBuildInputs = [\n            rust\n            pkgs.wasm-pack\n            wasm-bindgen-cli\n            pkgs.binaryen\n            # Used to include the git revision in the Nickel binary, for `--version`\n            pkgs.git\n          ] ++ systemSpecificPkgs;\n        };\n\n      buildDocker = nickel: pkgs.dockerTools.buildLayeredImage {\n        name = \"nickel\";\n        tag = version;\n        contents = [\n          nickel\n        ];\n        config = {\n          Entrypoint = pkgs.lib.getExe nickel;\n          # Labels that are recognized by GHCR\n          # See https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#labelling-container-images\n          Labels = {\n            \"org.opencontainers.image.source\" = \"https://github.com/tweag/nickel\";\n            \"org.opencontainers.image.description\" = \"Nickel: better configuration for less\";\n            \"org.opencontainers.image.licenses\" = \"MIT\";\n          };\n        };\n      };\n\n      # Build the Nickel VSCode extension\n      vscodeExtension = pkgs.mkYarnPackage {\n        pname = \"vscode-nickel\";\n        src = pkgs.lib.cleanSource ./lsp/vscode-extension;\n\n        buildPhase = ''\n          # yarn tries to create a .yarn file in $HOME. There's probably a\n          # better way to fix this but setting HOME to TMPDIR works for now.\n          export HOME=\"$TMPDIR\"\n          cd deps/vscode-nickel\n          yarn --offline compile\n          yarn --offline vsce package --yarn -o $pname.vsix\n        '';\n\n        installPhase = ''\n          mkdir $out\n          mv $pname.vsix $out\n        '';\n\n        distPhase = \"true\";\n      };\n\n      # Copy the markdown user manual to $out.\n      userManual = pkgs.stdenv.mkDerivation {\n        name = \"nickel-user-manual-${version}\";\n        src = ./doc/manual;\n        installPhase = ''\n          mkdir -p $out\n          cp -r ./ $out\n        '';\n      };\n\n      # Generate the stdlib documentation from `nickel doc` as `format`.\n      stdlibDoc = format:\n        let\n          extension =\n            {\n              \"markdown\" = \"md\";\n            }.\"${format}\" or format;\n        in\n        pkgs.stdenv.mkDerivation {\n          name = \"nickel-stdlib-doc-${format}-${version}\";\n          src = ./core/stdlib;\n          installPhase = ''\n            mkdir -p $out\n            for file in $(ls *.ncl | grep -v 'internals.ncl')\n            do\n              module=$(basename $file .ncl)\n              ${pkgs.lib.getExe self.packages.\"${system}\".default} doc --format \"${format}\" \"$module.ncl\" \\\n                --output \"$out/$module.${extension}\"\n            done\n          '';\n        };\n\n      infraShell = nickel:\n        let\n          terraform = pkgs.terraform.withPlugins (p: with p; [\n            archive\n            aws\n            github\n          ]);\n          ec2-region = \"eu-north-1\";\n          ec2-ami = (import \"${nixpkgs}/nixos/modules/virtualisation/amazon-ec2-amis.nix\").latest.${ec2-region}.aarch64-linux.hvm-ebs;\n          run-terraform = pkgs.writeShellScriptBin \"run-terraform\" ''\n            set -e\n            ${pkgs.lib.getExe nickel} export --output main.tf.json <<EOF\n              ((import \"main.ncl\") & {\n                region = \"${ec2-region}\",\n                nixos-ami = \"${ec2-ami}\",\n              }).config\n            EOF\n            ${terraform}/bin/terraform \"$@\"\n          '';\n\n          update-infra = pkgs.writeShellScriptBin \"update-infra\" ''\n            set -e\n            ${run-terraform}/bin/run-terraform init\n            GITHUB_TOKEN=\"$(${pkgs.gh}/bin/gh auth token)\" ${run-terraform}/bin/run-terraform apply\n          '';\n        in\n        pkgs.mkShell {\n          buildInputs = [ terraform run-terraform update-infra ];\n        };\n\n      stdlibTests = pkgs.runCommandLocal \"stdlib-test\" { }\n        ''\n          ${pkgs.lib.getExe self.packages.\"${system}\".default} test ${./core/stdlib/std.ncl} && mkdir $out\n        '';\n    in\n    rec {\n      packages = {\n        inherit (mkCraneArtifacts { })\n          nickel-lang-core\n          nickel-lang-cli\n          benchmarks\n          nickel-lang-lsp\n          cargoArtifacts;\n        default = pkgs.buildEnv {\n          name = \"nickel\";\n          paths = [ packages.nickel-lang-cli packages.nickel-lang-lsp ];\n          meta.mainProgram = \"nickel\";\n        };\n        nickelWasm = buildNickelWasm { };\n        dockerImage = buildDocker packages.nickel-lang-cli; # TODO: docker image should be a passthru\n        inherit vscodeExtension;\n        inherit userManual;\n        stdlibMarkdown = stdlibDoc \"markdown\";\n        stdlibJson = stdlibDoc \"json\";\n      } // pkgs.lib.optionalAttrs (!pkgs.stdenv.hostPlatform.isDarwin) {\n        inherit (mkCraneArtifacts { }) nickel-static;\n        # Use the statically linked binary for the docker image if we're not on MacOS.\n        dockerImage = buildDocker packages.nickel-static;\n      };\n\n      apps = {\n        default = {\n          type = \"app\";\n          program = pkgs.lib.getExe packages.nickel-lang-cli;\n        };\n      };\n\n      devShells = (forEachRustChannel (channel: {\n        name = channel;\n        value = makeDevShell { rust = mkRust { inherit channel; rustProfile = \"default\"; targets = [ \"wasm32-unknown-unknown\" ]; }; };\n      })) // {\n        default = devShells.stable;\n        infra = infraShell packages.nickel-lang-cli;\n      };\n\n      checks = {\n        inherit (mkCraneArtifacts { noRunBench = true; })\n          benchmarks\n          clippy\n          checkRustDoc\n          nickel-lang-lsp\n          nickel-lang-cli\n          nickel-lang-core\n          rustfmt;\n        # There's a tradeoff here: \"release\" build is in theory longer than\n        # \"dev\", but it hits the cache on dependencies so in practice it is\n        # shorter. Another option would be to compile a dev dependencies version\n        # of cargoArtifacts. But that almost doubles the cache space.\n        nickelWasm = buildNickelWasm { profile = \"release\"; };\n        inherit vscodeExtension stdlibTests;\n        pre-commit = pre-commit-builder { };\n      };\n    }\n    );\n}\n"
        },
        {
          "name": "git",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "lsp",
          "type": "tree",
          "content": null
        },
        {
          "name": "notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyckel",
          "type": "tree",
          "content": null
        },
        {
          "name": "rfcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 0.2607421875,
          "content": "# The `default.nix` in flake-compat reads `flake.nix` and `flake.lock` from `src` and\n# returns an attribute set of the shape `{ defaultNix, shellNix }`\n\n(import (fetchTarball https://github.com/edolstra/flake-compat/archive/master.tar.gz) {\n  src = ./.;\n}).shellNix\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "vector",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasm-repl",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}