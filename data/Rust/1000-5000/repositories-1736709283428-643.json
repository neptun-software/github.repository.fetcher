{
  "metadata": {
    "timestamp": 1736709283428,
    "page": 643,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kyclark/command-line-rust",
      "stars": 1642,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "target\ndebug\n*.swp\n.DS_Store\n*.py\n**/*.rs.bk\nCargo.lock\n"
        },
        {
          "name": "01_hello",
          "type": "tree",
          "content": null
        },
        {
          "name": "02_echor",
          "type": "tree",
          "content": null
        },
        {
          "name": "03_catr",
          "type": "tree",
          "content": null
        },
        {
          "name": "04_headr",
          "type": "tree",
          "content": null
        },
        {
          "name": "05_wcr",
          "type": "tree",
          "content": null
        },
        {
          "name": "06_uniqr",
          "type": "tree",
          "content": null
        },
        {
          "name": "07_findr",
          "type": "tree",
          "content": null
        },
        {
          "name": "08_cutr",
          "type": "tree",
          "content": null
        },
        {
          "name": "09_grepr",
          "type": "tree",
          "content": null
        },
        {
          "name": "10_commr",
          "type": "tree",
          "content": null
        },
        {
          "name": "11_tailr",
          "type": "tree",
          "content": null
        },
        {
          "name": "12_fortuner",
          "type": "tree",
          "content": null
        },
        {
          "name": "13_calr",
          "type": "tree",
          "content": null
        },
        {
          "name": "14_lsr",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2020 Ken Youens-Clark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.927734375,
          "content": "# Command-Line Rust: A Project-Based Primer for Writing Rust CLIs\n\nThis is the code repository for the [_Command-Line Rust_](https://learning.oreilly.com/library/view/command-line-rust/9781098109424/) (O'Reilly, 2022/2024, ISBN 9781098109417) \n\n## Author\n\nKen Youens-Clark <kyclark@gmail.com>\n\n## Synopsis\n\nFor several consecutive years, Rust has been voted \"most loved programming language\" in Stack Overflow's annual developer survey. This open source systems programming language is now used for everything from game engines and operating systems to browser components and virtual reality simulation engines. But Rust is also an incredibly complex language with a notoriously difficult learning curve.\n\nRather than focus on the language as a whole, this guide teaches Rust using a single small, complete, focused program in each chapter. Author Ken Youens-Clark shows you how to start, write, and test each of these programs to create a finished product. You'll learn how to handle errors in Rust, read and write files, and use regular expressions, Rust types, structs, and more.\n\nDiscover how to:\n\n* Use Rust's standard libraries and data types to create command-line programs\n* Write and test Rust programs and functions\n* Read and write files, including stdin, stdout, and stderr\n* Document and validate command-line arguments\n* Write programs that fail gracefully\n* Parse raw and delimited text\n* Use and control randomness\n\n## Git Branches\n\nThe book was originally published in 2022, when the `clap` (command-line argument parser) crate was a v2.33.\nThe book was updated in 2024 to use `clap` v4, which has two patterns for parsing, _builder_ (similar to the original v2.33 code) and _derive_.\nThe branches are organized as follows:\n\n* `main`: Contains the `clap` v4 _derive_ pattern\n* `clap_v4_builder`: Contains the `clap` v4 _builder_ pattern\n* `clap_v2`: Contains the original programs from the 2022 version of the book that use `clap` v2.33\n\n![Rust](rust.jpg)\n\n"
        },
        {
          "name": "rust.jpg",
          "type": "blob",
          "size": 99.36328125,
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.1748046875,
          "content": "#!/usr/bin/env bash\n\nfor DIR in [01]*; do\n    DIRNAME=$(basename \"$DIR\")\n    echo \"==> $DIRNAME <==\"\n    (cd $DIR && cargo test -q > /dev/null && cargo clippy)\ndone\n\necho \"Done.\"\n"
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}