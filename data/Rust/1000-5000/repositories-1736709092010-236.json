{
  "metadata": {
    "timestamp": 1736709092010,
    "page": 236,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "leftwm/leftwm",
      "stars": 2911,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": "**/target\n**/*.rs.bk\nleftwm.logs\n.idea/\n\nresult\n.nixos-vm/result\n.nixos-vm/leftwm.qcow2\n.direnv\n.envrc\n\nsweep.timestamp\n\n.toggletasks.json\n\n.vscode/\n.fleet/\n"
        },
        {
          "name": ".nixos-vm",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.7197265625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.5.3]\n\n### Fixed\n\n- Fixed compilation issue for xlib-display-server for 32-bit systems\n\n## [0.5.2]\n\n## CVEs\n\n- chore: CVE-2024-27308 dependency update (mio) (via #1236 by @mautamu)\n\n### Breaking Change\n\n- chore: update MSRV to 1.74, update dependencies (via #1237 by @mautamu)\n- Update time and time-macros (via #1273 by @JacoMalan1)\n\n### Deprecated\n\n- Move clippy allowance to xlib-display-server, deprecate `make test-full` (via #1198 by @Eskaan)\n\n### Removed\n\n- remove hardcoded default layouts (via #1207 by @barkyq)\n- chore: remove obsolete `max_window_width` variable (via #1260 by @jasonmokk)\n\n### Added\n\n- The currently supported MSRV is 1.74.0\n- Added `window_hiding_strategy` config option (via #1274 by @Syudagye)\n- Simplify BaseCommand documentation macro (via #1187 by @Eskaan)\n- lefthk-worker: change multiple feature checks to one module condition (via #1194 by @Eskaan)\n- Separate leftwm bin (via #1192 by @Eskaan)\n- Add leftwm-log to Makefile targets (via #1199 by @Eskaan)\n- default_height and default_width (via #1218 by @barkyq)\n- Simplify setting the fourth byte of a pixel to 0xff (via #1229 by @Eskaan)\n- Add x11rb backend + Improve backends modularity (via #1221 by @Syudagye)\n- Add directional focus between windows (via #1240 by @marianomarciello)\n- Add 'args' Scratchpad config entry (via #1225 by @mautamu)\n- Add directional movement between windows (via #1252 by @marianomarciello)\n- Add missing match arm for FocusWindow command (via #1270 by @underscoreevelyn)\n- Lazily call randr on windows hiding (via #1282 by @Lieunoir)\n- Implement window rule for hiding_strategy (via #1284 by @Syudagye)\n\n### Fixed\n\n- Hidden window are not able to be captured (fixes #1100 via #1274 by @Syudagye)\n- Numlock prevents moving and resizing for floating windows (via #1276 by @Syudagye)\n- Some formatting chores (via #1186 by @Eskaan)\n- Fix freeze when process tries to aquire stderr (via #1197 by @Eskaan)\n- Rework \"fixed dialog windows ignoring application-defined sizes (#1166)\" (via #1200 by @Eskaan)\n- Fix the 32 bit builds by changing a type cast (via #1202 by @Eskaan)\n- update layouts in man page (via #1209 by @barkyq)\n- Fix newly spawned floating windows ignoring ws margins (via #1214 by @Eskaan)\n- Spawn new floating windows above old ones (via #1215 by @Eskaan)\n- change exec_shell to directly executed given command (via #1216 by @barkyq)\n- Fix build without lefthk (via #1228 by @pastalian)\n- `cargo doc` error fixes, CI workflow, and `CONTRIBUTING.md` update. (via #1232 by @nejucomo)\n- Add distinction between visible and busy workspace (via #1269 by @fcolona)\n- Fix removing destroyed window from history (via #1285 by @johnlepikhin)\n\n## [0.5.1]\n\n### Fixed\n\n- This is just a quick fixup of the leftwm crate, as in yesterdays release a tiny version number hickup snuck its way in\n\n## [0.5.0]\n\n### Breaking Change\n\n- The `layouts` and `workspace.layouts` in `config.ron` must be declared as Strings because they are no longer backed by an enum. (ie. use `layouts: [\"CenterMain\"]` instead of `layouts: [CenterMain]`)\n- The `max_window_width` config was removed without direct replacement. The \"always fill entire screen\" behavior can now be addressed by creating a custom layout with an appropriate `Reserve` property.\n- LeftWM now depends on `lefthk` ^0.2.0, which has been refactored (thanks to @blackdragon2447 in #1154)\n\n### Deprecated\n\n- The commands `IncreaseMainWidth` / `DecreaseMainWidth` were deprecated in favor of `IncreaseMainSize` and `DecreaseMainSize`\n\n### Removed\n\n- The `max_window_width` config option was removed\n\n### Added\n\n- Implemented the new [leftwm-layouts](https://github.com/leftwm/leftwm-layouts) library (via #1000 by @hertg)\n- Added `IncreaseMainSize` / `DecreaseMainSize` as a replacement for the deprecated `IncreaseMainWidth` / `DecreaseMainWidth` (closes #545 via #1000 by @hertg)\n- Added `ToggleMaximized` command (closes #973 via #1121 by @bksalman)\n- Added `ToggleAbove` command (closes #1094 via #1160 by @Eskaan)\n- Add support for multiple main windows on all layouts that have a main column, new commands are `IncreaseMainCount` and `DecreaseMainCount` (closes #516 via #1000 by @hertg)\n- use `unwrap_newtypes` extension in ron deserializer (via #1000 by @hertg)\n- Improved error and documentation for external commands using leftwm-command (thanks to @Silicasandwhich in #1098, resolves #1096)\n- General improvements to leftwm-log, including a nicer matching solution and feature-gates functions (thanks to @Eskaan in #1109)\n- `leftwm-command -l` has been parameterized using the `leftwm-macros` library (thanks to @Mautamu in #1115; closes #1095)\n- Added `disable_cursor_reposition_on_resize` option to config (thanks to @BKSalman in #1123)\n- Fullscreen ordering/resizing changes and other optimizations (from @Eskaan and @bksalman in #1136, #1164, #1158, #1159)\n- Commented example configuration (via #1133 by @VuiMuich)\n- The currently supported MSRV is 1.70.0\n\n### Fixed\n\n- Changing main width now works on all layouts that have a main column (fixes #96 via #1000 by @hertg)\n- Fixed a bug where windows would sometimes spawn on the last tag (fixes #1065 via #1093 by @Silicasandwhich)\n- `basic_lemonbar` theme now works if the user has only one workspace, the clock is independent of leftwm-state, the tags are now clickable and have better naming (thanks to @simtd in #1101)\n- Ron option checking by `leftwm-check` has been corrected when `#![enable(implicit_some)]` is not present (thanks to @samuelabreu in #1110)\n- `output` field has been returned to `leftwm-state` (thanks to @Eskaan in #1116, resolves #1111)\n- Maximized windows no longer hide dock and desktop (thank to @BkSalman in #1126)\n- Readme typos and changelog rename in #1113 thank to @Chudson16 and #1091 thanks to @Eskaan; various code formatting changes (thanks to Eskaan in #1117, #1120)\n- Dialog windows now obey application-defined sizes (thanks to @Silicasandwhich in #1166; closes #1118)\n- Nixos flake rewritten to use flake-parts (#1122 by @vesdev)\n- Moved windows no longer switch to the first tag (closes #1054 via #1161 by @Eskaan)\n- Clippy fixes and updates which results in MSRV=1.70.0 (via #1137, #1130, #1151 by @VuiMuich, @cyril-marpaud, and @Mautamu)\n\n## [0.4.2]\n\n### Added\n\n- Created `Matrix` chatrooms as an pure OSS alternative to `Discord`\n- Added check to `leftwm-check` to ensure all necessary binaries are installed (via PR #1077 by @mautamu)\n- Make Workspace IDs unique and predictable (via PR 1043 by @hertg)\n- Add optional behaviour Settings for `FocusNextTag` and `FocusPreviousTag` to skip or expricitly go to (un-)used tags (via #1086 by @Silicasandwhich)\n- Enhance visibility of configuration errors in `leftwm-check` output (via PR 1072 by @realGWM)\n- Add `SwapWindowTop` command as an alternative to `MoveWindowTop` (via #1005 by @emiliode)\n- Reposition mouse cursor to bottom-right corner of window when resizing (via #1009 by @nemalex)\n- The currently supported MSRV is 1.65.0\n\n### Fixed\n\n- Fix build error caused by deprecated macro in `git_version` (via PR #1075 by VuiMuich)\n- Fix `template.liquid` in `basic_lemonbar` example theme (via PR #1080 by VuiMuich)\n- Fix to correctly restore order of windows after exiting fullscreen (via PR #1053 by @jean-santos)\n- Fix that focus is found after the focused window got destroyed (via PR # 1055 by @jean-santos)\n- Correct writing and formatting of docs in `themes/basic_eww` (via PR #107 by @NAHO)\n- Various performance improvements for `command pipe`, `event loop`, `set_layout` and more (via PRs #1016, #1017, #1018, #1067, #1068 by @vrmiguel)\n- Made AUR packages better compliant to packaging specs and use correct detection for `systemd` based systems (via gists by @eclairevoyant)\n- Fix minor regression where `res_name` and `name` window properties were no longer checked by window rules (via #1002 by @guigot)\n- Simplified async test (via PR #1069 by @vrmiguel)\n\n## [0.4.1]\n\n### Fixed\n\n- Temp fix for MainWidth inconsistency until layout-lib\n- Fix crash when swapping tag at startup\n- Swap for new copr repo\n- Using args[0] instead of current_exe() under OpenBSD. current_exe() is not supported in this OS.\n- replace `<module-name>/mod.rs` with `<module-name>.rs`\n- Fix manual install instructions\n- Change default layout mode to `Tag`\n- Exclude NetBSD in `build.rs` and avoid build-hangs\n- Print `lefthk` warning only when no binary present\n- use `implicit_some` extension in ron deserializer\n- small update to readme\n- Make help pages work\n- better clap and fix broken `workspace` flag for `leftwm-state`\n- Fix binary arguments (clap)\n- Some fixes for the `Makefile` and `flake.nix`\n- Make `test-full` fail on warnings\n- bump several depedencies\n- Make `leftwm --version` work\n- Improve output of `leftwm-check --verbose`\n- Fix `--no-default-features` build failing\n- Refactor: Move xlib display server to it's own crate\n- Add link to `leftfwm.desktop` to the README\n- Fix new windows always getting stacked topmost\n- Also a bunch of little papercuts and code cleanup\n\n### Added\n\n- feat(config): allow regexps in window_rules for window_class,\n- Option to hide border when only one window is visible\n- added lefthk feature checks and errors\n- add features log to leftwm-check.\n- handle theme templates within Makefile\n- Add optimized build profile\n- Add leftwm config subcommand\n- Add `background_color` to theme config\n- update theme examples to ron\n- update eww example\n- Feature: Multiple `up` scripts\n- Add install-linked-dev to Makefile\n- feat: Add a `spawn_as_type` to the `window_rules` configuration\n- Added nix tests to Makefile.\n- Added a few options to the pr template\n- Add a few window rules\n\n### Minimum Supported Rust Version\n\n- The currently supported MSRV is 1.60.0\n\n## [0.4.0]\n\n### Fixed\n\n- Fixed again a lot of small papercuts\n- Command parity between keybinds and external aka `leftwm-command` commands\n- Improved window snapping\n- Improved behaviour of floating windows\n- `dock` windows not recieving `click` after some window was `fullscreen`\n\n### Added\n\n- Commands `AttachScratchpad`, `ReleaseScratchpad`, `NextScratchpadWindow`, `PrevScratchpadWindow`\n- Commands `MoveWindowToNextTag`, `MoveWindowToPreviousTag`\n- Window rules by `WINDOW_CLASS` or `WINDOW_TITLE`\n- `test-full` to `Makefile` using padantic clippy as well\n- Introduced `lefthk` as default daemon to handle keybinds\n- Changed config language from `TOML` to `RON`\n- Journald logging is default for AUR packages and when building from source\n- Tags support `urgent` flag\n- `sloppy_mouse_follows_focus`\n- `disable_window_snap`\n\n### Minimum Supported Rust Version\n\n- The currently supported MSRV is 1.59.0\n\n## [0.3.0]\n\n### Fixed\n\n### Added\n\n### Minimum Supported Rust Version\n\n- The currently supported MSRV is 1.52.0\n\n## [0.2.10] - 2021-12-04\n\nTo view the full list of changes visit the [milestone](https://github.com/leftwm/leftwm/milestone/1?closed=1).\n\n### Fixed\n\n- Fixed a command in basic-eww theme\n- Window width resetting on tag resize\n- Render emoji's in window titles\n- Greatly improved dialog handling\n- Many focus fixes\n- leftwm-check not running needed checks\n- Xterm loading times\n- Floating windows going behind newly tiled windows\n\n### Added\n\n- Windows opened from a terminal will spawn on the same tag\n- Added Makefile\n- When in ClickTo, windows are focused when moved/resized\n- ToggleFloating and TileToFloating commands\n- Manpage\n\n## [0.2.9] - 2021-10-11\n\n### Fixed\n\n- lots of small papercuts\n- xdg-autostart\n- Better config checking\n\n### Added\n\n- Layouts by Tags not Workspaces\n- New Commands\n- Split into two crates\n\n## [0.2.8] - 2021-7-6\n\n### Fixed\n\n- So So many Bug fixes\n\n### Added\n\n- Add the command 'leftwm-command' to run commands\n\n## [0.2.7] - 2021-4-6\n\n### Fixed\n\n- `SwapTags` now works properly for multi-workspace users\n- Xlib events now read asynchronously\n- Weird focus issues\n- Some floating windows are now sized properly\n- Floating windows are now always on top\n- Basic-polybar theme now reports seconds correctly\n- Startup banners no longer take up the whole screen\n- Bug Fixes in tests\n- Window order is now restored on reload\n- Several code refactors\n\n### Added\n\n#### Layouts\n\n- MainAndHorizontalStack layout\n- CenterMainBalanced layout\n- Monocle layout\n- RightWiderLeftStack layout\n- LeftWiderRightStack layout\n- MainAndDeck layout\n\n#### Configuration\n\n- Active layouts may now be set in config.toml with `layouts`\n- GotoTag sends screen to previously viewed tag\n  - Added `disable_current_tag_swap` to config.toml to maintain old behaviour\n- Mousekey for floating drag/resize can now be set with `mousekey` in config.toml\n- FloatingToTile command that allows a window to be set to float in config.toml\n- Theme Margins [top/bottom side] or [top right bottom left] added for theme.toml\n\n#### Miscellaneous\n\n- Added `leftwm-check` binary that allows for configuration files (config.toml, theme.toml) to be checked.\n- Autostart applications can now be disabled by setting X-Gnome-Autostart to false in the appropriate .desktop file\n- SetLayout command added to set specific layouts externally\n- Lots of notes have been added to the library documentation\n\n## [0.2.6] - 2021-1-29\n\n### Fixed\n\n- Performance improvements (async update)\n- Bug fixes\n\n### Added\n\n- layout sizing by user (Mod+h / Mod+l)\n\n## [0.2.5] - 2020-11-13\n\n### Fixed\n\n- Performance improvements\n- Bug fixes\n\n### Added\n\n## [0.2.4] - 2020-8-10\n\n### Fixed\n\n- Bug fixes\n\n### Added\n\n- New Layouts\n\n## [0.2.3] - 2020-5-15\n\n### Fixed\n\n- Sizing and loading issues with docks\n- Many small bug fixes\n\n### Added\n\n- Much better logging\n- `workspace.layout` to `leftwm-state` output.\n- Layouts are now preserved between reloads.\n\n## [0.2.2] - 2019-12-27\n\n### Fixed\n\n- fix build with latest version of rust\n\n## [0.2.1] - 2019-12-16\n\n### Fixed\n\n- Stability and performance updates\n- EWMH compatibility fixes\n- The way floating windows move with workspaces\n\n### Added\n\n- layout Grid\n- layout Fibonacci\n\n## [0.1.10] - 2019-06-17\n\n### Fixed\n\n- Stability and performance updates\n- EWMH compatibility fixes\n- Improvements to theme system\n\n### Added\n\n- Better default key bindings\n\n## [0.1.9] - 2019-05-05\n\n### Fixed\n\n- Fix Several small papercuts and bug fixes\n\n### Added\n\n- reloading while keeping current window state\n- Keyboard navigation between workspaces\n- min/max window size support\n- callback to call theme scripts on new window\n\n## [0.1.8] - 2019-04-19\n\n### Fixed\n\n- Fix Several small papercuts and bug fixes\n\n## [0.1.7] - 2019-04-15\n\n### Fixed\n\n- Fix issues with multiscreen bars\n- Cleanup and refactor code\n\n### Added\n\n- leftwm-state to get state info from leftwm for bars\n- Added template system for theme creation\n\n## [0.1.6] - 2019-04-5\n\n### Fixed\n\n- Bugs and issues with bars\n- Several small bugs fixes\n\n### Added\n\n- Renaming of tags\n- keycombos to refocusing windows\n- Added layout - Main/Stacked\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1982421875,
          "content": "# Contributing to LeftWM\n\nThank you for your interest in contributing to LeftWM!\n\nTable of Contents:\n\n1. [Feature Requests](#feature-requests)\n2. [Bug Reports](#bug-reports)\n3. [Patches / Pull Requests](#patches--pull-requests)\n    1. [Testing](#testing)\n    2. [Performance](#performance)\n    3. [Code Documentation](#code-documentation)\n    4. [Style](#style)\n    5. [User Documentation](#user-documentation)\n\n## Feature Requests\n\nFeature requests should be reported in the\n[LeftWM issue tracker](https://github.com/leftwm/leftwm/issues).\n\n## Bug Reports\n\nBug reports should be reported in the\n[LeftWM issue tracker](https://github.com/leftwm/leftwm/issues). \nBefore reporting a bug, please check the troubleshooting steps in the README and previous issues.\n\n## Patches / Pull Requests\n\nAll patches have to be sent on Github as [pull requests](https://github.com/leftwm/leftwm/pulls).\n\nPlease note that the minimum supported version of Rust capable of compiling LeftWM is Rust 1.52.0.\n\n### Testing\n\nTo run the provided tests or any tests you have added use:\n\n```\ncargo test --all-targets --all-features\n```\nThese tests are run by CI, but it is always easier to check before pushing.\n\n### Code Documentation\n\nCode documentation is generated with `cargo doc --all-features`.\n\nThe existing code can be used as a guidance here and the general rustfmt rules can be followed for formatting, which can be run with:\n```\ncargo fmt -- --check\n```\nOr many text editors/IDE's have a supported plugin that will auto-format your code, e.g. for vim there is [rust.vim](https://github.com/rust-lang/rust.vim).\n\n### Style\n\nSimilar to documentation rustfmt along with clippy are used for general style guidance. Clippy can be run using:\n```\ncargo clippy --release\n```\nAgain these are checked with CI, but it is always easier to check them before creating a pull request.\n\n*Note: if you want to further improve the style you could also use these additional flags:*\n```\ncargo clippy -- -W clippy::pedantic -A clippy::must_use_candidate -A clippy::cast_precision_loss -A clippy::cast_possible_truncation -A clippy::cast_possible_wrap -A clippy::cast_sign_loss -A clippy::mut_mut\n\n```\n\n### User Documentation\n\nWhen introducing new commands or config options it is helpful to provide some user level documentation and keep the initial PR message body updated with this documentation.\n\nIf possible please provide a snippet for the relevant wiki-article/section, so this can be updated accordingly as quick as possible.\n\nHere are the wiki pages that must be updated once the PR is merged in `main` branch, if applicable:\n\n- [External commands wiki page](https://github.com/leftwm/leftwm/wiki/External-Commands)\n- [Config wiki page](https://github.com/leftwm/leftwm/wiki/Config)\n\n#### Manual Page\n\nIf possible, please document your newly added commands/configuration options to the `leftwm` manual page, as this will help users\nwho need offline documentation available or a \"quick look\" at any command. To do so, search for `leftwm/doc/leftwm.1` and document your changes in there.\n\n### Tips and Tricks\n\nThere is also a [tips and tricks](https://github.com/leftwm/leftwm/wiki/Contributing-to-Leftwm---Tips-and-Tricks) section in the wiki full of info from different contributors on the LeftWM team.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 42.6279296875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"anymap2\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d301b3b94cb4b2f23d7917810addbbaff90738e0ca2be692bd027e70d7e0330c\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"const_format\"\nversion = \"0.2.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"126f97965c8ad46d6d9163268ff28432e8f6a1196a55578867832e3049df63dd\"\ndependencies = [\n \"const_format_proc_macros\",\n]\n\n[[package]]\nname = \"const_format_proc_macros\"\nversion = \"0.2.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d57c2eccfb16dbac1f4e61e206105db5820c9d26c3c472bc17c774259ef7744\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ba6d68e24814cb8de6bb986db8222d3a027d15872cabc0d18817bc3c0e4471\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"gethostname\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0176e0459c2e4a1fe232f984bca6890e681076abb9934f6cea7c326f3fc47818\"\ndependencies = [\n \"libc\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"git-version\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad568aa3db0fcbc81f2f116137f263d7304f512a1209b35b85150d3ef88ad19\"\ndependencies = [\n \"git-version-macro\",\n]\n\n[[package]]\nname = \"git-version-macro\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53010ccb100b96a67bc32c0175f0ed1426b31b655d562898e57325f81c023ac0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"inventory\"\nversion = \"0.3.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5d80fade88dd420ce0d9ab6f7c58ef2272dde38db874657950f827d4982c817\"\ndependencies = [\n \"rustversion\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"kstring\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"558bf9508a558512042d3095138b1f7b8fe90c5467d94f9f1da28b3731c5dbd1\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lefthk-core\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c671622c3f29c33d4b0716da390cd5748a755906dee89134d0d07d55951683dd\"\ndependencies = [\n \"inventory\",\n \"mio\",\n \"nix\",\n \"ron\",\n \"serde\",\n \"signal-hook\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tracing\",\n \"x11-dl\",\n \"xdg\",\n]\n\n[[package]]\nname = \"leftwm\"\nversion = \"0.5.3\"\ndependencies = [\n \"anyhow\",\n \"clap\",\n \"const_format\",\n \"futures\",\n \"git-version\",\n \"lefthk-core\",\n \"leftwm-core\",\n \"leftwm-layouts\",\n \"leftwm-macros\",\n \"liquid\",\n \"mio\",\n \"once_cell\",\n \"regex\",\n \"ron\",\n \"serde\",\n \"serde_json\",\n \"shellexpand\",\n \"signal-hook\",\n \"syslog-tracing\",\n \"tempfile\",\n \"thiserror 2.0.9\",\n \"time\",\n \"tokio\",\n \"toml\",\n \"tracing\",\n \"tracing-appender\",\n \"tracing-journald\",\n \"tracing-subscriber\",\n \"x11rb-display-server\",\n \"xdg\",\n \"xlib-display-server\",\n]\n\n[[package]]\nname = \"leftwm-core\"\nversion = \"0.5.2\"\ndependencies = [\n \"bitflags\",\n \"dirs-next\",\n \"futures\",\n \"leftwm-layouts\",\n \"mio\",\n \"nix\",\n \"serde\",\n \"serde_json\",\n \"signal-hook\",\n \"tempfile\",\n \"thiserror 2.0.9\",\n \"tokio\",\n \"tracing\",\n \"x11-dl\",\n \"xdg\",\n]\n\n[[package]]\nname = \"leftwm-layouts\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d06c5e3851629e1f66155e862eb113330a5988f058715599b1474bde5aedfd3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"leftwm-macros\"\nversion = \"0.5.2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"leftwm-watchdog\"\nversion = \"0.5.3\"\ndependencies = [\n \"clap\",\n \"dirs-next\",\n \"nix\",\n \"signal-hook\",\n \"tempfile\",\n \"thiserror 2.0.9\",\n \"xdg\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"liquid\"\nversion = \"0.26.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cdcc72b82748f47c2933c172313f5a9aea5b2c4eb3fa4c66b4ea55bb60bb4b1\"\ndependencies = [\n \"doc-comment\",\n \"liquid-core\",\n \"liquid-derive\",\n \"liquid-lib\",\n \"serde\",\n]\n\n[[package]]\nname = \"liquid-core\"\nversion = \"0.26.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2752e978ffc53670f3f2e8b3ef09f348d6f7b5474a3be3f8a5befe5382e4effb\"\ndependencies = [\n \"anymap2\",\n \"itertools\",\n \"kstring\",\n \"liquid-derive\",\n \"num-traits\",\n \"pest\",\n \"pest_derive\",\n \"regex\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"liquid-derive\"\nversion = \"0.26.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b51f1d220e3fa869e24cfd75915efe3164bd09bb11b3165db3f37f57bf673e3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"liquid-lib\"\nversion = \"0.26.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59b1a298d3d2287ee5b1e43840d885b8fdfc37d3f4e90d82aacfd04d021618da\"\ndependencies = [\n \"itertools\",\n \"liquid-core\",\n \"once_cell\",\n \"percent-encoding\",\n \"regex\",\n \"time\",\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c7398b9c8b70908f6371f47ed36737907c87c52af34c268fed0bf0ceb92ead9\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b7cafe60d6cf8e62e1b9b2ea516a089c008945bb5a275416789e7db0bc199dc\"\ndependencies = [\n \"memchr\",\n \"thiserror 2.0.9\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"pest_derive\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"816518421cfc6887a0d62bf441b6ffb4536fcc926395a69e1a85852d4363f57e\"\ndependencies = [\n \"pest\",\n \"pest_generator\",\n]\n\n[[package]]\nname = \"pest_generator\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d1396fd3a870fc7838768d171b4616d5c91f6cc25e377b673d714567d99377b\"\ndependencies = [\n \"pest\",\n \"pest_meta\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pest_meta\"\nversion = \"2.7.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1e58089ea25d717bfd31fb534e4f3afcc2cc569c70de3e239778991ea3b7dea\"\ndependencies = [\n \"once_cell\",\n \"pest\",\n \"sha2\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"ron\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94\"\ndependencies = [\n \"base64\",\n \"bitflags\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shellexpand\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da03fa3b94cc19e3ebfc88c4229c49d8f08cdbd1228870a45f0ffdf84988e14b\"\ndependencies = [\n \"dirs\",\n]\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syslog-tracing\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d349bc2df408b4bf656709a29643641cef7f1795d708f88b105c626a8f64f6e4\"\ndependencies = [\n \"libc\",\n \"tracing-core\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a8a559c81686f576e8cd0290cd2a24a2a9ad80c98b3478856500fcbd7acd704\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"getrandom\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-appender\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3566e8ce28cc0a3fe42519fc80e6b4c943cc4c8cef275620eb8dac2d3d4e06cf\"\ndependencies = [\n \"crossbeam-channel\",\n \"thiserror 1.0.69\",\n \"time\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-journald\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc0b4143302cf1022dac868d521e36e8b27691f72c84b3311750d5188ebba657\"\ndependencies = [\n \"libc\",\n \"tracing-core\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2896d95c02a80c6d6a5d6e953d479f5ddf2dfdb6a244441010e373ac0fb88971\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39281189af81c07ec09db316b302a3e67bf9bd7cbf6c820b50e35fee9c2fa980\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"x11-dl\"\nversion = \"2.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38735924fedd5314a6e548792904ed8c6de6636285cb9fec04d5b1db85c1516f\"\ndependencies = [\n \"libc\",\n \"once_cell\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"x11rb\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d91ffca73ee7f68ce055750bf9f6eca0780b8c85eff9bc046a3b0da41755e12\"\ndependencies = [\n \"gethostname\",\n \"rustix\",\n \"x11rb-protocol\",\n]\n\n[[package]]\nname = \"x11rb-display-server\"\nversion = \"0.1.2\"\ndependencies = [\n \"futures\",\n \"leftwm-core\",\n \"mio\",\n \"serde\",\n \"tokio\",\n \"tracing\",\n \"x11rb\",\n]\n\n[[package]]\nname = \"x11rb-protocol\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec107c4503ea0b4a98ef47356329af139c0a4f7750e621cf2973cd3385ebcb3d\"\n\n[[package]]\nname = \"xdg\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546\"\n\n[[package]]\nname = \"xlib-display-server\"\nversion = \"0.1.4\"\ndependencies = [\n \"futures\",\n \"leftwm-core\",\n \"mio\",\n \"serde\",\n \"tokio\",\n \"tracing\",\n \"x11-dl\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.2880859375,
          "content": "[workspace]\nmembers = [\n    \"leftwm\",\n    \"leftwm-core\",\n    \"leftwm-macros\",\n    \"leftwm-watchdog\",\n    \"display-servers/xlib-display-server\",\n    \"display-servers/x11rb-display-server\",\n]\nresolver = \"2\"\n\n[profile.optimized]\ninherits = \"release\"\ncodegen-units = 1\nstrip = \"symbols\"\nlto = \"fat\"\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.07421875,
          "content": "\nThe MIT License\n\nCopyright (c) 2019-2019 Lex Childs <lexchilds@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.7490234375,
          "content": "# Absolute path to project directory, required for symbolic links\n# or when 'make' is run from another directory.\n# - credit: https://stackoverflow.com/a/23324703/2726733\nROOT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n\nSHARE_DIR := /usr/share\nTARGET_DIR := /usr/local/bin\n\n# Set default profile if unset\nifndef profile\n\tprofile := optimized\nendif\n\n# Set corresponding target folder name\nifeq ($(profile),dev)\n\tfolder := debug\nelse\n\tfolder := $(profile)\nendif\n\n# default rule is to run build/test\nall: build test\n\n# runs tests and linters\ntest:\n\tcd $(ROOT_DIR) && cargo test --all-targets --all-features\n\tcd $(ROOT_DIR) && cargo fmt -- --check\n\tcd $(ROOT_DIR) && cargo clippy -- -D warnings -W clippy::pedantic\n\ntest-nix:\n\tcd $(ROOT_DIR) && NIX_PATH=nixpkgs=channel:nixos-unstable nix flake check --extra-experimental-features \"nix-command flakes\" --verbose\n\tcd $(ROOT_DIR) && NIX_PATH=nixpkgs=channel:nixos-unstable nix build --extra-experimental-features \"nix-command flakes\" --verbose\n\n# deprecated\ntest-full: test\n\t@printf '\\n\\033[38;5;9mNote: \\\"make test-full\\\" is deprecated. You can use \\\"make test\\\" instead with the same functionality\\n'\n\ntest-full-nix: test test-nix\n\n# builds the project\nbuild:\n\t@echo \"Building with $(profile) profile\"\n\t@echo \"Change the profile by adding profile=release or profile=dev to the command\"\n\tcd $(ROOT_DIR) && cargo build --profile $(profile)\n\n# removes the generated binaries\nclean:\n\tcd $(ROOT_DIR) && cargo clean\n\trm $(ROOT_DIR)/result\n\t@echo \"Build files have been cleaned\"\n\n# builds the project and installs the binaries (and .desktop)\ninstall: build\n\tsudo cp $(ROOT_DIR)/leftwm.desktop $(SHARE_DIR)/xsessions/\n\tsudo cp $(ROOT_DIR)/leftwm/doc/leftwm.1 /usr/local/share/man/man1/leftwm.1\n\t[ -d '/usr/share/leftwm' ] || sudo mkdir $(SHARE_DIR)/leftwm\n\tsudo cp -rL $(ROOT_DIR)/examples $(SHARE_DIR)/leftwm\n\tsudo install -s -Dm755\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm-log\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm-worker\\\n\t\t$(ROOT_DIR)/target/$(folder)/lefthk-worker\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm-state\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm-check\\\n\t\t$(ROOT_DIR)/target/$(folder)/leftwm-command\\\n\t\t-t $(TARGET_DIR)\n\tcd $(ROOT_DIR) && cargo clean\n\t@echo \"Binaries, '.desktop' file, manpage, theme and config templates have been installed\"\n\n# Function to build and link a specific profile\ninstall-linked: build\n\tsudo cp $(ROOT_DIR)/leftwm.desktop $(SHARE_DIR)/\n\tsudo cp $(ROOT_DIR)/leftwm/doc/leftwm.1 /usr/local/share/man/man1/leftwm.1\n\t[ -d '/usr/share/leftwm' ] || sudo mkdir $(SHARE_DIR)/leftwm\n\tsudo cp -rL $(ROOT_DIR)/examples $(SHARE_DIR)/leftwm\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm $(TARGET_DIR)/leftwm\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm-log $(TARGET_DIR)/leftwm-log\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm-worker $(TARGET_DIR)/leftwm-worker\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/lefthk-worker $(TARGET_DIR)/lefthk-worker\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm-state $(TARGET_DIR)/leftwm-state\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm-check $(TARGET_DIR)/leftwm-check\n\tsudo ln -sf $(ROOT_DIR)/target/$(folder)/leftwm-command $(TARGET_DIR)/leftwm-command\n\t@echo \"binaries have been linked, '.desktop' file, manpage, theme and config templates have been installed\"\n\n# Uninstalls leftwm from the system.\nuninstall:\n\tsudo rm -f $(SHARE_DIR)/leftwm.desktop\n\tsudo rm /usr/local/share/man/man1/leftwm.1\n\tsudo rm -rf $(SHARE_DIR)/leftwm\n\tsudo rm -f\\\n\t\t$(TARGET_DIR)/leftwm\\\n\t\t$(TARGET_DIR)/leftwm-log\\\n\t\t$(TARGET_DIR)/leftwm-worker\\\n\t\t$(TARGET_DIR)/lefthk-worker\\\n\t\t$(TARGET_DIR)/leftwm-state\\\n\t\t$(TARGET_DIR)/leftwm-check\\\n\t\t$(TARGET_DIR)/leftwm-command\n\t@echo \"Binaries and manpage have been uninstalled and '.desktop' file, theme and config templates have been removed\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.5576171875,
          "content": "<div align=\"center\">\n  <h1><strong>LeftWM</strong></h1>\n  <p>\n\t<strong>A window manager for adventurers</strong>\n  </p>\n  <p>\n\t<a href=\"https://github.com/leftwm/leftwm/actions?query=workflow%3ACI\">\n\t\t<img src=\"https://github.com/leftwm/leftwm/workflows/CI/badge.svg\" alt=\"build status\" />\n\t</a>\n\t<a href=\"https://github.com/leftwm/leftwm/wiki\">\n\t\t<img src=\"https://img.shields.io/badge/wiki-0.5.0-green.svg\" alt=\"wiki\" />\n\t</a>\n\t<a href=\"https://docs.rs/leftwm/\">\n\t\t<img src=\"https://docs.rs/leftwm/badge.svg\" alt=\"Documentation\" />\n\t</a><br />\n\t<a href=\"https://discord.gg/c9rB3wDnVs\">\n\t\t<img src=\"https://img.shields.io/discord/889371782388256818?color=%235865F2&label=Discord\" alt=\"discord\" />\n\t</a>\n\t<a href=\"https://matrix.to/#/#leftwm-announcements:matrix.org\">\n\t\t<img src=\"https://img.shields.io/badge/matrix%20chat-Announcements-green.svg\" alt=\"Matrix Chat: Announcements\" />\n\t</a>\n\t</a>\n\t<a href=\"https://matrix.to/#/#leftwm-general:matrix.org\">\n\t\t\t<img src=\"https://img.shields.io/badge/matrix%20chat-General-green.svg\" alt=\"Matrix Chat: General\" />\n\t</a>\n\t</a>\n\t<a href=\"https://matrix.to/#/#leftwm-support:matrix.org\">\n\t\t\t<img src=\"https://img.shields.io/badge/matrix%20chat-Support-green.svg\" alt=\"Matrix Chat: Support\" />\n\t</a>\n  </p>\n</div>\n\n![Screenshot of LeftWM in action](screenshots/5.png)\n\n**IMPORTANT NOTE: LeftWM has changed the config language from `TOML` to `RON` with the `0.4.0` release. Please use `leftwm-check --migrate-toml-to-ron` to migrate your config and visit the [wiki](https://github.com/leftwm/leftwm/wiki) for more info.**\n\n# Table of contents\n\n- [Why go left](#why-go-left)\n- [Dependencies](#dependencies)\n- [Installation (with package manager)](#installation-with-package-manager)\n- [Manual Installation (no package manager)](#manual-installation-no-package-manager)\n  - [Using a graphical login such as LightDM, GDM, LXDM, and others](#using-a-graphical-login-such-as-lightdm-gdm-lxdm-and-others)\n  - [Optional Development Installation](#optional-development-installation)\n  - [Optional Build Features](#optional-build-features)\n  - [Using the Makefile](#using-the-makefile)\n  - [Starting with startx or a login such as slim](#starting-with-startx-or-a-login-such-as-slim)\n- [Theming](#theming)\n  - [With LeftWM-Theme](#with-leftwm-theme)\n  - [Without LeftWM-Theme](#without-leftwm-theme)\n- [Configuring](#configuring)\n  - [Default keys](#default-keys)\n  - [Floating Windows](#floating-windows)\n  - [Workspaces](#workspaces)\n  - [Tags / Desktops](#tags--desktops)\n  - [Layouts](#layouts)\n- [Troubleshooting](#troubleshooting)\n- [Support](#support)\n\n# Why go left\n\nLeftWM is a tiling window manager written in [Rust] that aims to be stable and performant. LeftWM is\n[designed to do one thing and to do that one thing well][unix-philosophy]: _be a window manager_.\nLeftWM follows the following mantra:\n\n> LeftWM is not a compositor.\n> LeftWM is not a lock screen.\n> LeftWM is not a bar. But, there are lots of good bars out there. With themes, picking one is as\n> simple as setting a symlink.\n\nBecause you probably want more than just a black screen, LeftWM is built around the concept of\nthemes. With themes, you can choose between different bars, compositors, backgrounds, colors, docks,\nand whatever else makes you happy.\n\nLeftWM was built from the very beginning to support multiple screens and ultrawide monitors. The\ndefault keybindings support ultrawide monitors and multiple screens.\n\n[Rust]: https://github.com/rust-lang/rust\n[unix-philosophy]: https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well\n\n## One of the core concepts/features of LeftWM is theming\n\nWith LeftWM, there are two types of configuration files:\n\n- **LeftWM Configuration files:** LeftWM configurations are specific to you and don’t change for\n  different themes. These are settings like keybindings, workspace locations, and names of\n  desktops/tags. These settings can be found in `$XDG_CONFIG_HOME/leftwm/config.ron`.\n\n- **Theme Configuration files:** The appearance of your desktop is different. It’s fun to try new\n  looks and feels. It’s fun to tweak and customize the appearance (AKA: [ricing]). It’s fun to share\n  so others can experience your awesome desktop! LeftWM is built around this concept. By pulling all\n  these settings out into themes, you can now easily tweak, switch, and share your experiences. This\n  configuration is spread between `theme.ron` and related files contained within a theme's folder.\n\n**Note:** some example config and themes can be found in the share dir, e.g. `/usr/share/leftwm` oh Arch based disros.\n\n[ricing]: https://www.reddit.com/r/unixporn/comments/3iy3wd/stupid_question_what_is_ricing/\n\n# Dependencies\n\nWhile LeftWM has very few dependencies, this isn't always the case for themes.\nThemes typically require the following to be installed. However, this is up to the\nauthor of the theme and could be different.\n\nList of LeftWM dependencies:\n\n- xorg (runtime, build): specifically libx11, xrandr, xorg-server, libxinerama\n- sh (runtime): any posix-compliant shell for starting up and down files\n- rust (build): >= 1.74.0\n- bash (optional): Most of the themes available use bash, though the scripts maybe converted to any posix-compliant shell\n\nList of common dependencies for themes:\n\n| Dependency<br>(git)      | Ubuntu 20.4.1<br> _sudo apt install {}_ | Arch<br> _sudo pacman -S {}_ | Fedora 33<br> _sudo dnf install {}_ | PKGS                     |\n| ------------------------ | --------------------------------------- | ---------------------------- | ----------------------------------- | ------------------------ |\n| [feh][feh-git]           | feh                                     | feh                          | feh                                 | [feh][feh-pkg]           |\n| [compton][compton-git]   | compton                                 | picom                        | compton                             | [compton][compton-pkg]   |\n| [picom][picom-git]       | manual \\*\\*                             | picom                        | picom                               | [picom][picom-pkg]       |\n| [polybar][polybar-git]   | manual \\*\\*                             | polybar                      | polybar                             | [polybar][polybar-pkg]   |\n| [xmobar][xmobar-git]     | xmobar                                  | xmobar                       | xmobar                              | [xmobar][xmobar-pkg]     |\n| [lemonbar][lemonbar-git] | lemonbar                                | paru -S lemonbar\\*           | manual \\*\\*                         | [lemonbar][lemonbar-pkg] |\n| [conky][conky-git]       | conky                                   | conky                        | conky                               | [conky][conky-pkg]       |\n| [dmenu][dmenu-git]       | dmenu                                   | dmenu                        | dmenu                               | [dmenu][dmenu-pkg]       |\n\n[feh-git]: https://github.com/derf/feh\n[feh-pkg]: https://pkgs.org/search/?q=feh&on=provides\n[compton-git]: https://github.com/chjj/compton\n[compton-pkg]: https://pkgs.org/download/compton\n[picom-git]: https://github.com/yshui/picom\n[picom-pkg]: https://pkgs.org/download/picom\n[polybar-git]: https://github.com/polybar/polybar\n[polybar-pkg]: https://pkgs.org/download/polybar\n[xmobar-git]: https://github.com/jaor/xmobar\n[xmobar-pkg]: https://pkgs.org/download/xmobar\n[lemonbar-git]: https://github.com/LemonBoy/bar\n[lemonbar-pkg]: https://pkgs.org/download/lemonbar\n[conky-git]: https://github.com/brndnmtthws/conky\n[conky-pkg]: https://pkgs.org/download/conky\n[dmenu-git]: https://git.suckless.org/dmenu\n[dmenu-pkg]: https://pkgs.org/download/dmenu\n\n> \\* You can use whichever AUR wrapper you like. See [paru] and [yay].\n> \\*\\* See the git page (link in first column) for how to install these manually\n\n# Installation (with package manager)\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/leftwm.svg)](https://repology.org/project/leftwm/versions)\n\n## Gentoo ([GURU])\n\n```sh\nsudo layman -a guru && sudo emerge --sync\nsudo emerge --ask --verbose x11-wm/leftwm\n```\n\n## Archlinux ([AUR])\n\n```sh\nparu -S leftwm\n```\n\n[paru] is an AUR helper like [yay], but written in [Rust].\n\n## Fedora ([copr])\n\n```sh\nsudo dnf copr enable th3-s4lm0n/leftwm -y && sudo dnf install leftwm\n```\n\n## NetBSD ([Official repositories])\n\n```sh\npkgin install leftwm\n```\n\nor, if you prefer to build it from source\n\n```sh\ncd /usr/pkgsrc/wm/leftwm\nmake install\n```\n\n## Void ([XBPS])\n\n```sh\nsudo xbps-install -S leftwm\n```\n\n## Cargo ([crates.io])\n\n```sh\ncargo install leftwm\n```\n\nIf you install LeftWM with crates.io, you will need to link to the [xsession desktop file](https://github.com/leftwm/leftwm/blob/758bbf837a8556cdc7e09ff2d394f528e7657333/leftwm.desktop) if you want\nto be able to login to LeftWM from a display manager (GDM, SSDM, LightDM, etc.):\n\n```sh\nsudo cp PATH_TO_LEFTWM/leftwm.desktop /usr/share/xsessions\n```\n\nAlso see [the build options](#optional-build-features) for more feature options, especially if you don't use `systemd` or want to use your own hotkey daemon like `sxhkd`.\n\n## OpenBSD ([OpenBSD])\n\nAt the moment LeftWM is not packaged with OpenBSD package manager, but it could be installed via Cargo.\n\n```sh\ncargo install leftwm --no-default-features --features lefthk\n```\n\n`leftwm-config` not yet ported to OpenBSD, as it requires a nightly Rust compiler to build.\nThe default config is generated by LeftWM when it is first started.\n\nTo start LeftWM with `xenodm` add the following to your `~/.xsession`. Make sure to remove or comment-out the `exec` to the previous WM you had there.\n\n```sh\nexec dbus-launch ~/.cargo/bin/leftwm >> ~/.cache/leftwm.log 2>&1\n```\n\n[AUR]: https://aur.archlinux.org/packages/leftwm\n[GURU]: https://gitweb.gentoo.org/repo/proj/guru.git/tree/x11-wm/leftwm\n[copr]: https://copr.fedorainfracloud.org/coprs/atim/leftwm/\n[Official repositories]: https://pkgsrc.se/wm/leftwm/\n[XBPS]: https://voidlinux.org/packages/?arch=x86_64&q=leftwm\n[crates.io]: https://crates.io/crates/leftwm\n[paru]: https://github.com/Morganamilo/paru\n[yay]: https://github.com/Jguer/yay\n[OpenBSD]: https://openbsd.org\n\n# Manual Installation (no package manager)\n\n## Using a graphical login such as LightDM, GDM, LXDM, and others\n\n1. Dependencies: Rust, Cargo\n2. Clone the repository and cd into the directory\n\n   ```bash\n   git clone https://github.com/leftwm/leftwm.git\n   cd leftwm\n   ```\n\n3. Build leftwm\n\n   ```bash\n   cargo build --profile optimized\n   ```\n\n   For more options see the [build options](#optional-build-features) section.\n\n4. Copy leftwm executables to the /usr/bin folder\n\n   ```bash\n   sudo install -s -Dm755 ./target/optimized/leftwm ./target/optimized/leftwm-worker ./target/optimized/lefthk-worker ./target/optimized/leftwm-state ./target/optimized/leftwm-check ./target/optimized/leftwm-command -t /usr/bin\n   ```\n\n5. Copy leftwm.desktop to xsessions folder\n\n   ```bash\n   sudo cp leftwm.desktop /usr/share/xsessions/\n   ```\n\nYou should now see LeftWM in your list of available window managers. At this point, expect only a\nsimple black screen on login. For a more customized look, install a theme.\n\n## Optional Development Installation\n\nIf your goal is to continuously build leftwm and keep up to date with the latest releases, you may\nprefer to symlink the leftwm executables instead of copying them. If you choose to install this\nway, make sure you do not move the build directory as it will break your installation.\n\nNote that if you want to build leftwm with another build profile, you will have to change the\n`--profile <profile-name>` option and the target folder to `target/<profile-name>`.\nCurrently available are `dev`, `release` and `optimized`.\n\n1. Dependencies: Rust, Cargo\n2. Clone the repository and cd into the directory\n\n   ```bash\n   git clone https://github.com/leftwm/leftwm.git\n   cd leftwm\n   ```\n\n3. Build leftwm\n\n   ```bash\n   # With systemd logging (view with 'journalctl -f -t leftwm-worker')\n   cargo build --profile optimized\n   ```\n\n   For more options see [build options below](#optional-build-features).\n\n4. Create the symlinks\n\n   ```bash\n   sudo ln -s \"$(pwd)\"/target/optimized/leftwm /usr/bin/leftwm\n   sudo ln -s \"$(pwd)\"/target/optimized/leftwm-worker /usr/bin/leftwm-worker\n   sudo ln -s \"$(pwd)\"/target/optimized/lefthk-worker /usr/bin/lefthk-worker\n   sudo ln -s \"$(pwd)\"/target/optimized/leftwm-state /usr/bin/leftwm-state\n   sudo ln -s \"$(pwd)\"/target/optimized/leftwm-check /usr/bin/leftwm-check\n   sudo ln -s \"$(pwd)\"/target/optimized/leftwm-command /usr/bin/leftwm-command\n   ```\n\n5. Copy leftwm.desktop to xsessions folder\n\n   ```bash\n   sudo cp leftwm.desktop /usr/share/xsessions/\n   ```\n\nYou should now see LeftWM in your list of available window managers. At this point, expect only a\nsimple black screen on login. For a more customized look, install a theme.\n\n### Rebuilding the development installation\n\n1. Now if you want to get the newest version of leftwm run this command from your build directory:\n\n   ```bash\n   git pull origin main\n   ```\n\n2. Build leftwm\n\n   ```bash\n   # With systemd logging (view with 'journalctl -f -t leftwm-worker')\n   cargo build --profile optimized\n   ```\n\n3. And press the following keybind to reload leftwm\n\n   ```bash\n   Mod + Shift + R\n   ```\n\n### Optional Build Features\n\nSince `LeftWM` is targeting to be more and more modular, there are a few features that can be selected at compile time:\n\nUse `cargo` with the added flags `--no-default-features --features=` and then commaseparated a selection from the following features:\n\n| feature      | info                                                                                                                                                                                           | default |\n| ------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |\n| lefthk       | built-in hotkey daemon, if you build with out make sure you bring your own (e.g. `sxhkd`) to manage any keybinds, be sure you install the `lefthk-worker` binary if you build with this option | ✔      |\n| journald-log | logging to `journald`, depends on `systemd`                                                                                                                                                    | ✔      |\n| sys-log      | use standard system logging                                                                                                                                                                    | ✘       |\n| file-log     | log to `/tmp/leftwm/<log-file-by-datetime-of-launch>`                                                                                                                                          | ✘       |\n| xlib (\\*)    | legacy backend linking to `libX11`                                                                                                                                                             | ✔       |\n| x11rb (\\*)   | rust based backend using [`x11rb`](https://github.com/psychon/x11rb)                                                                                                                           | ✔       |\n\n⚠️ You need to select **at least one** backend feature (\\*) for leftwm to build ⚠️\n\nExample:\n\n```bash\n# With `lefthk` and logging to `sys-log` (`x11rb` backend)\ncargo build --profile optimized --no-default-features --features=x11rb,lefthk,sys-log\n\n# Without `lefthk` and logging to file (`xlib` backend)\ncargo build --profile optimized --no-default-features --features=xlib,file-log\n```\n\nThere are also multiple levels of optimization. These are specified by the cargo profiles, available are `dev`, `release` and `optimized`. The dev and release profiles are default profiles used by cargo, whereas the optimized profile is recomended for production builds.\n\nExample:\n\n```bash\n# With the dev profile\ncargo build --profile dev\n\n# With the release profile\ncargo build --profile release\n```\n\n## Using the Makefile\n\nFor conveniece we also have a Makefile with the following rules:\n\n| make ...       | info                                                                                                                         |\n| -------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| all            | implies `build` and `test`                                                                                                   |\n| test           | runs same tests as CI on github                                                                                              |\n| test-full      | deprecated, do not use                                                                                                       |\n| test-full-nix  | same as `test-full` but additionally compiles the nix package, resulting in a full representation of ci checks               |\n| build          | builds with cargo profile `optimized` by default; read build output on how to change the profile.                            |\n| clean          | clean all buildfiles                                                                                                         |\n| install        | install by copying binaries to `/usr/bin`, also places `leftwm.desktop` file to `/usr/share/xsession` and cleans build files |\n| install-linked | installs by symlinking, copies `leftwm.desktop`, no clean                                                                    |\n| uninstall      | removes `leftwm-*` files from `/usr/bin` and `leftwm.desktop` file                                                           |\n\nNote that for `build`, `install` and `install-linked`, you can specify the build profile to use by adding the `profile=<profile-name>` argument. Currently available are `dev`, `release` and `release-optimized`.\n\n## Starting with startx or a login such as slim\n\nMake sure this is at the end of your `.xinitrc` file:\n\n```bash\n# .xinitrc\nexec dbus-launch leftwm\n```\n\nOn some distros like Archlinux, the environment variables are being setup by sourcing `/etc/X11/xinit/xinitrc.d`, as described in [the Arch docs](https://wiki.archlinux.org/title/Xinit#xinitrc), please make sure you copy the default xinitrc like this:\n\n```bash\ncp /etc/X11/xinit/xinitrc ~/.xinitrc\n```\n\n**Note:** In this case it is not necessary to start leftwm through `dbus-launch` and might even result in some cases in services like `gnome-keyring` to fail. In such an occasion just use:\n\n```bash\n# .xinitrc\nexec leftwm\n```\n\n# Theming\n\nIf you want to see more than a black screen when you login, select a theme:\n\n## With [LeftWM-Theme](https://github.com/leftwm/leftwm-theme)\n\n```bash\nleftwm-theme update\nleftwm-theme install NAME_OF_THEME_YOU_LIKE\nleftwm-theme apply NAME_OF_THEME_YOU_LIKE\n```\n\n## Without [LeftWM-Theme](https://github.com/leftwm/leftwm-theme)\n\nTo set up your own custom theme, you will need to create a directory containing the theme files and then symlink it to `$XDG_CONFIG_HOME/leftwm/themes/current`.\n\nA theme directory contains at least 2 files:\n\n- `up`: a script which is loaded with the theme.\n- `down`: a script which is called when the theme is unloaded.\n\nThese files need to be made executable. Many theme directories also contain:\n\n- `theme.ron`: which contains additional configuration options specific to the theme.\n- `polybar.ini`: a configuration file for the `polybar` application. _You need to have polybar installed!_\n- `picom.conf`: a configuration file for the `picom` compositor. _You need to have picom installed!_\n\nSee the [theme guide][theme-guide] for examples and further information. There is also a\n[community repository][community-repo] for sharing themes.\n\n[community-repo]: https://github.com/leftwm/leftwm-community-themes\n[theme-guide]: /themes\n\n---\n\n# Configuring\n\nYou can configure key bindings, default mod key and many other options:\n\n## With [LeftWM-Config](https://github.com/leftwm/leftwm-config)\n\n```bash\nleftwm-config -n # Generate new config\nleftwm-config    # Open configuration file in $EDITOR\nleftwm-config -t # Edit configuration via TUI (Beta)\n```\n\n## Manually editing the configuration file\n\n```bash\n$XDG_CONFIG_HOME/leftwm/config.ron\n```\n\n---\n\n**Note:** The configuration file is automatically generated when leftwm or leftwm-check is run for the first time.\n\n---\n\n## Default keys\n\n| Keybinding           | Description                                                            |\n| -------------------- | ---------------------------------------------------------------------- |\n| Mod + (1-9)          | Switch to a desktop/tag                                                |\n| Mod + Shift + (1-9)  | Move the focused window to desktop/tag                                 |\n| Mod + W              | Switch the desktops for each screen. Desktops [1][2] changes to [2][1] |\n| Mod + Shift + W      | Move window to the other desktop                                       |\n| Mod + (⬆️⬇️)         | Focus on the different windows in the current workspace                |\n| Mod + Shift + (⬆️⬇️) | Move the different windows in the current workspace                    |\n| Mod + Enter          | Move selected window to the top of the stack in the current workspace  |\n| Mod + Ctrl + (⬆️⬇️)  | Switch between different layouts                                       |\n| Mod + Shift + (⬅➡) | Switch between different workspaces                                    |\n| Mod + Shift + Enter  | Open a terminal                                                        |\n| Mod + Ctrl + L       | Lock the screen                                                        |\n| Mod + Shift + X      | Exit LeftWM                                                            |\n| Mod + Shift + Q      | Close the current window                                               |\n| Mod + Shift + R      | Reload LeftWM and its config                                           |\n| Mod + p              | Use dmenu to start application                                         |\n\n**Note:** Although we encourage you to use [Alacritty](https://github.com/alacritty/alacritty),\nLeftWM will set your default terminal to the first terminal it finds in this list (in the order\npresented):\n\n1. Alacritty\n2. Termite\n3. Kitty\n4. URXVT\n5. RXVT\n6. ST\n7. ROXTerm\n8. Eterm\n9. XTerm\n10. Terminator\n11. Terminology\n12. Gnome Terminal\n13. XFCE4 Terminal\n14. Konsole\n15. UXTerm\n16. Guake\n\n## Floating Windows\n\nYou can optionally switch between tiling or floating mode for any window.\n\n| Keybinding              | Description                             |\n| ----------------------- | --------------------------------------- |\n| Mod + MouseDrag         | Switch a tiled window to floating mode  |\n| Mod + RightMouseDrag    | Resize a window                         |\n| Drag window onto a tile | Switch a floating window to tiling mode |\n| Mod + Shift + (1-9)     | Switch a floating window to tiling mode |\n\n## Workspaces\n\nWorkspaces are how you view tags (desktops). A workspace is an area on a screen or most likely the whole screen. in these areas you can view a given tag.\n\nDefault: `workspaces: []` (one workspace per screen)\n\nWorkspaces are only applied if the specified output is the name of a connected screen. The output is also used as identifier of the workspace.\n\nYou can get the output names by running xrandr in your terminal.\n\nExample (two workspaces on a single ultrawide):\n\n```rust\nworkspaces: [\n\t( output: \"HDMI-1\", y: 0, x: 0, height: 1440, width: 1720 ),\n\t( output: \"HDMI-1\", y: 0, x: 1720, height: 1440, width: 1720 ),\n],\n```\n\n## Tags / Desktops\n\nThe default tags are 1-9. They can be renamed in the config file by setting the\nlist of tags.\n\nHere is an example config changing the list of available tags. NOTE: tag navigation (Mod + #)\nis based on the index of the tag in the list (starting with index 1).\n\n```rust\ntags: [\"Web\", \"Code\", \"Shell\", \"Music\", \"Connect\"],\n```\n\n## Layouts\n\nLeftwm supports user definable layouts. The relevant entries in the configuration file are the `layouts` and `layout_definitions` lists.\n\nOnly the layouts whose name appears in `layouts` will be accessible when switching layouts through the commands `NextLayout`, `PreviousLayout` and `SetLayout`. Each layout appearing in the `layouts` list must have a corresponding definition in `layout_definitions`.\n\nExample:\n\n```rust\nlayouts: [\n\t\"Monocle\",\n\t\"MainAndDeck\",\n\t\"MainAndVertStack\",\n],\nlayout_definitions: [\n\t(name: \"Monocle\", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: None, stack: (flip: None, rotate: North, split: None), second_stack: None)),\n\t(name: \"MainAndDeck\", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: None), stack: (flip: None, rotate: North, split: None), second_stack: None)),\n\t(name: \"MainAndVertStack\", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Horizontal), second_stack: None)),\n]\n```\n\n[More detailed configuration information can be found in the Wiki.][config-wiki]\n\n[config-wiki]: https://github.com/leftwm/leftwm/wiki/Config\n\n## LeftWM is [EWMH](https://en.wikipedia.org/wiki/Extended_Window_Manager_Hints) compliant\n\nThe default layouts are [all of the kinds defined here](https://github.com/leftwm/leftwm-layouts/blob/main/leftwm-layouts/src/layouts/defaults.rs).\n\n## Troubleshooting\n\n| Issue                              | Description                                                                                                             |                        Solution                        |\n| ---------------------------------- | ----------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------: |\n| LeftWM not listed by login manager | You likely need to add the xsessions file to the right folder.                                                          | See [installation](#installation-with-package-manager) |\n| No `config.ron` file exists        | LeftWM does not always ship with a `config.ron`. You will need to execute LeftWM at least once for one to be generated. |           Try the following: `leftwm-worker`           |\n| `config.ron` is not being parsed   | LeftWM ships with a binary called leftwm-check. It might not be installed by the AUR.                                   |           Try the following: `leftwm-check`            |\n| Keybinding doesn't work            | It's likely you need to specify a value or have a typo.                                                                 |                        See Wiki                        |\n\n## Support\n\nLeftWM now has a [Discord](https://discord.gg/c9rB3wDnVs) channel for faster help.\n"
        },
        {
          "name": "display-servers",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 2.4404296875,
          "content": "{\n  \"nodes\": {\n    \"crane\": {\n      \"locked\": {\n        \"lastModified\": 1736101677,\n        \"narHash\": \"sha256-iKOPq86AOWCohuzxwFy/MtC8PcSVGnrxBOvxpjpzrAY=\",\n        \"owner\": \"ipetkov\",\n        \"repo\": \"crane\",\n        \"rev\": \"61ba163d85e5adeddc7b3a69bb174034965965b2\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"ipetkov\",\n        \"repo\": \"crane\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-parts\": {\n      \"inputs\": {\n        \"nixpkgs-lib\": \"nixpkgs-lib\"\n      },\n      \"locked\": {\n        \"lastModified\": 1736143030,\n        \"narHash\": \"sha256-+hu54pAoLDEZT9pjHlqL9DNzWz0NbUn8NEAHP7PQPzU=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"rev\": \"b905f6fc23a9051a6e1b741e1438dbfc0634c6de\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1736012469,\n        \"narHash\": \"sha256-/qlNWm/IEVVH7GfgAIyP6EsVZI6zjAx1cV5zNyrs+rI=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"8f3e1f807051e32d8c95cd12b9b421623850a34d\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"ref\": \"nixos-unstable\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"nixpkgs-lib\": {\n      \"locked\": {\n        \"lastModified\": 1735774519,\n        \"narHash\": \"sha256-CewEm1o2eVAnoqb6Ml+Qi9Gg/EfNAxbRx1lANGVyoLI=\",\n        \"type\": \"tarball\",\n        \"url\": \"https://github.com/NixOS/nixpkgs/archive/e9b51731911566bbf7e4895475a87fe06961de0b.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://github.com/NixOS/nixpkgs/archive/e9b51731911566bbf7e4895475a87fe06961de0b.tar.gz\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"crane\": \"crane\",\n        \"flake-parts\": \"flake-parts\",\n        \"nixpkgs\": \"nixpkgs\",\n        \"rust-overlay\": \"rust-overlay\"\n      }\n    },\n    \"rust-overlay\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1736216977,\n        \"narHash\": \"sha256-EMueGrzBpryM8mgOyoyJ7DdNRRk09ug1ggcLLp0WrCQ=\",\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"rev\": \"bbe7e4e7a70d235db4bbdcabbf8a2f6671881dd7\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"oxalica\",\n        \"repo\": \"rust-overlay\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 3.3486328125,
          "content": "{\n  inputs = {\n    nixpkgs.url = \"nixpkgs/nixos-unstable\";\n    flake-parts.url = \"github:hercules-ci/flake-parts\";\n    rust-overlay = {\n      url = \"github:oxalica/rust-overlay\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n    crane = {\n      url = \"github:ipetkov/crane\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n  };\n\n  outputs = inputs@{ self, flake-parts, rust-overlay, crane, nixpkgs, ... }:\n    let\n      GIT_HASH = self.shortRev or self.dirtyShortRev;\n    in\n    flake-parts.lib.mkFlake { inherit inputs; } {\n      systems = [\n        \"x86_64-linux\"\n        \"aarch64-linux\"\n      ];\n\n      perSystem = { pkgs, system, ... }:\n        let\n          pkgs = import nixpkgs {\n            inherit system;\n            overlays = [ (import rust-overlay) ];\n          };\n\n          commonArgs = {\n            src = craneLib.cleanCargoSource (craneLib.path ./.);\n\n            buildInputs = with pkgs; [\n              mold\n              clang\n              xorg.libX11\n              xorg.libXrandr\n              xorg.libXinerama\n            ];\n\n            inherit GIT_HASH;\n          } // (craneLib.crateNameFromCargoToml { cargoToml = ./leftwm/Cargo.toml; });\n\n          craneLib = (crane.mkLib pkgs).overrideToolchain pkgs.rust-bin.stable.latest.minimal;\n\n          cargoArtifacts = craneLib.buildDepsOnly (commonArgs // {\n            panme = \"leftwm-deps\";\n          });\n\n          leftwm = craneLib.buildPackage (commonArgs // {\n            inherit cargoArtifacts;\n\n            postFixup = ''\n              for p in $out/bin/left*; do\n                patchelf --set-rpath \"${pkgs.lib.makeLibraryPath commonArgs.buildInputs}\" $p\n              done\n            '';\n\n            NIX_CFLAGS_LINK = \"-fuse-ld=mold\";\n          });\n        in\n        {\n\n          # `nix build`\n          packages = {\n            inherit leftwm;\n            default = leftwm;\n          };\n\n          # `nix develop`\n          devShells.default = pkgs.mkShell\n            {\n              NIX_CFLAGS_LINK = \"-fuse-ld=mold\";\n\n              buildInputs = with pkgs;[\n                mold\n                clang\n                pkg-config\n                systemd\n              ] ++ commonArgs.buildInputs;\n              nativeBuildInputs = with pkgs; [\n                gnumake\n                (rust-bin.stable.latest.default.override {\n                  extensions = [\n                    \"cargo\"\n                    \"clippy\"\n                    \"rust-src\"\n                    \"rust-analyzer\"\n                    \"rustc\"\n                    \"rustfmt\"\n                  ];\n                })\n                virt-viewer\n              ];\n\n              shellHook = ''\n                source ./.nixos-vm/vm.sh\n              '';\n\n              inherit GIT_HASH;\n            };\n        };\n\n      flake = {\n        formatter.x86_64-linux = nixpkgs.legacyPackages.x86_64-linux.nixpkgs-fmt;\n        overlays.default = final: prev: {\n          leftwm = self.packages.${final.system}.leftwm;\n        };\n\n        # nixos development vm\n        nixosConfigurations.leftwm = nixpkgs.lib.nixosSystem\n          {\n            system = \"x86_64-linux\";\n            modules = [\n              {\n                nixpkgs.overlays = [\n                  self.overlays.default\n                ];\n              }\n              \"${nixpkgs}/nixos/modules/virtualisation/qemu-vm.nix\"\n              ./.nixos-vm/configuration.nix\n            ];\n          };\n      };\n    };\n}\n"
        },
        {
          "name": "leftwm-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "leftwm-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "leftwm-watchdog",
          "type": "tree",
          "content": null
        },
        {
          "name": "leftwm.desktop",
          "type": "blob",
          "size": 0.1328125,
          "content": "[Desktop Entry]\nEncoding=UTF-8\nName=LeftWM\nComment=A window manager for the adventurer\nExec=leftwm\nType=Application\nDesktopNames=LeftWM\n"
        },
        {
          "name": "leftwm",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[toolchain]\nchannel = \"stable\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}