{
  "metadata": {
    "timestamp": 1736709083906,
    "page": 221,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trifectatechfoundation/sudo-rs",
      "stars": 2966,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.291015625,
          "content": "# Generated by Cargo\n# will have compiled files and executables\n/target/\n/build/\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n# Code coverage in lcov format\n/lcov.info\n\n# Generated man pages\n/docs/man/*.1\n/docs/man/*.1.gz\n/docs/man/*.5\n/docs/man/*.5.gz\n/docs/man/*.8\n/docs/man/*.8.gz\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.1103515625,
          "content": "# Changelog\n\n## [0.2.4-dev] - 2025-mm-dd\n\n### Changed\n- Portability: sudo-rs now works on FreeBSD!\n\n### Fixed\n- Bug in syslog writer could cause sudo to hang (#856)\n\n## [0.2.3] - 2024-07-11\n\n### Changed\n- Portability: sudo-rs now is compatible with s390x-unknown-linux-gnu\n- Removed unneeded code & fix hints given by newer Rust version\n\n### Fixed\n- `visudo` would not properly truncate a `sudoers` file\n- high CPU load when child process did not terminate after closure of a terminal\n\n## [0.2.2] - 2024-02-02\n\n### Changed\n- Several changes to the code to improve type safety\n- Improved error message when a PTY cannot be opened\n- Improved portability of the PAM bindings\n- su: improved parsing of su command line options\n- Add path information to parse errors originating from included files\n\n### Fixed\n- Fixed a panic with large messages written to the syslog\n- sudo: respect `--login` regardless of the presence of `--chdir`\n\n## [0.2.1] - 2023-09-21\n\n### Changed\n- Session records/timestamps are now stored in files with uids instead of\n  usernames, fixing a security bug (CVE-2023-42456)\n- `visudo` will now resolve `EDITOR` via `PATH`\n- Input/output errors while writing text to the terminal no longer cause sudo to\n  exit immediately\n- Switched several internal API calls from libc to Rust's std library\n- The `%h` escape sequence in sudoers includes directives is not supported in\n  sudo-rs, this now gives a better diagnostic and no longer tries to include the\n  file\n- Our PAM integration was hardened against allocation failures\n- An attempt was made to harden against rowhammer type attacks\n- Release builds no longer include debugging symbols\n\n### Fixed\n- Fixed an invalid parsing when an escaped null byte was present in the sudoers\n  file\n- Replaced informal error message in `visudo` with a proper error message\n\n\n## [0.2.0] - 2023-08-29\n\n### Added\n- `visudo` can set/fix file permissions using the `--perms` CLI flag\n- `visudo` can set/fix the file owner using the `--owner` CLI flag\n- Read `env_editor` from sudoers file for visudo\n- Add basic support for `--list` in sudo\n\n### Changed\n- `visudo` now uses a random filename for the temporary file you are editing\n- `su` now runs with a PTY by default\n- Included files with relative paths in the sudoers file are imported relative\n  from the sudoers file\n- `sudo` now checks if ownership and setuid bits have been set correctly on\n  its binary\n- When syslog messages are too large they will be split between multiple\n  messages to prevent message truncation\n- We now accept a wider range of dependencies\n- Our MSRV (minimum supported rust version) has been set at 1.70.0\n\n### Fixed\n- Set arg0 to the non-resolved filename when running a command, preventing\n  issues with symlinks when commands rely on link filenames\n\n## [0.2.0-dev.20230711] - 2023-07-11\n\n### Added\n- Add initial `visudo` implementation\n- Add support for `~` in `--chdir`\n- Log commands that will be executed in the auth syslog\n- Add a manpage for the `sudo` command\n\n### Changed\n- The SUDO_RS_IS_UNSTABLE environment variable is no longer required\n- Sudo-rs will now read `/etc/sudoers-rs` or `/etc/sudoers` if the former is\n  not available. We no longer read `/etc/sudoers.test`\n- Removed signal-hook and signal-hook-registry dependencies\n- Improved error handling when `--chdir` is passed but not allowed\n- Properly handle `SIGWINCH` when running commands with a PTY\n\n### Fixed\n- Only call ttyname and isatty on character devices\n- Fixed a bug in syslog FFI\n\n## [0.2.0-dev.20230703] - 2023-07-03\n\n### Added\n- Add `timestamp_timeout` support in sudoers file\n- Add ability to disable `use_pty` in the sudoers file\n\n### Changed\n- Set the TTY name for PAM sessions on a TTY\n- Set the requesting user for PAM sessions\n- Simplified some error messages when a command could not be executed\n- Reveal less about what caused a command not to be executable\n- Continued rework of the pty exec\n\n### Fixed\n- Fixed exit codes for `su`\n- Fixed environment filtering for `su`\n- Fixed `SHELL` handling for `su`\n\n## [0.2.0-dev.20230627] - 2023-06-27\n\n### Added\n- Add `passwd_tries` support in sudoers file\n- Add developer logs (only enabled with the `dev` feature)\n\n### Changed\n- Only use a PTY to spawn the process if a TTY is available\n- Continued rework of the pty exec\n- Aliasing is now implemented similarly to the original sudo\n- You can no longer define an `ALL` alias in the sudoers file\n- Use canonicalized paths for the executed binaries\n- Simplified CLI help to only display supported actions\n\n[0.2.3]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.2...v0.2.3\n[0.2.2]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.1...v0.2.2\n[0.2.1]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.0...v0.2.1\n[0.2.0]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.0-dev.20230711...v0.2.0\n[0.2.0-dev.20230711]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.0-dev.20230703...v0.2.0-dev.20230711\n[0.2.0-dev.20230703]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.2.0-dev.20230627...v0.2.0-dev.20230703\n[0.2.0-dev.20230627]: https://github.com/trifectatechfoundation/sudo-rs/compare/v0.1.0-dev.20230620...v0.2.0-dev.20230627\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# Code of Conduct\n\nWe abide by the [Rust Code of Conduct][coc] and ask that you do as well.\n\n[coc]: https://www.rust-lang.org/policies/code-of-conduct\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.9599609375,
          "content": "# Contributing to sudo-rs\n\nWe welcome contributions to building a memory safe sudo / su implementation; this document lists\nsome ways in which you can help.\n\nThis project is about building a \"drop-in replacement\" for sudo and su. That does not mean we want\nto copy *all* of the behavior of original sudo or other su implementations.\n\nWhenever we add a feature, sudo becomes more complex, and unforeseen interactions due to complexity\ncan result in security issues. Also, sudo has some features for backwards compatibility only---it makes no\nsense for us to re-implement a feature that by its nature won't be very well-used in practice. Other features\nhave a very specific use-case in mind (for example, matching command lines with [regular expressions](https://xkcd.com/1171/)),\nwhich are very complex to use and would require the inclusion of a third-party library.\n\nI.e. every time we add a feature, we have to weigh its benefits to the cost of adding the feature.\nFor this, the sudo-rs Core Team has adopted a few criteria for inclusions of features in sudo / su:\n\n1. Security is more important than functionality.\n2. Simplicity is preferred over complexity.\n3. A feature to be added should actually *solve* a problem.\n4. Features must support a common and reasonable use case.\n5. Dependencies must be kept to an absolute minimum.\n\n## Feature requests\n\nThe easiest way to contribute is to request a feature that we currently do not have; use\nthe issue tracker for this and explain the situation. Things that are currently possible\nwith original sudo and that pass the above-mentioned criteria are likely to be accepted.\n\n## Testing sudo\n\nYou can install and run sudo on your personal system, or any other non-mission critical\nmachine. We recommend installing it in `/usr/local/bin` so you have original sudo as a backup.\n\nAlthough sudo-rs is thoroughly tested for every change we make, a real-world test like this\ncan uncover subtle problems in technical parts, or uncover common sudo use cases that we\nignored so far.\n\n## Small contributions\n\nYou can also go through our code --- if you see any small mistakes or have suggestions\nplease create an issue for them.  If it is really a minor issue, like a typo or formatting\nissue, you can immediately create a pull request.\n\n## Security auditing\n\nOne way you can help is by looking at the security of our code and proposing fixes in it.\nMore eyeballs spot more problems.\n\nIf you find a security problem that can be used to used to compromise a system,\ndo follow our [security policy] and report a vulnerability instead of using the\nissue tracker.\n\n[security policy]: https://github.com/trifectatechfoundation/sudo-rs/security/policy\n\n## Working on a bigger issue\n\nIf you want to pick up an issue in the issue tracker, please reach out to the\nsudo-rs team first. The easiest way to do this is to comment on the issue. If you want\nto work on something that is not on the issue tracker, do make an issue *before* you\nbegin to make sure your work will not be conflicting with ours.\n\n\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 0.333984375,
          "content": "Copyright (c) 2022-2024 Trifecta Tech Foundation and contributors\n\nExcept as otherwise noted (below and/or in individual files), sudo-rs is\nlicensed under the Apache License, Version 2.0 <LICENSE-APACHE> or\n<http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n<LICENSE-MIT> or <http://opensource.org/licenses/MIT>, at your option.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 1.3720703125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"sudo-rs\"\nversion = \"0.2.4-dev\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"log\",\n \"pretty_assertions\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.7685546875,
          "content": "[package]\nname = \"sudo-rs\"\ndescription = \"A memory safe implementation of sudo and su.\"\nversion = \"0.2.4-dev\"\nlicense = \"Apache-2.0 OR MIT\"\nedition = \"2021\"\nrepository = \"https://github.com/trifectatechfoundation/sudo-rs\"\nhomepage = \"https://github.com/trifectatechfoundation/sudo-rs\"\npublish = true\ncategories = [\"command-line-interface\"]\n\nrust-version = \"1.70\"\n\ndefault-run = \"sudo\"\n\n[lib]\npath = \"src/lib.rs\"\n\n[[bin]]\nname = \"sudo\"\npath = \"bin/sudo.rs\"\n\n[[bin]]\nname = \"su\"\npath = \"bin/su.rs\"\n\n[[bin]]\nname = \"visudo\"\npath = \"bin/visudo.rs\"\n\n[dependencies]\nlibc = \"0.2.149\"\nglob = \"0.3.0\"\nlog = { version = \"0.4.11\", features = [\"std\"] }\n\n[dev-dependencies]\npretty_assertions = \"1.2.1\"\n\n[features]\ndefault = []\ndev = []\n\n[profile.release]\nstrip = \"symbols\"\nlto = true\nopt-level = \"s\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.064453125,
          "content": "Copyright (c) 2022-2024 Trifecta Tech Foundation\nand contributors\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.158203125,
          "content": "PAM_SRC_DIR = src/pam\n\nBINDGEN_CMD = bindgen --allowlist-function '^pam_.*$$' --allowlist-var '^PAM_.*$$' --opaque-type pam_handle_t --blocklist-function pam_vsyslog --blocklist-function pam_vprompt --blocklist-function pam_vinfo --blocklist-function pam_verror --blocklist-type '.*va_list.*' --ctypes-prefix libc --no-layout-tests --sort-semantically\n\nPAM_VARIANT = $$(./get-pam-variant.bash)\n\n.PHONY: all clean pam-sys pam-sys-diff\n\npam-sys-diff:\n\t@$(BINDGEN_CMD) $(PAM_SRC_DIR)/wrapper.h | \\\n\t\tsed 's/rust-bindgen [0-9]*\\.[0-9]*\\.[0-9]*/&, minified by cargo-minify/' | \\\n\t\tdiff --color=auto $(PAM_SRC_DIR)/sys_$(PAM_VARIANT).rs - \\\n\t\t|| (echo run \\'make -B pam-sys\\' to apply these changes && false)\n\t@echo $(PAM_SRC_DIR)/sys_$(PAM_VARIANT).rs does not need to be re-generated\n\n# use 'make pam-sys' to re-generate the sys.rs file for your local platform\npam-sys:\n\t$(BINDGEN_CMD) $(PAM_SRC_DIR)/wrapper.h --output $(PAM_SRC_DIR)/sys_$(PAM_VARIANT).rs\n\tcargo minify --apply --allow-dirty\n\tsed -i.bak 's/rust-bindgen [0-9]*\\.[0-9]*\\.[0-9]*/&, minified by cargo-minify/' $(PAM_SRC_DIR)/sys_$(PAM_VARIANT).rs\n\trm $(PAM_SRC_DIR)/sys_$(PAM_VARIANT).rs.bak\n\nclean:\n\trm $(PAM_SRC_DIR)/sys.rs\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.50390625,
          "content": "# sudo-rs\n\nA safety oriented and memory safe implementation of sudo and su written in Rust.\n\n## Status of this project\n\nSudo-rs is being developed further; features you might expect from original sudo\nmay still be unimplemented or not planned. If there is an important one you need,\nplease request it using the issue tracker. If you encounter any usability bugs,\nalso please report them on the [issue tracker](https://github.com/trifectatechfoundation/sudo-rs/issues).\nSuspected vulnerabilities can be reported on our [security page](https://github.com/trifectatechfoundation/sudo-rs/security).\n\nAn [audit of sudo-rs version 0.2.0](docs/audit/audit-report-sudo-rs.pdf) has been performed in August 2023.\nThe findings from that audit are addressed in the current version.\n\nSudo-rs currently is targeted for Linux-based operating systems only; Linux kernel 5.9\nor newer is necessary to run sudo-rs.\n\n## Installing sudo-rs\n\nThe recommended way to start using `sudo-rs` is via the package manager of your Linux distribution.\n\n### Arch Linux\n\nArch Linux can be installed via AUR [sudo-rs](https://aur.archlinux.org/packages/sudo-rs) or [sudo-rs-git](https://aur.archlinux.org/packages/sudo-rs-git).\n\nNote: [AUR usage help](https://wiki.archlinux.org/title/AUR_helpers)\n\n```sh\nyay -Syu sudo-rs\n```\n\n### Debian/Ubuntu\nIf you are running Debian 13 (trixie) or later, or Ubuntu 24.04 (Noble Numbat) or later, you can use:\n```sh\nsudo apt-get install sudo-rs\n```\nThis will offer the functionality using the commands `su-rs` and `sudo-rs`. If you want to invoke sudo-rs\nvia the usual commands `sudo` and `su` instead, prepend `/usr/lib/cargo/bin` to your current `$PATH` variable.\n\n### Fedora\n\nIf you are running Fedora 38 or later, you can use:\n```sh\nsudo dnf install sudo-rs\n```\nThis will offer the functionality using the commands `su-rs` and `sudo-rs`.\n\n### Installing our pre-compiled x86-64 binaries\n\nYou can also switch to sudo-rs manually by using our pre-compiled tarballs.\nWe currently only offer these for x86-64 systems.\n\nWe recommend installing sudo-rs and su-s in your `/usr/local` hierarchy using the commands:\n```sh\nsudo tar -C /usr/local -xvf sudo-VERSION.tar.gz\n```\nand for su-rs:\n```sh\nsudo tar -C /usr/local -xvf su-VERSION.tar.gz\n```\nThis will install sudo-rs and su-rs in `/usr/local/bin` using the usual commands `sudo` and `su`.\n\n### Building from source\n\nSudo-rs is written in Rust. The minimum required Rust version is 1.70. If your\nLinux distribution does not package that version (or a later one), you can always\ninstall the most recent version through [rustup]. You also need the C development\nfiles for PAM (`libpam0g-dev` on Debian, `pam-devel` on Fedora).\n\nOn Ubuntu or Debian-based systems, use the following command to install the PAM development library:\n```\nsudo apt-get install libpam0g-dev\n```\n\nOn Fedora, CentOS and other Red Hat-based systems, you can use the following command:\n```\nsudo yum install pam-devel\n```\n\nWith dependencies installed, building sudo-rs is a simple matter of:\n```\ncargo build --release\n```\n\nThis produces a binary `target/release/sudo`. However, this binary must have\nthe setuid flag set and must be owned by the root user in order to provide any\nuseful functionality. Consult your operating system manual for details.\nOn operating systems other than Linux we also require an environment variable\n`SUDO_RS_IS_UNSTABLE` to be set, and it must have the value\n`I accept that my system may break unexpectedly`. This because we are in an\nearly stage of supporting non-Linux OSes. If you are unsure about how to set\nthis up, then the current version of sudo is not intended for you.\n\nSudo-rs needs the sudoers configuration file. The sudoers configuration file\nwill be loaded from `/etc/sudoers-rs` if that file exists, otherwise the\noriginal `/etc/sudoers` location will be used. You must make sure that a valid\nsudoers configuration exists at that location. For an explanation of the\nsudoers syntax you can look at the\n[original sudo man page](https://www.sudo.ws/docs/man/sudoers.man/).\n\n[rustup]: https://rustup.rs/\n\n## Differences from original sudo\n\nsudo-rs supports less functionality than sudo. Some of this is by design. In\nmost cases you will get a clear error if you try something that is not\nsupported (e.g. use a configuration flag or command line option that is not\nimplemented).\n\nExceptions to the above, with respect to your `/etc/sudoers` configuration:\n\n* `use_pty` is enabled by default, but can be disabled.\n* `env_reset` is ignored --- this is always enabled.\n* `visiblepw` is ignored --- this is always disabled.\n* `verifypw` is currently ignored; a password is always necessary for `sudo -v`.\n* `mail_badpass`, `always_set_home`, `always_query_group_plugin` and\n  `match_group_by_gid` are not applicable to our implementation, but ignored for\n  compatibility reasons.\n\nSome other notable restrictions to be aware of:\n\n* Some functionality is not yet supported; in particular `sudoedit` and preventing shell\n  escapes using `NOEXEC` and `NOINTERCEPT`.\n* Per-user, per-command, per-host `Defaults` sudoers entries for finer-grained control\n  are not (yet) supported.\n* Sudo-rs always uses PAM for authentication at this time, your system must be\n  set up for PAM. Sudo-rs will use the `sudo` service configuration. This also means\n  that resource limits, umasks, etc have to be configured via PAM and not through\n  the sudoers file.\n* sudo-rs will not include the sendmail support of original sudo.\n* The sudoers file must be valid UTF-8.\n* To prevent a common configuration mistake in the sudoers file, wildcards\n  are not supported in *argument positions* for a command.\n  E.g., `%sudoers ALL = /sbin/fsck*` will allow `sudo fsck` and `sudo fsck_exfat` as expected,\n  but `%sudoers ALL = /bin/rm *.txt` will not allow an operator to run `sudo rm README.txt`,\n  nor `sudo rm -rf /home .txt`, as with original sudo.\n\nIf you find a common use case for original sudo missing, please create a feature\nrequest for it in our issue tracker.\n\n## Aim of the project\n\nOur current target is to build a drop-in replacement for all common use cases of\nsudo. For the sudoers config syntax this means that we support the default\nconfiguration files of common Linux distributions. Our implementation should support\nall commonly used command line options from the original sudo implementation.\n\nSome parts of the original sudo are explicitly not in scope. Sudo has a large\nand rich history and some of the features available in the original sudo\nimplementation are largely unused or only available for legacy platforms. In\norder to determine which features make it we both consider whether the feature\nis relevant for modern systems, and whether it will receive at very least\ndecent usage. Finally, of course, a feature should not compromise the safety of\nthe whole program.\n\nOur `su` implementation is made using the building blocks we created for our\nsudo implementation.  It will be suitable replacement for the `su` distributed\nby [util-linux].\n\n[util-linux]: https://github.com/util-linux/util-linux\n\n## Future work\n\nWhile our initial target is a drop-in replacement for most basic use cases of\nsudo, our work may evolve beyond that target. We are also looking into\nalternative ways to configure sudo without the sudoers config file syntax and to\nextract parts of our work in usable crates for other people.\n\n## Sponsors\n\nThe initial development of sudo-rs was started and funded by the [Internet Security Research Group](https://www.abetterinternet.org/) as part of the [Prossimo project](https://www.memorysafety.org/).\n\nAn independent security audit of sudo-rs was made possible by the [NLNet Foundation](https://nlnet.nl/).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.568359375,
          "content": "# Security policy\n**Do not report security vulnerabilities through public GitHub issues.**\n\nInstead, you can report them using [our security page](https://github.com/trifectatechfoundation/sudo-rs/security). Alternatively, you can also send them\nby email to security+sudo@tweedegolf.com. You can encrypt your email using GnuPG if you want. Use the GPG key with fingerprint\n[C2E4 CAC4 B122 25DE 1C3B  B1C9 289D 0820 03D0 1E95](https://keys.openpgp.org/search?q=C2E4CAC4B12225DE1C3BB1C9289D082003D01E95).\n\nInclude as much of the following information:\n\n * Type of issue (e.g. buffer overflow, privilege escalation, etc).\n * The location of the affected source code (tag/branch/commit or direct URL).\n * Any special configuration required to reproduce the issue.\n * The Linux distribution affected.\n * Step-by-step instructions to reproduce the issue.\n * Impact of the issue, including how an attacker might exploit the issue.\n\nIf you have found a bug that also exists in the original sudo (which, although unlikely, means it is a very serious issue), you **must**\nalso follow the steps at https://www.sudo.ws/security/policy/\n\n## Preferred Languages\nWe prefer to receive reports in English. If necessary, we also understand Spanish, German and Dutch.\n\n## Disclosure Policy\nLike original sudo, we adhere to the principle of [Coordinated Vulnerability Disclosure](https://vuls.cert.org/confluence/display/CVD/Executive+Summary).\n\n# Security Advisories\nSecurity advisories will be published [on GitHub](https://github.com/trifectatechfoundation/sudo-rs/security/advisories) and possibly through other channels.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 1.2509765625,
          "content": "use std::path::Path;\n\n// Return the first existing path given a list of paths as string slices\nfn get_first_path(paths: &[&'static str]) -> Option<&'static str> {\n    paths.iter().find(|p| Path::new(p).exists()).copied()\n}\n\nfn main() {\n    let path_zoneinfo: &str = get_first_path(&[\n        \"/usr/share/zoneinfo\",\n        \"/usr/share/lib/zoneinfo\",\n        \"/usr/lib/zoneinfo\",\n        \"/usr/lib/zoneinfo\",\n    ])\n    .unwrap_or(\"\");\n\n    let path_maildir: &str =\n        get_first_path(&[\"/var/mail\", \"/var/spool/mail\", \"/usr/spool/mail\"]).unwrap_or(\"/var/mail\");\n\n    // TODO: use _PATH_STDPATH and _PATH_DEFPATH_ROOT from paths.h\n    println!(\"cargo:rustc-env=SUDO_PATH_DEFAULT=/usr/bin:/bin:/usr/sbin:/sbin\");\n    println!(\n        \"cargo:rustc-env=SU_PATH_DEFAULT_ROOT=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n    );\n    println!(\n        \"cargo:rustc-env=SU_PATH_DEFAULT=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\"\n    );\n\n    println!(\"cargo:rustc-env=PATH_MAILDIR={path_maildir}\");\n    println!(\"cargo:rustc-env=PATH_ZONEINFO={path_zoneinfo}\");\n    println!(\"cargo:rerun-if-changed=build.rs\");\n\n    println!(\"cargo:rustc-link-lib=pam\");\n\n    println!(\"cargo:rustc-env=DEFAULT_PATH=\\\"/bin/:/usr/bin/:/usr/local/bin:/sbin/:/usr/sbin\\\"\")\n}\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.013671875,
          "content": "msrv = \"1.70\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "get-pam-variant.bash",
          "type": "blob",
          "size": 0.2109375,
          "content": "#!/usr/bin/env bash\n\n# FIXME read headers to find the actually used variant\ncase $(uname) in\nLinux)\n    echo linuxpam\n    ;;\nFreeBSD)\n    echo openpam\n    ;;\n*)\n    echo \"Unsupported platform\"\n    exit 1\n    ;;\nesac\n"
        },
        {
          "name": "make-lcov-info.bash",
          "type": "blob",
          "size": 0.6884765625,
          "content": "#!/bin/bash\n\nset -euo pipefail\n\nrustup component add llvm-tools\n\nllvm_profdata=$(find \"$(rustc --print sysroot)\" -name llvm-profdata)\nprofdata=\"$SUDO_TEST_PROFRAW_DIR\"/sudo-rs.profdata\n$llvm_profdata merge \\\n\t-sparse \\\n\t\"$SUDO_TEST_PROFRAW_DIR\"/**/*.profraw \\\n\t-o \"$profdata\"\n\nbinary=\"$SUDO_TEST_PROFRAW_DIR\"/sudo-rs\ndockerid=$(docker create sudo-test-rs)\ndocker cp \"$dockerid\":/usr/bin/sudo \"$binary\"\ndocker rm \"$dockerid\"\n\nllvm_cov=\"$(dirname \"$llvm_profdata\")\"/llvm-cov\n$llvm_cov export \\\n\t-format=lcov \\\n\t--ignore-filename-regex='/usr/local/cargo/registry' \\\n\t--ignore-filename-regex='/rustc' \\\n\t--instr-profile=\"$profdata\" \\\n\t--object \"$binary\" \\\n\t-path-equivalence=/usr/src/sudo,\"$(pwd)\" >lcov.info\n"
        },
        {
          "name": "proofs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}