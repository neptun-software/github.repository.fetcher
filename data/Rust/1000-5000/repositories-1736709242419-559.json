{
  "metadata": {
    "timestamp": 1736709242419,
    "page": 559,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "algesten/ureq",
      "stars": 1777,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "target\nrls\n.idea/\n.vscode/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.193359375,
          "content": "# Unreleased\n\n# 3.0.0-rc5\n\n  * `TlsConfig::unversioned_rustls_crypto_provider()` (#931)\n  * Feature `rustls-no-provider` to compile without ring (#931)\n  * Fix CONNECT proxy Host header (#936)\n  * Re-enable CONNECT proxy support (#932)\n  * Body::content_length (#927)\n  * Handle Authorization: Basic from URI (#923)\n  * Remove many uses of Box::new() from Connector chain (#919)\n\n# 3.0.0-rc4\n\n  * Default to `TooManyRedirects` error (#916)\n  * Add `ConfigBuilder::max_redirects_will_error()` (#916)\n  * Add new `SendBody::into_reader()` (#914)\n  * Fix completely broken PEM parsing (#912)\n  * Improve ergonomics for `AutoHeaderValue` (#896)\n\n# 3.0.0-rc3\n\n  * Re-export ureq_proto::ArrayVec (#891)\n  * Expose typestate variables, but #[doc(hidden)] (#889)\n  * Clarify versioning and MSRV policy (#887)\n  * Get last used uri via `ResponseExt::get_uri()` (#884)\n  * Expose more things for 3rd party Transport impls (#886)\n  * Make accessor fn for `Config` and `TlsConfig` (#886)\n  * Move `Transport` and `Resolver` traits to `unversioned` (#881)\n  * Upgrade deps (#885)\n  * MSRV 1.71.1 to follow rustls (#885)\n  * Fix bug in chunked overhead calculation (#880)\n  * Make it possible to disable all automatic headers (#876)\n  * Rename `hoot` -> `ureq_proto`(#872)\n  * Fix `disable_verification` for TLS (#871)\n  * `vendored` feature flag to get vendored native-tls (#866)\n  * Fix incorrect handling of expect-100 (#867)\n\n# 3.0.0-rc2\n  * Remove pub-field config structs in favor of builders (#848)\n  * BodyBuilder to create a response Body for test/middleware (#847)\n  * RequestBuilder::send_empty() convenience fn (#846)\n  * Rename BodyWithConfig::into_reader -> reader (#845)\n  * Escape hatch to send body for any method (#857)\n  * Reintrodice RequestBuilder::query (#843)\n  * Reintroduce RequestBuilder::query_pairs (#856)\n  * Reintroduce ResponseBuilder::send_form helper (#859)\n  * (internal) Use HeaderName for non-sensitive headers (#855)\n  * Fix broken build with rustls (#832)\n  * Reduce dependency count, platform-verifier feature (#833, #818)\n\n# 3.0.0-rc1\n  * Ground up rewrite based on the http crate API.\n\n# 2.12.1\n\n  * Do not use multi-version deps (>=x.x.x) (#907)\n\n# 2.12.0\n\n  * Bump MSRV 1.67 -> 1.71 because rustls will soon adopt it (#905)\n  * Unpin rustls dep (>=0.23.19) (#905)\n\n# 2.11.0\n\n  * Fixes for changes to cargo-deny (#882)\n  * Pin rustls dep on 0.23.19 to keep MSRV 1.67 (#878)\n  * Bump MSRV 1.63 -> 1.67 due to time crate (#878)\n  * Re-export rustls (#813)\n\n# 2.10.1\n  * default `ureq` Rustls tls config updated to avoid panic for applications\n    that activate the default Rustls `aws-lc-rs` feature without setting\n    a process-wide crypto provider. `ureq` will now use `*ring*` in this\n    circumstance instead of panicking.\n\n# 2.10.0\n  * Bump MSRV 1.61 -> 1.63 due to rustls (#764)\n  * Update deps (only patch versions in Cargo.lock) (#763)\n  * Refork frewsxcv/rust-chunked-transfer to fix MIT/Apache2.0 license (#761)\n  * Enable http-crate feature for docs (#755)\n  * Update Rustls from 0.22 to 0.23 - this may be a breaking change if your\n    application depends on Rustls 0.22 (e.g. to provide a custom\n    `rustls::ClientConfig` to `ureq`). See the [Rustls 0.23.0][rustls-0.23.0]\n    changelog for a list of breaking API changes (#753)\n  * Rustls dep to default to ring backend. If your project uses the\n    default `ureq` TLS config, or constructs its own `rustls::ClientConfig`\n    with `rustls::ClientConfig::builder()` you must ensure the Rustls\n    `aws-lc-rs` feature is not activated, or set the process default\n    cryptography provider before constructing any configs. See the Rustls\n    [CryptoProvider][CryptoProvider] docs for more information (#753)\n  * Remove direct dep rustls-webpki (#752)\n  * Fix doc Rustls does now support IP address certificates (#759)(#753)\n\n[rustls-0.23.0]: https://github.com/rustls/rustls/releases/tag/v%2F0.23.0\n[CryptoProvider]: https://docs.rs/rustls/latest/rustls/crypto/struct.CryptoProvider.html#using-the-per-process-default-cryptoprovider\n\n# 2.9.7\n\n  * Update deps (`base64` 0.22, `rustls` to 0.22.4 (#747, #748)\n  * Parse URL after middleware to enable changing it (#745)\n  * Tidy up code and fix compilation (#742, 743)\n\n# 2.9.6\n\n## Fixed\n\n  * `hootbin` is optional dep. Tests must be run with feature `testdeps` (#729)\n  * Exclude script files from cargo package (#728)\n\n# 2.9.5\n\n## Fixed\n\n  * Update deps (`cookie` 0.18, `cookie_store` 0.21, unpin `url`). (#722)\n\n# 2.9.4\n\n## Fixed\n\n  * MSRV 1.61 with CI tests\n\n# 2.9.3\n\n## Fixed\n\n  * docs.rs docs\n\n# 2.9.2\n\n## Added\n\n  * Replace dependency on httpbin.org for tests/doc-tests. (#703)\n\n## Fixed\n\n  * Remove Header struct that never should have been exported. (#696)\n  * Update deps (rustls 0.22) (#690)\n\n# 2.9.1\n\n## Fixed\n\n  * Unbreak feature `http-interop`. This feature is version locked to http crate 0.2\n  * New feature `http-crate`. This feature is for http crate 1.0\n  * New feature `proxy-from-env` to detect proxy settings for global Agent (ureq::get).\n\n# 2.9.0\n\n## Fixed\n  * Broken rustls dep (introduced new function in patch version) (#677)\n  * Doc and test fixes (#670, #673, #674)\n\n## Added\n  * Upgraded http dep to 1.0\n  * http_interop to not require utf-8 headers (#672)\n  * http_interop implement conversion for `http::request::Parts` (#669)\n\n# 2.8.0\n\n## Fixed\n  * Fix regression in IPv6 handling (#635)\n  * Read proxy response to \\r\\n\\r\\n (#620)\n\n## Added\n  * Auto-detect proxy from env vars (turned off by default) (#649)\n  * Conversion ureq::Response -> http::Response<Vec<u8>> (#638)\n  * cargo-deny CI action to disallow copy-left and duplicate deps (#661)\n\n# 2.7.1\n\n## Fixed\n * Updated serde_json dependency constraint to be >=1.0.97 (#630)\n\n# 2.7.0\n\n## Fixed\n * Pass User-Agent when connecting to proxy (#597)\n * Proxy: Use CONNECT for HTTPS requests, but not HTTP requests (#587)\n * Cookie headers are now cleared on redirect (#608)\n * HTTP/1.0 responses with Content-Length no longer block until server closes\n   the socket. (#625)\n\n## Added\n * Conversions to and from http::Response and http::request::Builder (#591)\n * Updated to rustls 0.21 and rustls-webpki, which add support for IP address certificates (#601)\n * Response::local_addr (#605)\n\n# 2.6.2\n\n## Fixed\n * Non-empty connection pools were never dropped (#583)\n\n# 2.6.1\n\n## Fixed\n * gzip: examine Content-Length header before removing (#578)\n\n# 2.6.0\n\n## Added\n * Response::remote_addr() (#489)\n * Request::query_pairs() - make query params from an Iterator of pairs (#519)\n\n## Fixed\n * Gzip responses with chunked encoding now work with connection pooling (#560)\n * Don't panic when rustls-native-certs errors (#564)\n * Responses with zero-length body now work with connection pooling (#565)\n\n# 2.5.0\n * Add tcp no_delay option (#465)\n * Rework public TLS traits\n * Warn if requests aren't sent (#490)\n * Fixes for returning stream to pool (#509)\n * Avoid extra syscalls when content is buffered (#508)\n * Remove dep on sync_wrapper (#514, #528)\n * Error instead of panic on large deadlines (#517)\n * Make ReadWrite trait simpler (used in bespoke TLS impls) (#530)\n * Buffer short response bodies (#531)\n * Update cookie/cookie_store dep\n\n# 2.4.0\n\n * Enable `gzip` feature by default (#455)\n * `gzip` and `brotli` feature flags to enable decompression (#453, #421)\n * Middleware function on agent (#448)\n * Agent option to preserve `Authorization` header on redirects (#445)\n * Deprecate re-exported serde types (#446)\n * Widen type of `send_json` to `impl Serializable` (#446)\n * `native-tls` feature provides an alternative TLS backend (#449, #391)\n\n# 2.3.2\n * Re-introduce the `ureq::patch` and `agent::patch` calls.\n * Fix regression in 2.3.x for feature native-certs (#441)\n\n# 2.3.1\n * Don't panic when given an invalid DNS name (#436).\n * Update to rustls-native-certs v0.6 (#432).\n\n# 2.3.0\n * Upgrade to rustls 0.20 (#427).\n * Make test mocks of Response more accurate by removing newline (#423).\n * Redact sensitive headers when logging prelude (#414).\n\n# 2.2.0\n * Update to latest dependencies\n * Add SOCKS4 support (#410).\n * Downgrade logging on info level to debug (#409).\n * Bugfix: Clear content-length header on redirect (#394, #395).\n\n# 2.1.1\n * Bugfix: don't reuse conns with bytes pending from server (#372). This\n   reduces Transport errors when using an Agent for connection pooling.\n\n# 2.1.0\n * Bugfix: allow status lines without a reason phrase (#316)\n * Example: \"cureq\" to easier make ad-hoc command line tests (#330)\n * Override timeout per Request (#335)\n * Bugfix: handle non-utf8 status and headers (#347) and better errors (#329)\n * Request inspection (method, url, etc) (#310, #350)\n * Bugfix: stop percent encoding cookies (#353)\n * Enforce cookie RFC naming/value rules (#353)\n * Bugfix: reduce error struct size (#356)\n\n# 2.0.2\n * Bugfix: Apply deadline across redirects. (#313)\n * OrAnyStatus::or_any_status ergonomic helper\n * Allow header lines to end with only LF (#321)\n\n# 2.0.1\n * Fix handling of 308 redirects (port from 1.5.4 branch).\n * Return UnexpectedEof instead of InvalidData on short responses. (#293)\n * Implement std::error::Error for error::Transport. (#299)\n\n# 2.0.0\n * Methods that formerly returned Response now return Result<Response, Error>.\n   You'll need to change all instances of `.call()` to `.call()?` or handle\n   errors using a `match` statement.\n * Non-2xx responses are considered Error by default. See [Error documentation]\n   for details on how to get Response bodies for non-2xx.\n * Rewrite Error type. It's now an enum of two types of error: Status and\n   Transport. Status errors (i.e. non-2xx) can be readily turned into a\n   Response using match statements.\n * Errors now include the source error (e.g. errors from DNS or I/O) when\n   appropriate, as well as the URL that caused an error.\n * The \"synthetic error\" concept is removed.\n * Move more configuration to Agent. Timeouts, TLS config, and proxy config\n   now require building an Agent.\n * Create AgentBuilder to separate the process of building an agent from using\n   the resulting agent. Headers can be set on an AgentBuilder, not the\n   resulting Agent.\n * Agent is cheaply cloneable with an internal Arc. This makes it easy to\n   share a single agent throughout your program.\n * There is now a default timeout_connect of 30 seconds. Read and write\n   timeouts continue to be unset by default.\n * Add ureq::request_url and Agent::request_url, to send requests with\n   already-parsed URLs.\n * Remove native_tls support.\n * Remove convenience methods `options(url)`, `trace(url)`, and `patch(url)`.\n   To send requests with those verbs use `request(method, url)`.\n * Remove Request::build. This was a workaround because some of Request's\n   methods took `&mut self` instead of `mut self`, and is no longer needed.\n   You can simply delete any calls to `Request::build`.\n * Remove Agent::set_cookie.\n * Remove Header from the public API. The type wasn't used by any public\n   methods.\n * Remove basic auth support. The API was incomplete. We may add back something\n   better in the future.\n * Remove into_json_deserialize. Now into_json handles both serde_json::Value\n   and other types that implement serde::Deserialize. If you were using\n   serde_json before, you will probably have to explicitly annotate a type,\n   like: `let v: serde_json::Value = response.into_json();`.\n * Rewrite README and top-level documentation.\n\n[Error documentation]: https://docs.rs/ureq/2.0.0-rc4/ureq/enum.Error.html\n\n# 2.0.0-rc4\n\n * Remove error_on_non_2xx. (#272)\n * Do more validation on status line. (#266)\n * (internal) Add history to response objects (#275)\n\n# 2.0.0-rc3\n\n * Refactor Error to use an enum for easier extraction of status code errors.\n * (Internal) Use BufRead::read_line when reading headers.\n\n# 2.0.0-rc2\n * These changes are mostly already listed under 2.0.0.\n * Remove the \"synthetic error\" concept. Methods that formerly returned\n   Response now return Result<Response, Error>.\n * Rewrite Error type. Instead of an enum, it's now a struct with an\n   ErrorKind. This allows us to store the source error when appropriate,\n   as well as the URL that caused an error.\n * Move more configuration to Agent. Timeouts, TLS config, and proxy config\n   now require building an Agent.\n * Create AgentBuilder to separate the process of building an agent from using\n   the resulting agent. Headers can be set on an AgentBuilder, not the\n   resulting Agent.\n * Agent is cheaply cloneable with an internal Arc. This makes it easy to\n   share a single agent throughout your program.\n * There is now a default timeout_connect of 30 seconds. Read and write\n   timeouts continue to be unset by default.\n * Add ureq::request_url and Agent::request_url, to send requests with\n   already-parsed URLs.\n * Remove native_tls support.\n * Remove convenience methods `options(url)`, `trace(url)`, and `patch(url)`.\n   To send requests with those verbs use `request(method, url)`.\n * Remove Request::build. This was a workaround because some of Request's\n   methods took `&mut self` instead of `mut self`, and is no longer needed.\n   You can simply delete any calls to `Request::build`.\n * Remove Agent::set_cookie.\n * Remove Header from the public API. The type wasn't used by any public\n   methods.\n * Remove basic auth support. The API was incomplete. We may add back something\n   better in the future.\n * Remove into_json_deserialize. Now into_json handles both serde_json::Value\n   and other types that implement serde::Deserialize. If you were using\n   serde_json before, you will probably have to explicitly annotate a type,\n   like: `let v: serde_json::Value = response.into_json();`.\n * Rewrite README and top-level documentation.\n\n# 1.5.2\n\n * Remove 'static constraint on Request.send(), allowing a wider variety of\n   types to be passed. Also eliminate some copying. (#205).\n * Allow turning a Response into an Error (#214).\n * Update env_logger to 0.8.1 (#195).\n * Remove convenience method for CONNECT verb (#177).\n * Fix bugs in handling of timeout_read (#197 and #198).\n\n# 1.5.1\n\n * Use cookie_store crate for correct cookie handling (#169).\n * Fix bug in picking wrong host for redirects introduced in 1.5.0 (#180).\n * Allow proxy settings on Agent (#178).\n\n# 1.5.0\n\n * Add pluggable name resolution. Users can now override the IP addresses for\n   hostnames of their choice (#148).\n * bugfix: Don't re-pool streams on drop. This would occur if the user called\n   `response.into_reader()` and dropped the resulting `Read` before reading all\n   the way to EOF. The result would be a BadStatus error on the next request to\n   the same hostname. This only affected users using an explicit Agent (#160).\n * Automatically set Transfer-Encoding: chunked when using `send` (#86).\n * `into_reader()` now returns `impl Read + Send` instead of `impl Read` (#156).\n * Add support for log crate (#170).\n * Retry broken connections in more cases (should reduce BadStatus errors; #168).\n\n# 1.4.1\n\n * Use buffer to avoid byte-by-byte parsing result in multiple syscalls.\n * Allow pooling multiple connections per host.\n * Put version in user agent \"ureq/1.4.1\".\n\n# 1.4.0\n\n  * Propagate WouldBlock in io:Error for Response::to_json.\n  * Merge multiple cookies into one header to be spec compliant.\n  * Allow setting TLSConnector for native-tls.\n  * Remove brackets against TLS lib when IPv6 addr is used as hostname.\n  * Include proxy in connection pool keys.\n  * Stop assuming localhost for URLs without host part.\n  * Error if body length is less than content-length.\n  * Validate header names.\n\n# 1.3.0\n\n  * Changelog start\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6220703125,
          "content": "## License\n\nCopyright (c) 2019 Martin Algesten\n\nLicensed under either of\n\n * Apache License, Version 2.0\n   ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license\n   ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\ndual licensed under the Apache License, Version 2.0, and the MIT license, without\nany additional terms or conditions. See LICENSE-APACHE and LICENSE-MIT for\ndetails.\n\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 43.9423828125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"alloc-no-stdlib\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3\"\n\n[[package]]\nname = \"alloc-stdlib\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece\"\ndependencies = [\n \"alloc-no-stdlib\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"assert_no_alloc\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55ca83137a482d61d916ceb1eba52a684f98004f18e0cafea230fe5579c178a3\"\n\n[[package]]\nname = \"auto-args\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cad5106c05cafcfa7c527da125517972f1e167b3c0ab62a44a4edbc8e6b14e6\"\ndependencies = [\n \"auto-args-derive\",\n]\n\n[[package]]\nname = \"auto-args-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d4cbc684c4d4c80b06cd1009b7b78fe5a910187d1daeda1cc04319207b5894f\"\ndependencies = [\n \"proc-macro2 0.4.30\",\n \"quote 0.6.13\",\n \"syn 0.15.44\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"aws-lc-rs\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdd82dba44d209fddb11c190e0a94b78651f95299598e472215667417a03ff1d\"\ndependencies = [\n \"aws-lc-sys\",\n \"mirai-annotations\",\n \"paste\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-sys\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df7a4168111d7eb622a31b214057b8509c0a7e1794f44c546d742330dc793972\"\ndependencies = [\n \"bindgen\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"libc\",\n \"paste\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b\"\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271383c67ccabffb7381723dea0672a673f292304fcb45c01cc648c7a8d58088\"\ndependencies = [\n \"bitflags\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn 2.0.94\",\n \"which\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"brotli-decompressor\"\nversion = \"4.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a45bd2e4095a8b518033b128020dd4a55aab1c0a381ba4404a472630f4bc362\"\ndependencies = [\n \"alloc-no-stdlib\",\n \"alloc-stdlib\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d6dbb628b8f8555f86d0323c2eb39e3ec81901f4b83e091db8a6a76d316a333\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cesu8\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c\"\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.51\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb1e43aa7fd152b1f968787f7dbcdeb306d1867ff373c69955211876c053f91a\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd\"\ndependencies = [\n \"bytes\",\n \"memchr\",\n]\n\n[[package]]\nname = \"cookie\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ddef33a339a91ea89fb53151bd0a4689cfce27055c291dfa69945475d22c747\"\ndependencies = [\n \"percent-encoding\",\n \"time\",\n \"version_check\",\n]\n\n[[package]]\nname = \"cookie_store\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2eac901828f88a5241ee0600950ab981148a18f2f756900ffba1b125ca6a3ef9\"\ndependencies = [\n \"cookie\",\n \"document-features\",\n \"idna\",\n \"indexmap\",\n \"log\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"time\",\n \"url\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"der\"\nversion = \"0.7.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55bf8e7b65898637379c1b74eb1551107c8294ed26d855ceb9fd1a09cfc9bc0\"\ndependencies = [\n \"pem-rfc7468\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f16ca2af56261c99fba8bac40a10251ce8188205a4c448fbb745a2e4daa76fea\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"jni\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c6df18c2e3db7e453d3c6ac5b3e9d5182664d28788126d39b91f2d1e22b017ec\"\ndependencies = [\n \"cesu8\",\n \"combine\",\n \"jni-sys\",\n \"log\",\n \"thiserror\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"jni-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mirai-annotations\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9be0862c1b3f26a88803c4a49de6889c10e608b3ee9344e6ef5b45fb37ad3d1\"\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.4.1+3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"faa4eac4138c62414b5622d1b31c5c304f34b406b013c079c2bbc652fdd6678c\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pem-rfc7468\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412\"\ndependencies = [\n \"base64ct\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64d1ec885c64d0457d564db4ec299b2dae3f9c02808b8ad9c3a089c591b18033\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"0.4.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1\"\ndependencies = [\n \"proc-macro2 0.4.30\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5065c3f250cbd332cd894be57c40fa52387247659b14a2d6041d121547903b1b\"\ndependencies = [\n \"aws-lc-rs\",\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5bfb394eeed242e909609f56089eecfe5fda225042e8b171791b9c95f5931e5\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2bf47e6ff922db3825eb750c4e2ff784c6ff8fb9e13046ef6a1d1c5401b0b37\"\n\n[[package]]\nname = \"rustls-platform-verifier\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afbb878bdfdf63a336a5e63561b1835e7a8c91524f51621db870169eac84b490\"\ndependencies = [\n \"core-foundation\",\n \"core-foundation-sys\",\n \"jni\",\n \"log\",\n \"once_cell\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-platform-verifier-android\",\n \"rustls-webpki\",\n \"security-framework\",\n \"security-framework-sys\",\n \"webpki-roots\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rustls-platform-verifier-android\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f87165f0995f63a9fbeea62b64d10b4d9d8e78ec6d7d51fb2125fda7bb36788f\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"aws-lc-rs\",\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"num-bigint\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1863fd3768cd83c56a7f60faa4dc0d403f1b6df0a38c3c25f44b7894e45370d5\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.134\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socks\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0c3dbbd9ae980613c6dd8e28a9407b50509d3803b57624d5dfe8315218cd58b\"\ndependencies = [\n \"byteorder\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"0.15.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ca4b3b69a77cbe1ffc9e198781b7acb0c7365a883670e8f1c1bc66fba79a5c5\"\ndependencies = [\n \"proc-macro2 0.4.30\",\n \"quote 0.6.13\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.94\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"987bc0be1cdea8b10216bd06e2ca407d40b9543468fafd3ddfb02f36e77f71f3\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"ureq\"\nversion = \"3.0.0-rc5\"\ndependencies = [\n \"assert_no_alloc\",\n \"auto-args\",\n \"base64\",\n \"brotli-decompressor\",\n \"cc\",\n \"cookie_store\",\n \"der\",\n \"encoding_rs\",\n \"env_logger\",\n \"flate2\",\n \"log\",\n \"native-tls\",\n \"once_cell\",\n \"percent-encoding\",\n \"rustls\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"rustls-platform-verifier\",\n \"serde\",\n \"serde_json\",\n \"socks\",\n \"ureq-proto\",\n \"url\",\n \"utf-8\",\n \"webpki-root-certs\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"ureq-proto\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a27729fd2c15426f48992a911ce31bd1f29c1cd0898c2c86b410d24f51c99eb3\"\ndependencies = [\n \"base64\",\n \"http\",\n \"httparse\",\n \"log\",\n \"url\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf-8\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9\"\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"webpki-root-certs\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cd5da49bdf1f30054cfe0b8ce2958b8fbeb67c4d82c8967a598af481bef255c\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d642ff16b7e79272ae451b7322067cdc17cadf68c23264be9d94a32319efe7e\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2 1.0.92\",\n \"quote 1.0.38\",\n \"syn 2.0.94\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 4.1787109375,
          "content": "[package]\nname = \"ureq\"\nversion = \"3.0.0-rc5\"\nauthors = [\"Martin Algesten <martin@algesten.se>\", \"Jacob Hoffman-Andrews <ureq@hoffman-andrews.com>\"]\ndescription = \"Simple, safe HTTP client\"\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/algesten/ureq\"\nreadme = \"README.md\"\nkeywords = [\"web\", \"request\", \"https\", \"http\", \"client\"]\ncategories = [\"web-programming::http-client\"]\nedition = \"2018\"\nexclude = [\"/cargo_deny.sh\", \"/deny.toml\", \"/test.sh\"]\n\n# MSRV\nrust-version = \"1.71.1\"\n\n[features]\ndefault = [\"rustls\", \"gzip\", \"json\"]\n\n######## SUPPORTED FEATURES\n\nrustls = [\"rustls-no-provider\", \"_ring\"]\nnative-tls = [\"dep:native-tls\", \"dep:der\", \"_tls\", \"dep:webpki-root-certs\"]\nplatform-verifier = [\"dep:rustls-platform-verifier\"]\nsocks-proxy = [\"dep:socks\"]\ncookies = [\"dep:cookie_store\", \"_url\"]\ngzip = [\"dep:flate2\"]\nbrotli = [\"dep:brotli-decompressor\"]\ncharset = [\"dep:encoding_rs\"]\njson = [\"dep:serde\", \"dep:serde_json\", \"cookie_store?/serde_json\"]\n\n######## UNSTABLE FEATURES.\n# Might be removed or changed in a minor version.\n\n# Rustls CryptoProviders are not picked up from feature flags alone. They must be\n# configured on Agent. This feature flag makes it possible to compile ureq with\n# rustls, but without ring.\nrustls-no-provider = [\"dep:rustls\", \"_tls\", \"dep:webpki-roots\", \"_rustls\"]\n\n# Supported as long as native-tls supports this.\nvendored = [\"native-tls?/vendored\"]\n\n######## INTERNAL FEATURES. DO NOT USE.\n\n# Ring has a higher chance of compiling cleanly without additional developer environment.\n# Supported as long as rustls supports this.\n_ring = [\"rustls?/ring\"]\n_url = [\"dep:url\"]\n_tls = [\"dep:rustls-pemfile\", \"dep:rustls-pki-types\"]\n_test = []\n_rustls = []\n_doc = [\"rustls?/aws-lc-rs\"]\n\n[package.metadata.docs.rs]\nfeatures = [\"rustls\", \"platform-verifier\", \"native-tls\", \"socks-proxy\", \"cookies\", \"gzip\", \"brotli\", \"charset\", \"json\", \"_test\", \"_doc\"]\n\n[dependencies]\nbase64 = \"0.22.1\"\nureq-proto = \"0.2.3\"\n# ureq-proto = { path = \"../ureq-proto\" }\nlog = \"0.4.22\"\nonce_cell = \"1.19.0\"\nutf-8 = \"0.7.6\"\npercent-encoding = \"2.3.1\"\n\n# These are used regardless of TLS implementation.\nrustls-pemfile = { version = \"2.1.2\", optional = true, default-features = false, features = [\"std\"] }\nrustls-pki-types = { version = \"1.7.0\", optional = true, default-features = false, features = [\"std\"] }\n# rustls-platform-verifier held back due to 0.4.0 causing a double\n# depedendency on windows-sys (0.59.0, 0.52.0) and security-framework (2.11.1, 3.1.0)\nrustls-platform-verifier = { version = \"0.3.4\", optional = true, default-features = false }\nwebpki-roots = { version = \"0.26.3\", optional = true, default-features = false }\nwebpki-root-certs = { version = \"0.26.4\", optional = true, default-features = false }\n\nrustls = { version = \"0.23.18\", optional = true, default-features = false, features = [\"logging\", \"std\", \"tls12\"] }\nnative-tls = { version = \"0.2.12\", optional = true, default-features = false }\nder = { version = \"0.7.9\", optional = true, default-features = false, features = [\"pem\", \"std\"] }\n\nsocks = { version = \"0.3.4\", optional = true }\n\n# cookie_store uses Url, while http-crate has its own Uri.\n# Keep url crate in lockstep with cookie_store.\ncookie_store = { version = \"0.21.1\", optional = true, default-features = false, features = [\"preserve_order\"] }\n# ureq-proto forces url=2.5.4. This optional dep documents the situation in cookie_store.\nurl = { version = \"2.3.1\", optional = true, default-features = false }\n\nflate2 = { version = \"1.0.30\", optional = true }\nbrotli-decompressor = { version = \"4.0.1\", optional = true }\nencoding_rs = { version = \"0.8.34\", optional = true }\n\nserde = { version = \"1.0.204\", optional = true, default-features = false, features = [\"std\"] }\nserde_json = { version = \"1.0.120\", optional = true, default-features = false, features = [\"std\"] }\n\n[build-dependencies]\ncc = \"1.0.106\"\n\n[dev-dependencies]\nenv_logger = \"0.11.6\"\nauto-args = \"0.3.0\"\nserde = { version = \"1.0.204\", features = [\"std\", \"derive\"] }\nassert_no_alloc = \"1.1.2\"\n# Enable aws-lc-rs for tests so we can demonstrate using ureq without compiling ring.\nrustls = { version = \"0.23\", features = [\"aws-lc-rs\"] }\n\n[[example]]\nname = \"cureq\"\nrequired-features = [\"rustls\", \"native-tls\", \"socks-proxy\", \"cookies\", \"gzip\", \"brotli\", \"charset\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2019 Martin Algesten\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MIGRATE-2-to-3.md",
          "type": "blob",
          "size": 1.607421875,
          "content": "# Changes ureq 2.x -> 3.x\n\nThis is not an exhaustive list of changes. Most tweaks to the API are clear by looking\nat the docs. If anything is unclear, please open a PR and we can clarify further.\n\n## HTTP Crate\n\nIn 2.x ureq implemented it's own `Request` and `Response` structs. In 3.x, we\ndrop our own impl in favor of the [http crate]. The http crate presents a unified HTTP\nAPI and can be found as a dependency of a number of big [http-related crates] in the\nRust ecosystem. The idea is that presenting a well-known API towards users of ureq\nwill make it easier to use.\n\n* .set -> .header\n\n```\n// ureq2.x\nureq::get(\"https://httpbin.org/get\").set(\"foo\", \"bar\").call();\n// ureq3.x\nureq::get(\"https://httpbin.org/get\").header(\"foo\", \"bar\").call();\n```\n\n## Re-exported crates must be semver 1.x (stable)\n\nureq2.x re-exported a number of semver 0.x crates and thus suffered from that breaking\nchanges in those crates technically were breaking changes in ureq (and thus ought to increase\nmajor version). In ureq 3.x we will strive to re-export as few crates as possible.\n\n* No re-exported tls config\n* No re-exported cookie crates\n* No re-exported json macro\n\nInstead we made our own TLS config and Cookie API, and drop the json macro.\n\n\n\n## No retry idempotent\n\nureq 2.x did an automatic retry of idempotent methods (GET, HEAD). This was considered\nconfusing, so 3.x has no built-in retries.\n\n## No send body charset\n\nFor now, ureq 3.x can't change the charset of a send body. It can however still do that\nfor the response body.\n\n[http crate]: https://crates.io/crates/http\n[http-related crates]: https://crates.io/crates/http/reverse_dependencies\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.42578125,
          "content": "[comment]: # (README.md is autogenerated from src/lib.rs by `cargo readme > README.md`)\n\n# ureq\n\n<div align=\"center\">\n <!-- Version -->\n <a href=\"https://crates.io/crates/ureq\">\n   <img src=\"https://img.shields.io/crates/v/ureq.svg?style=flat-square\"\n   alt=\"Crates.io version\" />\n </a>\n <!-- Docs -->\n <a href=\"https://docs.rs/ureq\">\n   <img src=\"https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square\"\n     alt=\"docs.rs docs\" />\n </a>\n <!-- Downloads -->\n <a href=\"https://crates.io/crates/ureq\">\n   <img src=\"https://img.shields.io/crates/d/ureq.svg?style=flat-square\"\n     alt=\"Crates.io downloads\" />\n </a>\n</div>\n\nA simple, safe HTTP client.\n\nUreq's first priority is being easy for you to use. It's great for\nanyone who wants a low-overhead HTTP client that just gets the job done. Works\nvery well with HTTP APIs. Its features include cookies, JSON, HTTP proxies,\nHTTPS, charset decoding, and is based on the API of the `http` crate.\n\nUreq is in pure Rust for safety and ease of understanding. It avoids using\n`unsafe` directly. It uses blocking I/O instead of async I/O, because that keeps\nthe API simple and keeps dependencies to a minimum. For TLS, ureq uses\nrustls or native-tls.\n\nSee the [changelog] for details of recent releases.\n\n[changelog]: https://github.com/algesten/ureq/blob/main/CHANGELOG.md\n\n## Usage\n\nIn its simplest form, ureq looks like this:\n\n```rust\nlet body: String = ureq::get(\"http://example.com\")\n    .header(\"Example-Header\", \"header value\")\n    .call()?\n    .body_mut()\n    .read_to_string()?;\n```\n\nFor more involved tasks, you'll want to create an [`Agent`]. An Agent\nholds a connection pool for reuse, and a cookie store if you use the\n**cookies** feature. An Agent can be cheaply cloned due to internal\n[`Arc`] and all clones of an Agent share state among each other. Creating\nan Agent also allows setting options like the TLS configuration.\n\n```rust\nuse ureq::Agent;\nuse std::time::Duration;\n\nlet mut config = Agent::config_builder()\n    .timeout_global(Some(Duration::from_secs(5)))\n    .build();\n\nlet agent: Agent = config.into();\n\nlet body: String = agent.get(\"http://example.com/page\")\n    .call()?\n    .body_mut()\n    .read_to_string()?;\n\n// Reuses the connection from previous request.\nlet response: String = agent.put(\"http://example.com/upload\")\n    .header(\"Authorization\", \"example-token\")\n    .send(\"some body data\")?\n    .body_mut()\n    .read_to_string()?;\n```\n\n### JSON\n\nUreq supports sending and receiving json, if you enable the **json** feature:\n\n```rust\nuse serde::{Serialize, Deserialize};\n\n#[derive(Serialize)]\nstruct MySendBody {\n   thing: String,\n}\n\n#[derive(Deserialize)]\nstruct MyRecvBody {\n   other: String,\n}\n\nlet send_body = MySendBody { thing: \"yo\".to_string() };\n\n// Requires the `json` feature enabled.\nlet recv_body = ureq::post(\"http://example.com/post/ingest\")\n    .header(\"X-My-Header\", \"Secret\")\n    .send_json(&send_body)?\n    .body_mut()\n    .read_json::<MyRecvBody>()?;\n```\n\n### Error handling\n\nureq returns errors via `Result<T, ureq::Error>`. That includes I/O errors,\nprotocol errors. By default, also HTTP status code errors (when the\nserver responded 4xx or 5xx) results in [`Error`].\n\nThis behavior can be turned off via [`http_status_as_error()`]\n\n```rust\nuse ureq::Error;\n\nmatch ureq::get(\"http://mypage.example.com/\").call() {\n    Ok(response) => { /* it worked */},\n    Err(Error::StatusCode(code)) => {\n        /* the server returned an unexpected status\n           code (such as 400, 500 etc) */\n    }\n    Err(_) => { /* some kind of io/transport/etc error */ }\n}\n```\n\n## Features\n\nTo enable a minimal dependency tree, some features are off by default.\nYou can control them when including ureq as a dependency.\n\n`ureq = { version = \"3\", features = [\"socks-proxy\", \"charset\"] }`\n\nThe default enabled features are: **rustls**, **gzip** and **json**.\n\n* **rustls** enables the rustls TLS implementation. This is the default for the the crate level\n  convenience calls (`ureq::get` etc). It currently uses `ring` as the TLS provider.\n* **native-tls** enables the native tls backend for TLS. Due to the risk of diamond dependencies\n  accidentally switching on an unwanted TLS implementation, `native-tls` is never picked up as\n  a default or used by the crate level convenience calls (`ureq::get` etc) – it must be configured\n  on the agent\n* **platform-verifier** enables verifying the server certificates using a method native to the\n  platform ureq is executing on. See [rustls-platform-verifier] crate\n* **socks-proxy** enables proxy config using the `socks4://`, `socks4a://`, `socks5://`\n   and `socks://` (equal to `socks5://`) prefix\n* **cookies** enables cookies\n* **gzip** enables requests of gzip-compressed responses and decompresses them\n* **brotli** enables requests brotli-compressed responses and decompresses them\n* **charset** enables interpreting the charset part of the Content-Type header\n   (e.g.  `Content-Type: text/plain; charset=iso-8859-1`). Without this, the\n   library defaults to Rust's built in `utf-8`\n* **json** enables JSON sending and receiving via serde_json\n\n#### Unstable\n\nThese features are unstable and might change in a minor version.\n\n* **rustls-no-provider** Enables rustls, but does not enable any [`CryptoProvider`] such as `ring`.\n  Providers other than the default (currently `ring`) are never picked up from feature flags alone.\n  It must be configured on the agent.\n\n* **vendored** compiles and statically links to a copy of non-Rust vendors (e.g. OpenSSL from `native-tls`)\n\n## TLS (https)\n\n### rustls\n\nBy default, ureq uses [`rustls` crate] with the `ring` cryptographic provider.\nAs of Sep 2024, the `ring` provider has a higher chance of compiling successfully. If the user\ninstalls another process [default provider], that choice is respected.\n\nureq does not guarantee to default to ring indefinitely. `rustls` as a feature flag will always\nwork, but the specific crypto backend might change in a minor version.\n\n```rust\n// This uses rustls\nureq::get(\"https://www.google.com/\").call().unwrap();\n```\n\n#### rustls without ring\n\nureq never changes TLS backend from feature flags alone. It is possible to compile ureq\nwithout ring, but it requires specific feature flags and configuring the [`Agent`].\n\nSince rustls is not semver 1.x, this requires non-semver-guaranteed API. I.e. ureq might\nchange this behavior without a major version bump.\n\nRead more at [`TlsConfigBuilder::unversioned_rustls_crypto_provider`][crate::tls::TlsConfigBuilder::unversioned_rustls_crypto_provider].\n\n### native-tls\n\nAs an alternative, ureq ships with [`native-tls`] as a TLS provider. This must be\nenabled using the **native-tls** feature. Due to the risk of diamond dependencies\naccidentally switching on an unwanted TLS implementation, `native-tls` is never picked\nup as a default or used by the crate level convenience calls (`ureq::get` etc) – it\nmust be configured on the agent.\n\n```rust\nuse ureq::config::Config;\nuse ureq::tls::{TlsConfig, TlsProvider};\n\nlet mut config = Config::builder()\n    .tls_config(\n        TlsConfig::builder()\n            // requires the native-tls feature\n            .provider(TlsProvider::NativeTls)\n            .build()\n    )\n    .build();\n\nlet agent = config.new_agent();\n\nagent.get(\"https://www.google.com/\").call().unwrap();\n```\n\n### Root certificates\n\n#### webpki-roots\n\nBy default, ureq uses Mozilla's root certificates via the [webpki-roots] crate. This is a static\nbundle of root certificates that do not update automatically. It also circumvents whatever root\ncertificates are installed on the host running ureq, which might be a good or a bad thing depending\non your perspective. There is also no mechanism for [SCT], [CRL]s or other revocations.\nTo maintain a \"fresh\" list of root certs, you need to bump the ureq dependency from time to time.\n\nThe main reason for chosing this as the default is to minimize the number of dependencies. More\ndetails about this decision can be found at [PR 818].\n\nIf your use case for ureq is talking to a limited number of servers with high trust, the\ndefault setting is likely sufficient. If you use ureq with a high number of servers, or servers\nyou don't trust, we recommend using the platform verifier (see below).\n\n#### platform-verifier\n\nThe [rustls-platform-verifier] crate provides access to natively checking the certificate via your OS.\nTo use this verifier, you need to enable it using feature flag **platform-verifier** as well as\nconfigure an agent to use it.\n\n```rust\nuse ureq::Agent;\nuse ureq::tls::{TlsConfig, RootCerts};\n\nlet agent = Agent::config_builder()\n    .tls_config(\n        TlsConfig::builder()\n            .root_certs(RootCerts::PlatformVerifier)\n            .build()\n    )\n    .build()\n    .new_agent();\n\nlet response = agent.get(\"https://httpbin.org/get\").call()?;\n```\n\nSetting `RootCerts::PlatformVerifier` together with `TlsProvider::NativeTls` means\nalso native-tls will use the OS roots instead of [webpki-roots] crate. Whether that\nresults in a config that has CRLs and revocations is up to whatever native-tls links to.\n\n## JSON\n\nBy enabling the **json** feature, the library supports serde json.\n\nThis is enabled by default.\n\n* [`request.send_json()`] send body as json.\n* [`body.read_json()`] transform response to json.\n\n## Sending body data\n\nHTTP/1.1 has two ways of transfering body data. Either of a known size with\nthe `Content-Length` HTTP header, or unknown size with the\n`Transfer-Encoding: chunked` header. ureq supports both and will use the\nappropriate method depending on which body is being sent.\n\nureq has a [`AsSendBody`] trait that is implemented for many well known types\nof data that we might want to send. The request body can thus be anything\nfrom a `String` to a `File`, see below.\n\n### Content-Length\n\nThe library will send a `Content-Length` header on requests with bodies of\nknown size, in other words, if the body to send is one of:\n\n* `&[u8]`\n* `&[u8; N]`\n* `&str`\n* `String`\n* `&String`\n* `Vec<u8>`\n* `&Vec<u8>)`\n* [`SendBody::from_json()`] (implicitly via [`request.send_json()`])\n\n### Transfer-Encoding: chunked\n\nureq will send a `Transfer-Encoding: chunked` header on requests where the body\nis of unknown size. The body is automatically converted to an [`std::io::Read`]\nwhen the type is one of:\n\n* `File`\n* `&File`\n* `TcpStream`\n* `&TcpStream`\n* `Stdin`\n* `UnixStream` (not on windows)\n\n#### From readers\n\nThe chunked method also applies for bodies constructed via:\n\n* [`SendBody::from_reader()`]\n* [`SendBody::from_owned_reader()`]\n\n### Proxying a response body\n\nAs a special case, when ureq sends a [`Body`] from a previous http call, the\nuse of `Content-Length` or `chunked` depends on situation. For input such as\ngzip decoding (**gzip** feature) or charset transformation (**charset** feature),\nthe output body might not match the input, which means ureq is forced to use\nthe `chunked` method.\n\n* `Response<Body>`\n\n### Sending form data\n\n[`request.send_form()`] provides a way to send `application/x-www-form-urlencoded`\nencoded data. The key/values provided will be URL encoded.\n\n### Overriding\n\nIf you set your own Content-Length or Transfer-Encoding header before\nsending the body, ureq will respect that header by not overriding it,\nand by encoding the body or not, as indicated by the headers you set.\n\n```rust\nlet resp = ureq::put(\"https://httpbin.org/put\")\n    .header(\"Transfer-Encoding\", \"chunked\")\n    .send(\"Hello world\")?;\n```\n\n## Character encoding\n\nBy enabling the **charset** feature, the library supports receiving other\ncharacter sets than `utf-8`.\n\nFor [`Body::read_to_string()`] we read the header like:\n\n`Content-Type: text/plain; charset=iso-8859-1`\n\nand if it contains a charset specification, we try to decode the body using that\nencoding. In the absence of, or failing to interpret the charset, we fall back on `utf-8`.\n\nCurrently ureq does not provide a way to encode when sending request bodies.\n\n### Lossy utf-8\n\nWhen reading text bodies (with a `Content-Type` starting `text/` as in `text/plain`,\n`text/html`, etc), ureq can ensure the body is possible to read as a `String` also if\nit contains characters that are not valid for utf-8. Invalid characters are replaced\nwith a question mark `?` (NOT the utf-8 replacement character).\n\nFor [`Body::read_to_string()`] this is turned on by default, but it can be disabled\nand conversely for [`Body::as_reader()`] it is not enabled, but can be.\n\nTo precisely configure the behavior use [`Body::with_config()`].\n\n## Proxying\n\nureq supports two kinds of proxies,  [`HTTP`] ([`CONNECT`]), [`SOCKS4`]/[`SOCKS5`],\nthe former is always available while the latter must be enabled using the feature\n**socks-proxy**.\n\nProxies settings are configured on an [`Agent`]. All request sent through the agent will be proxied.\n\n### Example using HTTP\n\n```rust\nuse ureq::{Agent, Proxy};\n// Configure an http connect proxy.\nlet proxy = Proxy::new(\"http://user:password@cool.proxy:9090\")?;\nlet agent: Agent = Agent::config_builder()\n    .proxy(Some(proxy))\n    .build()\n    .into();\n\n// This is proxied.\nlet resp = agent.get(\"http://cool.server\").call()?;\n```\n\n### Example using SOCKS5\n\n```rust\nuse ureq::{Agent, Proxy};\n// Configure a SOCKS proxy.\nlet proxy = Proxy::new(\"socks5://user:password@cool.proxy:9090\")?;\nlet agent: Agent = Agent::config_builder()\n    .proxy(Some(proxy))\n    .build()\n    .into();\n\n// This is proxied.\nlet resp = agent.get(\"http://cool.server\").call()?;\n```\n\n## Versioning\n\n### Semver and `unversioned`\n\nureq follows semver. From ureq 3.x we strive to have a much closer adherence to semver than 2.x.\nThe main mistake in 2.x was to re-export crates that were not yet semver 1.0. In ureq 3.x TLS and\ncookie configuration is shimmed using our own types.\n\nureq 3.x is trying out two new traits that had no equivalent in 2.x, [`Transport`] and [`Resolver`].\nThese allow the user write their own bespoke transports and (DNS name) resolver. The API:s for\nthese parts are not yet solidified. They live under the [`unversioned`] module, and do not\nfollow semver. See module doc for more info.\n\n### Breaking changes in dependencies\n\nureq relies on non-semver 1.x crates such as `rustls` and `native-tls`. Some scenarios, such\nas configuring `rustls` to not use `ring`, a user of ureq might need to interact with these\ncrates directly instead of going via ureq's provided API.\n\nSuch changes can break when ureq updates dependencies. This is not considered a breaking change\nfor ureq and will not be reflected by a major version bump.\n\nWe strive to mark ureq's API with the word \"unversioned\" to identify places where this risk arises.\n\n### Minimum Supported Rust Version (MSRV)\n\nFrom time to time we will need to update our minimum supported Rust version (MSRV). This is not\nsomething we do lightly; our ambition is to be as conservative with MSRV as possible.\n\n* For some dependencies, we will opt for pinning the version of the dep instead\n  of bumping our MSRV.\n* For important dependencies, like the TLS libraries, we cannot hold back our MSRV if they change.\n* We do not consider MSRV changes to be breaking for the purposes of semver.\n* We will not make MSRV changes in patch releases.\n* MSRV changes will get their own minor release, and not be co-mingled with other changes.\n\n[`HTTP`]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Proxy_servers_and_tunneling#http_tunneling\n[`CONNECT`]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT\n[`SOCKS4`]: https://en.wikipedia.org/wiki/SOCKS#SOCKS4\n[`SOCKS5`]: https://en.wikipedia.org/wiki/SOCKS#SOCKS5\n[`rustls` crate]: https://crates.io/crates/rustls\n[default provider]: https://docs.rs/rustls/latest/rustls/crypto/struct.CryptoProvider.html#method.install_default\n[`native-tls`]: https://crates.io/crates/native-tls\n[rustls-platform-verifier]: https://crates.io/crates/rustls-platform-verifier\n[webpki-roots]: https://crates.io/crates/webpki-roots\n[`Arc`]: https://doc.rust-lang.org/std/sync/struct.Arc.html\n[`Agent`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Agent.html\n[`Error`]: https://docs.rs/ureq/3.0.0-rc4/ureq/enum.Error.html\n[`http_status_as_error()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/config/struct.ConfigBuilder.html#method.http_status_as_error\n[SCT]: https://en.wikipedia.org/wiki/Certificate_Transparency\n[CRL]: https://en.wikipedia.org/wiki/Certificate_revocation_list\n[PR818]: https://github.com/algesten/ureq/pull/818\n[`request.send_json()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.RequestBuilder.html#method.send_json\n[`body.read_json()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Body.html#method.read_json\n[`AsSendBody`]: https://docs.rs/ureq/3.0.0-rc4/ureq/trait.AsSendBody.html\n[`SendBody::from_json()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.SendBody.html#method.from_json\n[`std::io::Read`]: https://doc.rust-lang.org/std/io/trait.Read.html\n[`SendBody::from_reader()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.SendBody.html#method.from_reader\n[`SendBody::from_owned_reader()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.SendBody.html#method.from_owned_reader\n[`Body`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Body.html\n[`request.send_form()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.RequestBuilder.html#method.send_form\n[`Body::read_to_string()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Body.html#method.read_to_string\n[`Body::as_reader()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Body.html#method.as_reader\n[`Body::with_config()`]: https://docs.rs/ureq/3.0.0-rc4/ureq/struct.Body.html#method.with_config\n[`Transport`]: https://docs.rs/ureq/3.0.0-rc4/ureq/unversioned/transport/trait.Transport.html\n[`Resolver`]: https://docs.rs/ureq/3.0.0-rc4/ureq/unversioned/resolver/trait.Resolver.html\n[`unversioned`]: https://docs.rs/ureq/3.0.0-rc4/ureq/unversioned/index.html\n[`CryptoProvider`]: https://docs.rs/rustls/latest/rustls/crypto/struct.CryptoProvider.html\n"
        },
        {
          "name": "README.tpl",
          "type": "blob",
          "size": 0.1103515625,
          "content": "[comment]: # (README.md is autogenerated from src/lib.rs by `cargo readme > README.md`)\n\n# {{crate}}\n\n{{readme}}\n"
        },
        {
          "name": "RELEASE.txt",
          "type": "blob",
          "size": 1.296875,
          "content": "Releasing ureq\n==============\n\n1. UPDATE CHANGELOG\n\nEnsure the changelog is updated. Use git history to highlight the main\nchanges, especially API changes. Smaller things can be omitted.\n\nMake a PR for changelog if there is time.\n\n\n\n2. CHECK OUTDATED DEPS\n\nQuickly scan whether we can bump some dep. Use `cargo install\ncargo-outdated` as a helper to find them.\n\n  cargo update\n  cargo outdated --depth=1\n\nThe initial update is just to ensure your checkout is using the latest\ndeps allowed by Cargo.toml already.\n\nOutdated deps doesn't _have_ to make the release, use your judgement.\n\nMake a PR for outdated deps if there is time.\n\n\n\n3. UPDATE Cargo.toml VERSION\n\nWe follow semver. Bug fixes bump patch version, API changes bump minor\nversion. Cargo bump is a helper to update the version in\nCargo.toml. `cargo install cargo-bump`\n\n  cargo bump patch\n\nGit commit Cargo.toml and push straight into master.\n\n\n\n3. GIT TAG\n\nEach release has a corresponding git tag. For version `1.2.3` there would\nbe a `git tag 1.2.3`. The tag should point to the bump commit pushed in 3.\n\nDo the tag and git push --tags.\n\n\n\n4. WAIT FOR CI\n\nBoth the push to master and following git tag will cause Github CI to\nrun. Wait for both runs to complete to ensure we have a \"good\nversion\".\n\n\n\n5. PUBLISH\n\nPublish the release to crates.io.\n\n  cargo publish\n"
        },
        {
          "name": "cargo_deny.sh",
          "type": "blob",
          "size": 1.3466796875,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/EmbarkStudios/cargo-deny\n#\n# cargo-deny checks our dependency tree for copy-left licenses,\n# duplicate dependencies, and rustsec advisories (https://rustsec.org/advisories).\n#\n# Install: `cargo install cargo-deny`\n#\n# This scripts checks the dependency tree for all targets.\n# cargo-deny is configured in `deny.toml`.\n\nset -eu\nscript_path=$( cd \"$(dirname \"${BASH_SOURCE[0]}\")\" ; pwd -P )\ncd \"$script_path\"\nset -x\n\n# cargo install cargo-deny\ncargo deny --all-features --log-level error --target aarch64-apple-darwin check\ncargo deny --all-features --log-level error --target i686-pc-windows-gnu check\ncargo deny --all-features --log-level error --target i686-pc-windows-msvc check\ncargo deny --all-features --log-level error --target i686-unknown-linux-gnu check\ncargo deny --all-features --log-level error --target wasm32-unknown-unknown check\ncargo deny --all-features --log-level error --target x86_64-apple-darwin check\ncargo deny --all-features --log-level error --target x86_64-pc-windows-gnu check\ncargo deny --all-features --log-level error --target x86_64-pc-windows-msvc check\ncargo deny --all-features --log-level error --target x86_64-unknown-linux-gnu check\ncargo deny --all-features --log-level error --target x86_64-unknown-linux-musl check\ncargo deny --all-features --log-level error --target x86_64-unknown-redox check\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 3.09375,
          "content": "# https://github.com/EmbarkStudios/cargo-deny\n#\n# cargo-deny checks our dependency tree for copy-left licenses,\n# duplicate dependencies, and rustsec advisories (https://rustsec.org/advisories).\n#\n# Install: `cargo install cargo-deny`\n# Check: `cargo deny check` or run `cargo_deny.sh`.\n\n# Note: running just `cargo deny check` without a `--target` can result in\n# false positives due to https://github.com/EmbarkStudios/cargo-deny/issues/324\ntargets = [\n  { triple = \"aarch64-apple-darwin\" },\n  { triple = \"i686-pc-windows-gnu\" },\n  { triple = \"i686-pc-windows-msvc\" },\n  { triple = \"i686-unknown-linux-gnu\" },\n  { triple = \"wasm32-unknown-unknown\" },\n  { triple = \"x86_64-apple-darwin\" },\n  { triple = \"x86_64-pc-windows-gnu\" },\n  { triple = \"x86_64-pc-windows-msvc\" },\n  { triple = \"x86_64-unknown-linux-gnu\" },\n  { triple = \"x86_64-unknown-linux-musl\" },\n  { triple = \"x86_64-unknown-redox\" },\n]\n\n[advisories]\nyanked = \"deny\"\nignore = []\n\n[bans]\nmultiple-versions = \"deny\"\nwildcards = \"allow\"        # at least until https://github.com/EmbarkStudios/cargo-deny/issues/241 is fixed\ndeny = []\n\nskip = [\n  { name = \"bitflags\" }, # Unfortunate duplicate dependency due to old version beeing pulled in by `security-framework`\n]\nskip-tree = []\n\n\n[licenses]\nprivate = { ignore = true }\nconfidence-threshold = 0.92 # We want really high confidence when inferring licenses from text\nallow = [\n  \"Apache-2.0 WITH LLVM-exception\", # https://spdx.org/licenses/LLVM-exception.html\n  \"Apache-2.0\",                     # https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)\n  \"BSD-2-Clause\",                   # https://tldrlegal.com/license/bsd-2-clause-license-(freebsd)\n  \"BSD-3-Clause\",                   # https://tldrlegal.com/license/bsd-3-clause-license-(revised)\n  \"BSL-1.0\",                        # https://tldrlegal.com/license/boost-software-license-1.0-explained\n  \"CC0-1.0\",                        # https://creativecommons.org/publicdomain/zero/1.0/\n  \"ISC\",                            # https://tldrlegal.com/license/-isc-license\n  \"LicenseRef-UFL-1.0\",             # https://tldrlegal.com/license/ubuntu-font-license,-1.0 - no official SPDX, see https://github.com/emilk/egui/issues/2321\n  \"MIT-0\",                          # https://choosealicense.com/licenses/mit-0/\n  \"MIT\",                            # https://tldrlegal.com/license/mit-license\n  \"MPL-2.0\",                        # https://www.mozilla.org/en-US/MPL/2.0/FAQ/ - see Q11. Used by webpki-roots on Linux.\n  \"OFL-1.1\",                        # https://spdx.org/licenses/OFL-1.1.html\n  \"OpenSSL\",                        # https://www.openssl.org/source/license.html - used on Linux\n  \"Unicode-DFS-2016\",               # https://spdx.org/licenses/Unicode-DFS-2016.html\n  \"Unicode-3.0\",                    # https://www.unicode.org/license.txt\n  \"Zlib\",                           # https://tldrlegal.com/license/zlib-libpng-license-(zlib)\n]\n\n[[licenses.clarify]]\nname = \"webpki\"\nexpression = \"ISC\"\nlicense-files = [{ path = \"LICENSE\", hash = 0x001c7e6c }]\n\n[[licenses.clarify]]\nname = \"ring\"\nexpression = \"MIT AND ISC AND OpenSSL\"\nlicense-files = [{ path = \"LICENSE\", hash = 0xbd0eed23 }]\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}