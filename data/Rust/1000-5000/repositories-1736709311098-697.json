{
  "metadata": {
    "timestamp": 1736709311098,
    "page": 697,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-fuzz/cargo-fuzz",
      "stars": 1572,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "target\n/.idea\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.671875,
          "content": "## Unreleased\n\nReleased YYYY-MM-DD.\n\n### Added\n\n* TODO (or remove section if none)\n\n### Changed\n\n* TODO (or remove section if none)\n\n### Deprecated\n\n* TODO (or remove section if none)\n\n### Removed\n\n* TODO (or remove section if none)\n\n### Fixed\n\n* TODO (or remove section if none)\n\n### Security\n\n* TODO (or remove section if none)\n\n--------------------------------------------------------------------------------\n\n## 0.12.0\n\nReleased 2024-02-20.\n\n### Removed\n\n* Removed the definition of `cfg(fuzzing_repro)` from `cargo fuzz run` on select\n  inputs. This caused too many recompiles in practice during the common fuzzing\n  workflow where you are fuzzing, find a crash, repeatedly run the fuzzer on\n  just the crashing input until you fix the crash, and then start fuzzing in\n  general again and the process repeats.\n\n--------------------------------------------------------------------------------\n\n## 0.11.4\n\nReleased 2024-01-25.\n\n### Changed\n\n* `cargo fuzz init` will not put the generated fuzzing crate in a separate\n  workspace by default anymore. There is an option to generate a workspace if\n  that is still the desired behavior: `--fuzzing-workspace=true`.\n\n### Fixed\n\n* Fixed `cargo fuzz init`'s generated dependencies in `Cargo.toml`.\n\n--------------------------------------------------------------------------------\n\n## 0.11.3\n\nReleased 2024-01-02.\n\n### Added\n\n* Added a \"careful mode\" inspired by the `cargo-careful` project\n* Added the ability to use a custom LLVM binaries install path instead of the\n  default distributed by `rustup`\n\n### Changed\n\n* Improved code coverage collection by using the `-merge=1` option\n* Reproducing crashes will now build with `---cfg fuzzing_repro`\n\n### Fixed\n\n* Initializing a fuzz directory in a workspace is fixed\n\n--------------------------------------------------------------------------------\n\n## 0.11.2\n\nReleased 2023-02-13.\n\n### Changed\n\n* No longer rebuilds the fuzz target binary for each coverage run.\n\n--------------------------------------------------------------------------------\n\n## 0.11.1\n\nReleased 2022-10-25.\n\n### Fixed\n\n* Fixed the suggested reproducer command outputted by `cargo fuzz tmin` to\n  preserve any build flags (such as sanitizers) the same way that `cargo fuzz\n  fun`'s suggested reproducer command will.\n\n--------------------------------------------------------------------------------\n\n## 0.11.0\n\nReleased YYYY-MM-DD.\n\n### Added\n\n* Added the `--no-trace-compares` flag which opts out of the\n  `-sanitizer-coverage-trace-compares` LLVM argument.\n\n  Using this may improve fuzzer throughput at the cost of worse coverage accuracy.\n  It also allows older CPUs lacking the `popcnt` instruction to use `cargo-fuzz`;\n  the `*-trace-compares` instrumentation assumes that the instruction is\n  available.\n\n--------------------------------------------------------------------------------\n\n## 0.10.2\n\nReleased 2020-05-13.\n\n### Added\n\n* Added the `--fuzz-dir <dir>` flag to all subcommands, so that you can put your\n  fuzzing files in a directory other than `my_crate/fuzz` if you\n  want. [#262](https://github.com/rust-fuzz/cargo-fuzz/pull/262)\n\n--------------------------------------------------------------------------------\n\n## 0.10.1\n\nReleased 2020-04-19.\n\n### Added\n\n* Added the `--strip-dead-code` to allow stripping dead code in the linker.\n\n  By default, dead code is linked because LLVM's code coverage instrumentation\n  assumes it is present in the coverage maps for some targets. Some code bases,\n  however, require stripping dead code to avoid \"undefined symbol\" linker\n  errors. This flag allows controlling whether dead code is stripped or not in\n  your build. [#260](https://github.com/rust-fuzz/cargo-fuzz/pull/260)\n\n### Fixed\n\n* The `cargo fuzz coverage` subcommand now passes the raw coverage files to the\n  `llvm-profdata` command as a whole directory, rather than as individual files,\n  which avoids an issue where too many command-line arguments were provided in\n  some scenarios. [#258](https://github.com/rust-fuzz/cargo-fuzz/pull/258)\n\n--------------------------------------------------------------------------------\n\n## 0.10.0\n\nReleased 2021-03-10.\n\n### Added\n\n* Added the `cargo fuzz coverage` subcommand to generate coverage data for a\n  fuzz target. Learn more in [the Coverage chapter of the Rust Fuzzing\n  Book!](https://rust-fuzz.github.io/book/cargo-fuzz/coverage.html)\n\n--------------------------------------------------------------------------------\n\n## 0.9.2\n\n--------------------------------------------------------------------------------\n\n## 0.9.1\n\n--------------------------------------------------------------------------------\n\n## 0.9.0\n\n--------------------------------------------------------------------------------\n\n## 0.8.0\n\nReleased 2020-06-25.\n\n### Changed\n\n* `cargo fuzz build` and `cargo fuzz run` default to building with optimizations\n  *and* debug assertions by default now. This is the most common configuration\n  for running fuzzers, so we've made it the default. To build without\n  optimizations, use the `--dev` flag, which enables Cargo's development\n  profile. To build without debug assertions, use the `--release` flag, which\n  enables Cargo's release profile.\n\n### Fixed\n\n* Building with [memory\n  sanitizer](https://clang.llvm.org/docs/MemorySanitizer.html) via the\n  `--sanitizer=memory` flag works correctly now! Previously, we did not rebuild\n  `std` with memory sanitizer enabled, and so programs compiled with memory\n  sanitizer would immediately segfault in practice.\n\n--------------------------------------------------------------------------------\n\n## 0.7.6\n\nReleased 2020-06-09.\n\n### Changed\n\n* Updated locked dependencies away from yanked versions.\n\n--------------------------------------------------------------------------------\n\n## 0.7.5\n\nReleased 2020-06-09.\n\n### Added\n\n* Added a `-v`/`--verbose` flag for enabling verbose cargo builds. This was\n  always implicitly enabled before, but now is optional.\n* New fuzz targets are now configured not to be tested or documented when you\n  run `cargo test --all` and `cargo doc --all` and the fuzz crate is a part of a\n  workspace. Previously, this caused `cargo` to accidentally start running the\n  fuzzers.\n\n### Changed\n\n* The `-sanitizer-coverage-trace-geps` and `-sanitizer-coverage-prune-blocks=0`\n  flags are not passed to LLVM anymore, as they created a lot of overhead for\n  fuzz targets, without actually guiding fuzzing much.\n\n--------------------------------------------------------------------------------\n\n## 0.7.4\n\nReleased 2020-03-31.\n\n### Added\n\n* Added the `cargo fuzz fmt <target> <input>` subcommand. This prints the\n  `std::fmt::Debug` output of the input. This is especially useful when the fuzz\n  target takes an `Arbitrary` input type.\n\n--------------------------------------------------------------------------------\n\n## 0.7.3\n\nReleased 2020-02-01.\n\n### Changed\n\n* [Force 1 CGU when release mode is enabled](https://github.com/rust-fuzz/cargo-fuzz/pull/215)\n\n--------------------------------------------------------------------------------\n\n## 0.7.2\n\nReleased 2020-01-22.\n\n### Changed\n\n* New projects will be initialized with `libfuzzer-sys` version 0.3.0.\n\n--------------------------------------------------------------------------------\n\n## 0.7.1\n\nReleased 2020-01-15.\n\n### Changed\n\n* Updated `Cargo.lock` file's self version for `cargo-fuzz`, so that building\n  doesn't change the lock file.\n\n--------------------------------------------------------------------------------\n\n## 0.7.0\n\nReleased 2020-01-15.\n\n### Added\n\n* `cargo fuzz` will show you the `Debug` output of failing inputs. This is\n  particularly useful when you're using `Arbitrary` to create structured fuzz\n  inputs. This requires that your fuzz target is using `libfuzzer-sys >= 0.2.0`\n  from crates.io.\n* `cargo fuzz` will now suggest common next tasks after finding a failing\n  input. It gives you instructions on how to reproduce the failure, and how to\n  run test case minimization.\n\n### Changed\n\n* New fuzz projects will use [`libfuzzer-sys` version\n  `0.2.0`](https://github.com/rust-fuzz/libfuzzer/blob/master/CHANGELOG.md#020)\n  from crates.io now, instead of a git dependency. This also pulls in\n  [`arbitrary` version\n  `0.3.0`](https://github.com/rust-fuzz/arbitrary/blob/master/CHANGELOG.md#030)\n  and all the new goodies it contains.\n\n--------------------------------------------------------------------------------\n\n## 0.6.0\n\n--------------------------------------------------------------------------------\n\n## 0.5.0\n\n--------------------------------------------------------------------------------\n\n## 0.4.0\n\n--------------------------------------------------------------------------------\n\n## 0.3.0\n\n--------------------------------------------------------------------------------\n\n## 0.2.0\n\n--------------------------------------------------------------------------------\n\n## 0.1.0\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.853515625,
          "content": "# Contributing to `cargo fuzz`\n\n## Testing\n\nRun all the tests the usual way:\n\n```\ncargo test\n```\n\nThe test suite is located in `tests/tests/main.rs`. The tests use a test project\nbuilder in `tests/tests/project.rs` to create `cargo fuzz` projects that we can\nrun various commands on and verify that they behave as expected. These test\nprojects end up in `cargo-fuzz/target/tests/*`, so if a test fails and you want\nto debug it, you can find its test project directory in there. Run `cargo test\n-- --nocapture --test-threads 1` to get the logs saying which directory is the\none used by your failing test in particular.\n\n## Code Style\n\nWe use the current stable Rust channel's `rustfmt`, and enforce that code is\nformatted this way in CI.\n\n```sh\n# If you don't already have `rustfmt` installed, run this:\nrustup component add rustfmt\n\n# Format the code!\ncargo +stable fmt\n```\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 17.8720703125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216261ddc8289130e551ddcd5ce8a064710c0d064a4d2895c67151c92b5443f6\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa3d466004a8b4cb1bc34044240a2fd29d17607e2e3bd613eb44fd48e8100da3\"\ndependencies = [\n \"bstr\",\n \"doc-comment\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fca0852af221f458706eb0725c03e4ed6c46af9ac98e6a689d5e634215d594dd\"\ndependencies = [\n \"memchr\",\n \"once_cell\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-fuzz\"\nversion = \"0.12.0\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"cargo_metadata\",\n \"clap\",\n \"current_platform\",\n \"predicates\",\n \"rustc_version\",\n \"tempfile\",\n \"toml\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e34637b3140142bdf929fb439e8aa4ebad7651ebf7b1080b3930aa16ac1459ff\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.77\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9f73505338f7d905b19d18738976aae232eb46b8efc15554ffc56deb5d9ebe4\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.0.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d63b9e9c07271b9957ad22c173bae2a4d9a81127680962039296abcd2f8251d\"\ndependencies = [\n \"bitflags\",\n \"clap_derive\",\n \"clap_lex\",\n \"is-terminal\",\n \"once_cell\",\n \"strsim\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.0.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0177313f9f02afc995627906bbd8967e2be069f5261954222dac78290c2b9014\"\ndependencies = [\n \"heck\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.105\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d4198f73e42b4936b35b5bb248d81d2b595ecb170da0bac7655c54eedfa8da8\"\ndependencies = [\n \"os_str_bytes\",\n]\n\n[[package]]\nname = \"current_platform\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a74858bcfe44b22016cb49337d7b6f04618c58e5dbfdef61b06b8c434324a0bc\"\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"either\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90e5c1c8368803113bf0c9584fc495a58b86dc8a29edbf8fe877d21d9507e797\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f639046355ee4f37944e44f60642c6f3a7efa3cf6b78c78a0d989a8ce6c396a1\"\ndependencies = [\n \"errno-dragonfly\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"errno-dragonfly\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a407cfaa3385c4ae6b23e84623d48c2798d06e3e6a1878f7f59f17b3f86499\"\ndependencies = [\n \"instant\",\n]\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2540771e65fc8cb83cd6e8a237f70c319bd5c29f78ed1084ba5d50eeac86f7f9\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee512640fe35acbfb4bb779db6f0d80704c2cacfa2e39b601ef3e3f47d1ae4c7\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46112a93252b123d31a119a8d1a1ac19deac4fac6e0e8b0df58f0d4e5870e63c\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"927609f78c2913a6f6ac3c27a4fe87f43e2a35367c0c4b0f8265e8f49a104330\"\ndependencies = [\n \"hermit-abi\",\n \"io-lifetimes\",\n \"rustix\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af150ab688ff2122fcef229be89cb50dd66af9e01a4ff320cc137eecc9bacc38\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.138\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db6d7e329c562c5dfab7a46a2afabc8b987ab9a4834c9d1ca04dc54c1546cef8\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f9f08d8963a6c613f4b1a78f4f4a4dbfadf8e6545b2d72861731e4858b8b47f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86f0b0d4bf799edbc74508c1e8bf170ff5f41238e5f8225603ca7caaae2b7860\"\n\n[[package]]\nname = \"os_str_bytes\"\nversion = \"6.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b7820b9daea5457c9f21c69448905d723fbd21136ccf521748f23fd49e723ee\"\n\n[[package]]\nname = \"predicates\"\nversion = \"2.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f54fc5dc63ed3bbf19494623db4f3af16842c0d975818e469022d09e53f0aa05\"\ndependencies = [\n \"difflib\",\n \"float-cmp\",\n \"itertools\",\n \"normalize-line-endings\",\n \"predicates-core\",\n \"regex\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72f883590242d3c6fc5bf50299011695fa6590c2c70eac95ee1bdb9a733ad1a2\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54ff541861505aabf6ea722d2131ee980b8276e10a1297b94e896dd8b621850d\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.105\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39278fbbf5fb4f646ce651690877f89d1c5811a3d4acb27700c1cb3cdb78fd3b\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e076559ef8e241f2ae3479e36f97bd5741c0330689e217ad51ce2c76808b868a\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"456c603be3e8d448b072f410900c09faf164fbce2d480456f50eea6e25f9c848\"\n\n[[package]]\nname = \"remove_dir_all\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3807b5d10909833d3e9acd1eb5fb988f79376ff10fce42937de71a449c4c588\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e25dfac463d778e353db5be2449d1cce89bd6fd23c9f1ea21310ce6e5a1b29c4\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.193\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25dd9975e68d0cb5aa1120c288333fc98731bd1dd12f561e468ea4728c042b89\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.193\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43576ca501357b9b071ac53cdc7da8ef0cbd9493d8df094cd821777ea6e894d3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.108\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d1c7e3eac408d115102c4c24ad393e0821bb3a5df4d506a80f85f7a742a526b\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.105\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b9b43d45702de4c839cb9b51d9f529c5dd26a4aff255b42b1ebc03e88ee908\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23e78b90f2fcf45d3e842032ce32e3f2d1545ba6636271dcbf24fa306d87be7a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cdb1ef4eaeeaddc8fbd371e5017057064af0911902ef36b39801f67cc6d79e4\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"libc\",\n \"redox_syscall\",\n \"remove_dir_all\",\n \"winapi\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bab24d30b911b2376f3a13cc2cd443142f0c81dda04c118693e35b3835757755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95059e91184749cb66be6dc994f67f182b6d897cb3df74a5bf66b5e709295fd8\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82e1a7758622a465f8cee077614c73484dac5b836c02ff6a40d5d1010324d7\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ceab39d59e4c9499d4e5a8ee0e2735b891bb7308ac83dfb4e80cad195c9f6f3\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a3e1820f08b8513f676f7ab6c1f99ff312fb97b553d30ff4dd86f9f15728aa7\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41d2aa71f6f0cbe00ae5167d90ef3cfe66527d6f613ca78ac8024c3ccab9a19e\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd0f252f5a35cac83d6311b2e795981f5ee6e67eb1f9a7f64eb4500fbc4dcdb4\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbeae19f6716841636c28d695375df17562ca208b2b7d0dc47635a50ae6c5de7\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84c12f65daa39dd2babe6e442988fc329d6243fdce47d7d2d155b8d874862246\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf7b1b21b5362cbc318f686150e5bcea75ecedc74dd157d874d754a2ca44b0ed\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09d525d2ba30eeb3297665bd434a54297e4170c7f1a44cad4ef58095b4cd2028\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40009d85759725a34da6d89a94e63d7bdc50a862acf0dbc7c8e488f1edcb6f5\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.6318359375,
          "content": "[workspace]\nmembers = [\".\"]\n\n[package]\nname = \"cargo-fuzz\"\nversion = \"0.12.0\"\nauthors = [\"The rust-fuzz Project Developers\"]\nlicense = \"MIT OR Apache-2.0\"\ndescription = \"A `cargo` subcommand for fuzzing with `libFuzzer`! Easy to use!\"\nreadme = \"README.md\"\nrepository = \"https://github.com/rust-fuzz/cargo-fuzz/\"\ncategories = [\"development-tools::testing\"]\nedition = \"2021\"\n\n[dependencies]\nanyhow = \"1.0.66\"\ncurrent_platform = \"0.2.0\"\nclap = { version = \"4.0.29\", features = [\"derive\", \"deprecated\"] }\ntempfile = \"3.3.0\"\ntoml = \"0.5.9\"\nrustc_version = \"0.4.0\"\ncargo_metadata = \"0.18.1\"\n\n[dev-dependencies]\nassert_cmd = \"2.0.7\"\npredicates = \"2.1.4\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0458984375,
          "content": "Copyright (c) 2010 The Rust Project Developers\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.9833984375,
          "content": "<div align=\"center\">\n  <h1><code>cargo fuzz</code></h1>\n\n  <p><b>A <code>cargo</code> subcommand for fuzzing with <code>libFuzzer</code>! Easy to use!</b></p>\n</div>\n\n## Installation\n\n```sh\n$ cargo install cargo-fuzz\n```\n\nNote: `libFuzzer` needs LLVM sanitizer support, so this only works on x86-64 and Aarch64,\nand only on Unix-like operating systems (not Windows). You'll also need a C++ compiler with C++11 support.\n\n## Usage\n\n### `cargo fuzz init`\n\nInitialize a `cargo fuzz` project for your crate!\n\n### If your crate uses cargo workspaces, add `fuzz` directory to `workspace.members` in root `Cargo.toml`\n\n`fuzz` directory can be either a part of an existing workspace (default)\nor use an independent workspace. If latter is desired, you can use\n`cargo fuzz init --fuzzing-workspace=true`.\n\n### `cargo fuzz add <target>`\n\nCreate a new fuzzing target!\n\n### `cargo fuzz run <target>`\n\nRun a fuzzing target and find bugs!\n\n### `cargo fuzz fmt <target> <input>`\n\nPrint the `std::fmt::Debug` output for a test case. Useful when your fuzz target\ntakes an `Arbitrary` input!\n\n### `cargo fuzz tmin <target> <input>`\n\nFound a failing input? Minify it to the smallest input that causes that failure\nfor easier debugging!\n\n### `cargo fuzz cmin <target>`\n\nMinify your corpus of input files!\n\n### `cargo fuzz coverage <target>`\n\nGenerate coverage information on the fuzzed program!\n\n## Documentation\n\nDocumentation can be found in the [Rust Fuzz\nBook](https://rust-fuzz.github.io/book/cargo-fuzz.html).\n\nYou can also always find the full command-line options that are available with\n`--help`:\n\n```sh\n$ cargo fuzz --help\n```\n\n## Trophy case\n\n[The trophy case](https://github.com/rust-fuzz/trophy-case) has a list of bugs\nfound by `cargo fuzz` (and others). Did `cargo fuzz` and libFuzzer find a bug\nfor you? Add it to the trophy case!\n\n## License\n\n`cargo-fuzz` is distributed under the terms of both the MIT license and the\nApache License (Version 2.0).\n\nSee [LICENSE-APACHE](./LICENSE-APACHE) and [LICENSE-MIT](./LICENSE-MIT) for\ndetails.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}