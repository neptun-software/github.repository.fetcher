{
  "metadata": {
    "timestamp": 1736709195951,
    "page": 455,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "buckyos/CYFS",
      "stars": 1998,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.328125,
          "content": "{\n\t\"env\": {\n\t\t\"node\": true,\n\t\t\"es6\": true\n\t},\n\t\"rules\": {\n\t\t\"no-console\": 0,\n\t\t\"no-cond-assign\": 0,\n\t\t\"no-unused-vars\": 1,\n\t\t\"no-extra-semi\": \"warn\",\n\t\t\"semi\": \"warn\",\n\t\t\"no-empty\": 0\n\t},\n\t\"extends\": \"eslint:recommended\",\n\t\"globals\": {\n\t\t\"getCurrentRuntime\": true,\n\t\t\"BaseLib\": true,\n\t\t\"ErrorCode\": true\n\t},\n\t\"parser\": \"babel-eslint\" \n}"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2548828125,
          "content": "dist\nnode_modules\n.vscode\n.idea\nyarn.lock\n.projectile\n.DS_Store\nsrc/.idea/\nbuild/\n\n.svn\n.hg\n.lock-wscript\n.*.swp\n._*\n*.orig\n*-lock.json\n.tern-port\nnpm-debug.log\naws-exports.js\nawsmobilejs/\n.bucky\n.dist\n*.log\n/pkg\n/src/github.com/\n/src/golang.org\n.VSCodeCounter\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".jsbeautifyrc",
          "type": "blob",
          "size": 0.5458984375,
          "content": "{\n    \"indent_size\": 4,\n    \"indent_char\": \" \",\n    \"indent_level\": 0,\n    \"indent_with_tabs\": false,\n    \"preserve_newlines\": true,\n    \"max_preserve_newlines\": 10,\n    \"jslint_happy\": false,\n    \"space_after_anon_function\": false,\n    \"brace_style\": \"collapse,preserve-inline\",\n    \"keep_array_indentation\": false,\n    \"keep_function_indentation\": false,\n    \"space_before_conditional\": true,\n    \"break_chained_methods\": false,\n    \"eval_code\": false,\n    \"unescape_strings\": false,\n    \"wrap_line_length\": 0,\n    \"operator_position\": \"preserve-newline\"\n}\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.544921875,
          "content": "{\n  \"undef\": true,\n  \"unused\": true,\n  \"esversion\" : 6,\n  \"curly\" : true,\n  \"eqeqeq\" : false,\n  \"globals\": {\n    \"require\" : true,\n    \"module\" : true,\n    \"setTimeout\" : true,\n    \"setInterval\": true,\n    \"setImmediate\": true,\n    \"clearTimeout\": true,\n    \"clearInterval\": true,\n    \"clearImmediate\": true,\n    \n    \"console\": true,\n    \"process\" : true,\n\n    \"BX_LOG\": true,\n    \"BX_DEBUG\": true,\n    \"BX_TRACE\": true,\n    \"BX_WARN\" : true,\n    \"BX_INFO\": true,\n    \"BX_ERROR\": true,\n    \"BX_ASSERT\": true,\n    \"BX_CHECK\": true,\n    \"BX_FATAL\": true\n  }\n}"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2041015625,
          "content": "/.vscode\n/bucky/\n/demos/\n/demos_internal/\n/doc/\n/node_modules/\n/source/\n/templates/\n/tools/\n/.eslintrc\n/.gitattributes\n/.gitignore\n/.jsbeautifyrc\n/.jsintrc\n/.npmignore\n/.dev.js\n/package-lock.json\n/package.json"
        },
        {
          "name": "CHANGELOG-nightly.md",
          "type": "blob",
          "size": 46.0810546875,
          "content": "## [1.0.0.722] -- 2023/2/24\r\n0d1eecc5 Add mechanism that trigger immediate update after system config changes  \r\n64f019fe Fix two log param errors  \r\n1776889e Add dynamic monitoring mechanism for system-config.toml  \r\nafb5c68c Add repeated loading supports to system-config.toml in ood-daemon  \r\ne81821d7 Fix two warning after package updated  \r\n8a2bba37 Switch meta repo to dynamic dependency on system config  \r\n1cf5799f Fix: pack script error  \r\n16eaf64c Fix: Missing app-manager lib.rs  \r\nde517952 Add app repo downloader for ood-installer  \r\n4eda0873 Add semver epoch check into ood-daemon  \r\n06717ad2 Add cache for meta config repo in ood-daemon  \r\n69f88233 Add meta client helper with object cache  \r\n0d5e5a69 Add service_version and preview relate supports into ood-daemon for better control of services update  \r\n7622e76a Add semver support into dec_app core object and with test cases  \r\na976a6bf App-tool support change preview service version, pack script add preview version to service  \r\nb0e496bb Fix the panic that may be caused by check db in cyfs-noc  \r\n06201fbe Add api edition relate header to requestors  \r\n12d526f9 Add check mechanism to noc meta db in case of main table missing  \r\n\r\n## [1.0.0.718] -- 2023/2/21  \r\n1b0cf118 Change sync services packages from parallel to serial  \r\n638848a2 Remove two spawn task using for cancel on timeout  \r\n70837da7 Fix error op_env type check in requestor  \r\ne3f55f6e Improve timeout and retry strategy for repo download in ood-daemon service  \r\n9c3c63ab Meta db initialization switch to transaction mode  \r\n1e4e4277 Modify: add some statistic logs for ndn  \r\n94d8f7a4 Merge branch '104-appmanager-suppport-local-app-repo-store'  \r\n34580770 Modify: add some statistic logs for ndn  \r\n7522c0fe Email Sender support starttls  \r\n10d27023 App Manager support install app from local repo  \r\n2a3c1dc1 ood-installer support sync app repo  \r\n51f0be28 WIP: App Manager Support Local Repo  \r\ne6392f5b WIP： App Manager reflator app install logic  \r\ne65fe061 WIP： AppManager add repo type, use zip_extract to extract app service package  \r\n  \r\n## [1.0.0.715] -- 2023/2/20  \r\ne51af4f2 Set docker api timeout to 300s  \r\nb213c3fe Fix: tcp not update active time when recv packet  \r\n24553a9c Improve the object layer strategy detection of after pass the first layer rpath access verification  \r\n574cfddf OOD-daemon will now report an error and exit if it fails to load the repo  \r\n0ab51327 Add version output in process alive check log  \r\n14c004b6 Fix meta-stat email format  \r\n4daab080 App-manager report app status to ood-daemon  \r\nc09ddea9 Fix field names of ood status  \r\nf3449363 Fix: monitor create desc when desc not existed on chain  \r\na4e0e755 Fix: stream break when loss fin ack packet  \r\n0d2393f3 Fix: monitor create desc error  \r\nba302dd4 Merge remote-tracking branch 'origin/107-support-multiple-global-states-in-cyfs-stack' into main  \r\n3d70797d Add group state test case  \r\n63e3e712 Fix a assert error when global state is init  \r\n61a5eff1 Cyfs monitor use generated identify to test metachain read and write  \r\n3d4aefc9 Improve the use of u64::MAX in two places  \r\nee5323ea Delete some useless logs  \r\n90d9b5c8 meta spv support storage anbd query objects by object id, body hash  \r\n1101829c Add isolate_id method for GlobalStateRawProcessor  \r\ne3765b61 Add global state raw processor for use by external components of cyfs-stack  \r\nff03c824 Add the persistence mechanism of all the global state list  \r\nb4c4de04 Refactor GlobalStateManager to support multiple global-states  \r\n937c7dbe Merge branch '79-cyfs-stack-should-support-interfaces-for-ndn-upload-task'  \r\nb4284830 Add exists methods into collection for to check if exists  \r\n5bcc2984 Merge branch '79-cyfs-stack-should-support-interfaces-for-ndn-upload-task'  \r\nda09ed21 Merge branch '79-cyfs-stack-should-support-interfaces-for-ndn-upload-task'  \r\n412d03ff Merge branch '99-recycle-unused-bdt-tunnel-instances'  \r\n979773da Fix: implement stream reserving 2*msl state with lru cache  \r\n25c53b07 Refactory: export private methods with pub(crate)  \r\n114f1d1b Fix: bdt unit test sn with ipv6 endpoints  \r\nfdde1948 Merge branch '95-ipv6-support-refactory'  \r\n1b91764a Merge remote-tracking branch 'origin/101-ood-status-query-an-aggregation-services' into main  \r\n8d522ec7 Merge remote-tracking branch 'origin/96-singleopenvstub-support-constructing-directory-tree-structure-and-support-directory-tree-traversal' into main  \r\n1875de3d Add object and name for meta in cyfs-stack  \r\n3e12b1be Fix cyfs-perf deps Improve the format of some tomls  \r\ne83890fc Add noc meta cache to optimize update last access write operation  \r\n2ff85f4d Publish cyfs-core new version  \r\nd917d648 Bump cyfs-core version  \r\n0dd49104 Fix cyfs-core deps  \r\n220c7ab2 Fix compile error  \r\ndd2f2f17 Publish new cargo packages  \r\nfb63c476 Bump cargo package version and dependences  \r\n89917227 Merge branch 'main' into beta  \r\n75aea584 Merge remote-tracking branch 'origin/101-ood-status-query-an-aggregation-services' into main  \r\n8f60a00b Merge remote-tracking branch 'origin/96-singleopenvstub-support-constructing-directory-tree-structure-and-support-directory-tree-traversal' into main  \r\n2ebd1e20 Add object and name for meta in cyfs-stack  \r\n4d5a9e90 Fix cyfs-perf deps Improve the format of some tomls  \r\n2121a11e Add noc meta cache to optimize update last access write operation  \r\n078b27d3 Publish cyfs-core new version  \r\n019b09d9 Bump cyfs-core version  \r\n51e4365b Fix cyfs-core deps  \r\na04d6e88 Fix compile error  \r\n038b75b4 Publish new cargo packages  \r\n279ce4bd Bump cargo package version and dependences  \r\n026c1383 Merge branch 'main' into beta  \r\nccb044db Integrate ood-daemon services status  \r\n4af47a92 Improve ServiceState fields spelling  \r\nf9eaed01 Add service status related def  \r\nec1ba569 ood-daemon adds independent status http server  \r\n5bc02595 Add service status support to ood-daemon  \r\nff14b0d1 Add external http server support to ood control  \r\n287c9468 Fix app-manager compile error  \r\n08249fa5 Cyfs Monitor restore case interval time after success  \r\nc6c372dc Add noc test cases  \r\nb176d6a5 Fix the reserved names as blob and chunk dir names's bug on windows for the missing part  \r\n97bd7bb9 Print warning when decapp missing status or stop scripts  \r\n9f85c599 Stream shutdown success at closed state  \r\n71ffede0 Fix: fix reset key logic  \r\nec2194ec Integrate ood-daemon services status  \r\n2b30769b Improve ServiceState fields spelling  \r\neb881d46 Add service status related def  \r\n5dc9c661 ood-daemon adds independent status http server  \r\nb2882ff5 Add service status support to ood-daemon  \r\ncfc87989 Add external http server support to ood control  \r\nd54866c2 Fix app-manager compile error  \r\nf0822e79 Cyfs Monitor restore case interval time after success  \r\nab37ea21 Add noc test cases  \r\nfa1cc5c0 Fix the reserved names as blob and chunk dir names's bug on windows for the missing part  \r\n13cdfe46 Print warning when decapp missing status or stop scripts  \r\n5ad5d183 Fix: bdt unit test sn with ipv6 endpoints  \r\n9607470d Merge branch '95-ipv6-support-refactory'  \r\na8ba267a Merge remote-tracking branch 'origin/101-ood-status-query-an-aggregation-services' into main  \r\n5c2a8d77 Merge remote-tracking branch 'origin/96-singleopenvstub-support-constructing-directory-tree-structure-and-support-directory-tree-traversal' into main  \r\nc88a5e76 Add object and name for meta in cyfs-stack  \r\n598df4a8 Fix cyfs-perf deps Improve the format of some tomls  \r\n1952c7ee Add noc meta cache to optimize update last access write operation  \r\nba181cef Publish cyfs-core new version  \r\n139a9ab6 Bump cyfs-core version  \r\n11c7205a Fix cyfs-core deps  \r\n76f871ea Fix compile error  \r\n30f99d3d Publish new cargo packages  \r\n4228e263 Bump cargo package version and dependences  \r\n34cb38f4 Merge branch 'main' into beta  \r\n87956987 Integrate ood-daemon services status  \r\n086dcd8a Improve ServiceState fields spelling  \r\n51f135c6 Add service status related def  \r\n0bd37768 ood-daemon adds independent status http server  \r\n933ed8cd Add isolate_path_env stub test cases  \r\n1be055d0 Add service status support to ood-daemon  \r\nd3e16c4d Add native ioslate_path_env component test cases and fix some test warnings  \r\n25fa3e85 Add external http server support to ood control  \r\n60b04789 Add ioslate path env stub  \r\n4b32f2b0 Optimize objectmap path to support non-transactional mode  \r\n5a6aa9b7 Integrate isolate path env into global-state services  \r\n6ccd4ef9 Add isolate path env impl  \r\nc78ae028 Fix app-manager compile error  \r\n429bddd8 Cyfs Monitor restore case interval time after success  \r\n9dd5aac3 Add noc test cases  \r\nc7132f26 Fix the reserved names as blob and chunk dir names's bug on windows for the missing part  \r\ncbf80ee3 Print warning when decapp missing status or stop scripts  \r\n2451a583 Fix: package enter write closed state correctly  \r\n0d4443ff Panic manager supports multiple bug reporters  \r\nf6749bb1 Stream shutdown success at closed state  \r\nf1a4cc60 Create a directory if it does not exist when downloading to a local file  \r\n28a37154 Improve cyfs-stack's control strategy for task manager resume_task  \r\na63d6854 Fix: fix reset key logic  \r\nb7a3e3c9 Add dingtalk_bug_report method to PanicBuilder for external use  \r\n445fc501 Optimize some logs output  \r\ncc70a84b Add init-ood-daemon param to ood-installer  \r\n28fbed65 Remove cyfs-bdt's dependence on os-id lib  \r\n18d1534d Improve the ndn request logs output  \r\n8538be10 Add req_path suport to front o protocol for acl  \r\n1a621713 Send start notify when cyfs-monitor started  \r\ne8752b2a Improve the problem that the front r protocol cannot correctly handle data req_path for acl  \r\n4abdcf6b Use search instead of get for device in context  \r\nc8ad90a8 Add target device prompt info to access reject msg for better debug  \r\n4cc08abb Improve cyfs stack test cases  \r\n9cf2aafe Improve some logs output about chunk cache  \r\nb30d8cd6 Fix: chunk list task download split chunks dumplicatedly  \r\nc2570da0 Improve the problem that the backslash path in Windows format cannot be correctly recognized when the download task processes the local file path on nix system  \r\nb7ecdbc7 Fix: using channel got reserved correctly  \r\na8a9a3b9 Fix: cyfs-monitor report, use sn-online-test to test sn server status  \r\nc3964a38 impl: log udp socket's recv loop thread os id  \r\ncb239140 Improve some logs output  \r\n67b2aed5 Add seperate sn-online-test program  \r\nb6e22b0f Fix: cyfs stack resp interest with NotFound if chunk not exists on default  \r\ne1bbe10d Fix: Add some log for dectecting zero speed source  \r\nd3535025 Fix: modify resend piece control send time  \r\n04629f0f Fix: channel ignore estimate request for sequence lost  \r\n11bfb5a5 Correct the use of sync mechanism on bdt download context  \r\nd2d9ff8f Bdt acl callback can correctly handle empty referer now  \r\na2ebb0df Changed to auto cancel strategy for ndn task with context param  \r\nd653c967 Fix the bug that the device_list param of trans.create_task cannot correctly find the device object  \r\na2cb418a Remove useless ood_resolver field from ndn service relate codes  \r\n236abdbb Merge remote-tracking branch 'origin/101-ood-status-query-an-aggregation-services' into main  \r\ncb0cba8a Merge remote-tracking branch 'origin/96-singleopenvstub-support-constructing-directory-tree-structure-and-support-directory-tree-traversal' into main  \r\ndce764a9 Add object and name for meta in cyfs-stack  \r\ne0dac397 Fix: tcp stream don't reset tunnel when break  \r\n5af0b5fb Fix: implement stream reserving 2*msl state with lru cache  \r\n3da42793 Fix cyfs-perf deps Improve the format of some tomls  \r\n9867ad29 Add noc meta cache to optimize update last access write operation  \r\ne11ff3ef Publish cyfs-core new version  \r\n95a5c99d Bump cyfs-core version  \r\nc168c17a Fix cyfs-core deps  \r\n427050c6 Fix compile error  \r\n2412d747 Integrate ood-daemon services status  \r\naa5ff976 Publish new cargo packages  \r\n0249ba77 Bump cargo package version and dependences  \r\n96e3bb69 Merge branch 'main' into beta  \r\n0493c935 Improve ServiceState fields spelling  \r\n5a88c564 Add service status related def  \r\n00bf2764 ood-daemon adds independent status http server  \r\nc013612e Fix: bdt mem device cache limited size  \r\n39de9529 Refactory: export private methods with pub(crate)  \r\n7785029d Fix: package enter write closed state correctly  \r\n101db063 Stream shutdown success at closed state  \r\n3fca43d8 Create a directory if it does not exist when downloading to a local file  \r\nac0e4f2a Improve cyfs-stack's control strategy for task manager resume_task  \r\n4d8bfacc Fix: fix reset key logic  \r\n96e1c1e6 Panic manager supports multiple bug reporters  \r\n8d9b7929 Add dingtalk_bug_report method to PanicBuilder for external use  \r\n7825a4ea Optimize some logs output  \r\nfa6867c6 Add init-ood-daemon param to ood-installer  \r\n9aa4489c Remove cyfs-bdt's dependence on os-id lib  \r\n66b856fc Improve the ndn request logs output  \r\nc0622388 Add req_path suport to front o protocol for acl  \r\ncc24f8e0 Send start notify when cyfs-monitor started  \r\n10ace371 Improve the problem that the front r protocol cannot correctly handle data req_path for acl  \r\n6c59337d Use search instead of get for device in context  \r\nef0f880d Add target device prompt info to access reject msg for better debug  \r\nbeb0e7be Add service status support to ood-daemon  \r\nedc1d1f6 Add external http server support to ood control  \r\ne5e9a3a5 Refactory: stream release tunnel guard when closed  \r\n009c3c8a Refactory: export private methods with pub(crate)  \r\n8e21764a Refactory: export private methods with pub(crate)  \r\n743c2fcf Impl: recycle unused tunnel  \r\nb4eb9f85 Add isolate_path_env stub test cases  \r\nb0c6fd63 Add native ioslate_path_env component test cases and fix some test warnings  \r\n3f14f978 Impl: add a test for sn ipv6 ping  \r\nff916188 Add ioslate path env stub  \r\ndd437a1f Impl: sn support ipv6 ping  \r\nb69709df Optimize objectmap path to support non-transactional mode  \r\n0de3fc0c Integrate isolate path env into global-state services  \r\nedacc65a Add isolate path env impl  \r\n29fed496 Remove complie warning  \r\nf3f66501 Impl: Add transfered and recursion close method to ndn task  \r\n027e9ae4 Impl: Add transfered and recursion close method to ndn task  \r\n6a1f7ed1 Rebase: rebase to 74-integrate-bdt-task-context-and-group  \r\naa682520 Refactory: impl trans api for close upload group  \r\n260cbdf8 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\nc2bd5612 Refactory: impl trans api for close upload group  \r\n99bbebfc Refactory: impl trans api for upload group  \r\nc19064b5 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n2f47bcc0 Fix: reserve or recycle channels when all reference released  \r\nae3f02eb Impl: cancel task with user defined error  \r\n82692c64 Fix: download task progress/speed  \r\nbc3ba88e Rebase: rebase to 74-integrate-bdt-task-context-and-group  \r\n58d6d195 Refactory: impl trans api for close upload group  \r\n5dad1539 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n30aa07ae Fix: reserve or recycle channels when all reference released  \r\nacaa42fb Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n09076f70 Add uptime and boot_time into get_system_info  \r\n2b81e62a Fix: correctly wait dapp process  \r\n3bbbcfc3 Add total trans bytes field in get_system_info Added network card deduplication in some environments  \r\n80fa0863 Publish new cargo packages  \r\nae40d694 Fix cyfs-util publish error  \r\nee957a29 Bump cargo packages version  \r\n89341b52 Fix: retry sn list when offline  \r\n1370e83c Improve ndn test case with get_data  \r\n3584395e Improve the resp's return logic of get_data with error prompt  \r\na3a5172e Use of http requestor for get_data and put_data methods as default  \r\n0347e50e Error of reading resp is returned correctly in ws mode  \r\n87d26ad6 Merge remote-tracking branch 'origin/main' into main  \r\n0df70f89 Sync projects for trans and stack object relate apis's changes  \r\n2ef0d178 Fix a compile error with requestor config and some warnings  \r\n4b716f44 Merge remote-tracking branch 'origin/80-add-surf-based-http-requestor' into main  \r\n1a15a767 Fix: trigger chunk downloader's on_drain method  \r\ne9faea63 Add some logs  \r\na8dedd60 Add serialization support for storage base on global state  \r\n6effd696 Add log for named-data-client chunk reading  \r\n9edf7c31 Merge branch '74-integrate-bdt-task-context-and-group'  \r\n3fcdbf0c Improve ood-daemon's upgrade detection and restart logic  \r\ne0323ea1 Add host mode support to browser sanbox  \r\n91e519ec Also check app exclude list when install or start app  \r\n66acc69e Merge pull request #88 from buckyos/fix-container-dns  \r\nf1a63712 Ood-installer support only start ood-daemon  \r\n6514acec Fix AppManager startup param  \r\nee80ce8c Fix AppManager config path, load config after log init  \r\ncb2ac1ee Mixed the usage of different requestor config for zone simulator stacks  \r\nbe10f64b Add shared stack cache logic to zone simulator  \r\n5da765af Remove shared stack support and cache from cyfs-stack-loader  \r\nc2708f59 Improve open shared stack relate logic and add requestor config params  \r\n6150617a Temporarily disable all ipv6 addresses for bdt stack  \r\n95654ae5 App Manager AppSource logic  \r\ne849439c AppManager supports more detailed configuration  \r\n715e851e WIP： add new config for app manager  \r\n2ded38db Modify the way to start file uploader  \r\n0a50ed5f Improve the update state relate logic for service in ood-daemon service  \r\nc7de6539 Fix: avoid duplicate hole punching process when retry sn call  \r\ne828e7b5 Merge remote-tracking branch 'origin/fix-container-dns'  \r\nf8f4381b Add --startup-mode for ood-daemon startup script  \r\nc7bf12f2 Add startup-mode to ood-daemon service with network verify on system startup  \r\nb9aca01d Add active check in daemon update and state check loop  \r\ndc6aa3d9 Add timeout for repo in ood-daemon service  \r\n20ec54d1 Start the monitor service synchronously on startup  \r\n2e66ff4a Add service_list cache mechanism for meta config repo  \r\nd758151b Remove the local status of meta config repo in ood-daemon service  \r\nf99caadc Fix: retry sn list when builder not establish in time  \r\nb143379f Integrate surf requestor into shared stack  \r\n7eed812f App-tool and app-tool-ex return error correctly  \r\n09f79e9a Remove redundant service requestors constructor  \r\ncd8588de Merge remote-tracking branch 'origin/75-add-de-initialization-mechanism-for-sharedobjectstack' into main  \r\nf5873108 Add surf based requestor  \r\n889d7f81 Adjust the file directory structure of requestsors in cyfs-lib  \r\ne7e9781e Fix some compile errors and warnings  \r\n3aa50d32 Remove the useless base project  \r\n4de7e33d Add app-manager.toml config file support to ood-installer tool  \r\n9317c01d Remove the useless old configuration of acl.toml  \r\n5af28985 Improve the error status of build relate tasks  \r\na762fecf Merge branch 'fix-container-dns' into beta  \r\nb3231559 Fix compile  \r\n832e7a20 Fix container dns: when resolv contain 127.0.0.53, mount the systemd resolv file instead  \r\nb2471088 Fix container dns, when resolv contain 127.0.0.53  \r\nbde55b1a Merge branch 'main' into beta  \r\n4dd330fe Merge branch 'main' into beta  \r\n35cabb3f Merge branch 'main' into beta  \r\nbd9326c9 File upload tool only support windows & mac for now.  \r\n01a46434 Open upload tool with \"open\" cmd on Mac  \r\nb45d377f Fix：ping client doesn't update local device  \r\nb36e728e Fix：ping client doesn't update local device  \r\nd9bd6698 Remove handler and event manager's none mode  \r\n980b5392 Add some field compatibility with the old version's data on new db format  \r\n6541571a Fix: pannic on time escape of call session  \r\nc0ceda78 Improve ws session and manager stop-related timing logic  \r\nf30cc9c8 Fix: some warning with while let  \r\n473e56d6 Add delayed start mechanism for router handler and events  \r\n74e30500 Fix: downloading speed/progress for chunk_list/file task use percent  \r\n172c5c9e Add shared stack stop test case  \r\nd670b458 Improve ws and event manager stop strategy  \r\n5841a4fb Improve ws session and ws client stop strategy  \r\nb62c204a Refactor ws session related logic and improve packet parser logic  \r\n706f06e6 Add stop method to shared stack with requestors  \r\nb45ddcf1 Enable none mode for handler and event system in shared stack  \r\na1d67489 Optimize the use of requestor by the service component and adopt the shared mode  \r\n6acc40fa Remove http handler support for shared stack  \r\n5c3abc42 Add stop method to handler and event manager  \r\nb24935d7 Add stop method for ws client  \r\n6f55517f Publish new cargo packages  \r\n8c933ffc Fix cyfs-util publish error  \r\nbf75d29e Bump cargo packages version  \r\nbce2a745 Merge branch 'main' into beta  \r\nacbd636a Refactory: Add track chunk method option to publish dir/file methods  \r\na022c2cc Fix the bug that search context will enter an infinite loop  \r\na8a57c27 Improve the result of router get_object with flash flags is true  \r\n9f3d4e8d Fix the bug for decode context path param without fix  \r\n4236102e Add router support for group relate methods Add target check for publish_file method  \r\n3d758fcd Merge branch 'main' into beta  \r\n0843bbba Fix container dns: when resolv contain 127.0.0.53, mount the systemd resolv file instead (#87)  \r\n387362a2 Rebase: rebase to 74-integrate-bdt-task-context-and-group  \r\n8bdf227b Refactory: impl trans api for close upload group  \r\n18ed9311 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n3f52efd9 Impl: cancel task with user defined error  \r\n9627d57a Fix: download task progress/speed  \r\ne0292e40 Fix: download task progress/speed  \r\naddd1976 Refactory: impl trans api for close upload group  \r\ndcb4395e Refactory: impl trans api for upload group  \r\ndb6750fd Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n9f10434a Fix: reserve or recycle channels when all reference released  \r\n3ffb8c7e Refactor the file task and chunk task and use a consistent impls at the lower layer  \r\n603b5377 Impl: cancel task with user defined error  \r\ne66ab510 Fix: download task progress/speed  \r\n538a7111 Rebase: rebase to 74-integrate-bdt-task-context-and-group  \r\nf720dac7 Refactory: impl trans api for close upload group  \r\na3d86db0 Refactory: impl trans api for upload group  \r\n31a93c96 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\nf2287d89 Fix query_tasks error and add some logs for task  \r\n8ed9f7f2 Sync context manager modifications with bdt  \r\n7d6ceaa8 Refactor the context state session manager with source and chunk as unique index  \r\n50fb0345 Refactor the download task to better support state switching and task release  \r\na9fe0654 Fix the read logic error for SharedMemChunk  \r\n2f89e98d Refactory: change context update_at to async function  \r\nf9bbc140 Refactory: chunk downloader triggers context's on_drain when all existing sources tried  \r\n4643e4d5 Refactory: add update at property for download context  \r\nda234ea1 Fix: reserve or recycle channels when all reference released  \r\na63f74ea Router handler support empty string as filter and will treat as none  \r\n5475581f Improve the local file & chunk writers logs  \r\n3758c0a0 Refactor the file task and chunk task and use a consistent impls at the lower layer  \r\n680f18e2 Add chunk type support for verify_file_task  \r\nf237b25b Add state manager with context for ndn task to cancel task on source error  \r\nd46a8abb Refactory: add method on_drain for download context  \r\nb88929fd Impl: cancel task with user defined error  \r\n81c297f0 Sync test cases with interface modification  \r\n9ead4762 Add access support for build_dir_from_object_map source object's access  \r\n078811fa Add get_object_map_ex with access field return for object_map relate cache  \r\n2e1d1924 Add access param support for publish_file and build_file relate methods  \r\neb62b863 Add access support to put_object_map relate methods  \r\ndd1caba5 Add some logs for task manager  \r\n2b843a47 Fix: download task progress/speed  \r\ndb13d228 Improve some logs output  \r\nf00b77c2 Add from_str support for access string  \r\n7c92e607 Add alias for trans output requests  \r\nc08c3e36 Improve the log and error codes for local file relate codes  \r\n7821234f Use insert_chunk instead of update_chunk_state for chunk state updater  \r\n91f0177a Improve insert_chunk logic with update state when already exists for ndc module  \r\nddd8f8e6 Improve some logs output for ndn relate codes  \r\n4f637a9d Refactory: interest reponse upload field tokens  \r\n1c12c499 Fix: download task finish directly when total length is zero  \r\na43ef9db Fix: download task progress/speed  \r\ne94e9560 Fix: download task progress/speed  \r\n307c10b5 Refactory: impl trans api for close upload group  \r\na9071c13 Refactory: impl trans api for upload group  \r\n763791ba Refactory: upload handler with group_path filter; upload handler response with upload from path  \r\n96603e3c Refactory: impl download task progress  \r\n191497e7 Fix: finish download leaf task  \r\n311aba18 Refactory: upload task group cancel/close  \r\n38d8d707 Refactory: Add logic leaf download task  \r\nf0141ccc Refactory: chunk downloader send interest with group_path field  \r\n6291029a Refactory: chunk downloader not mergable  \r\n1684b91f Fix: pannic on udp call  \r\n0cf29489 Merge branch 'main' into bdt-beta  \r\n5bd73033 Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\n7805227c Merge branch '74-integrate-bdt-task-context-and-group' into bdt-beta  \r\na4dbe34f Merge branch '56-cyfs-stack-support-no-sn-online' into bdt-beta  \r\n8611caff Fix: add log for ping clients  \r\n71af78d7 Merge branch '56-cyfs-stack-support-no-sn-online' into bdt-beta  \r\n7a1d4b82 Merge branch '56-cyfs-stack-support-no-sn-online' into bdt-beta  \r\n5540f89e Fix: the status of udp stream  \r\ne5307fac Fix: cc loss bytes in stream write  \r\n229dbc6a Add reset_sn_list() function in Stack's ineterface.  \r\nb469a288 Upload get-nearest SN Server in client call. The build-tunnel-params's remote-sn is priority over get-nearest sn-list.  \r\na564d9ee Merge branch 'cyfs-bdt-task-group-impl' into bdt-beta  \r\n  \r\n## [1.0.0.713] -- 2023/2/11  \r\nab8a2a6c Fix app-manager compile error  \r\ncd7eb6b4 Cyfs Monitor restore case interval time after success  \r\n7a03fdb3 Add noc test cases  \r\nbb596b85 Fix the reserved names as blob and chunk dir names's bug on windows for the missing part  \r\n20d14f19 Print warning when decapp missing status or stop scripts  \r\n  \r\n## [1.0.0.711] -- 2023/2/11  \r\n2c798622 Fix: package enter write closed state correctly  \r\nbe780df7 Stream shutdown success at closed state  \r\n21aef793 Create a directory if it does not exist when downloading to a local file  \r\nb6b7e7f8 Improve cyfs-stack's control strategy for task manager resume_task  \r\nc0f775cc Fix: fix reset key logic  \r\nc90f6ae9 Panic manager supports multiple bug reporters  \r\n07f2717d Add dingtalk_bug_report method to PanicBuilder for external use  \r\ndb4acc4b Optimize some logs output  \r\nfb13f654 Add init-ood-daemon param to ood-installer  \r\n8f8e88c2 Remove cyfs-bdt's dependence on os-id lib  \r\nc05e88b7 Improve the ndn request logs output  \r\n7e0c03b0 Add req_path suport to front o protocol for acl  \r\ne3d042a0 Send start notify when cyfs-monitor started  \r\n2b3a433e Improve the problem that the front r protocol cannot correctly handle data req_path for acl  \r\n11e6ed60 Use search instead of get for device in context  \r\n06498f24 Add target device prompt info to access reject msg for better debug  \r\n7c753b20 Improve cyfs stack test cases  \r\n851f1a04 Improve some logs output about chunk cache  \r\n7cce9079 Fix: chunk list task download split chunks dumplicatedly  \r\n  \r\n## [1.0.0.709] -- 2023/2/7  \r\n3005944e Improve the problem that the backslash path in Windows format cannot be correctly recognized when the download task processes the local file path on nix system  \r\n0a004af9 Fix: using channel got reserved correctly  \r\n1bfe7b55 Fix: cyfs-monitor report, use sn-online-test to test sn server status  \r\n8aa6a426 impl: log udp socket's recv loop thread os id  \r\na1d30562 Improve some logs output  \r\n4bf5e29c Add seperate sn-online-test program  \r\n82e71892 Fix: cyfs stack resp interest with NotFound if chunk not exists on default  \r\n7af6ce69 Fix: Add some log for dectecting zero speed source  \r\nd593800f Fix: modify resend piece control send time  \r\nb5c41727 Fix: channel ignore estimate request for sequence lost  \r\n21a3cb11 Correct the use of sync mechanism on bdt download context  \r\n42b7029e Bdt acl callback can correctly handle empty referer now  \r\n52709bc8 Changed to auto cancel strategy for ndn task with context param  \r\nacde7c48 Remove complie warning  \r\n6834b67a Fix the bug that the device_list param of trans.create_task cannot correctly find the device object  \r\n4c3370f4 Remove useless ood_resolver field from ndn service relate codes  \r\n  \r\n## [1.0.0.708] -- 2023/2/6  \r\n4e1122df Fix: the status of udp stream  \r\n58c545d7 Improve the handling of non.get_object when the target object cannot be found in (dir or objectmap) + inner_path mode  \r\n78904db7 Switch cyfs-ndc and cyfs-tracker-cache db to use SqliteConnectionHolder  \r\n932f1c61 Add SqliteConnectionHolder for general db connection management Switch cyfs-noc db to use SqliteConnectionHolder  \r\n5f1db008 impl: add a download context strategy to cancel source when zero speed  \r\n044bc59c Fix: ndn timer triggered correctly  \r\nd6bccc0f The read and write mode of Meta db is separated to support read-only in special cases such as disk is full etc  \r\n  \r\n## [1.0.0.707] -- 2023/2/3  \r\n0ac77054 Fix the coding stability problem of Dir about HashMap  \r\n85cdd9cb Change some Mutex to cyfs-debug's checked Mutex in ood-daemon  \r\n5a448ccd Fix the deadlock bug that may be caused by service state detection  \r\n24177f29 Add test cases for config repo in ood-daemon project  \r\n8c7465ea Fix the coding stability problem of AppList and AppLocalStatus about HashMap  \r\n47d820ae Add sort by name strategy for device-config.toml  \r\ndf39550f Fix the init error of trans store when the db dir is missing  \r\nbad1a48d Add inner path support for SingleOpEnvStub  \r\ncec8822c Add inner_path support for single_op_env.load method  \r\n26c68baa Fix some warning and add some comments  \r\ndc3b6e74 Update cyfs-bdt-ext deps  \r\ne977dcc9 Move LocalDeviceManager from cyfs-stack-loader to cyfs-util Remove the dependency on cyfs-stack-loader of ood-daemon and ood-installer  \r\nb09291cb Add stop_all support to stop all the services for ood-daemon  \r\ne031b4b5 Remove useless codes in cyfs-stack project  \r\nefb2431c Merge remote-tracking branch 'origin/92-more-convenient-and-suitable-to-use-cyfs-bdt' into main  \r\n170eedcf Move group and data relate codes to cyfs-bdt-ext project  \r\n259c46c4 Switched cyfs-stack to rely on cyfs-bdt-ext  \r\n965803d5 Move relate components to cyfs-bdt-ext project  \r\n00f5b35b Add cyfs-bdt-ext project  \r\n50036402 Add uptime and boot_time into get_system_info  \r\na166c72d Fix: correctly wait dapp process  \r\n20ddf1d0 Add total trans bytes field in get_system_info Added network card deduplication in some environments  \r\nec08c584 Publish new cargo packages  \r\nb6db6f9b Fix cyfs-util publish error  \r\ncd204231 Bump cargo packages version  \r\ncd120a75 Fix: retry sn list when offline  \r\n338c31b8 Improve ndn test case with get_data  \r\n9ee1a6d4 Improve the resp's return logic of get_data with error prompt  \r\n87b0693e Use of http requestor for get_data and put_data methods as default  \r\n6f4d47a0 Error of reading resp is returned correctly in ws mode  \r\n114c040a Merge remote-tracking branch 'origin/main' into main  \r\na5c5da0e Sync projects for trans and stack object relate apis's changes  \r\nb51738f3 Fix a compile error with requestor config and some warnings  \r\nd7950257 Fix: trigger chunk downloader's on_drain method  \r\n95abf250 Merge remote-tracking branch 'origin/80-add-surf-based-http-requestor' into main  \r\nfd22bdec Add some logs  \r\n4a459fd3 Add serialization support for storage base on global state  \r\n068cde9a Add log for named-data-client chunk reading  \r\ncd0f3c5f Fix a compile error  \r\nab7cf9e1 Merge branch '74-integrate-bdt-task-context-and-group'  \r\n63a37de6 Improve ood-daemon's upgrade detection and restart logic  \r\n6850633e Add host mode support to browser sanbox  \r\nd4d2639d Improve the error status of build relate tasks  \r\n7aa93795 Fix the bug that search context will enter an infinite loop  \r\n3ff1412f Improve the result of router get_object with flash flags is true  \r\n1ff3ff2e Fix the bug for decode context path param without fix  \r\n6bd563c9 Integrate surf requestor into shared stack  \r\ndc6d5ebb Remove redundant service requestors constructor  \r\n066ebd0e Add surf based requestor  \r\n066fe787 Also check app exclude list when install or start app  \r\n32b62e13 Adjust the file directory structure of requestsors in cyfs-lib  \r\n4ed6ddd2 Merge pull request #88 from buckyos/fix-container-dns  \r\n7404ab2e Merge branch 'fix-container-dns' into beta  \r\n93c35af4 Add router support for group relate methods Add target check for publish_file method  \r\n647b53ba Fix query_tasks error and add some logs for task  \r\n37c9bd9c Sync context manager modifications with bdt  \r\n78dd780c Refactor the context state session manager with source and chunk as unique index  \r\nf05bcd8b Refactor the download task to better support state switching and task release  \r\nc028b5bc Fix the read logic error for SharedMemChunk  \r\nf50bf84b Refactory: change context update_at to async function  \r\n7a2582f6 Refactory: chunk downloader triggers context's on_drain when all existing sources tried  \r\n475de4ad Refactory: add update at property for download context  \r\nd0200673 Fix: reserve or recycle channels when all reference released  \r\neda71af7 Ood-installer support only start ood-daemon  \r\na491c000 Fix AppManager startup param  \r\nd2fa72e0 Fix AppManager config path, load config after log init  \r\n409c38f9 Router handler support empty string as filter and will treat as none  \r\n51d8dc8f Mixed the usage of different requestor config for zone simulator stacks  \r\n70e1e833 Add shared stack cache logic to zone simulator  \r\n37cae961 Remove shared stack support and cache from cyfs-stack-loader  \r\neb77a092 Improve open shared stack relate logic and add requestor config params  \r\n00b8cf65 Improve the local file & chunk writers logs  \r\ne0f14387 Refactor the file task and chunk task and use a consistent impls at the lower layer  \r\ne138e06c Add chunk type support for verify_file_task  \r\n3fb583e0 Add state manager with context for ndn task to cancel task on source error  \r\n200c8922 Refactory: add method on_drain for download context  \r\n72e2bb30 Impl: cancel task with user defined error  \r\na0413319 Sync test cases with interface modification  \r\n473334df Add access support for build_dir_from_object_map source object's access  \r\n973718a1 Add get_object_map_ex with access field return for object_map relate cache  \r\n4a547ca3 Add access param support for publish_file and build_file relate methods  \r\n78d8f93e Add access support to put_object_map relate methods  \r\n750e65d5 Add some logs for task manager  \r\n58d90843 Fix container dns: when resolv contain 127.0.0.53, mount the systemd resolv file instead  \r\nb398e932 Fix: download task finish directly when total length is zero  \r\n2b415e37 Fix: download task progress/speed  \r\n54965e6c Improve some logs output  \r\nf62cb4df Refactory: impl download task progress  \r\nbbec1935 Fix: finish download leaf task  \r\nfd230411 Refactory: upload task group cancel/close  \r\n4c2f95b4 Refactory: Add logic leaf download task  \r\neab160ec Refactory: chunk downloader send interest with group_path field  \r\n50db1d5c Refactory: chunk downloader not mergable  \r\n062bf19e Add from_str support for access string  \r\n2243fa7b Add alias for trans output requests  \r\nebb67790 Improve the log and error codes for local file relate codes  \r\nff7dd4c1 Use insert_chunk instead of update_chunk_state for chunk state updater  \r\n0525944c Improve insert_chunk logic with update state when already exists for ndc module  \r\nfc2d8b18 Improve some logs output for ndn relate codes  \r\n128a7cc5 Fix: some warning with while let  \r\nf1890ba3 Add chunk exists check for ndn get_data cache mechanism  \r\n18c94cf2 Improve some error process in std::io poll relate methods  \r\n06f03a6a Improve the conversion between BuckyError and std::io::Error  \r\ne801b468 Improve put_chunk for local chunk cache  \r\n23a61570 Add cache mechanism to ndn get_data  \r\n9055ec35 Refactory: add group_path field to interest packet  \r\n1093046b Add range support for ndn get_data with chunk  \r\ne3797e31 Add group test case  \r\n5061b962 Refactory: poll split read  \r\ne700a047 Use {dec_id}/ as default group when no group param is specified  \r\n14339d1a Remove dec_id field of context object Add global context support for context  \r\n6922dfa0 Put_context is adjusted to depend on context manager Add access field for put_context request  \r\n968e5e6d Fix context path fix error & add test case  \r\nb70f7990 Fix error when context manager parse context string with object_id  \r\nde18c885 Add ndn context test cases Fix compile errors of trans relate methods  \r\n8687e171 Fix ndn referer param encode error  \r\nbe8f06b3 Add debug output for changed of context  \r\nabcc02d8 Remove context_id field for query tasks request  \r\n21421faf Fix: build error for cyfs-stack  \r\n4f62dbad Fix: build error for cyfs-stack  \r\n6d6ccad3 Improve resp process for trans & sync api methods  \r\n3eb6ca28 Refactor put_context and get_context methods for trans  \r\n5ad7e7f1 Improve the clone_from_slice method for ObjectId  \r\n9ece347b Refactor context support for trans  \r\n7340db07 Refactor ndn api target related codes to support context  \r\n458ad1f6 Refactor context to support target mode  \r\n9ea97744 Add context field for ndn get_data request  \r\n4a0aa1b6 Adapt to bdt new context relate params and types  \r\nb51eed19 Add cache and path search category to context manager  \r\nf0427489 Add dec_id field for context object, and add strict limit to context_path field  \r\n3441fdb0 Refactory: rename ChunkEncodeDesc => ChunkCodecDesc; declare context.source_of as async function;  \r\n04db0d46 Add context holder generator for context manager  \r\n6081a426 Add context manager and holder core impls  \r\n23eb4af0 Refactor the TransContext core object  \r\n73d7dcb1 Add dec limit for trans task group relate methods  \r\nabda8cfc Improve the param of TransOutputProcessor methods  \r\na3678c4e Improve the trans.query_tasks request path  \r\n0fb35dbb Add task group relate methods for trans api  \r\nc78b3568 Add a common impl of serde code for JsonCodec  \r\n70366e60 Refactor get_task_state method's response to add group support  \r\n2d335eff Add group field for DownloadTaskState  \r\nba606857 Add task group for ndn get_data resp  \r\nbbb16276 Improve the url query parse for referer and group params  \r\n5fae309c Add task group support for NDN/Trans modules  \r\n71414249 Rename the task range reader  \r\na5107424 Optimize the ChunkWriter write method  \r\nb5ba81fb DirLoader switch to reply on chunk_store_reader instead of local_data_manager  \r\n89df6fcc NDN local_data_manager's get relate impls switch to reply on target_data_manager instead  \r\nbdfabe75 Fix: split read test  \r\n12610350 Fix: cyfs stack ndn event apply to new bdt ndn interface  \r\n816e7f6b Refactor the param model of ndc/tracker/chunk_manager  \r\na397bd52 Adapt to bdt's new download stream model  \r\n2d5eb444 Impl: split read for download task reader  \r\n6cd9410e Impl: Add Single source context  \r\n95c8554a Merge branch 'cyfs-bdt-task-group-impl' into 74-integrate-bdt-task-context-and-group  \r\n5a1f23af Merge branch 'cyfs-bdt-task-group-impl' into 74-integrate-bdt-task-context-and-group  \r\n6111f439 Fix: Release chunk cache and downloader with weak reference  \r\nffc56abe Refactory：create seperate downloader when context is not mergable  \r\n1ff8388e Refactory： add loading state to chunk cache  \r\n8e3590a2 Refactory: split chunk downloader from chunk cache  \r\nf2a3672f Fix: call cc on_loss with error loss count value  \r\n1dd8bae3 Fix: Donwload task path logic  \r\n4f3a92c4 Fix: return download task speed  \r\n371792c0 Fix: use BuckyError instead of BuckyErrorCode in some state  \r\n167664c9 Fix: add chunk_list_writer method to TrackedChunkStore  \r\nb4a67578 Merge branch 'cyfs-bdt-task-group-impl' into bdt-beta  \r\n2e42dae0 Fix: stream chunk encoder always read cache with sync reader  \r\nbb954d5f Impl: Unit test for upload from path  \r\n8b7aa861 Refactory: Add start_upload_from_cache method  \r\n81014478 Refactory: Move ndn default event handler to utils  \r\ndef00192 Refactory: remove default ndc/tracker from bdt stack  \r\n67f29271 Refactory: Taskgroup makesure path  \r\n896b39ba Impl: File raw cache for chunk  \r\nbc043adc In SN statistic, add endpoint's statistic.  \r\necb58708 Call sn support MTU_LARGE  \r\n2cf4567b Add Mutlity SN。  \r\n2321e02c Fix: tcp tunnel send piece buffer with mtu  \r\n2ac27f33 Refactory: add DownloadContext trait  \r\n6832e73e Refactory: add DownloadContext trait  \r\n330a8940 Support large mtu and question&answer  \r\ne03962a7 Merge remote-tracking branch 'origin/bdt-beta' into bdt-beta  \r\nd1cc885e Merge remote-tracking branch 'origin/bdt-beta' into bdt-beta  \r\n06d89662 Fix: chunk list task reader  \r\nf4d20813 Fix: close/finish download task group  \r\n5bd2ec64 Fix: task.reader return unexpected not found error  \r\n7d2e6f6f Fix:panic on download reader  \r\nde837c47 Refactory: write chunk from task.reader  \r\n677e444b Refactory: Reader of download task  \r\nc0a479e3 Refactory: Upload session wait establish  \r\n22e9cc0f Refactory: download/upload differs in tcp/udp tunnel  \r\n638a8fc4 Refactory: download/upload differs in tcp/udp tunnel  \r\n23251581 Fix: bind tunnel with upload/download session  \r\n70292ce4 Fix： cache packages in tunnel.build_send, send them when tunnel actived  \r\n197e241a Merge branch 'ndn-cache' into bdt-beta  \r\n51d5b714 Merge branch 'ndn-cache' into bdt-beta  \r\nea1dae46 Merge remote-tracking branch 'origin/bdt-beta' into bdt-beta  \r\n16d25537 Merge branch 'ndn-cache' into bdt-beta  \r\nc6bf684a log decrypt aeskey error info  \r\n79bceeea Fix: chunk list task reader  \r\nbc380433 Fix: close/finish download task group  \r\n61714a7b Fix: task.reader return unexpected not found error  \r\n97c955d7 Fix:panic on download reader  \r\n1e95e4da Refactory: write chunk from task.reader  \r\n9ad964fb Refactory: Reader of download task  \r\nd8bf33a0 Refactory: Upload session wait establish  \r\n06f3affc Refactory: download/upload differs in tcp/udp tunnel  \r\n2ef44f99 Refactory: download/upload differs in tcp/udp tunnel  \r\n8519534c Fix: bind tunnel with upload/download session  \r\nb2925e95 Fix： cache packages in tunnel.build_send, send them when tunnel actived  \r\n7235f3dc Merge branch 'ndn-cache' into bdt-beta  \r\n04e2a5a0 Merge branch 'ndn-cache' into bdt-beta  \r\neaa0b650 Merge remote-tracking branch 'origin/bdt-beta' into bdt-beta  \r\n3d711110 Merge branch 'ndn-cache' into bdt-beta  \r\n8c8b6039 log decrypt aeskey error info  \r\n43ccf15c Impl: Cancel download chunk task  \r\n6efb6eca Test: download from uploader test ok  \r\n439635f5 Merge branch 'ndn-cache' into bdt-beta  \r\n0e08b03a Refactory: download/upload session support reverse step stream  \r\n96ffaef7 Refactory: impl download/upload session with new cache  \r\n292cf4ae Refactory: impl download/upload session with new cache  \r\nd38e31ba Refactory: impl download/upload session with new cache  \r\n07b40c65 Refactory: impl download/upload session with new cache  \r\nd525a649 Refactory: implement memory raw cache  \r\ne07a4b0e Refactory: chunk downloader with stream cache  \r\n  \r\n## [1.0.0.703] -- 2023/1/13  \r\ncfd654ac Temporarily disable all ipv6 addresses for bdt stack  \r\n  \r\n## [1.0.0.702] -- 2023/1/12  \r\nbb72348e App Manager AppSource logic  \r\n413edbad AppManager supports more detailed configuration  \r\n7b0704ec WIP： add new config for app manager  \r\n2eb6dce1 Modify the way to start file uploader  \r\n6076a69f Improve the update state relate logic for service in ood-daemon service  \r\n44fbe781 Fix: avoid duplicate hole punching process when retry sn call  \r\nea48e120 Merge remote-tracking branch 'origin/fix-container-dns'  \r\n56f22e21 Add --startup-mode for ood-daemon startup script  \r\ncf1f363c Add startup-mode to ood-daemon service with network verify on system startup  \r\n56b755e6 Add active check in daemon update and state check loop  \r\nb7943988 Fix compile  \r\n2b355960 Fix container dns, when resolv contain 127.0.0.53  \r\nd6b5bb06 Add timeout for repo in ood-daemon service  \r\n628649f0 Start the monitor service synchronously on startup  \r\nde1e9960 Add service_list cache mechanism for meta config repo  \r\na84bfafe Remove the local status of meta config repo in ood-daemon service  \r\na807f171 Fix: retry sn list when builder not establish in time  \r\n5639e004 App-tool and app-tool-ex return error correctly  \r\n26b234cb Merge remote-tracking branch 'origin/75-add-de-initialization-mechanism-for-sharedobjectstack' into main  \r\nf136c262 Fix some compile errors and warnings  \r\na4ece723 Remove the useless base project  \r\n2d216910 Add app-manager.toml config file support to ood-installer tool  \r\ne111f3b2 Remove the useless old configuration of acl.toml  \r\neae9d604 Merge branch 'main' into beta  \r\nd5463188 Merge branch 'main' into beta  \r\nb34744c3 Merge branch 'main' into beta  \r\n180ae196 Remove handler and event manager's none mode  \r\nd10953b2 Improve ws session and manager stop-related timing logic  \r\n8b84ef3f Add delayed start mechanism for router handler and events  \r\nc13cc029 Add shared stack stop test case  \r\nfaf04a09 Improve ws and event manager stop strategy  \r\nc5d02ab9 Improve ws session and ws client stop strategy  \r\n007247e2 Refactor ws session related logic and improve packet parser logic  \r\nb0463c83 Add stop method to shared stack with requestors  \r\n1b80f43a Enable none mode for handler and event system in shared stack  \r\n8ec0888b Optimize the use of requestor by the service component and adopt the shared mode  \r\nd9d69051 Remove http handler support for shared stack  \r\nbb0e005e Add stop method to handler and event manager  \r\n1a2ada09 Add stop method for ws client  \r\n77ea26c6 Fix： cyfs-client correct get sn list from local stack  \r\ne29cd15c Merge branch 'main' into beta  \r\n0bb5dcd7 Sync service list method use the lock for services in ood-daemon  \r\n19b338e6 Improve some logs output  \r\n7e8cb267 Improve cmd status check return value and compare mechanism  \r\nfc800657 Improve the agent check for the browser disable mode  \r\n67a2179e NamedDataClient use init config, use GetData instead of GetDataWithMeta  \r\ne160a62a Improve the get_data logic of chunk_manager  \r\n9f7263bc Add memory cache for chunk_manager get_data_with_meta Improve the get_chunk_data resp body mechanism and remove the chunk_id verify temporarily  \r\n270778a9 Fix: stream pool use sn list in device cache  \r\nb1abf319 Fix: ignore sn list in build param's remote desc  \r\nff05f5ff Fix: beta use correct built-in sn list  \r\n02fe10ef Fix: Add logs for build params info  \r\n26989db3 Merge branch 'main' into beta  \r\n440b90f9 Merge branch 'main' into beta  \r\nc377c61f Merge branch 'main' into beta  \r\nb0fe871d Merge branch 'main' into beta  \r\nef8a124a Merge branch 'main' into beta  \r\n71e9e52b Merge branch 'main' into beta  \r\n2fa6be68 Fix: disable cyfs_debug::mutex check in some fraquently called functions  \r\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.6025390625,
          "content": "# Changelog\r\nThis is OOD Service Changelog, it lists all published beta ood service versions\r\n\r\nservice version can be found in service startup log\r\nYou can use Ctrl+F to search for specific service version\r\n\r\n## [Unreleased]\r\n\r\n## [1.1.1.82] - 2023-04-15\r\n### Improvements:\r\nOptimize bdt uptime logic when no udp endpoint is available  \r\nProtocol stack optimization guessing mime logic  \r\nProtocol stack optimization and DecApp related caching logic  \r\nIssue #156: AppManager optimizes the uninstall logic of DecApp  \r\nIssue #165, #168: Optimization of AppManager's local repo logic  \r\nIssue #170: Optimization of AppManager's state repair logic at startup  \r\nIssue #196: The -overwrite parameter of ood-installer can control whether to overwrite the original system-config.toml file  \r\nIssue #201: Optimize the hash detection logic of the protocol stack chunk reader  \r\n \r\n### Fixes:\r\nIssue #157: AppManager may not stop the timeout DecApp installation command correctly under Windows  \r\nFix the service execution problem of AppManager in docker mode.  \r\nFixed a status problem when AppManager reports decapp to ood-daemon.  \r\nFixed some problems related to NDN chunk.  \r\nBdt fixed multiple panic  \r\nIssue #183, #186, #187: Fixed multiple panics in the protocol stack  \r\nIssue #185: Use cyfs-async-h1 to replace the original async-h1 to avoid panic caused by invalid http header  \r\nIssue #198: AppManager does not handle the timeout of install command correctly in docker mode.  \r\nFix: AppManager incorrectly set the App status when it received the Install command, resulting in the inability to retry the installation logic after reboot  "
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.296875,
          "content": "BSD 2-Clause License\n\nCopyright (c) 2022, CYFS Core Dev Team\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.6357421875,
          "content": "![CYFS Logo](./doc/logos/CYFS_logo.png)\n[![cyfs-lib-ver](https://img.shields.io/crates/v/cyfs-lib?label=cyfs-lib&style=plastic)](https://crates.io/crates/cyfs-lib)\n![rust](https://img.shields.io/badge/rustc-1.63%2B-green?style=plastic)\n![liscence](https://img.shields.io/crates/l/cyfs-base?style=plastic)\n![Downloads](https://img.shields.io/crates/d/cyfs-base?style=plastic)\n\n****CYFS：Next Generation Protocol Family to Build Web3****    \n+ CYFS is short for CYberFileSystem\n+ CYFS Website: [https://www.cyfs.com/](https://www.cyfs.com), [cyfs://cyfs/index](cyfs://cyfs/index)  \n+ Discord：[https://discord.gg/dXDxjXTEjT](https://discord.gg/dXDxjXTEjT)   \n+ CYFS White Paper(Coming soon)  \n+ Language: [中文](./README.zh-CN.md)\n\n# Introduce\n\nCYFS is the next-generation technology to build real Web3 by upgrading the basic protocol of Web (TCP/IP+DNS+HTTP). It has a subversive architectural design that everyone brings  their own OOD (Owner Online Device) to form a truly decentralized network.\n \nWe define Web3 as follows:\n- Web3 allows everyone to have rights to save data on the Internet, publish data, and get income from data.\n- Web3's Internet applications are completely decentralized, developers have the right to publish and update applications, and users have the right to use them permanently.\n- Web3's data has been determined ownership when generated, and use Trust Link to link together to form the 'data-ownership network', which is the future semantic web that allows data to show its true value.\n \nAfter 6 years of research and development, we have achieved the above goals on the `CYFS testnet`. For the detailed design of the theory and practice of CYFS, please refer to the relevant documents. Open source of CYFS is an important milestone for CYFS, marking that its design has been basically stable and has entered an open community-driven R&D stage. We look forward to having more people join us. We need your passion and strength. Let’s build  Web3  that belongs to ourselves together.    \n\nThis is the repository of the CYFS protocol stack on Github. Although we have built a decentralized GitHub (CodeDAO) on the CYFS testnet to realize the `decentralized bootstrapping` of CYFS. But before the CYFS mainnet online, we still decided to stay a little longer in WEB2.0 and use this repository as the main community-driven R&D base. After the CYFS mainnet goes online, the entire Repo will move to CodeDAO.\n \nThis repository only contains the implementation of the CYFS core system. It does not include the important basic software of the CYFS ecosystem: CyberChat and CYFS Browser, nor does it include SDK implementations for developers of different languages. The following is a list of other important open source projects in the CYFS ecosystem (continuously updated)\n \n- [cyfs-ts-sdk](https://github.com/buckyos/cyfs-ts-sdk): cyfs-sdk based on typescript to help typescript developers build Web3 DEC apps.\n- CYFS Transmission Lab: A system for the network lab for testing the CYFS protocol (Coming soon)\n- CyberChat: CYFS wallet, manage DID, OOD, DECApp and data assets (Coming soon)\n- CYFS Browser: A browser based on the Chrome kernel that supports the `cyfs://` protocol (https://github.com/buckyos/cyfs-browser)\n- CodeDAO: Decentralized Github with CYFS (Coming soon)\n\n# Background\n![CYFS Architecture](doc/zh-CN/image/CYFS%20Architecture.png)\n\nThe above is the overall architecture diagram of CYFS, which can help to establish a macro understanding of the design of CYFS. The core design of CYFS can be decomposed into the following parts\n\n- Design of NamedObject and double-section construction of `cyfs://o/$ownerid/$objid` (Object Link).\n- The BDT protocol improves TCP/IP: the network protocol evolves from address-oriented to trusted identity-oriented.\n- MetaChain upgrades DNS, realizes decentralized addressing, and realizes Data is Account.\n- The Owner deploys its own server OOD (Owner Online Device) on the network, which supports the decentralized accessibility of cyfs://\n- Design proofs of storage and proofs of service based on the `game-based consensus` theory of `dispute before going on the chain`, and realize the decentralized high reliability and high availability of cyfs://\n- The off-chain delivery of computing resources is separated from on-chain matching, and an evolvable economic model is used to build decentralized shared cloud computing\n- Data property rights analysis based on the input and results of trusted computing, to realize the evolution from on-chain smart contracts to off-chain Data Exchage Contract (DEC).\n- The Service of Web3 DEC App is installed on everyone's OOD, realizing the decentralization of application services\n\nWhat key problems are these designs designed to solve? (We believe that \"finding the right problem is half done~\") You can read \"[CYFS Architecture](./doc/en/Introduction%20to%20CYFS%20Protocol.md)\" and \"CYFS Whitepaper\" (coming soon), the amount of content comparison Great, you can understand it with practice~\n\n## Start your Web3 journey with “Hello CYFS”\nWe strongly recommend that you read the \"Hello CYFS\" series of articles in full to get a complete initial experience of CYFS (the whole process can be completed within 1 hour):\n1. [\"Compile and deploy DIY-OOD\"](doc/en/Hello_CYFS/0.%20Compile%20and%20deploy%20DIY%20OOD.md)\n2. [\"Create Your DID\"](doc/en/Hello_CYFS/1.%20Create%20your%20DID.md)\n3. [\"Publish File and Download\"](doc/en/Hello_CYFS/2.%20Publish%20the%20file%20and%20download%20it.md)\n4. [\"Tips your friend\"](doc/en/Hello_CYFS/3.%20Tips%20your%20friend.md)\n5. [\"Publish Website and View\"](doc/en/Hello_CYFS/4.%20Publish%20the%20web3%20site%20and%20view%20it.md)\n\nYou can also use the following fast progress to have a first experience of \"doing nothing without understand and save time\"~\n\n## Advance CYFS DEC App develpe tutorial is online\n[\"Decentralized message board development\"](doc/en/Decentralized_message_board_development/)\n# Quick Start\n\nThe following will build your own Web3 environment by compiling the CYFS source code, and complete the basic experience of Web3 in this environment:\n- Publish a folder to the Web3 world and get a permanent address of cyfs://o/$ownerid/$dirid/index.html which can be accessed by CYFS Browser.\n- Use the `cyfs get` command to download the files in the folder you just published.\n\nNote that this environment is normally not isolated, but can be added to the CYFS network (we have planned 3 networks: nightly, beta, relase, currently only nightly is available), so the following tutorial does not include compiling MetaChain with source code +SN part. If you plan to build a complete system in an independent environment and need to compile and deploy MetaChain super nodes, please read the document \"MetaChain Construction\" (Coming soon).\n\n## Compile\nPrepare an idle Linux host, preferably a VPS, with more than 2G of memory.\nPreparation:\n- Node.js 16 or above\n- rustc 1.63 or above\n\nRun the following command to compile the OOD System.\n\n```shell\ncd ${cyfs_sources_dir}/src\nnpm i\nnode ../scripts/build-standalone.js\n````\nDuring the compilation process of the script, the `${cyfs_root}` folder needs to be created. If the current system or current user does not have permission to create this folder, you need to manually create the `${cyfs_root}` folder in advance, and assign read and write permissions to the current user. (In the official environment, all components and data of the OOD System will be installed to `${cyfs_root}`)\n\n`${cyfs_root}` path:\n- Windows: `c:\\cyfs`\n- MacOS: `~/Library/cyfs`\n- Other systems: `/cyfs`\n\nCompile successfully generates `ood-installer`\n\n## Install the newly compiled OOD System\nBefore installation, you need to prepare the depends:\n- Node.js 16 and above\n- MongoDB 4.4 version, configured to boot, use the default port, no authentication (using SQLite as the object storage engine can not rely on MongoDB, the subsequent installation script will support the selection of the storage engine)\n- The latest version of docker-ce, configured to start at boot\n\nFind the newly compiled ood-installer in the src directory and execute\n````\n./ood-installer --target solo\n````\nAfter a minintes , the installation is complete.\n\n## Activate OOD\nIn order to experience the process, the cli tool is used here to complete the D.I.D creation process. **D.I.D created based on the cli tool can only be used for testing purposes! **\n\n1. Install cyfs-tool: use the command line `npm i -g cyfs-tool-nightly` to install the nightly version of the cyfs-tool tool\n2. Generating sets of identities\n   > Use the command `cyfs desc -s <save_path>` to generate a matching identity file and save it in the save_path directory. If save_path is not specified, it defaults to ~/.cyfs_profile\n3. Bind OOD\n   > After the identity is generated, copy the two files `<save_path>/ood.desc` and `<save_path>/ood.sec` to `${cyfs_root}/etc/desc` on the OOD machine and rename it to `device. desc` and `device.sec`\n4. Bind CYFS-Runtime\n   > After the identity is generated, copy the two files `<save_path>/runtime.desc` and `<save_path>/runtime.sec` to `${cyfs_runtime_root}/etc/desc` on the CYFS browser machine and rename them to ` device.desc` and `device.sec`\n\n`${cyfs_runtime_root}` specific path:\n- Windows: `%appdata%/cyfs`\n- Mac OS: `~/Library/Application Support/cyfs`\n\n## Publish your first Web3 website\n\nFirst prepare the `www` directory of your website, let's first experience publishing static websites to Web3, and follow-up documents for the construction of dynamic websites will be introduced.\n\nuse command\n````\ncyfs upload <dir_path> -e ood -t ood\n````\nAdd the file pointed to by the local <dir_path> to the OOD.\nThe command execution is complete, the local `www` directory has been uploaded to OOD and the unique URL to the Web3.0 website has been generated (the end of the command execution).\nThe link is `cyfs O-Link`, which looks like this `cyfs://o/$ownerid/$objid`, where $objid is the ContentId of the directory.\n\n## Browse the website just released\nUse the command on any machine with cyfs-tool installed\n````\ncyfs get cyfs://o/$ownerid/$objid/index.html\n````\nYou can download the just-released official website.\n\nAny machine with a `cyfs browser` installed can use the cyfs browser to open `cyfs://o/$ownerid/$objid/index.html` and browse the website just released.\nFor the download of `cyfs browser`, see [here](./doc/en/Download.md)\n\n# Code guide\nThrough the above process, you have a basic understanding of the design and use of CYFS. Although the design of CYFS is basically stable, we still have a lot of code to write. We are very eager for your help, but certainly not too much energy to write documentation (details are in the source code~). Here we do a minimalist code introduction, hoping to help you understand the implementation of CYFS faster.\n\nAccording to the architecture, we know that the core of cyfs:// is the construction and acquisition of Object Linke, and the premise of acquisition is to upload data to OOD at least. The process is as follows:\n1. Start the local protocol stack (cyfs-rutnime)\n2. Calculate the hash of all files in the directory locally, and construct a FileObject with the current PeopleId as the Owner\n3. Generate a Map structure (directory structure) locally, and construct a MapObject with the current PeopleId as the Owner,\n   At this time, cyfs:// has been constructed, but the cyfs:// cannot be accessed at this time\n4. Add the above named objects and named data to the local stack\n5. Initiate CYFS PUT operation to OOD: save the MapObject to OOD and set the access permission to public\n6. Let OOD start MapObject Prepare and save a named data on OOD\n7. MapObject Prepare is completed on OOD, cyfs:// can be accessed\n\nThen the process of using `cyfs get` to obtain is as follows:\n\n1. Start the local protocol stack cyfs-runtime\n2. Use the HTTP protocol to initiate an HTTP GET request to cyfs-runtime\n3. cyfs-runtime checks whether the object exists in the local cache\n4. cyfs-runtime initiates a NamedObject query request (the following behaviors are not serial)\n    - 4.1 Query NamedObject from OOD\n    - 4.2 OOD query local, whether NamedObject exists\n    - 4.3 OOD queries MetaChain, whether NamedObject exists\n    - 4.4 OOD queries whether the NamedObject exists on the previous hop device according to the Reference information in get\n    - 4.5 OOD queries the configuration of Object's Owner Zone through MetaChain\n    - 4.6 OOD is configured through Zone, connected to NamedObject's OOD, or connected to NamedObject' Cache, and query NamedObject\n5. After getting the ChunkId, cyfs-runtime calls the Channel interface (NDN semantic interface) of the BDT to request the Chunk\n    - 5.1 For the first, small Chunk, get it directly from the associated OOD\n    - 5.2 For the second Chunk, it will try to get it from the previous hop (Reference OOD)\n    - 5.3 BDT will try to perform multi-source search and multi-source download based on fountain code based on the context information of the application layer\n    - 5.4 The router can identify the Chunk request packets sent by the BDT, intercept and forward them, and further optimize the overall load of the network\n    - 5.5 Only OOD will upload Chunk\n6. When the first Chunk of the FileObject is ready (passed authentication), the HTTP GET request in step 1 starts to return data\n\n(The above process is shown in the figure below)\n![get-from-cyfs](doc/en/image/get-from-cyfs.png)\n\n> For the overall design of the CYFS protocol, please refer to [Introduction to CYFS Protocol.md](doc/en/Introduction%20to%20CYFS%20Protocol.md)\n\nAfter understanding the logic of the above process, you can read the relevant code according to the following guidelines.\n\n## Upload\n1. Start the local protocol stack: [util.ts: create_stack()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/lib/util.ts)\n2. Construct FileObject: [file_recorder.rs: FileRecorder.add_file()](src/component/cyfs-stack/src/trans_api/local/file_recorder.rs)\n3. Construct ObjectMap: [publish_manager.rs: PublishLocalDirTask.publish()](src/component/cyfs-stack/src/trans_api/local/publish_manager.rs)\n4. Add the above Named-Objects and Named-Data to the local protocol stack: [file_recorder.rs: FileRecorder.record_file_chunk_list()](src/component/cyfs-stack/src/trans_api/local/file_recorder.rs)\n5. Initiate a CYFS PUT operation to the OOD: save the MapObject to the OOD and set the access permission to public: [upload.ts: upload_obj()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/actions/upload.ts)\n6. Let OOD start MapObject Prepare and save Named-data(Chunks) on OOD: [upload.ts: run()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/actions/upload.ts)\n\n## Get\n1. Start the local protocol stack: [util.ts: create_stack()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/lib/util.ts)\n2. Initiate an HTTP GET request using the HTTP protocol\n3. cyfs-runtime checks whether the object exists in the local cache\n4. cyfs-runtime initiates NamedObject query requirements (the following behaviors are usually not serial)\n    - 4.1 Query NamedObject from OOD\n    - 4.2 OOD query local, whether NamedObject exists\n    - 4.3 OOD queries MetaChain, whether NamedObject exists\n    - 4.4 OOD queries whether the NamedObject exists on the previous hop device according to the Reference information in GET\n    - 4.5 OOD queries the configuration of Object's Owner Zone through MetaChain\n    - 4.6 OOD is configured through Zone, connected to NamedObject's OOD, or connected to NamedObject' Cache, and query NamedObject\n5. After get the ChunkId, cyfs-runtime calls the Channel interface (NDN semantic interface) of the BDT to request the Chunk\n    - 5.1 For the first and small Chunk, get it directly from the associated OOD\n    - 5.2 For the second Chunk, it will try to get it from the previous-jump (Reference OOD)\n    - 5.3 BDT will try to perform multi-source search and multi-source download based on fountain code based on the context information of the application layer\n    - 5.4 The router can identify the Chunk request packets sent by the BDT, intercept and forward them, and further optimize the overall load of the network\n    - 5.5 Only OOD will upload Chunk\n6. When the first chunk of the FileObject is ready and verified, the HTTP GET request in step 1 starts to return data\n\n# DecApp development practice\nThe following series of articles describes how to implement a message board DecApp based on CYFS. this is a long series of articles detailing the general process of developing a DecApp\n1. [Introduction](./doc/en/Decentralized_message_board_development/1.Introduction.md)\n2. [DEC App basic principle](doc/en/Decentralized_message_board_development/2.DEC_App_basic_principle.md)\n3. [Implement your own message service](doc/en/Decentralized_message_board_development/3.Implement_your_own_message_service.md)\n4. [Run and debug your own message service](doc/en/Decentralized_message_board_development/4.Run_and_debug_your_own_message_service.md)\n5. [Extended reading: Further explanation of the principles and introduction of some tools](doc/en/Decentralized_message_board_development/5.Extended_reading.md)\n6. [Implement the front end](doc/en/Decentralized_message_board_development/6.Implement_the_front_end.md)\n7. [Send it to your friends and understand the CYFS permission system](doc/en/Decentralized_message_board_development/7.Send_it_to_your_friends_and_understand_the_CYFS_permission_system.md)\n8. [Use the emulator to test the app across zones](doc/en/Decentralized_message_board_development/8.Use_the_emulator_to_test_the_app_across%20zones.md)\n9. [Extended reading: Decentralized, trusted data, semantic data, data property rights](doc/en/Decentralized_message_board_development/9.Extended_reading.md)\n10. [Add comments](doc/en/Decentralized_message_board_development/10.Add_comments.md)\n11. [DEC App data security and high availability](doc/en/Decentralized_message_board_development/11.DEC_App_data_security_and_high_availability.md)\n12. [Extended reading: Learn more about data exchange contracts and DAOs](doc/en/Decentralized_message_board_development/12.Extended_reading.md)\n13. [Summary](doc/en/Decentralized_message_board_development/13.%20Summary.md)\n\n# Directory Structure\nYou have learned from the architecture diagram that the project implementation of CYFS is not small. To prevent you from getting lost, this chapter is a small map that will help you get a basic understanding of the CYFS code structure and understand where the key code will be.\n\n- src //source directory, many development commands require this directory to be the current directory for operations\n    - service // contains the code of a series of important executable files, which is a good starting point for reading the code\n        - gateway //nginx of CYFS system, the most important basic service on OOD\n        - cyfs-runtime //CYFS user mode protocol stack implementation, the most common process in development and debugging\n        - ood-daemon //The basic daemon of OOD, keep alive and automatically update other basic services\n        - app-manager //Installation manager of DEC App\n        - chunk-manager // The most primitive and simple thinking and implementation of the concept of CYFS NDN, currently used for the lowest basic services\n        - file-manager // The most primitive and simple thinking and implementation of the concept of CYFS NON, currently used for the lowest-level basic services\n        - cyfs-runtime // The backend of the CYFS protocol stack used by the CYFS browser, based on the standard CYFS protocol stack, provides some functions that are convenient for the browser to use\n    - component\n        - cyfs-base //The basic component shared by all projects, here you can see the implementation details of NamedObject\n        - cyfs-base-meta // MetaChain's base object definition\n        - cyfs-bdt //The implementation of the BDT protocol, be careful of the huge scale when expanding\n        - cyfs-core // Definition of core objects in the CYFS system\n        - cyfs-chunk // CYFS protocol stack supports NDN protocol\n        - cyfs-stack //The implementation of the CYFS protocol should be the largest component in the system\n        - cyfs-meta-lib //Related implementation of MetaChain Client\n        - cyfs-mobile-stack //Encapsulation of CYFS mobile protocol stack\n        - cyfs-noc //NamedObject storage engine implementation (SQLite+MongoDB), which is the component that has the greatest impact on system IO performance\n    - test //Test project, only includes the parts that have been sorted out, the code for a large number of network tests of CYFS is in the CYFS Transmission Lab.\n    -tools //cyfs tools. The design idea of ​​cyfs toolchain is a top-level script and a series of independent gadgets, taking into account the consistency of cli experience and the independence of project construction\n- scripts //Compile script directory, we use js script to replace makefile\n- doc //document directory\n\n# Roadmap\nCYFS is currently in the state of dev_testnet (nightly), in this state, all components will be affected by the daily build results by default, and we do not consider how the data structure is backward compatible, and the protection of data security is not enough. whole. This version should only be used for development testing and should not be used in production production.\n\nOur next goal is to complete the launch of the testnet (beta). Relatively nightly, beta will specify strict release standards, and will make the data structure as backward compatible as possible, and can confidently protect users' data security. The stability of beta will be able to support the release of beta products~ The main difference from the release version is assets is fake assets, and there are gaps in stability and performance.\n\nWe hope to launch the CYFS mainnet within 18 months. There is no definite launch time for the CYFS mainnet. As long as the asset security, stability and performance of the testnet reach the preset goals, we will enter the release channel of the mainnet.\n\nWelcome to follow [CYFS-Stack & Services](https://github.com/orgs/buckyos/projects/7) to learn more about CYFS Roadmap~\n\n# Contributing\nThe dev_testnet of CYFS is designed and implemented by Shenzhen BuckyCloud. The core team of Shenzhen BuckyCloud is inherited from the original Xunlei(NASQ:XNET) infrastructure R&D team. We have rich experience in network protocol and infrastructure development, as well as super-large-scale P2P network design and tuning. experience. After CYFS is open source, BuckyCloud has completed its key historical mission. Now we prefer to call ourselves CYFS CoreDevTeam. In the future, it will be an open team organized based on DAO. The main responsibility is to promote the continuous research and development of CYFS. We welcome all engineers to join:\n\n- If you have rich experience in network protocol development, at this moment we need you to help us improve the core protocol together\n- If you are very familiar with open source culture and open source community, you can join decentralized github (CodeDAO) with us\n- If you have rich experience in blockchain development, MetaChain, which is waiting to be rewritten at the moment, urgently needs you~ We already have an ambitious design, but over the years we have focused on off-chain protocol development, block-chain development resource is very limited\n- If your main language does not include typescript and rust, you can help us build SDK for other languages\n- If you are very good at the product, you can help us improve the basic experience of CYFS, or create a real Web3 Startup on CodeDAO\n- Of course, everyone is welcome to submit bugs, suggestions for product improvement, and help us revise documents.... We guarantee that your contributions will be remembered\n\nWe are designing a DAO-NFT-based contribution record system. When this Repo is move to CodeDAO as a whole, CYFS DAO Tokens can be issued according to the share size of contributors (fairness is difficult)\n\n# License\nBSD-2-Clause License    \nCopyright (c) 2023, CYFS Core Dev Team.\n\n\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 20.69140625,
          "content": "![CYFS Logo](./doc/logos/CYFS_logo.png)\n[![cyfs-lib-ver](https://img.shields.io/crates/v/cyfs-lib?label=cyfs-lib&style=plastic)](https://crates.io/crates/cyfs-lib)\n![rust](https://img.shields.io/badge/rustc-1.63%2B-green?style=plastic)\n![liscence](https://img.shields.io/crates/l/cyfs-base?style=plastic)\n![Downloads](https://img.shields.io/crates/d/cyfs-base?style=plastic)\n\n****CYFS：Next Generation Protocl Family to Build Web3****    \n+ CYFS是CYberFileSystem的缩写\n+ 官方主页: [https://www.cyfs.com/](https://www.cyfs.com) ,[cyfs://cyfs/index](cyfs://cyfs/index)  \n+ Discord 讨论组：[https://discord.gg/dXDxjXTEjT](https://discord.gg/dXDxjXTEjT)   \n+ CYFS白皮书(Coming soon)   \n+ Language: [English](./README.md)\n# Introduce\n\nCYFS通过升级Web的基础协议（TCP/IP+DNS+HTTP），实现了真正的Web3。它采用颠覆性的架构设计，每一个人带着自己的OOD(Owner Online Device)进入，形成一个真正去中心化的网络。\n\n我们对Web3的定义如下：\n- Web3让每个人平等的拥有在Internet上保存数据、发布数据、并通过数据得到收入的权利。\n- Web3的互联网应用是完全去中心化的，开发者拥有发布和更新应用的权利，用户则拥有永久使用的权利。\n- Web3的数据创建即确权，并使用Trust Link链接在一起形成`有权数据网`，这是让数据展现其真正价值的未来语义网。\n\n经过6年的研发，我们在CYFS测试网已经实现了上述目标。CYFS的理论和协议详细设计，请参看相关文档。核心代码开源是CYFS的重要里程碑，标志着其设计已经基本稳定，进入开放的社区驱动研发阶段，我们期待有更多的人一起共建属于所有人的Web3。\n\n这是CYFS协议栈在github上的仓库。虽然我们已经在CYFS测试网上搭建了去中心的GitHub(CodeDAO)，实现了CYFS的去中心自举。但在CYFS主网上线前，我们还是决定在WEB2.0里再多待一会，以该仓库为目前的社区驱动研发基地。CYFS主网上线后，该Repo会整体搬迁到CodeDAO。\n\n本仓库仅包含CYFS核心系统的实现。并未包含CYFS生态重要的基础软件:CyberChat和CYFS Browser，也未包含面向不同语言的开发者的SDK实现。下面是CYFS生态其它重要的开源项目列表（持续更新）\n\n- [cyfs-ts-sdk](https://github.com/buckyos/cyfs-ts-sdk):基于typescript实现的cyfs-sdk，帮助typescript开发者构建Web3 DEC App。\n- CYFS Transmission Lab:对CYFS协议进行测试的网络实验室所用系统 (Coming soon)\n- CyberChat: CYFS钱包，管理DID,OOD,DECApp以及数据资产（Coming soon）\n- CYFS Browser: 基于Chrome内核，支持cyfs://协议的浏览器（Coming soon）\n- CodeDAO:用CYFS实现的去中心的Github （Coming soon）\n\n\n# Background\n![CYFS Architecture](doc/zh-CN/image/CYFS%20Architecture.png)\n\n上面是CYFS的整体架构图，可以帮助建立对CYFS设计的宏观理解。CYFS的核心设计可以分解为下面几个部分\n\n- NamedObject的设计与`cyfs://o/$ownerid/$objid` (Object Link)的两端式构造。\n- BDT协议改进了TCP/IP:网络协议从面向地址进化成面向可信身份。\n- MetaChain 升级DNS,实现去中心寻址，并实现Data is Account。\n- Owner在网络上部署自己的服务器OOD(Owner Online Device)，支持了cyfs://的去中心可访问性\n- 基于`有纠纷才上链`的博弈型共识理论设计存储证明和服务证明，实现cyfs://的去中心高可靠和高可用\n- 计算资源的链下交付与链上撮合分离，用可演进的经济模型构建去中心的共享云计算\n- 基于可信计算的输入与结果的数据产权分析，实现从链上智能合约到链下Data Exchage Contract(DEC)的进化。\n- Web3 DEC App的Service端安装在每个人的OOD上，实现了应用服务的去中心化\n\n这些设计是为了解决哪几个关键问题？（我们相信“找到正确的问题已经完成了一半~”）可以阅读 《[CYFS Architecture](doc/zh-CN/CYFS%20Architecture.pptx)》 与 《CYFS 白皮书》(coming soon)，这些内容量比较大，可以边实践边理解~\n\n\n## 通过《Hello CYFS》开始旅程\n我们强烈建议您完整的阅读《Hello CYFS》系列文章来获得一次完整的CYFS初体验（全部流程可以在1个小时内完成）：   \n1. [《编译并部署DIYOOD》](doc/zh-CN/Hello_CYFS/0.%E7%BC%96%E8%AF%91%E5%B9%B6%E9%83%A8%E7%BD%B2DIYOOD.md)    \n2. [《创建自己的身份文件》](doc/zh-CN/Hello_CYFS/1.%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%BA%AB%E4%BB%BD%E6%96%87%E4%BB%B6.md)\n3. [《发布文件并下载》](doc/zh-CN/Hello_CYFS/2.%E5%8F%91%E5%B8%83%E6%96%87%E4%BB%B6%E5%B9%B6%E4%B8%8B%E8%BD%BD.md)\n4. [《给朋友一点打赏》](doc/zh-CN/Hello_CYFS/3.%E7%BB%99%E6%9C%8B%E5%8F%8B%E4%B8%80%E7%82%B9%E6%89%93%E8%B5%8F.md)\n5. [《发布网站并查看》](doc/zh-CN/Hello_CYFS/4.%E5%8F%91%E5%B8%83%E7%BD%91%E7%AB%99%E5%B9%B6%E6%9F%A5%E7%9C%8B.md)\n\n\n也可以使用下面的简易流程进行一次“不求甚解”的初体验～\n\n# Quick Start\n下面将通过编译CYFS源码来构建你自己的Web3环境，并在这个环境中完成Web3的基础体验：\n- 将一个文件夹发布到Web3的世界，得到一个cyfs://o/$ownerid/$dirid/index.html的永久地址，该地址可用CYFS Browser访问。\n- 使用cyfs get命令下载刚刚发布的文件夹中的文件。\n\n注意这个环境正常并不是孤立的，而是能够加入到CYFS网络的（我们有规划3个网络:nightly,beta,relase，目前只有nightly是可用的），所以下面的教程并不包含用源码编译MetaChain+SN的部分。如果你打算在一个独立环境搭建一套完整的系统，需要编译并部署MetaChain超级节点，请阅读文档《MetaChain的构建》(Coming soon)。\n\n\n## 编译\n准备一台闲置的Linux主机，最好是VPS，有2G以上内存。\n准备工作:\n- node.js 14或以上版本\n- rustc 1.63或以上版本\n\n运行下面命令进行OOD System的编译。\n\n```shell\ncd ${cyfs_sources_dir}/src\nnpm i\nnode ../scripts/build-standalone.js\n```\n脚本在编译过程中，需要创建`${cyfs_root}`文件夹。如果当前系统或当前用户没有权限创建该文件夹，需要事先手工创建`${cyfs_root}`文件夹，并将读写权限赋予当前用户。(正式环境中，OOD System的所有组件和数据都会安装到`${cyfs_root}`)\n\n`${cyfs_root}`具体路径：\n- Windows: `c:\\cyfs`\n- MacOS: `~/Library/cyfs`\n- 其他系统: `/cyfs`\n\n编译成功生成`ood-installer`\n\n## 安装刚编译的OOD System\n安装前，需要自行准备OOD的依赖环境:\n- Node.js 14以上版本\n- MongoDB 4.4版本，配置开机启动，使用默认端口，无认证（使用SQLite做对象存储引擎可以不依赖MongoDB,后续安装脚本会支持选择存储引擎）\n- docker-ce最新版本，配置开机启动\n\n在src目录找到刚编译好的 ood-installer ，执行\n```\n./ood-installer --target solo\n```\n稍等片刻即安装完成。\n\n## 激活OOD\n为了体验流程，这里使用cli工具来完成身份的创建流程。**基于cli工具创建的身份只能做测试用途！**\n\n1. 安装cyfs-tool：使用命令行`npm i -g cyfs-tool-nightly`，安装nightly版本的cyfs-tool工具\n2. 生成成套的身份\n   > 使用命令`cyfs desc -s <save_path>`，生成配套的身份文件，保存在save_path目录下。如果不指定save_path，默认为~/.cyfs_profile\n3. 绑定OOD\n   > 身份生成后，复制`<save_path>/ood.desc`和`<save_path>/ood.sec`两个文件到OOD机器的`${cyfs_root}/etc/desc`下，并重命名为`device.desc`和`device.sec`\n4. 绑定CYFS-Runtime\n   > 身份生成后，复制`<save_path>/runtime.desc`和`<save_path>/runtime.sec`两个文件到CYFS浏览器机器的`${cyfs_runtime_root}/etc/desc`下，并重命名为`device.desc`和`device.sec`\n\n`${cyfs_runtime_root}`具体路径：\n- Windows: `%appdata%/cyfs`\n- Mac OS: `~/Library/Application Support/cyfs`\n\n## 发布您的第一个Web3网站\n\n先准备好您的网站的www目录，我们先体验将静态网站发布到Web3,动态网站的构建后续文档会介绍。\n\n使用命令\n```\ncyfs upload <dir_path> -e ood -t ood\n```\n将本地<dir_path>指向的文件，添加到OOD上。\n命令执行完成，本地的www目录已经被上传到OOD并产生了Web3.0网站的唯一连接(命令执行的结尾)。\n该链接为cyfs O Link,看起来是这样的`cyfs://o/$ownerid/$objid`,此时$objid为目录的ContentId. \n\n## 浏览刚发布的网站\n在任一安装了cyfs-tool的机器上使用命令\n```\ncyfs get cyfs://o/$ownerid/$objid/index.html\n```\n可以下载刚发布的官网。\n\n任意安装了cyfs浏览器的机器，可用cyfs浏览器打开`cyfs://o/$ownerid/$objid/index.html`,浏览刚刚发布的的网站。\ncyfs浏览器的下载，参见[这里](./download.md)\n\n# 代码导读\n通过上面的流程，你已经对CYFS的设计和使用有了一个基本的认识。尽管CYFS的设计已经基本稳定，但我们还有不少的代码要写。我们非常渴望你的帮助，但肯定也不会特别多的精力去编写文档（细节都在源码里了~）。这里我们做一个极简的代码导读，希望能帮助你更快的理解CYFS的实现。\n\n根据架构我们可知,cyfs://的核心是 Object Linke的构造和获取，而获取的前提是至少要把数据上传到OOD上。流程如下:\n1. 启动本地协议栈(cyfs-rutnime)\n2. 本地计算目录内所有文件的Hash，并以当前的PeopleId为Owner构造FileObject\n3. 本地生成Map结构（目录结构），并以当前的PeopleId为Owner构造MapObject,\n   此时cyfs://已经完成构造，但此时该cyfs:// 还无法被访问\n4. 将上述命名对象和命名数据添加到本地协议栈\n5. 向OOD发起CYFS PUT操作:将MapObject保存到OOD上并设置访问权限为公开\n6. 让OOD启动MapObject Prepare，在OOD上保存一份命名数据\n7. OOD上MapObject Prepare完成，cyfs:// 可以被访问\n\n随后使用`cyfs get`获取的流程如下：\n\n1. 启动本地协议栈cyfs-runtime\n2. 用HTTP协议向cyfs-runtime发起HTTP GET请求\n3. cyfs-runtime在本地缓存中查看对象是否存在\n4. cyfs-runtime发起NamedObject查询需求(下列行为不是串行的)\n    - 4.1 向OOD查询NamedObject\n    - 4.2 OOD查询本地，NamedObject是否存在\n    - 4.3 OOD查询MetaChain，NamedObject是否存在\n    - 4.4 OOD根据get中的Reference信息，在上一跳设备上查询NamedObject是否存在\n    - 4.5 OOD通过MetaChain查询Object's Owner Zone的配置\n    - 4.6 OOD通过Zone配置，连接NamedObject's OOD，或则连接NamedObject’ Cache,查询NamedObject\n5. 得到ChunkId后，cyfs-runtime调用BDT的Channel接口(NDN语义接口)请求Chunk\n    - 5.1 对于首个，小的Chunk，直接从关联OOD上获取\n    - 5.2 对于第二个Chunk，会尝试从上一跳(Reference OOD)获取\n    - 5.3 BDT会尝试基于应用层的Context信息，进行多源查找和基于喷泉码的多源下载\n    - 5.4 路由器能识别BDT发出的Chunk请求包，进行拦截、转发，进一步优化网络的整体负载\n    - 5.5 只有OOD会进行Chunk上传\n6. 当FileObject的第一个Chunk就绪(通过验证)后，步骤1的HTTP GET请求开始返回数据\n\n(上述流程如下图所示)\n![get-from-cyfs](doc/en/image/get-from-cyfs.png)\n\n> CYFS协议的整体设计可参考 [Introduction to CYFS Protocol.md](doc/zh-CN/Introduction%20to%20CYFS%20Protocol.md)\n\n在理解上述流程的逻辑后，可以按下面的指引阅读相关代码。\n## Upload\n1. 启动本地协议栈：[util.ts: create_stack()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/lib/util.ts)\n2. 构造FileObject: [file_recorder.rs: FileRecorder.add_file()](src/component/cyfs-stack/src/trans_api/local/file_recorder.rs)\n3. 构造ObjectMap: [publish_manager.rs: PublishLocalDirTask.publish()](src/component/cyfs-stack/src/trans_api/local/publish_manager.rs)\n4. 将上述命名对象和命名数据添加到本地协议栈:[file_recorder.rs: FileRecorder.record_file_chunk_list()](src/component/cyfs-stack/src/trans_api/local/file_recorder.rs)\n5. 向OOD发起CYFS PUT操作:将MapObject保存到OOD上并设置成访问权限为公开:[upload.ts: upload_obj()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/actions/upload.ts)\n6. 让OOD启动MapObject Prepare，在OOD上保存一份命名数据:[upload.ts: run()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/actions/upload.ts)\n## Get\n1. 启动本地协议栈: [util.ts: create_stack()](https://github.com/buckyos/cyfs-ts-sdk/blob/master/src/tool/lib/util.ts)\n2. 用HTTP协议发起HTTP GET请求\n3. cyfs-runtime在本地缓存中查看对象是否存在\n4. cyfs-runtime发起NamedObject查询需求(下列行为通常不是串行的)\n    - 4.1 向OOD查询NamedObject\n    - 4.2 OOD查询本地，NamedObject是否存在\n    - 4.3 OOD查询MetaChain，NamedObject是否存在\n    - 4.4 OOD根据get中的Reference信息，在上一跳设备上查询NamedObject是否存在\n    - 4.5 OOD通过MetaChain查询Object's Owner Zone的配置\n    - 4.6 OOD通过Zone配置，连接NamedObject's OOD，或则连接NamedObject’ Cache,查询NamedObject\n5. 得到ChunkId后，cyfs-runtime调用BDT的Channel接口(NDN语义接口)请求Chunk\n    - 5.1 对于首个，小的Chunk，直接从关联OOD上获取\n    - 5.2 对于第二个Chunk，会尝试从上一跳(Reference OOD)获取\n    - 5.3 BDT会尝试基于应用层的Context信息，进行多源查找和基于喷泉码的多源下载\n    - 5.4 路由器能识别BDT发出的Chunk请求包，进行拦截、转发，进一步优化网络的整体负载\n    - 5.5 只有OOD会进行Chunk上传\n6. 当FileObject的第一个Chunk就绪并验证后，步骤1的HTTP GET请求开始返回数据\n\n# DecApp开发实践\n下边的系列文章介绍了如何基于CYFS，实现一个留言板DecApp。这是一个很长的文章系列，详细讲述了开发一个DecApp的一般流程\n1. [《简介》](./doc/zh-CN/实战留言板系统/1.简介.md)\n2. [《DEC App基本原理》](./doc/zh-CN/实战留言板系统/2.DEC%20App%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.md)\n3. [《实现自己的留言服务》](./doc/zh-CN/实战留言板系统/3.%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%95%99%E8%A8%80%E6%9C%8D%E5%8A%A1.md)\n4. [《运行和调试自己的留言服务》](./doc/zh-CN/实战留言板系统/4.%E8%BF%90%E8%A1%8C%E5%92%8C%E8%B0%83%E8%AF%95%E8%87%AA%E5%B7%B1%E7%9A%84%E7%95%99%E8%A8%80%E6%9C%8D%E5%8A%A1.md)\n5. [《扩展阅读：上个章节成果原理的进一步讲解和一些工具介绍》](./doc/zh-CN/实战留言板系统/5.%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB%EF%BC%9A%E4%B8%8A%E4%B8%AA%E7%AB%A0%E8%8A%82%E6%88%90%E6%9E%9C%E5%8E%9F%E7%90%86%E7%9A%84%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%B2%E8%A7%A3%E5%92%8C%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D.md)\n6. [《实现前端》](./doc/zh-CN/实战留言板系统/6.%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF.md)\n7. [《发给朋友看看:理解CYFS权限系统》](./doc/zh-CN/实战留言板系统/7.%E5%8F%91%E7%BB%99%E6%9C%8B%E5%8F%8B%E7%9C%8B%E7%9C%8B%2C%E7%90%86%E8%A7%A3CYFS%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F.md)\n8. [《使用模拟器对应用进行跨 Zone 测试》](./doc/zh-CN/实战留言板系统/8.%E4%BD%BF%E7%94%A8%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%AF%B9%E5%BA%94%E7%94%A8%E8%BF%9B%E8%A1%8C%E8%B7%A8%20Zone%20%E6%B5%8B%E8%AF%95.md)\n9.  [《扩展阅读：去中心、可信数据、语义数据，数据产权》](./doc/zh-CN/实战留言板系统/9.%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB%EF%BC%9A%E5%8E%BB%E4%B8%AD%E5%BF%83%E3%80%81%E5%8F%AF%E4%BF%A1%E6%95%B0%E6%8D%AE%E3%80%81%E8%AF%AD%E4%B9%89%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%95%B0%E6%8D%AE%E4%BA%A7%E6%9D%83.md)\n10. [《添加评论》](./doc/zh-CN/实战留言板系统/10.%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA.md)\n11. [《扩展阅读：进一步了解数据交换合约和DAO》](./doc/zh-CN/实战留言板系统/11.%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB%EF%BC%9A%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BA%86%E8%A7%A3%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E5%90%88%E7%BA%A6%E5%92%8CDAO.md)\n12. [《DEC App的数据安全与高可用》](./doc/zh-CN/实战留言板系统/12.DEC%20App%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E4%B8%8E%E9%AB%98%E5%8F%AF%E7%94%A8.md)\n13. [《总结》](./doc/zh-CN/实战留言板系统/13.%E6%80%BB%E7%BB%93.md)\n\n# 目录结构\n\n通过架构图你已经了解到，CYFS的工程实现规模不小。为了防止迷路，本章节是一个小小的地图，能帮助你对CYFS的代码结构有一个基本的了解，并明白关键代码会在什么地方。\n\n- src //源码目录，很多开发命令都要求以该目录为当前目录进行操作\n    - service //包含一系列重要的可执行文件的代码，是很好的阅读代码的起点\n        - gateway //CYFS体系的nginx,OOD上最重要的基础服务\n        - cyfs-runtime //CYFS用户态协议栈实现，开发调试中最常打交道的进程\n        - ood-daemon //OOD的基础daemon,对其它基础服务进行保活和自动更新\n        - app-manager //DEC App的安装管理器\n        - chunk-manager // 最原始，简单的对CYFS NDN概念的思考和实现，目前用于最底层的基础服务\n        - file-manager // 最原始，简单的对CYFS NON概念的思考和实现，目前用于最底层的基础服务\n        - cyfs-runtime // CYFS浏览器使用的CYFS协议栈后端，在标准CYFS协议栈的基础上，提供了一些方便浏览器使用的功能\n    - component\n        - cyfs-base //所有项目共用的基础组件，这里可以看到NamedObject的实现细节\n        - cyfs-base-meta // MetaChain的基础对象定义\n        - cyfs-bdt //BDT协议的实现，小心展开时庞大的规模\n        - cyfs-core // CYFS体系中核心对象的定义\n        - cyfs-chunk // CYFS协议栈对NDN协议的支持\n        - cyfs-stack //CYFS协议的实现，应该是系统中规模最庞大的组件\n        - cyfs-meta-lib //MetaChain Client的相关实现\n        - cyfs-mobile-stack //CYFS移动端协议栈的封装\n        - cyfs-noc //NamedObject的存储引擎实现（SQLite+MongoDB），是对系统IO性能影响最大的组件\n    - test //测试项目，只包含了已经整理的部分，CYFS的大量网络测试的代码在CYFS Transmission Lab里。\n    - tools //cyfs工具。cyfs工具链的设计思路是一个顶层脚本和一系列独立的小工具，兼顾cli体验的一致性和工程构建的独立性\n- scripts //编译脚本目录，我们使用js脚本来替代makefile\n- doc //文档目录\n\n# Roadmap\nCYFS目前正处于开发测试网(nightly)上线的状态，这个状态下所有组件默认都会受到每日构建结果的影响，并且我们并不考虑如何数据结构的向下兼容，对数据安全的保护也并不完整。这个版本只应用于开发测试，而不应在正式的产品中使用。\n\n我们的下一个目标是完成测试网的上线(beta)，相对nightly,beta会指定严格的发布标准，并会尽可能的做到数据结构的向下兼容，并能有信心保护用户的数据安全。beta的稳定性将能支持测试版产品的发布~ 和正式版的主要区别是资产还是测试资产，并在稳定性、性能上有差距。\n\n我们希望能在18个月内上线CYFS正式网，CYFS正式网没有明确的上线时间，只要beta网的资产安全性、稳定性、性能达到预设目标，我们就会进入CYFS正式网的发布轨道。\n\n欢迎关注[#1 issue](https://github.com/buckyos/CYFS/issues/1),来了解CYFS Roadmap的更多信息~\n\n# Contributing\nCYFS的开发测试网是由深圳巴克云设计和实现的，深圳巴克云的核心团队继承自原迅雷基础研发团队，我们有丰富的网络协议、基础架构开发经验以及超大规模的P2P网络设计和调优经验。在CYFS开源后，巴克云已经完成了其关键的历史使命，如今我们更愿意称自己为CYFS Core Dev Team,未来是一个开放的，基于DAO来组织的Team，主要职责就是推进CYFS的持续研发，我们欢迎所有工程师的加入：\n\n- 如果您有丰富的网络协议开发经验，此刻我们非常需要您来帮助我们一起改进核心协议\n- 如果您对开源文化和开源社区非常了解，可以和我们一起构建去中心的github(CodeDAO)\n- 如果您有丰富的区块链开发经验，此刻等待重写的MetaChain急切的需要你~ 我们已经有了一个雄心勃勃的设计，但这些年我们专注于off-chain的协议开发，block-chain的人手非常受限\n- 如果您日常使用的语言不包含typescript和rust，可以帮我们建立其它语言的sdk\n- 如果您对产品非常擅长，可以帮助我们改进CYFS的基础体验，也可以在CodeDAO上创建一个真正的Web3 Startup\n- 当然也欢迎所有人提BUG，提产品改进意见，帮我们修正文档.... 我们保障您的贡献会被铭记\n\n我们正在设计一套基于DAO-NFT的贡献记录系统，当本Repo整体迁移到CodeDAO后，能根据贡献者的共享大小（公平是很难的）发放CYFS DAO Token。\n\n\n\n# License\nBSD-2-Clause License    \nCopyright (c) 2022, CYFS Core Dev Team"
        },
        {
          "name": "cargo_pub_rev",
          "type": "blob",
          "size": 0.0078125,
          "content": "93a82f20"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5556640625,
          "content": "{\n  \"name\": \"cyfs-scripts\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"doc\": \"doc\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/buckyos/CYFS.git\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/buckyos/CYFS/issues\"\n  },\n  \"homepage\": \"https://github.com/buckyos/CYFS#readme\",\n  \"dependencies\": {\n    \"@ltd/j-toml\": \"^1.30.0\",\n    \"semver\": \"^7.3.7\",\n    \"tar\": \"^6.1.11\"\n  }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}