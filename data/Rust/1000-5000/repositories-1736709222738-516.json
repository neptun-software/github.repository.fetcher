{
  "metadata": {
    "timestamp": 1736709222738,
    "page": 516,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RustAudio/rodio",
      "stars": 1863,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "target\n\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.046875,
          "content": "reorder_imports = true\nuse_try_shorthand = true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.6201171875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nMigration guides for incompatible versions can be found in `UPGRADE.md` file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n- Adds a function to write a `Source` to a `wav` file, see `output_to_wav`.\n- Output audio stream buffer size can now be adjusted.\n- Sources for directly generating square waves, triangle waves, square waves, and\n  sawtooths have been added.\n- An interface for defining `SignalGenerator` patterns with an `fn`, see\n  `GeneratorFunction`.\n- Minimal builds without `cpal` audio output are now supported.\n  See `README.md` for instructions. (#349)\n\n### Changed\n- Breaking: `OutputStreamBuilder` should now be used to initialize an audio output stream.\n- Breaking: `OutputStreamHandle` removed, use `OutputStream` and `OutputStream::mixer()` instead.\n- Breaking: `DynamicMixerController` renamed to `Mixer`, `DynamicMixer` renamed to `MixerSource`.\n- Breaking: `Sink::try_new` renamed to `connect_new` and does not return error anymore.\n            `Sink::new_idle` was renamed to `new`.\n- Breaking: In the `Source` trait, the method `current_frame_len()` was renamed to `current_span_len()`.\n- The term 'frame' was renamed to 'span' in the crate and documentation.\n\n### Fixed\n- Symphonia decoder `total_duration` incorrect value caused by conversion from `Time` to `Duration`.\n- An issue with `SignalGenerator` that caused it to create increasingly distorted waveforms\n  over long run times has been corrected. (#201)\n\n# Version 0.20.1 (2024-11-08)\n\n### Fixed\n- Builds without the `symphonia` feature did not compile\n\n# Version 0.20.0 (2024-11-08)\n\n### Added\n- Support for *ALAC/AIFF*\n- Add `automatic_gain_control` source for dynamic audio level adjustment.\n- New test signal generator sources:\n    - `SignalGenerator` source generates a sine, triangle, square wave or sawtooth\n      of a given frequency and sample rate.\n    - `Chirp` source generates a sine wave with a linearly-increasing\n      frequency over a given frequency range and duration.\n    - `white` and `pink` generate white or pink noise, respectively. These\n      sources depend on the `rand` crate and are guarded with the \"noise\"\n      feature.\n    - Documentation for the \"noise\" feature has been added to `lib.rs`.\n- New Fade and Crossfade sources:\n    - `fade_out` fades an input out using a linear gain fade.\n    - `linear_gain_ramp` applies a linear gain change to a sound over a\n      given duration. `fade_out` is implemented as a `linear_gain_ramp` and\n      `fade_in` has been refactored to use the `linear_gain_ramp`\n      implementation.\n\n### Fixed\n- `Sink.try_seek` now updates `controls.position` before returning. Calls to `Sink.get_pos`\n  done immediately after a seek will now return the correct value.\n\n### Changed\n- `SamplesBuffer` is now `Clone`\n\n# Version 0.19.0 (2024-06-29)\n\n### Added\n- Adds a new source `track_position`. It keeps track of duration since the\n  beginning of the underlying source.\n\n### Fixed\n- Mp4a with decodable tracks after undecodable tracks now play. This matches\n  VLC's behaviour.\n\n# Version 0.18.1 (2024-05-23)\n\n### Fixed\n- Seek no longer hangs if the sink is empty.\n\n# Version 0.18.0 (2024-05-05)\n\n### Changed\n- `Source` trait is now also implemented for `Box<dyn Source>` and `&mut Source`\n- `fn new_vorbis` is now also available when the `symphonia-vorbis` feature is enabled\n\n### Added\n- Adds a new method `try_seek` to all sources. It returns either an error or\n  seeks to the given position. A few sources are \"unsupported\" they return the\n  error `Unsupported`.\n- Adds `SpatialSink::clear()` bringing it in line with `Sink`\n\n### Fixed\n- channel upscaling now follows the 'WAVEFORMATEXTENSIBLE' format and no longer\n  repeats the last source channel on all extra output channels.\n  Stereo content playing on a 5.1 speaker set will now only use the front left\n  and front right speaker instead of repeating the right sample on all speakers\n  except the front left one.\n- `mp3::is_mp3()` no longer changes the position in the stream when the stream\n  is mp3\n\n# Version 0.17.3 (2023-10-23)\n\n- Build fix for `minimp3` backend.\n\n# Version 0.17.2 (2023-10-17)\n\n- Add `EmptyCallback` source.\n- Fix index out of bounds bug.\n- Use non-vulnerable `minimp3` fork.\n- Add filter functions with additional q parameter.\n\n# Version 0.17.1 (2023-02-25)\n\n- Disable `symphonia`'s default features.\n\n# Version 0.17.0 (2023-02-17)\n\n- Update `cpal` to [0.15](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0150-2022-01-29).\n- Default to `symphonia` for mp3 decoding.\n\n# Version 0.16.0 (2022-09-14)\n\n- Update `cpal` to [0.14](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0140-2022-08-22).\n- Update `symphonia` to [0.5](https://github.com/pdeljanov/Symphonia/releases/tag/v0.5.1).\n\n# Version 0.15.0 (2022-01-23)\n\n- Remove requirement that the argument `Decoder::new` and `LoopedDecoder::new` implement `Send`.\n- Add optional symphonia backend.\n- `WavDecoder`'s `total_duration` now returns the total duration of the sound rather than the remaining duration.\n- Add 32-bit signed in WAV decoding.\n- `SineWave::new()` now takes a `f32` instead of a `u32`.\n- Add `len()` method to `SpatialSink`.\n\n# Version 0.14.0 (2021-05-21)\n\n- Re-export `cpal` in full.\n- Replace panics when calling `OutputStream::try_default`, `OutputStream::try_from_device` with new\n  `StreamError` variants.\n- `OutputStream::try_default` will now fallback to non-default output devices if an `OutputStream`\n  cannot be created from the default device.\n\n# Version 0.13.1 (2021-03-28)\n\n- Fix panic when no `pulseaudio-alsa` was installed.\n\n# Version 0.13.0 (2020-11-03)\n\n- Update `cpal` to [0.13](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0130-2020-10-28).\n- Add Android support.\n\n# Version 0.12.0 (2020-10-05)\n\n- Breaking: Update `cpal` to [0.12](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0120-2020-07-09).\n- Breaking: Rework API removing global \"rodio audio processing\" thread & adapting to the upstream cpal API changes.\n- Add new_X format specific methods to Decoder.\n- Fix resampler dependency on internal `Vec::capacity` behaviour.\n\n# Version 0.11.0 (2020-03-16)\n\n- Update `lewton` to [0.10](https://github.com/RustAudio/lewton/blob/master/CHANGELOG.md#release-0100---january-30-2020).\n- Breaking: Update `cpal` to [0.11](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0110-2019-12-11)\n\n# Version 0.10.0 (2019-11-16)\n\n- Removal of nalgebra in favour of own code.\n- Fix a bug that switched channels when resuming after having paused.\n- Attempt all supported output formats if the default format fails in `Sink::new`.\n- Breaking: Update `cpal` to [0.10](https://github.com/RustAudio/cpal/blob/master/CHANGELOG.md#version-0100-2019-07-05).\n\n# Version 0.9.0 (2019-06-08)\n\n- Remove exclusive `&mut` borrow requirements in `Sink` & `SpatialSink` setters.\n- Use `nalgebra` instead of `cgmath` for `Spatial` source.\n\n# Version 0.8.1 (2018-09-18)\n\n- Update `lewton` dependency to [0.9](https://github.com/RustAudio/lewton/blob/master/CHANGELOG.md#release-090---august-16-2018)\n- Change license from `Apache-2.0` only to `Apache-2.0 OR MIT`\n\n# Version 0.8.0 (2018-06-22)\n\n- Add mp3 decoding capabilities via `minimp3`\n\n# Version 0.7.0 (2018-04-19)\n\n- Update `cpal` dependency to 0.8, and adopt the new naming convention\n- BREAKING CHANGES:\n    - renamed `Endpoint` to `Device`\n    - split `default_endpoint()` into `default_output_device()` and `default_input_device()`\n    - renamed `endpoints()` to `devices()`\n    - introduced `output_devices()` and `input_devices()`\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.345703125,
          "content": "# Rodio Development Guide\n\n## Quick Start\n\n1. Clone the repository: `git clone https://github.com/RustAudio/rodio.git`\n2. Navigate to the project: `cd rodio`\n3. Build the project: `cargo build`\n\n## Project Structure\n\nsrc/:\n- `source/`: Audio source implementations\n- `decoder/`: Audio format decoders\n- `sink/`: Audio playback and mixing\n- `dynamic_mixer/`: Real-time audio mixing\n- `spatial/`: Spatial audio capabilities\n\n## Coding Guidelines\n\n- Follow [Rust API Guidelines](https://rust-lang.github.io/api-guidelines/)\n- Use `rustfmt` for formatting\n- Implement `Source` trait for new audio sources\n- Use `Sink` for playback management\n\n## Common Tasks\n\n### Adding a New Audio Source or Effect\n\n1. Create a new file in `src/source/`\n2. Implement the `Source` trait to define how audio samples are generated or modified\n3. Consider implementing sources like oscillators, noise generators, or effects like amplification, filtering, or distortion\n4. If your contribution creates sound you should give it a public (factory) function that constructs it. If its an effect then add a method with default implementation for it in the `Source` trait.\n5. Begin with a test for your new feature (see the [Testing](#testing)). This approach ensures your PR is ready and simplifies development. Don't worry about optimizing initially; focus on functionality.\n6. Once your feature works, celebrate your progress! 🎉 Open a draft PR at this stage - we're here to assist with refactoring and optimization.\n7. Refactor your code, add benchmarks, and work on improving performance, especially for real-time processing in effects. Refer to the [Rust Performance Book](https://nnethercote.github.io/perf-book/introduction.html) for optimization techniques.\n8. Finally add some documentation and an example. For details see [Documentation]($documentation)\n9. If you're unsure about creating tests, implement your feature first, then open a PR with what you have asking for guidance. We're happy to help!\n\n### Implementing a New Decoder\n\n1. Add new module in `src/decoder/`\n2. Implement necessary traits (e.g., `Decoder`) to handle specific audio formats\n3. Focus on efficiently parsing audio file headers and decoding compressed audio data\n4. Update `src/decoder/mod.rs` to integrate the new decoder\n\n### Unit Tests\n\n- Feel free to write temporary unit tests during development if they help you verify functionality\n- These tests can be rough and don't need to be comprehensive - they're just development aids\n- It's okay to include these temporary unit tests in your pull request\n- We'll remove these tests before merging into the main codebase, primarily because:\n  - They can make refactoring more difficult as tests may break with code changes\n  - Rust's robust type system reduces the need for extensive unit testing compared to dynamically typed languages\n\n### Integration Tests\n\nWhen possible, add integration tests for your new features. Keep in mind:\n\n- Integration tests do not create sound through your speakers. Instead, you write code that examines the produced *samples*.\n- For new audio sources:\n  - Verify that samples have changed from their initial state.\n  - Check if samples are non-zero where appropriate.\n  - Look for expected patterns or characteristics in the audio data.\n- Examples of integration tests:\n  - The `tests/wav_test.rs` test simply checks if the decoder produces nonzero samples.\n  - The test `seek_does_not_break_channel_order` in `tests/seek.rs` uses a beeping sound that alternates between two channels. It seeks to a point where we know only the second channel should make sound. Then we check if the first channel is silent while the second is not.\n- Be aware that many aspects of audio processing are challenging to verify automatically.\n- It's impossible to write a test that checks if something sounds \"good\". For features requiring audible verification:\n  - Create an example in the `examples/` directory that demonstrates the functionality.\n  - These examples can produce sound for manual testing.\n  - Document the expected behavior in the example's comments.\n- We love integration tests but they can be hard to write. If you have trouble adding one its fine to leave it out. If you do add one create a new file for it in `tests/`.\n- Run tests: `cargo test`\n- Run examples: `cargo run --example <example_name>`\n\n## Documentation\n\n- Add inline documentation to all public items.\n- Look at the [documenting components](https://doc.rust-lang.org/rustdoc/how-to-write-documentation.html#documenting-components) section of the rustdoc book.\n- Generate docs: `cargo doc --open`\n- Add an example. That could be as part of the inline documentation or a more complex scenario in `examples/`. The example should not use `unwrap` or `expect` but return `Box<dyn Error>` and use `?`\n\n## Contribution Workflow\n\n1. Fork the repository on GitHub\n2. Clone your fork locally: `git clone https://github.com/YOUR_USERNAME/rodio.git`\n3. Create a feature branch: `git checkout -b feature/your-feature-name`\n4. Make changes and add tests where applicable (Dont be afraid to ask for help)\n5. Commit your changes following these guidelines: (`git commit`)\n  - Write clear, concise commit messages\n  - Limit the first line to 50 characters\n  - Provide a detailed description after a blank line, if necessary\n  - Reference relevant issue numbers (e.g., \"Fixes #123\")\n  - Separate logical changes into multiple commits\n  - Avoid commits with unrelated changes\n  Example:\n  ```\n  Add spatial audio support for stereo sources\n\n  - Implement SpatialSource struct\n  - Add panning and distance attenuation\n  - Update documentation for spatial audio usage\n\n  Fixes #456\n  ```\n6. Push your changes to your fork: `git push origin feature/your-feature-name`\n7. Create a pull request on GitHub\n\n## Getting Help / Got a question?\n\n- Open an issue on GitHub\n- Ask questions in your pull request\n- Open an issue for guidance/questions\n- Join the Rust Audio Discord\n\n## Useful Commands\n\n- Format: `cargo fmt` - Automatically formats the code according to Rust style guidelines\n- Lint: `cargo clippy` - Runs the Clippy linter to catch common mistakes and improve code quality\n- Benchmark: `cargo bench` - Executes performance benchmarks for the project\n\nFor more detailed information, refer to the full documentation and source code.\n\n## Useful External Resources\n\n- [Rust API Guidelines](https://rust-lang.github.io/api-guidelines/)\n- [Rustdoc book](https://doc.rust-lang.org/rustdoc/how-to-write-documentation.html)\n- [Rust Performance Book](https://nnethercote.github.io/perf-book/introduction.html)\n- [Rust Audio Discord](https://discord.com/invite/8qW6q2k)\n\n\n## Disclaimer\n\nPlease note that the guidelines and practices outlined in this document\nare not strict rules. They are general recommendations to promote\nconsistency and quality in contributions.\n\nWe understand that every situation is unique and encourage contributors\nto use their best judgment. If you have any doubts or questions about\nhow to approach a particular task or contribution, don't hesitate to\nreach out to the maintainers for guidance.\n\n# Guidelines for Maintainers\nGuidelines for those with write access to rodio. Adhere to them as long as makes\nsense. This is a work in progress, more might follow as we get to know\nwhat works. \n\nPlease feel free to open an issue and discuss these if you have a suggestion.\n\n1. Do not merge your own code to main, unless of course its a trivial change.\n   For example spelling/grammar or fixing up a PR by someone else.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 41.5,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"alsa\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed7572b7ba83a31e20d1b48970ee402d2e3e0537dcfe0a3ff4d6eb7508617d43\"\ndependencies = [\n \"alsa-sys\",\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"alsa-sys\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db8fee663d06c4e303404ef5f40488a53e062f89ba8bfed81f42325aafad1527\"\ndependencies = [\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"atomic_float\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"628d228f918ac3b82fe590352cc719d30664a0c13ca3a60266fe02c7132d480a\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f49d8fed880d473ea71efb9bf597651e77201bdd4893efe54c9e5d65ae04ce6f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b37c88a63ffd85d15b406896cc343916d7cf57838a847b3a6f2ca5d39a5695a\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f34d93e62b03caf570cccc334cbc6c2fceca82f39211051345108adcba3eebdc\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cesu8\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c\"\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb3b4b9e5a7c7514dfa52869339ee98b3156b0bfb4e8a77c4ff4babb64b1604f\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b17a95aa67cc7b5ebd32aa5370189aa0d79069ef1c64ce893bd30fb24bff20ec\"\ndependencies = [\n \"anstyle\",\n \"clap_lex\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afb84c814227b90d6895e01398aee0d8033c00e7466aca416fb6a8e0eb19d8a7\"\n\n[[package]]\nname = \"claxon\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4bfbf56724aa9eca8afa4fcfadeb479e722935bb2a0900c2d37e0cc477af0688\"\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd\"\ndependencies = [\n \"bytes\",\n \"memchr\",\n]\n\n[[package]]\nname = \"condtype\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf0a07a401f374238ab8e2f11a104d2851bf9ce711ec69804834de8af45c7af\"\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"coreaudio-rs\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"321077172d79c662f64f5071a03120748d5bb652f5231570141be24cfcd2bace\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation-sys\",\n \"coreaudio-sys\",\n]\n\n[[package]]\nname = \"coreaudio-sys\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2ce857aa0b77d77287acc1ac3e37a05a8c95a2af3647d23b15f263bdaeb7562b\"\ndependencies = [\n \"bindgen\",\n]\n\n[[package]]\nname = \"cpal\"\nversion = \"0.15.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"873dab07c8f743075e57f524c583985fbaf745602acbe916a01539364369a779\"\ndependencies = [\n \"alsa\",\n \"core-foundation-sys\",\n \"coreaudio-rs\",\n \"dasp_sample\",\n \"jni\",\n \"js-sys\",\n \"libc\",\n \"mach2\",\n \"ndk\",\n \"ndk-context\",\n \"oboe\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"windows\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"dasp_sample\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c87e182de0887fd5361989c677c4e8f5000cd9491d6d563161a8f3a5519fc7f\"\n\n[[package]]\nname = \"divan\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ccc40f214f0d9e897cfc72e2edfa5c225d3252f758c537f11ac0a80371c073a6\"\ndependencies = [\n \"cfg-if\",\n \"clap\",\n \"condtype\",\n \"divan-macros\",\n \"libc\",\n \"regex-lite\",\n]\n\n[[package]]\nname = \"divan-macros\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7bdb5411188f7f878a17964798c1264b6b0a9f915bd39b20bf99193c923e1b4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a19187fea3ac7e84da7dacf48de0c45d63c6a76f9490dae389aead16c243fce3\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"extended\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af9673d8203fcb076b19dfd17e38b3d4ae9f44959416ea532ce72415a6020365\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"hound\"\nversion = \"3.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62adaabb884c94955b19907d60019f4e145d091c75345379e70d1ee696f7854f\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"jni\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a87aa2bb7d2af34197c04845522473242e1aa17c12f4935d5856491a7fb8c97\"\ndependencies = [\n \"cesu8\",\n \"cfg-if\",\n \"combine\",\n \"jni-sys\",\n \"log\",\n \"thiserror\",\n \"walkdir\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"jni-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb15147158e79fd8b8afd0252522769c4f48725460b37338544d8379d94fc8f9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lewton\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"777b48df9aaab155475a83a7df3070395ea1ac6902f5cd062b8f2b028075c030\"\ndependencies = [\n \"byteorder\",\n \"ogg\",\n \"tinyvec\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.167\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09d6582e104315a817dff97f75133544b2e094ee22447d2acf4a74e189ba06fc\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"mach2\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b955cdeb2a02b9117f121ce63aa52d08ade45de53e48fe6a38b39c10f6f709\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"minimp3-sys\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e21c73734c69dc95696c9ed8926a2b393171d98b3f5f5935686a26a487ab9b90\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"minimp3_fixed\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42b0f14e7e75da97ae396c2656b10262a3d4afa2ec98f35795630eff0c8b951b\"\ndependencies = [\n \"minimp3-sys\",\n \"slice-ring-buffer\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"ndk\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2076a31b7010b17a38c01907c45b945e8f11495ee4dd588309718901b1f7a5b7\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"jni-sys\",\n \"log\",\n \"ndk-sys\",\n \"num_enum\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"ndk-context\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27b02d87554356db9e9a873add8782d4ea6e3e58ea071a9adb9a2e8ddb884a8b\"\n\n[[package]]\nname = \"ndk-sys\"\nversion = \"0.5.0+25.2.9519653\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c196769dd60fd4f363e11d948139556a344e79d451aeb2fa2fd040738ef7691\"\ndependencies = [\n \"jni-sys\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-derive\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-bigint\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"oboe\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8b61bebd49e5d43f5f8cc7ee2891c16e0f41ec7954d36bcb6c14c5e0de867fb\"\ndependencies = [\n \"jni\",\n \"ndk\",\n \"ndk-context\",\n \"num-derive\",\n \"num-traits\",\n \"oboe-sys\",\n]\n\n[[package]]\nname = \"oboe-sys\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8bb09a4a2b1d668170cfe0a7d5bc103f8999fb316c98099b6a9939c9f2e79d\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"ogg\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6951b4e8bf21c8193da321bcce9c9dd2e13c858fe078bf9054a288b419ae5d6e\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quickcheck\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"588f6378e4dd99458b60ec275b4477add41ce4fa9f64dcba6f15adccb19b50d6\"\ndependencies = [\n \"env_logger\",\n \"log\",\n \"rand\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-lite\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53a49587ad06b26609c52e423de037e7f57f20d53535d66e08c695f347df952a\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"rodio\"\nversion = \"0.20.1\"\ndependencies = [\n \"approx\",\n \"atomic_float\",\n \"claxon\",\n \"cpal\",\n \"crossbeam-channel\",\n \"dasp_sample\",\n \"divan\",\n \"hound\",\n \"lewton\",\n \"minimp3_fixed\",\n \"num-rational\",\n \"quickcheck\",\n \"rand\",\n \"rstest\",\n \"rstest_reuse\",\n \"symphonia\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.18.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97eeab2f3c0a199bc4be135c36c924b6590b88c377d416494288c14f2db30199\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.18.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d428f8247852f894ee1be110b375111b586d4fa431f6c46e64ba5a0dcccbe605\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rstest_reuse\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88530b681abe67924d42cca181d070e3ac20e0740569441a9e35a7cedd2b34a4\"\ndependencies = [\n \"quote\",\n \"rand\",\n \"rustc_version\",\n \"syn\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slice-ring-buffer\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84ae312bda09b2368f79f985fdb4df4a0b5cbc75546b511303972d195f8c27d6\"\ndependencies = [\n \"libc\",\n \"mach2\",\n \"winapi\",\n]\n\n[[package]]\nname = \"symphonia\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"815c942ae7ee74737bb00f965fa5b5a2ac2ce7b6c01c0cc169bbeaf7abd5f5a9\"\ndependencies = [\n \"lazy_static\",\n \"symphonia-bundle-flac\",\n \"symphonia-bundle-mp3\",\n \"symphonia-codec-aac\",\n \"symphonia-codec-adpcm\",\n \"symphonia-codec-alac\",\n \"symphonia-codec-pcm\",\n \"symphonia-codec-vorbis\",\n \"symphonia-core\",\n \"symphonia-format-isomp4\",\n \"symphonia-format-riff\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"symphonia-bundle-flac\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72e34f34298a7308d4397a6c7fbf5b84c5d491231ce3dd379707ba673ab3bd97\"\ndependencies = [\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n \"symphonia-utils-xiph\",\n]\n\n[[package]]\nname = \"symphonia-bundle-mp3\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c01c2aae70f0f1fb096b6f0ff112a930b1fb3626178fba3ae68b09dce71706d4\"\ndependencies = [\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"symphonia-codec-aac\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdbf25b545ad0d3ee3e891ea643ad115aff4ca92f6aec472086b957a58522f70\"\ndependencies = [\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-codec-adpcm\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c94e1feac3327cd616e973d5be69ad36b3945f16b06f19c6773fc3ac0b426a0f\"\ndependencies = [\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-codec-alac\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d8a6666649a08412906476a8b0efd9b9733e241180189e9f92b09c08d0e38f3\"\ndependencies = [\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-codec-pcm\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f395a67057c2ebc5e84d7bb1be71cce1a7ba99f64e0f0f0e303a03f79116f89b\"\ndependencies = [\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-codec-vorbis\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a98765fb46a0a6732b007f7e2870c2129b6f78d87db7987e6533c8f164a9f30\"\ndependencies = [\n \"log\",\n \"symphonia-core\",\n \"symphonia-utils-xiph\",\n]\n\n[[package]]\nname = \"symphonia-core\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"798306779e3dc7d5231bd5691f5a813496dc79d3f56bf82e25789f2094e022c3\"\ndependencies = [\n \"arrayvec\",\n \"bitflags 1.3.2\",\n \"bytemuck\",\n \"lazy_static\",\n \"log\",\n]\n\n[[package]]\nname = \"symphonia-format-isomp4\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abfdf178d697e50ce1e5d9b982ba1b94c47218e03ec35022d9f0e071a16dc844\"\ndependencies = [\n \"encoding_rs\",\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n \"symphonia-utils-xiph\",\n]\n\n[[package]]\nname = \"symphonia-format-riff\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f7be232f962f937f4b7115cbe62c330929345434c834359425e043bfd15f50\"\ndependencies = [\n \"extended\",\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"symphonia-metadata\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc622b9841a10089c5b18e99eb904f4341615d5aa55bbf4eedde1be721a4023c\"\ndependencies = [\n \"encoding_rs\",\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-utils-xiph\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"484472580fa49991afda5f6550ece662237b00c6f562c7d9638d1b086ed010fe\"\ndependencies = [\n \"symphonia-core\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f599bd7ca042cfdf8f4512b277c02ba102247820f9d9d4a9f521f496751a6ef\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21d3b25c3ea1126a2ad5f4f9068483c2af1e64168f847abe863a526b8dbfe00b\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52857d4c32e496dc6537646b5b117081e71fd2ff06de792e3577a150627db283\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"951fe82312ed48443ac78b66fa43eded9999f738f6022e67aead7b708659e49a\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"once_cell\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"920b0ffe069571ebbfc9ddc0b36ba305ef65577c94b06262ed793716a1afd981\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf59002391099644be3524e23b781fa43d2be0c5aa0719a18c0731b9d195cab6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5047c5392700766601942795a436d7d2599af60dcc3cc1248c9120bfb0827b0\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"476364ff87d0ae6bfb661053a9104ab312542658c3d8f963b7ace80b6f9b26b9\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.54.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9252e5725dbed82865af151df558e754e4a3c2c30818359eb17465f1346a1b49\"\ndependencies = [\n \"windows-core\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.54.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12661b9c89351d684a50a8a643ce5f608e20243b9fb84687800163429f161d65\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e383302e8ec8515204254685643de10811af0ed97ea37210dc26fb0032647f8\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\ndependencies = [\n \"windows-targets 0.42.2\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.2\",\n \"windows_aarch64_msvc 0.42.2\",\n \"windows_i686_gnu 0.42.2\",\n \"windows_i686_msvc 0.42.2\",\n \"windows_x86_64_gnu 0.42.2\",\n \"windows_x86_64_gnullvm 0.42.2\",\n \"windows_x86_64_msvc 0.42.2\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.220703125,
          "content": "[package]\nname = \"rodio\"\nversion = \"0.20.1\"\nlicense = \"MIT OR Apache-2.0\"\ndescription = \"Audio playback library\"\nkeywords = [\"audio\", \"playback\", \"gamedev\"]\nrepository = \"https://github.com/RustAudio/rodio\"\ndocumentation = \"https://docs.rs/rodio\"\nexclude = [\"assets/**\", \"tests/**\"]\nedition = \"2021\"\n\n[dependencies]\ncpal = { version = \"0.15.3\", optional = true }\ndasp_sample = \"0.11.0\"\nclaxon = { version = \"0.4.2\", optional = true }\nhound = { version = \"3.3.1\", optional = true }\nlewton = { version = \"0.10\", optional = true }\nminimp3_fixed = { version = \"0.5.4\", optional = true }\nsymphonia = { version = \"0.5.4\", optional = true, default-features = false }\ncrossbeam-channel = { version = \"0.5.8\", optional = true }\n\nrand = { version = \"0.8.5\", features = [\"small_rng\"], optional = true }\ntracing = { version = \"0.1.40\", optional = true }\n\natomic_float = { version = \"1.1.0\", optional = true }\nnum-rational = \"0.4.2\"\n\n[features]\ndefault = [\"playback\", \"flac\", \"vorbis\", \"wav\", \"mp3\"]\ntracing = [\"dep:tracing\"]\nexperimental = [\"dep:atomic_float\"]\nplayback = [\"dep:cpal\"]\n\nflac = [\"claxon\"]\nvorbis = [\"lewton\"]\nwav = [\"hound\"]\nmp3 = [\"symphonia-mp3\"]\nminimp3 = [\"dep:minimp3_fixed\"]\nnoise = [\"rand\"]\nwasm-bindgen = [\"cpal/wasm-bindgen\"]\ncpal-shared-stdcxx = [\"cpal/oboe-shared-stdcxx\"]\nsymphonia-aac = [\"symphonia/aac\"]\nsymphonia-all = [\"symphonia-aac\", \"symphonia-flac\", \"symphonia-isomp4\", \"symphonia-mp3\", \"symphonia-vorbis\", \"symphonia-wav\"]\nsymphonia-flac = [\"symphonia/flac\"]\nsymphonia-isomp4 = [\"symphonia/isomp4\"]\nsymphonia-mp3 = [\"symphonia/mp3\"]\nsymphonia-vorbis = [\"symphonia/vorbis\"]\nsymphonia-wav = [\"symphonia/wav\", \"symphonia/pcm\", \"symphonia/adpcm\"]\nsymphonia-alac = [\"symphonia/isomp4\", \"symphonia/alac\"]\nsymphonia-aiff = [\"symphonia/aiff\", \"symphonia/pcm\"]\n\n[dev-dependencies]\nquickcheck = \"1\"\nrstest = \"0.18.2\"\nrstest_reuse = \"0.6.0\"\napprox = \"0.5.1\"\ndasp_sample = \"0.11.0\"\ndivan = \"0.1.14\"\n\n[[bench]]\nname = \"effects\"\nharness = false\n\n[[bench]]\nname = \"conversions\"\nharness = false\n\n[[bench]]\nname = \"resampler\"\nharness = false\n\n[[example]]\nname = \"music_m4a\"\nrequired-features = [\"symphonia-isomp4\", \"symphonia-aac\"]\n\n[[example]]\nname = \"noise_generator\"\nrequired-features = [\"noise\"]\n\n[[example]]\nname = \"into_file\"\nrequired-features = [\"wav\", \"mp3\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0458984375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 Pierre Krieger\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.015625,
          "content": "# Audio playback library\n\n[![Crates.io Version](https://img.shields.io/crates/v/rodio.svg)](https://crates.io/crates/rodio)\n[![Crates.io Downloads](https://img.shields.io/crates/d/rodio.svg)](https://crates.io/crates/rodio)\n[![Build Status](https://github.com/RustAudio/rodio/workflows/CI/badge.svg)](https://github.com/RustAudio/rodio/actions)\n\nRust playback library.\n\nPlayback is handled by [cpal](https://github.com/RustAudio/cpal). Format decoding can be handled either by [Symphonia](https://github.com/pdeljanov/Symphonia), or by format-specific decoders:\n\n - MP3 by [minimp3](https://github.com/lieff/minimp3) (but defaults to [Symphonia](https://github.com/pdeljanov/Symphonia)).\n - WAV by [hound](https://github.com/ruud-v-a/hound).\n - Vorbis by [lewton](https://github.com/est31/lewton).\n - FLAC by [claxon](https://github.com/ruuda/claxon).\n - MP4 and AAC (both disabled by default) are handled only by [Symphonia](https://github.com/pdeljanov/Symphonia).\n\nSee [the docs](https://docs.rs/rodio/latest/rodio/#alternative-decoder-backends) for more details on backends.\n\n# [Documentation](http://docs.rs/rodio)\n\n[The documentation](http://docs.rs/rodio) contains an introduction to the library.\n\n## Dependencies (Linux only)\n\nRodio uses `cpal` library to send audio to the OS for playback. ALSA development files are needed to build `cpal` on Linux. These are provided as part of the `libasound2-dev` package on Debian and Ubuntu distributions and `alsa-lib-devel` on Fedora.\n\n### Minimal build\n\nIt is possible to build `rodio` without support for audio playback. In this configuration `cpal` dependency and its requirements are excluded. This configuration may be useful, for example, for decoding and processing audio in environments when the audio output is not available (e.g. in case of Linux, when ALSA is not available). See `into_file` example that works with this build.\n\nIn order to use `rodio` in this configuration disable default features and add the necessary ones. In this case the `Cargo.toml` dependency would look like:\n```toml\n[dependencies]\nrodio = { version = \"0.20.1\", default-features = false, features = [\"symphonia-all\"] }\n```\n### Cross compling aarch64/arm\n\nThrough cpal rodio depends on the alsa library (libasound & libasound-dev), this can make crosscompiling hard. Cpal has some guides on crosscompling in their Readme (https://github.com/RustAudio/cpal). They are missing instructions on aarch64 (arm linux) so we have some here:\n\n#### aarch64/arm on Debian like (Ubuntu/pop)\n- Install crossbuild-essential-arm64: `sudo apt-get install crossbuild-essential-arm64 clang`\n- Add the aarch64 target for rust: `rustup target add aarch64-unknown-linux-gnu`\n- Add the architecture arm64 to apt using: `sudo dpkg --add-architecture arm64`\n- Install the [multi-arch](https://wiki.debian.org/Multiarch/HOWTO) version of libasound2-dev for arm64 using: `sudo apt install libasound2-dev:arm64` \n- Build with the pkg config sysroot set to /usr/aarch64-linux-gnu and aarch64-linux-gnu as linker: `PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu RUSTFLAGS=\"-C linker=aarch64-linux-gnu-gcc\" cargo build --target aarch64-unknown-linux-gnu`\n\nThis will work for other Linux targets too if you change the architecture in the\ncommand and if there are multi-arch packages available.\n\nYou might want to look at [cross](https://github.com/cross-rs/cross) if you are\nrunning on a non debian system or want to make this more repeatable.\n\n# Contributing\n\nFor information on how to contribute to this project, please see our [Contributing Guide](CONTRIBUTING.md).\n\n## License\n[License]: #license\n\nLicensed under either of\n\n* Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0), or\n* MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n### License of your contributions\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 1.0498046875,
          "content": "This guide will help you update your code when upgrading from older versions of rodio.\n\n# rodio 0.20.1 or earlier to current GitHub version\n\n## Features\n- If you use disable the rodio features with `default_features = false` in\n  `Cargo.toml` you need to add a new feature `playback`.\n\n## Source implementations\n- Source had a required method `current_frame_len`. In the latest version of rodio *frame* has been renamed to *span*. You will need to change every occurrence of `current_frame_len` to `current_span_len`.\n\n## OutputStream\n- The outputstream is now more configurable. Where you used `OutputStream::try_default()` you have a choice:\n    - *(recommended)* Get an error when the default stream could not be opened: `OutputStreamBuilder::open_default_stream()?`\n    - Stay close to the old behavior using:\n      `OutputStreamBuilder::open_stream_or_fallback()`, which tries to open the\n      default (audio) stream. If that fails it tries all other combinations of\n      device and settings. The old behavior was only trying all settings of the\n      default device.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "outreach",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}