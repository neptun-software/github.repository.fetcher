{
  "metadata": {
    "timestamp": 1736709057261,
    "page": 172,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "teloxide/teloxide",
      "stars": 3295,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": "/target\n.idea/\n.vscode/\n*.sqlite\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 26.353515625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## unreleased\n\n### Added\n\n- `filter_boost_added` and `filter_reply_to_story` filters to the `MessageFilterExt` trait ([PR 1131](https://github.com/teloxide/teloxide/pull/1131))\n- `filter_mention_command` filter to the `HandlerExt` trait ([issue 494](https://github.com/teloxide/teloxide/issues/494))\n- `filter_business_connection`, `filter_business_message`, `filter_edited_business_message`, and `filter_deleted_business_messages` filters to the `UpdateFilterExt` trait ([PR 1146](https://github.com/teloxide/teloxide/pull/1146))\n- Syntax sugar for making requests ([issue 1143](https://github.com/teloxide/teloxide/issues/1143)):\n  - `bot.forward`, `bot.edit_live_location`, `bot.stop_live_location`, `bot.set_reaction`, `bot.pin`, `bot.unpin`, `bot.edit_text`, `bot.edit_caption`, `bot.edit_media`, `bot.edit_reply_markup`, `bot.stop_poll_message`, `bot.delete` and `bot.copy` methods to the new `crate::sugar::bot::BotMessagesExt` trait\n  - `req.reply_to` method to the new `crate::sugar::request::RequestReplyExt` trait\n  - `req.disable_link_preview` method to the new `crate::sugar::request::RequestLinkPreviewExt` trait\n- `stack_size` setter to `DispatcherBuilder` ([PR 1185](https://github.com/teloxide/teloxide/pull/1185))\n- `utils::render` module to render HTML/Markdown-formatted output ([PR 1152](https://github.com/teloxide/teloxide/pull/1152))\n- `Bot::from_env` now can read and use `TELOXIDE_API_URL` environmental variable ([PR 1197](https://github.com/teloxide/teloxide/pull/1197))\n\n### Changed\n\n- Environment bumps: ([PR 1147](https://github.com/teloxide/teloxide/pull/1147), [PR 1225](https://github.com/teloxide/teloxide/pull/1225))\n  - MSRV (Minimal Supported Rust Version) was bumped from `1.70.0` to `1.80.0`\n  - Some dependencies was bumped: `axum` to `0.8.0`, `sqlx` to `0.8.1`, `tower` to `0.5.0`, `reqwest` to `0.12.7`\n  - `tokio` version was explicitly specified as `1.39`\n- Added new `Send` and `Sync` trait bounds to the `UListener` and `Eh` generic parameters of `try_dispatch_with_listener` and `dispatch_with_listener` ([PR 1185](https://github.com/teloxide/teloxide/pull/1185)) [**BC**]\n- Renamed `Limits::messages_per_min_channel` to `messages_per_min_channel_or_supergroup` to reflect its actual behavior ([PR 1214](https://github.com/teloxide/teloxide/pull/1214))\n\n### Fixed\n\n- Now Vec<MessageId> in requests serializes into [number] instead of [ {message_id: number} ], `forward_messages`, `copy_messages` and `delete_messages` now work properly\n- Now `InlineQueryResultsButton` serializes properly ([issue 1181](https://github.com/teloxide/teloxide/issues/1181))\n- Now `ThreadId` is able to serialize in multipart requests ([PR 1179](https://github.com/teloxide/teloxide/pull/1179))\n- Now stack does not overflow on dispatch ([issue 1154](https://github.com/teloxide/teloxide/issues/1154))\n\n## 0.13.0 - 2024-08-16\n\n### Added\n\n- Documentation regarding the way captions work for the official clients on `SendMediaGroup` ([PR 992](https://github.com/teloxide/teloxide/pull/992))\n- Add `MessageToCopyNotFound` error to `teloxide::errors::ApiError` ([PR 917](https://github.com/teloxide/teloxide/pull/917))\n- `Dispatcher::try_dispatch_with_listener` ([PR 913](https://github.com/teloxide/teloxide/pull/913))\n- Missing Message::filter_* functions ([PR 982](https://github.com/teloxide/teloxide/pull/982)):\n  - `filter_game`\n  - `filter_venue`\n  - `filter_video`\n  - `filter_video_note`\n  - `filter_voice`\n  - `filter_migration`\n  - `filter_migration_from`\n  - `filter_migration_to`\n  - `filter_new_chat_title`\n  - `filter_new_chat_photo`\n  - `filter_delete_chat_photo`\n  - `filter_group_chat_created`\n  - `filter_supergroup_chat_created`\n  - `filter_channel_chat_created`\n  - `filter_message_auto_delete_timer_changed`\n  - `filter_invoice`\n  - `filter_successful_payment`\n  - `filter_connected_website`\n  - `filter_write_access_allowed`\n  - `filter_passport_data`\n  - `filter_proximity_alert_triggered`\n  - `filter_forum_topic_created`\n  - `filter_forum_topic_edited`\n  - `filter_forum_topic_closed`\n  - `filter_forum_topic_reopened`\n  - `filter_general_forum_topic_hidden`\n  - `filter_general_forum_topic_unhidden`\n  - `filter_video_chat_scheduled`\n  - `filter_video_chat_started`\n  - `filter_video_chat_ended`\n  - `filter_video_chat_participants_invited`\n  - `filter_web_app_data`\n- Implement `PostgresStorage`, a persistent dialogue storage based on [PostgreSQL](https://www.postgresql.org/)([PR 996](https://github.com/teloxide/teloxide/pull/996)).\n- Implement `GetChatId` for `teloxide_core::types::{Chat, ChatJoinRequest, ChatMemberUpdated}`.\n- Use [deadpool-redis](https://crates.io/crates/deadpool-redis) for Redis connection pooling ([PR 1081](https://github.com/teloxide/teloxide/pull/1081)).\n- Add `MessageExt::filter_story` method for the corresponding `MediaKind::Story` variant ([PR 1087](https://github.com/teloxide/teloxide/pull/1087)).\n- Add `update_listeners::webhooks::Options::path`, an option to make the webhook server listen on a different path, which can be useful behind a reverse proxy.\n- Add `filter_giveaway`, `filter_giveaway_completed`, `filter_giveaway_created` and `filter_giveaway_winners` filters to `MessageFilterExt` trait ([PR 1101](https://github.com/teloxide/teloxide/pull/1101))\n\n### Fixed\n\n- Use `UserId` instead of `i64` for `user_id` in `html::user_mention` and `markdown::user_mention` ([PR 896](https://github.com/teloxide/teloxide/pull/896))\n- Greatly improved the speed of graceful shutdown (`^C`) ([PR 938](https://github.com/teloxide/teloxide/pull/938))\n- Fix typos in documentation ([PR 953](https://github.com/teloxide/teloxide/pull/953))\n- Use `Seconds` instead of `String` in `InlineQueryResultAudio` for `audio_duration` ([PR 994](https://github.com/teloxide/teloxide/pull/994))\n- High CPU usage on network errors ([PR 1002](https://github.com/teloxide/teloxide/pull/1002), [Issue 780](https://github.com/teloxide/teloxide/issues/780))\n- Fix app build errors when using items gated behind sqlite-storage with the feature sqlite-storage-rustls ([PR 1018](https://github.com/teloxide/teloxide/pull/1018))\n- Fix typo in `ApiError::ToMuchMessages` variant (rename it to `TooMuchMessages`) ([PR 1046](https://github.com/teloxide/teloxide/pull/1046))\n- Fix `ChatPermission` behavior to accurately reflect Telegram's functionality ([PR 1068](https://github.com/teloxide/teloxide/pull/1068))\n\n### Changed\n\n- MSRV (Minimal Supported Rust Version) was bumped from `1.64.0` to `1.68.0` ([PR 950][https://github.com/teloxide/teloxide/pull/950])\n- Sqlx version was bumped from `0.6` to `0.7.3`([PR 995](https://github.com/teloxide/teloxide/pull/995))\n- Feature `sqlite-storage` was renamed to `sqlite-storage-nativetls`([PR 995](https://github.com/teloxide/teloxide/pull/995))\n- MSRV (Minimal Supported Rust Version) was bumped from `1.68.0` to `1.70.0` ([PR 996][https://github.com/teloxide/teloxide/pull/996])\n- `axum` was bumped to `0.7`, along with related libraries used for webhooks ([PR 1093][https://github.com/teloxide/teloxide/pull/1093])\n- `Polling`'s exponential backoff now results in 64 seconds maximum delay instead of 17 minutes ([PR 1113][https://github.com/teloxide/teloxide/pull/1113])\n- `filter_forward_from` was renamed to `filter_forward_origin` and now returns `MessageOrigin` instead of `ForwardFrom` ([PR 1101](https://github.com/teloxide/teloxide/pull/1101))\n\n### Removed\n\n- `UpdateListener::timeout_hint` and related APIs ([PR 938](https://github.com/teloxide/teloxide/pull/938))\n\n## 0.12.2 - 2023-02-15\n\n### Fixed\n\n- `docs.rs` documentation build\n\n## 0.12.1 - 2023-02-15\n\n### Fixed\n\n- Allow `ChatJoinRequest` updates\n- Some example links in documentation\n\n### Added\n\n- `Update::filter_chat_join_request`\n- `sqlite-storage-rustls` feature, that allows using sqlite storage without `native-tls`\n\n### Changed\n\n- Updated `teloxide-core` to v0.9.1; see its [changelog](https://github.com/teloxide/teloxide/blob/master/crates/teloxide-core/CHANGELOG.md#091---2023-02-15) for more\n\n## 0.12.0 - 2023-01-17\n\n### Changed\n\n- Updated `teloxide-macros` to v0.7.1; see its [changelog](crates/teloxide-macros/CHANGELOG.md#071---2023-01-17) for more.\n- Updated `teloxide-core` to v0.9.0; see its [changelog](crates/teloxide-core/CHANGELOG.md#090---2023-01-17) for more.\n- Updated `axum` to v0.6.0.\n- The module structure\n  - `teloxide::dispatching::update_listeners` => `teloxide::update_listeners`\n  - `teloxide::dispatching::repls` => `teloxide::repls`\n- `CommandDescriptions::new` was made `const`\n- The following functions were made `#[must_use]`:\n  - `DispatcherBuilder::{enable_ctrlc_handler, distribution_function}`\n\n### Removed\n\n- `rocksdb-storage` feature and associated items (See [PR #761](https://github.com/teloxide/teloxide/pull/761) for reasoning) [**BC**]\n\n### Deprecated\n\n- `teloxide::dispatching::{update_listeners, repls}` (see in the \"Changed\" section)\n\n## 0.11.3 - 2022-11-28\n\n### Fixed\n\n- Add another missing feature gate for `dispatching::repls` import ([issue #770](https://github.com/teloxide/teloxide/issues/770))\n\n## 0.11.2 - 2022-11-18\n\n### Fixed\n\n- Add missing feature gate for `dispatching::repls` import ([issue #770](https://github.com/teloxide/teloxide/issues/770))\n\n## 0.11.1 - 2022-10-31 [yanked]\n\nThis release was yanked because it accidentally [breaks backwards compatibility](https://github.com/teloxide/teloxide/issues/770).\n\n### Added\n\n- The `rocksdb-storage` feature -- enables the RocksDB support ([PR #753](https://github.com/teloxide/teloxide/pull/753))\n- `teloxide::dispatching::repls::CommandReplExt`, `teloxide::prelude::CommandReplExt` ([issue #740](https://github.com/teloxide/teloxide/issues/740))\n\n### Deprecated\n\n- `teloxide::dispatching::repls::{commands_repl, commands_repl_with_listener}`, `teloxide::utils::command::BotCommands::ty` (use `CommandReplExt` instead)\n\n## 0.11.0 - 2022-10-07\n\n### Changed\n\n- Updated `teloxide-macros` to v0.7.0; see its [changelog](https://github.com/teloxide/teloxide-macros/blob/master/CHANGELOG.md#070---2022-10-06) for more\n- Updated `teloxide-core` to v0.8.0; see its [changelog](https://github.com/teloxide/teloxide-core/blob/master/CHANGELOG.md#080---2022-10-03) for more\n- `UpdateListener` now has an associated type `Err` instead of a generic\n- `AsUpdateStream` now has an associated type `StreamErr` instead of a generic\n- Rename `dispatching::stop_token::{AsyncStopToken, AsyncStopFlag}` => `stop::{StopToken, StopFlag}`\n- Replace the generic error type `E` with `RequestError` for REPLs (`repl(_with_listener)`, `commands_repl(_with_listener)`)\n- The following functions are now `#[must_use]`:\n  - `BotCommands::ty`.\n  - `CommandDescriptions::{new, global_description, username, username_from_me}`.\n  - `teloxide::filter_command`.\n  - `teloxide::dispatching::dialogue::enter`.\n- `BotCommands::parse` now accept `bot_username` as `&str`\n\n### Added\n\n- `requests::ResponseResult` to `prelude`\n\n### Removed\n\n- `dispatching::stop_token::StopToken` trait (all uses are replaced with `stop::StopToken` structure)\n- Some previously deprecated items\n  - `enable_logging!`, `enable_logging_with_filter!`\n  - `HandlerFactory`, `HandlerExt::dispatch_by`\n\n## 0.10.1 - 2022-07-22\n\n### Fixed\n\n- Mark the following functions with `#[must_use]` ([PR 457](https://github.com/teloxide/teloxide/pull/457)):\n  - `TraceStorage::into_inner`.\n  - `AsyncStopToken::new_pair`.\n  - `AsyncStopFlag::is_stopped`.\n  - All from `crate::utils::{html, markdown}`.\n- Rendering of GIFs in lib.rs and crates.io ([PR 681](https://github.com/teloxide/teloxide/pull/681)).\n\n## 0.10.0 - 2022-07-21\n\n### Added\n\n- Security checks based on `secret_token` param of `set_webhook` to built-in webhooks.\n- `dispatching::update_listeners::{PollingBuilder, Polling, PollingStream}`.\n- `DispatcherBuilder::enable_ctrlc_handler` method.\n\n### Fixed\n\n- `Dispatcher` no longer \"leaks\" memory for every inactive user ([PR 657](https://github.com/teloxide/teloxide/pull/657)).\n- Allow specifying a path to a custom command parser in `parse_with` ([issue 668](https://github.com/teloxide/teloxide/issues/668)).\n\n### Changed\n\n- Add the `Key: Clone` requirement for `impl Dispatcher` [**BC**].\n- `dispatching::update_listeners::{polling_default, polling}` now return a named, `Polling<_>` type.\n- Update `teloxide-core` to v0.7.0 with Bot API 6.1 support, see [its changelog][core07c] for more information [**BC**].\n\n[core07c]: https://github.com/teloxide/teloxide-core/blob/master/CHANGELOG.md#070---2022-07-19\n\n### Deprecated\n\n- The `dispatching::update_listeners::polling` function.\n- `Dispatcher::setup_ctrlc_handler` method.\n\n## 0.9.2 - 2022-06-07\n\n### Fixed\n\n- Fix Api Unknown error (Can't parse entities) on message created with `utils::markdown::user_mention_or_link` if user full name contains some escapable symbols eg '.'\n\n## 0.9.1 - 2022-05-27\n\n### Fixed\n\n- Fix `#[command(rename = \"...\")]` for custom command names ([issue 633](https://github.com/teloxide/teloxide/issues/633)).\n\n## 0.9.0 - 2022-04-27\n\n### Added\n\n- The `dispatching::filter_command` function (also accessible as `teloxide::filter_command`) as a shortcut for `dptree::entry().filter_command()`.\n- Re-export `dptree::case!` as `teloxide::handler!` (the former is preferred for new code).\n\n### Changed\n\n- Update `teloxide-core` to v0.6.0 with [Bot API 6.0] support [**BC**].\n\n[Bot API 6.0]: https://core.telegram.org/bots/api#april-16-2022\n\n## 0.8.2 - 2022-04-26\n\n### Fixed\n\n- Fix the broken `#[derive(DialogueState)]` (function return type `dptree::Handler`).\n\n## 0.8.1 - 2022-04-24\n\n### Added\n\n- Implement `GetChatId` for `Update`.\n- The `dialogue::enter()` function as a shortcut for `dptree::entry().enter_dialogue()`.\n\n## 0.8.0 - 2022-04-18\n\n### Removed\n\n- The old dispatching system and related stuff: `dispatching`, `utils::UpState`, `prelude`, `repls2`, `crate::{dialogues_repl, dialogues_repl_with_listener}`, and `#[teloxide(subtransition)]` [**BC**].\n\n### Added\n\n- The new API for dialogue handlers: `teloxide::handler!` ([issue 567](https://github.com/teloxide/teloxide/issues/567)).\n- Built-in webhooks support via `teloxide::dispatching::update_listeners::webhooks` module.\n- `Dialogue::chat_id` for retrieving a chat ID from a dialogue.\n\n### Changed\n\n- Updated `teloxide-core` from version `0.4.5` to version [`0.5.0`](https://github.com/teloxide/teloxide-core/releases/tag/v0.5.0) [**BC**]\n- Rename `dispatching2` => `dispatching` [**BC**].\n- Rename `prelude2` => `prelude` [**BC**].\n- Move `update_listeners`, `stop_token`, `IdleShutdownError`, and `ShutdownToken` from the old `dispatching` to the new `dispatching` (previously `dispatching2`).\n- Replace `crate::{commands_repl, commands_repl_with_listener, repl, repl_with_listener}` with those of the new `dispatching` [**BC**].\n- `UpdateListener::StopToken` is now always `Send` [**BC**].\n- Rename `BotCommand` trait to `BotCommands` [**BC**].\n- `BotCommands::descriptions` now returns `CommandDescriptions` instead of `String` [**BC**].\n- Mark `Dialogue::new` as `#[must_use]`.\n\n### Fixed\n\n- Concurrent update handling in the new dispatcher ([issue 536](https://github.com/teloxide/teloxide/issues/536)).\n\n### Deprecated\n\n- `HandlerFactory` and `HandlerExt::dispatch_by` in favour of `teloxide::handler!`.\n\n## 0.7.3 - 2022-04-03\n\n### Fixed\n\n- Update `teloxide-core` to version `0.4.5` to fix a security vulnerability. See more in `teloxide-core` [release notes](https://github.com/teloxide/teloxide-core/releases/tag/v0.4.5).\n\n## 0.7.2 - 2022-03-23\n\n### Added\n\n- The `Storage::erase` default function that returns `Arc<ErasedStorage>`.\n- `ErasedStorage`, a storage with an erased error type.\n- Allow the storage generic `S` be `?Sized` in `Dialogue` and `HandlerExt::enter_dialogue`.\n\n### Deprecated\n\n- `enable_logging!` and `enable_logging_with_filter!` macros\n\n### Fixed\n\n- Log `UpdateKind::Error` in `teloxide::dispatching2::Dispatcher`.\n- Don't warn about unhandled updates in `repls2` ([issue 557](https://github.com/teloxide/teloxide/issues/557)).\n- `parse_command` and `parse_command_with_prefix` now ignores case of the bot username\n\n## 0.7.1 - 2022-03-09\n\n### Fixed\n\n- Compilation with non-default features\n\n## 0.7.0 - 2022-02-09\n\n### Fixed\n\n- `Dispatcher` wasn't `Send`. Make `DispatcherBuilder::{default_handler, error_handler}` accept a handler that implements `Send + Sync` ([PR 517](https://github.com/teloxide/teloxide/pull/517)).\n\n## 0.6.1 - 2022-02-06\n\n### Fixed\n\n- docs.rs documentation build\n\n## 0.6.0 - 2022-02-06\n\n### Added\n\n- `BotCommand::bot_commands` to obtain Telegram API commands ([issue 262](https://github.com/teloxide/teloxide/issues/262)).\n- The `dispatching2` and `prelude2` modules. They present a new dispatching model based on `dptree`.\n\n### Changed\n\n- Require that `AsUpdateStream::Stream` is `Send`.\n- Restrict a user crate by `CARGO_CRATE_NAME` instead of `CARGO_PKG_NAME` in `enable_logging!` and `enable_logging_with_filter!`.\n- Updated `teloxide-core` to v0.4.0, see [its changelog](https://github.com/teloxide/teloxide-core/blob/master/CHANGELOG.md#040---2022-02-03).\n\n### Deprecated\n\n - The `dispatching` and `prelude` modules.\n\n### Fixed\n\n- Infinite retries while stopping polling listener ([issue 496](https://github.com/teloxide/teloxide/issues/496))\n- `polling{,_default}` and it's `Stream` and `StopToken` not being `Send` (and by extension fix the same problem with `repl`s)\n\n## 0.5.3 - 2021-10-25\n\n### Fixed\n\n- Compilation when the `ctrlc_handler` feature is disabled ([issue 462](https://github.com/teloxide/teloxide/issues/462))\n\n## 0.5.2 - 2021-08-25\n\n### Fixed\n\n- Depend on a correct `futures` version (v0.3.15).\n\n## 0.5.1 - 2021-08-05\n\n### Changed\n\n- Improved log messages when `^C` is received with `^C` handler set up\n\n## 0.5.0 - 2021-07-08\n\n### Added\n\n- `Storage::get_dialogue` to obtain a dialogue indexed by a chat ID.\n- `InMemStorageError` with a single variant `DialogueNotFound` to be returned from `InMemStorage::remove_dialogue`.\n- `RedisStorageError::DialogueNotFound` and `SqliteStorageError::DialogueNotFound` to be returned from `Storage::remove_dialogue`.\n- A way to `shutdown` dispatcher\n  - `Dispatcher::shutdown_token` function.\n  - `ShutdownToken` with a `shutdown` function.\n- `Dispatcher::setup_ctrlc_handler` function ([issue 153](https://github.com/teloxide/teloxide/issues/153)).\n- `IdleShutdownError`\n- Automatic update filtering ([issue 389](https://github.com/teloxide/teloxide/issues/389)).\n- Added reply shortcut to every kind of messages ([PR 404](https://github.com/teloxide/teloxide/pull/404)).\n\n### Changed\n\n- Do not return a dialogue from `Storage::{remove_dialogue, update_dialogue}`.\n- Return an error from `Storage::remove_dialogue` if a dialogue does not exist.\n- Require `D: Clone` in `dialogues_repl(_with_listener)` and `InMemStorage`.\n- Automatically delete a webhook if it was set up in `update_listeners::polling_default` (thereby making it `async`, [issue 319](https://github.com/teloxide/teloxide/issues/319)).\n- `polling` and `polling_default` now require `R: 'static`\n- Refactor `UpdateListener` trait:\n  - Add a `StopToken` associated type.\n    - It must implement a new `StopToken` trait which has the only function `fn stop(self);`\n  - Add a `stop_token` function that returns `Self::StopToken` and allows stopping the listener later ([issue 166](https://github.com/teloxide/teloxide/issues/166)).\n  - Remove blanked implementation.\n  - Remove `Stream` from super traits.\n  - Add `AsUpdateStream` to super traits.\n    - Add an `AsUpdateStream` trait that allows turning implementors into streams of updates (GAT workaround).\n  - Add a `timeout_hint` function (with a default implementation).\n- `Dispatcher::dispatch` and `Dispatcher::dispatch_with_listener` now require mutable reference to self.\n- Repls can now be stopped by `^C` signal.\n- `Noop` and `AsyncStopToken`stop tokens.\n- `StatefulListener`.\n- Emit not only errors but also warnings and general information from teloxide, when set up by `enable_logging!`.\n- Use `i64` instead of `i32` for `user_id` in `html::user_mention` and `markdown::user_mention`.\n- Updated to `teloxide-core` `v0.3.0` (see it's [changelog](https://github.com/teloxide/teloxide-core/blob/master/CHANGELOG.md#030---2021-07-05) for more)\n\n### Fixed\n\n- Remove the `reqwest` dependency. It's not needed after the [teloxide-core] integration.\n- A storage persistence bug ([issue 304](https://github.com/teloxide/teloxide/issues/304)).\n- Log errors from `Storage::{remove_dialogue, update_dialogue}` in `DialogueDispatcher` ([issue 302](https://github.com/teloxide/teloxide/issues/302)).\n- Mark all the functions of `Storage` as `#[must_use]`.\n\n## 0.4.0 - 2021-03-22\n\n### Added\n\n- Integrate [teloxide-core].\n- Allow arbitrary error types to be returned from (sub)transitions ([issue 242](https://github.com/teloxide/teloxide/issues/242)).\n- The `respond` function, a shortcut for `ResponseResult::Ok(())`.\n- The `sqlite-storage` feature -- enables SQLite support.\n- `Dispatcher::{my_chat_members_handler, chat_members_handler}`\n\n[teloxide-core]: https://github.com/teloxide/teloxide-core\n\n### Deprecated\n\n- `UpdateWithCx::answer_str`\n\n### Fixed\n\n- Hide `SubtransitionOutputType` from the docs.\n\n### Changed\n\n- Export `teloxide_macros::teloxide` in `prelude`.\n- `dispatching::dialogue::serializer::{JSON -> Json, CBOR -> Cbor}`\n- Allow `bot_name` be `N`, where `N: Into<String> + ...` in `commands_repl` & `commands_repl_with_listener`.\n- 'Edit methods' (namely `edit_message_live_location`, `stop_message_live_location`, `edit_message_text`,\n   `edit_message_caption`, `edit_message_media` and `edit_message_reply_markup`) are split into common and inline\n   versions (e.g.: `edit_message_text` and `edit_inline_message_text`). Instead of `ChatOrInlineMessage` common versions\n   accept `chat_id: impl Into<ChatId>` and `message_id: i32` whereas inline versions accept\n   `inline_message_id: impl Into<String>`. Also note that return type of inline versions is `True` ([issue 253], [pr 257])\n- `ChatOrInlineMessage` is renamed to `TargetMessage`, it's `::Chat`  variant is renamed to `::Common`,\n   `#[non_exhaustive]` annotation is removed from the enum, type of `TargetMessage::Inline::inline_message_id` changed\n   `i32` => `String`. `TargetMessage` now implements `From<String>`, `get_game_high_scores` and `set_game_score` use\n   `Into<TargetMessage>` to accept `String`s. ([issue 253], [pr 257])\n- Remove `ResponseResult` from `prelude`.\n\n[issue 253]: https://github.com/teloxide/teloxide/issues/253\n[pr 257]: https://github.com/teloxide/teloxide/pull/257\n\n## 0.3.4 - 2020-01-13\n\n### Fixed\n\n- Failing compilation with `serde::export` ([issue 328](https://github.com/teloxide/teloxide/issues/328)).\n\n## 0.3.3 - 2020-10-30\n\n### Fixed\n\n- The `dice` field from `MessageDice` is public now ([issue 306](https://github.com/teloxide/teloxide/issues/306))\n\n## 0.3.2 - 2020-10-23\n\n### Added\n\n- `LoginUrl::new` ([issue 298](https://github.com/teloxide/teloxide/issues/298))\n\n## 0.3.1 - 2020-08-25\n\n### Added\n\n- `Bot::builder` method ([PR 269](https://github.com/teloxide/teloxide/pull/269)).\n\n## 0.3.0 - 2020-07-31\n\n### Added\n\n- Support for typed bot commands ([issue 152](https://github.com/teloxide/teloxide/issues/152)).\n- `BotBuilder`, which allows setting a default `ParseMode`.\n- The `Transition`, `Subtransition`, `SubtransitionOutputType` traits.\n- A nicer approach to manage dialogues via `#[derive(Transition)]` + `#[teloxide(subtransition)]` (see [`examples/dialogue_bot`](https://github.com/teloxide/teloxide/tree/af2aa218e7bfc442ab4475023a1c661834f576fc/examples/dialogue_bot)).\n- The `redis-storage` feature -- enables the Redis support.\n- The `cbor-serializer` feature -- enables the `CBOR` serializer for dialogues.\n- The `bincode-serializer` feature -- enables the `Bincode` serializer for dialogues.\n- The `frunk` feature -- enables `teloxide::utils::UpState`, which allows mapping from a structure of `field1, ..., fieldN` to a structure of `field1, ..., fieldN, fieldN+1`.\n- Upgrade to v4.9 Telegram bots API.\n- `teloxide::utils::client_from_env` -- constructs a client from the `TELOXIDE_TOKEN` environmental variable.\n- Import `Transition`, `TransitionIn`, `TransitionOut`, `UpState` to `teloxide::prelude`.\n- Import `repl`, `commands_repl` to `teloxide`.\n- Let users inspect an unknown API error using `ApiErrorKind::Unknown(String)`. All the known API errors are placed into `KnownApiErrorKind`.\n- Setters to all the API types.\n- `teloxide::dispatching::dialogue::serializer` -- various serializers for memory storages. The `Serializer` trait, `Bincode`, `CBOR`, `JSON`.\n- `teloxide::{repl, repl_with_listener, commands_repl, commands_repl_with_listener, dialogues_repl, dialogues_repl_with_listener}`\n- `InputFile::Memory`\n- Option to hide a command from description ([issue 217](https://github.com/teloxide/teloxide/issues/217)).\n- Respect the `TELOXIDE_PROXY` environment variable in `Bot::from_env`.\n\n### Deprecated\n\n- `Bot::{from_env_with_client, new, with_client}`\n\n### Changed\n\n- `DialogueDispatcherHandlerCx` -> `DialogueWithCx`.\n- `DispatcherHandlerCx` -> `UpdateWithCx`.\n- Now provided description of unknown telegram error, by splitting ApiErrorKind at `ApiErrorKind` and `ApiErrorKindKnown` enums ([issue 199](https://github.com/teloxide/teloxide/issues/199)).\n- Extract `Bot` from `Arc` ([issue 216](https://github.com/teloxide/teloxide/issues/230)).\n- Mark all the API types as `#[non_exhaustive]`.\n- Replace all `mime_type: String` with `MimeWrapper`.\n\n### Fixed\n\n- Now methods which can send file to Telegram return `tokio::io::Result<T>`. Before that it could panic ([issue 216](https://github.com/teloxide/teloxide/issues/216)).\n- If a bot wasn't triggered for several days, it stops responding ([issue 223](https://github.com/teloxide/teloxide/issues/223)).\n\n## 0.2.0 - 2020-02-25\n\n### Added\n\n- The functionality to parse commands only with a correct bot's name (breaks backwards compatibility) ([Issue 168](https://github.com/teloxide/teloxide/issues/168)).\n- This `CHANGELOG.md`.\n\n### Fixed\n\n- Fix parsing a pinned message ([Issue 167](https://github.com/teloxide/teloxide/issues/167)).\n- Replace `LanguageCode` with `String`, because [the official Telegram documentation](https://core.telegram.org/bots/api#getchat) doesn't specify a concrete version of IETF language tag.\n- Problems with the `poll_type` field ([Issue 178](https://github.com/teloxide/teloxide/issues/178)).\n- Make `polling_default` actually a long polling update listener ([PR 182](https://github.com/teloxide/teloxide/pull/182)).\n\n### Removed\n\n- [either](https://crates.io/crates/either) from the dependencies in `Cargo.toml`.\n- `teloxide-macros` migrated into [the separate repository](https://github.com/teloxide/teloxide-macros) to easier releases and testing.\n\n## 0.1.0 - 2020-02-19\n\n### Added\n\n- This project.\n"
        },
        {
          "name": "CODE_STYLE.md",
          "type": "blob",
          "size": 8.9697265625,
          "content": "# Code style\n\nThis is a description of a coding style that every contributor must follow.\nPlease, read the whole document before you start pushing code.\n\n## Generics\n\nAll trait bounds should be written in `where`:\n\n```rust\n// GOOD\npub fn new<N, T, P, E>(user_id: i32, name: N, title: T, png_sticker: P, emojis: E) -> Self\nwhere\n    N: Into<String>,\n    T: Into<String>,\n    P: Into<InputFile>,\n    E: Into<String>,\n{ ... }\n\n// BAD\npub fn new<N: Into<String>,\n           T: Into<String>,\n           P: Into<InputFile>,\n           E: Into<String>>\n    (user_id: i32, name: N, title: T, png_sticker: P, emojis: E) -> Self { ... }\n```\n```rust\n// GOOD\nimpl<T> Trait for Wrap<T>\nwhere\n    T: Trait\n{ ... }\n\n// BAD\nimpl<T: Trait> Trait for Wrap<T> { ... }\n```\n\n**Rationale:**\n- `where` clauses are easier to read when there are a lot of bounds\n- uniformity\n\n## Documentation comments\n\n1. Documentation must describe _what_ your code does and mustn't describe _how_ your code does it and bla-bla-bla.\n2. Be sure that your comments follow the grammar, including punctuation, the first capital letter and so on:\n   ```rust\n   // GOOD\n   /// This function makes a request to Telegram.\n   pub fn make_request(url: &str) -> String { ... }\n   \n   // BAD\n   /// this function make request to telegram\n   pub fn make_request(url: &str) -> String { ... }\n   ```\n3. Do not use ending punctuation in short list items (usually containing just one phrase or sentence):\n   ```md\n   <!-- GOOD -->\n   - Handle different kinds of Update\n   - Pass dependencies to handlers\n   - Disable a default Ctrl-C handling\n\n   <!-- BAD -->\n   - Handle different kinds of Update.\n   - Pass dependencies to handlers.\n   - Disable a default Ctrl-C handling.\n\n   <!-- BAD -->\n   - Handle different kinds of Update;\n   - Pass dependencies to handlers;\n   - Disable a default Ctrl-C handling;\n   ```\n3. Link resources in your comments when possible:\n   ```rust\n   /// Download a file from Telegram.\n   ///\n   /// `path` can be obtained from the [`Bot::get_file`].\n   ///\n   /// To download into [`AsyncWrite`] (e.g. [`tokio::fs::File`]), see\n   /// [`Bot::download_file`].\n   ///\n   /// [`Bot::get_file`]: crate::bot::Bot::get_file\n   /// [`AsyncWrite`]: tokio::io::AsyncWrite\n   /// [`tokio::fs::File`]: tokio::fs::File\n   /// [`Bot::download_file`]: crate::Bot::download_file\n   ```\n4. Write `teloxide`, `teloxide-macros`, and `teloxide-core`, not \"teloxide\", \"Teloxide\", \"teloxide-macros\" or any other variant.\n\n## Use `Self` where possible\n\nWhen referring to the type for which block is implemented, prefer using `Self`, rather than the name of the type:\n\n```rust\nimpl ErrorKind {\n    // GOOD\n    fn print(&self) {\n        Self::Io => println!(\"Io\"),\n        Self::Network => println!(\"Network\"),\n        Self::Json => println!(\"Json\"),\n    }\n\n    // BAD\n    fn print(&self) {\n        ErrorKind::Io => println!(\"Io\"),\n        ErrorKind::Network => println!(\"Network\"),\n        ErrorKind::Json => println!(\"Json\"),\n    }\n}\n```\n```rust\nimpl<'a> AnswerCallbackQuery<'a> {\n    // GOOD\n    fn new<C>(bot: &'a Bot, callback_query_id: C) -> Self\n    where\n        C: Into<String>,\n    { ... }\n\n    // BAD\n    fn new<C>(bot: &'a Bot, callback_query_id: C) -> AnswerCallbackQuery<'a>\n    where\n        C: Into<String>,\n    { ... }\n}\n```\n\n**Rationale:** `Self` is generally shorter and it's easier to copy-paste code or rename the type.\n\n## Avoid duplication in fields names\n\n```rust\nstruct Message {\n    // GOOD\n    #[serde(rename = \"message_id\")]\n    id: MessageId,\n\n    // BAD\n    message_id: MessageId,\n}\n```\n\n**Rationale:** duplication blurs the focus of code, making it unnecessarily longer.\n\n## Conventional generic names\n\nUse a generic parameter name `S` for streams, `Fut` for futures, `F` for functions (where possible).\n\n**Rationale:** uniformity.\n\n## Deriving traits\n\nDerive `Copy`, `Clone`, `Eq`, `PartialEq`, `Hash` and `Debug` for public types when possible.\n\n**Rationale:** these traits can be useful for users and can be implemented for most types.\n\nDerive `Default` when there is a reasonable default value for the type.\n\n**Rationale:** `Default` plays nicely with generic code (for example, `mem::take`).\n\n## `Into`-polymorphism\n\nUse `T: Into<Ty>` when this can simplify user code.\nI.e. when there are types that implement `Into<Ty>` that are likely to be passed to this function.\n\n**Rationale:** conversions unnecessarily complicate caller code and can be confusing for beginners.\n\n## `must_use`\n\nAlways mark functions as `#[must_use]` if they don't have side effects and the only reason to call them is to get the result:\n\n```rust\nimpl User {\n    // GOOD\n    #[must_use]\n    fn full_name(&self) -> String {\n        format!(\"{} {}\", user.first_name, user.last_name)\n    }\n}\n```\n\n**Rationale:** users will get warnings if they forgot to do something with the result, potentially preventing bugs.\n\n## Creating boxed futures\n\nPrefer `Box::pin(async { ... })` instead of `async { ... }.boxed()`.\n\n**Rationale:** the former is generally formatted better by rustfmt.\n\n## Full paths for logging\n\nAlways write `log::<op>!(...)` instead of importing `use log::<op>;` and invoking `<op>!(...)`.\n\n```rust\n// GOOD\nlog::warn!(\"Everything is on fire\");\n\n// BAD\nuse log::warn;\n\nwarn!(\"Everything is on fire\");\n```\n\n**Rationale:**\n- Less polluted import blocks\n- Uniformity\n\n## `&str` -> `String` conversion\n\nPrefer using `.to_owned()`, rather than `.to_string()`, `.into()`, `String::from`, etc.\n\n**Rationale:** uniformity, intent clarity.\n\n## Order of imports\n\nSeparate import groups with blank lines. Use one use per crate.\n\nModule declarations come before the imports.\nOrder them in \"suggested reading order\" for a person new to the code base.\n\n```rust\nmod x;\nmod y;\n\n// First std.\nuse std::{ ... }\n\n// Second, external crates (both crates.io crates and other rust-analyzer crates).\nuse crate_foo::{ ... }\nuse crate_bar::{ ... }\n\n// Then current crate.\nuse crate::{}\n\n// Finally, parent and child modules, but prefer `use crate::`.\nuse super::{}\n\n// Re-exports are treated as item definitions rather than imports, so they go\n// after imports and modules. Use them sparingly.\npub use crate::x::Z;\n```\n\n**Rationale:**\n- Reading order is important for new contributors\n- Grouping by crate allows spotting unwanted dependencies easier\n- Consistency\n\n## Import Style\n\nWhen implementing traits from `std::fmt` import the module:\n\n```rust\n// GOOD\nuse std::fmt;\n\nimpl fmt::Display for RenameError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result { .. }\n}\n\n// BAD\nimpl std::fmt::Display for RenameError {\n    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result { .. }\n}\n```\n\n**Rationale:**\n- Makes it clear that a trait is implemented, rather than used\n- Less typing\n\nPrefer `use crate::foo::bar` to `use super::bar` or `use self::bar::baz`. **Rationale:**\n- Works in all cases\n- Consistency\n\n## Order of Items\n\nOptimize for the reader who sees the file for the first time, and wants to get a general idea about what's going on. People read things from top to bottom, so place most important things first.\n\nSpecifically, if all items except one are private, always put the non-private item on top:\n```rust\n// GOOD\npub(crate) fn frobnicate() {\n    Helper::act()\n}\n\n#[derive(Default)]\nstruct Helper { stuff: i32 }\n\nimpl Helper {\n    fn act(&self) {\n\n    }\n}\n\n// BAD\n#[derive(Default)]\nstruct Helper { stuff: i32 }\n\npub(crate) fn frobnicate() {\n    Helper::act()\n}\n\nimpl Helper {\n    fn act(&self) {\n\n    }\n}\n```\n\nIf there's a mixture of private and public items, put public items first.\n\nPut structs and enums first, functions and impls last. Order type declarations in a top-down manner:\n\n```rust\n// GOOD\nstruct Parent {\n    children: Vec<Child>\n}\n\nstruct Child;\n\nimpl Parent {\n}\n\nimpl Child {\n}\n\n// BAD\nstruct Child;\n\nimpl Child {\n}\n\nstruct Parent {\n    children: Vec<Child>\n}\n\nimpl Parent {\n}\n```\n\n**Rationale:**\n- Easier to get a sense of the API by visually scanning the file\n- If function bodies are folded in the editor, the source code should be read as documentation for the public API\n\n## Early Returns\n\nDo use early returns:\n\n```rust\n// GOOD\nfn foo() -> Option<Bar> {\n    if !condition() {\n        return None;\n    }\n\n    Some(...)\n}\n\n// BAD\nfn foo() -> Option<Bar> {\n    if condition() {\n        Some(...)\n    } else {\n        None\n    }\n}\n```\n\n**Rationale:** reduce cognitive stack usage.\n\n## If-let\n\nAvoid the `if let ... { } else { }` construct, use `match` instead:\n\n```rust\n// GOOD\nmatch ctx.expected_type.as_ref() {\n    Some(expected_type) => completion_ty == expected_type && !expected_type.is_unit(),\n    None => false,\n}\n\n// BAD\nif let Some(expected_type) = ctx.expected_type.as_ref() {\n    completion_ty == expected_type && !expected_type.is_unit()\n} else {\n    false\n}\n```\n\n**Rationale:**\n- `match` is almost always more compact\n- The `else` branch can get a more precise pattern: `None` or `Err(_)` instead of `_`\n\n## Empty Match Arms\n\nUse `=> (),` when a match arm is intentionally empty:\n```rust\n// GOOD\nmatch result {\n    Ok(_) => (),\n    Err(err) => error!(\"{}\", err),\n}\n\n// BAD\nmatch result {\n    Ok(_) => {}\n    Err(err) => error!(\"{}\", err),\n}\n```\n\n**Rationale:** consistency.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.880859375,
          "content": "# Contributing\n\n> [!NOTE]\n>\n> These contributing instructions might not be fully up-to-date or complete.\n> However, they should be a good starting point.\n>\n> If you find inaccuracies/missing things, please expand this or contact us.\n\n## Reporting bugs, questions, feature requests\n\nTo report a bug or suggest new functionality, go to the [issues](https://github.com/teloxide/teloxide/issues). Try to make MRE (**M**inimal **R**eproducible **E**xample) and specify your `teloxide` version to let others help you.\n\nIf you want to ask a question, you can either\n- open a new [GitHub discussion](https://github.com/teloxide/teloxide/discussions), or\n- write to our Telegram group ([ENG](https://t.me/teloxide), [RU](https://t.me/teloxide_ru)).\n\n## Code\n\n### Style guide\n\nBefore writing code, please read [our code style](./CODE_STYLE.md).\n\n### Git\n\nTo change the source code, you need a local copy of it. Fork the `master` branch of this repository via GitHub and clone your fork locally.\n\nWhen working on a new thing, create a new branch with `git switch -c my-branch-name` (or other commands that work with branches). This way, it will be easier to manage when you want to do other things.\n\nWhen your changes are ready, you can open a new GitHub pull request.\n\n### Pull Requests\n\nIf your pull request fixes/resolves an existing [GitHub issue], please specify so in the PR description. For example:\n\n> Fixes #991.\n\nYou can learn more about [using keywords in issues and pull requests] in the GitHub documentation.\n\nIf your pull request suggests new functionality or new changes, please explain your point of view and all the necessary details (pros, cons, why you chose the design you chose, your use cases, etc.)\n\nIn general, try to make PR title/description as clear as possible, as they are the primary ways of communicating your intent to the reviewer.\n\n[GitHub issue]: https://github.com/teloxide/teloxide/issues\n[using keywords in issues and pull requests]: https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/using-keywords-in-issues-and-pull-requests\n\n### Merge conflicts\n\nIf your branch has conflicts with master, please resolve them by doing something like this:\n\n```shell\n# Temporary switch to master branch\ngit switch master\n\n# Pull changes from the upstream.\n# You may need to use something different from \"origin\",\n# depending on how you setup your remotes.\ngit pull origin master\n\n# Switch back to your feature branch\ngit switch -\n\n# Move your changes on top of changes in master branch.\ngit rebase master\n\n# Here you'll need to resolve the conflicts,\n# git commands will print some guidance.\n\n# Once conflicts are resolved,\n# forcefully push the changes to your fork\ngit push --force-with-lease\n```\n\n### Testing\n\nWhen you open a PR, it will be tested in the CI. We recommend you test the PR before opening it:\n\n```shell\n# Formatting (use `-- --check` if you only want to check)\ncargo fmt --all\n\n# Build\ncargo build --features \"full nightly\"\n\n# Run linter\ncargo clippy --all-targets --features \"full nightly\"\n\n# Running tests\ncargo test --features \"full nightly\"\n\n# Documentation (use --open if you want to open it in a browser)\n# (note the -s, `docs` is an alias to pass some additional flags to `rustdoc`)\ncargo docs\n```\n\n### Bumping supported TBA version\n\nWhen you introduce changes that bump suppported Telegram Bot API version (e.g. 6.9 → 7.0), you must:\n\n- Specify your changes in [crates/teloxide-core/CHANGELOG.md](crates/teloxide-core/CHANGELOG.md) file\n- Change TBA version and it's announce date in `api_version: ApiVersion(ver: \"7.0\", date: \"December 29, 2023\"),` line in head of [crates/teloxide-core/schema.ron](crates/teloxide-core/schema.ron) file\n- Change TBA version in `(Currently, version … is supported)` line in head of [crates/teloxide-core/src/lib.rs](crates/teloxide-core/src/lib.rs) file\n- Change TBA version in `Currently, version … of` line in head of [crates/teloxide/src/lib.rs](crates/teloxide/src/lib.rs) file\n- Change TBA version in `…https://img.shields.io/badge/API%20coverage…` line in [crates/teloxide-core/README.md](crates/teloxide-core/README.md) file\n- Change TBA version in `…https://img.shields.io/badge/API%20coverage…` line in [README.md](README.md) file\n\n## @teloxidebot\n\n`teloxide` uses @teloxidebot as a helper to manage PRs and issues. It is based on triagebot used by rustc developers, which docs can be found [here](https://forge.rust-lang.org/triagebot/index.html).\n\nWe will describe here a few most used @teloxidebot's features, but we still recommend you to read the docs.\n\n### PR status tracking\n\n`teloxide` uses `S-*` labels (mainly https://github.com/teloxide/teloxide/labels/S-waiting-on-author and https://github.com/teloxide/teloxide/labels/S-waiting-on-review) to track the status of pull requests.\n\nYou can change the status with `@teloxidebot review` and `@teloxidebot ready` (sets the status to https://github.com/teloxide/teloxide/labels/S-waiting-on-review) or `@teloxidebot author` (sets the status to https://github.com/teloxide/teloxide/labels/S-waiting-on-author).\n\nRequesting a review from PR's assignee via GitHub UI will also change the status of the PR to waiting on review. Similarly, submitting a review that requests changes will change the status of the PR to waiting on author.\n\nThere is also https://github.com/teloxide/teloxide/labels/S-blocked, which can be set with `@teloxidebot blocked`.\n\nPlease note that your PR won't be reviewed unless it's waiting for review :)\n\n### Labels\n\nNormally, GitHub only allows privileged users to change labels. @teloxidebot allows anyone to add or remove certain [labels](https://github.com/teloxide/teloxide/labels/) with `@teloxidebot label +additional_label -removed_label`. See more in the [documentation](https://forge.rust-lang.org/triagebot/index.html).\n\n### PR assignment\n\nWhen a PR is created, @teloxidebot will automatically assign one of the maintainers to it. If you want to override this assignment, use `r? @ReviewerUsername`.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 73.1513671875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"aquamarine\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21cc1548309245035eb18aa7f0967da6bc65587005170c56e6ef2788a4cf3f4e\"\ndependencies = [\n \"include_dir\",\n \"itertools\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"atoi\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f28d99ec8bfea296261ca1af174f24225171fea9664ba9003cbebee704810528\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"axum\"\nversion = \"0.7.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"504e3947307ac8326a5437504c517c4b56716c9d98fac0028c2acc7ca47d70ae\"\ndependencies = [\n \"async-trait\",\n \"axum-core\",\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"itoa\",\n \"matchit\",\n \"memchr\",\n \"mime\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustversion\",\n \"serde\",\n \"serde_json\",\n \"serde_path_to_error\",\n \"serde_urlencoded\",\n \"sync_wrapper 1.0.1\",\n \"tokio\",\n \"tower\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"axum-core\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09f2bd6146b97ae3359fa0cc6d6b376d9539582c7b4220f041a33ec24c226199\"\ndependencies = [\n \"async-trait\",\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"mime\",\n \"pin-project-lite\",\n \"rustversion\",\n \"sync_wrapper 1.0.1\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8334215b81e418a0a7bdb8ef0849474f40bb10c8b71f1c4ed315cff49f32494d\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67b9470d453346108f93a59222a9a1a5724db32d0a4727b7ab7ace4b4d822dc9\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"memchr\",\n \"pin-project-lite\",\n \"tokio\",\n \"tokio-util\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e\"\n\n[[package]]\nname = \"cool_asserts\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee9f254e53f61e2688d3677fa2cbe4e9b950afd56f48819c98817417cf6b28ec\"\ndependencies = [\n \"indent_write\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636\"\ndependencies = [\n \"crc-catalog\",\n]\n\n[[package]]\nname = \"crc-catalog\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\"\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a01d95850c592940db9b8194bc39f4bc0e89dee5c4265e4b1807c34a9aba453c\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"859d65a907b6852c9361e3185c862aae7fafd2887876799fa55f5f99dc40d610\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.13.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c972679f83bdf9c42bd905396b6c3588a843a17f0f16dfcfa3e2c5d57441835\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"deadpool\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb84100978c1c7b37f09ed3ce3e5f843af02c2a2c431bae5b19230dad2c1b490\"\ndependencies = [\n \"async-trait\",\n \"deadpool-runtime\",\n \"num_cpus\",\n \"tokio\",\n]\n\n[[package]]\nname = \"deadpool-redis\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36f2381b0e993d06a1f6d49f486b33bc4004085bf980340fc05726bacc681fff\"\ndependencies = [\n \"deadpool\",\n \"redis\",\n]\n\n[[package]]\nname = \"deadpool-runtime\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"092966b41edc516079bdf31ec78a2e0588d1d0c08f78b91d8307215928642b2b\"\ndependencies = [\n \"tokio\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f33878137e4dafd7fa914ad4e259e18a4e8e532b9617a2d0150262bf53abfce\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"dotenvy\"\nversion = \"0.15.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b\"\n\n[[package]]\nname = \"dptree\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d81175dab5ec79c30e0576df2ed2c244e1721720c302000bb321b107e82e265c\"\ndependencies = [\n \"futures\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"erasable\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f11890ce181d47a64e5d1eb4b6caba0e7bae911a356723740d058a5d0340b7d\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"etcetera\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"136d1b5283a1ab77bd9257427ffd09d8667ced0570b6f938942bc7568ed5b943\"\ndependencies = [\n \"cfg-if\",\n \"home\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"flume\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0e4dd2a88388a1f4ccc7c9ce104604dab68d9f408dc34cd45823d5a9069095\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n \"spin\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-intrusive\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d930c203dd0b6ff06e0201a4a2fe9149b43c684fd4420555b26d21b1a02956f\"\ndependencies = [\n \"futures-core\",\n \"lock_api\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e8ac6999421f49a846c2d4411f337e53497d8ec55d67753beffa43c5d9205\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap 2.2.5\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b43ede17f21864e81be2fa654110bf1e793774238d86ef8555c37e6519c0403\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af\"\ndependencies = [\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hkdf\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5f8eb2ad728638ea2c7d47a21db23b7b58a72ed6a38256b8a1849f15fbbdf7\"\ndependencies = [\n \"hmac\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbbff0a806a4728c99295b254c8838933b5b082d75e3cb70c8dab21fdfbcfa9a\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hyper-tls\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70206fc6890eaca9fde8a0bf71caa2ddfc9fe045ac9e5c70df101a7dbde866e0\"\ndependencies = [\n \"bytes\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"native-tls\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"include_dir\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"923d117408f1e49d914f1a379a309cffe4f18c05cf4e3d12e613a15fc81bd0dd\"\ndependencies = [\n \"include_dir_macros\",\n]\n\n[[package]]\nname = \"include_dir_macros\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cab85a7ed0bd5f0e76d93846e0147172bed2e2d3f859bcc33a8d9699cad1a75\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"indent_write\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0cfe9645a18782869361d9c8732246be7b410ad4e919d3609ebabdac00ba12c3\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b0b929d511467233429c45a44ac1dcaa21ba0f5ba11e4879e6ed28ddb4f9df4\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi 0.4.0\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.161\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9489c2807c139ffd9c1794f4af0ebe86a828db53ecdc7fea2111d0fed085d1\"\n\n[[package]]\nname = \"libsqlite3-sys\"\nversion = \"0.30.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e99fb7a497b1e3339bc746195567ed8d3e24945ecd636e3619d20b9de9e9149\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"matchit\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94\"\n\n[[package]]\nname = \"md-5\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf\"\ndependencies = [\n \"cfg-if\",\n \"digest\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c44f8e672c00fe5308fa235f821cb4198414e1c77935c1ab6948d3fd78550e\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be57f64e946e500c8ee36ef6331845d40a93055567ec57e8fae13efd33759b95\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c0f5fad0874fc7abcd4d750e76917eaebbecaa2c20bde22e1dbeeba8beb758c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ae130e2f271fbc2ac3a40fb1d07180839cdbbe443c7a27e1e3c13c5cac0116d\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"pretty_env_logger\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"865724d4dbe39d9f3dd3b52b88d859d66bcb2d6a0acfd5ea68a65fb66d4bdc1c\"\ndependencies = [\n \"env_logger\",\n \"log\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c7c5fdde3cdae7203427dc4f0a68fe0ed09833edc525a03456b153b79828684\"\ndependencies = [\n \"bytes\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash\",\n \"rustls\",\n \"socket2\",\n \"thiserror\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fadfaed2cd7f389d0161bb73eeb07b7b78f8691047a6f3e73caaeae55310a4a6\"\ndependencies = [\n \"bytes\",\n \"rand\",\n \"ring\",\n \"rustc-hash\",\n \"rustls\",\n \"slab\",\n \"thiserror\",\n \"tinyvec\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e346e016eacfff12233c243718197ca12f148c84e1e84268a896699b41c71780\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rc-box\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0690759eabf094030c2cdabc25ade1395bac02210d920d655053c1d49583fd8\"\ndependencies = [\n \"erasable\",\n]\n\n[[package]]\nname = \"redis\"\nversion = \"0.24.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c580d9cbbe1d1b479e8d67cf9daf6a62c957e6846048408b80b43ac3f6af84cd\"\ndependencies = [\n \"async-trait\",\n \"bytes\",\n \"combine\",\n \"futures-util\",\n \"itoa\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"ryu\",\n \"tokio\",\n \"tokio-util\",\n \"url\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.4.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick 1.1.2\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick 1.1.2\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a77c62af46e79de0a562e1a9849205ffcb7fc1238876e9bd743357570e04046f\"\ndependencies = [\n \"base64 0.22.1\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-core\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-tls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"mime_guess\",\n \"native-tls\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"quinn\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper 1.0.1\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tokio-rustls\",\n \"tokio-util\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"wasm-streams\",\n \"web-sys\",\n \"webpki-roots\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57397d16646700483b67d2dd6511d79318f9d057fdbd21a4066aeac8b41d310a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ron\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94\"\ndependencies = [\n \"base64 0.21.7\",\n \"bitflags 2.4.2\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa260229e6538e52293eeb577aabd09945a09d6d9cc0fc550ed7529056c2e32a\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9cc1d47e243d655ace55ed38201c19ae02c148ae56412ab8750e8f0166ab7f\"\ndependencies = [\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcaf18a4f2be7326cd874a5fa579fae794320a0f388d365dca7e480e55f83f8a\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01227be5826fa0690321a2ba6c5cd57a19cf3f6a09e76973b58e61de6ab9d1c1\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"770452e37cad93e0a50d5abc3990d2bc351c36d0328f86cefec2f2fb206eaef6\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea4a292869320c0272d7bc55a5a6aafaff59b4f63404a003887b679a2e05b4b6\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.214\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55c3193aca71c12ad7890f1785d2b73e1b9f63a0bbc353c08ef26fe03fc56b5\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_cbor\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5\"\ndependencies = [\n \"half\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.214\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de523f781f095e28fa605cdce0f8307e451cc0fd14e2eb4cd2e98a355b147766\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.132\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d726bfaff4b320266d395898905d0eba0345aae23b54aee3a737e260fd46db03\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_path_to_error\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af99884400da37c88f5e9146b7f1fd0fbcae8f6eec4e9da38b67d05486f814a6\"\ndependencies = [\n \"itoa\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_with\"\nversion = \"1.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"678b5a069e50bf00ecd22d0cd8ddf7c236f68581b03db652061ed5eb13a312ff\"\ndependencies = [\n \"serde\",\n \"serde_with_macros\",\n]\n\n[[package]]\nname = \"serde_with_macros\"\nversion = \"1.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e182d6ec6f05393cc0e5ed1bf81ad6db3a8feedf8ee515ecdd369809bcce8082\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\ndependencies = [\n \"lock_api\",\n]\n\n[[package]]\nname = \"sqlformat\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7bba3a93db0cc4f7bdece8bb09e77e2e785c20bfebf79eb8340ed80708048790\"\ndependencies = [\n \"nom\",\n \"unicode_categories\",\n]\n\n[[package]]\nname = \"sqlx\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93334716a037193fac19df402f8571269c84a00852f6a7066b5d2616dcd64d3e\"\ndependencies = [\n \"sqlx-core\",\n \"sqlx-macros\",\n \"sqlx-postgres\",\n \"sqlx-sqlite\",\n]\n\n[[package]]\nname = \"sqlx-core\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4d8060b456358185f7d50c55d9b5066ad956956fddec42ee2e8567134a8936e\"\ndependencies = [\n \"atoi\",\n \"byteorder\",\n \"bytes\",\n \"crc\",\n \"crossbeam-queue\",\n \"either\",\n \"event-listener\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-intrusive\",\n \"futures-io\",\n \"futures-util\",\n \"hashbrown 0.14.5\",\n \"hashlink\",\n \"hex\",\n \"indexmap 2.2.5\",\n \"log\",\n \"memchr\",\n \"native-tls\",\n \"once_cell\",\n \"paste\",\n \"percent-encoding\",\n \"rustls\",\n \"rustls-pemfile\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"smallvec\",\n \"sqlformat\",\n \"thiserror\",\n \"tokio\",\n \"tokio-stream\",\n \"tracing\",\n \"url\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"sqlx-macros\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cac0692bcc9de3b073e8d747391827297e075c7710ff6276d9f7a1f3d58c6657\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"sqlx-core\",\n \"sqlx-macros-core\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"sqlx-macros-core\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1804e8a7c7865599c9c79be146dc8a9fd8cc86935fa641d3ea58e5f0688abaa5\"\ndependencies = [\n \"dotenvy\",\n \"either\",\n \"heck 0.5.0\",\n \"hex\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"sqlx-core\",\n \"sqlx-postgres\",\n \"sqlx-sqlite\",\n \"syn 2.0.85\",\n \"tempfile\",\n \"tokio\",\n \"url\",\n]\n\n[[package]]\nname = \"sqlx-postgres\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fa91a732d854c5d7726349bb4bb879bb9478993ceb764247660aee25f67c2f8\"\ndependencies = [\n \"atoi\",\n \"base64 0.22.1\",\n \"bitflags 2.4.2\",\n \"byteorder\",\n \"crc\",\n \"dotenvy\",\n \"etcetera\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-util\",\n \"hex\",\n \"hkdf\",\n \"hmac\",\n \"home\",\n \"itoa\",\n \"log\",\n \"md-5\",\n \"memchr\",\n \"once_cell\",\n \"rand\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"smallvec\",\n \"sqlx-core\",\n \"stringprep\",\n \"thiserror\",\n \"tracing\",\n \"whoami\",\n]\n\n[[package]]\nname = \"sqlx-sqlite\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d5b2cf34a45953bfd3daaf3db0f7a7878ab9b7a6b91b422d24a7a9e4c857b680\"\ndependencies = [\n \"atoi\",\n \"flume\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-intrusive\",\n \"futures-util\",\n \"libsqlite3-sys\",\n \"log\",\n \"percent-encoding\",\n \"serde\",\n \"serde_urlencoded\",\n \"sqlx-core\",\n \"tracing\",\n \"url\",\n]\n\n[[package]]\nname = \"stringprep\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b4df3d392d81bd458a8a621b8bffbd2302a12ffe288a9d931670948749463b1\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n \"unicode-properties\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.85\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5023162dfcd14ef8f32034d8bcd4cc5ddc61ef7a247c024a33e24e1f24d21b56\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160\"\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7065abeca94b6a8a577f9bd45aa0867a2238b74e8eb67cf10d492bc39351394\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c879d448e9d986b661742763247d3693ed13609438cf3d006f51f5368a5ba6b\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e1d1b10ced5ca923a1fcb8d03e96b8d3268065d724548c0211415ff6ac6bac4\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"take_mut\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f764005d11ee5f36500a149ace24e00e3da98b0158b3e2d53a7495660d3f4d60\"\n\n[[package]]\nname = \"takecell\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20f34339676cdcab560c9a82300c4c2581f68b9369aedf0fae86f2ff9565ff3e\"\n\n[[package]]\nname = \"teloxide\"\nversion = \"0.13.0\"\ndependencies = [\n \"aquamarine\",\n \"axum\",\n \"bincode\",\n \"bytes\",\n \"chrono\",\n \"deadpool-redis\",\n \"derive_more\",\n \"dptree\",\n \"either\",\n \"futures\",\n \"log\",\n \"mime\",\n \"pin-project\",\n \"pretty_env_logger\",\n \"rand\",\n \"reqwest\",\n \"serde\",\n \"serde_cbor\",\n \"serde_json\",\n \"sqlx\",\n \"teloxide-core\",\n \"teloxide-macros 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thiserror\",\n \"tokio\",\n \"tokio-stream\",\n \"tokio-util\",\n \"tower\",\n \"tower-http\",\n \"url\",\n]\n\n[[package]]\nname = \"teloxide-core\"\nversion = \"0.10.1\"\ndependencies = [\n \"aho-corasick 0.7.20\",\n \"bitflags 1.3.2\",\n \"bytes\",\n \"chrono\",\n \"cool_asserts\",\n \"derive_more\",\n \"either\",\n \"futures\",\n \"indexmap 1.9.3\",\n \"itertools\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"pin-project\",\n \"pretty_assertions\",\n \"pretty_env_logger\",\n \"rc-box\",\n \"reqwest\",\n \"rgb\",\n \"ron\",\n \"serde\",\n \"serde_json\",\n \"serde_with\",\n \"take_mut\",\n \"takecell\",\n \"thiserror\",\n \"tokio\",\n \"tokio-util\",\n \"url\",\n \"uuid\",\n \"vecrem\",\n \"xshell\",\n]\n\n[[package]]\nname = \"teloxide-macros\"\nversion = \"0.8.0\"\ndependencies = [\n \"heck 0.5.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"teloxide-macros\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e2d33d809c3e7161a9ab18bedddf98821245014f0a78fa4d2c9430b2ec018c1\"\ndependencies = [\n \"heck 0.4.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f2c9fc62d0beef6951ccffd757e241266a2c833136efbe35af6cd2567dca5b\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d11abd9594d9b38965ef50805c5e469ca9cc6f197f883f717e0269a3057b3d5\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae71770322cbd277e69d762a16c444af02aa0575ac0d174f0b9562d3b37f8602\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"145f3413504347a2be84393cc8a7d2fb4d863b375909ea59f2158261aa258bbb\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"tokio-native-tls\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2\"\ndependencies = [\n \"native-tls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4\"\ndependencies = [\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-stream\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f4e6ce100d0eb49a2734f8c0812bcd324cf357d21810932c5df6b96ef2b86f1\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2873938d487c3cfb9aed7546dc9f2711d867c9f90c46b889989a2cb84eba6b4f\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project-lite\",\n \"sync_wrapper 0.1.2\",\n \"tokio\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-http\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9cd434a998747dd2c4276bc96ee2e0c7a2eadf3cae88e52be55a05fa9053f5\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"bytes\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"pin-project-lite\",\n \"tower-layer\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e\"\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e51b68083f157f853b6379db119d1c1be0e6e4dec98101079dec41f6f5cf6df\"\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ab17db44d7388991a428b2ee655ce0c212e862eff1768a455c58f9aad6e7893\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-properties\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e70f2a8b45122e719eb623c01822704c4e0907e7e426a05927e1a1cfff5b75d0\"\n\n[[package]]\nname = \"unicode_categories\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22784dbdf76fdde8af1aeda5622b546b422b6fc585325248a2bf9f5e41e94d6c\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"vecrem\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4808a28789238714a29163e4cb8031f0f050dd670f7a0cc74b6d80f3ce343fa\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasite\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8dad83b4f25e74f184f64c43b150b91efe7647395b42289f38e50566d82855b\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"wasm-streams\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15053d8d85c7eccdbefef60f06769760a563c7f0a9d6902a13d35c7800b0ad65\"\ndependencies = [\n \"futures-util\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"841c67bff177718f1d4dfefde8d8f0e78f9b6589319ba88312f567fc5841a958\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"whoami\"\nversion = \"1.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"372d5b87f58ec45c384ba03563b03544dc5fadc3983e434b286913f5b4a9bb6d\"\ndependencies = [\n \"redox_syscall\",\n \"wasite\",\n]\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"xshell\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e7290c623014758632efe00737145b6867b66292c42167f2ec381eb566a373d\"\ndependencies = [\n \"xshell-macros\",\n]\n\n[[package]]\nname = \"xshell-macros\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32ac00cd3f8ec9c1d33fb3e7958a82df6989c42d747bd326c822b1d625283547\"\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.85\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.4521484375,
          "content": "[workspace]\nmembers = [\"crates/*\"]\nresolver = \"2\"\n\n# The settings below will be applied to all crates in the workspace\n[workspace.package]\n# MSRV (minimal supported Rust version).\nrust-version = \"1.80\"\nedition = \"2021\"\n\nlicense = \"MIT\"\nhomepage = \"https://github.com/teloxide/teloxide\"\nrepository = \"https://github.com/teloxide/teloxide\"\n\n[workspace.metadata.release]\ntag-message = \"Release {{crate_name}} version {{version}}\"\ntag-name = \"{{prefix}}v{{version}}\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2019-2024 teloxide\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MIGRATION_GUIDE.md",
          "type": "blob",
          "size": 16.115234375,
          "content": "This document describes breaking changes of `teloxide` crate, as well as the ways to update code.\nNote that the list of required changes is not fully exhaustive and it may lack something in rare cases.\n\n## unreleased\n\n### teloxide\n\nWe have finally introduced three different categories for syntactic sugar:\n\n1. A new trait `RequestReplyExt` that adds `.reply_to(msg)`, equivalent to `.reply_parameters(ReplyParameters::new(msg.id))`\n\n```diff\n- bot.send_dice(msg.chat.id).reply_parameters(ReplyParameters::new(msg.id)).await?;\n+ bot.send_dice(msg.chat.id).reply_to(msg).await?;\n// or\n+ bot.send_dice(msg.chat.id).reply_to(msg.id).await?;\n```\n\n2. A new trait `RequestLinkPreviewExt` that adds `.disable_link_preview(true)`, equivalent to `.link_preview_options(options)`\n\n```diff\n- let options = LinkPreviewOptions {\n-     is_disabled: true,\n-     url: None,\n-     prefer_small_media: false,\n-     prefer_large_media: false,\n-     show_above_text: false,\n- };\n- bot.send_message(msg.chat.id, \"https://github.com/teloxide/teloxide\").link_preview_options(options).await?;\n+ bot.send_message(msg.chat.id, \"https://github.com/teloxide/teloxide\").disable_link_preview(true).await?;\n```\n\n3. A new trait `BotMessagesExt` that adds a shorter method for anything that requires both `msg.id` and `msg.chat.id`:\n\n```diff\n- bot.edit_message_text(msg.chat.id, msg.id, text).await?;\n+ bot.edit_text(msg, text).await?;\n```\n\n```diff\n- bot.forward_message(to_chat_id, msg.chat.id, msg.id).await?;\n+ bot.forward(to_chat_id, msg).await?;\n```\n\n```diff\n- bot.delete_message(msg.chat.id, msg.id).await?;\n+ bot.delete(msg).await?;\n```\n\nAnd others like `bot.edit_live_location`, `bot.stop_live_location`, `bot.set_reaction`, `bot.pin`, `bot.unpin`, `bot.edit_caption`, `bot.edit_media`, `bot.edit_reply_markup`, `bot.stop_poll_message` and `bot.copy` methods\n\n## 0.11 -> 0.12\n\n### teloxide\n\nThe `rocksdb-storage` feature and associated items were removed. If you need to use RocksDB, you can use the [`teloxide-rocksdb`] crate.\n\n[`teloxide-rocksdb`]: https://github.com/teloxide/teloxide-rocksdb\n\n## 0.11 -> 0.11.3\n\n### teloxide\n\nWe have introduced the new trait `CommandRepl` that replaces the old `commands_repl_(with_listener)` functions:\n\n```diff\n- teloxide::commands_repl(bot, answer, Command::ty())\n+ Command::repl(bot, answer)\n```\n\n```diff\n- teloxide::commands_repl_with_listener(bot, answer, listener, Command::ty())\n+ Command::repl_with_listener(bot, answer, listener)\n```\n\n## 0.10 -> 0.11\n\n### core\n\nRequests can now be `.await`ed directly, without need of `.send()` or `AutoSend`.\nIf you previously used `AutoSend` adaptor, you can safely remove it:\n\n```diff\n-let bot = Bot::from_env().auto_send();\n+let bot = Bot::from_env();\n```\n\n```diff\n-async fn start(bot: AutoSend<Bot>, dialogue: MyDialogue, msg: Message) -> HandlerResult {\n+async fn start(bot: Bot, dialogue: MyDialogue, msg: Message) -> HandlerResult {\n```\n\n`File`'s and `FileMeta`'s fields now don't have `file_` prefix.\nIf you previously accessed the fields, you'll need to change remove the prefix:\n\n```diff\n-_ = file.file_size;\n+_ = file.size;\n```\n\n`Animation`, `Audio`, `Document`, `PassportFile`, `PhotoSize`, `Video`, `VideoNote` and `Voice` now contain `FileMeta` instead of its fields.\nTogether with rename of `FileMeta`'s fields, you'll need to change `_` to `.`:\n\n```diff\n-_ = animation.file_size;\n+_ = animation.file.size;\n```\n\nMessage id fields and parameters now use `MessageId` type, instead of `i32`.\nYou may need to change code accordingly:\n\n```diff\n-let id: i32 = message.id;\n+let id: MessageId = message.id;\n```\n```diff\nlet (cid, mid): (ChatId, i32) = get_message_to_delete_from_db();\n-bot.delete_message(cid, mid).await?;\n+bot.delete_message(cid, MessageId(mid)).await?;\n```\n\nNote that at the same time `MessageId` is now a tuple struct.\nIf you've accessed its only field you'll need to change it too:\n\n```diff\n-let MessageId { message_id } = bot.copy_message(dst_chat, src_chat, mid).await?;\n+let MessageId(message_id) = bot.copy_message(dst_chat, src_chat, mid).await?;\nsave_to_db(message_id);\n```\n\nBecause of API updates `Sticker` type was refactored again.\nYou may need to change code accordingly.\nSee `Sticker` documentation for more information about the new structure.\n\n### teloxide\n\nYou can now write `Ok(())` instead of `respond(())` at the end of closures provided to RELPs:\n\n```diff\nteloxide::repl(bot, |bot: Bot, msg: Message| async move {\n    bot.send_dice(msg.chat.id).await?;\n-    respond(())\n+    Ok(())\n})\n.await;\n```\n\nThis is because REPLs now require the closure to return `RequestError` instead of a generic error type, so type inference works perfectly for a return value. If you use something other than `RequestError`, you can transfer your code to `teloxide::dispatching`, which still permits a generic error type.\n\n\"Stop tokens\" were refactored, the trait is now removed and the types were renamed:\n\n```diff\n-use teloxide::dispatching::stop_token::{AsyncStopToken, AsyncStopFlag};\n+use teloxide::stop::{StopToken, StopFlag, mk_stop_token};\n\n-let (token, flag): (AsyncStopToken, AsyncStopFlag) = AsyncStopToken::new_pair();\n+let (token, flag): (StopToken, StopFlag) = mk_stop_token();\n```\n\n### macros\n\n`parse_with` now accepts a Rust _path_ to a custom parser function instead of a string:\n\n```diff\nfn custom_parser(input: String) -> Result<(u8,), ParseError> {\n    todo!()\n}\n\n#[derive(BotCommands)]\nenum Command {\n-    #[command(parse_with = \"custom_parser\")]\n+    #[command(parse_with = custom_parser)]\n    Num(u8),\n}\n```\n\n`rename` now only renames a command literally; use `rename_rule` to change the case of a command:\n\n```diff\n#[derive(BotCommands)]\n- #[command(rename = \"lowercase\", description = \"These commands are supported:\")]\n+ #[command(rename_rule = \"lowercase\", description = \"These commands are supported:\")]\nenum Command {\n    // ...\n}\n```\n\n## 0.9 -> 0.10\n\n### core\n\nWe've added some convenience functions to `InlineKeyboardButton` so it's easier to construct it. Consider using them instead of variants:\n```diff\n-InlineKeyboardButton::new(\"text\", InlineKeyboardButtonKind::Url(url))\n+InlineKeyboardButton::url(\"text\", url)\n```\n\n`file_size` fields are now `u32`, you may need to update your code accordingly:\n\n```diff\n-let file_size: u64 = audio.file_size?;\n+let file_size: u32 = audio.file_size;\n```\n\nSome places now use `FileMeta` instead of `File`, you may need to change types.\n\n`Sticker` and `StickerSet` now has a `kind` field instead of `is_animated` and `is_video`:\n\n```diff\n+use teloxide::types::StickerKind::*;\n-match () {\n+match sticker.kind {\n-    _ if sticker.is_animated => /* handle animated */,\n+    Animated => /* handle animated */,\n-    _ if sticker.is_video => /* handle video */,\n+    Video => /* handle video */,\n-    _ => /* handle normal */,\n+    Webp => /* handle normal */,\n}\n```\n\n### teloxide\n\nTeloxide itself doesn't have any major API changes.\nNote however that some function were deprecated:\n- Instead of `dispatching::update_listeners::polling` use `polling_builder`\n- Instead of `Dispatcher::setup_ctrlc_handler` use `DispatcherBuilder::enable_ctrlc_handler`\n\n## 0.7 -> 0.8\n\n### core\n\n`user.id` now uses `UserId` type, `ChatId` now represents only _chat id_, not channel username, all `chat_id` function parameters now accept `Recipient` (if they allow for channel usernames).\n\nIf you used to work with chat/user ids (for example saving them to a database), you may need to change your code to account for new types. Some examples how that may look like:\n```diff\n-let user_id: i64 = user.id;\n+let UserId(user_id) = user.id;\ndb.save(user_id, ...);\n\n-let chat_id: i64 = db.get();\n+let chat_id = ChatId(db.get());\nbot.send_message(chat_id, \"Hi!\").await?;\n```\n\n`RequestError::RetryAfter` now has a field of type `Duration`, instead of `i32`.\n\n### teloxide\n\nThe old dispatching system was removed. If you still hasn't moved to the new one, read the [0.5 -> 0.6 migration guide] for more information on this topic. Note that since the old dispatching was removed, the new dispatching system now lives in the `dispatching` module, **not** `dispatching2` module.\n\nIf you implement `UpdateListener` yourself, note that `StopToken` is now required to be `Send`.\n\n`BotCommand` trait was renamed to `BotCommands`. `BotCommands::descriptions` not returns `CommandDescriptions` instead of `String`. To get string, you can call `.to_string()`.\n\n`#[derive(DialogueState)]` is deprecated in favour of `teloxide::handler!`, a more flexible API for dealing with dialogues. [`examples/dialogue.rs`](https://github.com/teloxide/teloxide/blob/03521bfd3d68f6f576dcc44b5473aaa5ce9b553f/examples/dialogue.rs) shows how to use it.\n\n[0.5 -> 0.6 migration guide]: #05---06\n\n## 0.6 -> 0.7\n\n### teloxide\n\nIn order to make `Dispatcher` implement `Send`, `DispatcherBuilder::{default_handler, error_handler}` now accept handlers that implements `Send + Sync`. If you used `!Send` or `!Sync` handlers here, you may need to change that.\n\n## 0.5 -> 0.6\n\n### core\n\n - `InputFile` now can't be created like `InputFile::Url(url)` or matched on, use constructors like `InputFile::url`, `InputFile::file`, etc.\n - `RequestError` and `DownloadError` error variants were slightly renamed\n- `ChatPermissions` is now bitflags.\n\n### teloxide\n\nv0.6 of teloxide introduces a new dispatching model based on the [chain of responsibility pattern]. To use it, you need to replace `prelude` with `prelude2` and `dispatching` with `dispatching2`. Instead of using old REPLs, you should now use `teloxide::repls2`.\n\nThe whole design is different from the previous one based on Tokio streams. In this section, we are only to address the most common usage scenarios.\n\nFirst of all, now there are no streams. Instead of using streams, you use [`dptree`], which is a more suitable alternative for our purposes. Thus, if you previously used `Dispatcher::messages_handler`, now you should use `Update::filter_message()`, and so on.\n\nSecondly, `Dispatcher` has been split into two separate abstractions: `DispatcherBuilder` and `Dispatcher`. The calling sequence is simple: you call `Dispatcher::builder(bot, handler)`, set up your stuff, and then call `.build()` to obtain `Dispatcher`. Later, you can `.setup_ctrlc_handler()` on it and finally `.dispatch()` (or `.dispatch_with_listener()`).\n\nLastly, the dialogue management system has been greatly simplified. Just compare the [new `examples/dialogue.rs`](https://github.com/teloxide/teloxide/blob/25f863402d4f377f573ce2ba394f5b768ee8052e/examples/dialogue.rs) with the [old one](https://github.com/teloxide/teloxide/tree/2a6067fe94773a0015627a6aaa1930b8f88b6da0/examples/dialogue_bot/src) to see the difference. Now you don't need `TransitionIn`, `TransitionOut`, `#[teloxide(subtransition)]`, etc. All you need is to derive `DialogueState` for your FSM enumeration, call `.enter_dialogue()` and write handlers for each of a dialogue's states. Instead of supplying dependencies in the `aux` parameter of `Transition::react`, you can just call `.dependencies()` while setting up the dispatcher and all the dependencies will be passed to your handler functions as parameters.\n\nFor more information, please look at the appropriate documentation pages and the [updated examples](https://github.com/teloxide/teloxide/tree/master/examples). Note that, in one of the upcoming releases, the old dispatching model will be removed, so we highly encourage you to migrate your bots to the new one.\n\nThanks for using teloxide!\n\n[chain of responsibility pattern]: https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern\n[`dptree`]: https://github.com/p0lunin/dptree\n\n## 0.4 -> 0.5\n\n### core\n\n#### Field type changes\n\nTypes of some fields were changed to be more accurate. \nIf you used them, you may need to change types in your code too.\n\nExample:\n```diff\nlet ps: PhotoSize = /* ... */;\n-let w: i32 = ps.width;\n+let w: u32 = ps.width;\n```\n\nList of changed types:\n- `PhotoSoze::width`: `i32` -> `u32`\n- `PhotoSoze::height`: `i32` -> `u32`\n- `Restricted::until_date`: `i32` -> `DateTime<Utc>`\n- `Kicked::until_date` (`Banned::until_date`): `i32` -> `DateTime<Utc>`\n- `PublicChatSupergroup::slow_mode_delay`: `Option<i32>` -> `Option<u32>`\n- `User::id`: `i32` -> `i64` (note: all methods which are accepting `user_id` were changed too)\n\n\n#### Method output types\n\nIn teloxide `v0.4` (core `v0.2`) some API methods had wrong return types.\nThis made them practically unusable as they've always returned parsing error.\nOn the off-chance you were using the methods, you may need to adjust types in your code.\n\nList of changed return types:\n- `get_chat_administrators`: `ChatMember` -> `Vec<ChatMember>`\n- `send_chat_action`: `Message` -> `True`\n- `leave_chat`: `String` -> `True`\n- `pin_chat_message`: `String` -> `True`\n- `set_chat_description`: `String` -> `True`\n- `set_chat_photo`: `String` -> `True`\n- `set_chat_title`: `String` -> `True`\n- `unpin_all_chat_messages`: `String` -> `True`\n- `unpin_chat_message`: `String` -> `True`\n\n\n#### Method parameter types\n\nSome API methods accept different types now. \nIf you've used changed parameters, you need to adjust code for new types.\n\nExamples:\n```diff\nlet bot = Bot::new(\"TOKEN\").auto_send();\n\n-bot.set_webhook(\"url\").await?;\n+bot.set_webhook(Url::parse(\"url\").unwrap()).await?;\n\nlet link = bot\n    .create_chat_invite_link(chat_id)\n-    .expire_date(timestamp)\n# Note: this is not the only way to create `DateTime`. Refer to `chrono` docs for more.\n+    .expire_date(DateTime::<Utc>::from_utc(\n+        NaiveDateTime::from_timestamp(timestamp, 0), Utc)\n+    )\n    .await?;\n```\n\nSee also: [teloxide examples fixes](https://github.com/teloxide/teloxide/pull/408/files/369e43aa7ed1b192d326e6bdfe76f3560001353f..18f88cc034e97fd437c48930728c1d5d2da7a14d).\n\nList of changed required params:\n- `SetWebhook::url`: `String` -> `Url`\n\nList of changed optional params:\n- `AnswerCallbackQuery::url`: `String` -> `Url`\n- `SendInvoice::photo_url`: `String` -> `Url`\n- `CreateChatInviteLink::expire_date`: `i64` -> `DateTime<Utc>` \n- `EditChatInviteLink::expire_date`: `i64` -> `DateTime<Utc>` \n- `KickChatMember::until_date`: `u64` -> `DateTime<Utc>` \n- `RestrictChatMember::until_date`: `u64` -> `DateTime<Utc>` \n- `SendPoll::close_date`: `u64` -> `DateTime<Utc>` \n\n\n#### Renamed items\n\nSome items (fields, variants, types, methods) were renamed.\nIf you used them, you should start using new names.\n\nExample:\n```diff\n-bot.send_chat_action(chat, ChatAction::RecordAudio).await?;\n+bot.send_chat_action(chat, ChatAction::RecordVoice).await?;\n\n-if chat_member.is_kicked() {\n+if chat_member.is_banned() {\n    /* ... */\n}\n```\n\nList of renamed items:\n- `ChatAction::RecordAudio` -> `RecordVoice`\n- `ChatAction::UploadAudio` -> `UploadVoice`\n- `ChatMemberKind::Creator` -> `Owner`\n- `ChatMemberKind::Kicked` -> `Banned`\n- `Creator` -> `Owner`\n- `Kicked` -> `Banned`\n- `ChatMemberKind::is_Creator` -> `is_owner` *\n- `ChatMemberKind::is_kicked` -> `is_banned` *\n- `ChatMemberStatus::Creator` -> `Owner`\n- `ChatMemberStatus::Kicked` -> `Banned`\n- `kick_chat_member` -> `ban_chat_member` *\n- `get_chat_members_count` -> `get_chat_member_count` *\n\n\\* Old methods are still accessible, but deprecated\n\n\n#### Added `impl Clone` for {`CacheMe`, `DefaultParseMode`, `Throttle`}\n\nPreviously said bot adaptors were lacking `Clone` implementation. \nTo work around this issue it was proposed to wrap bot in `Arc`.\nNow it's not required, so you can remove the `Arc`:\n\n```diff\nlet bot = Bot::new(token).parse_mode(ParseMode::MarkdownV2);\n-let bot = Arc::new(bot);\n```\n\n\n### teloxide\n\n#### Mutable reference for dispatching\n\n`Dispatcher::dispatch` and `Dispatcher::dispatch_with_listener` now require mutable (unique) reference to self.\nIf you've used variable to store `Dispatcher`, you need to make it mutable:\n\n```diff\n-let dp = Dispatcher::new();\n+let mut dp = Dispatcher::new();\n/* ... */\ndp.dispatch();\n```\n\n\n#### Listener refactor\n\n`UpdateListener` trait was refactored.\nIf you've used `polling`/`polling_default` provided by teloxide, no changes are required.\nIf, however, you've used or implemented `UpdateListener` directly or used a `Stream` as a listener, \nthen you need to refactor your code too.\n\nSee also: [teloxide examples fixes](https://github.com/teloxide/teloxide/pull/385/files/8785b8263cb4caebf212e2a66a19f73e653eb060..c378d6ef4e524da96718beec6f989e8ac51d1531).\n\n\n#### `polling_default`\n\n`polling_default` is now async, but removes webhook.\n\nExample fix:\n```diff\n-let listener = polling_default(bot);\n+let listener = polling_default(bot).await;\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.8310546875,
          "content": "<div align=\"center\">\n  <img src=\"./media/teloxide-logo.png\" width=\"250\"/>\n  <h1><code>teloxide</code></h1>\n  <a href=\"https://docs.rs/teloxide/\">\n    <img src=\"https://docs.rs/teloxide/badge.svg\">\n  </a>\n  <a href=\"https://github.com/teloxide/teloxide/actions\">\n    <img src=\"https://github.com/teloxide/teloxide/workflows/Continuous%20integration/badge.svg\">\n  </a>\n  <a href=\"https://crates.io/crates/teloxide\">\n    <img src=\"https://img.shields.io/crates/v/teloxide.svg\">\n  </a>\n  <a href=\"https://core.telegram.org/bots/api\">\n    <img src=\"https://img.shields.io/badge/API%20coverage-Up%20to%207.2%20(inclusively)-green.svg\">\n  </a>\n  <a href=\"https://t.me/teloxide\">\n    <img src=\"https://img.shields.io/badge/support-t.me%2Fteloxide-blueviolet\">\n  </a>\n\n  A full-featured framework that empowers you to easily build [Telegram bots](https://telegram.org/blog/bot-revolution) using [Rust](https://www.rust-lang.org/). It handles all the difficult stuff so you can focus only on your business logic.\n</div>\n\n## Highlights\n\n - **Declarative design.** `teloxide` is based upon [`dptree`], a functional [chain of responsibility] pattern that allows you to express pipelines of message processing in a highly declarative and extensible style.\n\n[`dptree`]: https://github.com/teloxide/dptree\n[chain of responsibility]: https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern\n\n - **Feature-rich.** You can use both long polling and webhooks, configure an underlying HTTPS client, set a custom URL of a Telegram API server, do graceful shutdown, and much more.\n\n - **Simple dialogues.** Our dialogues subsystem is simple and easy-to-use, and, furthermore, is agnostic of how/where dialogues are stored. For example, you can just replace a one line to achieve [persistence]. Out-of-the-box storages include [Redis] and [Sqlite].\n\n[persistence]: https://en.wikipedia.org/wiki/Persistence_(computer_science)\n[Redis]: https://redis.io/\n[Sqlite]: https://www.sqlite.org\n\n - **Strongly typed commands.** Define bot commands as an `enum` and teloxide will parse them automatically — just like JSON structures in [`serde-json`] and command-line arguments in [`structopt`].\n\n[`structopt`]: https://github.com/TeXitoi/structopt\n[`serde-json`]: https://github.com/serde-rs/json\n\n## Setting up your environment\n\n 1. [Download Rust](http://rustup.rs/).\n 2. Create a new bot using [@Botfather](https://t.me/botfather) to get a token in the format `123456789:blablabla`.\n 3. Initialise the `TELOXIDE_TOKEN` environmental variable to your token:\n```bash\n# Unix-like\n$ export TELOXIDE_TOKEN=<Your token here>\n\n# Windows command line\n$ set TELOXIDE_TOKEN=<Your token here>\n\n# Windows PowerShell\n$ $env:TELOXIDE_TOKEN=<Your token here>\n```\n\n 4. Make sure that your Rust compiler is up to date (`teloxide` currently requires rustc at least version 1.80):\n```bash\n# If you're using stable\n$ rustup update stable\n$ rustup override set stable\n\n# If you're using nightly\n$ rustup update nightly\n$ rustup override set nightly\n```\n\n 5. Run `cargo new my_bot`, enter the directory and put these lines into your `Cargo.toml`:\n```toml\n[dependencies]\nteloxide = { version = \"0.13\", features = [\"macros\"] }\nlog = \"0.4\"\npretty_env_logger = \"0.5\"\ntokio = { version =  \"1.8\", features = [\"rt-multi-thread\", \"macros\"] }\n```\n\n## API overview\n\n### The dices bot\n\nThis bot replies with a dice to each received message:\n\n[[`examples/throw_dice.rs`](crates/teloxide/examples/throw_dice.rs)]\n\n```rust,no_run\nuse teloxide::prelude::*;\n\n#[tokio::main]\nasync fn main() {\n    pretty_env_logger::init();\n    log::info!(\"Starting throw dice bot...\");\n\n    let bot = Bot::from_env();\n\n    teloxide::repl(bot, |bot: Bot, msg: Message| async move {\n        bot.send_dice(msg.chat.id).await?;\n        Ok(())\n    })\n    .await;\n}\n```\n\n<div align=\"center\">\n    <img src=\"./media/throw-dice.gif\" width=\"420\" />\n</div>\n\n### Commands\n\nCommands are strongly typed and defined declaratively, similar to how we define CLI using [structopt] and JSON structures in [serde-json]. The following bot accepts these commands:\n\n - `/username <your username>`\n - `/usernameandage <your username> <your age>`\n - `/help`\n\n[structopt]: https://docs.rs/structopt/0.3.9/structopt/\n[serde-json]: https://github.com/serde-rs/json\n\n[[`examples/command.rs`](crates/teloxide/examples/command.rs)]\n\n```rust,no_run\nuse teloxide::{prelude::*, utils::command::BotCommands};\n\n#[tokio::main]\nasync fn main() {\n    pretty_env_logger::init();\n    log::info!(\"Starting command bot...\");\n\n    let bot = Bot::from_env();\n\n    Command::repl(bot, answer).await;\n}\n\n#[derive(BotCommands, Clone)]\n#[command(rename_rule = \"lowercase\", description = \"These commands are supported:\")]\nenum Command {\n    #[command(description = \"display this text.\")]\n    Help,\n    #[command(description = \"handle a username.\")]\n    Username(String),\n    #[command(description = \"handle a username and an age.\", parse_with = \"split\")]\n    UsernameAndAge { username: String, age: u8 },\n}\n\nasync fn answer(bot: Bot, msg: Message, cmd: Command) -> ResponseResult<()> {\n    match cmd {\n        Command::Help => bot.send_message(msg.chat.id, Command::descriptions().to_string()).await?,\n        Command::Username(username) => {\n            bot.send_message(msg.chat.id, format!(\"Your username is @{username}.\")).await?\n        }\n        Command::UsernameAndAge { username, age } => {\n            bot.send_message(msg.chat.id, format!(\"Your username is @{username} and age is {age}.\"))\n                .await?\n        }\n    };\n\n    Ok(())\n}\n```\n\n<div align=\"center\">\n    <img src=\"./media/command.gif\" width=\"420\" />\n</div>\n\n### Dialogues management\n\nA dialogue is typically described by an enumeration where each variant is one possible state of the dialogue. There are also _state handler functions_, which may turn a dialogue from one state to another, thereby forming an [FSM].\n\n[FSM]: https://en.wikipedia.org/wiki/Finite-state_machine\n\nBelow is a bot that asks you three questions and then sends the answers back to you:\n\n[[`examples/dialogue.rs`](crates/teloxide/examples/dialogue.rs)]\n\n```rust,ignore\nuse teloxide::{dispatching::dialogue::InMemStorage, prelude::*};\n\ntype MyDialogue = Dialogue<State, InMemStorage<State>>;\ntype HandlerResult = Result<(), Box<dyn std::error::Error + Send + Sync>>;\n\n#[derive(Clone, Default)]\npub enum State {\n    #[default]\n    Start,\n    ReceiveFullName,\n    ReceiveAge {\n        full_name: String,\n    },\n    ReceiveLocation {\n        full_name: String,\n        age: u8,\n    },\n}\n\n#[tokio::main]\nasync fn main() {\n    pretty_env_logger::init();\n    log::info!(\"Starting dialogue bot...\");\n\n    let bot = Bot::from_env();\n\n    Dispatcher::builder(\n        bot,\n        Update::filter_message()\n            .enter_dialogue::<Message, InMemStorage<State>, State>()\n            .branch(dptree::case![State::Start].endpoint(start))\n            .branch(dptree::case![State::ReceiveFullName].endpoint(receive_full_name))\n            .branch(dptree::case![State::ReceiveAge { full_name }].endpoint(receive_age))\n            .branch(\n                dptree::case![State::ReceiveLocation { full_name, age }].endpoint(receive_location),\n            ),\n    )\n    .dependencies(dptree::deps![InMemStorage::<State>::new()])\n    .enable_ctrlc_handler()\n    .build()\n    .dispatch()\n    .await;\n}\n\nasync fn start(bot: Bot, dialogue: MyDialogue, msg: Message) -> HandlerResult {\n    bot.send_message(msg.chat.id, \"Let's start! What's your full name?\").await?;\n    dialogue.update(State::ReceiveFullName).await?;\n    Ok(())\n}\n\nasync fn receive_full_name(bot: Bot, dialogue: MyDialogue, msg: Message) -> HandlerResult {\n    match msg.text() {\n        Some(text) => {\n            bot.send_message(msg.chat.id, \"How old are you?\").await?;\n            dialogue.update(State::ReceiveAge { full_name: text.into() }).await?;\n        }\n        None => {\n            bot.send_message(msg.chat.id, \"Send me plain text.\").await?;\n        }\n    }\n\n    Ok(())\n}\n\nasync fn receive_age(\n    bot: Bot,\n    dialogue: MyDialogue,\n    full_name: String, // Available from `State::ReceiveAge`.\n    msg: Message,\n) -> HandlerResult {\n    match msg.text().map(|text| text.parse::<u8>()) {\n        Some(Ok(age)) => {\n            bot.send_message(msg.chat.id, \"What's your location?\").await?;\n            dialogue.update(State::ReceiveLocation { full_name, age }).await?;\n        }\n        _ => {\n            bot.send_message(msg.chat.id, \"Send me a number.\").await?;\n        }\n    }\n\n    Ok(())\n}\n\nasync fn receive_location(\n    bot: Bot,\n    dialogue: MyDialogue,\n    (full_name, age): (String, u8), // Available from `State::ReceiveLocation`.\n    msg: Message,\n) -> HandlerResult {\n    match msg.text() {\n        Some(location) => {\n            let report = format!(\"Full name: {full_name}\\nAge: {age}\\nLocation: {location}\");\n            bot.send_message(msg.chat.id, report).await?;\n            dialogue.exit().await?;\n        }\n        None => {\n            bot.send_message(msg.chat.id, \"Send me plain text.\").await?;\n        }\n    }\n\n    Ok(())\n}\n```\n\n<div align=\"center\">\n    <img src=\"./media/dialogue.gif\" width=\"420\" />\n</div>\n\n[More examples >>](crates/teloxide/examples/)\n\n## Testing\n\nA community made crate [`teloxide_tests`](https://github.com/LasterAlex/teloxide_tests) can be used to test your bots.\n\n[Some testing examples >>](https://github.com/LasterAlex/teloxide_tests/tree/master/examples)\n\n## Tutorials\n\n - [_\"Migrating my family finance bot from Python to Rust (teloxide) because I am tired of exceptions (part 1)\"_](https://trkohler.com/posts/i-migrated-my-family-finance-bot-from-python-to-rust-because-i-am-tired-of-exceptions/) by Troy Köhler.\n - [_\"Migrating my family finance bot from Python to Rust (teloxide) [part 2]\"_](https://trkohler.com/posts/migrating-my-family-finance-bot-from-python-to-rust-teloxide-part-2/) by Troy Köhler.\n\n## FAQ\n\n**Q: Where I can ask questions?**\n\nA:\n\n - [Issues] is a good place for well-formed questions about the library design, enhancements, and bug reports.\n - [GitHub Discussions] is a place where you can ask us for help in a less formal manner.\n - If you need quick help in real-time, you should ask a question in [our official Telegram group].\n\n[Issues]: https://github.com/teloxide/teloxide/issues\n[our official Telegram group]: https://t.me/teloxide\n[GitHub Discussions]: https://github.com/teloxide/teloxide/discussions\n\n**Q: Do you support the Telegram API for clients?**\n\nA: No, only the bots API.\n\n**Q: Can I use webhooks?**\n\nA: You can! `teloxide` has a built-in support for webhooks in `dispatching::update_listeners::webhooks` module. See how it's used in [`examples/ngrok_ping_pong_bot`](crates/teloxide/examples/ngrok_ping_pong.rs) and [`examples/heroku_ping_pong_bot`](crates/teloxide/examples/heroku_ping_pong.rs).\n\n**Q: Can I handle both callback queries and messages within a single dialogue?**\n\nA: Yes, see [`examples/purchase.rs`](crates/teloxide/examples/purchase.rs).\n\n## Community bots\n\nFeel free to propose your own bot to our collection!\n\n - [`raine/tgreddit`](https://github.com/raine/tgreddit) — A bot that sends the top posts of your favorite subreddits to Telegram.\n - [`magnickolas/remindee-bot`](https://github.com/magnickolas/remindee-bot) — Telegram bot for managing reminders.\n - [`WaffleLapkin/crate_upd_bot`](https://github.com/WaffleLapkin/crate_upd_bot) — A bot that notifies about crate updates.\n - [`mattrighetti/GroupActivityBot`](https://github.com/mattrighetti/group-activity-bot-rs) — Telegram bot that keeps track of user activity in groups.\n - [`alenpaul2001/AurSearchBot`](https://gitlab.com/alenpaul2001/aursearchbot) — Telegram bot for searching in Arch User Repository (AUR).\n - [`ArtHome12/vzmuinebot`](https://github.com/ArtHome12/vzmuinebot) — Telegram bot for food menu navigate.\n - [`studiedlist/EddieBot`](https://gitlab.com/studiedlist/eddie-bot) — Chatting bot with several entertainment features.\n - [`modos189/tg_blackbox_bot`](https://gitlab.com/modos189/tg_blackbox_bot) — Anonymous feedback for your Telegram project.\n - [`0xNima/spacecraft`](https://github.com/0xNima/spacecraft) — Yet another telegram bot to downloading Twitter spaces.\n - [`0xNima/Twideo`](https://github.com/0xNima/Twideo) — Simple Telegram Bot for downloading videos from Twitter via their links.\n - [`mattrighetti/libgen-bot-rs`](https://github.com/mattrighetti/libgen-bot-rs) — Telegram bot to interface with libgen.\n - [`zamazan4ik/npaperbot-telegram`](https://github.com/zamazan4ik/npaperbot-telegram) — Telegram bot for searching via C++ proposals.\n - [`studentenherz/dlebot`](https://github.com/studentenherz/dlebot) — A bot to query definitions of words from the Spanish Language Dictionary.\n - [`fr0staman/fr0staman_bot`](https://github.com/fr0staman/fr0staman_bot) — Feature rich Telegram game-like bot with pigs 🐽.\n - [`franciscofigueira/transferBot`](https://github.com/franciscofigueira/transferBot) — Telegram bot that notifies of crypto token transfers.\n\n<details>\n<summary>Show bots using `teloxide` older than v0.6.0</summary>\n\n - [`mxseev/logram`](https://github.com/mxseev/logram) — Utility that takes logs from anywhere and sends them to Telegram.\n - [`alexkonovalov/PedigreeBot`](https://github.com/alexkonovalov/PedigreeBot) — A Telegram bot for building family trees.\n - [`Hermitter/tepe`](https://github.com/Hermitter/tepe) — A CLI to command a bot to send messages and files over Telegram.\n - [`myblackbeard/basketball-betting-bot`](https://github.com/myblackbeard/basketball-betting-bot) — The bot lets you bet on NBA games against your buddies.\n - [`dracarys18/grpmr-rs`](https://github.com/dracarys18/grpmr-rs) — Modular Telegram Group Manager Bot written in Rust.\n - [`ArtHome12/cognito_bot`](https://github.com/ArtHome12/cognito_bot) — The bot is designed to anonymize messages to a group.\n - [`crapstone/hsctt`](https://codeberg.org/crapstones-bots/hsctt) — A bot that converts HTTP status codes into text.\n\n</details>\n\nSee [1900+ other public repositories using `teloxide` >>](https://github.com/teloxide/teloxide/network/dependents)\n\n## Contributing\n\nSee [`CONRIBUTING.md`](CONTRIBUTING.md).\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.095703125,
          "content": "[toolchain]\nchannel = \"nightly-2024-07-03\"\ncomponents = [\"rustfmt\", \"clippy\"]\nprofile = \"minimal\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.1865234375,
          "content": "format_code_in_doc_comments = true\nwrap_comments = true\nformat_strings = true\nimports_granularity = \"Crate\"\nuse_small_heuristics = \"Max\"\nuse_field_init_shorthand = true\nmerge_derives = false\n"
        },
        {
          "name": "triagebot.toml",
          "type": "blob",
          "size": 2.1171875,
          "content": "[assign]\nwarn_non_default_branch = true\ncontributing_url = \"https://github.com/teloxide/teloxide/blob/master/CONTRIBUTING.md\"\n\n[assign.adhoc_groups]\n# This is a special group that will be used if none of the `owners` entries matches.\nfallback = [\"@Hirrolot\"]\n\n[assign.owners]\n\"crates/teloxide\" = [\"@Hirrolot\"]\n\n\n[autolabel.\"S-waiting-on-review\"]\nnew_pr = true\n\n#[autolabel.\"new-issue\"]\n#new_issue = true\n\n[autolabel.\"C-core\"]\ntrigger_files = [\"crates/teloxide-core/\"]\n\n[autolabel.\"C-main\"]\ntrigger_files = [\"crates/teloxide/\"]\n\n[autolabel.\"C-macros\"]\ntrigger_files = [\"crates/teloxide-macros/\"]\n\n[autolabel.\"A-dialogue\"]\ntrigger_files = [\"crates/teloxide/src/dispatching/dialogue/\"]\n\n[autolabel.\"A-dispatching\"]\ntrigger_files = [\"crates/teloxide/src/dispatching/\"]\n\n[autolabel.\"A-macros\"]\ntrigger_files = [\"crates/teloxide-macros/\"]\n\n[autolabel.\"A-requester\"]\ntrigger_files = [\"crates/teloxide-core/src/requests/requester.rs\", \"crates/teloxide-core/src/requests/requester_ext.rs\"]\n\n[autolabel.\"A-requests\"]\ntrigger_files = [\"crates/teloxide-core/src/requests/\", \"crates/teloxide-core/src/payloads/\"]\n\n[autolabel.\"A-tba-errors\"]\ntrigger_files = [\"crates/teloxide-core/src/errors.rs\"]\n\n[autolabel.\"A-tba-types\"]\ntrigger_files = [\"crates/teloxide-core/src/types\"]\n\n[autolabel.\"A-update-listeners\"]\ntrigger_files = [\"crates/teloxide/src/update_listeners\"]\n\n[relabel]\nallow-unauthenticated = [\n    \"S-*\", # Status\n    \"C-*\", # Crate\n    \"breaking change\",\n    \"bug\",\n    \"documentation\",\n    \"duplicate\",\n    \"feature-request\",\n    \"FIXME\",\n    \"frozen\",\n    \"proposal\",\n    \"question\",\n    \"tba-update\",\n    \"Unknown API error\",\n    \"WIP\",\n]\n\n\n# https://forge.rust-lang.org/triagebot/github-releases.html?\n\n\n[review-submitted]\n# This label is added when a review is submitted.\nreviewed_label = \"S-waiting-on-author\"\n# These labels are removed when a review is submitted.\nreview_labels = [\"S-waiting-on-review\"]\n\n[review-requested]\n# Those labels are removed when PR author requests a review from an assignee\nremove_labels = [\"S-waiting-on-author\"]\n# Those labels are added when PR author requests a review from an assignee\nadd_labels = [\"S-waiting-on-review\"]\n\n[shortcut]\n"
        }
      ]
    }
  ]
}