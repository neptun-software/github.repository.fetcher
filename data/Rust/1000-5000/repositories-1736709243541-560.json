{
  "metadata": {
    "timestamp": 1736709243541,
    "page": 560,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rustcc/RustPrimer",
      "stars": 1776,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2216796875,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{md,markdown}]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.68359375,
          "content": "# Built files\n_book/\n\n# Node-related ignoring, copied from https://github.com/github/gitignore/blob/master/Node.gitignore\n# Logs\nlogs\n*.log\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional REPL history\n.node_repl_history\n"
        },
        {
          "name": ".textlintrc",
          "type": "blob",
          "size": 0.044921875,
          "content": "{\n  \"rules\": {\n    \"editorconfig\": true\n  }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.07421875,
          "content": "language: node_js\n\nnode_js:\n  - \"5\"\n\nscript:\n  - npm test\n  - npm run build\n"
        },
        {
          "name": "1st-glance",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.2275390625,
          "content": "我们欢迎RustPrimer的Contributor们将自己的 `[blog/github/社交帐号]`\n添加在 [1st-glance/README.md](./1st-glance/README.md)里。\n但严禁未参与者恶意添加帐号，违者将会被永久拒绝PR和issue权限。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.1630859375,
          "content": "# RustPrimer\n\n[![build status][build-badge]][build-url]\n\n[build-badge]: https://api.travis-ci.org/rustcc/RustPrimer.svg\n[build-url]: https://travis-ci.org/rustcc/RustPrimer\n\nThe Rust primer for beginners.\n\n给初学者的Rust中文教程。\n\n## 在线阅读地址\n\n[点我阅读](https://rustcc.gitbooks.io/rustprimer/content/)\n\n也可复制以下链接：\n\n```\nhttps://rustcc.gitbooks.io/rustprimer/content/\n```\n\n## 社区\n\n### QQ群\n\n群号：\n```\n    Rust语言中文社区 144605258 （已满）\n    Rust编程语言社区2群 303838735\n    (telegram群)：\n```\n\n*进群必须附带您的github地址，否则不予通过*\n\n### telegram社群\n\nrust社区深水群：[https://t.me/rust_deep_water](https://t.me/rust_deep_water)\n\nrust众: [https://t.me/rust_zh](https://t.me/rust_zh)\n\n\n### 社区\n\nchat: https://chat.rust-china.org/ (使用github验证登录)\n\nblog: https://rust-china.org/\n\nwiki: https://wiki.rust-china.org/\n\n## 版权规定\n\n本书使用 `CC BY-SA 3.0` 协议，转载请注明地址。\n\n## GitBook 生成\n\n直接用：\n\n```\ngitbook serve\n```\n\n即可。\n\n## ChangeLog\n\n1. 2016年3月31日，初稿完成。发布 v1.0 版。\n2. 2016年5月2日，完成 1.1.0 版本。\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 6.095703125,
          "content": "# Summary\n\n* [初识Rust](1st-glance/README.md)\n* [安装Rust](install/preface.md)「marvin-min」\n  * [Linux](install/install_rust_on_linux.md)\n  * [Mac](install/install_rust_on_mac_os.md)\n  * [Windows](install/install_rust_on_windows.md)\n  * [版本管理工具: rustup](install/rustup.md)\n* [编辑器](editors/preface.md)\n  * [前期准备](editors/before.md)「wayslog」\n  * [vim](editors/vim.md)「wayslog」\n  * [emacs](editors/emacs.md)「tiansiyuan」\n  * [vscode](editors/vscode.md)「daogangtang」\n  * [atom](editors/atom.md)「wayslog」\n  * [sublime](editors/sublime.md)\n  * [visual studio](editors/visualstudio.md)「marvinguo」\n  * [spacemacs](editors/spacemacs.md)「wayslog」\n* [Rust快速入门](quickstart/quickstart.md)「Naupio」\n  * [Rust旅程](quickstart/rust-travel.md)\n  * [变量绑定与原生类型](quickstart/primitive-type.md)\n  * [数组、动态数组和字符串](quickstart/vector-string.md)\n  * [结构体与枚举](quickstart/struct-enum.md)\n  * [控制流](quickstart/control-flow.md)\n  * [函数与方法](quickstart/function-method.md)\n  * [特性](quickstart/trait.md)\n  * [注释与文档](quickstart/comments-document.md)\n  * [输入输出流](quickstart/io-stream.md)\n* [Cargo项目管理器](cargo-projects-manager/cargo-projects-manager.md)「fuyingfuying」\n* [基本程序结构](flow/preface.md)「daogangtang」\n  * [注释](flow/comment.md)\n  * [条件](flow/condition.md)\n  * [循环](flow/repetition.md)\n* [类型、运算符和字符串](type/preface.md)「wayslog」\n  * [基础类型](type/types.md)\n  * [复合类型](type/compound-types.md)\n  * [字符串类](type/string.md)\n  * [基础运算符和字符串格式化](type/operator-and-formatting.md)\n* [函数](function/overview.md)「qdao」\n  * [函数参数](function/arguement.md)\n  * [函数返回值](function/return_value.md)\n  * [语句和表达式](function/statement_expression.md)\n  * [高阶函数](function/higher_order_function.md)\n* [模式匹配](match/overview.md)「wayslog」\n  * [match关键字](match/match.md)\n  * [模式 pattern](match/pattern.md)\n* [特征 Trait](trait/overview.md)「JohnSmithX」\n  * [trait关键字](trait/trait.md)\n  * [trait对象](trait/trait-object.md)\n* [泛型](generic/generic.md)「stormgbs」\n* [可变性、所有权、租借和生命期](ownership-system/preface.md)「stormgbs」\n  * [所有权](ownership-system/ownership.md)\n  * [引用和借用](ownership-system/borrowing_reference.md)\n  * [生命周期](ownership-system/lifetime.md)\n* [闭包](closure/overview.md)「qdao」\n  * [闭包的语法](closure/syntax.md)\n  * [闭包的实现](closure/implementation.md)\n  * [闭包作为参数和返回值](closure/as_argument_return_value.md)\n* [集合类型 Collections](collections/overview.md)「wayslog」\n  * [动态数组 Vec](collections/vec.md)\n  * [哈希表 HashMap](collections/hashmap.md)\n* [迭代器](iterator/overview.md)「wayslog」\n  * [迭代器、适配器、消费者](iterator/iterator.md)\n* [模块和包系统、Prelude](module/preface.md)「daogangtang」\n  * [模块 module 和包 crate](module/module.md)\n  * [Prelude](module/prelude.md)\n  * [pub restricted](module/pub-restricted.md)\n* [Option、Result与错误处理](error-handling/option-result.md)「JohnSmithX」\n* [输入与输出](io/preface.md)\n  * [标准输入输出](io/io.md) \n  * [print! 宏](io/output.md)\n  * [文件输入输出](io/file-io.md)「tennix」\n* [宏系统](macro/macro.md)「tennix」\n* [堆、栈与Box](heap-stack/heap-stack.md)「tennix」\n* [几种智能指针](rcarc/preface.md)「daogangtang」\n  * [Rc, Arc](rcarc/rcarc.md)\n  * [Mutex, RwLock](rcarc/mutex.md)\n  * [Cell, RefCell](rcarc/cell.md)\n* [类型系统中的几个常见 Trait](intoborrow/preface.md) 「daogangtang」\n  * [Into/From 及其在 String 和 &str 互转上的应用](intoborrow/into.md)\n  * [AsRef, AsMut](intoborrow/asref.md)\n  * [Borrow, BorrowMut, ToOwned](intoborrow/borrow.md)\n  * [Deref 与 Deref coercions](intoborrow/deref.md)\n  * [Cow 及其在 String 和 &str 上的应用](intoborrow/cow.md)\n* [Send 和 Sync](marker/sendsync.md)「daogangtang」\n* [并发，并行，多线程编程](concurrency-parallel-thread/preface.md)「anzhihun」\n  * [线程](concurrency-parallel-thread/thread.md)\n  * [消息传递](concurrency-parallel-thread/message-passing.md)\n  * [共享内存](concurrency-parallel-thread/share-memory.md)\n  * [同步](concurrency-parallel-thread/synchronize.md)\n  * [并行](concurrency-parallel-thread/parallel.md)\n* [Unsafe、原始指针](unsafe-rawpointer/preface.md)「JohnSmithX」\n  * [Unsafe](unsafe-rawpointer/unsafe.md)\n  * [原始指针](unsafe-rawpointer/raw-pointer.md)\n* [FFI](ffi/preface.md)「42」\n  * [rust调用ffi函数](ffi/calling-ffi-function.md)\n  * [将rust编译成库](ffi/compiling-rust-to-lib.md)\n* [运算符重载](operator-overloading/operator.md)「wayslog」\n* [属性和编译器参数](attr-and-compiler-arg/preface.md)「elton」\n  * [属性](attr-and-compiler-arg/attribute.md)\n  * [编译器参数](attr-and-compiler-arg/rustc-option.md)\n* [Cargo参数配置](cargo-detailed-cfg/cargo-detailed-cfg.md)「fuyingfuying」\n* [测试与评测](testing/preface.md)「daogangtang」\n  * [测试 (testing)](testing/threearchtest.md)\n  * [评测 (benchmark)](testing/bench.md)\n* [代码风格](coding-style/style.md)「tiansiyuan」\n* [Any与反射](any/any.md)「wayslog」\n* [安全](safe/safety.md)「daogangtang」\n* [常用数据结构实现](data-structure/preface.md)「Naupio」\n  * [栈结构](data-structure/stack.md)\n  * [队列](data-structure/queue.md)\n  * [二叉树](data-structure/binary_tree.md)\n  * [优先队列](data-structure/priority_queue.md)\n  * [链表](data-structure/linked_list.md)\n  * [图结构](data-structure/graph.md)\n* [标准库介绍](std/overview.md)「wayslog」\n  * [系统命令:调用grep](std/process.md)\n  * [目录操作:简单grep](std/fs-and-path.md)\n  * [网络模块:W回音](std/net.md)\n* [实战篇](action/preface.md)「wangyu190810」\n  * [实战：Json处理](action/json_data/readme.md)\n  * [实战：Web 应用开发入门](action/mysite/readme.md)\n  * [实战：使用Postgresql数据库](action/db/readme.md)\n* [附录-术语表](appendix/glossary.md)「tennix」\n"
        },
        {
          "name": "TOC.md",
          "type": "blob",
          "size": 5.3623046875,
          "content": "- [初识Rust](1st-glance/README.md)\n- [安装Rust](install/preface.md)\n  - [Linux](install/install_rust_on_linux.md)\n  - [Mac](install/install_rust_on_mac_os.md)\n  - [Windows](install/install_rust_on_windows.md)\n  - [版本管理工具: rustup](install/rustup.md)\n- [编辑器](editors/preface.md)\n  - [前期准备](editors/before.md)\n  - [vim](editors/vim.md)\n  - [emacs](editors/emacs.md)\n  - [vscode](editors/vscode.md)\n  - [atom](editors/atom.md)\n  - [sublime](editors/sublime.md)\n  - [visual studio](editors/visualstudio.md)\n  - [spacemacs](editors/spacemacs.md)\n- [Rust快速入门](quickstart/quickstart.md)\n  - [Rust旅程](quickstart/rust-travel.md)\n  - [变量绑定与原生类型](quickstart/primitive-type.md)\n  - [数组、动态数组和字符串](quickstart/vector-string.md)\n  - [结构体与枚举](quickstart/struct-enum.md)\n  - [控制流](quickstart/control-flow.md)\n  - [函数与方法](quickstart/function-method.md)\n  - [特性](quickstart/trait.md)\n  - [注释与文档](quickstart/comments-document.md)\n  - [输入输出流](quickstart/io-stream.md)\n- [Cargo项目管理器](cargo-projects-manager/cargo-projects-manager.md)\n- [基本程序结构](flow/preface.md)\n  - [注释](flow/comment.md)\n  - [条件](flow/condition.md)\n  - [循环](flow/repetition.md)\n- [类型、运算符和字符串](type/preface.md)\n  - [基础类型](type/types.md)\n  - [复合类型](type/compound-types.md)\n  - [字符串类](type/string.md)\n  - [基础运算符和字符串格式化](type/operator-and-formatting.md)\n- [函数](function/overview.md)\n  - [函数参数](function/arguement.md)\n  - [函数返回值](function/return_value.md)\n  - [语句和表达式](function/statement_expression.md)\n  - [高阶函数](function/higher_order_function.md)\n- [模式匹配](match/overview.md)\n  - [match关键字](match/match.md)\n  - [模式 pattern](match/pattern.md)\n- [特征 Trait](trait/overview.md)\n  - [trait关键字](trait/trait.md)\n  - [trait对象](trait/trait-object.md)\n- [泛型](generic/generic.md)\n- [可变性、所有权、租借和生命期](ownership-system/ownership_system.md)\n  - [所有权](ownership-system/ownership.md)\n  - [引用和借用](ownership-system/borrowing_reference.md)\n  - [生命周期](ownership-system/lifetime.md)\n- [闭包](closure/overview.md)\n  - [闭包的语法](closure/syntax.md)\n  - [闭包的实现](closure/implementation.md)\n  - [闭包作为参数和返回值](closure/as_argument_return_value.md)\n- [集合类型 Collections](collections/overview.md)\n  - [动态数组 Vec](collections/vec.md)\n  - [哈希表 HashMap](collections/hashmap.md)\n- [迭代器](iterator/overview.md)\n  - [迭代器、适配器、消费者](iterator/iterator.md)\n- [模块和包系统、Prelude](module/preface.md)\n  - [模块 module 和包 crate](module/module.md)\n  - [Prelude](module/prelude.md)\n- [Option、Result与错误处理](error-handling/option-result.md)\n- [输入与输出](io/io.md)\n- [宏系统](macro/macro.md)\n- [堆、栈与Box](heap-stack/heap-stack.md)\n- [几种智能指针](rcarc/preface.md)\n  - [Rc, Arc](rcarc/rcarc.md)\n  - [Mutex, RwLock](rcarc/mutex.md)\n  - [Cell, RefCell](rcarc/cell.md)\n- [类型系统中的几个常见 Trait](intoborrow/preface.md) \n  - [Into/From 及其在 String 和 &str 互转上的应用](intoborrow/into.md)\n  - [AsRef, AsMut](intoborrow/asref.md)\n  - [Borrow, BorrowMut, ToOwned](intoborrow/borrow.md)\n  - [Deref 与 Deref coercions](intoborrow/deref.md)\n  - [Cow 及其在 String 和 &str 上的应用](intoborrow/cow.md)\n- [Send 和 Sync](marker/sendsync.md)\n- [并发，并行，多线程编程](concurrency-parallel-thread/preface.md)\n  - [线程](concurrency-parallel-thread/thread.md)\n  - [消息传递](concurrency-parallel-thread/message-passing.md)\n  - [共享内存](concurrency-parallel-thread/share-memory.md)\n  - [同步](concurrency-parallel-thread/synchronize.md)\n  - [并行](concurrency-parallel-thread/parallel.md)\n- [Unsafe、原始指针](unsafe-rawpointer/preface.md)\n  - [Unsafe](unsafe-rawpointer/unsafe.md)\n  - [原始指针](unsafe-rawpointer/raw-pointer.md)\n- [FFI](ffi/preface.md)\n  - [rust调用ffi函数](ffi/calling-ffi-function.md)\n  - [将rust编译成库](ffi/compiling-rust-to-lib.md)\n- [运算符重载](operator-overloading/operator.md)\n- [属性和编译器参数](attr-and-compiler-arg/preface.md)\n  - [属性](attr-and-compiler-arg/attribute.md)\n  - [编译器参数](attr-and-compiler-arg/rustc-option.md)\n- [Cargo参数配置](cargo-detailed-cfg/cargo-detailed-cfg.md)\n- [测试与评测](testing/preface.md)\n  - [测试 (testing)](testing/threearchtest.md)\n  - [评测 (benchmark)](testing/bench.md)\n- [代码风格](coding-style/style.md)\n- [Any与反射](any/any.md)\n- [安全（safe）](safe/safety.md)\n- [常用数据结构实现](data-structure/preface.md)\n  - [栈结构](data-structure/stack.md)\n  - [队列](data-structure/queue.md)\n  - [二叉树](data-structure/binary_tree.md)\n  - [优先队列](data-structure/priority_queue.md)\n  - [链表](data-structure/linked_list.md)\n  - [图结构](data-structure/graph.md)\n- [标准库介绍](std/overview.md)\n  - [系统命令:调用grep](std/process.md)\n  - [目录操作:简单grep](std/fs-and-path.md)\n  - [网络模块:W回音](std/net.md)\n- [实战篇](action/preface.md)\n  - [实战：Json处理](action/json_data/readme.md)\n  - [实战：Web 应用开发入门](action/mysite/readme.md)\n  - [实战：使用Postgresql数据库](action/db/readme.md)\n- [附录-术语表](appendix/glossary.md)\n"
        },
        {
          "name": "action",
          "type": "tree",
          "content": null
        },
        {
          "name": "any",
          "type": "tree",
          "content": null
        },
        {
          "name": "appendix",
          "type": "tree",
          "content": null
        },
        {
          "name": "attr-and-compiler-arg",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.0966796875,
          "content": "{\n    \"lang\":\"zh-cn\",\n    \"pluginsConfig\": {\n\t\"theme-default\": {\n\t    \"showLevel\": true\n\t}\n    }\n}\n"
        },
        {
          "name": "cargo-detailed-cfg",
          "type": "tree",
          "content": null
        },
        {
          "name": "cargo-projects-manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "closure",
          "type": "tree",
          "content": null
        },
        {
          "name": "coding-style",
          "type": "tree",
          "content": null
        },
        {
          "name": "collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "concurrency-parallel-thread",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.json",
          "type": "blob",
          "size": 0.0908203125,
          "content": "{\n    \"name\": \"Rust 中文教程\",\n    \"introduction\": \"适合初学者的Rust中文教程\"\n}"
        },
        {
          "name": "cover",
          "type": "tree",
          "content": null
        },
        {
          "name": "data-structure",
          "type": "tree",
          "content": null
        },
        {
          "name": "editors",
          "type": "tree",
          "content": null
        },
        {
          "name": "error-handling",
          "type": "tree",
          "content": null
        },
        {
          "name": "ffi",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow",
          "type": "tree",
          "content": null
        },
        {
          "name": "function",
          "type": "tree",
          "content": null
        },
        {
          "name": "generic",
          "type": "tree",
          "content": null
        },
        {
          "name": "heap-stack",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "intoborrow",
          "type": "tree",
          "content": null
        },
        {
          "name": "io",
          "type": "tree",
          "content": null
        },
        {
          "name": "iterator",
          "type": "tree",
          "content": null
        },
        {
          "name": "macro",
          "type": "tree",
          "content": null
        },
        {
          "name": "marker",
          "type": "tree",
          "content": null
        },
        {
          "name": "match",
          "type": "tree",
          "content": null
        },
        {
          "name": "module",
          "type": "tree",
          "content": null
        },
        {
          "name": "operator-overloading",
          "type": "tree",
          "content": null
        },
        {
          "name": "ownership-system",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7021484375,
          "content": "{\n  \"name\": \"rust-primer\",\n  \"version\": \"1.1.2\",\n  \"description\": \"The Rust primer for beginners.\",\n  \"scripts\": {\n    \"test\": \"textlint $(ls --ignore='node_modules')\",\n    \"test:fix\": \"npm test -- --fix\",\n    \"serve\": \"gitbook serve\",\n    \"build\": \"gitbook build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/rustcc/RustPrimer.git\"\n  },\n  \"keywords\": [\n    \"Rust\",\n    \"Book\",\n    \"Beginner\"\n  ],\n  \"license\": \"CC-BY-SA-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/rustcc/RustPrimer/issues\"\n  },\n  \"homepage\": \"https://github.com/rustcc/RustPrimer#readme\",\n  \"devDependencies\": {\n    \"gitbook-cli\": \"^2.1.3\",\n    \"textlint\": \"6.5.0\",\n    \"textlint-rule-editorconfig\": \"1.0.2\"\n  }\n}\n"
        },
        {
          "name": "quickstart",
          "type": "tree",
          "content": null
        },
        {
          "name": "rcarc",
          "type": "tree",
          "content": null
        },
        {
          "name": "safe",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "std",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "trait",
          "type": "tree",
          "content": null
        },
        {
          "name": "type",
          "type": "tree",
          "content": null
        },
        {
          "name": "unsafe-rawpointer",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}