{
  "metadata": {
    "timestamp": 1736709134989,
    "page": 327,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "delta-io/delta-rs",
      "stars": 2458,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".commitlintrc.js",
          "type": "blob",
          "size": 0.59375,
          "content": "module.exports = {\n    extends: ['@commitlint/config-conventional'],\n    // Workaround for https://github.com/dependabot/dependabot-core/issues/5923\n    ignores: [(message) => /^Bumps \\[.+]\\(.+\\) from .+ to .+\\.$/m.test(message)],\n    rules: {\n        'body-max-length': [0, 'always'],\n        'body-max-line-length': [0, 'always'],\n        'footer-max-length': [0, 'always'],\n        'footer-max-line-length': [0, 'always'],\n        'header-max-length': [0, 'always'],\n        'scope-max-length': [0, 'always'],\n        'subject-max-length': [0, 'always'],\n        'type-max-length': [0, 'always'],\n    },\n}"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.63671875,
          "content": "/target\n**/target\n*.sw*\ntlaplus/*.toolbox/*_SnapShot_*/\ntlaplus/*.toolbox/*_SnapShot_*.launch\ntlaplus/*.toolbox/*.tla.pmap\ntlaplus/*.toolbox/*/*.out\ntlaplus/*.toolbox/*/*.tla\ntlaplus/*.toolbox/*/MC.cfg\ntlaplus/*.toolbox/*/[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*/\n/.idea\n.vscode\n.env\n.venv\nvenv\n**/.DS_Store\n**/.python-version\n.coverage\n*.env\n__azurite*\n__blobstorage__\n.githubchangeloggenerator.cache.log\n.githubchangeloggenerator.cache/\n.githubchangeloggenerator*\ndata\n\n# Add all Cargo.lock files except for those in binary crates\nCargo.lock\n!/aws/delta-checkpoint/Cargo.lock\n!/delta-inspect/Cargo.lock\n!/proofs/Cargo.lock\n\njustfile\nsite\n__pycache__"
        },
        {
          "name": ".ignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "# This file is used by cargo-watch\n.idea"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 153.7900390625,
          "content": "# Changelog\n\n## [rust-v0.20.1](https://github.com/delta-io/delta-rs/tree/rust-v0.20.1) (2024-09-27)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.20.0...rust-v0.20.1)\n\n**Implemented enhancements:**\n\n- Allow to specify Azurite hostname and service port as backend [\\#2900](https://github.com/delta-io/delta-rs/issues/2900)\n- docs section usage/Managing a table is out of date w.r.t. optimizing tables [\\#2891](https://github.com/delta-io/delta-rs/issues/2891)\n- generate more sensible row group size [\\#2545](https://github.com/delta-io/delta-rs/issues/2545)\n\n**Fixed bugs:**\n\n- Cannot write to Minio with deltalake.write\\_deltalake or Polars [\\#2894](https://github.com/delta-io/delta-rs/issues/2894)\n- Schema Mismatch Error When appending Parquet Files with Metadata using Rust Engine [\\#2888](https://github.com/delta-io/delta-rs/issues/2888)\n- Assume role support has been broken since 2022 :rofl:  [\\#2879](https://github.com/delta-io/delta-rs/issues/2879)\n- z-order fails on table that is partitioned by value with space [\\#2834](https://github.com/delta-io/delta-rs/issues/2834)\n- \"builder error for url\" when creating an instance of a DeltaTable which is located in an azurite blob storage [\\#2815](https://github.com/delta-io/delta-rs/issues/2815)\n\n**Closed issues:**\n\n- delta-rs can't write to a table if datafusion is not enabled [\\#2910](https://github.com/delta-io/delta-rs/issues/2910)\n\n## [rust-v0.20.0](https://github.com/delta-io/delta-rs/tree/rust-v0.20.0) (2024-09-18)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.19.1...rust-v0.20.0)\n\n**Fixed bugs:**\n\n- DeltaTableBuilder flags ignored [\\#2808](https://github.com/delta-io/delta-rs/issues/2808)\n- Require files in config is not anymore used to skip reading add actions [\\#2796](https://github.com/delta-io/delta-rs/issues/2796)\n\n**Merged pull requests:**\n\n- feat: improve AWS credential loading between S3 and DynamoDb code paths [\\#2887](https://github.com/delta-io/delta-rs/pull/2887) ([rtyler](https://github.com/rtyler))\n- feat: add support for `pyarrow.ExtensionType` [\\#2885](https://github.com/delta-io/delta-rs/pull/2885) ([fecet](https://github.com/fecet))\n- fix: conditionally disable enable\\_io non-unix based systems [\\#2884](https://github.com/delta-io/delta-rs/pull/2884) ([hntd187](https://github.com/hntd187))\n- docs: fix typo in delta-lake-dagster [\\#2883](https://github.com/delta-io/delta-rs/pull/2883) ([jessy1092](https://github.com/jessy1092))\n- fix: pin broken dependencies and changes in 0.19.1 [\\#2878](https://github.com/delta-io/delta-rs/pull/2878) ([rtyler](https://github.com/rtyler))\n- chore: cleanup codecov defaults [\\#2876](https://github.com/delta-io/delta-rs/pull/2876) ([rtyler](https://github.com/rtyler))\n- fix: prepare the next :crab: release with fixed version ranges [\\#2875](https://github.com/delta-io/delta-rs/pull/2875) ([rtyler](https://github.com/rtyler))\n- chore: exclude parquet from dependabot as well [\\#2874](https://github.com/delta-io/delta-rs/pull/2874) ([rtyler](https://github.com/rtyler))\n- chore: attempt to ignore all dependabot checks for arrow and datafusion [\\#2870](https://github.com/delta-io/delta-rs/pull/2870) ([rtyler](https://github.com/rtyler))\n- fix\\(rust\\): scan schema fix for predicate [\\#2869](https://github.com/delta-io/delta-rs/pull/2869) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: rearrange github actions a bit [\\#2868](https://github.com/delta-io/delta-rs/pull/2868) ([rtyler](https://github.com/rtyler))\n- fix: set put mode to overwrite in mount backend [\\#2861](https://github.com/delta-io/delta-rs/pull/2861) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: pin the build-dependencies for Python to a slightly older vendored openssl [\\#2856](https://github.com/delta-io/delta-rs/pull/2856) ([rtyler](https://github.com/rtyler))\n- fix: escaped columns in dataskippingstatscolumns [\\#2855](https://github.com/delta-io/delta-rs/pull/2855) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: re-enable optional old casting behavior in merge [\\#2853](https://github.com/delta-io/delta-rs/pull/2853) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: concurrent writes permission missing [\\#2846](https://github.com/delta-io/delta-rs/pull/2846) ([poguez](https://github.com/poguez))\n- chore: update python [\\#2845](https://github.com/delta-io/delta-rs/pull/2845) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: pin the Rust baseline version to 1.80 [\\#2842](https://github.com/delta-io/delta-rs/pull/2842) ([rtyler](https://github.com/rtyler))\n- fix: stats is optional in add action [\\#2841](https://github.com/delta-io/delta-rs/pull/2841) ([jkylling](https://github.com/jkylling))\n- chore\\(aws\\): use backon to replace backoff [\\#2840](https://github.com/delta-io/delta-rs/pull/2840) ([Xuanwo](https://github.com/Xuanwo))\n- feat\\(rust\\): add operationMetrics to WRITE [\\#2838](https://github.com/delta-io/delta-rs/pull/2838) ([gavinmead](https://github.com/gavinmead))\n- chore: enable codecov reporting [\\#2836](https://github.com/delta-io/delta-rs/pull/2836) ([rtyler](https://github.com/rtyler))\n- docs: fix documentation about max\\_spill\\_size [\\#2835](https://github.com/delta-io/delta-rs/pull/2835) ([junhl](https://github.com/junhl))\n- chore: set max\\_retries in CommitProperties [\\#2826](https://github.com/delta-io/delta-rs/pull/2826) ([helanto](https://github.com/helanto))\n- refactor\\(python\\): post\\_commit\\_hook\\_properties derive [\\#2824](https://github.com/delta-io/delta-rs/pull/2824) ([ion-elgreco](https://github.com/ion-elgreco))\n- refactor\\(python\\): add pymergebuilder [\\#2823](https://github.com/delta-io/delta-rs/pull/2823) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: make `Add::get_json_stats` public [\\#2822](https://github.com/delta-io/delta-rs/pull/2822) ([gruuya](https://github.com/gruuya))\n- docs: fix docstring of set\\_table\\_properties [\\#2820](https://github.com/delta-io/delta-rs/pull/2820) ([astrojuanlu](https://github.com/astrojuanlu))\n- fix\\(rust\\): set token provider explicitly [\\#2817](https://github.com/delta-io/delta-rs/pull/2817) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: public method to get partitions for DeltaTable \\(\\#2671\\) [\\#2816](https://github.com/delta-io/delta-rs/pull/2816) ([omkar-foss](https://github.com/omkar-foss))\n- perf: conditional put for default log store \\(e.g. azure, gcs, minio, cloudflare\\) [\\#2813](https://github.com/delta-io/delta-rs/pull/2813) ([ion-elgreco](https://github.com/ion-elgreco))\n- test\\(python\\): fix optimize call in benchmark [\\#2812](https://github.com/delta-io/delta-rs/pull/2812) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: use table config target file size, expose target\\_file\\_size in python [\\#2811](https://github.com/delta-io/delta-rs/pull/2811) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): use require files [\\#2809](https://github.com/delta-io/delta-rs/pull/2809) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): allow `in` pushdowns in early\\_filter [\\#2807](https://github.com/delta-io/delta-rs/pull/2807) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: added WriterProperties documentation [\\#2804](https://github.com/delta-io/delta-rs/pull/2804) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix: enable feature flags to which deltalake-core build tokio with enable\\_io [\\#2803](https://github.com/delta-io/delta-rs/pull/2803) ([rtyler](https://github.com/rtyler))\n- chore\\(python\\): remove deprecated or duplicated functions [\\#2801](https://github.com/delta-io/delta-rs/pull/2801) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore\\(python\\): raise not implemented in from\\_data\\_catalog [\\#2799](https://github.com/delta-io/delta-rs/pull/2799) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): `max_spill_size` default value [\\#2795](https://github.com/delta-io/delta-rs/pull/2795) ([mrjsj](https://github.com/mrjsj))\n- feat\\(python, rust\\): add ColumnProperties And rework in python WriterProperties [\\#2793](https://github.com/delta-io/delta-rs/pull/2793) ([sherlockbeard](https://github.com/sherlockbeard))\n- feat: configurable IO runtime [\\#2789](https://github.com/delta-io/delta-rs/pull/2789) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: remove some `file_actions` call sites [\\#2787](https://github.com/delta-io/delta-rs/pull/2787) ([roeap](https://github.com/roeap))\n- style: more consistent imports [\\#2786](https://github.com/delta-io/delta-rs/pull/2786) ([roeap](https://github.com/roeap))\n- feat\\(python, rust\\): added statistics\\_truncate\\_length in WriterProperties [\\#2784](https://github.com/delta-io/delta-rs/pull/2784) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix: pin maturin verison [\\#2778](https://github.com/delta-io/delta-rs/pull/2778) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: trim trailing slash in url storage options \\(\\#2656\\) [\\#2775](https://github.com/delta-io/delta-rs/pull/2775) ([omkar-foss](https://github.com/omkar-foss))\n- chore: update the changelog with the 0.19.0 release [\\#2774](https://github.com/delta-io/delta-rs/pull/2774) ([rtyler](https://github.com/rtyler))\n- feat\\(python, rust\\): `add feature` operation [\\#2712](https://github.com/delta-io/delta-rs/pull/2712) ([ion-elgreco](https://github.com/ion-elgreco))\n\n## [rust-v0.19.1](https://github.com/delta-io/delta-rs/tree/rust-v0.19.1) (2024-09-11)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.19.0...rust-v0.19.1)\n\n**Implemented enhancements:**\n\n- question: deletionVectors support [\\#2829](https://github.com/delta-io/delta-rs/issues/2829)\n- \\[Minor\\] Make `Add::get_json_stats` public [\\#2821](https://github.com/delta-io/delta-rs/issues/2821)\n- expose target\\_file\\_size in python side for WriterProperties [\\#2810](https://github.com/delta-io/delta-rs/issues/2810)\n- expose default\\_column\\_properties, column\\_properties of parquet WriterProperties in python [\\#2785](https://github.com/delta-io/delta-rs/issues/2785)\n- CDC support in deltalog when writing delta table [\\#2720](https://github.com/delta-io/delta-rs/issues/2720)\n- Function behaving similarly to `SHOW PARTITIONS` in the Python API [\\#2671](https://github.com/delta-io/delta-rs/issues/2671)\n- Expose set\\_statistics\\_truncate\\_length via Python WriterProperties [\\#2630](https://github.com/delta-io/delta-rs/issues/2630)\n\n**Fixed bugs:**\n\n- `write_deltalake` with predicate throw index out of bounds [\\#2867](https://github.com/delta-io/delta-rs/issues/2867)\n- writing to blobfuse has stopped working in 0.19.2 [\\#2860](https://github.com/delta-io/delta-rs/issues/2860)\n- cannot read from public GCS bucket if non logged in [\\#2859](https://github.com/delta-io/delta-rs/issues/2859)\n- Stats missing for `dataSkippingStatsColumns` when escaping column name [\\#2849](https://github.com/delta-io/delta-rs/issues/2849)\n- 0.19.2 install error when using poetry, pdm on Ubuntu [\\#2848](https://github.com/delta-io/delta-rs/issues/2848)\n- `deltalake-*` crates use different version than specified in `Cargo.toml`, leading to unexpected behavior [\\#2847](https://github.com/delta-io/delta-rs/issues/2847)\n- Databricks fails integrity check after compacting with delta-rs [\\#2839](https://github.com/delta-io/delta-rs/issues/2839)\n- \"failed to load region from IMDS\" back in 0.19 despite `AWS_EC2_METADATA_DISABLED=true` [\\#2819](https://github.com/delta-io/delta-rs/issues/2819)\n- min/max\\_row\\_groups not respected [\\#2814](https://github.com/delta-io/delta-rs/issues/2814)\n- Large Memory Spike on Merge [\\#2802](https://github.com/delta-io/delta-rs/issues/2802)\n- Deleting large number of records fails with no error message [\\#2798](https://github.com/delta-io/delta-rs/issues/2798)\n- `max_spill_size` incorrect default value [\\#2794](https://github.com/delta-io/delta-rs/issues/2794)\n- Delta-RS Saved Delta Table not properly ingested into Databricks [\\#2779](https://github.com/delta-io/delta-rs/issues/2779)\n- Missing Linux binary releases and source tarball for Python release v0.19.0 [\\#2777](https://github.com/delta-io/delta-rs/issues/2777)\n- Transaction log parsing performance regression [\\#2760](https://github.com/delta-io/delta-rs/issues/2760)\n- `RecordBatchWriter` only creates stats for the first 32 columns; this prevents calling `create_checkpoint`. [\\#2745](https://github.com/delta-io/delta-rs/issues/2745)\n- `DeltaScanBuilder` does not respect datafusion context's `datafusion.execution.parquet.pushdown_filters` [\\#2739](https://github.com/delta-io/delta-rs/issues/2739)\n- `IN (...)` clauses appear to be ignored in merge commands with S3 - extra partitions scanned [\\#2726](https://github.com/delta-io/delta-rs/issues/2726)\n- Trailing slash on AWS\\_ENDPOINT raises S3 Error [\\#2656](https://github.com/delta-io/delta-rs/issues/2656)\n- AsyncChunkReader::get\\_bytes error: Generic MicrosoftAzure error: error decoding response body [\\#2592](https://github.com/delta-io/delta-rs/issues/2592)\n\n## [rust-v0.19.0](https://github.com/delta-io/delta-rs/tree/rust-v0.19.0) (2024-08-14)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.18.2...rust-v0.19.0)\n\n**Implemented enhancements:**\n\n- Only allow squash merge [\\#2542](https://github.com/delta-io/delta-rs/issues/2542)\n\n**Fixed bugs:**\n\n- Write also insert change types in writer CDC [\\#2750](https://github.com/delta-io/delta-rs/issues/2750)\n- Regression in Python multiprocessing support [\\#2744](https://github.com/delta-io/delta-rs/issues/2744)\n- SchemaError occurs during table optimisation after upgrade to v0.18.1 [\\#2731](https://github.com/delta-io/delta-rs/issues/2731)\n- AWS WebIdentityToken exposure in log files [\\#2719](https://github.com/delta-io/delta-rs/issues/2719)\n- Write performance degrades with multiple writers [\\#2683](https://github.com/delta-io/delta-rs/issues/2683)\n- Write monotonic sequence, but read is non monotonic [\\#2659](https://github.com/delta-io/delta-rs/issues/2659)\n- Python `write_deltalake` with `schema_mode=\"merge\"` casts types [\\#2642](https://github.com/delta-io/delta-rs/issues/2642)\n- Newest docs \\(potentially\\) not released [\\#2587](https://github.com/delta-io/delta-rs/issues/2587)\n- CDC is not generated for Structs and Lists [\\#2568](https://github.com/delta-io/delta-rs/issues/2568)\n\n**Closed issues:**\n\n- delete\\_dir bug [\\#2713](https://github.com/delta-io/delta-rs/issues/2713)\n\n**Merged pull requests:**\n\n- chore: fix a bunch of clippy lints and re-enable tests [\\#2773](https://github.com/delta-io/delta-rs/pull/2773) ([rtyler](https://github.com/rtyler))\n- feat: more economic data skipping with datafusion [\\#2772](https://github.com/delta-io/delta-rs/pull/2772) ([roeap](https://github.com/roeap))\n- chore: prepare the next notable release of 0.19.0 [\\#2768](https://github.com/delta-io/delta-rs/pull/2768) ([rtyler](https://github.com/rtyler))\n- feat: restore the TryFrom for DeltaTablePartition [\\#2767](https://github.com/delta-io/delta-rs/pull/2767) ([rtyler](https://github.com/rtyler))\n- feat: fail fast on forked process [\\#2765](https://github.com/delta-io/delta-rs/pull/2765) ([Tom-Newton](https://github.com/Tom-Newton))\n- perf: early stop if all values in arr are null [\\#2764](https://github.com/delta-io/delta-rs/pull/2764) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): don't flatten fields during cdf read [\\#2763](https://github.com/delta-io/delta-rs/pull/2763) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: upgrade to datafusion 41 [\\#2761](https://github.com/delta-io/delta-rs/pull/2761) ([rtyler](https://github.com/rtyler))\n- fix\\(python, rust\\): cdc in writer not creating inserts [\\#2751](https://github.com/delta-io/delta-rs/pull/2751) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: improved test fixtures [\\#2749](https://github.com/delta-io/delta-rs/pull/2749) ([roeap](https://github.com/roeap))\n- feat: introduce CDC generation for merge operations [\\#2747](https://github.com/delta-io/delta-rs/pull/2747) ([rtyler](https://github.com/rtyler))\n- docs: fix broken link in docs [\\#2746](https://github.com/delta-io/delta-rs/pull/2746) ([astrojuanlu](https://github.com/astrojuanlu))\n- chore: update delta\\_kernel to 0.3.0 [\\#2742](https://github.com/delta-io/delta-rs/pull/2742) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- chore: add to code\\_owner crates [\\#2741](https://github.com/delta-io/delta-rs/pull/2741) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: update changelog and versions for next release [\\#2740](https://github.com/delta-io/delta-rs/pull/2740) ([rtyler](https://github.com/rtyler))\n- feat\\(python, rust\\): arrow large/view types passthrough, rust default engine [\\#2738](https://github.com/delta-io/delta-rs/pull/2738) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: column parsing to include nested columns and enclosing char [\\#2737](https://github.com/delta-io/delta-rs/pull/2737) ([gtrawinski](https://github.com/gtrawinski))\n\n## [rust-v0.18.2](https://github.com/delta-io/delta-rs/tree/rust-v0.18.2) (2024-08-07)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.18.1...rust-v0.18.2)\n\n**Implemented enhancements:**\n\n- Choose which columns to store min/max values for [\\#2709](https://github.com/delta-io/delta-rs/issues/2709)\n- Projection pushdown for load\\_cdf [\\#2681](https://github.com/delta-io/delta-rs/issues/2681)\n- Way to check if Delta table exists at specified path [\\#2662](https://github.com/delta-io/delta-rs/issues/2662)\n- Support HDFS via hdfs-native package [\\#2611](https://github.com/delta-io/delta-rs/issues/2611)\n- Deletion `_change_type` does not appear in change data feed [\\#2579](https://github.com/delta-io/delta-rs/issues/2579)\n\n**Fixed bugs:**\n\n- Slow add\\_actions.to\\_pydict for tables with large number of columns, impacting read performance [\\#2733](https://github.com/delta-io/delta-rs/issues/2733)\n- append is deleting records [\\#2716](https://github.com/delta-io/delta-rs/issues/2716)\n- segmentation fault - Python 3.10 on Mac M3  [\\#2706](https://github.com/delta-io/delta-rs/issues/2706)\n- Failure to delete dir and files [\\#2703](https://github.com/delta-io/delta-rs/issues/2703)\n- DeltaTable.from\\_data\\_catalog not working [\\#2699](https://github.com/delta-io/delta-rs/issues/2699)\n- Project should use the same version of `ruff` in the `lint` stage of `python_build.yml` as in `pyproject.toml` [\\#2678](https://github.com/delta-io/delta-rs/issues/2678)\n- un-tracked columns are giving json error when pyarrow schema have feild with nullable=False and create\\_checkpoint is trigged  [\\#2675](https://github.com/delta-io/delta-rs/issues/2675)\n- \\[BUG\\]write\\_delta\\({'custom\\_metadata':str}\\) cannot be converted. str to pyDict error \\(0.18.2\\_DeltaPython/Windows10\\) [\\#2697](https://github.com/delta-io/delta-rs/issues/2697)\n- Pyarrow engine not supporting schema overwrite with Append mode [\\#2654](https://github.com/delta-io/delta-rs/issues/2654)\n- `deltalake-core` version re-exported by `deltalake` different than versions used by `deltalake-azure` and `deltalake-gcp` [\\#2647](https://github.com/delta-io/delta-rs/issues/2647)\n- i32 limit in JSON stats [\\#2646](https://github.com/delta-io/delta-rs/issues/2646)\n- Rust writer not encoding correct URL for partitions in delta table [\\#2634](https://github.com/delta-io/delta-rs/issues/2634)\n- Large Types breaks merge predicate pruning [\\#2632](https://github.com/delta-io/delta-rs/issues/2632)\n- Getting error when converting a partitioned parquet table to delta table [\\#2626](https://github.com/delta-io/delta-rs/issues/2626)\n- Arrow: Parquet does not support writing empty structs when creating checkpoint [\\#2622](https://github.com/delta-io/delta-rs/issues/2622)\n- InvalidTableLocation\\(\"Unknown scheme: gs\"\\) on 0.18.0 [\\#2610](https://github.com/delta-io/delta-rs/issues/2610)\n- Unable to read delta table created using Uniform [\\#2578](https://github.com/delta-io/delta-rs/issues/2578)\n- schema merging doesn't work when overwriting with a predicate [\\#2567](https://github.com/delta-io/delta-rs/issues/2567)\n\n**Closed issues:**\n\n- Unable to write new partitions with type timestamp on tables created with delta-rs 0.10.0 [\\#2631](https://github.com/delta-io/delta-rs/issues/2631)\n\n**Merged pull requests:**\n\n- fix: schema adapter doesn't map partial batches correctly [\\#2735](https://github.com/delta-io/delta-rs/pull/2735) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- perf: grab file size in rust [\\#2734](https://github.com/delta-io/delta-rs/pull/2734) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: use logical plan in update, refactor/simplify CDCTracker [\\#2727](https://github.com/delta-io/delta-rs/pull/2727) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: use logical plan in delete, delta planner refactoring [\\#2725](https://github.com/delta-io/delta-rs/pull/2725) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: try an alternative docke compose invocation syntax [\\#2724](https://github.com/delta-io/delta-rs/pull/2724) ([rtyler](https://github.com/rtyler))\n- fix\\(python, rust\\): use input schema to get correct schema in cdf reads [\\#2723](https://github.com/delta-io/delta-rs/pull/2723) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): cdc write-support for `overwrite` and `replacewhere` writes [\\#2722](https://github.com/delta-io/delta-rs/pull/2722) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): cdc write-support for `delete` operation [\\#2721](https://github.com/delta-io/delta-rs/pull/2721) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: enabling actions for merge groups [\\#2718](https://github.com/delta-io/delta-rs/pull/2718) ([rtyler](https://github.com/rtyler))\n- perf: apply projection when reading checkpoint parquet [\\#2717](https://github.com/delta-io/delta-rs/pull/2717) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- feat\\(python\\): add DeltaTable.is\\_deltatable static method \\(\\#2662\\) [\\#2715](https://github.com/delta-io/delta-rs/pull/2715) ([omkar-foss](https://github.com/omkar-foss))\n- chore: prepare python release 0.18.3 [\\#2707](https://github.com/delta-io/delta-rs/pull/2707) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): use url encoder when encoding partition values [\\#2705](https://github.com/delta-io/delta-rs/pull/2705) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): add projection in CDF reads [\\#2704](https://github.com/delta-io/delta-rs/pull/2704) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: ensure DataFusion SessionState Parquet options are applied to DeltaScan [\\#2702](https://github.com/delta-io/delta-rs/pull/2702) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- chore: refactor `write_deltalake` in `writer.py` [\\#2695](https://github.com/delta-io/delta-rs/pull/2695) ([fpgmaas](https://github.com/fpgmaas))\n- fix\\(python\\): empty dataset fix for \"pyarrow\" engine [\\#2689](https://github.com/delta-io/delta-rs/pull/2689) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: add test coverage command to `Makefile` [\\#2688](https://github.com/delta-io/delta-rs/pull/2688) ([fpgmaas](https://github.com/fpgmaas))\n- chore: create separate action to setup python and rust in the cicd pipeline [\\#2687](https://github.com/delta-io/delta-rs/pull/2687) ([fpgmaas](https://github.com/fpgmaas))\n- fix: update delta kernel version [\\#2685](https://github.com/delta-io/delta-rs/pull/2685) ([jeppe742](https://github.com/jeppe742))\n- chore: update README.md [\\#2684](https://github.com/delta-io/delta-rs/pull/2684) ([veronewra](https://github.com/veronewra))\n- fix\\(rust,python\\): checkpoint with column nullable false [\\#2680](https://github.com/delta-io/delta-rs/pull/2680) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: pin `ruff` and `mypy` versions in the `lint` stage in the CI pipeline [\\#2679](https://github.com/delta-io/delta-rs/pull/2679) ([fpgmaas](https://github.com/fpgmaas))\n- chore: enable `RUF` ruleset for `ruff` [\\#2677](https://github.com/delta-io/delta-rs/pull/2677) ([fpgmaas](https://github.com/fpgmaas))\n- chore: remove stale code for conditional import of `Literal` [\\#2676](https://github.com/delta-io/delta-rs/pull/2676) ([fpgmaas](https://github.com/fpgmaas))\n- chore: remove references to black from the project [\\#2674](https://github.com/delta-io/delta-rs/pull/2674) ([fpgmaas](https://github.com/fpgmaas))\n- chore: bump ruff to 0.5.2 [\\#2673](https://github.com/delta-io/delta-rs/pull/2673) ([fpgmaas](https://github.com/fpgmaas))\n- chore: improve contributing.md [\\#2672](https://github.com/delta-io/delta-rs/pull/2672) ([fpgmaas](https://github.com/fpgmaas))\n- feat: support userMetadata in CommitInfo [\\#2670](https://github.com/delta-io/delta-rs/pull/2670) ([jkylling](https://github.com/jkylling))\n- chore: upgrade to datafusion 40 [\\#2661](https://github.com/delta-io/delta-rs/pull/2661) ([rtyler](https://github.com/rtyler))\n- docs: improve navigation fixes [\\#2660](https://github.com/delta-io/delta-rs/pull/2660) ([avriiil](https://github.com/avriiil))\n- docs: add integration docs for s3 backend [\\#2658](https://github.com/delta-io/delta-rs/pull/2658) ([avriiil](https://github.com/avriiil))\n- docs: fix bullets on hdfs docs [\\#2653](https://github.com/delta-io/delta-rs/pull/2653) ([Kimahriman](https://github.com/Kimahriman))\n- ci: update CODEOWNERS [\\#2650](https://github.com/delta-io/delta-rs/pull/2650) ([hntd187](https://github.com/hntd187))\n- feat\\(rust\\): fix size\\_in\\_bytes in last\\_checkpoint\\_ to i64 [\\#2649](https://github.com/delta-io/delta-rs/pull/2649) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: increase subcrate versions [\\#2648](https://github.com/delta-io/delta-rs/pull/2648) ([rtyler](https://github.com/rtyler))\n- chore: missed one macos runner reference in actions [\\#2645](https://github.com/delta-io/delta-rs/pull/2645) ([rtyler](https://github.com/rtyler))\n- chore: add a reproduction case for merge failures with struct\\<string\\> [\\#2644](https://github.com/delta-io/delta-rs/pull/2644) ([rtyler](https://github.com/rtyler))\n- chore: remove macos builders from pull request flow [\\#2638](https://github.com/delta-io/delta-rs/pull/2638) ([rtyler](https://github.com/rtyler))\n- fix: enable parquet pushdown for DeltaScan via TableProvider impl for DeltaTable  \\(rebase\\) [\\#2637](https://github.com/delta-io/delta-rs/pull/2637) ([rtyler](https://github.com/rtyler))\n- chore: fix documentation generation with a pin of griffe [\\#2636](https://github.com/delta-io/delta-rs/pull/2636) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): fixed large\\_dtype to schema convert [\\#2635](https://github.com/delta-io/delta-rs/pull/2635) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix\\(rust, python\\): fix writing empty structs when creating checkpoint [\\#2627](https://github.com/delta-io/delta-rs/pull/2627) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix\\(rust, python\\): fix merge schema with overwrite [\\#2623](https://github.com/delta-io/delta-rs/pull/2623) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: bump python 0.18.2 [\\#2621](https://github.com/delta-io/delta-rs/pull/2621) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: report DataFusion metrics for DeltaScan [\\#2617](https://github.com/delta-io/delta-rs/pull/2617) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- feat\\(rust,python\\): cast each parquet file to delta schema [\\#2615](https://github.com/delta-io/delta-rs/pull/2615) ([HawaiianSpork](https://github.com/HawaiianSpork))\n- fix\\(rust\\): inconsistent order of partitioning columns \\(\\#2494\\) [\\#2614](https://github.com/delta-io/delta-rs/pull/2614) ([aditanase](https://github.com/aditanase))\n- docs: add Daft writer [\\#2594](https://github.com/delta-io/delta-rs/pull/2594) ([avriiil](https://github.com/avriiil))\n- feat\\(python, rust\\): `add column` operation [\\#2562](https://github.com/delta-io/delta-rs/pull/2562) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: change arrow map root name to follow with parquet root name [\\#2538](https://github.com/delta-io/delta-rs/pull/2538) ([sclmn](https://github.com/sclmn))\n- feat\\(python\\): handle PyCapsule interface objects in write\\_deltalake [\\#2534](https://github.com/delta-io/delta-rs/pull/2534) ([kylebarron](https://github.com/kylebarron))\n\n## [rust-v0.19.0](https://github.com/delta-io/delta-rs/tree/rust-v0.19.0) (2024-08-14)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.18.2...rust-v0.19.0)\n\n**Implemented enhancements:**\n\n- Only allow squash merge [\\#2542](https://github.com/delta-io/delta-rs/issues/2542)\n\n**Fixed bugs:**\n\n- Write also insert change types in writer CDC [\\#2750](https://github.com/delta-io/delta-rs/issues/2750)\n- Regression in Python multiprocessing support [\\#2744](https://github.com/delta-io/delta-rs/issues/2744)\n- SchemaError occurs during table optimisation after upgrade to v0.18.1 [\\#2731](https://github.com/delta-io/delta-rs/issues/2731)\n- AWS WebIdentityToken exposure in log files [\\#2719](https://github.com/delta-io/delta-rs/issues/2719)\n- Write performance degrades with multiple writers [\\#2683](https://github.com/delta-io/delta-rs/issues/2683)\n- Write monotonic sequence, but read is non monotonic [\\#2659](https://github.com/delta-io/delta-rs/issues/2659)\n- Python `write_deltalake` with `schema_mode=\"merge\"` casts types [\\#2642](https://github.com/delta-io/delta-rs/issues/2642)\n- Newest docs \\(potentially\\) not released [\\#2587](https://github.com/delta-io/delta-rs/issues/2587)\n- CDC is not generated for Structs and Lists [\\#2568](https://github.com/delta-io/delta-rs/issues/2568)\n\n**Closed issues:**\n\n- delete\\_dir bug [\\#2713](https://github.com/delta-io/delta-rs/issues/2713)\n\n**Merged pull requests:**\n\n- chore: fix a bunch of clippy lints and re-enable tests [\\#2773](https://github.com/delta-io/delta-rs/pull/2773) ([rtyler](https://github.com/rtyler))\n- feat: more economic data skipping with datafusion [\\#2772](https://github.com/delta-io/delta-rs/pull/2772) ([roeap](https://github.com/roeap))\n- chore: prepare the next notable release of 0.19.0 [\\#2768](https://github.com/delta-io/delta-rs/pull/2768) ([rtyler](https://github.com/rtyler))\n- feat: restore the TryFrom for DeltaTablePartition [\\#2767](https://github.com/delta-io/delta-rs/pull/2767) ([rtyler](https://github.com/rtyler))\n- feat: fail fast on forked process [\\#2765](https://github.com/delta-io/delta-rs/pull/2765) ([Tom-Newton](https://github.com/Tom-Newton))\n- perf: early stop if all values in arr are null [\\#2764](https://github.com/delta-io/delta-rs/pull/2764) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): don't flatten fields during cdf read [\\#2763](https://github.com/delta-io/delta-rs/pull/2763) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: upgrade to datafusion 41 [\\#2761](https://github.com/delta-io/delta-rs/pull/2761) ([rtyler](https://github.com/rtyler))\n- fix\\(python, rust\\): cdc in writer not creating inserts [\\#2751](https://github.com/delta-io/delta-rs/pull/2751) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: improved test fixtures [\\#2749](https://github.com/delta-io/delta-rs/pull/2749) ([roeap](https://github.com/roeap))\n- feat: introduce CDC generation for merge operations [\\#2747](https://github.com/delta-io/delta-rs/pull/2747) ([rtyler](https://github.com/rtyler))\n- docs: fix broken link in docs [\\#2746](https://github.com/delta-io/delta-rs/pull/2746) ([astrojuanlu](https://github.com/astrojuanlu))\n- chore: update delta\\_kernel to 0.3.0 [\\#2742](https://github.com/delta-io/delta-rs/pull/2742) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- chore: add to code\\_owner crates [\\#2741](https://github.com/delta-io/delta-rs/pull/2741) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: update changelog and versions for next release [\\#2740](https://github.com/delta-io/delta-rs/pull/2740) ([rtyler](https://github.com/rtyler))\n- feat\\(python, rust\\): arrow large/view types passthrough, rust default engine [\\#2738](https://github.com/delta-io/delta-rs/pull/2738) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: column parsing to include nested columns and enclosing char [\\#2737](https://github.com/delta-io/delta-rs/pull/2737) ([gtrawinski](https://github.com/gtrawinski))\n\n## [rust-v0.18.2](https://github.com/delta-io/delta-rs/tree/rust-v0.18.2) (2024-08-07)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.18.1...rust-v0.18.2)\n\n**Implemented enhancements:**\n\n- Choose which columns to store min/max values for [\\#2709](https://github.com/delta-io/delta-rs/issues/2709)\n- Projection pushdown for load\\_cdf [\\#2681](https://github.com/delta-io/delta-rs/issues/2681)\n- Way to check if Delta table exists at specified path [\\#2662](https://github.com/delta-io/delta-rs/issues/2662)\n- Support HDFS via hdfs-native package [\\#2611](https://github.com/delta-io/delta-rs/issues/2611)\n- Deletion `_change_type` does not appear in change data feed [\\#2579](https://github.com/delta-io/delta-rs/issues/2579)\n- Could you please explain in the README what \"Deltalake\" is for the uninitiated? [\\#2523](https://github.com/delta-io/delta-rs/issues/2523)\n- Discuss: Allow protocol change during write actions  [\\#2444](https://github.com/delta-io/delta-rs/issues/2444)\n- Support for Arrow PyCapsule interface [\\#2376](https://github.com/delta-io/delta-rs/issues/2376)\n\n**Fixed bugs:**\n\n- Slow add\\_actions.to\\_pydict for tables with large number of columns, impacting read performance [\\#2733](https://github.com/delta-io/delta-rs/issues/2733)\n- append is deleting records [\\#2716](https://github.com/delta-io/delta-rs/issues/2716)\n- segmentation fault - Python 3.10 on Mac M3  [\\#2706](https://github.com/delta-io/delta-rs/issues/2706)\n- Failure to delete dir and files [\\#2703](https://github.com/delta-io/delta-rs/issues/2703)\n- DeltaTable.from\\_data\\_catalog not working [\\#2699](https://github.com/delta-io/delta-rs/issues/2699)\n- Project should use the same version of `ruff` in the `lint` stage of `python_build.yml` as in `pyproject.toml` [\\#2678](https://github.com/delta-io/delta-rs/issues/2678)\n- un-tracked columns are giving json error when pyarrow schema have feild with nullable=False and create\\_checkpoint is trigged  [\\#2675](https://github.com/delta-io/delta-rs/issues/2675)\n- \\[BUG\\]write\\_delta\\({'custom\\_metadata':str}\\) cannot be converted. str to pyDict error \\(0.18.2\\_DeltaPython/Windows10\\) [\\#2697](https://github.com/delta-io/delta-rs/issues/2697)\n- Pyarrow engine not supporting schema overwrite with Append mode [\\#2654](https://github.com/delta-io/delta-rs/issues/2654)\n- `deltalake-core` version re-exported by `deltalake` different than versions used by `deltalake-azure` and `deltalake-gcp` [\\#2647](https://github.com/delta-io/delta-rs/issues/2647)\n- i32 limit in JSON stats [\\#2646](https://github.com/delta-io/delta-rs/issues/2646)\n- Rust writer not encoding correct URL for partitions in delta table [\\#2634](https://github.com/delta-io/delta-rs/issues/2634)\n- Large Types breaks merge predicate pruning [\\#2632](https://github.com/delta-io/delta-rs/issues/2632)\n- Getting error when converting a partitioned parquet table to delta table [\\#2626](https://github.com/delta-io/delta-rs/issues/2626)\n- Arrow: Parquet does not support writing empty structs when creating checkpoint [\\#2622](https://github.com/delta-io/delta-rs/issues/2622)\n- InvalidTableLocation\\(\"Unknown scheme: gs\"\\) on 0.18.0 [\\#2610](https://github.com/delta-io/delta-rs/issues/2610)\n- Unable to read delta table created using Uniform [\\#2578](https://github.com/delta-io/delta-rs/issues/2578)\n- schema merging doesn't work when overwriting with a predicate [\\#2567](https://github.com/delta-io/delta-rs/issues/2567)\n- Not working in AWS Lambda \\(0.16.2 - 0.17.4\\) OSError: Generic S3 error [\\#2511](https://github.com/delta-io/delta-rs/issues/2511)\n- DataFusion filter on partition column doesn't work. \\(when the phsical schema ordering is different to logical one\\) [\\#2494](https://github.com/delta-io/delta-rs/issues/2494)\n- Creating checkpoints for tables with missing column stats results in Err [\\#2493](https://github.com/delta-io/delta-rs/issues/2493)\n- Cannot merge to a table with a timestamp column after upgrading delta-rs [\\#2478](https://github.com/delta-io/delta-rs/issues/2478)\n- Azure AD Auth fails on ARM64 [\\#2475](https://github.com/delta-io/delta-rs/issues/2475)\n- Generic S3 error: Error after 0 retries ... Broken pipe \\(os error 32\\) [\\#2403](https://github.com/delta-io/delta-rs/issues/2403)\n- write\\_deltalake identifies large\\_string as datatype even though string is set in schema [\\#2374](https://github.com/delta-io/delta-rs/issues/2374)\n- Inconsistent arrow timestamp type breaks datafusion query [\\#2341](https://github.com/delta-io/delta-rs/issues/2341)\n\n**Closed issues:**\n\n- Unable to write new partitions with type timestamp on tables created with delta-rs 0.10.0 [\\#2631](https://github.com/delta-io/delta-rs/issues/2631)\n\n**Merged pull requests:**\n\n- fix: schema adapter doesn't map partial batches correctly [\\#2735](https://github.com/delta-io/delta-rs/pull/2735) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- perf: grab file size in rust [\\#2734](https://github.com/delta-io/delta-rs/pull/2734) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: use logical plan in update, refactor/simplify CDCTracker [\\#2727](https://github.com/delta-io/delta-rs/pull/2727) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: use logical plan in delete, delta planner refactoring [\\#2725](https://github.com/delta-io/delta-rs/pull/2725) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: try an alternative docke compose invocation syntax [\\#2724](https://github.com/delta-io/delta-rs/pull/2724) ([rtyler](https://github.com/rtyler))\n- fix\\(python, rust\\): use input schema to get correct schema in cdf reads [\\#2723](https://github.com/delta-io/delta-rs/pull/2723) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): cdc write-support for `overwrite` and `replacewhere` writes [\\#2722](https://github.com/delta-io/delta-rs/pull/2722) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): cdc write-support for `delete` operation [\\#2721](https://github.com/delta-io/delta-rs/pull/2721) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: enabling actions for merge groups [\\#2718](https://github.com/delta-io/delta-rs/pull/2718) ([rtyler](https://github.com/rtyler))\n- perf: apply projection when reading checkpoint parquet [\\#2717](https://github.com/delta-io/delta-rs/pull/2717) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- feat\\(python\\): add DeltaTable.is\\_deltatable static method \\(\\#2662\\) [\\#2715](https://github.com/delta-io/delta-rs/pull/2715) ([omkar-foss](https://github.com/omkar-foss))\n- chore: prepare python release 0.18.3 [\\#2707](https://github.com/delta-io/delta-rs/pull/2707) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): use url encoder when encoding partition values [\\#2705](https://github.com/delta-io/delta-rs/pull/2705) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python, rust\\): add projection in CDF reads [\\#2704](https://github.com/delta-io/delta-rs/pull/2704) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: ensure DataFusion SessionState Parquet options are applied to DeltaScan [\\#2702](https://github.com/delta-io/delta-rs/pull/2702) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- chore: refactor `write_deltalake` in `writer.py` [\\#2695](https://github.com/delta-io/delta-rs/pull/2695) ([fpgmaas](https://github.com/fpgmaas))\n- fix\\(python\\): empty dataset fix for \"pyarrow\" engine [\\#2689](https://github.com/delta-io/delta-rs/pull/2689) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: add test coverage command to `Makefile` [\\#2688](https://github.com/delta-io/delta-rs/pull/2688) ([fpgmaas](https://github.com/fpgmaas))\n- chore: create separate action to setup python and rust in the cicd pipeline [\\#2687](https://github.com/delta-io/delta-rs/pull/2687) ([fpgmaas](https://github.com/fpgmaas))\n- fix: update delta kernel version [\\#2685](https://github.com/delta-io/delta-rs/pull/2685) ([jeppe742](https://github.com/jeppe742))\n- chore: update README.md [\\#2684](https://github.com/delta-io/delta-rs/pull/2684) ([veronewra](https://github.com/veronewra))\n- fix\\(rust,python\\): checkpoint with column nullable false [\\#2680](https://github.com/delta-io/delta-rs/pull/2680) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: pin `ruff` and `mypy` versions in the `lint` stage in the CI pipeline [\\#2679](https://github.com/delta-io/delta-rs/pull/2679) ([fpgmaas](https://github.com/fpgmaas))\n- chore: enable `RUF` ruleset for `ruff` [\\#2677](https://github.com/delta-io/delta-rs/pull/2677) ([fpgmaas](https://github.com/fpgmaas))\n- chore: remove stale code for conditional import of `Literal` [\\#2676](https://github.com/delta-io/delta-rs/pull/2676) ([fpgmaas](https://github.com/fpgmaas))\n- chore: remove references to black from the project [\\#2674](https://github.com/delta-io/delta-rs/pull/2674) ([fpgmaas](https://github.com/fpgmaas))\n- chore: bump ruff to 0.5.2 [\\#2673](https://github.com/delta-io/delta-rs/pull/2673) ([fpgmaas](https://github.com/fpgmaas))\n- chore: improve contributing.md [\\#2672](https://github.com/delta-io/delta-rs/pull/2672) ([fpgmaas](https://github.com/fpgmaas))\n- feat: support userMetadata in CommitInfo [\\#2670](https://github.com/delta-io/delta-rs/pull/2670) ([jkylling](https://github.com/jkylling))\n- chore: upgrade to datafusion 40 [\\#2661](https://github.com/delta-io/delta-rs/pull/2661) ([rtyler](https://github.com/rtyler))\n- docs: improve navigation fixes [\\#2660](https://github.com/delta-io/delta-rs/pull/2660) ([avriiil](https://github.com/avriiil))\n- docs: add integration docs for s3 backend [\\#2658](https://github.com/delta-io/delta-rs/pull/2658) ([avriiil](https://github.com/avriiil))\n- docs: fix bullets on hdfs docs [\\#2653](https://github.com/delta-io/delta-rs/pull/2653) ([Kimahriman](https://github.com/Kimahriman))\n- ci: update CODEOWNERS [\\#2650](https://github.com/delta-io/delta-rs/pull/2650) ([hntd187](https://github.com/hntd187))\n- feat\\(rust\\): fix size\\_in\\_bytes in last\\_checkpoint\\_ to i64 [\\#2649](https://github.com/delta-io/delta-rs/pull/2649) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: increase subcrate versions [\\#2648](https://github.com/delta-io/delta-rs/pull/2648) ([rtyler](https://github.com/rtyler))\n- chore: missed one macos runner reference in actions [\\#2645](https://github.com/delta-io/delta-rs/pull/2645) ([rtyler](https://github.com/rtyler))\n- chore: add a reproduction case for merge failures with struct\\<string\\> [\\#2644](https://github.com/delta-io/delta-rs/pull/2644) ([rtyler](https://github.com/rtyler))\n- chore: remove macos builders from pull request flow [\\#2638](https://github.com/delta-io/delta-rs/pull/2638) ([rtyler](https://github.com/rtyler))\n- fix: enable parquet pushdown for DeltaScan via TableProvider impl for DeltaTable  \\(rebase\\) [\\#2637](https://github.com/delta-io/delta-rs/pull/2637) ([rtyler](https://github.com/rtyler))\n- chore: fix documentation generation with a pin of griffe [\\#2636](https://github.com/delta-io/delta-rs/pull/2636) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): fixed large\\_dtype to schema convert [\\#2635](https://github.com/delta-io/delta-rs/pull/2635) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix\\(rust, python\\): fix writing empty structs when creating checkpoint [\\#2627](https://github.com/delta-io/delta-rs/pull/2627) ([sherlockbeard](https://github.com/sherlockbeard))\n- fix\\(rust, python\\): fix merge schema with overwrite [\\#2623](https://github.com/delta-io/delta-rs/pull/2623) ([sherlockbeard](https://github.com/sherlockbeard))\n- chore: bump python 0.18.2 [\\#2621](https://github.com/delta-io/delta-rs/pull/2621) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: report DataFusion metrics for DeltaScan [\\#2617](https://github.com/delta-io/delta-rs/pull/2617) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- feat\\(rust,python\\): cast each parquet file to delta schema [\\#2615](https://github.com/delta-io/delta-rs/pull/2615) ([HawaiianSpork](https://github.com/HawaiianSpork))\n- fix\\(rust\\): inconsistent order of partitioning columns \\(\\#2494\\) [\\#2614](https://github.com/delta-io/delta-rs/pull/2614) ([aditanase](https://github.com/aditanase))\n- docs: add Daft writer [\\#2594](https://github.com/delta-io/delta-rs/pull/2594) ([avriiil](https://github.com/avriiil))\n- feat\\(python, rust\\): `add column` operation [\\#2562](https://github.com/delta-io/delta-rs/pull/2562) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: change arrow map root name to follow with parquet root name [\\#2538](https://github.com/delta-io/delta-rs/pull/2538) ([sclmn](https://github.com/sclmn))\n- feat\\(python\\): handle PyCapsule interface objects in write\\_deltalake [\\#2534](https://github.com/delta-io/delta-rs/pull/2534) ([kylebarron](https://github.com/kylebarron))\n- feat: improve merge performance by using predicate non-partition columns min/max for prefiltering [\\#2513](https://github.com/delta-io/delta-rs/pull/2513) ([JonasDev1](https://github.com/JonasDev1))\n- feat\\(python, rust\\): cleanup expired logs post-commit hook [\\#2459](https://github.com/delta-io/delta-rs/pull/2459) ([ion-elgreco](https://github.com/ion-elgreco))\n\n## [rust-v0.18.0](https://github.com/delta-io/delta-rs/tree/rust-v0.18.0) (2024-06-12)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.17.3...rust-v0.18.0)\n\n**Implemented enhancements:**\n\n- documentation: concurrent writes for non-S3 backends [\\#2556](https://github.com/delta-io/delta-rs/issues/2556)\n- pyarrow options for `write_delta` [\\#2515](https://github.com/delta-io/delta-rs/issues/2515)\n- \\[deltalake\\_aws\\] Allow configuring separate endpoints for S3 and DynamoDB clients. [\\#2498](https://github.com/delta-io/delta-rs/issues/2498)\n- Include file stats when converting a parquet directory to a Delta table [\\#2490](https://github.com/delta-io/delta-rs/issues/2490)\n- Adopt the delta kernel types [\\#2489](https://github.com/delta-io/delta-rs/issues/2489)\n\n**Fixed bugs:**\n\n- `raise_if_not_exists` for properties not configurable on CreateBuilder [\\#2564](https://github.com/delta-io/delta-rs/issues/2564)\n- write\\_deltalake with rust engine fails when mode is append and overwrite schema is enabled [\\#2553](https://github.com/delta-io/delta-rs/issues/2553)\n- Running the basic\\_operations examples fails with `Error: Transaction { source: WriterFeaturesRequired(TimestampWithoutTimezone) `} [\\#2552](https://github.com/delta-io/delta-rs/issues/2552)\n-  invalid peer certificate: BadSignature when connecting to s3 from  arm64/aarch64 [\\#2551](https://github.com/delta-io/delta-rs/issues/2551)\n- load\\_cdf\\(\\) issue : Generic S3 error: request or response body error: operation timed out [\\#2549](https://github.com/delta-io/delta-rs/issues/2549)\n- write\\_deltalake fails on Databricks volume [\\#2540](https://github.com/delta-io/delta-rs/issues/2540)\n- Getting \"Microsoft Azure Error: Operation timed out\" when trying to retrieve big files [\\#2537](https://github.com/delta-io/delta-rs/issues/2537)\n- Impossible to append to a DeltaTable with float data type on RHEL [\\#2520](https://github.com/delta-io/delta-rs/issues/2520)\n- Creating DeltaTable object slow [\\#2518](https://github.com/delta-io/delta-rs/issues/2518)\n- `write_deltalake` throws parser error when using `rust` engine and big decimals [\\#2510](https://github.com/delta-io/delta-rs/issues/2510)\n- TypeError: Object of type int64 is not JSON serializable when writing using a Pandas dataframe [\\#2501](https://github.com/delta-io/delta-rs/issues/2501)\n- unable to read delta table when table contains both null and non-null add stats [\\#2477](https://github.com/delta-io/delta-rs/issues/2477)\n- Commits on WriteMode::MergeSchema cause table metadata corruption [\\#2468](https://github.com/delta-io/delta-rs/issues/2468)\n- S3 object store always returns IMDS warnings [\\#2460](https://github.com/delta-io/delta-rs/issues/2460)\n- File skipping according to documentation [\\#2427](https://github.com/delta-io/delta-rs/issues/2427)\n- LockClientError [\\#2379](https://github.com/delta-io/delta-rs/issues/2379)\n- get\\_app\\_transaction\\_version\\(\\) returns wrong result [\\#2340](https://github.com/delta-io/delta-rs/issues/2340)\n- Property setting in `create` is not handled correctly [\\#2247](https://github.com/delta-io/delta-rs/issues/2247)\n- Handling of decimals in scientific notation  [\\#2221](https://github.com/delta-io/delta-rs/issues/2221)\n- Unable to append to delta table without datafusion feature [\\#2204](https://github.com/delta-io/delta-rs/issues/2204)\n- Decimal Column with Value 0 Causes Failure in Python Binding [\\#2193](https://github.com/delta-io/delta-rs/issues/2193)\n\n**Merged pull requests:**\n\n- docs: improve S3 access docs [\\#2589](https://github.com/delta-io/delta-rs/pull/2589) ([avriiil](https://github.com/avriiil))\n- chore: bump macOS runners, maybe resolve import error [\\#2588](https://github.com/delta-io/delta-rs/pull/2588) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: bump to datafusion 39, arrow 52, pyo3 0.21 [\\#2581](https://github.com/delta-io/delta-rs/pull/2581) ([abhiaagarwal](https://github.com/abhiaagarwal))\n- feat: add custom dynamodb endpoint configuration [\\#2575](https://github.com/delta-io/delta-rs/pull/2575) ([hnaoto](https://github.com/hnaoto))\n- fix: consistently use raise\\_if\\_key\\_not\\_exists in CreateBuilder [\\#2569](https://github.com/delta-io/delta-rs/pull/2569) ([vegarsti](https://github.com/vegarsti))\n- fix: add raise\\_if\\_key\\_not\\_exists to CreateBuilder [\\#2565](https://github.com/delta-io/delta-rs/pull/2565) ([vegarsti](https://github.com/vegarsti))\n- docs: dt.delete add context + api docs link [\\#2560](https://github.com/delta-io/delta-rs/pull/2560) ([avriiil](https://github.com/avriiil))\n- fix: update deltalake crate examples for crate layout and TimestampNtz [\\#2559](https://github.com/delta-io/delta-rs/pull/2559) ([jhoekx](https://github.com/jhoekx))\n- docs: clarify locking mechanism requirement for S3 [\\#2558](https://github.com/delta-io/delta-rs/pull/2558) ([inigohidalgo](https://github.com/inigohidalgo))\n- fix: remove deprecated overwrite\\_schema configuration which has incorrect behavior [\\#2554](https://github.com/delta-io/delta-rs/pull/2554) ([rtyler](https://github.com/rtyler))\n- fix: clippy warnings [\\#2548](https://github.com/delta-io/delta-rs/pull/2548) ([imor](https://github.com/imor))\n- docs: dask write syntax fix [\\#2543](https://github.com/delta-io/delta-rs/pull/2543) ([avriiil](https://github.com/avriiil))\n- fix: cast support fields nested in lists and maps [\\#2541](https://github.com/delta-io/delta-rs/pull/2541) ([HawaiianSpork](https://github.com/HawaiianSpork))\n- feat: implement transaction identifiers - continued [\\#2539](https://github.com/delta-io/delta-rs/pull/2539) ([roeap](https://github.com/roeap))\n- docs: pull delta from conda not pip [\\#2535](https://github.com/delta-io/delta-rs/pull/2535) ([avriiil](https://github.com/avriiil))\n- chore: expose `files_by_partition` to public api [\\#2533](https://github.com/delta-io/delta-rs/pull/2533) ([edmondop](https://github.com/edmondop))\n- chore: bump python 0.17.5 [\\#2531](https://github.com/delta-io/delta-rs/pull/2531) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(rust\\): make PartitionWriter public [\\#2525](https://github.com/delta-io/delta-rs/pull/2525) ([adriangb](https://github.com/adriangb))\n- fix: msrv in workspace [\\#2524](https://github.com/delta-io/delta-rs/pull/2524) ([roeap](https://github.com/roeap))\n- chore: fixing some clips [\\#2521](https://github.com/delta-io/delta-rs/pull/2521) ([rtyler](https://github.com/rtyler))\n- fix: enable field\\_with\\_name to support nested fields with '.' delimiter [\\#2519](https://github.com/delta-io/delta-rs/pull/2519) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- chore: tidying up builds without datafusion feature and clippy [\\#2516](https://github.com/delta-io/delta-rs/pull/2516) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): release GIL on most operations [\\#2512](https://github.com/delta-io/delta-rs/pull/2512) ([adriangb](https://github.com/adriangb))\n- docs: fix typo [\\#2508](https://github.com/delta-io/delta-rs/pull/2508) ([avriiil](https://github.com/avriiil))\n- fix\\(rust, python\\): fixed differences in storage options between log and object stores [\\#2500](https://github.com/delta-io/delta-rs/pull/2500) ([mightyshazam](https://github.com/mightyshazam))\n- docs: improve daft integration docs [\\#2496](https://github.com/delta-io/delta-rs/pull/2496) ([avriiil](https://github.com/avriiil))\n- feat: adopt kernel schema types [\\#2495](https://github.com/delta-io/delta-rs/pull/2495) ([roeap](https://github.com/roeap))\n- feat: add stats to convert-to-delta operation [\\#2491](https://github.com/delta-io/delta-rs/pull/2491) ([gruuya](https://github.com/gruuya))\n- fix\\(python, rust\\): region lookup wasn't working correctly for dynamo [\\#2488](https://github.com/delta-io/delta-rs/pull/2488) ([mightyshazam](https://github.com/mightyshazam))\n- feat: introduce CDC write-side support for the Update operations [\\#2486](https://github.com/delta-io/delta-rs/pull/2486) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): reuse state in `to_pyarrow_dataset` [\\#2485](https://github.com/delta-io/delta-rs/pull/2485) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: check to see if the file exists before attempting to rename [\\#2482](https://github.com/delta-io/delta-rs/pull/2482) ([rtyler](https://github.com/rtyler))\n- fix\\(python, rust\\): use new schema for stats parsing instead of old [\\#2480](https://github.com/delta-io/delta-rs/pull/2480) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): unable to read delta table when table contains both null and non-null add stats [\\#2476](https://github.com/delta-io/delta-rs/pull/2476) ([yjshen](https://github.com/yjshen))\n- chore: update the changelog to include rust-v0.17.3 [\\#2473](https://github.com/delta-io/delta-rs/pull/2473) ([rtyler](https://github.com/rtyler))\n- chore: a bunch of tweaks to get releases out the door [\\#2472](https://github.com/delta-io/delta-rs/pull/2472) ([rtyler](https://github.com/rtyler))\n- chore: bump the core crate for its next release [\\#2470](https://github.com/delta-io/delta-rs/pull/2470) ([rtyler](https://github.com/rtyler))\n- fix: return unsupported error for merging schemas in the presence of partition columns [\\#2469](https://github.com/delta-io/delta-rs/pull/2469) ([emcake](https://github.com/emcake))\n- feat\\(python\\): add  parameter to DeltaTable.to\\_pyarrow\\_dataset\\(\\) [\\#2465](https://github.com/delta-io/delta-rs/pull/2465) ([adriangb](https://github.com/adriangb))\n- feat\\(python, rust\\): add OBJECT\\_STORE\\_CONCURRENCY\\_LIMIT setting for ObjectStoreFactory [\\#2458](https://github.com/delta-io/delta-rs/pull/2458) ([vigimite](https://github.com/vigimite))\n- fix\\(rust\\): handle 429 from GCS [\\#2454](https://github.com/delta-io/delta-rs/pull/2454) ([adriangb](https://github.com/adriangb))\n- fix\\(python\\): reuse table state in write engine [\\#2453](https://github.com/delta-io/delta-rs/pull/2453) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): implement abort commit for S3DynamoDBLogStore [\\#2452](https://github.com/delta-io/delta-rs/pull/2452) ([PeterKeDer](https://github.com/PeterKeDer))\n- fix\\(python, rust\\): check timestamp\\_ntz in nested fields, add check\\_can\\_write in pyarrow writer [\\#2443](https://github.com/delta-io/delta-rs/pull/2443) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): remove imds calls from profile auth and region [\\#2442](https://github.com/delta-io/delta-rs/pull/2442) ([mightyshazam](https://github.com/mightyshazam))\n- fix\\(python, rust\\): use from\\_name during column projection creation [\\#2441](https://github.com/delta-io/delta-rs/pull/2441) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: bump python for 0.17 release [\\#2439](https://github.com/delta-io/delta-rs/pull/2439) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python,rust\\): missing remove actions during `create_or_replace` [\\#2437](https://github.com/delta-io/delta-rs/pull/2437) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: introduce the Operation trait to enforce consistency between operations [\\#2435](https://github.com/delta-io/delta-rs/pull/2435) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): load\\_as\\_version with datetime object with no timezone specified [\\#2429](https://github.com/delta-io/delta-rs/pull/2429) ([t1g0rz](https://github.com/t1g0rz))\n- feat\\(python, rust\\): respect column stats collection configurations [\\#2428](https://github.com/delta-io/delta-rs/pull/2428) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: lazy static runtime in python [\\#2424](https://github.com/delta-io/delta-rs/pull/2424) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: implement repartitioned for DeltaScan [\\#2421](https://github.com/delta-io/delta-rs/pull/2421) ([jkylling](https://github.com/jkylling))\n- fix: return error when checkpoints and metadata get out of sync [\\#2406](https://github.com/delta-io/delta-rs/pull/2406) ([esarili](https://github.com/esarili))\n- fix\\(rust\\): stats\\_parsed has different number of records with stats [\\#2405](https://github.com/delta-io/delta-rs/pull/2405) ([yjshen](https://github.com/yjshen))\n- docs: add Daft integration [\\#2402](https://github.com/delta-io/delta-rs/pull/2402) ([avriiil](https://github.com/avriiil))\n- feat\\(rust\\): advance state in post commit [\\#2396](https://github.com/delta-io/delta-rs/pull/2396) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore\\(rust\\): bump arrow v51 and datafusion v37.1 [\\#2395](https://github.com/delta-io/delta-rs/pull/2395) ([lasantosr](https://github.com/lasantosr))\n- docs: document required aws permissions [\\#2393](https://github.com/delta-io/delta-rs/pull/2393) ([ale-rinaldi](https://github.com/ale-rinaldi))\n- feat\\(rust\\): post commit hook \\(v2\\), create checkpoint hook [\\#2391](https://github.com/delta-io/delta-rs/pull/2391) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: time travel when checkpointed and logs removed [\\#2389](https://github.com/delta-io/delta-rs/pull/2389) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): remove flush after writing every batch [\\#2387](https://github.com/delta-io/delta-rs/pull/2387) ([PeterKeDer](https://github.com/PeterKeDer))\n- feat: added configuration variables to handle EC2 metadata service [\\#2385](https://github.com/delta-io/delta-rs/pull/2385) ([mightyshazam](https://github.com/mightyshazam))\n- fix\\(rust\\): timestamp deserialization format, missing type [\\#2383](https://github.com/delta-io/delta-rs/pull/2383) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: bump chrono [\\#2372](https://github.com/delta-io/delta-rs/pull/2372) ([universalmind303](https://github.com/universalmind303))\n- chore: bump python 0.16.4 [\\#2371](https://github.com/delta-io/delta-rs/pull/2371) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: add snappy compression on checkpoint files [\\#2365](https://github.com/delta-io/delta-rs/pull/2365) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: add config for parquet pushdown on delta scan [\\#2364](https://github.com/delta-io/delta-rs/pull/2364) ([Blajda](https://github.com/Blajda))\n- fix\\(python,rust\\): optimize compact on schema evolved table [\\#2358](https://github.com/delta-io/delta-rs/pull/2358) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python, rust\\): expr parsing date/timestamp [\\#2357](https://github.com/delta-io/delta-rs/pull/2357) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: remove tmp files in cleanup\\_metadata [\\#2356](https://github.com/delta-io/delta-rs/pull/2356) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: make struct fields nullable in stats schema [\\#2346](https://github.com/delta-io/delta-rs/pull/2346) ([qinix](https://github.com/qinix))\n- fix\\(rust\\): adhere to protocol for Decimal [\\#2332](https://github.com/delta-io/delta-rs/pull/2332) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): raise schema mismatch when decimal is not subset [\\#2330](https://github.com/delta-io/delta-rs/pull/2330) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(rust\\): derive Copy on some public enums [\\#2329](https://github.com/delta-io/delta-rs/pull/2329) ([lasantosr](https://github.com/lasantosr))\n- fix: merge pushdown handling [\\#2326](https://github.com/delta-io/delta-rs/pull/2326) ([Blajda](https://github.com/Blajda))\n- fix: merge concurrency control [\\#2324](https://github.com/delta-io/delta-rs/pull/2324) ([ion-elgreco](https://github.com/ion-elgreco))\n- Revert 2291 merge predicate fix [\\#2323](https://github.com/delta-io/delta-rs/pull/2323) ([Blajda](https://github.com/Blajda))\n- fix: try to fix timeouts [\\#2318](https://github.com/delta-io/delta-rs/pull/2318) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): serialize MetricDetails from compaction runs to a string [\\#2317](https://github.com/delta-io/delta-rs/pull/2317) ([liamphmurphy](https://github.com/liamphmurphy))\n- docs: add example in to\\_pyarrow\\_dataset [\\#2315](https://github.com/delta-io/delta-rs/pull/2315) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python\\): wrong batch size [\\#2314](https://github.com/delta-io/delta-rs/pull/2314) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: object store 0.9.1 [\\#2311](https://github.com/delta-io/delta-rs/pull/2311) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: checkpoint features format below v3,7 [\\#2307](https://github.com/delta-io/delta-rs/pull/2307) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: schema evolution not coercing with large arrow types [\\#2305](https://github.com/delta-io/delta-rs/pull/2305) ([aersam](https://github.com/aersam))\n- fix: clean up some non-datafusion builds [\\#2303](https://github.com/delta-io/delta-rs/pull/2303) ([rtyler](https://github.com/rtyler))\n- docs: fix typo [\\#2300](https://github.com/delta-io/delta-rs/pull/2300) ([LauH1987](https://github.com/LauH1987))\n- docs: make replaceWhere example compile [\\#2299](https://github.com/delta-io/delta-rs/pull/2299) ([LauH1987](https://github.com/LauH1987))\n- fix\\(rust\\): add missing chrono-tz feature [\\#2295](https://github.com/delta-io/delta-rs/pull/2295) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore\\(python\\): bump to v0.16.1 [\\#2294](https://github.com/delta-io/delta-rs/pull/2294) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): features not maintained in protocol after checkpoint [\\#2293](https://github.com/delta-io/delta-rs/pull/2293) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: merge predicate for concurrent writes [\\#2291](https://github.com/delta-io/delta-rs/pull/2291) ([JonasDev1](https://github.com/JonasDev1))\n- fix: replace assert and AssertionError with appropriate exceptions [\\#2286](https://github.com/delta-io/delta-rs/pull/2286) ([joe-sharman](https://github.com/joe-sharman))\n- docs: fix typo in delta-lake-polars.md [\\#2285](https://github.com/delta-io/delta-rs/pull/2285) ([vladdoster](https://github.com/vladdoster))\n- fix\\(python, rust\\): prevent table scan returning large arrow dtypes [\\#2274](https://github.com/delta-io/delta-rs/pull/2274) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(python\\): always encapsulate column names in backticks in \\_all functions [\\#2271](https://github.com/delta-io/delta-rs/pull/2271) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): read only checkpoints that match \\_last\\_checkpoint version [\\#2270](https://github.com/delta-io/delta-rs/pull/2270) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: add .venv to .gitignore [\\#2268](https://github.com/delta-io/delta-rs/pull/2268) ([gacharya](https://github.com/gacharya))\n- feat\\(python, rust\\): add `set table properties` operation [\\#2264](https://github.com/delta-io/delta-rs/pull/2264) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: use dagster deltalake polars library [\\#2263](https://github.com/delta-io/delta-rs/pull/2263) ([avriiil](https://github.com/avriiil))\n- docs: update comment about r2 requiring locks [\\#2261](https://github.com/delta-io/delta-rs/pull/2261) ([cmackenzie1](https://github.com/cmackenzie1))\n- fix\\(\\#2256\\): use consistent units of time [\\#2260](https://github.com/delta-io/delta-rs/pull/2260) ([cmackenzie1](https://github.com/cmackenzie1))\n- chore: update the changelog for rust-v0.17.1 [\\#2259](https://github.com/delta-io/delta-rs/pull/2259) ([rtyler](https://github.com/rtyler))\n- feat\\(python\\): release GIL in the write\\_deltalake function [\\#2257](https://github.com/delta-io/delta-rs/pull/2257) ([franz101](https://github.com/franz101))\n- chore\\(rust\\): bump datafusion to 36 [\\#2249](https://github.com/delta-io/delta-rs/pull/2249) ([universalmind303](https://github.com/universalmind303))\n- chore!: replace rusoto with AWS SDK [\\#2243](https://github.com/delta-io/delta-rs/pull/2243) ([mightyshazam](https://github.com/mightyshazam))\n- fix: handle conflict checking in optimize correctly [\\#2208](https://github.com/delta-io/delta-rs/pull/2208) ([emcake](https://github.com/emcake))\n- feat: logical Node for find files [\\#2194](https://github.com/delta-io/delta-rs/pull/2194) ([hntd187](https://github.com/hntd187))\n\n## [rust-v0.17.3](https://github.com/delta-io/delta-rs/tree/rust-v0.17.3) (2024-05-01)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.17.1...rust-v0.17.3)\n\n**Implemented enhancements:**\n\n- Limit concurrent ObjectStore access to avoid resource limitations in constrained environments [\\#2457](https://github.com/delta-io/delta-rs/issues/2457)\n- How to get a DataFrame in Rust? [\\#2404](https://github.com/delta-io/delta-rs/issues/2404)\n- Allow checkpoint creation when partion column is \"timestampNtz \" [\\#2381](https://github.com/delta-io/delta-rs/issues/2381)\n- is there a way to make writing timestamp\\_ntz optional [\\#2339](https://github.com/delta-io/delta-rs/issues/2339)\n- Update arrow dependency [\\#2328](https://github.com/delta-io/delta-rs/issues/2328)\n- Release GIL in deltalake.write\\_deltalake [\\#2234](https://github.com/delta-io/delta-rs/issues/2234)\n- Unable to retrieve custom metadata from tables in rust [\\#2153](https://github.com/delta-io/delta-rs/issues/2153)\n- Refactor commit interface to be a Builder [\\#2131](https://github.com/delta-io/delta-rs/issues/2131)\n\n**Fixed bugs:**\n\n- Handle rate limiting during write contention [\\#2451](https://github.com/delta-io/delta-rs/issues/2451)\n- regression : delta.logRetentionDuration don't seems to be respected  [\\#2447](https://github.com/delta-io/delta-rs/issues/2447)\n- Issue writing to mounted storage in AKS using delta-rs library [\\#2445](https://github.com/delta-io/delta-rs/issues/2445)\n- TableMerger - when\\_matched\\_delete\\(\\) fails when Column names contain special characters [\\#2438](https://github.com/delta-io/delta-rs/issues/2438)\n-  Generic DeltaTable error: External error: Arrow error: Invalid argument error: arguments need to have the same data type - while merge data in to delta table [\\#2423](https://github.com/delta-io/delta-rs/issues/2423)\n- Merge on predicate throw error on date colum: Unable to convert expression to string [\\#2420](https://github.com/delta-io/delta-rs/issues/2420)\n- Writing Tables with Append mode errors if the schema metadata is different [\\#2419](https://github.com/delta-io/delta-rs/issues/2419)\n- Logstore issues on AWS Lambda [\\#2410](https://github.com/delta-io/delta-rs/issues/2410)\n- Datafusion timestamp type doesn't respect delta lake schema [\\#2408](https://github.com/delta-io/delta-rs/issues/2408)\n- Compacting produces smaller row groups than expected [\\#2386](https://github.com/delta-io/delta-rs/issues/2386)\n- ValueError: Partition value cannot be parsed from string. [\\#2380](https://github.com/delta-io/delta-rs/issues/2380)\n- Very slow s3 connection after 0.16.1 [\\#2377](https://github.com/delta-io/delta-rs/issues/2377)\n- Merge update+insert truncates a delta table if the table is big enough [\\#2362](https://github.com/delta-io/delta-rs/issues/2362)\n- Do not add readerFeatures or writerFeatures keys under checkpoint files if minReaderVersion or minWriterVersion do not satisfy the requirements [\\#2360](https://github.com/delta-io/delta-rs/issues/2360)\n- Create empty table failed on rust engine [\\#2354](https://github.com/delta-io/delta-rs/issues/2354)\n- Getting error message when running in lambda: message: \"Too many open files\" [\\#2353](https://github.com/delta-io/delta-rs/issues/2353)\n- Temporary files filling up \\_delta\\_log folder - increasing table load time [\\#2351](https://github.com/delta-io/delta-rs/issues/2351)\n- compact fails with merged schemas [\\#2347](https://github.com/delta-io/delta-rs/issues/2347)\n- Cannot merge into table partitioned by date type column on 0.16.3 [\\#2344](https://github.com/delta-io/delta-rs/issues/2344)\n- Merge breaks using logical datatype decimal128 [\\#2343](https://github.com/delta-io/delta-rs/issues/2343)\n- Decimal types are not checked against max precision/scale at table creation [\\#2331](https://github.com/delta-io/delta-rs/issues/2331)\n- Merge update+insert truncates a delta table [\\#2320](https://github.com/delta-io/delta-rs/issues/2320)\n- Extract `add.stats_parsed` with wrong type [\\#2312](https://github.com/delta-io/delta-rs/issues/2312)\n- Process fails without error message when executing merge [\\#2310](https://github.com/delta-io/delta-rs/issues/2310)\n- delta\\_rs don't seems to respect the row group size [\\#2309](https://github.com/delta-io/delta-rs/issues/2309)\n- Auth error when running inside VS Code  [\\#2306](https://github.com/delta-io/delta-rs/issues/2306)\n- Unable to read deltatables with binary columns: Binary is not supported by JSON [\\#2302](https://github.com/delta-io/delta-rs/issues/2302)\n- Schema evolution not coercing with Large arrow types [\\#2298](https://github.com/delta-io/delta-rs/issues/2298)\n- Panic in `deltalake_core::kernel::snapshot::log_segment::list_log_files_with_checkpoint::{{closure}}` [\\#2290](https://github.com/delta-io/delta-rs/issues/2290)\n- Checkpoint does not preserve reader and writer features for the table protocol. [\\#2288](https://github.com/delta-io/delta-rs/issues/2288)\n- Z-Order with larger dataset resulting in memory error [\\#2284](https://github.com/delta-io/delta-rs/issues/2284)\n- Successful writes return error when using concurrent writers [\\#2279](https://github.com/delta-io/delta-rs/issues/2279)\n- Rust writer should raise when decimal types are incompatible \\(currently writers and puts table in invalid state\\) [\\#2275](https://github.com/delta-io/delta-rs/issues/2275)\n- Generic DeltaTable error: Version mismatch with new schema merge functionality in AWS S3 [\\#2262](https://github.com/delta-io/delta-rs/issues/2262)\n- DeltaTable is not resilient to corrupted checkpoint state [\\#2258](https://github.com/delta-io/delta-rs/issues/2258)\n- Inconsistent units of time [\\#2256](https://github.com/delta-io/delta-rs/issues/2256)\n- Partition column comparison is an assertion rather than if block with raise exception [\\#2242](https://github.com/delta-io/delta-rs/issues/2242)\n- Unable to merge column names starting from numbers [\\#2230](https://github.com/delta-io/delta-rs/issues/2230)\n- Merging to a table with multiple distinct partitions in parallel fails [\\#2227](https://github.com/delta-io/delta-rs/issues/2227)\n- cleanup\\_metadata not respecting custom `logRetentionDuration` [\\#2180](https://github.com/delta-io/delta-rs/issues/2180)\n- Merge predicate fails with a field with a space [\\#2167](https://github.com/delta-io/delta-rs/issues/2167)\n- When\\_matched\\_update causes records to be lost with  explicit predicate [\\#2158](https://github.com/delta-io/delta-rs/issues/2158)\n- Merge execution time grows exponetially with the number of column [\\#2107](https://github.com/delta-io/delta-rs/issues/2107)\n- \\_internal.DeltaError when merging [\\#2084](https://github.com/delta-io/delta-rs/issues/2084)\n\n## [rust-v0.17.1](https://github.com/delta-io/delta-rs/tree/rust-v0.17.1) (2024-03-06)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.17.0...rust-v0.17.1)\n\n**Implemented enhancements:**\n\n- Get statistics metadata [\\#2233](https://github.com/delta-io/delta-rs/issues/2233)\n- add option to append only a subsets of columns [\\#2212](https://github.com/delta-io/delta-rs/issues/2212)\n- add documentation how to configure delta.logRetentionDuration [\\#2072](https://github.com/delta-io/delta-rs/issues/2072)\n- Add `drop constraint` [\\#2070](https://github.com/delta-io/delta-rs/issues/2070)\n- Add 0.16 deprecation warnings for DynamoDB lock [\\#2049](https://github.com/delta-io/delta-rs/issues/2049)\n\n**Fixed bugs:**\n\n- cleanup\\_metadata not respecting custom `logRetentionDuration` [\\#2180](https://github.com/delta-io/delta-rs/issues/2180)\n- Rust writer panics on empty record batches [\\#2253](https://github.com/delta-io/delta-rs/issues/2253)\n- DeltaLake executed Rust: write method not found in `DeltaOps`  [\\#2244](https://github.com/delta-io/delta-rs/issues/2244)\n- DELTA\\_FILE\\_PATTERN regex is incorrectly matching tmp commit files [\\#2201](https://github.com/delta-io/delta-rs/issues/2201)\n- Failed to create checkpoint with \"Parquet does not support writing empty structs\" [\\#2189](https://github.com/delta-io/delta-rs/issues/2189)\n- Error when parsing delete expressions [\\#2187](https://github.com/delta-io/delta-rs/issues/2187)\n- terminate called without an active exception [\\#2184](https://github.com/delta-io/delta-rs/issues/2184)\n- Now conda-installable on M1 [\\#2178](https://github.com/delta-io/delta-rs/issues/2178)\n- Add error message for parition\\_by check [\\#2177](https://github.com/delta-io/delta-rs/issues/2177)\n- deltalake 0.15.2 prints partitions\\_values and paths which is not desired [\\#2176](https://github.com/delta-io/delta-rs/issues/2176)\n- cleanup\\_metadata can potentially delete most recent checkpoint, corrupting table [\\#2174](https://github.com/delta-io/delta-rs/issues/2174)\n- Broken filter for newly created delta table [\\#2169](https://github.com/delta-io/delta-rs/issues/2169)\n- Hash for StructField should consider more than the name [\\#2045](https://github.com/delta-io/delta-rs/issues/2045)\n- Schema comparaison in writer [\\#1853](https://github.com/delta-io/delta-rs/issues/1853)\n- fix\\(python\\): sort before schema comparison [\\#2209](https://github.com/delta-io/delta-rs/pull/2209) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: prevent writing checkpoints with a version that does not exist in table state [\\#1863](https://github.com/delta-io/delta-rs/pull/1863) ([rtyler](https://github.com/rtyler))\n\n**Closed issues:**\n\n- Bug/Question:  arrow's`FixedSizeList` is not roundtrippable [\\#2162](https://github.com/delta-io/delta-rs/issues/2162)\n\n**Merged pull requests:**\n\n- fix: fixes panic on empty write [\\#2254](https://github.com/delta-io/delta-rs/pull/2254) ([aersam](https://github.com/aersam))\n- fix\\(rust\\): typo deletionvectors [\\#2251](https://github.com/delta-io/delta-rs/pull/2251) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix\\(rust\\): make interval parsing compatible with plural form [\\#2250](https://github.com/delta-io/delta-rs/pull/2250) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: bump to 0.16 [\\#2248](https://github.com/delta-io/delta-rs/pull/2248) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: merge schema support for the write operation and Python [\\#2246](https://github.com/delta-io/delta-rs/pull/2246) ([rtyler](https://github.com/rtyler))\n- fix: object\\_store 0.9.0 since 0.9.1 causes CI failure [\\#2245](https://github.com/delta-io/delta-rs/pull/2245) ([aersam](https://github.com/aersam))\n- chore\\(python\\): bump version [\\#2241](https://github.com/delta-io/delta-rs/pull/2241) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: fix ruff and mypy version and do formatting [\\#2240](https://github.com/delta-io/delta-rs/pull/2240) ([aersam](https://github.com/aersam))\n- feat\\(python, rust\\): timestampNtz support [\\#2236](https://github.com/delta-io/delta-rs/pull/2236) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: clean up some compilation failures and un-ignore some tests [\\#2231](https://github.com/delta-io/delta-rs/pull/2231) ([rtyler](https://github.com/rtyler))\n- docs: fixing example in CONTRIBUTING.md [\\#2224](https://github.com/delta-io/delta-rs/pull/2224) ([gacharya](https://github.com/gacharya))\n- perf: directly create projection instead of using DataFrame::with\\_column [\\#2222](https://github.com/delta-io/delta-rs/pull/2222) ([emcake](https://github.com/emcake))\n- chore: remove caches from github actions [\\#2215](https://github.com/delta-io/delta-rs/pull/2215) ([rtyler](https://github.com/rtyler))\n- fix: `is_commit_file` should only catch commit jsons [\\#2213](https://github.com/delta-io/delta-rs/pull/2213) ([emcake](https://github.com/emcake))\n- chore: fix the Cargo.tomls to publish information properly on docs.rs [\\#2211](https://github.com/delta-io/delta-rs/pull/2211) ([rtyler](https://github.com/rtyler))\n- fix\\(writer\\): retry storage.put on temporary network errors [\\#2207](https://github.com/delta-io/delta-rs/pull/2207) ([qinix](https://github.com/qinix))\n- fix: canonicalize config keys [\\#2206](https://github.com/delta-io/delta-rs/pull/2206) ([emcake](https://github.com/emcake))\n- docs: update README code samples for newer versions [\\#2202](https://github.com/delta-io/delta-rs/pull/2202) ([jhoekx](https://github.com/jhoekx))\n- docs: dask integration fix formatting typo [\\#2196](https://github.com/delta-io/delta-rs/pull/2196) ([avriiil](https://github.com/avriiil))\n- fix: add data\\_type and nullable to StructField hash \\(\\#2045\\) [\\#2190](https://github.com/delta-io/delta-rs/pull/2190) ([sonhmai](https://github.com/sonhmai))\n- fix: removed panic in  method [\\#2185](https://github.com/delta-io/delta-rs/pull/2185) ([mightyshazam](https://github.com/mightyshazam))\n- feat: implement string representation for PartitionFilter [\\#2183](https://github.com/delta-io/delta-rs/pull/2183) ([sonhmai](https://github.com/sonhmai))\n- fix: correct map field names [\\#2182](https://github.com/delta-io/delta-rs/pull/2182) ([emcake](https://github.com/emcake))\n- feat: add comment to explain why assert has failed and show state [\\#2179](https://github.com/delta-io/delta-rs/pull/2179) ([braaannigan](https://github.com/braaannigan))\n- docs: include the 0.17.0 changelog [\\#2173](https://github.com/delta-io/delta-rs/pull/2173) ([rtyler](https://github.com/rtyler))\n- fix\\(python\\): skip empty row groups during stats gathering [\\#2172](https://github.com/delta-io/delta-rs/pull/2172) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: 0.17.0 publish changes [\\#2171](https://github.com/delta-io/delta-rs/pull/2171) ([rtyler](https://github.com/rtyler))\n- chore\\(python\\): bump version [\\#2170](https://github.com/delta-io/delta-rs/pull/2170) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: update all the package metadata for publication to crates.io [\\#2168](https://github.com/delta-io/delta-rs/pull/2168) ([rtyler](https://github.com/rtyler))\n- fix: rm println in python lib [\\#2166](https://github.com/delta-io/delta-rs/pull/2166) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: cleanup minor clippies and other warns [\\#2161](https://github.com/delta-io/delta-rs/pull/2161) ([rtyler](https://github.com/rtyler))\n- feat: implement clone for DeltaTable struct [\\#2160](https://github.com/delta-io/delta-rs/pull/2160) ([mightyshazam](https://github.com/mightyshazam))\n- fix: allow loading of tables with identity columns [\\#2155](https://github.com/delta-io/delta-rs/pull/2155) ([rtyler](https://github.com/rtyler))\n- fix: replace BTreeMap with IndexMap to preserve insertion order [\\#2150](https://github.com/delta-io/delta-rs/pull/2150) ([roeap](https://github.com/roeap))\n- fix: made generalize\\_filter less permissive, also added more cases [\\#2149](https://github.com/delta-io/delta-rs/pull/2149) ([emcake](https://github.com/emcake))\n- docs: add delta lake best practices [\\#2147](https://github.com/delta-io/delta-rs/pull/2147) ([MrPowers](https://github.com/MrPowers))\n- chore: shorten up the crate folder names in the tree [\\#2145](https://github.com/delta-io/delta-rs/pull/2145) ([rtyler](https://github.com/rtyler))\n- fix\\(\\#2143\\): keep specific error type when writing fails [\\#2144](https://github.com/delta-io/delta-rs/pull/2144) ([abaerptc](https://github.com/abaerptc))\n- refactor\\(python\\): drop custom filesystem in write\\_deltalake [\\#2137](https://github.com/delta-io/delta-rs/pull/2137) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: use transparent logo in README [\\#2132](https://github.com/delta-io/delta-rs/pull/2132) ([roeap](https://github.com/roeap))\n- fix: order logical schema to match physical schema [\\#2129](https://github.com/delta-io/delta-rs/pull/2129) ([Blajda](https://github.com/Blajda))\n- feat: expose stats schema on Snapshot [\\#2128](https://github.com/delta-io/delta-rs/pull/2128) ([roeap](https://github.com/roeap))\n- feat: update table config to contain new config keys [\\#2127](https://github.com/delta-io/delta-rs/pull/2127) ([roeap](https://github.com/roeap))\n- fix: clean-up paths created during tests [\\#2126](https://github.com/delta-io/delta-rs/pull/2126) ([roeap](https://github.com/roeap))\n- fix: prevent empty stats struct during parquet write [\\#2125](https://github.com/delta-io/delta-rs/pull/2125) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- fix: temporarily skip s3 roundtrip test [\\#2124](https://github.com/delta-io/delta-rs/pull/2124) ([roeap](https://github.com/roeap))\n- fix: do not write empty parquet file/add on writer close; accurately … [\\#2123](https://github.com/delta-io/delta-rs/pull/2123) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- docs: add dask page to integration docs [\\#2122](https://github.com/delta-io/delta-rs/pull/2122) ([avriiil](https://github.com/avriiil))\n- chore: upgrade to DataFusion 35.0 [\\#2121](https://github.com/delta-io/delta-rs/pull/2121) ([philippemnoel](https://github.com/philippemnoel))\n- fix\\(s3\\): restore working test for DynamoDb log store repair log on read [\\#2120](https://github.com/delta-io/delta-rs/pull/2120) ([dispanser](https://github.com/dispanser))\n- fix: set partition values for added files when building compaction plan [\\#2119](https://github.com/delta-io/delta-rs/pull/2119) ([alexwilcoxson-rel](https://github.com/alexwilcoxson-rel))\n- fix: add missing pandas import [\\#2116](https://github.com/delta-io/delta-rs/pull/2116) ([Tim-Haarman](https://github.com/Tim-Haarman))\n- chore: temporarily ignore the repair on update test [\\#2114](https://github.com/delta-io/delta-rs/pull/2114) ([rtyler](https://github.com/rtyler))\n- docs: delta lake is great for small data [\\#2113](https://github.com/delta-io/delta-rs/pull/2113) ([MrPowers](https://github.com/MrPowers))\n- chore: removed unnecessary print statement from update method [\\#2111](https://github.com/delta-io/delta-rs/pull/2111) ([LilMonk](https://github.com/LilMonk))\n- fix: schema issue within writebuilder [\\#2106](https://github.com/delta-io/delta-rs/pull/2106) ([universalmind303](https://github.com/universalmind303))\n- docs: fix arg indent [\\#2103](https://github.com/delta-io/delta-rs/pull/2103) ([wchatx](https://github.com/wchatx))\n- docs: delta lake file skipping [\\#2096](https://github.com/delta-io/delta-rs/pull/2096) ([MrPowers](https://github.com/MrPowers))\n- docs: move dynamo docs into new docs page [\\#2093](https://github.com/delta-io/delta-rs/pull/2093) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: bump python [\\#2092](https://github.com/delta-io/delta-rs/pull/2092) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: allow merge\\_execute to release the GIL [\\#2091](https://github.com/delta-io/delta-rs/pull/2091) ([emcake](https://github.com/emcake))\n- docs: how delta lake transactions work [\\#2089](https://github.com/delta-io/delta-rs/pull/2089) ([MrPowers](https://github.com/MrPowers))\n- fix: reinstate copy-if-not-exists passthrough [\\#2083](https://github.com/delta-io/delta-rs/pull/2083) ([emcake](https://github.com/emcake))\n- docs: make an overview tab visible in docs [\\#2080](https://github.com/delta-io/delta-rs/pull/2080) ([r3stl355](https://github.com/r3stl355))\n- docs: add usage guide for check constraints [\\#2079](https://github.com/delta-io/delta-rs/pull/2079) ([hntd187](https://github.com/hntd187))\n- docs: update docs for rust print statement [\\#2077](https://github.com/delta-io/delta-rs/pull/2077) ([skariyania](https://github.com/skariyania))\n- docs: add page on why to use delta lake [\\#2076](https://github.com/delta-io/delta-rs/pull/2076) ([MrPowers](https://github.com/MrPowers))\n- feat\\(rust, python\\): add `drop constraint` operation [\\#2071](https://github.com/delta-io/delta-rs/pull/2071) ([ion-elgreco](https://github.com/ion-elgreco))\n- refactor: add deltalake-gcp crate [\\#2061](https://github.com/delta-io/delta-rs/pull/2061) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: allow checkpoints to contain metadata actions without a createdTime value [\\#2059](https://github.com/delta-io/delta-rs/pull/2059) ([rtyler](https://github.com/rtyler))\n- chore: bump version python [\\#2047](https://github.com/delta-io/delta-rs/pull/2047) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: ensure metadata cleanup do not corrupt tables without checkpoints [\\#2044](https://github.com/delta-io/delta-rs/pull/2044) ([Blajda](https://github.com/Blajda))\n- docs: update docs for merge [\\#2042](https://github.com/delta-io/delta-rs/pull/2042) ([Blajda](https://github.com/Blajda))\n- chore: update documentation for S3 / DynamoDb log store configuration [\\#2041](https://github.com/delta-io/delta-rs/pull/2041) ([dispanser](https://github.com/dispanser))\n- feat: arrow backed log replay and table state [\\#2037](https://github.com/delta-io/delta-rs/pull/2037) ([roeap](https://github.com/roeap))\n- fix: properly deserialize percent-encoded file paths of Remove actions, to make sure tombstone and file paths match [\\#2035](https://github.com/delta-io/delta-rs/pull/2035) ([sigorbor](https://github.com/sigorbor))\n- fix: remove casts of structs to record batch [\\#2033](https://github.com/delta-io/delta-rs/pull/2033) ([Blajda](https://github.com/Blajda))\n- feat\\(python, rust\\): expose custom\\_metadata for all operations [\\#2032](https://github.com/delta-io/delta-rs/pull/2032) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: refactor WriterProperties class [\\#2030](https://github.com/delta-io/delta-rs/pull/2030) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: update datafusion [\\#2029](https://github.com/delta-io/delta-rs/pull/2029) ([roeap](https://github.com/roeap))\n- refactor: increase metadata action usage [\\#2027](https://github.com/delta-io/delta-rs/pull/2027) ([roeap](https://github.com/roeap))\n- fix: github actions for releasing docs [\\#2026](https://github.com/delta-io/delta-rs/pull/2026) ([r3stl355](https://github.com/r3stl355))\n- feat: introduce schema evolution on RecordBatchWriter [\\#2024](https://github.com/delta-io/delta-rs/pull/2024) ([rtyler](https://github.com/rtyler))\n- refactor: move azure integration to dedicated crate [\\#2023](https://github.com/delta-io/delta-rs/pull/2023) ([roeap](https://github.com/roeap))\n- fix: use temporary table names during the constraint checks [\\#2017](https://github.com/delta-io/delta-rs/pull/2017) ([r3stl355](https://github.com/r3stl355))\n- docs: add alterer [\\#2014](https://github.com/delta-io/delta-rs/pull/2014) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: version bump python release [\\#2011](https://github.com/delta-io/delta-rs/pull/2011) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: fix the test\\_restore\\_by\\_datetime test [\\#2010](https://github.com/delta-io/delta-rs/pull/2010) ([r3stl355](https://github.com/r3stl355))\n- feat\\(rust\\): add more commit info to most operations [\\#2009](https://github.com/delta-io/delta-rs/pull/2009) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat\\(python\\): add schema conversion of FixedSizeBinaryArray and FixedSizeListType [\\#2005](https://github.com/delta-io/delta-rs/pull/2005) ([balbok0](https://github.com/balbok0))\n- feat\\(python\\): expose large\\_dtype param in `merge` [\\#2003](https://github.com/delta-io/delta-rs/pull/2003) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: add writer properties to docs [\\#2002](https://github.com/delta-io/delta-rs/pull/2002) ([ion-elgreco](https://github.com/ion-elgreco))\n- chore: fix CI breaking lint issues [\\#1999](https://github.com/delta-io/delta-rs/pull/1999) ([r3stl355](https://github.com/r3stl355))\n- feat: implementation for replaceWhere [\\#1996](https://github.com/delta-io/delta-rs/pull/1996) ([r3stl355](https://github.com/r3stl355))\n- chore: refactoring AWS code out of the core crate [\\#1995](https://github.com/delta-io/delta-rs/pull/1995) ([rtyler](https://github.com/rtyler))\n- feat\\(python\\): expose custom metadata to writers [\\#1994](https://github.com/delta-io/delta-rs/pull/1994) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: datafusion integration [\\#1993](https://github.com/delta-io/delta-rs/pull/1993) ([MrPowers](https://github.com/MrPowers))\n- fix: flakey gcs test [\\#1987](https://github.com/delta-io/delta-rs/pull/1987) ([roeap](https://github.com/roeap))\n- fix: implement consistent formatting for constraint expressions [\\#1985](https://github.com/delta-io/delta-rs/pull/1985) ([Blajda](https://github.com/Blajda))\n- fix: case sensitivity for z-order [\\#1982](https://github.com/delta-io/delta-rs/pull/1982) ([Blajda](https://github.com/Blajda))\n- feat\\(python\\): add writer\\_properties to all operations [\\#1980](https://github.com/delta-io/delta-rs/pull/1980) ([ion-elgreco](https://github.com/ion-elgreco))\n- refactor: trigger metadata retrieval only during `DeltaTable.metadata` [\\#1979](https://github.com/delta-io/delta-rs/pull/1979) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: retry with exponential backoff for DynamoDb interaction [\\#1975](https://github.com/delta-io/delta-rs/pull/1975) ([dispanser](https://github.com/dispanser))\n- feat\\(python\\): expose `add constraint` operation [\\#1973](https://github.com/delta-io/delta-rs/pull/1973) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: properly decode percent-encoded file paths coming from parquet checkpoints [\\#1970](https://github.com/delta-io/delta-rs/pull/1970) ([sigorbor](https://github.com/sigorbor))\n- feat: omit unmodified files during merge write [\\#1969](https://github.com/delta-io/delta-rs/pull/1969) ([Blajda](https://github.com/Blajda))\n- feat\\(python\\): combine load\\_version/load\\_with\\_datetime into `load_as_version` [\\#1968](https://github.com/delta-io/delta-rs/pull/1968) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: enable S3 integration tests to be configured via environment vars [\\#1966](https://github.com/delta-io/delta-rs/pull/1966) ([dispanser](https://github.com/dispanser))\n- fix: handle empty table response in unity api [\\#1963](https://github.com/delta-io/delta-rs/pull/1963) ([JonasDev1](https://github.com/JonasDev1))\n- docs: add auto-release when docs are merged to main [\\#1962](https://github.com/delta-io/delta-rs/pull/1962) ([r3stl355](https://github.com/r3stl355))\n- feat: cast list items to default before write with different item names [\\#1959](https://github.com/delta-io/delta-rs/pull/1959) ([JonasDev1](https://github.com/JonasDev1))\n- feat: merge using partition filters [\\#1958](https://github.com/delta-io/delta-rs/pull/1958) ([emcake](https://github.com/emcake))\n- chore: relocate cast\\_record\\_batch into its own module to shed the datafusion dependency [\\#1955](https://github.com/delta-io/delta-rs/pull/1955) ([rtyler](https://github.com/rtyler))\n- fix: respect case sensitivity on operations [\\#1954](https://github.com/delta-io/delta-rs/pull/1954) ([Blajda](https://github.com/Blajda))\n- docs: add better installation instructions [\\#1951](https://github.com/delta-io/delta-rs/pull/1951) ([MrPowers](https://github.com/MrPowers))\n- docs: add polars integration [\\#1949](https://github.com/delta-io/delta-rs/pull/1949) ([MrPowers](https://github.com/MrPowers))\n- fix: add arrow page back [\\#1944](https://github.com/delta-io/delta-rs/pull/1944) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: remove the get\\_data\\_catalog\\(\\) function [\\#1941](https://github.com/delta-io/delta-rs/pull/1941) ([rtyler](https://github.com/rtyler))\n- chore: update runs-on value in python\\_release.yml [\\#1940](https://github.com/delta-io/delta-rs/pull/1940) ([wjones127](https://github.com/wjones127))\n- docs: start how delta lake works [\\#1938](https://github.com/delta-io/delta-rs/pull/1938) ([MrPowers](https://github.com/MrPowers))\n- docs: add logo, dark mode, boost search [\\#1936](https://github.com/delta-io/delta-rs/pull/1936) ([ion-elgreco](https://github.com/ion-elgreco))\n- refactor: prefer usage of metadata and protocol fields [\\#1935](https://github.com/delta-io/delta-rs/pull/1935) ([roeap](https://github.com/roeap))\n- chore: update python version [\\#1934](https://github.com/delta-io/delta-rs/pull/1934) ([wjones127](https://github.com/wjones127))\n- feat\\(python\\): expose create to DeltaTable class [\\#1932](https://github.com/delta-io/delta-rs/pull/1932) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: fix all examples and change overall structure [\\#1931](https://github.com/delta-io/delta-rs/pull/1931) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: update to include pyarrow-hotfix [\\#1930](https://github.com/delta-io/delta-rs/pull/1930) ([dennyglee](https://github.com/dennyglee))\n- fix: get rid of panic in during table [\\#1928](https://github.com/delta-io/delta-rs/pull/1928) ([dimonchik-suvorov](https://github.com/dimonchik-suvorov))\n- fix\\(rust/python\\): `optimize.compact` not working with tables with mixed large/normal arrow [\\#1926](https://github.com/delta-io/delta-rs/pull/1926) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: extend write\\_deltalake to accept Deltalake schema [\\#1922](https://github.com/delta-io/delta-rs/pull/1922) ([r3stl355](https://github.com/r3stl355))\n- fix: fail fast for opening non-existent path [\\#1917](https://github.com/delta-io/delta-rs/pull/1917) ([dimonchik-suvorov](https://github.com/dimonchik-suvorov))\n- feat: check constraints [\\#1915](https://github.com/delta-io/delta-rs/pull/1915) ([hntd187](https://github.com/hntd187))\n- docs: delta lake arrow integration page [\\#1914](https://github.com/delta-io/delta-rs/pull/1914) ([MrPowers](https://github.com/MrPowers))\n- feat: add more info for contributors [\\#1913](https://github.com/delta-io/delta-rs/pull/1913) ([r3stl355](https://github.com/r3stl355))\n- fix: add buffer flushing to filesystem writes [\\#1911](https://github.com/delta-io/delta-rs/pull/1911) ([r3stl355](https://github.com/r3stl355))\n- docs: update docs home page and add pandas integration [\\#1905](https://github.com/delta-io/delta-rs/pull/1905) ([MrPowers](https://github.com/MrPowers))\n- feat: implement S3 log store with transactions backed by DynamoDb [\\#1904](https://github.com/delta-io/delta-rs/pull/1904) ([dispanser](https://github.com/dispanser))\n- fix: prune each merge bin with only 1 file [\\#1902](https://github.com/delta-io/delta-rs/pull/1902) ([haruband](https://github.com/haruband))\n- docs: update python docs link in readme.md [\\#1899](https://github.com/delta-io/delta-rs/pull/1899) ([thomasfrederikhoeck](https://github.com/thomasfrederikhoeck))\n- docs: on append, overwrite, delete and z-ordering [\\#1897](https://github.com/delta-io/delta-rs/pull/1897) ([MrPowers](https://github.com/MrPowers))\n- feat: compare timestamp partition values as timestamps instead of strings [\\#1895](https://github.com/delta-io/delta-rs/pull/1895) ([sigorbor](https://github.com/sigorbor))\n- feat\\(python\\): expose rust writer as additional engine v2 [\\#1891](https://github.com/delta-io/delta-rs/pull/1891) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: add high-level checking for append-only tables [\\#1887](https://github.com/delta-io/delta-rs/pull/1887) ([junjunjd](https://github.com/junjunjd))\n- test: loading version 0 Delta table [\\#1885](https://github.com/delta-io/delta-rs/pull/1885) ([dimonchik-suvorov](https://github.com/dimonchik-suvorov))\n- fix: improve catalog failure error message, add missing Glue native-tls feature dependency [\\#1883](https://github.com/delta-io/delta-rs/pull/1883) ([r3stl355](https://github.com/r3stl355))\n- refactor: simplify `DeltaTableState` [\\#1877](https://github.com/delta-io/delta-rs/pull/1877) ([roeap](https://github.com/roeap))\n- refactor: express log schema in delta types [\\#1876](https://github.com/delta-io/delta-rs/pull/1876) ([roeap](https://github.com/roeap))\n- docs: add Rust installation instructions [\\#1875](https://github.com/delta-io/delta-rs/pull/1875) ([MrPowers](https://github.com/MrPowers))\n- chore: clippy [\\#1871](https://github.com/delta-io/delta-rs/pull/1871) ([roeap](https://github.com/roeap))\n- fix: docs deployment action [\\#1869](https://github.com/delta-io/delta-rs/pull/1869) ([r3stl355](https://github.com/r3stl355))\n- docs: tell how to claim an issue [\\#1866](https://github.com/delta-io/delta-rs/pull/1866) ([wjones127](https://github.com/wjones127))\n- feat: drop python 3.7 and adopt 3.12 [\\#1859](https://github.com/delta-io/delta-rs/pull/1859) ([roeap](https://github.com/roeap))\n- feat: create benchmarks for merge [\\#1857](https://github.com/delta-io/delta-rs/pull/1857) ([Blajda](https://github.com/Blajda))\n- chore: add @ion-elgreco to python/ [\\#1855](https://github.com/delta-io/delta-rs/pull/1855) ([rtyler](https://github.com/rtyler))\n- fix: compile error with lifetime issues on optimize \\(\\#1843\\) [\\#1852](https://github.com/delta-io/delta-rs/pull/1852) ([dispanser](https://github.com/dispanser))\n- feat: implement issue auto-assign on `take` comment [\\#1851](https://github.com/delta-io/delta-rs/pull/1851) ([r3stl355](https://github.com/r3stl355))\n- docs: add docs on small file compaction with optimize [\\#1850](https://github.com/delta-io/delta-rs/pull/1850) ([MrPowers](https://github.com/MrPowers))\n- fix: checkpoint error with Azure Synapse [\\#1848](https://github.com/delta-io/delta-rs/pull/1848) ([PierreDubrulle](https://github.com/PierreDubrulle))\n- feat\\(python\\): expose `convert_to_deltalake` [\\#1842](https://github.com/delta-io/delta-rs/pull/1842) ([ion-elgreco](https://github.com/ion-elgreco))\n- ci: adopt `ruff format` for formatting [\\#1841](https://github.com/delta-io/delta-rs/pull/1841) ([roeap](https://github.com/roeap))\n\n## [rust-v0.17.0](https://github.com/delta-io/delta-rs/tree/rust-v0.17.0) (2024-02-06)\n\n:warning: The release of 0.17.0 **removes** the legacy dynamodb lock functionality, AWS users must read these release notes! :warning:\n\n### File handlers\n\nThe 0.17.0 release moves storage implementations into their own crates, such as\n`deltalake-aws`. A consequence of that refactoring is that custom storage and\nfile scheme handlers must be registered/initialized at runtime. Storage\nsubcrates conventionally define a `register_handlers` function which performs\nthat task. Users may see errors such as:\n```\nthread 'main' panicked at /home/ubuntu/.cargo/registry/src/index.crates.io-6f17d22bba15001f/deltalake-core-0.17.0/src/table/builder.rs:189:48:\nThe specified table_uri is not valid: InvalidTableLocation(\"Unknown scheme: s3\")\n```\n\n* Users of the meta-crate (`deltalake`) can call the storage crate via: `deltalake::aws::register_handlers(None);` at the entrypoint for their code.\n* Users who adopt `core` and storage crates independently (e.g. `deltalake-aws`) can register via `deltalake_aws::register_handlers(None);`.\n\nThe AWS, Azure, and GCP crates must all have their custom file schemes registered in this fashion.\n\n\n### dynamodblock to S3DynamoDbLogStore\n\nThe locking mechanism is fundamentally different between `deltalake` v0.16.x and v0.17.0, starting with this release the `deltalake` and `deltalake-aws` crates this library now relies on the same [protocol for concurrent writes on AWS](https://docs.delta.io/latest/delta-storage.html#setup-configuration-s3-multi-cluster) as the Delta Lake/Spark implementation.\n\nFundamentally the DynamoDB table structure changes, [which is documented here](https://docs.delta.io/latest/delta-storage.html#setup-configuration-s3-multi-cluster). The configuration of a Rust process should continue to use the `AWS_S3_LOCKING_PROVIDER` environment value of `dynamodb`.  The new table must be specified with the `DELTA_DYNAMO_TABLE_NAME` environment or configuration variable, and that should name the _new_ `S3DynamoDbLogStore` compatible DynamoDB table.\n\nBecause locking is required to ensure safe cconsistent writes, **there is no iterative migration**, 0.16 and 0.17 writers **cannot** safely coexist. The following steps should be taken when upgrading:\n\n1. Stop all 0.16.x writers\n2. Ensure writes are completed, and lock table is empty.\n3. Deploy 0.17.0 writers\n\n\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.5...rust-v0.17.0)\n\n**Implemented enhancements:**\n\n- Expose the ability to compile DataFusion with SIMD [\\#2118](https://github.com/delta-io/delta-rs/issues/2118)\n- Updating Table log retention configuration with `write_deltalake` silently changes nothing [\\#2108](https://github.com/delta-io/delta-rs/issues/2108)\n- ALTER table, ALTER Column, Add/Modify Comment, Add/remove/rename partitions, Set Tags, Set location, Set TBLProperties [\\#2088](https://github.com/delta-io/delta-rs/issues/2088)\n- Docs: Update docs for check constraints [\\#2063](https://github.com/delta-io/delta-rs/issues/2063)\n- Don't `ensure_table_uri` when creating a table `with_log_store` [\\#2036](https://github.com/delta-io/delta-rs/issues/2036)\n- Exposing custom\\_metadata in merge operation [\\#2031](https://github.com/delta-io/delta-rs/issues/2031)\n- Support custom table properties via TableAlterer and write/merge [\\#2022](https://github.com/delta-io/delta-rs/issues/2022)\n- Remove parquet2 crate support [\\#2004](https://github.com/delta-io/delta-rs/issues/2004)\n- Merge operation that only touches necessary partitions [\\#1991](https://github.com/delta-io/delta-rs/issues/1991)\n- store userMetadata on write operations [\\#1990](https://github.com/delta-io/delta-rs/issues/1990)\n- Create Dask integration page [\\#1956](https://github.com/delta-io/delta-rs/issues/1956)\n- Merge: Filtering on partitions [\\#1918](https://github.com/delta-io/delta-rs/issues/1918)\n- Rethink the load\\_version and load\\_with\\_datetime interfaces [\\#1910](https://github.com/delta-io/delta-rs/issues/1910)\n- docs: Delta Lake + Arrow Integration [\\#1908](https://github.com/delta-io/delta-rs/issues/1908)\n- docs: Delta Lake + Polars integration [\\#1906](https://github.com/delta-io/delta-rs/issues/1906)\n- Rethink decision to expose the public interface in namespaces [\\#1900](https://github.com/delta-io/delta-rs/issues/1900)\n- Add documentation on how to build and run documentation locally [\\#1893](https://github.com/delta-io/delta-rs/issues/1893)\n- Add API to create an empty Delta Lake table [\\#1892](https://github.com/delta-io/delta-rs/issues/1892)\n- Implementing CHECK constraints  [\\#1881](https://github.com/delta-io/delta-rs/issues/1881)\n- Check Invariants are respecting table features for write paths  [\\#1880](https://github.com/delta-io/delta-rs/issues/1880)\n- Organize docs with single lefthand sidebar [\\#1873](https://github.com/delta-io/delta-rs/issues/1873)\n- Make sure invariants are handled properly throughout the codebase [\\#1870](https://github.com/delta-io/delta-rs/issues/1870)\n- Unable to use deltalake `Schema` in `write_deltalake` [\\#1862](https://github.com/delta-io/delta-rs/issues/1862)\n- Add a Rust-backed engine for write\\_deltalake [\\#1861](https://github.com/delta-io/delta-rs/issues/1861)\n- Run doctest in CI for Python API examples [\\#1783](https://github.com/delta-io/delta-rs/issues/1783)\n- \\[RFC\\] Use arrow for checkpoint reading and state handling [\\#1776](https://github.com/delta-io/delta-rs/issues/1776)\n- Expose Python exceptions in public module [\\#1771](https://github.com/delta-io/delta-rs/issues/1771)\n- Expose cleanup\\_metadata or create\\_checkpoint\\_from\\_table\\_uri\\_and\\_cleanup to the Python API [\\#1768](https://github.com/delta-io/delta-rs/issues/1768)\n- Expose convert\\_to\\_delta to Python API [\\#1767](https://github.com/delta-io/delta-rs/issues/1767)\n- Add high-level checking for append-only tables [\\#1759](https://github.com/delta-io/delta-rs/issues/1759)\n\n**Fixed bugs:**\n\n- Row order no longer preserved after merge operation [\\#2165](https://github.com/delta-io/delta-rs/issues/2165)\n- Error when reading delta table with IDENTITY column [\\#2152](https://github.com/delta-io/delta-rs/issues/2152)\n- Merge on IS NULL condition doesn't work for empty table [\\#2148](https://github.com/delta-io/delta-rs/issues/2148)\n- JsonWriter converts structured parsing error into plain string [\\#2143](https://github.com/delta-io/delta-rs/issues/2143)\n- Pandas import error when merging tables  [\\#2112](https://github.com/delta-io/delta-rs/issues/2112)\n-   test\\_repair\\_on\\_update broken in main [\\#2109](https://github.com/delta-io/delta-rs/issues/2109)\n- `WriteBuilder::with_input_execution_plan` does not apply the schema to the log's metadata fields [\\#2105](https://github.com/delta-io/delta-rs/issues/2105)\n- MERGE logical plan vs execution plan schema mismatch [\\#2104](https://github.com/delta-io/delta-rs/issues/2104)\n- Partitions not pushed down [\\#2090](https://github.com/delta-io/delta-rs/issues/2090)\n- Cant create empty table with write\\_deltalake [\\#2086](https://github.com/delta-io/delta-rs/issues/2086)\n- Unexpected high costs on Google Cloud Storage [\\#2085](https://github.com/delta-io/delta-rs/issues/2085)\n- Unable to read s3 table: `Unknown scheme: s3` [\\#2065](https://github.com/delta-io/delta-rs/issues/2065)\n- write\\_deltalake not respecting writer\\_properties [\\#2064](https://github.com/delta-io/delta-rs/issues/2064)\n- Unable to read/write tables with the \"gs\" schema in the table\\_uri in 0.15.1 [\\#2060](https://github.com/delta-io/delta-rs/issues/2060)\n- LockClient requiered error for S3 backend in 0.15.1 python [\\#2057](https://github.com/delta-io/delta-rs/issues/2057)\n- Error while writing Pandas DataFrame to Delta Lake \\(S3\\) [\\#2051](https://github.com/delta-io/delta-rs/issues/2051)\n- Error with dynamo locking provider on 0.15 [\\#2034](https://github.com/delta-io/delta-rs/issues/2034)\n- Conda version 0.15.0 is missing files [\\#2021](https://github.com/delta-io/delta-rs/issues/2021)\n- Rust panicking through Python library when a delete predicate uses a nullable field [\\#2019](https://github.com/delta-io/delta-rs/issues/2019)\n- No snapshot or version 0 found, perhaps /Users/watsy0007/resources/test\\_table/ is an empty dir? [\\#2016](https://github.com/delta-io/delta-rs/issues/2016)\n- Generic DeltaTable error: type\\_coercion in Struct column in merge operation [\\#1998](https://github.com/delta-io/delta-rs/issues/1998)\n- Constraint expr not formatted during commit action [\\#1971](https://github.com/delta-io/delta-rs/issues/1971)\n- .load\\_with\\_datetime\\(\\) is incorrectly rounding to nearest second [\\#1967](https://github.com/delta-io/delta-rs/issues/1967)\n- vacuuming log files [\\#1965](https://github.com/delta-io/delta-rs/issues/1965)\n- Unable to merge uppercase column names [\\#1960](https://github.com/delta-io/delta-rs/issues/1960)\n- Schema error: Invalid data type for Delta Lake: Null [\\#1946](https://github.com/delta-io/delta-rs/issues/1946)\n- Python v0.14 wheel files not up to date [\\#1945](https://github.com/delta-io/delta-rs/issues/1945)\n- python Release 0.14 is missing Windows wheels [\\#1942](https://github.com/delta-io/delta-rs/issues/1942)\n- CI integration test fails randomly:  test\\_restore\\_by\\_datetime [\\#1925](https://github.com/delta-io/delta-rs/issues/1925)\n- Merge data freezes indefenetely [\\#1920](https://github.com/delta-io/delta-rs/issues/1920)\n- Load DeltaTable from non-existing folder causing empty folder creation [\\#1916](https://github.com/delta-io/delta-rs/issues/1916)\n- Reoptimizes merge bins with only 1 file, even though they have no effect. [\\#1901](https://github.com/delta-io/delta-rs/issues/1901)\n- The Python Docs link in README.MD points to old docs [\\#1898](https://github.com/delta-io/delta-rs/issues/1898)\n- optimize.compact\\(\\) fails with bad schema after updating to pyarrow 8.0 [\\#1889](https://github.com/delta-io/delta-rs/issues/1889)\n- Python build is broken on main [\\#1856](https://github.com/delta-io/delta-rs/issues/1856)\n- Checkpoint error with Azure Synapse [\\#1847](https://github.com/delta-io/delta-rs/issues/1847)\n- merge very slow compared to delete + append on larger dataset [\\#1846](https://github.com/delta-io/delta-rs/issues/1846)\n- get\\_add\\_actions fails with deltalake 0.13 [\\#1835](https://github.com/delta-io/delta-rs/issues/1835)\n- Handle PyArrow CVE-2023-47248 [\\#1834](https://github.com/delta-io/delta-rs/issues/1834)\n- Delta-rs writer hangs with to many file handles open \\(Azure\\) [\\#1832](https://github.com/delta-io/delta-rs/issues/1832)\n- Encountering NotATable\\(\"No snapshot or version 0 found, perhaps xxx is an empty dir?\"\\) [\\#1831](https://github.com/delta-io/delta-rs/issues/1831)\n- write\\_deltalake is not creating checkpoints [\\#1815](https://github.com/delta-io/delta-rs/issues/1815)\n- Problem writing tables in directory named with char `~` [\\#1806](https://github.com/delta-io/delta-rs/issues/1806)\n- DeltaTable Merge throws in merging if there are uppercase in Schema. [\\#1797](https://github.com/delta-io/delta-rs/issues/1797)\n- rust merge error - datafusion panics [\\#1790](https://github.com/delta-io/delta-rs/issues/1790)\n- expose use\\_dictionary=False when writing Delta Table and running optimize [\\#1772](https://github.com/delta-io/delta-rs/issues/1772)\n\n**Closed issues:**\n\n- Is this print necessary? Can we remove this. [\\#2110](https://github.com/delta-io/delta-rs/issues/2110)\n- Azure concurrent writes [\\#2069](https://github.com/delta-io/delta-rs/issues/2069)\n- Fix docs deployment [\\#1867](https://github.com/delta-io/delta-rs/issues/1867)\n- Add a header in old docs and direct users to new docs [\\#1865](https://github.com/delta-io/delta-rs/issues/1865)\n\n## [rust-v0.16.5](https://github.com/delta-io/delta-rs/tree/rust-v0.16.5) (2023-11-15)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.4...rust-v0.16.5)\n\n**Implemented enhancements:**\n\n- When will upgrade object\\_store to 0.8? [\\#1858](https://github.com/delta-io/delta-rs/issues/1858)\n- No Official Help [\\#1849](https://github.com/delta-io/delta-rs/issues/1849)\n- Auto assign GitHub issues with a \"take\" message [\\#1791](https://github.com/delta-io/delta-rs/issues/1791)\n\n**Fixed bugs:**\n\n- cargo clippy fails on core in main [\\#1843](https://github.com/delta-io/delta-rs/issues/1843)\n\n## [rust-v0.16.4](https://github.com/delta-io/delta-rs/tree/rust-v0.16.4) (2023-11-12)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.3...rust-v0.16.4)\n\n**Implemented enhancements:**\n\n- Unable to add deltalake git dependency to cargo.toml [\\#1821](https://github.com/delta-io/delta-rs/issues/1821)\n\n## [rust-v0.16.3](https://github.com/delta-io/delta-rs/tree/rust-v0.16.3) (2023-11-08)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.2...rust-v0.16.3)\n\n**Implemented enhancements:**\n\n- Docs: add release GitHub action [\\#1799](https://github.com/delta-io/delta-rs/issues/1799)\n- Use bulk deletes where possible [\\#1761](https://github.com/delta-io/delta-rs/issues/1761)\n\n**Fixed bugs:**\n\n- Code Owners no longer valid [\\#1794](https://github.com/delta-io/delta-rs/issues/1794)\n- `MERGE` works incorrectly with partitioned table if the data column order is not same as table column order [\\#1787](https://github.com/delta-io/delta-rs/issues/1787)\n- errors when using pyarrow dataset as a source [\\#1779](https://github.com/delta-io/delta-rs/issues/1779)\n- Write to Microsoft OneLake failed. [\\#1764](https://github.com/delta-io/delta-rs/issues/1764)\n\n## [rust-v0.16.2](https://github.com/delta-io/delta-rs/tree/rust-v0.16.2) (2023-10-21)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.1...rust-v0.16.2)\n\n## [rust-v0.16.1](https://github.com/delta-io/delta-rs/tree/rust-v0.16.1) (2023-10-21)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.16.0...rust-v0.16.1)\n\n## [rust-v0.16.0](https://github.com/delta-io/delta-rs/tree/rust-v0.16.0) (2023-09-27)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.15.0...rust-v0.16.0)\n\n**Implemented enhancements:**\n\n- Expose Optimize option min\\_commit\\_interval in Python [\\#1640](https://github.com/delta-io/delta-rs/issues/1640)\n- Expose create\\_checkpoint\\_for [\\#1513](https://github.com/delta-io/delta-rs/issues/1513)\n- integration tests regularly fail for HDFS [\\#1428](https://github.com/delta-io/delta-rs/issues/1428)\n- Add Support for Microsoft OneLake [\\#1418](https://github.com/delta-io/delta-rs/issues/1418)\n- add support for atomic rename in R2 [\\#1356](https://github.com/delta-io/delta-rs/issues/1356)\n\n**Fixed bugs:**\n\n- Writing with large arrow types \\(e.g. large\\_utf8\\), writes wrong partition encoding [\\#1669](https://github.com/delta-io/delta-rs/issues/1669)\n- \\[python\\] Different stringification of partition values in reader and writer [\\#1653](https://github.com/delta-io/delta-rs/issues/1653)\n- Unable to interface with data written from Spark Databricks [\\#1651](https://github.com/delta-io/delta-rs/issues/1651)\n- `get_last_checkpoint` does some unnecessary listing [\\#1643](https://github.com/delta-io/delta-rs/issues/1643)\n- `PartitionWriter`'s `buffer_len` doesn't include incomplete row groups [\\#1637](https://github.com/delta-io/delta-rs/issues/1637)\n- Slack community invite link has expired [\\#1636](https://github.com/delta-io/delta-rs/issues/1636)\n- delta-rs does not appear to support tables with liquid clustering [\\#1626](https://github.com/delta-io/delta-rs/issues/1626)\n- Internal Parquet panic when using a Map type.  [\\#1619](https://github.com/delta-io/delta-rs/issues/1619)\n- partition\\_by with \"$\" on local filesystem [\\#1591](https://github.com/delta-io/delta-rs/issues/1591)\n- ProtocolChanged error when perfoming append write [\\#1585](https://github.com/delta-io/delta-rs/issues/1585)\n- Unable to `cargo update` using git tag or rev on Rust 1.70 [\\#1580](https://github.com/delta-io/delta-rs/issues/1580)\n- NoMetadata error when reading detlatable [\\#1562](https://github.com/delta-io/delta-rs/issues/1562)\n- Cannot read delta table: `Delta protocol violation` [\\#1557](https://github.com/delta-io/delta-rs/issues/1557)\n- Update the CODEOWNERS to capture the current reviewers and contributors [\\#1553](https://github.com/delta-io/delta-rs/issues/1553)\n- \\[Python\\] Incorrect file URIs when partition values contain escape character [\\#1533](https://github.com/delta-io/delta-rs/issues/1533)\n- add documentation how to Query Delta natively from datafusion [\\#1485](https://github.com/delta-io/delta-rs/issues/1485)\n- Python: write\\_deltalake to ADLS Gen2 issue [\\#1456](https://github.com/delta-io/delta-rs/issues/1456)\n- Partition values that have been url encoded cannot be read when using deltalake [\\#1446](https://github.com/delta-io/delta-rs/issues/1446)\n- Error optimizing large table [\\#1419](https://github.com/delta-io/delta-rs/issues/1419)\n- Cannot read partitions with special characters \\(including space\\) with pyarrow \\>= 11 [\\#1393](https://github.com/delta-io/delta-rs/issues/1393)\n- ImportError: deltalake/\\_internal.abi3.so: cannot allocate memory in static TLS block [\\#1380](https://github.com/delta-io/delta-rs/issues/1380)\n- Invalid JSON in log record missing field `schemaString` for DLT tables [\\#1302](https://github.com/delta-io/delta-rs/issues/1302)\n- Special characters in partition path not handled locally  [\\#1299](https://github.com/delta-io/delta-rs/issues/1299)\n\n**Merged pull requests:**\n\n- chore: bump rust crate version [\\#1675](https://github.com/delta-io/delta-rs/pull/1675) ([rtyler](https://github.com/rtyler))\n- fix: change partitioning schema from large to normal string for pyarrow\\<12 [\\#1671](https://github.com/delta-io/delta-rs/pull/1671) ([ion-elgreco](https://github.com/ion-elgreco))\n- feat: allow to set large dtypes for the schema check in `write_deltalake` [\\#1668](https://github.com/delta-io/delta-rs/pull/1668) ([ion-elgreco](https://github.com/ion-elgreco))\n- docs: small consistency update in guide and readme [\\#1666](https://github.com/delta-io/delta-rs/pull/1666) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: exception string in writer.py [\\#1665](https://github.com/delta-io/delta-rs/pull/1665) ([sebdiem](https://github.com/sebdiem))\n- chore: increment python library version [\\#1664](https://github.com/delta-io/delta-rs/pull/1664) ([wjones127](https://github.com/wjones127))\n- docs: fix some typos [\\#1662](https://github.com/delta-io/delta-rs/pull/1662) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: more consistent handling of partition values and file paths [\\#1661](https://github.com/delta-io/delta-rs/pull/1661) ([roeap](https://github.com/roeap))\n- docs: add docstring to protocol method [\\#1660](https://github.com/delta-io/delta-rs/pull/1660) ([MrPowers](https://github.com/MrPowers))\n- docs: make docs.rs build docs with all features enabled [\\#1658](https://github.com/delta-io/delta-rs/pull/1658) ([simonvandel](https://github.com/simonvandel))\n- fix: enable offset listing for s3 [\\#1654](https://github.com/delta-io/delta-rs/pull/1654) ([eeroel](https://github.com/eeroel))\n- chore: fix the incorrect Slack link in our readme [\\#1649](https://github.com/delta-io/delta-rs/pull/1649) ([rtyler](https://github.com/rtyler))\n- fix: compensate for invalid log files created by Delta Live Tables [\\#1647](https://github.com/delta-io/delta-rs/pull/1647) ([rtyler](https://github.com/rtyler))\n- chore: proposed updated CODEOWNERS to allow better review notifications [\\#1646](https://github.com/delta-io/delta-rs/pull/1646) ([rtyler](https://github.com/rtyler))\n- feat: expose min\\_commit\\_interval to `optimize.compact` and `optimize.z_order` [\\#1645](https://github.com/delta-io/delta-rs/pull/1645) ([ion-elgreco](https://github.com/ion-elgreco))\n- fix: avoid excess listing of log files [\\#1644](https://github.com/delta-io/delta-rs/pull/1644) ([eeroel](https://github.com/eeroel))\n- fix: introduce support for Microsoft OneLake [\\#1642](https://github.com/delta-io/delta-rs/pull/1642) ([rtyler](https://github.com/rtyler))\n- fix: explicitly require chrono 0.4.31 or greater [\\#1641](https://github.com/delta-io/delta-rs/pull/1641) ([rtyler](https://github.com/rtyler))\n- fix: include in-progress row group when calculating in-memory buffer length [\\#1638](https://github.com/delta-io/delta-rs/pull/1638) ([BnMcG](https://github.com/BnMcG))\n- chore: relax chrono pin to 0.4 [\\#1635](https://github.com/delta-io/delta-rs/pull/1635) ([houqp](https://github.com/houqp))\n- chore: update datafusion to 31, arrow to 46 and object\\_store to 0.7 [\\#1634](https://github.com/delta-io/delta-rs/pull/1634) ([houqp](https://github.com/houqp))\n- docs: update Readme [\\#1633](https://github.com/delta-io/delta-rs/pull/1633) ([dennyglee](https://github.com/dennyglee))\n- chore: pin the chrono dependency [\\#1631](https://github.com/delta-io/delta-rs/pull/1631) ([rtyler](https://github.com/rtyler))\n- feat: pass known file sizes to filesystem in Python [\\#1630](https://github.com/delta-io/delta-rs/pull/1630) ([eeroel](https://github.com/eeroel))\n- feat: implement parsing for the new `domainMetadata` actions in the commit log [\\#1629](https://github.com/delta-io/delta-rs/pull/1629) ([rtyler](https://github.com/rtyler))\n- ci: fix python release [\\#1624](https://github.com/delta-io/delta-rs/pull/1624) ([wjones127](https://github.com/wjones127))\n- ci: extend azure timeout [\\#1622](https://github.com/delta-io/delta-rs/pull/1622) ([wjones127](https://github.com/wjones127))\n- feat: allow multiple incremental commits in optimize [\\#1621](https://github.com/delta-io/delta-rs/pull/1621) ([kvap](https://github.com/kvap))\n- fix: change map nullable value to false [\\#1620](https://github.com/delta-io/delta-rs/pull/1620) ([cmackenzie1](https://github.com/cmackenzie1))\n- Introduce the changelog for the last couple releases [\\#1617](https://github.com/delta-io/delta-rs/pull/1617) ([rtyler](https://github.com/rtyler))\n- chore: bump python version to 0.10.2 [\\#1616](https://github.com/delta-io/delta-rs/pull/1616) ([wjones127](https://github.com/wjones127))\n- perf: avoid holding GIL in DeltaFileSystemHandler [\\#1615](https://github.com/delta-io/delta-rs/pull/1615) ([wjones127](https://github.com/wjones127))\n- fix: don't re-encode paths [\\#1613](https://github.com/delta-io/delta-rs/pull/1613) ([wjones127](https://github.com/wjones127))\n- feat: use url parsing from object store [\\#1592](https://github.com/delta-io/delta-rs/pull/1592) ([roeap](https://github.com/roeap))\n- feat: buffered reading of transaction logs [\\#1549](https://github.com/delta-io/delta-rs/pull/1549) ([eeroel](https://github.com/eeroel))\n- feat: merge operation [\\#1522](https://github.com/delta-io/delta-rs/pull/1522) ([Blajda](https://github.com/Blajda))\n- feat: expose create\\_checkpoint\\_for to the public [\\#1514](https://github.com/delta-io/delta-rs/pull/1514) ([haruband](https://github.com/haruband))\n- docs: update Readme [\\#1440](https://github.com/delta-io/delta-rs/pull/1440) ([roeap](https://github.com/roeap))\n- refactor: re-organize top level modules [\\#1434](https://github.com/delta-io/delta-rs/pull/1434) ([roeap](https://github.com/roeap))\n- feat: integrate unity catalog with datafusion [\\#1338](https://github.com/delta-io/delta-rs/pull/1338) ([roeap](https://github.com/roeap))\n\n## [rust-v0.15.0](https://github.com/delta-io/delta-rs/tree/rust-v0.15.0) (2023-09-06)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.14.0...rust-v0.15.0)\n\n**Implemented enhancements:**\n\n- Configurable number of retries for transaction commit loop [\\#1595](https://github.com/delta-io/delta-rs/issues/1595)\n\n**Fixed bugs:**\n\n- Unable to read table using VM Managed Identity on Azure [\\#1462](https://github.com/delta-io/delta-rs/issues/1462)\n- Unable to query by partition column  [\\#1445](https://github.com/delta-io/delta-rs/issues/1445)\n\n**Merged pull requests:**\n\n- fix: update python test [\\#1608](https://github.com/delta-io/delta-rs/pull/1608) ([wjones127](https://github.com/wjones127))\n- chore: update datafusion to 30, arrow to 45 [\\#1606](https://github.com/delta-io/delta-rs/pull/1606) ([scsmithr](https://github.com/scsmithr))\n- fix: just make pyarrow 12 the max [\\#1603](https://github.com/delta-io/delta-rs/pull/1603) ([wjones127](https://github.com/wjones127))\n- fix: support partial statistics in JSON [\\#1599](https://github.com/delta-io/delta-rs/pull/1599) ([CurtHagenlocher](https://github.com/CurtHagenlocher))\n- feat: allow configurable number of `commit` attempts [\\#1596](https://github.com/delta-io/delta-rs/pull/1596) ([cmackenzie1](https://github.com/cmackenzie1))\n- fix: querying on date partitions \\(fixes \\#1445\\) [\\#1594](https://github.com/delta-io/delta-rs/pull/1594) ([watfordkcf](https://github.com/watfordkcf))\n- refactor: clean up arrow schema defs [\\#1590](https://github.com/delta-io/delta-rs/pull/1590) ([polynomialherder](https://github.com/polynomialherder))\n- feat: add metadata for operations::write::WriteBuilder [\\#1584](https://github.com/delta-io/delta-rs/pull/1584) ([abhimanyusinghgaur](https://github.com/abhimanyusinghgaur))\n- feat: add metadata for deletion vectors [\\#1583](https://github.com/delta-io/delta-rs/pull/1583) ([aersam](https://github.com/aersam))\n- fix: remove alpha classifier [\\#1578](https://github.com/delta-io/delta-rs/pull/1578) ([marcelotrevisani](https://github.com/marcelotrevisani))\n- refactor: use pa.table.cast in delta\\_arrow\\_schema\\_from\\_pandas [\\#1573](https://github.com/delta-io/delta-rs/pull/1573) ([ion-elgreco](https://github.com/ion-elgreco))\n\n## [rust-v0.14.0](https://github.com/delta-io/delta-rs/tree/rust-v0.14.0) (2023-08-01)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.13.0...rust-v0.14.0)\n\n**Implemented enhancements:**\n\n- Define common dependencies in Cargo Workspace [\\#1572](https://github.com/delta-io/delta-rs/issues/1572)\n- Make `delta_datafusion::find_files` public [\\#1559](https://github.com/delta-io/delta-rs/issues/1559)\n\n**Fixed bugs:**\n\n- Excessive integration test sizes causing builds to fail [\\#1550](https://github.com/delta-io/delta-rs/issues/1550)\n- Slack invite link is not working [\\#1530](https://github.com/delta-io/delta-rs/issues/1530)\n\n**Merged pull requests:**\n\n- fix: correct whitespace in delta protocol reader minimum version error message [\\#1576](https://github.com/delta-io/delta-rs/pull/1576) ([polynomialherder](https://github.com/polynomialherder))\n- chore: move deps to `[workspace.dependencies]` [\\#1575](https://github.com/delta-io/delta-rs/pull/1575) ([cmackenzie1](https://github.com/cmackenzie1))\n- chore: update `datafusion` to `28` and arrow to `43` [\\#1571](https://github.com/delta-io/delta-rs/pull/1571) ([cmackenzie1](https://github.com/cmackenzie1))\n- ci: don't run benchmark in debug mode [\\#1566](https://github.com/delta-io/delta-rs/pull/1566) ([wjones127](https://github.com/wjones127))\n- ci: install newer rust for macos python release [\\#1565](https://github.com/delta-io/delta-rs/pull/1565) ([wjones127](https://github.com/wjones127))\n- feat: make find\\_files public [\\#1560](https://github.com/delta-io/delta-rs/pull/1560) ([yjshen](https://github.com/yjshen))\n- feat!: bulk delete for vacuum [\\#1556](https://github.com/delta-io/delta-rs/pull/1556) ([Blajda](https://github.com/Blajda))\n- chore: address some integration test bloat of disk usage for development [\\#1552](https://github.com/delta-io/delta-rs/pull/1552) ([rtyler](https://github.com/rtyler))\n- docs: port docs to mkdocs [\\#1548](https://github.com/delta-io/delta-rs/pull/1548) ([MrPowers](https://github.com/MrPowers))\n- chore: disable incremental builds in CI for saving space [\\#1545](https://github.com/delta-io/delta-rs/pull/1545) ([rtyler](https://github.com/rtyler))\n- fix: revert premature merge of an attempted fix for binary column statistics [\\#1544](https://github.com/delta-io/delta-rs/pull/1544) ([rtyler](https://github.com/rtyler))\n- chore: increment python version [\\#1542](https://github.com/delta-io/delta-rs/pull/1542) ([wjones127](https://github.com/wjones127))\n- feat: add restore command in python binding [\\#1529](https://github.com/delta-io/delta-rs/pull/1529) ([loleek](https://github.com/loleek))\n\n## [rust-v0.13.1](https://github.com/delta-io/delta-rs/tree/rust-v0.13.1) (2023-07-18)\n\n**Fixed bugs:**\n\n* Revert premature merge of an attempted fix for binary column statistics [\\#1544](https://github.com/delta-io/delta-rs/pull/1544)\n\n## [rust-v0.13.0](https://github.com/delta-io/delta-rs/tree/rust-v0.13.0) (2023-07-15)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.12.0...rust-v0.13.0)\n\n**Implemented enhancements:**\n\n- Add nested struct supports [\\#1518](https://github.com/delta-io/delta-rs/issues/1518)\n- Support FixedLenByteArray UUID statistics as a logical scalar [\\#1483](https://github.com/delta-io/delta-rs/issues/1483)\n- Exposing create\\_add in the API [\\#1458](https://github.com/delta-io/delta-rs/issues/1458)\n- Update features table on README [\\#1404](https://github.com/delta-io/delta-rs/issues/1404)\n- docs\\(python\\): show data catalog options in Python API reference [\\#1347](https://github.com/delta-io/delta-rs/issues/1347)\n- Add optimization to only list log files starting at a certain name [\\#1252](https://github.com/delta-io/delta-rs/issues/1252)\n- Support configuring parquet compression [\\#1235](https://github.com/delta-io/delta-rs/issues/1235)\n- parallel processing in Optimize command [\\#1171](https://github.com/delta-io/delta-rs/issues/1171)\n\n**Fixed bugs:**\n\n- get\\_add\\_actions\\(\\) MAX is not showing complete value [\\#1534](https://github.com/delta-io/delta-rs/issues/1534)\n- Can't get stats's minValues in add actions [\\#1515](https://github.com/delta-io/delta-rs/issues/1515)\n- Pyarrow is\\_null filter not working as expected after loading using deltalake [\\#1496](https://github.com/delta-io/delta-rs/issues/1496)\n- Can't write to table that uses generated columns [\\#1495](https://github.com/delta-io/delta-rs/issues/1495)\n- Json error: Binary is not supported by JSON when writing checkpoint files [\\#1493](https://github.com/delta-io/delta-rs/issues/1493)\n- \\_last\\_checkpoint size field is incorrect [\\#1468](https://github.com/delta-io/delta-rs/issues/1468)\n- Error when Z Ordering a larger dataset [\\#1459](https://github.com/delta-io/delta-rs/issues/1459)\n- Timestamp parsing issue [\\#1455](https://github.com/delta-io/delta-rs/issues/1455)\n- File options are ignored when writing delta [\\#1444](https://github.com/delta-io/delta-rs/issues/1444)\n- Slack Invite Link No Longer Valid [\\#1425](https://github.com/delta-io/delta-rs/issues/1425)\n- `cleanup_metadata` doesn't remove `.checkpoint.parquet` files [\\#1420](https://github.com/delta-io/delta-rs/issues/1420)\n- The test of reading the data from the blob storage located in Azurite container failed [\\#1415](https://github.com/delta-io/delta-rs/issues/1415)\n- The test of reading the data from the bucket located in Minio container failed [\\#1408](https://github.com/delta-io/delta-rs/issues/1408)\n- Datafusion: unreachable code reached when parsing statistics with missing columns [\\#1374](https://github.com/delta-io/delta-rs/issues/1374)\n- vacuum is very slow on Cloudflare R2 [\\#1366](https://github.com/delta-io/delta-rs/issues/1366)\n\n**Closed issues:**\n\n- Expose Compression Options or WriterProperties for writing to Delta [\\#1469](https://github.com/delta-io/delta-rs/issues/1469)\n- Support out-of-core Z-order using DataFusion [\\#1460](https://github.com/delta-io/delta-rs/issues/1460)\n- Expose Z-order in Python [\\#1442](https://github.com/delta-io/delta-rs/issues/1442)\n\n**Merged pull requests:**\n\n- chore: fix the latest clippy warnings with the newer rustc's [\\#1536](https://github.com/delta-io/delta-rs/pull/1536) ([rtyler](https://github.com/rtyler))\n- docs: show data catalog options in Python API reference [\\#1532](https://github.com/delta-io/delta-rs/pull/1532) ([omkar-foss](https://github.com/omkar-foss))\n- fix: handle nulls in file-level stats [\\#1520](https://github.com/delta-io/delta-rs/pull/1520) ([wjones127](https://github.com/wjones127))\n- feat: add nested struct supports [\\#1519](https://github.com/delta-io/delta-rs/pull/1519) ([haruband](https://github.com/haruband))\n- fix: tiny typo in AggregatedStats [\\#1516](https://github.com/delta-io/delta-rs/pull/1516) ([haruband](https://github.com/haruband))\n- refactor: unify with\\_predicate for delete ops [\\#1512](https://github.com/delta-io/delta-rs/pull/1512) ([Blajda](https://github.com/Blajda))\n- chore: remove deprecated table functions [\\#1511](https://github.com/delta-io/delta-rs/pull/1511) ([roeap](https://github.com/roeap))\n- chore: update datafusion and related crates [\\#1504](https://github.com/delta-io/delta-rs/pull/1504) ([roeap](https://github.com/roeap))\n- feat: implement restore operation [\\#1502](https://github.com/delta-io/delta-rs/pull/1502) ([loleek](https://github.com/loleek))\n- chore: fix mypy failure [\\#1500](https://github.com/delta-io/delta-rs/pull/1500) ([wjones127](https://github.com/wjones127))\n- fix: avoid writing statistics for binary columns to fix JSON error [\\#1498](https://github.com/delta-io/delta-rs/pull/1498) ([ChewingGlass](https://github.com/ChewingGlass))\n- feat\\(rust\\): expose WriterProperties method on RecordBatchWriter and DeltaWriter [\\#1497](https://github.com/delta-io/delta-rs/pull/1497) ([theelderbeever](https://github.com/theelderbeever))\n- feat: add UUID statistics handling [\\#1484](https://github.com/delta-io/delta-rs/pull/1484) ([atefsaw](https://github.com/atefsaw))\n- feat: expose create\\_add to the public [\\#1482](https://github.com/delta-io/delta-rs/pull/1482) ([atefsaw](https://github.com/atefsaw))\n- fix: add `sizeInBytes` to \\_last\\_checkpoint and change `size` to \\# of actions [\\#1477](https://github.com/delta-io/delta-rs/pull/1477) ([cmackenzie1](https://github.com/cmackenzie1))\n- fix\\(python\\): match Field signatures [\\#1463](https://github.com/delta-io/delta-rs/pull/1463) ([guilhem-dvr](https://github.com/guilhem-dvr))\n- feat: handle larger z-order jobs with streaming output and spilling [\\#1461](https://github.com/delta-io/delta-rs/pull/1461) ([wjones127](https://github.com/wjones127))\n- chore: increment python version [\\#1449](https://github.com/delta-io/delta-rs/pull/1449) ([wjones127](https://github.com/wjones127))\n- chore: upgrade to arrow 40 and datafusion 26 [\\#1448](https://github.com/delta-io/delta-rs/pull/1448) ([rtyler](https://github.com/rtyler))\n- feat\\(python\\): expose z-order in Python [\\#1443](https://github.com/delta-io/delta-rs/pull/1443) ([wjones127](https://github.com/wjones127))\n- ci: prune CI/CD pipelines [\\#1433](https://github.com/delta-io/delta-rs/pull/1433) ([roeap](https://github.com/roeap))\n- refactor: remove `LoadCheckpointError` and `ApplyLogError` [\\#1432](https://github.com/delta-io/delta-rs/pull/1432) ([roeap](https://github.com/roeap))\n- feat: update writers to include compression method in file name [\\#1431](https://github.com/delta-io/delta-rs/pull/1431) ([Blajda](https://github.com/Blajda))\n- refactor: move checkpoint and errors into separate module [\\#1430](https://github.com/delta-io/delta-rs/pull/1430) ([roeap](https://github.com/roeap))\n- feat: add z-order optimize [\\#1429](https://github.com/delta-io/delta-rs/pull/1429) ([wjones127](https://github.com/wjones127))\n- fix: casting when data to be written does not match table schema [\\#1427](https://github.com/delta-io/delta-rs/pull/1427) ([Blajda](https://github.com/Blajda))\n- docs: update README.adoc to fix expired Slack link [\\#1426](https://github.com/delta-io/delta-rs/pull/1426) ([dennyglee](https://github.com/dennyglee))\n- chore: remove no-longer-necessary build.rs for Rust bindings [\\#1424](https://github.com/delta-io/delta-rs/pull/1424) ([rtyler](https://github.com/rtyler))\n- chore: remove the delta-checkpoint lambda which I have moved to a new repo [\\#1423](https://github.com/delta-io/delta-rs/pull/1423) ([rtyler](https://github.com/rtyler))\n- refactor: rewrite redundant\\_async\\_block [\\#1422](https://github.com/delta-io/delta-rs/pull/1422) ([cmackenzie1](https://github.com/cmackenzie1))\n- fix: update cleanup regex to include `checkpoint.parquet` files [\\#1421](https://github.com/delta-io/delta-rs/pull/1421) ([cmackenzie1](https://github.com/cmackenzie1))\n- docs: update features table in README [\\#1414](https://github.com/delta-io/delta-rs/pull/1414) ([ognis1205](https://github.com/ognis1205))\n- fix: `get_prune_stats` returns homogenous `ArrayRef` [\\#1413](https://github.com/delta-io/delta-rs/pull/1413) ([cmackenzie1](https://github.com/cmackenzie1))\n- feat: explicit python exceptions [\\#1409](https://github.com/delta-io/delta-rs/pull/1409) ([roeap](https://github.com/roeap))\n- feat: implement update operation [\\#1390](https://github.com/delta-io/delta-rs/pull/1390) ([Blajda](https://github.com/Blajda))\n- feat: allow concurrent file compaction [\\#1383](https://github.com/delta-io/delta-rs/pull/1383) ([wjones127](https://github.com/wjones127))\n\n## [rust-v0.12.0](https://github.com/delta-io/delta-rs/tree/rust-v0.12.0) (2023-05-30)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.11.0...rust-v0.12.0)\n\n**Implemented enhancements:**\n\n- Release delta-rs `0.11.0` \\(next release after `0.10.0`\\)  [\\#1362](https://github.com/delta-io/delta-rs/issues/1362)\n- Support writing statistics for date columns in Rust [\\#1209](https://github.com/delta-io/delta-rs/issues/1209)\n\n**Fixed bugs:**\n\n- Rust writer in operations makes a lot of data copies [\\#1394](https://github.com/delta-io/delta-rs/issues/1394)\n- Unable to read timestamp fields from column statistics [\\#1372](https://github.com/delta-io/delta-rs/issues/1372)\n- Unable to write custom metadata via configuration since version 0.9.0 [\\#1353](https://github.com/delta-io/delta-rs/issues/1353)\n- .get\\_add\\_actions\\(\\) returns wrong column statistics when dataSkippingNumIndexedCols property of the table was changed [\\#1223](https://github.com/delta-io/delta-rs/issues/1223)\n- Ensure decimal statistics are written correctly in Rust [\\#1208](https://github.com/delta-io/delta-rs/issues/1208)\n\n**Merged pull requests:**\n\n- feat: add list\\_with\\_offset to DeltaObjectStore [\\#1410](https://github.com/delta-io/delta-rs/pull/1410) ([ognis1205](https://github.com/ognis1205))\n- chore: type-check friendlier exports [\\#1407](https://github.com/delta-io/delta-rs/pull/1407) ([roeap](https://github.com/roeap))\n- chore: remove ancillary crates from the git tree [\\#1406](https://github.com/delta-io/delta-rs/pull/1406) ([rtyler](https://github.com/rtyler))\n- chore: bump the version for the next release [\\#1405](https://github.com/delta-io/delta-rs/pull/1405) ([rtyler](https://github.com/rtyler))\n- feat: more efficient parquet writer and more statistics [\\#1397](https://github.com/delta-io/delta-rs/pull/1397) ([wjones127](https://github.com/wjones127))\n- perf: improve record batch partitioning [\\#1396](https://github.com/delta-io/delta-rs/pull/1396) ([roeap](https://github.com/roeap))\n- chore: bump datafusion to 25 [\\#1389](https://github.com/delta-io/delta-rs/pull/1389) ([roeap](https://github.com/roeap))\n- refactor!: remove `DeltaDataType` aliases [\\#1388](https://github.com/delta-io/delta-rs/pull/1388) ([cmackenzie1](https://github.com/cmackenzie1))\n- feat: vacuum with concurrent requests [\\#1382](https://github.com/delta-io/delta-rs/pull/1382) ([wjones127](https://github.com/wjones127))\n- feat: add datafusion storage catalog [\\#1381](https://github.com/delta-io/delta-rs/pull/1381) ([roeap](https://github.com/roeap))\n- docs: updated schema.rs to use the right signature for decimal data type in documentation [\\#1377](https://github.com/delta-io/delta-rs/pull/1377) ([rahulj51](https://github.com/rahulj51))\n- fix: delete operation when partition and non partition columns are used [\\#1375](https://github.com/delta-io/delta-rs/pull/1375) ([Blajda](https://github.com/Blajda))\n- fix: add conversion for string for `Field::TimestampMicros` \\(\\#1372\\) [\\#1373](https://github.com/delta-io/delta-rs/pull/1373) ([cmackenzie1](https://github.com/cmackenzie1))\n- fix: allow user defined config keys [\\#1365](https://github.com/delta-io/delta-rs/pull/1365) ([roeap](https://github.com/roeap))\n- ci: disable full debug symbol generation [\\#1364](https://github.com/delta-io/delta-rs/pull/1364) ([roeap](https://github.com/roeap))\n- fix: include stats for all columns \\(\\#1223\\) [\\#1342](https://github.com/delta-io/delta-rs/pull/1342) ([mrjoe7](https://github.com/mrjoe7))\n\n## [rust-v0.11.0](https://github.com/delta-io/delta-rs/tree/rust-v0.11.0) (2023-05-12)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.10.0...rust-v0.11.0)\n\n**Implemented enhancements:**\n\n- Implement simple delete case [\\#832](https://github.com/delta-io/delta-rs/issues/832)\n\n**Merged pull requests:**\n\n- chore: update Rust package version [\\#1346](https://github.com/delta-io/delta-rs/pull/1346) ([rtyler](https://github.com/rtyler))\n- fix: replace deprecated arrow::json::reader::Decoder [\\#1226](https://github.com/delta-io/delta-rs/pull/1226) ([rtyler](https://github.com/rtyler))\n- feat: delete operation [\\#1176](https://github.com/delta-io/delta-rs/pull/1176) ([Blajda](https://github.com/Blajda))\n- feat: add `wasbs` to known schemes [\\#1345](https://github.com/delta-io/delta-rs/pull/1345) ([iajoiner](https://github.com/iajoiner))\n- test: add some missing unit and doc tests for DeltaTablePartition [\\#1341](https://github.com/delta-io/delta-rs/pull/1341) ([rtyler](https://github.com/rtyler))\n- feat: write command improvements [\\#1267](https://github.com/delta-io/delta-rs/pull/1267) ([roeap](https://github.com/roeap))\n- feat: added support for Databricks Unity Catalog [\\#1331](https://github.com/delta-io/delta-rs/pull/1331) ([nohajc](https://github.com/nohajc))\n- fix: double url encode of partition key [\\#1324](https://github.com/delta-io/delta-rs/pull/1324) ([mrjoe7](https://github.com/mrjoe7))\n\n## [rust-v0.10.0](https://github.com/delta-io/delta-rs/tree/rust-v0.10.0) (2023-05-02)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.9.0...rust-v0.10.0)\n\n**Implemented enhancements:**\n\n- Support Optimize on non-append-only tables [\\#1125](https://github.com/delta-io/delta-rs/issues/1125)\n\n**Fixed bugs:**\n\n- DataFusion integration incorrectly handles partition columns defined \"first\" in schema [\\#1168](https://github.com/delta-io/delta-rs/issues/1168)\n- Datafusion: SQL projection returns wrong column for partitioned data [\\#1292](https://github.com/delta-io/delta-rs/issues/1292)\n- Unable to query partitioned tables [\\#1291](https://github.com/delta-io/delta-rs/issues/1291)\n\n**Merged pull requests:**\n\n- chore: add deprecation notices for commit logic on `DeltaTable` [\\#1323](https://github.com/delta-io/delta-rs/pull/1323) ([roeap](https://github.com/roeap))\n- fix: handle local paths on windows [\\#1322](https://github.com/delta-io/delta-rs/pull/1322) ([roeap](https://github.com/roeap))\n- fix: scan partitioned tables with datafusion [\\#1303](https://github.com/delta-io/delta-rs/pull/1303) ([roeap](https://github.com/roeap))\n- fix: allow special characters in storage prefix [\\#1311](https://github.com/delta-io/delta-rs/pull/1311) ([wjones127](https://github.com/wjones127))\n- feat: upgrade to Arrow 37 and Datafusion 23 [\\#1314](https://github.com/delta-io/delta-rs/pull/1314) ([rtyler](https://github.com/rtyler))\n- Hide the parquet/json feature behind our own JSON feature [\\#1307](https://github.com/delta-io/delta-rs/pull/1307) ([rtyler](https://github.com/rtyler))\n- Enable the json feature for the parquet crate [\\#1300](https://github.com/delta-io/delta-rs/pull/1300) ([rtyler](https://github.com/rtyler))\n\n## [rust-v0.9.0](https://github.com/delta-io/delta-rs/tree/rust-v0.9.0) (2023-04-14)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.8.0...rust-v0.9.0)\n\n**Implemented enhancements:**\n\n- hdfs support [\\#300](https://github.com/delta-io/delta-rs/issues/300)\n- Add decimal primitive type to document [\\#1280](https://github.com/delta-io/delta-rs/issues/1280)\n- Improve error message when filtering on non-existant partition columns [\\#1218](https://github.com/delta-io/delta-rs/issues/1218)\n\n**Fixed bugs:**\n\n- Datafusion table provider: issues with timestamp types [\\#441](https://github.com/delta-io/delta-rs/issues/441)\n- Not matching column names when creating a RecordBatch from MapArray [\\#1257](https://github.com/delta-io/delta-rs/issues/1257)\n- All stores created using `DeltaObjectStore::new` have an identical `object_store_url` [\\#1188](https://github.com/delta-io/delta-rs/issues/1188)\n\n**Merged pull requests:**\n\n- Upgrade datafusion to 22 which brings arrow upgrades with it [\\#1249](https://github.com/delta-io/delta-rs/pull/1249) ([rtyler](https://github.com/rtyler))\n- chore: df / arrow changes after update [\\#1288](https://github.com/delta-io/delta-rs/pull/1288) ([roeap](https://github.com/roeap))\n- feat: read schema from parquet files in datafusion scans [\\#1266](https://github.com/delta-io/delta-rs/pull/1266) ([roeap](https://github.com/roeap))\n- HDFS storage support via datafusion-objectstore-hdfs [\\#1279](https://github.com/delta-io/delta-rs/pull/1279) ([iajoiner](https://github.com/iajoiner))\n- Add description of decimal primitive to SchemaDataType [\\#1281](https://github.com/delta-io/delta-rs/pull/1281) ([ognis1205](https://github.com/ognis1205))\n- Fix names and nullability when creating RecordBatch from MapArray [\\#1258](https://github.com/delta-io/delta-rs/pull/1258) ([balbok0](https://github.com/balbok0))\n- Simplify the Store Backend Configuration code [\\#1265](https://github.com/delta-io/delta-rs/pull/1265) ([mrjoe7](https://github.com/mrjoe7))\n- feat: optimistic transaction protocol [\\#632](https://github.com/delta-io/delta-rs/pull/632) ([roeap](https://github.com/roeap))\n- Write support for additional Arrow datatypes [\\#1044](https://github.com/delta-io/delta-rs/pull/1044)([chitralverma](https://github.com/chitralverma))\n- Unique delta object store url [\\#1212](https://github.com/delta-io/delta-rs/pull/1212) ([gruuya](https://github.com/gruuya))\n- improve err msg on use of non-partitioned column [\\#1221](https://github.com/delta-io/delta-rs/pull/1221) ([marijncv](https://github.com/marijncv))\n\n## [rust-v0.8.0](https://github.com/delta-io/delta-rs/tree/rust-v0.8.0) (2023-03-10)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.7.0...rust-v0.8.0)\n\n**Implemented enhancements:**\n\n- feat(rust): support additional types for partition values [\\#1170](https://github.com/delta-io/delta-rs/issues/1170)\n\n**Fixed bugs:**\n\n- File pruning does not occur on partition columns [\\#1175](https://github.com/delta-io/delta-rs/issues/1175)\n- Bug: Error loading Delta table locally [\\#1157](https://github.com/delta-io/delta-rs/issues/1157)\n- Deltalake 0.7.0 with s3 feature compliation error due to rusoto_dynamodb version conflict [\\#1191](https://github.com/delta-io/delta-rs/issues/1191)\n- Writing from a Delta table scan using WriteBuilder fails due to missing object store [\\#1186](https://github.com/delta-io/delta-rs/issues/1186)\n\n**Merged pull requests:**\n\n- build(deps): bump datafusion [\\#1217](https://github.com/delta-io/delta-rs/pull/1217) ([roeap](https://github.com/roeap))\n- Implement pruning on partition columns [\\#1179](https://github.com/delta-io/delta-rs/pull/1179) ([Blajda](https://github.com/Blajda))\n- feat: enable passing storage options to Delta table builder via Datafusion's CREATE EXTERNAL TABLE [\\#1043](https://github.com/delta-io/delta-rs/pull/1043) ([gruuya](https://github.com/gruuya))\n- feat: typed commit info [\\#1207](https://github.com/delta-io/delta-rs/pull/1207) ([roeap](https://github.com/roeap))\n- add boolean, date, timestamp & binary partition types [\\#1180](https://github.com/delta-io/delta-rs/pull/1180) ([marijncv](https://github.com/marijncv))\n- feat: extend configuration handling [\\#1206](https://github.com/delta-io/delta-rs/pull/1206) ([marijncv](https://github.com/marijncv))\n- fix: load command for local tables [\\#1205](https://github.com/delta-io/delta-rs/pull/1205) ([roeap](https://github.com/roeap))\n- Enable passing Datafusion session state to WriteBuilder [\\#1187](https://github.com/delta-io/delta-rs/pull/1187) ([gruuya](https://github.com/gruuya))\n- chore: increment dynamodb_lock version [\\#1202](https://github.com/delta-io/delta-rs/pull/1202) ([wjones127](https://github.com/wjones127))\n- fix: update out-of-date doc about datafusion [\\#1183](https://github.com/delta-io/delta-rs/pull/1183) ([xudong963](https://github.com/xudong963))\n- feat: move and update Optimize operation [\\#1154](https://github.com/delta-io/delta-rs/pull/1154) ([roeap](https://github.com/roeap))\n- add test for extract_partition_values [\\#1159](https://github.com/delta-io/delta-rs/pull/1159) ([marijncv](https://github.com/marijncv))\n- fix typo [\\#1166](https://github.com/delta-io/delta-rs/pull/1166) ([spebern](https://github.com/spebern))\n- chore: remove star dependencies [\\#1139](https://github.com/delta-io/delta-rs/pull/1139) ([wjones127](https://github.com/wjones127))\n\n## [rust-v0.7.0](https://github.com/delta-io/delta-rs/tree/rust-v0.7.0) (2023-02-11)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.6.0...rust-v0.7.0)\n\n**Implemented enhancements:**\n\n- Support FSCK REPAIR TABLE Operation [\\#1092](https://github.com/delta-io/delta-rs/issues/1092)\n- Expose the Delta Log in a DataFrame that's easy for analysis [\\#1031](https://github.com/delta-io/delta-rs/issues/1031)\n- Provide case-insensitive storage options in backend [\\#999](https://github.com/delta-io/delta-rs/issues/999)\n- Support local file path in CreateBuilder::with\\_location\\(\\) [\\#998](https://github.com/delta-io/delta-rs/issues/998)\n- Save operational params in the same way with delta io [\\#1054](https://github.com/delta-io/delta-rs/pull/1054) ([ismoshkov](https://github.com/ismoshkov))\n\n**Fixed bugs:**\n\n- DeltaTable DataFusion TableProvider does not support filter pushdown [\\#1064](https://github.com/delta-io/delta-rs/issues/1064)\n- DeltaTable DataFusion scan does not prune files properly [\\#1063](https://github.com/delta-io/delta-rs/issues/1063)\n- deltalake.DeltaTable constructor hangs in Jupyter [\\#1093](https://github.com/delta-io/delta-rs/issues/1093)\n- Transaction log JSON formatting issue when writing data via Python bindings [\\#1017](https://github.com/delta-io/delta-rs/issues/1017)\n- crates.io entry is missing link to rustdoc documentation [\\#1076](https://github.com/delta-io/delta-rs/issues/1076)\n- URL Registered with ObjectStore registry is different from url in DeltaScan  [\\#1018](https://github.com/delta-io/delta-rs/issues/1018)\n- Not able to connect to Azure Storage with client id/secret [\\#977](https://github.com/delta-io/delta-rs/issues/977)\n- Deltalake 0.5 crate s3 feature dynamodb version mismatch [\\#973](https://github.com/delta-io/delta-rs/issues/973)\n- Overwrite mode does not work with Azure [\\#939](https://github.com/delta-io/delta-rs/issues/939)\n- Use Chrono without default  features [\\#914](https://github.com/delta-io/delta-rs/issues/914)\n- `cargo test` does not run due to tls conflict [\\#985](https://github.com/delta-io/delta-rs/issues/985)\n- Azure SAS authorization fails with `<AuthenticationErrorDetail>Signature fields not well formed.` [\\#910](https://github.com/delta-io/delta-rs/issues/910)\n\n**Merged pull requests:**\n\n- Make rustls default across all packages [\\#1097](https://github.com/delta-io/delta-rs/pull/1097) ([wjones127](https://github.com/wjones127))\n- Implement filesystem check [\\#1103](https://github.com/delta-io/delta-rs/pull/1103) ([Blajda](https://github.com/Blajda))\n- refactor: move vacuum command to operations module [\\#1045](https://github.com/delta-io/delta-rs/pull/1045) ([roeap](https://github.com/roeap))\n- feat: enable passing storage options to Delta table builder via DataFusion's CREATE EXTERNAL TABLE [\\#1043](https://github.com/delta-io/delta-rs/pull/1043) ([gruuya](https://github.com/gruuya))\n- feat: improve storage location handling [\\#1065](https://github.com/delta-io/delta-rs/pull/1065) ([roeap](https://github.com/roeap))\n- Fix to support UTC timezone [\\#1022](https://github.com/delta-io/delta-rs/pull/1022) ([andrei-ionescu](https://github.com/andrei-ionescu))\n- feat: harmonize and simplify storage configuration [\\#1052](https://github.com/delta-io/delta-rs/pull/1052) ([roeap](https://github.com/roeap))\n- feat: expose function to get table of add actions [\\#1033](https://github.com/delta-io/delta-rs/pull/1033) ([wjones127](https://github.com/wjones127))\n- fix: change unexpected field logging level to debug [\\#1112](https://github.com/delta-io/delta-rs/pull/1112) ([houqp](https://github.com/houqp))\n- fix: datafusion predicate pushdown and dependencies [\\#1071](https://github.com/delta-io/delta-rs/pull/1071) ([roeap](https://github.com/roeap))\n- fix: azure sas key url encoding [\\#1036](https://github.com/delta-io/delta-rs/pull/1036) ([roeap](https://github.com/roeap))\n- Add provisional workaround to support CDC \\#1039 [\\#1042](https://github.com/delta-io/delta-rs/pull/1042) ([Fazzani](https://github.com/Fazzani))\n- improve debuggability of json ser/de errors [\\#1119](https://github.com/delta-io/delta-rs/pull/1119) ([houqp](https://github.com/houqp))\n- Add an example of writing to a delta table with a RecordBatch [\\#1085](https://github.com/delta-io/delta-rs/pull/1085) ([rtyler](https://github.com/rtyler))\n- minor: optimize partition lookup for vacuum loop [\\#1120](https://github.com/delta-io/delta-rs/pull/1120) ([houqp](https://github.com/houqp))\n- Add missing documentation metadata to Cargo.toml [\\#1077](https://github.com/delta-io/delta-rs/pull/1077) ([johnbatty](https://github.com/johnbatty))\n- add test for null\\_count\\_schema\\_for\\_fields [\\#1135](https://github.com/delta-io/delta-rs/pull/1135) ([marijncv](https://github.com/marijncv))\n- add test for min\\_max\\_schema\\_for\\_fields [\\#1122](https://github.com/delta-io/delta-rs/pull/1122) ([marijncv](https://github.com/marijncv))\n- add test for get\\_boolean\\_from\\_metadata [\\#1121](https://github.com/delta-io/delta-rs/pull/1121) ([marijncv](https://github.com/marijncv))\n- add test for left\\_larger\\_than\\_right [\\#1110](https://github.com/delta-io/delta-rs/pull/1110) ([marijncv](https://github.com/marijncv))\n- Add test for: to\\_scalar\\_value [\\#1086](https://github.com/delta-io/delta-rs/pull/1086) ([marijncv](https://github.com/marijncv))\n- Fix typo in delta-inspect [\\#1072](https://github.com/delta-io/delta-rs/pull/1072) ([byteink](https://github.com/byteink))\n- chore: update datafusion [\\#1114](https://github.com/delta-io/delta-rs/pull/1114) ([roeap](https://github.com/roeap))\n\n## [rust-v0.6.0](https://github.com/delta-io/delta-rs/tree/rust-v0.6.0) (2022-12-16)\n\n[Full Changelog](https://github.com/delta-io/delta-rs/compare/rust-v0.5.0...rust-v0.6.0)\n\n**Implemented enhancements:**\n\n- Support Apache Arrow DataFusion 15 [\\#1020](https://github.com/delta-io/delta-rs/issues/1020)\n- Python package: Loosen version requirements for maturin [\\#1004](https://github.com/delta-io/delta-rs/issues/1004)\n- Remove `Cargo.lock` from library crates and add `Cargo.lock` to binary ones [\\#1000](https://github.com/delta-io/delta-rs/issues/1000)\n- More frequent Rust releases [\\#969](https://github.com/delta-io/delta-rs/issues/969)\n- Thoughts on adding read\\_delta to pandas [\\#869](https://github.com/delta-io/delta-rs/issues/869)\n- Add the support of the AWS\\_PROFILE environment variable for S3 [\\#986](https://github.com/delta-io/delta-rs/pull/986) ([fvaleye](https://github.com/fvaleye))\n\n**Fixed bugs:**\n\n- Azure SAS signatures ending in \"=\" don't work [\\#1003](https://github.com/delta-io/delta-rs/issues/1003)\n- Fail to compile deltalake crate, need to update dynamodb\\_lock in crates.io [\\#1002](https://github.com/delta-io/delta-rs/issues/1002)\n- error reading delta table to pandas: runtime dropped the dispatch task [\\#975](https://github.com/delta-io/delta-rs/issues/975)\n- MacOS arm64 wheels are generated incorrectly [\\#972](https://github.com/delta-io/delta-rs/issues/972)\n- Overwrite creates new file [\\#960](https://github.com/delta-io/delta-rs/issues/960)\n- The written delta file has corrupted structure [\\#956](https://github.com/delta-io/delta-rs/issues/956)\n- Write mode doesn't work with Azure storage [\\#955](https://github.com/delta-io/delta-rs/issues/955)\n- Python: We don't error on reader protocol v2 [\\#886](https://github.com/delta-io/delta-rs/issues/886)\n- Cannot open a deltatable in S3 using AWS\\_PROFILE based credentials from a local machine [\\#855](https://github.com/delta-io/delta-rs/issues/855)\n\n**Merged pull requests:**\n\n- Support DataFusion 15 [\\#1021](https://github.com/delta-io/delta-rs/pull/1021) ([andrei-ionescu](https://github.com/andrei-ionescu))\n- fix truncating signature on SAS [\\#1007](https://github.com/delta-io/delta-rs/pull/1007) ([damiondoesthings](https://github.com/damiondoesthings))\n- Loosen version requirement for maturin [\\#1005](https://github.com/delta-io/delta-rs/pull/1005) ([gyscos](https://github.com/gyscos))\n- Update `.gitignore` and add/remove `Cargo.lock` when appropriate [\\#1001](https://github.com/delta-io/delta-rs/pull/1001) ([iajoiner](https://github.com/iajoiner))\n- fix: get azure client secret from config [\\#981](https://github.com/delta-io/delta-rs/pull/981) ([roeap](https://github.com/roeap))\n- feat: check invariants in write command [\\#980](https://github.com/delta-io/delta-rs/pull/980) ([roeap](https://github.com/roeap))\n- Add a new release github action for Python binding: macos with universal2 wheel [\\#976](https://github.com/delta-io/delta-rs/pull/976) ([fvaleye](https://github.com/fvaleye))\n- Bump version of the Python binding to 0.6.4 [\\#970](https://github.com/delta-io/delta-rs/pull/970) ([fvaleye](https://github.com/fvaleye))\n- Handle pandas timestamps [\\#958](https://github.com/delta-io/delta-rs/pull/958) ([hayesgb](https://github.com/hayesgb))\n- test\\(python\\): add azure integration tests [\\#912](https://github.com/delta-io/delta-rs/pull/912) ([wjones127](https://github.com/wjones127))\n\n\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.271484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at rtyler@brokenco.de. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.376953125,
          "content": "# Contributing to delta-rs\n\nDevelopment on this project is mostly driven by volunteer contributors. We welcome new contributors, including not only those who develop new features, but also those who are able to help with documentation and provide detailed bug reports.\n\nPlease take note of our [code of conduct](CODE_OF_CONDUCT.md).\n\nIf you want to start contributing, first look at our good first issues: https://github.com/delta-io/delta-rs/contribute\n\nIf you want to contribute something more substantial, see our \"Projects seeking contributors\" section on our roadmap: https://github.com/delta-io/delta-rs/issues/1128\n\n## Claiming an issue\n\nIf you want to claim an issue to work on, you can write the word `take` as a comment in it and you will be automatically assigned.\n\n## Quick start\n\n- Install Rust, e.g. as described [here](https://doc.rust-lang.org/cargo/getting-started/installation.html)\n- Have a compatible Python version installed (check `python/pyproject.toml` for current requirement)\n- Create a Python virtual environment (required for development builds), e.g. as described [here](https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/)\n    ```sh\n    python -m venv .venv\n    ```\n\n- Build the project for development (this requires an active virtual environment and will also install `deltalake` in that virtual environment. [Uv](https://github.com/astral-sh/uv) packet manager needs to be installed)\n    ```sh\n    cd python\n    make develop\n    ```\n\n- Run some Python code, e.g. to run a specific test\n    ```sh\n    python -m pytest tests/test_writer.py -s -k \"test_with_deltalake_schema\"\n    ```\n\n- Run some Rust code, e.g. run an example\n    ```sh\n    cd crates/deltalake\n    cargo run --example basic_operations --features=\"datafusion\"\n    ```\n\n## Run the docs locally\n*This serves your local contents of docs via a web browser, handy for checking what they look like if you are making changes to docs or docstings*\n\n```sh\n(cd python; make develop)\npip install -r docs/requirements.txt\nmkdocs serve\n```\n\n## To make a pull request (PR)\nMake sure all the following steps run/pass locally before submitting a PR\n\n```sh\ncargo fmt -- --check\ncd python\nmake check-rust\nmake check-python\nmake develop\nmake unit-test\nmake build-docs\n```\n\n## Developing in VSCode\n\n*These are just some basic steps/components to get you started, there are many other very useful extensions for VSCode*\n\n- For a better Rust development experience, install [rust extention](https://marketplace.visualstudio.com/items?itemName=1YiB.rust-bundle)\n- For debugging Rust code, install [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb). The extension should even create Debug launch configurations for the project if you allow it, an easy way to get started. Just set a breakpoint and run the relevant configuration.\n- For debugging from Python into Rust, follow this procedure:\n1. Add this to `.vscode/launch.json`\n```json\n{\n            \"type\": \"lldb\",\n            \"request\": \"attach\",\n            \"name\": \"LLDB Attach to Python'\",\n            \"program\": \"${command:python.interpreterPath}\",\n            \"pid\": \"${command:pickMyProcess}\",\n            \"args\": [],\n            \"stopOnEntry\": false,\n            \"environment\": [],\n            \"externalConsole\": true,\n            \"MIMode\": \"lldb\",\n            \"cwd\": \"${workspaceFolder}\"\n        }\n```\n2. Add a `breakpoint()` statement somewhere in your Python code (main function or at any point in Python code you know will be executed when you run it)\n3. Add a breakpoint in Rust code in VSCode editor where you want to drop into the debugger\n4. Run the relevant Python code function in your terminal, execution should drop into the Python debugger showing `PDB` prompt\n5. Run the following in that promt to get the Python process ID: `import os; os.getpid()`\n6. Run the `LLDB Attach to Python` from the `Run and Debug` panel of VSCode. This will prompt you for a Process ID to attach to, enter the Python process ID obtained earlier (this will also be in the dropdown but that dropdown will have many process IDs)\n7. LLDB make take couple of seconds to attach to the process\n8. When the debugger is attached to the process (you will notice the debugger panels get filled with extra info), enter `c`+Enter in the `PDB` prompt in your terminal - the execution should continue until the breakpoint in Rust code is hit. From this point it's a standard debugging procecess.\n\n\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.306640625,
          "content": "[workspace]\nmembers = [\"crates/*\", \"delta-inspect\", \"python\"]\nexclude = [\"proofs\"]\nresolver = \"2\"\n\n[workspace.package]\nauthors = [\"Qingping Hou <dave2008713@gmail.com>\"]\nrust-version = \"1.81\"\nkeywords = [\"deltalake\", \"delta\", \"datalake\"]\nreadme = \"README.md\"\nedition = \"2021\"\ndescription = \"Native Delta Lake implementation in Rust\"\nhomepage = \"https://github.com/delta-io/delta.rs\"\nlicense = \"Apache-2.0\"\ndocumentation = \"https://docs.rs/deltalake\"\nrepository = \"https://github.com/delta-io/delta.rs\"\n\n[profile.release-with-debug]\ninherits = \"release\"\ndebug = true\n\n# Reducing the debuginfo for the test profile in order to trim the disk and RAM\n# usage during development\n# <https://github.com/delta-io/delta-rs/issues/1550?\n[profile.test]\ndebug = \"line-tables-only\"\n\n[workspace.dependencies]\ndelta_kernel = { version = \"=0.6.0\", features = [\"default-engine\"] }\n#delta_kernel = { path = \"../delta-kernel-rs/kernel\", features = [\"sync-engine\"]  }\n\n# arrow\narrow = { version = \"53\" }\narrow-arith = { version = \"53\" }\narrow-array = { version = \"53\", features = [\"chrono-tz\"] }\narrow-buffer = { version = \"53\" }\narrow-cast = { version = \"53\" }\narrow-ipc = { version = \"53\" }\narrow-json = { version = \"53\" }\narrow-ord = { version = \"53\" }\narrow-row = { version = \"53\" }\narrow-schema = { version = \"53\" }\narrow-select = { version = \"53\" }\nobject_store = { version = \"0.11.2\" }\nparquet = { version = \"53\" }\n\n# datafusion\ndatafusion = { version = \"44\" }\ndatafusion-expr = { version = \"44\" }\ndatafusion-common = { version = \"44\" }\ndatafusion-ffi = { version = \"44\" }\ndatafusion-functions = { version = \"44\" }\ndatafusion-functions-aggregate = { version = \"44\" }\ndatafusion-physical-expr = { version = \"44\" }\ndatafusion-physical-plan = { version = \"44\" }\ndatafusion-proto = { version = \"44\" }\ndatafusion-sql = { version = \"44\" }\n\n# serde\nserde = { version = \"1.0.194\", features = [\"derive\"] }\nserde_json = \"1\"\nstrum = { version = \"*\"}\n\n\n# \"stdlib\"\nbytes = { version = \"1\" }\nchrono = { version = \">0.4.34\", default-features = false, features = [\"clock\"] }\ntracing = { version = \"0.1\", features = [\"log\"] }\nregex = { version = \"1\" }\nthiserror = { version = \"2\" }\nurl = { version = \"2\" }\nurlencoding = \"2.1.3\"\nuuid = { version = \"1\" }\n\n# runtime / async\nasync-trait = { version = \"0.1\" }\nfutures = { version = \"0.3\" }\ntokio = { version = \"1\" }\nnum_cpus = { version = \"1\" }\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 10.0166015625,
          "content": "Copyright (2020) QP Hou and a number of other contributors.  All rights reserved.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.755859375,
          "content": "<p align=\"center\">\n  <a href=\"https://delta.io/\">\n    <img src=\"https://github.com/delta-io/delta-rs/blob/main/docs\\delta-rust-no-whitespace.svg?raw=true\" alt=\"delta-rs logo\" height=\"200\">\n  </a>\n</p>\n<p align=\"center\">\n  A native Rust library for Delta Lake, with bindings to Python\n  <br>\n  <a href=\"https://delta-io.github.io/delta-rs/\">Python docs</a>\n  ·\n  <a href=\"https://docs.rs/deltalake/latest/deltalake/\">Rust docs</a>\n  ·\n  <a href=\"https://github.com/delta-io/delta-rs/issues/new?template=bug_report.md\">Report a bug</a>\n  ·\n  <a href=\"https://github.com/delta-io/delta-rs/issues/new?template=feature_request.md\">Request a feature</a>\n  ·\n  <a href=\"https://github.com/delta-io/delta-rs/issues/1128\">Roadmap</a>\n  <br>\n  <br>\n  <a href=\"https://pypi.python.org/pypi/deltalake\">\n    <img alt=\"Deltalake\" src=\"https://img.shields.io/pypi/l/deltalake.svg?style=flat-square&color=00ADD4&logo=apache\">\n  </a>\n  <a target=\"_blank\" href=\"https://github.com/delta-io/delta-rs\" style=\"background:none\">\n    <img src=\"https://img.shields.io/github/stars/delta-io/delta-rs?logo=github&color=F75101\">\n  </a>\n  <a target=\"_blank\" href=\"https://crates.io/crates/deltalake\" style=\"background:none\">\n    <img alt=\"Crate\" src=\"https://img.shields.io/crates/v/deltalake.svg?style=flat-square&color=00ADD4&logo=rust\" >\n  </a>\n  <a href=\"https://pypi.python.org/pypi/deltalake\">\n    <img alt=\"Deltalake\" src=\"https://img.shields.io/pypi/v/deltalake.svg?style=flat-square&color=F75101&logo=pypi\" >\n  </a>\n  <a href=\"https://pypi.python.org/pypi/deltalake\">\n    <img alt=\"Deltalake\" src=\"https://img.shields.io/pypi/pyversions/deltalake.svg?style=flat-square&color=00ADD4&logo=python\">\n  </a>\n  <a target=\"_blank\" href=\"https://go.delta.io/slack\">\n    <img alt=\"#delta-rs in the Delta Lake Slack workspace\" src=\"https://img.shields.io/badge/slack-delta-blue.svg?logo=slack&style=flat-square&color=F75101\">\n  </a>\n</p>\nDelta Lake is an open-source storage format that runs on top of existing data lakes. Delta Lake is compatible with processing engines like Apache Spark and provides benefits such as ACID transaction guarantees, schema enforcement, and scalable data handling.\n\nThe Delta Lake project aims to unlock the power of the Deltalake for as many users and projects as possible\nby providing native low-level APIs aimed at developers and integrators, as well as a high-level operations\nAPI that lets you query, inspect, and operate your Delta Lake with ease.\n\n| Source                  | Downloads                         | Installation Command    | Docs            |\n| ----------------------- | --------------------------------- | ----------------------- | --------------- |\n| **[PyPi][pypi]**        | [![Downloads][pypi-dl]][pypi]     | `pip install deltalake` | [Docs][py-docs] |\n| **[Crates.io][crates]** | [![Downloads][crates-dl]][crates] | `cargo add deltalake`   | [Docs][rs-docs] |\n\n[pypi]: https://pypi.org/project/deltalake/\n[pypi-dl]: https://img.shields.io/pypi/dm/deltalake?style=flat-square&color=00ADD4\n[py-docs]: https://delta-io.github.io/delta-rs/\n[rs-docs]: https://docs.rs/deltalake/latest/deltalake/\n[crates]: https://crates.io/crates/deltalake\n[crates-dl]: https://img.shields.io/crates/d/deltalake?color=F75101\n\n## Table of contents\n\n- [Quick Start](#quick-start)\n- [Get Involved](#get-involved)\n- [Integrations](#integrations)\n- [Features](#features)\n\n## Quick Start\n\nThe `deltalake` library aims to adopt patterns from other libraries in data processing,\nso getting started should look familiar.\n\n```py3\nfrom deltalake import DeltaTable, write_deltalake\nimport pandas as pd\n\n# write some data into a delta table\ndf = pd.DataFrame({\"id\": [1, 2], \"value\": [\"foo\", \"boo\"]})\nwrite_deltalake(\"./data/delta\", df)\n\n# Load data from the delta table\ndt = DeltaTable(\"./data/delta\")\ndf2 = dt.to_pandas()\n\nassert df.equals(df2)\n```\n\nThe same table can also be loaded using the core Rust crate:\n\n```rs\nuse deltalake::{open_table, DeltaTableError};\n\n#[tokio::main]\nasync fn main() -> Result<(), DeltaTableError> {\n    // open the table written in python\n    let table = open_table(\"./data/delta\").await?;\n\n    // show all active files in the table\n    let files: Vec<_> = table.get_file_uris()?.collect();\n    println!(\"{:?}\", files);\n\n    Ok(())\n}\n```\n\nYou can also try Delta Lake docker at [DockerHub](https://go.delta.io/dockerhub) | [Docker Repo](https://go.delta.io/docker)\n\n## Get Involved\n\nWe encourage you to reach out, and are [committed](https://github.com/delta-io/delta-rs/blob/main/CODE_OF_CONDUCT.md)\nto provide a welcoming community.\n\n- [Join us in our Slack workspace](https://go.delta.io/slack)\n- [Report an issue](https://github.com/delta-io/delta-rs/issues/new?template=bug_report.md)\n- Looking to contribute? See our [good first issues](https://github.com/delta-io/delta-rs/contribute).\n\n## Integrations\n\nLibraries and frameworks that interoperate with delta-rs - in alphabetical order.\n\n- [AWS SDK for Pandas](https://github.com/aws/aws-sdk-pandas)\n- [ballista][ballista]\n- [datafusion][datafusion]\n- [Daft](https://www.getdaft.io/)\n- [Dask](https://github.com/dask-contrib/dask-deltatable)\n- [datahub](https://datahubproject.io/)\n- [DuckDB](https://duckdb.org/)\n- [polars](https://www.pola.rs/)\n- [Ray](https://github.com/delta-incubator/deltaray)\n\n## Features\n\nThe following section outlines some core features like supported [storage backends](#cloud-integrations)\nand [operations](#supported-operations) that can be performed against tables. The state of implementation\nof features outlined in the Delta [protocol][protocol] is also [tracked](#protocol-support-level).\n\n### Cloud Integrations\n\n| Storage              |  Rust   | Python  | Comment                                                          |\n| -------------------- | :-----: | :-----: | ---------------------------------------------------------------- |\n| Local                | ![done] | ![done] |                                                                  |\n| S3 - AWS             | ![done] | ![done] |                                                                  |\n| S3 - MinIO           | ![done] | ![done] |                                                                  |\n| S3 - R2              | ![done] | ![done] |                                                                  |\n| Azure Blob           | ![done] | ![done] |                                                                  |\n| Azure ADLS Gen2      | ![done] | ![done] |                                                                  |\n| Microsoft OneLake    | ![done] | ![done] |                                                                  |\n| Google Cloud Storage | ![done] | ![done] |                                                                  |\n| HDFS                 | ![done] | ![done] |                                                                  |\n| LakeFS               | ![done] | ![done] |   Python: Rust engine writer only supported                      |\n\n### Supported Operations\n\n| Operation             |  Rust   | Python  | Description                                 |\n| --------------------- | :-----: | :-----: | ------------------------------------------- |\n| Create                | ![done] | ![done] | Create a new table                          |\n| Read                  | ![done] | ![done] | Read data from a table                      |\n| Vacuum                | ![done] | ![done] | Remove unused files and log entries         |\n| Delete - predicates   | ![done] | ![done] | Delete data based on a predicate            |\n| Optimize - compaction | ![done] | ![done] | Harmonize the size of data file             |\n| Optimize - Z-order    | ![done] | ![done] | Place similar data into the same file       |\n| Merge                 | ![done] | ![done] | Merge a target Delta table with source data |\n| Update                | ![done] | ![done] | Update values from a table                  |\n| Add Column            | ![done] | ![done] | Add new columns or nested fields            |\n| Add Feature           | ![done] | ![done] | Enable delta table features                 |\n| Add Constraints       | ![done] | ![done] | Set delta constraints, to verify data on write |\n| Drop Constraints      | ![done] | ![done] | Removes delta constraints                   |\n| Set Table Properties  | ![done] | ![done] | Set delta table properties                  |\n| Convert to Delta      | ![done] | ![done] | Convert parquet table to delta table        |\n| FS check              | ![done] | ![done] | Remove corrupted files from table           |\n| Restore               | ![done] | ![done] | Restores table to previous version state    |\n\n### Protocol Support Level\n\n| Writer Version | Requirement                                   |              Status               |\n| -------------- | --------------------------------------------- | :-------------------------------: |\n| Version 2      | Append Only Tables                            |              ![done]              |\n| Version 2      | Column Invariants                             |              ![done]              |\n| Version 3      | Enforce `delta.checkpoint.writeStatsAsJson`   |       [![open]][writer-rs]        |\n| Version 3      | Enforce `delta.checkpoint.writeStatsAsStruct` |       [![open]][writer-rs]        |\n| Version 3      | CHECK constraints                             | [![done]][check-constraints]      |\n| Version 4      | Change Data Feed                              |              ![done]              |\n| Version 4      | Generated Columns                             |                                   |\n| Version 5      | Column Mapping                                |                                   |\n| Version 6      | Identity Columns                              |                                   |\n| Version 7      | Table Features                                |              ![done]              |\n\n| Reader Version | Requirement                         |   Status   |\n| -------------- | ----------------------------------- |   ------   |\n| Version 2      | Column Mapping                      |            |\n| Version 3      | Table Features (requires reader V7) |  ![done]   |\n\n[datafusion]: https://github.com/apache/arrow-datafusion\n[ballista]: https://github.com/apache/arrow-ballista\n[polars]: https://github.com/pola-rs/polars\n[open]: https://cdn.jsdelivr.net/gh/Readme-Workflows/Readme-Icons@main/icons/octicons/IssueNeutral.svg\n[semi-done]: https://cdn.jsdelivr.net/gh/Readme-Workflows/Readme-Icons@main/icons/octicons/ApprovedChangesGrey.svg\n[done]: https://cdn.jsdelivr.net/gh/Readme-Workflows/Readme-Icons@main/icons/octicons/ApprovedChanges.svg\n[roadmap]: https://github.com/delta-io/delta-rs/issues/1128\n[writer-rs]: https://github.com/delta-io/delta-rs/issues/851\n[check-constraints]: https://github.com/delta-io/delta-rs/issues/1881\n[onelake-rs]: https://github.com/delta-io/delta-rs/issues/1418\n[protocol]: https://github.com/delta-io/delta/blob/master/PROTOCOL.md\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "delta-inspect",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-lakefs.yml",
          "type": "blob",
          "size": 1.337890625,
          "content": "services:\n  lakefs:\n    image: docker.io/treeverse/lakefs:1.48\n    ports:\n      - \"8000:8000\"\n    environment:\n      - LAKEFS_DATABASE_TYPE=local\n      - LAKEFS_BLOCKSTORE_TYPE=local\n      - LAKEFS_AUTH_ENCRYPT_SECRET_KEY=some random secret string\n      - LAKEFS_LOGGING_LEVEL=INFO\n      - LAKEFS_STATS_ENABLED=${LAKEFS_STATS_ENABLED:-1}\n      - LAKEFS_INSTALLATION_USER_NAME=delta\n      - LAKEFS_INSTALLATION_ACCESS_KEY_ID=LAKEFSID\n      - LAKECTL_CREDENTIALS_ACCESS_KEY_ID=LAKEFSID\n      - LAKEFS_INSTALLATION_SECRET_ACCESS_KEY=LAKEFSKEY\n      - LAKECTL_CREDENTIALS_SECRET_ACCESS_KEY=LAKEFSKEY\n      - LAKECTL_SERVER_ENDPOINT_URL=http://localhost:8000\n    entrypoint: [\"/bin/sh\", \"-c\"]\n    command:\n        - |\n          lakefs run --local-settings &\n          echo \"---- Creating repository ----\"\n          wait-for -t 60 lakefs:8000 -- lakectl repo create lakefs://bronze local://bronze || true\n          echo \"\"\n          echo \"lakeFS Web UI: http://127.0.0.1:8000/      >(.＿.)<\"\n          echo \"                                             (  )_ \"\n          echo \"\"\n          echo \"                Access Key ID    : $$LAKEFS_INSTALLATION_ACCESS_KEY_ID\"\n          echo \"                Secret Access Key: $$LAKEFS_INSTALLATION_SECRET_ACCESS_KEY\"\n          echo \"\"\n          echo \"-------- Let's go and have axolotl fun! --------\"\n          echo \"\"\n          wait"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.7880859375,
          "content": "version: \"3.9\"\nservices:\n  localstack:\n    image: localstack/localstack:0.14\n    ports:\n      - 4566:4566\n      - 8080:8080\n    environment:\n      - SERVICES=s3,dynamodb\n      - DEBUG=1\n      - DATA_DIR=/tmp/localstack/data\n      - PORT_WEB_UI=8080\n      - DOCKER_HOST=unix:///var/run/docker.sock\n      - HOST_TMP_FOLDER=${TMPDIR}\n      - AWS_ACCESS_KEY_ID=deltalake\n      - AWS_SECRET_ACCESS_KEY=weloverust\n    healthcheck:\n      test: [ \"CMD\", \"curl\", \"-f\", \"http://localhost:4566/health\" ]\n\n  fake-gcs:\n    # Custom image - see fsouza/fake-gcs-server#1164\n    image: tustvold/fake-gcs-server\n    command: [\"-scheme\", \"http\", \"-public-host\", \"localhost:4443\", \"-backend\", \"memory\"]\n    ports:\n      - 4443:4443\n\n  azurite:\n    image: mcr.microsoft.com/azure-storage/azurite\n    ports:\n      - 10000:10000\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 5.400390625,
          "content": "site_name: Delta Lake Documentation\nsite_url: https://github.com/delta-io/delta-rs\nrepo_url: https://github.com/delta-io/delta-rs\nrepo_name: delta-io/delta-rs\n\ntheme:\n  name: material\n  logo: delta-rust-no-whitespace.svg\n  favicon: delta-rust-no-whitespace.svg\n\n  palette:\n    # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      primary: indigo\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: indigo\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: indigo\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n  locale: en\n  navigation_depth: 3\n  features:\n    - navigation.tracking\n    - navigation.instant\n    - navigation.expand\n    - navigation.tabs\n    - navigation.indexes\n    - navigation.tabs.sticky\n    - navigation.footer\n    - content.tabs.link\n    - content.code.annotation\n    - content.code.copy\nnav:\n  - Home:\n      - Home: index.md\n      - Why Use Delta Lake: why-use-delta-lake.md\n      - Delta Lake for big and small data: delta-lake-big-data-small-data.md\n      - Best practices: delta-lake-best-practices.md\n  - Usage:\n      - Installation: usage/installation.md\n      - Overview: usage/overview.md\n      - Creating a table: usage/create-delta-lake-table.md\n      - Loading a table: usage/loading-table.md\n      - Append/overwrite tables: usage/appending-overwriting-delta-lake-table.md\n      - Adding a constraint: usage/constraints.md\n      - Reading Change Data: usage/read-cdf.md\n      - Examining a table: usage/examining-table.md\n      - Querying a table: usage/querying-delta-tables.md\n      - Merging a table: usage/merging-tables.md\n      - Managing a table: usage/managing-tables.md\n      - Writing a table:\n          - usage/writing/index.md\n          - usage/writing/writing-to-s3-with-locking-provider.md\n      - Deleting rows from a table: usage/deleting-rows-from-delta-lake-table.md\n      - Optimize:\n          - Small file compaction: usage/optimize/small-file-compaction-with-optimize.md\n          - Z Order: usage/optimize/delta-lake-z-order.md\n  - API Reference:\n      - api/delta_writer.md\n      - Table:\n          - api/delta_table/index.md\n          - api/delta_table/metadata.md\n          - api/delta_table/delta_table_merger.md\n          - api/delta_table/delta_table_optimizer.md\n          - api/delta_table/delta_table_alterer.md\n      - api/schema.md\n      - api/storage.md\n      - api/catalog.md\n      - api/exceptions.md\n  - Integrations:\n      - Object Storage:\n          - integrations/object-storage/adls.md\n          - integrations/object-storage/gcs.md\n          - integrations/object-storage/hdfs.md\n          - integrations/object-storage/s3.md\n          - integrations/object-storage/s3-like.md\n          - integrations/object-storage/lakefs.md\n      - Arrow: integrations/delta-lake-arrow.md\n      - Daft: integrations/delta-lake-daft.md\n      - Dagster: integrations/delta-lake-dagster.md\n      - Dask: integrations/delta-lake-dask.md\n      - DataFusion: integrations/delta-lake-datafusion.md\n      - pandas: integrations/delta-lake-pandas.md\n      - Polars: integrations/delta-lake-polars.md\n  - How Delta Lake works:\n      - Architecture: how-delta-lake-works/architecture-of-delta-table.md\n      - Transactions: how-delta-lake-works/delta-lake-acid-transactions.md\n      - File skipping: how-delta-lake-works/delta-lake-file-skipping.md\nnot_in_nav: |\n  /_build/\n\nexclude_docs: |\n  /_build/\n  /mlc_config.json\n  /src\n  /requirements.txt\n  *.py\n\nplugins:\n  - autorefs\n  - mkdocstrings:\n      handlers:\n        python:\n          path: [../python]\n          options:\n            show_root_toc_entry: false\n            docstring_section_style: table\n            filters: [\"!^_\", \"^__init__$\"]\n            heading_level: 3\n            show_source: false\n            show_symbol_type_in_heading: true\n            show_signature_annotations: true\n            show_root_heading: true\n            show_root_full_path: true\n            separate_signature: true\n            docstring_options:\n              ignore_init_summary: false\n            merge_init_into_class: true\n          import:\n            # for cross references\n            - https://arrow.apache.org/docs/objects.inv\n            - https://pandas.pydata.org/docs/objects.inv\n  - search:\n      lang: en\n  - markdown-exec\n  - macros:\n      module_name: docs/_build/macro\n  - mkdocs-simple-hooks:\n      hooks:\n        on_page_markdown: \"docs._build.hooks:on_page_markdown\"\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - admonition\n  - pymdownx.details\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.snippets:\n      base_path: [\".\", \"docs/src/\"]\n      check_paths: true\n      dedent_subsections: true\n  - footnotes\n\nextra:\n  python_api_url: https://delta-io.github.io/delta-rs/api/\n  generator: false\n  social:\n    - icon: fontawesome/brands/slack\n      link: https://go.delta.io/slack\n      name: Delta slack channel\n"
        },
        {
          "name": "proofs",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "tlaplus",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}