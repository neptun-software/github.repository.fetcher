{
  "metadata": {
    "timestamp": 1736709276007,
    "page": 628,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-fuzz/afl.rs",
      "stars": 1674,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "target\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.107421875,
          "content": "[submodule \"AFLplusplus\"]\n\tpath = cargo-afl/AFLplusplus\n\turl = https://github.com/AFLplusplus/AFLplusplus.git\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 10.1826171875,
          "content": "# Changes\n\n## 0.15.13\n\n- [Update AFLplusplus to 4.30c](https://github.com/rust-fuzz/afl.rs/pull/560)\n\n## 0.15.12\n\n- [Reorder passes and add split-switches-pass to AFL++ instrumentation](https://github.com/rust-fuzz/afl.rs/pull/554)\n\n## 0.15.11\n\n- [Introduce `AFLRS_REQUIRE_PLUGINS` and `AFL_OPT_LEVEL` environment variable options](https://github.com/rust-fuzz/afl.rs/pull/540)\n\n## 0.15.10\n\n- [Remove unnecessary `libc` dependency](https://github.com/rust-fuzz/afl.rs/commit/2f7c215caef827013b2b1418ab72eaadccd97ebe)\n- [Fix typo in error message](https://github.com/rust-fuzz/afl.rs/commit/626b605d5757dc5b2cd9e422ca61d49a6165b7a1)\n- [Improve error messages](https://github.com/rust-fuzz/afl.rs/commit/ead58d0422b1b16615627bb3620c1ee50fed92d9)\n- [Eliminate reliance on `fs_extra`; copy AFL++ directory with shell](https://github.com/rust-fuzz/afl.rs/pull/506)\n\n## 0.15.9\n\n- [Don't require `--force` when enabling/disabling plugins](https://github.com/rust-fuzz/afl.rs/pull/498)\n- [Display AFL++ version and whether plugins are in use](https://github.com/rust-fuzz/afl.rs/pull/500)\n\n## 0.15.8\n\n- [Update AFLplusplus to 4.21c](https://github.com/rust-fuzz/afl.rs/pull/492)\n\n## 0.15.7\n\n- [Use `expr` metavariable in `fuzz!` macro](https://github.com/rust-fuzz/afl.rs/pull/490)\n\n## 0.15.6\n\n- [Update AFLplusplus to commit fd71341 (latest on branch stable) to address a performance regression](https://github.com/rust-fuzz/afl.rs/pull/487)\n\n## 0.15.5\n\n- [Update AFLplusplus to 4.20c](https://github.com/rust-fuzz/afl.rs/pull/480)\n\n## 0.15.4\n\n- [Don't panic in `config::config`](https://github.com/rust-fuzz/afl.rs/pull/472)\n\n## 0.15.3\n\n- [Update AFLplusplus to 4.10c](https://github.com/rust-fuzz/afl.rs/pull/457)\n\n## 0.15.2\n\n- [Do not pass `-C passes=...` when nightly is used and plugins are compiled](https://github.com/rust-fuzz/afl.rs/pull/449)\n\n## 0.15.1\n\n- [Allow setting `__afl_persistent_loop` argument (support for #433)](https://github.com/rust-fuzz/afl.rs/pull/437)\n- [Update AFLplusplus to 4.09c](https://github.com/rust-fuzz/afl.rs/pull/438)\n\n## 0.15.0\n\n- [Call existing panic hook before aborting](https://github.com/rust-fuzz/afl.rs/pull/426)\n- [Add `config` subcommand](https://github.com/rust-fuzz/afl.rs/pull/421)\n\n## 0.14.5\n\n- [Add plugins feature](https://github.com/rust-fuzz/afl.rs/pull/392)\n\n## 0.14.4\n\n- [Add addseeds command](https://github.com/rust-fuzz/afl.rs/pull/407)\n\n## 0.14.3\n\n- [Fix running AFL with no 'fuzzing' flag](https://github.com/rust-fuzz/afl.rs/pull/398)\n\n## 0.14.2\n\n- [Update error message in cargo-afl.rs](https://github.com/rust-fuzz/afl.rs/pull/395)\n\n## 0.14.1\n\n- No functional changes. Version 0.14.1 was needed because version 0.14.0 failed to include the AFLplusplus submodule.\n\n## 0.14.0\n\n- [Make afl-system-config available as system-config](https://github.com/rust-fuzz/afl.rs/pull/371)\n- [Complete separation of `afl` and `cargo-afl`](https://github.com/rust-fuzz/afl.rs/pull/375)\n- [Remove `reset_lazy_static` feature](https://github.com/rust-fuzz/afl.rs/pull/376)\n\n## 0.13.5\n\n- [Update AFLplusplus to commit ad2af7c (latest on branch stable)](https://github.com/rust-fuzz/afl.rs/pull/374)\n\n## 0.13.4\n\n- [Update AFLplusplus to 4.08c](https://github.com/rust-fuzz/afl.rs/pull/367)\n\n## 0.13.3\n\n- [Fix etc symlinks](https://github.com/rust-fuzz/afl.rs/pull/352)\n- [Add more transition messages](https://github.com/rust-fuzz/afl.rs/pull/354)\n\n## 0.13.2\n\n- [Add transitional message](https://github.com/rust-fuzz/afl.rs/pull/348)\n\n## 0.13.1\n\n- [Update AFLplusplus to 4.07c](https://github.com/rust-fuzz/afl.rs/pull/344)\n\n## 0.13.0\n\n- [Add mini CmpLog](https://github.com/rust-fuzz/afl.rs/pull/324)\n- [Remove --max-total-time](https://github.com/rust-fuzz/afl.rs/pull/333)\n\n## 0.12.17\n\n- [Adjust build script output](https://github.com/rust-fuzz/afl.rs/pull/317)\n- [Unconditionally remove `DEBUG` environment variable](https://github.com/rust-fuzz/afl.rs/pull/321)\n- [Update AFLplusplus to 4.06c](https://github.com/rust-fuzz/afl.rs/pull/322)\n\n## 0.12.16\n\n- [Add optional feature 'no_cfg_fuzzing'](https://github.com/rust-fuzz/afl.rs/pull/306)\n\n## 0.12.15\n\n- [Bump tempfile from 3.3.0 to 3.4.0](https://github.com/rust-fuzz/afl.rs/pull/302)\n\n## 0.12.14\n\n- [Fix broken installation (#299)](https://github.com/rust-fuzz/afl.rs/pull/300)\n\n## 0.12.13\n\n- [Do not store object files inside $CARGO_HOME](https://github.com/rust-fuzz/afl.rs/pull/297)\n\n## 0.12.12\n\n- [Remove debuginfo=0 from default compiler options](https://github.com/rust-fuzz/afl.rs/pull/291)\n\n## 0.12.11\n\n- [Add --max_total_time deprecation message](https://github.com/rust-fuzz/afl.rs/pull/278)\n- [Update AFLplusplus to 4.05c](https://github.com/rust-fuzz/afl.rs/pull/289)\n\n## 0.12.10\n\n- [Update AFLplusplus to 4.04c](https://github.com/rust-fuzz/afl.rs/pull/267)\n\n## 0.12.9\n\n- [Update AFLplusplus to 4.03c](https://github.com/rust-fuzz/afl.rs/pull/260)\n- [Upgrade to Clap 4](https://github.com/rust-fuzz/afl.rs/pull/263)\n\n## 0.12.8\n\n- [Copy if AFLplusplus is not a git repository](https://github.com/rust-fuzz/afl.rs/commit/ff8d1c8c970cd5977b3efed74a78af9a49b315f4)\n\n## 0.12.7\n\n- [Build AFL in a temporary directory in `OUT_DIR`](https://github.com/rust-fuzz/afl.rs/pull/254)\n\n## 0.12.6\n\n- [Build AFL in a temporary directory on docs.rs](https://github.com/rust-fuzz/afl.rs/pull/250)\n- [Add help for `shmget() failed` error message](https://github.com/rust-fuzz/afl.rs/pull/253)\n- [Update AFLpluplus to 4.02c](https://github.com/rust-fuzz/afl.rs/pull/251)\n\n## 0.12.5\n\n- [build.rs: Remove DEBUG environment variable](https://github.com/rust-fuzz/afl.rs/pull/248)\n- [Check for `DOCS_RS` environment variable in build.rs](https://github.com/rust-fuzz/afl.rs/pull/249)\n\n## 0.12.4\n\n- [Set rustc-args instead of rustdoc-args](https://github.com/rust-fuzz/afl.rs/commit/125af5fa32f13e1ecaab0e219eecca286ee9d8e8)\n\n## 0.12.3\n\n- [Fix docs.rs documentation generation](https://github.com/rust-fuzz/afl.rs/pull/231)\n\n## 0.12.2\n\n- [Handle new LLVM pass manager on rustc 1.59](https://github.com/rust-fuzz/afl.rs/pull/220)\n\n## 0.12.1\n\n- [Use arbitrary::Unstructured instead of arbitrary::RingBuffer](https://github.com/rust-fuzz/afl.rs/pull/211)\n- [Stop is_nightly from spewing to stderr](https://github.com/rust-fuzz/afl.rs/pull/212)\n\n## 0.12.0\n\n- [Update to AFLplusplus 4.00c](https://github.com/rust-fuzz/afl.rs/pull/206)\n\n## 0.11.1\n\n- [Handle old LLVM pass manager on rustc 1.57](https://github.com/rust-fuzz/afl.rs/pull/197)\n\n## 0.11.0\n\n- [Update rustc_version to 0.4](https://github.com/rust-fuzz/afl.rs/pull/188)\n- [Update AFLplusplus to 3.14c](https://github.com/rust-fuzz/afl.rs/pull/189)\n- [Update for new LLVM pass manager](https://github.com/rust-fuzz/afl.rs/pull/193)\n\n## 0.10.1\n\n- [Get docs building on docs.rs](https://github.com/rust-fuzz/afl.rs/pull/185)\n\n## 0.10.0\n\n- [Qualify uses of `__fuzz!` macro](https://github.com/rust-fuzz/afl.rs/pull/174)\n- [update to AFL++ 3.01a && enable persistent shared memory fuzzing](https://github.com/rust-fuzz/afl.rs/pull/180)\n- [Remove deprecated functions: `read_stdio_bytes` and `read_stdio_string`](https://github.com/rust-fuzz/afl.rs/commit/08db0b0afbf20eb20e09e3dd0397e6adcfe33def)\n\n## 0.9.0\n\n- [MacOS – Hard-code the path to `ar` as `/usr/bin/ar`](https://github.com/rust-fuzz/afl.rs/pull/171)\n\n## 0.8.0\n\n- [Migrate from AFL to AFLplusplus](https://github.com/rust-fuzz/afl.rs/pull/169)\n\n## 0.7.0\n\n- [Add option to kill afl-fuzz after a time limit](https://github.com/rust-fuzz/afl.rs/pull/162)\n- [Add opt-in resettable-lazy-static.rs feature](https://github.com/rust-fuzz/afl.rs/pull/166)\n\n## 0.6.0\n\n- [Accept `FnMut` instead of `Fn`](https://github.com/rust-fuzz/afl.rs/pull/165)\n- [Eliminate `fuzz`/`fuzz_nohook` redundancy](https://github.com/rust-fuzz/afl.rs/pull/161)\n\n## 0.5.2\n\n- [Expose `common` in the public API](https://github.com/rust-fuzz/afl.rs/pull/159)\n\n## 0.5.1\n\n- [Fix broken OS detection](https://github.com/rust-fuzz/afl.rs/pull/153)\n\n## 0.5.0\n\n- [Add a fuzz! version that doesn't hook panics](https://github.com/rust-fuzz/afl.rs/pull/154)\n\n## 0.4.4\n\n- [Add build support for AFL on ARM](https://github.com/rust-fuzz/afl.rs/pull/157)\n\n## 0.4.3\n\n- [Only enable -fuse-ld=gold on Linux.](https://github.com/rust-fuzz/afl.rs/pull/147)\n\n## 0.4.2\n\n- [Work around linking issues from rust-fuzz/afl.rs#141, rust-lang/rust#53945](https://github.com/rust-fuzz/afl.rs/pull/144)\n\n## 0.4.1\n\n- [Set RUSTDOCFLAGS to avoid issues with linkage for doctests](https://github.com/rust-fuzz/afl.rs/pull/143)\n\n## 0.4.0\n\n- [Run AFL in persistent mode, use `panic::set_hook()`, add ASAN/TSAN flags, deprecate non-persistent functions, `RUSTFLAGS` no longer get overwritten](https://github.com/rust-fuzz/afl.rs/pull/137)\n\n## 0.3.2\n\n- [Commit cargo.lock since we now distribute a binary](https://github.com/rust-fuzz/afl.rs/commit/fc80199080f36ea0c249e1a4bb827370dcefebc2)\n\n## 0.3.1\n\n- [Bump clap-rs to fix `cargo-afl fuzz --help` bug.](https://github.com/rust-fuzz/afl.rs/issues/121)\n\n## 0.3.0\n\n- [Prefer panic catching strategy over adjusting panic strategy.](https://github.com/rust-fuzz/afl.rs/pull/123)\n- [Incorporate commit hash into directory structure.](https://github.com/rust-fuzz/afl.rs/pull/125)\n\n## 0.2.3\n\n- [Print error message if archive file (to be linked) can't be found.](https://github.com/rust-fuzz/afl.rs/commit/d65c9cbc7f679aae87b0ad92d7e2496ee4e09e55)\n\n## 0.2.2\n\n- [Use more generic C compiler binary name](https://github.com/rust-fuzz/afl.rs/commit/f1369aadc2352510d2af42d23480324800960d26)\n- [More descriptive panic messages](https://github.com/rust-fuzz/afl.rs/commit/7f0114c0a0d42e1487f5e573e949b12f8932f42c)\n\n## 0.2.1\n\n- [Introduce more helpful CLI using clap-rs](https://github.com/rust-fuzz/afl.rs/commit/c9537eabd412591b91e328f41451c4aba199c684)\n\n## 0.2.0\n\n- [Rewrite of afl.rs; introduction of cargo-afl](https://github.com/rust-fuzz/afl.rs/pull/116)\n\n## 0.1.5\n\n- Don't enforce LLVM version 3.8\n\n## 0.1.4\n\n- Merged in upstream changes for LLVM files: afl-llvm-pass.so.cc, afl-llvm-rt.o.c\n- Check check for `llvm-config-3.8` in `PATH` in addition to `llvm-config`\n- Utilities for reading from standard input and handling panics: `afl::handle_*`\n- Initial writing for \"The afl.rs Book\"\n\n## 0.1.3\n\n- [Don't pass extra values to C afl-fuzz `main`.](https://github.com/frewsxcv/afl.rs/pull/62)\n\n## 0.1.2\n\n- [Add afl-sys crate](https://github.com/frewsxcv/afl.rs/pull/51)\n- [Introduce `cargo afl-fuzz`](https://github.com/frewsxcv/afl.rs/pull/60)\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 16.5224609375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"afl\"\nversion = \"0.15.13\"\ndependencies = [\n \"arbitrary\",\n \"home\",\n \"libc\",\n \"rustc_version\",\n \"xdg\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\ndependencies = [\n \"backtrace\",\n]\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223\"\ndependencies = [\n \"derive_arbitrary\",\n]\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc1835b7f27878de8525dc71410b5a31cdcc5f230aed5ba5df968e09c201b23d\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"libc\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a68f1f47cdf0ec8ee4b941b2eee2a80cb796db73118c0dd09ac63fbe405be22\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-afl\"\nversion = \"0.15.13\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"clap\",\n \"ctor\",\n \"home\",\n \"predicates\",\n \"rustc_version\",\n \"tempfile\",\n \"xdg\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"ctor\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a2785755761f3ddc1492979ce1e48d2c00d09311c39e4466429188f3dd6501\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"derive_arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30542c1ad912e0e3d22a1935c290e12e8a29d704a420177a31faad4a601a0800\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"486f806e73c5707928240ddc295403b1b93c96a02038563881c4a2fd84b81ac4\"\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b09cf3155332e944990140d967ff5eceb70df778b34f77d8075db46e4704e6d8\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5d19ee57562043d37e82899fade9a22ebab7be9cef5026b07fda9cdd4293573\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"float-cmp\",\n \"normalize-line-endings\",\n \"predicates-core\",\n \"regex\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae8177bee8e75d6846599c6b9ff679ed51e882816914eec639944d7c9aa11931\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41b740d195ed3166cd147c8047ec98db0e22ec019eb8eeb76d343b795304fb13\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"919d3b74a5dd0ccd15aeb8f93e7006bd9e14c295087c9896a110f490752bcf31\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"xdg\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.263671875,
          "content": "[workspace]\nmembers = [\"afl\", \"cargo-afl\"]\nresolver = \"2\"\n\n[workspace.lints.rust.unexpected_cfgs]\nlevel = \"deny\"\ncheck-cfg = [\"cfg(fuzzing)\"]\n\n[workspace.lints.clippy]\npedantic = { level = \"warn\", priority = -1 }\ndisallowed-macros = \"allow\"\nmissing-panics-doc = \"allow\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.6640625,
          "content": "<h1 align=\"center\">\n  <a href=\"https://github.com/frewsxcv/afl.rs/issues/66\"><img src=\"etc/logo.gif\" alt=\"afl.rs logo\"></a>\n  <br>\n  afl.rs\n</h1>\n\n<h4 align=\"center\">Fuzzing <a href=\"https://www.rust-lang.org\">Rust</a> code with <a href=\"https://aflplus.plus/\">AFLplusplus</a></h4>\n\n## What is it?\n\n[Fuzz testing][] is a software testing technique used to find security and stability issues by providing pseudo-random data as input to the software. [AFLplusplus][] is a popular, effective, and modern fuzz testing tool based on [AFL][american-fuzzy-lop]. This library, afl.rs, allows one to run AFLplusplus on code written in [the Rust programming language][rust].\n\n## Documentation\n\nDocumentation can be found in the [Rust Fuzz Book](https://rust-fuzz.github.io/book/afl.html).\n\n## What does it look like?\n\n<img src=\"etc/screencap.gif\" width=\"563\" height=\"368\" alt=\"Screen recording of afl\">\n\nScreen recording of AFL running on Rust code.\n\n## Hints\n\nBefore starting to fuzz, you should reconfigure your system for optimal\nperformance and better crash detection. This can be done with `cargo afl system-config`.\nBut this subcommand requires root, so it uses sudo internally. Hence, you might need to enter\nyour password.\n\nBy default, the AFL++ [CMPLOG](https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.cmplog.md)\nfeature is activated, which helps to achieve good code coverage.\nHowever, it is not beneficial to activate CMPLOG on more than two instances.\nSo if you run multiple AFL++ instances on your fuzzing target, you can disable CMPLOG by specifying the command line parameter '-c -'.\n\nThis [document](https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/fuzzing_in_depth.md)\nwill familiarize you with AFL++ features to help in running a successful fuzzing campaign.\n\nBy default, the `fuzzing` config is set when `cargo-afl` is used to build. If you want to prevent this, just set the\nenvironment variable `AFL_NO_CFG_FUZZING` to `1` when building.\n\n[conditional compilation]: https://doc.rust-lang.org/reference.html#conditional-compilation\n\n[Cargo feature]: http://doc.crates.io/manifest.html#the-[features]-section\n[example-defer]: https://github.com/frewsxcv/afl.rs/blob/master/examples/deferred-init.rs\n[LLVM pass]: https://github.com/frewsxcv/afl.rs/blob/master/plugin/src/afl-llvm-pass.o.cc\n[example]: https://github.com/frewsxcv/afl.rs/blob/master/afl/examples/hello.rs\n[Cargo]: http://doc.crates.io/\n[unresolved issue]: https://github.com/frewsxcv/afl.rs/issues/11\n[fuzz testing]: https://en.wikipedia.org/wiki/Fuzz_testing\n[rustup]: https://rustup.rs/\n[american-fuzzy-lop]: http://lcamtuf.coredump.cx/afl/\n[AFLplusplus]: https://aflplus.plus/\n[rust]: https://www.rust-lang.org\n"
        },
        {
          "name": "afl",
          "type": "tree",
          "content": null
        },
        {
          "name": "cargo-afl",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.1025390625,
          "content": "disallowed-macros = [\n    \"std::assert\",\n    \"std::assert_eq\",\n    \"std::assert_ne\",\n    \"std::panic\",\n]\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}