{
  "metadata": {
    "timestamp": 1736709160029,
    "page": 379,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "chinedufn/percy",
      "stars": 2278,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0400390625,
          "content": ".git\ntarget\nnode_modules\nbook\nDockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.177734375,
          "content": "/target\n**/*.rs.bk\nCargo.lock\n.idea\nnode_modules\n.DS_Store\n\n# Generated WebAssembly modules\ntests/jsdom/jsdom_tests*\nexamples/isomorphic/client/dist\nexamples/isomorphic/client/build\n"
        },
        {
          "name": ".travis.yml.old",
          "type": "blob",
          "size": 2.306640625,
          "content": "language: rust\ncache: cargo\nsudo: false\n\nINSTALL_DEPS: &INSTALL_DEPS\n  - rustup default nightly\n  - rustup target add wasm32-unknown-unknown\n  # Install wasm-bindgen-cli\n  - curl -OL https://github.com/rustwasm/wasm-bindgen/releases/download/0.2.33/wasm-bindgen-0.2.33-x86_64-unknown-linux-musl.tar.gz\n  - tar xf wasm-bindgen-0.2.33-x86_64-unknown-linux-musl.tar.gz\n  - chmod +x wasm-bindgen-0.2.33-x86_64-unknown-linux-musl/wasm-bindgen\n  - mv wasm-bindgen-0.2.33-x86_64-unknown-linux-musl/wasm-bindgen* ~/.cargo/bin/ # wasm-bindgen and wasm-bindgen-test-runner binaries\n  # Install wasm-pack\n  - curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.6.0/wasm-pack-v0.6.0-x86_64-unknown-linux-musl.tar.gz | tar --strip-components=1 --wildcards -xzf - \"*/wasm-pack\" && chmod +x wasm-pack && mv wasm-pack ~/.cargo/bin/\n  # Install Node.js\n  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash\n  - source ~/.nvm/nvm.sh\n  - nvm install v10.5\n  # Install Geckodriver\n  - curl --retry 5 -LO https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-linux64.tar.gz\n  - tar xf geckodriver-v0.21.0-linux64.tar.gz\n\nmatrix:\n  include:\n    # Tests pass on nightly\n    # TODO: Separate job for JSDOM WebAssembly tests and Rust unit tests\n    - rust: nightly\n      env: JOB=test-everything\n      before_install: *INSTALL_DEPS\n      install:\n        - npm install\n      script:\n        - GECKODRIVER=$(pwd)/geckodriver ./test.sh\n      addons:\n        firefox: latest\n\n    # Build documentation for the gh-pages branch\n    - rust: nightly\n      env: JOB=book-build-and-deploy\n      cache:\n        directories:\n          - $HOME/.cargo\n      before_script:\n        - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)\n        - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers \"^0.1\" mdbook)\n        - cargo install-update -a\n      script:\n        - (cd book && mdbook build)\n        - cargo doc --no-deps -p percy-dom -p percy-css-macro -p html-macro\n        - mv target/doc book/book/api\n      deploy:\n        provider: pages\n        skip-cleanup: true\n        github-token: $GITHUB_TOKEN # Set in travis-ci.org dashboard, marked secure\n        local-dir: book/book\n        keep-history: false\n      if: branch = master\n\nnotifications:\n  email:\n    on_success: never\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.0205078125,
          "content": "[package]\nname = \"percy\"\nversion = \"0.0.1\"\nauthors = [\"Chinedu Francis Nwafili <frankie.nwafili@gmail.com>\"]\ndescription = \"A modular toolkit for building interactive frontend browser apps with Rust + WebAssembly. Supports server side rendering.\"\nkeywords = [\"virtual\", \"dom\", \"wasm\", \"css\", \"webassembly\"]\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/chinedufn/percy\"\n\n[workspace]\nmembers = [\n  \"crates/html-macro\",\n  \"crates/html-macro-test\",\n  \"crates/html-validation\",\n  \"crates/percy-cli\",\n  \"crates/percy-css\",\n  \"crates/percy-dom\",\n  \"crates/percy-css-macro\",\n  \"crates/percy-preview\",\n  \"crates/percy-preview-app\",\n  \"crates/percy-preview-server\",\n  \"crates/percy-router\",\n  \"crates/percy-router-macro\",\n  \"crates/percy-router-macro-test\",\n  \"crates/virtual-node\",\n  \"examples/component-preview\",\n  \"examples/embed-non-percy-node\",\n  \"examples/isomorphic/app\",\n  \"examples/isomorphic/client\",\n  \"examples/isomorphic/server\",\n  \"examples/unit-testing-components\",\n  \"tests/test-css-rs\",\n  \"tests/test-css-rs-fixture\",\n]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5888671875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2019 Chinedu Francis Nwafili\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0419921875,
          "content": "Copyright (c) 2018 Chinedu Francis Nwafili\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.150390625,
          "content": "Percy\n=====\n\n[![Actions Status](https://github.com/chinedufn/percy/workflows/tests/badge.svg)](https://github.com/chinedufn/percy/actions)\n[![Actions Status](https://github.com/chinedufn/percy/workflows/github-pages/badge.svg)](https://github.com/chinedufn/percy/actions)\n\n> Build frontend browser apps with Rust + WebAssembly. Supports server side rendering.\n\n## The Percy Book\n\nThis README gives a light introduction to Percy. Check out [The Percy Book] for a full walk through.\n\n[The Percy Book]: https://chinedufn.github.io/percy/\n\n## Stable Rust\n\nPercy compiles on stable Rust with one caveat:\n\nOn nightly Rust you can create text nodes without quotes.\n\n```rust\n// Nightly Rust does not require quotes around text nodes.\nhtml! { <div>My text nodes here </div> };\n```\n\nOn stable Rust, quotation marks are required.\n\n```rust\n// Stable Rust requires quotes around text nodes.\nhtml! { <div>{ \"My text nodes here \" }</div> };\n```\n\nThis difference will go away once span locations are stabilized in the Rust compiler - [Rust tracking issue](https://github.com/rust-lang/rust/issues/54725).\n\n## Getting Started\n\nThe best way to get up to speed is by checking out [The Percy Book](https://chinedufn.github.io/percy/), but here is a\nvery basic example to get your feet wet with.\n\n### Quickstart - Getting your feet wet\n\nPercy allows you to create applications that only have server side rendering, only client side rendering,\nor both server and client side rendering.\n\nHere's a quick-and-easy working example of client side rendering that you can try right now:\n\n---\n\nFirst, Create a new project using\n\n```sh\ncargo new client-side-web-app --lib\ncd client-side-web-app\n```\n\n---\n\nAdd the following files to your project.\n\n```sh\ntouch build.sh\ntouch index.html\ntouch app.css\n```\n\n---\n\nHere's the directory structure:\n\n```sh\n.\n├── Cargo.toml\n├── build.sh\n├── index.html\n├── app.css\n└── src\n    └── lib.rs\n```\n\n---\n\nNow edit each file with the following contents:\n\n```sh\n# contents of build.sh\n\n#!/bin/bash\n\ncd \"$(dirname \"$0\")\"\n\nmkdir -p public\n\ncargo build --target wasm32-unknown-unknown\nwasm-bindgen target/wasm32-unknown-unknown/debug/client_side_web_app.wasm --no-typescript --target web --out-dir ./public --debug\ncp index.html public/\ncp app.css public/\n```\n\n---\n\n```rust\n// contents of src/lib.rs\n\nuse wasm_bindgen::prelude::*;\nuse web_sys;\n\nuse percy_dom::prelude::*;\n\n#[wasm_bindgen]\nstruct App {\n  pdom: PercyDom\n}\n\n#[wasm_bindgen]\nimpl App {\n    #[wasm_bindgen(constructor)]\n    pub fn new () -> App {\n        let start_view = html! { <div> Hello </div> };\n\n        let window = web_sys::window().unwrap();\n        let document = window.document().unwrap();\n        let body = document.body().unwrap();\n\n        let mut pdom = PercyDom::new_append_to_mount(start_view, &body);\n\n        let greetings = \"Hello, World!\";\n\n        let end_view = html! {\n           // Use regular Rust comments within your html\n           <div class=[\"big\", \"blue\"]>\n              /* Interpolate values using braces */\n              <strong>{ greetings }</strong>\n\n              <button\n                class=\"giant-button\"\n                onclick=|_event| {\n                   web_sys::console::log_1(&\"Button Clicked!\".into());\n                }\n              >\n                // No need to wrap text in quotation marks (:\n                Click me and check your console\n              </button>\n           </div>\n        };\n\n        pdom.update(end_view);\n\n        App { pdom }\n    }\n}\n```\n\n---\n\n```toml\n# contents of Cargo.toml\n\n[package]\nname = \"client-side-web-app\"\nversion = \"0.1.0\"\nauthors = [\"Friends of Percy\"]\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"] # Don't forget this!\n\n[dependencies]\nwasm-bindgen = \"0.2\"\njs-sys = \"0.3\"\npercy-dom = \"0.9\"\n\n[dependencies.web-sys]\nversion = \"0.3\"\nfeatures = [\n    \"Document\",\n    \"MouseEvent\",\n    \"Window\",\n    \"console\"\n]\n```\n\n---\n\n```html\n<!-- contents of index.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"app.css\"/>\n        <title>Client Side Demo</title>\n    </head>\n    <body style='margin: 0; padding: 0; width: 100%; height: 100%;'>\n        <script type=\"module\">\n            import init, {App} from '/client_side_web_app.js'\n        \n            async function run ()  {\n                await init('/client_side_web_app_bg.wasm')\n                new App()\n            }\n        \n            run()\n        </script>\n    </body>\n</html>\n```\n\n---\n\n```css\n/* contents of app.css */\n.big {\n  font-size: 30px;\n}\n.blue {\n  color: blue;\n}\n.giant-button {\n  font-size: 24px;\n  font-weight: bold;\n}\n```\n\n---\n\nNow run\n\n```sh\n# Used to compile your Rust code to WebAssembly\ncargo install wasm-bindgen-cli\n\n# Or any other static file server that supports the application/wasm mime type\ncargo install https\n\nchmod +x ./build.sh\n./build.sh\n\n# Visit localhost:8080 in your browser\nhttp ./public --port 8080\n```\n\nAnd you should see the following:\n\n![Client side example](./example.png)\n\nNice work!\n\n## More Examples\n\n- [Isomorphic web app](examples/isomorphic)\n\n- [Unit Testing View Components](examples/unit-testing-components)\n\n- [Open an Issue or PR if you have an idea for a useful example!](https://github.com/chinedufn/percy/issues)\n\n## API Documentation\n\n- [percy-dom API docs](https://chinedufn.github.io/percy/api/percy_dom/macro.html.html)\n\n- [html-macro API docs](https://chinedufn.github.io/percy/api/html_macro)\n\n- [percy-router API docs](https://chinedufn.github.io/percy/api/percy_router)\n\n## Contributing\n\nAlways feel very free to open issues and PRs with any questions / thoughts that you have!\n\nEven if it feels basic or simple - if there's a question on your mind that you can't quickly answer yourself then that's a failure\nin the documentation.\n\nMuch more information on how to contribute to the codebase can be found in the [contributing section](https://chinedufn.github.io/percy/contributing/getting-started.html) of The Percy Book!\n\n## To Test\n\nTo run all of the unit, integration and browser tests, [grab the dependencies then](https://chinedufn.github.io/percy/contributing/getting-started.html) :\n\n```sh\n./test.sh\n```\n\n## License\n\nMIT\n"
        },
        {
          "name": "book",
          "type": "tree",
          "content": null
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.png",
          "type": "blob",
          "size": 60.66015625,
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.1689453125,
          "content": "#!/bin/bash\n\ncd $(git rev-parse --show-toplevel)\n\ncargo check --all && # Make sure examples compile\ncargo test --all &&\nwasm-pack test --firefox --headless crates/percy-dom\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}