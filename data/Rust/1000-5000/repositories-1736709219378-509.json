{
  "metadata": {
    "timestamp": 1736709219378,
    "page": 509,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-lang/chalk",
      "stars": 1875,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 0.0390625,
          "content": "((rust-mode (rust-format-on-save . t)))\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2041015625,
          "content": "*.o\n*.so\n*.rlib\n*.dll\n*.exe\nTAGS\n/*/Cargo.lock\n/*/target/\n*~\ntarget\nchalk-parse/src/parser.rs\n\n## IDE files\n/.idea/\n/.vscode/\n\n## Files used in changelog generation\npackage.json\npackage-lock.json\nnode_modules\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.8564453125,
          "content": "# Contributing to chalk\n\nThank you for your interest in contributing to chalk! There are many ways to\ncontribute, and we appreciate all of them.\n\n* [Bug Reports](#bug-reports)\n* [Running and Debugging](#running-and-debugging)\n* [Pull Requests](#pull-requests)\n* [Writing Documentation](#writing-documentation)\n* [Helpful Links and Information](#helpful-links-and-information)\n\nIf you'd like to contribute, consider joining the [Traits Working Group][traits-working-group].\nWe hang out on the [rust-lang zulip][rust-lang-zulip] in the [#wg-traits][wg-traits-stream] stream.\n\nAs a reminder, all contributors are expected to follow our [Code of Conduct][coc].\n\n[traits-working-group]: https://rust-lang.github.io/compiler-team/working-groups/traits/\n[rust-lang-zulip]:https://rust-lang.zulipchat.com\n[wg-traits-stream]: https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits\n[coc]: https://www.rust-lang.org/conduct.html\n\n## Bug Reports\n[bug-reports]: #bug-reports\n\nWhile bugs are unfortunate, they're a reality in software. We can't fix what we\ndon't know about, so please report liberally. If you're not sure if something\nis a bug or not, feel free to file a bug anyway.\n\nIf you have the chance, before reporting a bug, please search existing issues,\nas it's possible that someone else has already reported your error. This doesn't\nalways work, and sometimes it's hard to know what to search for, so consider\nthis extra credit. We won't mind if you accidentally file a duplicate report.\n\nSometimes, a backtrace is helpful, and so including that is nice. To get\na backtrace, set the `RUST_BACKTRACE` environment variable to a value\nother than `0`. The easiest way to do this is to invoke `chalk` like this:\n\n```bash\n$ RUST_BACKTRACE=1 chalk ...\n```\n\n## Running and Debugging\n[running-and-debugging]: #running-and-debugging\nThere is a repl mainly for debugging purposes which can be run by `cargo run`. Some basic examples are in [libstd.chalk](libstd.chalk):\n```bash\n$ cargo run\n?- load libstd.chalk\n?- Vec<Box<i32>>: Clone\nUnique; substitution [], lifetime constraints []\n```\n\nMore logging can be enabled by setting the `CHALK_DEBUG` environment variable. Set `CHALK_DEBUG=1` to see `info!(...)` output, and `CHALK_DEBUG=2` to see `debug!(...)` output as well.\n\n## Pull Requests\n[pull-requests]: #pull-requests\n\nPull requests are the primary mechanism we use to change Rust. GitHub itself\nhas some [great documentation][pull-request-documentation] on using the Pull Request feature.\nWe use the \"fork and pull\" model [described here][development-models], where\ncontributors push changes to their personal fork and create pull requests to\nbring those changes into the source repository.\n\nPlease make pull requests against the `master` branch.\n\n[pull-request-documentation]: https://help.github.com/articles/about-pull-requests/\n[development-models]: https://help.github.com/articles/about-collaborative-development-models/\n\n## Writing Documentation\n[writing-documentation]: #writing-documentation\n\nDocumentation improvements are very welcome. Documentation pull requests\nfunction in the same way as other pull requests.\n\nYou can find documentation style guidelines in [RFC 1574][rfc1574].\n\n[rfc1574]: https://github.com/rust-lang/rfcs/blob/master/text/1574-more-api-documentation-conventions.md#appendix-a-full-conventions-text\n\n## Helpful Links and Information\n[Helpful Links and Information]: #helpful-links-and-information\n\n### Blog posts\nThere are several [blog posts][blog-posts] which describe the ideas and\nmachinery inside of chalk.\n\n[blog-posts]: README.md#blog-posts\n\n### Glossary\n\nIn addition to the blog posts there is a [glossary](GLOSSARY.md) explaining some\nof the terminology used in chalk.\n\n### Trait solving in rustc-dev-guide\nThe rustc-dev-guide describes [new-style trait solving][trait-solving], which is slowly replacing the old trait resolution.\n\n[trait-solving]: https://rustc-dev-guide.rust-lang.org/traits/chalk.html\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 16.423828125,
          "content": "Short version for non-lawyers:\n\nThe Chalk Project is dual-licensed under Apache 2.0 and MIT\nterms.\n\n\nLonger version:\n\nThe Chalk Project is Copyright 2015, The Chalk Project Contributors as\nrecorded in the Git repository.\n\nLicensed under the Apache License, Version 2.0\n<LICENSE-APACHE or\nhttp://www.apache.org/licenses/LICENSE-2.0> or the MIT\nlicense <LICENSE-MIT or http://opensource.org/licenses/MIT>,\nat your option. All files in the project carrying such\nnotice may not be copied, modified, or distributed except\naccording to those terms.\n\n\nThe Chalk Project includes packages written by third parties.\nThe following third party packages are included, and carry\ntheir own copyright notices and license terms:\n\n* Two header files that are part of the Valgrind\n  package. These files are found at src/rt/valgrind/valgrind.h and\n  src/rt/valgrind/memcheck.h, within this distribution. These files\n  are redistributed under the following terms, as noted in\n  them:\n\n  for src/rt/valgrind/valgrind.h:\n\n    This file is part of Valgrind, a dynamic binary\n    instrumentation framework.\n\n    Copyright (C) 2000-2010 Julian Seward.  All rights\n    reserved.\n\n    Redistribution and use in source and binary forms, with\n    or without modification, are permitted provided that the\n    following conditions are met:\n\n    1. Redistributions of source code must retain the above\n       copyright notice, this list of conditions and the\n       following disclaimer.\n\n    2. The origin of this software must not be\n       misrepresented; you must not claim that you wrote the\n       original software.  If you use this software in a\n       product, an acknowledgment in the product\n       documentation would be appreciated but is not\n       required.\n\n    3. Altered source versions must be plainly marked as\n       such, and must not be misrepresented as being the\n       original software.\n\n    4. The name of the author may not be used to endorse or\n       promote products derived from this software without\n       specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND\n    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN\n    NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n    USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n    OF SUCH DAMAGE.\n\n  for src/rt/valgrind/memcheck.h:\n\n    This file is part of MemCheck, a heavyweight Valgrind\n    tool for detecting memory errors.\n\n    Copyright (C) 2000-2010 Julian Seward.  All rights\n    reserved.\n\n    Redistribution and use in source and binary forms, with\n    or without modification, are permitted provided that the\n    following conditions are met:\n\n    1. Redistributions of source code must retain the above\n       copyright notice, this list of conditions and the\n       following disclaimer.\n\n    2. The origin of this software must not be\n       misrepresented; you must not claim that you wrote the\n       original software.  If you use this software in a\n       product, an acknowledgment in the product\n       documentation would be appreciated but is not\n       required.\n\n    3. Altered source versions must be plainly marked as\n       such, and must not be misrepresented as being the\n       original software.\n\n    4. The name of the author may not be used to endorse or\n       promote products derived from this software without\n       specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND\n    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN\n    NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n    USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n    OF SUCH DAMAGE.\n\n* The src/rt/miniz.c file, carrying an implementation of\n  RFC1950/RFC1951 DEFLATE, by Rich Geldreich\n  <richgel99@gmail.com>. All uses of this file are\n  permitted by the embedded \"unlicense\" notice\n  (effectively: public domain with warranty disclaimer).\n\n* LLVM. Code for this package is found in src/llvm.\n\n    Copyright (c) 2003-2013 University of Illinois at\n    Urbana-Champaign.  All rights reserved.\n\n    Developed by:\n\n        LLVM Team\n\n        University of Illinois at Urbana-Champaign\n\n        http://llvm.org\n\n    Permission is hereby granted, free of charge, to any\n    person obtaining a copy of this software and associated\n    documentation files (the \"Software\"), to deal with the\n    Software without restriction, including without\n    limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of\n    the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following\n    conditions:\n\n        * Redistributions of source code must retain the\n          above copyright notice, this list of conditions\n          and the following disclaimers.\n\n        * Redistributions in binary form must reproduce the\n          above copyright notice, this list of conditions\n          and the following disclaimers in the documentation\n          and/or other materials provided with the\n          distribution.\n\n        * Neither the names of the LLVM Team, University of\n          Illinois at Urbana-Champaign, nor the names of its\n          contributors may be used to endorse or promote\n          products derived from this Software without\n          specific prior written permission.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n    ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n    PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT\n    SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE\n    FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\n    OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS WITH THE SOFTWARE.\n\n* Additional libraries included in LLVM carry separate\n  BSD-compatible licenses. See src/llvm/LICENSE.txt for\n  details.\n\n* compiler-rt, in src/compiler-rt is dual licensed under\n  LLVM's license and MIT:\n\n    Copyright (c) 2009-2014 by the contributors listed in\n    CREDITS.TXT\n\n    All rights reserved.\n\n    Developed by:\n\n        LLVM Team\n\n        University of Illinois at Urbana-Champaign\n\n        http://llvm.org\n\n    Permission is hereby granted, free of charge, to any\n    person obtaining a copy of this software and associated\n    documentation files (the \"Software\"), to deal with the\n    Software without restriction, including without\n    limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of\n    the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following\n    conditions:\n\n        * Redistributions of source code must retain the\n          above copyright notice, this list of conditions\n          and the following disclaimers.\n\n        * Redistributions in binary form must reproduce the\n          above copyright notice, this list of conditions\n          and the following disclaimers in the documentation\n          and/or other materials provided with the\n          distribution.\n\n        * Neither the names of the LLVM Team, University of\n          Illinois at Urbana-Champaign, nor the names of its\n          contributors may be used to endorse or promote\n          products derived from this Software without\n          specific prior written permission.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n    ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n    PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT\n    SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE\n    FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\n    OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS WITH THE SOFTWARE.\n\n    ========================================================\n\n    Copyright (c) 2009-2014 by the contributors listed in\n    CREDITS.TXT\n\n    Permission is hereby granted, free of charge, to any\n    person obtaining a copy of this software and associated\n    documentation files (the \"Software\"), to deal in the\n    Software without restriction, including without\n    limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of\n    the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice\n    shall be included in all copies or substantial portions\n    of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n    ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n    SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n    IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE.\n\n* Portions of the FFI code for interacting with the native ABI\n  is derived from the Clay programming language, which carries\n  the following license.\n\n    Copyright (C) 2008-2010 Tachyon Technologies.\n    All rights reserved.\n\n    Redistribution and use in source and binary forms, with\n    or without modification, are permitted provided that the\n    following conditions are met:\n\n    1. Redistributions of source code must retain the above\n       copyright notice, this list of conditions and the\n       following disclaimer.\n\n    2. Redistributions in binary form must reproduce the\n       above copyright notice, this list of conditions and\n       the following disclaimer in the documentation and/or\n       other materials provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR\n    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n    DEVELOPERS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n    USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n    OF SUCH DAMAGE.\n\n* Hoedown, the markdown parser, under src/rt/hoedown, is\n  licensed as follows.\n\n    Copyright (c) 2008, Natacha Porté\n    Copyright (c) 2011, Vicent Martí\n    Copyright (c) 2013, Devin Torres and the Hoedown authors\n\n    Permission to use, copy, modify, and distribute this\n    software for any purpose with or without fee is hereby\n    granted, provided that the above copyright notice and\n    this permission notice appear in all copies.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR\n    DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE\n    INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n    FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n    SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n    ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA\n    OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n    OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n    CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n* libbacktrace, under src/libbacktrace:\n\n    Copyright (C) 2012-2014 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n\n    Redistribution and use in source and binary forms, with\n    or without modification, are permitted provided that the\n    following conditions are met:\n\n        (1) Redistributions of source code must retain the\n        above copyright notice, this list of conditions and\n        the following disclaimer.\n\n        (2) Redistributions in binary form must reproduce\n        the above copyright notice, this list of conditions\n        and the following disclaimer in the documentation\n        and/or other materials provided with the\n        distribution.\n\n        (3) The name of the author may not be used to\n        endorse or promote products derived from this\n        software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND\n    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN\n    NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n    USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n    OF SUCH DAMAGE.  */\n\n* jemalloc, under src/jemalloc:\n\n    Copyright (C) 2002-2014 Jason Evans\n    <jasone@canonware.com>. All rights reserved.\n    Copyright (C) 2007-2012 Mozilla Foundation.\n    All rights reserved.\n    Copyright (C) 2009-2014 Facebook, Inc.\n    All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are met:\n    1. Redistributions of source code must retain the above copyright notice(s),\n       this list of conditions and the following disclaimer.\n    2. Redistributions in binary form must reproduce the above copyright notice(s),\n       this list of conditions and the following disclaimer in the documentation\n       and/or other materials provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S)\n    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n    DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S)\n    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n    IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n    OF SUCH DAMAGE.\n\n* Additional copyright may be retained by contributors other\n  than Mozilla, the Chalk Project Developers, or the parties\n  enumerated in this file. Such copyright can be determined\n  on a case-by-case basis by examining the author of each\n  portion of a file in the revision-control commit records\n  of the project, or by consulting representative comments\n  claiming copyright ownership for a file.\n\n  For example, the text:\n\n      \"Copyright (c) 2011 Google Inc.\"\n\n  appears in some files, and these files thereby denote\n  that their author and copyright-holder is Google Inc.\n\n  In all such cases, the absence of explicit licensing text\n  indicates that the contributor chose to license their work\n  for distribution under identical terms to those Mozilla\n  has chosen for the collective work, enumerated at the top\n  of this file. The only difference is the retention of\n  copyright itself, held by the contributor.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 28.921875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ascii-canvas\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8824ecca2e851cec16968d54a01dd372ef8f95b244fb84b84e70128be347c3c6\"\ndependencies = [\n \"term\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chalk\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"chalk-derive\",\n \"chalk-engine\",\n \"chalk-integration\",\n \"chalk-ir\",\n \"chalk-parse\",\n \"chalk-recursive\",\n \"chalk-solve\",\n \"diff\",\n \"docopt\",\n \"expect-test\",\n \"itertools 0.12.0\",\n \"pretty_assertions\",\n \"regex\",\n \"rustyline\",\n \"salsa\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"chalk-derive\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"chalk-engine\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"chalk-derive\",\n \"chalk-integration\",\n \"chalk-ir\",\n \"chalk-solve\",\n \"rustc-hash\",\n \"tracing\",\n]\n\n[[package]]\nname = \"chalk-integration\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"chalk-derive\",\n \"chalk-engine\",\n \"chalk-ir\",\n \"chalk-parse\",\n \"chalk-recursive\",\n \"chalk-solve\",\n \"indexmap 2.1.0\",\n \"salsa\",\n \"string_cache\",\n \"tracing\",\n]\n\n[[package]]\nname = \"chalk-ir\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"chalk-derive\",\n]\n\n[[package]]\nname = \"chalk-parse\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"lalrpop\",\n \"lalrpop-util\",\n \"regex\",\n \"string_cache\",\n]\n\n[[package]]\nname = \"chalk-recursive\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"chalk-derive\",\n \"chalk-integration\",\n \"chalk-ir\",\n \"chalk-solve\",\n \"rustc-hash\",\n \"tracing\",\n]\n\n[[package]]\nname = \"chalk-solve\"\nversion = \"0.98.0-dev.0\"\ndependencies = [\n \"chalk-derive\",\n \"chalk-integration\",\n \"chalk-ir\",\n \"ena\",\n \"indexmap 2.1.0\",\n \"itertools 0.12.0\",\n \"petgraph\",\n \"rustc-hash\",\n \"tracing\",\n \"tracing-subscriber\",\n \"tracing-tree\",\n]\n\n[[package]]\nname = \"clipboard-win\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7191c27c2357d9b7ef96baac1773290d4ca63b24205b82a3fd8a0637afcf0362\"\ndependencies = [\n \"error-code\",\n \"str-buf\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dissimilar\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86e3bdc80eee6e16b2b6b0f87fbc98c04bee3455e35174c0de1a125d0688c632\"\n\n[[package]]\nname = \"docopt\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f3f119846c823f9eafcf953a8f6ffb6ed69bf6240883261a7f13b634579a51f\"\ndependencies = [\n \"lazy_static\",\n \"regex\",\n \"serde\",\n \"strsim\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\"\n\n[[package]]\nname = \"ena\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c533630cf40e9caa44bd91aadc88a75d75a4c3a12b4cfde353cbed41daa1e1f1\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f258a7194e7f7c2a7837a8913aeab7fd8c383457034fa20ce4dd3dcb813e8eb8\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"error-code\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64f18991e7bf11e7ffee451b5318b5c1a73c52d0d0ada6e5a3017c8c1ced6a21\"\ndependencies = [\n \"libc\",\n \"str-buf\",\n]\n\n[[package]]\nname = \"expect-test\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d9eafeadd538e68fb28016364c9732d78e420b9ff8853fa5e4058861e9f8d3\"\ndependencies = [\n \"dissimilar\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe9006bed769170c11f845cf00c7c1e9092aeb3f268e007c3e760ac68008070f\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93e7192158dbcda357bdec5fb5788eebf8bbac027f3f33e719d29135ae84156\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c\"\ndependencies = [\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d77f7ec81a6d05a3abb01ab6eb7590f6083d08449fe5a1c8b1e620283546ccb7\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.14.2\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb0889898416213fab133e1d33a0e5858a48177452750691bde3666d0fdbaf8b\"\ndependencies = [\n \"hermit-abi\",\n \"rustix\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25db6b064527c5d482d0423354fcd07a89a2dfe07b67892e62411946db7f07b0\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"lalrpop\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da4081d44f4611b66c6dd725e6de3169f9f63905421e8626fcb86b6a898998b8\"\ndependencies = [\n \"ascii-canvas\",\n \"bit-set\",\n \"diff\",\n \"ena\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"lalrpop-util\",\n \"petgraph\",\n \"pico-args\",\n \"regex\",\n \"regex-syntax 0.7.5\",\n \"string_cache\",\n \"term\",\n \"tiny-keccak\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"lalrpop-util\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f35c735096c0293d313e8f2a641627472b83d01b937177fe76e5e2708d31e0d\"\ndependencies = [\n \"regex\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.150\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89d92a4743f9a61002fae18374ed11e7973f530cb3a3255fb354818118b2203c\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85c833ca1e66078851dba29046874e38f08b2c883700aa29a03ddd3b23814ee8\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"969488b55f8ac402214f3f5fd243ebb7206cf82de60d3172994707a4bcc2b829\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167\"\n\n[[package]]\nname = \"new_debug_unreachable\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54\"\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.49.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c073d3c1930d0751774acf49e66653acecb416c3a54c6ec095a9b11caddb5a68\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d17b78036a60663b797adeaee46f5c9dfebb86948d1255007a1d6be0271ff99\"\ndependencies = [\n \"instant\",\n \"lock_api\",\n \"parking_lot_core 0.8.6\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core 0.9.9\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60a2cfe6f0ad2bfc16aefa463b497d5c7a5ecd44a23efa72aa342d90177356dc\"\ndependencies = [\n \"cfg-if\",\n \"instant\",\n \"libc\",\n \"redox_syscall 0.2.16\",\n \"smallvec\",\n \"winapi\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n \"smallvec\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap 2.1.0\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"precomputed-hash\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"134c189feb4956b20f6f547d2cf727d4c0fe06722b20a0eec87ed445a97f92da\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a18479200779601e498ada4e8c1e1f50e3ee19deb0259c25825a98b5603b2cb4\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.3\",\n \"regex-syntax 0.8.2\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.2\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbb5fb1acd8a1a18b3dd5be62d25485eb770e05afb408a9627d14d451bae12da\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ad981d6c340a49cdc40a1028d9c6084ec7e9fa33fcb839cab656a267071e234\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"\n\n[[package]]\nname = \"rustyline\"\nversion = \"12.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"994eca4bca05c87e86e15d90fc7a91d1be64b4482b38cb2d27474568fe7c9db9\"\ndependencies = [\n \"bitflags 2.4.1\",\n \"cfg-if\",\n \"clipboard-win\",\n \"libc\",\n \"log\",\n \"memchr\",\n \"nix\",\n \"scopeguard\",\n \"unicode-segmentation\",\n \"unicode-width\",\n \"utf8parse\",\n \"winapi\",\n]\n\n[[package]]\nname = \"salsa\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b84d9f96071f3f3be0dc818eae3327625d8ebc95b58da37d6850724f31d3403\"\ndependencies = [\n \"crossbeam-utils\",\n \"indexmap 1.9.3\",\n \"lock_api\",\n \"log\",\n \"oorandom\",\n \"parking_lot 0.11.2\",\n \"rustc-hash\",\n \"salsa-macros\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"salsa-macros\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd3904a4ba0a9d0211816177fd34b04c7095443f8cdacd11175064fe541c8fe2\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bca2a08484b285dcb282d0f67b26cadc0df8b19f8c12502c13d966bf9482f001\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6c7207fbec9faa48073f3e3074cbe553af6ea512d7c21ba46e434e70ea9fbc1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4dccd0940a2dcdf68d092b8cbab7dc0ad8fa938bf95787e1b916b0e3d0e8e970\"\n\n[[package]]\nname = \"str-buf\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e08d8363704e6c71fc928674353e6b7c23dcea9d82d7012c8faf2a3a025f8d0\"\n\n[[package]]\nname = \"string_cache\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b\"\ndependencies = [\n \"new_debug_unreachable\",\n \"once_cell\",\n \"parking_lot 0.12.1\",\n \"phf_shared\",\n \"precomputed-hash\",\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23e78b90f2fcf45d3e842032ce32e3f2d1545ba6636271dcbf24fa306d87be7a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"285ba80e733fac80aa4270fbcdf83772a79b80aa35c97075320abfee4a915b06\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f\"\ndependencies = [\n \"dirs-next\",\n \"rustversion\",\n \"winapi\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tiny-keccak\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237\"\ndependencies = [\n \"crunchy\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term 0.46.0\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"tracing-tree\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65139ecd2c3f6484c3b99bc01c77afe21e95473630747c7aca525e78b0666675\"\ndependencies = [\n \"nu-ansi-term 0.49.0\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.111328125,
          "content": "[package]\nname = \"chalk\"\nversion = \"0.98.0-dev.0\"\ndescription = \"Model of the Rust trait system\"\nlicense = \"MIT OR Apache-2.0\"\nauthors = [\"Rust Compiler Team\", \"Chalk developers\"]\nrepository = \"https://github.com/rust-lang/chalk\"\nreadme = \"README.md\"\nkeywords = [\"compiler\", \"traits\", \"prolog\"]\nedition = \"2018\"\npublish = false\n\n[features]\nbench = []\n\n[dependencies]\ndocopt = \"1.1.0\"\nitertools = \"0.12.0\"\nrustyline = { version = \"12.0.0\", default-features = false }\nsalsa = \"0.16.0\"\nserde = \"1.0\"\nserde_derive = \"1.0\"\n\nchalk-derive = { version = \"0.98.0-dev.0\", path = \"chalk-derive\" }\nchalk-engine = { version = \"0.98.0-dev.0\", path = \"chalk-engine\" }\nchalk-ir = { version = \"0.98.0-dev.0\", path = \"chalk-ir\" }\nchalk-solve = { version = \"0.98.0-dev.0\", path = \"chalk-solve\" }\nchalk-recursive = { version = \"0.98.0-dev.0\", path = \"chalk-recursive\" }\nchalk-parse = { version = \"0.98.0-dev.0\", path = \"chalk-parse\" }\nchalk-integration = { version = \"0.98.0-dev.0\", path = \"chalk-integration\" }\n\n[workspace]\n\n[dev-dependencies]\n# used for program_writer test errors\ndiff = \"0.1\"\nexpect-test = \"1.4.1\"\npretty_assertions = \"1.4.0\"\nregex = \"1\"\n"
        },
        {
          "name": "GLOSSARY.md",
          "type": "blob",
          "size": 0.1298828125,
          "content": "# Glossary\n\nPlease see [Appendix A: Glossary and terminology](`https://rust-lang.github.io/chalk/book/glossary.html`) in Chalk book.\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.037109375,
          "content": "Copyright (c) 2015 Chalk contributors\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3857421875,
          "content": "[![Build Status](https://github.com/rust-lang/chalk/workflows/CI/badge.svg)](https://github.com/rust-lang/chalk/actions?workflow=CI)\n[![Chalk Book](https://img.shields.io/badge/book-chalk-blue.svg)](https://rust-lang.github.io/chalk/book/)\n[![Rust Documentation](https://img.shields.io/badge/api-rustdoc-blue.svg)](https://rust-lang.github.io/chalk/chalk/)\n\n# chalk\n\nChalk is a library that implements the Rust trait system, based on [Prolog-ish][Prolog] logic rules.\n\nSee the [Chalk book](https://rust-lang.github.io/chalk/book/) for more information.\n\n## FAQ\n\n**How does chalk relate to rustc?** The plan is to have rustc use the\n`chalk-solve` crate (in this repo) to answer questions about Rust programs, for\nexample, \"Does `Vec<u32>` implement `Debug`?\". Internally, chalk converts\nRust-specific information into logic and uses a logic engine to find the answer\nto the original query. For more details, see\n[this explanation in the chalk book][chalk-lowering-details].\n\n**Where does the name come from?** `chalk` is named after [Chalkidiki], the area where [Aristotle] was\nborn. Since Prolog is a logic programming language, this seemed a\nsuitable reference.\n\n[Prolog]: https://en.wikipedia.org/wiki/Prolog\n[Chalkidiki]: https://en.wikipedia.org/wiki/Chalkidiki\n[Aristotle]: https://en.wikipedia.org/wiki/Aristotle\n[chalk-lowering-details]: https://rust-lang.github.io/chalk/book/#chalk-works-by-converting-rust-goals-into-logical-inference-rules\n\n## Blog posts\n[blog-posts]: #blog-posts\nHere are some blog posts talking about chalk:\n\n- [Lowering Rust Traits to Logic](https://smallcultfollowing.com/babysteps/blog/2017/01/26/lowering-rust-traits-to-logic/)\n    - Explains the basic concepts at play\n- [Unification in Chalk, Part 1](https://smallcultfollowing.com/babysteps/blog/2017/03/25/unification-in-chalk-part-1/)\n    - An introduction to unification\n- [Unification in Chalk, Part 2](https://smallcultfollowing.com/babysteps/blog/2017/04/23/unification-in-chalk-part-2/)\n    - Extending the system for associated types\n- [Negative reasoning in Chalk](https://aturon.github.io/blog/2017/04/24/negative-chalk/)\n    - How to prove that something is not true\n- [Query structure in chalk](https://smallcultfollowing.com/babysteps/blog/2017/05/25/query-structure-in-chalk/)\n    - The basic chalk query structure, with pointers into the chalk implementation\n- [Cyclic queries in chalk](https://smallcultfollowing.com/babysteps/blog/2017/09/12/tabling-handling-cyclic-queries-in-chalk/)\n    - Handling cyclic relations and enabling the implementation of implied bounds and other long-desired features in an elegant way\n\n## REPL\n\nThere is a repl mainly for debugging purposes which can be run by `cargo run`. Some basic examples are in [libstd.chalk](libstd.chalk):\n```bash\n$ cargo run\n?- load libstd.chalk\n?- Vec<Box<i32>>: Clone\nUnique; substitution [], lifetime constraints []\n```\n\n## Contributing\n\nIf you'd like to contribute, consider joining the [Traits Working Group][working-group].\nWe hang out on the [rust-lang zulip][rust-lang-zulip] in the [#wg-traits][wg-traits-stream] stream.\n\nSee [the contributing chapter][contributing] in the chalk book for more info.\n\n[working-group]: https://rust-lang.github.io/compiler-team/working-groups/traits/\n[rust-lang-zulip]:https://rust-lang.zulipchat.com\n[wg-traits-stream]: https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits\n[contributing]: https://rust-lang.github.io/chalk/book/contribution_guide.html\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 33.8642578125,
          "content": "### Changelog\n\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\n\nGenerated by [`auto-changelog`](https://github.com/CookPete/auto-changelog)\n(Note: versions before 0.11.0 were manually generated).\n\n#### [v0.96.0](https://github.com/rust-lang/chalk/compare/v0.95.0...v0.96.0)\n\n- Rename generator to coroutine [`#806`](https://github.com/rust-lang/chalk/pull/806)\n\n#### [v0.95.0](https://github.com/rust-lang/chalk/compare/v0.94.0...v0.95.0)\n\n> 19 November 2023\n\n- Fixes typo in what_is_chalk.md [`#804`](https://github.com/rust-lang/chalk/pull/804)\n- Bump deps [`#805`](https://github.com/rust-lang/chalk/pull/805)\n\n#### [v0.94.0](https://github.com/rust-lang/chalk/compare/v0.93.0...v0.94.0)\n\n> 8 October 2023\n\n- Remove an unnecessary mut and fix warning [`#803`](https://github.com/rust-lang/chalk/pull/803)\n- Upgrade to indexmap 2 [`#802`](https://github.com/rust-lang/chalk/pull/802)\n- chalk-solve: upgrade petgraph to version 0.6.4 [`#801`](https://github.com/rust-lang/chalk/pull/801)\n\n#### [v0.93.0](https://github.com/rust-lang/chalk/compare/v0.92.0...v0.93.0)\n\n> 13 August 2023\n\n- Push DiscriminantKind implementation fact unconditionally [`#800`](https://github.com/rust-lang/chalk/pull/800)\n\n#### [v0.92.0](https://github.com/rust-lang/chalk/compare/v0.91.0...v0.92.0)\n\n> 30 June 2023\n\n- Pin cargo-workspaces to 0.2.44 [`#799`](https://github.com/rust-lang/chalk/pull/799)\n- fix: generalize types before generating built-in `Normalize` clauses [`#797`](https://github.com/rust-lang/chalk/pull/797)\n- Support `FnPtr` trait [`#798`](https://github.com/rust-lang/chalk/pull/798)\n- Generate clauses for placeholder associated types [`#795`](https://github.com/rust-lang/chalk/pull/795)\n- Generalize program clause for `AliasEq` goal with nested alias [`#792`](https://github.com/rust-lang/chalk/pull/792)\n- Generate `Normalize` clauses for dyn and opaque types [`#780`](https://github.com/rust-lang/chalk/pull/780)\n\n#### [v0.91.0](https://github.com/rust-lang/chalk/compare/v0.90.0...v0.91.0)\n\n> 30 April 2023\n\n- Add support for `Pointee` trait [`#794`](https://github.com/rust-lang/chalk/pull/794)\n- add test for bug with mixed cycles [`#788`](https://github.com/rust-lang/chalk/pull/788)\n\n#### [v0.90.0](https://github.com/rust-lang/chalk/compare/v0.89.0...v0.90.0)\n\n> 2 April 2023\n\n- update syn to 2.0 [`#793`](https://github.com/rust-lang/chalk/pull/793)\n\n#### [v0.89.0](https://github.com/rust-lang/chalk/compare/v0.88.0...v0.89.0)\n\n> 19 March 2023\n\n- Fix projection substitution order considering GATs [`#790`](https://github.com/rust-lang/chalk/pull/790)\n- update `inductive_canonical_cycle` test [`#787`](https://github.com/rust-lang/chalk/pull/787)\n- Add test for inductive canonical cycle [`#786`](https://github.com/rust-lang/chalk/pull/786)\n\n#### [v0.88.0](https://github.com/rust-lang/chalk/compare/v0.87.0...v0.88.0)\n\n> 4 December 2022\n\n- Add test for example found from removing fresh vars in rustc [`#784`](https://github.com/rust-lang/chalk/pull/784)\n- Implement should_continue in chalk-recursive [`#774`](https://github.com/rust-lang/chalk/pull/774)\n\n#### [v0.87.0](https://github.com/rust-lang/chalk/compare/v0.86.0...v0.87.0)\n\n> 13 November 2022\n\n- Remove empty lifetime [`#783`](https://github.com/rust-lang/chalk/pull/783)\n- Implement support for the `Tuple` trait [`#782`](https://github.com/rust-lang/chalk/pull/782)\n- fix: consider ADT's generic parameters [`#781`](https://github.com/rust-lang/chalk/pull/781)\n\n#### [v0.86.0](https://github.com/rust-lang/chalk/compare/v0.85.0...v0.86.0)\n\n> 16 October 2022\n\n- Fix parameter for `Interner` in `derive(FallibleTypeFolder)` macro [`#779`](https://github.com/rust-lang/chalk/pull/779)\n- Fix `Self` type retrieval from `ProjectionTy` [`#778`](https://github.com/rust-lang/chalk/pull/778)\n\n#### [v0.85.0](https://github.com/rust-lang/chalk/compare/v0.84.0...v0.85.0)\n\n> 9 October 2022\n\n- Split fallible infallible folding [`#772`](https://github.com/rust-lang/chalk/pull/772)\n- Bump regex from 1.5.4 to 1.5.5 [`#764`](https://github.com/rust-lang/chalk/pull/764)\n- Bump thread_local from 1.1.3 to 1.1.4 [`#766`](https://github.com/rust-lang/chalk/pull/766)\n- Bump crossbeam-utils from 0.8.5 to 0.8.9 [`#771`](https://github.com/rust-lang/chalk/pull/771)\n- Update mdbook-mermaid [`#776`](https://github.com/rust-lang/chalk/pull/776)\n\n#### [v0.84.0](https://github.com/rust-lang/chalk/compare/v0.83.0...v0.84.0)\n\n> 31 July 2022\n\n- Solve auto traits for closures (issue #734) [`#755`](https://github.com/rust-lang/chalk/pull/755)\n\n#### [v0.83.0](https://github.com/rust-lang/chalk/compare/v0.82.0...v0.83.0)\n\n> 26 June 2022\n\n- Remove unused Result assoc type from Fold trait [`#768`](https://github.com/rust-lang/chalk/pull/768)\n- Rename folding/visiting traits [`#767`](https://github.com/rust-lang/chalk/pull/767)\n- Detect dark theme for mermaid diagrams [`#770`](https://github.com/rust-lang/chalk/pull/770)\n- Add workaround for GitHub doc url's returning 403 [`#769`](https://github.com/rust-lang/chalk/pull/769)\n- Typo [`#765`](https://github.com/rust-lang/chalk/pull/765)\n\n#### [v0.82.0](https://github.com/rust-lang/chalk/compare/v0.81.0...v0.82.0)\n\n> 12 April 2022\n\n- we only need to prove things one way [`#754`](https://github.com/rust-lang/chalk/pull/754)\n\n#### [v0.81.0](https://github.com/rust-lang/chalk/compare/v0.80.0...v0.81.0)\n\n> 27 March 2022\n\n- Use SPDX license format [`#757`](https://github.com/rust-lang/chalk/pull/757)\n- Fix function pointers of different param counts unifying [`#759`](https://github.com/rust-lang/chalk/pull/759)\n\n#### [v0.80.0](https://github.com/rust-lang/chalk/compare/v0.79.0...v0.80.0)\n\n> 20 March 2022\n\n- Make DispatchFromDyn a well-known type [`#738`](https://github.com/rust-lang/chalk/pull/738)\n\n#### [v0.79.0](https://github.com/rust-lang/chalk/compare/v0.78.0...v0.79.0)\n\n> 13 March 2022\n\n- Add missing fold_free_var_const [`#756`](https://github.com/rust-lang/chalk/pull/756)\n- Fix clippy warnings [`#753`](https://github.com/rust-lang/chalk/pull/753)\n\n#### [v0.78.0](https://github.com/rust-lang/chalk/compare/v0.77.0...v0.78.0)\n\n> 6 March 2022\n\n- repl: add --solver flag. [`#751`](https://github.com/rust-lang/chalk/pull/751)\n- recursive: fix hang on fulfill by slightly smarter check for progress. [`#752`](https://github.com/rust-lang/chalk/pull/752)\n- Add some additional topics to todo.md [`#748`](https://github.com/rust-lang/chalk/pull/748)\n\n#### [v0.77.0](https://github.com/rust-lang/chalk/compare/v0.76.0...v0.77.0)\n\n> 20 February 2022\n\n- Update `indexmap` to 1.8.0 [`#746`](https://github.com/rust-lang/chalk/pull/746)\n- Allow tests to be updated automatically [`#744`](https://github.com/rust-lang/chalk/pull/744)\n\n#### [v0.76.0](https://github.com/rust-lang/chalk/compare/v0.75.0...v0.76.0)\n\n> 26 December 2021\n\n- Remove `Ord` from `chalk_ir::interner::DefId` [`#740`](https://github.com/rust-lang/chalk/pull/740)\n- Remove unused field [`#743`](https://github.com/rust-lang/chalk/pull/743)\n- Allow `test` invocations to elide empty `program` declarations [`#741`](https://github.com/rust-lang/chalk/pull/741)\n\n#### [v0.75.0](https://github.com/rust-lang/chalk/compare/v0.74.0...v0.75.0)\n\n> 12 December 2021\n\n- Use owned copies of Interner rather than refs [`#735`](https://github.com/rust-lang/chalk/pull/735)\n- chore: update tracing dependencies (amongst others) [`#737`](https://github.com/rust-lang/chalk/pull/737)\n\n#### [v0.74.0](https://github.com/rust-lang/chalk/compare/v0.73.0...v0.74.0)\n\n> 29 November 2021\n\n- More clause fixes [`#728`](https://github.com/rust-lang/chalk/pull/728)\n- Introduce `Folder::Error` [`#709`](https://github.com/rust-lang/chalk/pull/709)\n\n#### [v0.73.0](https://github.com/rust-lang/chalk/compare/v0.72.0...v0.73.0)\n\n> 7 November 2021\n\n- Fix broken markdown and intr-doc links in documentation [`#731`](https://github.com/rust-lang/chalk/pull/731)\n\n#### [v0.72.0](https://github.com/rust-lang/chalk/compare/v0.71.0...v0.72.0)\n\n> 10 October 2021\n\n- Replace `ControlFlow` with version in std [`#729`](https://github.com/rust-lang/chalk/pull/729)\n- Regenerate lockfile to fix tests in nightly [`#730`](https://github.com/rust-lang/chalk/pull/730)\n\n#### [v0.71.0](https://github.com/rust-lang/chalk/compare/v0.70.0...v0.71.0)\n\n> 29 August 2021\n\n- Make the Generator trait well-known [`#723`](https://github.com/rust-lang/chalk/pull/723)\n- Switch runner for publish job to Ubuntu from Mac [`#722`](https://github.com/rust-lang/chalk/pull/722)\n\n#### [v0.70.0](https://github.com/rust-lang/chalk/compare/v0.69.0...v0.70.0)\n\n> 1 August 2021\n\n- Install auto-changelog globally to fix command not found [`#720`](https://github.com/rust-lang/chalk/pull/720)\n- rework recursive solver for better integration into an expanded version of salsa [`#708`](https://github.com/rust-lang/chalk/pull/708)\n- Make various methods on InferenceTable public [`#718`](https://github.com/rust-lang/chalk/pull/718)\n- Use unnamed consts in chalk-derive [`#717`](https://github.com/rust-lang/chalk/pull/717)\n- Update \"implied bounds\" rules for types to match #206 [`#714`](https://github.com/rust-lang/chalk/pull/714)\n- Update publishing page in the book with automation details [`#715`](https://github.com/rust-lang/chalk/pull/715)\n- Skip crate publishing if there have been no changes [`#711`](https://github.com/rust-lang/chalk/pull/711)\n- Fix automatic changelog generation to include current version's changes [`#713`](https://github.com/rust-lang/chalk/pull/713)\n- Automate the changelog [`#710`](https://github.com/rust-lang/chalk/pull/710)\n- Fix typo: [defined by the] embedded -&gt; embedder [`#712`](https://github.com/rust-lang/chalk/pull/712)\n\n#### [v0.69.0](https://github.com/rust-lang/chalk/compare/v0.68.0...v0.69.0)\n\n> 6 June 2021\n\n#### [v0.68.0](https://github.com/rust-lang/chalk/compare/v0.67.0...v0.68.0)\n\n> 30 May 2021\n\n#### [v0.67.0](https://github.com/rust-lang/chalk/compare/v0.65.0...v0.67.0)\n\n> 23 May 2021\n\n- Mentions to Goal in major_concepts are meant to be DomainGoal [`#707`](https://github.com/rust-lang/chalk/pull/707)\n- fix typo (Deterermine-&gt;Determine) in docs [`#705`](https://github.com/rust-lang/chalk/pull/705)\n- Bump version to 0.67.0 [`#706`](https://github.com/rust-lang/chalk/pull/706)\n- fix(chalk-recursive): allow chalk-solve's default-features to be disabled [`#703`](https://github.com/rust-lang/chalk/pull/703)\n- Unignore a few tests. [`#702`](https://github.com/rust-lang/chalk/pull/702)\n- Small fixes on engine [`#704`](https://github.com/rust-lang/chalk/pull/704)\n\n#### [v0.65.0](https://github.com/rust-lang/chalk/compare/v0.64.0...v0.65.0)\n\n> 25 April 2021\n\n- Show -&gt; Display [`#701`](https://github.com/rust-lang/chalk/pull/701)\n- Coinduction handling for recursive solver [`#698`](https://github.com/rust-lang/chalk/pull/698)\n\n#### [v0.64.0](https://github.com/rust-lang/chalk/compare/v0.63.0...v0.64.0)\n\n> 11 April 2021\n\n- Add Fold binders depth example [`#699`](https://github.com/rust-lang/chalk/pull/699)\n\n#### [v0.63.0](https://github.com/rust-lang/chalk/compare/v0.62.0...v0.63.0)\n\n> 28 March 2021\n\n- Add a couple of examples on the generator section of the book [`#697`](https://github.com/rust-lang/chalk/pull/697)\n- Properly link Rustc's TyKind [`#696`](https://github.com/rust-lang/chalk/pull/696)\n- Fix some book typos [`#695`](https://github.com/rust-lang/chalk/pull/695)\n\n#### [v0.62.0](https://github.com/rust-lang/chalk/compare/v0.61.0...v0.62.0)\n\n> 21 March 2021\n\n- Implement CastTo&lt;WhereClause&gt; for TypeOutlives [`#693`](https://github.com/rust-lang/chalk/pull/693)\n\n#### [v0.61.0](https://github.com/rust-lang/chalk/compare/v0.60.0...v0.61.0)\n\n> 14 March 2021\n\n- fix typo types.md [`#692`](https://github.com/rust-lang/chalk/pull/692)\n- fix typo [`#691`](https://github.com/rust-lang/chalk/pull/691)\n\n#### [v0.60.0](https://github.com/rust-lang/chalk/compare/v0.59.0...v0.60.0)\n\n> 7 March 2021\n\n#### [v0.59.0](https://github.com/rust-lang/chalk/compare/v0.58.0...v0.59.0)\n\n> 28 February 2021\n\n- Bump dependencies and propagate tracing features [`#687`](https://github.com/rust-lang/chalk/pull/687)\n\n#### [v0.58.0](https://github.com/rust-lang/chalk/compare/v0.57.0...v0.58.0)\n\n> 21 February 2021\n\n- Generate clauses for super traits of opaque bounds [`#681`](https://github.com/rust-lang/chalk/pull/681)\n\n#### [v0.57.0](https://github.com/rust-lang/chalk/compare/v0.56.0...v0.57.0)\n\n> 14 February 2021\n\n- add Movability to Generator [`#685`](https://github.com/rust-lang/chalk/pull/685)\n- Opaque type cleanup [`#684`](https://github.com/rust-lang/chalk/pull/684)\n\n#### [v0.56.0](https://github.com/rust-lang/chalk/compare/v0.55.0...v0.56.0)\n\n> 7 February 2021\n\n- Compute flags in interner [`#682`](https://github.com/rust-lang/chalk/pull/682)\n\n#### [v0.55.0](https://github.com/rust-lang/chalk/compare/v0.52.0...v0.55.0)\n\n> 1 February 2021\n\n- No environment in Constraints [`#680`](https://github.com/rust-lang/chalk/pull/680)\n\n#### [v0.52.0](https://github.com/rust-lang/chalk/compare/v0.51.0...v0.52.0)\n\n> 31 January 2021\n\n- mdbook fix [`#679`](https://github.com/rust-lang/chalk/pull/679)\n- Subst canonical environment clauses [`#671`](https://github.com/rust-lang/chalk/pull/671)\n- Some various bits of cleanup [`#661`](https://github.com/rust-lang/chalk/pull/661)\n\n#### [v0.51.0](https://github.com/rust-lang/chalk/compare/v0.50.0...v0.51.0)\n\n> 24 January 2021\n\n#### [v0.50.0](https://github.com/rust-lang/chalk/compare/v0.49.0...v0.50.0)\n\n> 20 January 2021\n\n- Generalize with variance [`#673`](https://github.com/rust-lang/chalk/pull/673)\n- Remove dead code and re-enable functions tests [`#664`](https://github.com/rust-lang/chalk/pull/664)\n\n#### [v0.49.0](https://github.com/rust-lang/chalk/compare/v0.48.0...v0.49.0)\n\n> 17 January 2021\n\n- Update WellFormed-AssocTy rule in book [`#675`](https://github.com/rust-lang/chalk/pull/675)\n\n#### [v0.48.0](https://github.com/rust-lang/chalk/compare/v0.47.0...v0.48.0)\n\n> 10 January 2021\n\n- Deduplicate solution enum in chalk-recursive [`#674`](https://github.com/rust-lang/chalk/pull/674)\n- Update mdbook [`#672`](https://github.com/rust-lang/chalk/pull/672)\n\n#### [v0.47.0](https://github.com/rust-lang/chalk/compare/v0.46.0...v0.47.0)\n\n> 3 January 2021\n\n- fix: small typo error [`#669`](https://github.com/rust-lang/chalk/pull/669)\n\n#### [v0.46.0](https://github.com/rust-lang/chalk/compare/v0.45.0...v0.46.0)\n\n> 27 December 2020\n\n- Update occurences of outdated ProjectionEq predicate in Chalk book [`#668`](https://github.com/rust-lang/chalk/pull/668)\n\n#### [v0.45.0](https://github.com/rust-lang/chalk/compare/v0.43.0...v0.45.0)\n\n> 20 December 2020\n\n- Optimize `Fold` impls for types on the heap [`#662`](https://github.com/rust-lang/chalk/pull/662)\n- Add TypeFlags for TyKind in chalk-ir [`#639`](https://github.com/rust-lang/chalk/pull/639)\n- Update mermaid.min.js to fix mermaid graphs [`#663`](https://github.com/rust-lang/chalk/pull/663)\n- Pass canonical goals to program clauses code in SLG solver [`#624`](https://github.com/rust-lang/chalk/pull/624)\n- Add `DiscriminantKind` builtin trait [`#633`](https://github.com/rust-lang/chalk/pull/633)\n\n#### [v0.43.0](https://github.com/rust-lang/chalk/compare/v0.41.0...v0.43.0)\n\n> 6 December 2020\n\n- Always relate with Invariant to non-General inference vars [`#659`](https://github.com/rust-lang/chalk/pull/659)\n- Fold by value, not by reference [`#660`](https://github.com/rust-lang/chalk/pull/660)\n\n#### [v0.41.0](https://github.com/rust-lang/chalk/compare/v0.40.0...v0.41.0)\n\n> 29 November 2020\n\n- Add \"Recursive solver coinduction chapter\" to book todo list [`#657`](https://github.com/rust-lang/chalk/pull/657)\n- Fix handling of variables in goal for new alias clauses [`#656`](https://github.com/rust-lang/chalk/pull/656)\n- Make Variances Debug [`#655`](https://github.com/rust-lang/chalk/pull/655)\n\n#### [v0.40.0](https://github.com/rust-lang/chalk/compare/v0.39.0...v0.40.0)\n\n> 22 November 2020\n\n- Fix boats' coherence talk link in the book [`#654`](https://github.com/rust-lang/chalk/pull/654)\n- Introduce `Visitor::BreakTy` [`#651`](https://github.com/rust-lang/chalk/pull/651)\n- Hyperlink protocol changed: HTTP -&gt; HTTPS (#1) [`#652`](https://github.com/rust-lang/chalk/pull/652)\n- Hyperlink protocol changed: HTTP -&gt; HTTPS [`#1`](https://github.com/rust-lang/chalk/pull/1)\n\n#### [v0.39.0](https://github.com/rust-lang/chalk/compare/v0.37.0...v0.39.0)\n\n> 15 November 2020\n\n- Bump version to 0.39.0-dev.0 [`#653`](https://github.com/rust-lang/chalk/pull/653)\n- Clauses cleanup [`#638`](https://github.com/rust-lang/chalk/pull/638)\n- Variance [`#609`](https://github.com/rust-lang/chalk/pull/609)\n- Fix \"var_universe invoked on bound variable\" crash [`#649`](https://github.com/rust-lang/chalk/pull/649)\n- Add empty and erased regions [`#650`](https://github.com/rust-lang/chalk/pull/650)\n- Use `ControlFlow` in `Visitor` [`#645`](https://github.com/rust-lang/chalk/pull/645)\n- Remove `TargetInterner` [`#648`](https://github.com/rust-lang/chalk/pull/648)\n- Make max goal size for recursive solver configurable [`#647`](https://github.com/rust-lang/chalk/pull/647)\n\n#### [v0.37.0](https://github.com/rust-lang/chalk/compare/v0.36.0...v0.37.0)\n\n> 1 November 2020\n\n- Program printer: Use Debug to print concrete consts [`#641`](https://github.com/rust-lang/chalk/pull/641)\n\n#### [v0.36.0](https://github.com/rust-lang/chalk/compare/v0.35.0...v0.36.0)\n\n> 29 October 2020\n\n- Replace bound lifetime variables with inference variables in AntiUnifier [`#640`](https://github.com/rust-lang/chalk/pull/640)\n\n#### [v0.35.0](https://github.com/rust-lang/chalk/compare/v0.34.0...v0.35.0)\n\n> 25 October 2020\n\n- Fix glossary links [`#635`](https://github.com/rust-lang/chalk/pull/635)\n- rewrite parts concerning typename, fix links [`#634`](https://github.com/rust-lang/chalk/pull/634)\n- Document notation [`#630`](https://github.com/rust-lang/chalk/pull/630)\n- Format parse errors better [`#632`](https://github.com/rust-lang/chalk/pull/632)\n- Remove TypeName and merge into TyKind [`#629`](https://github.com/rust-lang/chalk/pull/629)\n- Rename TyData to TyKind [`#628`](https://github.com/rust-lang/chalk/pull/628)\n\n#### [v0.34.0](https://github.com/rust-lang/chalk/compare/v0.33.0...v0.34.0)\n\n> 18 October 2020\n\n- Handle cached answers correctly in any_future_answer [`#626`](https://github.com/rust-lang/chalk/pull/626)\n- Don't add wf clauses for function args [`#625`](https://github.com/rust-lang/chalk/pull/625)\n\n#### [v0.33.0](https://github.com/rust-lang/chalk/compare/v0.32.0...v0.33.0)\n\n> 11 October 2020\n\n#### [v0.32.0](https://github.com/rust-lang/chalk/compare/v0.31.0...v0.32.0)\n\n> 7 October 2020\n\n- Don't panic on unimplemented types for auto traits [`#622`](https://github.com/rust-lang/chalk/pull/622)\n- Update book and add coherence chapter [`#623`](https://github.com/rust-lang/chalk/pull/623)\n- Fix mdbook links after chalk-engine changes [`#620`](https://github.com/rust-lang/chalk/pull/620)\n- Parse opaque types without bounds [`#619`](https://github.com/rust-lang/chalk/pull/619)\n\n#### [v0.31.0](https://github.com/rust-lang/chalk/compare/v0.30.0...v0.31.0)\n\n> 4 October 2020\n\n- Add static lifetime [`#617`](https://github.com/rust-lang/chalk/pull/617)\n- Support fundamental types with multiple type parameters [`#616`](https://github.com/rust-lang/chalk/pull/616)\n- Remove Context trait from chalk-engine [`#611`](https://github.com/rust-lang/chalk/pull/611)\n- Implement generators [`#593`](https://github.com/rust-lang/chalk/pull/593)\n\n#### [v0.30.0](https://github.com/rust-lang/chalk/compare/v0.29.0...v0.30.0)\n\n> 28 September 2020\n\n- Fix assertion failure during recursive solving [`#613`](https://github.com/rust-lang/chalk/pull/613)\n\n#### [v0.29.0](https://github.com/rust-lang/chalk/compare/v0.28.0...v0.29.0)\n\n> 27 September 2020\n\n#### [v0.28.0](https://github.com/rust-lang/chalk/compare/v0.27.0...v0.28.0)\n\n> 20 September 2020\n\n- Add CoerceUnsized builtin rules [`#607`](https://github.com/rust-lang/chalk/pull/607)\n- Extend push_auto_trait_impl to built-in types [`#612`](https://github.com/rust-lang/chalk/pull/612)\n- fix debug print of pointer types [`#608`](https://github.com/rust-lang/chalk/pull/608)\n\n#### [v0.27.0](https://github.com/rust-lang/chalk/compare/v0.26.0...v0.27.0)\n\n> 13 September 2020\n\n- More lowering improvements [`#606`](https://github.com/rust-lang/chalk/pull/606)\n- Extend well-known traits by Unpin [`#603`](https://github.com/rust-lang/chalk/pull/603)\n- Simplify lowering [`#602`](https://github.com/rust-lang/chalk/pull/602)\n\n#### [v0.26.0](https://github.com/rust-lang/chalk/compare/v0.25.0...v0.26.0)\n\n> 6 September 2020\n\n- Extern types [`#601`](https://github.com/rust-lang/chalk/pull/601)\n- Check well-formedness of opaque type declarations [`#579`](https://github.com/rust-lang/chalk/pull/579)\n- Refactor FnPointer and FnDef [`#599`](https://github.com/rust-lang/chalk/pull/599)\n- document opaque types [`#559`](https://github.com/rust-lang/chalk/pull/559)\n- Fix links in chalk book [`#600`](https://github.com/rust-lang/chalk/pull/600)\n- Properly unify consts with vars [`#598`](https://github.com/rust-lang/chalk/pull/598)\n\n#### [v0.25.0](https://github.com/rust-lang/chalk/compare/v0.24.0...v0.25.0)\n\n> 30 August 2020\n\n- Guard against infinite loop in recursive solver [`#569`](https://github.com/rust-lang/chalk/pull/569)\n\n#### [v0.24.0](https://github.com/rust-lang/chalk/compare/v0.23.0...v0.24.0)\n\n> 23 August 2020\n\n#### [v0.23.0](https://github.com/rust-lang/chalk/compare/v0.22.0...v0.23.0)\n\n> 16 August 2020\n\n- Update dependencies [`#594`](https://github.com/rust-lang/chalk/pull/594)\n\n#### [v0.22.0](https://github.com/rust-lang/chalk/compare/v0.21.0...v0.22.0)\n\n> 9 August 2020\n\n- Turn a few generics into dynamic dispatch. [`#592`](https://github.com/rust-lang/chalk/pull/592)\n\n#### [v0.21.0](https://github.com/rust-lang/chalk/compare/v0.20.0...v0.21.0)\n\n> 4 August 2020\n\n- Handle well known traits for more types [`#591`](https://github.com/rust-lang/chalk/pull/591)\n- .chalk syntax writer: Fix name de-duplication bug [`#585`](https://github.com/rust-lang/chalk/pull/585)\n\n#### [v0.20.0](https://github.com/rust-lang/chalk/compare/v0.19.0...v0.20.0)\n\n> 2 August 2020\n\n- Don't ever consider cycles until we've started accepting ambiguous answers [`#588`](https://github.com/rust-lang/chalk/pull/588)\n- Upgrade salsa [`#581`](https://github.com/rust-lang/chalk/pull/581)\n- Add default `RustIrDatabase::*_name` impls [`#575`](https://github.com/rust-lang/chalk/pull/575)\n\n#### [v0.19.0](https://github.com/rust-lang/chalk/compare/v0.18.0...v0.19.0)\n\n> 26 July 2020\n\n- Fix clippy warnings [`#577`](https://github.com/rust-lang/chalk/pull/577)\n- Refactor and flesh out Fn pointers [`#573`](https://github.com/rust-lang/chalk/pull/573)\n- Create single Github actions job to gate bors on [`#582`](https://github.com/rust-lang/chalk/pull/582)\n- Remove `force_impl_for` from `RustIrDatabase` [`#583`](https://github.com/rust-lang/chalk/pull/583)\n- Don't fail CI if only nightly fails [`#580`](https://github.com/rust-lang/chalk/pull/580)\n- Add workflow_dispatch for manual publish [`#578`](https://github.com/rust-lang/chalk/pull/578)\n- Support where clauses on opaque types [`#563`](https://github.com/rust-lang/chalk/pull/563)\n- Upgrade everything except Salsa [`#576`](https://github.com/rust-lang/chalk/pull/576)\n\n#### [v0.18.0](https://github.com/rust-lang/chalk/compare/v0.17.0...v0.18.0)\n\n> 19 July 2020\n\n- Only generate clauses requiring Compatible when it is in the environment [`#566`](https://github.com/rust-lang/chalk/pull/566)\n- Cleanup & comment .chalk file writer tests [`#570`](https://github.com/rust-lang/chalk/pull/570)\n\n#### [v0.17.0](https://github.com/rust-lang/chalk/compare/v0.16.0...v0.17.0)\n\n> 12 July 2020\n\n- Add readme for chalk-recursive [`#572`](https://github.com/rust-lang/chalk/pull/572)\n- Don't flounder on int/float vars [`#555`](https://github.com/rust-lang/chalk/pull/555)\n- Fix associated type bindings in dyn types [`#567`](https://github.com/rust-lang/chalk/pull/567)\n- Remove unit fields from enum variants [`#565`](https://github.com/rust-lang/chalk/pull/565)\n- Fix links in chalk book [`#564`](https://github.com/rust-lang/chalk/pull/564)\n- Separate recursive solver [`#546`](https://github.com/rust-lang/chalk/pull/546)\n- Upgrade dependencies (incl. Salsa)  [`#553`](https://github.com/rust-lang/chalk/pull/553)\n\n#### [v0.16.0](https://github.com/rust-lang/chalk/compare/v0.15.0...v0.16.0)\n\n> 5 July 2020\n\n- Cleanup comments in syntax writer [`#558`](https://github.com/rust-lang/chalk/pull/558)\n- Further reduce interned type boilerplate [`#554`](https://github.com/rust-lang/chalk/pull/554)\n- Allow printing lifetime placeholders [`#557`](https://github.com/rust-lang/chalk/pull/557)\n- Support for ADTs [`#524`](https://github.com/rust-lang/chalk/pull/524)\n- Add type outlives goal [`#551`](https://github.com/rust-lang/chalk/pull/551)\n- Incorporate region constraints into program clauses [`#543`](https://github.com/rust-lang/chalk/pull/543)\n- Feature gate heavy `tracing` dependencies [`#549`](https://github.com/rust-lang/chalk/pull/549)\n- Cleanup function names in `chalk-ir` [`#545`](https://github.com/rust-lang/chalk/pull/545)\n- Use tracing-tree for logging / clean up debug output [`#544`](https://github.com/rust-lang/chalk/pull/544)\n- Fix coherence issue with associated types in generic bound [`#538`](https://github.com/rust-lang/chalk/pull/538)\n- .chalk file syntax writer [`#430`](https://github.com/rust-lang/chalk/pull/430)\n\n#### [v0.15.0](https://github.com/rust-lang/chalk/compare/v0.14.0...v0.15.0)\n\n> 28 June 2020\n\n- Fix built-in Fn impls when generics are involved [`#541`](https://github.com/rust-lang/chalk/pull/541)\n- Add method to get repr data of an ADT to ChalkDatabase [`#523`](https://github.com/rust-lang/chalk/pull/523)\n- Add more Copy implementations [`#539`](https://github.com/rust-lang/chalk/pull/539)\n- Refactor `LifetimeOutlives` goals to produce `AddRegionConstraint` subgoals [`#527`](https://github.com/rust-lang/chalk/pull/527)\n- Document all public items in chalk-ir [`#536`](https://github.com/rust-lang/chalk/pull/536)\n- Typo in book [`#537`](https://github.com/rust-lang/chalk/pull/537)\n- Support logs in lowering tests [`#535`](https://github.com/rust-lang/chalk/pull/535)\n\n#### [v0.14.0](https://github.com/rust-lang/chalk/compare/v0.13.0...v0.14.0)\n\n> 21 June 2020\n\n- Change README to be more clear [`#534`](https://github.com/rust-lang/chalk/pull/534)\n- Ignore auto traits order [`#531`](https://github.com/rust-lang/chalk/pull/531)\n- Add closures [`#519`](https://github.com/rust-lang/chalk/pull/519)\n- Introduce Tracing into Chalk (Third Time's the Charm) [`#525`](https://github.com/rust-lang/chalk/pull/525)\n- Ucanonicalization fix [`#529`](https://github.com/rust-lang/chalk/pull/529)\n- Fix recursive solver completeness example to correctly fail [`#528`](https://github.com/rust-lang/chalk/pull/528)\n\n#### [v0.13.0](https://github.com/rust-lang/chalk/compare/v0.11.0...v0.13.0)\n\n> 14 June 2020\n\n- Refactor ProgramClauseData to remove Implies variant [`#514`](https://github.com/rust-lang/chalk/pull/514)\n- new version: 0.13.0-dev.0 [`#522`](https://github.com/rust-lang/chalk/pull/522)\n- Recursive solver factoring and privacy [`#513`](https://github.com/rust-lang/chalk/pull/513)\n- complete wf checks for Copy impls [`#503`](https://github.com/rust-lang/chalk/pull/503)\n- Model function ABI in the Rust IR [`#481`](https://github.com/rust-lang/chalk/pull/481)\n- add `Unsize` trait implementation [`#427`](https://github.com/rust-lang/chalk/pull/427)\n- add phantom_data adt flag [`#502`](https://github.com/rust-lang/chalk/pull/502)\n- Add FnOnce trait, and provide impl for Function type [`#494`](https://github.com/rust-lang/chalk/pull/494)\n- remove IntoIterator impl for &Binders [`#501`](https://github.com/rust-lang/chalk/pull/501)\n- Use `pretty_assertions` crate when comparing expected and actual output [`#495`](https://github.com/rust-lang/chalk/pull/495)\n- Fix typo in Implied Bounds book chapter [`#497`](https://github.com/rust-lang/chalk/pull/497)\n- rename `WellKnownTrait::&lt;TraitName&gt;Trait` to `WellKnownTrait::&lt;TraitName&gt;` [`#500`](https://github.com/rust-lang/chalk/pull/500)\n- Fix link to Minimums in recursive solver documentation [`#493`](https://github.com/rust-lang/chalk/pull/493)\n- Refactor the recursive solver a bit [`#487`](https://github.com/rust-lang/chalk/pull/487)\n- Add binders around inputs/outputs for FnDefDatum [`#489`](https://github.com/rust-lang/chalk/pull/489)\n- add lifetimes to trait objects [`#492`](https://github.com/rust-lang/chalk/pull/492)\n- update example trait name [`#490`](https://github.com/rust-lang/chalk/pull/490)\n- words [`#491`](https://github.com/rust-lang/chalk/pull/491)\n- document recursive solver [`#488`](https://github.com/rust-lang/chalk/pull/488)\n\n#### [v0.11.0](https://github.com/rust-lang/chalk/compare/v0.10.0...v0.11.0)\n\n> 2 June 2020\n\n- Update publish.yml [`#485`](https://github.com/rust-lang/chalk/pull/485)\n- Update publish.yml [`#484`](https://github.com/rust-lang/chalk/pull/484)\n- Get ready for the first publish [`#483`](https://github.com/rust-lang/chalk/pull/483)\n- Correct mistake in publishing [`#482`](https://github.com/rust-lang/chalk/pull/482)\n- Add lifetime outlives goal [`#451`](https://github.com/rust-lang/chalk/pull/451)\n- Added scheduled release workflow [`#461`](https://github.com/rust-lang/chalk/pull/461)\n- Actually fix tests [`#480`](https://github.com/rust-lang/chalk/pull/480)\n- Remove chalk-base [`#479`](https://github.com/rust-lang/chalk/pull/479)\n- Add function def clauses [`#477`](https://github.com/rust-lang/chalk/pull/477)\n- Include more guidance in ambiguous results [`#433`](https://github.com/rust-lang/chalk/pull/433)\n- Request hidden opaque types lazily [`#478`](https://github.com/rust-lang/chalk/pull/478)\n- Integer and float variable kinds [`#470`](https://github.com/rust-lang/chalk/pull/470)\n- Fix solving &lt;impl Trait as Trait&gt;::AssocType [`#473`](https://github.com/rust-lang/chalk/pull/473)\n- Generate auto trait clauses for opaque type goals [`#468`](https://github.com/rust-lang/chalk/pull/468)\n- Remove unused StackIndex from chalk-engine. [`#474`](https://github.com/rust-lang/chalk/pull/474)\n- Use chain and filter instead of extending a vec in program_clauses_fo… [`#476`](https://github.com/rust-lang/chalk/pull/476)\n- Make chalk-engine depend on chalk-ir [`#472`](https://github.com/rust-lang/chalk/pull/472)\n- Add array types to `TypeName` [`#467`](https://github.com/rust-lang/chalk/pull/467)\n- Fix references to chalk_rust_ir [`#471`](https://github.com/rust-lang/chalk/pull/471)\n- Cleanup crate structure and add features for SLG/recursive solvers [`#459`](https://github.com/rust-lang/chalk/pull/459)\n- Check for trivial cycles in persue_answer [`#469`](https://github.com/rust-lang/chalk/pull/469)\n- Add never type to `TypeName` [`#466`](https://github.com/rust-lang/chalk/pull/466)\n- Opaque Type Generics [`#464`](https://github.com/rust-lang/chalk/pull/464)\n- Issue260 [`#462`](https://github.com/rust-lang/chalk/pull/462)\n- Handle bound vars in builtin trait impls [`#463`](https://github.com/rust-lang/chalk/pull/463)\n- Fix broken link [`#465`](https://github.com/rust-lang/chalk/pull/465)\n- const generics support [`#393`](https://github.com/rust-lang/chalk/pull/393)\n- Add `FnDef` to `TypeName` [`#449`](https://github.com/rust-lang/chalk/pull/449)\n- Rename struct types to ADT types and introduce new interned ADT ID [`#454`](https://github.com/rust-lang/chalk/pull/454)\n- refactor Parameter into GenericArg [`#455`](https://github.com/rust-lang/chalk/pull/455)\n- Bump most dependency crate version. [`#458`](https://github.com/rust-lang/chalk/pull/458)\n- Make lowering failure tests less fragile [`#448`](https://github.com/rust-lang/chalk/pull/448)\n- Fix overeager cycle detection in dyn impl clause generation [`#446`](https://github.com/rust-lang/chalk/pull/446)\n- Upgrade book linkcheck warnings to errors [`#450`](https://github.com/rust-lang/chalk/pull/450)\n- Add the str type [`#441`](https://github.com/rust-lang/chalk/pull/441)\n- Mutable references should not be Copy/Clone [`#447`](https://github.com/rust-lang/chalk/pull/447)\n- Add ObjectSafe goal and flag [`#445`](https://github.com/rust-lang/chalk/pull/445)\n- Add slice type to `TypeName` [`#443`](https://github.com/rust-lang/chalk/pull/443)\n- Add reference types to `TypeName` [`#444`](https://github.com/rust-lang/chalk/pull/444)\n- Add raw pointers to `TypeName` [`#442`](https://github.com/rust-lang/chalk/pull/442)\n- Fix outdated dev guide links [`#436`](https://github.com/rust-lang/chalk/pull/436)\n- add WellKnownTraits chapter to the book [`#428`](https://github.com/rust-lang/chalk/pull/428)\n- Add publishing steps to book [`#422`](https://github.com/rust-lang/chalk/pull/422)\n- Replace lalrpop-intern with string_cache [`#432`](https://github.com/rust-lang/chalk/pull/432)\n- Make `dyn Trait` implement its super traits as well [`#415`](https://github.com/rust-lang/chalk/pull/415)\n- convert from lifetime equality constraints to outlives constraints [`#419`](https://github.com/rust-lang/chalk/pull/419)\n- Fix broken links in \"What is Chalk?\" and \"Walkthrough\" [`#426`](https://github.com/rust-lang/chalk/pull/426)\n- Fix mdBook plugins not loading in CI [`#424`](https://github.com/rust-lang/chalk/pull/424)\n- Release 0.10.0 [`#421`](https://github.com/rust-lang/chalk/pull/421)\n\n<!-- auto-changelog-above -->\n\n#### [v0.10.0](https://github.com/rust-lang/chalk/compare/chalk-engine-v0.9.0...v0.10.0)\n\n> 30 April 2020\n\n- Too many changes to list\n\n#### [v0.9.0](https://github.com/rust-lang/chalk/compare/e9c0a34dff162848f361f0f54ca3aab750ff4683...chalk-engine-v0.9.0)\n\n> 17 December 2018\n\n- Added the variance parameter\n\n#### Releases [0.6.0 .. 0.8.1](https://github.com/rust-lang/chalk/compare/chalk-engine-v0.5.0...e9c0a34dff162848f361f0f54ca3aab750ff4683)\n\n> 24 May 2018 to 31 October 2018\n\nForgot to write release notes =)\n\n#### [v0.5.0](https://github.com/rust-lang/chalk/compare/chalk-engine-v0.4.0...chalk-engine-v0.5.0)\n\n> 21 May 2018\n\n* Pare down to very few dependencies, and make even those optional.\n\n#### [v0.4.0](https://github.com/rust-lang/chalk/compare/85c4226c8629991f502e9b3268699e1d4c6f9348...chalk-engine-v0.4.0)\n\n> 21 May 2018\n\n* Tweak various things about the traits to aid in rustc integration.\n\n#### [v0.2.0](https://github.com/rust-lang/chalk/compare/87b6dab8c271ac3b66fcc156242911a6000daf89...b4c3b919d32141f2f53f554730ef41211f5b5d5a)\n\n> 27 March 2018\n\n* Remove some pointless traits from Chalk engine context.\n\n#### [v0.1.0](https://github.com/rust-lang/chalk/commit/87b6dab8c271ac3b66fcc156242911a6000daf89)\n\n> 22 March 2018\n\nInitial release.\n"
        },
        {
          "name": "book",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-ir",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-parse",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-recursive",
          "type": "tree",
          "content": null
        },
        {
          "name": "chalk-solve",
          "type": "tree",
          "content": null
        },
        {
          "name": "libstd.chalk",
          "type": "blob",
          "size": 0.962890625,
          "content": "// Some basic examples you can use with the repl. Try this\n// (you type the parts that go after the `?-`):\n//\n//     cargo run\n//     ?- load libstd.chalk\n//     ?- Vec<Box<i32>>: Clone\n\ntrait AsRef<T> { }\ntrait Clone { }\ntrait Copy where Self: Clone { }\ntrait Sized { }\n\nimpl Copy for i32 { }\nimpl Clone for i32 { }\nimpl Sized for i32 { }\n\nimpl Copy for u32 { }\nimpl Clone for u32 { }\nimpl Sized for u32 { }\n\nstruct Rc<T> { }\nimpl<T> Clone for Rc<T> { }\nimpl<T> Sized for Rc<T> { }\n\n#[fundamental]\nstruct Box<T> { }\nimpl<T> AsRef<T> for Box<T> where T: Sized { }\nimpl<T> Clone for Box<T> where T: Clone { }\nimpl<T> Sized for Box<T> { }\n\n// Meant to be [T]\nstruct Slice<T> where T: Sized { }\nimpl<T> AsRef<Slice<T>> for Slice<T> where T: Sized { }\n\nstruct Vec<T> where T: Sized { }\nimpl<T> AsRef<Slice<T>> for Vec<T> where T: Sized { }\nimpl<T> AsRef<Vec<T>> for Vec<T> where T: Sized { }\nimpl<T> Clone for Vec<T> where T: Clone, T: Sized { }\nimpl<T> Sized for Vec<T> where T: Sized { }\n"
        },
        {
          "name": "releases-template.hbs",
          "type": "blob",
          "size": 0.693359375,
          "content": "### Changelog\n\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\n\n{{#unless options.hideCredit}}\n    Generated by [`auto-changelog`](https://github.com/CookPete/auto-changelog)\n    (Note: versions before 0.11.0 were manually generated).\n{{/unless}}\n\n{{#each releases}}\n    {{#if href}}\n        ###{{#unless major}}#{{/unless}} [{{title}}]({{href}})\n    {{else}}\n        #### {{title}}\n    {{/if}}\n\n    {{#if tag}}\n        > {{niceDate}}\n    {{/if}}\n\n    {{#if summary}}\n        {{summary}}\n    {{/if}}\n\n    {{#each merges}}\n        - {{#if commit.breaking}}**Breaking change:** {{/if}}{{message}}{{#if href}} [`#{{id}}`]({{href}}){{/if}}\n    {{/each}}\n\n{{/each}}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "triagebot.toml",
          "type": "blob",
          "size": 0.0078125,
          "content": "[assign]"
        }
      ]
    }
  ]
}