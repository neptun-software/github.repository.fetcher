{
  "metadata": {
    "timestamp": 1736709103350,
    "page": 261,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "silvia-odwyer/photon",
      "stars": 2773,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2470703125,
          "content": "dist\nbin\npkg\ntarget\nwasm-pack.log\nCargo.lock\nwebpack_demo/node_modules\nwebpack_demo/dist\nwebpack_demo/package-lock.json\nreact_app_demo/node_modules\nreact_app_demo/package-lock.json\nphoton-docs/site\noutput*.jpg\noutput*.png\n.vscode\n\n# Jetbrains IDE\n.idea/"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.0361328125,
          "content": "max_width = 89\nreorder_imports = true"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.8798828125,
          "content": "# Changelog\nAll notable changes to Photon will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Releases]\n\n## [0.1.1] - 2020-03-19\n### Added\n- Contrast function\n- Conversion of `PhotonImage`s to base64\n- Solarize function which does not alter a mutable reference, but returns a `PhotonImage` (for waSCC research)\n- Invert function\n- Mix with color function\n- WASM constructor for RGB struct\n\n### Changed\n- Image resizing algorithm can now be decided upon. Developers can choose from Nearest Neighbour, Lanczos3, Gaussian, \nCatmullRom, or Triangle.\n- Watermark function takes second parameter by reference \n- Filters now mix with current colors (using the newly added `mix_with_colour` function) present in the image for more natural filter effects"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.0380859375,
          "content": "[workspace]\n\nmembers = [\n    \"crate\"\n]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.0791015625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023, Silvia O'Dwyer\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.0546875,
          "content": "# photon\n\n<p align=\"center\">\n  <a href=\"\" rel=\"noopener\">\n <img src=\"https://i.imgur.com/GxrKNOb.png\" alt=\"Photon banner, showing the Photon logo on a dark background\"></a>\n</p>\n\n<h3 align=\"center\">Photon</h3>\n\n<div align=\"center\">\n    \n  [![Status](https://img.shields.io/badge/status-active-success.svg?style=for-the-badge&logo=statuspal)]()\n  [![GitHub Issues](https://img.shields.io/github/issues/silvia-odwyer/photon.svg?style=for-the-badge&logo=github)](https://github.com/silvia-odwyer/photon/issues)\n  [![Gitter Chat](https://img.shields.io/gitter/room/silvia-odwyer/photon?color=cyan&logo=Gitter&style=for-the-badge)](https://gitter.im/photonlibrary/community \"Gitter chat\")\n  [![NPM Monthly Downloads](https://img.shields.io/npm/dm/@silvia-odwyer/photon?logo=npm&style=for-the-badge&color=pink)](https://www.npmjs.com/package/@silvia-odwyer/photon)\n  [![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/silvia-odwyer/photon/ci.yml?branch=master&logo=github&style=for-the-badge)](https://github.com/silvia-odwyer/photon/blob/master/.github/workflows/compile_wasm.yaml)\n\n  [![Crates.io](https://img.shields.io/crates/v/photon_rs?logo=rust&style=for-the-badge)](https://crates.io/crates/photon_rs)\n  [![License](https://img.shields.io/github/license/silvia-odwyer/photon?style=for-the-badge)](https://github.com/silvia-odwyer/photon/blob/master/LICENSE.md)\n  [![GitHub Pull Requests](https://img.shields.io/github/issues-pr/silvia-odwyer/photon.svg?style=for-the-badge&logo=github-actions)](https://github.com/silvia-odwyer/photon/pulls)\n\n</div>\n\n---\n\n<p align=\"center\"> High-performance, cross-platform Rust/WebAssembly image processing library\n    <br>\n</p>\n\n## 📝 Table of Contents\n- [Get Started with WebAssembly](https://github.com/silvia-odwyer/photon#get-started-with-webassembly)\n- [Get Started Natively](https://github.com/silvia-odwyer/photon#get-started-natively)\n- [Documentation](https://docs.rs/photon-rs/)\n- [Official Website](https://silvia-odwyer.github.io/photon/)\n- [All Available Functions](https://silvia-odwyer.github.io/photon/docs/photon/all.html)\n- [Got Questions? Ask Here!](https://github.com/silvia-odwyer/photon#got-questions)\n\nPhoton is a high-performance Rust image processing library, which compiles to WebAssembly, allowing for\nsafe, blazing-fast image processing both natively and on the web.\n\nYou can run Photon:\n- natively\n- in the browser with WebAssembly\n- on Node with WebAssembly\n\n### Features\n- **Fast:** On the web, Photon's high-performance allows it to run at near-native speed. Benchmarks can be found [here](https://github.com/silvia-odwyer/photon/wiki/Benchmarks).\n- **Call with JS:** Want to use Photon on the web or with Node? Using a simple npm package, you're good to go. Get all the benefits of WebAssembly\nwith zero-cost abstraction.\n- **Use Natively:** For command-line apps, native photo editing apps, and so forth, Photon's core codebase is in Rust, allowing for cross-platform\ndevelopment.\n- **Pure Rust** - Unlike other libraries, 100% of the library's codebase is written in Rust, so security and safety is guaranteed.\n\n### Live Demo\nView the [official demo of WASM in action](https://silvia-odwyer.github.io/photon/demo.html).\n\n### Photon In Action\n\n![Imgur](https://i.imgur.com/PShSZ6k.png)\n\n### Version 0.3.2 Release [2023 Update]\nVersion 0.3.2 has been released on Crates.io and NPM, with new features including:\n\n- A duotone filter and preset duotone effects\n- Image rotation\n- Dithering filter\n- Image cropping update (fixed in [PR #100](https://github.com/silvia-odwyer/photon/pull/100))\n\n### Supported Image Formats\nThe following image formats are supported:\n\n- PNG\n- JPEG\n- BMP\n- ICO \n- TIFF\n- WEBP\n\n### Get Started\n#### Getting Started Guide\nCheck out Photon's [getting started guide, complete with tutorials, installation instructions, and more](https://silvia-odwyer.github.io/photon/guide)\n\n### 📚 Documentation\nView the [official documentation](https://docs.rs/photon-rs/).\n\n### Functions\n96 customisable functions are available, for varying image effects.\n\nFunctions include:\n- **Image correction**: Hue rotation, sharpening, brightness adjustment, adjusting saturation, lightening/darkening all within various colour spaces.\n- **Resizing**: Resize images both natively and on the web.\n- **Convolutions**: Sobel filters, blurs, Laplace effects, edge detection, etc.,\n- **Channel manipulation**: Increasing/decreasing RGB channel values, swapping channels, removing channels, etc.\n- **Transform**: Resize, crop, rotate and flip images.\n- **Monochrome effects**: Monochrome tints, greyscaling of various forms, thresholding, sepia, averaging RGB values\n- **Colour manipulation**: Work with the image in various colour spaces such as HSL, LCh, and sRGB, and adjust the colours accordingly.\n- **Filters**: Over 30 pre-set filters available, incorporating various effects and transformations.\n- **Watermarking**: Watermark images in multiple formats.\n- **Blending**: Blend images together using 10 different techniques, change image backgrounds.\n\n## Get Started Natively\n\n### Install\nAdd the following line to the dependencies section of your Rust project's Cargo.toml:\n\n###### Cargo.toml\n```toml\n[dependencies]\nphoton-rs = \"0.3.2\"\n```\n\n#### Using Photon Natively\nThe following code opens an image from the filesystem, applies an effect, and outputs it as a PNG.\n\nHere is a code sample to get you started:\n\n```rust\nextern crate photon_rs;\nuse photon_rs::native::{open_image, save_image};\n\nfn main() -> Result<(), Box<dyn std::error::Error>> {\n    // Open the image (a PhotonImage is returned)\n    let mut img = open_image(\"test_image.PNG\")?;\n\n    // Increment the red channel by 40\n    photon_rs::channels::alter_red_channel(&mut img, 40);\n\n    // Write file to filesystem.\n    save_image(img, \"raw_image.JPG\")?;\n\n    Ok(())\n}\n```\n\n##### See More Examples\n[For more examples, check out the guide on how to get started with Photon natively.](https://silvia-odwyer.github.io/photon/guide/using-photon-natively/)\n\n### Building WebAssembly package\n\nIn order to build the WebAssembly package you will need `wasm-pack`. Check https://rustwasm.github.io/wasm-pack/installer/ on how to install it. Then you can run the command:\n\n\n```bash\nwasm-pack build ./crate\n```\n\n## Get Started With WebAssembly\n### Using a Bundler?\n#### Installing Photon\nIf you're using Webpack or a bundler to build your project, install Photon via [npm](https://www.npmjs.com/package/@silvia-odwyer/photon):\n\n```bash\nnpm install @silvia-odwyer/photon\n```\n\nYou can run Photon directly in any web browser that supports WebAssembly, which includes Chrome, Firefox, Safari, and Edge.\n\n##### Get Started with Photon on The Web\nTo get started, [check out the guide](https://silvia-odwyer.github.io/photon/guide/using-photon-web/).\n\n#### Using NodeJS?\nIf you're intending to use Photon with NodeJS, you can install the NodeJS version of the library:\n\n```bash\nnpm install @silvia-odwyer/photon-node\n```\n\n<!-- ##### NodeJS Tutorial\nSee the [NodeJS tutorial, which shows how to use Photon with NodeJS](). -->\n\n#### Using Cloudflare Workers?\nIf you're using Cloudflare Workers, you can install the following library to use Photon with Cloudflare Workers:\n\n```bash\nnpm install @cf-wasm/photon\n```\n\n## Modules\nPhoton contains a series of modules, which include:\n\n- `effects`: Various image effects, including adding offsets, thresholding, duotoning, solarization, etc.,\n- `channels`: Functions related to increasing/decreasing the red, green, and blue channels of the image data.\n- `transform`: Resize, crop, flip, and rotate images.\n- `filters`: Preset filters, which alter the rgb channels of the image. Contains over 20.\n- `conv`: Laplace, Sobel, emboss; image proc functions which require image convolution.\n-  `noise`: Noise generation of varying tints and hues.\n- `multiple`: A module for dealing with multiple images, such as watermarking images, etc.,\n- `correction`: Hue rotation, adjusting saturation, lightening/darkening: all techniques available in multiple colour spaces, which lead to varying effects.\n\n### Quick Start Example\nClone this repo:\n```sh\ngit clone https://github.com/silvia-odwyer/photon\n```\n\nRun the binary, which will perform an image processing function on an image:\n```sh\ncargo run --release\n```\n\nCompare the original image with the outputted image, and you'll see the desired effect has been applied.\n\n## Got Questions?\nIf you have further questions about this library, you can ask them on [Gitter](https://gitter.im/photonlibrary/community) or [Spectrum](https://spectrum.chat/photonlibrary), and I'll get back to you!\n\nIf there are any issues involving running/using the library, make sure to open an issue, it would be greatly appreciated,\nand will help improve the library.\n\n- [Spectrum](https://spectrum.chat/photonlibrary)\n- [Gitter](https://gitter.im/photonlibrary/community)\n\n## Additional Notes\nFunctions have been designed with flexibility in mind, so that full customization of effects and filters can be utilised; for every function, hundreds of differing image effects/tints/hues can be created, just by changing parameters slightly, so with every function comes the ability to fully experiment.\n\nFor developers who would like to work with high-level constructs can do so, such as applying effects to imagery (eg: Laplace or Sobel)\nor filters; this library provides a complete suite of functions to do so, as well as in-built filters and presets.\n\n`photon` can be thought of as a high-level wrapper to the Rust `image` crate, but conversely also includes functions which provide low-level access to pixel and channel manipulation, perfect for developers who wish to work with this data directly.\n\n## Contributing\n\nPhoton is always accepting new filters and functions. In that vein if you'd like to contribute to Photon please submit a Pull Request or add new issues for investigation. Our community is our lifeblood, and we appreciate all the support we get from individuals like you.\n\n## To Do\n- Blend images using browser-specific functions for WASM version of library.\n- Vintage images with light leaks, grains, etc.,\n- Tests in a headless web browser for WebAssembly version of library\n\n## Contributors\nThis repository continually receives new filters and updates from fellow contributors, for which I'm very grateful for! Thanks to the generous contributions of others, there are even more cool effects available in this library.\n\nI'd like to extend my gratitude to all of you!\n\nContributors include (be sure to add yourself to the list if you submitted a PR):\n* **Silvia O'Dwyer** - [@silvia-odwyer](https://github.com/silvia-odwyer)\n* **Osman Turan** - [@osman-turan](https://github.com/osman-turan)\n* **Ivan Zvonimir Horvat** - [@Horki](https://github.com/Horki)\n* **Arnav Jindal** - [@Daggy1234](https://github.com/Daggy1234)\n* **NorbertGarfield** - [@NorbertGarfield](https://github.com/NorbertGarfield)\n* **bboshoven** - [@bboshoven](https://github.com/bboshoven)\n* **benliao** - [@benliao](https://github.com/benliao)\n* **Fineshop Design** - [@fineshop](https://github.com/fineshop)\n* **volbot** - [@volbot](https://github.com/volbot)\n* **Future You(?)** - (See Contributing above)\n\n## License\nThis project is licensed under the Apache 2.0 License - see the [LICENSE.md](LICENSE.md) file for details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.859375,
          "content": "# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are currently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.3.2   | :white_check_mark: |\n\n## Reporting a Vulnerability\n\nWe are using [GitHub Security Advisories](https://docs.github.com/en/code-security/getting-started/adding-a-security-policy-to-your-repository) to privately discuss, fix, and publish information about the vulnerabilities.\n\n\n### Responsible Disclosure Policy\n\nWe request that you provide us with a reasonable amount of time to resolve the issue before you disclose it publicly. We also request that you make a good faith effort to avoid privacy violations, data loss, and service disruption while investigating vulnerabilities.\n\n\n\nThank you for helping us make our project more secure!\n"
        },
        {
          "name": "crate",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "photon-docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "react_app_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack_demo",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}