{
  "metadata": {
    "timestamp": 1736709278970,
    "page": 634,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fede1024/rust-rdkafka",
      "stars": 1665,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.232421875,
          "content": "rdkafka-sys/src/bindings/linux.rs linguist-generated=true\nrdkafka-sys/src/bindings/macos.rs linguist-generated=true\nrdkafka-sys/src/bindings/linux_64.rs linguist-generated=true\nrdkafka-sys/src/bindings/macos_64.rs linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.021484375,
          "content": "target\nsrc/*.bk\n.idea\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.111328125,
          "content": "[submodule \"rdkafka-sys/librdkafka\"]\n\tpath = rdkafka-sys/librdkafka\n\turl = https://github.com/edenhill/librdkafka\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4453125,
          "content": "# Maintainer and contributor instructions\n\n## Compiling from source\n\nTo compile from source, you'll have to initialize the submodule containing\nlibrdkafka:\n\n```bash\ngit submodule update --init\n```\n\nand then compile using `cargo`, selecting the features that you want.\nExample:\n\n```bash\ncargo build --features \"ssl gssapi\"\n```\n\n## Tests\n\n### Unit tests\n\nThe unit tests can run without a Kafka broker present:\n\n```bash\ncargo test --lib\n```\n\n### Automatic testing\n\nrust-rdkafka contains a suite of tests which is automatically executed by travis in\ndocker-compose. Given the interaction with C code that rust-rdkafka has to do, tests\nare executed in valgrind to check eventual memory errors and leaks.\n\nTo run the full suite using docker-compose:\n\n```bash\n./test_suite.sh\n```\n\nTo run locally, instead:\n\n```bash\nKAFKA_HOST=\"kafka_server:9092\" cargo test\n```\n\nIn this case there is a broker expected to be running on `KAFKA_HOST`.\nThe broker must be configured with default partition number 3 and topic\nautocreation in order for the tests to succeed.\n\n## Releasing\n\n* Checkout into master and pull the latest changes.\n* Ensure `rdkafka-sys` has no unreleased changes. If it does, release `rdkafka-sys` first.\n* Ensure the changelog is up to date (i.e not Unreleased changes).\n* Run `./generate_readme.py > README.md`.\n* Bump the version in Cargo.toml and commit locally.\n* Run `cargo publish`.\n* Run `git tag -am $VERSION $VERSION`.\n* Run `git push`.\n* Run `git push origin $VERSION`.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 45.0849609375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5fb1d8e4442bd405fdfd1dacb42792696b0cf9cb15882e5d097b742a676d375\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"async-attributes\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3203e79f4dd9bdda415ed03cf14dae5a2bf775c683a00f94e9cd1faf0f596e5\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 2.5.3\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand 2.1.1\",\n \"futures-lite 2.3.0\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-fs\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"279cf904654eeebfa37ac9bb1598880884924aab82e290aa65c9e77a0e142e06\"\ndependencies = [\n \"async-lock 2.8.0\",\n \"autocfg\",\n \"blocking\",\n \"futures-lite 1.13.0\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-executor\",\n \"async-io 2.3.4\",\n \"async-lock 3.4.0\",\n \"blocking\",\n \"futures-lite 2.3.0\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af\"\ndependencies = [\n \"async-lock 2.8.0\",\n \"autocfg\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-lite 1.13.0\",\n \"log\",\n \"parking\",\n \"polling 2.8.0\",\n \"rustix 0.37.27\",\n \"slab\",\n \"socket2\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"444b0228950ee6501b3568d3c93bf1176a1fdbc3b758dcd9475046d30f4dc7e8\"\ndependencies = [\n \"async-lock 3.4.0\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite 2.3.0\",\n \"parking\",\n \"polling 3.7.3\",\n \"rustix 0.38.37\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b\"\ndependencies = [\n \"event-listener 2.5.3\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-net\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0434b1ed18ce1cf5769b8ac540e33f01fa9471058b5e89da9e06f3c882a8c12f\"\ndependencies = [\n \"async-io 1.13.0\",\n \"blocking\",\n \"futures-lite 1.13.0\",\n]\n\n[[package]]\nname = \"async-process\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea6438ba0a08d81529c69b36700fa2f95837bfe3e776ab39cde9c14d9149da88\"\ndependencies = [\n \"async-io 1.13.0\",\n \"async-lock 2.8.0\",\n \"async-signal\",\n \"blocking\",\n \"cfg-if\",\n \"event-listener 3.1.0\",\n \"futures-lite 1.13.0\",\n \"rustix 0.38.37\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"async-signal\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3\"\ndependencies = [\n \"async-io 2.3.4\",\n \"async-lock 3.4.0\",\n \"atomic-waker\",\n \"cfg-if\",\n \"futures-core\",\n \"futures-io\",\n \"rustix 0.38.37\",\n \"signal-hook-registry\",\n \"slab\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c634475f29802fde2b8f0b505b1bd00dfe4df7d4a000f0b36f7671197d5c3615\"\ndependencies = [\n \"async-attributes\",\n \"async-channel 1.9.0\",\n \"async-global-executor\",\n \"async-io 2.3.4\",\n \"async-lock 3.4.0\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite 2.3.0\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backon\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4fa97bb310c33c811334143cf64c5bb2b7b3c06e453db6b095d7061eff8f113\"\ndependencies = [\n \"fastrand 2.1.1\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite 2.3.0\",\n \"piper\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07b1695e2c7e8fc85310cde85aeaab7e3097f593c91d209d3f9df76c928100f0\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags 1.3.2\",\n \"strsim\",\n \"textwrap\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.51\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb1e43aa7fd152b1f968787f7dbcdeb306d1867ff373c69955211876c053f91a\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"curl-sys\"\nversion = \"0.4.75+curl-8.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a4fd752d337342e4314717c0d9b6586b059a120c80029ebe4d49b11fec7875e\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"openssl-sys\",\n \"pkg-config\",\n \"vcpkg\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"duct\"\nversion = \"0.13.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4ab5718d1224b63252cd0c6f74f6480f9ffeb117438a2e0f5cf6d9a4798929c\"\ndependencies = [\n \"libc\",\n \"once_cell\",\n \"os_pipe\",\n \"shared_child\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a12e6657c4c97ebab115a42dcee77225f7f482cdd841cf7088c657a42e9e00e7\"\ndependencies = [\n \"atty\",\n \"humantime\",\n \"log\",\n \"regex\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d93877bcde0eb80ca09131a08d23f0a5c18a620b01db137dba666d18cd9b30c2\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be\"\ndependencies = [\n \"instant\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"324a1be68054ef05ad64b861cc9eaf1d623d2d8cb25b4bf2cb9cdd902b4bf253\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce\"\ndependencies = [\n \"fastrand 1.9.0\",\n \"futures-core\",\n \"futures-io\",\n \"memchr\",\n \"parking\",\n \"pin-project-lite\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52527eb5074e35e9339c6b4e8d12600c7128b68fb25dcb9fa9dec18f7c25f3a5\"\ndependencies = [\n \"fastrand 2.1.1\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32085ea23f3234fc7846555e85283ba4de91e21016dc0455a16286d87a292d64\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbb143cf96099802033e0d4f4963b19fd2e0b728bcf076cd9cf7f6634f092994\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"hdrhistogram\"\nversion = \"7.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"765c9198f173dd59ce26ff9f95ef0aafd0a0fe01fb9d72841bc5066a4c06511d\"\ndependencies = [\n \"base64\",\n \"byteorder\",\n \"crossbeam-channel\",\n \"flate2\",\n \"nom\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b900aa2f7301e21c36462b170ee99994de34dff39a4a6a528e80e7376d07e5\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"krb5-src\"\nversion = \"0.3.3+1.19.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f5dae230b7334f85b6a968d8b0549c39e3b6ba11e973d62f4c81bb37cdf73af\"\ndependencies = [\n \"duct\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.158\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439\"\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2d16453e800a8cf6dd2fc3eb4bc99b786a9b90c663b8559a5b1a041bf89e472\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"lz4-sys\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcb44a01837a858d47e5a630d2ccf304c8efcc4b83b8f9f75b7a9ee4fcc6e57d\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"maplit\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"084f1a5821ac4c651660a94a7153d27ac9d8a53736203f58b31945ded098070a\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.3.2+3.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a211a18d945ef7e648cc6e0058f4c548ee46aab922ea203e0d30e966ea23647b\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"os_pipe\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ffd2b0a5634335b135d5728d84c5e0fd726954b87111f7506a61c502280d982\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand 2.1.1\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"polling\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce\"\ndependencies = [\n \"autocfg\",\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"libc\",\n \"log\",\n \"pin-project-lite\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc2790cd301dec6cd3b7a025e4815cf825724a51c98dccfe6a3e55f05ffb6511\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi 0.4.0\",\n \"pin-project-lite\",\n \"rustix 0.38.37\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f4c021e1093a56626774e81216a4ce732a735e5bad4868a03f3ed65ca0c3919\"\ndependencies = [\n \"once_cell\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.3.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ac302d8f83c0c1974bf758f6b041c6c8ada916fbb44a609158ca8b064cc76c\"\ndependencies = [\n \"libc\",\n \"rand 0.4.6\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293\"\ndependencies = [\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.3.1\",\n \"rdrand\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\ndependencies = [\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\n[[package]]\nname = \"rdkafka\"\nversion = \"0.37.0\"\ndependencies = [\n \"async-std\",\n \"backon\",\n \"chrono\",\n \"clap\",\n \"env_logger\",\n \"futures\",\n \"futures-channel\",\n \"futures-executor\",\n \"futures-util\",\n \"hdrhistogram\",\n \"libc\",\n \"log\",\n \"maplit\",\n \"rand 0.3.23\",\n \"rdkafka-sys\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"slab\",\n \"smol\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"rdkafka-sys\"\nversion = \"4.8.0+2.3.0\"\ndependencies = [\n \"cmake\",\n \"curl-sys\",\n \"libc\",\n \"libz-sys\",\n \"lz4-sys\",\n \"num_enum\",\n \"openssl-sys\",\n \"pkg-config\",\n \"sasl2-sys\",\n \"zstd-sys\",\n]\n\n[[package]]\nname = \"rdrand\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.37.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys 0.3.8\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys 0.4.14\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"sasl2-sys\"\nversion = \"0.1.22+2.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f2a7f7efd9fc98b3a9033272df10709f5ee3fa0eabbd61a527a3a1ed6bd3c6\"\ndependencies = [\n \"cc\",\n \"duct\",\n \"krb5-src\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.128\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ff5456707a1de34e7e37f2a6fd3d3f808c318259cbd01ab6377795054b483d8\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"shared_child\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09fa9338aed9a1df411814a5b2252f7cd206c55ae9bf2fa763f8de84603aa60c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smol\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13f2b548cd8447f8de0fdf1c592929f70f4fc7039a05e47404b0d096ec6987a1\"\ndependencies = [\n \"async-channel 1.9.0\",\n \"async-executor\",\n \"async-fs\",\n \"async-io 1.13.0\",\n \"async-lock 2.8.0\",\n \"async-net\",\n \"async-process\",\n \"blocking\",\n \"futures-lite 1.13.0\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.4.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.77\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f35bcdf61fd8e7be6caf75f429fdca8beb3ed76584befb503b1569faee373ed\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.40.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2b070231665d27ad9ec9b8df639893f46727666c6767db40317fbe920a5d998\"\ndependencies = [\n \"backtrace\",\n \"pin-project-lite\",\n \"tokio-macros\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.19.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0336d538f7abc86d282a4189614dfaa90810dfc2c6f6427eaf88e16311dd225d\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a84c137d37ab0142f0f2ddfe332651fdbf252e7b7dbb4e67b6c1f1b2e925101\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"waker-fn\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"317211a0dc0ceedd78fb2ca9a44aed3d7b9b26f81870d485c07122b4350673b7\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e9300f63a621e96ed275155c108eb6f843b6a26d053f122ab69724559dc8ed\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.77\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26fdeaafd9bd129f65e7c031593c24d62186301e0c72c8978fa1678be7d532c0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"zstd-sys\"\nversion = \"2.0.13+zstd.1.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38ff0f21cfee8f97d94cef41359e0c89aa6113028ab0291aa8ca0038995a95aa\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.4091796875,
          "content": "[package]\nname = \"rdkafka\"\nversion = \"0.37.0\"\nauthors = [\"Federico Giraud <giraud.federico@gmail.com>\"]\nrepository = \"https://github.com/fede1024/rust-rdkafka\"\nreadme = \"README.md\"\nlicense = \"MIT\"\ndescription = \"Rust wrapper for librdkafka\"\nkeywords = [\"kafka\", \"rdkafka\"]\ncategories = [\"api-bindings\"]\nedition = \"2018\"\nexclude = [\"Cargo.lock\"]\nrust-version = \"1.70\"\n\n[workspace]\nmembers = [\"rdkafka-sys\"]\n\n[dependencies]\nrdkafka-sys = { path = \"rdkafka-sys\", version = \"4.8.0\", default-features = false }\nfutures-channel = \"0.3.0\"\nfutures-executor = { version = \"0.3.0\", optional = true }\nfutures-util = { version = \"0.3.0\", default-features = false }\nlibc = \"0.2.0\"\nlog = \"0.4.8\"\nserde = { version = \"1.0.0\", features = [\"derive\"] }\nserde_derive = \"1.0.0\"\nserde_json = \"1.0.0\"\nslab = \"0.4\"\ntokio = { version = \"1.18\", features = [\"rt\", \"time\"], optional = true }\ntracing = { version = \"0.1.30\", optional = true }\n\n[dev-dependencies]\nasync-std = { version = \"1.9.0\", features = [\"attributes\"] }\nbackon = { version = \"1.2\", default-features = false, features = [\"std-blocking-sleep\"] }\nchrono = \"0.4.0\"\nclap = \"2.18.0\"\nenv_logger = \"0.9.0\"\nfutures = \"0.3.0\"\nhdrhistogram = \"7.0.0\"\nmaplit = \"1.0.2\"\nrand = \"0.3.15\"\nregex = \"1.1.6\"\nsmol = \"1.2.4\"\ntokio = { version = \"1.18\", features = [\"macros\", \"rt-multi-thread\", \"time\"] }\n\n# These features are re-exports of the features that the rdkafka-sys crate\n# provides. See the rdkafka-sys documentation for details.\n[features]\ndefault = [\"libz\", \"tokio\"]\nnaive-runtime = [\"futures-executor\"]\ncmake-build = [\"rdkafka-sys/cmake-build\"]\ncmake_build = [\"rdkafka-sys/cmake_build\"]\ndynamic-linking = [\"rdkafka-sys/dynamic-linking\"]\ndynamic_linking = [\"rdkafka-sys/dynamic_linking\"]\nssl = [\"rdkafka-sys/ssl\"]\nssl-vendored = [\"rdkafka-sys/ssl-vendored\"]\ngssapi = [\"rdkafka-sys/gssapi\"]\ngssapi-vendored = [\"rdkafka-sys/gssapi-vendored\"]\nsasl = [\"rdkafka-sys/sasl\"]\nlibz = [\"rdkafka-sys/libz\"]\nlibz-static = [\"rdkafka-sys/libz-static\"]\ncurl = [\"rdkafka-sys/curl\"]\ncurl-static = [\"rdkafka-sys/curl-static\"]\nzstd = [\"rdkafka-sys/zstd\"]\nzstd-pkg-config = [\"rdkafka-sys/zstd-pkg-config\"]\nexternal-lz4 = [\"rdkafka-sys/external-lz4\"]\nexternal_lz4 = [\"rdkafka-sys/external_lz4\"]\n\n[package.metadata.docs.rs]\n# docs.rs doesn't allow writing to ~/.cargo/registry (reasonably), so we have to\n# use the CMake build for a proper out-of-tree build.\nfeatures = [\"cmake-build\", \"naive-runtime\", \"tracing\", \"tokio\"]\nrustdoc-args = [\"--cfg\", \"docsrs\"]\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.8232421875,
          "content": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y build-essential \\\n    curl \\\n    openssl libssl-dev \\\n    pkg-config \\\n    python \\\n    valgrind \\\n    zlib1g-dev\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly-2019-10-17\nENV PATH /root/.cargo/bin/:$PATH\n\n# # Create dummy project for rdkafka\n# COPY Cargo.toml /rdkafka/\n# RUN mkdir -p /rdkafka/src && echo \"fn main() {}\" > /rdkafka/src/main.rs\n#\n# # Create dummy project for rdkafka\n# RUN mkdir /rdkafka/rdkafka-sys\n# COPY rdkafka-sys/Cargo.toml /rdkafka/rdkafka-sys\n# RUN mkdir -p /rdkafka/rdkafka-sys/src && touch /rdkafka/rdkafka-sys/src/lib.rs\n# RUN echo \"fn main() {}\" > /rdkafka/rdkafka-sys/build.rs\n#\n# RUN cd /rdkafka && test --no-run\n\nCOPY docker/run_tests.sh /rdkafka/\n\nENV KAFKA_HOST kafka:9092\n\nWORKDIR /rdkafka\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2016 Federico Giraud\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.6904296875,
          "content": "# rust-rdkafka\n\n[![crates.io](https://img.shields.io/crates/v/rdkafka.svg)](https://crates.io/crates/rdkafka)\n[![docs.rs](https://docs.rs/rdkafka/badge.svg)](https://docs.rs/rdkafka/)\n[![Build Status](https://travis-ci.org/fede1024/rust-rdkafka.svg?branch=master)](https://travis-ci.org/fede1024/rust-rdkafka)\n[![coverate](https://codecov.io/gh/fede1024/rust-rdkafka/graphs/badge.svg?branch=master)](https://codecov.io/gh/fede1024/rust-rdkafka/)\n[![Join the chat at https://gitter.im/rust-rdkafka/Lobby](https://badges.gitter.im/rust-rdkafka/Lobby.svg)](https://gitter.im/rust-rdkafka/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA fully asynchronous, [futures]-enabled [Apache Kafka] client\nlibrary for Rust based on [librdkafka].\n\n## The library\n\n`rust-rdkafka` provides a safe Rust interface to librdkafka. This version\nis compatible with librdkafka v1.9.2+.\n\n### Documentation\n\n- [Current master branch](https://fede1024.github.io/rust-rdkafka/)\n- [Latest release](https://docs.rs/rdkafka/)\n- [Changelog](https://github.com/fede1024/rust-rdkafka/blob/master/changelog.md)\n\n### Features\n\nThe main features provided at the moment are:\n\n- Support for all Kafka versions since 0.8.x. For more information about\n  broker compatibility options, check the [librdkafka\n  documentation][broker-compat].\n- Consume from single or multiple topics.\n- Automatic consumer rebalancing.\n- Customizable rebalance, with pre and post rebalance callbacks.\n- Synchronous or asynchronous message production.\n- Customizable offset commit.\n- Create and delete topics and add and edit partitions.\n- Alter broker and topic configurations.\n- Access to cluster metadata (list of topic-partitions, replicas, active\n  brokers etc).\n- Access to group metadata (list groups, list members of groups, hostnames,\n  etc.).\n- Access to producer and consumer metrics, errors and callbacks.\n- Exactly-once semantics (EOS) via idempotent and transactional producers\n  and read-committed consumers.\n\n### One million messages per second\n\n`rust-rdkafka` is designed to be easy and safe to use thanks to the\nabstraction layer written in Rust, while at the same time being extremely\nfast thanks to the librdkafka C library.\n\nHere are some benchmark results using the [`BaseProducer`],\nsending data to a single Kafka 0.11 process running in localhost (default\nconfiguration, 3 partitions). Hardware: Dell laptop, with Intel Core\ni7-4712HQ @ 2.30GHz.\n\n- Scenario: produce 5 million messages, 10 bytes each, wait for all of them to be acked\n  - 1045413 messages/s, 9.970 MB/s  (average over 5 runs)\n\n- Scenario: produce 100000 messages, 10 KB each, wait for all of them to be acked\n  - 24623 messages/s, 234.826 MB/s  (average over 5 runs)\n\nFor more numbers, check out the [kafka-benchmark] project.\n\n### Client types\n\n`rust-rdkafka` provides low level and high level consumers and producers.\n\nLow level:\n\n* [`BaseConsumer`]: a simple wrapper around the librdkafka consumer. It\n  must be periodically `poll()`ed in order to execute callbacks, rebalances\n  and to receive messages.\n* [`BaseProducer`]: a simple wrapper around the librdkafka producer. As in\n  the consumer case, the user must call `poll()` periodically to execute\n  delivery callbacks.\n* [`ThreadedProducer`]: a `BaseProducer` with a separate thread dedicated to\n  polling the producer.\n\nHigh level:\n\n * [`StreamConsumer`]: a [`Stream`] of messages that takes care of\n   polling the consumer automatically.\n * [`FutureProducer`]: a [`Future`] that will be completed once\n   the message is delivered to Kafka (or failed).\n\nFor more information about consumers and producers, refer to their\nmodule-level documentation.\n\n*Warning*: the library is under active development and the APIs are likely\nto change.\n\n### Asynchronous data processing with Tokio\n\n[Tokio] is a platform for fast processing of asynchronous events in Rust.\nThe interfaces exposed by the [`StreamConsumer`] and the [`FutureProducer`]\nallow rust-rdkafka users to easily integrate Kafka consumers and producers\nwithin the Tokio platform, and write asynchronous message processing code.\nNote that rust-rdkafka can be used without Tokio.\n\nTo see rust-rdkafka in action with Tokio, check out the\n[asynchronous processing example] in the examples folder.\n\n### At-least-once delivery\n\nAt-least-once delivery semantics are common in many streaming applications:\nevery message is guaranteed to be processed at least once; in case of\ntemporary failure, the message can be re-processed and/or re-delivered,\nbut no message will be lost.\n\nIn order to implement at-least-once delivery the stream processing\napplication has to carefully commit the offset only once the message has\nbeen processed. Committing the offset too early, instead, might cause\nmessage loss, since upon recovery the consumer will start from the next\nmessage, skipping the one where the failure occurred.\n\nTo see how to implement at-least-once delivery with `rdkafka`, check out the\n[at-least-once delivery example] in the examples folder. To know more about\ndelivery semantics, check the [message delivery semantics] chapter in the\nKafka documentation.\n\n### Exactly-once semantics\n\nExactly-once semantics (EOS) can be achieved using transactional producers,\nwhich allow produced records and consumer offsets to be committed or aborted\natomically. Consumers that set their `isolation.level` to `read_committed`\nwill only observe committed messages.\n\nEOS is useful in read-process-write scenarios that require messages to be\nprocessed exactly once.\n\nTo learn more about using transactions in rust-rdkafka, see the\n[Transactions](producer-transactions) section of the producer documentation.\n\n### Users\n\nHere are some of the projects using rust-rdkafka:\n\n- [kafka-view]: a web interface for Kafka clusters.\n- [kafka-benchmark]: a high performance benchmarking tool for Kafka.\n- [callysto]: Stream processing framework in Rust.\n- [bytewax]: Python stream processing framework using Timely Dataflow.\n\n*If you are using rust-rdkafka, please let us know!*\n\n## Installation\n\nAdd this to your `Cargo.toml`:\n\n```toml\n[dependencies]\nrdkafka = { version = \"0.25\", features = [\"cmake-build\"] }\n```\n\nThis crate will compile librdkafka from sources and link it statically to\nyour executable. To compile librdkafka you'll need:\n\n* the GNU toolchain\n* GNU `make`\n* `pthreads`\n* `zlib`: optional, but included by default (feature: `libz`)\n* `cmake`: optional, *not* included by default (feature: `cmake-build`)\n* `libssl-dev`: optional, *not* included by default (feature: `ssl`)\n* `libsasl2-dev`: optional, *not* included by default (feature: `gssapi`)\n* `libzstd-dev`: optional, *not* included by default (feature: `zstd-pkg-config`)\n\nNote that using the CMake build system, via the `cmake-build` feature, is\nencouraged if you can take the dependency on CMake.\n\nBy default a submodule with the librdkafka sources pinned to a specific\ncommit will be used to compile and statically link the library. The\n`dynamic-linking` feature can be used to instead dynamically link rdkafka to\nthe system's version of librdkafka. Example:\n\n```toml\n[dependencies]\nrdkafka = { version = \"0.25\", features = [\"dynamic-linking\"] }\n```\n\nFor a full listing of features, consult the [rdkafka-sys crate's\ndocumentation][rdkafka-sys-features]. All of rdkafka-sys features are\nre-exported as rdkafka features.\n\n### Minimum supported Rust version (MSRV)\n\nThe current minimum supported Rust version (MSRV) is 1.70.0. Note that\nbumping the MSRV is not considered a breaking change. Any release of\nrust-rdkafka may bump the MSRV.\n\n### Asynchronous runtimes\n\nSome features of the [`StreamConsumer`] and [`FutureProducer`] depend on\nTokio, which can be a heavyweight dependency for users who only intend to\nuse the low-level consumers and producers. The Tokio integration is\nenabled by default, but can be disabled by turning off default features:\n\n```toml\n[dependencies]\nrdkafka = { version = \"0.25\", default-features = false }\n```\n\nIf you would like to use an asynchronous runtime besides Tokio, you can\nintegrate it with rust-rdkafka by providing a shim that implements the\n[`AsyncRuntime`] trait. See the following examples for details:\n\n  * [smol][runtime-smol]\n  * [async-std][runtime-async-std]\n\n## Examples\n\nYou can find examples in the [`examples`] folder. To run them:\n\n```bash\ncargo run --example <example_name> -- <example_args>\n```\n\n## Debugging\n\nrust-rdkafka uses the [`log`] crate to handle logging.\nOptionally, enable the `tracing` feature to emit [`tracing`]\nevents as opposed to [`log`] records.\n\nIn test and examples, rust-rdkafka uses the  [`env_logger`] crate\nto format logs. In those contexts, logging can be enabled\nusing the `RUST_LOG` environment variable, for example:\n\n```bash\nRUST_LOG=\"librdkafka=trace,rdkafka::client=debug\" cargo test\n```\n\nThis will configure the logging level of librdkafka to trace, and the level\nof the client module of the Rust client to debug. To actually receive logs\nfrom librdkafka, you also have to set the `debug` option in the producer or\nconsumer configuration (see librdkafka\n[configuration][librdkafka-config]).\n\nTo enable debugging in your project, make sure you initialize the logger\nwith `env_logger::init()`, or the equivalent for any `log`-compatible\nlogging framework.\n\n[`AsyncRuntime`]: https://docs.rs/rdkafka/*/rdkafka/util/trait.AsyncRuntime.html\n[`BaseConsumer`]: https://docs.rs/rdkafka/*/rdkafka/consumer/base_consumer/struct.BaseConsumer.html\n[`BaseProducer`]: https://docs.rs/rdkafka/*/rdkafka/producer/base_producer/struct.BaseProducer.html\n[`Future`]: https://doc.rust-lang.org/stable/std/future/trait.Future.html\n[`FutureProducer`]: https://docs.rs/rdkafka/*/rdkafka/producer/future_producer/struct.FutureProducer.html\n[`Stream`]: https://docs.rs/futures/*/futures/stream/trait.Stream.html\n[`StreamConsumer`]: https://docs.rs/rdkafka/*/rdkafka/consumer/stream_consumer/struct.StreamConsumer.html\n[`ThreadedProducer`]: https://docs.rs/rdkafka/*/rdkafka/producer/base_producer/struct.ThreadedProducer.html\n[`log`]: https://docs.rs/log\n[`tracing`]: https://docs.rs/tracing\n[`env_logger`]: https://docs.rs/env_logger\n[Apache Kafka]: https://kafka.apache.org\n[asynchronous processing example]: https://github.com/fede1024/rust-rdkafka/blob/master/examples/asynchronous_processing.rs\n[at-least-once delivery example]: https://github.com/fede1024/rust-rdkafka/blob/master/examples/at_least_once.rs\n[runtime-smol]: https://github.com/fede1024/rust-rdkafka/blob/master/examples/runtime_smol.rs\n[runtime-async-std]: https://github.com/fede1024/rust-rdkafka/blob/master/examples/runtime_async_std.rs\n[broker-compat]: https://github.com/edenhill/librdkafka/blob/master/INTRODUCTION.md#broker-version-compatibility\n[bytewax]: https://github.com/bytewax/bytewax\n[callysto]: https://github.com/vertexclique/callysto\n[`examples`]: https://github.com/fede1024/rust-rdkafka/blob/master/examples/\n[futures]: https://github.com/rust-lang/futures-rs\n[kafka-benchmark]: https://github.com/fede1024/kafka-benchmark\n[kafka-view]: https://github.com/fede1024/kafka-view\n[librdkafka]: https://github.com/edenhill/librdkafka\n[librdkafka-config]: https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md\n[message delivery semantics]: https://kafka.apache.org/0101/documentation.html#semantics\n[producer-transactions]: https://docs.rs/rdkafka/*/rdkafka/producer/#transactions\n[rdkafka-sys-features]: https://github.com/fede1024/rust-rdkafka/tree/master/rdkafka-sys/README.md#features\n[rdkafka-sys-known-issues]: https://github.com/fede1024/rust-rdkafka/tree/master/rdkafka-sys/README.md#known-issues\n[smol]: https://docs.rs/smol\n[Tokio]: https://tokio.rs/\n\n## rdkafka-sys\n\nSee [rdkafka-sys](https://github.com/fede1024/rust-rdkafka/tree/master/rdkafka-sys).\n\n## Contributors\n\nThanks to:\n* Thijs Cadier - [thijsc](https://github.com/thijsc)\n\n## Alternatives\n\n* [kafka-rust]: a pure Rust implementation of the Kafka client.\n\n[kafka-rust]: https://github.com/spicavigo/kafka-rust\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 27.9970703125,
          "content": "# Changelog\n\nSee also the [rdkafka-sys changelog](rdkafka-sys/changelog.md).\n\n## Unreleased\n\n* Update MSRV to 1.70\n* Remove testing for old Kafka versions (before 3.0). Add tests for 3.7.\n* Fix test dependency on docker compose.\n* Address wakeup races introduced by pivoting to the event API.\n* Update `BaseProducer::poll` to not return early, and instead continue\n  looping until the passed timeout is reached.\n\n## 0.36.2 (2024-01-16)\n\n* Update `BaseConsumer::poll` to return `None` when handling rebalance\n  or offset commit events.\n\n## 0.36.0 (2023-11-08)\n\n* Pivot the library from using librdkafka's callback interface to using\n  the event interface. The public API of the crate does not change.\n\n## 0.35.0 (2023-11-07)\n\n* Update bundled librdkafka to 2.3.0.\n* Add cargo enforcement of MSRV of 1.61.\n* Derives serde::Serialize on Statistics\n\n## 0.34.0 (2023-08-25)\n\n* Update bundled librdkafka to 2.2.0.\n\n## 0.33.2 (2023-07-06)\n\n* **Breaking change.** Change signature for `seek_partitions`. Following\n  librdkafka, individual partition errors should be reported in the per-partition\n  `error` field of `TopicPartitionList` elements.\n\n## 0.33.0 (2023-06-30)\n\n* Add interface to specify custom partitioners by extending `ProducerContext`\n  trait with capability to return optional custom partitioner.\n* Add `seek_partitions` to consumer.\n\n## 0.32.1 (2023-06-09)\n\n* Add support for the cluster mock API.\n* Expose assignment_lost method on the consumer.\n\n## 0.31.0 (2023-05-17)\n\n* **Breaking change.** Pass `KafkaError` to rebalance hooks instead of human-readable string\n  representation.\n\n## 0.30.0 (2023-05-12)\n\n* Support for unassigning static partitions by passing `null` to `rdsys::rd_kafka_assign` and expose the\nfeature as `unassign` in `base_consumer`\n\n* Expose `rdsys::rd_kafka_incremental_assign` and `rdsys::rd_kafka_incremental_unassign` in `base_consumer` for \nincremental changes to static assignments\n\n* **Breaking change.** `util::get_rdkafka_version` now returns `(i32, String)`.\n  Previously, it returned `(u16, String)` which would silently truncate the hex\n  representation of the version:\n  > Interpreted as hex MM.mm.rr.xx:\n  > \n  > MM = Major\n  > mm = minor\n  > rr = revision\n  > xx = pre-release id (0xff is the final release)\n  > E.g.: 0x010902ff = 1.9.2\n\n* Add the `AdminClient::delete_groups` method, which deletes consumer groups\n  from a Kafka cluster ([#510]).\n\n  Thanks, [@andrewinci].\n\n[@andrewinci]: https://github.com/andrewinci\n[#510]: https://github.com/fede1024/rust-rdkafka/issues/510\n\n* Add support for the `purge` API, that allows retreiving messages that were\n  queued for production when shutting down. It is automatically called on `Drop`.\n  Fixes leaking associated data (futures...).\n\n\n## 0.29.0 (2022-10-29)\n\n* **Breaking change.** Pass through errors from librdkafka in\n  `BaseProducer::flush`, `StreamProducer::flush`, and `FutureProducer::flush`.\n\n  Thanks, [@cjubb39].\n\n* **Breaking change.** Only provide `NaiveRuntime` if the `naive-runtime`\n  feature is enabled. This elides a dependency on `futures-executor` when the\n  `naive-runtime` feature is disabled.\n\n* **Breaking change.** Remove the deprecated `StreamConsumer::start` method.\n  Use the more clearly named `StreamConsumer::stream` method instead.\n\n* **Breaking change.** Rework the `Headers` trait to distinguish between\n  headers with null values and headers with empty values. The `Headers::get`\n  and `Headers::get_as` methods now return a `Header` struct with the following\n  definition:\n\n  ```rust\n  pub struct Header<'a, V> {\n      pub key: &'a str,\n      pub value: Option<V>,\n  }\n  ```\n\n  Previously, these methods operated in terms of key–value pair `(&str, &[u8])`.\n\n  These methods now panic if presented with an out-of-bounds index. This\n  simplifies their usage in the common case where the index is known to be\n  valid. Use the new `Headers::try_get` and `Headers::try_get_as` methods if you\n  need the old behavior of returning `None` if the index is invalid.\n\n* Rename the `OwnedHeader::add` method to `OwnedHeader::insert`, for parity with\n  the equivalent method for the map types in `std::collection` and to avoid\n  confusion with the `add` method of the `std::ops::Add` trait. The method now\n  takes the `Header` type mentioned above as an argument, rather than the key\n  and value as separate arguments.\n\n* Add the `Headers::iter` method to iterate over all message headers in order.\n\n* Add the `PartitionQueue::set_nonempty_callback` method to register a callback\n  for a specific partition queue that will run when that queue becomes\n  nonempty. This is a more flexible replacement for the\n  `ConsumerContext::message_queue_nonempty_callback` method that was removed\n  in the last release.\n\n* In `BaseConsumer::rebalance_protocol` and `StreamConsumer::rebalance_protocol`,\n  handle null return values from the underlying librdkakfa API ([#417]). This\n  avoids an occasional segfault in the rebalance callback.\n\n  Thanks, [@bruceg].\n\n* Add a `tracing` feature which, when enabled, emits log messages using the\n  `tracing` crate rather than the `log` crate.\n\n* Add support for the `OAUTHBEARER` SASL authentication mechanism via the new\n  `ClientContext::ENABLE_REFRESH_OAUTH_TOKEN` constant and the new\n  `ClientContext::generate_oauth_token` method.\n\n  Thanks, [@jsurany-bloomberg].\n\n[#417]: https://github.com/fede1024/rust-rdkafka/issues/417\n[@bruceg]: https://github.com/bruceg\n[@cjubb39]: https://github.com/cjubb39\n[@jsurany-bloomberg]: https://github.com/jsurany-bloomberg\n\n## 0.28.0 (2021-11-27)\n\n* Add the `StreamConsumer::split_partition_queue` method to mirror\n  `BaseConsumer::split_partition_queue` ([#411]).\n\n  Thanks to [@davidblewett], [@duarten], and [@nemosupremo] for contributing to\n  the implementation.\n\n* **Breaking change.** Remove the `StreamConsumerContext` type and the\n  `ConsumerContext::message_queue_nonempty_callback` method. These were\n  essentially implementation details of `StreamConsumer` that had leaked into\n  the public API. The vast majority of users should be unaffected.\n\n* **Breaking change.** Remove the type parameters from the `MessageStream` type.\n\n* **Breaking change.** Add the received `TopicPartitionList` to the\n  `Rebalance::Revoke` variant, which is useful when using incremental\n  cooperative rebalancing ([#398]).\n\n* Avoid crashing if librdkafka invokes the commit callback with a null\n  topic partition list ([#406]).\n\n  Thanks, [@thijsc].\n\n* Add the new statistics fields in librdkafka v1.7.0 to the various statistics\n  types. The new fields are:\n\n    * `Partition::consumer_lag_stored`\n    * `Broker::txidle`\n    * `Broker::rxidle`\n    * `Statistics::age`\n\n* **Breaking change.** Change the type of the following statistics fields from\n  `i64` to `u64` to reflect the signedness of the upstream types:\n\n    * `Statistics::msg_cnt`\n    * `Statistics::msg_size`\n    * `Statistics::msg_max`\n    * `Statistics::msg_size_max`\n    * `Broker::tx`\n    * `Broker::txbytes`\n    * `Broker::txretries`\n    * `Broker::req_timeouts`\n    * `Broker::rx`\n    * `Broker::rxbytes`\n    * `Broker::rxerrs`\n    * `Broker::rxcorriderrs`\n    * `Broker::rxpartial`\n    * `Broker::zbuf_grow`\n    * `Broker::buf_grow`\n    * `Broker::wakeups`\n    * `Broker::msgq_bytes`\n    * `Broker::xmit_msgq_bytes`\n    * `Broker::fetchq_size`\n    * `Partition::txmsgs`\n    * `Partition::txbytes`\n    * `Partition::rxmsgs`\n    * `Partition::rxbytes`\n    * `Partition::msgs`\n    * `Partition::rx_ver_drops`\n    * `Partition::acked_msgid`\n\n* Add the `ClientContext::stats_raw` method to consume the JSON-encoded\n  statistics from librdkafka. The default implementation calls\n  `ClientContext::stats` with the decoded statistics.\n\n* Add the `Default` trait to the statistics types: `Statistics`, `Broker`,\n  `Window`, `TopicPartition`, `Topic`, `Partition`, `ConsumerGroup`, and\n  `ExactlyOnceSemantics` ([#410]).\n\n  Thanks, [@scanterog].\n\n* Add the `Debug` trait to `DefaultClientContext` and `DefaultConsumerContext`\n  ([#401]).\n\n  Thanks, [@DXist].\n\n[#398]: https://github.com/fede1024/rust-rdkafka/issues/398\n[#401]: https://github.com/fede1024/rust-rdkafka/issues/401\n[#406]: https://github.com/fede1024/rust-rdkafka/issues/406\n[#410]: https://github.com/fede1024/rust-rdkafka/issues/410\n[#411]: https://github.com/fede1024/rust-rdkafka/issues/411\n[@davidblewett]: https://github.com/davidblewett\n[@duarten]: https://github.com/duarten\n[@DXist]: https://github.com/DXist\n[@nemosupremo]: https://github.com/nemosupremo\n[@scanterog]: https://github.com/scanterog\n[@thijsc]: https://github.com/thijsc\n\n<a name=\"0.27.0\"></a>\n## 0.27.0 (2021-10-17)\n\n* Allow offset 0 in `Offset::to_raw`.\n\n  Thanks, [@roignpar].\n\n* Fix a segfault when calling `Consumer::position` on a consumer that was\n  improperly configured ([#360]).\n\n* Provide a mutable accessor (`Message::payload_mut`) for a message's\n  payload ([#95]).\n\n* Implement `std::iter::Extend<(String, String)>` and\n  `std::iter::FromIterator<(String, String)` for `ClientConfig` ([#367]).\n\n  Thanks, [@djKooks].\n\n* **Breaking change.** Change `Consumer::store_offset` to accept the topic,\n  partition, and offset directly ([#89], [#368]). The old API, which took a\n  `BorrowedMessage`, is still accessible as\n  `Consumer::store_offset_from_message`.\n\n* Support incremental cooperative rebalancing ([#364]). There are two changes\n  of note:\n\n    * The addition of `Consumer::rebalance_protocol` to determine the rebalance\n      protocol in use.\n\n    * The modification of the default rebalance callback\n      (`ConsumerContext::rebalance`) to perform incremental assignments and\n      unassignments when the rebalance protocol in use is\n      [`RebalanceProtocol::Cooperative`].\n\n  Thanks, [@SreeniIO].\n\n* Support reading and writing commit metadata via\n  `TopicPartitionListElem::metadata` and `TopicPartitionListElem::set_metadata`,\n  respectively ([#391]).\n\n  Thanks, [@phaazon].\n\n[#89]: https://github.com/fede1024/rust-rdkafka/issues/89\n[#95]: https://github.com/fede1024/rust-rdkafka/issues/95\n[#360]: https://github.com/fede1024/rust-rdkafka/issues/360\n[#364]: https://github.com/fede1024/rust-rdkafka/issues/364\n[#367]: https://github.com/fede1024/rust-rdkafka/issues/367\n[#368]: https://github.com/fede1024/rust-rdkafka/issues/368\n[#391]: https://github.com/fede1024/rust-rdkafka/issues/391\n[@djKooks]: https://github.com/djKooks\n[@phaazon]: https://github.com/phaazon\n[@SreeniIO]: https://github.com/SreeniIO\n\n<a name=\"0.26.0\"></a>\n## 0.26.0 (2021-03-16)\n\n* Fix compilation for the aarch64 target.\n\n* Add an `inner` method to `StreamConsumerContext` to enable access to the\n  underlying context.\n\n  Thanks, [@marcelo140].\n\n* Mark the `KafkaError` enum as [non-exhaustive] so that future additions to\n  the enum will not be considered breaking changes.\n\n[@marcelo140]: https://github.com/marcelo140\n\n<a name=\"0.25.0\"></a>\n## 0.25.0 (2021-01-30)\n\n* Add support for transactional producers. The new methods are\n  `Producer::init_transactions`, `Producer::begin_transaction`,\n  `Producer::commit_transaction`, `Producer::abort_transaction`, and\n  `Producer::send_offsets_to_transaction`.\n\n  Thanks to [@roignpar] for the implementation.\n\n* **Breaking change.** Rename `RDKafkaError` to `RDKafkaErrorCode`. This makes\n  space for the new `RDKafkaError` type, which mirrors the `rd_kafka_error_t`\n  type added to librdkafka in v1.4.0.\n\n  This change was made to reduce long-term confusion by ensuring the types in\n  rust-rdkafka map to types in librdkafka as directly as possible. The\n  maintainers apologize for the difficulty in upgrading through this change.\n\n* **Breaking change.** Rework the consumer APIs to fix several bugs and design\n  warts:\n\n  * Rename `StreamConsumer::start` to `StreamConsumer::stream`, though the\n    former name will be retained as a deprecated alias for one release to ease\n    the transition. The new name better reflects that the method is a cheap\n    operation that can be called repeatedly and in multiple threads\n    simultaneously.\n\n  * Remove the `StreamConsumer::start_with` and\n    `StreamConsumer::start_with_runtime` methods.\n\n    There is no replacement in rust-rdkafka itself for the `no_message_error`\n    parameter. If you need this message, use a downstream combinator like\n    `tokio_stream::StreamExt::timeout`.\n\n    There is no longer a need for the `poll_interval` parameter to these\n    methods. Message delivery is now entirely event driven, so no time-based\n    polling occurs.\n\n    To specify an `AsyncRuntime` besides the default, specify the desired\n    runtime type as the new `R` parameter of `StreamConsumer` when you create\n    it.\n\n  * Remove the `Consumer::get_base_consumer` method, as\n    accessing the `BaseConsumer` that underlied a `StreamConsumer` was\n    dangerous.\n\n  * Return an `&Arc<C>` from `Client::context` rather than an\n    `&C`. This is expected to cause very little breakage in practice.\n\n  * Move the `BaseConsumer::context` method to the `Consumer`\n    trait, so that it is available when using the `StreamConsumer` as well.\n\n* **Breaking change.** Rework the producer APIs to fix several design warts:\n\n  * Remove the `FutureProducer::send_with_runtime` method. Use the `send`\n    method instead. The `AsyncRuntime` to use is determined by the new `R`\n    type parameter to `FutureProducer`, which you can specify when you create\n    the producer.\n\n    This change makes the `FutureProducer` mirror the redesigned\n    `StreamConsumer`.\n\n    This change should have no impact on users who use the default runtime.\n\n  * Move the `producer::base_producer::{ProducerContext, DefaultProducerContext}`\n    types out of the `base_producer` module and into the `producer` module\n    directly, to match the `consumer` module layout.\n\n  * Move the `client`, `in_flight_count`, and `flush` methods inherent to all\n    producers to a new `Producer` trait. This trait is analogous to the\n    `Consumer` trait.\n\n* **Breaking change.** Calls to `BaseConsumer::assign` deactivate any\n  partition queues previously created with\n  `BaseConsumer::split_partition_queue`. You will need to re-split all\n  partition queues after every call to `assign`.\n\n  This is due to an upstream change in librdkafka. See\n  [edenhill/librdkafka#3231](https://github.com/edenhill/librdkafka/issues/3231)\n  for details.\n\n* **Breaking change.** Several `TopicPartitionList`-related methods now return\n  `Result<T, KafkaError>` rather than `T`:\n\n  * `TopicPartitionListElem::set_offset`\n  * `TopicPartitionList::from_topic_map`\n  * `TopicPartitionList::add_partition_offset`\n  * `TopicPartitionList::set_all_offsets`\n\n  This was necessary to properly throw errors when an `Offset` passed to one\n  of these methods is representable in Rust but not in C.\n\n* Support end-relative offsets via `Offset::OffsetTail`.\n\n* Fix stalls when using multiple `MessageStream`s simultaneously.\n\n  Thanks to [@Marwes] for discovering the issue and contributing the initial\n  fix.\n\n* Add a convenience method, `StreamConsumer::recv`, to yield the next message\n  from a stream.\n\n  Thanks again to [@Marwes].\n\n* Add a new implementation of `AsyncRuntime` called `NaiveRuntime` that does not\n  depend on Tokio.\n\n  This runtime has poor performance, but is necessary to make the crate compile\n  when the `tokio` feature is disabled.\n\n* Add the `ClientConfig::get` and `ClientConfig::remove` methods to retrieve\n  and remove configuration parameters that were set with `ClientConfig::set`.\n\n* **Breaking change.** Change the `key` and `value` parameters of the\n  `ClientConfig::set` method to accept any type that implements `Into<String>`,\n  rather than only `&str`.\n\n  This is technically a breaking change as values of type `&&str` are no longer\n  accepted, but this is expected to be a rare case.\n\n  Thanks, [@koushiro].\n\n* Add the `NativeClientConfig::get` method, which reflects librdkafka's\n  view of a parameter value. Unlike `ClientConfig::get`, this method is capable\n  of surfacing librdkafka's default value for a parameter.\n\n* Add the missing `req` field, which counts the number of requests of each type\n  that librdkafka has sent, to the `Statistics` struct. Thanks, [@pablosichert]!\n\n[@koushiro]: https://github.com/koushiro\n[@Marwes]: https://github.com/Marwes\n[@pablosichert]: https://github.com/pablosichert\n[@roignpar]: https://github.com/roignpar\n\n<a name=\"0.24.0\"></a>\n## 0.24.0 (2020-07-08)\n\n* **Breaking change.** Introduce a dependency on Tokio for the `StreamConsumer`\n  in its default configuration. The new implementation is more efficient and\n  does not require a background thread and an extra futures executor.\n\n* Introduce the `StreamConsumer::start_with_runtime` and\n  `FutureProducer::send_with_runtime` methods. These methods are identical to\n  their respective non-`_with_runtime` counterparts, except that they take\n  an additional `AsyncRuntime` generic parameter that permits using an\n  asynchronous runtime besides Tokio.\n\n  For an example of using rdkafka with the [smol] runtime, see the\n  new [smol runtime] example.\n\n* **Breaking change.** Remove the `StreamConsumer::stop` method. To stop a\n  `StreamConsumer` after calling `start`, simply drop the resulting\n  `MessageStream`.\n\n* **Breaking change.** Overhaul the `FutureProducer::send` method. The old\n  implementation incorrectly blocked asynchronous tasks with\n  `std::thread::sleep` and the `block_ms` parameter did not behave as\n  documented.\n\n  The new implementation:\n\n    * changes the `block_ms: i64` parameter to\n      `queue_timeout: impl Into<Timeout>`, to better match how timeouts are\n      handled elsewhere in the rust-rdkafka API,\n\n    * depends on Tokio, in order to retry enqueuing after a time interval\n      without using `std::thread::sleep`,\n\n    * returns an opaque future that borrows its input, rather than a\n      `DeliveryFuture` with no internal references,\n\n    * simplifies the output type of the returned future from\n      `Result<OwnedDeliveryResult, oneshot::Canceled>` to `OwnedDeliveryResult`.\n\n  Thanks to [@FSMaxB-dooshop] for discovering the issue and contributing the\n  initial fix.\n\n* **Breaking change.** Remove the `util::duration_to_millis` function. This\n  functionality has been available in the standard library as\n  [`std::time::Duration::as_millis`] for over a year.\n\n* Introduce the `BaseConsumer::split_partition_queue` method to allow reading\n  messages from partitions independently of one another.\n\n* Implement `Clone`, `Copy`, and `Debug` for `CommitMode`.\n\n* Decouple versioning of rdkafka-sys from rdkafka. rdkafka-sys now has its\n  own [changelog](rdkafka-sys/changelog.md) and will follow SemVer conventions.\n  ([#211])\n\n[#211]: https://github.com/fede1024/rust-rdkafka/issues/211\n[`std::time::Duration::as_millis`]: https://doc.rust-lang.org/stable/std/time/struct.Duration.html#method.as_millis\n[smol runtime]: https://github.com/fede1024/rust-rdkafka/tree/master/examples/smol_runtime.rs\n[smol]: docs.rs/smol\n\n[@FSMaxB-dooshop]: https://github.com/FSMaxB-dooshop\n\n<a name=\"0.23.1\"></a>\n## 0.23.1 (2020-01-13)\n\n* Fix build on docs.rs.\n\n<a name=\"0.23.0\"></a>\n## 0.23.0 (2019-12-31)\n\n* Upgrade to the async/await ecosystem, including `std::future::Future`, v0.3\n  of the futures crate, and v0.2 of Tokio. The minimum supported Rust version\n  is now Rust 1.39. Special thanks to [@sd2k] and [@dbcfd]. ([#187])\n\n  The main difference is that functions that previously returned\n  ```rust\n  futures01::Future<Item = T, Error = E>\n  ```\n  now return:\n  ```rust\n  std::future::Future<Output = Result<T, E>>\n  ```\n  In the special case when the error was `()`, the new signature is further\n  simplified to:\n  ```rust\n  std::future::Future<Output = T>\n  ```\n  Functions that return `future::Stream`s have had the analogous transformation\n  applied.\n\n* Implement `Send` and `Sync` on `BorrowedMessage`, so that holding a reference\n  to a `BorrowedMessage` across an await point is possible. ([#190])\n\n* Implement `Sync` on `OwnedHeaders`, which applies transitively to\n  `OwnedMessage`, so that holding a reference to an `OwnedMessage` across an\n  await point is possible. ([#203])\n\n* Bump librdkafka to v1.3.0. ([#202])\n\n* Change the signature of `ConsumerContext::commit_callback` so that the\n  offsets are passed via a safe `TopicPartitionList` struct, and not a\n  raw `*mut rdkafka_sys::RDKafkaPartitionList` pointer. Thanks, [@scrogson]!\n  ([#198]).\n\n* Fix CMake build on Windows when debug information is enabled ([#194]).\n\n[#187]: https://github.com/fede1024/rust-rdkafka/pull/187\n[#190]: https://github.com/fede1024/rust-rdkafka/pull/190\n[#194]: https://github.com/fede1024/rust-rdkafka/pull/194\n[#198]: https://github.com/fede1024/rust-rdkafka/pull/198\n[#202]: https://github.com/fede1024/rust-rdkafka/pull/202\n[#203]: https://github.com/fede1024/rust-rdkafka/pull/203\n\n[@sd2k]: https://github.com/sd2k\n[@dbcfd]: https://github.com/dbcfd\n[@scrogson]: https://github.com/scrogson\n\n<a name=\"0.22.0\"></a>\n## 0.22.0 (2019-12-01)\n\n* Add a client for Kafka's Admin API, which allows actions like creating and\n  deleting Kafka topics and changing configuration parameters. ([#122])\n* Fix compliation on ARM, and ensure it stays fixed by adding an ARM builder\n  to CI. ([#134], [#162])\n* Stop automatically generating librdkafka bindings. Platform-independent\n  bindings are now checked in to the repository. ([#163])\n* Move zstd compression support behind the `zstd` feature flag. ([#163])\n* Remove build-time dependency on bindgen, clang, and libclang. ([#163])\n* Support `Consumer::pause` and `Consumer::resume`. ([#167])\n* Expose the `message_queue_nonempty` callback, which allows clients to put\n  their poll thread to sleep and be woken up when new data arrives. ([#164])\n* Implement `IntoOpaque` for `Arc<T>`. ([#171])\n* Add `Consumer::seek` method. ([#172])\n* Support building with Microsoft Visual C++ (MSVC) on Windows. ([#176])\n* Bump librdkafka to v1.2.2. ([#177])\n* Run tests against multiple Kafka versions in CI. ([#182])\n* Standardize feature names. All feature names now use hyphens instead of\n  underscores, as is conventional, though the old names remain for\n  backwards compatibility. ([#183])\n* Optionalize libz via a new `libz` feature. The new feature is a default\n  feature for backwards compatibility. ([#183])\n* Better attempt to make build systems agree on what version of a dependency\n  to compile and link against, and document this hazard. ([#183])\n\n[#122]: https://github.com/fede1024/rust-rdkafka/pull/122\n[#134]: https://github.com/fede1024/rust-rdkafka/pull/134\n[#162]: https://github.com/fede1024/rust-rdkafka/pull/162\n[#163]: https://github.com/fede1024/rust-rdkafka/pull/163\n[#164]: https://github.com/fede1024/rust-rdkafka/pull/164\n[#167]: https://github.com/fede1024/rust-rdkafka/pull/167\n[#171]: https://github.com/fede1024/rust-rdkafka/pull/171\n[#172]: https://github.com/fede1024/rust-rdkafka/pull/172\n[#176]: https://github.com/fede1024/rust-rdkafka/pull/176\n[#177]: https://github.com/fede1024/rust-rdkafka/pull/177\n[#182]: https://github.com/fede1024/rust-rdkafka/pull/182\n[#183]: https://github.com/fede1024/rust-rdkafka/pull/183\n\n\n<a name=\"0.21.0\"></a>\n## 0.21.0 (2019-04-24)\n\n* Add librdkafka 1.0 support\n* Automatically generate librdkafka bindings\n* Use updated tokio version in asynchronous\\_processing example\n\n\n<a name=\"0.20.0\"></a>\n## 0.20.0 (2019-02-25)\n\n* Add FreeBSD support\n* Add `offsets_for_times` method\n* Add `committed_offsets` method\n\n<a name=\"0.19.0\"></a>\n## 0.19.0 (2019-02-06)\n\n* Fix ordering of generics in FutureProducer::send\n\n<a name=\"0.18.1\"></a>\n## 0.18.1 (2019-02-06)\n\n* Add method for storing multiple offsets\n\n<a name=\"0.18.0\"></a>\n## 0.18.0 (2019-01-18)\n\n* Upgrade librdkafka to 0.11.6\n\n<a name=\"0.17.0\"></a>\n## 0.17.0 (2018-06-30)\n\n* Add missing documentation warning.\n* Add new experimental producer API. Instead of taking key, value and timestamp directly,\n  producers now get them in a `ProducerRecord` which allows to specify optional arguments using\n  the builder pattern.\n* Add message headers support.\n* Upgrade tokio-core to tokio in async example, remove futures-cpupool.\n* `MessageStream` is now Send and Sync\n\n<a name=\"0.16.0\"></a>\n## 0.16.0 (2018-05-20)\n\n* Upgrade librdkafka to 0.11.4\n\n<a name=\"0.15.0\"></a>\n## 0.15.0 (2018-03-15)\n\n* Added iterator interface to the `BaseConsumer`.\n* Change timeout to more rust-idiomatic `Option<Duration>`.\n* Add `external_lz4` feature to use external lz4 library instead of\n  the one one built in librdkafka. Disable by default.\n* Mark all `from_ptr` methods as unsafe.\n* Remove `Timestamp::from_system_time` and implement `From` trait instead.\n* Rename `Context` to `ClientContext`.\n* Rename `Empty(...)Context` to `Default(...)Context`.\n* Use default type parameters for the context of `Client`, producers and consumers\n  with `Default(...)Context` set as the default one.\n* Increase default buffer size in `StreamConsumer` from 0 to 10 to reduce context switching.\n\n<a name=\"0.14.1\"></a>\n## 0.14.1 (2017-12-30)\n\n* Upgrade to librdkafka 0.11.3\n* Add `send_copy_result` method to `FutureProducer`\n\n<a name=\"0.14.0\"></a>\n## 0.14.0 (2017-11-26)\n\n#### Features\n* Make `PollingProducer` methods public\n* Rename `PollingProducer` to `ThreadedProducer`\n\n#### Refactoring\n* Remove `TopicConfig` since librdkafka supports default topic configuration\n  directly in the top level configuration\n* Rename `DeliveryContext` into `DeliveryOpaque`\n* Add `IntoOpaque` trait to support different opaque types.\n\n#### Bugs\n* Fix regression in producer error reporting (#65)\n\n<a name=\"0.13.0\"></a>\n## 0.13.0 (2017-10-22)\n\n#### Refactoring\n* Split producer.rs into multiple files\n* Both producers now return the original message after failure\n* BaseConsumer returns an Option\\<Result\\> instead of Result\\<Option\\>\n\n#### Features\n* Upgrade to librdkafka 0.11.1\n* Enable dynamic linking via feature\n* Refactor BaseConsumer, which now implements the Consumer trait directly\n* A negative timestamp will now automatically be reported as NonAvailable timestamp\n* Point rdkafka-sys to latest librdkafka master branch\n* Add producer.flush and producer.in\\_flight\\_count\n* Add max block time for FutureProducer\n\n#### Bugs\n* Fix memory leak during consumer error reporting\n* Fix memory leak during producer error reporting\n\n<a name=\"0.12.0\"></a>\n## 0.12.0 (2017-07-25)\n\n#### Features\n* Upgrade librdkafka to 0.11.0.\n* `FutureProducer::send_copy` will now return a `DeliveryFuture` direcly.\n* TPL entries now also export errors.\n* `KafkaError` is now Clone and Eq.\n\n#### Bugs\n* Fix flaky tests.\n\n<a name=\"0.11.1\"></a>\n## 0.11.1 (2017-06-25)\n\n#### Features\n\n* Support direct creation of OwnedMessages.\n\n<a name=\"0.11.0\"></a>\n## 0.11.0 (2017-06-20)\n\n#### Features\n\n* The topic partition list object from librdkafka is now completely accessible\n  from Rust.\n* The test suite will now run both unit tests and integration tests in\n  valgrind, and it will also check for memory leaks.\n* rdkafka-sys will use the system librdkafka if it's already installed.\n* rdkafka-sys will verify that the crate version corresponds to the librdkafka\n  version during the build.\n* Timestamp is now Copy.\n* Message has been renamed to BorrowedMessage. Borrowed messages can be transformed\n  into owned messages. Both implement the new Message trait.\n* Improved error enumerations.\n\n#### Bugs\n\n* Fix memory access bug in statistics callback.\n* Fix memory leak in topic partition list.\n* Messages lifetime is now explicit (issue [#48](https://github.com/fede1024/rust-rdkafka/issues/48))\n\n<a name=\"0.10.0\"></a>\n## 0.10.0 (2017-05-15)\n\n#### Features\n\n* Consumer commit callback\n* Add configurable poll timeout\n* Add special error code for message not received within poll time\n* Add topic field for messages\n* Make the topic partition list optional for consumer commit\n* Add `store_offset` to consumer\n* Add at-least-once delivery example\n\n<a name=\"0.9.1\"></a>\n## 0.9.1 (2017-04-19)\n\n#### Features\n\n* OpenSSL dependency optional\n* librdkafka 0.9.5\n\n<a name=\"0.9.0\"></a>\n## 0.9.0 (2017-04-16)\n\n#### Bugs\n\n* Fix termination sequence\n\n#### Features\n\n* Integration tests running in docker and valgrind\n* Producer topics are not needed anymore\n\n<a name=\"0.8.1\"></a>\n## 0.8.1 (2017-03-21)\n\n##### Bugs\n\n* Implement Clone for `BaseProducerTopic`\n\n#### Features\n\n<a name=\"0.8.0\"></a>\n## 0.8.0 (2017-03-20)\n\n#### Features\n\n* Add timestamp support\n* librdkafka 0.9.4\n* Add client statistics callback and parsing\n\n<a name=\"0.7.0\"></a>\n## 0.7.0 (2017-02-18)\n\n#### Features\n\n* Asynchronous message processing example based on tokio\n* More metadata for consumers\n* Watermark API\n* First iteration of integration test suite\n\n[non-exhaustive]: https://doc.rust-lang.org/reference/attributes/type_system.html#the-non_exhaustive-attribute\n"
        },
        {
          "name": "coverage.sh",
          "type": "blob",
          "size": 1.853515625,
          "content": "#!/bin/bash\n\nGREEN='\\033[0;32m'\nRED='\\033[0;31m'\nNC='\\033[0m' # No Color\n\nINCLUDE=\"/src\"\nEXCLUDE=\"/.cargo,rdkafka-sys/librdkafka,rdkafka-sys/src/bindings\"\nTARGET=\"target/cov\"\n\nKCOV_ARGS=\"--include-pattern=$INCLUDE --exclude-pattern=$EXCLUDE --verify $TARGET\"\n\nRDKAFKA_UNIT_TESTS=\"target/debug/rdkafka-\"\nRDKAFKASYS_UNIT_TESTS=\"rdkafka-sys/target/debug/rdkafka_sys-\"\nINTEGRATION_TESTS=\"target/debug/test_\"\n\nexport RUSTFLAGS=\"-C link-dead-code\"\n\necho -e \"${GREEN}*** Clean previous coverage results and executables ***${NC}\"\nrm -rf \"$TARGET\"\nrm -f \"$RDKAFKA_UNIT_TESTS\"*\nrm -f \"$RDKAFKASYS_UNIT_TESTS\"*\nrm -f \"$INTEGRATION_TESTS\"*\n\necho -e \"${GREEN}*** Rebuilding tests ***${NC}\"\ncargo test --no-run\npushd rdkafka-sys && cargo test --no-run && popd\n\necho -e \"${GREEN}*** Run coverage on rdkafka unit tests ***${NC}\"\nfor test_file in `ls \"$RDKAFKA_UNIT_TESTS\"*`\ndo\n    if [[ ! -x \"$test_file\" ]]; then\n        continue\n    fi\n    kcov $KCOV_ARGS \"$test_file\"\n    if [ \"$?\" != \"0\" ]; then\n        echo -e \"${RED}*** Failure during unit test converage ***${NC}\"\n        exit 1\n    fi\ndone\n\necho -e \"${GREEN}*** Run coverage on rdkafka-sys unit tests ***${NC}\"\nfor test_file in `ls \"$RDKAFKASYS_UNIT_TESTS\"*`\ndo\n    if [[ ! -x \"$test_file\" ]]; then\n        continue\n    fi\n    kcov $KCOV_ARGS \"$test_file\"\n    if [ \"$?\" != \"0\" ]; then\n        echo -e \"${RED}*** Failure during rdkafka-sys unit test converage ***${NC}\"\n        exit 1\n    fi\ndone\n\necho -e \"${GREEN}*** Run coverage on rdkafka integration tests ***${NC}\"\nfor test_file in `ls \"$INTEGRATION_TESTS\"*`\ndo\n    if [[ ! -x \"$test_file\" ]]; then\n        continue\n    fi\n    echo -e \"${GREEN}Executing \"$test_file\"${NC}\"\n    kcov $KCOV_ARGS \"$test_file\"\n    if [ \"$?\" != \"0\" ]; then\n        echo -e \"${RED}*** Failure during integration converage ***${NC}\"\n        exit 1\n    fi\ndone\n\necho -e \"${GREEN}*** Coverage completed successfully ***${NC}\"\n"
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 0.646484375,
          "content": "services:\n  kafka:\n    image: confluentinc/cp-kafka:${CONFLUENT_VERSION:-7.5.1}\n    environment:\n      - KAFKA_BROKER_ID=0\n      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\n      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092\n      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1\n      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1\n      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1\n      - KAFKA_NUM_PARTITIONS=3\n      - CONFLUENT_SUPPORT_METRICS_ENABLE=0\n    ports: [\"9092:9092\"]\n    links: [zookeeper]\n\n  zookeeper:\n    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION:-7.5.1}\n    environment:\n      - ZOOKEEPER_CLIENT_PORT=2181\n    ports: [\"2181:2181\"]\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate_readme.py",
          "type": "blob",
          "size": 1.455078125,
          "content": "#!/usr/bin/python3\n\nfrom collections import namedtuple\nimport sys\n\n\nINCLUDE_MARKER = \"__INCLUDE_RUST_DOC__\"\n\nTemplate = namedtuple(\"Template\", [\"header\", \"footer\", \"doc_path\", \"start\"])\n\n\ndef read_rust_doc_lines(path):\n    with open(path, \"r\") as rust_doc:\n        for line in rust_doc:\n            if line.startswith('//! '):\n                yield line[4:]\n            elif line.startswith('//!'):\n                yield line[3:]\n            else:\n                break\n\n\ndef parse_template_file(path):\n    content = [line for line in open(path, \"r\")]\n    try:\n        marker_position = [n for (n, line) in enumerate(content)\n                           if line.startswith(INCLUDE_MARKER)][0]\n    except IndexError:\n        raise Exception(\"Missing include marker\")\n    include_info = content[marker_position].strip().split('$')\n    doc_path = include_info[1]\n    start = None\n    if len(include_info) > 2:\n        start = include_info[2]\n    return Template(\n        header=content[0:marker_position], footer=content[marker_position+1:],\n        doc_path=include_info[1], start=start,\n    )\n\n\ntemplate = parse_template_file(\"readme_template\")\ndoc = read_rust_doc_lines(template.doc_path)\n\noutput = sys.stdout\n\nfor line in template.header:\n    output.write(line)\n\nif template.start:\n    for line in doc:\n        if line.startswith(template.start):\n            output.write(line)\n            break\n\nfor line in doc:\n    output.write(line)\n\nfor line in template.footer:\n    output.write(line)\n"
        },
        {
          "name": "rdkafka-sys",
          "type": "tree",
          "content": null
        },
        {
          "name": "rdkafka.suppressions",
          "type": "blob",
          "size": 0.400390625,
          "content": "# Valgrind suppression file.\n\n# Spurious statx complaints: https://github.com/rust-lang/rust/issues/68979.\n# TODO(benesch): remove when CI upgrades to Valgrind 3.16.\n{\n   <statx1>\n   Memcheck:Param\n   statx(file_name)\n   fun:statx\n   fun:statx\n   fun:_ZN3std3sys4unix2fs9try_statx*\n   ...\n}\n{\n   <statx2>\n   Memcheck:Param\n   statx(buf)\n   fun:statx\n   fun:statx\n   fun:_ZN3std3sys4unix2fs9try_statx*\n   ...\n}\n"
        },
        {
          "name": "readme_template",
          "type": "blob",
          "size": 0.99609375,
          "content": "# rust-rdkafka\n\n[![crates.io](https://img.shields.io/crates/v/rdkafka.svg)](https://crates.io/crates/rdkafka)\n[![docs.rs](https://docs.rs/rdkafka/badge.svg)](https://docs.rs/rdkafka/)\n[![Build Status](https://travis-ci.org/fede1024/rust-rdkafka.svg?branch=master)](https://travis-ci.org/fede1024/rust-rdkafka)\n[![coverate](https://codecov.io/gh/fede1024/rust-rdkafka/graphs/badge.svg?branch=master)](https://codecov.io/gh/fede1024/rust-rdkafka/)\n[![Join the chat at https://gitter.im/rust-rdkafka/Lobby](https://badges.gitter.im/rust-rdkafka/Lobby.svg)](https://gitter.im/rust-rdkafka/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n__INCLUDE_RUST_DOC__$src/lib.rs\n\n## rdkafka-sys\n\nSee [rdkafka-sys](https://github.com/fede1024/rust-rdkafka/tree/master/rdkafka-sys).\n\n## Contributors\n\nThanks to:\n* Thijs Cadier - [thijsc](https://github.com/thijsc)\n\n## Alternatives\n\n* [kafka-rust]: a pure Rust implementation of the Kafka client.\n\n[kafka-rust]: https://github.com/spicavigo/kafka-rust\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_suite.sh",
          "type": "blob",
          "size": 1.720703125,
          "content": "#!/usr/bin/env bash\n\nGREEN='\\033[0;32m'\nRED='\\033[0;31m'\nNC='\\033[0m' # No Color\n\nset -euo pipefail\n\necho_good() {\n    tput setaf 2\n    echo \"$@\"\n    tput sgr0\n}\n\necho_bad() {\n    tput setaf 1\n    echo \"$@\"\n    tput sgr0\n}\n\nrun_with_valgrind() {\n    if ! valgrind --error-exitcode=100 --suppressions=rdkafka.suppressions --gen-suppressions=all --leak-check=full \"$1\" --nocapture --test-threads=1\n    then\n        echo_bad \"*** Failure in $1 ***\"\n        exit 1\n    fi\n}\n\n# Initialize.\n\ngit submodule update --init\ndocker compose up -d --wait\n\n# Run integration tests\n\nRUST_LOG=1 RUST_BACKTRACE=1 cargo test\n\n\n# Run unit tests.\n\n#echo_good \"*** Run unit tests ***\"\n#for test_file in target/debug/deps/rdkafka-*\n#do\n#    if [[ -x \"$test_file\" ]]\n#    then\n#        echo_good \"Executing \"$test_file\"\"\n#        run_with_valgrind \"$test_file\"\n#    fi\n#done\n#echo_good \"*** Unit tests succeeded ***\"\n#\n## Run integration tests.\n#\n#echo_good \"*** Run integration tests ***\"\n#for test_file in target/debug/deps/test_*\n#do\n#    if [[ -x \"$test_file\" ]]\n#    then\n#        #echo_good \"*** Restarting kafka/zk ***\"\n#        #docker-compose restart --timeout 30\n#        echo_good \"Executing \"$test_file\"\"\n#        run_with_valgrind \"$test_file\"\n#    fi\n#done\n#echo_good \"*** Integration tests succeeded ***\"\n\n# Run smol runtime example.\n\necho_good \"*** Run runtime_smol example ***\"\ncargo run --example runtime_smol --no-default-features --features cmake-build -- --topic smol\necho_good \"*** runtime_smol example succeeded ***\"\n\n# Run async-std runtime example.\n\necho_good \"*** Run runtime_async_std example ***\"\ncargo run --example runtime_async_std --no-default-features --features cmake-build -- --topic async-std\necho_good \"*** runtime_async_std example succeeded ***\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}