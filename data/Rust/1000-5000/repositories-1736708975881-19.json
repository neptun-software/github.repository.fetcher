{
  "metadata": {
    "timestamp": 1736708975881,
    "page": 19,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pest-parser/pest",
      "stars": 4732,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03125,
          "content": "target\nCargo.lock\n.idea\n.vscode\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.107421875,
          "content": "tasks:\n  - init: |\n      cargo bootstrap\n      cargo build\n\nvscode:\n  extensions:\n    - matklad.rust-analyzer\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.796875,
          "content": "# Contributing to pest\n\n## Getting to know the project\n\nBefore diving into the whys and hows, it's best one got started with the what's. The best place to learn about what pest does and what its limits are is the [book]. Feel free to try any of the examples in the [fiddle editor] as well.\n\n[book]: https://pest.rs/book\n[fiddle editor]: https://pest.rs/#editor\n\nWith that out of the way, let's go through *pest's* crate structure:\n\n* `pest` - contains bare-bones parsing functionality and error types\n* `derive` - automatically generates code that uses the above crate from a grammar file\n  * `meta` - parses, validates, optimizes, and converts grammars to ASTs\n  * `generator` - generates code from an AST\n* `vm` - run ASTs on-the-fly and is used by the fiddle and debugger\n\n\n## Where to start\n\nIt's always a good practice to start with something that drives you, but if you're not inspired at the moment, you can go for a [good-first-issue]. These are the kind of issues more tailored to people with less *pest* experience, but they are not necessarily easier; they can offer a fair challenge.\n\n[good-first-issue]: https://github.com/pest-parser/pest/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-issue\n\n## Contributing in the cloud\n\nYou can open a ready-to-go development workspace with [Gitpod](https://gitpod.io) by clicking [this link](https://gitpod.io/#https://github.com/pest-parser/pest).\n\n\n## Mentoring\n\nWe're happy to mentor any issues as long as we have the time, but issues with a [mentored] tag should generally be considered when looking for ways to learn, grow, and get some honest feedback on your work.\n\n[mentored]: https://github.com/pest-parser/pest/issues?q=is%3Aissue+is%3Aopen+label%3Amentored\n\n## RFCs\n\nFor those of you looking for a more philosophical challenge, feel free to give [these] a try. A lot of the work ahead of us is hard and we need great thinkers to lay the foundation on which to build forward. Not for the faint of heart.\n\n[these]: https://github.com/pest-parser/pest/issues?q=is%3Aissue+is%3Aopen+label%3Aneeds-rfc\n\n## Website and book\n\nOur [website] and [book] are in constant need of attention. While not as well organized, they should be more approachable to the general popultion.\n\n[website]:https://github.com/pest-parser/site\n[book]: https://github.com/pest-parser/book\n\n## Gitter, Discord and GitHub Discussions\n\nSometimes it's best to just say what you want. For that, there's our [Gitter] room or [Discord] server. Leave feedback, help out, learn what people are up to, go off-topic for hours, or complain that compile times are terribleâ€”seriously, please don't.\n\nFor more long-living threads and common questions, you can use [GitHub Discussions].\n\n[Gitter]: https://gitter.im/pest-parser/pest\n\n[Discord]: https://discord.gg/XEGACtWpT2\n\n[GitHub Discussions]: https://github.com/pest-parser/pest/discussions"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.150390625,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"bootstrap\",\n    \"debugger\",\n    \"derive\",\n    \"generator\",\n    \"grammars\",\n    \"meta\",\n    \"pest\",\n    \"vm\"\n]\n"
        },
        {
          "name": "FUZZING.md",
          "type": "blob",
          "size": 1.8115234375,
          "content": "# Fuzzing pest\n\nThere are currently fuzzing targets set up on two of the crates used in `pest`:\n`pest_grammars` and `pest_meta`. These targets serve to [fuzz test] the parsing\nprovided by these crates by providing random inputs and searching for crashes.\nThe [cargo-fuzz] tool is used to run `libFuzzer` on the targets.\n\n[fuzz test]: https://en.wikipedia.org/wiki/Fuzzing\n[cargo-fuzz]: https://github.com/rust-fuzz/cargo-fuzz\n\n## Fuzz targets\n\nEach of the crates fuzzed has its targets held in the `fuzz` directory. \n\n### `pest_meta`\n\n- `parser`\n\nThere is a single fuzzing target for this crate that interacts with\n`pest_meta::parser::parse`, a function that parses pest grammar files.\n\n### `pest_grammars`\n\n- `http`\n- `toml`\n- `json`\n\nThere are three fuzzing targets for this crate: one tests the http request grammar in the `http` module, one tests the json grammar in the\n`json` module and the last one tests the toml grammar in the `toml` module. They\ninteract directly with the `pest::Parser::parse` function provided by derived\non the respective Parsers in each module.\n\n## Running a target\n\nIn order to run a fuzz target, first install cargo-fuzz:\n\n```sh\n> cargo install cargo-fuzz\n```\n\nNext, make sure that you are in the sub-directory corresponding to one of the\ncrates with fuzzing targets. Once there, use rustup (or whatever tool you use to\nmanage rustc versions) to use the `nightly` compiler.\n\nOnce using the nightly compiler, build and run the fuzzing crate, where target\nis the fuzzing target to run:\n\n```sh\n> cargo fuzz run [target]\n```\n\n> When compiling the fuzzing crate for the first time, it fails with an error\n> about the lack of the dynamic library `proc_macro` (at least on macOS). To fix\n> this error, simply run `cargo fuzz` again.\n\nFor more information, run `cargo fuzz -h` or check out the `cargo-fuzz`\nproject linked above.\n\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.833984375,
          "content": "\n<p align=\"center\">\n  <img src=\"https://raw.github.com/pest-parser/pest/master/pest-logo.svg?sanitize=true\" width=\"80%\"/>\n</p>\n\n# pest. The Elegant Parser\n\n[![Join the chat at https://gitter.im/pest-parser/pest](https://badges.gitter.im/dragostis/pest.svg)](https://gitter.im/pest-parser/pest?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Book](https://img.shields.io/badge/book-WIP-4d76ae.svg)](https://pest.rs/book)\n[![Docs](https://docs.rs/pest/badge.svg)](https://docs.rs/pest)\n\n[![pest Continuous Integration](https://github.com/pest-parser/pest/actions/workflows/ci.yml/badge.svg)](https://github.com/pest-parser/pest/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/pest-parser/pest/branch/master/graph/badge.svg)](https://codecov.io/gh/pest-parser/pest)\n<a href=\"https://blog.rust-lang.org/2021/11/01/Rust-1.61.0.html\"><img alt=\"Rustc Version 1.61.0+\" src=\"https://img.shields.io/badge/rustc-1.61.0%2B-lightgrey.svg\"/></a>\n\n[![Crates.io](https://img.shields.io/crates/d/pest.svg)](https://crates.io/crates/pest)\n[![Crates.io](https://img.shields.io/crates/v/pest.svg)](https://crates.io/crates/pest)\n\npest is a general purpose parser written in Rust with a focus on accessibility,\ncorrectness, and performance. It uses parsing expression grammars\n(or [PEG]) as input, which are similar in spirit to regular expressions, but\nwhich offer the enhanced expressivity needed to parse complex languages.\n\n[PEG]: https://en.wikipedia.org/wiki/Parsing_expression_grammar\n\n## Getting started\n\nThe recommended way to start parsing with pest is to read the official [book].\n\nOther helpful resources:\n\n* API reference on [docs.rs]\n* play with grammars and share them on our [fiddle]\n* find previous common questions answered or ask questions on [GitHub Discussions]\n* leave feedback, ask questions, or greet us on [Gitter] or [Discord]\n\n[book]: https://pest.rs/book\n[docs.rs]: https://docs.rs/pest\n[fiddle]: https://pest.rs/#editor\n[Gitter]: https://gitter.im/pest-parser/pest\n[Discord]: https://discord.gg/XEGACtWpT2\n[GitHub Discussions]: https://github.com/pest-parser/pest/discussions\n\n## Example\n\nThe following is an example of a grammar for a list of alphanumeric identifiers\nwhere all identifiers don't start with a digit:\n\n```rust\nalpha = { 'a'..'z' | 'A'..'Z' }\ndigit = { '0'..'9' }\n\nident = { !digit ~ (alpha | digit)+ }\n\nident_list = _{ ident ~ (\" \" ~ ident)* }\n          // ^\n          // ident_list rule is silent which means it produces no tokens\n```\n\nGrammars are saved in separate .pest files which are never mixed with procedural\ncode. This results in an always up-to-date formalization of a language that is\neasy to read and maintain.\n\n## Meaningful error reporting\n\nBased on the grammar definition, the parser also includes automatic error\nreporting. For the example above, the input `\"123\"` will result in:\n\n```\nthread 'main' panicked at ' --> 1:1\n  |\n1 | 123\n  | ^---\n  |\n  = unexpected digit', src/main.rs:12\n```\nwhile `\"ab *\"` will result in:\n```\nthread 'main' panicked at ' --> 1:1\n  |\n1 | ab *\n  |    ^---\n  |\n  = expected ident', src/main.rs:12\n```\n\nThese error messages can be obtained from their default `Display` implementation,\ne.g. `panic!(\"{}\", parser_result.unwrap_err())` or `println!(\"{}\", e)`.\n\n## Pairs API\n\nThe grammar can be used to derive a `Parser` implementation automatically.\nParsing returns an iterator of nested token pairs:\n\n```rust\nuse pest_derive::Parser;\nuse pest::Parser;\n\n#[derive(Parser)]\n#[grammar = \"ident.pest\"]\nstruct IdentParser;\n\nfn main() {\n    let pairs = IdentParser::parse(Rule::ident_list, \"a1 b2\").unwrap_or_else(|e| panic!(\"{}\", e));\n\n    // Because ident_list is silent, the iterator will contain idents\n    for pair in pairs {\n        // A pair is a combination of the rule which matched and a span of input\n        println!(\"Rule:    {:?}\", pair.as_rule());\n        println!(\"Span:    {:?}\", pair.as_span());\n        println!(\"Text:    {}\", pair.as_str());\n\n        // A pair can be converted to an iterator of the tokens which make it up:\n        for inner_pair in pair.into_inner() {\n            match inner_pair.as_rule() {\n                Rule::alpha => println!(\"Letter:  {}\", inner_pair.as_str()),\n                Rule::digit => println!(\"Digit:   {}\", inner_pair.as_str()),\n                _ => unreachable!()\n            };\n        }\n    }\n}\n```\n\nThis produces the following output:\n```\nRule:    ident\nSpan:    Span { start: 0, end: 2 }\nText:    a1\nLetter:  a\nDigit:   1\nRule:    ident\nSpan:    Span { start: 3, end: 5 }\nText:    b2\nLetter:  b\nDigit:   2\n```\n\n### Defining multiple parsers in a single file\nThe current automatic `Parser` derivation will produce the `Rule` enum\nwhich would have name conflicts if one tried to define multiple such structs\nthat automatically derive `Parser`. One possible way around it is to put each\nparser struct in a separate namespace:\n\n```rust\nmod a {\n    #[derive(Parser)]\n    #[grammar = \"a.pest\"]\n    pub struct ParserA;\n}\nmod b {\n    #[derive(Parser)]\n    #[grammar = \"b.pest\"]\n    pub struct ParserB;\n}\n```\n\n## Other features\n\n* Precedence climbing\n* Input handling\n* Custom errors\n* Runs on stable Rust\n\n## Projects using pest\n\nYou can find more projects and ecosystem tools in the [awesome-pest](https://github.com/pest-parser/awesome-pest) repo.\n\n* [pest_meta](https://github.com/pest-parser/pest/blob/master/meta/src/grammar.pest) (bootstrapped)\n* [AshPaper](https://github.com/shnewto/ashpaper)\n* [brain](https://github.com/brain-lang/brain)\n* [cicada](https://github.com/mitnk/cicada)\n* [comrak](https://github.com/kivikakk/comrak)\n* [elastic-rs](https://github.com/cch123/elastic-rs)\n* [graphql-parser](https://github.com/Keats/graphql-parser)\n* [handlebars-rust](https://github.com/sunng87/handlebars-rust)\n* [hexdino](https://github.com/Luz/hexdino)\n* [Huia](https://gitlab.com/jimsy/huia/)\n* [insta](https://github.com/mitsuhiko/insta)\n* [jql](https://github.com/yamafaktory/jql)\n* [json5-rs](https://github.com/callum-oakley/json5-rs)\n* [mt940](https://github.com/svenstaro/mt940-rs)\n* [Myoxine](https://github.com/d3bate/myoxine)\n* [py_literal](https://github.com/jturner314/py_literal)\n* [rouler](https://github.com/jarcane/rouler)\n* [RuSh](https://github.com/lwandrebeck/RuSh)\n* [rs_pbrt](https://github.com/wahn/rs_pbrt)\n* [stache](https://github.com/dgraham/stache)\n* [tera](https://github.com/Keats/tera)\n* [ui_gen](https://github.com/emoon/ui_gen)\n* [ukhasnet-parser](https://github.com/adamgreig/ukhasnet-parser)\n* [ZoKrates](https://github.com/ZoKrates/ZoKrates)\n* [Vector](https://github.com/timberio/vector)\n* [AutoCorrect](https://github.com/huacnlee/autocorrect)\n* [yaml-peg](https://github.com/aofdev/yaml-peg)\n* [qubit](https://github.com/abhimanyu003/qubit)\n* [caith](https://github.com/Geobert/caith) (a dice roller crate)\n* [Melody](https://github.com/yoav-lavi/melody)\n* [json5-nodes](https://github.com/jlyonsmith/json5-nodes)\n* [prisma](https://github.com/prisma/prisma)\n\n## Minimum Supported Rust Version (MSRV)\n\nThis library should always compile with default features on **Rust 1.61.0**.\n\n## no_std support\n\nThe `pest` and `pest_derive` crates can be built without the Rust standard\nlibrary and target embedded environments. To do so, you need to disable\ntheir default features. In your `Cargo.toml`, you can specify it as follows:\n\n```toml\n[dependencies]\n# ...\npest = { version = \"2\", default-features = false }\npest_derive = { version = \"2\", default-features = false }\n```\n\nIf you want to build these crates in the pest repository's workspace, you can\npass the `--no-default-features` flag to `cargo` and specify these crates using\nthe `--package` (`-p`) flag. For example:\n\n```bash\n$ cargo build --target thumbv7em-none-eabihf --no-default-features -p pest\n$ cargo bootstrap\n$ cargo build --target thumbv7em-none-eabihf --no-default-features -p pest_derive\n```\n\n## Special thanks\n\nA special round of applause goes to prof. Marius Minea for his guidance and all\npest contributors, some of which being none other than my friends.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.87109375,
          "content": "# Security Policy\n\n## Supported Versions\n\nOnly the most recent minor version is supported.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.7.x   | :white_check_mark: |\n| < 2.7.x | :x:                |\n\n\n## Reporting a Vulnerability\n\nPlease use the [GitHub private reporting functionality](https://github.com/pest-parser/pest/security/advisories/new)\nto submit potential security bug reports. If the bug report is reproduced and valid, we'll then:\n\n- Prepare a fix and regression tests.\n- Make a patch release for the most recent release.\n- Submit an advisory to [rustsec/advisory-db](https://github.com/RustSec/advisory-db).\n- Refer to the advisory in the release notes.\n\nIf you're *looking* for security bugs, [this crate is set up for\n`cargo fuzz`](https://github.com/pest-parser/pest/blob/master/FUZZING.md) but would benefit from more runtime, targets and corpora.\n"
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "bors.toml",
          "type": "blob",
          "size": 0.080078125,
          "content": "status = [\n    \"Unit, Style, and Lint Testing\",\n    \"Minimal Versions Testing\",\n]\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.11328125,
          "content": "comment: off\n\nignore:\n - debugger/src/main.rs\n - derive/src/lib.rs\n - pest/examples/parens.rs\n - pest/src/unicode/*\n"
        },
        {
          "name": "debugger",
          "type": "tree",
          "content": null
        },
        {
          "name": "derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "grammars",
          "type": "tree",
          "content": null
        },
        {
          "name": "meta",
          "type": "tree",
          "content": null
        },
        {
          "name": "pest-logo.svg",
          "type": "blob",
          "size": 4.6826171875,
          "content": "<svg viewBox=\"0 0 1303 575\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <radialGradient id=\"a\" cx=\".5\" cy=\".78\" gradientUnits=\"objectBoundingBox\" r=\"1\">\n    <stop offset=\"0\" stop-color=\"#ff8f00\"/>\n    <stop offset=\"1\" stop-color=\"#f02352\"/>\n  </radialGradient>\n  <path d=\"m359.234 335.486s-129.688 25.986-216.294-41.537c4.594-39.67 24.227-74.787 53.043-99.49-.794-8.287-.937-15.736-.667-24.136 8.549 1.235 17.053 3.698 24.476 7.326 22.62-12.972 48.828-20.391 76.752-20.391 28.085 0 54.429 7.502 77.141 20.611 6.062-3.459 11.978-5.869 18.697-8.243 1.498 7.609 2.223 15.52 2.415 22.89 34.428 28.373 56.387 71.333 56.387 119.38 0 85.35-69.289 154.639-154.639 154.639-85.345 0-154.671-69.315-154.636-154.64 2.963 2.069 97.664 67.14 217.325 23.589zm-140.244 78.447 19.83 32.44c-43.389-13.16-87.057-70.258-90.97-123.996 34.871 22.304 76.445 34.168 115.583 35.265l-31.476 10.087c10.696 6.629 23.124 14.63 34.38 21.323-16.243-.561-32.487-1.111-48.731-1.665l42.112 28.539zm93.857-92.667s15.107-25.406 44.368-17.03c0 0-15.198 23.433-44.368 17.03zm-37.198 0s-15.107-25.406-44.368-17.03c0 0 15.198 23.433 44.368 17.03zm77.67-117.611c5.739 11.972 19.202 17.296 30.25 18.521 4.709-13.633 4.509-28.516 2.952-42.432-13.018 5.596-24.901 14.018-33.202 23.911zm-144.2 17.901c13.831-2.71 24.781-10.781 28.423-21.375-9.149-10.68-21.968-17.751-34.992-20.935.257 14.974 1.966 30.297 6.569 42.31z\" fill=\"url(#a)\" fill-rule=\"evenodd\"/>\n  <path d=\"m1060.097 109.813c31.796-7.195 74.655-8.379 95.289 16.918 5.964 7.572 7.758 15.97 2.941 24.704-5.522 9.565-17.812 7.974-16.099-2.61 2.32-8.657 4.85-15.239-2.216-20.945-8.253-6.448-17.906-9.304-27.969-10.793-29.276-4.336-57.204 1.474-84.446 11.842-32.378 11.018-58.927 25.09-89.058 31.839-2.991.671-4.44 1.946-4.943 5.126-11.01 68.311-25.478 144.78-15.305 214.821 5.815 31.623 37.71-9.908 45.554-23.656 9.656-16.884 20.574-38 31.271-57.693 10.045-19.049 19.479-37.062 30.291-47.036 9.276-9.32 20.265-14.462 33.571-13.693 13.088 1.134.32 8.528-5.252 9.238-12.992 1.658-23.007 9.339-29.56 19.853-8.498 13.637-17.221 30.711-24.2 45.367-13.419 28.181-27.154 56.115-47.576 80.006-9.823 10.784-33.482 39.374-50.715 12.024-20.897-35.44-10.958-101.751-10.601-125.781-7.868 11.296-16.005 24.209-23.01 34.402-1.593 2.346-1.785 4.077-.743 6.785 10.302 26.732 13.268 54.002 4.213 81.656-7.295 22.273-20.466 39.713-42.894 48.945-19.414 7.994-39.14 1.792-47.809-15.34-9.913-21.3 3.726-43.255 16.738-56.738 13.007-13.841 25.982-27.714 39.093-41.455 2.311-2.421 2.431-4.295 1.108-7.406-7.138-16.782-17.884-31.187-29.225-45.737-11 20.456-26.685 40.349-40.181 59.208-19.551 27.321-31.791 45.184-62.428 45.244-35.838-1.639-45.807-25.218-50.268-56.93-21.524 42.688-62.283 61.682-96.461 40.494-11.627-7.38-8.832-15.698 1.907-9.773 17.289 9.685 30.22 4.244 39.569-10.825 12.495-21.414 16.168-39.211 16.683-53.042 5.462-38.171-26.015-46.105-48.639-16.751-13.341 19.814-24.644 40.838-32.9 63.347-1.174 3.205-1.889 6.722-2.059 10.135-3.681 51.387-1.821 100.617.513 146.153 0 12.542-19.339 15.143-20.834 1.064-9.634-85.73-4.282-182.021 7.601-258.271 1.123-6.57 5.715-15.297 8.545-17.162 10.033-6.614 16.617-3.055 15.992 5.969-.869 29.604-5.133 59.209-8.662 88.813 9.867-20.328 19.579-42.071 32.355-56.505 16.734-22.553 53.341-29.341 66.461 3.863 10.085 24.314 6.662 47.62-4.95 70.346-5.016 9.817-11.543 18.495-19.846 26.156 29.876-19.026 45.926-54.709 56.355-85.41 8.974-20.435 22.522-37.034 44.1-45.312 32.982-14.131 59.073 20.345 34.678 44.445-11.738 11.533-35.518 21.358-54.279 24.194-4.768.736-6.685 2.469-7.251 7.097-6.373 31.209 8.88 81.951 44.369 61.461 25.887-15.01 49.062-60.501 71.643-91.697 1.927-2.846 1.574-4.748-.466-7.402-9.361-12.182-18.234-24.72-22.613-39.729-10.983-35.615 9.575-71.278 45.151-67.755 8.999.954 16.918 3.441 21.055 12.091 8.745 20.1-4.298 54.041-13.823 73.542-.74 1.458-.866 4.043-.057 5.349 10.896 16.807 20.484 34.455 32.529 50.63 10.104-16.751 20.318-33.435 30.085-50.003 3.623-19.368 8.134-60.535 12.201-90.803-39.191 4.371-62.895-9.701-56.722-34.496 1.392-4.216 4.128-8.158 6.927-11.691 3.893-5.529 20.229-3.436 15.242 5.712-2.519 5.173-4.537 10.523-2.768 16.401 6.428 19.021 21.152 13.173 36.483 11.666 2.824-.264 3.523-1.596 3.967-4.156 3.989-23.045 8.101-46.067 12.258-69.081 2.442-21.525 37.142-26.028 32.67-2.024-5.103 24.704-11.547 48.683-15.54 69.692 42.19-9.97 84.485-30.897 122.96-38.897zm-261.461 281.275c-22.973 23.475-7.183 61.098 20.352 48.961 34.569-16.822 30.483-64.306 23.788-94.314-15.117 15.447-30.006 30.05-44.14 45.353zm-109.386-98.36c16.481-2.292 37.652-11.059 46.817-20.771 18.132-18.171-4.301-34.854-18.738-22.755-13.733 11.078-22.661 29.622-28.079 43.526zm132.456-48.602c9.877-19.747 14.376-37.796 11.719-58.067-.635-9.478-21.027-11.753-25.371 7.906-4.534 19.018 3.652 34.663 13.652 50.161z\"/>\n</svg>\n"
        },
        {
          "name": "pest",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 1.7236328125,
          "content": "#!/bin/bash\n\nset -e\n\nCRATES=\"pest pest_meta pest_vm pest_generator pest_derive pest_grammars pest_debugger\"\n\nget_local_version() {\n  cargo metadata --format-version 1 | jq -r '.packages[]|select(.name == \"'\"${1}\"'\" and ((.manifest_path|contains(\"registry\"))|not))|.version'\n}\n\ncheck_version_online() {\n  curl -s \"https://crates.io/api/v1/crates/${1}\" | jq -r '.versions[]|select(.num == \"'\"${2}\"'\").updated_at'\n}\n\nget_manifest_path() {\n  cargo metadata --format-version 1 | jq -r '.packages[]|select(.name == \"'\"${1}\"'\" and ((.manifest_path|contains(\"registry\"))|not))|.manifest_path'\n}\n\npublish() {\n  echo \"Publishing crate $1...\"\n  if [ \"${1}\" = \"pest\" ] || [ \"${1}\" = \"pest_grammars\" ] || [ \"${1}\" = \"pest_debugger\" ]; then\n    cargo publish --manifest-path \"$(get_manifest_path \"${1}\")\" --allow-dirty --all-features\n  else\n    # cannot publish with the `not-bootstrap-in-src` feature enabled\n    cargo publish --manifest-path \"$(get_manifest_path \"${1}\")\" --allow-dirty --features grammar-extras\n  fi\n  echo \"\"\n}\n\nwait_until_available() {\n  echo \"Waiting for crate ${1} to become available via crates.io...\"\n  for retry in {1..5}; do\n    sleep 5\n    ONLINE_DATE=\"$(check_version_online \"${1}\" \"${2}\")\"\n    if [ -n \"${ONLINE_DATE}\" ]; then\n      echo \"Crate ${crate} is now available online\"\n      break\n    else\n      if [ \"${retry}\" == 5 ]; then\n        echo \"ERROR: Crate should have become available by now\"\n        exit 1\n      else\n        echo \"Not available just yet. Waiting a few seconds...\"\n      fi\n    fi\n  done\n  echo \"Waiting an additional 20 seconds for crate to propagate through CDN...\"\n  sleep 20\n}\n\nfor crate in ${CRATES}; do\n  VERSION=\"$(get_local_version \"${crate}\")\"\n  publish \"${crate}\"\n  wait_until_available \"${crate}\" \"${VERSION}\"\ndone"
        },
        {
          "name": "results.svg",
          "type": "blob",
          "size": 5.23046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 800 400\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n    <rect x=\"0\" y=\"0\" width=\"800\" height=\"400\" style=\"fill:white;\"/>\n    <g>\n        <g transform=\"matrix(1,0,0,1,200,54.05)\">\n            <text x=\"0px\" y=\"0px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:13px;\">Parsing speed</text>\n        </g>\n        <rect x=\"200\" y=\"43\" width=\"400\" height=\"13\" style=\"fill:white;fill-opacity:0;\"/>\n    </g>\n    <g>\n        <rect x=\"613\" y=\"77\" width=\"174\" height=\"13\" style=\"fill:white;fill-opacity:0;\"/>\n        <g>\n            <rect x=\"613\" y=\"77\" width=\"174\" height=\"13\" style=\"fill:white;fill-opacity:0;\"/>\n            <g transform=\"matrix(1,0,0,1,644,88.05)\">\n                <text x=\"0px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(34,34,34);\">milliseconds</text>\n            </g>\n            <rect x=\"613\" y=\"77\" width=\"26\" height=\"13\" style=\"fill:rgb(51,102,204);\"/>\n        </g>\n    </g>\n    <g>\n        <rect x=\"200\" y=\"77\" width=\"400\" height=\"247\" style=\"fill:white;fill-opacity:0;\"/>\n        <g>\n            <g>\n                <rect x=\"200\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(204,204,204);\"/>\n                <rect x=\"300\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(204,204,204);\"/>\n                <rect x=\"400\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(204,204,204);\"/>\n                <rect x=\"499\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(204,204,204);\"/>\n                <rect x=\"599\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(204,204,204);\"/>\n            </g>\n            <g>\n                <rect x=\"201\" y=\"89\" width=\"43\" height=\"38\" style=\"fill:rgb(51,102,204);\"/>\n                <rect x=\"201\" y=\"151\" width=\"127\" height=\"38\" style=\"fill:rgb(51,102,204);\"/>\n                <rect x=\"201\" y=\"212\" width=\"326\" height=\"38\" style=\"fill:rgb(51,102,204);\"/>\n                <rect x=\"201\" y=\"274\" width=\"370\" height=\"38\" style=\"fill:rgb(51,102,204);\"/>\n            </g>\n            <rect x=\"200\" y=\"77\" width=\"1\" height=\"247\" style=\"fill:rgb(51,51,51);\"/>\n        </g>\n        <g>\n            <g transform=\"matrix(1,0,0,1,200.5,343.05)\">\n                <text x=\"-3.615px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(68,68,68);\">0</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,300.25,343.05)\">\n                <text x=\"-7.23px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(68,68,68);\">25</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,400,343.05)\">\n                <text x=\"-7.23px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(68,68,68);\">50</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,499.75,343.05)\">\n                <text x=\"-7.23px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(68,68,68);\">75</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,599.5,343.05)\">\n                <text x=\"-10.845px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(68,68,68);\">100</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,187,112.8)\">\n                <text x=\"-44.808px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(34,34,34);\">ujson4c</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,187,174.3)\">\n                <text x=\"-24.572px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(34,34,34);\">pest</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,187,235.8)\">\n                <text x=\"-25.289px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(34,34,34);\">nom</text>\n            </g>\n            <g transform=\"matrix(1,0,0,1,187,297.3)\">\n                <text x=\"-106.92px\" y=\"0px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:13px;fill:rgb(34,34,34);\">pest (custom <tspan x=\"-29.612px -20.941px \" y=\"0px 0px \">AS</tspan>T)</text>\n            </g>\n        </g>\n    </g>\n    <g>\n        <g>\n            <g transform=\"matrix(1,0,0,1,400,377.05)\">\n                <text x=\"-76.54px\" y=\"0px\" style=\"font-family:'Arial-ItalicMT', 'Arial', sans-serif;font-style:italic;font-size:13px;fill:rgb(34,34,34);\">T<tspan x=\"-68.713px -65.825px \" y=\"0px 0px \">im</tspan>e to parse canada.json</text>\n            </g>\n            <rect x=\"200\" y=\"366\" width=\"400\" height=\"13\" style=\"fill:white;fill-opacity:0;\"/>\n        </g>\n        <g>\n            <g transform=\"matrix(-3.82857e-16,-1,1,-3.82857e-16,44.05,200.5)\">\n                <text x=\"-37.565px\" y=\"0px\" style=\"font-family:'Arial-ItalicMT', 'Arial', sans-serif;font-style:italic;font-size:13px;fill:rgb(34,34,34);\">JSON parser</text>\n            </g>\n            <rect x=\"33\" y=\"77\" width=\"13\" height=\"247\" style=\"fill:white;fill-opacity:0;fill-rule:nonzero;\"/>\n        </g>\n    </g>\n</svg>\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "newline_style = \"Unix\"\n"
        },
        {
          "name": "semvercheck.sh",
          "type": "blob",
          "size": 1.1494140625,
          "content": "#!/usr/bin/env bash\nexport CURRENT_GIT_SHA=`git rev-parse HEAD`\ncargo clean\ncargo install cargo-semver-checks || true\nexport RUSTDOC_LATE_FLAGS=\"--document-private-items -Zunstable-options --output-format json\"\ncargo build --package pest_bootstrap\ncargo run --package pest_bootstrap\n\n# current\nfor crate in \"pest_derive\" \"pest_generator\" \"pest_grammars\" \"pest_meta\" \"pest\" \"pest_vm\" \"pest_debugger\"; do\n    cargo +nightly-2023-12-31 rustdoc -p $crate -- $RUSTDOC_LATE_FLAGS\n    mv target/doc/$crate.json /tmp/current-$crate.json\ndone\n\n# the 2.5.0 release\nexport BASELINE_GIT_SHA=\"8c602d832e625a0965701618626166e2ffbd94bb\"\n# baseline\ngit fetch origin\ngit checkout \"$BASELINE_GIT_SHA\"\ncargo clean\ncargo build --package pest_bootstrap\ncargo run --package pest_bootstrap\nfor crate in \"pest_derive\" \"pest_generator\" \"pest_grammars\" \"pest_meta\" \"pest\" \"pest_vm\" \"pest_debugger\"; do\n    cargo +nightly-2023-12-31 rustdoc -p $crate -- $RUSTDOC_LATE_FLAGS\n    mv target/doc/$crate.json /tmp/baseline-$crate.json\n    echo \"Checking $crate\"\n    cargo semver-checks check-release --current /tmp/current-$crate.json --baseline /tmp/baseline-$crate.json\ndone\ngit checkout \"$CURRENT_GIT_SHA\"\n"
        },
        {
          "name": "update_unicode.sh",
          "type": "blob",
          "size": 0.44921875,
          "content": "#!/usr/bin/env bash\n\ncargo install ucd-generate || true\n\nrm -r ./target/ucd/\nmkdir ./target/ucd/\ncd ./target/ucd/\ncurl -LO https://www.unicode.org/Public/zipped/latest/UCD.zip\nunzip UCD.zip\ncd ../../\n\nucd-generate property-bool    --trie-set ./target/ucd/ > ./pest/src/unicode/binary.rs\nucd-generate general-category --trie-set ./target/ucd/ > ./pest/src/unicode/category.rs\nucd-generate script           --trie-set ./target/ucd/ > ./pest/src/unicode/script.rs"
        },
        {
          "name": "vm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}