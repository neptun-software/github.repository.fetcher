{
  "metadata": {
    "timestamp": 1736709056928,
    "page": 171,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "godot-rust/gdext",
      "stars": 3297,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4912109375,
          "content": "# IDEs\r\n.vscode\r\n.idea\r\n.run\r\n\r\n# Rust\r\ntarget\r\nCargo.lock\r\n\r\n# Godot\r\n# .godot needs to be a pattern like this and not a directory, otherwise the negative statements below don't apply\r\n**/.godot/**\r\n*.import\r\n\r\n# Needed to run projects without having to open the editor first.\r\n!**/.godot/extension_list.cfg\r\n\r\n# This project: input JSONs and code generation\r\ngen\r\n\r\n# Temporary tweaks, remove later\r\n/script\r\n*.bat\r\nconfig.toml\r\nexp.rs\r\n\r\n# Mac specific\r\n.DS_Store\r\n\r\n# Windows specific\r\ndesktop.ini\r\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.716796875,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"godot-bindings\",\n    \"godot-codegen\",\n    \"godot-ffi\",\n    \"godot-core\",\n    \"godot-macros\",\n    \"godot-cell\",\n    \"godot\",\n\n    # Godot integration\n    \"itest/rust\",\n    \"itest/repo-tweak\",\n    \"examples/dodge-the-creeps/rust\",\n    \"examples/hot-reload/rust\",\n]\n\n# Note about Jetbrains IDEs: \"IDE Sync\" (Refresh Cargo projects) may cause static analysis errors such as\n# \"at most one `api-*` feature can be enabled\". This is because by default, all Cargo features are enabled,\n# which isn't a setup we support. To address this, individual features can be enabled in the various\n# Cargo.toml files: https://www.jetbrains.com/help/rust/rust-cfg-support.html#enable-disable-feature-manually.\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 16.1572265625,
          "content": "# Changelog\n\nThis document tracks changes of released library versions.\n\nSee also [Pulse](https://github.com/godot-rust/gdext/pulse/monthly) for recent activities.  \nCutting-edge API docs of the `master` branch are available [here](https://godot-rust.github.io/docs/gdext).\n\n🌊 indicates a breaking change. Deprecations are not marked breaking.\n\n\n## Quick navigation\n\n- [v0.2.0](#v020), [v0.2.1](#v021), [v0.2.2](#v022)\n- [v0.1.1](#v011), [v0.1.2](#v012), [v0.1.3](#v013)\n\n\n## [v0.2.2](https://docs.rs/godot/0.2.2)\n\n_31 December 2024_\n\n### 🌻 Features\n\n- Feature parity with Godot builtin types\n  - `Vector2i` ([#978](https://github.com/godot-rust/gdext/pull/978))\n  - `Projection` ([#983](https://github.com/godot-rust/gdext/pull/983))\n  - `Callable` ([#979](https://github.com/godot-rust/gdext/pull/979))\n  - `Quaternion` ([#981](https://github.com/godot-rust/gdext/pull/981))\n  - `GString` + `StringName` ([#980](https://github.com/godot-rust/gdext/pull/980))\n  - `NodePath` ([#982](https://github.com/godot-rust/gdext/pull/982))\n  - `PackedByteArray` ([#994](https://github.com/godot-rust/gdext/pull/994))\n- Support static functions in `Callable` ([#989](https://github.com/godot-rust/gdext/pull/989))\n- Codegen can directly expose `Inner*` builtin methods ([#976](https://github.com/godot-rust/gdext/pull/976))\n- Generate builtin methods with varargs ([#977](https://github.com/godot-rust/gdext/pull/977))\n\n### 🧹 Quality of life\n\n- More accurately provide spans to errors in the `GodotClass` macro ([#920](https://github.com/godot-rust/gdext/pull/920))\n- Improve some proc-macro attribute error messages ([#971](https://github.com/godot-rust/gdext/pull/971))\n- Add required virtual method `IScriptInstance::get_doc_class_name()` in test ([#975](https://github.com/godot-rust/gdext/pull/975))\n- Clean up `Callable` + tests, fix `check.sh test` ([#990](https://github.com/godot-rust/gdext/pull/990))\n\n### 📚 Documentation\n\n- Improve docs in `DynGd` (re-enrichment) + Cargo features ([#969](https://github.com/godot-rust/gdext/pull/969))\n\n\n## [v0.2.1](https://docs.rs/godot/0.2.1)\n\n_8 December 2024_\n\n### 🌻 Features\n\n- `#[godot_api(secondary)]` for multiple impl blocks ([#927](https://github.com/godot-rust/gdext/pull/927))\n- `DynGd<T, D>` smart pointer for Rust-side dynamic dispatch ([#953](https://github.com/godot-rust/gdext/pull/953), [#958](https://github.com/godot-rust/gdext/pull/958))\n- `Callable::from_local_fn()` + `Callable::from_sync_fn()` ([#965](https://github.com/godot-rust/gdext/pull/965))\n- Add `Variant::object_id()` ([#914](https://github.com/godot-rust/gdext/pull/914))\n\n### 🧹 Quality of life\n\n- `#[gdextension]` macro: rename `entry_point` -> `entry_symbol` and write docs ([#959](https://github.com/godot-rust/gdext/pull/959))\n- Use `GDExtensionCallableCustomInfo2` instead of deprecated `GDExtensionCallableCustomInfo` ([#952](https://github.com/godot-rust/gdext/pull/952))\n- `sys::short_type_name`, conversions and relaxed `GodotType` ([#957](https://github.com/godot-rust/gdext/pull/957))\n- Clippy (elided lifetimes) + rustfmt ([#956](https://github.com/godot-rust/gdext/pull/956))\n- Add test verifying that custom callables don't crash when `Err` is returned ([#950](https://github.com/godot-rust/gdext/pull/950))\n- Minor signal cleanup; prevent `#[signal]` from being used in secondary impl blocks ([#964](https://github.com/godot-rust/gdext/pull/964))\n\n### 🛠️ Bugfixes\n\n- Fix `#[godot_dyn]` causing error when implemented for two traits ([#962](https://github.com/godot-rust/gdext/pull/962))\n- Prevent abort on double-panic if single-threading check fails ([#965](https://github.com/godot-rust/gdext/pull/965))\n\n### 📚 Documentation\n\n- `#[gdextension]` macro: rename `entry_point` -> `entry_symbol` and write docs ([#959](https://github.com/godot-rust/gdext/pull/959))\n- Helpful doc aliases: `func`, `var`, `init`, .. ([#960](https://github.com/godot-rust/gdext/pull/960))\n\n\n## [v0.2.0](https://docs.rs/godot/0.2.0)\n\n_15 November 2024_\n\nSee [devlog article](https://godot-rust.github.io/dev/november-2024-update) for highlights.\n\n### 🌻 Features\n\n- Godot 4.3 support in CI and `api-4-3` feature ([#859](https://github.com/godot-rust/gdext/pull/859))\n- 🌊 Drop support for Godot 4.0 ([#820](https://github.com/godot-rust/gdext/pull/820))\n- 🌊 Ergonomic arguments\n  - `AsObjectArg` trait enabling implicit conversions for object parameters ([#800](https://github.com/godot-rust/gdext/pull/800))\n  - Pass-by-ref for non-`Copy` builtins ([#900](https://github.com/godot-rust/gdext/pull/900), [#906](https://github.com/godot-rust/gdext/pull/906))\n  - String argument conversion + `AsArg` trait ([#940](https://github.com/godot-rust/gdext/pull/940))\n  - `Callable` is now passed by-ref ([#944](https://github.com/godot-rust/gdext/pull/944))\n  - Require `AsObjectArg` pass-by-ref, consistent with `AsArg` ([#847](https://github.com/godot-rust/gdext/pull/847), [#947](https://github.com/godot-rust/gdext/pull/947))\n- Godot docs from RustDoc comments\n  - Generate documentation from doc comments ([#748](https://github.com/godot-rust/gdext/pull/748))\n  - Generate valid XML from doc comments ([#861](https://github.com/godot-rust/gdext/pull/861))\n  - Include `register-docs` feature in CI ([#819](https://github.com/godot-rust/gdext/pull/819))\n- RPC attributes\n  - Add `#[rpc]` attribute to user-defined functions ([#902](https://github.com/godot-rust/gdext/pull/902))\n- Registration APIs\n  - 🌊 Add `OnReady::node()` + `#[init(node = \"...\")]` attribute ([#807](https://github.com/godot-rust/gdext/pull/807))\n  - Support Unicode class names (Godot 4.4+) ([#891](https://github.com/godot-rust/gdext/pull/891))\n  - Unicode support in `ClassName::new_cached()`; adjust test ([#899](https://github.com/godot-rust/gdext/pull/899))\n  - Derive `Ord` and `PartialOrd` for `ClassName` ([#928](https://github.com/godot-rust/gdext/pull/928))\n  - Implement `Debug` for `InitState` and `OnReady` ([#879](https://github.com/godot-rust/gdext/pull/879))\n- Enums\n  - `#[derive(GodotClass)]` enums can now have complex ordinal expressions ([#843](https://github.com/godot-rust/gdext/pull/843))\n  - Enums can now be bit-combined with known masks ([#857](https://github.com/godot-rust/gdext/pull/857))\n  - Add `as_str` and `godot_name` to non-bitfield enums ([#898](https://github.com/godot-rust/gdext/pull/898))\n- Required virtual functions\n  - Detect whether virtual functions are required to override ([#904](https://github.com/godot-rust/gdext/pull/904))\n  - 🌊 Required virtual methods should be required at compile-time ([#771](https://github.com/godot-rust/gdext/pull/771))\n- Conversions + operators\n  - Implement `GodotConvert` for `Vec<T>`, `[T; N]` and `&[T]` ([#795](https://github.com/godot-rust/gdext/pull/795))\n  - Implement `From<&[char]>` for `GString` ([#862](https://github.com/godot-rust/gdext/pull/862))\n  - Add `From<[Elem; N]>` for Packed Array and Optimize `From<Vec<Elem>>` ([#827](https://github.com/godot-rust/gdext/pull/827))\n  - Handle typed array metadata ([#855](https://github.com/godot-rust/gdext/pull/855))\n  - Vector conversion functions ([#824](https://github.com/godot-rust/gdext/pull/824))\n  - Add Mul operator for Quaternion + Vector3 ([#894](https://github.com/godot-rust/gdext/pull/894))\n\n### 🧹 Quality of life\n\n- Renames and removals\n  - 🌊 Remove deprecated symbols from before v0.1 ([#808](https://github.com/godot-rust/gdext/pull/808))\n  - Deprecate instance utilities in `godot::global` ([#901](https://github.com/godot-rust/gdext/pull/901))\n  - Shorten `#[init(default = ...)]` to `#[init(val = ...)]` ([#844](https://github.com/godot-rust/gdext/pull/844))\n  - `#[class]` attribute: rename `hidden` -> `internal`, deprecate `editor_plugin` ([#884](https://github.com/godot-rust/gdext/pull/884))\n  - Cleanup around `godot::meta` argument conversions ([#948](https://github.com/godot-rust/gdext/pull/948))\n  - Remove `to_2d()` + `to_3d()`; clean up `ApiParam` ([#943](https://github.com/godot-rust/gdext/pull/943))\n  - 🌊 Simplify property hint APIs ([#838](https://github.com/godot-rust/gdext/pull/838))\n- Validation\n  - Fix validation for `api-*` mutual exclusivity ([#809](https://github.com/godot-rust/gdext/pull/809))\n  - Validate that virtual extension classes require `#[class(tool)]` ([#850](https://github.com/godot-rust/gdext/pull/850))\n  - Validate that editor plugin classes require `#[class(tool)]` ([#852](https://github.com/godot-rust/gdext/pull/852))\n  - Best-effort checks for `Array<Integer>` conversions; fix `Debug` for variants containing typed arrays ([#853](https://github.com/godot-rust/gdext/pull/853))\n  - 🌊 Disallow `Export` if class doesn't inherit `Node` or `Resource` ([#839](https://github.com/godot-rust/gdext/pull/839))\n  - 🌊 Validate that Nodes can only be exported from Node-derived classes ([#841](https://github.com/godot-rust/gdext/pull/841))\n- CI and tooling\n  - Cargo-deny maintenance: update to advisories/licenses v2 ([#829](https://github.com/godot-rust/gdext/pull/829))\n  - CI runner updates ([#941](https://github.com/godot-rust/gdext/pull/941))\n  - Skip `notify-docs` job when running in a fork ([#945](https://github.com/godot-rust/gdext/pull/945))\n  - Allow manually triggering `full-ci` workflow (mostly useful for forks) ([#933](https://github.com/godot-rust/gdext/pull/933))\n- Code generation and Godot APIs\n  - Allow codegen for `UniformSetCacheRD` for Godot >=4.3 ([#816](https://github.com/godot-rust/gdext/pull/816))\n  - Enable `ResourceLoader::load_threaded_*` with `experimental-threads` ([#856](https://github.com/godot-rust/gdext/pull/856))\n  - Dependency update, more tests for vector angle functions ([#860](https://github.com/godot-rust/gdext/pull/860))\n- Upstream follow-up\n  - 🌊 Support `GDExtensionScriptInstanceInfo3` in 4.3 ([#849](https://github.com/godot-rust/gdext/pull/849))\n  - Support meta `char16` and `char32` ([#895](https://github.com/godot-rust/gdext/pull/895))\n  - Add `GodotConvert` impl for `*const u8` pointers ([#866](https://github.com/godot-rust/gdext/pull/866))\n  - Update list of experimental classes ([#897](https://github.com/godot-rust/gdext/pull/897))\n  - Update hint_string tests to account for Godot 4.4 floats with `.0` formatting ([#936](https://github.com/godot-rust/gdext/pull/936))\n- Panics\n  - Disable panic hooks in Release mode ([#889](https://github.com/godot-rust/gdext/pull/889))\n  - In debug, include location information in error message on panic ([#926](https://github.com/godot-rust/gdext/pull/926))\n- Refactoring\n  - Rewrite `#[var]` + `#[export]` registration to use type-safe API behind scenes ([#840](https://github.com/godot-rust/gdext/pull/840))\n  - Get rid of placeholder names like \"foo\" ([#888](https://github.com/godot-rust/gdext/pull/888))\n\n### 🛠️ Bugfixes\n\n- Argument passing\n  - Set null into Godot Engint APIs nullable parameters as default ([#823](https://github.com/godot-rust/gdext/pull/823))\n  - Fix `Ex*` builder parameters: `ObjectArg<T>` -> `impl AsObjectArg<T>` ([#830](https://github.com/godot-rust/gdext/pull/830))\n- Godot doc generation from RustDoc\n  - Fix doc comments not showing up if only some class members are documented ([#815](https://github.com/godot-rust/gdext/pull/815))\n  - Fix `register-docs` feature not being tested ([#942](https://github.com/godot-rust/gdext/pull/942))\n- Registration\n  - Fix `Array<T>` registered without element type ([#836](https://github.com/godot-rust/gdext/pull/836))\n  - Virtual methods now take `Option<Gd<T>>` (unless whitelisted) ([#883](https://github.com/godot-rust/gdext/pull/883))\n  - Make arrays exportable only when their inner type is exportable ([#875](https://github.com/godot-rust/gdext/pull/875))\n  - Display script-virtual methods as `_method` instead of `method` in Godot docs ([#918](https://github.com/godot-rust/gdext/pull/918))\n  - Implement the `safe_ident` strategy for virtual call parameter identifier generation ([#822](https://github.com/godot-rust/gdext/pull/822))\n- FFI and memory safety\n  - Fix user-after-free in `AsObjectArg` pass-by-value (in default-param methods) ([#846](https://github.com/godot-rust/gdext/pull/846))\n  - `RawGd::move_return_ptr` with `PtrcallType::Virtual` leaks reference ([#848](https://github.com/godot-rust/gdext/pull/848))\n  - Don't abort on panic inside Callable ([#873](https://github.com/godot-rust/gdext/pull/873))\n- Tooling and dependencies\n  - Dev-dependencies are enabling full codegen ([#842](https://github.com/godot-rust/gdext/pull/842))\n  - OpenXR is not available on Web ([#872](https://github.com/godot-rust/gdext/pull/872))\n  - Fix `enum_test.rs` accidentally excluded from itest ([#931](https://github.com/godot-rust/gdext/pull/931))\n  - Codegen-rustfmt: use 2021 edition ([#937](https://github.com/godot-rust/gdext/pull/937))\n- Math\n  - `Vecor3::sign()` gives incorrect results due to `i32` conversion ([#865](https://github.com/godot-rust/gdext/pull/865))\n\n### 📈 Performance\n\n- `RawGd`: cache pointer to internal storage ([#831](https://github.com/godot-rust/gdext/pull/831))\n- `ClassName` now dynamic and faster ([#834](https://github.com/godot-rust/gdext/pull/834))\n- Pass-by-ref for non-`Copy` builtins (backend) ([#906](https://github.com/godot-rust/gdext/pull/906))\n\n### 📚 Documentation\n\n- Builtin docs (impl blocks, navigation table, link to Godot) ([#821](https://github.com/godot-rust/gdext/pull/821))\n- Add docs for `#[rpc]` ([#949](https://github.com/godot-rust/gdext/pull/949))\n- Overview about type conversions ([#833](https://github.com/godot-rust/gdext/pull/833))\n- Document `godot::meta` argument conversions ([#948](https://github.com/godot-rust/gdext/pull/948))\n- Add a doc to point users to kwarg builders ([#876](https://github.com/godot-rust/gdext/pull/876))\n- Resolve doc warning with global enums ([#896](https://github.com/godot-rust/gdext/pull/896))\n- ReadMe update + clippy error ([#929](https://github.com/godot-rust/gdext/pull/929))\n\n\n## [v0.1.3](https://docs.rs/godot/0.1.3)\n\n_22 July 2024_\n\n### 🧹 Quality of life\n\n- Add helpful error for renamed Wasm module ([#799](https://github.com/godot-rust/gdext/pull/799))\n- More thoroughly document `unsafe` in `godot-ffi` ([#774](https://github.com/godot-rust/gdext/pull/774))\n\n### 🛠️ Bugfixes\n\n- Map `Vector3i.Axis` enum to builtin `Vector3Axis` ([#797](https://github.com/godot-rust/gdext/pull/797))\n- Prevent `out!` from actually formatting the input if disabled ([#801](https://github.com/godot-rust/gdext/pull/801))\n- Disable `main_thread_id` assertion for Android debug build ([#780](https://github.com/godot-rust/gdext/pull/780))\n- `GdCell::borrow_mut` should block on main thread if shared ref exists ([#787](https://github.com/godot-rust/gdext/pull/787))\n\n### 📚 Documentation\n\n- Typos + code reordering ([#802](https://github.com/godot-rust/gdext/pull/802))\n- Add crates.io ReadMe + docs logo ([#804](https://github.com/godot-rust/gdext/pull/804))\n\n\n## [v0.1.2](https://docs.rs/godot/0.1.2)\n\n_15 July 2024_\n\n### 🌻 Features\n\n- Add more `normalized` functions ([#761](https://github.com/godot-rust/gdext/pull/761))\n- Add conversion from `Vec<$Element>` to `$PackedArray` types ([#785](https://github.com/godot-rust/gdext/pull/785))\n- Add `snapped` to integer vectors ([#768](https://github.com/godot-rust/gdext/pull/768))\n- Add determinant to `Transform2D` ([#770](https://github.com/godot-rust/gdext/pull/770))\n- Support `#[export(range = (radians_as_degrees, suffix=XX))]` ([#783](https://github.com/godot-rust/gdext/pull/783))\n- Add support for `nothreads` Wasm builds (Godot 4.3+) ([#794](https://github.com/godot-rust/gdext/pull/794))\n\n### 🧹 Quality of life\n\n- Reorder compile errors for `#[derive(GodotClass)]` ([#773](https://github.com/godot-rust/gdext/pull/773))\n- Change `Global` to use `Once` ([#752](https://github.com/godot-rust/gdext/pull/752))\n- Prevent global `CallError` tracker from growing indefinitely ([#798](https://github.com/godot-rust/gdext/pull/798))\n\n### 🛠️ Bugfixes\n\n- Change logic to disable `OpenXR` for iOS ([#781](https://github.com/godot-rust/gdext/pull/781))\n- Pointer is already `*const u32` on aarch64 ([#788](https://github.com/godot-rust/gdext/pull/788))\n- Handle panics in virtual interface methods ([#757](https://github.com/godot-rust/gdext/pull/757))\n\n### 📚 Documentation\n\n- Document why `Basis` columns are `a`, `b`, and `c` ([#776](https://github.com/godot-rust/gdext/pull/776))\n\n\n## [v0.1.1](https://docs.rs/godot/0.1.1)\n\n_24 June 2024_\n\nInitial release on crates.io. See [devlog article](https://godot-rust.github.io/dev/june-2024-update).\n"
        },
        {
          "name": "Contributing.md",
          "type": "blob",
          "size": 2.150390625,
          "content": "# Contributing to gdext\n\nWe appreciate if users experiment with the library, use it in small projects and report issues they encounter.\nIf you intend to contribute code, please read the section _Pull request guidelines_ below, so you spend less time on administrative tasks.\n\nThe rest of the document goes into tools and infrastructure available for development.\n\n\n## Pull request guidelines\n\n### Larger changes need design\n\nIf you plan to make bigger contributions, make sure to discuss them in a [GitHub issue] before opening a pull request (PR).\nSince the library is evolving quickly, this avoids that multiple people work on the same thing, or that features don't integrate well,\ncausing a lot of rework. Also don't hesitate to talk to the developers in the `#contrib-gdext` channel on [Discord]!\n\n\n### One commit per logical change\n\nThis makes it easier to review changes, later reconstruct what happened when and -- in case of regressions -- revert individual commits.\nThe exception are tiny changes of a few lines that don't bear semantic significance (typos, style, etc.).\nLarger code style changes should be split though.\n\nIf your pull request changes a single thing, please squash the commits into one. Avoid commits like \"integrate review feedback\" or \"fix rustfmt\".\nInstead, use `git commit --amend` or `git rebase -i` and force-push follow-up commits to your branch (`git push --force-with-lease`).\nSince we use GitHub merge queues, we can unfortunately not decide to squash commits upon merge per PR.\n\n\n### Draft PRs\n\nIn case you plan to work for a longer time on a feature/bugfix, consider opening a PR as a draft.\nThis signals that reviews are appreciated, but that the code is not yet ready for merge.\nNon-draft PRs that pass CI are assumed to be mergeable (and maintainers may do so).  \n<br/>\n\n\n## Development tools\n\nFurther information for contributors, such as tools supporting you in local development, is available in the [godot-rust book].\nThe book also elaborates design principles and conventions behind our API.\n\n[GitHub issue]: https://github.com/godot-rust/gdext/issues\n[Discord]: https://discord.gg/aKUCJ8rJsc\n[godot-rust book]: https://godot-rust.github.io/book/contribute"
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 16.3349609375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "ReadMe.md",
          "type": "blob",
          "size": 4.369140625,
          "content": "![logo.png](misc/assets/gdext-ferris.png)\n\n# Rust bindings for Godot 4\n\n_**[Website]** | **[Book][book]** | **[API Docs]** | [Discord] | [Mastodon] | [Twitter] | [Sponsor]_\n\n**gdext** is a library to integrate the Rust language with Godot 4.\n\n[Godot] is an open-source game engine, focusing on a productive and batteries-included 2D and 3D experience.  \nIts _GDExtension_ API allows integrating third-party languages and libraries.\n\nRust bindings for Godot 3 (GDNative API) are available in [`gdnative`].\n\n\n## Philosophy\n\nThe Rust binding is an alternative to GDScript, with a focus on type safety, scalability and performance.\n\nThe primary goal of gdext is to provide a [**pragmatic Rust API**][philosophy] for game developers.\n\nRecurring workflows should be simple and require minimal boilerplate. APIs are designed to be safe and idiomatic Rust wherever possible.\nDue to interacting with Godot as a C++ engine, we sometimes follow unconventional approaches to provide a good user experience.\n\n\n## Development status\n\nThe gdext library has evolved a lot during 2023 and 2024 and is now in a usable state for smaller projects.\nHowever, there are still certain things to keep in mind.\n\n> [!WARNING]  \n> The public API introduces breaking changes from time to time, primarily motivated by new features and improved ergonomics.\n> Our [crates.io releases][crates-io] adhere to SemVer, but may lag behind the `master` branch. See also [API stability] in the book.\n\n**Features:** Most Godot APIs have been mapped at this point. The current focus lies on a more natural Rust experience and enable more design\npatterns that come in handy for day-to-day game development. See [#24] for an up-to-date feature overview.\n\nAt the moment, there is experimental support for [Wasm], [Android] and [iOS], but documentation and tooling is still lacking. Contributions are very welcome!\n\n**Bugs:** Most undefined behavior related to the FFI layer has been ironed out, but there may still be occasional safety issues. Apart from that,\nnew additions to the library are typically not feature-complete from the start, but become more robust with feedback and testing over time.\nTo counter bugs, we have an elaborate CI suite including clippy, unit tests, engine integration tests and memory sanitizers. Even hot-reload is tested!\n\n\n## Getting started\n\nTo dive into Rust development with gdext, check out [the godot-rust book][book]. The book is still under construction,\nbut already covers a _Hello World_ setup as well as several more in-depth chapters.\n\nTo consult the API reference, have a look at the online [API Docs].\n\nFurthermore, we provide a small example game in the [`examples/dodge-the-creeps` directory][dodge-the-creeps].  \nThe example [`examples/hot-reload`][hot-reload] demonstrates hot-reloading in the Godot editor.\n\nIf you need help, join our [Discord] server and ask in the `#help` channel!\n\n\n## License\n\nWe use the [Mozilla Public License 2.0][mpl]. MPL tries to find a balance between permissive (MIT, Apache, Zlib) and copyleft licenses (GPL, LGPL).\n\nThe license provides a lot of freedom: you can use the library commercially and keep your own code closed-source,\ni.e. game development is not restricted. The main condition is that if you change gdext _itself_, you need to make\nthose changes available (and only those, no surrounding code).\n\n\n## Contributing\n\nContributions are very welcome! If you want to help out, see [`Contributing.md`](Contributing.md) for some pointers on getting started.\n\n[#24]: https://github.com/godot-rust/gdext/issues/24\n[API Docs]: https://godot-rust.github.io/docs/gdext\n[API stability]: https://godot-rust.github.io/book/toolchain/compatibility.html#rust-api-stability\n[Android]: https://github.com/godot-rust/gdext/issues/470\n[Discord]: https://discord.gg/aKUCJ8rJsc\n[Godot]: https://godotengine.org\n[Mastodon]: https://mastodon.gamedev.place/@GodotRust\n[Sponsor]: https://github.com/sponsors/Bromeon\n[Twitter]: https://twitter.com/GodotRust\n[WASM]: https://godot-rust.github.io/book/toolchain/export-web.html\n[Website]: https://godot-rust.github.io\n[`gdnative`]: https://github.com/godot-rust/gdnative\n[book]: https://godot-rust.github.io/book\n[dodge-the-creeps]: examples/dodge-the-creeps\n[hot-reload]: examples/hot-reload\n[iOS]: https://github.com/godot-rust/gdext/issues/498\n[mpl]: https://www.mozilla.org/en-US/MPL\n[philosophy]: https://godot-rust.github.io/book/contribute/philosophy.html\n[crates-io]: https://crates.io/crates/godot"
        },
        {
          "name": "check.sh",
          "type": "blob",
          "size": 7.83984375,
          "content": "#!/usr/bin/env bash\n# Copyright (c) godot-rust; Bromeon and contributors.\n# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\n# Small utility to run tests locally\n# Similar to minimal-ci\n\n# Note: at the moment, there is some useless recompilation, which could be improved.\n\n################################################################################\n# Constants\n################################################################################\n\n# Commands to run (in that order) if none are given on the command line.\nDEFAULT_COMMANDS=(\"fmt\" \"clippy\" \"test\" \"itest\")\n\n# Store help text in a variable $HELP_TEXT so we don't need weird indentation later on.\nread -r -d '' HELP_TEXT <<EOF\nUsage: check.sh [OPTION|COMMAND...]\n\nEach specified command will be run (until one fails).\nIf no commands are specified, the following commands will be run:\n    ${DEFAULT_COMMANDS[@]}\n\nCommands:\n    fmt           format code, fail if bad\n    test          run unit tests (no Godot needed)\n    itest         run integration tests (from within Godot)\n    clippy        validate clippy lints\n    klippy        validate + fix clippy\n    doc           generate docs for 'godot' crate\n    dok           generate docs and open in browser\n\nOptions:\n    -h, --help          print this help text\n    --double            run check with double-precision\n    -f, --filter <arg>  only run integration tests which contain any of the\n                        args (comma-separated). requires itest.\n\nExamples:\n    check.sh fmt clippy\n    check.sh\n    check.sh --double clippy\n    check.sh test itest -f variant,static\n    RUSTUP_TOOLCHAIN=nightly check.sh\nEOF\n\n# Terminal color codes.\nRED='\\033[1;31m'\nCYAN='\\033[1;36m'\nEND='\\033[0m'\n\n################################################################################\n# Helper functions\n################################################################################\n\n# Drop-in replacement for `echo` that outputs to stderr and adds a newline.\nfunction log() {\n    echo \"$@\" >&2\n}\n\n# Echoes the given command to stderr, then executes it.\nfunction run() {\n    # https://stackoverflow.com/a/76153233/14637\n    echo -n '>' >&2\n    for arg in \"$@\"; do\n        printf \" %q\" \"$arg\" >&2\n    done\n    echo >&2\n    \"$@\"\n}\n\n# Finds the Godot binary and stores its path in $godotBin. Logs an error and returns with nonzero\n# exit status if not found.\nfunction findGodot() {\n    # $godotBin previously detected.\n    if [[ -v godotBin ]]; then\n        return\n\n    # User-defined GODOT4_BIN.\n    elif [[ -n \"$GODOT4_BIN\" ]]; then\n        log \"Using environment variable GODOT4_BIN=$(printf %q \"$GODOT4_BIN\")\"\n        godotBin=\"$GODOT4_BIN\"\n\n    # Executable in path.\n    elif command -v godot4 >/dev/null; then\n        log \"Found 'godot4' executable\"\n        godotBin=\"godot4\"\n\n    # Special case for Windows when there is a .bat file.\n    # Also consider that 'cmd /c' would need 'cmd //c' (https://stackoverflow.com/q/21357813)\n    elif godot4.bat --version 2>/dev/null; then\n        log \"Found 'godot4.bat' script\"\n        godotBin=\"godot4.bat\"\n\n    # This should come last: only use this as a last resort as `godot` may refer to a \n    # Godot 3.x installation.\n    elif command -v godot >/dev/null; then\n        # Check if `godot` actually is Godot 4.x\n        godotVersion=\"$(command godot --version)\"\n        if [[ \"$godotVersion\" =~ ^4\\. ]]; then\n            log \"Found 'godot' executable with version $godotVersion\"\n            godotBin=\"godot\"\n        else\n            log \"Found 'godot' executable, but it has incompatible version $godotVersion\"\n            return 1\n        fi\n\n    # Error case.\n    else\n        log \"Godot executable not found; try setting GODOT4_BIN to the full path to the executable\"\n        return 1\n    fi\n}\n\n################################################################################\n# Commands\n################################################################################\n\n# Surrogate namespacing: all commands are prefixed with `cmd_` to avoid confusion with shell\n# builtins like `test`.\n\nfunction cmd_fmt() {\n    run cargo fmt --all -- --check\n}\n\nfunction cmd_clippy() {\n    run cargo clippy --all-targets \"${extraCargoArgs[@]}\" -- \\\n        -D clippy::suspicious \\\n        -D clippy::style \\\n        -D clippy::complexity \\\n        -D clippy::perf \\\n        -D clippy::dbg_macro \\\n        -D clippy::todo \\\n        -D clippy::unimplemented \\\n        -D warnings\n}\n\nfunction cmd_klippy() {\n    run cargo clippy --fix --all-targets \"${extraCargoArgs[@]}\" -- \\\n        -D clippy::suspicious \\\n        -D clippy::style \\\n        -D clippy::complexity \\\n        -D clippy::perf \\\n        -D clippy::dbg_macro \\\n        -D clippy::todo \\\n        -D clippy::unimplemented \\\n        -D warnings\n}\n\nfunction cmd_test() {\n    run cargo test \"${extraCargoArgs[@]}\"\n}\n\nfunction cmd_itest() {\n    findGodot && \\\n        run cargo build -p itest \"${extraCargoArgs[@]}\" && \\\n        run \"$godotBin\" --path itest/godot --headless -- \"[${extraArgs[@]}]\"\n}\n\nfunction cmd_doc() {\n    run cargo doc --lib -p godot --no-deps \"${extraCargoArgs[@]}\"\n}\n\nfunction cmd_dok() {\n    run cargo doc --lib -p godot --no-deps \"${extraCargoArgs[@]}\" --open\n}\n\n################################################################################\n# Argument parsing\n################################################################################\n\n# By default, disable `codegen-full` to reduce compile times and prevent flip-flopping between\n# `itest` compilations and `check.sh` runs. Note that this means some runs are different from CI.\nextraCargoArgs=(\"--no-default-features\")\ncmds=()\nnextArgIsFilter=false\nextraArgs=()\n\nfor arg in \"$@\"; do\n    case \"$arg\" in\n        -h | --help | help)\n            echo \"$HELP_TEXT\"\n            exit 0\n            ;;\n        --use-serde)\n            extraCargoArgs+=(\"--features\" \"serde\")\n            ;;\n        --double)\n            extraCargoArgs+=(\"--features\" \"godot/double-precision\")\n            ;;\n        fmt | test | itest | clippy | klippy | doc | dok)\n            cmds+=(\"$arg\")\n            ;;\n        -f | --filter)\n            if [[ \"${cmds[*]}\" =~ itest ]]; then\n                nextArgIsFilter=true\n            else\n                log \"-f/--filter requires 'itest' to be specified as a command.\"\n                exit 2\n            fi\n            ;;\n        *)\n            if $nextArgIsFilter; then\n                extraArgs+=(\"$arg\")\n                nextArgIsFilter=false\n            else\n                log \"Unrecognized argument '$arg'. Use '$0 --help' to see what's available.\"\n                exit 2\n            fi\n            ;;\n    esac\ndone\n\n# Default if no commands are explicitly given.\nif [[ ${#cmds[@]} -eq 0 ]]; then\n    cmds=(\"${DEFAULT_COMMANDS[@]}\")\nfi\n\n################################################################################\n# Execution and summary\n################################################################################\n\nfunction compute_elapsed() {\n    local total=$SECONDS\n    local min=$((\"$total\" / 60))\n    if [[ \"$min\" -gt 0 ]]; then\n        min=\"${min}min \"\n    else\n        min=\"\"\n    fi\n    local sec=$((\"$total\" % 60))\n\n    # Don't use echo and call it with $(compute_elapsed), it messes with stdout\n    elapsed=\"${min}${sec}s\"\n}\n\nfor cmd in \"${cmds[@]}\"; do\n    \"cmd_${cmd}\" || {\n        compute_elapsed\n        log -ne \"$RED\\n=====================\"\n        log -ne \"\\ngdext: checks FAILED.\"\n        log -ne \"\\n=====================\\n$END\"\n        log -ne \"\\nTotal duration: $elapsed.\\n\"\n        exit 1\n    }\ndone\n\ncompute_elapsed\nlog -ne \"$CYAN\\n=========================\"\nlog -ne \"\\ngdext: checks SUCCESSFUL.\"\nlog -ne \"\\n=========================\\n$END\"\nlog -ne \"\\nTotal duration: $elapsed.\\n\"\n\n# If invoked with sh instead of bash, pressing Up arrow after executing `sh check.sh` may cause a `[A` to appear.\n# See https://unix.stackexchange.com/q/103608.\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-cell",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-ffi",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "godot",
          "type": "tree",
          "content": null
        },
        {
          "name": "itest",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}