{
  "metadata": {
    "timestamp": 1736709102390,
    "page": 259,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "touchHLE/touchHLE",
      "stars": 2787,
      "defaultBranch": "trunk",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.349609375,
          "content": "/target\n/vendor/boost\n/touchHLE_sandbox\n/touchHLE_apps/*.ipa\n/touchHLE_apps/*.app\n\n# Xcode (integration testing app)\n\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n\ntests/TestApp_source/build\n\n# Android\n\n*.iml\n.gradle\n/local.properties\n.idea/\n/build\n/captures\n.externalNativeBuild\n.cxx\nlocal.properties\nandroid/app/src/main/jniLibs\nandroid/app/build\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.4150390625,
          "content": "[submodule \"stb\"]\n\tpath = vendor/stb\n\turl = https://github.com/nothings/stb.git\n\tbranch = dev\n[submodule \"dynarmic\"]\n\tpath = vendor/dynarmic\n\turl = https://github.com/touchHLE/dynarmic.git\n[submodule \"openal-soft\"]\n\tpath = vendor/openal-soft\n\turl = https://github.com/kcat/openal-soft\n[submodule \"vendor/SDL\"]\n\tpath = vendor/SDL\n\turl = https://github.com/libsdl-org/SDL.git\n\tbranch = 07d0f51fa292895443f563f0cbde4cb3802d87fa\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 17.58203125,
          "content": "# Changelog\n\nThis will list notable changes from release to release, and credit the people who contributed them. This mainly covers changes that are visible to end users, so please look at the commit history if you want to know all the details.\n\nNames preceded by an @ are GitHub usernames.\n\nLists of new working apps are a guideline, not a guarantee of support, and are not comprehensive. Credits for new working apps indicate someone who put a lot of effort into getting that particular app working, but compatibility is always a cumulative collaborative effort. The “Various small contributions” in the changelog often add up in a big way.\n\nChanges are categorised as follows:\n\n* Compatibility: changes that affect which apps work in touchHLE.\n* Quality and performance: changes that don't affect which apps work, but do affect the quality of the experience.\n* Usability: changes to features of the emulator unrelated to the above, e.g. new input methods.\n* Other: when none of the above seem to fit.\n\n## Next\n\nCompatibility:\n\n- New working apps:\n  - [Dungeon Hunter](https://appdb.touchhle.org/apps/313) (@ciciplusplus)\n  - [Crystal Defenders: Vanguard Storm](https://appdb.touchhle.org/apps/100) (@ciciplusplus)\n  - [Zombie Infection](https://appdb.touchhle.org/apps/347) (@ciciplusplus)\n  - [Gangstar: West Coast Hustle](https://appdb.touchhle.org/apps/351) (@ciciplusplus)\n  - [Asphalt 4: Elite Racing](https://appdb.touchhle.org/apps/96) (@ciciplusplus)\n  - [Prince of Persia: Warrior Within](https://appdb.touchhle.org/apps/127) (@ciciplusplus)\n  - [Resident Evil 4: Mobile Edition](https://appdb.touchhle.org/apps/91) (@alborrajo)\n  - [Command & Conquer: Red Alert](https://appdb.touchhle.org/apps/404) (@ciciplusplus)\n  - [SimCity](https://appdb.touchhle.org/apps/250) (@ciciplusplus)\n  - [Asphalt 5](https://appdb.touchhle.org/apps/411) (@ciciplusplus, @hikari-no-yume)\n  - [Cut the Rope](https://appdb.touchhle.org/apps/124) (@ciciplusplus)\n  - [Skater Nation](https://appdb.touchhle.org/apps/424) (@ciciplusplus)\n  - [Iron Man 2](https://appdb.touchhle.org/apps/451) (@ciciplusplus)\n  - [Shrek Forever After](https://appdb.touchhle.org/apps/427) (@ciciplusplus)\n  - [Spore Origins](https://appdb.touchhle.org/apps/302) (@ciciplusplus, @hikari-no-yume, @teromene)\n  - [Defender Chronicles](https://appdb.touchhle.org/apps/267) (@hujerhoe)\n- API support improvements:\n  - Various small contributions. (@hikari-no-yume, @alborrajo, @ciciplusplus, @atasro2, @abnormalmaps, @hujerhoe, @acieslewicz)\n  - UITextField now supports real text input with a keyboard. On Windows/macOS physical keyboard is used, on Android it's done via a system soft keyboard. (@ciciplusplus)\n  - UIScrollView and UITextView partial implementations. (@Skryptonyte, @ciciplusplus)\n\nUsability:\n\n- Added default options for Earthworm Jim and improved default options for Crash Bandicoot Nitro Kart 3D. (@celerizer)\n- The app picker now has a “Quick options” feature. This provides a quicker and easier way to set some common options. (@hikari-no-yume)\n- App icons in the app picker are now sorted by the display name of the app, case-insensitively. (@hikari-no-yume)\n- The accelerometer (tilt controls) can now be simulated using a mouse, instead of a game controller or real accelerometer. Simply hold down the right mouse button and move the mouse cursor. (@alborrajo)\n- Default options for various games. (@nighto)\n- macOS builds and releases of touchHLE now come as an application bundle (`.app` directory) rather than as a bare “Unix executable” file. This should fix problems some users encountered with running touchHLE outside of a terminal, and allows putting touchHLE in the Applications folder like a normal graphical app. To support this, user data (apps, options, etc) is now stored in “Application Support” rather than the current directory, and the bundled files (fonts, dylibs, etc) are now part of the app bundle. If you prefer the old layout, you can still get it if you move all the files out of the bundle. (@hikari-no-yume)\n\nQuality:\n\n- Fix problem with non-working accelerometer on some Android phones. (@Oscar1640)\n\nOther:\n\n- MP3 decoding now uses Symphonia rather than dr\\_mp3. We do not expect this to affect compatibility. (@abnormalmaps)\n\n## v0.2.2 (2024-04-01)\n\nCompatibility:\n\n- New working apps:\n  - [Rayman 2](https://appdb.touchhle.org/apps/279) (@ciciplusplus)\n  - [Tony Hawk's Pro Skater 2](https://appdb.touchhle.org/apps/75) (@ciciplusplus)\n  - [Earthworm Jim](https://appdb.touchhle.org/apps/280) (@ciciplusplus)\n  - [Castle of Magic](https://appdb.touchhle.org/apps/281) (@ciciplusplus)\n- API support improvements:\n  - Various small contributions. (@alborrajo, @WhatAmISupposedToPutHere, @ciciplusplus, @hikari-no-yume, @abnormalmaps, @Skryptonyte, @teromene)\n  - AAC audio files (AAC-LC in a typical MPEG-4 container) are now supported in Audio Toolbox. This is done in a fairly hacky way so it might not work for some apps. (@hikari-no-yume)\n- There is now support for iPhone OS 3.0 apps, in addition to the existing support for iPhone OS 2.x apps:\n  - Support for fat binaries has been added. touchHLE will no longer crash when trying to run an app with both ARMv6 and ARMv7 versions, and instead will try to pick the best available option (ARMv7, or failing this, ARMv6). This improves compatibility with iPhone OS 3.0 apps, many of which use fat binaries in order to improve performance on the iPhone 3GS and iPod touch (3rd generation). (@WhatAmISupposedToPutHere)\n  - The bundled ARMv6 dynamic libraries, libgcc and libstdc++, have been updated to their iPhone OS 3.0.1 versions. Previously the iPhone OS 2.2.1 versions were used. (@hikari-no-yume)\n  - touchHLE will no longer output a warning when trying to run an app with iPhone OS 3.0 as its minimum OS version. The warning now only appears for apps requiring iPhone OS 3.1 and later. (@hikari-no-yume)\n\nUsability:\n\n- The `--button-to-touch=` option now supports the Start and the LeftShoulder buttons in addition to the A/B/X/Y buttons and D-pad. Certain games' default options have been adjusted to use them. (@nighto)\n- Default options for various games (@nighto)\n\n## v0.2.1 (2023-10-31)\n\nFrom this release onwards, the old list of supported apps is replaced by the crowdsourced [touchHLE app compatibility database](https://appdb.touchhle.org/).\n\nCompatibility:\n\n- API support improvements:\n  - Various small contributions. (@hikari-no-yume, @ciciplusplus, @alborrajo)\n- New working apps:\n  - [Doom](https://appdb.touchhle.org/apps/56) (@ciciplusplus)\n  - [Doom II RPG](https://appdb.touchhle.org/apps/57) (@alborrajo)\n  - [I Love Katamari](https://appdb.touchhle.org/apps/55) (@ciciplusplus)\n  - [Wolfenstein RPG](https://appdb.touchhle.org/apps/58) (@alborrajo)\n\nQuality:\n\n- Multi-touch is now supported. (@ciciplusplus)\n\nUsability:\n\n- The Android version of touchHLE now has a _documents provider_. Thanks to a mere three hundred lines of boilerplate code [originally written for the emulator Skyline](https://github.com/skyline-emu/skyline/blob/dc20a615275f66bee20a4fd851ef0231daca4f14/app/src/main/java/emu/skyline/provider/DocumentsProvider.kt) (RIP), it is now possible for you, as the owner of a device running a newer Android version, to move ~~files~~ _documents_ in and out of touchHLE's ~~directory~~ _location_ on your device with relative ease. For example, it is now possible to download an ~~.ipa file~~ _`application/octet-stream` document_ to the Downloads folder of your device, then, using an appropriate app, move this _document_ to the touchHLE _location_. Users of normal operating systems and [older versions of Android](https://developer.android.com/about/versions/11/privacy/storage#other-apps-data) continue to be able to access a superior version of the same functionality via a so-called “file manager”. (@hikari-no-yume)\n- There is now an “Open file manager” button in the app picker, to make it easier to find where touchHLE stores your apps and settings. On most operating systems this opens the relevant directory in a file manager, and on Android it opens some sort of app for managing _documents_ in the touchHLE _location_. (@hikari-no-yume)\n- The Android version of touchHLE now writes all log messages to a file called `log.txt`, in addition to outputting them to logcat. (@hikari-no-yume)\n- The new `--stabilize-virtual-cursor=` option makes the analog stick-controlled virtual cursor appear more stable to the emulated app, which is helpful in some games with overly sensitive menu scrolling. In some titles it is applied by default. (@hikari-no-yume; special thanks: @wareya)\n- Automatic language detection now works on all platforms, and supports a list of languages in order of preference, rather than just one. The `LANG` environment variable is no longer supported, and instead the new `--preferred-languages=` option can be used. Note that it is the emulated app itself that decides what to do with this list, and whether particular languages are supported. (@hikari-no-yume)\n- The app picker now has multiple pages, so it is no longer limited to 16 apps. (@hikari-no-yume)\n- The framerate is now limited to 60fps by default, which matches the original iPhone OS and fixes issues with some games where the game ran too fast or consumed excessive energy and CPU time. This limit can be adjusted or disabled with the new `--limit-fps=` option. (@hikari-no-yume; special thanks: @wareya)\n- The `--button-to-touch=` option now supports D-pad mappings in addition to the A/B/X/Y buttons. (@alborrajo)\n- Default game controller button mappings have been added for Wolfenstein RPG and Doom II RPG, including for the D-pad. (@alborrajo)\n\n## v0.2.0 (2023-08-31)\n\nCompatibility:\n\n- API support improvements:\n  - Various small contributions. (@hikari-no-yume, @KiritoDv, @ciciplusplus, @TylerJaacks, @abnormalmaps)\n  - PVRTC and paletted texture compression is now supported. (@hikari-no-yume)\n  - Some key pieces of UIKit and Core Animation are now implemented: layer and view hierarchy, layer and view drawing, layer compositing, touch input hit testing, `UIImageView`, `UILabel`, `UIControl`, and `UIButton`. Previously, touchHLE could only support apps that draw everything with OpenGL ES, which is only common for games. This lays the groundwork for supporting games that rely on UIKit, and possibly some non-game apps. (@hikari-no-yume)\n  - Threads can now sleep, join other threads, and block on mutexes. (@abnormalmaps, @hikari-no-yume)\n\n- New supported apps:\n  - Fastlane Street Racing (@hikari-no-yume)\n  - Mystery Mania (@KiritoDv)\n  - [Wolfenstein 3D](https://www.youtube.com/watch?v=omViNgUqF8c) (@ciciplusplus; version 1.0 only)\n  - Many old apps by Donut Games (@ciciplusplus)\n\nQuality and performance:\n\n- Overlapping characters in text now render correctly. (@Xertes0)\n- touchHLE now avoids polling for events more often than 120Hz. Previously, it would sometimes poll many times more often than that, which could be very bad for performance. This change improves performance in basically all apps, though the effects on the supported apps from previous releases are fairly subtle. (@hikari-no-yume)\n- The macOS-only memory leak of up to 0.4MB/s seems to have been fixed! (@hikari-no-yume)\n- App icons are now displayed with rounded corners, even if the PNG file contains a square image. This is more accurate to what iPhone OS does. (@hikari-no-yume)\n- The memory allocator is a lot faster now. (@hikari-no-yume)\n\nNew platform support:\n\n- touchHLE is now available for Android. Only AArch64 devices are supported. (@ciciplusplus, @hikari-no-yume)\n\nUsability:\n\n- touchHLE now supports real accelerometer input on devices with a built-in accelerometer, such as phones and tablets. This is only used if no game controller is connected. (@hikari-no-yume)\n- The options help text is now available as a file (`OPTIONS_HELP.txt`), so you don't have to use the command line to get a list of options. (@hikari-no-yume)\n- The new `--fullscreen` option lets you display an app in fullscreen rather than in a window. This is independent of the internal resolution/scale hack and supports both upscaling and downscaling. (@hikari-no-yume)\n- touchHLE now has a built-in app picker with a pretty icon grid. Specifying an app on the command line bypasses it. (@hikari-no-yume)\n- The new `--button-to-touch=` option lets you map a button on your game controller to a point on the touch screen. touchHLE also now includes default button mappings for some games. (@hikari-no-yume)\n- The new `--print-fps` option lets you monitor the framerate from the console. (@hikari-no-yume)\n\nOther:\n\n- To assist with debugging and development, touchHLE now has a primitive implementation of the GDB Remote Serial Protocol. GDB can connect to touchHLE over TCP and set software breakpoints, inspect memory and registers, step or continue execution, etc. This replaces the old `--breakpoint=` option, which is now removed. (@hikari-no-yume)\n- The version of SDL2 used by touchHLE has been updated to 2.26.4. (@hikari-no-yume)\n- Building on common Linux systems should now work without problems, and you can use dynamic linking for SDL2 and OpenAL if you prefer. Note that we are not providing release binaries. (@GeffDev)\n- Some major changes have been made to how touchHLE interacts with graphics drivers:\n  - touchHLE can now use a native OpenGL ES 1.1 driver where available, rather than translating to OpenGL 2.1. This is configurable with the new `--gles1=` option. (@hikari-no-yume)\n  - The code for presenting rendered frames to the screen has been rewritten for compatibility with OpenGL ES 1.1. (@hikari-no-yume)\n  - The splash screen is now drawn with OpenGL ES 1.1, either natively or via translation to OpenGL 2.1, rather than with OpenGL 3.2. (@hikari-no-yume)\n\n  Theoretically, none of these changes should affect how touchHLE behaves for ordinary users in supported apps, but graphics drivers are inscrutable and frequently buggy beasts, so it's hard to be certain. As if to demonstrate this, these changes somehow fixed the mysterious macOS-only memory leak.\n- The new `--headless` option lets you run touchHLE with no graphical output and no input whatsoever. This is only useful for command-line apps. (@hikari-no-yume)\n\n## v0.1.2 (2023-03-07)\n\nCompatibility:\n\n- API support improvements:\n  - Various small contributions. (@hikari-no-yume, @nitinseshadri)\n  - Some key parts of `UIImage`, `CGImage` and `CGBitmapContext` used by Apple's `Texture2D` sample code are now implemented. Loading textures from PNG files in this way should now work. (@hikari-no-yume)\n  - MP3 is now a supported audio file format in Audio Toolbox. This is done in a fairly hacky way so it might not work for some apps. (@hikari-no-yume)\n- New supported apps:\n  - Touch & Go LITE (@hikari-no-yume)\n  - Touch & Go \\[added to changelog after release: 2023-03-12\\] (@hikari-no-yume)\n  - Super Monkey Ball Lite (@hikari-no-yume; full version was already supported)\n\nQuality:\n\n- The version of stb\\_image used by touchHLE has been updated. The new version includes a fix for a bug that caused many launch images (splash screens) and icons to fail to load. Thank you to @nothings and @rygorous who diagnosed and fixed this.\n\nUsability:\n\n- The virtual cursor controlled by the right analog stick now uses a larger portion of the analog stick's range. (@hikari-no-yume)\n- Basic information about the app bundle, such as its name and version number, is now output when running an app. There is also a new command-line option, `--info`, which lets you get this information without running the app. (@hikari-no-yume)\n- You are now warned if you try to run an app that requires a newer iPhone OS version. (@hikari-no-yume)\n- Options can now be loaded from files. (@hikari-no-yume)\n  - The recommended options for supported apps are now applied automatically. See the new `touchHLE_default_options.txt` file.\n  - You can put your own options in the new `touchHLE_options.txt` file.\n  - If you're a Windows user, this means that dragging and dropping an app onto `touchHLE.exe` is now all you need to do to run an app.\n\nOther:\n\n- The version of dynarmic used by touchHLE has been updated. This will fix build issues for some people. (@hikari-no-yume)\n\n## v0.1.1 (2023-02-18)\n\nCompatibility:\n\n- API support improvements:\n  - Various small contributions. (@hikari-no-yume, @nitinseshadri, @abnormalmaps, @RealSupremium)\n  - Basic POSIX file I/O is now supported. Previously only standard C file I/O was supported. (@hikari-no-yume)\n  - Very basic use of Audio Session Services is now supported. (@nitinseshadri)\n  - Very basic use of `MPMoviePlayerController` is now supported. No actual video playback is implemented. (@hikari-no-yume)\n- New supported app: Crash Bandicoot Nitro Kart 3D (@hikari-no-yume; version 1.0 only).\n\nQuality and performance:\n\n- The code that limits CPU use has reworked in an attempt to more effectively balance responsiveness and energy efficiency. Frame pacing should be more consistent and slowdowns should be less frequent. No obvious impact on energy use has been observed. (@hikari-no-yume)\n- The emulated CPU can now access memory via a more direct, faster path. This can dramatically improve performance and reduce CPU/energy use, in some cases by as much as 25%. (@hikari-no-yume)\n- Fixed missing gamma encoding/decoding when rendering text using `UIStringDrawing`. This was making the text in _Super Monkey Ball_'s options menu look pretty ugly. (@hikari-no-yume)\n\nUsability:\n\n- `.ipa` files can now be opened directly, you don't need to extract the `.app` first. (@DCNick3)\n- New command-line options `--landscape-left` and `--landscape-right` let you change the initial orientation of the device. (@hikari-no-yume)\n- The app bundle or `.ipa` file no longer has to be the first command-line argument. (@hikari-no-yume)\n\nOther:\n\n- Some of the more spammy warning messages have been removed or condensed. (@hikari-no-yume)\n\n## v0.1.0 (2023-02-02)\n\nFirst release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.4931640625,
          "content": "# touchHLE code of conduct\n\n## General\n\nPlease be kind and respectful to others.\n\nIt's especially important to value and respect others' time and energy: don't demand or expect anything to happen on any particular timescale, or even for anyone to do anything at all. We're all volunteers here, doing things for the love of it, and if you force us to spend a lot of time on _you_ without a good reason, it's going to slowly chip away at our passion and enthusiasm.\n\nI do not feel like a full-length, corporate project-style “code of conduct” is necessary here, but to be absolutely clear: trans rights 🏳️‍⚧️🏳️‍⚧️🏳️‍⚧️, racists can fuck off, etc. If someone's making you uncomfortable or worse, please don't hesitate to get in touch with me directly. In any case, I reserve the right to block anyone from the project at any time for any reason, but I promise to exercise careful judgment. Thanks. ~ hikari\\_no\\_yume\n\n## Piracy\n\n**⚠️ Do not link to pirated content. “Abandonware” is also pirated content.**<br>\n**⚠️ Do not link to illegal copies of applications that were released for free. These are also considered pirated content.**<br>\n**⚠️ Do not ask about how to obtain pirated content.**<br>\n**⚠️ Do not talk about using pirated content.**<br>\n**⚠️ You _will_ be banned if you ignore this warning.**<br>\n\nThese are not the only copyright rules applicable to touchHLE. Please also read the [contribution guide](CONTRIBUTING.md) if you are going to contribute code.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.4091796875,
          "content": "# Contributing to touchHLE\n\nPlease also read the [code of conduct](CODE_OF_CONDUCT.md).\n\n## Issues\n\nPlease bear in mind that there are infinitely many apps that do not work in touchHLE right now, so please don't open issues about broken apps unless one of these applies:\n\n- You know that this specific version of the app worked in a previous version of touchHLE and you can reproduce this.\n- The app is partially working (e.g. loaded up to the menu but the main game doesn't work). The fact that an app's splash screen (Default.png) shows up doesn't mean it's partially working.\n\n## Source control and review\n\n### Setting up the repo\n\ntouchHLE uses git source control. You can get the source code from GitHub like this:\n\n```\n$ git clone https://github.com/touchHLE/touchHLE.git\n$ cd touchHLE\n```\n\ntouchHLE uses Gerrit for code review. [The touchHLE repo on GerritHub](https://review.gerrithub.io/admin/repos/touchHLE/touchHLE) is where you can submit patches.\n\nLog into GerritHub with your GitHub account. (If that fails with some server error, try again in a few hours; there are some reliability issues.) If it's your first time using GerritHub, you can then [go to “GitHub” &gt; “Profile” in the Gerrit UI](https://review.gerrithub.io/plugins/github-plugin/static/account.html) to set up your profile and import your SSH keys. It is recommended to provide a “Full name”, which is just a display name and does not have to be your legal name.\n\nYou can then add GerritHub as a “remote” (replace `your-github-username-here` with your username):\n\n```\n$ git remote add gerrit \"ssh://your-github-username-here@review.gerrithub.io:29418/touchHLE/touchHLE\"\n```\n\nGerrit requires your commit messages to have a `Change-Id:` line in them. Gerrit provides a git hook that adds this line to your commit messages automatically. You can install it like this (Windows users may need to use git bash for this):\n\n```\n$ (f=`git rev-parse --git-dir`/hooks/commit-msg ; mkdir -p $(dirname $f) ; curl -Lo $f https://review.gerrithub.io/tools/hooks/commit-msg ; chmod +x $f)\n```\n\n### Submitting changes\n\nMake a local branch based on `trunk` with your changes. Try to avoid bundling unrelated changes in one commit. If you make a mistake in a commit that hasn't been merged yet, please fix it by modifying the original commit (e.g. using `git commit --amend --reset-author`), rather than by adding a separate commit.\n\nOnce you're happy with your changes, you can push them for review on Gerrit with:\n\n```\n$ git push gerrit HEAD:refs/for/trunk\n```\n\nThen go to GerritHub, make sure you didn't push anything you didn't intend to, and add `hikari_no_yume` as a reviewer.\n\nIf you're submitting a large number of changes with a common theme, e.g. improving compatibility with some app, it is recommended to _also_ create a GitHub pull request. This improves visibility and ensures your changes are tested by the GitHub CI. You can then tag the Gerrit reviews with a “topic” named like `touchHLE/pull/xxx` where xxx is the pull request number. You can bulk-tag things using the checkboxes on the GerritHub homepage.\n\nPlease also see the following guidelines for what to do with code changes.\n\n## Code contributions\n\nThe developer documentation can be found in [the `dev-docs` directory](dev-docs/) and throughout the codebase. At a minimum, you'll probably want to read [the building guide](dev-docs/building.md) and [the coding style guide](dev-docs/code-style.md).\n\nPlease run [`dev-scripts/format.sh`](dev-scripts/format.sh) and [`dev-scripts/lint.sh`](dev-scripts/lint.sh) on your changes before committing.\n\nYou should also run `cargo test`. [Building the integration tests requires downloading LLVM](tests/README.md), so it's understandable if you want to skip them (`cargo test -- --skip run_test_app`) and let the GitHub Actions CI catch any issues when you submit your pull request. Alternatively, you can download a pre-built version of the integration tests app (TestApp) from GitHub Actions CI and run it in touchHLE.\n\nIf you're going to open a pull request with non-trivial changes, please talk to us first so we can figure out if we're likely to accept them. It would be a shame if your effort had to be wasted.\n\n### Copyright and reverse engineering\n\n(Please also read the copyright rules in the code of conduct.)\n\n⚠️ Be **very** careful about copyright. To put it simply: **don't contribute if you've seen code you shouldn't have seen, don't copy code that isn't yours to copy, and especially don't _secretly_ copy and pretend you didn't**. Any infringement of Apple or other copyrights could threaten the foundations of the project, and the livelihoods of current contributors. **If in doubt, don't do it**, but in particular:\n\n* ⚠️ When implementing an API, rely firstly and primarily on public documentation.\n* ⚠️ Do not under any circumstances look at or rely on _leaked_ code, documentation, tools, etc. Material being available somewhere does not mean it is open-source.\n* ⚠️ Do not disassemble or decompile components of iPhone OS or other Apple platforms. If you can't figure out how else you would find out how an API should behave, please just don't try to implement it.\n* ⚠️ Looking at header files is occasionally necessary, but it should not be your first resort, and you must only use them as a source of simple facts (e.g. what value does a constant have, what type does a type alias resolve to). Do not copy their layout and organization. Do not copy anything you do not need to. Except where the name is part of the ABI or public API, do not copy names.\n* ⚠️ Bear in mind that open-source code is still covered by copyright, and so the same caution applies to consulting open-source code. Especially try to avoid looking at the implementation files, unless there is no other option, and do not copy algorithms. (Note however that if it's under a compatible license, we may be able to bring the open-source code into the project _under that license, as a dependency_.)\n* ⚠️ If you work or have worked at Apple, or NeXT, or various other organisations, then you may have seen the proprietary source code used in components of iPhone OS. If that's the case, please do not contribute to this project.\n* ⚠️ If your employment contract or applicable law in your country means that you don't own the copyright on code you want to contribute to this project, or if for some other reason you may need permission from your employer to contribute to this project: please do obtain that permission before contributing.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 22.4921875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"ab_glyph_rasterizer\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c71b1793ee61086797f5c80b6efa2b8ffa6d5dd703f118545808a7f2e27f7046\"\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cb2f989d18dd141ab8ae82f64d1a8cdd37e0840f73a406896cf5e99502fab61\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bstr\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\ndependencies = [\n \"lazy_static\",\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2ef034f05691a48569bd920a96c81b9d91bbad1ab5ac7c4616c1f6ef36cb79f\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"caf\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fb1715abe8ffd1caeca4e30b9d803ecb75698bef0e59d207d4b0f16757744e7\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c77df041dc383319cc661b428b6961a005db4d6808d5e12536931b1ca9556055\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-license\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"653542a7f5db653bf79ee4b6455c23f8e6b8a9c38c6310fbe14528728c14bd19\"\ndependencies = [\n \"ansi_term\",\n \"anyhow\",\n \"atty\",\n \"cargo_metadata\",\n \"clap\",\n \"csv\",\n \"getopts\",\n \"semver\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"toml\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbdb825da8a5df079a43676dbe042702f1707b1109f713a01420fbb4cc71fa27\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.15.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08a1ec454bc3eead8719cb56e15dbbfecdbc14e4b3a3ae4936cc6e31f5fc0d07\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"3.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71655c45cb9845d3270c9d6df84ebe72b4dad3c2ba3f7023ad47c144e4e473a5\"\ndependencies = [\n \"atty\",\n \"bitflags\",\n \"clap_derive\",\n \"clap_lex\",\n \"indexmap\",\n \"once_cell\",\n \"strsim\",\n \"termcolor\",\n \"textwrap\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"3.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea0c8bce528c4be4da13ea6fead8965e95b6073585a2f05204bd8f4119f82a65\"\ndependencies = [\n \"heck\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5\"\ndependencies = [\n \"os_str_bytes\",\n]\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db34956e100b30725f2eb215f90d4871051239535632f84fea3bc92722c66b7c\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fb766fa798726286dbbb842f174001dab8abc7b627a1dd86e0b7222a95d929f\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22813a6dc45b335f9bade10bf7271dc477e81113e89eb251a0bc2a8a81c536e1\"\ndependencies = [\n \"bstr\",\n \"csv-core\",\n \"itoa 0.4.8\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b2466559f260f48ad25fe6317b3c8dac77b5bdb5763ac7d9d6103530663bc90\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8a2db397cb1c8772f31494cb8917e48cd1e64f0fa7efac59fbd741a0a8ce841\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"gl_generator\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a95dfc23a2b4a9a2f5ab41d194f8bfda3cabec42af4e39f08c339eb2a0c124d\"\ndependencies = [\n \"khronos_api\",\n \"log\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hound\"\nversion = \"3.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d13cdbd5dbb29f9c88095bbdc2590c9cba0d0a1269b983fef6b2cdd7e9f4db1\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1885e79c1fc4b10f0e172c475f458b7f7b93061064d98c3293e98c5ba0c8b399\"\ndependencies = [\n \"autocfg\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4217ad341ebadf8d8e724e264f13e593e0648f5b3e94b3896a5df283be015ecc\"\n\n[[package]]\nname = \"khronos_api\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2db585e1d738fc771bf08a151420d3ed193d9d895a36df7f6f8a9456b911ddc\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.137\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\"\n\n[[package]]\nname = \"line-wrap\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f30344350a2a51da54c1d53be93fade8a237e545dbcc4bdbe635413f2117cab9\"\ndependencies = [\n \"safemem\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"mach_object\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b6f2d7176b94027af58085a2c9d27c4e416586caba409c314569213901d6068\"\ndependencies = [\n \"bitflags\",\n \"byteorder\",\n \"lazy_static\",\n \"libc\",\n \"log\",\n \"thiserror\",\n \"time\",\n \"uuid\",\n]\n\n[[package]]\nname = \"md5\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"490cc448043f947bae3cbee9c203358d62dbee0db12107a74be5c30ccfd09771\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f61fba1741ea2b3d6a1e3178721804bb716a68a6aeba1149b5d52e3d464ea66\"\n\n[[package]]\nname = \"os_str_bytes\"\nversion = \"6.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b7820b9daea5457c9f21c69448905d723fbd21136ccf521748f23fd49e723ee\"\n\n[[package]]\nname = \"owned_ttf_parser\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05e6affeb1632d6ff6a23d2cd40ffed138e82f1532571a26f527c8a284bb2fbb\"\ndependencies = [\n \"ttf-parser\",\n]\n\n[[package]]\nname = \"plist\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd39bc6cdc9355ad1dc5eeedefee696bb35c34caf21768741e81826c0bbd7225\"\ndependencies = [\n \"base64\",\n \"indexmap\",\n \"line-wrap\",\n \"serde\",\n \"time\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.47\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ea3d908b0e36316caf9e9e2c4625cdde190a7e6f440d794667ed17a1855e725\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.36.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7649a7b4df05aed9ea7ec6f628c67c9953a43869b8bc50929569b2999d443fe\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbe448f377a7d6961e30f5955f9b8d106c3f5e449d493ee1b125c1d43c2b5179\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\n\n[[package]]\nname = \"rusttype\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ff8374aa04134254b7995b63ad3dc41c7f7236f69528b28553da7d72efaa967\"\ndependencies = [\n \"ab_glyph_rasterizer\",\n \"owned_ttf_parser\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b4b9743ed687d4b4bcedf9ff5eaa7398495ae14e61cba0a295704edbc7decde\"\n\n[[package]]\nname = \"safemem\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072\"\n\n[[package]]\nname = \"sdl2\"\nversion = \"0.35.2\"\nsource = \"git+https://github.com/hikari-no-yume/rust-sdl2.git?tag=touchHLE-2#15c58be733277f4314d47298132f4ad2304cc512\"\ndependencies = [\n \"bitflags\",\n \"lazy_static\",\n \"libc\",\n \"sdl2-sys\",\n]\n\n[[package]]\nname = \"sdl2-sys\"\nversion = \"0.35.2\"\nsource = \"git+https://github.com/hikari-no-yume/rust-sdl2.git?tag=touchHLE-2#15c58be733277f4314d47298132f4ad2304cc512\"\ndependencies = [\n \"cfg-if\",\n \"cmake\",\n \"libc\",\n \"version-compare\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58bc9567378fc7690d6b2addae4e60ac2eeea07becb2c64b9f218b53865cba2a\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.148\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e53f64bb4ba0191d6d0676e1b141ca55047d83b74f5607e6d8eb88126c52c2dc\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.148\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a55492425aa53521babf6137309e7d34c20bbfbbfcfe2c7f3a047fd1f6b92c0c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"877c235533714907a8c2464236f5c4b2a17262ef1bd71f38f35ea592c8da6883\"\ndependencies = [\n \"itoa 1.0.4\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"symphonia\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e48dba70095f265fdb269b99619b95d04c89e619538138383e63310b14d941\"\ndependencies = [\n \"lazy_static\",\n \"symphonia-bundle-mp3\",\n \"symphonia-codec-aac\",\n \"symphonia-core\",\n \"symphonia-format-isomp4\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"symphonia-bundle-mp3\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f31d7fece546f1e6973011a9eceae948133bbd18fd3d52f6073b1e38ae6368a\"\ndependencies = [\n \"bitflags\",\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"symphonia-codec-aac\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68bdd75b25ce4b84b12a4bd20bfea2460c2dbd7fc1d227ef5533504d3168109d\"\ndependencies = [\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-core\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c73eb88fee79705268cc7b742c7bc93a7b76e092ab751d0833866970754142\"\ndependencies = [\n \"arrayvec\",\n \"bitflags\",\n \"bytemuck\",\n \"lazy_static\",\n \"log\",\n]\n\n[[package]]\nname = \"symphonia-format-isomp4\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffdf14bae5cf352032416bc64151e5d6242d29d33cbf3238513b44d4427a1efb\"\ndependencies = [\n \"encoding_rs\",\n \"log\",\n \"symphonia-core\",\n \"symphonia-metadata\",\n \"symphonia-utils-xiph\",\n]\n\n[[package]]\nname = \"symphonia-metadata\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89c3e1937e31d0e068bbe829f66b2f2bfaa28d056365279e0ef897172c3320c0\"\ndependencies = [\n \"encoding_rs\",\n \"lazy_static\",\n \"log\",\n \"symphonia-core\",\n]\n\n[[package]]\nname = \"symphonia-utils-xiph\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a450ca645b80d69aff8b35576cbfdc7f20940b29998202aab910045714c951f8\"\ndependencies = [\n \"symphonia-core\",\n \"symphonia-metadata\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.105\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b9b43d45702de4c839cb9b51d9f529c5dd26a4aff255b42b1ebc03e88ee908\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10deb33631e3c9018b9baf9dcbbc4f737320d2b576bac10f6aefa048fa407e3e\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"982d17546b47146b28f7c22e3d08465f6b8903d0ea13c1660d9d84a6e7adcdbb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a561bf4617eebd33bca6434b988f39ed798e527f51a1e797d0ee4f61c0a38376\"\ndependencies = [\n \"itoa 1.0.4\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e153e1f1acaef8acc537e68b44906d2db6436e2b35ac2c6b42640fff91f00fd\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d967f99f534ca7e495c575c62638eebc2898a8c84c119b89e250477bc4ba16b2\"\ndependencies = [\n \"time-core\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"touchHLE\"\nversion = \"0.2.2\"\ndependencies = [\n \"caf\",\n \"cargo-license\",\n \"cc\",\n \"cmake\",\n \"encoding_rs\",\n \"gl_generator\",\n \"hound\",\n \"mach_object\",\n \"md5\",\n \"plist\",\n \"quick-xml\",\n \"rusttype\",\n \"sdl2\",\n \"sdl2-sys\",\n \"symphonia\",\n \"touchHLE_dynarmic_wrapper\",\n \"touchHLE_gl_bindings\",\n \"touchHLE_openal_soft_wrapper\",\n \"touchHLE_pvrt_decompress_wrapper\",\n \"touchHLE_stb_image_wrapper\",\n \"touchHLE_version\",\n \"yore\",\n \"zip\",\n]\n\n[[package]]\nname = \"touchHLE_dynarmic_wrapper\"\nversion = \"0.2.2\"\ndependencies = [\n \"cc\",\n \"cmake\",\n]\n\n[[package]]\nname = \"touchHLE_gl_bindings\"\nversion = \"0.2.2\"\ndependencies = [\n \"gl_generator\",\n]\n\n[[package]]\nname = \"touchHLE_openal_soft_wrapper\"\nversion = \"0.2.2\"\ndependencies = [\n \"cmake\",\n]\n\n[[package]]\nname = \"touchHLE_pvrt_decompress_wrapper\"\nversion = \"0.2.2\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"touchHLE_stb_image_wrapper\"\nversion = \"0.2.2\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"touchHLE_version\"\nversion = \"0.2.2\"\n\n[[package]]\nname = \"ttf-parser\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b3e06c9b9d80ed6b745c7159c40b311ad2916abb34a49e9be2653b90db0d8dd\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ceab39d59e4c9499d4e5a8ee0e2735b891bb7308ac83dfb4e80cad195c9f6f3\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"422ee0de9031b5b948b97a8fc04e3aa35230001a722ddd27943e0be31564ce4c\"\n\n[[package]]\nname = \"version-compare\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"579a42fc0b8e0c63b76519a339be31bed574929511fa53c1a3acae26eb258f29\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"xml-rs\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2d7d3948613f75c98fd9328cfdcc45acc4d360655289d0a7d4ec931392200a3\"\n\n[[package]]\nname = \"yore\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f58c7ce1b7faa85a5c5a8b45b428c89cabdcd097bb472b7668037b291a8a20b\"\ndependencies = [\n \"thiserror\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0445d0fbc924bb93539b4316c11afb121ea39296f99a3c4c9edad09e3658cdef\"\ndependencies = [\n \"byteorder\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"flate2\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.7666015625,
          "content": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at https://mozilla.org/MPL/2.0/.\n[workspace]\n\n[workspace.package]\nversion = \"0.2.2\"\nedition = \"2021\"\nlicense = \"MPL-2.0\"\nauthors = [\"touchHLE project contributors\"]\nhomepage = \"https://touchhle.org/\"\n\n[package]\nname = \"touchHLE\"\nversion = { workspace = true }\nedition = { workspace = true }\nlicense = { workspace = true }\nauthors = { workspace = true }\nhomepage = { workspace = true }\n\n[lib]\n# https://users.rust-lang.org/t/making-both-binary-and-cdylib-from-one-package/29105\ncrate-type = [\"cdylib\", \"rlib\"]\n\n[[bin]]\nname = \"touchHLE\"\npath = \"src/bin.rs\"\n\n[features]\ndefault = [\"static\"]\nstatic = [\"sdl2/bundled\", \"sdl2/static-link\", \"touchHLE_openal_soft_wrapper/static\"]\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[workspace.dependencies]\ncc = \"1.0.83\"\ncmake = \"0.1.49\"\ngl_generator = \"0.14.0\"\n\n[dependencies]\ncaf = \"0.1.0\"\nhound = \"3.5.0\"\nmach_object = \"0.1.17\"\nplist = \"1.3.1\"\nzip = { version = \"0.6.4\", default-features = false, features = [\"deflate\"] }\nrusttype = \"0.9.3\"\n# While most Symphonia codecs are (likely) unpatented/have freely licenseable \n# patents as of 2024, all of the AAC profiles except AAC-LC (likely) have \n# active patent claims. The \"aac\" feature only enables AAC-LC, so it's should \n# be ok.\n# (The above statements should not understood as legal claims/advice.)\nsymphonia = { version = \"0.5.3\", default-features = false, features = [\"aac\", \"isomp4\", \"mp3\"] }\nquick-xml = \"0.36.2\"\nmd5 = \"0.7.0\"\nyore = \"1.1.0\"\nencoding_rs = \"0.8.35\"\n# We currently use a fork of rust-sdl2 because we need a fix for Android builds\n# that's not upstream yet.\n# The HIDAPI feature is enabled because rust-sdl2 hides the SDL2 sensor features\n# behind this, but the actual HIDAPI is not used by touchHLE (see window.rs).\n# Note that the submodule in vendor/SDL2/ must use exactly the same revision of\n# SDL2 that rust-sdl2 uses, so that the Android JNI interface matches.\nsdl2 = { git = \"https://github.com/hikari-no-yume/rust-sdl2.git\", tag = \"touchHLE-2\", features = [\"hidapi\"] }\nsdl2-sys = { git = \"https://github.com/hikari-no-yume/rust-sdl2.git\", tag = \"touchHLE-2\" }\ntouchHLE_dynarmic_wrapper = { path = \"src/cpu/dynarmic_wrapper\" }\ntouchHLE_gl_bindings = { path = \"src/gles/gl_bindings\" }\ntouchHLE_openal_soft_wrapper = { path = \"src/audio/openal_soft_wrapper\" }\ntouchHLE_pvrt_decompress_wrapper = { path = \"src/image/pvrt_decompress_wrapper\" }\ntouchHLE_stb_image_wrapper = { path = \"src/image/stb_image_wrapper\" }\ntouchHLE_version = { path = \"src/version\" }\n\n[build-dependencies]\ncargo-license = \"0.5.1\"\ncc = { workspace = true }\ncmake = { workspace = true }\ngl_generator = { workspace = true }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3349609375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "OPTIONS_HELP.txt",
          "type": "blob",
          "size": 8.5732421875,
          "content": "View options:\n    --fullscreen\n        Display the app in full screen. The default is to display in a window\n        instead, except on Android which always uses full screen.\n\n        The app's output will be scaled to fit your screen. This is independent\n        of the internal resolution, so if the scale hack (see below) is not also\n        in use, the result may be a bit blurry. An internal resolution larger\n        than your screen's is possible, in which case the output is downscaled.\n\n    --landscape-left\n    --landscape-right\n        Changes the orientation the virtual device will have at startup.\n        The default is portrait.\n\n        --landscape-left means rotate 90° counterclockwise from portrait.\n        --landscape-right means rotate 90° clockwise from portrait.\n\n        Usually apps that require landscape mode will tell touchHLE about this,\n        and it will automatically rotate the window, but some apps neglect to\n        do this. These options may be useful in that case.\n\n    --scale-hack=...\n        Set a scaling factor for the window. touchHLE will attempt to run the\n        app with an increased internal resolution. This is a hack and there's\n        no guarantee it will work correctly for all apps.\n\n        The default is no scale hack, which is equivalent to a value of 1 (i.e.\n        a scale of 1×).\n\n        This is a natural number that is at least 1.\n\nGame controller options:\n    --deadzone=...\n        Configures the size of the \\\"dead zone\\\" for analog stick inputs.\n\n        The default value is 0.1, which means that 10% of the stick's range on\n        the X and Y axes around the center position will be collapsed into a\n        single point, so that movements in that range are ignored.\n\n        This is a floating-point (decimal) number between 0 and 1.\n\n    --x-tilt-range=...\n    --y-tilt-range=...\n        Set the simulated rotation range of the device axis mapped to the analog\n        stick X or Y axis.\n\n        Positive X on the analog stick is mapped to tilting the device rightward\n        and positive Y is mapped to tilting the device forward.\n\n        By default, an analog stick's axis is mapped to a rotation range of 60°\n        (30° in either direction). If you wanted a range of 90° on the X axis,\n        you could use --x-tilt-range=90.\n\n        For historical reasons, the device's X axis is mapped to the analog\n        stick's Y axis and vice versa, as if the device is held in landscape.\n\n        This is a floating-point (decimal) number of degrees, without a degree\n        symbol. It may be negative.\n\n    --x-tilt-offset=...\n    --y-tilt-offset=...\n        Offset the simulated angle of the device axis mapped to the analog stick\n        X or Y axis.\n\n        Positive X on the analog stick is mapped to tilting the device rightward\n        and positive Y is mapped to tilting the device forward.\n\n        By default, the device is simulated as being level with the ground when\n        the stick is in the center/neutral position. This option is intended for\n        games that use a different angle relative to the ground as their neutral\n        position. For example, if a game expects you to hold the device in a\n        landscape orientation, with a 45° angle to the ground, you might use\n        --y-tilt-offset=45.\n\n        This is a floating-point (decimal) number of degrees, without a degree\n        symbol. It may be negative.\n\n    --button-to-touch=...\n        Maps a button on your game controller to a point on the simulated touch\n        screen of the device. Pressing the button will behave like touching that\n        part of the screen.\n\n        This is three parts separated by commas: the name of a button (DPadLeft,\n        DPadUp, DPadRight, DPadDown, Start, LeftShoulder or Xbox-like\n        A, B, X or Y), the X co-ordinate and the Y co-ordinate.\n        The co-ordinates are floating-point (decimal) numbers. 0,0 is the\n        top-left corner. The bottom-right corner is 320,480 if the app is in\n        portrait, and 480,320 if the app is in landscape.\n\n        For example, --button-to-touch=A,470,310 will make the A button simulate\n        tapping in the bottom-right corner of the screen, for a landscape game.\n\n        Except where specified in touchHLE_default_options.txt, this is not used\n        by default. There is however a virtual cursor that is controlled by the\n        right analog stick (tap/hold by pressing the stick or right shoulder\n        button).\n\n    --stabilize-virtual-cursor=...\n        Apply motion smoothing and a sticky radius to the virtual cursor\n        (controlled by the right analog stick).\n\n        Some apps are very sensitive to small finger movements and will always\n        register an attempted \"tap\" as a scrolling gesture if the finger moves\n        even very slightly. When combined with the low precision and shakiness\n        of the virtual cursor, it can be difficult to use certain apps' menus.\n        This option exists to compensate for this.\n\n        The value is two floating-point (decimal) numbers separated by a comma.\n        The first is the strength of the motion smoothing, and the second is a\n        radius, in pixels, within which movement of the cursor will be ignored.\n        To increase these values is to trade off responsiveness and precision\n        respectively. Either number can be zero if desired. Note that the effect\n        of the sticky radius is *not* shown on-screen!\n\n        For example, --stabilize-virtual-cursor=0.1,10 will smooth out movements\n        such that sharp movements take about half a second to complete, while\n        movements within a 10px radius will be completely ignored.\n\nGraphics driver options:\n    --gles1=...\n        Force touchHLE to use a particular OpenGL ES 1.1 implementation.\n        This may be useful for troubleshooting graphics driver issues.\n\n        --gles1=gles1_on_gl2 will use touchHLE's GLES1-on-GL2 layer.\n        --gles1=gles1_native will use native OpenGL ES 1.1.\n\n        When this option isn't in use, touchHLE will try each in order and use\n        the first one that works.\n\nDebugging options:\n    --disable-direct-memory-access\n        Force dynarmic to always access guest memory via the memory access\n        callbacks, rather than using the fast direct access path (page tables).\n\n    --gdb=...\n        Starts touchHLE in debugging mode, listening for GDB remote serial\n        protocol connections over TCP on the specified host and port.\n\n        You can then connect to touchHLE with GDB and make use of its features\n        to inspect memory and registers, set up software breakpoints, and\n        continue or step execution.\n\n        The host and port should be separated by a colon. The host can be a\n        host name or an IP address. IPv6 addresses should be enclosed in square\n        brackets, e.g. --gdb=[::1]:9001 for IPv6 loopback device port 9001.\n\nOther options:\n    --preferred-languages=...\n        Specifies a list of preferred languages to be reported to the app.\n\n        This should be one or more ISO 639 language codes (usually two letters)\n        in order of preference, separated by commas. For example,\n        --preferred-languages=de,ja,en means you would prefer German, or failing\n        that Japanese, or failing that English.\n\n        If this option is not specified, the list comes from your operating\n        system's language settings.\n\n        Whether and how this preference is respected, and whether any particular\n        language is supported, is determined entirely by the app.\n\n    --headless\n        Run in headless mode. touchHLE will not create a window, so there will\n        be no graphical output and no input. Only useful for command-line apps.\n\n    --print-fps\n        Logs the current framerate (FPS) to the console once per second.\n\n    --fps-limit=...\n        Modify or disable the framerate (FPS) limit.\n\n        By default, touchHLE limits the framerate of an app to 60fps, because\n        this is required for accurate emulation. Some apps can however run\n        correctly at a higher framerate than normal.\n\n        This is either 'off', to disable the framerate limit, or otherwise\n        a floating-point (decimal) number of frames per second.\n\n        Note that many apps have an internal timer that determines how often\n        they present frames; increasing the limit will not increase their\n        framerate, but may make it less consistent.\n\n    --force-composition\n        Forces presentation of renderbuffer as if no fullscreen EAGL layer is\n        present, i.e. renderbuffer will go through the compositor.\n\n        Enabling this option may solve some rendering issues, but implies\n        a performance hit which is undesirable in most of the cases."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8427734375,
          "content": "# touchHLE: high-level emulator for iPhone OS apps\n\n**touchHLE** is a high-level emulator for iPhone OS apps. It runs on modern desktop operating systems and Android, and is written in Rust.\n\ntouchHLE's high-level emulation (HLE) approach differs from low-level emulation (LLE) in that it does not directly simulate the iPhone/iPod touch hardware. Instead of running iPhone OS inside emulation, touchHLE _itself_ takes the place of iPhone OS and provides its own implementations of the system frameworks (Foundation, UIKit, OpenGL ES, OpenAL, etc). The only code the [emulated CPU](https://github.com/merryhime/dynarmic) executes is the app binary and [a handful of libraries](touchHLE_dylibs/).\n\nThe goal of this project is to run games from the early days of iOS:\n\n* Currently: iPhone and iPod touch apps for iPhone OS 2.x and iPhone OS 3.0.\n* Longer term: iPhone OS 3.1, iPad apps (iPhone OS 3.2), iOS 4.x, …\n* [Never](https://github.com/touchHLE/touchHLE/issues/181#issuecomment-1777098259): 64-bit iOS.\n\nSupport for apps that aren't games isn't a priority: it's more complex and less fun.\n\nThe [touchHLE app compatibility database](https://appdb.touchhle.org/) tracks which apps work in touchHLE. It is a crowdsourced effort to which anyone can contribute.\n\nIf you're curious about the history and motivation behind the project, you might want to read [the original announcement](https://hikari.noyu.me/blog/2023-02-06-touchhle-anouncement-thread-tech-games-me-and-passion-projects.html). For an introduction to some of the technical details, check out [_touchHLE in depth_](https://hikari.noyu.me/blog/2023-04-13-touchhle-in-depth-1-function-calls.html).\n\n**Check out the website for downloads, FAQ, social media, and more:**<br>👉 <https://touchhle.org/> 👈\n\n## Important disclaimer\n\nThis project is not affiliated with or endorsed by Apple Inc in any way. iPhone, iOS, iPod, iPod touch and iPad are trademarks of Apple Inc in the United States and other countries.\n\nOnly use touchHLE to emulate software you have obtained legally.\n\n## Platform support\n\n* Officially supported: x64 Windows, x64 macOS and AArch64 Android.\n  * These are the platforms with binary releases.\n  * If you're an Apple Silicon Mac user, the x64 build reportedly works in Rosetta.\n* Probably works, but you must build it yourself: AArch64 macOS, x64 Linux, AArch64 Linux.\n* Never?: other architectures.\n\nInput methods:\n\n- For simulated touch input, there are four options:\n  - Mouse/trackpad input (tap/hold/drag by pressing the left mouse button)\n  - Virtual cursor using a game controller (move the cursor with the right analog stick , and tap/hold/drag by pressing the stick or the right shoulder button)\n  - Mapping of game controller buttons (see the description of `--button-to-touch=` in `OPTIONS_HELP.txt`)\n  - Real touch input, if you're on a device that has a touch screen\n- For simulated accelerometer input, there are three options:\n  - Tilt control simulation using the left analog stick of a game controller\n  - Tilt control simulation using a mouse (hold down the right mouse button)\n  - Real accelerometer input, if you are using a phone, tablet or some other device with a built-in accelerometer (TODO: support game controllers with accelerometers)\n\n## Development status\n\nThis project has been in development since December 2022. This was originally [hikari\\_no\\_yume](https://hikari.noyu.me/)'s full-time passion project. Since its release in February 2023, a number of other volunteers have also [contributed in their free time](https://github.com/touchHLE/touchHLE/graphs/contributors), and this is no longer a single-person project. There's only been a handful of releases so far and no promises can be made about the future. Please be patient.\n\nIn general, the supported functionality is defined by the supported apps: most contributors are interested in getting a particular game working, and contribute support for whichever missing features are needed for that game. Consequently, the completeness varies a lot between APIs, e.g. UIKit is easily the most hacky and incomplete of the large frameworks that have been implemented, because most games don't use very much of its functionality, whereas the OpenGL ES and OpenAL implementations are probably complete enough to cover a large number of early apps, because games make heavy use of these.\n\n# Usage\n\nFirst obtain touchHLE, either a [binary release](https://github.com/touchHLE/touchHLE/releases) or by building it yourself (see the next section).\n\nYou'll then need an app that you can run. The [app compatibility database](https://appdb.touchhle.org/) is a good guide for which versions of which apps are known to work, but bear in mind that it may contain outdated or inaccurate information. Note that the app binary must be decrypted to be usable.\n\nThere's a few ways you can run an app in touchHLE.\n\n## Special Android notes\n\nWindows, Mac and Linux users can skip this section.\n\nOn Android, only the graphical user interface (app picker) is available. Therefore, you must put your “.ipa” files or “.app” bundles inside the “touchHLE\\_apps” directory. Note that you can only do that once you have run touchHLE at least once.\n\nFile management can be tricky on Android due to [restrictions introduced by Google in newer Android versions](https://developer.android.com/about/versions/11/privacy/storage#scoped-storage). One of these methods may work:\n\n* If you tap the “File manager” button in touchHLE, this should open some sort of file manager. You might also be able to find touchHLE in your device's file manager app (often called “Files”, or sometimes “Downloads”), alongside cloud storage services. There are some limitations on what kinds of operations are possible. The files in this location are stored on your device. Warning: on some devices, the “File manager” button _will_ open a file manager, but it will crash when actually doing file operations (this is probably a bug in Android, we have not been able to debug it). If this happens to you, clear that file manager from your recent apps list and try to navigate to your device's file manager app directly instead, rather than via the touchHLE UI.\n* If you have an older version of Android, you may be able to directly access touchHLE's files by browsing to `/sdcard/Android/data/org.touchhle.android/files/touchHLE_apps`. Note that the `/sdcard` directory is usually not on the SD card.\n* You may be able to use ADB. If you're unfamiliar with ADB, try using <https://yume-chan.github.io/ya-webadb/> (in Google Chrome or another browser with WebUSB) with your device connected over USB. touchHLE's files can be found in “sdcard” > “Android” > “data” > “org.touchhle.android” > “files” > “touchHLE\\_apps”.\n\n## Graphical user interface\n\ntouchHLE has a built-in app picker. If you put your `.ipa` files and `.app` bundles in the `touchHLE_apps` directory, they will show up in the app picker when you run touchHLE.\n\nTo configure the options, you can edit the `touchHLE_options.txt` file. To get a list of options, look in the `OPTIONS_HELP.txt` file.\n\n## Command-line user interface\n\n**This section does not apply on Android.**\n\nYou can see the command-line usage by passing the `--help` flag.\n\nIf you're a Windows user and unfamiliar with the command line, these instructions may help you get started:\n\n1. Move the `.ipa` file or `.app` bundle to the same folder as `touchHLE.exe`.\n2. Hold the Shift key and right-click on the empty space in the folder window.\n3. Click “Open with PowerShell”.\n4. Type `.\\touchHLE.exe \"YourAppNameHere.ipa\"` (or `.app` as appropriate) and press Enter. If you want to specify options, add a space after the app name (outside the quotes) and then type the options, separated by spaces.\n\n## Other stuff\n\nAny data saved by the app (e.g. **saved games**) are stored in the `touchHLE_sandbox` folder.\n\nIf the emulator crashes almost immediately while running a **known-working** version of a game, please check whether you have any overlays turned on like the Steam overlay, Discord overlay, RivaTuner Statistics Server, etc. Sadly, as useful as these tools are, they work by injecting themselves into other apps or games and don't always clean up after themselves, so they can break touchHLE… it's not our fault. 😢 Currently only RivaTuner Statistics Server is known to be a problem. If you find another overlay that doesn't work, please tell us about it.\n\n# Building and contributing\n\nSee the `CONTRIBUTING.md` file in the git repo if you want to contribute. If you just want build touchHLE, look at `dev-docs/building.md`.\n\n# License\n\ntouchHLE © 2023–2024 touchHLE project contributors.\n\nThe source code of touchHLE itself (not its dependencies) is licensed under the Mozilla Public License, version 2.0.\n\nDue to license compatibility concerns, binaries are under the GNU General Public License version 3 or later.\n\nFor a best effort listing of all licenses of dependencies, build touchHLE and pass the `--copyright` flag when running it, or click the “Copyright info” button in the app picker.\n\nPlease note that different licensing terms apply to the bundled dynamic libraries (in `touchHLE_dylibs/`) and fonts (in `touchHLE_fonts/`). Please consult the respective directories for more information.\n\n# Thanks\n\nWe stand on the shoulders of giants. Thank you to:\n\n* Everyone who has contributed to the project or supported any of its contributors financially.\n* The authors of and contributors to the many libraries used by this project: [dynarmic](https://github.com/merryhime/dynarmic), [rust-macho](https://github.com/flier/rust-macho), [SDL](https://libsdl.org/), [rust-sdl2](https://github.com/Rust-SDL2/rust-sdl2), [stb\\_image](https://github.com/nothings/stb), Imagination Technologies' [PVRTC decompressor](https://github.com/powervr-graphics/Native_SDK/blob/master/framework/PVRCore/texture/PVRTDecompress.cpp), [openal-soft](https://github.com/kcat/openal-soft), [hound](https://github.com/ruuda/hound), [caf](https://github.com/rustaudio/caf), [Symphonia](https://github.com/pdeljanov/Symphonia), [RustType](https://gitlab.redox-os.org/redox-os/rusttype), [the Liberation fonts](https://github.com/liberationfonts/liberation-fonts), [the Noto CJK fonts](https://github.com/googlefonts/noto-cjk), [rust-plist](https://github.com/ebarnard/rust-plist), [quick-xml](https://github.com/tafia/quick-xml), [gl-rs](https://github.com/brendanzab/gl-rs), [cargo-license](https://github.com/onur/cargo-license), [cc-rs](https://github.com/rust-lang/cc-rs), [cmake-rs](https://github.com/rust-lang/cmake-rs), [cargo-ndk](https://github.com/bbqsrc/cargo-ndk), [cargo-ndk-android-gradle](https://github.com/willir/cargo-ndk-android-gradle), [md5](https://github.com/stainless-steel/md5), [yore](https://github.com/bonega/yore), [encoding_rs](https://github.com/hsivonen/encoding_rs), and the Rust standard library.\n* The Skyline emulator project (RIP), for [writing the tedious boilerplate needed to replace file management on newer Android versions](https://github.com/skyline-emu/skyline/blob/dc20a615275f66bee20a4fd851ef0231daca4f14/app/src/main/java/emu/skyline/provider/DocumentsProvider.kt).\n* The [Rust project](https://www.rust-lang.org/) generally.\n* The various people out there who've documented the iPhone OS platform, officially or otherwise. Much of this documentation is linked to within this codebase!\n* The iOS hacking/jailbreaking community.\n* The Free Software Foundation, for making libgcc and libstdc++ copyleft and therefore saving this project from ABI hell.\n* The National Security Agency of the United States of America, for [Ghidra](https://ghidra-sre.org/).\n* [GerritForge](http://www.gerritforge.com/) for providing free Gerrit hosting to the general public, including us.\n* The many contributors to [Gerrit](https://www.gerritcodereview.com/).\n* Many friends who took an interest in the project and gave suggestions and encouragement.\n* Developers of early iPhone OS apps. What treasures you created!\n* Apple, and NeXT before them, for creating such fantastic platforms.\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 4.34375,
          "content": "/*\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nuse cargo_license::{get_dependencies_from_cargo_lock, GetDependenciesOpt};\nuse std::fmt::Write;\nuse std::path::{Path, PathBuf};\n\nfn rerun_if_changed(path: &Path) {\n    println!(\"cargo:rerun-if-changed={}\", path.to_str().unwrap());\n}\n\npub fn main() {\n    let out_dir = PathBuf::from(std::env::var(\"OUT_DIR\").unwrap());\n    let package_root = Path::new(env!(\"CARGO_MANIFEST_DIR\"));\n\n    // Generate a list of dependencies with license and author information.\n    // This is used in license.rs\n\n    let deps = get_dependencies_from_cargo_lock(\n        Default::default(),\n        GetDependenciesOpt {\n            // The goal is to get a list of dependencies which are used in the\n            // final binary, so we can comply with license terms for binary\n            // distribution. Therefore, dev- and build-time dependencies don't\n            // matter.\n            avoid_dev_deps: true,\n            avoid_build_deps: true,\n            direct_deps_only: false,\n            root_only: false,\n        },\n    )\n    .unwrap();\n    let mut deps_string = String::new();\n    for dep in deps {\n        // Exclude internal packages, they all use the same license and are\n        // handled specially.\n        if dep.name.starts_with(\"touchHLE\") {\n            continue;\n        }\n\n        write!(&mut deps_string, \"- {} version {}\", dep.name, dep.version).unwrap();\n        if let Some(authors) = dep.authors {\n            let authors: Vec<&str> = authors.split('|').collect();\n            write!(&mut deps_string, \" by {}\", authors.join(\", \")).unwrap();\n        } else {\n            write!(&mut deps_string, \" (author unspecified)\").unwrap();\n        }\n        if let Some(license) = dep.license {\n            write!(&mut deps_string, \", licensed under {}\", license).unwrap();\n        } else {\n            panic!(\"Dependency {} has an unspecified license!\", dep.name);\n        }\n        writeln!(&mut deps_string).unwrap();\n    }\n\n    std::fs::write(out_dir.join(\"rust_dependencies.txt\"), deps_string).unwrap();\n\n    rerun_if_changed(&package_root.join(\"Cargo.lock\"));\n\n    // Summarise the licensing of Dynarmic\n\n    let dynarmic_readme_path = package_root.join(\"vendor/dynarmic/README.md\");\n    let dynarmic_readme = std::fs::read_to_string(&dynarmic_readme_path).unwrap();\n    rerun_if_changed(&dynarmic_readme_path);\n    let dynarmic_license_path = package_root.join(\"vendor/dynarmic/LICENSE.txt\");\n    let dynarmic_license = std::fs::read_to_string(&dynarmic_license_path).unwrap();\n    rerun_if_changed(&dynarmic_license_path);\n\n    // Attempt to support Windows where git autocrlf may confuse things.\n    let dynarmic_readme = dynarmic_readme.replace(\"\\r\\n\", \"\\n\");\n    let (_, dynarmic_legal) = dynarmic_readme.split_once(\"\\nLegal\\n-----\\n\").unwrap();\n    // Strip out the code block start and end lines. They're visual noise when\n    // displayed in ASCII and there's one of these that ends up as its own page\n    // in the license text viewer!\n    let dynarmic_legal = dynarmic_legal.replace(\"\\n```\\n\", \"\\n\");\n    let dynarmic_license_oneline =\n        \"dynarmic is under a 0BSD license. See LICENSE.txt for more details.\";\n    assert!(dynarmic_legal.contains(dynarmic_license_oneline));\n    let dynarmic_summary = dynarmic_legal.replace(dynarmic_license_oneline, &dynarmic_license);\n    std::fs::write(out_dir.join(\"dynarmic_license.txt\"), dynarmic_summary).unwrap();\n\n    // libc++_shared.so has to be copied into the APK. See README of cargo-ndk.\n    if std::env::var(\"CARGO_CFG_TARGET_OS\").unwrap() == \"android\" {\n        println!(\"cargo:rustc-link-lib=c++_shared\");\n        let sysroot_libs_path =\n            PathBuf::from(std::env::var_os(\"CARGO_NDK_SYSROOT_LIBS_PATH\").unwrap());\n        let lib_path = sysroot_libs_path.join(\"libc++_shared.so\");\n        std::fs::copy(\n            lib_path,\n            // cargo-ndk as invoked by cargo-ndk-android-gradle actually\n            // copies from the target directory, using this hacky path\n            // concatenation approach. :(\n            package_root\n                .join(\"target\")\n                .join(std::env::var(\"TARGET\").unwrap())\n                .join(std::env::var(\"PROFILE\").unwrap())\n                .join(\"libc++_shared.so\"),\n        )\n        .unwrap();\n    }\n}\n"
        },
        {
          "name": "dev-docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "touchHLE_apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "touchHLE_default_options.txt",
          "type": "blob",
          "size": 8.5546875,
          "content": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at https://mozilla.org/MPL/2.0/.\n#\n# ---\n#\n# This file contains touchHLE's recommended default options for various apps.\n#\n# *** Don't edit this file yourself! Use touchHLE_options.txt instead. ***\n#\n# ---\n#\n# Each line in this file specifies options for an app; there should only be one\n# line per app. A line should consist of the identifier for an app, followed by\n# a colon (:), followed by the options to apply. To find out an app's\n# identifier, you can run it in touchHLE and look at the “App bundle info”\n# output. To get a list of possible options, see OPTIONS_HELP.txt or run\n# touchHLE with the --help flag.\n#\n# Text on a line following a hash sign (#) is treated as a comment and ignored.\n# Empty lines are also ignored.\n#\n# Guidelines for default options:\n# - Even if an app supports auto-rotation, it's good to specify the required\n#   orientation anyway, so that it doesn't display in the wrong orientation for\n#   a few seconds during startup.\n# - The scale hack is not exactly faithful to the original experience, and there\n#   is no scale factor that works for everyone, so it shouldn't be used here.\n# - Use --button-to-touch= for convenience if it's a game playable with the\n#   accelerometer and has touch targets in predictable locations.\n# - Use --stabilize-virtual-cursor= if the game's menus are practically unusable\n#   without it.\n\n# Super Monkey Ball and Super Monkey Ball Lite\n# B = speed up level intro, Start = pause\ncom.ooi.supermonkeyball: --landscape-left --y-tilt-offset=24 --button-to-touch=B,470,160 --button-to-touch=Start,240,10\nsmblite: --landscape-left --y-tilt-offset=24 --button-to-touch=B,470,160 --button-to-touch=Start,240,10\n\n# Crash Bandicoot Nitro Kart 3D\n# A = jump/drift, B = brake, Start = pause, X/Y = use item\ncom.vgmobile.cnk2: --landscape-left --button-to-touch=A,240,160 --button-to-touch=B,240,310 --button-to-touch=Start,10,310 --button-to-touch=Y,470,310 --button-to-touch=X,446,30\n\n# Mystery Mania\ncom.ea.mysterymania.inc: --landscape-left\n\n# Fastlane Street Racing\n# A = accelerate, B = brake, X = Camera, Start = Pause\ncom.atodab.actane: --landscape-left --button-to-touch=A,430,300 --button-to-touch=B,30,300 --button-to-touch=X,15,15 --button-to-touch=Start,470,15\n\n# Wolfenstein 3D\ncom.idsoftware.wolf3d: --landscape-right\n\n# Spore Origins\ncom.ea.spore.naj.efigsj: --landscape-left --y-tilt-offset=35\n\n# KataDama (I Love Katamari)\ncom.namconetworks.katamari: --landscape-left --stabilize-virtual-cursor=0.1,10 --y-tilt-offset=24 --button-to-touch=Start,240,15\n\n# Wolfenstein RPG\ncom.eamobile.wolfbv: --landscape-left --stabilize-virtual-cursor=0.1,10 --button-to-touch=A,240,160 --button-to-touch=B,240,280 --button-to-touch=X,26,280 --button-to-touch=Y,454,280 --button-to-touch=DPadLeft,34,178 --button-to-touch=DPadUp,76,140 --button-to-touch=DPadRight,116,180 --button-to-touch=DPadDown,76,220\ncom.eamobile.wolfinc: --landscape-left --stabilize-virtual-cursor=0.1,10 --button-to-touch=A,240,160 --button-to-touch=B,240,280 --button-to-touch=X,26,280 --button-to-touch=Y,454,280 --button-to-touch=DPadLeft,34,178 --button-to-touch=DPadUp,76,140 --button-to-touch=DPadRight,116,180 --button-to-touch=DPadDown,76,220\n\n# Doom II RPG\ncom.idsoftware.Doom2rpg: --landscape-left --stabilize-virtual-cursor=0.1,10 --button-to-touch=A,240,160 --button-to-touch=B,240,280 --button-to-touch=X,176,280 --button-to-touch=Y,320,280 --button-to-touch=DPadLeft,34,178 --button-to-touch=DPadUp,76,140 --button-to-touch=DPadRight,116,180 --button-to-touch=DPadDown,76,220\n\n# Tony Hawk's Pro Skater 2\n# A = Jump, B = Grab, X = Flip, Y = Grind, Start = Pause\ncom.activision.thps2: --landscape-left --button-to-touch=DPadLeft,30,235 --button-to-touch=DPadUp,85,180 --button-to-touch=DPadRight,135,235 --button-to-touch=DPadDown,85,285 --button-to-touch=Start,240,30 --button-to-touch=A,395,280 --button-to-touch=B,445,230 --button-to-touch=X,345,230 --button-to-touch=Y,395,185\n\n# Head2Head\ncom.darxun: --landscape-right --y-tilt-offset=24\n\n# Jackpot Casino\ncom.chillingo.jackpotcasino: --landscape-right\n\n# MotoRacing GP\n# A = wheelie, B = restore\ncom.darxun.motoracinggp: --landscape-right --button-to-touch=A,25,295 --button-to-touch=B,115,295\n\n# Warrior Nation Blade\n# Left/Right = Walk, A = Attack, B = Defend, X = Magic, Y = Secondary Attack, LeftShoulder = Special, Start = Pause\ncom.bestsungame.warriornationblade:  --button-to-touch=DPadLeft,50,285 --button-to-touch=DPadRight,120,285 --button-to-touch=A,430,260 --button-to-touch=B,440,185 --button-to-touch=X,360,280 --button-to-touch=Y,230,270 --button-to-touch=LeftShoulder,270,30 --button-to-touch=Start,460,20\n\n# Resident Evil 4\njp.co.capcom.res4: --landscape-left --stabilize-virtual-cursor=0.1,10 --button-to-touch=A,430,280 --button-to-touch=B,440,200 --button-to-touch=X,360,200 --button-to-touch=Y,440,150 --button-to-touch=DPadLeft,25,247 --button-to-touch=DPadUp,72,200 --button-to-touch=DPadRight,120,247 --button-to-touch=DPadDown,72,300\n\n# Earthworm Jim\n# Up/Down/Left/Right = Move, A = Jump, B = Whip, X = Fire\n# Note: \"Force composition\" flag is needed to fix broken render in the level select screen.\ncom.gameloft.Earthworm: --landscape-left --button-to-touch=DPadUp,72,194 --button-to-touch=DPadDown,72,278 --button-to-touch=DPadLeft,30,238 --button-to-touch=DPadRight,110,238 --button-to-touch=A,442,284 --button-to-touch=X,378,248 --button-to-touch=B,442,212 --button-to-touch=Start,448,32 --force-composition\n\n# TV Show King\ncom.gameloft.TVSK: --landscape-right\n\n# CSI: Miami\ncom.gameloft.csimiami: --landscape-left\n\n# MLB World Series 2009\ncom.mlb.mlb2009: --landscape-left\n\n# Wave Blazer\ncom.polarbit.waveblazer: --landscape-left\n\n# Command & Conquer: Red Alert\ncom.ea.candcra.row: --landscape-left\n\n# Defender chronicles\ncom.chillingo.defenderchronicles: --landscape-left\n\n# SimCity\n# (we neeed to force language to avoid a crash)\ncom.ea.simcitybv: --preferred-languages=en\ncom.ea.simcityinc: --preferred-languages=en\n\n# Tom Clancy's Splinter Cell: Conviction\n# Note: \"Force composition\" flag is needed to fix broken render after the first level.\ncom.gameloft.SplinterCell: --force-composition\n\n# Iron Man\n# A = Fire, X = Dodge (on Level Tutorial 1), B = Dodge (on other levels), Start = Pause\ncom.paramount.IronMan: --landscape-right --button-to-touch=A,450,160 --button-to-touch=X,40,255 --button-to-touch=B,40,164 --button-to-touch=Start,60,20\n\n# Prince of Persia: Warrior Within\n# Notice that for directional buttons to work, first you need to go to Options > Controls and choose Virtual Pad\n# DPad = Walk, A = Sword, B = Defense, X = Jump, Y = Grab, Start = Pause, LeftShoulder = Resume\ncom.gameloft.POP: --landscape-left --button-to-touch=DPadUp,90,190 --button-to-touch=DPadRight,135,235 --button-to-touch=DPadDown,90,280 --button-to-touch=DPadLeft,45,235 --button-to-touch=A,340,280 --button-to-touch=B,385,220 --button-to-touch=X,445,175 --button-to-touch=Y,460,300 --button-to-touch=Start,21,28 --button-to-touch=LeftShoulder,240,100\n\n# Shrek 4 / Forever After\n# Notice that for directional buttons to work, first you need to go to Options > Controls and choose Virtual Pad\n# DPad = Walk, A = Punch, X = Jump, Y = Skip (cutscenes), Start = Pause\ncom.gameloft.Shrek4: --landscape-left --button-to-touch=DPadDown,44,278 --button-to-touch=DPadUp,52,224 --button-to-touch=DPadLeft,32,243 --button-to-touch=DPadRight,144,234 --button-to-touch=A,344,277 --button-to-touch=X,437,231 --button-to-touch=Start,33,28 --button-to-touch=Y,409,18\ncom.gameloft.Shrek4Free: --landscape-left --button-to-touch=DPadDown,44,278 --button-to-touch=DPadUp,52,224 --button-to-touch=DPadLeft,32,243 --button-to-touch=DPadRight,144,234 --button-to-touch=A,344,277 --button-to-touch=X,437,231 --button-to-touch=Start,33,28 --button-to-touch=Y,409,18\n\n# Asphalt 4 Elite Racing\n# DPad = left and right, A = Nitro, X = Brake, Start = Pause\ncom.gameloft.ASPHALT4: --button-to-touch=DPadLeft,30,300 --button-to-touch=DPadRight,300,300 --button-to-touch=A,298,385 --button-to-touch=X,230,425 --button-to-touch=Start,20,20\n\n# Asphalt 5\n# A = Nitro, B = Brake, Start = Pause\ncom.gameloft.Asphalt5: --landscape-left --button-to-touch=A,415,295 --button-to-touch=B,60,300 --button-to-touch=Start,25,25\n\n# Skater Nation\n# DPad, A = A, B = B, Start = Pause, LeftShoulder = Resume\ncom.gameloft.SkateNation: --landscape-left --button-to-touch=DPadLeft,45,237 --button-to-touch=DPadRight,132,237 --button-to-touch=DPadUp,90,190 --button-to-touch=DPadDown,90,280 --button-to-touch=A,435,275 --button-to-touch=B,350,240 --button-to-touch=Start,450,25 --button-to-touch=LeftShoulder,25,300\n"
        },
        {
          "name": "touchHLE_dylibs",
          "type": "tree",
          "content": null
        },
        {
          "name": "touchHLE_fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "touchHLE_options.txt",
          "type": "blob",
          "size": 0.6806640625,
          "content": "# This file lets you specify the options you want to use for various apps.\n#\n# Options in this file take precedence over ones in touchHLE_default_options.txt\n#\n# ---\n#\n# Each line in this file specifies options for an app; there should only be one\n# line per app. A line should consist of the identifier for an app, followed by\n# a colon (:), followed by the options to apply. To find out an app's\n# identifier, you can run it in touchHLE and look at the “App bundle info”\n# output. To get a list of possible options, see OPTIONS_HELP.txt or run\n# touchHLE with the --help flag.\n#\n# Text on a line following a hash sign (#) is treated as a comment and ignored.\n# Empty lines are also ignored.\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}