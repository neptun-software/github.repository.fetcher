{
  "metadata": {
    "timestamp": 1736709137136,
    "page": 331,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DeterminateSystems/nix-installer",
      "stars": 2443,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "target\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.6640625,
          "content": "root = true\n\n# Unix-style newlines with a newline ending every file, utf-8 charset\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\n\n# Rust\n[*.rs]\nindent_style = space\n\n# Misc\n[*.{yaml,yml,nix,json,sh,service,socket,toml,te}]\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\n\n[*.md]\ninsert_final_newline = true\nindent_style = space\n\n[*.plist]\nindent_style = tab\n\n[*.ps1]\nindent_style = space\nindent_size = 4\n\n[Cargo.lock]\nindent_style = space\nindent_size = 1\n\n# selinux\n[*.pp]\ncharset = unset\nend_of_line = unset\nindent_size = unset\nindent_style = unset\ninsert_final_newline = unset\ntrim_trailing_whitespace = unset\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.009765625,
          "content": "use flake\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0654296875,
          "content": "/target\n.ci-store\n.direnv\nresult*\nsrc/action/linux/selinux/nix.mod\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.462890625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socioeconomic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[coc-grahamc@determinate.systems](coc-grahamc@determinate.systems) or [coc-ana@determinate.systems](coc-ana@determinate.systems) .\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 15.205078125,
          "content": "# Contributing to `nix-installer`\n\nWe're excited to see what you'd like to contribute to `nix-installer`!\n\nRegardless of what (or how much) you contribute to `nix-installer`, we value your time\nand energy trying to improve the tool.\n\nIn order to ensure we all have a good experience, please review this document\nif you have any questions about the process.\n\n**Regular Rust committer?** Contributing to `nix-installer` should feel similar to\ncontributing to other serious Rust ecosystem projects. You may already know\nthe process and expectations of you, this document shouldn't contain any\nsurprises.\n\n# What kinds of contributions are needed?\n\n`nix-installer` can benefit from all kinds of contributions:\n\n- Bug reports\n- Code improvements\n- Registry additions\n- Dependency updates or dependency feature trimming\n- New features (Please create an issue first!)\n- Documentation\n- Graphical/visual asset improvement\n- Kind words or recommendation on your own site, repo, stream, or social media\n  account\n- Onboarding others to using `nix-installer`\n\n# What are the expectations you can have of the maintainers?\n\nYou can expect us to:\n\n- Follow the [Contributor Covenant](CODE_OF_CONDUCT.md), just like you\n- Help diagnose bug reports (for supported platforms using supported\n  languages)\n- Give constructive feedback on pull requests\n- Merge pull requests which:\n  - Have been approved of by at least 1 maintainer\n  - Pass all tests\n  - Have no complex conflicts with in-flight high priority work\n\nThe maintainers of this project use a separate issue tracker for some internal\ntasks. Unfortunately, the contents of this tracker is not publicly visible as\nit may contain sensitive or confidential data. Our maintainers will endeavor to\nensure you are not 'left out' of the discussion about your contributions.\n\n# What kind of expectations do the maintainers have from you?\n\nWe expect you to:\n\n- Follow the [Contributor Covenant](CODE_OF_CONDUCT.md), just like them\n- Make an earnest attempt to follow the contribution process described in this\n  document\n- Update bug reports with a solution, if you find one before we do\n- Do your best to follow existing conventions\n- Reflect maintainer feedback if you are able\n- Declare if you need to abandon a PR so someone else can shepherd it\n\n# How exactly does the contribution process work?\n\nHere are how to do various kinds of contributions.\n\n## Bug Reports\n\nCreate an issue on [the issue page](https://github.com/DeterminateSystems/nix-installer/issues).\n\nIt should contain:\n\n1. Your OS (Linux, Mac) and architecture (x86_64, aarch64)\n2. Your `nix-installer` version (`/nix/nix-installer --version`)\n3. The thing you tried to run (eg `nix-installer`)\n4. What happened (the output of the command, please)\n5. What you expected to happen\n6. If you tried to fix it, what did you try?\n\n## Code/Documentation improvement\n\nFor **minor** fixes, documentation, or changes which **do not** have a\ntangible impact on user experience, feel free to open a\n[pull request](https://github.com/DeterminateSystems/nix-installer/pulls) directly.\n\nIf the code improvement is not minor, such as new features or user facing\nchanges, an [issue](https://github.com/DeterminateSystems/nix-installer/issues)\nproposing the change is **required** for non-maintainers.\n\nPlease:\n\n- Write civil commit messages, it's ok if they are simple like `fmt`\n  or `formatting`\n- Follow existing conventions and style within the code the best you can\n- Describe in your PR the problem and solution so reviewers don't need to\n  rebuild much context\n- Run `nix flake check` and `nix build`\n\n## Non-code contributions\n\nPlease open an [issue](https://github.com/DeterminateSystems/nix-installer/issues)\nto chat about your contribution and figure out how to best integrate it into\nthe project.\n\n# Development\n\nSome snippets or workflows for development.\n\n## Direnv support\n\nWhile `nix develop` should work perfectly fine for development, contributors may prefer to enable [`direnv`](https://direnv.net/) or [`nix-direnv`](https://github.com/nix-community/nix-direnv) support.\n\nFrom the project folder:\n\n```bash\ndirenv allow\n```\n\nIf using an editor, it may be preferable to adopt an addon to enter the environment:\n\n- [`vim`](https://github.com/direnv/direnv.vim)\n- [VSCode](https://marketplace.visualstudio.com/items?itemName=mkhl.direnv)\n\n## Testing Installs\n\nIf you're hacking on `nix-installer`, you likely already have Nix and cannot test locally.\n\n> That's probably a good thing! You should test in a sandbox.\n\nAutomated [`qemu` tests][#qemu-vm-tests] exist and should be preferred for oneshot testing of changes.\n\nFor interactive testing, tools like [`libvirt`](https://libvirt.org/) via [`virt-manager`](https://virt-manager.org/) or [`vagrant`](https://www.vagrantup.com/) can be used to spin up machines and run experiments.\n\nWhen running such interactive tests, consider creating a snapshot of the VM right before running the installer, so you can quickly roll back if something happens.\n\nIn general, it's a good idea to test on the closest you can get to the desired target environment. For example, when testing the Steam Deck planner it's a good idea to run that test in a Steam Deck VM as described in detail in the planner.\n\n<details>\n  <summary><strong>Adding a planner for specific hardware?</strong></summary>\n\nPlease include an full guide on how to create the best known virtual testing environment for that device.\n\n**A link is not sufficient, it may break.** Please provide a full summary of steps to take, link to any original source and give them credit if it is appropriate.\n\nIt's perfectly fine if they are manual or labor intensive, as these should be a one time thing and get snapshotted prior to running tests.\n\n</details>\n\n## `qemu` VM tests\n\nFor x86_64 Linux we have some additional QEMU based tests. In `nix/tests/vm-test` there exists some Nix derivations which we expose in the flake via `hydraJobs`.\n\nThese should be visible in `nix flake show`:\n\n```\n❯ nix flake show\nwarning: Git tree '/home/ana/git/determinatesystems/nix-installer' is dirty\ngit+file:///home/ana/git/determinatesystems/nix-installer\n# ...\n├───hydraJobs\n│   └───vm-test\n│       ├───all\n│       │   └───x86_64-linux\n│       │       └───install-default: derivation 'all'\n│       ├───fedora-v36\n│       │   └───x86_64-linux\n│       │       └───install-default: derivation 'installer-test-fedora-v36-install-default'\n│       ├───rhel-v7\n│       │   └───x86_64-linux\n│       │       └───install-default: derivation 'installer-test-rhel-v7-install-default'\n│       ├───rhel-v8\n│       │   └───x86_64-linux\n│       │       └───install-default: derivation 'installer-test-rhel-v8-install-default'\n│       ├───rhel-v9\n│       │   └───x86_64-linux\n│       │       └───install-default: derivation 'installer-test-rhel-v9-install-default'\n│       └───ubuntu-v22_04\n│           └───x86_64-linux\n│               └───install-default: derivation 'installer-test-ubuntu-v22_04-install-default'\n```\n\nTo run all of the currently supported tests:\n\n```bash\nnix build .#hydraJobs.vm-test.all.x86_64-linux.all -L\n```\n\nTo run a specific distribution listed in the `nix flake show` output:\n\n```bash\nnix build .#hydraJobs.vm-test.rhel-v7.x86_64-linux.all -L -j 4\n```\n\n> You may wish to set `-j 4` to some other number. Some OS's (Ubuntu 16.04) exhibit problems rapidly updating their users/groups on a system running dozens of VMs.\n\nFor PR review, you can also test arbitrary branches or checkouts like so:\n\n```bash\nnix build github:determinatesystems/nix-installer/${BRANCH}#hydraJobs.vm-test.ubuntu-v22_04.x86_64-linux.install-default -L\n```\n\n<details>\n  <summary><strong>Adding a distro?</strong></summary>\n\nNotice how `rhel-v7` has a `v7`, not just `7`? That's so the test output shows correctly, as Nix will interpret the first `-\\d` (eg `-7`, `-123213`) as a version, and not show it in the output.\n\nUsing `v7` instead turns:\n\n```\n# ...\ninstaller-test-rhel> Unpacking Vagrant box /nix/store/8maga4w267f77agb93inbg54whh5lxhn-libvirt.box...\ninstaller-test-rhel> Vagrantfile\ninstaller-test-rhel> box.img\ninstaller-test-rhel> info.json\ninstaller-test-rhel> metadata.json\ninstaller-test-rhel> Formatting './disk.qcow2', fmt=qcow2 cluster_size=65536 extended_l2=off compression_type=zlib size=137438953472 backing_file=./box.img backing_fmt=qcow2 lazy_refcounts=off refcount_bits=16\n# ...\n```\n\nInto this:\n\n```\n# ...\ninstaller-test-rhel-v7-install-default> Unpacking Vagrant box /nix/store/8maga4w267f77agb93inbg54whh5lxhn-libvirt.box...\ninstaller-test-rhel-v7-install-default> Vagrantfile\ninstaller-test-rhel-v7-install-default> box.img\ninstaller-test-rhel-v7-install-default> info.json\ninstaller-test-rhel-v7-install-default> metadata.json\ninstaller-test-rhel-v7-install-default> Formatting './disk.qcow2', fmt=qcow2 cluster_size=65536 extended_l2=off compression_type=zlib size=137438953472 backing_file=./box.img backing_fmt=qcow2 lazy_refcounts=off refcount_bits=16\n# ...\n```\n\n</details>\n\n## Container tests\n\nFor x86_64 Linux we have some additional container tests. In `nix/tests/container-test` there exists some Nix derivations which we expose in the flake via `hydraJobs`.\n\nThese should be visible in `nix flake show`:\n\n```\n❯ nix flake show\nwarning: Git tree '/home/ana/git/determinatesystems/nix-installer' is dirty\ngit+file:///home/ana/git/determinatesystems/nix-installer\n# ...\n├───hydraJobs\n│   ├───container-test\n│   │   ├───all\n│   │   │   └───x86_64-linux\n│   │   │       ├───all: derivation 'all'\n│   │   │       ├───docker: derivation 'all'\n│   │   │       └───podman: derivation 'all'\n│   │   ├───ubuntu-v18_04\n│   │   │   └───x86_64-linux\n│   │   │       ├───all: derivation 'all'\n│   │   │       ├───docker: derivation 'vm-test-run-container-test-ubuntu-v18_04'\n│   │   │       └───podman: derivation 'vm-test-run-container-test-ubuntu-v18_04'\n│   │   ├───ubuntu-v20_04\n│   │   │   └───x86_64-linux\n│   │   │       ├───all: derivation 'all'\n│   │   │       ├───docker: derivation 'vm-test-run-container-test-ubuntu-v20_04'\n│   │   │       └───podman: derivation 'vm-test-run-container-test-ubuntu-v20_04'\n│   │   └───ubuntu-v22_04\n│   │       └───x86_64-linux\n│   │           ├───all: derivation 'all'\n│   │           ├───docker: derivation 'vm-test-run-container-test-ubuntu-v22_04'\n│   │           └───podman: derivation 'vm-test-run-container-test-ubuntu-v22_04'\n```\n\nTo run all of the currently supported tests:\n\n```bash\nnix build .#hydraJobs.container-test.all.x86_64-linux.all -L -j 4\n```\n\n> You may wish to set `-j 4` to some other number. Some OS's (Ubuntu 16.04) exhibit problems rapidly updating their users/groups on a system running dozens of VMs.\n\nTo run a specific distribution listed in the `nix flake show` output:\n\n```bash\nnix build .#hydraJobs.container-test.ubuntu-v22_04.x86_64-linux.docker -L\n```\n\nFor PR review, you can also test arbitrary branches or checkouts like so:\n\n```bash\nnix build github:determinatesystems/nix-installer/${BRANCH}#hydraJobs.container-test.ubuntu-v22_04.x86_64-linux.podman -L\n```\n\n<details>\n  <summary><strong>Adding a distro?</strong></summary>\n\nNotice how `ubuntu-v20_02` has a `v20`, not just `20`? That's so the test output shows correctly, as Nix will interpret the first `-\\d` (eg `-20`, `-123213`) as a version, and not show it in the output.\n\nUsing `v20` instead turns:\n\n```\n# ...\nvm-test-run-container-test-ubuntu> machine # [   23.385182] dhcpcd[670]: vethae56f366: deleting address fe80::c036:c8ff:fe04:5832\nvm-test-run-container-test-ubuntu> machine # this derivation will be built:\nvm-test-run-container-test-ubuntu> machine #   /nix/store/9qb0l9n1gsmcyynfmndnq3qpmlvq8rln-foo.drv\nvm-test-run-container-test-ubuntu> machine # [   23.424605] dhcpcd[670]: vethae56f366: removing interface\nvm-test-run-container-test-ubuntu> machine # building '/nix/store/9qb0l9n1gsmcyynfmndnq3qpmlvq8rln-foo.drv'...\nvm-test-run-container-test-ubuntu> machine # [   23.371066] systemd[1]: crun-buildah-buildah1810857047.scope: Deactivated successfully.\n# ...\n```\n\nInto this:\n\n```\n# ...\nvm-test-run-container-test-ubuntu-v18_04> machine # [   23.385182] dhcpcd[670]: vethae56f366: deleting address fe80::c036:c8ff:fe04:5832\nvm-test-run-container-test-ubuntu-v20_04> machine # this derivation will be built:\nvm-test-run-container-test-ubuntu-v20_04> machine #   /nix/store/9qb0l9n1gsmcyynfmndnq3qpmlvq8rln-foo.drv\nvm-test-run-container-test-ubuntu-v18_04> machine # [   23.424605] dhcpcd[670]: vethae56f366: removing interface\nvm-test-run-container-test-ubuntu-v20_04> machine # building '/nix/store/9qb0l9n1gsmcyynfmndnq3qpmlvq8rln-foo.drv'...\nvm-test-run-container-test-ubuntu-v20_04> machine # [   23.371066] systemd[1]: crun-buildah-buildah1810857047.scope: Deactivated successfully.\n# ...\n```\n\n</details>\n\n## WSL tests\n\nOn a Windows Machine with WSL2 enabled (and updated to [support systemd](https://ubuntu.com/blog/ubuntu-wsl-enable-systemd)) you can test using WSL the scripts in `tests/windows`:\n\n```powershell\n.\\tests\\windows\\test-wsl.ps1\n.\\tests\\windows\\test-wsl.ps1 -Systemd\n```\n\nIf something breaks you may need to unregister the test WSL instance. First, look for the distro prefixed with `nix-installer-test`:\n\n```powershell\n$ wsl --list\nWindows Subsystem for Linux Distributions:\nUbuntu (Default)\nnix-installer-test-ubuntu-jammy\n```\n\nThen delete it:\n\n```powershell\nwsl --unregister nix-installer-test-ubuntu-jammy\n```\n\nYou can also remove your `$HOME/nix-installer-wsl-tests-temp` folder whenever you wish.\n\n# Releases\n\nThis package uses [Semantic Versioning](https://semver.org/). When determining the version number for a new release refer to Semantic Versioning for guidance. You can use the `check-semver` command alias from within the development environment to validate your changes don't break semver.\n\nTo cut a release:\n\n- Create a release branch from `main` (`git checkout -b release-v0.0.1`)\n  - Release PRs should not contain any installer-related changes which require review\n- Ensure the `flake.lock`, `Cargo.lock`, and Rust dependencies are up-to-date with the following:\n  - `nix flake update --commit-lock-file`\n  - `cargo update --aggressive`\n  - `cargo outdated --ignore-external-rel --aggressive`\n- Ensure the VM / container tests still pass with the following:\n  - NOTE: At time of writing, these are run in CI on release branches\n  - `nix flake check -L`\n  - `nix build .#hydraJobs.container-test.all.x86_64-linux.all -L -j 6`\n  - `nix build .#hydraJobs.vm-test.all.x86_64-linux.all -L -j 6`\n- Update the versions in the fixture data in `test/fixtures/**/*.json`\n- Push the branch, create a PR (\"Release v0.0.1\")\n- Once the PR tests pass and it has been reviewed, merge it\n- Checkout the `main` branch and `git pull`\n- Prepare a draft release that creates the new tag on publish\n  - Create a changelog following the format of the last release\n- Undraft the release\n- CI will produce artifacts and upload them to the release\n- Once you are certain the release is good, `cargo publish` it\n  - **Warning:** While you can re-release Github releases, it is not possible to do the same on `crates.io`\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 68.1630859375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.71\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b05800d2e817c8b3b4b54abd461726265fa9789ae34330622f2db9ee696f9d\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"206fdffcfa2df7cbe15601ef46c813fce0965eb3286db6b56c583b814b51c81c\"\ndependencies = [\n \"byteorder\",\n \"iovec\",\n]\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27f657647bcff5394bf56c7317665bbf790a137a50eaaa5c6bfbb9e27a518f2d\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"num-traits\",\n \"serde\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"color-eyre\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55146f5e46f237f7423d74111267d4597b59b0dad0ffaf7303bce9945d843ad5\"\ndependencies = [\n \"backtrace\",\n \"color-spantrace\",\n \"eyre\",\n \"indenter\",\n \"once_cell\",\n \"owo-colors 3.5.0\",\n \"tracing-error\",\n \"url\",\n]\n\n[[package]]\nname = \"color-spantrace\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd6be1b2a7e382e2b98b43b2adcca6bb0e465af0bdd38123873ae61eb17a72c2\"\ndependencies = [\n \"once_cell\",\n \"owo-colors 3.5.0\",\n \"tracing-core\",\n \"tracing-error\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n \"serde\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"enum-as-inner\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1e6a265c649f3f5979b601d26f1d05ada116434c87741c9493cb56218f76cbc\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"erased-serde\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24e2389d65ab4fab27dc2a5de7b191e1f6617d1f1c8855c0dc569c94a4cbb18d\"\ndependencies = [\n \"serde\",\n \"typeid\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"eyre\"\nversion = \"0.6.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cd915d99f24784cdc19fd37ef22b97e3ff0ae756c7e492e9fbfe897d61e2aec\"\ndependencies = [\n \"indenter\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.1.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678\"\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f16ca2af56261c99fba8bac40a10251ce8188205a4c448fbb745a2e4daa76fea\"\ndependencies = [\n \"bytes 1.9.0\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes 1.9.0\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes 1.9.0\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97818827ef4f364230e16705d4706e2897df2bb60617d6ca15d598025a3c481f\"\ndependencies = [\n \"bytes 1.9.0\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes 1.9.0\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indenter\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce23b50ad8242c51a442f3ff322d56b02f08852c77e4c0b4d3fd684abc89c683\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n \"serde\",\n]\n\n[[package]]\nname = \"inventory\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f958d3d68f4167080a18141e10381e7634563984a537f2a49a30fd8e53ac5767\"\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_ci\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7655c9839580ee829dfacba1d1278c2b7883e50a277ff7541299489d6bdfdc45\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.168\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aaeb2981e0606ca11d79718f8bb01164f1d6ed75080182d3abf017e6d244b6d\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lzma-sys\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"nix-config-parser\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"383d96c6f2c44fc706e7a523743434465d62db109b7c8364b642f35853475d67\"\ndependencies = [\n \"indexmap 2.7.0\",\n \"serde\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"nix-installer\"\nversion = \"0.32.2\"\ndependencies = [\n \"async-trait\",\n \"bytes 1.9.0\",\n \"clap\",\n \"color-eyre\",\n \"dirs\",\n \"dyn-clone\",\n \"eyre\",\n \"glob\",\n \"indexmap 2.7.0\",\n \"is_ci\",\n \"nix\",\n \"nix-config-parser\",\n \"once_cell\",\n \"os-release\",\n \"owo-colors 4.1.0\",\n \"plist\",\n \"rand\",\n \"reqwest\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"serde_with\",\n \"strum\",\n \"sysctl\",\n \"tar\",\n \"target-lexicon\",\n \"tempfile\",\n \"term\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tracing\",\n \"tracing-error\",\n \"tracing-subscriber\",\n \"typetag\",\n \"url\",\n \"uuid\",\n \"walkdir\",\n \"which\",\n \"xz2\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"os-release\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82f29ae2f71b53ec19cc23385f8e4f3d90975195aa3d09171ba3bef7159bec27\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"3.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb37767f6569cd834a413442455e0f066d0d522de8630436e2a1761d9726ba56\"\ndependencies = [\n \"supports-color 2.1.0\",\n \"supports-color 3.0.2\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cf17e9a1800f5f396bc67d193dc9411b59012a5876445ef450d449881e1016\"\ndependencies = [\n \"base64\",\n \"indexmap 2.7.0\",\n \"quick-xml\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d3a6e5838b60e0e8fa7a43f22ade549a37d61f8bdbe636d0d7816191de969c2\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e96808277ec6f97351a2380e6c25114bc9e67037775464979f3037c92d05ef\"\ndependencies = [\n \"bytes 1.9.0\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash\",\n \"rustls\",\n \"socket2\",\n \"thiserror 2.0.6\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2fe5ef3495d7d2e377ff17b1a8ce2ee2ec2a18cde8b6ad6619d65d0701c135d\"\ndependencies = [\n \"bytes 1.9.0\",\n \"getrandom\",\n \"rand\",\n \"ring\",\n \"rustc-hash\",\n \"rustls\",\n \"rustls-pki-types\",\n \"slab\",\n \"thiserror 2.0.6\",\n \"tinyvec\",\n \"tracing\",\n \"web-time\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52cd4b1eff68bf27940dd39811292c49e007f4d0b4c357358dc9b0197be6b527\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a77c62af46e79de0a562e1a9849205ffcb7fc1238876e9bd743357570e04046f\"\ndependencies = [\n \"base64\",\n \"bytes 1.9.0\",\n \"futures-core\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"quinn\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"tokio\",\n \"tokio-rustls\",\n \"tokio-socks\",\n \"tokio-util\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"wasm-streams\",\n \"web-sys\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fb8039b3032c191086b10f11f319a6e99e1e82889c5cc6046f515c9db1d497\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5065c3f250cbd332cd894be57c40fa52387247659b14a2d6041d121547903b1b\"\ndependencies = [\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\ndependencies = [\n \"web-time\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1415a607e92bec364ea2cf9264646dcce0f91e6d65281bd6f2819cca3bf39c8\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa39c7303dc58b5543c94d22c1766b0d31f2ee58306363ea622b10bbc075eaa2\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.216\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b9781016e935a97e8beecf0c933758c97a5520d32930e460142b4cd80c6338e\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.216\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f859dbbf73865c6627ed570e78961cd3ac92407a2d117204c49232485da55e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.133\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fceb2473b9166b2294ef05efcb65a3db80803f0b03ef86a5fc88a2b85ee377\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_with\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e28bdad6db2b8340e449f7108f020b3b092e8583a9e3fb82713e1d4e71fe817\"\ndependencies = [\n \"base64\",\n \"chrono\",\n \"hex\",\n \"indexmap 1.9.3\",\n \"indexmap 2.7.0\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_with_macros\",\n \"time\",\n]\n\n[[package]]\nname = \"serde_with_macros\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d846214a9854ef724f3da161b426242d8de7c1fc7de2f89bb1efcb154dca79d\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"supports-color\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6398cde53adc3c4557306a96ce67b302968513830a77a95b2b17305d9719a89\"\ndependencies = [\n \"is-terminal\",\n \"is_ci\",\n]\n\n[[package]]\nname = \"supports-color\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c64fc7232dd8d2e4ac5ce4ef302b1d81e0b80d055b9d77c7c4f51f6aa4c867d6\"\ndependencies = [\n \"is_ci\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"919d3b74a5dd0ccd15aeb8f93e7006bd9e14c295087c9896a110f490752bcf31\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"sysctl\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01198a2debb237c62b6826ec7081082d951f46dbb64b0e8c7649a452230d1dfc\"\ndependencies = [\n \"bitflags\",\n \"byteorder\",\n \"enum-as-inner\",\n \"libc\",\n \"thiserror 1.0.69\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c65998313f8e17d0d553d28f91a0df93e4dbbbf770279c7bc21ca0f09ea1a1f6\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4df4175de05129f31b80458c6df371a15e7fc3fd367272e6bf938e5c351c7ea0\"\ndependencies = [\n \"home\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec2a1820ebd077e2b90c4df007bebf344cd394098a13c563957d0afc83ea47\"\ndependencies = [\n \"thiserror-impl 2.0.6\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d65750cab40f4ff1929fb1ba509e9914eb756131cef4210da8d5d700d26f6312\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"bytes 1.9.0\",\n \"libc\",\n \"mio\",\n \"parking_lot\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-io\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57fc868aae093479e3131e3d165c93b1c7474109d13c90ec0dda2a1bbfff0674\"\ndependencies = [\n \"bytes 0.4.12\",\n \"futures\",\n \"log\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6d0975eaace0cf0fcadee4e4aaa5da15b5c079146f2cffb67c113be122bf37\"\ndependencies = [\n \"rustls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-socks\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d4770b8024672c1101b3f6733eab95b18007dbe0847a8afe341fcf79e06043f\"\ndependencies = [\n \"either\",\n \"futures-util\",\n \"thiserror 1.0.69\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7fcaa8d55a2bdd6b83ace262b016eca0d79ee02818c5c1bcdf0305114081078\"\ndependencies = [\n \"bytes 1.9.0\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-error\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b1581020d7a273442f5b45074a6a57d5757ad0a47dac0e9f0bd57b81936f3db\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-serde\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"704b1aeb7be0d0a84fc9828cae51dab5970fee5088f83d1dd7ee6f6246fc6ff1\"\ndependencies = [\n \"serde\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sharded-slab\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-serde\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typeid\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e13db2e0ccd5e14a544e8a246ba2312cd25223f616442d7f2cb0e3db614236e\"\n\n[[package]]\nname = \"typetag\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52ba3b6e86ffe0054b2c44f2d86407388b933b16cb0a70eea3929420db1d9bbe\"\ndependencies = [\n \"erased-serde\",\n \"inventory\",\n \"once_cell\",\n \"serde\",\n \"typetag-impl\",\n]\n\n[[package]]\nname = \"typetag-impl\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70b20a22c42c8f1cd23ce5e34f165d4d37038f5b663ad20fb6adbdf029172483\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38176d9b44ea84e9184eff0bc34cc167ed044f816accfe5922e54d84cf48eca2\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"once_cell\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"wasm-streams\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15053d8d85c7eccdbefef60f06769760a563c7f0a9d6902a13d35c7800b0ad65\"\ndependencies = [\n \"futures-util\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"6.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ee928febd44d98f2f459a4a79bd4d928591333a494a10a868418ac1b39cf1f\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"xattr\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da84f1a25939b27f6820d92aed108f83ff920fdf11a7b19366c27c4cda81d4f\"\ndependencies = [\n \"libc\",\n \"linux-raw-sys\",\n \"rustix\",\n]\n\n[[package]]\nname = \"xz2\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2\"\ndependencies = [\n \"futures\",\n \"lzma-sys\",\n \"tokio-io\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 4.154296875,
          "content": "[package]\nname = \"nix-installer\"\ndescription = \"The Determinate Nix Installer\"\nversion = \"0.32.2\"\nedition = \"2021\"\nresolver = \"2\"\nlicense = \"LGPL-2.1\"\nrepository = \"https://github.com/DeterminateSystems/nix-installer\"\ndocumentation = \"https://docs.rs/nix-installer/latest/nix_installer\"\n\n[features]\ndefault = [\"cli\", \"diagnostics\", \"determinate-nix\"]\ndeterminate-nix = []\ncli = [\"eyre\", \"color-eyre\", \"clap\", \"tracing-subscriber\", \"tracing-error\"]\ndiagnostics = [\"is_ci\"]\n\n[[bin]]\nname = \"nix-installer\"\nrequired-features = [ \"cli\" ]\n\n[dependencies]\nasync-trait = { version = \"0.1.57\", default-features = false }\nbytes = { version = \"1.2.1\", default-features = false, features = [\"std\", \"serde\"] }\nclap = { version = \"4\", features = [\"std\", \"color\", \"usage\", \"help\", \"error-context\", \"suggestions\", \"derive\", \"env\"], optional = true }\ncolor-eyre = { version = \"0.6.2\", default-features = false, features = [ \"track-caller\", \"issue-url\", \"tracing-error\", \"capture-spantrace\", \"color-spantrace\" ], optional = true }\neyre = { version = \"0.6.8\", default-features = false, features = [ \"track-caller\" ], optional = true }\nglob = { version = \"0.3.0\", default-features = false }\nnix = { version = \"0.29.0\", default-features = false, features = [\"user\", \"fs\", \"process\", \"term\"] }\nowo-colors = { version = \"4.0.0\", default-features = false, features = [ \"supports-colors\" ] }\nreqwest = { version = \"0.12.4\", default-features = false, features = [\"rustls-tls-native-roots\", \"stream\", \"socks\"] }\nserde = { version = \"1.0.203\", default-features = false, features = [ \"std\", \"derive\" ] }\nserde_json = { version = \"1.0.120\", default-features = false, features = [ \"std\" ] }\nserde_with = { version = \"3\", default-features = false, features = [ \"std\", \"macros\" ] }\ntar = { version = \"0.4.38\", default-features = false, features = [ \"xattr\" ] }\ntarget-lexicon = { version = \"0.12.4\", default-features = false, features = [ \"std\" ] }\nthiserror = { version = \"1.0.61\", default-features = false }\ntokio = { version = \"1.21.0\", default-features = false, features = [\"time\", \"io-std\", \"process\", \"fs\", \"signal\", \"tracing\", \"rt-multi-thread\", \"macros\", \"io-util\", \"parking_lot\" ] }\ntracing = { version = \"0.1.36\", default-features = false, features = [ \"std\", \"attributes\" ] }\ntracing-error = { version = \"0.2.0\", default-features = false, optional = true, features = [\"traced-error\"] }\ntracing-subscriber = { version = \"0.3.15\", default-features = false, features = [ \"std\", \"registry\", \"fmt\", \"json\", \"ansi\", \"env-filter\" ], optional = true }\nurl = { version = \"2.3.1\", default-features = false, features = [\"serde\"] }\nxz2 = { version = \"0.1.7\", default-features = false, features = [\"static\", \"tokio\"] }\nplist = { version = \"1.7.0\", default-features = false, features = [ \"serde\" ]}\ndirs = { version = \"5.0.0\", default-features = false }\ntypetag = { version = \"0.2.17\", default-features = false }\ndyn-clone = { version = \"1.0.9\", default-features = false }\nrand = { version = \"0.8.5\", default-features = false, features = [ \"std\", \"std_rng\" ] }\nsemver = { version = \"1.0.23\", default-features = false, features = [\"serde\", \"std\"] }\nterm = { version = \"1.0.0\", default-features = false }\nuuid = { version = \"1.2.2\", features = [\"serde\"] }\nos-release = { version = \"0.1.0\", default-features = false }\nis_ci = { version = \"1.1.1\", default-features = false, optional = true }\nstrum = { version = \"0.26.1\", features = [\"derive\"] }\nnix-config-parser = { version = \"0.2\", features = [\"serde\"] }\nwhich = \"6.0.0\"\nsysctl = \"0.6.0\"\nwalkdir = \"2.3.3\"\nindexmap = { version = \"2.0.2\", features = [\"serde\"] }\nonce_cell = \"1.19.0\"\n\n[dev-dependencies]\neyre = { version = \"0.6.8\", default-features = false, features = [ \"track-caller\" ] }\ntempfile = \"3.3.0\"\n\n[profile.release]\nstrip = true  # Automatically strip symbols from the binary.\nopt-level = \"z\"  # Optimize for size.\nlto = true\n\n[package.metadata.docs.rs]\n# NOTE(cole-h): We embed the Nix closure by reading from this environment variable, but this is not\n# available in docs.rs's build. It doesn't influence docs, so it's fine to set it to a bogus (but\n# existing-file) value.\ncargo-args = [\n    \"--config\", \"env.NIX_INSTALLER_TARBALL_PATH=\\\"../Cargo.toml\\\"\",\n    \"--config\", \"env.DETERMINATE_NIXD_BINARY_PATH=\\\"../Cargo.toml\\\"\"\n]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.814453125,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 30.173828125,
          "content": "# Determinate Nix Installer\n\n[![Crates.io](https://img.shields.io/crates/v/nix-installer)](https://crates.io/crates/nix-installer)\n[![Docs.rs](https://img.shields.io/docsrs/nix-installer)](https://docs.rs/nix-installer/latest/nix_installer)\n\n**Determinate Nix Installer** is a fast, friendly, and reliable way to install and manage [Nix] everywhere, including macOS, Linux, Windows Subsystem for Linux (WSL), SELinux, the Valve Steam Deck, and more.\nIt installs Nix with [flakes] enabled by default, it offers support for seamlessly [uninstalling Nix](#uninstalling), it enables Nix to survive [macOS upgrades][macos-upgrades], and [much more](#features).\n\nThis one-liner is the quickest way to get started on any supported system:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install\n```\n\n> [!TIP]\n> To install [Determinate] using the installer, see the instructions [below](#install-determinate).\n\nDeterminate Nix Installer has successfully completed over **7 million** installs in a number of environments, including [Github Actions](#as-a-github-action) and [GitLab](#on-gitlab):\n\n| Platform                                                             |    Multi user?    | `root` only |     Maturity      |\n| -------------------------------------------------------------------- | :---------------: | :---------: | :---------------: |\n| Linux (`x86_64` and `aarch64`)                                       | ✓ (via [systemd]) |      ✓      |      Stable       |\n| MacOS (`x86_64` and `aarch64`)                                       |         ✓         |             | Stable (see note) |\n| [Valve Steam Deck][steam-deck] (SteamOS)                             |         ✓         |             |      Stable       |\n| [Windows Subsystem for Linux][wsl] 2 (WSL2) (`x86_64` and `aarch64`) | ✓ (via [systemd]) |      ✓      |      Stable       |\n| [Podman] Linux containers                                            | ✓ (via [systemd]) |      ✓      |      Stable       |\n| [Docker] containers                                                  |                   |      ✓      |      Stable       |\n\n## Install Nix\n\nYou can install Nix with the default [planner](#planners) and options by running this script:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install\n```\n\nTo download a platform-specific installer binary yourself:\n\n```shell\ncurl -sL -o nix-installer https://install.determinate.systems/nix/nix-installer-x86_64-linux\nchmod +x nix-installer\n./nix-installer\n```\n\nThis would install Nix on an `x86_64-linux` system but you can replace that with the system of your choice.\n\n### Install Determinate\n\nIf you're on macOS (but not [nix-darwin]) or Linux (but not [NixOS]), you can install [Determinate] using Determinate Nix Installer by adding the `--determinate` flag:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install --determinate\n```\n\n> [!TIP]\n> If you use [nix-darwin] or [NixOS], we recommend installing Determinate using modules provided by the [`determinate` flake][determinate-flake].\n\nDeterminate is:\n\n- [**Determinate Nix**][det-nix], [Determinate Systems][detsys]' validated and secure downstream Nix distribution for enterprises.\n- [**FlakeHub**][flakehub], a platform for publishing and discovering [Nix flakes][flakes] that provides features like [semantic versioning][semver] (SemVer) for flakes, [private flakes][private-flakes], and [FlakeHub Cache][cache].\n\n### Planners\n\nDeterminate Nix Installer installs Nix by following a _plan_ made by a _planner_.\nTo review the available planners:\n\n```shell\n/nix/nix-installer install --help\n```\n\nPlanners have their own options and defaults, sharing most of them in common.\nTo see the options for Linux, for example:\n\n```shell\n/nix/nix-installer install linux --help\n```\n\nYou can configure planners using environment variables or command arguments:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  NIX_BUILD_GROUP_NAME=nixbuilder sh -s -- install --nix-build-group-id 4000\n\n# Alternatively:\n\nNIX_BUILD_GROUP_NAME=nixbuilder ./nix-installer install --nix-build-group-id 4000\n```\n\nSee [Installer settings](#installer-settings) below for a full list of options.\n\n### Troubleshooting\n\nHaving problems with the installer?\nConsult our [troubleshooting guide](./docs/troubleshooting.md) to see if your problem is covered.\n\n### Upgrading Nix\n\nYou can upgrade Nix to [our currently recommended version of Nix][recommended-nix] by running:\n\n```shell\nsudo -i nix upgrade-nix\n```\n\nAlternatively, you can [uninstall](#uninstalling) and [reinstall](#install-nix) with a different version of Determinate Nix Installer.\n\n### Uninstalling\n\nYou can remove Nix installed by Determinate Nix Installer by running:\n\n```shell\n/nix/nix-installer uninstall\n```\n\n### As a Github Action\n\nYou can install Nix on [GitHub Actions][actions] using [`nix-installer-action`][nix-installer-action].\nHere's an example configuration:\n\n```yaml\non:\n  pull_request:\n  push:\n    branches: [main]\n\njobs:\n  build:\n    name: Build\n    runs-on: ubuntu-22.04\n    steps:\n      - uses: actions/checkout@v4\n      - name: Install Nix\n        uses: DeterminateSystems/nix-installer-action@main\n      - name: Run `nix build`\n        run: nix build .\n```\n\n### On GitLab\n\n[GitLab CI][gitlab-ci] runners are typically [Docker] based and run as the `root` user.\nThis means that `systemd` is not present, so you need to pass the `--init none` option to the Linux planner.\n\nOn the default [GitLab] runners, you can install Nix using this configuration:\n\n```yaml\ntest:\n  script:\n    - curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install linux --no-confirm --init none\n    - . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh\n    - nix run nixpkgs#hello\n    - nix profile install nixpkgs#hello\n    - hello\n```\n\nIf you are using different runners, the above example may need to be adjusted.\n\n### Without systemd (Linux only)\n\n> [!WARNING]\n> When `--init none` is used, _only_ `root` or users who can elevate to `root` privileges can run Nix:\n>\n> ```shell\n> sudo -i nix run nixpkgs#hello\n> ```\n\nIf you don't use [systemd], you can still install Nix by explicitly specifying the `linux` plan and `--init none`:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install linux --init none\n```\n\n### In a container\n\nIn [Docker]/[Podman] containers or [WSL2][wsl] instances where an init (like `systemd`) is not present, pass `--init none`.\n\nFor containers (without an init):\n\n> [!WARNING]\n> When `--init none` is used, _only_ `root` or users who can elevate to `root` privileges can run Nix:\n>\n> ```shell\n> sudo -i nix run nixpkgs#hello\n> ```\n\n```dockerfile\n# Dockerfile\nFROM ubuntu:latest\nRUN apt update -y\nRUN apt install curl -y\nRUN curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install linux \\\n  --extra-conf \"sandbox = false\" \\\n  --init none \\\n  --no-confirm\nENV PATH=\"${PATH}:/nix/var/nix/profiles/default/bin\"\nRUN nix run nixpkgs#hello\n```\n\n```shell\ndocker build -t ubuntu-with-nix .\ndocker run --rm -ti ubuntu-with-nix\ndocker rmi ubuntu-with-nix\n# or\npodman build -t ubuntu-with-nix .\npodman run --rm -ti ubuntu-with-nix\npodman rmi ubuntu-with-nix\n```\n\nFor containers with a [systemd] init:\n\n```dockerfile\n# Dockerfile\nFROM ubuntu:latest\nRUN apt update -y\nRUN apt install curl systemd -y\nRUN curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install linux \\\n  --extra-conf \"sandbox = false\" \\\n  --no-start-daemon \\\n  --no-confirm\nENV PATH=\"${PATH}:/nix/var/nix/profiles/default/bin\"\nRUN nix run nixpkgs#hello\nCMD [ \"/bin/systemd\" ]\n```\n\n```shell\npodman build -t ubuntu-systemd-with-nix .\nIMAGE=$(podman create ubuntu-systemd-with-nix)\nCONTAINER=$(podman start $IMAGE)\npodman exec -ti $CONTAINER /bin/bash\npodman rm -f $CONTAINER\npodman rmi $IMAGE\n```\n\nWith some container tools, such as [Docker], you can omit `sandbox = false`.\nOmitting this will negatively impact compatibility with container tools like [Podman].\n\n### In WSL2\n\nWe **strongly recommend** first [enabling systemd][enabling-systemd] and then installing Nix as normal:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install\n```\n\nIf [WSLg][wslg] is enabled, you can do things like open a Linux Firefox from Windows on Powershell:\n\n```powershell\nwsl nix run nixpkgs#firefox\n```\n\nTo use some OpenGL applications, you can use [`nixGL`][nixgl] (note that some applications, such as `blender`, may not work):\n\n```powershell\nwsl nix run --impure github:guibou/nixGL nix run nixpkgs#obs-studio\n```\n\nIf enabling systemd is not an option, pass `--init none` at the end of the command:\n\n> [!WARNING]\n> When `--init none` is used, _only_ `root` or users who can elevate to `root` privileges can run Nix:\n>\n> ```shell\n> sudo -i nix run nixpkgs#hello\n> ```\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install linux --init none\n```\n\n### Skip confirmation\n\nIf you'd like to bypass the confirmation step, you can apply the `--no-confirm` flag:\n\n```shell\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\\n  sh -s -- install --no-confirm\n```\n\nThis is especially useful when using the installer in non-interactive scripts.\n\n## Features\n\nExisting Nix installation scripts do a good job but they are difficult to maintain.\n\nSubtle differences in the shell implementations and tool used in the scripts make it difficult to make meaningful changes to the installer.\n\nDeterminate Nix installer has numerous advantages over these options:\n\n- It installs Nix with [flakes] enabled by default\n- It enables Nix to survive macOS upgrades\n- It keeps an installation _receipt_ for easy [uninstallation](#uninstalling)\n- It uses [planners](#planners) to create appropriate install plans for complicated targets&mdash;plans that you can review prior to installation\n- It enables you to perform a best-effort reversion in the facing of a failed install\n- It improves installation performance by maximizing parallel operations\n- It supports an expanded test suite including \"curing\" cases (compatibility with Nix already on the system)\n- It supports SELinux and OSTree-based distributions without asking users to make compromises\n- It operates as a single, static binary with external dependencies such as [OpenSSL], only calling existing system tools (like `useradd`) when necessary\n- As a macOS remote build target, it ensures that Nix is present on the `PATH`\n\n## Nix community involvement\n\nIt has been wonderful to collaborate with other participants in the [Nix Installer Working Group][wg] and members of the broader community.\nThe working group maintains a [foundation-owned fork of the installer][forked-installer].\n\n## Quirks\n\nWhile Determinate Nix Installer tries to provide a comprehensive and unquirky experience, there are unfortunately some issues that may require manual intervention or operator choices.\n\n### Using MacOS after removing Nix while nix-darwin was still installed, network requests fail\n\nIf Nix was previously uninstalled without uninstalling [nix-darwin] first, you may experience errors similar to this:\n\n```shell\nnix shell nixpkgs#curl\n\nerror: unable to download 'https://cache.nixos.org/g8bqlgmpa4yg601w561qy2n576i6g0vh.narinfo': Problem with the SSL CA cert (path? access rights?) (77)\n```\n\nThis occurs because `nix-darwin` provisions an `org.nixos.activate-system` service which remains after Nix is uninstalled.\nThe `org.nixos.activate-system` service in this state interacts with the newly installed Nix and changes the SSL certificates it uses to be a broken symlink.\n\n```shell\nls -lah /etc/ssl/certs\n\ntotal 0\ndrwxr-xr-x  3 root  wheel    96B Oct 17 08:26 .\ndrwxr-xr-x  6 root  wheel   192B Sep 16 06:28 ..\nlrwxr-xr-x  1 root  wheel    41B Oct 17 08:26 ca-certificates.crt -> /etc/static/ssl/certs/ca-certificates.crt\n```\n\nThe problem is compounded by the matter that the [`nix-darwin` uninstaller](https://github.com/LnL7/nix-darwin#uninstalling) will not work after uninstalling Nix, since it uses Nix and requires network connectivity.\n\nIt's possible to resolve this situation by removing the `org.nixos.activate-system` service and the `ca-certificates`:\n\n```shell\nsudo rm /Library/LaunchDaemons/org.nixos.activate-system.plist\nsudo launchctl bootout system/org.nixos.activate-system\n/nix/nix-installer uninstall\nsudo rm /etc/ssl/certs/ca-certificates.crt\n```\n\nRun the installer again and it should work.\n\nUp-to-date versions of the installer will refuse to uninstall until [nix-darwin] is uninstalled first, helping to mitigate this problem.\n\n## Building a binary\n\nSince you'll be using the installer to install Nix on systems without Nix, the default build is a static binary.\n\nTo build a portable Linux binary on a system with Nix:\n\n```shell\n# to build a local copy\nnix build -L \".#nix-installer-static\"\n# to build the remote main development branch\nnix build -L \"github:determinatesystems/nix-installer#nix-installer-static\"\n# for a specific version of the installer:\nexport NIX_INSTALLER_TAG=\"v0.6.0\"\nnix build -L \"github:determinatesystems/nix-installer/$NIX_INSTALLER_TAG#nix-installer-static\"\n```\n\nOn macOS:\n\n```shell\n# to build a local copy\nnix build -L \".#nix-installer\"\n# to build the remote main development branch\nnix build -L \"github:determinatesystems/nix-installer#nix-installer\"\n# for a specific version of the installer:\nexport NIX_INSTALLER_TAG=\"v0.6.0\"\nnix build -L \"github:determinatesystems/nix-installer/$NIX_INSTALLER_TAG#nix-installer\"\n```\n\nThen copy `result/bin/nix-installer` to the machine you wish to run it on.\nYou can also add the installer to a system without Nix using [cargo], as there are no system dependencies to worry about:\n\n```shell\n# to build and run a local copy\nRUSTFLAGS=\"--cfg tokio_unstable\" cargo run -- --help\n# to build the remote main development branch\nRUSTFLAGS=\"--cfg tokio_unstable\" cargo install --git https://github.com/DeterminateSystems/nix-installer\nnix-installer --help\n# for a specific version of the installer:\nexport NIX_INSTALLER_TAG=\"v0.6.0\"\nRUSTFLAGS=\"--cfg tokio_unstable\" cargo install --git https://github.com/DeterminateSystems/nix-installer --tag $NIX_INSTALLER_TAG\nnix-installer --help\n```\n\nTo make this build portable, pass the `--target x86_64-unknown-linux-musl` option.\n\n> [!NOTE]\n> We currently require `--cfg tokio_unstable` as we utilize [Tokio's process groups](https://docs.rs/tokio/1.24.1/tokio/process/struct.Command.html#method.process_group), which wrap stable `std` APIs, but are unstable due to it requiring an MSRV bump.\n\n## As a Rust library\n\n> [!WARNING]\n> Using Determinate Nix Installer as a [Rust] library is still experimental.\n> This feature is likely to be removed in the future without an advocate.\n> If you're using this, please let us know and we can provide a path to stabilization.\n\nAdd the [`nix-installer` library][lib] to your dependencies:\n\n```shell\ncargo add nix-installer\n```\n\nIf you're building a CLI, check out the `cli` feature flag for [`clap`][clap] integration.\n\nYou'll also need to edit your `.cargo/config.toml` to use `tokio_unstable` as we utilize [Tokio's process groups][process-groups], which wrap stable `std` APIs, but are unstable due to it requiring an MSRV bump:\n\n```toml\n# .cargo/config.toml\n[build]\nrustflags=[\"--cfg\", \"tokio_unstable\"]\n```\n\nYou'll also need to set the `NIX_INSTALLER_TARBALL_PATH` environment variable to point to a target-appropriate Nix installation tarball, like nix-2.21.2-aarch64-darwin.tar.xz.\nThe contents are embedded in the resulting binary instead of downloaded at installation time.\n\nThen it's possible to review the [documentation](https://docs.rs/nix-installer/latest/nix_installer/):\n\n```shell\ncargo doc --open -p nix-installer\n```\n\nDocumentation is also available via `nix build`:\n\n```shell\nnix build github:DeterminateSystems/nix-installer#nix-installer.doc\nfirefox result-doc/nix-installer/index.html\n```\n\n## Accessing other versions\n\nYou can pin to a specific version of Determinate Nix Installer by modifying the download URL.\nHere's an example:\n\n```shell\nVERSION=\"v0.6.0\"\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix/tag/${VERSION} | \\\n  sh -s -- install\n```\n\nTo discover which versions are available, or download the binaries for any release, check the [Github Releases][releases].\n\nYou can download and use these releases directly.\nHere's an example:\n\n```shell\nVERSION=\"v0.6.0\"\nARCH=\"aarch64-linux\"\ncurl -sSf -L https://github.com/DeterminateSystems/nix-installer/releases/download/${VERSION}/nix-installer-${ARCH} -o nix-installer\n./nix-installer install\n```\n\nEach installer version has an [associated supported nix version](src/settings.rs)&mdash;if you pin the installer version, you'll also indirectly pin to the associated nix version.\n\nYou can also override the Nix version using `--nix-package-url` or `NIX_INSTALLER_NIX_PACKAGE_URL=` but doing this is not recommended since we haven't tested that combination.\nHere are some example Nix package URLs, including the Nix version, OS, and architecture:\n\n- https://releases.nixos.org/nix/nix-2.18.1/nix-2.18.1-x86_64-linux.tar.xz\n- https://releases.nixos.org/nix/nix-2.18.1/nix-2.18.1-aarch64-darwin.tar.xz\n\n## Installation differences\n\nDiffering from the upstream [Nix][upstream-nix] installer scripts:\n\n- In `nix.conf`:\n  - the `nix-command` and `flakes` features are enabled\n  - `bash-prompt-prefix` is set\n  - `auto-optimise-store` is set to `true` (On Linux only)\n  * `always-allow-substitutes` is set to `true`\n  * `extra-nix-path` is set to `nixpkgs=flake:nixpkgs`\n  * `max-jobs` is set to `auto`\n  * `upgrade-nix-store-path-url` is set to `https://install.determinate.systems/nix-upgrade/stable/universal`, to prevent unintentional downgrades.\n- an installation receipt (for uninstalling) is stored at `/nix/receipt.json` as well as a copy of the install binary at `/nix/nix-installer`\n- `nix-channel --update` is not run, `~/.nix-channels` is not provisioned\n- `ssl-cert-file` is set in `/etc/nix/nix.conf` if the `ssl-cert-file` argument is used.\n\n## Installer settings\n\nDeterminate Nix Installer provides a variety of configuration settings, some [general](#general-settings) and some on a per-command basis.\nAll settings are available via flags or via `NIX_INSTALLER_*` environment variables.\n\n### General settings\n\nThese settings are available for all commands.\n\n| Flag(s)            | Description                                                               | Default (if any) | Environment variable           |\n| ------------------ | ------------------------------------------------------------------------- | ---------------- | ------------------------------ |\n| `--log-directives` | Tracing directives delimited by comma                                     |                  | `NIX_INSTALLER_LOG_DIRECTIVES` |\n| `--logger`         | Which logger to use (options are `compact`, `full`, `pretty`, and `json`) | `compact`        | `NIX_INSTALLER_LOGGER`         |\n| `--verbose`        | Enable debug logs, (`-vv` for trace)                                      | `false`          | `NIX_INSTALLER_VERBOSITY`      |\n\n### Installation (`nix-installer install`)\n\n| Flag(s)                    | Description                                                                                        | Default (if any)                                     | Environment variable                   |\n| -------------------------- | -------------------------------------------------------------------------------------------------- | ---------------------------------------------------- | -------------------------------------- |\n| `--determinate`            | Installs [Determinate]                                                                             | `NIX_INSTALLER_DETERMINATE`                          |\n| `--diagnostic-attribution` | Relate the install diagnostic to a specific value                                                  |                                                      | `NIX_INSTALLER_DIAGNOSTIC_ATTRIBUTION` |\n| `--diagnostic-endpoint`    | The URL or file path for an installation diagnostic to be sent                                     | `https://install.determinate.systems/nix/diagnostic` | `NIX_INSTALLER_DIAGNOSTIC_ENDPOINT`    |\n| `--explain`                | Provide an explanation of the changes the installation process will make to your system            | `false`                                              | `NIX_INSTALLER_EXPLAIN`                |\n| `--extra-conf`             | Extra configuration lines for `/etc/nix.conf`                                                      |                                                      | `NIX_INSTALLER_EXTRA_CONF`             |\n| `--force`                  | Whether the installer should forcibly recreate files it finds existing                             | `false`                                              | `NIX_INSTALLER_FORCE`                  |\n| `--init`                   | Which init system to configure (if `--init none` Nix will be root-only)                            | `launchd` (macOS), `systemd` (Linux)                 | `NIX_INSTALLER_INIT`                   |\n| `--nix-build-group-id`     | The Nix build group GID                                                                            | `350` (macOS), `30000` (Linux)                       | `NIX_INSTALLER_NIX_BUILD_GROUP_ID`     |\n| `--nix-build-group-name`   | The Nix build group name                                                                           | `nixbld`                                             | `NIX_INSTALLER_NIX_BUILD_GROUP_NAME`   |\n| `--nix-build-user-count`   | The number of build users to create                                                                | `32`                                                 | `NIX_INSTALLER_NIX_BUILD_USER_COUNT`   |\n| `--nix-build-user-id-base` | The Nix build user base UID (ascending) (NOTE: the first UID will be this base + 1)                | `350` (macOS), `30000` (Linux)                       | `NIX_INSTALLER_NIX_BUILD_USER_ID_BASE` |\n| `--nix-build-user-prefix`  | The Nix build user prefix (user numbers will be postfixed)                                         | `_nixbld` (macOS), `nixbld` (Linux)                  | `NIX_INSTALLER_NIX_BUILD_USER_PREFIX`  |\n| `--nix-package-url`        | The Nix package URL                                                                                |                                                      | `NIX_INSTALLER_NIX_PACKAGE_URL`        |\n| `--no-confirm`             | Run installation without requiring explicit user confirmation                                      | `false`                                              | `NIX_INSTALLER_NO_CONFIRM`             |\n| `--no-modify-profile`      | Modify the user profile to automatically load Nix.                                                 | `true`                                               | `NIX_INSTALLER_MODIFY_PROFILE`         |\n| `--proxy`                  | The proxy to use (if any); valid proxy bases are `https://$URL`, `http://$URL` and `socks5://$URL` |                                                      | `NIX_INSTALLER_PROXY`                  |\n| `--ssl-cert-file`          | An SSL cert to use (if any); used for fetching Nix and sets `ssl-cert-file` in `/etc/nix/nix.conf` |                                                      | `NIX_INSTALLER_SSL_CERT_FILE`          |\n| `--no-start-daemon`        | Start the daemon (if not `--init none`)                                                            | `true`                                               | `NIX_INSTALLER_START_DAEMON`           |\n\nYou can also specify a planner with the first argument:\n\n```shell\nnix-installer install <plan>\n```\n\nAlternatively, you can use the `NIX_INSTALLER_PLAN` environment variable:\n\n```shell\nNIX_INSTALLER_PLAN=<plan> nix-installer install\n```\n\n### Uninstalling (`nix-installer uninstall`)\n\n| Flag(s)        | Description                                                                             | Default (if any) | Environment variable       |\n| -------------- | --------------------------------------------------------------------------------------- | ---------------- | -------------------------- |\n| `--explain`    | Provide an explanation of the changes the installation process will make to your system | `false`          | `NIX_INSTALLER_EXPLAIN`    |\n| `--no-confirm` | Run installation without requiring explicit user confirmation                           | `false`          | `NIX_INSTALLER_NO_CONFIRM` |\n\nYou can also specify an installation receipt as the first argument (the default is `/nix/receipt.json`):\n\n```shell\nnix-installer uninstall /path/to/receipt.json\n```\n\n### Planning (`nix-installer plan`)\n\n| Flag(s)      | Description                                        | Default (if any) | Environment variable          |\n| ------------ | -------------------------------------------------- | ---------------- | ----------------------------- |\n| `--out-file` | Where to write the generated plan (in JSON format) | `/dev/stdout`    | `NIX_INSTALLER_PLAN_OUT_FILE` |\n\n### Repairing (`nix-installer repair`)\n\n| Flag(s)        | Description                                                   | Default (if any) | Environment variable       |\n| -------------- | ------------------------------------------------------------- | ---------------- | -------------------------- |\n| `--no-confirm` | Run installation without requiring explicit user confirmation | `false`          | `NIX_INSTALLER_NO_CONFIRM` |\n\n### Self-test (`nix-installer self-test`)\n\n`nix-installer self-test` only takes [general settings](#general-settings).\n\n## Diagnostics\n\nThe goal of Determinate Nix Installer is to successfully and correctly install Nix.\nThe `curl | sh` pipeline and the installer collects a little bit of diagnostic information to help us make that true.\n\nHere is a table of the [diagnostic data we collect][diagnosticdata]:\n\n| Field                 | Use                                                                                                                                 |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `version`             | The version of Determinate Nix Installer.                                                                                           |\n| `planner`             | The method of installing Nix (`linux`, `macos`, `steam-deck`)                                                                       |\n| `configured_settings` | The names of planner settings which were changed from their default. Does _not_ include the values.                                 |\n| `os_name`             | The running operating system.                                                                                                       |\n| `os_version`          | The version of the operating system.                                                                                                |\n| `triple`              | The architecture/operating system/binary format of your system.                                                                     |\n| `is_ci`               | Whether the installer is being used in CI (e.g. GitHub Actions).                                                                    |\n| `action`              | Either `Install` or `Uninstall`.                                                                                                    |\n| `status`              | One of `Success`, `Failure`, `Pending`, or `Cancelled`.                                                                             |\n| `attribution`         | Optionally defined by the user, associate the diagnostics of this run to the provided value.                                        |\n| `failure_chain`       | A high level description of what the failure was, if any. For example: `Command(\"diskutil\")` if the command `diskutil list` failed. |\n\nTo disable diagnostic reporting, set the diagnostics URL to an empty string by passing `--diagnostic-endpoint=\"\"` or setting `NIX_INSTALLER_DIAGNOSTIC_ENDPOINT=\"\"`.\n\nYou can read the full privacy policy for [Determinate Systems][detsys], the creators of Determinate Nix Installer, [here][privacy].\n\n[actions]: https://github.com/features/actions\n[cache]: https://docs.determinate.systems/flakehub/cache\n[cargo]: https://doc.rust-lang.org/cargo\n[clap]: https://clap.rs\n[det-nix]: https://docs.determinate.systems/determinate-nix\n[determinate]: https://docs.determinate.systems\n[determinate-flake]: https://github.com/DeterminateSystems/determinate\n[detsys]: https://determinate.systems\n[docker]: https://docker.com\n[diagnosticdata]: https://github.com/DeterminateSystems/nix-installer/blob/f9f927840d532b71f41670382a30cfcbea2d8a35/src/diagnostics.rs#L29-L43\n[enabling-systemd]: https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/#how-can-you-get-systemd-on-your-machine\n[flakehub]: https://flakehub.com\n[flakes]: https://zero-to-nix.com/concepts/flakes\n[forked-installer]: https://github.com/nixos/experimental-nix-installer\n[gitlab]: https://gitlab.com\n[gitlab-ci]: https://docs.gitlab.com/ee/ci\n[lib]: https://docs.rs/nix-installer\n[macos-upgrades]: https://determinate.systems/posts/nix-survival-mode-on-macos/\n[nix]: https://nixos.org\n[nix-darwin]: https://github.com/LnL7/nix-darwin\n[nix-installer-action]: https://github.com/DeterminateSystems/nix-installer-action\n[nixgl]: https://github.com/guibou/nixGL\n[nixos]: https://zero-to-nix.com/concepts/nixos\n[openssl]: https://openssl.org\n[podman]: https://podman.io\n[privacy]: https://determinate.systems/policies/privacy\n[private-flakes]: https://docs.determinate.systems/flakehub/private-flakes\n[process-groups]: https://docs.rs/tokio/1.24.1/tokio/process/struct.Command.html#method.process_group\n[recommended-nix]: https://github.com/DeterminateSystems/nix/releases/latest\n[releases]: https://github.com/DeterminateSystems/nix-installer/releases\n[rust]: https://rust-lang.org\n[selinux]: https://selinuxproject.org\n[semver]: https://docs.determinate.systems/flakehub/concepts/semver\n[steam-deck]: https://store.steampowered.com/steamdeck\n[systemd]: https://systemd.io\n[upstream-nix]: https://github.com/NixOS/nix\n[wg]: https://discourse.nixos.org/t/nix-installer-workgroup/21495\n[wsl]: https://learn.microsoft.com/en-us/windows/wsl/about\n[wslg]: https://github.com/microsoft/wslg\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "enter-env.sh",
          "type": "blob",
          "size": 2.4423828125,
          "content": "#!/usr/bin/env nix-shell\n#!nix-shell -p vault awscli2 jq -i bash\n# shellcheck shell=bash\n\nset +x # don't leak secrets!\nset -eu\numask 077\n\nscriptroot=$(dirname \"$(realpath \"$0\")\")\nscratch=$(mktemp -d -t tmp.XXXXXXXXXX)\n\nvault token lookup &>/dev/null || {\n  echo \"You're not logged in to vault! Exiting.\"\n  exit 1\n}\n\nfunction finish {\n  set +e\n  rm -rf \"$scratch\"\n  if [ \"${VAULT_EXIT_ACCESSOR:-}\" != \"\" ]; then\n    if vault token lookup &>/dev/null; then\n        echo \"--> Revoking my token...\" >&2\n        vault token revoke -self\n    fi\n  fi\n  set -e\n}\ntrap finish EXIT\n\nassume_role() {\n  role=$1\n  echo \"--> Assuming role: $role\" >&2\n  vault_creds=$(vault token create \\\n    -display-name=\"$role\" \\\n    -format=json \\\n    -role \"$role\")\n\n  VAULT_EXIT_ACCESSOR=$(jq -r .auth.accessor <<<\"$vault_creds\")\n  export VAULT_TOKEN\n  VAULT_TOKEN=$(jq -r .auth.client_token <<<\"$vault_creds\")\n}\n\nfunction provision_aws_creds() {\n  url=\"$1\"\n  local ok=\n  echo \"--> Setting AWS variables: \" >&2\n  echo \"                       AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN\" >&2\n\n  aws_creds=$(vault kv get -format=json \"$url\")\n  export AWS_ACCESS_KEY_ID\n  AWS_ACCESS_KEY_ID=$(jq -r .data.access_key <<<\"$aws_creds\")\n  export AWS_SECRET_ACCESS_KEY\n  AWS_SECRET_ACCESS_KEY=$(jq -r .data.secret_key <<<\"$aws_creds\")\n  export AWS_SESSION_TOKEN\n  AWS_SESSION_TOKEN=$(jq -r .data.security_token <<<\"$aws_creds\")\n  if [ -z \"$AWS_SESSION_TOKEN\" ] ||  [ \"$AWS_SESSION_TOKEN\" == \"null\" ]; then\n    unset AWS_SESSION_TOKEN\n  fi\n\n  echo \"--> Preflight testing the AWS credentials...\" >&2\n  for _ in {0..20}; do\n    if check_output=$(aws sts get-caller-identity 2>&1 >/dev/null); then\n        ok=1\n        break\n    else\n        echo -n \".\" >&2\n        sleep 1\n    fi\n  done\n  if [[ -z \"$ok\" ]]; then\n    echo $'\\nPreflight test failed:\\n'\"$check_output\" >&2\n    return 1\n  fi\n  echo\n  unset aws_creds\n}\n\nassume_role \"internalservices_nix_installer_developer\"\nprovision_aws_creds \"internalservices/aws/creds/nix_installer\"\n\nif [ \"${1:-}\" == \"\" ]; then\n    cat <<\\BASH > \"$scratch/bashrc\"\nexpiration_ts=$(date +%s -d \"$(vault token lookup -format=json | jq -r '.data.expire_time')\")\nvault_prompt() {\n  local remaining=$(( $expiration_ts - $(date '+%s')))\n  if [[ \"$remaining\" -lt 1 ]]; then\n    remaining=expired\n    printf '\\n\\e[01;33mtoken expired\\e[m';\n    return\n  fi\n  printf '\\n\\e[01;32mTTL:%ss\\e[m' \"$remaining\"\n}\nPROMPT_COMMAND=vault_prompt\nBASH\n\n    bash --init-file \"$scratch/bashrc\"\nelse\n    \"$@\"\nfi\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 10.7705078125,
          "content": "{\n  \"nodes\": {\n    \"determinate\": {\n      \"inputs\": {\n        \"determinate-nixd-aarch64-darwin\": \"determinate-nixd-aarch64-darwin\",\n        \"determinate-nixd-aarch64-linux\": \"determinate-nixd-aarch64-linux\",\n        \"determinate-nixd-x86_64-darwin\": [\n          \"determinate\",\n          \"determinate-nixd-aarch64-darwin\"\n        ],\n        \"determinate-nixd-x86_64-linux\": \"determinate-nixd-x86_64-linux\",\n        \"nix\": [\n          \"nix\"\n        ],\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1733950326,\n        \"narHash\": \"sha256-nUTutqzg/Z0eEXrC1ACTa4a9Ik5Iyxgqo8uL9DYib7I=\",\n        \"rev\": \"657395244a854da1bc71e38454958ecd57c0e241\",\n        \"revCount\": 165,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/DeterminateSystems/determinate/0.1.165%2Brev-657395244a854da1bc71e38454958ecd57c0e241/0193b781-6c27-7703-bca6-fc9648fca81d/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/DeterminateSystems/determinate/0.1.tar.gz\"\n      }\n    },\n    \"determinate-nixd-aarch64-darwin\": {\n      \"flake\": false,\n      \"locked\": {\n        \"narHash\": \"sha256-I03XaJRNQHh/N3ea2qpMU78DahTm7tSfF+urRABhKiQ=\",\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/macOS\"\n      },\n      \"original\": {\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/macOS\"\n      }\n    },\n    \"determinate-nixd-aarch64-linux\": {\n      \"flake\": false,\n      \"locked\": {\n        \"narHash\": \"sha256-yxF7hyInOc+S1BEaxjLBLHUFjSAjC0bRKh0glUt4ilo=\",\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/aarch64-linux\"\n      },\n      \"original\": {\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/aarch64-linux\"\n      }\n    },\n    \"determinate-nixd-x86_64-linux\": {\n      \"flake\": false,\n      \"locked\": {\n        \"narHash\": \"sha256-/LPSCwR/ueorahCcyUSVym3y3lnRXkc6pqWwW2T/yT8=\",\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/x86_64-linux\"\n      },\n      \"original\": {\n        \"type\": \"file\",\n        \"url\": \"https://install.determinate.systems/determinate-nixd/tag/v0.2.6/x86_64-linux\"\n      }\n    },\n    \"fenix\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ],\n        \"rust-analyzer-src\": \"rust-analyzer-src\"\n      },\n      \"locked\": {\n        \"lastModified\": 1732689334,\n        \"narHash\": \"sha256-yKI1KiZ0+bvDvfPTQ1ZT3oP/nIu3jPYm4dnbRd6hYg4=\",\n        \"rev\": \"a8a983027ca02b363dfc82fbe3f7d9548a8d3dce\",\n        \"revCount\": 2090,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/nix-community/fenix/0.1.2090%2Brev-a8a983027ca02b363dfc82fbe3f7d9548a8d3dce/0193814c-7c19-7c1a-a29e-27c7d7c19316/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/nix-community/fenix/0.1.1584.tar.gz\"\n      }\n    },\n    \"flake-compat\": {\n      \"locked\": {\n        \"lastModified\": 1696426674,\n        \"narHash\": \"sha256-kvjfFW7WAETZlt09AgDn1MrtKzP7t90Vf7vypd3OL1U=\",\n        \"rev\": \"0f9255e01c2351cc7d116c072cb317785dd33b33\",\n        \"revCount\": 57,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/edolstra/flake-compat/1.0.1/018afb31-abd1-7bff-a5e4-cff7e18efb7a/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/edolstra/flake-compat/1.0.0.tar.gz\"\n      }\n    },\n    \"flake-compat_2\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1696426674,\n        \"narHash\": \"sha256-kvjfFW7WAETZlt09AgDn1MrtKzP7t90Vf7vypd3OL1U=\",\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"rev\": \"0f9255e01c2351cc7d116c072cb317785dd33b33\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-parts\": {\n      \"inputs\": {\n        \"nixpkgs-lib\": [\n          \"nix\",\n          \"nix\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1719994518,\n        \"narHash\": \"sha256-pQMhCCHyQGRzdfAkdJ4cIWiw+JNuWsTX7f0ZYSyz0VY=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"rev\": \"9227223f6d922fee3c7b190b2cc238a99527bbb7\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"type\": \"github\"\n      }\n    },\n    \"git-hooks-nix\": {\n      \"inputs\": {\n        \"flake-compat\": [\n          \"nix\",\n          \"nix\"\n        ],\n        \"gitignore\": [\n          \"nix\",\n          \"nix\"\n        ],\n        \"nixpkgs\": [\n          \"nix\",\n          \"nix\",\n          \"nixpkgs\"\n        ],\n        \"nixpkgs-stable\": [\n          \"nix\",\n          \"nix\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1721042469,\n        \"narHash\": \"sha256-6FPUl7HVtvRHCCBQne7Ylp4p+dpP3P/OYuzjztZ4s70=\",\n        \"owner\": \"cachix\",\n        \"repo\": \"git-hooks.nix\",\n        \"rev\": \"f451c19376071a90d8c58ab1a953c6e9840527fd\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"cachix\",\n        \"repo\": \"git-hooks.nix\",\n        \"type\": \"github\"\n      }\n    },\n    \"libgit2\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1715853528,\n        \"narHash\": \"sha256-J2rCxTecyLbbDdsyBWn9w7r3pbKRMkI9E7RvRgAqBdY=\",\n        \"owner\": \"libgit2\",\n        \"repo\": \"libgit2\",\n        \"rev\": \"36f7e21ad757a3dacc58cf7944329da6bc1d6e96\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"libgit2\",\n        \"ref\": \"v1.8.1\",\n        \"repo\": \"libgit2\",\n        \"type\": \"github\"\n      }\n    },\n    \"naersk\": {\n      \"inputs\": {\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1733346208,\n        \"narHash\": \"sha256-a4WZp1xQkrnA4BbnKrzJNr+dYoQr5Xneh2syJoddFyE=\",\n        \"owner\": \"nix-community\",\n        \"repo\": \"naersk\",\n        \"rev\": \"378614f37a6bee5a3f2ef4f825a73d948d3ae921\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-community\",\n        \"repo\": \"naersk\",\n        \"type\": \"github\"\n      }\n    },\n    \"nix\": {\n      \"inputs\": {\n        \"nix\": \"nix_2\",\n        \"nixpkgs\": \"nixpkgs_2\"\n      },\n      \"locked\": {\n        \"lastModified\": 1733248733,\n        \"narHash\": \"sha256-rOFE8TSwWoup+LPNbmtTs6oLy7lYZ12L9GN+aZuQQaA=\",\n        \"rev\": \"98bbabc68ac8c897c2ad873c3557125691c45120\",\n        \"revCount\": 108,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/DeterminateSystems/nix/2.25.3/01939864-5191-788c-b898-163d916a3333/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/DeterminateSystems/nix/%3D2.25.3.tar.gz\"\n      }\n    },\n    \"nix_2\": {\n      \"inputs\": {\n        \"flake-compat\": \"flake-compat_2\",\n        \"flake-parts\": \"flake-parts\",\n        \"git-hooks-nix\": \"git-hooks-nix\",\n        \"libgit2\": \"libgit2\",\n        \"nixpkgs\": \"nixpkgs\",\n        \"nixpkgs-23-11\": \"nixpkgs-23-11\",\n        \"nixpkgs-regression\": \"nixpkgs-regression\"\n      },\n      \"locked\": {\n        \"lastModified\": 1732881227,\n        \"narHash\": \"sha256-T+wFMm3cj8pGJSwXmPuxG5pz+1gRDJoToF9OBxtzocA=\",\n        \"rev\": \"218cd6c16c0981cc32a45e3a15be1d3c1a68eb85\",\n        \"revCount\": 18724,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/NixOS/nix/2.25.3/01938786-bc70-79e3-b7ee-bb61f8e7f238/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/NixOS/nix/%3D2.25.3\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1723688146,\n        \"narHash\": \"sha256-sqLwJcHYeWLOeP/XoLwAtYjr01TISlkOfz+NG82pbdg=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"c3d4ac725177c030b1e289015989da2ad9d56af0\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-24.05\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs-23-11\": {\n      \"locked\": {\n        \"lastModified\": 1717159533,\n        \"narHash\": \"sha256-oamiKNfr2MS6yH64rUn99mIZjc45nGJlj9eGth/3Xuw=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"a62e6edd6d5e1fa0329b8653c801147986f8d446\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"a62e6edd6d5e1fa0329b8653c801147986f8d446\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs-regression\": {\n      \"locked\": {\n        \"lastModified\": 1643052045,\n        \"narHash\": \"sha256-uGJ0VXIhWKGXxkeNnq4TvV3CIOkUJ3PAoLZ3HMzNVMw=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"215d4d0fd80ca5163643b03a33fde804a29cc1e2\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"215d4d0fd80ca5163643b03a33fde804a29cc1e2\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs_2\": {\n      \"locked\": {\n        \"lastModified\": 1733120037,\n        \"narHash\": \"sha256-En+gSoVJ3iQKPDU1FHrR6zIxSLXKjzKY+pnh9tt+Yts=\",\n        \"rev\": \"f9f0d5c5380be0a599b1fb54641fa99af8281539\",\n        \"revCount\": 710194,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/NixOS/nixpkgs/0.2411.710194%2Brev-f9f0d5c5380be0a599b1fb54641fa99af8281539/01938be8-64ce-75c6-94d4-dbc2e4d547fe/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/NixOS/nixpkgs/%2A\"\n      }\n    },\n    \"nixpkgs_3\": {\n      \"locked\": {\n        \"lastModified\": 1730200266,\n        \"narHash\": \"sha256-l253w0XMT8nWHGXuXqyiIC/bMvh1VRszGXgdpQlfhvU=\",\n        \"rev\": \"807e9154dcb16384b1b765ebe9cd2bba2ac287fd\",\n        \"revCount\": 698755,\n        \"type\": \"tarball\",\n        \"url\": \"https://api.flakehub.com/f/pinned/NixOS/nixpkgs/0.1.698755%2Brev-807e9154dcb16384b1b765ebe9cd2bba2ac287fd/0192e144-1d3e-76b9-af9e-0f71e483f976/source.tar.gz\"\n      },\n      \"original\": {\n        \"type\": \"tarball\",\n        \"url\": \"https://flakehub.com/f/NixOS/nixpkgs/%3D0.1.698755\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"determinate\": \"determinate\",\n        \"fenix\": \"fenix\",\n        \"flake-compat\": \"flake-compat\",\n        \"naersk\": \"naersk\",\n        \"nix\": \"nix\",\n        \"nixpkgs\": \"nixpkgs_3\"\n      }\n    },\n    \"rust-analyzer-src\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1732633904,\n        \"narHash\": \"sha256-7VKcoLug9nbAN2txqVksWHHJplqK9Ou8dXjIZAIYSGc=\",\n        \"owner\": \"rust-lang\",\n        \"repo\": \"rust-analyzer\",\n        \"rev\": \"8d5e91c94f80c257ce6dbdfba7bd63a5e8a03fa6\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"rust-lang\",\n        \"ref\": \"nightly\",\n        \"repo\": \"rust-analyzer\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 8.6728515625,
          "content": "{\n  description = \"The Determinate Nix Installer\";\n\n  inputs = {\n    # The very next version and beyond we get SIGBUS on uninstall\n    nixpkgs.url = \"https://flakehub.com/f/NixOS/nixpkgs/=0.1.698755\";\n\n    fenix = {\n      url = \"https://flakehub.com/f/nix-community/fenix/0.1.1584.tar.gz\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n\n    naersk = {\n      url = \"github:nix-community/naersk\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n\n    nix = {\n      url = \"https://flakehub.com/f/DeterminateSystems/nix/=2.25.3.tar.gz\";\n      # Omitting `inputs.nixpkgs.follows = \"nixpkgs\";` on purpose\n    };\n\n    determinate = {\n      url = \"https://flakehub.com/f/DeterminateSystems/determinate/0.1.tar.gz\";\n\n      # We set the overrides below so the flake.lock has many fewer nodes.\n      #\n      # The `determinate` input is used to access the builds of `determinate-nixd`.\n      # Below, we access the `packages` outputs, which download static builds of `determinate-nixd` and makes them executable.\n      # The way we consume the determinate flake means the `nix` and `nixpkgs` inputs are not meaningfully used.\n      # This means `follows` won't cause surprisingly extensive rebuilds, just trivial `chmod +x` rebuilds.\n      inputs.nixpkgs.follows = \"nixpkgs\";\n      inputs.nix.follows = \"nix\";\n    };\n\n    flake-compat.url = \"https://flakehub.com/f/edolstra/flake-compat/1.0.0.tar.gz\";\n  };\n\n  outputs =\n    { self\n    , nixpkgs\n    , fenix\n    , naersk\n    , nix\n    , determinate\n    , ...\n    } @ inputs:\n    let\n      supportedSystems = [ \"x86_64-linux\" \"aarch64-linux\" \"x86_64-darwin\" \"aarch64-darwin\" ];\n      systemsSupportedByDeterminateNixd = [ \"x86_64-linux\" \"aarch64-linux\" \"x86_64-darwin\" \"aarch64-darwin\" ];\n\n      forAllSystems = f: nixpkgs.lib.genAttrs supportedSystems (system: (forSystem system f));\n\n      forSystem = system: f: f rec {\n        inherit system;\n        pkgs = import nixpkgs { inherit system; overlays = [ self.overlays.default ]; };\n        lib = pkgs.lib;\n      };\n\n      fenixToolchain = system: with fenix.packages.${system};\n        combine ([\n          stable.clippy\n          stable.rustc\n          stable.cargo\n          stable.rustfmt\n          stable.rust-src\n        ] ++ nixpkgs.lib.optionals (system == \"x86_64-linux\") [\n          targets.x86_64-unknown-linux-musl.stable.rust-std\n        ] ++ nixpkgs.lib.optionals (system == \"aarch64-linux\") [\n          targets.aarch64-unknown-linux-musl.stable.rust-std\n        ]);\n\n      nixTarballs = forAllSystems ({ system, ... }:\n        inputs.nix.tarballs_direct.${system}\n          or \"${inputs.nix.checks.\"${system}\".binaryTarball}/nix-${inputs.nix.packages.\"${system}\".default.version}-${system}.tar.xz\");\n\n      optionalPathToDeterminateNixd = system: if builtins.elem system systemsSupportedByDeterminateNixd then \"${inputs.determinate.packages.${system}.default}/bin/determinate-nixd\" else null;\n    in\n    {\n      overlays.default = final: prev:\n        let\n          toolchain = fenixToolchain final.stdenv.system;\n          naerskLib = final.callPackage naersk {\n            cargo = toolchain;\n            rustc = toolchain;\n          };\n          sharedAttrs = {\n            pname = \"nix-installer\";\n            version = (builtins.fromTOML (builtins.readFile ./Cargo.toml)).package.version;\n            src = builtins.path {\n              name = \"nix-installer-source\";\n              path = self;\n              filter = (path: type: baseNameOf path != \"nix\" && baseNameOf path != \".github\");\n            };\n\n            nativeBuildInputs = with final; [ ];\n            buildInputs = with final; [ ] ++ lib.optionals (final.stdenv.isDarwin) (with final.darwin.apple_sdk.frameworks; [\n              SystemConfiguration\n              final.darwin.libiconv\n            ]);\n\n            copyBins = true;\n            copyDocsToSeparateOutput = true;\n\n            doCheck = true;\n            doDoc = true;\n            doDocFail = true;\n            RUSTFLAGS = \"--cfg tokio_unstable\";\n            cargoTestOptions = f: f ++ [ \"--all\" ];\n\n            NIX_INSTALLER_TARBALL_PATH = nixTarballs.${final.stdenv.system};\n            DETERMINATE_NIXD_BINARY_PATH = optionalPathToDeterminateNixd final.stdenv.system;\n\n            override = { preBuild ? \"\", ... }: {\n              preBuild = preBuild + ''\n                # logRun \"cargo clippy --all-targets --all-features -- -D warnings\"\n              '';\n            };\n            postInstall = ''\n              cp nix-installer.sh $out/bin/nix-installer.sh\n            '';\n          };\n        in\n        rec {\n          nix-installer = naerskLib.buildPackage sharedAttrs;\n        } // nixpkgs.lib.optionalAttrs (prev.stdenv.system == \"x86_64-linux\") rec {\n          default = nix-installer-static;\n          nix-installer-static = naerskLib.buildPackage\n            (sharedAttrs // {\n              CARGO_BUILD_TARGET = \"x86_64-unknown-linux-musl\";\n            });\n        } // nixpkgs.lib.optionalAttrs (prev.stdenv.system == \"aarch64-linux\") rec {\n          default = nix-installer-static;\n          nix-installer-static = naerskLib.buildPackage\n            (sharedAttrs // {\n              CARGO_BUILD_TARGET = \"aarch64-unknown-linux-musl\";\n            });\n        };\n\n\n      devShells = forAllSystems ({ system, pkgs, ... }:\n        let\n          toolchain = fenixToolchain system;\n          check = import ./nix/check.nix { inherit pkgs toolchain; };\n        in\n        {\n          default = pkgs.mkShell {\n            name = \"nix-install-shell\";\n\n            RUST_SRC_PATH = \"${toolchain}/lib/rustlib/src/rust/library\";\n            NIX_INSTALLER_TARBALL_PATH = nixTarballs.${system};\n            DETERMINATE_NIXD_BINARY_PATH = optionalPathToDeterminateNixd system;\n\n            nativeBuildInputs = with pkgs; [ ];\n            buildInputs = with pkgs; [\n              toolchain\n              shellcheck\n              rust-analyzer\n              cargo-outdated\n              cacert\n              # cargo-audit # NOTE(cole-h): build currently broken because of time dependency and Rust 1.80\n              cargo-watch\n              nixpkgs-fmt\n              check.check-rustfmt\n              check.check-spelling\n              check.check-nixpkgs-fmt\n              check.check-editorconfig\n              check.check-semver\n              check.check-clippy\n              editorconfig-checker\n            ]\n            ++ lib.optionals (pkgs.stdenv.isDarwin) (with pkgs; [\n              libiconv\n              darwin.apple_sdk.frameworks.Security\n              darwin.apple_sdk.frameworks.SystemConfiguration\n            ])\n            ++ lib.optionals (pkgs.stdenv.isLinux) (with pkgs; [\n              checkpolicy\n              semodule-utils\n              /* users are expected to have a system docker, too */\n            ]);\n          };\n        });\n\n      checks = forAllSystems ({ system, pkgs, ... }:\n        let\n          toolchain = fenixToolchain system;\n          check = import ./nix/check.nix { inherit pkgs toolchain; };\n        in\n        {\n          check-rustfmt = pkgs.runCommand \"check-rustfmt\" { buildInputs = [ check.check-rustfmt ]; } ''\n            cd ${./.}\n            check-rustfmt\n            touch $out\n          '';\n          check-spelling = pkgs.runCommand \"check-spelling\" { buildInputs = [ check.check-spelling ]; } ''\n            cd ${./.}\n            check-spelling\n            touch $out\n          '';\n          check-nixpkgs-fmt = pkgs.runCommand \"check-nixpkgs-fmt\" { buildInputs = [ check.check-nixpkgs-fmt ]; } ''\n            cd ${./.}\n            check-nixpkgs-fmt\n            touch $out\n          '';\n          check-editorconfig = pkgs.runCommand \"check-editorconfig\" { buildInputs = [ pkgs.git check.check-editorconfig ]; } ''\n            cd ${./.}\n            check-editorconfig\n            touch $out\n          '';\n        });\n\n      packages = forAllSystems ({ system, pkgs, ... }:\n        {\n          inherit (pkgs) nix-installer;\n        } // nixpkgs.lib.optionalAttrs (system == \"x86_64-linux\") {\n          inherit (pkgs) nix-installer-static;\n          default = pkgs.nix-installer-static;\n        } // nixpkgs.lib.optionalAttrs (system == \"aarch64-linux\") {\n          inherit (pkgs) nix-installer-static;\n          default = pkgs.nix-installer-static;\n        } // nixpkgs.lib.optionalAttrs (pkgs.stdenv.isDarwin) {\n          default = pkgs.nix-installer;\n\n          determinate-nixd = pkgs.runCommand \"determinate-nixd-link\" { } ''\n            ln -s ${optionalPathToDeterminateNixd system} $out\n          '';\n        });\n\n      hydraJobs = {\n        vm-test = import ./nix/tests/vm-test {\n          inherit forSystem;\n          inherit (nixpkgs) lib;\n\n          binaryTarball = nix.tarballs_indirect;\n        };\n        container-test = import ./nix/tests/container-test {\n          inherit forSystem;\n\n          binaryTarball = nix.tarballs_indirect;\n        };\n      };\n    };\n}\n"
        },
        {
          "name": "nix-installer.sh",
          "type": "blob",
          "size": 17.0908203125,
          "content": "#!/bin/sh\n# shellcheck shell=dash\n\n# If you need an offline install, or you'd prefer to run the binary directly, head to\n# https://github.com/DeterminateSystems/nix-installer/releases then pick the version and platform\n# most appropriate for your deployment target.\n#\n# This is just a little script that selects and downloads the right `nix-installer`. It does\n# platform detection, downloads the installer, and runs it; that's it.\n#\n# It runs on Unix shells like {a,ba,da,k,z}sh. It uses the common `local`\n# extension. Note: Most shells limit `local` to 1 var per line, contra bash.\n\n# This script is based off https://github.com/rust-lang/rustup/blob/f8d7b3baba7a63237cb2b82ef49a68a37dd0633c/rustup-init.sh\n\nif [ \"$KSH_VERSION\" = 'Version JM 93t+ 2010-03-05' ]; then\n    # The version of ksh93 that ships with many illumos systems does not\n    # support the \"local\" extension.  Print a message rather than fail in\n    # subtle ways later on:\n    echo 'nix-installer does not work with this ksh93 version; please try bash!' >&2\n    exit 1\nfi\n\n\nset -u\n\n# If NIX_INSTALLER_FORCE_ALLOW_HTTP is unset or empty, default it.\nNIX_INSTALLER_BINARY_ROOT=\"${NIX_INSTALLER_BINARY_ROOT:-https://install.determinate.systems/nix}\"\n\nmain() {\n    downloader --check\n    need_cmd uname\n    need_cmd mktemp\n    need_cmd chmod\n    need_cmd mkdir\n    need_cmd rm\n    need_cmd rmdir\n\n    get_architecture || return 1\n    local _arch=\"$RETVAL\"\n    assert_nz \"$_arch\" \"arch\"\n\n    local _ext=\"\"\n    case \"$_arch\" in\n        *windows*)\n            _ext=\".exe\"\n            ;;\n    esac\n\n    local _url=\"${NIX_INSTALLER_OVERRIDE_URL-${NIX_INSTALLER_BINARY_ROOT}/nix-installer-${_arch}${_ext}}\"\n\n    local _dir\n    if ! _dir=\"$(ensure mktemp -d)\"; then\n        # Because the previous command ran in a subshell, we must manually\n        # propagate exit status.\n        exit 1\n    fi\n    local _file=\"${_dir}/nix-installer${_ext}\"\n\n    local _ansi_escapes_are_valid=false\n    if [ -t 2 ]; then\n        if [ \"${TERM+set}\" = 'set' ]; then\n            case \"$TERM\" in\n                xterm*|rxvt*|urxvt*|linux*|vt*)\n                    _ansi_escapes_are_valid=true\n                ;;\n            esac\n        fi\n    fi\n\n    # check if we have to use /dev/tty to prompt the user\n    local need_tty=yes\n    for arg in \"$@\"; do\n        case \"$arg\" in\n            --no-confirm)\n                need_tty=no\n                ;;\n            *)\n                continue\n                ;;\n        esac\n    done\n    if [ \"${NIX_INSTALLER_NO_CONFIRM-}\" ]; then\n        need_tty=no\n    fi\n\n    if $_ansi_escapes_are_valid; then\n        printf \"\\33[1minfo:\\33[0m downloading installer \\33[4m%s\\33[0m\\n\" \"$_url\" 1>&2\n    else\n        printf 'info: downloading installer (%s)\\n' \"$_url\" 1>&2\n    fi\n\n    ensure mkdir -p \"$_dir\"\n    ensure downloader \"$_url\" \"$_file\" \"$_arch\"\n    ensure chmod u+x \"$_file\"\n    if [ ! -x \"$_file\" ]; then\n        printf '%s\\n' \"Cannot execute $_file (likely because of mounting /tmp as noexec).\" 1>&2\n        printf '%s\\n' \"Please copy the file to a location where you can execute binaries and run ./nix-installer${_ext}.\" 1>&2\n        exit 1\n    fi\n\n    if [ \"$need_tty\" = \"yes\" ] && [ ! -t 0 ]; then\n        # The installer is going to want to ask for confirmation by\n        # reading stdin.  This script was piped into `sh` though and\n        # doesn't have stdin to pass to its children. Instead we're going\n        # to explicitly connect /dev/tty to the installer's stdin.\n        if [ ! -t 1 ]; then\n            err \"Unable to run interactively. Run with --no-confirm to accept defaults, --help for additional options\"\n        fi\n\n        ignore \"$_file\" \"$@\" < /dev/tty\n    else\n        ignore \"$_file\" \"$@\"\n    fi\n\n    local _retval=$?\n\n    ignore rm \"$_file\"\n    ignore rmdir \"$_dir\"\n\n    return \"$_retval\"\n}\n\ncheck_proc() {\n    # Check for /proc by looking for the /proc/self/exe link\n    # This is only run on Linux\n    if ! test -L /proc/self/exe ; then\n        err \"fatal: Unable to find /proc/self/exe.  Is /proc mounted?  Installation cannot proceed without /proc.\"\n    fi\n}\n\nget_architecture() {\n    local _ostype _cputype _arch\n    _ostype=\"$(uname -s)\"\n    _cputype=\"$(uname -m)\"\n\n    if [ \"$_ostype\" = Linux ]; then\n        if [ \"$(uname -o)\" = Android ]; then\n            _ostype=Android\n        fi\n        if ldd --version 2>&1 | grep -q 'musl'; then\n            _clibtype=\"musl\"\n        fi\n    fi\n\n    if [ \"$_ostype\" = Darwin ]; then\n        # Darwin `uname -m` can lie due to Rosetta shenanigans. If you manage to\n        # invoke a native shell binary and then a native uname binary, you can\n        # get the real answer, but that's hard to ensure, so instead we use\n        # `sysctl` (which doesn't lie) to check for the actual architecture.\n        if [ \"$_cputype\" = i386 ]; then\n            # Handling i386 compatibility mode in older macOS versions (<10.15)\n            # running on x86_64-based Macs.\n            # Starting from 10.15, macOS explicitly bans all i386 binaries from running.\n            # See: <https://support.apple.com/en-us/HT208436>\n\n            # Avoid `sysctl: unknown oid` stderr output and/or non-zero exit code.\n            if sysctl hw.optional.x86_64 2> /dev/null || true | grep -q ': 1'; then\n                _cputype=x86_64\n            fi\n        elif [ \"$_cputype\" = x86_64 ]; then\n            # Handling x86-64 compatibility mode (a.k.a. Rosetta 2)\n            # in newer macOS versions (>=11) running on arm64-based Macs.\n            # Rosetta 2 is built exclusively for x86-64 and cannot run i386 binaries.\n\n            # Avoid `sysctl: unknown oid` stderr output and/or non-zero exit code.\n            if sysctl hw.optional.arm64 2> /dev/null || true | grep -q ': 1'; then\n                _cputype=arm64\n            fi\n        fi\n    fi\n\n    if [ \"$_ostype\" = SunOS ]; then\n        # Both Solaris and illumos presently announce as \"SunOS\" in \"uname -s\"\n        # so use \"uname -o\" to disambiguate.  We use the full path to the\n        # system uname in case the user has coreutils uname first in PATH,\n        # which has historically sometimes printed the wrong value here.\n        if [ \"$(/usr/bin/uname -o)\" = illumos ]; then\n            _ostype=illumos\n        fi\n\n        # illumos systems have multi-arch userlands, and \"uname -m\" reports the\n        # machine hardware name; e.g., \"i86pc\" on both 32- and 64-bit x86\n        # systems.  Check for the native (widest) instruction set on the\n        # running kernel:\n        if [ \"$_cputype\" = i86pc ]; then\n            _cputype=\"$(isainfo -n)\"\n        fi\n    fi\n\n    case \"$_ostype\" in\n        Linux)\n            check_proc\n            _ostype=linux\n            ;;\n\n        Darwin)\n            _ostype=darwin\n            ;;\n\n        *)\n            err \"unrecognized OS type: $_ostype\"\n            ;;\n\n    esac\n\n    case \"$_cputype\" in\n        aarch64 | arm64)\n            _cputype=aarch64\n            ;;\n\n        x86_64 | x86-64 | x64 | amd64)\n            _cputype=x86_64\n            ;;\n\n        *)\n            err \"unknown CPU type: $_cputype\"\n            ;;\n\n    esac\n\n    _arch=\"${_cputype}-${_ostype}\"\n\n    RETVAL=\"$_arch\"\n}\n\nsay() {\n    printf 'nix-installer: %s\\n' \"$1\"\n}\n\nerr() {\n    say \"$1\" >&2\n    exit 1\n}\n\nneed_cmd() {\n    if ! check_cmd \"$1\"; then\n        err \"need '$1' (command not found)\"\n    fi\n}\n\ncheck_cmd() {\n    command -v \"$1\" > /dev/null 2>&1\n}\n\nassert_nz() {\n    if [ -z \"$1\" ]; then err \"assert_nz $2\"; fi\n}\n\n# Run a command that should never fail. If the command fails execution\n# will immediately terminate with an error showing the failing\n# command.\nensure() {\n    if ! \"$@\"; then err \"command failed: $*\"; fi\n}\n\n# This is just for indicating that commands' results are being\n# intentionally ignored. Usually, because it's being executed\n# as part of error handling.\nignore() {\n    \"$@\"\n}\n\n# This wraps curl or wget. Try curl first, if not installed,\n# use wget instead.\ndownloader() {\n    local _dld\n    local _ciphersuites\n    local _err\n    local _status\n    local _retry\n    if check_cmd curl; then\n        _dld=curl\n    elif check_cmd wget; then\n        _dld=wget\n    else\n        _dld='curl or wget' # to be used in error message of need_cmd\n    fi\n\n    if [ \"$1\" = --check ]; then\n        need_cmd \"$_dld\"\n    elif [ \"$_dld\" = curl ]; then\n        check_curl_for_retry_support\n        _retry=\"$RETVAL\"\n        get_ciphersuites_for_curl\n        _ciphersuites=\"$RETVAL\"\n        if [ -n \"$_ciphersuites\" ]; then\n            if [ -n \"${NIX_INSTALLER_FORCE_ALLOW_HTTP-}\" ]; then\n                # shellcheck disable=SC2086 # ignore because $_retry could be a flag (e.g. `--retry 5`)\n                _err=$(curl $_retry --silent --show-error --fail --location \"$1\" --output \"$2\" 2>&1)\n            else\n                # shellcheck disable=SC2086 # ignore because $_retry could be a flag (e.g. `--retry 5`)\n                _err=$(curl $_retry --proto '=https' --tlsv1.2 --ciphers \"$_ciphersuites\" --silent --show-error --fail --location \"$1\" --output \"$2\" 2>&1)\n            fi\n            _status=$?\n        else\n            echo \"Warning: Not enforcing strong cipher suites for TLS, this is potentially less secure\"\n            if ! check_help_for \"$3\" curl --proto --tlsv1.2; then\n                echo \"Warning: Not enforcing TLS v1.2, this is potentially less secure\"\n                # shellcheck disable=SC2086 # ignore because $_retry could be a flag (e.g. `--retry 5`)\n                _err=$(curl $_retry --silent --show-error --fail --location \"$1\" --output \"$2\" 2>&1)\n                _status=$?\n            else\n                # shellcheck disable=SC2086 # ignore because $_retry could be a flag (e.g. `--retry 5`)\n                _err=$(curl $_retry --proto '=https' --tlsv1.2 --silent --show-error --fail --location \"$1\" --output \"$2\" 2>&1)\n                _status=$?\n            fi\n        fi\n        if [ -n \"$_err\" ]; then\n            echo \"$_err\" >&2\n            if echo \"$_err\" | grep -q 404$; then\n                err \"installer for platform '$3' not found, this may be unsupported\"\n            fi\n        fi\n        return $_status\n    elif [ \"$_dld\" = wget ]; then\n        if [ \"$(wget -V 2>&1|head -2|tail -1|cut -f1 -d\" \")\" = \"BusyBox\" ]; then\n            echo \"Warning: using the BusyBox version of wget.  Not enforcing strong cipher suites for TLS or TLS v1.2, this is potentially less secure\"\n            _err=$(wget \"$1\" -O \"$2\" 2>&1)\n            _status=$?\n        else\n            get_ciphersuites_for_wget\n            _ciphersuites=\"$RETVAL\"\n            if [ -n \"$_ciphersuites\" ]; then\n                _err=$(wget --https-only --secure-protocol=TLSv1_2 --ciphers \"$_ciphersuites\" \"$1\" -O \"$2\" 2>&1)\n                _status=$?\n            else\n                echo \"Warning: Not enforcing strong cipher suites for TLS, this is potentially less secure\"\n                if ! check_help_for \"$3\" wget --https-only --secure-protocol; then\n                    echo \"Warning: Not enforcing TLS v1.2, this is potentially less secure\"\n                    _err=$(wget \"$1\" -O \"$2\" 2>&1)\n                    _status=$?\n                else\n                    _err=$(wget --https-only --secure-protocol=TLSv1_2 \"$1\" -O \"$2\" 2>&1)\n                    _status=$?\n                fi\n            fi\n        fi\n        if [ -n \"$_err\" ]; then\n            echo \"$_err\" >&2\n            if echo \"$_err\" | grep -q ' 404 Not Found$'; then\n                err \"installer for platform '$3' not found, this may be unsupported\"\n            fi\n        fi\n        return $_status\n    else\n        err \"Unknown downloader\"   # should not reach here\n    fi\n}\n\ncheck_help_for() {\n    local _arch\n    local _cmd\n    local _arg\n    _arch=\"$1\"\n    shift\n    _cmd=\"$1\"\n    shift\n\n    local _category\n    if \"$_cmd\" --help | grep -q '\"--help all\"'; then\n      _category=\"all\"\n    else\n      _category=\"\"\n    fi\n\n    case \"$_arch\" in\n\n        *darwin*)\n        if check_cmd sw_vers; then\n            case $(sw_vers -productVersion) in\n                10.*)\n                    # If we're running on macOS, older than 10.13, then we always\n                    # fail to find these options to force fallback\n                    if [ \"$(sw_vers -productVersion | cut -d. -f2)\" -lt 13 ]; then\n                        # Older than 10.13\n                        echo \"Warning: Detected macOS platform older than 10.13\"\n                        return 1\n                    fi\n                    ;;\n                11.*)\n                    # We assume Big Sur will be OK for now\n                    ;;\n                *)\n                    # Unknown product version, warn and continue\n                    echo \"Warning: Detected unknown macOS major version: $(sw_vers -productVersion)\"\n                    echo \"Warning TLS capabilities detection may fail\"\n                    ;;\n            esac\n        fi\n        ;;\n\n    esac\n\n    for _arg in \"$@\"; do\n        if ! \"$_cmd\" --help $_category | grep -q -- \"$_arg\"; then\n            return 1\n        fi\n    done\n\n    true # not strictly needed\n}\n\n# Check if curl supports the --retry flag, then pass it to the curl invocation.\ncheck_curl_for_retry_support() {\n  local _retry_supported=\"\"\n  # \"unspecified\" is for arch, allows for possibility old OS using macports, homebrew, etc.\n  if check_help_for \"notspecified\" \"curl\" \"--retry\"; then\n    _retry_supported=\"--retry 3\"\n  fi\n\n  RETVAL=\"$_retry_supported\"\n}\n\n# Return cipher suite string specified by user, otherwise return strong TLS 1.2-1.3 cipher suites\n# if support by local tools is detected. Detection currently supports these curl backends:\n# GnuTLS and OpenSSL (possibly also LibreSSL and BoringSSL). Return value can be empty.\nget_ciphersuites_for_curl() {\n    if [ -n \"${RUSTUP_TLS_CIPHERSUITES-}\" ]; then\n        # user specified custom cipher suites, assume they know what they're doing\n        RETVAL=\"$RUSTUP_TLS_CIPHERSUITES\"\n        return\n    fi\n\n    local _openssl_syntax=\"no\"\n    local _gnutls_syntax=\"no\"\n    local _backend_supported=\"yes\"\n    if curl -V | grep -q ' OpenSSL/'; then\n        _openssl_syntax=\"yes\"\n    elif curl -V | grep -iq ' LibreSSL/'; then\n        _openssl_syntax=\"yes\"\n    elif curl -V | grep -iq ' BoringSSL/'; then\n        _openssl_syntax=\"yes\"\n    elif curl -V | grep -iq ' GnuTLS/'; then\n        _gnutls_syntax=\"yes\"\n    else\n        _backend_supported=\"no\"\n    fi\n\n    local _args_supported=\"no\"\n    if [ \"$_backend_supported\" = \"yes\" ]; then\n        # \"unspecified\" is for arch, allows for possibility old OS using macports, homebrew, etc.\n        if check_help_for \"notspecified\" \"curl\" \"--tlsv1.2\" \"--ciphers\" \"--proto\"; then\n            _args_supported=\"yes\"\n        fi\n    fi\n\n    local _cs=\"\"\n    if [ \"$_args_supported\" = \"yes\" ]; then\n        if [ \"$_openssl_syntax\" = \"yes\" ]; then\n            _cs=$(get_strong_ciphersuites_for \"openssl\")\n        elif [ \"$_gnutls_syntax\" = \"yes\" ]; then\n            _cs=$(get_strong_ciphersuites_for \"gnutls\")\n        fi\n    fi\n\n    RETVAL=\"$_cs\"\n}\n\n# Return cipher suite string specified by user, otherwise return strong TLS 1.2-1.3 cipher suites\n# if support by local tools is detected. Detection currently supports these wget backends:\n# GnuTLS and OpenSSL (possibly also LibreSSL and BoringSSL). Return value can be empty.\nget_ciphersuites_for_wget() {\n    if [ -n \"${RUSTUP_TLS_CIPHERSUITES-}\" ]; then\n        # user specified custom cipher suites, assume they know what they're doing\n        RETVAL=\"$RUSTUP_TLS_CIPHERSUITES\"\n        return\n    fi\n\n    local _cs=\"\"\n    if wget -V | grep -q '\\-DHAVE_LIBSSL'; then\n        # \"unspecified\" is for arch, allows for possibility old OS using macports, homebrew, etc.\n        if check_help_for \"notspecified\" \"wget\" \"TLSv1_2\" \"--ciphers\" \"--https-only\" \"--secure-protocol\"; then\n            _cs=$(get_strong_ciphersuites_for \"openssl\")\n        fi\n    elif wget -V | grep -q '\\-DHAVE_LIBGNUTLS'; then\n        # \"unspecified\" is for arch, allows for possibility old OS using macports, homebrew, etc.\n        if check_help_for \"notspecified\" \"wget\" \"TLSv1_2\" \"--ciphers\" \"--https-only\" \"--secure-protocol\"; then\n            _cs=$(get_strong_ciphersuites_for \"gnutls\")\n        fi\n    fi\n\n    RETVAL=\"$_cs\"\n}\n\n# Return strong TLS 1.2-1.3 cipher suites in OpenSSL or GnuTLS syntax. TLS 1.2\n# excludes non-ECDHE and non-AEAD cipher suites. DHE is excluded due to bad\n# DH params often found on servers (see RFC 7919). Sequence matches or is\n# similar to Firefox 68 ESR with weak cipher suites disabled via about:config.\n# $1 must be openssl or gnutls.\nget_strong_ciphersuites_for() {\n    if [ \"$1\" = \"openssl\" ]; then\n        # OpenSSL is forgiving of unknown values, no problems with TLS 1.3 values on versions that don't support it yet.\n        echo \"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384\"\n    elif [ \"$1\" = \"gnutls\" ]; then\n        # GnuTLS isn't forgiving of unknown values, so this may require a GnuTLS version that supports TLS 1.3 even if wget doesn't.\n        # Begin with SECURE128 (and higher) then remove/add to build cipher suites. Produces same 9 cipher suites as OpenSSL but in slightly different order.\n        echo \"SECURE128:-VERS-SSL3.0:-VERS-TLS1.0:-VERS-TLS1.1:-VERS-DTLS-ALL:-CIPHER-ALL:-MAC-ALL:-KX-ALL:+AEAD:+ECDHE-ECDSA:+ECDHE-RSA:+AES-128-GCM:+CHACHA20-POLY1305:+AES-256-GCM\"\n    fi\n}\n\nmain \"$@\" || exit 1\n"
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.056640625,
          "content": "[toolchain]\nchannel = \"stable\"\ncomponents = [ \"rustfmt\" ]\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.533203125,
          "content": "# Put a trailing comma after a block based match arm (non-block arms are not affected)\nmatch_block_trailing_comma = true\n# Merge multiple derives into a single one.\nmerge_derives = true\n# Reorder import and extern crate statements alphabetically in groups (a group is separated by a newline).\nreorder_imports = true\n# Reorder mod declarations alphabetically in group.\nreorder_modules = true\n# Use field initialize shorthand if possible.\nuse_field_init_shorthand = true\n# Replace uses of the try! macro by the ? shorthand\nuse_try_shorthand = true\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "upload_s3.sh",
          "type": "blob",
          "size": 1.916015625,
          "content": "set -eu\n\nDEST=\"$1\"\nGIT_ISH=\"$2\"\nDEST_INSTALL_URL=\"$3\"\n\nis_tag() {\n  if [[ \"$GITHUB_REF_TYPE\" == \"tag\" ]]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\n# If the revision directory has already been created in S3 somehow, we don't want to reupload\nif aws s3 ls \"$AWS_BUCKET\"/\"$GIT_ISH\"/; then\n  # Only exit if it's not a tag (since we're tagging a commit previously pushed to main)\n  if ! is_tag; then\n    echo \"Revision $GIT_ISH was already uploaded; exiting\"\n    exit 1\n  fi\nfi\n\nsudo chown $USER: -R artifacts/\n\nmkdir \"$DEST\"\nmkdir \"$GIT_ISH\"\n\ncp nix-installer.sh \"$DEST\"/\ncp nix-installer.sh \"$GIT_ISH\"/\n\nfor artifact in $(find artifacts/ -type f); do\n  chmod +x \"$artifact\"\n  cp \"$artifact\" \"$DEST\"/\n  cp \"$artifact\" \"$GIT_ISH\"/\ndone\n\nsed -i \"s@https://install.determinate.systems/nix@$DEST_INSTALL_URL@\" \"$DEST/nix-installer.sh\"\nsed -i \"s@https://install.determinate.systems/nix@https://install.determinate.systems/nix/rev/$GIT_ISH@\" \"$GIT_ISH/nix-installer.sh\"\n\nif is_tag; then\n  cp \"$DEST/nix-installer.sh\" ./nix-installer.sh\nfi\n\n# If any artifact already exists in S3 and the hash is the same, we don't want to reupload\ncheck_reupload() {\n  dest=\"$1\"\n\n  for file in $(find \"$dest\" -type f); do\n    artifact_path=\"$dest\"/\"$(basename \"$artifact\")\"\n    md5=\"$(md5sum \"$artifact\" | cut -d' ' -f1)\"\n    obj=\"$(aws s3api head-object --bucket \"$AWS_BUCKET\" --key \"$artifact_path\" || echo '{}')\"\n    obj_md5=\"$(jq -r .ETag <<<\"$obj\" | jq -r)\" # head-object call returns ETag quoted, so `jq -r` again to unquote it\n\n    if [[ \"$md5\" == \"$obj_md5\" ]]; then\n      echo \"Artifact $artifact was already uploaded; exiting\"\n      # If we already uploaded to a tag, that's probably bad\n      is_tag && exit 1 || exit 0\n    fi\n  done\n}\n\ncheck_reupload \"$DEST\"\nif ! is_tag; then\n  check_reupload \"$GIT_ISH\"\nfi\n\naws s3 sync \"$DEST\"/ s3://\"$AWS_BUCKET\"/\"$DEST\"/ --acl public-read\nif ! is_tag; then\n  aws s3 sync \"$GIT_ISH\"/ s3://\"$AWS_BUCKET\"/\"$GIT_ISH\"/ --acl public-read\nfi\n"
        }
      ]
    }
  ]
}