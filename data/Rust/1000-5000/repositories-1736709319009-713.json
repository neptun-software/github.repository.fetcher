{
  "metadata": {
    "timestamp": 1736709319009,
    "page": 713,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/windows-drivers-rs",
      "stars": 1545,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# Auto detect text files and perform normalization\n*          text=auto\n\n*.rs       text diff=rust\n*.toml     text diff=toml\nCargo.lock text diff=toml\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "target/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.9599609375,
          "content": "# Contributing to windows-drivers-rs\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit <https://cla.opensource.microsoft.com>.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n* [Code of Conduct](#coc)\n* [Issues and Bugs](#issue)\n* [Feature Requests](#feature)\n* [Submission Guidelines](#submit)\n* [Getting Started with windows-drivers-rs Development](#development)\n\n## <a name=\"coc\"></a> Code of Conduct\n\nHelp us keep this project open and inclusive. Please read and follow our [Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\n## <a name=\"issue\"></a> Found an Issue?\n\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\n[submitting an issue](#submit-issue) to the GitHub Repository. Even better, you can\n[submit a Pull Request](#submit-pr) with a fix.\n\n## <a name=\"feature\"></a> Want a Feature?\n\nYou can *request* a new feature by [submitting an issue](#submit-issue) to the GitHub\nRepository. If you would like to *implement* a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\n\n* **Small Features** can be crafted and directly [submitted as a Pull Request](#submit-pr).\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### <a name=\"submit-issue\"></a> Submitting an Issue\n\nBefore you submit an issue, search the archive, maybe your question was already answered.\n\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures, by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\n* **Overview of the Issue** - if an error is being thrown a non-minified stack trace helps\n* **Version** - what version is affected (e.g. 0.1.2)\n* **Motivation for or Use Case** - explain what are you trying to do and why the current behavior is a bug for you\n* **Browsers and Operating System** - is this a problem with all browsers?\n* **Reproduce the Error** - provide a live example or a unambiguous set of steps\n* **Related Issues** - has a similar issue been reported before?\n* **Suggest a Fix** - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information at the corresponding repository's issues link: <https://github.com/microsoft/windows-drivers-rs/issues/new>].\n\n### <a name=\"submit-pr\"></a> Submitting a Pull Request (PR)\n\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\n* Search the repository (<https://github.com/microsoft/windows-drivers-rs>) for an open or closed PR\n  that relates to your submission. You don't want to duplicate effort.\n\n* Make your changes in a new git fork:\n\n* Commit your changes using a descriptive commit message\n* Push your fork to GitHub:\n* In GitHub, create a pull request\n* If we suggest changes then:\n  * Make the required updates.\n  * Rebase your fork and force push to your GitHub repository (this will update your Pull Request):\n\n    ```shell\n    git rebase master -i\n    git push -f\n    ```\n\nThat's it! Thank you for your contribution!\n\n## <a name=\"development\"></a> Getting Started with windows-drivers-rs Development\n\n### Development Requirements\n\nThe following tools should be installed as a part of the `windows-drivers-rs` developer workflow:\n\n* `cargo-expand`: `cargo install --locked cargo-expand --version 1.0.85`\n* `cargo-audit`: `cargo install --locked cargo-audit`\n* `cargo-machete`: `cargo install --locked cargo-machete`\n* `taplo-cli`: `cargo install --locked taplo-cli`\n\n**Note on arm64:** ARM64 support for ring is [not released yet](https://github.com/briansmith/ring/issues/1167), so TLS features must be disabled until arm64 is officially supported by ring (probably in 0.17.0 release)\n\n### Generating Documentation\n\n* To compile and open documentation: `cargo doc --locked --open`\n  * To include nightly features: `cargo +nightly doc --locked --open --features nightly`\n  * To open docs for non-host architecture: `cargo doc --locked --open --target <target-triple> --workspace --exclude wdk-macros`\n    * `--target` is incompatible with `proc-macro` crates due to a [cargo bug](https://github.com/rust-lang/cargo/issues/10368)\n\n### Policy on using Nightly/Unstable Features\n\n#### In `lib` and `bin` targets\n\nThe crates in this repository are designed to work with `stable` rust. Some of the crates expose a `nightly` feature that adds additional functionality that requires unstable rust features in the `nightly` toolchains.\n\n#### In `test` targets and unit tests\n\n`test` targets and unit tests in other targets will automatically enable nightly features when a nightly toolchain is detected. This is done via the `nightly_toolchain` `cfg` value. This allows us to take advantage of unstable features (ex. [`assert_matches`](https://doc.rust-lang.org/std/assert_matches/macro.assert_matches.html)) in tests.\n\n### Build and Test\n\nTo **only build** the workspace: `cargo build`\n\nTo **both** build and package the samples in the workspace: `cargo make --cwd .\\crates\\<driver-name>`\n\n### Quality\n\nTo maintain the quality of code, tests and tools are required to pass before contributions are accepted. This is a suggested list of things that should be run before contributions will be accepted:\n\n**_Functional Correctness:_**\n\n* `cargo test --locked`\n  * To test `nightly` features: `cargo +nightly test --locked --features nightly`\n\n**_Static Analysis and Linting:_**\n\n* `cargo clippy --locked --all-targets -- -D warnings`\n  * To lint `nightly` features: `cargo +nightly clippy --locked --all-targets --features nightly -- -D warnings`\n\n**_Formatting:_**\n\n* Check for consistent `.rs` file formatting: `cargo +nightly fmt --all -- --check`\n  * Running `cargo +nightly fmt --all` resolves these formatting inconsistencies usually\n  * `+nightly` is required to use some `nightly` configuration features in [the `rustfmt.toml` config](./rustfmt.toml)\n* Check for consistent `.toml` file formatting: `taplo fmt --check --diff`\n  * Running `taplo fmt` resolves these formatting inconsistencies usually\n\n**_Dependency Analysis:_**\n\n* Scan for security advisories in dependent crates: `cargo audit --deny warnings`\n* Scan for unused dependencies: `cargo machete --skip-target-dir`\n\n**_Rust Documentation Build Test_**\n\n* `cargo doc --locked`\n  * To build docs for `nightly` features: `cargo +nightly doc --locked --features nightly`\n\n### A Note on Code-Style\n\nAny bindings generated to C code maintains their original names, including their original style conventions(ex. PascalCase for functions). These bindings should all reside in `wdk-sys` and are marked as `unsafe` since all ffi is inherently `unsafe`. `wdk-sys` also retains manual implementations of wdk code (ex. because `bindgen` fails to resolve some macros). These should also maintain their original names and style.\n\nAny Rust wrappers written around the bindings should follow [Rust style and naming conventions](https://rust-lang.github.io/api-guidelines/naming.html) per RFC-430. Any wrappers around the FFI bindings should also be written to guarantee safety. Refer to [this](https://doc.rust-lang.org/nomicon/ffi.html#creating-a-safe-interface) for more information on writing safe rust wrappers to ffi code.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 23.728515625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418c75fa768af9c03be99d17643f93f79bbba589895012a80e3452a19ddda15b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"038dfcf04a5feb68e9c60b21c9625a54c2c0616e79b72b0fd87075a056ae1d1b\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c03a11a9034d92058ceb6ee011ce58af4a9bf61491aa7e1e59ecd24bd40d22d4\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad186efb764318d35165f1758e7dcef3b10628e26d41a44bc5550652e6804391\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61a38449feb7068f52bb06c12759005cf459ee52bb4adc1d5a7c4322d716fb19\"\ndependencies = [\n \"anstyle\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3d1d046238990b9cf5bcde22a3fb3584ee5cf65fb2765f454ed428c7a0063da\"\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a00dc851838a2120612785d195287475a3ac45514741da670b735818822129a0\"\ndependencies = [\n \"bitflags\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools 0.12.1\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn\",\n \"which\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24b1f0365a6c6bb4020cd05806fd0d33c44d38046b8bd7f0e40814b9763cabfc\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"324c74f2155653c90b04f25b2a47a8a631360cb908f92a772695f430c7e31052\"\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64acc1846d54c1fe936a78dc189c34e28d3f5afc348403f28ecf53660b9b8462\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap-cargo\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23b2ea69cefa96b848b73ad516ad1d59a195cdf9263087d977f648a818c8b43e\"\ndependencies = [\n \"anstyle\",\n \"clap\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fb8393d67ba2e7bfaf28a23458e4e2b543cc73a99595511eb207fdb8aede942\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bac35c6dafb060fd4d275d9a4ffae97917c13a6327903a8be2153cd964f7085\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b82cf0babdbd58558212896d1a4272303a57bdb245c2bf1147185fb45640e70\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b6a852b24ab71dffc585bcb46eaf7959d175cb865a7152e35b348d1b2960422\"\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8478577c03552c21db0e2724ffb8986a5ce7af88107e6be5d2ee6e158c12800\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e310b3a6b5907f99202fcdb4960ff45b93735d7c7d96b760fcff8db2dc0e103d\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f12335488a2f3b0a83b14edad48dca9879ce89b2edd10e80237e4e852dd645e\"\ndependencies = [\n \"proc-macro2\",\n \"syn\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b91213439dad192326a0d7c6ee3955910425f441d7038e0d6933b0aec5c4517f\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.7\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"955d28af4278de8121b7ebeb796b6a45735dc01436d898801014aced2773a3d6\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.128\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ff5456707a1de34e7e37f2a6fd3d3f808c318259cbd01ab6377795054b483d8\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.77\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f35bcdf61fd8e7be6caf75f429fdca8beb3ed76584befb503b1569faee373ed\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"wdk\"\nversion = \"0.3.0\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n \"wdk-build\",\n \"wdk-sys\",\n]\n\n[[package]]\nname = \"wdk-alloc\"\nversion = \"0.3.0\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n \"wdk-build\",\n \"wdk-sys\",\n]\n\n[[package]]\nname = \"wdk-build\"\nversion = \"0.3.0\"\ndependencies = [\n \"anyhow\",\n \"bindgen\",\n \"camino\",\n \"cargo_metadata\",\n \"cfg-if\",\n \"clap\",\n \"clap-cargo\",\n \"lazy_static\",\n \"paste\",\n \"rustversion\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n \"tracing\",\n \"windows\",\n]\n\n[[package]]\nname = \"wdk-macros\"\nversion = \"0.3.0\"\ndependencies = [\n \"itertools 0.13.0\",\n \"pretty_assertions\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"wdk-panic\"\nversion = \"0.3.0\"\n\n[[package]]\nname = \"wdk-sys\"\nversion = \"0.3.0\"\ndependencies = [\n \"anyhow\",\n \"bindgen\",\n \"cargo_metadata\",\n \"cc\",\n \"lazy_static\",\n \"rustversion\",\n \"serde_json\",\n \"thiserror\",\n \"tracing\",\n \"tracing-subscriber\",\n \"wdk-build\",\n \"wdk-macros\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd04d41d93c4992d421894c18c8b43496aa748dd4c081bac0dc93eb0489272b6\"\ndependencies = [\n \"windows-core\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba6d44ec8c2591c134257ce647b7ea6b20335bf6379a27dac5f1641fcf59f99\"\ndependencies = [\n \"windows-implement\",\n \"windows-interface\",\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bbd5b46c938e506ecbce286b6628a02171d56153ba733b6c741fc627ec9579b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053c4c462dc91d3b1504c6fe5a726dd15e216ba718e84a0e46a88fbe5ded3515\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.1484375,
          "content": "[workspace]\nmembers = [\"crates/*\"]\n# Examples and tests must be excluded from the workspace since only one WDK configuration per build graph is supported.\nexclude = [\n  # Each example and test must be explicitly listed since glob is not currently supported for workspace.exclude: https://github.com/rust-lang/cargo/issues/6009\n  \"examples/sample-kmdf-driver\",\n  \"examples/sample-umdf-driver\",\n  \"examples/sample-wdm-driver\",\n  \"tests/config-kmdf\",\n  \"tests/config-umdf\",\n  \"tests/config-wdm\",\n  \"tests/wdk-macros-tests\",\n  \"tests/wdk-sys-tests\",\n]\nresolver = \"2\"\n\n[profile.dev]\nlto = true\n\n[profile.release]\nlto = true\n\n[workspace.package]\nedition = \"2021\"\nrepository = \"https://github.com/microsoft/windows-drivers-rs\"\nreadme = \"README.md\"\nlicense = \"MIT OR Apache-2.0\"\n\n[workspace.dependencies]\n# Workspace Crates\nwdk = { path = \"crates/wdk\", version = \"0.3.0\" }\nwdk-alloc = { path = \"crates/wdk-alloc\", version = \"0.3.0\" }\nwdk-build = { path = \"crates/wdk-build\", version = \"0.3.0\" }\nwdk-macros = { path = \"crates/wdk-macros\", version = \"0.3.0\" }\nwdk-panic = { path = \"crates/wdk-panic\", version = \"0.3.0\" }\nwdk-sys = { path = \"crates/wdk-sys\", version = \"0.3.0\" }\n\n# External Crates\nanyhow = \"1.0.86\"\nbindgen = \"0.69.4\"\ncamino = \"1.1.9\"\ncargo_metadata = \"0.18.1\"\ncc = \"1.1.0\"\ncfg-if = \"1.0.0\"\nclap = \"4.5.9\"\nclap-cargo = \"0.14.1\"\nitertools = \"0.13.0\"\nlazy_static = \"1.5.0\"\npaste = \"1.0.15\"\npretty_assertions = \"1.4.0\"\nproc-macro2 = \"1.0.86\"\nquote = \"1.0.36\"\nrustversion = \"1.0.17\"\nserde = \"1.0\"\nserde_json = \"1.0\"\nsyn = \"2.0.77\"\nthiserror = \"1.0.62\"\ntracing = \"0.1.40\"\ntracing-subscriber = \"0.3.18\"\nwindows = \"0.58.0\"\n\n# The following workspace.metadata.wdk sections can be uncommented to configure the workspace for a specific WDK configuration (ex. for rust-analyzer to resolve things for a specific configuration)\n\n# Uncomment the section below for KMDF\n# [workspace.metadata.wdk.driver-model]\n# driver-type = \"KMDF\"\n# kmdf-version-major = 1\n# target-kmdf-version-minor = 33\n\n# Uncomment the section below for UMDF\n# [workspace.metadata.wdk.driver-model]\n# driver-type = \"UMDF\"\n# umdf-version-major = 2\n# target-umdf-version-minor = 33\n\n# Uncomment the section below for WDM\n# [workspace.metadata.wdk.driver-model]\n# driver-type = \"WDM\"\n\n# Until https://github.com/rust-lang/cargo/issues/12208 is resolved, each package in the workspace needs to explictly\n# add the following block to its Cargo manifest in order to enable these global lint configurations:\n#\n# [lints]\n# workspace = true\n\n[workspace.lints.rust]\nmissing_docs = \"warn\"\nunsafe_op_in_unsafe_fn = \"forbid\"\n\n[workspace.lints.clippy]\n# Lint Groups\nall = { level = \"deny\", priority = -1 }\npedantic = { level = \"warn\", priority = -1 }\nnursery = { level = \"warn\", priority = -1 }\ncargo = { level = \"warn\", priority = -1 }\n# Individual Lints\nmultiple_unsafe_ops_per_block = \"forbid\"\nundocumented_unsafe_blocks = \"forbid\"\nunnecessary_safety_doc = \"forbid\"\n\n[workspace.lints.rustdoc]\nbare_urls = \"warn\"\nbroken_intra_doc_links = \"warn\"\ninvalid_codeblock_attributes = \"warn\"\ninvalid_html_tags = \"warn\"\ninvalid_rust_codeblocks = \"warn\"\nmissing_crate_level_docs = \"warn\"\nprivate_intra_doc_links = \"warn\"\nredundant_explicit_links = \"warn\"\nunescaped_backticks = \"warn\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.11328125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE"
        },
        {
          "name": "Makefile.toml",
          "type": "blob",
          "size": 3.873046875,
          "content": "extend = \"./crates/wdk-build/rust-driver-makefile.toml\"\n\n[config]\nmin_version = \"0.37.16\"\nadditional_profiles = [\"all-default-tasks\"]\n\n[env]\nCARGO_MAKE_SKIP_SLOW_SECONDARY_FLOWS = false\nCARGO_MAKE_CLIPPY_ARGS = \"--all-targets -- -D warnings\"\nRUSTFLAGS = \"-D warnings\"\nCARGO_MAKE_RUST_DEFAULT_TOOLCHAIN = \"stable\"\nRUSTDOCFLAGS = \"-D warnings\"\n\n[tasks.wdk-pre-commit-flow]\ndescription = \"Run pre-commit tasks and checks\"\ncategory = \"Development\"\nworkspace = false\ndependencies = [\n  \"format-flow\",\n  \"format-toml-conditioned-flow\",\n  \"build\",\n  \"package-driver-workspace-flow\",\n  \"test-flow\",\n  \"clippy-flow\",\n  \"audit-flow\",\n  \"unused-dependencies-flow\",\n  \"docs\",\n  \"nightly-test-flow\",\n  \"nightly-clippy-flow\",\n  \"nightly-docs\",\n  \"beta-test-flow\",\n  \"beta-clippy-flow\",\n  \"beta-docs\",\n]\n\n[tasks.format]\ntoolchain = \"nightly\"\n\n[tasks.package-driver-workspace-flow]\n# by forking, a new cargo make invocation starts and by default detects it is a workspace and runs the package-driver task for each member crate\nrun_task = { name = \"package-driver-flow\", fork = true }\n\n[tasks.pre-test]\n# macrotest and trybuild tests will fail when switching between nightly and stable toolchains due to trybuild/macrotest caching artifacts built with the other toolchain. Deleting the tests directory is enough to purge all test artifacts created by trybuild/macrotest.\nscript = '''\n#!@duckscript\nsuccess = rm -r ${CARGO_MAKE_CRATE_CUSTOM_TRIPLE_TARGET_DIRECTORY}/tests\nassert ${success} \"Failed to delete tests directory\"\n'''\n\n[tasks.test]\ninstall_crate = { crate_name = \"cargo-expand\", binary = \"cargo\", test_arg = [\n  \"expand\",\n  \"--version\",\n], version = \"1.0.85\" }\n\n[tasks.audit]\nargs = [\"audit\", \"--deny\", \"warnings\"]\n\n[tasks.unused-dependencies]\nworkspace = false\ncondition = { env_true = [\"CARGO_MAKE_CRATE_HAS_DEPENDENCIES\"] }\nargs = [\"machete\", \"--skip-target-dir\"]\n\n[tasks.nightly-test-flow]\nextend = \"test-flow\"\ndependencies = [\"pre-nightly-test\", \"nightly-test\", \"post-nightly-test\"]\n\n[tasks.pre-nightly-test]\nalias = \"pre-test\"\n\n[tasks.nightly-test]\nextend = \"test\"\nenv = { CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = \"--features nightly\" }\ntoolchain = \"nightly\"\n\n[tasks.post-nightly-test]\nextend = \"post-test\"\nenv = { CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = { unset = true } }\n\n[tasks.nightly-clippy-flow]\nextend = \"clippy-flow\"\ndependencies = [\n  \"pre-nightly-clippy\",\n  \"nightly-clippy-router\",\n  \"post-nightly-clippy\",\n]\n\n[tasks.pre-nightly-clippy]\nextend = \"pre-clippy\"\n# Proc-macro crates fail to trigger recompilation when switching toolchains due to bug in rustc resulting in \"found invalid metadata files for crate\" errors.\nrun_task = \"clean\"\n\n[tasks.nightly-clippy-router]\nextend = \"clippy-router\"\nenv = { CARGO_MAKE_CLIPPY_ARGS = \"--features nightly ${CARGO_MAKE_CLIPPY_ARGS}\", CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN = \"nightly\" }\n\n[tasks.post-nightly-clippy]\nextend = \"post-clippy\"\nenv = { CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN = \"${CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN}\" }\n\n[tasks.nightly-docs]\nextend = \"docs\"\ntoolchain = \"nightly\"\nargs = [\"doc\", \"--no-deps\", \"--features\", \"nightly\"]\n\n[tasks.beta-test-flow]\nextend = \"test-flow\"\ndependencies = [\"pre-beta-test\", \"beta-test\", \"post-beta-test\"]\n\n[tasks.pre-beta-test]\nalias = \"pre-test\"\n\n[tasks.beta-test]\nextend = \"test\"\ntoolchain = \"beta\"\n\n[tasks.post-beta-test]\nalias = \"post-test\"\n\n[tasks.beta-clippy-flow]\nextend = \"clippy-flow\"\ndependencies = [\"pre-beta-clippy\", \"beta-clippy-router\", \"post-beta-clippy\"]\n\n[tasks.pre-beta-clippy]\nextend = \"pre-clippy\"\n# Proc-macro crates fail to trigger recompilation when switching toolchains due to bug in rustc resulting in \"found invalid metadata files for crate\" errors.\nrun_task = \"clean\"\n\n[tasks.beta-clippy-router]\nextend = \"clippy-router\"\nenv = { CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN = \"beta\" }\n\n[tasks.post-beta-clippy]\nextend = \"post-clippy\"\nenv = { CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN = \"${CARGO_MAKE_RUST_DEFAULT_TOOLCHAIN}\" }\n\n[tasks.beta-docs]\nextend = \"docs\"\ntoolchain = \"beta\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.5517578125,
          "content": "# windows-drivers-rs\n\nThis repo is a collection of Rust crates that enable developers to develop Windows Drivers in Rust. It is the intention to support both WDM and WDF driver development models. This repo contains the following crates:\n\n* [wdk-build](./crates/wdk-build): A library to configure a Cargo build script for binding generation and downstream linking of the WDK (Windows Driver Kit). While this crate is written to be flexible with different WDK releases and different WDF version, it is currently only tested for NI eWDK, KMDF 1.33, UMDF 2.33, and WDM Drivers. There may be missing linker options for older DDKs.\n* [wdk-sys](./crates/wdk-sys): Direct FFI bindings to APIs available in the Windows Development Kit (WDK). This includes both autogenerated ffi bindings from `bindgen`, and also manual re-implementations of macros that bindgen fails to generate.\n* [wdk](./crates/wdk): Safe idiomatic bindings to APIs available in the Windows Development Kit (WDK)\n* [wdk-panic](./crates/wdk-panic/): Default panic handler implementations for programs built with WDK\n* [wdk-alloc](./crates/wdk-alloc): alloc support for binaries compiled with the Windows Development Kit (WDK)\n* [wdk-macros](./crates/wdk-macros): A collection of macros that help make it easier to interact with wdk-sys's direct bindings. This crate is re-exported via `wdk-sys` and crates should typically never need to directly depend on `wdk-macros`\n\nTo see an example of this repo used to create drivers, see [Windows-rust-driver-samples](https://github.com/microsoft/Windows-rust-driver-samples).\n\nNote: This project is still in early stages of development and is not yet recommended for production use. We encourage community experimentation, suggestions and discussions! We will be using our [GitHub Discussions forum](https://github.com/microsoft/windows-drivers-rs/discussions) as the main form of engagement with the community!\n\n## <a name=\"supported-configs\">Supported Configurations\n\nThis project was built with support of WDM, KMDF, and UMDF drivers in mind, as well as Win32 Services. This includes support for all versions of WDF included in WDK 22H2 and newer. Currently, the crates available on [`crates.io`](https://crates.io) only support KMDF v1.33, but bindings can be generated for everything else by cloning `windows-drivers-rs` and modifying the config specified in [`build.rs` of `wdk-sys`](./crates/wdk-sys/build.rs). Crates.io support for other WDK configurations is planned in the near future.\n\n## Repo Layout\n\n* [crates](./crates): Contains all the main crates that are a part of the Cargo workspace.\n* [examples](./examples): Contains workspace-level examples. These examples consist of different types of minimal Windows drivers (ie. WDM, KMDF, UMDF).\n* [tests](./tests): Contains workspace-level tests, inlcuding tests for metadata-based wdk configuration in packages and workspaces.\n\n**Note:**: Since the workspace level examples and tests use different WDK configurations, and WDR only supports one WDK configuration per workspace, the workspace-level examples and tests folder are excluded from the [repository root's Cargo manifest](./Cargo.toml).\n\n## Getting Started\n\n### Build Requirements\n\n* Binding generation via `bindgen` requires `libclang`. The easiest way to acquire this is via `winget`\n  * `winget install -i LLVM.LLVM --version 17.0.6 --force`\n    * Ensure you select the GUI option to add LLVM to the PATH\n    * LLVM 18 has a bug that causes bindings to fail to generate for ARM64. Continue using LLVM 17 until LLVM 19 comes out with [the fix](https://github.com/llvm/llvm-project/pull/93235). See [this](https://github.com/rust-lang/rust-bindgen/issues/2842) for more details.\n* To execute post-build tasks (ie. `inf2cat`, `infverif`, etc.), `cargo make` is used\n  * `cargo install --locked cargo-make --no-default-features --features tls-native`\n\n* Building programs with the WDK also requires being in a valid WDK environment. The recommended way to do this is to [enter an eWDK developer prompt](https://learn.microsoft.com/en-us/windows-hardware/drivers/develop/using-the-enterprise-wdk#getting-started)\n\n### Adding windows-drivers-rs to Your Driver Package\n\nThe crates in this repository are available from [`crates.io`](https://crates.io), but take into account the current limitations outlined in [Supported Configurations](#supported-configs). If you need to support a different config, try cloning this repo and using [path dependencies](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-path-dependencies)\n\n1. Create a new Cargo package with a lib crate:\n\n   ```pwsh\n   cargo new <driver_name> --lib\n   ```\n\n1. Add dependencies on `windows-drivers-rs` crates:\n\n   ```pwsh\n   cd <driver_name>\n   cargo add --build wdk-build\n   cargo add wdk wdk-sys wdk-alloc wdk-panic\n   ```\n\n1. Set the crate type to `cdylib` by adding the following snippet to `Cargo.toml`:\n\n   ```toml\n   [lib]\n   crate-type = [\"cdylib\"]\n   ```\n\n1. Add a wdk metadata section and configure the wdk for your use case. This also lets the cargo-make tasks know that the package is a driver and that the driver packaging steps need to run.\n\n   UMDF Example:\n   ```toml\n   [package.metadata.wdk.driver-model]\n   driver-type = \"UMDF\"\n   umdf-version-major = 1\n   target-umdf-version-minor = 33\n   ```\n\n1. **For Kernel Mode crates** (ex. `KMDF` drivers, `WDM` drivers): Set crate panic strategy to `abort` in `Cargo.toml`:\n\n   ```toml\n   [profile.dev]\n   panic = \"abort\"\n\n   [profile.release]\n   panic = \"abort\"\n   ```\n\n1. Create a `build.rs` and add the following snippet:\n\n   ```rust\n   fn main() -> Result<(), wdk_build::ConfigError> {\n      wdk_build::configure_wdk_binary_build()\n   }\n   ```\n\n1. **For Kernel Mode crates** (ex. `KMDF` drivers, `WDM` drivers): Mark your driver crate as `no_std` in `lib.rs`:\n\n   ```rust\n   #![no_std]\n   ```\n\n1. **For Kernel Mode crates** (ex. `KMDF` drivers, `WDM` drivers): Add a panic handler in `lib.rs`:\n\n   ```rust\n   #[cfg(not(test))]\n   extern crate wdk_panic;\n\n   ```\n\n1. **For Kernel Mode crates** (ex. `KMDF` drivers, `WDM` drivers): Add an optional global allocator in `lib.rs`:\n\n   ```rust\n   #[cfg(not(test))]\n   use wdk_alloc::WdkAllocator;\n\n   #[cfg(not(test))]\n   #[global_allocator]\n   static GLOBAL_ALLOCATOR: WdkAllocator = WdkAllocator;\n   ```\n\n   This is only required if you want to be able to use the [`alloc` modules](https://doc.rust-lang.org/alloc/) in the rust standard library.\n\n1. Add a DriverEntry in `lib.rs`:\n\n   ```rust\n   use wdk_sys::{\n      PDRIVER_OBJECT,\n      NTSTATUS,\n      PCUNICODE_STRING,\n   };\n\n   #[export_name = \"DriverEntry\"] // WDF expects a symbol with the name DriverEntry\n   pub unsafe extern \"system\" fn driver_entry(\n      driver: PDRIVER_OBJECT,\n      registry_path: PCUNICODE_STRING,\n   ) -> NTSTATUS {\n      0\n   }\n   ```\n\n   Note: In Kernel Mode crates, you can use `driver: &mut DRIVER_OBJECT` instead of `driver: PDRIVER_OBJECT`.\n\n1. Add a `Makefile.toml`:\n   ```toml\n   extend = \"target/rust-driver-makefile.toml\"\n\n   [config]\n   load_script = '''\n   #!@rust\n   //! ```cargo\n   //! [dependencies]\n   //! wdk-build = \"0.3.0\"\n   //! ```\n   #![allow(unused_doc_comments)]\n\n   wdk_build::cargo_make::load_rust_driver_makefile()?\n   '''\n   ```\n\n1. Add an inx file that matches the name of your `cdylib` crate.\n\n1. Enable static crt linkage. One approach is to add this to your `.cargo/config.toml`:\n\n   ```toml\n   [build]\n   rustflags = [\"-C\", \"target-feature=+crt-static\"]\n   ```\n\n1. Build the driver:\n\n   ```pwsh\n   cargo make\n   ```\n\nA signed driver package, including a `WDRLocalTestCert.cer` file, will be generated at `target/<Cargo profile>/package`. If a specific target architecture was specified, the driver package will be generated at `target/<target architecture>/<Cargo profile>/package`\n\nMinimal examples of `WDM`, `KMDF`, and `UMDF` drivers can be found in the [examples directory](./examples).\n\n## Cargo Make\n\n[`cargo-make`](https://github.com/sagiegurari/cargo-make) is used to facilitate builds using `windows-drivers-rs`, including for executing post-build driver packaging steps.\n\nTo execute the default action (build and package driver):\n\n`cargo make default`\n\nWhen executing the default task, just `cargo make` make also works since the `default` task is implied.\n\n### Argument Forwarding\n\n`windows-drivers-rs` extends `cargo make` to forward specific arguments to the underlying `cargo` commands. In order to specify arguments to forward, they must be provided **after explicitly specifying the `cargo-make` task name** (ie. omitting the name for the `default` task is not supported).\n\n#### Examples\n\nFor a specific target:\n\n`cargo make default --target <TARGET TRIPLE>`\n\nFor release builds:\n\n`cargo make default --release` or `cargo make default --profile release`\n\nTo specify specific features:\n\n`cargo make default --features <FEATURES>`\n\nTo specify a specific rust toolchain:\n\n`cargo make default +<TOOLCHAIN>`\n\nTo display help and see the full list of supported CLI args to forward to Cargo:\n\n`cargo make help`\n\n### Driver Package Signature Verification\n\nThe `WDK_BUILD_ENABLE_SIGNTOOL_VERIFY` [cargo-make environment variable](https://github.com/sagiegurari/cargo-make?tab=readme-ov-file#environment-variables) can be set to `true` to enable tasks that handle signature verification of the generated `.sys` and `.cat` files. `signtool verify` requires the certificate to be installed as in the `Trusted Root Certification Authorities` for this verification to function. These tasks are not enabled by default as the default behavior of `WDR` is to sign with a generated test certificate. These test certificates are typically only installed into `Trusted Root Certification Authorities` on computers dedicated to testing drivers, and not personal development machines, given the security implications of installing your own root certificates.\n\nIf you understand these implications, and have installed the test certificate, then you may validate the signatures as follows:\n\n```\ncargo make --env WDK_BUILD_ENABLE_SIGNTOOL_VERIFY=true\n```\n\n## Crates.io Release Policy\n\nReleases to crates.io are not made after every change merged to main. Releases will only be made when requested by the community, or when the `windows-drivers-rs` team believes there is sufficient value in pushing a release.\n\n## Trademark Notice\n\nTrademarks This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft’s Trademark & Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party’s policies.\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 2.2236328125,
          "content": "## Release Process\n\nThe release process for this repository leverages [`release-plz`](https://github.com/MarcoIeni/release-plz) to automate some of the steps. Only maintainers with the necessary permissions can release new versions of this repository.\n\n1. Install `release-plz`: One option is by running `cargo install --locked release-plz`\n1. Checkout the latest code on `main` branch\n1. Create a release PR: `release-plz release-pr --git-token <Github Token>`\n1. In the Pull Request:\n   1. Check that the new versions automatically determined by `release-plz` make sense\n      1. In the PR description, if there are API-breaking changes detected for a crate, make sure that that crate shows a major semver bump\n      1. If no API-breaking changes are detected, [conventional commits](https://www.conventionalcommits.org/) will be used to determine what type of version bump it should be. This means that `release-plz` may say there are no API-breaking changes detected, but there may still be a major version bump if the commit titles suggest there is a change that warrants it.\n      1. If the versions are not what you expect, you can manually override them by running `release-plz set-version <new semver version>`. This will update the package versions and the changelogs, but the PR description may need manual editing.\n1. Checkout the generated release branch locally in order to:\n   1. Update all docs to reflect new versions\n   1. Update all `cargo-make` files to use the new versions (ex. for `wdk-build` in [rust-driver-makefile.toml](./crates/wdk-build/rust-driver-makefile.toml))\n   1. Update all the [example drivers](./examples/) and [workspace-level tests](./tests/) to use new versions. These are not part of the same `cargo-workspace` as the rest of the crates, so they need to be updated manually.\n   1. Check that the release notes are correct and edit as needed\n1. Do a last sanity check of all of the [example drivers](./examples/) (i.e. install and verify that all logs are as expected)\n1. Run `release-plz release --dry-run` to check that the release will be successful\n1. Merge the release Pull Request\n1. Run `release-plz release`\n   1. This will release the crates to crates.io and create draft releases on Github\n1. Publish all the Github releases\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.59375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.9 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet) and [Xamarin](https://github.com/xamarin).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/security.md/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/security.md/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/security.md/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-plz.toml",
          "type": "blob",
          "size": 0.380859375,
          "content": "[workspace]\ngit_release_draft = true\npr_draft = true\npr_labels = [\"release\"]\n\n[changelog]\nheader = \"\"\"# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n\"\"\"\nprotect_breaking_commits = true\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 1.2578125,
          "content": "# https://rust-lang.github.io/rustfmt/ outlines all configuration options\n\n# Required to enable unstable features: https://github.com/rust-lang/rustfmt/issues/3387\nunstable_features = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3384\ncondense_wildcard_suffixes = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3348\nformat_code_in_doc_comments = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3354\nformat_macro_matchers = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3353\nformat_strings = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/5081\nhex_literal_case = \"Upper\"\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3361\nimports_layout = \"HorizontalVertical\"\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/4991\nimports_granularity = \"Crate\"\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3350\nnormalize_comments = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3351\nnormalize_doc_attributes = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/5083\ngroup_imports = \"StdExternalCrate\"\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3363\nreorder_impl_items = true\n\n# Unstable: https://github.com/rust-lang/rustfmt/issues/3347\nwrap_comments = true\n"
        },
        {
          "name": "taplo.toml",
          "type": "blob",
          "size": 0.1142578125,
          "content": "exclude = [\"target/**\"]\n\n[formatting]\n# enable crlf endings since core.eol is CRLF by default on Windows\ncrlf = true\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}