{
  "metadata": {
    "timestamp": 1736709273343,
    "page": 623,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vizia/vizia",
      "stars": 1680,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 8.00390625,
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4755859375,
          "content": "# Allow contributors to configure their own vscode tasks.\n.vscode/tasks.json\n\n# Generated by Cargo\n# will have compiled files and executables\n/target/\n\n# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries\n# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html\nCargo.lock\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n\n# Added by cargo\n#\n# already existing elements were commented out\n\n/target\n#Cargo.lock\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.05859375,
          "content": "use_small_heuristics = \"Max\"\nuse_field_init_shorthand = true"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 5.814453125,
          "content": "# Architecture\n\nThis document aims to explain the archtecture and structure of vizia codebase.\n\n## Crates\n\nVizia is split into a number of internal sub-crates for specific purposes:\n- `vizia_baseview` - Windowing backend utilising [Baseview], used primarily for audio plugins as it allows for parented windows.\n- `vizia_core` - The main crate where most of the user-facing types and traits live.\n- `vizia_derive` - Derive macros such as `Lens` and `Data`.\n- `vizia_id` - A utility crate for providing generational IDs.\n- `vizia_input` - Types which are specific to user input such as mouse state, keyboard modifiers, and keymaps.\n- `vizia_storage` - Storage types used by core. This includes a sparse set and a tree, as well as various iterators for tree traversal.\n- `vizia_style` - Style property types as well as style parsing and matching.\n- `vizia_window` -  Types specific to a window such as the window description and cursor icon.\n- `vizia_winit` - Windowing backend utilising [Winit], which is the default windowing backend.\n\n* External Crates*\n- `skia` - 2D drawing crate.\n- `morphorm` - Provides daptive layout for a tree of nodes.\n- `fluent` - Provides localization including text translation substitution.\n- `accesskit` - Provides integration with platform accessibility APIs for use with assisstive technologies such as screen readers.\n- `winit` - Provides window management.\n- `baseview` - An alternative crate for window management.\n- `glutin` - Provides OpenGL context management for the winit backend.\n\n## Overview\nAt the core of Vizia is a very simple ECS model. Views are assigned an entity id, which is used to get/set view properties (components), and a series of systems update these properties and draw the views to the window.\n\n\n## Glossary\n\n### Application\nThe `Application` struct is the entry point of a Vizia application. The `Application::new()` method creates a `Context`, which is a global store for all retained application state, and provides a closure for the user to build their application with:\n\n```rust\nApplication::new(|cx|{\n    Label::new(cx, \"Hello Vizia\");\n}).run();\n```\nWhen the `run()` method is called, a Winit window is created with an opengl context and a skia `Canvas`, and then added to the `Context`. The event loop is then started. \n\n### Context\nThe `Context` is where all the retained application state lives. This includes model data, views, style properties, mouse state, the event queue etc.\n\n### View\nThe `View` trait describes a visual element in a Vizia application. It has 4 methods:\n- `build()` - Used to build the view as well as any sub-views into the context. This is typically called in the constructor of a view type. \n- `element()` - A method which can be optionally implemented and returns an element name which can be referred to in CSS for styling based on type.\n- `event()` - A method which can be optionally implemented in order for a view to handle events.\n- `draw()` - A method which can be optionally implemented in order to customise the way the view is drawn. If not implemented, then the view will be drawn based on its style properties.\n\nA number of built-in views are provided with Vizia. For example, the `Label` view is used to display a string of text. \n\n### Entity\nEach view in Vizia is assigned a generational `Entity` ID when created.\n\n### Tree\nThe entity is added to a `Tree`, which describes the hierarchy of views. The `Tree` has a number of iterators which are used by systems to update all or parts of the hierarchy.\n\n### Style\nThe properties of a view are not stored in the tree itself but instead in separate stores in the `Style` struct. The entity ID is used to set/get style properties (i.e. components) which are stored in custom sparse set storage types.\n\n### Systems\nA series of systems are used to update the state of the application on each update cycle:\n- Event Manager - Routes events in the event queue to Models and Views and calls the view/model `event()` method.\n- Binding System - Queries model data for changes and rebuilds binding views.\n- Style System - Links entities to shared style data (from CSS) and applies any style property inheritance.\n- Image System - Loads any unloaded images and removes any unused images.\n- Animation System - Applies any animations to style properties.\n- Layout System - Determines the size and position of views.\n- Accessibility System - Constructs or updates the accessibility tree and calls the view `accessibility()` method.\n- Draw System - Draws the views to the main window and calls the view `draw()` method.\n\n### Cache\nThe cache contains computed data from systems. For example, the `Style` may contain the desired size and position of a view, but after the layout system the `Cache` contains the computed bounds of the view which can then be used by the drawing system.\n\n### Handle\nA `Handle` is a wrapper around an `Entity` and a mutable reference to the `Context` and is returned by the `build()` method on the `View` trait, i.e. it is returned when a view is built, e.g. `Label::new(cx, \"Hello Vizia\")`.\n\n### Modifiers\nThe `Handle` implements a number of `Modifiers`, which are traits which provide methods for setting the properties of a view at built time. For example, the `StyleModifiers` trait provides methods for setting the style properties of a view such as its `background_color()`.\n\n### Model\nThe `Model` trait describes application data which can be bound to views. \n\n## Events\nAn `Event` contains a message, which is a type erased piece of data, as well as some metadata describing the origin and target of the event and how it should propagate through the tree when routed by the event manager.\n\nDuring each cycle of the event loop, when a Winit window events is received it is translated to vizia `WindowEvent` and added to an event queue in the `Context`. At the end of each cycle a `MainEventsCleared` event is received, which is where vizia processes changes to the application.\n\n\n\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 6.6005859375,
          "content": "[package]\nname = \"vizia\"\ndescription = \"A declarative desktop GUI framework\"\nautoexamples = false\nversion.workspace = true\nedition.workspace = true\nlicense.workspace = true\nrepository.workspace = true\nrust-version = \"1.82\"\nexclude = [\"assets/\", \"examples/\"]\n\n[features]\ndefault = [\"winit\", \"clipboard\", \"x11\", \"wayland\", \"markdown\"]\nclipboard = [\"vizia_core/clipboard\", \"vizia_winit?/clipboard\"]\nwinit = [\"vizia_winit\"]\nbaseview = [\"vizia_baseview\"]\nx11 = [\"vizia_winit?/x11\", \"vizia_core/x11\"]\nwayland = [\"vizia_winit?/wayland\", \"vizia_core/wayland\"]\naccesskit = [\"vizia_winit?/accesskit\"]\nmarkdown = [\"vizia_core/markdown\"]\n\n[dependencies]\nvizia_core.workspace = true\nvizia_winit = { workspace = true, optional = true }\nvizia_baseview = { workspace = true, optional = true }\n\n[dev-dependencies]\nchrono = \"0.4\"\n# reqwest = { version = \"0.12\", features = [\"blocking\"] }\nlog = \"0.4\"\nfern = \"0.7\"\n\n[workspace]\nmembers = [ \"crates/*\", \"examples/widget_gallery\"]\n\n[workspace.package]\nversion = \"0.2.0\"\nauthors = [\"George Atkinson\"]\nedition = \"2021\"\nlicense = \"MIT\"\nrepository = \"https://github.com/vizia/vizia\"\n\n[workspace.dependencies]\nvizia = { version = \"0.2.0\", path = \".\" }\nvizia_core = { version = \"0.2.0\", path = \"crates/vizia_core\" }\nvizia_winit = { version = \"0.2.0\", path = \"crates/vizia_winit\" }\nvizia_baseview = { version = \"0.2.0\", path = \"crates/vizia_baseview\" }\nvizia_derive = { version = \"0.2.0\", path = \"crates/vizia_derive\" }\nvizia_id = { version = \"0.2.0\", path = \"crates/vizia_id\" }\nvizia_input = { version = \"0.2.0\", path = \"crates/vizia_input\" }\nvizia_storage = { version = \"0.2.0\", path = \"crates/vizia_storage\" }\nvizia_style = { version = \"0.2.0\", path = \"crates/vizia_style\" }\nvizia_window = { version = \"0.2.0\", path = \"crates/vizia_window\" }\n\n[workspace.lints.rust]\n# future_incompatible = \"allow\"\n# let_underscore = \"allow\"\n# nonstandard_style = \"allow\"\n# rust_2018_compatibility = \"allow\"\n# rust_2018_idioms = \"allow\"\n# rust_2021_compatibility = \"allow\"\n# unused = \"allow\"\n\n[workspace.lints.clippy]\n# cargo = \"allow\"\n# pedantic = \"allow\"\n# nursery = \"allow\"\n# separated_literal_suffix = \"allow\"\n\n[[example]]\nname = \"counter\"\npath = \"examples/7GUIs/counter.rs\"\n\n[[example]]\nname = \"crud\"\npath = \"examples/7GUIs/crud.rs\"\n\n[[example]]\nname = \"flight_booker\"\npath = \"examples/7GUIs/flight_booker.rs\"\n\n[[example]]\nname = \"temperature_converter\"\npath = \"examples/7GUIs/temperature_converter.rs\"\n\n[[example]]\nname = \"virtual_list\"\npath = \"examples/views/virtual_list.rs\"\n\n[[example]]\nname = \"l10n\"\npath = \"examples/l10n.rs\"\n\n[[example]]\nname = \"inline\"\npath = \"examples/style/inline.rs\"\n\n[[example]]\nname = \"outline\"\npath = \"examples/style/outline.rs\"\n\n[[example]]\nname = \"blend_mode\"\npath = \"examples/style/blend_mode.rs\"\n\n[[example]]\nname = \"transform\"\npath = \"examples/style/transform.rs\"\n\n[[example]]\nname = \"transform_origin\"\npath = \"examples/style/transform_origin.rs\"\n\n[[example]]\nname = \"gradient\"\npath = \"examples/style/gradient.rs\"\n\n[[example]]\nname = \"shadow\"\npath = \"examples/style/shadow.rs\"\n\n[[example]]\nname = \"text\"\npath = \"examples/style/text.rs\"\n\n[[example]]\nname = \"text_stroke\"\npath = \"examples/style/text_stroke.rs\"\n\n[[example]]\nname = \"filter\"\npath = \"examples/style/filter.rs\"\n\n[[example]]\nname = \"clipping\"\npath = \"examples/style/clipping.rs\"\n\n[[example]]\nname = \"transition\"\npath = \"examples/style/transition.rs\"\n\n[[example]]\nname = \"zorder\"\npath = \"examples/style/zorder.rs\"\n\n[[example]]\nname = \"background_size\"\npath = \"examples/style/background_size.rs\"\n\n\n[[example]]\nname = \"animation\"\npath = \"examples/animation.rs\"\n\n[[example]]\nname = \"cursor_icon\"\npath = \"examples/cursor_icon.rs\"\n\n[[example]]\nname = \"dragdrop\"\npath = \"examples/dragdrop.rs\"\n\n[[example]]\nname = \"keymap\"\npath = \"examples/keymap.rs\"\n\n[[example]]\nname = \"number_input\"\npath = \"examples/number_input.rs\"\n\n[[example]]\nname = \"proxy\"\npath = \"examples/proxy.rs\"\n\n[[example]]\nname = \"text_layout\"\npath = \"examples/text_layout.rs\"\n\n[[example]]\nname = \"window_modifiers\"\npath = \"examples/window_modifiers.rs\"\n\n\n[[example]]\nname = \"datepicker\"\npath = \"examples/views/datepicker.rs\"\n\n\n[[example]]\nname = \"picklist\"\npath = \"examples/views/picklist.rs\"\n\n[[example]]\nname = \"combobox\"\npath = \"examples/views/combobox.rs\"\n\n[[example]]\nname = \"scrollview\"\npath = \"examples/views/scrollview.rs\"\n\n[[example]]\nname = \"stylesheet\"\npath = \"examples/stylesheet.rs\"\n\n[[example]]\nname = \"switch\"\npath = \"examples/views/switch.rs\"\n\n[[example]]\nname = \"chip\"\npath = \"examples/views/chip.rs\"\n\n[[example]]\nname = \"rating\"\npath = \"examples/views/rating.rs\"\n\n[[example]]\nname = \"button\"\npath = \"examples/views/button.rs\"\n\n[[example]]\nname = \"checkbox\"\npath = \"examples/views/checkbox.rs\"\n\n[[example]]\nname = \"dropdown\"\npath = \"examples/views/dropdown.rs\"\n\n[[example]]\nname = \"background_image\"\npath = \"examples/style/background_image.rs\"\n\n[[example]]\nname = \"knob\"\npath = \"examples/views/knob.rs\"\n\n[[example]]\nname = \"label\"\npath = \"examples/views/label.rs\"\n\n[[example]]\nname = \"tooltip\"\npath = \"examples/views/tooltip.rs\"\n\n[[example]]\nname = \"toggle_button\"\npath = \"examples/views/toggle_button.rs\"\n\n[[example]]\nname = \"spinbox\"\npath = \"examples/views/spinbox.rs\"\n\n[[example]]\nname = \"slider\"\npath = \"examples/views/slider.rs\"\n\n[[example]]\nname = \"radiobutton\"\npath = \"examples/views/radiobutton.rs\"\n\n[[example]]\nname = \"zstack\"\npath = \"examples/views/zstack.rs\"\n\n[[example]]\nname = \"hstack\"\npath = \"examples/views/hstack.rs\"\n\n[[example]]\nname = \"vstack\"\npath = \"examples/views/vstack.rs\"\n\n[[example]]\nname = \"progressbar\"\npath = \"examples/views/progressbar.rs\"\n\n[[example]]\nname = \"textbox\"\npath = \"examples/views/textbox.rs\"\n\n[[example]]\nname = \"list\"\npath = \"examples/views/list.rs\"\n\n[[example]]\nname = \"menu\"\npath = \"examples/views/menu.rs\"\n\n[[example]]\nname = \"menubar\"\npath = \"examples/views/menubar.rs\"\n\n[[example]]\nname = \"tabview\"\npath = \"examples/views/tabview.rs\"\n\n[[example]]\nname = \"xypad\"\npath = \"examples/views/xypad.rs\"\n\n[[example]]\nname = \"circle_drawer\"\npath = \"examples/7GUIs/circle_drawer.rs\"\n\n[[example]]\nname = \"timer\"\npath = \"examples/7GUIs/timer.rs\"\n\n[[example]]\nname = \"save_dialog\"\npath = \"examples/save_dialog.rs\"\n\n[[example]]\nname = \"custom_view\"\npath = \"examples/custom_view.rs\"\n\n[[example]]\nname = \"lens_map\"\npath = \"examples/lens_map.rs\"\n\n[[example]]\nname = \"timers\"\npath = \"examples/timers.rs\"\n\n[[example]]\nname = \"markdown\"\npath = \"examples/views/markdown.rs\"\nrequired-features = [\"markdown\"]\n\n[[example]]\nname = \"rich_text\"\npath = \"examples/rich_text.rs\"\nrequired-features = [\"markdown\"]\n\n[[example]]\nname = \"multiwindow\"\npath = \"examples/multiwindow.rs\"\n\n[[example]]\nname = \"popup_window\"\npath = \"examples/popup_window.rs\"\n\n[[example]]\nname = \"svg\"\npath = \"examples/views/svg.rs\"\n\n[[example]]\nname = \"debug\"\npath = \"examples/debug.rs\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2021 George Atkinson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1591796875,
          "content": "<div align=\"center\"><img src=\"https://raw.githubusercontent.com/vizia/vizia/main/assets/branding/vizia-logo-01.png\" width=\"128px\" height=\"128px\"/><h1>Vizia</h1></div>\n\n<div align=\"center\">\n  <!-- License -->\n  <a href=\"https://github.com/vizia/vizia/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/crates/l/vizia\"\n    alt=\"License\" />\n  </a>\n  <!-- Docs -->\n  <a href=\"https://docs.vizia.dev\">\n    <img src=\"https://img.shields.io/badge/docs-website-blue\" \n      alt=\"Documentation\" />\n  </a>\n  <!-- CI -->\n  <a href=\"https://github.com/vizia/vizia/actions/workflows/build.ym\">\n    <img src=\"https://github.com/vizia/vizia/actions/workflows/build.yml/badge.svg\"\n      alt=\"CI status\" />\n  </a>\n  <!-- docs (TODO) -->\n  <!-- Dependency status -->\n  <a href=\"https://deps.rs/repo/github/vizia/vizia\">\n    <img src=\"https://deps.rs/repo/github/vizia/vizia/status.svg\"\n      alt=\"Dependency status\" />\n  </a>\n  <!-- Audit -->\n  <a href=\"https://github.com/vizia/vizia/actions/workflows/audit.yml\">\n    <img src=\"https://github.com/vizia/vizia/actions/workflows/audit.yml/badge.svg\"\n      alt=\"Audit status\" />\n  </a>\n  <!-- Discord -->\n  <a href=\"https://discord.gg/aNkTPsRm2w\">\n    <img src=\"https://img.shields.io/discord/791142189005537332.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2\" \n      alt=\"Discord Link\" />\n  </a>\n</div>\n\n<!-- [![Crates.io](https://img.shields.io/crates/v/vizia)](https://crates.io/crates/vizia) -->\n<!-- [![docs.rs](https://img.shields.io/badge/docs-website-blue)](https://docs.rs/vizia/) -->\n\n<br/>\n\n<h4 align=\"center\">A declarative desktop GUI framework for the <a href=\"https://www.rust-lang.org/\">Rust</a> programming language.</h4>\n\n<br/>\n\n<div align=\"center\">\n  <h3>\n    <a href=\"https://book.vizia.dev/\"> Book </a>\n    <span> • </span>\n    <a href=\"https://docs.vizia.dev/\"> Docs </a>\n    <span> • </span>\n    <a href=\"https://demo.vizia.dev/\"> Demo </a>\n    <span> • </span>\n    <a href=\"https://discord.gg/aNkTPsRm2w\"> Discord </a>\n  </h3>\n</div>\n\n<br/>\n\n# Features\n- ### __Cross-platform (Windows, Linux, MacOS)__\n  Build desktop applications which look and behave the same for Windows, Mac, and Linux.\n- ### __Declarative__\n  Write GUI code in a declarative way in pure Rust (no DSL macros).\n- ### __Reactive__\n  Views derive from application state. Change the state and the views which bind to it update automatically.\n- ### __Flexible layout__\n  Create flexible layouts which adapt to changes in size. Powered by [morphorm](https://github.com/vizia/morphorm).\n- ### __Powerful styling__\n  Take advantage of stylesheets with hot-reloading to fully customize the look of your application.\n- ### __Animations__\n  Bring your applications to life with animations.\n- ### __Built-in views and themes__\n  Utilize over 25 ready-made views as well as two built-in themes (light and dark) to get you started. Includes 4250+ SVG icons, provided by [Tabler Icons](https://tabler-icons.io).\n- ### __Accessibility__\n  Make you applications accessible to assistive technologies such as screen readers, powered by [accesskit](https://github.com/accesskit/accesskit).\n- ### __Localization__\n  Adapt your application to different locales, including translating text with [fluent](https://github.com/projectfluent/fluent-rs).\n- ### __Optimised rendering__\n  Vizia leverages the powerful and robust [skia](https://github.com/rust-skia/rust-skia) library for rendering, with further optimizations to only draw what is necessary.  \n- ### __Audio plugin development__\n  Vizia provides an alternative [baseview](https://github.com/RustAudio/baseview) windowing backend for audio plugin development, for example with the [nih-plug](https://github.com/robbert-vdh/nih-plug) framework.\n\n<br />\n\n# At a Glance\nA simple counter application. Run with `cargo run --example counter`.\n```rust, no_run\nuse vizia::prelude::*;\n\n// Define some model data\n#[derive(Lens)]\npub struct AppData {\n    count: i32,\n}\n\n// Define events to mutate the data\npub enum AppEvent {\n    Increment,\n}\n\n// Describe how the data is mutated in response to events\nimpl Model for AppData {\n    fn event(&mut self, _: &mut EventContext, event: &mut Event) {\n        event.map(|app_event, _| match app_event {\n            AppEvent::Increment => {\n                self.count += 1;\n            }\n        });\n    }\n}\n\nfn main() {\n    // Create an application\n    Application::new(|cx| {\n\n        // Build the model data into the tree\n        AppData { count: 0 }.build(cx);\n\n        // Declare views which make up the UI\n        HStack::new(cx, |cx| {\n          \n            // Declare a button which emits an event\n            Button::new(cx, |cx| Label::new(cx, \"Increment\"))\n              .on_press(|cx| cx.emit(AppEvent::Increment));\n\n            // Declare a label which is bound to part of the model, updating when it changes\n            Label::new(cx, AppData::count).width(Pixels(50.0));\n        })\n        .alignment(Alignment::Center)  // Apply style and layout modifiers\n        .horizontal_gap(Pixels(50.0));\n    })\n    .title(\"Counter\") // Configure window properties\n    .inner_size((400, 100))\n    .run();\n}\n```\n<div align=\"center\"><img src=\"https://raw.githubusercontent.com/vizia/vizia/main/assets/images/counter.png\" width=\"400px\" height=\"130px\"/></div>\n\n\n# Learning\n## Book\nA quickstart guide for vizia is available [here](https://book.vizia.dev).\n## Docs\nAuto-generated code documentation can be found [here](https://docs.vizia.dev).\n## Examples\n\nA list of [examples](https://github.com/vizia/vizia/tree/main/examples) is included in the repository.\n\nTo run an example with the [winit](https://github.com/rust-windowing/winit) (default) windowing backend:\n```bash\ncargo run --release --example name_of_example\n```\n\n### Baseview\n\nTo run an example with the [baseview](https://github.com/RustAudio/baseview) windowing backend:\n\n```bash\ncargo run --release --example name_of_example --no-default-features --features baseview\n```\n\n# Contributing and Community\nFor help with vizia, or to get involved with contributing to the project, come join us on [our discord](https://discord.gg/aNkTPsRm2w).\n\n# License and Attribution\nVizia is licensed under [MIT](https://github.com/vizia/vizia/blob/main/LICENSE).\n\nVizia logo designed by [Lunae Somnia](https://github.com/LunaeSomnia).\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}