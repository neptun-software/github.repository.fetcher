{
  "metadata": {
    "timestamp": 1736709280005,
    "page": 636,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rust-lang/rustc_codegen_cranelift",
      "stars": 1663,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.654296875,
          "content": "task:\n  name: freebsd\n  freebsd_instance:\n    image: freebsd-13-2-release-amd64\n  setup_rust_script:\n    - pkg install -y git-tiny binutils\n    - curl https://sh.rustup.rs -sSf --output rustup.sh\n    - sh rustup.sh --default-toolchain none -y --profile=minimal\n  target_cache:\n    folder: build/cg_clif\n  prepare_script:\n    - . $HOME/.cargo/env\n    - ./y.sh prepare\n  test_script:\n    - . $HOME/.cargo/env\n    # Disabling incr comp reduces cache size and incr comp doesn't save as much\n    # on CI anyway.\n    - export CARGO_BUILD_INCREMENTAL=false\n    # Skip rand as it fails on FreeBSD due to rust-random/rand#1355\n    - ./y.sh test --skip-test test.rust-random/rand\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.033203125,
          "content": "* text=auto eol=lf\n*.rs diff=rust\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# Build artifacts during normal use\n/download\n/build\n/dist\n/target\n/build_system/target\n\n# Downloaded by certain scripts\n/rust\n/git-fixed-subtree.sh\n\n# Various things that can be created during development\n*.rlib\n*.o\nperf.data\nperf.data.old\n*.mm_profdata\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".zed",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 13.55078125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923\"\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\ndependencies = [\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cranelift-bforest\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac89549be94911dd0e839b4a7db99e9ed29c17517e1c026f61066884c168aa3c\"\ndependencies = [\n \"cranelift-entity\",\n]\n\n[[package]]\nname = \"cranelift-bitset\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9bd49369f76c77e34e641af85d0956869237832c118964d08bf5f51f210875a\"\n\n[[package]]\nname = \"cranelift-codegen\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd96ce9cf8efebd7f5ab8ced5a0ce44250280bbae9f593d74a6d7effc3582a35\"\ndependencies = [\n \"bumpalo\",\n \"cranelift-bforest\",\n \"cranelift-bitset\",\n \"cranelift-codegen-meta\",\n \"cranelift-codegen-shared\",\n \"cranelift-control\",\n \"cranelift-entity\",\n \"cranelift-isle\",\n \"gimli\",\n \"hashbrown 0.14.5\",\n \"log\",\n \"regalloc2\",\n \"rustc-hash\",\n \"serde\",\n \"smallvec\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"cranelift-codegen-meta\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a68e358827afe4bfb6239fcbf6fbd5ac56206ece8a99c8f5f9bbd518773281a\"\ndependencies = [\n \"cranelift-codegen-shared\",\n]\n\n[[package]]\nname = \"cranelift-codegen-shared\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e184c9767afbe73d50c55ec29abcf4c32f9baf0d9d22b86d58c4d55e06dee181\"\n\n[[package]]\nname = \"cranelift-control\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cc7664f2a66f053e33f149e952bb5971d138e3af637f5097727ed6dc0ed95dd\"\ndependencies = [\n \"arbitrary\",\n]\n\n[[package]]\nname = \"cranelift-entity\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"118597e3a9cf86c3556fa579a7a23b955fa18231651a52a77a2475d305a9cf84\"\ndependencies = [\n \"cranelift-bitset\",\n]\n\n[[package]]\nname = \"cranelift-frontend\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7638ea1efb069a0aa18d8ee67401b6b0d19f6bfe5de5e9ede348bfc80bb0d8c7\"\ndependencies = [\n \"cranelift-codegen\",\n \"log\",\n \"smallvec\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"cranelift-isle\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15c53e1152a0b01c4ed2b1e0535602b8e86458777dd9d18b28732b16325c7dc0\"\n\n[[package]]\nname = \"cranelift-jit\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36972cab12ff246afe8d45b6a427669cf814bd393c661e5e8a8dedc26a81c73f\"\ndependencies = [\n \"anyhow\",\n \"cranelift-codegen\",\n \"cranelift-control\",\n \"cranelift-entity\",\n \"cranelift-module\",\n \"cranelift-native\",\n \"libc\",\n \"log\",\n \"region\",\n \"target-lexicon\",\n \"wasmtime-jit-icache-coherence\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"cranelift-module\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11841b3f54ac480db1e8e8d5678ba901a13b387012d315e3f8fba3e7b7a80447\"\ndependencies = [\n \"anyhow\",\n \"cranelift-codegen\",\n \"cranelift-control\",\n]\n\n[[package]]\nname = \"cranelift-native\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b7d8f895444fa52dd7bdd0bed11bf007a7fb43af65a6deac8fcc4094c6372f7\"\ndependencies = [\n \"cranelift-codegen\",\n \"libc\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"cranelift-object\"\nversion = \"0.115.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e235ddfd19f100855ad03358c7ae0a13070c38a000701054cab46458cca6e81\"\ndependencies = [\n \"anyhow\",\n \"cranelift-codegen\",\n \"cranelift-control\",\n \"cranelift-module\",\n \"log\",\n \"object\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"fallible-iterator\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\ndependencies = [\n \"fallible-iterator\",\n \"indexmap\",\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"foldhash\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"mach2\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b955cdeb2a02b9117f121ce63aa52d08ade45de53e48fe6a38b39c10f6f709\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"crc32fast\",\n \"hashbrown 0.15.2\",\n \"indexmap\",\n \"memchr\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regalloc2\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"145c1c267e14f20fb0f88aa76a1c5ffec42d592c1d28b3cd9148ae35916158d3\"\ndependencies = [\n \"allocator-api2\",\n \"bumpalo\",\n \"hashbrown 0.15.2\",\n \"log\",\n \"rustc-hash\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"region\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6b6ebd13bc009aef9cd476c1310d49ac354d36e240cf1bd753290f3dc7199a7\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n \"mach2\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fb8039b3032c191086b10f11f319a6e99e1e82889c5cc6046f515c9db1d497\"\n\n[[package]]\nname = \"rustc_codegen_cranelift\"\nversion = \"0.1.0\"\ndependencies = [\n \"cranelift-codegen\",\n \"cranelift-frontend\",\n \"cranelift-jit\",\n \"cranelift-module\",\n \"cranelift-native\",\n \"cranelift-object\",\n \"gimli\",\n \"indexmap\",\n \"libloading\",\n \"object\",\n \"smallvec\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"wasmtime-jit-icache-coherence\"\nversion = \"28.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d40d7722b9e1fbeae135715710a8a2570b1e6cf72b74dd653962d89831c6c70d\"\ndependencies = [\n \"anyhow\",\n \"cfg-if\",\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.3330078125,
          "content": "[package]\nname = \"rustc_codegen_cranelift\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n[lib]\ncrate-type = [\"dylib\"]\n\n[dependencies]\n# These have to be in sync with each other\ncranelift-codegen = { version = \"0.115.0\", default-features = false, features = [\"std\", \"unwind\", \"all-native-arch\"] }\ncranelift-frontend = { version = \"0.115.0\" }\ncranelift-module = { version = \"0.115.0\" }\ncranelift-native = { version = \"0.115.0\" }\ncranelift-jit = { version = \"0.115.0\", optional = true }\ncranelift-object = { version = \"0.115.0\" }\ntarget-lexicon = \"0.12.0\"\ngimli = { version = \"0.31\", default-features = false, features = [\"write\"] }\nobject = { version = \"0.36\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }\n\nindexmap = \"2.0.0\"\nlibloading = { version = \"0.8.0\", optional = true }\nsmallvec = \"1.8.1\"\n\n[patch.crates-io]\n# Uncomment to use an unreleased version of cranelift\n#cranelift-codegen = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n#cranelift-frontend = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n#cranelift-module = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n#cranelift-native = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n#cranelift-jit = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n#cranelift-object = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"release-28.0.0\", version = \"0.115.0\" }\n\n# Uncomment to use local checkout of cranelift\n#cranelift-codegen = { path = \"../wasmtime/cranelift/codegen\" }\n#cranelift-frontend = { path = \"../wasmtime/cranelift/frontend\" }\n#cranelift-module = { path = \"../wasmtime/cranelift/module\" }\n#cranelift-native = { path = \"../wasmtime/cranelift/native\" }\n#cranelift-jit = { path = \"../wasmtime/cranelift/jit\" }\n#cranelift-object = { path = \"../wasmtime/cranelift/object\" }\n\n#gimli = { path = \"../\" }\n\n[features]\n# Enable features not ready to be enabled when compiling as part of rustc\nunstable-features = [\"jit\", \"inline_asm_sym\"]\njit = [\"cranelift-jit\", \"libloading\"]\ninline_asm_sym = []\n\n[package.metadata.rust-analyzer]\nrustc_private = true\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 4.3603515625,
          "content": "# Cranelift codegen backend for rust\n\nThe goal of this project is to create an alternative codegen backend for the rust compiler based on [Cranelift](https://github.com/bytecodealliance/wasmtime/blob/main/cranelift).\nThis has the potential to improve compilation times in debug mode.\nIf your project doesn't use any of the things listed under \"Not yet supported\", it should work fine.\nIf not please open an issue.\n\n## Download using Rustup\n\nThe Cranelift codegen backend is distributed in nightly builds on Linux and x86_64 macOS. If you want to\ninstall it using Rustup, you can do that by running:\n\n```bash\n$ rustup component add rustc-codegen-cranelift-preview --toolchain nightly\n```\n\nOnce it is installed, you can enable it with one of the following approaches:\n- `CARGO_PROFILE_DEV_CODEGEN_BACKEND=cranelift cargo +nightly build -Zcodegen-backend`\n- Add the following to `.cargo/config.toml`:\n    ```toml\n    [unstable]\n    codegen-backend = true\n\n    [profile.dev]\n    codegen-backend = \"cranelift\"\n    ```\n- Add the following to `Cargo.toml`:\n    ```toml\n    # This line needs to come before anything else in Cargo.toml\n    cargo-features = [\"codegen-backend\"]\n\n    [profile.dev]\n    codegen-backend = \"cranelift\"\n    ```\n\n## Precompiled builds\n\nYou can also download a pre-built version from the [releases] page.\nExtract the `dist` directory in the archive anywhere you want.\nIf you want to use `cargo clif build` instead of having to specify the full path to the `cargo-clif` executable, you can add the `bin` subdirectory of the extracted `dist` directory to your `PATH`.\n(tutorial [for Windows](https://stackoverflow.com/a/44272417), and [for Linux/MacOS](https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path/26059#26059)).\n\n[releases]: https://github.com/rust-lang/rustc_codegen_cranelift/releases/tag/dev\n\n## Building and testing\n\nIf you want to build the backend manually, you can download it from GitHub and build it yourself:\n\n```bash\n$ git clone https://github.com/rust-lang/rustc_codegen_cranelift\n$ cd rustc_codegen_cranelift\n$ ./y.sh prepare\n$ ./y.sh build\n```\n\nTo run the test suite replace the last command with:\n\n```bash\n$ ./test.sh\n```\n\nFor more docs on how to build and test see [build_system/usage.txt](build_system/usage.txt) or the help message of `./y.sh`.\n\n## Platform support\n\n|OS \\ architecture|x86\\_64|AArch64|Riscv64|s390x (System-Z)|\n|---|---|---|---|---|\n|Linux|✅|✅|✅[^no-rustup]|✅[^no-rustup]|\n|FreeBSD|✅[^no-rustup]|❓|❓|❓|\n|AIX|❌[^xcoff]|N/A|N/A|❌[^xcoff]|\n|Other unixes|❓|❓|❓|❓|\n|macOS|✅|✅|N/A|N/A|\n|Windows|✅|❌|N/A|N/A|\n\n✅: Fully supported and tested\n❓: Maybe supported, not tested\n❌: Not supported at all\n\nNot all targets are available as rustup component for nightly. See notes in the platform support matrix.\n\n[^xcoff]: XCOFF object file format is not supported.\n[^no-rustup]: Not available as rustup component for nightly. You can build it yourself.\n\n## Usage\n\nrustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n\nAssuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.sh prepare` and `y.sh build` or `test.sh`).\n\nIn the directory with your project (where you can do the usual `cargo build`), run:\n\n```bash\n$ $cg_clif_dir/dist/cargo-clif build\n```\n\nThis will build your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n\nFor additional ways to use rustc_codegen_cranelift like the JIT mode see [usage.md](docs/usage.md).\n\n## Building and testing with changes in rustc code\n\nSee [rustc_testing.md](docs/rustc_testing.md).\n\n## Not yet supported\n\n* SIMD ([tracked here](https://github.com/rust-lang/rustc_codegen_cranelift/issues/171), `std::simd` fully works, `std::arch` is partially supported)\n* Unwinding on panics ([no cranelift support](https://github.com/bytecodealliance/wasmtime/issues/1677), `-Cpanic=abort` is enabled by default)\n\n## License\n\nLicensed under either of\n\n  * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or\n    http://www.apache.org/licenses/LICENSE-2.0)\n  * MIT license ([LICENSE-MIT](LICENSE-MIT) or\n    http://opensource.org/licenses/MIT)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you shall be dual licensed as above, without any\nadditional terms or conditions.\n"
        },
        {
          "name": "build_system",
          "type": "tree",
          "content": null
        },
        {
          "name": "clean_all.sh",
          "type": "blob",
          "size": 0.408203125,
          "content": "#!/bin/sh\nset -e\n\nrm -rf target/ build_system/target download/ build/ dist/\n\n# Kept for now in case someone updates their checkout of cg_clif before running clean_all.sh\n# FIXME remove at some point in the future\nrm y.bin y.bin.dSYM y.exe y.pdb 2>/dev/null || true\nrm -rf rand/ regex/ simple-raytracer/ portable-simd/ abi-checker/ abi-cafe/\nrm -rf build_sysroot/{sysroot_src/,target/,compiler-builtins/,rustc_version}\n"
        },
        {
          "name": "config.txt",
          "type": "blob",
          "size": 1.0263671875,
          "content": "# This file allows configuring the build system.\n\n# Disables cleaning of the sysroot dir. This will cause old compiled artifacts to be re-used when\n# the sysroot source hasn't changed. This is useful when the codegen backend hasn't been modified.\n# This option can be changed while the build system is already running for as long as sysroot\n# building hasn't started yet.\n#keep_sysroot\n\n\n# Testsuite\n#\n# Each test suite item has a corresponding key here. The default is to run all tests.\n# Comment any of these lines to skip individual tests.\n\ntestsuite.no_sysroot\nbuild.mini_core\nbuild.example\njit.mini_core_hello_world\naot.mini_core_hello_world\n\ntestsuite.base_sysroot\naot.arbitrary_self_types_pointers_and_wrappers\naot.issue_91827_extern_types\njit.std_example\naot.std_example\naot.dst_field_align\naot.subslice-patterns-const-eval\naot.track-caller-attribute\naot.float-minmax-pass\naot.issue-72793\naot.issue-59326\naot.neon\naot.gen_block_iterate\naot.raw-dylib\n\ntestsuite.extended_sysroot\ntest.rust-random/rand\ntest.libcore\ntest.regex\ntest.portable-simd\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.11328125,
          "content": "[toolchain]\nchannel = \"nightly-2025-01-10\"\ncomponents = [\"rust-src\", \"rustc-dev\", \"llvm-tools\"]\nprofile = \"minimal\"\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.2294921875,
          "content": "ignore = [\n    \"example/gen_block_iterate.rs\", # uses edition 2024\n]\n\n# Matches rustfmt.toml of rustc\nversion = \"Two\"\nuse_small_heuristics = \"Max\"\nmerge_derives = false\ngroup_imports = \"StdExternalCrate\"\nimports_granularity = \"Module\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.03125,
          "content": "#!/bin/sh\nexec ./y.sh test \"$@\"\n"
        },
        {
          "name": "y.cmd",
          "type": "blob",
          "size": 0.1337890625,
          "content": "@echo off\necho [BUILD] build system >&2\ncargo run --manifest-path build_system/Cargo.toml -- %* || goto :error\ngoto :EOF\n\n:error\nexit /b\n"
        },
        {
          "name": "y.ps1",
          "type": "blob",
          "size": 0.189453125,
          "content": "$ErrorActionPreference = \"Stop\"\n\n$host.ui.WriteErrorLine(\"[BUILD] build system\")\n& cargo run --manifest-path build_system/Cargo.toml -- $args\nif ($LASTEXITCODE -ne 0) {\n    exit $LASTEXITCODE\n}\n"
        },
        {
          "name": "y.sh",
          "type": "blob",
          "size": 0.111328125,
          "content": "#!/bin/sh\n\nset -e\necho \"[BUILD] build system\" 1>&2\nexec cargo run --manifest-path build_system/Cargo.toml -- \"$@\"\n"
        }
      ]
    }
  ]
}