{
  "metadata": {
    "timestamp": 1736709079259,
    "page": 212,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mozilla/uniffi-rs",
      "stars": 3008,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "# Our docker build doesn't need anything but `rust-toolchain.toml`.\n# This excludes everything, then includes just that one file..\n*\n!rust-toolchain.toml\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.20703125,
          "content": "target\n.*.swp\n*.jar\n.vscode\n.idea\nxcuserdata\ndocs/manual/src/internals/api\n# The old mdbook outdir\ndocs/manual/book\n\nexamples/app/ios/Generated\nexamples/app/ios/IOSApp.xcodeproj/project.xcworkspace/xcshareddata/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 41.265625,
          "content": "<!-- The sections in this file are managed automatically by `cargo release` -->\n<!-- See our [internal release process docs](docs/release-process.md) and for more general -->\n<!-- guidance, see https://github.com/sunng87/cargo-release/blob/master/docs/faq.md#maintaining-changelog -->\n\n<!-- next-header -->\n\n## [[UnreleasedUniFFIVersion]] (backend crates: [[UnreleasedBackendVersion]]) - (_[[ReleaseDate]]_)\n\n### ⚠️ Breaking Changes ⚠️\n\nWe've made a number of breaking changes to fix long standing paper-cuts with UniFFI in a\nmulti-crate environment and to simplify your and our implementations.\n\n[See the detailed upgrade notes](https://mozilla.github.io/uniffi-rs/next/Upgrading.html)\n\nWhile **no changes are required to foreign code**, we apologize for the inconvenience!\n\nYou are impacted if you use `UniffiCustomTypeConverter` to implement \"Custom types\",\nor use UDL with types from more than one crate.\n\n- `UniffiCustomTypeConverter` has been removed, you must now use the\n  [`custom_type!` macro](https://mozilla.github.io/uniffi-rs/next/types/custom_types.html) instead.\n\n- The [UDL syntax for external types](https://mozilla.github.io/uniffi-rs/next/udl/external_types.html) has changed.\n  `typedef extern MyEnum;` has been replaced\n  with `typedef enum MyEnum;`. `[Custom]` and `[External]` are the only supported  attributes for a `typedef`.\n\n- \"remote\" types (where UDL can re-export a type defined in\n  a non-UniFFI crate - eg, `log::Level`) must now use a\n  [`[Remote]` attribute](https://mozilla.github.io/uniffi-rs/next/types/remote_ext_types.html).\n\n- Various `use_udl_*`/`use_remote_type` etc macros have been removed.\n\n[Detailed upgrade notes](https://mozilla.github.io/uniffi-rs/next/Upgrading.html)\n### What's new?\n\n- Kotlin and Swift: Proc-macros exporting an `impl Trait for Struct` block now has a class inheritance\n  hierarcy to reflect that.\n  [#2297](https://github.com/mozilla/uniffi-rs/pull/2297), [#2363](https://github.com/mozilla/uniffi-rs/pull/2363)\n\n- Removed the `log` dependency and logging statements about FFI calls.  These were not really useful\n  to consumers and could have high overhead when lots of FFI calls are made. Instead, the\n  `ffi-trace` feature can be used to get tracing-style printouts about the FFI.\n\n- External errors work for Swift and Python. Kotlin does not work - see #2392.\n\n### What's changed?\n\n- Switching jinja template engine from askama to rinja.\n\n### ⚠️ Breaking Changes for external bindings authors ⚠️\n\n- Added the `FfiType::MutReference` variant.\n\n- `Type::External` has been removed. Binding authors must now check the type is local themselves before\n   deciding to treat it as a local or external type.\n\n[All changes in [[UnreleasedUniFFIVersion]]](https://github.com/mozilla/uniffi-rs/compare/v0.28.3...HEAD).\n\n## v0.28.3 (backend crates: v0.28.3) - (_2024-11-08_)\n\n### What's fixed?\n\n- Fixed bug in metadata extraction with large ELF files.\n\n[All changes in v0.28.3](https://github.com/mozilla/uniffi-rs/compare/v0.28.2...v0.28.3).\n\n## v0.28.2 (backend crates: v0.28.2) - (_2024-10-08_)\n\n### What's new?\n\n- Added the `uniffi-bindgen-swift` binary.  It works like `uniffi-bindgen` but with additional\n  Swift-specific features. See\n  https://mozilla.github.io/uniffi-rs/latest/swift/uniffi-bindgen-swift.html for details.\n\n- Removed the [old and outdated diplomat comparison](https://github.com/mozilla/uniffi-rs/blob/69ecfbd7fdf587a4ab24d1234e2d6afb8a496581/docs/diplomat-and-macros.md) doc\n\n- Proc-macros recognise when you are exporting an `impl Trait for Struct` block.\n  Python supports this by generating an inheritance hierarcy to reflect that.\n  [#2204](https://github.com/mozilla/uniffi-rs/pull/2204)\n\n### What's fixed?\n\n- `uniffi.toml` of crates without a `lib` type where ignored in 0.28.1\n- Python: Fixed a bug when enum/error names were not proper camel case (HTMLError instead of HtmlError).\n- Python: Fixed the class hierarcy generated for traits ((#2264)[https://github.com/mozilla/uniffi-rs/issues/2264])\n\n[All changes in v0.28.2](https://github.com/mozilla/uniffi-rs/compare/v0.28.1...v0.28.2).\n\n## v0.28.1 (backend crates: v0.28.1) - (_2024-08-09_)\n\n### What's new?\n\n- Lift errors will not cause an abort when `panic=abort` is set.\n- Added the `cargo_metadata` feature, which is on by default.  In some cases, this can be disabled\n  for better compatibility with projects that don't use cargo.\n- A new bindgen command line option `--metadata-no-deps` is available to avoid processing\n  cargo_metadata for all dependencies.\n- In UDL it's now possible (and preferred) to remove the `[Rust=]` attribute and use a plain-old typedef.\n  See [the manual page for this](https://mozilla.github.io/uniffi-rs/next/udl/ext_types.html#types-from-procmacros-in-this-crate).\n\n### What's changed?\n- Kotlin will use the more efficient Enum.entries property instead of Enum.values() when possible\n\n[All changes in v0.28.1](https://github.com/mozilla/uniffi-rs/compare/v0.28.0...v0.28.1).\n\n## v0.28.0 (backend crates: v0.28.0) - (_2024-06-11_)\n\n### What's new?\n- Objects error types can now be as `Result<>` error type without wrapping them in `Arc<>`.\n\n- Swift errors now provide `localizedDescription` ([#2116](https://github.com/mozilla/uniffi-rs/pull/2116))\n\n- Procmacros support tuple-errors (ie, enums used as errors can be tuple-enums.)\n\n### What's fixed?\n- Fixed a problem with procmacro defined errors when the error was not used as an `Err` result\n  in the namespace ([#2108](https://github.com/mozilla/uniffi-rs/issues/2108))\n\n- Custom Type names are now treated as type names by all bindings. This means if they will work if they happen to be\n  keywords in the language. There's a very small risk of this being a breaking change if you used a type name which\n  did not already start with a capital letter, but this changes makes all type naming consistent.\n  ([#2073](https://github.com/mozilla/uniffi-rs/issues/2073))\n\n- Macros `uniffi::method` and `uniffi::constructor` can now be used with\n  `cfg_attr`. ([#2113](https://github.com/mozilla/uniffi-rs/pull/2113))\n\n- Python: Fix custom types generating invalid code when there are forward references.\n  ([#2067](https://github.com/mozilla/uniffi-rs/issues/2067))\n\n### What's changed?\n- The internal bindings generation has changed to make it friendlier for external language bindings.\n  However, this a **breaking change** for these bindings.\n  No consumers of any languages are impacted, only the maintainers of these language bindings.\n  ([#2066](https://github.com/mozilla/uniffi-rs/issues/2066)), ([#2094](https://github.com/mozilla/uniffi-rs/pull/2094))\n\n- The async runtime can be specified for constructors/methods, this will override the runtime specified at the impl block level.\n\n[All changes in v0.28.0](https://github.com/mozilla/uniffi-rs/compare/v0.27.3...v0.28.0).\n\n## v0.27.3 (backend crates: v0.27.3) - (_2024-06-03_)\n\n- Removed dependencies on `unicode-linebreak` and `unicode-width`.  They were being pulled in a\n  sub-dependencies for the `textwrap` crate, but weren't really useful.\n\n[All changes in v0.27.3](https://github.com/mozilla/uniffi-rs/compare/v0.27.2...v0.27.3).\n\n## v0.27.2 (backend crates: v0.27.2) - (_2024-05-15_)\n\n### What's new?\n\n- Added the `scaffolding-ffi-buffer-fns` feature.  When enabled, UniFFI will generate an alternate\n  FFI layer that can simplify the foreign bindings code.  It's currently being tested out for the\n  gecko-js external binding, but other external bindings may also find it useful.\n\n### What's changed?\n\n- Removed the dependency on the `oneshot' crate (https://github.com/mozilla/uniffi-rs/issues/1736)\n\n[All changes in v0.27.2](https://github.com/mozilla/uniffi-rs/compare/v0.27.1...v0.27.2).\n\n## v0.27.1 (backend crates: v0.27.1) - (_2024-04-03_)\n\n[All changes in v0.27.1](https://github.com/mozilla/uniffi-rs/compare/v0.27.0...v0.27.1).\n\n### What's fixed?\n\n- Fixed a regression in 0.27.0 which broke throwing constructors (#2061).\n\n- Fixed a RustBuffer memory leak (#2056)\n\n## v0.27.0 (backend crates: v0.27.0) - (_2024-03-26_)\n\n### What's new?\n\n- Constructors can be async. Alternate constructors work in Python, Kotlin and Swift;\n  only Swift supports primary constructors.\n\n- Enums created with proc macros can now produce literals for variants in Kotlin and Swift. See\n[the section on enum proc-macros](https://mozilla.github.io/uniffi-rs/proc_macro/index.html#the-uniffienum-derive) for more information.\n\n- Objects can be errors - anywhere you can specify an enum error object you can specify\n  an `Arc<Object>` - see [the manual](https://mozilla.github.io/uniffi-rs/udl/errors.html).\n\n- Functions, methods and constructors exported by procmacros can be renamed for the forgeign bindings. See the procmaco manual section.\n\n- Trait interfaces can now have async functions, both Rust and foreign-implemented.  See the futures manual section for details.\n\n- Procmacros support tuple-enums.\n\n- `RustBuffer` was changed to use `u64` fields.\n  This eliminates panics when the capacity of the vec exceeds `i32::MAX`.\n  This can happen with the current Vec implementation when String/Vec sizes approach `i32::MAX` but don't exceed it.\n\n- Proc-macro function/method arguments can now have defaults\n\n- Proc-macro record defaults now support empty vecs and Some values.\n\n- Swift: Records and Enums without object references can now be made `Sendable` Swift,\n  by opting in to new Configuration `experimental_sendable_value_types` in `uniffi.toml`.\n\n### What's fixed?\n \n- Fixed a memory leak in callback interface handling.\n\n### ⚠️ Breaking Changes ⚠️\n\n- Python: Force named parameters for struct constructors ([#1840](https://github.com/mozilla/uniffi-rs/pull/1840))\n- Ruby: Force named parameters for struct constructors ([#1840](https://github.com/mozilla/uniffi-rs/pull/1840))\n\n### ⚠️ Breaking Changes for external bindings authors ⚠️\n\n- The callback interface code was reworked to use vtables rather than a single callback method.\n  See https://github.com/mozilla/uniffi-rs/pull/1818 for details and how the other bindings were updated.\n- Added the `FfiType::Handle` variant.  This is a general-purpose opaque handle type used for\n  passing objects cross the FFI.  This type is always 64 bits and replaces the various older handle\n  types including:\n  - Rust futures (replacing `FfiType::RustFutureHandle` which was removed)\n  - Rust future continuation data (Replacing `FfiType::RustFutureContinuationData` which was moved).\n- `RustBuffer.len` and `RustBuffer.capacity` are now `u64` rather than `i32`.\n\n[All changes in v0.27.0](https://github.com/mozilla/uniffi-rs/compare/v0.26.1...v0.27.0).\n\n## v0.26.1 (backend crates: v0.26.1) - (_2024-01-24_)\n\n### What's fixed?\n\n- The weedle2 version is now `5.0.0` rather than `4.0.1`.  `4.0.1` was yanked because it contained a breaking change.\n- Fixed a memory leak in callback interface handling.\n\n[All changes in v0.26.1](https://github.com/mozilla/uniffi-rs/compare/v0.26.0...v0.26.1).\n\n## v0.26.0 (backend crates: v0.26.0) - (_2024-01-23_)\n\n### What's changed?\n\n- The `rust_future_continuation_callback_set` FFI function was removed.  `rust_future_poll` now\n  inputs the callback pointer.  External bindings authors will need to update their code.\n\n### What's new?\n\n- Rust traits `Display`, `Hash` and `Eq` exposed to Kotlin and Swift [#1817](https://github.com/mozilla/uniffi-rs/pull/1817)\n- Foreign types can now implement trait interfaces [#1791](https://github.com/mozilla/uniffi-rs/pull/1791) and\n [the documentation](https://mozilla.github.io/uniffi-rs/udl/interfaces.html#foreign-implementations)\n  - UDL: use the `[WithForeign]` attribute\n  - proc-macros: use the `#[uniffi::export(with_foreign)]` attribute\n- Generated Python code is able to specify a package name for the module [#1784](https://github.com/mozilla/uniffi-rs/pull/1784)\n- UDL can describe async function [#1834](https://github.com/mozilla/uniffi-rs/pull/1834)\n- UDL files can reference types defined in procmacros in this crate - see\n  [the external types docs](https://mozilla.github.io/uniffi-rs/udl/ext_types.html)\n  and also external trait interfaces [#1831](https://github.com/mozilla/uniffi-rs/issues/1831)\n- Add support for docstrings via procmacros [#1862](https://github.com/mozilla/uniffi-rs/pull/1862)\n  and [in UDL](https://mozilla.github.io/uniffi-rs/udl/docstrings.html)\n- Objects can now be returned from functions/constructors/methods without wrapping them in an `Arc<>`.\n\n[All changes in v0.26.0](https://github.com/mozilla/uniffi-rs/compare/v0.25.3...v0.26.0).\n\n## v0.25.3 (backend crates: v0.25.3) - (_2023-12-07_)\n\n[All changes in v0.25.3](https://github.com/mozilla/uniffi-rs/compare/v0.25.2...v0.25.3).\n\n- Switched to a patched version of `oneshot` so that consumers who use `cargo vendor` don't vendor\n  `loom` and it's sub-dependencies like `windows`\n\n## v0.25.2 (backend crates: v0.25.2) - (_2023-11-20_)\n\n### What's fixed?\n\n- Fixed regression in the name of error enums in Kotlin [#1842](https://github.com/mozilla/uniffi-rs/pull/1842)\n- Fix regression when error types are in dicts etc [#1847](https://github.com/mozilla/uniffi-rs/pull/1847)\n\n[All changes in v0.25.2](https://github.com/mozilla/uniffi-rs/compare/v0.25.1...v0.25.2).\n\n## v0.25.1 (backend crates: v0.25.1) - (_2023-11-09_)\n\n[All changes in v0.25.1](https://github.com/mozilla/uniffi-rs/compare/v0.25.0...v0.25.1).\n\n### What's fixed?\n\n- Fixed several bugs with async functions were defined in multiple crates that get built together.\n\n## v0.25.0 (backend crates: v0.25.0) - (_2023-10-18_)\n\n[All changes in v0.25.0](https://github.com/mozilla/uniffi-rs/compare/v0.24.3...v0.25.0).\n\n### What's new\n- Proc-macros can now expose standard Rust traits (eg, `Display`, `Eq`, etc)\n- Fixed issues when trying to combine UDL and procmacros in the same crate when the \"namespace\" is\n  different from the crate name. This meant that the \"ffi namespace\" has changed to consistently be\n  the crate name, rather than either the crate name or the namespace name depending on whether the\n  item was declared via a procmacro or UDL. This should be invisible in most cases, but custom\n  build environments might require some changes. Specifically:\n  * `uniffi::generate_scaffolding(udl_path)` now uses the udl_path to locate the corresponding `Cargo.toml`, which\n    is parsed to determine the crate name (ie, the name under the `[lib]` entry). If your environment is such that\n    Cargo.toml can't be located or parsed, you should instead use `uniffi::generate_scaffolding_for_crate(udl_path, crate_name)`.\n  * Similarly, when executing `uniffi_bindgen` from the command-line to generate bindings and when not using \"library mode\",\n    `Cargo.toml` will be located and parsed to determine the crate name. Specifying `--crate-name` on the command-line can\n    be used to avoid this and use the specified value.\n\n- Crates can now use proc-macros without UDL files to export their interface.  See the \"Procedural Macros: Attributes and Derives\" manual section for details.\n- [Custom Types](https://mozilla.github.io/uniffi-rs/proc_macro/index.html#the-unifficustomtype-derive) are now supported for proc-macros, including a very\n  low-friction way of exposing types implementing the new-type idiom.\n- Proc-macros: Added support for ByRef arguments\n- Proc-macros: Implemented custom type conversion error handling (https://mozilla.github.io/uniffi-rs/udl/custom_types.html#error-handling-during-conversion)\n- Error types must now implement `Error + Send + Sync + 'static`.\n- Proc-macros: The `handle_unknown_callback_error` attribute is no longer needed for callback\n  interface errors\n\n### What's Fixed\n\n- Updated the async functionality to correctly handle cancellation (#1669)\n- Kotlin: Fixed low-level issue with exported async APIs\n- Kotlin: Fixed empty records being exported as empty data classes in Kotlin. A class with a proper `equals` function should be used instead.\n\n### What's changed?\n\n- Implementing `From<uniffi::UnexpectedUniFFICallbackError` is now optional for callback interface error types.\n  If the error type implements that, things will continue to work as before.\n  If not, then any unexpected callback error will result in a Rust panic.\n\n## v0.24.3 (backend crates: v0.24.3) - (_2023-08-01_)\n\n[All changes in v0.24.3](https://github.com/mozilla/uniffi-rs/compare/v0.24.2...v0.24.3).\n\n### What's changed?\n\n- `uniffi_macros`: Force-include the Cargo.toml to read ([#1683](https://github.com/mozilla/uniffi-rs/pull/1683))\n\n## v0.24.2 (backend crates: v0.24.2) - (_2023-07-25_)\n\n[All changes in v0.24.2](https://github.com/mozilla/uniffi-rs/compare/v0.24.1...v0.24.2).\n\n### What's changed?\n\n- Inline the metadata module in `uniffi_meta` to avoid a dependency of `uniffi_core` to avoid hitting an upstream bug during link time ([#1666](https://github.com/mozilla/uniffi-rs/pull/1666))\n\n## v0.24.1 (backend crates: v0.24.1) - (_2023-06-23_)\n\n[All changes in v0.24.1](https://github.com/mozilla/uniffi-rs/compare/v0.24.0...v0.24.1).\n\n### What's changed\n\n- Python: remove unused import (and unbreak Python 3.6 compatibility) ([#1618](https://github.com/mozilla/uniffi-rs/pull/1618))\n- Python: Delay contract checks until after all functions are defined to avoid wrong ABI use ([#1619](https://github.com/mozilla/uniffi-rs/pull/1619))\n- Kotlin: Fix error handling in async functions ([#1614](https://github.com/mozilla/uniffi-rs/pull/1614))\n\n## v0.24.0 (backend crates: v0.24.0) - (_2023-06-21_)\n\n[All changes in v0.24.0](https://github.com/mozilla/uniffi-rs/compare/v0.23.0...v0.24.0).\n\n### ⚠️ Breaking Changes ⚠️\n- ABI: Implemented a new callback-interface ABI that significantly improves performance on Python and Kotlin.\n  - UniFFI users will automatically get the benefits of this without any code changes.\n  - External bindings authors will need to update their bindings code. Please see [Guidance for external bindings](#guidance-for-external-bindings) below for details.\n- ABI: Changed API checksum handling.  This affects external bindings authors who will need to update their code to work with the new system.  See [PR #1469](https://github.com/mozilla/uniffi-rs/pull/1469) for details.\n- Removed the long deprecated `ThreadSafe` attribute.\n- `External` types now require a valid crate name.  Before the docs said it must be a crate name,\n  but any string could be used as long as it was consistent with the external type map in\n  `uniffi.toml`.\n- `External` types must be available in the Rust crate root.\n- External bindings: The `ExternalBindingsConfig` trait was replaced with `BindingsConfig`. External bindings implementations will need to make minor changes to implement the new trait instead.\n- Removed support for the `--config` flag when running the `scaffolding` command.  This flag has never an effect, because there was no scaffolding configuration options.\n- Python bindings are now more strict with their types. You can no longer pass strings to methods taking integers or floats, or floats to methods taking integers.\n\n### What's changed\n\n- Added \"library mode\" bindings generation using `generate --library [path-to-cdylib]`.  This mode simplifies bindings generation, especially when you have dependencies between multiple UniFFIed crates.  See the tutorial for a description.\n- The `include_scaffolding!()` macro must now either be called from your crate root or you must have `use the_mod_that_calls_include_scaffolding::*` in your crate root.  This was always the expectation, but wasn't required before.  This will now start failing with errors that say `crate::UniFfiTag` does not exist.\n- proc-macros now work with many more types including type aliases, type paths, etc.\n- The `uniffi_types` module is no longer needed when using proc-macros.\n- Traits can be exposed as a UniFFI `interface` by using a `[Trait]` attribute in the UDL.\n  See [the documentation](https://mozilla.github.io/uniffi-rs/udl/interfaces.html#exposing-traits-as-interfaces).\n- The `bytes` primitive type was added, it represents an array of bytes. It maps to `ByteArray` in Kotlin, `bytes` in Python, `String` with `Encoding::BINARY` in Ruby and `Data` in Swift. ([#1543](https://github.com/mozilla/uniffi-rs/pull/1543))\n- Shortened `str()` representations of errors in Python to align with other exceptions in Python. Use `repr()` or the `{!r}` format to get the old representation back ([#1556](https://github.com/mozilla/uniffi-rs/pull/1556))\n- Methods implemented by standard Rust traits, such as `Debug`, `Display`, `Eq` and `Hash` can now be exposed over the FFI and bindings may implement special methods for them.\n  See [the documentation](https://mozilla.github.io/uniffi-rs/udl/interfaces.html#exposing-methods-from-standard-rust-traits).\n- Added support for async/futures ([#1409](https://github.com/mozilla/uniffi-rs/pull/1409), [#1515](https://github.com/mozilla/uniffi-rs/pull/1515))\n- Added constructor support to proc-macro frontend ([#1518](https://github.com/mozilla/uniffi-rs/pull/1518))\n- Added support for field defaults to proc-macro frontend ([#1560](https://github.com/mozilla/uniffi-rs/pull/1560))\n- Implemented proc-macro callback interface support ([#1573](https://github.com/mozilla/uniffi-rs/pull/1573))\n- Python bindings now generate type stubs for all functions and types ([#1506](https://github.com/mozilla/uniffi-rs/pull/1506))\n- Enforced checks for integer overflows in Python bindings ([#1546](https://github.com/mozilla/uniffi-rs/pull/1546))\n- No more implicit conversion to integers/floats in Python ([#1554](https://github.com/mozilla/uniffi-rs/pull/1554))\n- Enforced checks for integer overflows in Ruby bindings ([#1572](https://github.com/mozilla/uniffi-rs/pull/1572))\n- Only UTF-8 valid strings are passed from Ruby to Rust ([#1595](https://github.com/mozilla/uniffi-rs/pull/1595))\n- No more implicit conversion to integers/floats in Ruby ([#1596](https://github.com/mozilla/uniffi-rs/pull/1596))\n- Updated Rust dependencies ([#1495](https://github.com/mozilla/uniffi-rs/pull/1495), [#1583](https://github.com/mozilla/uniffi-rs/pull/1583), [#1569](https://github.com/mozilla/uniffi-rs/pull/1569))\n- Added type checking to strings/bytes for Python/Ruby ([#1597](https://github.com/mozilla/uniffi-rs/pull/1597#))\n- Implemented proc-macro external type support.  This allows proc-macros to use types defined in UDL files from other crates, [#1600](https://github.com/mozilla/uniffi-rs/pull/1600)\n\n### Guidance for external bindings\n\nThere are many breaking changes for external bindings - we hope there will be fewer in\nlater releases, but we are laying the groundwork for some nice improvements.\nSignificant patches to UniFFI's builtin bindings which you will need to port include:\n\n* <https://github.com/mozilla/uniffi-rs/commit/b9821439876c4fda05910313dec20906563b9909>\n* <https://github.com/mozilla/uniffi-rs/commit/748f671bb1e88267522119ef6b9d98a8bcca1cc0>\n* <https://github.com/mozilla/uniffi-rs/commit/07dcf3fe218d61e72073da72ba60ccbcd990bfb8>\n* <https://github.com/mozilla/uniffi-rs/commit/45d572def4fd84120e9a8cdfcc75ff1eead00e81>\n* <https://github.com/mozilla/uniffi-rs/commit/5e3dea51f17ae59a695a40e23479d57262968bb6>\n* <https://github.com/mozilla/uniffi-rs/commit/2eb39753e060a28ee43eae90b996ff55f9b5e0bd>\n* <https://github.com/mozilla/uniffi-rs/commit/323a4976992aff207db7946fc1f1cea614838f46>\n* <https://github.com/mozilla/uniffi-rs/pull/1497>\n\n## v0.23.0 (backend crates: v0.23.0) - (_2023-01-27_)\n\n### Migrating to UniFFI 0.23+\n\n- Update your `Cargo.toml` file to only depend on the `uniffi` crate.  Follow the directions from the [Prerequisites section of the manual](https://mozilla.github.io/uniffi-rs/tutorial/Prerequisites.html)\n- Create a `uniffi-bindgen` binary for your project.  Follow the directions from the [Foreign language bindings section of the manual](https://mozilla.github.io/uniffi-rs/tutorial/foreign_language_bindings.html).\n- Uninstall the system-wide `uniffi_bindgen`: `cargo uninstall uniffi_bindgen`.  (Not strictly necessary, but you won't be using it anymore).\n\n[All changes in v0.23.0](https://github.com/mozilla/uniffi-rs/compare/v0.22.0...v0.23.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- `uniffi_bindgen` no longer provides a standalone binary.  Having a standalone binary resulted in version mismatches when the `uniffi` version specified in `Cargo.toml` didn't match the `uniffi_bindgen` version installed on the system.  Read [The foreign language bindings](https://mozilla.github.io/uniffi-rs/tutorial/foreign_language_bindings.html) section of the manual for how to set up a `uniffi-bindgen` binary that's local to your workspace.\n- `uniffi_bindgen`: Removed the `run_main` function.  It's moved to `uniffi::uniffi_bindgen_main` and now unconditionally succeeds rather than return a `Result<()>`.\n\n### What's changed\n\n- The UniFFI crate organization has been significantly reworked:\n  - Projects that use UniFFI for binding/scaffolding generation now only need to depend on the `uniffi` crate and no longer need to depend on `uniffi_bindgen`, `uniffi_build`, etc.\n  - The version numbers for each crate will no longer by kept in sync after this release.  In particular `uniffi` will have breaking changes less often than `uniffi_bindgen` and other crates.  This means that UniFFI consumers that specify their versions like `uniffi = \"0.23\"` will not need to bump their `uniffi` version as often as before.\n- Callback interface method calls are no longer logged (#1439)\n\n## v0.22.0 - (_2022-12-16_)\n\n[All changes in v0.22.0](https://github.com/mozilla/uniffi-rs/compare/v0.21.1...v0.22.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- `uniffi_bindgen`: Renamed `FFIArgument`, `FFIFunction` and `FFIType` to\n  `FfiArgument`, `FfiFunction` and `FfiType`\n\n### What's changed\n\n- Added support for Swift external types\n- Fix whitespace issues in scaffolding code breaking some versions of `rustfmt`\n- Fix ruby time support\n- proc-macro\n  - Document (experimental) proc-macro support\n  - Support fallible functions\n  - Add Enum derive macro\n  - Add Error derive macro\n\n## v0.21.1 - (_2022-12-16_)\n\n[All changes in v0.21.1](https://github.com/mozilla/uniffi-rs/compare/v0.21.0...v0.21.1).\n\n### What's changed\n\n- Replace checksum mechanism for function naming to give consistent results, independent of the target's endianness and bit width.\n  This should have no visible effect on the outside.\n\n## v0.21.0 - (_2022-10-14_)\n\n[All changes in v0.21.0](https://github.com/mozilla/uniffi-rs/compare/v0.20.0...v0.21.0).\n\n###  ⚠️ Breaking Changes ⚠️\n\n- `uniffi_bindgen`: Renamed the `throws()` method of `Function`, `Method`, and\n  `Constructor` to `throws_str()`.  Added a new `throws()` method that returns\n  a boolean.\n\n### What's changed\n\n- Added support for exceptions in callback interface methods.\n- Improved error stringifying on Kotlin and Ruby (the `message` and `to_s` methods respectively).\n\n## v0.20.0 - (_2022-09-13_)\n\n[All changes in v0.20.0](https://github.com/mozilla/uniffi-rs/compare/v0.19.6...v0.20.0).\n\n###  ⚠️ Breaking Changes ⚠️\n\n- Renamed the `uniffi_bindgen` `cydlib` argument to `lib_file`, since it can also accept static libraries\n\n### What's changed\n\n- The `guess_crate_root` function is now public\n\n### What's changed\n- The UDL can contain identifiers which are also keywords in Swift, except in namespace functions.\n\n## v0.19.6 - (_2022-08-31_)\n\n[All changes in v0.19.6](https://github.com/mozilla/uniffi-rs/compare/v0.19.5...v0.19.6).\n\n- Fix callback interface init signature in Rust scaffolding\n- Drop unused dependencies\n- Update to MSRV 1.61.0\n\n## v0.19.5 - (_2022-08-29_)\n\n[All changes in v0.19.5](https://github.com/mozilla/uniffi-rs/compare/v0.19.4...v0.19.5).\n\n- Fixed a small bug in the 0.19.4 release, where the extraneous `r#` was present in the HashMap generated scaffolding.\n\n## v0.19.4 - (_2022-08-29_)\n\n[All changes in v0.19.4](https://github.com/mozilla/uniffi-rs/compare/v0.19.3...v0.19.4).\n\n- Implement Timestamp and Duration types in Ruby backend.\n- Fixed in a bug where callback interfaces with arguments that include underscores do not get converted to camelCase on Swift.\n\n## v0.19.3 - (_2022-07-08_)\n\n[All changes in v0.19.3](https://github.com/mozilla/uniffi-rs/compare/v0.19.2...v0.19.3).\n\n## v0.19.2 - (_2022-06-28_)\n\n[All changes in v0.19.2](https://github.com/mozilla/uniffi-rs/compare/v0.19.1...v0.19.2).\n\n- Fixed sccache issue with the `askama.toml` config file.\n\n## v0.19.1 - (_2022-06-16_)\n\n[All changes in v0.19.1](https://github.com/mozilla/uniffi-rs/compare/v0.19.0...v0.19.1).\n\n### What's Changed\n\n- Fixed the dependency from `uniffi_build` -> `uniffi_bindgen`\n\n## v0.19.0 - (_2022-06-16_)\n\n[All changes in v0.19.0](https://github.com/mozilla/uniffi-rs/compare/v0.18.0...v0.19.0).\n\n###  ⚠️ Breaking Changes ⚠️\n- breaking for external binding generators, the `FFIType::RustArcPtr` now includes an inner `String`. The string represents the name of the object the `RustArcPtr` was derived from.\n- Kotlin exception names are now formatted as strict UpperCamelCase.  Most names shouldn't change, but names that use one word with all caps will be affected (for example `URL` -> `Url`, `JSONException` -> `JsonException`)\n\n### What's changed\n- The UDL can contain identifiers which are also keywords in Rust, Python or Kotlin.\n\n## v0.18.0 - (_2022-05-05_)\n\n[All changes in v0.18.0](https://github.com/mozilla/uniffi-rs/compare/v0.17.0...v0.18.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- When custom types are used in function/method signatures UniFFI will now use\n  the UDL name for that type and create a typealias to the concrete type.  In the\n  [URL example](https://mozilla.github.io/uniffi-rs/udl/custom_types.html#custom-types-in-the-bindings-code),\n  this means the type will be now appear on Kotlin as `Url` rather than `URL`.\n  Any existing code should continue to work because of the typealias, but this\n  might affect your generated documentation and/or code completion.\n- For Python libraries the native library is now loaded from an absolute path. The shared library (`*.dll` on Windows, `*.dylib` on macOS and `.so` on other platforms) must be placed next to the Python wrapper code.\n\n### What's changed\n\n- Allow record types with arbitrary key types\n  - Record types can now contain any hashable type as its key. This is implemented for Kotlin, Python and Swift\n- Python\n  - Added support for default values in dictionaries\n  - Generated Python code is now annotated to avoid mypy type checking\n- Kotlin\n  - Added external type support\n- Swift\n  - Fix test helper code to work with Swift 5.6\n\n## v0.17.0 - (_2022-02-03_)\n\n[All changes in v0.17.0](https://github.com/mozilla/uniffi-rs/compare/v0.16.0...v0.17.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- Wrapped types have been renamed custom types.\n   - The UDL attribute is now `[Custom]` instead of `[Wrapped]`\n   - The trait name has been renamed to `UniffiCustomTypeConverter` from `UniffiCustomTypeWrapper`\n   - The method names of that trait have been renamed to `into_custom()` / `from_custom()` instead of `wrap()` and `unwrap()`\n   - The associated type has been renamed to `Builtin` instead of `Wrapped`\n\n### What's Changed\n\n- Custom types (formerly wrapped) now can be configured on the bindings side as\n  well as the scaffolding side.  See the \"Custom Types\" section of the manual\n  for details.\n- Kotlin now prefixes more local UniFFI variables with the `_` char to avoid\n  conflicts with user-defined names.\n- Updated Kotlin to use the `FfiConverter` pattern (#1144)\n- Documentation updates: Added a doc comparing UniFFI to Diplomat.  Added a\n  README note describing the foreign languages we currently support.\n- Fixed `RustCallStatus.__str__` implementation on Python\n- Fixed the version numbers in the CHANGELOG compare links.\n\n## v0.16.0 - (_2021-12-15_)\n\n[All changes in v0.16.0](https://github.com/mozilla/uniffi-rs/compare/v0.15.2...v0.16.0)\n\n### ⚠️ Breaking Changes ⚠️\n\n- Error handling when converting custom types has been updated. If your `wrap()`\n  function returns an `Err`, in some cases it now [may not panic but instead\n  return the error declared by the function](https://mozilla.github.io/uniffi-rs/udl/ext_types_wrapped.html#error-handling-during-conversion).\n\n### What's Changed\n\n- Python: Added Callback Interface support\n- Swift bindings can now omit argument labels in generated functions using `omit_argument_labels = true` in the configuration.\n\n## v0.15.2 - (_2021-11-25_)\n\n### What's Changed\n- Kotlin now generates valid code for optional timestamps/durations.\n\n[All changes in v0.15.2](https://github.com/mozilla/uniffi-rs/compare/v0.15.1...v0.15.2).\n\n## v0.15.1 (_2021-11-23_)\n\n(Note that v0.15.0 was accidentally published, then yanked. v0.15.1 should be used instead)\n\n### ⚠️ Breaking Changes ⚠️\n- Previously, an interface which didn't declare a constructor got a default one anyway, making it\n  impossible to decline to provide one. This is no longer true, so if your interface wants a\n  constructor, you must add one explicitly.\n\n### What's Changed\n- Kotlin and Swift, like Python, now support [simple \"wrapped\" types](https://mozilla.github.io/uniffi-rs/udl/ext_types_wrapped.html).\n\n- The Python backend has been refactored to more closely match the other backends, but this\n  should be invisible to consumers.\n\n- The Swift and Kotlin backends have had minor tweaks.\n\n- The kotlin backend now explicitly checks for a null pointer in cases where it\n  should be impossible to help us diagnose issues seen in the wild. See #1108.\n\n[All changes in v0.15.1](https://github.com/mozilla/uniffi-rs/compare/v0.14.1...v0.15.1).\n\n## v0.14.1 (_2021-10-27_)\n\n### ⚠️ Breaking Changes ⚠️\n- The `build_foreign_language_testcases!` macro now takes an array of UDL files as the\n  first argument.\n\n### What's Changed\n\n- Swift: Added Callback Interface support\n- Swift: Refactored codegen to better match Kotlin / Unit of Code\n- Kotlin: Added some defensive programming around `RustBufferBuilder.discard()`\n\n[All changes in v0.14.1](https://github.com/mozilla/uniffi-rs/compare/v0.14.0...v0.14.1).\n\n## v0.14.0 (_2021-08-17_)\n\n[All changes in v0.14.0](https://github.com/mozilla/uniffi-rs/compare/v0.13.1...v0.14.0).\n\n### ⚠️ Breaking Changes ⚠️\n- The Rust implementations of all `dictionary`, `enum` or `error` types defined in UDL must be\n  public. If you see errors like:\n    `private type <type-name> in public interface`\n  or similar, please declare the types as `pub` in your Rust code.\n\n- Errors declared using the `[Error] enum` syntax will now expose the error string from\n  Rust to the foreign language bindings. This reverts an unintended change in behaviour\n  from the v0.13 release which made the error message inaccessible.\n\n### What's Changed\n\n- You can now use external types of various flavours - see\n  [the fine manual](https://mozilla.github.io/uniffi-rs/udl/ext_types.html)\n\n- An environment variable `UNIFFI_TESTS_DISABLE_EXTENSIONS` can disable foreign language bindings\n  when running tests. See [the contributing guide](./contributing.md) for more.\n\n## v0.13.1 (_2021-08-09_)\n\n[All changes in v0.13.1](https://github.com/mozilla/uniffi-rs/compare/v0.13.0...v0.13.1).\n\n### What's Changed\n\n- Fixed an accidental regression in v0.13.0 where errors were no longer being coerced\n  to the correct type via `Into`. If the UDL declares a `[Throws=ExampleError]` function\n  or method, the underlying implementation can now return anything that is `Into<ExampleError>`,\n  matching the implicit `Into` behavior of Rust's `?` operator.\n- Fixed an accidental regression in v0.13.0 where the generated Rust scaffolding assumed\n  that the `HashMap` type would be in scope. It now uses fully-qualified type names in order\n  to be more robust.\n\n## v0.13.0 (_2021-08-09_)\n\n[All changes in v0.13.0](https://github.com/mozilla/uniffi-rs/compare/v0.12.0...v0.13.0).\n\n### ⚠️ Breaking Changes ⚠️\n- UniFFI no longer has ffi-support as a dependency.  This means it handles\n  panic logging on its own.  If you previously enabled the `log_panics` feature\n  for `ffi-support`, now you should enable it for `uniffi`.\n- The Swift bindings now explicitly generate two separate Swift modules, one for\n  the high-level Swift code and one for the low-level C FFI. This change is intended\n  to simplify distribution of the bindings via Swift packages, but brings with it\n  some changes to the generated file layout.\n  - For an interface namespace \"example\", we now generate:\n    - A bridged C module named \"exampleFFI\" containing the low-level C FFI,\n      consisting of an `exampleFFI.h` file and matching `exampleFFI.modulemap`\n      file. The name can be customized using the `ffi_module_name` config option.\n    - A Swift module named \"example\" containing the high-level Swift bindings,\n      which imports and uses the low-level C FFI. The name can be customized using\n      the `module_name` config option.\n- Python timestamps will now be in UTC and timezone-aware rather than naive.\n- Kotlin exceptions names will now replace a trailing \"Error\" with \"Exception\"\n  rather than appending the string (FooException instead of FooErrorException)\n- JNA 5.7 or greater is required for Kotlin consumers\n\n### What's Changed\n\n- Both python and ruby backends now handle U16 correctly.\n- Error variants can now contain named fields, similar to Enum variants\n- Replaced the `ViaFfi` trait with the `FfiConverter` trait.  `FfiConverter` is\n  a more flexible version of `ViaFfi` because it can convert any Rust\n  type to/from an Ffi type, rather than only Self.  This allows for using\n  UniFFI with a type defined in an external crate.\n\n## v0.12.0 (_2021-06-14_)\n\n[All changes in v0.12.0](https://github.com/mozilla/uniffi-rs/compare/v0.11.0...v0.12.0).\n\n### What's New\n\n- It is now possible to use Object instances as fields in Records or Enums, to pass them as arguments,\n  and to return them from function and method calls. They should for the most part behave just like\n  a host language object, and their lifecycle is managed transparently using Rust's `Arc<T>` type.\n    - Reference cycles that include Rust objects will not be garbage collected; if you cannot avoid\n      creating reference cycles you may need to use Rust's `Weak<T>` type to help break them.\n    - In the **Kotlin** bindings, Object instances must be manually freed by calling their `destroy()`\n      method or by using their `.use` block helper method. Records or Enums that *contain* an Object\n      instance now also have a `destroy()` method and must be similarly disposed of after use.\n\n### What's Changed\n\n- Kotlin objects now implement `AutoCloseable` by default; closing an object instance is equivalent\n  to calling its `destroy()` method.\n\n## v0.11.0 (_2021-06-03_)\n\n[All changes in v0.11.0](https://github.com/mozilla/uniffi-rs/compare/v0.10.0...v0.11.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- All interface implementations must now be `Sync + Send`, and Rust will give a compile-time error\n  if they are not. This makes the `[Threadsafe]` annotation redundant, so it is now deprecated and\n  will be removed in a future release. More details on the motivation for this change can be found\n  in [ADR-0004](https://github.com/mozilla/uniffi-rs/blob/main/docs/adr/0004-only-threadsafe-interfaces.md).\n\n### What's Changed\n\n- Swift structs and Kotlin data classes generated from `dictionary` are now mutable by default:\n  - **Swift** now uses `var` instead of `let`\n  - **Kotlin** now uses `var` instead of `val`\n- Kotlin objects can now safely have their `destroy()` method or `.use` block execute concurrently\n  with other method calls. It's recommended that you *not* do this, but if you accidentally do so,\n  it will now work correctly rather than triggering a panic in the underlying Rust code.\n\n## v0.10.0 (_2021-05-26_)\n\n[All changes in v0.10.0](https://github.com/mozilla/uniffi-rs/compare/v0.9.0...v0.10.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- Two new built-in datatypes have been added: the `timestamp` type for representing moments in\n  time, and the `duration` type for representing a difference between two timestamps. These\n  mirror the `std::time::{SystemTime, Duration}` types from Rust. Thanks to @npars for\n  contributing this feature!\n    - This is a breaking change as it may conflict with user-declared `timestamp` or\n      `duration` types in existing `.udl` files.\n\n### What's New\n\n- A new **Ruby** codegen backend has been added. You can now call `uniffi-bindgen -l ruby` to\n  generate a Ruby module that wraps a UniFFI Rust component. Thanks to @saks for contributing\n  this backend!\n    - When running `cargo test` locally, you will need a recent version of Ruby and\n      the `ffi` gem in order to successfully execute the Ruby backend tests.\n- Threadsafe Object methods can now use `self: Arc<Self>` as the method receiver in the underlying\n  Rust code, in addition to the default `self: &Self`. To do so, annotate the method with\n  `[Self=ByArc]` in the `.udl` file and update the corresponding Rust method signature to match.\n  This will not change the generated foreign-language bindings in any way but may be useful for\n  more explicit management of Object references in the Rust code.\n\n### What's Changed\n\n- **Kotlin:** Fixed buggy codegen for optional primitive types like `i32?`; on earlier versions\n  this would generate invalid Kotlin code which would fail to compile.\n\n## v0.9.0 (_2021-05-21_)\n\n[All changes in v0.9.0](https://github.com/mozilla/uniffi-rs/compare/v0.8.0...v0.9.0).\n\n### ⚠️ Breaking Changes ⚠️\n\n- Support for non-`[Threadsafe]` interfaces has been deprecated. A future release will require that\n  all interface implementations be `Sync + Send`, making the `[Threadsafe]` annotation redundant.\n\n### What's Changed\n\n- Errors when parsing a `.udl` file are now marginally more useful (they're still not great, but they're better).\n- Generated code should now be deterministic between runs with the same input file and version of UniFFI.\n  Previously, the generated code could depend on the iteration order of an internal hash table.\n- **Swift:** Generated Swift Enums now conform to `Hashable` by default.\n- **Swift:** There are now additional docs on how to consume the generated Swift bindings via XCode.\n\n## Previous releases.\n\nWe did not maintain a changelog for previous releases.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.2109375,
          "content": "# Community Participation Guidelines\n\nThis repository is governed by Mozilla's code of conduct and etiquette guidelines.\nFor more details, please read the\n[Mozilla Community Participation Guidelines](https://www.mozilla.org/about/governance/policies/participation/).\n\n## How to Report\nFor more information on how to report violations of the Community Participation Guidelines, please read our '[How to Report](https://www.mozilla.org/about/governance/policies/participation/reporting/)' page.\n\n## Project Specific Etiquette\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nProject maintainers who do not follow or enforce Mozilla's Participation Guidelines in good\nfaith may face temporary or permanent repercussions.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 55.9033203125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6748e8def348ed4d14996fa801f4122cd763fff530258cdc03f64b25f89d3a5a\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d96bd03f33fe50a863e394ee9718a706f988b9079b20c3784fb726e7678b62fb\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.75\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4668cab20f66d8d020e1fbc0ebe47217433c1b6c8f2040faf858554e394ace6\"\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-compat\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b48b4ff0c2026db683dea961cd8ea874737f56cffca86fa84415eaddc51c00d\"\ndependencies = [\n \"futures-core\",\n \"futures-io\",\n \"once_cell\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fa3dc5f2a8564f07759c008b9109dc0d39de92a88d5588b8a5036d286383afb\"\ndependencies = [\n \"async-lock\",\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1b6f5d7df27bd294849f8eec66ecfc63d11814df7a4f5d74168a2394467b776\"\ndependencies = [\n \"async-channel\",\n \"async-executor\",\n \"async-io\",\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af\"\ndependencies = [\n \"async-lock\",\n \"autocfg\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-lite\",\n \"log\",\n \"parking\",\n \"polling\",\n \"rustix 0.37.25\",\n \"slab\",\n \"socket2\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b\"\ndependencies = [\n \"event-listener\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62565bb4402e926b29953c785397c6dc0391b7b446e45008b0049eb43cec6f5d\"\ndependencies = [\n \"async-channel\",\n \"async-global-executor\",\n \"async-io\",\n \"async-lock\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecc7ab41815b3c653ccd2978ec3255c81349336702dfdf62ee6f7069b12a3aae\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a66537f1bb974b254c98ed142ff995236e81b9d0fe4db0575f46612cb15eb0f9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1181e1e0d1fce796a03db1ae795d67167da795f9cf4a39c37589e85ef57f26d3\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"basic-toml\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7bfc506e7a2370ec239e1d072507b2a80c833083699d3c6fa176fbb4de8448c6\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4682ae6287fcf752ecaabbfcc7b6f9b72aa33933dc23a554d853aea8eea8635\"\n\n[[package]]\nname = \"blocking\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77231a1c8f801696fc0123ec6150ce92cffb8e164a02afb9c8ddee0e9b65ad65\"\ndependencies = [\n \"async-channel\",\n \"async-lock\",\n \"async-task\",\n \"atomic-waker\",\n \"fastrand\",\n \"futures-lite\",\n \"log\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e2c3daef883ecc1b5d58c15adae93470a91d425f3532ba1695849656af3fc1\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b2fd2a0dcf38d7971e2194b6b6eebab45ae01067456a7fd93d5547a61b70be\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cfa25e60aea747ec7e1124f238816749faa93759c6ff5b31f1ccdda137f4479\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.15.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eee4243f1f26fc7a42710e7439c149e2b10b05472f88090acce52632f231a73a\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec837a71355b28f6556dbd569b37b3f363091c0bd4b2e735674521b4c5fd9bc5\"\ndependencies = [\n \"android-tzdata\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"effd91f6c78e5a4ace8a5d3c0b6bfaec9e2baaef55f3efc00e45fb2e477ee926\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdf919175532b369853f5d5e20b26b43112613fd6fe7aee757e35f7a44642656\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"defaa24ecc093c77630e6c15e17c51f5e187bf35ee514f4e2d67baaa96dae22b\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bc066a67923782aa8515dbaea16946c5bcc5addbd668bb80af688e53e548a0\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae129e2e766ae0ec03484e609954119f123cc1fe650337e155d03b022f24f7b4\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"528131438037fd55894f62d6e9f068b8f45ac57ffa77517819645d10aed04f64\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62ec6771ecfa0762d24683ee5a32ad78487a3d3afdc0fb8cae19d2c5deb50b7c\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a33c2bf77f2df06183c3aa30d1e96c0695a313d4f9c453cc3762a6db39f99200\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae211234986c545741a7dc064309f67ee1e5ad243d0e48335adc0484d960bcc7\"\ndependencies = [\n \"autocfg\",\n \"cfg-if\",\n \"crossbeam-utils\",\n \"memoffset\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b30f669a7961ef1631673d2766cc92f52d64f7ef354d4fe0ddfd30ed52f0f4f\"\ndependencies = [\n \"errno-dragonfly\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"errno-dragonfly\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be\"\ndependencies = [\n \"instant\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs-err\"\nversion = \"2.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0845fa252299212f0389d64ba26f34fa32cfe41588355f21ed507c59a0f64541\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0290714b38af9b4a7b094b8a37086d1b4e61f2df9122c3cad2577669145335\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff4dd66668b557604244583e3e1e1eada8c5c2e96a6d0d6653ede395b78bbacb\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb1d22c66e66d9d72e1758f0bd7d4fd0bee04cad842ee34587d68c07e45d088c\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f4fb8693db0cf099eadcca0efe2a5a22e4550f98ed16aba6c48700da29597bc\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8bf34a163b5c4c52d0478a4d757da8fb65cabef42ba90515efee0f6f9fa45aaa\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"memchr\",\n \"parking\",\n \"pin-project-lite\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53b153fd91e4b0147f4aced87be237c98248656bb01050b96bf3ee89220a8ddb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e36d3378ee38c2a36ad710c5d30c2911d752cb941c00c72dbabfb786a7970817\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"efd193069b0ddadc69c46389b740bbccdd97203899b48d09c5f7969591d6bae2\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a19526d624e703a3179b3d322efec918b6246ea0fa51d41124525f00f1cc8104\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fb8d784f27acf97159b40fc4db5ecd8aa23b9ad5ef69cdd136d3bc80665f0c0\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b995a66bb87bebce9a0f4a95aed01daca4872c050bfcb21653361c03bc35e5c\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"goblin\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb07a4ffed2093b118a525b1d8f5204ae274faed5604537caf7135d0f18d9887\"\ndependencies = [\n \"log\",\n \"plain\",\n \"scroll\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b\"\n\n[[package]]\nname = \"http\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd6effc99afb63425aff9b05836f029929e345a6148a14b7ecd5ab67af944482\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb0889898416213fab133e1d33a0e5858a48177452750691bde3666d0fdbaf8b\"\ndependencies = [\n \"hermit-abi\",\n \"rustix 0.38.8\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5f195fe497f702db0f318b07fdd68edb16955aed830df8363d837542f8f935a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"large-enum\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"large-error\"\nversion = \"0.26.1\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.158\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57bcfdad1b858c2db7c38303a6d2ad4dfaf5eb53dfeb0910128b2c26d6158503\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a634b1c61a95585bd15607c6ab0c4e5b226e695ff2800ba0cdccddf208c406c\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f30b0abd723be7e2ffca1272140fac1a2f084c77ec3e123c192b66af1ee9e6c2\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77ac5bbd07aea88c60a577a1ce218075ffd59208b2d7ca97adf9bfc5aeb21ebe\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d\"\n\n[[package]]\nname = \"once_map\"\nversion = \"0.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa7085055bbe9c8edbd982048dbcf8181794d4a81cb04a11931673e63cc18dc6\"\ndependencies = [\n \"ahash\",\n \"hashbrown\",\n \"parking_lot\",\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"parking\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14f2252c834a40ed9bb5422029649578e63aa341ac401f74e719dd1afda8394e\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.5\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"plain\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce\"\ndependencies = [\n \"autocfg\",\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"libc\",\n \"log\",\n \"pin-project-lite\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.81\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d1597b0c024618f09a9c3b8655b7e430397a36d23fdafec26d6965e9eec3eba\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d2df5196e37bcc87abebc0053e20787d73847bb33134a69841207dd0a47f03b\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b8f95bd6966f5c87776639160a66bd8ab9895d9d4ab01ddba9fc60661aebe8d\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n \"num_cpus\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4\"\ndependencies = [\n \"bitflags 2.4.0\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81bc1d4caf89fac26a70747fe603c130093b53c773888797a6329091246d651a\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fed1ceff11a1dddaee50c9dc8e4938bd106e9d89ae372f192311e7da498e3b69\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5ea92a5b6195c6ef2a0295ea818b312502c6fc94dde986c5553242e18fd4ce2\"\n\n[[package]]\nname = \"rinja\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f28580fecce391f3c0e65a692e5f2b5db258ba2346ee04f355ae56473ab973dc\"\ndependencies = [\n \"itoa\",\n \"rinja_derive\",\n]\n\n[[package]]\nname = \"rinja_derive\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f1ae91455a4c82892d9513fcfa1ac8faff6c523602d0041536341882714aede\"\ndependencies = [\n \"basic-toml\",\n \"memchr\",\n \"mime\",\n \"mime_guess\",\n \"once_map\",\n \"proc-macro2\",\n \"quote\",\n \"rinja_parser\",\n \"rustc-hash\",\n \"serde\",\n \"syn\",\n]\n\n[[package]]\nname = \"rinja_parser\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ea17639e1f35032e1c67539856e498c04cd65fe2a45f55ec437ec55e4be941\"\ndependencies = [\n \"memchr\",\n \"nom\",\n \"serde\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.37.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4eb579851244c2c03e7c24f501c3432bed80b8f720af1d6e5b0e0f01555a035\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys 0.3.8\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ed4fa021d81c8392ce04db050a3da9a60299050b7ae1cf482d862b54a7218f\"\ndependencies = [\n \"bitflags 2.4.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys 0.4.5\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"scroll\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ab8598aa408498679922eff7fa985c25d58a90771bd6be794434c5277eab1a6\"\ndependencies = [\n \"scroll_derive\",\n]\n\n[[package]]\nname = \"scroll_derive\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f81c2fde025af7e69b1d1420531c8a8811ca898919db177141a85313b1cb932\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0293b4b29daaf487284529cc2f5675b8e57c61f70167ba415a463651fd6a918\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.186\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f5db24220c009de9bd45e69fb2938f4b6d2df856aa9304ce377b3180f83b7c1\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.186\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ad697f7e0b65af4983a4ce8f56ed5b357e8d3c36651bf6a7e13639c17b8e670\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.105\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693151e1ac27563d6dbcec9dee9fbd5da8539b20fa14ad3752b2e6d363ace360\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"smawk\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7c388c1b5e93756d0c740965c41e8822f866621d41acbdf6336a6a168f8840c\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"swift-bridging-header-compile\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"camino\",\n \"uniffi\",\n \"uniffi_testing\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"909518bc7b1c9b779f1bbf07f2929d35af9f0f37e47c6e9ef7f9dddc1e1821f3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d\"\ndependencies = [\n \"smawk\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.47\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97a802ec30afc17eee47b2855fc72e0c4cd62be9b4efe6591edde0ec5bd68d8f\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.47\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6bb623b56e39ab7dcd4b1b98bb6c8f8d907ed255b18de254088016b27a8ee19b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17ed6077ed6cd6c74735e21f37eb16dc3935f96878b1fe961074089cc80893f9\"\ndependencies = [\n \"backtrace\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"trybuild\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6df60d81823ed9c520ee897489573da4b1d79ffbe006b8134f46de1a1aa03555\"\ndependencies = [\n \"basic-toml\",\n \"glob\",\n \"once_cell\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"unary-result-alias\"\nversion = \"0.1.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"unicase\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"uniffi\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"camino\",\n \"cargo_metadata\",\n \"clap\",\n \"trybuild\",\n \"uniffi_bindgen\",\n \"uniffi_build\",\n \"uniffi_core\",\n \"uniffi_macros\",\n]\n\n[[package]]\nname = \"uniffi-bindgen-cli\"\nversion = \"0.1.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-arithmetic\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-arithmetic-procmacro\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-async-api-client\"\nversion = \"0.26.1\"\ndependencies = [\n \"async-trait\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-callbacks\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-custom-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"uniffi\",\n \"url\",\n]\n\n[[package]]\nname = \"uniffi-example-futures\"\nversion = \"0.22.0\"\ndependencies = [\n \"async-std\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-geometry\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-remote-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"log\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-rondpoint\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-sprites\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-todolist\"\nversion = \"0.22.0\"\ndependencies = [\n \"once_cell\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-example-traits\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-benchmarks\"\nversion = \"0.22.0\"\ndependencies = [\n \"clap\",\n \"criterion\",\n \"uniffi\",\n \"uniffi_bindgen\",\n]\n\n[[package]]\nname = \"uniffi-fixture-callbacks\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-coverall\"\nversion = \"0.22.0\"\ndependencies = [\n \"once_cell\",\n \"thiserror\",\n \"uniffi\",\n \"uniffi_meta\",\n]\n\n[[package]]\nname = \"uniffi-fixture-docstring\"\nversion = \"0.22.0\"\ndependencies = [\n \"camino\",\n \"glob\",\n \"thiserror\",\n \"uniffi\",\n \"uniffi_bindgen\",\n \"uniffi_testing\",\n]\n\n[[package]]\nname = \"uniffi-fixture-docstring-proc-macro\"\nversion = \"0.22.0\"\ndependencies = [\n \"cargo_metadata\",\n \"glob\",\n \"thiserror\",\n \"uniffi\",\n \"uniffi_bindgen\",\n \"uniffi_testing\",\n]\n\n[[package]]\nname = \"uniffi-fixture-enum-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-error-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"uniffi\",\n \"uniffi-example-custom-types\",\n \"uniffi-fixture-ext-types-custom-types\",\n \"uniffi-fixture-ext-types-external-crate\",\n \"uniffi-fixture-ext-types-lib-one\",\n \"uniffi-fixture-ext-types-sub-lib\",\n \"url\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types-custom-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types-external-crate\"\nversion = \"0.22.0\"\n\n[[package]]\nname = \"uniffi-fixture-ext-types-http-headermap\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"http\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types-lib-one\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types-proc-macro\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"uniffi\",\n \"uniffi-example-custom-types\",\n \"uniffi-fixture-ext-types-custom-types\",\n \"uniffi-fixture-ext-types-lib-one\",\n \"url\",\n]\n\n[[package]]\nname = \"uniffi-fixture-ext-types-sub-lib\"\nversion = \"0.22.0\"\ndependencies = [\n \"anyhow\",\n \"uniffi\",\n \"uniffi-fixture-ext-types-lib-one\",\n]\n\n[[package]]\nname = \"uniffi-fixture-futures\"\nversion = \"0.21.0\"\ndependencies = [\n \"async-trait\",\n \"futures\",\n \"once_cell\",\n \"thiserror\",\n \"tokio\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-keywords-kotlin\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-keywords-rust\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-keywords-swift\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-logging-callback-interface\"\nversion = \"0.22.0\"\ndependencies = [\n \"log\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-metadata\"\nversion = \"0.1.0\"\ndependencies = [\n \"thiserror\",\n \"uniffi\",\n \"uniffi_core\",\n \"uniffi_meta\",\n]\n\n[[package]]\nname = \"uniffi-fixture-proc-macro\"\nversion = \"0.22.0\"\ndependencies = [\n \"lazy_static\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-proc-macro-no-implicit-prelude\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-callbacks-omit-labels\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-cdylib-dependency\"\nversion = \"0.22.0\"\n\n[[package]]\nname = \"uniffi-fixture-regression-cdylib-dependency-ffi-crate\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n \"uniffi-fixture-regression-cdylib-dependency\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-i1015-fully-qualified-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-i356-enum-without-int-helpers\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-kotlin-experimental-unsigned-types\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-missing-newline\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-swift-dictionary-nesting\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-regression-wrong-lower-check\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-simple-fns\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-simple-iface\"\nversion = \"0.22.0\"\ndependencies = [\n \"lazy_static\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-struct-default-values\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-swift-omit-argument-labels\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-time\"\nversion = \"0.22.0\"\ndependencies = [\n \"chrono\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-trait-methods\"\nversion = \"0.22.0\"\ndependencies = [\n \"once_cell\",\n \"thiserror\",\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-type-limits\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi-fixture-version-mismatch\"\nversion = \"0.22.0\"\ndependencies = [\n \"uniffi\",\n]\n\n[[package]]\nname = \"uniffi_bindgen\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"camino\",\n \"cargo_metadata\",\n \"fs-err\",\n \"glob\",\n \"goblin\",\n \"heck\",\n \"once_cell\",\n \"paste\",\n \"rinja\",\n \"serde\",\n \"textwrap\",\n \"toml\",\n \"uniffi_meta\",\n \"uniffi_testing\",\n \"uniffi_udl\",\n]\n\n[[package]]\nname = \"uniffi_build\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"camino\",\n \"uniffi_bindgen\",\n]\n\n[[package]]\nname = \"uniffi_core\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"async-compat\",\n \"bytes\",\n \"once_cell\",\n \"paste\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"uniffi_internal_macros\"\nversion = \"0.28.3\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"uniffi_macros\"\nversion = \"0.28.3\"\ndependencies = [\n \"bincode\",\n \"camino\",\n \"fs-err\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"syn\",\n \"toml\",\n \"uniffi_build\",\n \"uniffi_meta\",\n]\n\n[[package]]\nname = \"uniffi_meta\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"bytes\",\n \"siphasher\",\n \"uniffi_internal_macros\",\n]\n\n[[package]]\nname = \"uniffi_testing\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"camino\",\n \"cargo_metadata\",\n \"fs-err\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"uniffi_udl\"\nversion = \"0.28.3\"\ndependencies = [\n \"anyhow\",\n \"textwrap\",\n \"uniffi_meta\",\n \"weedle2\",\n]\n\n[[package]]\nname = \"uniffi_uitests\"\nversion = \"0.22.0\"\ndependencies = [\n \"thiserror\",\n \"trybuild\",\n \"uniffi\",\n \"uniffi_macros\",\n]\n\n[[package]]\nname = \"url\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50bff7831e19200a85b17131d085c25d7811bc4e186efdaf54bbd132994a88cb\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d92ccd67fb88503048c01b59152a04effd0782d035a83a6d256ce6085f08f4a3\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"waker-fn\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d5b2c62b4012a3e1eca5a7e077d13b3bf498c4073e33ccd58626607748ceeca\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36df944cda56c7d8d8b7496af378e6b16de9284591917d307c9b4d313c44e698\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7706a72ab36d8cb1f80ffbf0e071533974a60d0a308d01a5d0375bf60499a342\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ef2b6d3c510e9625e5fe6f509ab07d66a760f0885d858736483c32ed7809abd\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c02dbc21516f9f1f04f187958890d7e6026df8d16540b7ad9492bc34a67cea03\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dee495e55982a3bd48105a7b947fd2a9b4a8ae3010041b9e0faab3f9cd028f1d\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54681b18a46765f095758388f2d0cf16eb8d4169b639ab575a8f5693af210c7b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca6ad05a4870b2bf5fe995117d3728437bd27d7cd5f06f13c17443ef369775a1\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b85cbef8c220a6abc02aefd892dfc0fc23afb1c6a426316ec33253a3877249b\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"weedle2\"\nversion = \"5.0.0\"\ndependencies = [\n \"fs-err\",\n \"nom\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.5\",\n \"windows_aarch64_msvc 0.52.5\",\n \"windows_i686_gnu 0.52.5\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.5\",\n \"windows_x86_64_gnu 0.52.5\",\n \"windows_x86_64_gnullvm 0.52.5\",\n \"windows_x86_64_msvc 0.52.5\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.1005859375,
          "content": "[workspace]\nmembers = [\n  \"uniffi_bindgen\",\n  \"uniffi_build\",\n  \"uniffi_core\",\n  \"uniffi_macros\",\n  \"uniffi_meta\",\n  \"uniffi_testing\",\n  \"uniffi_udl\",\n  \"uniffi\",\n  \"weedle2\",\n\n  \"examples/app/uniffi-bindgen-cli\",\n  \"examples/arithmetic\",\n  \"examples/arithmetic-procmacro\",\n  \"examples/async-api-client\",\n  \"examples/callbacks\",\n  \"examples/custom-types\",\n  \"examples/futures\",\n  \"examples/geometry\",\n  \"examples/remote-types\",\n  \"examples/rondpoint\",\n  \"examples/sprites\",\n  \"examples/todolist\",\n  \"examples/traits\",\n\n  \"fixtures/benchmarks\",\n  \"fixtures/coverall\",\n  \"fixtures/callbacks\",\n  \"fixtures/error-types\",\n\n  \"fixtures/ext-types/custom-types\",\n  \"fixtures/ext-types/http-headermap\",\n  \"fixtures/ext-types/uniffi-one\",\n  \"fixtures/ext-types/lib\",\n  \"fixtures/ext-types/proc-macro-lib\",\n  \"fixtures/ext-types/sub-lib\",\n\n  \"fixtures/docstring\",\n  \"fixtures/docstring-proc-macro\",\n  \"fixtures/keywords/kotlin\",\n  \"fixtures/keywords/rust\",\n  \"fixtures/keywords/swift\",\n  \"fixtures/metadata\",\n  \"fixtures/proc-macro\",\n  \"fixtures/proc-macro-no-implicit-prelude\",\n  \"fixtures/regressions/enum-without-i32-helpers\",\n  \"fixtures/regressions/fully-qualified-types\",\n  \"fixtures/regressions/kotlin-experimental-unsigned-types\",\n  \"fixtures/regressions/cdylib-crate-type-dependency/ffi-crate\",\n  \"fixtures/regressions/cdylib-crate-type-dependency/cdylib-dependency\",\n  \"fixtures/regressions/logging-callback-interface\",\n  \"fixtures/regressions/missing-newline\",\n  \"fixtures/regressions/swift-callbacks-omit-labels\",\n  \"fixtures/regressions/swift-dictionary-nesting\",\n  \"fixtures/regressions/unary-result-alias\",\n  \"fixtures/regressions/wrong-lower-check\",\n  \"fixtures/trait-methods\",\n  \"fixtures/uitests\",\n  \"fixtures/uniffi-fixture-time\",\n  \"fixtures/version-mismatch\",\n  \"fixtures/simple-fns\",\n  \"fixtures/simple-iface\",\n  \"fixtures/struct-default-values\",\n  \"fixtures/swift-omit-labels\",\n  \"fixtures/futures\",\n  \"fixtures/swift-bridging-header-compile\",\n  \"fixtures/type-limits\",\n  \"fixtures/large-enum\",\n  \"fixtures/large-error\",\n  \"fixtures/enum-types\",\n]\n\nresolver = \"2\"\n\n[workspace.dependencies]\nuniffi = { path = \"./uniffi\", version = \"0.28\" }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0673828125,
          "content": "# UniFFI - a multi-language bindings generator for Rust\n\nUniFFI is a toolkit for building cross-platform software components in Rust.\n\nFor the impatient, see [**the UniFFI user guide**](https://mozilla.github.io/uniffi-rs/)\nor [**the UniFFI examples**](https://github.com/mozilla/uniffi-rs/tree/main/examples#example-uniffi-components).\n\nBy writing your core business logic in Rust and describing its interface in an \"object model\",\nyou can use UniFFI to help you:\n\n* Compile your Rust code into a shared library for use on different target platforms.\n* Generate bindings to load and use the library from different target languages.\n\nYou can describe your object model in an [interface definition file](https://mozilla.github.io/uniffi-rs/udl_file_spec.html)\nor [by using proc-macros](https://mozilla.github.io/uniffi-rs/proc_macro/index.html).\n\nUniFFI is currently used extensively by Mozilla in Firefox mobile and desktop browsers;\nwritten once in Rust, auto-generated bindings allow that functionality to be called\nfrom both Kotlin (for Android apps) and Swift (for iOS apps).\nIt also has a growing community of users shipping various cool things to many users.\n\nUniFFI comes with support for **Kotlin**, **Swift**, **Python** and **Ruby** with 3rd party bindings available for **C#** and **Golang**.\nAdditional foreign language bindings can be developed externally and we welcome contributions to list them here.\nSee [Third-party foreign language bindings](#third-party-foreign-language-bindings).\n\n## User Guide\n\nYou can read more about using the tool in [**the UniFFI user guide**](https://mozilla.github.io/uniffi-rs/).\n\nWe consider it ready for production use, but UniFFI is a long way from a 1.0 release with lots of internal work still going on.\nWe try hard to avoid breaking simple consumers, but more advanced things might break as you upgrade over time.\n\n### Etymology and Pronunciation\n\nˈjuːnɪfaɪ. Pronounced to rhyme with \"unify\".\n\nA portmanteau word that also puns with \"unify\", to signify the joining of one codebase accessed from many languages.\n\nuni - [Latin ūni-, from ūnus, one]\nFFI - [Abbreviation, Foreign Function Interface]\n\n## Alternative tools\n\nOther tools we know of which try and solve a similarly shaped problem are:\n\n* [Diplomat](https://github.com/rust-diplomat/diplomat/), which is focused more on C/C++ interop.\n* [Interoptopus](https://github.com/ralfbiedert/interoptopus/)\n\n(Please open a PR if you think other tools should be listed!)\n\n## Third-party foreign language bindings\n\n* [React Native bindings](https://github.com/jhugman/uniffi-bindgen-react-native). The repository contains tooling to generate bindings for [Hermes](https://github.com/facebook/hermes) and for [creating Turbo Modules](https://reactnative.dev/blog/2024/10/23/the-new-architecture-is-here#new-native-modules).\n* [Kotlin Multiplatform support](https://gitlab.com/trixnity/uniffi-kotlin-multiplatform-bindings). The repository contains Kotlin Multiplatform bindings generation for UniFFI, letting you target both JVM and Native.\n* [Go bindings](https://github.com/NordSecurity/uniffi-bindgen-go)\n* [C# bindings](https://github.com/NordSecurity/uniffi-bindgen-cs)\n* [Dart bindings](https://github.com/NiallBunting/uniffi-rs-dart)\n* [Java bindings](https://github.com/IronCoreLabs/uniffi-bindgen-java)\n\n### External resources\n\nThere are a few third-party resources that make it easier to work with UniFFI:\n\n* [Plugin support for `.udl` files](https://github.com/Lonami/uniffi-dl) for the IDEA platform ([*uniffi-dl* in the JetBrains marketplace](https://plugins.jetbrains.com/plugin/20527-uniffi-dl)). It provides syntax highlighting, code folding, code completion, reference resolution and navigation (among others features) for the [UniFFI Definition Language (UDL)](https://mozilla.github.io/uniffi-rs/).\n* [cargo swift](https://github.com/antoniusnaumann/cargo-swift), a cargo plugin to build a Swift Package from Rust code. It provides an init command for setting up a UniFFI crate and a package command for building a Swift package from Rust code - without the need for additional configuration or build scripts.\n* [Cargo NDK Gradle Plugin](https://github.com/willir/cargo-ndk-android-gradle) allows you to build Rust code using [`cargo-ndk`](https://github.com/bbqsrc/cargo-ndk), which generally makes Android library builds less painful.\n* [`uniffi-starter`](https://github.com/ianthetechie/uniffi-starter) is a minimal project demonstrates a wide range of UniFFI in a complete project in a compact manner. It includes a full Android library build process, an XCFramework generation script, and example Swift package structure. \n\n(Please open a PR if you think other resources should be listed!)\n\n## Contributing\n\nIf this tool sounds interesting to you, please help us develop it! You can:\n\n* View the [contributor guidelines](./docs/contributing.md).\n* File or work on [issues](https://github.com/mozilla/uniffi-rs/issues) here in GitHub.\n* Join discussions in the [#uniffi:mozilla.org](https://matrix.to/#/#uniffi:mozilla.org)\n  room on Matrix.\n\n## Code of Conduct\n\nThis project is governed by Mozilla's [Community Participation Guidelines](./CODE_OF_CONDUCT.md).\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fixtures",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 2.5927734375,
          "content": "# mkdocs:\n# Prepare: pip install mkdocs; mkdocs-material\n# Testing: python -m mkdocs serve\n# Build into ./target/rendered-docs: python -m mkdocs build\n# In CI, `cargo doc` output will have been copied to some deep 'api/' directory, you may see warnings for that.\n# We should see if we can move that process into here via an extension?\n\nsite_name: The UniFFI user guide\ndocs_dir: docs/manual/src\nsite_dir:  'target/rendered-docs'\nrepo_url: 'https://github.com/mozilla/uniffi-rs'\nuse_directory_urls: false\nexclude_docs: \"README.md\"\n\ntheme:\n  name: 'material'\n  language: 'en'\n\n# This also enables code highlighting\nmarkdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.highlight\n\nextra:\n  version:\n    provider: mike\n\nplugins:\n  # otherwise a no-op docs build ends with a diff to sitemap.xml.gz\n  - no-sitemap\n\n# This lists all the files that become part of the documentation\nnav:\n- ./Motivation.md\n- 'Tutorial':\n  - ./Getting_started.md\n  - ./tutorial/Prerequisites.md\n  - ./tutorial/udl_file.md\n  - ./tutorial/Rust_scaffolding.md\n  - ./tutorial/foreign_language_bindings.md\n- 'UniFFI type model':\n  - ./types/namespace.md\n  - ./types/builtin_types.md\n  - ./types/enumerations.md\n  - ./types/records.md\n  - 'Functions':\n    - ./types/functions.md\n    - ./types/errors.md\n  - ./types/interfaces.md\n  - ./types/callback_interfaces.md\n  - ./types/remote_ext_types.md\n  - ./types/custom_types.md\n- Describing the interface:\n  - ./describing.md\n  - 'UDL Files':\n    - ./udl/index.md\n    - ./udl/enumerations.md\n    - ./udl/errors.md\n    - ./udl/functions.md\n    - ./udl/interfaces.md\n    - ./udl/records.md\n    - ./udl/external_types.md\n    - ./udl/docstrings.md\n  - 'Proc macros':\n    - ./proc_macro/index.md\n    - ./proc_macro/enumerations.md\n    - ./proc_macro/errors.md\n    - ./proc_macro/functions.md\n    - ./proc_macro/interfaces.md\n    - ./proc_macro/records.md\n    - ./proc_macro/docstrings.md\n- ./futures.md\n\n- 'Bindings':\n  - ./bindings.md\n  - ./foreign_traits.md\n\n  - 'Kotlin':\n    - ./kotlin/configuration.md\n    - ./kotlin/gradle.md\n    - ./kotlin/lifetimes.md\n\n  - 'Swift':\n    - ./swift/overview.md\n    - ./swift/uniffi-bindgen-swift.md\n    - ./swift/configuration.md\n    - ./swift/module.md\n    - ./swift/xcode.md\n\n  - 'Python': ./python/configuration.md\n\n- Internals:\n  - ./internals/design_principles.md\n  - ./internals/crates.md\n  - ./internals/lifting_and_lowering.md\n  - ./internals/object_references.md\n  - ./internals/async.md\n  - ./internals/rendering_foreign_bindings.md\n\n- ./Upgrading.md\n"
        },
        {
          "name": "release.toml",
          "type": "blob",
          "size": 0.55859375,
          "content": "tag-name = \"v{{version}}\"\nconsolidate-commits = true\n\nshared-version = false\n\n# Disabling auto pushing for now to avoid accidents (although we can still \"accidentally\" publish\n# to crates.io, so it's not clear this is saving us anything?)\npush = false\n\n# Note that some things need to be done exactly once for the workspace.\n# This includes updating CHANGELOG.md and creating the .git tag.\n# So we arrange for the `uniffi` crate to do this work, and disable it here.\ntag = false\n# Note that `pre-release-replacements` is also in [uniffi/release.toml](uniffi/release.toml)\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.5498046875,
          "content": "# See https://rust-lang.github.io/rustup/overrides.html for details on how this file works\n# and how you can override the choices made herein.\n# See also:\n# * ./docs/policies/rust-versions.md for our policy on what version is specified here.\n# * ./.circleci/config.yml which also specifies the rust versions used in CI.\n\n[toolchain]\nchannel = \"1.77.1\"\ntargets = [\n    \"aarch64-linux-android\",\n    \"armv7-linux-androideabi\",\n    \"i686-linux-android\",\n    \"x86_64-linux-android\",\n    \"aarch64-apple-ios\",\n    \"x86_64-apple-ios\"\n]\ncomponents = [\"clippy\", \"rustfmt\"]\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_bindgen",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_internal_macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_meta",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "uniffi_udl",
          "type": "tree",
          "content": null
        },
        {
          "name": "weedle2",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}