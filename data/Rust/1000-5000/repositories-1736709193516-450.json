{
  "metadata": {
    "timestamp": 1736709193516,
    "page": 450,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "witnessmenow/ESP32-Cheap-Yellow-Display",
      "stars": 2010,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01171875,
          "content": ".pio\n.vscode"
        },
        {
          "name": "3dModels",
          "type": "tree",
          "content": null
        },
        {
          "name": "ADDONS.md",
          "type": "blob",
          "size": 3.259765625,
          "content": "# Add-Ons\n\nHere is a list of additional hardware add-ons that can add functionality to your CYD\n\n## SD Card Sniffer\n\nIf you want to use the pins of the SD card for a different purpose, the easiest way to do that is with an \"SD card sniffer\", which basically plugs into the SD card slot and breaks out the pins. It's particularly useful for SPI devices.\n\n## Pin-out of the Sniffer board\n\n| Sniffer Board Label | ESP32 Pin | SPI Use   |\n| ------------------- | --------- | --------- |\n| DAT2                | -         | -         |\n| CD                  | IO5       | CS        |\n| CMD                 | IO23      | DI / MOSI |\n| GND                 | GND       | -         |\n| VCC                 | 3.3V      | -         |\n| CLK                 | IO18      | SCLK      |\n| DAT0                | IO19      | DO / MISO |\n| DAT1                | -         | -         |\n\n### Links\n\n- [Micro SD Card Sniffer - Aliexpress\\*](https://s.click.aliexpress.com/e/_Ddwcy9h)\n\n## Nintendo Wii Nunchuck\n\nA Nunchuck controller from a Nintendo Wii is a great input device for CYD projects as they are inexpensive and, since they use i2c for communication, they only require 2 GPIO pins to connect them up.\n\nFor these two pins you get:\n\n- An analog stick\n- 2 Buttons\n- An accelerometer\n\n### Hardware Required\n\n#### Nunchuck controllers\n\nOfficial Nintendo ones are generally better (maybe try second-hand options), but third-party ones also work fine.\n\n- [Amazon.co.uk Search\\*](https://amzn.to/3nQrXcE)\n- [Amazon.com Search\\*](https://amzn.to/3nRJTUd)\n- [Aliexpress (Third Party)\\*](https://s.click.aliexpress.com/e/_AaQbXh)\n\n#### Nunchuck Adaptors\n\nThere are many different options available for these, even the cheap ones from Aliexpress work perfectly.\n\n- [Aliexpress](https://s.click.aliexpress.com/e/_AEEtc3)\n- [My Open source one from Oshpark](https://oshpark.com/shared_projects/RcIxSx2D)\n- [Adafaruit](https://www.adafruit.com/product/4836)\n\n### Wiring\n\nThe easiest way to wire this up is to use the wire that came with the CYD and the **CN1** JST connector (the one closest to the Micro SD card slot)\n\nConnect the wire to your breakout board as follows:\n\n| CYD CN1 | Adapter     | Note               |\n| ------- | ----------- | ------------------ |\n| GND     | - (AKA GND) | Black wire for me  |\n| 3.3V    | + (AKA 3V)  | Red wire for me    |\n| IO22    | d (AKA SDA) | Blue wire for me   |\n| IO27    | c (AKA SCL) | Yellow wire for me |\n\nNote: I have found pull-ups resistors are not required on SDA and SCL\n\n### Example\n\nCheck out the [NunchuckTest](/Examples/InputTests/NunchuckTest) example for code how to use it.\n\n## Speakers\n\nA speaker can be attached to the display with a 1.25mm JST connector to the connector labeled \"SPEAK\" (or soldered)\n\nCheck out the [HelloRadio](/Examples/Basics/7-HelloRadio) example for the code on how to use it.\n\nMost small 8 Ohm speakers should work. Maybe worth adding a 1.25mm JST connector to it to make it easy to add remove.\n\n### Links\n\n- [Speaker with 1.25mm JST connector (2pcs) - Aliexpress\\*](https://s.click.aliexpress.com/e/_DBOJoh7) - Tested, works right out of the package.\n- [2pin 1.25mm JST connectors - Aliexpress\\*](https://s.click.aliexpress.com/e/_DlbPkWH) - Not purchased by me, but should work\n\n\\* = Affiliate Link - It doesn't cost you any extra but I receive a small portion of the sale.\n"
        },
        {
          "name": "DisplayConfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "Examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Hardware",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2023 Brian Lough\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MEDIA.md",
          "type": "blob",
          "size": 0.88671875,
          "content": "# Media and Mentions\n\nThis page can document any times the CYD project was mentioned somewhere!\n\n## Videos\n\n- [Brian Lough (hey, thats me!) - Cheap and Easy to Use ESP32 Screen!](https://www.youtube.com/watch?v=0AVyvwv0agk)\n- [Talking Sasquach - Don't be Fooled!! This Cheap Yellow Display Can Do a LOT!!](https://youtu.be/PsqMCoCTgTg?feature=shared)\n- [Teaching Tech - Cheap and easy Klipper touch interface with CYD Klipper](https://youtu.be/R3o0MGYW1ZU?feature=shared)\n\n## Articles\n\n- [Hackaday.com - “Cheap Yellow Display” Builds Community Through Hardware](https://hackaday.com/2023/10/28/cheap-yellow-display-builds-community-through-hardware/)\n- [Hackster.io - Brian Lough Looks to Build a Community Around the Espressif ESP32-Powered \"Cheap Yellow Display\"](https://www.hackster.io/news/brian-lough-looks-to-build-a-community-around-the-espressif-esp32-powered-cheap-yellow-display-66d23972910d)\n"
        },
        {
          "name": "Mods",
          "type": "tree",
          "content": null
        },
        {
          "name": "OriginalDocumentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "PINS.md",
          "type": "blob",
          "size": 2.8193359375,
          "content": "# Pins\n\nThis page talks about the pins on the CYD.\n\n## Connector types\n\n|Connector|Type    |Note                   |\n|---      |---     |----                   |\n|[**P1**](#p1)  |4P 1.25mm JST|Serial     |\n|[**P3**](#p3)  |4P 1.25mm JST|GPIO       |\n|[**P4**](#p4)  |2P 1.25mm JST|Speaker    |\n|[**CN1**](#cn1)|4P 1.25mm JST|GPIO (I2C) |\n\n## What pins are available on the CYD?\n\nThere are 3 easily accessible GPIO pins\n\n|Pin|Location|Note|\n|---|---|----|\n|IO35|**P3** JST connector|Input only pin, no internal pull-ups available|\n|IO22|**P3** and **CN1** JST connector||\n|IO27|**CN1** JST connector||\n\nIf you need more than that, you need to start taking them from something else. An SD Card sniffer like mentioned in the [Add-ons](/ADDONS.md) is probably the next easiest.\n\nAfter that you're probably de-soldering something!\n\n## Broken Out Pins\n\nThere are three 4P 1.25mm JST connectors on the board\n\n### P3\n|Pin|Use|Note|\n|---|---|----|\n|GND|||\n|IO35||Input only pin, no internal pull-ups available|\n|IO22||Also on the **CN1** connector|\n|IO21||Used for the TFT Backlight, so not really usable|\n\n### CN1\nThis is a great candidate for I2C devices\n\n|Pin|Use|Note|\n|---|---|----|\n|GND|||\n|IO22||Also on **P3** connector|\n|IO27|||\n|3.3V|||\n\n### P1\n|Pin|Use|Note|\n|---|---|----|\n|VIN|||\n|IO1(?)|TX|Maybe possible to use as a GPIO?|\n|IO3(?)|RX|Maybe possible to use as a GPIO?|\n|GND|||\n\n\n## Buttons\n\nThe CYD has two buttons, reset and boot.\n\n|Pin|Use|Note|\n|---|---|----|\n|IO0|BOOT|Can be used as an input in sketches|\n\n## Speaker\n\nThe speaker connector is a 2P 1.25mm JST connector that is connected to the amplifier, so not usable as GPIO at the speaker connector\n\n|Pin|Use|Note|\n|---|---|----|\n|IO26|Connected to amp|`i2s_set_dac_mode(I2S_DAC_CHANNEL_LEFT_EN);`|\n\n## RGB LED\n\nIf your project requires additional pins to what is available elsewhere, this might be a good candidate to sacrifice.\n\nNote: LEDs are \"active low\", meaning HIGH == off, LOW == on\n\n|Pin|Use|Note|\n|---|---|----|\n|IO4|Red LED||\n|IO16|Green LED||\n|IO17|Blue LED||\n\n## SD Card\nUses the VSPI\nPin names are predefined in SPI.h\n\n|Pin|Use|Note|\n|---|---|----|\n|IO5|SS||\n|IO18|SCK||\n|IO19|MISO||\n|IO23|MOSI||\n\n## Touch Screen\n\n|Pin|Use|Note|\n|---|---|----|\n|IO25|XPT2046_CLK||\n|IO32|XPT2046_MOSI||\n|IO33|XPT2046_CS||\n|IO36|XPT2046_IRQ||\n|IO39|XPT2046_MISO||\n\n## LDR (Light Sensor)\n\n|Pin|Use|Note|\n|---|---|----|\n|IO34|||\n\n## Display\nUses the HSPI\n\n|Pin|Use|Note|\n|---|---|----|\n|IO2|TFT_RS|AKA: TFT_DC|\n|IO12|TFT_SDO|AKA: TFT_MISO|\n|IO13|TFT_SDI|AKA: TFT_MOSI|\n|IO14|TFT_SCK||\n|IO15|TFT_CS||\n|IO21|TFT_BL|Also on P3 connector, for some reason|\n\n## Test points\n|Pad|Use|Note|\n|---|---|----|\n|S1|GND|near USB-SERIAL|\n|S2|3.3v|for ESP32|\n|S3|5v|near USB-SERIAL|\n|S4|GND|for ESP32|\n|S5|3.3v|for TFT|\n|JP0 (pad nearest USB socket)|5v|TFT LDO|\n|JP0|3.3v|TFT LDO|\n|JP3 (pad nearest USB socket)|5v|ESP32 LDO|\n|JP3|3.3v|ESP32 LDO|\n"
        },
        {
          "name": "PROJECTS.md",
          "type": "blob",
          "size": 11.681640625,
          "content": "# Projects\n\nBecause the CYD is a common platform, it makes it really useful for sharing projects. This page will be a list of projects that are available on the CYD.\n\n## Disclaimer!\n\nProjects appearing on here is not necessarily a seal of approval from me, I will not be test each project that gets added, so please install these projects at your own risk!\n\n## Projects\n\n| Name                   | Description                                                                                 | Author                                                 | Additional Hardware?                                                   | Project Page                                                       | WebFlash                                                                 |\n| ---------------------- | ------------------------------------------------------------------------------------------- | ------------------------------------------------------ | ---------------------------------------------------------------------- | ------------------------------------------------------------------ | ------------------------------------------------------------------------ |\n| Spotify DIY Thing      | A device for displaying your currently playing Spotify track                                | [Brian Lough](https://github.com/witnessmenow)         |                                                                        | [Github](https://github.com/witnessmenow/Spotify-Diy-Thing)        | [WebFlash](https://witnessmenow.github.io/Spotify-Diy-Thing/)   |\n| F1 Notifier            | Displays and notifies you of the F1 session times(in your local timezone)                   | [Brian Lough](https://github.com/witnessmenow)         |                                                                        | [Github](https://github.com/witnessmenow/F1-Arduino-Notifications) | [WebFlash](https://witnessmenow.github.io/F1-Arduino-Notifications/)     |\n| Tetris with Nunchuck   | A version of Tetris using a Nintendo wii Nunchuck                                           | [Brian Lough](https://github.com/witnessmenow)         | A nunchuck and an adaptor for connecting it                            | [Code](/Examples/Projects/TetrisWithNunchuck)                      |                                                                          |\n| Galagino               | An emulator for some classic arcade games (Galaga, Donkey Kong, Pacman, Digdug and Frogger) | [Till Harbaum](https://github.com/harbaum)             | A nunchuck and an adaptor for connecting it. Speaker if you want sound | [Github](https://github.com/harbaum/galagino)                      |                                                                          |\n| ESP32-fluid-simulation | A small fluid simulation with touch input                                                   | [Kenny Peng](https://github.com/colonelwatch)          |                                                                        | [Github](https://github.com/colonelwatch/ESP32-fluid-simulation)   |                                                                          |\n| ESP32-TV               | Play Video Files on the ESP32                                                               | [atomic14](https://github.com/atomic14)                | Speaker if you want sound and possibly an IR receiver                  | [Github](https://github.com/atomic14/esp32-tv)                     |                                                                          |\n| xtouch                 | \"The xtouch screen is a revolutionary addition to your BambuLab Printer\"                    | [xperiments-in](https://github.com/xperiments-in) (\\#) |                                                                        | [Github](https://github.com/xperiments-in/xtouch)                  | [Webflash](https://github.com/xperiments-in/xtouch#online-web-installer) |\n| CYD-Klipper            | An implementation of a wireless Klipper status display on an ESP32 + screen                 | [Sims](https://github.com/suchmememanyskill)           |                                                                        | [Github](https://github.com/suchmememanyskill/CYD-Klipper)         | [Webflash](https://suchmememanyskill.github.io/CYD-Klipper/)             |\n| DRO (for lathe / mill) | A DRO (digital readout) for your lathe or mill                                              | [Alanesq](https://github.com/alanesq)                  | It uses cheap digital caliper, requires a very basic interface         | [Github](https://github.com/alanesq/DRO)                           |                                                                          |\n| ESP32Marauder-CYD      | A suite of WiFi/Bluetooth offensive and defensive tools for the ESP32                       | [Fr4nkFletcher](https://github.com/Fr4nkFletcher)      | GPS if you want BT/Wifi wardriving options                             | [Github](https://github.com/Fr4nkFletcher/ESP32-Marauder-Cheap-Yellow-Display)         | [Webflash](https://fr4nkfletcher.github.io/Adafruit_WebSerial_ESPTool/)             |\n| NerdMiner_v2           | A project that lets you try to solve a bitcoin block with a small piece of hardware.        | [Fr4nkFletcher](https://github.com/Fr4nkFletcher)      |                                                                        | [Github](https://github.com/Fr4nkFletcher/NerdMiner_v2-Cheap-Yellow-Display)         | [Webflash](https://fr4nkfletcher.github.io/NerdMiner_v2-Cheap-Yellow-Display/flash.html)             |\n| Tasmota                | Tasmota (with UI) on the CYD                                                                | ? (\\#)                                                 |                                                                        | [Templates](https://templates.blakadder.com/sunton_ESP32-2432S028.html) | [Webflash](https://tasmota.github.io/install/)                      |\n| BAM | A game engine featuring smooth scrolling tile map, sprites in layers with pixel precision on-screen collision detection, intuitive definition of game objects and logic, decent performance, ~30 frames per second on the device | [calint](https://github.com/calint) | | [Github](https://github.com/calint/bam) | |\n|London Underground Arrivals| A highly configurable application that replicates the train arrivals boards found in [TFL](https://tfl.gov.uk/) stations. All variable data is encoded in a json file that may be updated at any time without the need to recompile the application e.g. the station to be displayed or the time to refresh data from TFL. The source code already supports 2 variants of CYD and, I hope, contains clear instructions how to handle any other variant.| [David Henry](https://github.com/mgaman) | | [Github](https://github.com/mgaman/TFL-tube-arrivals-board-ESP32-TFT-Arduino) |\n|GitHub-Stats| This Arduino project fetches and displays GitHub repository statistics such as star count, open issues, forks and notifactions on a CYD or via serial communication. Ideal for developers to monitor project metrics in real time.| [ATOMNFT](https://github.com/ATOMNFT) | | [Github](https://github.com/ATOMNFT/ESP32-CYD-Projects/tree/main/GitHub-Stats) | |\n| Midbar-Firebase-Edition | An advanced password vault that stores the encrypted data in the cloud while keeping the cryptographic keys on the edge! | [Northstrix](https://github.com/Northstrix) | PS/2 keyboard and an optional STM32F103C8T6 (if you want it to emulate the USB keyboard)  | [SourceForge](https://sourceforge.net/projects/midbar-firebase-edition/) [Github](https://github.com/Northstrix/Midbar-Firebase-Edition)\n| Electronic-Shelf-Label-Management-System | A simple device for displaying relevant product information. It gets the encrypted images via UDP. | [Northstrix](https://github.com/Northstrix)|                                                           | [SourceForge](https://sourceforge.net/projects/esl-management-system/) [Github](https://github.com/Northstrix/Electronic-Shelf-Label-Management-System)\n| ESP32-Tetris-With-Nintendo-64-Controller | Tetris for ESP32 with Nintendo 64 controller support                      | [Northstrix](https://github.com/Northstrix) | Nintendo 64 Controller and Arduino Nano                                           | [SourceForge](https://sourceforge.net/projects/esp32-tetris/) [Github](https://github.com/Northstrix/ESP32-Tetris-With-Nintendo-64-Controller)\n| Midbar ESP32 CYD       | A version of Midbar data vault tweaked specifically for the ESP32 Cheap Yellow Display.     | [Northstrix](https://github.com/Northstrix) | PS/2 Keyboard                                                                     | [SourceForge](https://sourceforge.net/projects/midbar-esp32-cyd/) [Github](https://github.com/Northstrix/Midbar-ESP32-CYD)\n| ESP32-Cheap-Yellow-Display-Electronic-Shelf-Label-with-Google-Firebase  | An ESP32 CYD-based Electronic Shelf Label that makes use of the Google Firebase and AES-256.  | [Northstrix](https://github.com/Northstrix) |                                | [SourceForge](https://sourceforge.net/projects/esp32-cyd-esl-with-firebase/)  [Github](https://github.com/Northstrix/ESP32-Cheap-Yellow-Display-Electronic-Shelf-Label-with-Google-Firebase)                                                                                                                                                                                                                         | [WebFlash](https://northstrix.github.io/ESP32-Cheap-Yellow-Display-Electronic-Shelf-Label-with-Google-Firebase/flash.html) </br>!!! Format Flash area designated for SPIFFS with [ESP32 Filesystem Uploader](https://github.com/me-no-dev/arduino-esp32fs-plugin/releases/) after using the WebFlash\n| Addressable RGB LED Strip Controller (The Lantern Project)              | DIY Addressable RGB LED Strip Controller that utilizes the ESP32, ESP8266, and the WS2812 LED Strip.  | [Northstrix](https://github.com/Northstrix) | Nintendo Wii Nunchuk, WiiChuck Nunchuck Adapter (PCB Board), ESP8266, 580 Ohm resistor, WS2812 LED Strip | [SourceForge](https://sourceforge.net/projects/the-lantern-project/)          [Github](https://github.com/Northstrix/Lantern)\n| Midbar ESP32 CYD Firebase Edition                                       | A version of Midbar data vault adapted for the ESP32 CYD and WebFlash. It keeps the cryptographic keys in the ESP32 RAM and stores the ciphertexts (encrypted data) in the Google Firebase.  | [Northstrix](https://github.com/Northstrix) | PS2 Keyboard, PS2 Port *optional | [SourceForge](https://sourceforge.net/projects/midbar-esp32-cyd-firebase/)          [Github](https://github.com/Northstrix/Midbar-ESP32-CYD-Firebase-Edition)  | [WebFlash](https://northstrix.github.io/Midbar-ESP32-CYD-Firebase-Edition/flash)\n| cydOS  (WIP) | cydOS is a GUI app that is able to manage various aspects of the CYD, like SD browsing and file mangement, on board flashing of .bin files for rapid firmware switching, on board device settings(WIP)  | [orlandobianco](https://github.com/orlandobianco) | None | [Github]((https://github.com/orlandobianco/cydOS))  | WIP\n| ESP32 MFA Authenticator | Turn the CYD into a MFA Authenticator | [AllanOricil](https://github.com/AllanOricil) | None | [Github](https://github.com/AllanOricil/esp32-mfa-authenticator)  | [Webflash](https://allanoricil.github.io/esp32-mfa-authenticator/)\n| cydWeatherStation | cyd Weather station | [gustheseventh](https://github.com/gustheseventh) | None | [Github](https://github.com/gustheseventh/cyd-Weather-Station)  |\n(\\#) = Project not added by original author\n\n## Adding a project\n\nIf you have a project that you would like to add, please feel free to add it to the list!\n\nNew projects should be added to bottom of the list.\n\nSome rules:\n\n- Project must be open source\n- Project must be functional - It's ok for it to not be finished, but it should do what it says!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.375,
          "content": "# ESP32-Cheap-Yellow-Display\n\nThere is an ESP32 with a built in 320 x 240 2.8\" LCD display with a touch screen called the \"ESP32-2432S028R\", since this doesn't roll of the tongue, I propose it should be renamed the \"Cheap Yellow Display\" or CYD for short. This display is only about $15 delivered so I think it's really good value.\n\n![image](https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/assets/1562562/76c3d481-2523-4b6f-881c-2e29f9368cd0)\n\n## Features\n\nThe CYD has the following features:\n\n- ESP32 (With Wifi and Bluetooth)\n- 320 x 240 LCD Display (2.8\")\n- Touch Screen (Resistive)\n- USB for powering and programming\n- SD Card Slot, LED and some additional pins broken out\n\n## Who is it good for?\n\nI think it's useful for the following types of people:\n\n- **People just getting started with working hardware** - as everything is already connected, there is no soldering or additional components required\n- **People who are familiar with working with hardware, but are lazy** - (like me) Sometimes you just want to build a project without having to assemble any hardware\n- **People who aren't really looking to learn anything, but just want to build some cool things** - More about this later.\n\n## What is the purpose of this page?\n\nSo this is pretty nice hardware and a cheap price, but the software instructions/support around it is pretty poor. Just a single link to a zip file on a random website.\n\nA couple of years ago I released the [ESP32 Trinity](https://github.com/witnessmenow/ESP32-Trinity), which is an open source ESP32 board for controlling Matrix panels. I think the main benefit people get out of the work I did on the Trinty is not the hardware, but the documentation, example code and ready to go projects.\n\nI'm no longer creating hardware products, but I think it would be interesting if we could create the same kind of community around this display, where people can share examples and projects made for this display.\n\n## How do I know if a display is a CYD?\n![CYD decision tree](http://www.plantuml.com/plantuml/png/RP0nJyCm48Nt_8gZNIb3fge3LD2b2q92235UamDRE7PaNuhyxxda7DGgJBs-zxtSE-yJO-IXSzKD6-e8UeVMLyQs1DJrdA6br4JRims-4fW9LiS4bY6JS-47qBTWC052QvEayyCAvA-wS-8vi01F7mS8SVevOxJeUK9zu55QzzP_Nw-exxPmz8tHJzRRsJq4cdo3Pu98oIQsCd4O6WDIbyXF4LN-JNMsYG7UNXyXUAUTLHDfqVeMJWClUfSPrY_OOyPtO_ivUPcfnoMV3iyXJh4cj_MGJd8lEleQkvQKi9TYUT_DvbukXnraIfTQURMT39Nu8kcrXInIwQYO-gCyNwgm6al-ZneTNIRqjLokqS2UV3jqxXS0)\n\n## Where to buy?\n\nBuy from wherever works out cheapest for you:\n\n- [Aliexpress\\*](https://s.click.aliexpress.com/e/_DkSpIjB)\n- [Aliexpress\\*](https://s.click.aliexpress.com/e/_DkcmuCh)\n- [Aliexpress](https://www.aliexpress.com/item/1005004502250619.html)\n- [Makerfabs](https://www.makerfabs.com/sunton-esp32-2-8-inch-tft-with-touch.html) - Seems to come with a 16GB SD card. Makerfabs also stock my [ESP32 Trinity](https://github.com/witnessmenow/ESP32-Trinity) (NOTE there will be import due in the EU from makerfabs)\n\n\\* = Affiliate Link\n\n## Getting Started With Your CYD\n\nFor details on how to get started with your CYD, please check out the [Setup and Configuration](/SETUP.md) page\n\n## Code Examples\n\n### The Basics\n\nA collection of examples demonstrating how to use the different features of the CYD, this is a good place to get started. [Check them out here.](/Examples/Basics)\n\n### Alternative Display Libraries\n\nThe basics examples are based on the TFT_eSPI display library, but the CYD also works with other display libraries too. Here is some example code if you prefer to use an alternative Arduino library. [Check them out here.](/Examples/AlternativeLibraries)\n\n### ESPHome\n\nSome examples for using the CYD in ESPHome. [Check them out here.](/Examples/ESPHome)\n\n## Additional Info and Links\n\n### Discord\n\nJoin the CYD discussion on [my Discord channel](https://discord.gg/nnezpvq)\n\n### 3DPrinting\n\nSome examples of 3D printed stands and cases. [Check them out here.](/3dModels)\n\n### Pin Information\n\n[This page](/PINS.md) contains information about what pins are used where, and what ones are free to use.\n\n### Add-ons\n\n[This page](/ADDONS.md) contains information about additional hardware add-ons that can add functionality to your CYD\n\n### Troubleshooting\n\n[This page](/TROUBLESHOOTING.md) contains information about how to troubleshoot your CYD device\n\n### Hardware Mods\n\n[This page](/Mods/README.md) contains information about some hardware mods that can be performed on the CYD to improve or change some of its functionality\n\n### Media and Video Mentions\n\n[This page](/MEDIA.md) lists any times the CYD project was mentioned somewhere!\n\n## License Info\n\nThis project is licensed as MIT as per the [license file](/LICENSE)\n\nThe one exception to this is the [OriginalDocumentation](/OriginalDocumentation/) folder, that I do not have the right to license\n\n## Other Languages\n\nSome members of the community have ported some of this information to other languages! \n\nPlease note: I can't gaurantee the accuracy of the translation, how up to date they are or the content on them in general.\n\n- [French / Française](https://github.com/usini/ESP32-Cheap-Yellow-Display-Documentation-FR)\n- [German / Deutsch](https://github.com/paelzer/ESP32-Cheap-Yellow-Display-Documentation-DE)\n\nIf you would like to contribure a translation, please name the repo with the language name or code in the repo name and you can link it here.\n\n## Help Support what I do!\n\n[If you enjoy my work, please consider becoming a Github sponsor!](https://github.com/sponsors/witnessmenow/)\n"
        },
        {
          "name": "SETUP.md",
          "type": "blob",
          "size": 1.814453125,
          "content": "# Setup and Configuration options\n\nThis page will cover the basics of setting up the CYD\n\n## Hardware Setup\n\nThere really is nothing to setup here, just connect the CYD to a computer using a micro USB cable (it even comes with one)\n\n## Software Setup\n\nThe driver needs to be setup for uploading to the CYD, including webflashing projects. \n\n### Driver\n\nThe CYD uses the CH340 USB to UART chip. If you do not have a driver already installed for this chip you may need to install one. Check out [Sparkfun's guide for installation instruction](https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all)\n\n## Coding Setup\n\nFollow these instructions if you want to write new code for the CYD\n\n### Board definition\n\nYou will need to have the ESP32 setup for your Arduino IDE, [instructions can be found here](https://docs.espressif.com/projects/arduino-esp32/en/latest/installing.html).\n\nYou can then select basically any ESP32 board in the boards menu. (I usually use \"ESP32 Dev Module\", but it doesn't really matter)\n\nIf you see errors uploading a sketch, try setting board upload speed to `115200`\n\n### Library Configuration\n\nThe CYD can work with a selection of different libraries, but the main one this repo will focus on is [TFT_eSPI](https://github.com/Bodmer/TFT_eSPI) as it is a fairly popular library for working with these types of displays and there are lots of examples. \n\nThis can be installed from the library manager by searching for \"TFT_eSPI\".\n\n > Note: After install of the library, copy the file [User_Setup.h](https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/blob/main/DisplayConfig/User_Setup.h) to the `libraries\\TFT_eSPI` Arduino folder. This sets up the library for use with this display.\n\n### Examples\n\nI have provided examples for you to try out to get some ideas or inspiration. [Check them out here.](/Examples/)\n"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 2.0908203125,
          "content": "# First, Make sure it's a CYD!\n\nIf you are having any issues, this is the first thing I would check! \n\nThe examples and information contained on this repo are for the **ESP32-2432S028** display only. The model number is written on the back of the display in gold writting, beside the speaker connector.\n\n# Display is not turning on\n\nIf you are having issues getting the display working, the first thing I would try is [webflashing an existing project](/PROJECTS.md#projects-1). These will be known working code, and if it works correctly, it points to a software issue, not a hardware one.\n\n## If the webflash project displays something on the screen\n\n- Make sure you have put the [User_Setup.h](DisplayConfig/User_Setup.h) file in the correct location [as described here](/SETUP.md#library-configuration)\n- Pin 21 is the backlight pin, make sure you are not using it for something else in your sketch.\n\n## The webflash project doesn't display on screen\n\n- Make sure you are not connecting Pin 21 to anything. It is broken out on the connector labeled `P3`\n- Try a different USB supply and or cable\n- If nothing else worked, your CYD could be faulty. Contact the seller.\n\n# Display, Touch and SD card are not working at the same time\n\nThe ESP32 offers two usable hardware SPI buses, but on the CYD each of display, touch and SD card use a different bus. To use all three devices at the same time, for one of them the SPI has to be \"simulated\" in software. Usually this is done for the touch device, since it doesn't require a high bandwidth. Therefor use a software SPI implementation like [XPT2046_Bitbang_Slim](https://github.com/TheNitek/XPT2046_Bitbang_Arduino_Library) and follow the [button example](https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/8-Buttons)\n\n# Display is flickering\n\n- Try a different USB supply and or cable\n- Go through the [Display is not turning on](#display-is-not-turning-on) steps\n- If nothing else worked, your CYD could be faulty. Contact the seller.\n\n# Cannot upload\n- On Ubuntu and flavors disable or uninstall service `brltty` and make sure user is in group `dialout`\n"
        },
        {
          "name": "Variants",
          "type": "tree",
          "content": null
        },
        {
          "name": "cyd.md",
          "type": "blob",
          "size": 1.9677734375,
          "content": "## What is a Cheap Yellow Display (CYD)?\n\nA CYD is a ESP32-2432S028, an ESP32 development board with a 2.8\" display with a resistive touch screen,\n\nThere are other boards with different sizes displays that look similar but **are not** a CYD. This isn't to try exclude anyone, but there so many different displays and types that it would be incredibly difficult and very confusing to support all of them.\n\nYou can verify you have the correct board by checking the number on the back of the display.\n\n![image](https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/assets/1562562/d23bf84f-f34b-4814-b609-87c359d6334e)\n\n## My CYD has two USB ports\n\nThe original CYD only has a micro USB port, but there is a device that is also labelled a _ESP32-2432S028_ that has two USB ports, one micro USB and one USB-C.\n\nHaving an additional USB port would be a minor problem if that was the only difference, but unfortunately the display also works differently, the colours are inverted on the display.\n\nIt can be fixed in a couple of ways:\n\n- Use platformio - The examples on the Github have all been updated so they can be used with platformio, and you can simply select CYD or CYD2USB and it will just work\n- Use the [CYD2USB specific User_setup.h](/DisplayConfig/CYD2USB/) that is on the repo, you can now use all the examples like normal\n- Invert the display at the code level using the `tft.invertDisplay(1);` method\n\n### The USB-C port doesn't work\n\nThe USB-C port has a flaw in it, it doesn’t have the resistors on the CC lines. This means it will not work with USB-C to USB-C cables. If your computer only has USB-C ports, you can use it through a USB-C to USB-A adaptor.\n\n### The Display doesn't look as good \n\nThere seems to be a gamma issue with the CYD2USB (I don't even know what gamma is)\n\nAdding this to the code seems to help\n\n```\ntft.writecommand(ILI9341_GAMMASET); //Gamma curve selected\ntft.writedata(2);\ndelay(120);\ntft.writecommand(ILI9341_GAMMASET); //Gamma curve selected\ntft.writedata(1);\n```\n\n\n\n\n"
        },
        {
          "name": "library.json",
          "type": "blob",
          "size": 1.974609375,
          "content": "{\n  \"name\": \"ESP32 Cheap Yellow Display\",\n  \"version\": \"1.0.0\",\n  \"keywords\": \"example, library, arduino\",\n  \"authors\": [\n    {\n      \"name\": \"Brian Lough\",\n      \"email\": \"brian.d.lough@gmail.com\"\n    }\n  ],\n  \"maintainers\": [\n    {\n      \"name\": \"Brian Lough\",\n      \"email\": \"brian.d.lough@gmail.com\"\n    }\n  ],\n  \"sentence\": \"Instructions and software for the ESP32-2432S028R, also known as the Cheap Yellow Display\",\n  \"category\": \"Device Control\",\n  \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display\",\n  \"architectures\": [\"esp32\"],\n  \"frameworks\": \"Arduino\",\n  \"dependencies\": {\n    \"bodmer/TFT_eSPI\": \"^2.5.31\"\n  },\n  \"examples\": [\n    {\n      \"name\": \"1.Hello World\",\n      \"description\": \"TFT Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/1-HelloWorld\"\n    },\n    {\n      \"name\": \"2.Touch Test\",\n      \"description\": \"Touch Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/2-TouchTest\"\n    },\n    {\n      \"name\": \"3.SD Card Test\",\n      \"description\": \"SD Card Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/3-SDCardTest\"\n    },\n    {\n      \"name\": \"4.Backlight Control Test\",\n      \"description\": \"Backlight Control Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/4-BacklightControlTest\"\n    },\n    {\n      \"name\": \"5.LDR Test\",\n      \"description\": \"LDR Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/5-LDRTest\"\n    },\n    {\n      \"name\": \"6.LED Test\",\n      \"description\": \"LED Test\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/6-LEDTest\"\n    },\n    {\n      \"name\": \"7.Hello Radio\",\n      \"description\": \"Hello Radio\",\n      \"url\": \"https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/tree/main/Examples/Basics/7-HelloRadio\"\n    }\n  ]\n}\n"
        }
      ]
    }
  ]
}