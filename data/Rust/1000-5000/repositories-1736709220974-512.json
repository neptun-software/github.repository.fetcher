{
  "metadata": {
    "timestamp": 1736709220974,
    "page": 512,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bodil/typed-html",
      "stars": 1870,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "target/\n**/*.rs.bk\nCargo.lock\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2958984375,
          "content": "language: rust\n\ncache:\n  directories:\n    - /home/travis/.cargo\n\nmatrix:\n  include:\n    - rust: nightly\n      script: cargo test\n    - rust: beta\n      script: cargo check --manifest-path examples/stdweb/Cargo.toml\n    - rust: stable\n      script: cargo check --manifest-path examples/stdweb/Cargo.toml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.2861328125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/) and this project\nadheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [0.2.2] - 2020-02-07\n\n## Fixed\n\n-   Changed some internal uses of `into_iter()` to `iter()` for future proofing. (#78)\n\n## [0.2.1] - 2019-06-28\n\n### Added\n\n-   Most types now implement `Send`. (#53)\n-   All tags now support the ARIA `role` attribute. (#47)\n-   The `text!()` macro now accepts expressions as value arguments. (#48)\n-   You can now create \"unsafe\" text nodes with the `unsafe_text!()` macro, which won't be quoted at\n    all when stringifying, even if they contain HTML tags. This is a meaningless distinction when\n    creating DOM nodes, however, and unsafe text nodes will behave like normal text nodes in this\n    case. (#39)\n\n### Changed\n\n-   Text in attributes are quoted less aggressively when stringified. (#26, #49)\n-   Attribute type conversion is now using the recently stabilised `TryFrom` instead of `From`, to\n    avoid relying on panicking `From` implementations to detect conversion errors, though the\n    conversions inside the macro will still panic if they fail. The appropriate `TryFrom`\n    implementations have been added to `Class`, `Id`, `SpacedList` and `SpacedSet`, and the\n    corresponding `From` implementations have been removed.\n\n## [0.2.0] - 2019-03-16\n\n### Added\n\n-   Support for the [Dodrio](https://github.com/fitzgen/dodrio) virtual DOM renderer: the\n    `dodrio_macro` feature flag enables the `typed_html::dodrio` macro, which generates code to\n    build a `dodrio::Node` directly, without going via `VNode`s. (#38)\n\n### Fixed\n\n-   Added the missing attributes to the `<video>` tag, which was previously listed as having none.\n    (#32)\n\n## [0.1.1] - 2018-11-29\n\n### Added\n\n-   `typed-html` now works on stable rustc. (#1)\n-   All elements and HTML marker traits now implement `IntoIterator`, so you can return them\n    directly from a group. (#12)\n\n### Fixed\n\n-   Boolean flags are now correctly rendered as empty when stringifying. (#13, #14)\n-   Non-self-closing tags are now correctly rendered with a closing tag in the HTML style, rather\n    than in the XML style. (#15, #16)\n\n## [0.1.0] - 2018-11-17\n\nThis is the initial release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.150390625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at admin@immutable.rs. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.169921875,
          "content": "[workspace]\nmembers = [\n    \"typed-html\",\n    \"macros\",\n    \"examples/stdweb\",\n    \"examples/iron\",\n    \"examples/dodrio/counter\",\n    \"examples/dodrio/todomvc\",\n    \"ui\",\n]\n"
        },
        {
          "name": "LICENCE.md",
          "type": "blob",
          "size": 15.185546875,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n### 1. Definitions\n\n**1.1. “Contributor”**\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n**1.2. “Contributor Version”**\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n**1.3. “Contribution”**\n    means Covered Software of a particular Contributor.\n\n**1.4. “Covered Software”**\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n**1.5. “Incompatible With Secondary Licenses”**\n    means\n\n* **(a)** that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n* **(b)** that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n\n**1.6. “Executable Form”**\n    means any form of the work other than Source Code Form.\n\n**1.7. “Larger Work”**\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n**1.8. “License”**\n    means this document.\n\n**1.9. “Licensable”**\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n**1.10. “Modifications”**\n    means any of the following:\n\n* **(a)** any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n* **(b)** any new file in Source Code Form that contains any Covered\n    Software.\n\n**1.11. “Patent Claims” of a Contributor**\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n**1.12. “Secondary License”**\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n**1.13. “Source Code Form”**\n    means the form of the work preferred for making modifications.\n\n**1.14. “You” (or “Your”)**\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, “You” includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, “control” means **(a)** the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or **(b)** ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n\n### 2. License Grants and Conditions\n\n#### 2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n* **(a)** under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n* **(b)** under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n#### 2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n#### 2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n* **(a)** for any code that a Contributor has removed from Covered Software;\n    or\n* **(b)** for infringements caused by: **(i)** Your and any other third party's\n    modifications of Covered Software, or **(ii)** the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n* **(c)** under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n#### 2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n#### 2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n#### 2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n#### 2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n\n### 3. Responsibilities\n\n#### 3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n#### 3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n* **(a)** such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n* **(b)** You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n#### 3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n#### 3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n#### 3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n\n### 4. Inability to Comply Due to Statute or Regulation\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: **(a)** comply with\nthe terms of this License to the maximum extent possible; and **(b)**\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n\n### 5. Termination\n\n**5.1.** The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated **(a)** provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and **(b)** on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n**5.2.** If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n**5.3.** In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n### 6. Disclaimer of Warranty\n\n> Covered Software is provided under this License on an “as is”\n> basis, without warranty of any kind, either expressed, implied, or\n> statutory, including, without limitation, warranties that the\n> Covered Software is free of defects, merchantable, fit for a\n> particular purpose or non-infringing. The entire risk as to the\n> quality and performance of the Covered Software is with You.\n> Should any Covered Software prove defective in any respect, You\n> (not any Contributor) assume the cost of any necessary servicing,\n> repair, or correction. This disclaimer of warranty constitutes an\n> essential part of this License. No use of any Covered Software is\n> authorized under this License except under this disclaimer.\n\n### 7. Limitation of Liability\n\n> Under no circumstances and under no legal theory, whether tort\n> (including negligence), contract, or otherwise, shall any\n> Contributor, or anyone who distributes Covered Software as\n> permitted above, be liable to You for any direct, indirect,\n> special, incidental, or consequential damages of any character\n> including, without limitation, damages for lost profits, loss of\n> goodwill, work stoppage, computer failure or malfunction, or any\n> and all other commercial damages or losses, even if such party\n> shall have been informed of the possibility of such damages. This\n> limitation of liability shall not apply to liability for death or\n> personal injury resulting from such party's negligence to the\n> extent applicable law prohibits such limitation. Some\n> jurisdictions do not allow the exclusion or limitation of\n> incidental or consequential damages, so this exclusion and\n> limitation may not apply to You.\n\n\n### 8. Litigation\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n\n### 9. Miscellaneous\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n\n### 10. Versions of the License\n\n#### 10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n#### 10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n#### 10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n#### 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\n## Exhibit A - Source Code Form License Notice\n\n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\n## Exhibit B - “Incompatible With Secondary Licenses” Notice\n\n    This Source Code Form is \"Incompatible With Secondary Licenses\", as\n    defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.697265625,
          "content": "[![Build Status](https://travis-ci.org/bodil/typed-html.svg?branch=master)](https://travis-ci.org/bodil/typed-html)\n\n# typed-html\n\nThis crate provides the `html!` macro for building fully type checked HTML documents inside your\nRust code using roughly [JSX] compatible syntax.\n\n## Not Currently Maintained\n\nThis project is not currently being maintained. If you would like to take over maintainership, please [leave an issue](https://github.com/bodil/typed-html/issues/new).\n\n## Quick Preview\n\n```rust\nlet mut doc: DOMTree<String> = html!(\n    <html>\n        <head>\n            <title>\"Hello Kitty\"</title>\n            <meta name=Metadata::Author content=\"Not Sanrio Co., Ltd\"/>\n        </head>\n        <body>\n            <h1>\"Hello Kitty\"</h1>\n            <p class=\"official\">\n                \"She is not a cat. She is a human girl.\"\n            </p>\n            { (0..3).map(|_| html!(\n                <p class=\"emphasis\">\n                    \"Her name is Kitty White.\"\n                </p>\n            )) }\n            <p class=\"citation-needed\">\n                \"We still don't know how she eats.\"\n            </p>\n        </body>\n    </html>\n);\nlet doc_str = doc.to_string();\n```\n\n## Syntax\n\nThis macro largely follows [JSX] syntax, but with some differences:\n\n* Text nodes must be quoted, because there's only so much Rust's tokeniser can\n  handle outside string literals. So, instead of `<p>Hello</p>`, you need to\n  write `<p>\"Hello\"</p>`. (The parser will throw an error asking you to do this\n  if you forget.)\n* Element attributes will accept simple Rust expressions, but the parser has\n  its limits, as it's not a full Rust parser. You can use literals,\n  variables, dotted properties, type constructors and single function or\n  method calls. If you use something the parser isn't currently capable of\n  handling, it will complain. You can put braces or parentheses around the\n  expression if the parser doesn't understand\n  it. You can use any Rust code inside a brace or parenthesis block.\n\n## Valid HTML5\n\nThe macro will only accept valid HTML5 tags, with no tags or attributes marked\nexperimental or obsolete. If it won't accept something you want it to accept, we\ncan discuss it over a pull request (experimental tags and attributes, in\nparticular, are mostly omitted just for brevity, and you're welcome to implement\nthem).\n\nThe structure validation is simplistic by necessity, as it defers to the type\nsystem: a few elements will have one or more required children, and any element\nwhich accepts children will have a restriction on the type of the children,\nusually a broad group as defined by the HTML spec. Many elements have\nrestrictions on children of children, or require a particular ordering of\noptional elements, which isn't currently validated.\n\n## Attribute Values\n\nBrace blocks in the attribute value position should return the expected type for\nthe attribute. The type checker will complain if you return an unsupported type.\nYou can also use literals or a few simple Rust expressions as attribute values\n(see the Syntax section above).\n\nThe `html!` macro will add an [`.into()`][Into::into] call to the value\nexpression, so that you can use any type that has an [`Into<A>`][Into] trait\ndefined for the actual attribute type `A`.\n\nAs a special case, if you use a string literal, the macro will instead use the\n[`FromStr<A>`][FromStr] trait to try and parse the string literal into the\nexpected type. This is extremely useful for eg. CSS classes, letting you type\n`class=\"css-class-1 css-class-2\"` instead of going to the trouble of\nconstructing a [`SpacedSet<Class>`][SpacedSet]. The big caveat for this:\ncurrently, the macro is not able to validate the string at compile time, and the\nconversion will panic at runtime if the string is invalid.\n\n### Example\n\n```rust\nlet classList: SpacedSet<Class> = [\"foo\", \"bar\", \"baz\"].into();\nhtml!(\n    <div>\n        <div class=\"foo bar baz\" />         // parses a string literal\n        <div class=[\"foo\", \"bar\", \"baz\"] /> // uses From<[&str, &str, &str]>\n        <div class=classList />             // uses a variable in scope\n        <div class={                        // evaluates a code block\n            SpacedSet::from([\"foo\", \"bar\", \"baz\"])\n        } />\n    </div>\n)\n```\n\n## Generated Nodes\n\nBrace blocks in the child node position are expected to return an\n[`IntoIterator`][IntoIterator] of [`DOMTree`][DOMTree]s. You can return single\nelements or text nodes, as they both implement `IntoIterator` for themselves.\nThe macro will consume this iterator at runtime and insert the generated nodes\nas children in the expected position.\n\n### Example\n\n```rust\nhtml!(\n    <ul>\n        { (1..=5).map(|i| html!(\n            <li>{ text!(\"{}\", i) }</li>\n        )) }\n    </ul>\n)\n```\n\n## Rendering\n\nYou have two options for actually producing something useful from the DOM tree\nthat comes out of the macro.\n\n### Render to a string\n\nThe DOM tree data structure implements [`Display`][Display], so you can call\n[`to_string()`][to_string] on it to render it to a [`String`][String]. If you\nplan to do this, the type of the tree should be [`DOMTree<String>`][DOMTree] to\nensure you're not using any event handlers that can't be printed.\n\n```rust\nlet doc: DOMTree<String> = html!(\n    <p>\"Hello Kitty\"</p>\n);\nlet doc_str = doc.to_string();\nassert_eq!(\"<p>Hello Kitty</p>\", doc_str);\n```\n\n### Render to a virtual DOM\n\nThe DOM tree structure also implements a method called `vnode()`, which renders\nthe tree to a tree of [`Node`][Node]s, which is a mirror of the generated tree\nwith every attribute value rendered into `String`s. You can walk this virtual\nDOM tree and use it to build an actual DOM tree with `stdweb` or pass it on to\nyour favourite virtual DOM system.\n\n## Licence\n\nCopyright 2018 Bodil Stokke\n\nThis software is subject to the terms of the Mozilla Public License, v. 2.0. If\na copy of the MPL was not distributed with this file, You can obtain one at\n<http://mozilla.org/MPL/2.0/>.\n\n## Code of Conduct\n\nPlease note that this project is released with a [Contributor Code of\nConduct][coc]. By participating in this project you agree to abide by its terms.\n\n[coc]: https://www.contributor-covenant.org/version/1/4/code-of-conduct\n[JSX]: https://reactjs.org/docs/introducing-jsx.html\n[Display]: https://doc.rust-lang.org/std/fmt/trait.Display.html\n[String]: https://doc.rust-lang.org/std/string/struct.String.html\n[to_string]: https://doc.rust-lang.org/std/string/trait.ToString.html#tymethod.to_string\n[Node]: dom/trait.Node.html\n[FromStr]: https://doc.rust-lang.org/std/str/trait.FromStr.html\n[SpacedSet]: types/struct.SpacedSet.html\n[IntoIterator]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\n[Into]: https://doc.rust-lang.org/std/convert/trait.Into.html\n[Into::into]: https://doc.rust-lang.org/std/convert/trait.Into.html#method.into\n[DOMTree]: dom/type.DOMTree.html\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "blacklisted-names = []\ncognitive-complexity-threshold = 100\nsingle-char-binding-names-threshold = 15\n# I HAVE THE POWER OF OLEG\ntype-complexity-threshold = 999999\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.toml",
          "type": "blob",
          "size": 0.1552734375,
          "content": "no-dev-version = true\nsign-commit = true\npre-release-replacements = [ { file=\"CHANGELOG.md\", search=\"\\\\[Unreleased\\\\]\", replace=\"[{{version}}] - {{date}}\" } ]\n"
        },
        {
          "name": "typed-html",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}