{
  "metadata": {
    "timestamp": 1736709225266,
    "page": 521,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "retep998/winapi-rs",
      "stars": 1857,
      "defaultBranch": "0.3",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1083984375,
          "content": "* text=auto eol=lf\n*.rs text whitespace=tab-in-indent,trailing-space,tabwidth=4 diff=cpp\n*.def text\n*.a binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0185546875,
          "content": "target/\nCargo.lock\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.048828125,
          "content": "language: rust\nsudo: false\nrust:\n  - nightly\nscript:\n  - rustup install 1.2.0 1.3.0 1.4.0 1.5.0 1.6.0 1.7.0 1.8.0 1.9.0\n  - rustup install 1.10.0 1.11.0 1.12.0 1.13.0 1.14.0 1.15.0 1.16.0 1.17.0 1.18.0 1.19.0\n  - rustup install stable beta nightly\n  - cargo +1.2.0 build\n  - cargo +1.3.0 build\n  - cargo +1.4.0 build\n  - cargo +1.5.0 build\n  - cargo +1.6.0 build\n  - cargo +1.7.0 build\n  - cargo +1.8.0 build\n  - cargo +1.9.0 build\n  - cargo +1.10.0 build\n  - cargo +1.11.0 build\n  - cargo +1.12.0 build\n  - cargo +1.13.0 build\n  - cargo +1.14.0 build\n  - cargo +1.15.0 build\n  - cargo +1.16.0 build\n  - cargo +1.17.0 build\n  - cargo +1.18.0 build\n  - cargo +1.19.0 build\n  - cargo +stable build\n  - cargo +beta build\n  - cargo +nightly build\n  - cargo build --features everything\n  - cargo package\n  - cargo doc\nnotifications:\n  email: false\n  webhooks:\n    - https://webhooks.gitter.im/e/295a1e640ebd30d63457\n  irc:\n    channels:\n      - \"irc.mozilla.org#winapi\"\n    template:\n      - \"%{repository_slug}/%{branch} (%{commit} - %{author}): %{message}\"\n    skip_join: true\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.185546875,
          "content": "# Guidelines\n\n* Never get definitions from MinGW headers or MSDN. Always stick to the Windows SDK headers, in\n  particular the latest Windows 10 SDK â€” you can find it [here](https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk).  Look for a folder called \"Include\" inside the installed SDK to find the header (and other) files.\n* Definitions which depend on whether `UNICODE` is defined should not be included. It is the user's\n  responsibility to explicitly choose between `W` and `A` functions (and they should always choose\n  `W`).\n* For hexadecimal numbers, preserve the casing from the original headers (except for the uuid for\n  `RIDL!`).\n* If an identifier happens to match a Rust keyword, then append an underscore. For example `type`\n  would turn into `type_`.\n* Macro invocations at the item level should use `{}`. Macro invocations at the expression level\n  should use `()`.\n\n## Newlines and indentation\n\n* The maximum line length for `winapi-rs` is 99, and is strictly enforced.\n* Avoid line breaks when possible, but if you cannot make it fit, add line breaks as late as\n  possible.\n* When breaking on binary operators, put the operator at the beginning of the new line.\n** This does not apply to the `:` used for inheritance in COM interfaces, which should remain at\n   the end of the previous line.\n* Do not use aligned indentation. Indentation should always be block indentation.\n* Always use spaces for indentation.\n* Blank lines are evil.\n* Files must end with a trailing newline.\n\n## Imports\n\n* Imports should be in asciibetical order.\n\n```Rust\nuse shared::basetsd::UINT64;\nuse shared::minwindef::{BOOL, BYTE, INT, LPVOID, UINT};\nuse um::d3dcommon::{\n    D3D_CBUFFER_TYPE, D3D_FEATURE_LEVEL, D3D_INTERPOLATION_MODE, D3D_MIN_PRECISION, D3D_NAME,\n    D3D_PARAMETER_FLAGS, D3D_PRIMITIVE, D3D_PRIMITIVE_TOPOLOGY, D3D_REGISTER_COMPONENT_TYPE,\n    D3D_RESOURCE_RETURN_TYPE, D3D_SHADER_INPUT_TYPE, D3D_SHADER_VARIABLE_CLASS,\n    D3D_SHADER_VARIABLE_TYPE, D3D_SRV_DIMENSION, D3D_TESSELLATOR_DOMAIN,\n    D3D_TESSELLATOR_OUTPUT_PRIMITIVE, D3D_TESSELLATOR_PARTITIONING, ID3DBlob,\n};\n```\n\n## Extern functions\n\n* The calling convention specified should be the one for 32bit. Specify `system` for stdcall and\n  `C` for cdecl (and `fastcall` for those couple of fastcall functions out there).\n* One parameter per line.\n\n```Rust\nextern \"system\" {\n    pub fn GetProcessTimes(\n        hProcess: HANDLE,\n        lpCreationTime: LPFILETIME,\n        lpExitTime: LPFILETIME,\n        lpKernelTime: LPFILETIME,\n        lpUserTime: LPFILETIME,\n    ) -> BOOL;\n    pub fn GetCurrentProcess() -> HANDLE;\n}\n```\n\n## Inline functions and macros\n\n* Inline functions and macros should be translated into Rust functions.\n* These functions should always be marked `#[inline]`.\n* Until constant functions can be defined in the minimum Rust that winapi supports, if a function\n  needs to be called in a constant, then a macro version of the function should be added.\n* Inline functions are allowed to undergo some Rustification because they are not required to match\n  the ABI of the original. Raw pointers can be translated into references, `BOOLEAN` into `bool`,\n  and so on.\n* If the function needs to do unsafe operations, then the function should be marked unsafe. If the\n  function does not do anything unsafe, then it should remain a safe function.\n\n## Function pointers\n\n```Rust\nFN!{stdcall DRAWSTATEPROC(\n    hdc: HDC,\n    lData: LPARAM,\n    wData: WPARAM,\n    cx: c_int,\n    cy: c_int,\n) -> BOOL}\nFN!{stdcall NAMEENUMPROCA(\n    LPSTR,\n    LPARAM,\n) -> BOOL}\n```\n\n## Constants\n\n* Convert macro constants to Rust constants.\n* The type of the constant should depend on where the constant is used. MSDN may help for this.\n* If the constant has an unsigned type, but the literal needs to be negative, perform a cast such\n  as `-1i16 as u16`. Use the primitive integer types that correspond to the type of the constant.\n* If the constant is initialized to an expression involving a constant of a different type and a\n  cast must be performed, do the cast using the primitive integer types.\n* If the constant is a pointer that is initialized to a negative literal, do `-1isize as LPFOO`.\n\nThe C version found in the SDK:\n```C\n#define CLSCTX_INPROC           (CLSCTX_INPROC_SERVER|CLSCTX_INPROC_HANDLER)\n```\n\nAnd what the Rust binding should look like:\n```Rust\npub const CLSCTX_INPROC: CLSCTX = CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER;\n```\n\n## GUIDs\n\n* Numbers should be padded with zeros to ensure consistent width.\n\n```Rust\nDEFINE_GUID!{GUID_DEVCLASS_SENSOR,\n    0x5175d334, 0xc371, 0x4806, 0xb3, 0xba, 0x71, 0xfd, 0x53, 0xc9, 0x25, 0x8d}\n```\n\n## Structs\n\nEach field must be on its own line.\n\nThe C version found in the SDK:\n```C\ntypedef struct _GROUP_AFFINITY {\n    KAFFINITY Mask;\n    WORD   Group;\n    WORD   Reserved[3];\n} GROUP_AFFINITY, *PGROUP_AFFINITY;\n```\n\nAnd what the Rust binding should look like:\n```Rust\nSTRUCT!{struct GROUP_AFFINITY {\n    Mask: KAFFINITY,\n    Group: WORD,\n    Reserved: [WORD; 3],\n}}\npub type PGROUP_AFFINITY = *mut GROUP_AFFINITY;\n```\n\n## Unions\n\nThe C version found in the SDK:\n```C\ntypedef union {\n    USN_RECORD_COMMON_HEADER Header;\n    USN_RECORD_V2 V2;\n    USN_RECORD_V3 V3;\n    USN_RECORD_V4 V4;\n} USN_RECORD_UNION, *PUSN_RECORD_UNION;\n```\n\nAnd what the Rust binding should look like:\n```Rust\nUNION!{union USN_RECORD_UNION {\n    [u64; 10],\n    Header Header_mut: USN_RECORD_COMMON_HEADER,\n    V2 V2_mut: USN_RECORD_V2,\n    V3 V3_mut: USN_RECORD_V3,\n    V4 V4_mut: USN_RECORD_V4,\n}}\npub type PUSN_RECORD_UNION = *mut USN_RECORD_UNION;\n```\n\n* The first parameter to `UNION!` is the storage for that union. It must have both the correct\n  size and alignment. You can use the following C++ code to print out the storage for any union\n  type that can be named. You may need to use a combination of `#define NONAMELESSUNION` and\n  `decltype` in order to name anonymous unions.\n\n```C++\nchar const * type_for_alignment(uintptr_t align) {\n    switch (align) {\n    case 1: return \"u8\";\n    case 2: return \"u16\";\n    case 4: return \"u32\";\n    case 8: return \"u64\";\n    default: throw;\n    }\n}\n#define PRINT_UNION(x) cout << \"[\" << type_for_alignment(alignof(x))\\\n    << \"; \" << sizeof(x) / alignof(x) << \"]\" << endl;\nint main() {\n    PRINT_UNION(USN_RECORD_UNION);\n}\n```\n\n* Note that sometimes the storage of a union varies based on whether the target is 32bit or 64bit,\n  in which case `UNION!` allows a second storage to be specified, the first for 32bit and the\n  second for 64bit.\n\n```Rust\nUNION!{union D3D12_RESOURCE_BARRIER_u {\n    [u32; 4] [u64; 3],\n    Transition Transition_mut: D3D12_RESOURCE_TRANSITION_BARRIER,\n    Aliasing Aliasing_mut: D3D12_RESOURCE_ALIASING_BARRIER,\n    UAV UAV_mut: D3D12_RESOURCE_UAV_BARRIER,\n}}\n```\n\n## Anonymous unions and structs\n\n* If the type `FOO` contains a single anonymous struct or union, give the anonymous struct or union\n  a name of `FOO_s` or `FOO_u` respectively, and the field a name of `s` or `u` respectively.\n* If the type `FOO` contains multiple anonymous structs or unions, append a number, such as `s1:\n  FOO_s1` `s2: FOO_s2` or `u1: FOO_u1` `u2: FOO_u2`.\n* If the field does have a name, such as `Bar`, but still contains an anonymous struct or union\n  then retain the name of `Bar` for the field and name the anonymous struct or union after the\n  field, such as `FOO_Bar`.\n\n## Union with a primitive field and an anonymous bitfield struct of the same type\n\nThe C version found in the SDK:\n```C\ntypedef union _USB_HUB_STATUS {\n    USHORT  AsUshort16;\n    struct {\n        USHORT  LocalPowerLost:1;\n        USHORT  OverCurrent:1;\n        USHORT  Reserved:14;\n    };\n} USB_HUB_STATUS, *PUSB_HUB_STATUS;\n```\n\nAnd what the Rust binding should look like:\n```Rust\nSTRUCT!{struct USB_HUB_STATUS {\n    AsUshort16: USHORT,\n}}\nBITFIELD!{USB_HUB_STATUS AsUshort16: USHORT [\n    LocalPowerLost set_LocalPowerLost[0..1],\n    OverCurrent set_OverCurrent[1..2],\n    Reserved set_Reserved[2..16],\n]}\n```\n\n* If the union is anonymous and the field for it is unnamed, then instead of creating a single\n  field struct, simply inline that field into the containing struct and apply the bitfield to\n  *that*.\n\n## COM interfaces\n\n* The uuid should always be lowercase hex.\n* If the COM interface does not have a uuid then use a uuid of all zeroes.\n* Uuid numbers should be padded with zeros to ensure consistent width.\n* Sometimes a COM interface will have two methods with identical names (an overloaded method). If\n  the two methods are both named `Foo`, then name them `Foo_1` and `Foo_2`. In addition,\n  overloaded methods must appear in *reverse* order to comply with the COM binary interface. See\n  #523 for more details.\n\n```Rust\nRIDL!{#[uuid(0x6d4865fe, 0x0ab8, 0x4d91, 0x8f, 0x62, 0x5d, 0xd6, 0xbe, 0x34, 0xa3, 0xe0)]\ninterface IDWriteFontFileStream(IDWriteFontFileStreamVtbl): IUnknown(IUnknownVtbl) {\n    fn ReadFileFragment(\n        fragmentStart: *mut *const c_void,\n        fileOffset: UINT64,\n        fragmentSize: UINT64,\n        fragmentContext: *mut *mut c_void,\n    ) -> HRESULT,\n    fn ReleaseFileFragment(\n        fragmentContext: *mut c_void,\n    ) -> (),\n    fn GetFileSize(\n        fileSize: *mut UINT64,\n    ) -> HRESULT,\n    fn GetLastWriteTime(\n        lastWriteTime: *mut UINT64,\n    ) -> HRESULT\n}}\n```\n\n## COM classes\n\n* The uuid should always be lowercase hex.\n* Uuid numbers should be padded with zeros to ensure consistent width.\n\nThe C version found in the SDK:\n```C\nclass DECLSPEC_UUID(\"D9F6EE60-58C9-458B-88E1-2F908FD7F87C\")\nSpDataKey;\n```\n\nAnd what the Rust binding should look like:\n```Rust\nRIDL!{#[uuid(0xd9f6ee60, 0x58c9, 0x458b, 0x88, 0xe1, 0x2f, 0x90, 0x8f, 0xd7, 0xf8, 0x7c)]\nclass SpDataKey;}\n```\n\n## Organization of code\n\n* All definitions go into the source file that directly maps to the header the definition is from.\n    * Stuff in `src/winrt` is special and has its own namespaced organization.\n* Definitions are defined in the same order as they are in the original header.\n\n## Dealing with duplicates\n\n* Sometimes two headers will define the same thing.\n    * If the duplicated thing is a simple typedef or extern function or constant, then\n      duplicate the definition.\n    * If the duplicated thing is a struct or union or COM interface or COM class, then choose one\n      header to be the canonical source of truth for that definition and publicly re-export the\n      thing from the other header.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 6.548828125,
          "content": "[package]\nname = \"winapi\"\nversion = \"0.3.9\"\nauthors = [\"Peter Atashian <retep998@gmail.com>\"]\nlicense = \"MIT/Apache-2.0\"\ndescription = \"Raw FFI bindings for all of Windows API.\"\ndocumentation = \"https://docs.rs/winapi/\"\nrepository = \"https://github.com/retep998/winapi-rs\"\nreadme = \"README.md\"\nkeywords = [\"windows\", \"ffi\", \"win32\", \"com\", \"directx\"]\ncategories = [\"external-ffi-bindings\", \"no-std\", \"os::windows-apis\"]\ninclude = [\"/src/**/*\", \"/Cargo.toml\", \"/LICENSE-MIT\", \"/LICENSE-APACHE\", \"/build.rs\", \"/README.md\"]\nbuild = \"build.rs\"\n\n[package.metadata.docs.rs]\nfeatures = [\"everything\", \"impl-debug\", \"impl-default\"]\ndefault-target = \"x86_64-pc-windows-msvc\"\ntargets = [\"aarch64-pc-windows-msvc\", \"i686-pc-windows-msvc\", \"x86_64-pc-windows-msvc\"]\n\n[target.i686-pc-windows-gnu.dependencies]\nwinapi-i686-pc-windows-gnu = { version = \"0.4\", path = \"i686\" }\n[target.x86_64-pc-windows-gnu.dependencies]\nwinapi-x86_64-pc-windows-gnu = { version = \"0.4\", path = \"x86_64\" }\n\n[features]\ndebug = [\"impl-debug\"]\neverything = []\nimpl-debug = []\nimpl-default = []\nstd = []\n#km\nd3dkmthk = []\n#mmos\n#shared\nbasetsd = []\nbcrypt = []\nbthdef = []\nbthioctl = []\nbthsdpdef = []\nbugcodes = []\ncderr = []\ncfg = []\nd3d9 = []\nd3d9caps = []\nd3d9types = []\nd3dkmdt = []\nd3dukmdt = []\ndcomptypes = []\ndevguid = []\ndevpkey = []\ndevpropdef = []\ndinputd = []\ndxgi = []\ndxgi1_2 = []\ndxgi1_3 = []\ndxgi1_4 = []\ndxgi1_5 = []\ndxgi1_6 = []\ndxgiformat = []\ndxgitype = []\nenclaveapi = []\nevntprov = []\nevntrace = []\nexdisp = []\nguiddef = []\nhidclass = []\nhidpi = []\nhidsdi = []\nhidusage = []\nifdef = []\nifmib = []\nin6addr = []\ninaddr = []\nintsafe = []\nipifcons = []\nipmib = []\niprtrmib = []\nks = []\nksmedia = []\nktmtypes = []\nlmcons = []\nminwindef = []\nmmreg = []\nmprapidef = []\nmstcpip = []\nmswsockdef = []\nnetioapi = []\nnldef = []\nntddndis = []\nntddscsi = []\nntddser = []\nntdef = []\nntstatus = []\nqos = []\nrpc = []\nrpcdce = []\nrpcndr = []\nsddl = []\nspellcheck = []\nsspi = []\nstralign = []\ntcpestats = []\ntcpmib = []\ntransportsettingcommon = []\ntvout = []\nudpmib = []\nusb = []\nusbioctl = []\nusbiodef = []\nusbscan = []\nusbspec = []\nwindef = []\nwindot11 = []\nwindowsx = []\nwinerror = []\nwinusbio = []\nwlantypes = []\nwmistr = []\nwnnc = []\nws2def = []\nws2ipdef = []\nwtypes = []\nwtypesbase = []\n#ucrt\ncorecrt = []\n#um\naccctrl = []\naclapi = []\nadhoc = []\nappmgmt = []\naudioclient = []\naudiosessiontypes = []\navrt = []\nbits = []\nbits10_1 = []\nbits1_5 = []\nbits2_0 = []\nbits2_5 = []\nbits3_0 = []\nbits4_0 = []\nbits5_0 = []\nbitscfg = []\nbitsmsg = []\nbluetoothapis = []\nbluetoothleapis = []\nbthledef = []\ncfgmgr32 = []\ncguid = []\ncombaseapi = []\ncoml2api = []\ncommapi = []\ncommctrl = []\ncommdlg = []\ncommoncontrols = []\nconsoleapi = []\ncorsym = []\nd2d1 = []\nd2d1_1 = []\nd2d1_2 = []\nd2d1_3 = []\nd2d1effectauthor = []\nd2d1effects = []\nd2d1effects_1 = []\nd2d1effects_2 = []\nd2d1svg = []\nd2dbasetypes = []\nd3d = []\nd3d10 = []\nd3d10_1 = []\nd3d10_1shader = []\nd3d10effect = []\nd3d10misc = []\nd3d10sdklayers = []\nd3d10shader = []\nd3d11 = []\nd3d11_1 = []\nd3d11_2 = []\nd3d11_3 = []\nd3d11_4 = []\nd3d11on12 = []\nd3d11sdklayers = []\nd3d11shader = []\nd3d11tokenizedprogramformat = []\nd3d12 = []\nd3d12sdklayers = []\nd3d12shader = []\nd3dcommon = []\nd3dcompiler = []\nd3dcsx = []\nd3dx10core = []\nd3dx10math = []\nd3dx10mesh = []\ndatetimeapi = []\ndavclnt = []\ndbghelp = []\ndbt = []\ndcommon = []\ndcomp = []\ndcompanimation = []\ndde = []\nddraw = []\nddrawi = []\nddrawint = []\ndebugapi = []\ndevicetopology = []\ndinput = []\ndispex = []\ndmksctl = []\ndmusicc = []\ndocobj = []\ndocumenttarget = []\ndot1x = []\ndpa_dsa = []\ndpapi = []\ndsgetdc = []\ndsound = []\ndsrole = []\ndvp = []\ndwmapi = []\ndwrite = []\ndwrite_1 = []\ndwrite_2 = []\ndwrite_3 = []\ndxdiag = []\ndxfile = []\ndxgidebug = []\ndxva2api = []\ndxvahd = []\neaptypes = []\nendpointvolume = []\nerrhandlingapi = []\nevntcons = []\nfibersapi = []\nfileapi = []\nfunctiondiscoverykeys_devpkey = []\n\"gl-gl\" = []\nhandleapi = []\nheapapi = []\nhighlevelmonitorconfigurationapi = []\nhttp = []\nimm = []\ninterlockedapi = []\nioapiset = []\nipexport = []\niphlpapi = []\niptypes = []\njobapi = []\njobapi2 = []\nknownfolders = []\nktmw32 = []\nl2cmn = []\nlibloaderapi = []\nlmaccess = []\nlmalert = []\nlmapibuf = []\nlmat = []\nlmdfs = []\nlmerrlog = []\nlmjoin = []\nlmmsg = []\nlmremutl = []\nlmrepl = []\nlmserver = []\nlmshare = []\nlmstats = []\nlmsvc = []\nlmuse = []\nlmwksta = []\nlowlevelmonitorconfigurationapi = []\nlsalookup = []\nmemoryapi = []\nminschannel = []\nminwinbase = []\nmmdeviceapi = []\nmmeapi = []\nmmsystem = []\nmsaatext = []\nmscat = []\nmschapp = []\nmssip = []\nmswsock = []\nnamedpipeapi = []\nnamespaceapi = []\nnb30 = []\nncrypt = []\nntlsa = []\nntsecapi = []\noaidl = []\nobjbase = []\nobjidl = []\nobjidlbase = []\nocidl = []\nole2 = []\noleauto = []\nolectl = []\noleidl = []\nopmapi = []\npdh = []\nperflib = []\nphysicalmonitorenumerationapi = []\nplaysoundapi = []\nportabledevice = []\nportabledeviceapi = []\nportabledevicetypes = []\npowerbase = []\npowersetting = []\npowrprof = []\nprocessenv = []\nprocesssnapshot = []\nprocessthreadsapi = []\nprocesstopologyapi = []\nprofileapi = []\npropidl = []\npropkey = []\npropkeydef = []\npropsys = []\nprsht = []\npsapi = []\nrealtimeapiset = []\nreason = []\nrestartmanager = []\nrestrictederrorinfo = []\nrmxfguid = []\nrtinfo = []\nsapi = []\nsapi51 = []\nsapi53 = []\nsapiddk = []\nsapiddk51 = []\nschannel = []\nsecurityappcontainer = []\nsecuritybaseapi = []\nservprov = []\nsetupapi = []\nshellapi = []\nshellscalingapi = []\nshlobj = []\nshobjidl = []\nshobjidl_core = []\nshtypes = []\nsoftpub = []\nspapidef = []\nsporder = []\nsql = []\nsqlext = []\nsqltypes = []\nsqlucode = []\nstringapiset = []\nstrmif = []\nsubauth = []\nsynchapi = []\nsysinfoapi = []\nsystemtopologyapi = []\ntaskschd = []\ntextstor = []\nthreadpoolapiset = []\nthreadpoollegacyapiset = []\ntimeapi = []\ntimezoneapi = []\ntlhelp32 = []\nunknwnbase = []\nurlhist = []\nurlmon = []\nuserenv = []\nusp10 = []\nutilapiset = []\nuxtheme = []\nvsbackup = []\nvss = []\nvsserror = []\nvswriter = []\nwbemads = []\nwbemcli = []\nwbemdisp = []\nwbemprov = []\nwbemtran = []\nwct = []\nwerapi = []\nwinbase = []\nwincodec = []\nwincodecsdk = []\nwincon = []\nwincontypes = []\nwincred = []\nwincrypt = []\nwindowsceip = []\nwinefs = []\nwinevt = []\nwingdi = []\nwinhttp = []\nwininet = []\nwinineti = []\nwinioctl = []\nwinnetwk = []\nwinnls = []\nwinnt = []\nwinreg = []\nwinsafer = []\nwinscard = []\nwinsmcrd = []\nwinsock2 = []\nwinspool = []\nwinsvc = []\nwintrust = []\nwinusb = []\nwinuser = []\nwinver = []\nwlanapi = []\nwlanihv = []\nwlanihvtypes = []\nwlclient = []\nwow64apiset = []\nwpdmtpextensions = []\nws2bth = []\nws2spi = []\nws2tcpip = []\nwtsapi32 = []\nxinput = []\n#vc\nexcpt = []\nlimits = []\nvadefs = []\nvcruntime = []\n#winrt\nactivation = []\nhstring = []\ninspectable = []\nroapi = []\nrobuffer = []\nroerrorapi = []\nwinstring = []\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0478515625,
          "content": "Copyright (c) 2015-2018 The winapi-rs Developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.662109375,
          "content": "# winapi-rs\n[![Build status](https://github.com/retep998/winapi-rs/workflows/Rust/badge.svg)](https://github.com/retep998/winapi-rs/actions)\n[![Build status](https://ci.appveyor.com/api/projects/status/i47oonf5e7qm5utq/branch/0.3?svg=true)](https://ci.appveyor.com/project/retep998/winapi-rs/branch/0.3)\n[![Build Status](https://travis-ci.org/retep998/winapi-rs.svg?branch=0.3)](https://travis-ci.org/retep998/winapi-rs)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/retep998/winapi-rs)\n[![Crates.io](https://img.shields.io/crates/v/winapi.svg)](https://crates.io/crates/winapi)\n![Lines of Code](https://tokei.rs/b1/github/retep998/winapi-rs)\n![100% unsafe](https://img.shields.io/badge/unsafe-100%25-blue.svg)\n[![Open issues](https://img.shields.io/github/issues-raw/retep998/winapi-rs.svg)](https://github.com/retep998/winapi-rs/issues)\n[![License](https://img.shields.io/crates/l/winapi.svg)](https://github.com/retep998/winapi-rs)\n\n\n[Documentation](https://docs.rs/winapi/)\n\nOfficial communication channel: #windows-dev on the [Rust Community Discord](https://discord.gg/aVESxV8)\n\nThis crate provides raw FFI bindings to all of Windows API. They are gathered by hand using the Windows 10 SDK from Microsoft. I aim to replace all existing Windows FFI in other crates with this crate through the \"[Embrace, extend, and extinguish](https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish)\" technique.\n\nIf this crate is missing something you need, feel free to create an issue, open a pull request, or contact me via [other means](https://www.rustaceans.org/retep998).\n\nThis crate depends on Rust 1.6 or newer on Windows. On other platforms this crate is a no-op and should compile with Rust 1.2 or newer.\n\n## Frequently asked questions ##\n\n### How do I create an instance of a union?\n\nUse `std::mem::zeroed()` to create an instance of the union, and then assign the value you want using one of the variant methods.\n\n### Why am I getting errors about unresolved imports?\n\nEach module is gated on a feature flag, so you must enable the appropriate feature to gain access to those items. For example, if you want to use something from `winapi::um::winuser` you must enable the `winuser` feature.\n\n### How do I know which module an item is defined in?\n\nYou can use the search functionality in the [documentation](https://docs.rs/winapi/) to find where items are defined.\n\n### Why is there no documentation on how to use anything?\n\nThis crate is nothing more than raw bindings to Windows API. If you wish to know how to use the various functionality in Windows API, you can look up the various items on [MSDN](https://docs.microsoft.com/en-us/windows/win32/desktop-app-technologies) which is full of detailed documentation.\n\n### Can I use this library in `no_std` projects?\n\nYes, absolutely! By default the `std` feature of `winapi` is disabled, allowing you to write Windows applications using nothing but `core` and `winapi`.\n\n### Why is `winapi`'s `HANDLE` incompatible with `std`'s `HANDLE`?\n\nBecause `winapi` does not depend on `std` by default, it has to define `c_void` itself instead of using `std::os::raw::c_void`. However, if you enable the `std` feature of `winapi` then it will re-export `c_void` from `std` and cause `winapi`'s `HANDLE` to be the same type as `std`'s `HANDLE`.\n\n### Should I still use those `-sys` crates such as `kernel32-sys`?\n\nNo. Those crates are a legacy of how `winapi` 0.2 was organized. Starting with `winapi` 0.3 all definitions are directly in `winapi` itself, and so there is no longer any need to use those `-sys` crates.\n\n## Example ##\n\nCargo.toml:\n```toml\n[target.'cfg(windows)'.dependencies]\nwinapi = { version = \"0.3\", features = [\"winuser\"] }\n```\nmain.rs:\n```Rust\n#[cfg(windows)] extern crate winapi;\nuse std::io::Error;\n\n#[cfg(windows)]\nfn print_message(msg: &str) -> Result<i32, Error> {\n    use std::ffi::OsStr;\n    use std::iter::once;\n    use std::os::windows::ffi::OsStrExt;\n    use std::ptr::null_mut;\n    use winapi::um::winuser::{MB_OK, MessageBoxW};\n    let wide: Vec<u16> = OsStr::new(msg).encode_wide().chain(once(0)).collect();\n    let ret = unsafe {\n        MessageBoxW(null_mut(), wide.as_ptr(), wide.as_ptr(), MB_OK)\n    };\n    if ret == 0 { Err(Error::last_os_error()) }\n    else { Ok(ret) }\n}\n#[cfg(not(windows))]\nfn print_message(msg: &str) -> Result<(), Error> {\n    println!(\"{}\", msg);\n    Ok(())\n}\nfn main() {\n    print_message(\"Hello, world!\").unwrap();\n}\n```\n\n## Financial Support\nDo you use `winapi` in your projects? If so, you may be interested in financially supporting me on [Patreon](https://www.patreon.com/retep998). Companies in particular are especially encouraged to donate (I'm looking at you [Microsoft](https://github.com/Azure/iotedge/tree/master/edgelet)).\n"
        },
        {
          "name": "RabbitCode.md",
          "type": "blob",
          "size": 2.11328125,
          "content": "# Rabbit Code\n\nParticipants in this project (hereafter \"the Project\") are known as Contributors.\n\nAs a Contributor, you agree with no exceptions to adhere to this Code when conducting yourself in any and all media related to the Project (hereafter \"Media\").\n\nYour behaviour in any Media may be observed and judged based on this Code. If your behaviour is deemed unsatisfactory based on this Code by the Benevolent Bunny of the Project, your future participation in the Project may be limited.\n\n## Conduct\n\n1. Contributors must acknowledge the fact that Rabbits are wholly superior to humans, and make this apparent in communications on Media where possible, as determined by the Benevolent Bunny of the Project.\n2. Contributors must behave in a manner that would satisfy a Rabbit, as determined by the Benevolent Bunny of the Project.\n3. Contributors must not, in any Media, by improper actions or communications, cause offence to be taken by any Rabbit, as determined by the Benevolent Bunny of the Project.\n\nIn summary, Contributors must behave in a way that a Rabbit would be satisfied with.\n\n## Penalties for Misconduct\n\nIf a Contributor is deemed by the Benevolent Bunny of the Project to have conducted themselves in a manner that would not be or is not satisfactory to any or all Rabbits, they are subject to any penalty deemed appropriate by the Benevolent Bunny of the Project.\n\n## Responsibilities of the Benevolent Bunny of the Project\n\nThe Benevolent Bunny of the Project is an entity responsible for upholding and enforcing the Rabbit Code.\n\nThe Benevolent Bunny of the Project is not required to be a Rabbit. In the case that the Benevolent Bunny of the Project is not a Rabbit, the Benevolent Bunny of the Project is to consult a Rabbit, where possible, about suspected unsatisfactory conduct. If this is not possible, the Benevolent Bunny of the Project must judge to his, her, its, or their best ability, whether a Rabbit would consider the conduct satisfactory.\n\nThe role of Benevolent Bunny of the Project may be conferred upon more than one entity. However, the Code will always refer to the Benevolent Bunny of the Project as a single entity.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.30078125,
          "content": "image: Visual Studio 2017\n\nenvironment:\n  matrix:\n  - host: x86_64-pc-windows-msvc\n    targets: aarch64-pc-windows-msvc\n    channel: nightly\n  - host: i686-pc-windows-msvc\n    channel: nightly\n  - host: x86_64-pc-windows-gnu\n    channel: nightly\n  - host: i686-pc-windows-gnu\n    channel: nightly\n  - host: x86_64-pc-windows-gnu\n    channel: 1.6.0\n\ninstall:\n  - ps: if (ls -r . -fi \"*.rs\" | sls \"`t\") { throw \"Found tab character\" }\n  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe\n  - rustup-init.exe -y --default-toolchain %channel% --default-host %host%\n  - ps: $env:CARGO_INCREMENTAL = 0\n  - ps: $env:PATH = \"$env:PATH;${env:USERPROFILE}\\.cargo\\bin\"\n  - ps: >\n      if ($env:targets) { $env:targets -split \" \" | %{\n        cmd /c \"rustup target add $_ 2>&1\"\n      }}\n  - rustc -vV\n  - cargo -vV\n\nbuild_script:\n  - cargo build\n  - cargo build --features \"everything impl-debug impl-default\"\n  - cargo build --release --features \"everything impl-debug impl-default\"\n  - cargo test --features \"everything impl-debug impl-default\"\n  - ps: >\n      if ($env:targets) { $env:targets -split \" \" | %{\n        cmd /c \"cargo test --target=$_ --features `\"everything impl-debug impl-default`\" --no-run 2>&1\"\n      }}\n\nnotifications:\n  - provider: Webhook\n    url: https://webhooks.gitter.im/e/d3d6703d143c888f0a8a\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 34.171875,
          "content": "// Licensed under the Apache License, Version 2.0\n// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your option.\n// All files in the project carrying such notice may not be copied, modified, or distributed\n// except according to those terms.\nuse std::cell::Cell;\nuse std::collections::HashMap;\nuse std::env::var;\n// (header name, &[header dependencies], &[library dependencies])\nconst DATA: &'static [(&'static str, &'static [&'static str], &'static [&'static str])] = &[\n    // km\n    (\"d3dkmthk\", &[\"basetsd\", \"d3dukmdt\", \"minwindef\", \"ntdef\", \"windef\"], &[]),\n    // mmos\n    // shared\n    (\"basetsd\", &[], &[]),\n    (\"bcrypt\", &[\"minwindef\", \"winnt\"], &[\"bcrypt\"]),\n    (\"bthdef\", &[\"bthsdpdef\", \"guiddef\", \"minwindef\", \"ntdef\"], &[]),\n    (\"bthioctl\", &[\"bthdef\", \"bthsdpdef\", \"minwindef\", \"ntdef\", \"winioctl\"], &[]),\n    (\"bthsdpdef\", &[\"guiddef\", \"minwindef\", \"ntdef\"], &[]),\n    (\"bugcodes\", &[\"ntdef\"], &[]),\n    (\"cderr\", &[\"minwindef\"], &[]),\n    (\"cfg\", &[\"minwindef\"], &[]),\n    (\"d3d9\", &[\"basetsd\", \"d3d9caps\", \"d3d9types\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"wingdi\", \"winnt\"], &[\"d3d9\"]),\n    (\"d3d9caps\", &[\"d3d9types\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"d3d9types\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"windef\", \"winnt\"], &[]),\n    (\"d3dkmdt\", &[\"basetsd\", \"minwindef\", \"ntdef\"], &[]),\n    (\"d3dukmdt\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"ntdef\"], &[]),\n    (\"dcomptypes\", &[\"dxgitype\", \"minwindef\", \"winnt\"], &[]),\n    (\"devguid\", &[], &[]),\n    (\"devpkey\", &[\"devpropdef\"], &[]),\n    (\"devpropdef\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"dinputd\", &[], &[]),\n    (\"dxgi\", &[\"basetsd\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"dxgi\"]),\n    (\"dxgi1_2\", &[\"basetsd\", \"dxgi\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwinbase\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[]),\n    (\"dxgi1_3\", &[\"dxgi\", \"dxgi1_2\", \"dxgiformat\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"dxgi\"]),\n    (\"dxgi1_4\", &[\"basetsd\", \"dxgi1_2\", \"dxgi1_3\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"dxgi1_5\", &[\"basetsd\", \"dxgi\", \"dxgi1_2\", \"dxgi1_3\", \"dxgi1_4\", \"dxgiformat\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"dxgi1_6\", &[\"basetsd\", \"dxgi1_2\", \"dxgi1_4\", \"dxgi1_5\", \"dxgitype\", \"guiddef\", \"minwindef\", \"windef\", \"winnt\"], &[]),\n    (\"dxgiformat\", &[], &[]),\n    (\"dxgitype\", &[\"d3d9types\", \"dxgiformat\", \"minwindef\"], &[]),\n    (\"enclaveapi\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"ntdef\", \"winnt\"], &[\"kernel32\"]),\n    (\"evntprov\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"evntrace\", &[\"basetsd\", \"evntcons\", \"evntprov\", \"guiddef\", \"handleapi\", \"minwindef\", \"timezoneapi\", \"vadefs\", \"winnt\", \"wmistr\"], &[\"advapi32\"]),\n    (\"guiddef\", &[], &[]),\n    (\"hidclass\", &[\"guiddef\", \"minwindef\", \"winioctl\", \"winnt\"], &[]),\n    (\"hidpi\", &[\"hidusage\", \"minwindef\", \"ntdef\", \"ntstatus\", \"winnt\"], &[\"hid\"]),\n    (\"hidsdi\", &[\"guiddef\", \"hidpi\", \"minwindef\", \"winnt\"], &[\"hid\"]),\n    (\"hidusage\", &[\"minwindef\"], &[]),\n    (\"ifdef\", &[\"basetsd\", \"guiddef\", \"ntdef\"], &[]),\n    (\"ifmib\", &[\"ifdef\", \"ipifcons\", \"minwindef\", \"ntdef\"], &[]),\n    (\"in6addr\", &[\"minwindef\"], &[]),\n    (\"inaddr\", &[\"minwindef\"], &[]),\n    (\"intsafe\", &[], &[]),\n    (\"ipifcons\", &[\"minwindef\"], &[]),\n    (\"ipmib\", &[\"ifdef\", \"ifmib\", \"minwindef\", \"nldef\", \"ntdef\"], &[]),\n    (\"iprtrmib\", &[\"ipmib\", \"minwindef\", \"ntdef\"], &[]),\n    (\"ks\", &[], &[]),\n    (\"ksmedia\", &[\"minwindef\"], &[]),\n    (\"ktmtypes\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"lmcons\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"minwindef\", &[\"basetsd\", \"ntdef\"], &[]),\n    (\"mmreg\", &[\"guiddef\", \"minwindef\"], &[]),\n    (\"mprapidef\", &[], &[]),\n    (\"mstcpip\", &[\"basetsd\", \"guiddef\", \"in6addr\", \"inaddr\", \"minwindef\", \"winnt\", \"ws2def\"], &[\"ntdll\"]),\n    (\"mswsockdef\", &[\"minwindef\", \"winnt\", \"ws2def\"], &[]),\n    (\"netioapi\", &[\"basetsd\", \"guiddef\", \"ifdef\", \"ipifcons\", \"minwindef\", \"nldef\", \"ntddndis\", \"ntdef\", \"ws2def\", \"ws2ipdef\"], &[\"iphlpapi\"]),\n    (\"nldef\", &[\"basetsd\", \"minwindef\", \"ntdef\"], &[]),\n    (\"ntddndis\", &[\"ifdef\", \"minwindef\"], &[]),\n    (\"ntddscsi\", &[\"basetsd\", \"minwindef\", \"ntdef\", \"winioctl\", \"winnt\"], &[]),\n    (\"ntddser\", &[\"devpropdef\"], &[]),\n    (\"ntdef\", &[\"basetsd\", \"guiddef\"], &[]),\n    (\"ntstatus\", &[\"ntdef\"], &[]),\n    (\"qos\", &[\"minwindef\"], &[]),\n    (\"rpc\", &[], &[]),\n    (\"rpcdce\", &[\"guiddef\", \"minwindef\", \"rpc\"], &[]),\n    (\"rpcndr\", &[], &[]),\n    (\"sddl\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"sspi\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"subauth\", \"wincred\", \"winnt\"], &[\"credui\", \"secur32\"]),\n    (\"stralign\", &[\"vcruntime\", \"winnt\"], &[\"kernel32\"]),\n    (\"tcpestats\", &[\"basetsd\", \"ntdef\"], &[]),\n    (\"tcpmib\", &[\"basetsd\", \"in6addr\", \"minwindef\", \"ntdef\"], &[]),\n    (\"transportsettingcommon\", &[\"guiddef\"], &[]),\n    (\"tvout\", &[\"guiddef\", \"minwindef\"], &[]),\n    (\"udpmib\", &[\"basetsd\", \"in6addr\", \"minwindef\", \"ntdef\"], &[]),\n    (\"usb\", &[\"minwindef\", \"usbspec\", \"winnt\"], &[]),\n    (\"usbioctl\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"ntdef\", \"usb\", \"usbiodef\", \"usbspec\", \"winioctl\"], &[]),\n    (\"usbiodef\", &[\"guiddef\", \"minwindef\", \"winioctl\", \"winnt\"], &[]),\n    (\"usbscan\", &[\"ntdef\", \"winioctl\"], &[]),\n    (\"usbspec\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"windef\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"windot11\", &[\"basetsd\", \"minwindef\", \"ntddndis\", \"winnt\", \"wlantypes\"], &[]),\n    (\"windowsx\", &[\"minwindef\"], &[]),\n    (\"winerror\", &[\"minwindef\", \"wtypesbase\"], &[]),\n    (\"winusbio\", &[\"minwindef\", \"usb\"], &[]),\n    (\"wlantypes\", &[\"basetsd\", \"minwindef\"], &[]),\n    (\"wmistr\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"wnnc\", &[\"minwindef\"], &[]),\n    (\"ws2def\", &[\"basetsd\", \"guiddef\", \"inaddr\", \"minwindef\", \"vcruntime\", \"winnt\"], &[]),\n    (\"ws2ipdef\", &[\"in6addr\", \"inaddr\", \"minwindef\", \"ws2def\"], &[]),\n    (\"wtypes\", &[\"guiddef\", \"minwindef\", \"ntdef\", \"rpcndr\", \"wingdi\", \"wtypesbase\"], &[]),\n    (\"wtypesbase\", &[\"minwindef\", \"rpcndr\", \"winnt\"], &[]),\n    // ucrt\n    (\"corecrt\", &[], &[]),\n    // um\n    (\"accctrl\", &[\"guiddef\", \"minwindef\", \"winbase\", \"winnt\"], &[]),\n    (\"aclapi\", &[\"accctrl\", \"guiddef\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"adhoc\", &[\"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"appmgmt\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"audioclient\", &[\"audiosessiontypes\", \"basetsd\", \"guiddef\", \"minwindef\", \"mmreg\", \"strmif\", \"unknwnbase\", \"winerror\", \"winnt\", \"wtypesbase\"], &[]),\n    (\"audiosessiontypes\", &[\"minwindef\"], &[]),\n    (\"avrt\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[\"avrt\"]),\n    (\"bits\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"bits10_1\", &[\"basetsd\", \"bits\", \"bits2_0\", \"bits3_0\", \"bits5_0\", \"minwindef\", \"winnt\"], &[]),\n    (\"bits1_5\", &[\"basetsd\", \"bits\", \"rpcndr\", \"winnt\"], &[]),\n    (\"bits2_0\", &[\"basetsd\", \"bits\", \"bits1_5\", \"minwindef\", \"winnt\"], &[]),\n    (\"bits2_5\", &[\"minwindef\", \"rpcndr\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"bits3_0\", &[\"basetsd\", \"bits\", \"bits2_0\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"bits4_0\", &[\"basetsd\", \"bits3_0\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"bits5_0\", &[\"basetsd\", \"bits1_5\", \"bits3_0\", \"bits4_0\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"bitscfg\", &[\"guiddef\", \"oaidl\", \"unknwnbase\", \"winnt\", \"wtypes\"], &[\"oleaut32\"]),\n    (\"bitsmsg\", &[\"minwindef\"], &[]),\n    (\"bluetoothapis\", &[\"bthdef\", \"bthsdpdef\", \"guiddef\", \"minwinbase\", \"minwindef\", \"windef\", \"winnt\"], &[\"bthprops\"]),\n    (\"bluetoothleapis\", &[\"bthledef\", \"minwindef\", \"winerror\", \"winnt\"], &[\"bluetoothapis\"]),\n    (\"bthledef\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"cfgmgr32\", &[\"basetsd\", \"cfg\", \"devpropdef\", \"guiddef\", \"minwindef\", \"winnt\", \"winreg\"], &[\"cfgmgr32\"]),\n    (\"cguid\", &[], &[]),\n    (\"combaseapi\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"objidl\", \"objidlbase\", \"propidl\", \"rpcdce\", \"unknwnbase\", \"winnt\", \"wtypesbase\"], &[\"ole32\"]),\n    (\"coml2api\", &[\"minwindef\"], &[]),\n    (\"commapi\", &[\"minwinbase\", \"minwindef\", \"winbase\", \"winnt\"], &[\"kernel32\"]),\n    (\"commctrl\", &[\"basetsd\", \"commoncontrols\", \"guiddef\", \"minwinbase\", \"minwindef\", \"vcruntime\", \"windef\", \"winnt\", \"winuser\"], &[\"comctl32\"]),\n    (\"commdlg\", &[\"basetsd\", \"minwindef\", \"prsht\", \"unknwnbase\", \"windef\", \"wingdi\", \"winnt\", \"winuser\"], &[\"comdlg32\"]),\n    (\"commoncontrols\", &[\"commctrl\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"comctl32\"]),\n    (\"consoleapi\", &[\"minwindef\", \"wincon\", \"wincontypes\", \"winnt\"], &[\"kernel32\"]),\n    (\"corsym\", &[\"basetsd\", \"objidlbase\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d2d1\", &[\"basetsd\", \"d2dbasetypes\", \"d3dcommon\", \"dcommon\", \"dwrite\", \"dxgi\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"wincodec\", \"windef\", \"winnt\"], &[\"d2d1\"]),\n    (\"d2d1_1\", &[\"basetsd\", \"d2d1\", \"d2d1effectauthor\", \"d2dbasetypes\", \"dcommon\", \"documenttarget\", \"dwrite\", \"dxgi\", \"dxgiformat\", \"guiddef\", \"minwindef\", \"objidlbase\", \"unknwnbase\", \"wincodec\", \"winnt\"], &[\"d2d1\"]),\n    (\"d2d1_2\", &[\"d2d1\", \"d2d1_1\", \"dxgi\", \"minwindef\", \"winnt\"], &[\"d2d1\"]),\n    (\"d2d1_3\", &[\"basetsd\", \"d2d1\", \"d2d1_1\", \"d2d1_2\", \"d2d1effects\", \"d2d1svg\", \"dcommon\", \"dwrite\", \"dxgi\", \"dxgitype\", \"minwindef\", \"ntdef\", \"objidlbase\", \"wincodec\", \"winerror\"], &[\"d2d1\"]),\n    (\"d2d1effectauthor\", &[\"basetsd\", \"d2d1\", \"d2d1_1\", \"d2dbasetypes\", \"d3dcommon\", \"dxgiformat\", \"guiddef\", \"minwindef\", \"ntdef\", \"unknwnbase\", \"wincodec\"], &[]),\n    (\"d2d1effects\", &[], &[]),\n    (\"d2d1effects_1\", &[], &[]),\n    (\"d2d1effects_2\", &[], &[]),\n    (\"d2d1svg\", &[\"basetsd\", \"d2d1\", \"d2d1_1\", \"guiddef\", \"minwindef\", \"ntdef\", \"objidlbase\", \"winerror\"], &[]),\n    (\"d2dbasetypes\", &[\"d3d9types\", \"dcommon\"], &[]),\n    (\"d3d\", &[], &[]),\n    (\"d3d10\", &[\"d3dcommon\"], &[]),\n    (\"d3d10_1\", &[], &[]),\n    (\"d3d10_1shader\", &[], &[]),\n    (\"d3d10effect\", &[], &[]),\n    (\"d3d10misc\", &[], &[]),\n    (\"d3d10sdklayers\", &[], &[]),\n    (\"d3d10shader\", &[\"d3d10\", \"d3dcommon\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3d11\", &[\"basetsd\", \"d3dcommon\", \"dxgi\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"d3d11\"]),\n    (\"d3d11_1\", &[\"basetsd\", \"d3d11\", \"d3dcommon\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3d11_2\", &[\"basetsd\", \"d3d11\", \"d3d11_1\", \"dxgiformat\", \"minwindef\", \"winnt\"], &[]),\n    (\"d3d11_3\", &[], &[]),\n    (\"d3d11_4\", &[], &[]),\n    (\"d3d11on12\", &[\"d3d11\", \"d3d12\", \"d3dcommon\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[\"d3d11\"]),\n    (\"d3d11sdklayers\", &[\"basetsd\", \"d3d11\", \"dxgi\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3d11shader\", &[\"basetsd\", \"d3dcommon\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3d11tokenizedprogramformat\", &[\"minwindef\"], &[]),\n    (\"d3d12\", &[\"basetsd\", \"d3dcommon\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwinbase\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"d3d12\"]),\n    (\"d3d12sdklayers\", &[\"basetsd\", \"d3d12\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3d12shader\", &[\"basetsd\", \"d3dcommon\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3dcommon\", &[\"basetsd\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"d3dcompiler\", &[\"basetsd\", \"d3d11shader\", \"d3dcommon\", \"guiddef\", \"minwindef\", \"winnt\"], &[\"d3dcompiler\"]),\n    (\"d3dcsx\", &[], &[]),\n    (\"d3dx10core\", &[], &[]),\n    (\"d3dx10math\", &[], &[]),\n    (\"d3dx10mesh\", &[], &[]),\n    (\"datetimeapi\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"davclnt\", &[\"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"dbghelp\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"vcruntime\", \"winnt\"], &[\"dbghelp\"]),\n    (\"dbt\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\", \"winuser\"], &[]),\n    (\"dcommon\", &[\"basetsd\", \"dxgiformat\", \"minwindef\", \"windef\"], &[]),\n    (\"dcomp\", &[\"d2d1\", \"d2d1_1\", \"d2d1effects\", \"d2dbasetypes\", \"d3d9types\", \"d3dcommon\", \"dcompanimation\", \"dcomptypes\", \"dxgi\", \"dxgi1_2\", \"dxgiformat\", \"guiddef\", \"minwinbase\", \"minwindef\", \"ntdef\", \"unknwnbase\", \"windef\"], &[\"dcomp\"]),\n    (\"dcompanimation\", &[\"ntdef\", \"unknwnbase\"], &[]),\n    (\"dde\", &[\"basetsd\", \"minwindef\"], &[\"user32\"]),\n    (\"ddraw\", &[], &[]),\n    (\"ddrawi\", &[], &[]),\n    (\"ddrawint\", &[], &[]),\n    (\"debugapi\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"devicetopology\", &[\"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\", \"wtypes\"], &[]),\n    (\"dinput\", &[], &[]),\n    (\"dispex\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"oaidl\", \"servprov\", \"unknwnbase\", \"winerror\", \"winnt\", \"wtypes\"], &[]),\n    (\"dmksctl\", &[], &[]),\n    (\"dmusicc\", &[], &[]),\n    (\"docobj\", &[\"guiddef\", \"minwindef\", \"oaidl\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"documenttarget\", &[\"basetsd\", \"guiddef\", \"ntdef\", \"unknwnbase\"], &[]),\n    (\"dot1x\", &[\"eaptypes\", \"guiddef\", \"l2cmn\", \"minwindef\", \"winnt\"], &[]),\n    (\"dpa_dsa\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"comctl32\"]),\n    (\"dpapi\", &[\"minwindef\", \"wincrypt\", \"windef\", \"winnt\"], &[\"crypt32\"]),\n    (\"dsgetdc\", &[\"guiddef\", \"minwindef\", \"ntsecapi\", \"winnt\", \"ws2def\"], &[\"netapi32\"]),\n    (\"dsound\", &[\"guiddef\", \"minwindef\", \"mmsystem\", \"unknwnbase\", \"windef\", \"winerror\", \"winnt\"], &[\"dsound\"]),\n    (\"dsrole\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"dvp\", &[], &[]),\n    (\"dwmapi\", &[\"basetsd\", \"minwindef\", \"uxtheme\", \"windef\", \"winnt\"], &[\"dwmapi\"]),\n    (\"dwrite\", &[\"basetsd\", \"d2d1\", \"dcommon\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winerror\", \"wingdi\", \"winnt\"], &[\"dwrite\"]),\n    (\"dwrite_1\", &[\"basetsd\", \"dcommon\", \"dwrite\", \"minwindef\", \"winnt\"], &[]),\n    (\"dwrite_2\", &[\"basetsd\", \"d3d9types\", \"dcommon\", \"dwrite\", \"dwrite_1\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"dwrite_3\", &[\"basetsd\", \"dcommon\", \"dwrite\", \"dwrite_1\", \"dwrite_2\", \"minwindef\", \"unknwnbase\", \"wingdi\", \"winnt\"], &[]),\n    (\"dxdiag\", &[], &[]),\n    (\"dxfile\", &[], &[]),\n    (\"dxgidebug\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[\"dxgi\"]),\n    (\"dxva2api\", &[\"basetsd\", \"d3d9\", \"d3d9types\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"dxva2\"]),\n    (\"dxvahd\", &[\"d3d9\", \"d3d9types\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"dxva2\"]),\n    (\"eaptypes\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"endpointvolume\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"errhandlingapi\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"evntcons\", &[\"basetsd\", \"evntprov\", \"evntrace\", \"guiddef\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"exdisp\", &[\"basetsd\", \"docobj\", \"oaidl\", \"ocidl\", \"winnt\", \"wtypes\"], &[]),\n    (\"fibersapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"fileapi\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"functiondiscoverykeys_devpkey\", &[\"wtypes\"], &[]),\n    (\"gl-gl\", &[], &[\"opengl32\"]),\n    (\"handleapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"heapapi\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"highlevelmonitorconfigurationapi\", &[\"minwindef\", \"physicalmonitorenumerationapi\", \"winnt\"], &[\"dxva2\"]),\n    (\"http\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"sspi\", \"winnt\", \"ws2def\"], &[\"httpapi\"]),\n    (\"imm\", &[\"minwindef\", \"windef\"], &[\"imm32\"]),\n    (\"interlockedapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"ioapiset\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"ipexport\", &[\"basetsd\", \"in6addr\", \"ntdef\"], &[]),\n    (\"iphlpapi\", &[\"basetsd\", \"ifdef\", \"ifmib\", \"ipexport\", \"ipmib\", \"iprtrmib\", \"iptypes\", \"minwinbase\", \"minwindef\", \"ntdef\", \"tcpestats\", \"tcpmib\", \"udpmib\", \"ws2def\", \"ws2ipdef\"], &[\"iphlpapi\"]),\n    (\"iptypes\", &[\"basetsd\", \"corecrt\", \"guiddef\", \"ifdef\", \"ipifcons\", \"minwindef\", \"nldef\", \"ntdef\", \"ws2def\"], &[]),\n    (\"jobapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"jobapi2\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"ntdef\", \"winnt\"], &[\"kernel32\"]),\n    (\"knownfolders\", &[], &[]),\n    (\"ktmw32\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"ktmw32\"]),\n    (\"l2cmn\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"libloaderapi\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\", \"user32\"]),\n    (\"lmaccess\", &[\"basetsd\", \"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmalert\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmapibuf\", &[\"lmcons\", \"minwindef\"], &[\"netapi32\"]),\n    (\"lmat\", &[\"basetsd\", \"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmdfs\", &[\"guiddef\", \"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmerrlog\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"lmjoin\", &[\"lmcons\", \"minwindef\", \"wincrypt\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmmsg\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmremutl\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmrepl\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmserver\", &[\"guiddef\", \"lmcons\", \"minwindef\", \"winnt\", \"winsvc\"], &[\"advapi32\", \"netapi32\"]),\n    (\"lmshare\", &[\"basetsd\", \"guiddef\", \"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmstats\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmsvc\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmuse\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lmwksta\", &[\"lmcons\", \"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"lowlevelmonitorconfigurationapi\", &[\"minwindef\", \"physicalmonitorenumerationapi\", \"winnt\"], &[\"dxva2\"]),\n    (\"lsalookup\", &[\"guiddef\", \"minwindef\", \"ntdef\", \"winnt\"], &[\"advapi32\"]),\n    (\"memoryapi\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"minschannel\", &[\"guiddef\", \"minwindef\", \"wincrypt\", \"winnt\"], &[]),\n    (\"minwinbase\", &[\"basetsd\", \"minwindef\", \"ntstatus\", \"winnt\"], &[]),\n    (\"mmdeviceapi\", &[\"guiddef\", \"minwindef\", \"propidl\", \"propsys\", \"unknwnbase\", \"winnt\", \"wtypes\"], &[\"mmdevapi\"]),\n    (\"mmeapi\", &[\"basetsd\", \"imm\", \"minwindef\", \"mmsystem\", \"winnt\"], &[\"winmm\"]),\n    (\"mmsystem\", &[\"basetsd\", \"minwindef\", \"mmreg\", \"winnt\"], &[]),\n    (\"msaatext\", &[], &[]),\n    (\"mscat\", &[\"guiddef\", \"minwindef\", \"mssip\", \"wincrypt\", \"winnt\"], &[]),\n    (\"mschapp\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"mssip\", &[\"guiddef\", \"minwindef\", \"mscat\", \"wincrypt\", \"winnt\"], &[\"crypt32\"]),\n    (\"mswsock\", &[\"minwinbase\", \"minwindef\", \"mswsockdef\", \"winnt\", \"winsock2\", \"ws2def\"], &[\"mswsock\"]),\n    (\"namedpipeapi\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"advapi32\", \"kernel32\"]),\n    (\"namespaceapi\", &[\"minwinbase\", \"minwindef\", \"ntdef\", \"winnt\"], &[\"kernel32\"]),\n    (\"nb30\", &[\"minwindef\", \"winnt\"], &[\"netapi32\"]),\n    (\"ncrypt\", &[\"basetsd\", \"bcrypt\", \"minwindef\", \"winnt\"], &[\"ncrypt\"]),\n    (\"ntlsa\", &[\"basetsd\", \"guiddef\", \"lsalookup\", \"minwindef\", \"ntdef\", \"ntsecapi\", \"subauth\", \"winnt\"], &[\"advapi32\"]),\n    (\"ntsecapi\", &[\"basetsd\", \"guiddef\", \"lsalookup\", \"minwindef\", \"ntdef\", \"sspi\", \"subauth\", \"winnt\"], &[\"advapi32\"]),\n    (\"oaidl\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"rpcndr\", \"unknwnbase\", \"winnt\", \"wtypes\", \"wtypesbase\"], &[]),\n    (\"objbase\", &[\"combaseapi\", \"minwindef\", \"winnt\"], &[\"ole32\"]),\n    (\"objidl\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"ntdef\", \"objidlbase\", \"unknwnbase\", \"windef\", \"winnt\", \"wtypes\", \"wtypesbase\"], &[]),\n    (\"objidlbase\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\", \"wtypesbase\"], &[]),\n    (\"ocidl\", &[\"guiddef\", \"minwindef\", \"ntdef\", \"oaidl\", \"unknwnbase\", \"wtypes\", \"wtypesbase\"], &[]),\n    (\"ole2\", &[\"minwindef\", \"oleidl\", \"windef\", \"winnt\"], &[\"ole32\"]),\n    (\"oleauto\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"oaidl\", \"winnt\", \"wtypes\", \"wtypesbase\"], &[\"oleaut32\"]),\n    (\"olectl\", &[\"winerror\", \"winnt\"], &[]),\n    (\"oleidl\", &[\"minwindef\", \"ntdef\", \"objidl\", \"unknwnbase\", \"windef\"], &[]),\n    (\"opmapi\", &[\"basetsd\", \"d3d9\", \"d3d9types\", \"dxva2api\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"windef\", \"winnt\"], &[\"dxva2\"]),\n    (\"pdh\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"windef\", \"winnt\"], &[\"pdh\"]),\n    (\"perflib\", &[\"basetsd\", \"guiddef\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"physicalmonitorenumerationapi\", &[\"d3d9\", \"minwindef\", \"windef\", \"winnt\"], &[\"dxva2\"]),\n    (\"playsoundapi\", &[\"minwindef\", \"winnt\"], &[\"winmm\"]),\n    (\"portabledevice\", &[\"basetsd\", \"wtypes\"], &[]),\n    (\"portabledeviceapi\", &[\"guiddef\", \"minwindef\", \"objidlbase\", \"portabledevicetypes\", \"propkeydef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"portabledevicetypes\", &[\"guiddef\", \"minwindef\", \"propidl\", \"propkeydef\", \"propsys\", \"unknwnbase\", \"winnt\", \"wtypes\"], &[]),\n    (\"powerbase\", &[\"minwindef\", \"winnt\", \"winuser\"], &[\"powrprof\"]),\n    (\"powersetting\", &[\"guiddef\", \"minwindef\", \"winnt\", \"winuser\"], &[\"powrprof\"]),\n    (\"powrprof\", &[\"guiddef\", \"minwindef\", \"winnt\", \"winreg\"], &[\"powrprof\"]),\n    (\"processenv\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"processsnapshot\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"processthreadsapi\", &[\"basetsd\", \"guiddef\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"advapi32\", \"kernel32\"]),\n    (\"processtopologyapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"profileapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"propidl\", &[\"guiddef\", \"minwindef\", \"ntdef\", \"oaidl\", \"objidlbase\", \"unknwnbase\", \"wtypes\", \"wtypesbase\"], &[\"ole32\"]),\n    (\"propkey\", &[\"minwindef\", \"ntdef\", \"wtypes\"], &[]),\n    (\"propkeydef\", &[\"guiddef\", \"wtypes\"], &[]),\n    (\"propsys\", &[\"minwindef\", \"propidl\", \"propkeydef\", \"unknwnbase\", \"winnt\", \"wtypes\"], &[]),\n    (\"prsht\", &[\"basetsd\", \"minwindef\", \"windef\", \"winnt\", \"winuser\"], &[\"comctl32\"]),\n    (\"psapi\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\", \"psapi\"]),\n    (\"realtimeapiset\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"reason\", &[\"minwindef\"], &[]),\n    (\"restartmanager\", &[\"minwindef\", \"winnt\"], &[\"rstrtmgr\"]),\n    (\"restrictederrorinfo\", &[\"unknwnbase\", \"winnt\", \"wtypes\"], &[]),\n    (\"rmxfguid\", &[], &[]),\n    (\"rtinfo\", &[\"basetsd\"], &[]),\n    (\"sapi\", &[\"guiddef\", \"minwindef\", \"sapi53\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"sapi51\", &[\"guiddef\", \"minwindef\", \"mmreg\", \"oaidl\", \"objidlbase\", \"rpcndr\", \"servprov\", \"unknwnbase\", \"windef\", \"winnt\", \"wtypes\", \"wtypesbase\"], &[]),\n    (\"sapi53\", &[\"guiddef\", \"minwindef\", \"oaidl\", \"sapi51\", \"unknwnbase\", \"urlmon\", \"winnt\", \"wtypes\"], &[]),\n    (\"sapiddk\", &[\"guiddef\", \"minwindef\", \"sapi\", \"sapiddk51\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"sapiddk51\", &[\"guiddef\", \"minwindef\", \"mmreg\", \"oaidl\", \"objidlbase\", \"sapi\", \"unknwnbase\", \"windef\", \"winnt\"], &[]),\n    (\"schannel\", &[\"guiddef\", \"minwindef\", \"wincrypt\", \"windef\", \"winnt\"], &[]),\n    (\"securityappcontainer\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"securitybaseapi\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"advapi32\", \"kernel32\"]),\n    (\"servprov\", &[\"guiddef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"setupapi\", &[\"basetsd\", \"commctrl\", \"devpropdef\", \"guiddef\", \"minwindef\", \"prsht\", \"spapidef\", \"windef\", \"winnt\", \"winreg\"], &[\"setupapi\"]),\n    (\"shellapi\", &[\"basetsd\", \"guiddef\", \"minwinbase\", \"minwindef\", \"processthreadsapi\", \"windef\", \"winnt\", \"winuser\"], &[\"shell32\", \"shlwapi\"]),\n    (\"shellscalingapi\", &[\"minwindef\", \"windef\", \"winnt\"], &[\"shcore\"]),\n    (\"shlobj\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"shtypes\", \"windef\", \"winnt\"], &[\"shell32\"]),\n    (\"shobjidl\", &[\"guiddef\", \"minwindef\", \"propsys\", \"shobjidl_core\", \"shtypes\", \"unknwnbase\", \"windef\", \"winnt\"], &[]),\n    (\"shobjidl_core\", &[\"commctrl\", \"guiddef\", \"minwinbase\", \"minwindef\", \"objidl\", \"propkeydef\", \"propsys\", \"shtypes\", \"unknwnbase\", \"windef\", \"winnt\"], &[]),\n    (\"shtypes\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"softpub\", &[], &[]),\n    (\"spapidef\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"spellcheck\", &[\"minwindef\", \"ntdef\", \"objidlbase\", \"unknwnbase\", \"winerror\"], &[]),\n    (\"sporder\", &[\"guiddef\", \"minwindef\"], &[\"sporder\"]),\n    (\"sql\", &[\"sqltypes\"], &[\"odbc32\"]),\n    (\"sqlext\", &[\"sql\", \"sqltypes\"], &[]),\n    (\"sqltypes\", &[\"basetsd\", \"guiddef\", \"windef\"], &[]),\n    (\"sqlucode\", &[\"sqltypes\"], &[\"odbc32\"]),\n    (\"stringapiset\", &[\"minwindef\", \"winnls\", \"winnt\"], &[\"kernel32\"]),\n    (\"strmif\", &[\"winnt\"], &[]),\n    (\"subauth\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"synchapi\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\", \"synchronization\"]),\n    (\"sysinfoapi\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"systemtopologyapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"taskschd\", &[\"minwinbase\", \"minwindef\", \"oaidl\", \"unknwnbase\", \"winnt\", \"wtypes\"], &[]),\n    (\"textstor\", &[], &[]),\n    (\"threadpoolapiset\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"threadpoollegacyapiset\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"timeapi\", &[\"minwindef\", \"mmsystem\"], &[\"winmm\"]),\n    (\"timezoneapi\", &[\"minwinbase\", \"minwindef\", \"winnt\"], &[\"advapi32\", \"kernel32\"]),\n    (\"tlhelp32\", &[\"basetsd\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"unknwnbase\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"urlhist\", &[\"docobj\", \"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\", \"wtypesbase\"], &[]),\n    (\"urlmon\", &[\"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"userenv\", &[\"minwindef\", \"winnt\", \"winreg\"], &[\"userenv\"]),\n    (\"usp10\", &[\"minwindef\", \"ntdef\", \"windef\", \"winerror\", \"wingdi\", \"winnt\"], &[\"usp10\"]),\n    (\"utilapiset\", &[\"minwindef\", \"ntdef\"], &[\"kernel32\"]),\n    (\"uxtheme\", &[\"commctrl\", \"minwindef\", \"windef\", \"wingdi\", \"winnt\"], &[\"uxtheme\"]),\n    (\"vsbackup\", &[\"guiddef\", \"minwindef\", \"unknwnbase\", \"vss\", \"vswriter\", \"winnt\", \"wtypes\"], &[\"vssapi\"]),\n    (\"vss\", &[\"guiddef\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"vsserror\", &[\"winnt\"], &[]),\n    (\"vswriter\", &[\"minwindef\", \"unknwnbase\", \"vss\", \"winnt\", \"wtypes\"], &[]),\n    (\"wbemads\", &[\"oaidl\", \"wbemdisp\", \"winerror\", \"wtypes\"], &[]),\n    (\"wbemcli\", &[\"minwindef\", \"oaidl\", \"rpcndr\", \"unknwnbase\", \"winerror\", \"winnt\", \"wtypes\"], &[]),\n    (\"wbemdisp\", &[\"oaidl\", \"unknwnbase\", \"winerror\", \"wtypes\"], &[]),\n    (\"wbemprov\", &[\"minwindef\", \"oaidl\", \"unknwnbase\", \"wbemcli\", \"winerror\", \"winnt\", \"wtypes\"], &[]),\n    (\"wbemtran\", &[\"guiddef\", \"minwindef\", \"unknwnbase\", \"wbemcli\", \"winerror\", \"winnt\", \"wtypes\"], &[]),\n    (\"wct\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"werapi\", &[\"minwindef\", \"winnt\"], &[\"kernel32\", \"wer\"]),\n    (\"winbase\", &[\"basetsd\", \"cfgmgr32\", \"fileapi\", \"guiddef\", \"libloaderapi\", \"minwinbase\", \"minwindef\", \"processthreadsapi\", \"vadefs\", \"windef\", \"winnt\"], &[\"kernel32\"]),\n    (\"wincodec\", &[\"basetsd\", \"d2d1\", \"d2d1_1\", \"dcommon\", \"dxgiformat\", \"dxgitype\", \"guiddef\", \"minwindef\", \"ntdef\", \"objidlbase\", \"ocidl\", \"propidl\", \"unknwnbase\", \"windef\", \"winerror\", \"winnt\"], &[\"windowscodecs\"]),\n    (\"wincodecsdk\", &[\"guiddef\", \"minwindef\", \"oaidl\", \"objidl\", \"objidlbase\", \"ocidl\", \"propidl\", \"unknwnbase\", \"wincodec\", \"winnt\", \"wtypes\"], &[\"ole32\", \"oleaut32\", \"windowscodecs\"]),\n    (\"wincon\", &[\"minwinbase\", \"minwindef\", \"wincontypes\", \"windef\", \"wingdi\", \"winnt\"], &[\"kernel32\"]),\n    (\"wincontypes\", &[\"minwindef\", \"winnt\"], &[]),\n    (\"wincred\", &[\"minwindef\", \"sspi\", \"windef\", \"winnt\"], &[\"advapi32\", \"credui\"]),\n    (\"wincrypt\", &[\"basetsd\", \"bcrypt\", \"guiddef\", \"minwinbase\", \"minwindef\", \"ncrypt\", \"vcruntime\", \"winnt\"], &[\"advapi32\", \"crypt32\", \"cryptnet\"]),\n    (\"windowsceip\", &[\"minwindef\"], &[\"kernel32\"]),\n    (\"winefs\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"wincrypt\", \"winnt\"], &[\"advapi32\"]),\n    (\"winevt\", &[\"basetsd\", \"guiddef\", \"minwinbase\", \"minwindef\", \"vcruntime\", \"winnt\"], &[\"wevtapi\"]),\n    (\"wingdi\", &[\"basetsd\", \"minwindef\", \"windef\", \"winnt\"], &[\"gdi32\", \"msimg32\", \"opengl32\", \"winspool\"]),\n    (\"winhttp\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"winhttp\"]),\n    (\"wininet\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"ntdef\", \"windef\", \"winineti\", \"winnt\"], &[\"wininet\"]),\n    (\"winineti\", &[\"minwindef\"], &[]),\n    (\"winioctl\", &[\"basetsd\", \"devpropdef\", \"guiddef\", \"minwindef\", \"winnt\"], &[]),\n    (\"winnetwk\", &[\"basetsd\", \"minwindef\", \"windef\", \"winerror\", \"winnt\"], &[\"mpr\"]),\n    (\"winnls\", &[\"basetsd\", \"guiddef\", \"minwinbase\", \"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"winnt\", &[\"basetsd\", \"excpt\", \"guiddef\", \"ktmtypes\", \"minwindef\", \"ntdef\", \"vcruntime\"], &[\"kernel32\"]),\n    (\"winreg\", &[\"basetsd\", \"minwinbase\", \"minwindef\", \"reason\", \"winnt\"], &[\"advapi32\"]),\n    (\"winsafer\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"wincrypt\", \"windef\", \"winnt\"], &[\"advapi32\"]),\n    (\"winscard\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"rpcdce\", \"windef\", \"winnt\", \"winsmcrd\"], &[\"winscard\"]),\n    (\"winsmcrd\", &[\"minwindef\", \"winioctl\"], &[]),\n    (\"winsock2\", &[\"basetsd\", \"guiddef\", \"inaddr\", \"minwinbase\", \"minwindef\", \"qos\", \"winbase\", \"windef\", \"winerror\", \"winnt\", \"ws2def\", \"wtypesbase\"], &[\"ws2_32\"]),\n    (\"winspool\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"vcruntime\", \"windef\", \"winerror\", \"wingdi\", \"winnt\"], &[\"winspool\"]),\n    (\"winsvc\", &[\"minwindef\", \"winnt\"], &[\"advapi32\"]),\n    (\"wintrust\", &[\"guiddef\", \"minwindef\", \"ntdef\", \"wincrypt\", \"windef\"], &[\"wintrust\"]),\n    (\"winusb\", &[\"minwinbase\", \"minwindef\", \"usb\", \"usbspec\", \"winnt\", \"winusbio\"], &[\"winusb\"]),\n    (\"winuser\", &[\"basetsd\", \"guiddef\", \"limits\", \"minwinbase\", \"minwindef\", \"vadefs\", \"windef\", \"wingdi\", \"winnt\"], &[\"user32\"]),\n    (\"winver\", &[\"minwindef\", \"winnt\"], &[\"kernel32\", \"version\"]),\n    (\"wlanapi\", &[\"devpropdef\", \"eaptypes\", \"guiddef\", \"l2cmn\", \"minwindef\", \"windef\", \"windot11\", \"winnt\", \"wlantypes\"], &[\"wlanapi\"]),\n    (\"wlanihv\", &[\"basetsd\", \"dot1x\", \"eaptypes\", \"guiddef\", \"l2cmn\", \"minwindef\", \"windot11\", \"winnt\", \"winuser\", \"wlanihvtypes\", \"wlantypes\", \"wlclient\"], &[]),\n    (\"wlanihvtypes\", &[\"eaptypes\", \"guiddef\", \"minwindef\", \"winnt\", \"wlantypes\"], &[]),\n    (\"wlclient\", &[\"guiddef\", \"minwindef\", \"windot11\", \"winnt\"], &[]),\n    (\"wow64apiset\", &[\"minwindef\", \"winnt\"], &[\"kernel32\"]),\n    (\"wpdmtpextensions\", &[\"wtypes\"], &[]),\n    (\"ws2bth\", &[\"bthdef\", \"bthsdpdef\", \"guiddef\", \"minwindef\", \"winnt\", \"ws2def\"], &[]),\n    (\"ws2spi\", &[\"basetsd\", \"guiddef\", \"minwindef\", \"vcruntime\", \"windef\", \"winnt\", \"winsock2\", \"ws2def\", \"wtypesbase\"], &[\"ws2_32\"]),\n    (\"ws2tcpip\", &[\"guiddef\", \"minwinbase\", \"minwindef\", \"mstcpip\", \"vcruntime\", \"winerror\", \"winnt\", \"winsock2\", \"ws2def\", \"wtypesbase\"], &[\"fwpuclnt\", \"ws2_32\"]),\n    (\"wtsapi32\", &[\"minwindef\", \"ntdef\"], &[\"wtsapi32\"]),\n    (\"xinput\", &[\"guiddef\", \"minwindef\", \"winnt\"], &[\"xinput\"]),\n    // vc\n    (\"excpt\", &[], &[]),\n    (\"limits\", &[], &[]),\n    (\"vadefs\", &[], &[]),\n    (\"vcruntime\", &[], &[]),\n    // winrt\n    (\"activation\", &[\"inspectable\", \"winnt\"], &[]),\n    (\"hstring\", &[\"winnt\"], &[]),\n    (\"inspectable\", &[\"guiddef\", \"hstring\", \"minwindef\", \"unknwnbase\", \"winnt\"], &[]),\n    (\"roapi\", &[\"activation\", \"basetsd\", \"guiddef\", \"hstring\", \"inspectable\", \"objidl\", \"winnt\"], &[\"runtimeobject\"]),\n    (\"robuffer\", &[\"objidl\", \"winnt\"], &[\"runtimeobject\"]),\n    (\"roerrorapi\", &[\"basetsd\", \"hstring\", \"minwindef\", \"restrictederrorinfo\", \"unknwnbase\", \"winnt\"], &[\"runtimeobject\"]),\n    (\"winstring\", &[\"basetsd\", \"hstring\", \"minwindef\", \"winnt\"], &[\"runtimeobject\"]),\n];\nstruct Header {\n    required: bool,\n    included: Cell<bool>,\n    dependencies: &'static [&'static str],\n    libraries: &'static [&'static str],\n}\nstruct Graph(HashMap<&'static str, Header>);\nimpl Graph {\n    fn generate() -> Graph {\n        Graph(DATA.iter().map(|&(name, dependencies, libraries)| {\n            let header = Header {\n                required: false,\n                included: Cell::new(false),\n                dependencies: dependencies,\n                libraries: libraries,\n            };\n            (name, header)\n        }).collect())\n    }\n    fn identify_required(&mut self) {\n        for (name, header) in &mut self.0 {\n            if let Ok(_) = var(&format!(\"CARGO_FEATURE_{}\", name.to_uppercase())) {\n                header.required = true;\n                header.included.set(true);\n            }\n        }\n    }\n    fn check_everything(&self) {\n        if let Ok(_) = var(\"CARGO_FEATURE_EVERYTHING\") {\n            for (_, header) in &self.0 {\n                header.included.set(true);\n            }\n        }\n    }\n    fn resolve_dependencies(&self) {\n        let mut done = false;\n        while !done {\n            done = true;\n            for (_, header) in &self.0 {\n                if header.included.get() {\n                    for dep in header.dependencies {\n                        let dep = &self.0.get(dep).expect(dep);\n                        if !dep.included.get() {\n                            done = false;\n                            dep.included.set(true);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fn emit_features(&self) {\n        for (name, header) in &self.0 {\n            if header.included.get() && !header.required {\n                println!(\"cargo:rustc-cfg=feature=\\\"{}\\\"\", name);\n            }\n        }\n    }\n    fn emit_libraries(&self) {\n        let mut libs = self.0.iter().filter(|&(_, header)| {\n            header.included.get()\n        }).flat_map(|(_, header)| {\n            header.libraries.iter()\n        }).collect::<Vec<_>>();\n        libs.sort();\n        libs.dedup();\n        // FIXME Temporary hacks until build script is redesigned.\n        libs.retain(|&&lib| match &*var(\"TARGET\").unwrap() {\n            \"aarch64-pc-windows-msvc\" | \"aarch64-uwp-windows-msvc\" | \"thumbv7a-pc-windows-msvc\" => {\n                if lib == \"opengl32\" { false }\n                else { true }\n            },\n            _ => true,\n        });\n        let prefix = library_prefix();\n        let kind = library_kind();\n        for lib in libs {\n            println!(\"cargo:rustc-link-lib={}={}{}\", kind, prefix, lib);\n        }\n    }\n}\nfn library_prefix() -> &'static str {\n    if var(\"TARGET\").map(|target|\n        target == \"i686-pc-windows-gnu\" || target == \"x86_64-pc-windows-gnu\"\n    ).unwrap_or(false) && var(\"WINAPI_NO_BUNDLED_LIBRARIES\").is_err() {\n        \"winapi_\"\n    } else {\n        \"\"\n    }\n}\nfn library_kind() -> &'static str {\n    if var(\"WINAPI_STATIC_NOBUNDLE\").is_ok() {\n        \"static-nobundle\"\n    } else {\n        \"dylib\"\n    }\n}\nfn try_everything() {\n    let mut graph = Graph::generate();\n    graph.identify_required();\n    graph.check_everything();\n    graph.resolve_dependencies();\n    graph.emit_features();\n    graph.emit_libraries();\n}\nfn main() {\n    println!(\"cargo:rerun-if-changed=build.rs\");\n    println!(\"cargo:rerun-if-env-changed=WINAPI_NO_BUNDLED_LIBRARIES\");\n    println!(\"cargo:rerun-if-env-changed=WINAPI_STATIC_NOBUNDLE\");\n    let target = var(\"TARGET\").unwrap();\n    let target: Vec<_> = target.split('-').collect();\n    if target.get(2) == Some(&\"windows\") {\n        try_everything();\n    }\n}\n"
        },
        {
          "name": "i686",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "x86_64",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}